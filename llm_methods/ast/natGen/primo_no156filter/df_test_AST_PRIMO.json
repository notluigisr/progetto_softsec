{"func":{"20249":"`-FunctionDecl 0x14703d078  line:1:5 invalid pmixp_coll_ring_unpack 'int (int, int *, int *, int **, int *)'   |-ParmVarDecl 0x14703ccf0 <col:28, col:32> col:32 invalid buf 'int'   |-ParmVarDecl 0x14703cda8 <col:37, col:56> col:56 invalid type 'int *'   |-ParmVarDecl 0x14703ce28 <line:2:7, col:34> col:34 invalid ring_hdr 'int *'   |-ParmVarDecl 0x14703cee0 <line:3:7, col:22> col:22 invalid r 'int **'   |-ParmVarDecl 0x14703cf60 <col:25, col:33> col:33 invalid nr 'int *'   `-CompoundStmt 0x1470569c0 <line:4:1, line:53:1>     |-DeclStmt 0x14703d290 <line:8:2, col:11>     | |-VarDecl 0x14703d190 <col:2, col:6> col:6 used rc 'int'     | `-VarDecl 0x14703d210 <col:2, col:10> col:10 used i 'int'     |-IfStmt 0x1470555f0 <line:11:2, line:14:2>     | |-RecoveryExpr 0x147055378 <line:11:6, col:48> '_Bool' contains-errors     | `-CompoundStmt 0x1470555d0 <col:51, line:14:2>     |   |-CallExpr 0x147055548 <line:12:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x147055530 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x147055478 <col:3> 'int ()' Function 0x1470553c0 'PMIXP_ERROR' 'int ()'     |   | `-ImplicitCastExpr 0x147055570 <col:15> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x1470554e0 <col:15> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1470555c0 <line:13:3, col:10>     |     `-ImplicitCastExpr 0x1470555a8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x147055588 <col:10> 'int' lvalue Var 0x14703d190 'rc' 'int'     |-BinaryOperator 0x147055718 <line:15:2, col:10> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x1470556e0 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1470556c8 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x147055610 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1470556f8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147055950 <line:18:2, line:21:2>     | |-RecoveryExpr 0x147055830 <line:18:6, col:51> '_Bool' contains-errors     | `-CompoundStmt 0x147055930 <col:54, line:21:2>     |   |-CallExpr 0x1470558a8 <line:19:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x147055890 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x147055850 <col:3> 'int ()' Function 0x1470553c0 'PMIXP_ERROR' 'int ()'     |   | `-ImplicitCastExpr 0x1470558d0 <col:15> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x147055870 <col:15> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x147055920 <line:20:3, col:10>     |     `-ImplicitCastExpr 0x147055908 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1470558e8 <col:10> 'int' lvalue Var 0x14703d190 'rc' 'int'     |-BinaryOperator 0x147055a78 <line:22:2, col:8> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x147055a40 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x147055a28 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x147055970 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x147055a58 <col:8> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1470569a0 <line:47:2, line:50:2>       |-RecoveryExpr 0x147056880 <line:47:6, col:67> '_Bool' contains-errors       `-CompoundStmt 0x147056980 <col:70, line:50:2>         |-CallExpr 0x1470568f8 <line:48:3, col:20> 'int'         | |-ImplicitCastExpr 0x1470568e0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1470568a0 <col:3> 'int ()' Function 0x1470553c0 'PMIXP_ERROR' 'int ()'         | `-ImplicitCastExpr 0x147056920 <col:15> 'char *' <ArrayToPointerDecay>         |   `-StringLiteral 0x1470568c0 <col:15> 'char[4]' lvalue \"STR\"         `-ReturnStmt 0x147056970 <line:49:3, col:10>           `-ImplicitCastExpr 0x147056958 <col:10> 'int' <LValueToRValue>             `-DeclRefExpr 0x147056938 <col:10> 'int' lvalue Var 0x14703d190 'rc' 'int' ","20787":"`-FunctionDecl 0x14a027400  line:1:6 invalid udp_err 'void (struct sk_buff *, int)'   |-ParmVarDecl 0x14a00e248 <col:14, col:30> col:30 used skb 'struct sk_buff *'   |-ParmVarDecl 0x14a00e2e0 <col:35, col:39> col:39 invalid info 'int'   `-CompoundStmt 0x14a02b8a8 <line:2:1, line:61:1>     |-DeclStmt 0x14a0276a8 <line:3:2, col:24>     | |-RecordDecl 0x14a0274b8 <col:2, col:9> col:9 struct inet_sock     | `-VarDecl 0x14a027628 <col:2, col:20> col:20 used inet 'struct inet_sock *'     |-DeclStmt 0x14a0279b8 <line:4:2, col:46>     | |-RecordDecl 0x14a0276c0 <col:2, col:9> col:9 struct iphdr     | `-VarDecl 0x14a027828 <col:2, col:42> col:16 used iph 'struct iphdr *' cinit     |   `-CStyleCastExpr 0x14a027978 <col:22, col:42> 'struct iphdr *' contains-errors <Dependent>     |     `-RecoveryExpr 0x14a0278c8 <col:37, col:42> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a027890 <col:37> 'struct sk_buff *' lvalue ParmVar 0x14a00e248 'skb' 'struct sk_buff *'     |-DeclStmt 0x14a027de8 <line:5:2, col:63>     | |-RecordDecl 0x14a0279d0 <col:2, col:9> col:9 struct udphdr     | `-VarDecl 0x14a027b38 <col:2, col:62> col:17 used uh 'struct udphdr *' cinit     |   `-CStyleCastExpr 0x14a027da8 <col:22, col:62> 'struct udphdr *' contains-errors <Dependent>     |     `-ParenExpr 0x14a027d88 <col:38, col:62> '<dependent type>' contains-errors     |       `-BinaryOperator 0x14a027cc0 <col:39, col:61> '<dependent type>' contains-errors '+'     |         |-RecoveryExpr 0x14a027bd8 <col:39, col:44> '<dependent type>' contains-errors lvalue     |         | `-DeclRefExpr 0x14a027ba0 <col:39> 'struct sk_buff *' lvalue ParmVar 0x14a00e248 'skb' 'struct sk_buff *'     |         `-ParenExpr 0x14a027ca0 <col:49, col:61> '<dependent type>' contains-errors     |           `-BinaryOperator 0x14a027c80 <col:50, col:60> '<dependent type>' contains-errors '<<'     |             |-RecoveryExpr 0x14a027c38 <col:50, col:55> '<dependent type>' contains-errors lvalue     |             | `-DeclRefExpr 0x14a027c00 <col:50> 'struct iphdr *' contains-errors lvalue Var 0x14a027828 'iph' 'struct iphdr *'     |             `-IntegerLiteral 0x14a027c60 <col:60> 'int' 2     |-DeclStmt 0x14a027f70 <line:6:2, col:31>     | `-VarDecl 0x14a027e18 <col:2, col:27> col:6 used type 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x14a027f28 <col:13, col:27> '<dependent type>' contains-errors lvalue ->type     |     `-CXXDependentScopeMemberExpr 0x14a027ee0 <col:13, col:20> '<dependent type>' contains-errors lvalue .icmph     |       `-RecoveryExpr 0x14a027eb8 <col:13, col:18> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14a027e80 <col:13> 'struct sk_buff *' lvalue ParmVar 0x14a00e248 'skb' 'struct sk_buff *'     |-DeclStmt 0x14a0280f8 <line:7:2, col:31>     | `-VarDecl 0x14a027fa0 <col:2, col:27> col:6 used code 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x14a0280b0 <col:13, col:27> '<dependent type>' contains-errors lvalue ->code     |     `-CXXDependentScopeMemberExpr 0x14a028068 <col:13, col:20> '<dependent type>' contains-errors lvalue .icmph     |       `-RecoveryExpr 0x14a028040 <col:13, col:18> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14a028008 <col:13> 'struct sk_buff *' lvalue ParmVar 0x14a00e248 'skb' 'struct sk_buff *'     |-DeclStmt 0x14a0282f8 <line:8:2, col:17>     | |-RecordDecl 0x14a028110 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x14a028278 <col:2, col:15> col:15 used sk 'struct sock *'     |-DeclStmt 0x14a028390 <line:9:2, col:13>     | `-VarDecl 0x14a028328 <col:2, col:6> col:6 used harderr 'int'     |-DeclStmt 0x14a029468 <line:10:2, col:9>     | `-VarDecl 0x14a029400 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x14a029890 <line:12:2, col:84> 'struct sock *' contains-errors '='     | |-DeclRefExpr 0x14a029480 <col:2> 'struct sock *' lvalue Var 0x14a028278 'sk' 'struct sock *'     | `-CallExpr 0x14a029848 <col:7, col:84> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a029600 <col:7> 'int ()' Function 0x14a029548 'udp_v4_lookup' 'int ()'     |   |-RecoveryExpr 0x14a029658 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a029620 <col:21> 'struct iphdr *' contains-errors lvalue Var 0x14a027828 'iph' 'struct iphdr *'     |   |-RecoveryExpr 0x14a0296b8 <col:33, col:37> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a029680 <col:33> 'struct udphdr *' contains-errors lvalue Var 0x14a027b38 'uh' 'struct udphdr *'     |   |-RecoveryExpr 0x14a029718 <col:43, col:48> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a0296e0 <col:43> 'struct iphdr *' contains-errors lvalue Var 0x14a027828 'iph' 'struct iphdr *'     |   |-RecoveryExpr 0x14a029778 <col:55, col:59> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a029740 <col:55> 'struct udphdr *' contains-errors lvalue Var 0x14a027b38 'uh' 'struct udphdr *'     |   `-CXXDependentScopeMemberExpr 0x14a029800 <col:67, col:77> '<dependent type>' contains-errors lvalue ->ifindex     |     `-RecoveryExpr 0x14a0297d8 <col:67, col:72> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a0297a0 <col:67> 'struct sk_buff *' lvalue ParmVar 0x14a00e248 'skb' 'struct sk_buff *'     |-IfStmt 0x14a029b00 <line:13:2, line:16:2>     | |-BinaryOperator 0x14a029928 <line:13:6, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14a0298b0 <col:6> 'struct sock *' lvalue Var 0x14a028278 'sk' 'struct sock *'     | | `-RecoveryExpr 0x14a029908 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a029ae0 <col:18, line:16:2>     |   |-CallExpr 0x14a029aa8 <line:14:3, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a029a28 <col:3> 'int ()' Function 0x14a029970 'ICMP_INC_STATS_BH' 'int ()'     |   | `-RecoveryExpr 0x14a029a88 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14a029ad0 <line:15:9>     |-BinaryOperator 0x14a029b60 <line:18:2, col:8> 'int' '='     | |-DeclRefExpr 0x14a029b20 <col:2> 'int' lvalue Var 0x14a029400 'err' 'int'     | `-IntegerLiteral 0x14a029b40 <col:8> 'int' 0     |-BinaryOperator 0x14a029bc0 <line:19:2, col:12> 'int' '='     | |-DeclRefExpr 0x14a029b80 <col:2> 'int' lvalue Var 0x14a028328 'harderr' 'int'     | `-IntegerLiteral 0x14a029ba0 <col:12> 'int' 0     |-BinaryOperator 0x14a029dc0 <line:20:2, col:19> 'struct inet_sock *' '='     | |-DeclRefExpr 0x14a029be0 <col:2> 'struct inet_sock *' lvalue Var 0x14a027628 'inet' 'struct inet_sock *'     | `-ImplicitCastExpr 0x14a029da8 <col:9, col:19> 'struct inet_sock *' <IntegralToPointer>     |   `-CallExpr 0x14a029d68 <col:9, col:19> 'int'     |     |-ImplicitCastExpr 0x14a029d50 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14a029ce0 <col:9> 'int ()' Function 0x14a029c28 'inet_sk' 'int ()'     |     `-ImplicitCastExpr 0x14a029d90 <col:17> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x14a029d00 <col:17> 'struct sock *' lvalue Var 0x14a028278 'sk' 'struct sock *'     |-SwitchStmt 0x14a029e18 <line:22:2, line:48:2>     | |-ImplicitCastExpr 0x14a029e00 <line:22:10> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14a029de0 <col:10> 'int' contains-errors lvalue Var 0x14a027e18 'type' 'int'     | `-CompoundStmt 0x14a02a318 <col:16, line:48:2>     |   |-DefaultStmt 0x14a029ef0 <line:23:2, line:25:9>     |   | `-BinaryOperator 0x14a029ed0 <col:3, col:9> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x14a029e58 <col:3> 'int' lvalue Var 0x14a029400 'err' 'int'     |   |   `-RecoveryExpr 0x14a029eb0 <col:9> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x14a029f10 <line:26:3>     |   |-GotoStmt 0x14a029f80 <line:28:3, col:8> 'out' 0x14a029f30     |   |-BinaryOperator 0x14a029ff8 <line:31:3, col:13> 'int' '='     |   | |-DeclRefExpr 0x14a029fb8 <col:3> 'int' lvalue Var 0x14a028328 'harderr' 'int'     |   | `-IntegerLiteral 0x14a029fd8 <col:13> 'int' 1     |   |-BreakStmt 0x14a02a018 <line:32:3>     |   |-IfStmt 0x14a02a1e0 <line:34:3, line:41:3>     |   | |-RecoveryExpr 0x14a02a040 <line:34:7, col:15> '_Bool' contains-errors     |   | `-CompoundStmt 0x14a02a1c0 <col:33, line:41:3>     |   |   |-IfStmt 0x14a02a188 <line:35:4, line:39:4>     |   |   | |-RecoveryExpr 0x14a02a0c0 <line:35:8, col:26> '_Bool' contains-errors     |   |   | `-CompoundStmt 0x14a02a168 <col:44, line:39:4>     |   |   |   |-BinaryOperator 0x14a02a140 <line:37:5, col:15> 'int' '='     |   |   |   | |-DeclRefExpr 0x14a02a100 <col:5> 'int' lvalue Var 0x14a028328 'harderr' 'int'     |   |   |   | `-IntegerLiteral 0x14a02a120 <col:15> 'int' 1     |   |   |   `-BreakStmt 0x14a02a160 <line:38:5>     |   |   `-GotoStmt 0x14a02a1a8 <line:40:4, col:9> 'out' 0x14a029f30     |   |-IfStmt 0x14a02a2f0 <line:43:3, line:46:3>     |   | |-RecoveryExpr 0x14a02a240 <line:43:7, col:15> '_Bool' contains-errors     |   | `-CompoundStmt 0x14a02a2e0 <col:32, line:46:3>     |   `-BreakStmt 0x14a02a310 <line:47:3>     |-IfStmt 0x14a02b598 <line:51:2, line:56:2> has_else     | |-UnaryOperator 0x14a02a3e0 <line:51:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a02a3c8 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14a02a3a0 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14a02a368 <col:7> 'struct inet_sock *' lvalue Var 0x14a027628 'inet' 'struct inet_sock *'     | |-CompoundStmt 0x14a02b308 <col:22, line:54:2>     | | `-IfStmt 0x14a02b2e8 <line:52:3, line:53:9>     | |   |-RecoveryExpr 0x14a02b2b0 <line:52:7, col:35> '_Bool' contains-errors     | |   `-GotoStmt 0x14a02b2d0 <line:53:4, col:9> 'out' 0x14a029f30     | `-CompoundStmt 0x14a02b588 <line:54:9, line:56:2>     |-BinaryOperator 0x14a02b648 <line:57:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a02b600 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a02b5c8 <col:2> 'struct sock *' lvalue Var 0x14a028278 'sk' 'struct sock *'     | `-DeclRefExpr 0x14a02b628 <col:15> 'int' lvalue Var 0x14a029400 'err' 'int'     |-CallExpr 0x14a02b6e8 <line:58:2, col:24> '<dependent type>' contains-errors     | |-RecoveryExpr 0x14a02b6a0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a02b668 <col:2> 'struct sock *' lvalue Var 0x14a028278 'sk' 'struct sock *'     | `-DeclRefExpr 0x14a02b6c8 <col:22> 'struct sock *' lvalue Var 0x14a028278 'sk' 'struct sock *'     `-LabelStmt 0x14a02b888 <line:59:1, line:60:13> 'out'       `-CallExpr 0x14a02b848 <col:2, col:13> 'int'         |-ImplicitCastExpr 0x14a02b830 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14a02b7f0 <col:2> 'int ()' Function 0x14a02b738 'sock_put' 'int ()'         `-ImplicitCastExpr 0x14a02b870 <col:11> 'struct sock *' <LValueToRValue>           `-DeclRefExpr 0x14a02b810 <col:11> 'struct sock *' lvalue Var 0x14a028278 'sk' 'struct sock *' ","20191":"`-FunctionDecl 0x1431275f0  line:1:13 invalid sig_disconnected 'void (int *)' static   |-ParmVarDecl 0x143127528 <col:30, col:46> col:46 referenced invalid server 'int *'   `-CompoundStmt 0x143142918 <line:2:1, line:38:1>     |-IfStmt 0x1431278a0 <line:5:2, line:6:3>     | |-UnaryOperator 0x143127878 <line:5:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x143127850 <col:7, col:27> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x143127810 <col:7> 'int ()' Function 0x143127758 'IS_IRC_SERVER' 'int ()'     | |   `-RecoveryExpr 0x143127830 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x143127890 <line:6:3>     |-ForStmt 0x1431418d0 <line:8:2, line:12:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x1431279f0 <line:8:31, col:38> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1431279b0 <col:31> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1431279d0 <col:38> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x143127bc0 <col:44, col:61> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x143127af0 <col:44> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x143127b78 <col:50, col:61> '<dependent type>' contains-errors lvalue ->next     | |   `-CXXDependentScopeMemberExpr 0x143127b30 <col:50, col:55> '<dependent type>' contains-errors lvalue ->next     | |     `-RecoveryExpr 0x143127b10 <col:50> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1431418b0 <col:67, line:12:2>     |   |-CallExpr 0x1431413f0 <line:9:3, col:19> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1431412e0 <col:3> 'int ()' Function 0x143141228 'g_free' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x1431413a8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->data     |   |   `-RecoveryExpr 0x143141388 <col:10> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x143141890 <line:10:3, line:11:64>     |     |-BinaryOperator 0x1431415c8 <line:10:7, col:26> 'int' contains-errors '!='     |     | |-CXXDependentScopeMemberExpr 0x143141560 <col:7, col:18> '<dependent type>' contains-errors lvalue ->data     |     | | `-CXXDependentScopeMemberExpr 0x143141518 <col:7, col:12> '<dependent type>' contains-errors lvalue ->next     |     | |   `-RecoveryExpr 0x1431414f8 <col:7> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x1431415a8 <col:26> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x143141868 <line:11:25, col:64> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1431416c8 <col:25> 'int ()' Function 0x143141610 'server_redirect_destroy' 'int ()'     |       `-CXXDependentScopeMemberExpr 0x143141820 <col:49, col:60> '<dependent type>' contains-errors lvalue ->data     |         `-CXXDependentScopeMemberExpr 0x1431417d8 <col:49, col:54> '<dependent type>' contains-errors lvalue ->next     |           `-RecoveryExpr 0x1431417b8 <col:49> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143141a70 <line:13:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1431419e8 <col:2> 'int ()' Function 0x143141930 'g_slist_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x143141a28 <col:15, col:23> '<dependent type>' contains-errors lvalue ->cmdqueue     |   `-RecoveryExpr 0x143141a08 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143141b80 <line:14:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143141ae0 <col:2, col:10> '<dependent type>' contains-errors lvalue ->cmdqueue     | | `-RecoveryExpr 0x143141ab8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x143141a98 <col:2> 'int *' lvalue ParmVar 0x143127528 'server' 'int *'     | `-RecoveryExpr 0x143141b60 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143141e08 <line:17:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143141d68 <col:2, col:10> '<dependent type>' contains-errors lvalue ->cap_active     | | `-RecoveryExpr 0x143141d40 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x143141d20 <col:2> 'int *' lvalue ParmVar 0x143127528 'server' 'int *'     | `-RecoveryExpr 0x143141de8 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1431421c0 <line:25:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143142138 <col:2> 'int ()' Function 0x143142080 'g_free_and_null' 'int ()'     | `-CXXDependentScopeMemberExpr 0x143142178 <col:18, col:26> '<dependent type>' contains-errors lvalue ->sasl_buffer     |   `-RecoveryExpr 0x143142158 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1431424f0 <line:30:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143142468 <col:2> 'int ()' Function 0x1431423b0 'g_hash_table_destroy' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1431424a8 <col:23, col:31> '<dependent type>' contains-errors lvalue ->isupport     |   `-RecoveryExpr 0x143142488 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143142630 <line:33:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1431425a8 <col:2> 'int ()' Function 0x143142080 'g_free_and_null' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1431425e8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->wanted_usermode     |   `-RecoveryExpr 0x1431425c8 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1431426e0 <line:34:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143142658 <col:2> 'int ()' Function 0x143142080 'g_free_and_null' 'int ()'     | `-CXXDependentScopeMemberExpr 0x143142698 <col:18, col:26> '<dependent type>' contains-errors lvalue ->real_address     |   `-RecoveryExpr 0x143142678 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143142790 <line:35:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143142708 <col:2> 'int ()' Function 0x143142080 'g_free_and_null' 'int ()'     | `-CXXDependentScopeMemberExpr 0x143142748 <col:18, col:26> '<dependent type>' contains-errors lvalue ->usermode     |   `-RecoveryExpr 0x143142728 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143142840 <line:36:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1431427b8 <col:2> 'int ()' Function 0x143142080 'g_free_and_null' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1431427f8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->userhost     |   `-RecoveryExpr 0x1431427d8 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1431428f0 <line:37:2, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x143142868 <col:2> 'int ()' Function 0x143142080 'g_free_and_null' 'int ()'       `-CXXDependentScopeMemberExpr 0x1431428a8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->last_invite         `-RecoveryExpr 0x143142888 <col:18> '<dependent type>' contains-errors lvalue ","21254":"`-FunctionDecl 0x15a122990  line:1:13 invalid snippet_add_content 'void (struct snippet_context *, struct snippet_data *, const unsigned char *, int, int *)' static   |-ParmVarDecl 0x15a80e248 <col:33, col:57> col:57 used ctx 'struct snippet_context *'   |-ParmVarDecl 0x15a122628 <line:2:5, col:26> col:26 used target 'struct snippet_data *'   |-ParmVarDecl 0x15a1226d8 <line:3:5, col:26> col:26 used data 'const unsigned char *'   |-ParmVarDecl 0x15a122770 <col:32, col:39> col:39 invalid size 'int'   |-ParmVarDecl 0x15a122828 <line:4:5, col:13> col:13 invalid count_r 'int *'   `-CompoundStmt 0x15a8267e0 <line:5:1, line:37:1>     |-CallExpr 0x15a122ca0 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a122bc0 <col:2> 'int ()' Function 0x15a122b08 'i_assert' 'int ()'     | `-BinaryOperator 0x15a122c80 <col:11, col:21> 'int' contains-errors '!='     |   |-DeclRefExpr 0x15a122be0 <col:11> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'     |   `-RecoveryExpr 0x15a122c60 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a123478 <line:7:2, line:12:2>     | |-BinaryOperator 0x15a123398 <line:7:6, line:9:63> 'int' contains-errors '&&'     | | |-BinaryOperator 0x15a122d08 <line:7:6, col:14> 'int' contains-errors '>='     | | | |-RecoveryExpr 0x15a122cc8 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x15a122ce8 <col:14> 'int' 3     | | `-ParenExpr 0x15a123378 <line:8:7, line:9:63> 'int'     | |   `-BinaryOperator 0x15a123358 <line:8:8, line:9:62> 'int' '||'     | |     |-ParenExpr 0x15a123020 <line:8:8, col:62> 'int'     | |     | `-BinaryOperator 0x15a123000 <col:9, col:58> 'int' '&&'     | |     |   |-BinaryOperator 0x15a122ef8 <col:9, col:39> 'int' '&&'     | |     |   | |-BinaryOperator 0x15a122df0 <col:9, col:20> 'int' '=='     | |     |   | | |-ImplicitCastExpr 0x15a122dd8 <col:9, col:15> 'int' <IntegralCast>     | |     |   | | | `-ImplicitCastExpr 0x15a122dc0 <col:9, col:15> 'unsigned char' <LValueToRValue>     | |     |   | | |   `-ArraySubscriptExpr 0x15a122d80 <col:9, col:15> 'const unsigned char' lvalue     | |     |   | | |     |-ImplicitCastExpr 0x15a122d68 <col:9> 'const unsigned char *' <LValueToRValue>     | |     |   | | |     | `-DeclRefExpr 0x15a122d28 <col:9> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     | |     |   | | |     `-IntegerLiteral 0x15a122d48 <col:14> 'int' 0     | |     |   | | `-IntegerLiteral 0x15a122da0 <col:20> 'int' 239     | |     |   | `-BinaryOperator 0x15a122ed8 <col:28, col:39> 'int' '=='     | |     |   |   |-ImplicitCastExpr 0x15a122ec0 <col:28, col:34> 'int' <IntegralCast>     | |     |   |   | `-ImplicitCastExpr 0x15a122ea8 <col:28, col:34> 'unsigned char' <LValueToRValue>     | |     |   |   |   `-ArraySubscriptExpr 0x15a122e68 <col:28, col:34> 'const unsigned char' lvalue     | |     |   |   |     |-ImplicitCastExpr 0x15a122e50 <col:28> 'const unsigned char *' <LValueToRValue>     | |     |   |   |     | `-DeclRefExpr 0x15a122e10 <col:28> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     | |     |   |   |     `-IntegerLiteral 0x15a122e30 <col:33> 'int' 1     | |     |   |   `-IntegerLiteral 0x15a122e88 <col:39> 'int' 187     | |     |   `-BinaryOperator 0x15a122fe0 <col:47, col:58> 'int' '=='     | |     |     |-ImplicitCastExpr 0x15a122fc8 <col:47, col:53> 'int' <IntegralCast>     | |     |     | `-ImplicitCastExpr 0x15a122fb0 <col:47, col:53> 'unsigned char' <LValueToRValue>     | |     |     |   `-ArraySubscriptExpr 0x15a122f70 <col:47, col:53> 'const unsigned char' lvalue     | |     |     |     |-ImplicitCastExpr 0x15a122f58 <col:47> 'const unsigned char *' <LValueToRValue>     | |     |     |     | `-DeclRefExpr 0x15a122f18 <col:47> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     | |     |     |     `-IntegerLiteral 0x15a122f38 <col:52> 'int' 2     | |     |     `-IntegerLiteral 0x15a122f90 <col:58> 'int' 191     | |     `-ParenExpr 0x15a123338 <line:9:8, col:62> 'int'     | |       `-BinaryOperator 0x15a123318 <col:9, col:58> 'int' '&&'     | |         |-BinaryOperator 0x15a123210 <col:9, col:39> 'int' '&&'     | |         | |-BinaryOperator 0x15a123108 <col:9, col:20> 'int' '=='     | |         | | |-ImplicitCastExpr 0x15a1230f0 <col:9, col:15> 'int' <IntegralCast>     | |         | | | `-ImplicitCastExpr 0x15a1230d8 <col:9, col:15> 'unsigned char' <LValueToRValue>     | |         | | |   `-ArraySubscriptExpr 0x15a123098 <col:9, col:15> 'const unsigned char' lvalue     | |         | | |     |-ImplicitCastExpr 0x15a123080 <col:9> 'const unsigned char *' <LValueToRValue>     | |         | | |     | `-DeclRefExpr 0x15a123040 <col:9> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     | |         | | |     `-IntegerLiteral 0x15a123060 <col:14> 'int' 0     | |         | | `-IntegerLiteral 0x15a1230b8 <col:20> 'int' 191     | |         | `-BinaryOperator 0x15a1231f0 <col:28, col:39> 'int' '=='     | |         |   |-ImplicitCastExpr 0x15a1231d8 <col:28, col:34> 'int' <IntegralCast>     | |         |   | `-ImplicitCastExpr 0x15a1231c0 <col:28, col:34> 'unsigned char' <LValueToRValue>     | |         |   |   `-ArraySubscriptExpr 0x15a123180 <col:28, col:34> 'const unsigned char' lvalue     | |         |   |     |-ImplicitCastExpr 0x15a123168 <col:28> 'const unsigned char *' <LValueToRValue>     | |         |   |     | `-DeclRefExpr 0x15a123128 <col:28> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     | |         |   |     `-IntegerLiteral 0x15a123148 <col:33> 'int' 1     | |         |   `-IntegerLiteral 0x15a1231a0 <col:39> 'int' 187     | |         `-BinaryOperator 0x15a1232f8 <col:47, col:58> 'int' '=='     | |           |-ImplicitCastExpr 0x15a1232e0 <col:47, col:53> 'int' <IntegralCast>     | |           | `-ImplicitCastExpr 0x15a1232c8 <col:47, col:53> 'unsigned char' <LValueToRValue>     | |           |   `-ArraySubscriptExpr 0x15a123288 <col:47, col:53> 'const unsigned char' lvalue     | |           |     |-ImplicitCastExpr 0x15a123270 <col:47> 'const unsigned char *' <LValueToRValue>     | |           |     | `-DeclRefExpr 0x15a123230 <col:47> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     | |           |     `-IntegerLiteral 0x15a123250 <col:52> 'int' 2     | |           `-IntegerLiteral 0x15a1232a8 <col:58> 'int' 239     | `-CompoundStmt 0x15a123458 <col:66, line:12:2>     |   |-BinaryOperator 0x15a123428 <line:10:3, col:14> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x15a1233f0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x15a1233d8 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x15a1233b8 <col:4> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x15a123408 <col:14> 'int' 3     |   `-ReturnStmt 0x15a123448 <line:11:3>     |-IfStmt 0x15a1235a0 <line:13:2, line:16:2>     | |-BinaryOperator 0x15a123558 <line:13:6, col:17> 'int' '=='     | | |-ImplicitCastExpr 0x15a123540 <col:6, col:12> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x15a123528 <col:6, col:12> 'unsigned char' <LValueToRValue>     | | |   `-ArraySubscriptExpr 0x15a1234f0 <col:6, col:12> 'const unsigned char' lvalue     | | |     |-ImplicitCastExpr 0x15a1234d8 <col:6> 'const unsigned char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x15a123498 <col:6> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     | | |     `-IntegerLiteral 0x15a1234b8 <col:11> 'int' 0     | | `-CharacterLiteral 0x15a123510 <col:17> 'int' 0     | `-CompoundStmt 0x15a123588 <col:23, line:16:2>     |   `-ReturnStmt 0x15a123578 <line:15:3>     |-IfStmt 0x15a1256a0 <line:17:2, line:24:2>     | |-CallExpr 0x15a125178 <line:17:6, col:21> 'int'     | | |-ImplicitCastExpr 0x15a125160 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15a1250b8 <col:6> 'int ()' Function 0x15a125000 'i_isspace' 'int ()'     | | `-ImplicitCastExpr 0x15a1251b8 <col:16, col:17> 'int' <IntegralCast>     | |   `-ImplicitCastExpr 0x15a1251a0 <col:16, col:17> 'unsigned char' <LValueToRValue>     | |     `-UnaryOperator 0x15a125110 <col:16, col:17> 'const unsigned char' lvalue prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x15a1250f8 <col:17> 'const unsigned char *' <LValueToRValue>     | |         `-DeclRefExpr 0x15a1250d8 <col:17> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     | `-CompoundStmt 0x15a125678 <col:24, line:24:2>     |   |-IfStmt 0x15a125470 <line:19:3, line:20:26>     |   | |-BinaryOperator 0x15a125378 <line:19:7, col:34> 'int' contains-errors '>'     |   | | |-CallExpr 0x15a125330 <col:7, col:30> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x15a1252b0 <col:7> 'int ()' Function 0x15a1251f8 'str_len' 'int ()'     |   | | | `-RecoveryExpr 0x15a125308 <col:15, col:23> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x15a1252d0 <col:15> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'     |   | | `-IntegerLiteral 0x15a125358 <col:34> 'int' 1     |   | `-BinaryOperator 0x15a125450 <line:20:4, col:26> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x15a1253d0 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x15a125398 <col:4> 'struct snippet_context *' lvalue ParmVar 0x15a80e248 'ctx' 'struct snippet_context *'     |   |   `-RecoveryExpr 0x15a125430 <col:26> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x15a125648 <line:21:3, line:22:17>     |   | |-BinaryOperator 0x15a125550 <line:21:7, col:18> 'int' '=='     |   | | |-ImplicitCastExpr 0x15a125538 <col:7, col:13> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x15a125520 <col:7, col:13> 'unsigned char' <LValueToRValue>     |   | | |   `-ArraySubscriptExpr 0x15a1254e8 <col:7, col:13> 'const unsigned char' lvalue     |   | | |     |-ImplicitCastExpr 0x15a1254d0 <col:7> 'const unsigned char *' <LValueToRValue>     |   | | |     | `-DeclRefExpr 0x15a125490 <col:7> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     |   | | |     `-IntegerLiteral 0x15a1254b0 <col:12> 'int' 0     |   | | `-CharacterLiteral 0x15a125508 <col:18> 'int' 10     |   | `-BinaryOperator 0x15a125628 <line:22:4, col:17> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x15a1255a8 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x15a125570 <col:4> 'struct snippet_context *' lvalue ParmVar 0x15a80e248 'ctx' 'struct snippet_context *'     |   |   `-RecoveryExpr 0x15a125608 <col:17> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x15a125668 <line:23:3>     |-IfStmt 0x15a125ab0 <line:25:2, line:30:2>     | |-RecoveryExpr 0x15a1256f8 <line:25:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15a1256c0 <col:6> 'struct snippet_context *' lvalue ParmVar 0x15a80e248 'ctx' 'struct snippet_context *'     | `-CompoundStmt 0x15a125a88 <col:27, line:30:2>     |   |-CallExpr 0x15a125898 <line:26:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a125800 <col:3> 'int ()' Function 0x15a125748 'str_append_c' 'int ()'     |   | |-RecoveryExpr 0x15a125858 <col:16, col:24> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15a125820 <col:16> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'     |   | `-CharacterLiteral 0x15a125880 <col:33> 'int' 32     |   |-BinaryOperator 0x15a125980 <line:27:3, col:25> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x15a125900 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15a1258c8 <col:3> 'struct snippet_context *' lvalue ParmVar 0x15a80e248 'ctx' 'struct snippet_context *'     |   | `-RecoveryExpr 0x15a125960 <col:25> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x15a125a68 <line:28:3, line:29:4>     |     |-BinaryOperator 0x15a125a38 <line:28:7, col:31> 'int' contains-errors '=='     |     | |-UnaryOperator 0x15a125a00 <col:7, col:25> '<dependent type>' contains-errors postfix '--' cannot overflow     |     | | `-RecoveryExpr 0x15a1259d8 <col:7, col:15> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x15a1259a0 <col:7> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'     |     | `-IntegerLiteral 0x15a125a18 <col:31> 'int' 0     |     `-ReturnStmt 0x15a125a58 <line:29:4>     |-IfStmt 0x15a125b80 <line:31:2, line:32:3>     | |-BinaryOperator 0x15a125b50 <line:31:6, col:28> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15a125b08 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15a125ad0 <col:6> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'     | | `-IntegerLiteral 0x15a125b30 <col:28> 'int' 0     | `-ReturnStmt 0x15a125b70 <line:32:3>     |-UnaryOperator 0x15a125c00 <line:33:2, col:20> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x15a125bd8 <col:2, col:10> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15a125ba0 <col:2> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'     |-BinaryOperator 0x15a125e50 <line:34:2, col:40> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x15a125c50 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x15a125c38 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15a125c18 <col:3> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x15a125df8 <col:13, col:40> 'int'     |   |-ImplicitCastExpr 0x15a125de0 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15a125d48 <col:13> 'int ()' Function 0x15a125c90 'uni_utf8_char_bytes' 'int ()'     |   `-ImplicitCastExpr 0x15a125e38 <col:33, col:39> 'int' <IntegralCast>     |     `-ImplicitCastExpr 0x15a125e20 <col:33, col:39> 'unsigned char' <LValueToRValue>     |       `-ArraySubscriptExpr 0x15a125dc0 <col:33, col:39> 'const unsigned char' lvalue     |         |-ImplicitCastExpr 0x15a125da8 <col:33> 'const unsigned char *' <LValueToRValue>     |         | `-DeclRefExpr 0x15a125d68 <col:33> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'     |         `-IntegerLiteral 0x15a125d88 <col:38> 'int' 0     |-CallExpr 0x15a125f20 <line:35:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a125e70 <col:2> 'int ()' Function 0x15a122b08 'i_assert' 'int ()'     | `-BinaryOperator 0x15a125f00 <col:11, col:23> 'int' contains-errors '<='     |   |-UnaryOperator 0x15a125ec8 <col:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x15a125eb0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x15a125e90 <col:12> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x15a125ee0 <col:23> '<dependent type>' contains-errors lvalue     `-CallExpr 0x15a8267a8 <line:36:2, col:49> '<dependent type>' contains-errors       |-DeclRefExpr 0x15a8266b8 <col:2> 'int ()' Function 0x15a826600 'str_append_data' 'int ()'       |-RecoveryExpr 0x15a826710 <col:18, col:26> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x15a8266d8 <col:18> 'struct snippet_data *' lvalue ParmVar 0x15a122628 'target' 'struct snippet_data *'       |-DeclRefExpr 0x15a826738 <col:35> 'const unsigned char *' lvalue ParmVar 0x15a1226d8 'data' 'const unsigned char *'       `-UnaryOperator 0x15a826790 <col:41, col:42> '<dependent type>' contains-errors prefix '*' cannot overflow         `-ImplicitCastExpr 0x15a826778 <col:42> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x15a826758 <col:42> '<dependent type>' contains-errors lvalue ","20702":"`-FunctionDecl 0x1231282c8  line:1:12 php_libxml_streams_IO_write 'int (void *, const char *, int)' static   |-ParmVarDecl 0x1231280d8 <col:40, col:46> col:46 context 'void *'   |-ParmVarDecl 0x123128158 <col:55, col:67> col:67 used buffer 'const char *'   |-ParmVarDecl 0x1231281d8 <col:75, col:79> col:79 used len 'int'   `-CompoundStmt 0x1231286e0 <line:2:1, line:5:1>     `-CallExpr 0x123128568 <line:3:2, col:15> 'int'       `-ImplicitCastExpr 0x123128550 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x123128500 <col:2> 'int ()' Function 0x123128448 'TSRMLS_FETCH' 'int ()' ","20316":"`-FunctionDecl 0x1391281c8  line:1:1 invalid futex_wake 'int (int)'   |-ParmVarDecl 0x1391280f0 <col:12, col:16> col:16 invalid __user 'int'   `-CompoundStmt 0x1391436d8 <line:2:1, line:47:1>     |-DeclStmt 0x139128468 <line:3:2, col:30>     | |-RecordDecl 0x139128278 <col:2, col:9> col:9 struct futex_hash_bucket     | `-VarDecl 0x1391283e8 <col:2, col:28> col:28 used hb 'struct futex_hash_bucket *'     |-DeclStmt 0x139128700 <line:4:2, col:29>     | |-RecordDecl 0x139128480 <col:2, col:9> col:9 struct futex_q     | |-VarDecl 0x1391285e8 <col:2, col:18> col:18 used this 'struct futex_q *'     | `-VarDecl 0x139128678 <col:2, col:25> col:25 used next 'struct futex_q *'     |-DeclStmt 0x139141cd8 <line:5:2, col:38>     | |-RecordDecl 0x139128718 <col:2, col:8> col:8 union futex_key     | `-VarDecl 0x139141820 <col:2, col:18> col:18 invalid key 'union futex_key'     |-DeclStmt 0x139141d70 <line:6:2, col:9>     | `-VarDecl 0x139141d08 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x139141f60 <line:7:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139141ee0 <col:2> 'int ()' Function 0x139141e28 'DEFINE_WAKE_Q' 'int ()'     | `-RecoveryExpr 0x139141f40 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1391420f8 <line:9:2, line:10:11>     | |-UnaryOperator 0x139142008 <line:9:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x139141ff0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x139141fd0 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1391420e8 <line:10:3, col:11>     |   `-UnaryOperator 0x1391420d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1391420b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x139142068 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x139142430 <line:12:2, col:67> 'int' contains-errors '='     | |-DeclRefExpr 0x139142118 <col:2> 'int' lvalue Var 0x139141d08 'ret' 'int'     | `-CallExpr 0x1391423f0 <col:8, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x139142218 <col:8> 'int ()' Function 0x139142160 'get_futex_key' 'int ()'     |   |-RecoveryExpr 0x139142350 <col:22> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1391423b0 <col:29, col:37> '<dependent type>' contains-errors '&'     |   | |-RecoveryExpr 0x139142370 <col:29> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x139142390 <col:37> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x1391422c0 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1391422a0 <col:52> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1391423d0 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1391426a8 <line:13:2, line:14:8>     | |-CallExpr 0x139142618 <line:13:6, col:23> 'int'     | | |-ImplicitCastExpr 0x139142600 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x139142530 <col:6> 'int ()' Function 0x139142478 'unlikely' 'int ()'     | | `-BinaryOperator 0x1391425a8 <col:15, col:22> 'int' '!='     | |   |-ImplicitCastExpr 0x139142590 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x139142550 <col:15> 'int' lvalue Var 0x139141d08 'ret' 'int'     | |   `-IntegerLiteral 0x139142570 <col:22> 'int' 0     | `-GotoStmt 0x139142690 <line:14:3, col:8> 'out' 0x139142640     |-BinaryOperator 0x139142e60 <line:16:2, col:22> 'struct futex_hash_bucket *' contains-errors '='     | |-DeclRefExpr 0x1391426c8 <col:2> 'struct futex_hash_bucket *' lvalue Var 0x1391283e8 'hb' 'struct futex_hash_bucket *'     | `-CallExpr 0x139142e38 <col:7, col:22> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1391427c8 <col:7> 'int ()' Function 0x139142710 'hash_futex' 'int ()'     |   `-UnaryOperator 0x139142e20 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x139142e00 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139143078 <line:19:2, line:20:8>     | |-UnaryOperator 0x139142ff8 <line:19:6, col:28> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x139142fb8 <col:7, col:28> 'int'     | |   |-ImplicitCastExpr 0x139142fa0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x139142f60 <col:7> 'int ()' Function 0x139142ea8 'hb_waiters_pending' 'int ()'     | |   `-ImplicitCastExpr 0x139142fe0 <col:26> 'struct futex_hash_bucket *' <LValueToRValue>     | |     `-DeclRefExpr 0x139142f80 <col:26> 'struct futex_hash_bucket *' lvalue Var 0x1391283e8 'hb' 'struct futex_hash_bucket *'     | `-GotoStmt 0x139143060 <line:20:3, col:8> 'out_put_key' 0x139143010     |-CallExpr 0x139143210 <line:22:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139143178 <col:2> 'int ()' Function 0x1391430c0 'spin_lock' 'int ()'     | `-UnaryOperator 0x1391431f8 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1391431d0 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x139143198 <col:13> 'struct futex_hash_bucket *' lvalue Var 0x1391283e8 'hb' 'struct futex_hash_bucket *'     |-LabelStmt 0x139143650 <line:43:1, line:44:20> 'out_put_key'     | `-CallExpr 0x139143628 <col:2, col:20> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1391435d0 <col:2> 'int ()' Function 0x139143518 'put_futex_key' 'int ()'     |   `-UnaryOperator 0x139143610 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1391435f0 <col:17> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x1391436b8 <line:45:1, line:46:9> 'out'       `-ReturnStmt 0x1391436a8 <col:2, col:9>         `-ImplicitCastExpr 0x139143690 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x139143670 <col:9> 'int' lvalue Var 0x139141d08 'ret' 'int' ","20723":"`-FunctionDecl 0x131128758  line:1:1 rsa_private_key_clear 'int (struct rsa_private_key *)'   |-ParmVarDecl 0x131128648 <col:23, col:47> col:47 used key 'struct rsa_private_key *'   `-CompoundStmt 0x131140f70 <line:2:1, line:9:1>     |-CallExpr 0x131140c00 <line:3:3, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131140b80 <col:3> 'int ()' Function 0x131140ac8 'mpz_clear' 'int ()'     | `-RecoveryExpr 0x131140bd8 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x131140ba0 <col:13> 'struct rsa_private_key *' lvalue ParmVar 0x131128648 'key' 'struct rsa_private_key *'     |-CallExpr 0x131140ca8 <line:4:3, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131140c28 <col:3> 'int ()' Function 0x131140ac8 'mpz_clear' 'int ()'     | `-RecoveryExpr 0x131140c80 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x131140c48 <col:13> 'struct rsa_private_key *' lvalue ParmVar 0x131128648 'key' 'struct rsa_private_key *'     |-CallExpr 0x131140d50 <line:5:3, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131140cd0 <col:3> 'int ()' Function 0x131140ac8 'mpz_clear' 'int ()'     | `-RecoveryExpr 0x131140d28 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x131140cf0 <col:13> 'struct rsa_private_key *' lvalue ParmVar 0x131128648 'key' 'struct rsa_private_key *'     |-CallExpr 0x131140df8 <line:6:3, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131140d78 <col:3> 'int ()' Function 0x131140ac8 'mpz_clear' 'int ()'     | `-RecoveryExpr 0x131140dd0 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x131140d98 <col:13> 'struct rsa_private_key *' lvalue ParmVar 0x131128648 'key' 'struct rsa_private_key *'     |-CallExpr 0x131140ea0 <line:7:3, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131140e20 <col:3> 'int ()' Function 0x131140ac8 'mpz_clear' 'int ()'     | `-RecoveryExpr 0x131140e78 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x131140e40 <col:13> 'struct rsa_private_key *' lvalue ParmVar 0x131128648 'key' 'struct rsa_private_key *'     `-CallExpr 0x131140f48 <line:8:3, col:19> '<dependent type>' contains-errors       |-DeclRefExpr 0x131140ec8 <col:3> 'int ()' Function 0x131140ac8 'mpz_clear' 'int ()'       `-RecoveryExpr 0x131140f20 <col:13, col:18> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x131140ee8 <col:13> 'struct rsa_private_key *' lvalue ParmVar 0x131128648 'key' 'struct rsa_private_key *' ","20886":"`-FunctionDecl 0x144140a00  line:1:12 io_splice 'int (struct io_kiocb *, unsigned int)' static   |-ParmVarDecl 0x144128648 <col:22, col:39> col:39 used req 'struct io_kiocb *'   |-ParmVarDecl 0x1441286c8 <col:44, col:57> col:57 used issue_flags 'unsigned int'   `-CompoundStmt 0x1441477f0 <line:2:1, line:26:1>     |-DeclStmt 0x144140d60 <line:3:2, col:37>     | |-RecordDecl 0x144140b00 <col:2, col:9> col:9 struct io_splice     | `-VarDecl 0x144140c68 <col:2, col:31> col:20 used sp 'struct io_splice *' cinit     |   `-UnaryOperator 0x144140d30 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x144140d08 <col:26, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x144140cd0 <col:26> 'struct io_kiocb *' lvalue ParmVar 0x144128648 'req' 'struct io_kiocb *'     |-DeclStmt 0x144140fc8 <line:4:2, col:31>     | |-RecordDecl 0x144140d78 <col:2, col:9> col:9 struct file     | `-VarDecl 0x144140ee8 <col:2, col:24> col:15 used in 'struct file *' cinit     |   `-RecoveryExpr 0x144140f88 <col:20, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x144140f50 <col:20> 'struct io_splice *' contains-errors lvalue Var 0x144140c68 'sp' 'struct io_splice *'     |-DeclStmt 0x144141130 <line:5:2, col:33>     | `-VarDecl 0x144141068 <col:2, col:25> col:15 used out 'struct file *' cinit     |   `-RecoveryExpr 0x144141108 <col:21, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1441410d0 <col:21> 'struct io_splice *' contains-errors lvalue Var 0x144140c68 'sp' 'struct io_splice *'     |-DeclStmt 0x144141318 <line:6:2, col:56>     | `-VarDecl 0x144141160 <col:2, col:36> col:15 used flags 'unsigned int' cinit     |   `-BinaryOperator 0x1441412f8 <col:23, col:36> '<dependent type>' contains-errors '&'     |     |-RecoveryExpr 0x144141200 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1441411c8 <col:23> 'struct io_splice *' contains-errors lvalue Var 0x144140c68 'sp' 'struct io_splice *'     |     `-UnaryOperator 0x1441412e0 <col:35, col:36> '<dependent type>' contains-errors prefix '~' cannot overflow     |       `-ImplicitCastExpr 0x1441412c8 <col:36> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1441412a8 <col:36> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x144141448 <line:8:2, col:14>     | `-VarDecl 0x1441413a8 <col:2, col:13> col:7 used ret 'long' cinit     |   `-ImplicitCastExpr 0x144141430 <col:13> 'long' <IntegralCast>     |     `-IntegerLiteral 0x144141410 <col:13> 'int' 0     |-IfStmt 0x1441415a0 <line:10:2, line:11:11>     | |-BinaryOperator 0x1441414d8 <line:10:6, col:20> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x144141460 <col:6> 'unsigned int' lvalue ParmVar 0x1441286c8 'issue_flags' 'unsigned int'     | | `-RecoveryExpr 0x1441414b8 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x144141590 <line:11:3, col:11>     |   `-UnaryOperator 0x144141578 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x144141560 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x144141540 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1441475e8 <line:22:2, line:23:25>     | |-BinaryOperator 0x144147418 <line:22:6, col:17> 'int' contains-errors '!='     | | |-DeclRefExpr 0x144147398 <col:6> 'long' lvalue Var 0x1441413a8 'ret' 'long'     | | `-RecoveryExpr 0x1441473f0 <col:13, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1441473b8 <col:13> 'struct io_splice *' contains-errors lvalue Var 0x144140c68 'sp' 'struct io_splice *'     | `-CallExpr 0x1441475a8 <line:23:3, col:25> 'int'     |   |-ImplicitCastExpr 0x144147590 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x144147518 <col:3> 'int ()' Function 0x144147460 'req_set_fail_links' 'int ()'     |   `-ImplicitCastExpr 0x1441475d0 <col:22> 'struct io_kiocb *' <LValueToRValue>     |     `-DeclRefExpr 0x144147538 <col:22> 'struct io_kiocb *' lvalue ParmVar 0x144128648 'req' 'struct io_kiocb *'     |-CallExpr 0x144147760 <line:24:2, col:26> 'int'     | |-ImplicitCastExpr 0x144147748 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1441476e8 <col:2> 'int ()' Function 0x144147630 'io_req_complete' 'int ()'     | |-ImplicitCastExpr 0x144147790 <col:18> 'struct io_kiocb *' <LValueToRValue>     | | `-DeclRefExpr 0x144147708 <col:18> 'struct io_kiocb *' lvalue ParmVar 0x144128648 'req' 'struct io_kiocb *'     | `-ImplicitCastExpr 0x1441477a8 <col:23> 'long' <LValueToRValue>     |   `-DeclRefExpr 0x144147728 <col:23> 'long' lvalue Var 0x1441413a8 'ret' 'long'     `-ReturnStmt 0x1441477e0 <line:25:2, col:9>       `-IntegerLiteral 0x1441477c0 <col:9> 'int' 0 ","21093":"`-FunctionDecl 0x14510bfc8  line:1:12 invalid writer_register 'int (const int *)' static   |-ParmVarDecl 0x14510bef0 <col:28, col:42> col:42 invalid writer 'const int *'   `-CompoundStmt 0x14510c480 <line:2:1, line:10:1>     |-DeclStmt 0x14510c118 <line:3:5, col:46>     | `-VarDecl 0x14510c090 <col:5, col:45> col:16 used next_registered_writer_idx 'int' static cinit     |   `-IntegerLiteral 0x14510c0f8 <col:45> 'int' 0     |-IfStmt 0x14510c3d8 <line:5:5, line:6:30>     | |-BinaryOperator 0x14510c1a8 <line:5:9, col:39> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14510c130 <col:9> 'int' lvalue Var 0x14510c090 'next_registered_writer_idx' 'int'     | | `-RecoveryExpr 0x14510c188 <col:39> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14510c3c8 <line:6:9, col:30>     |   `-CallExpr 0x14510c3a0 <col:16, col:30> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14510c320 <col:16> 'int ()' Function 0x14510c268 'AVERROR' 'int ()'     |     `-RecoveryExpr 0x14510c380 <col:24> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14510c470 <line:9:5, col:12>       `-IntegerLiteral 0x14510c450 <col:12> 'int' 0 ","20346":"`-FunctionDecl 0x1379133a0  line:1:20 update_blocked_averages 'void (int)' static inline   |-ParmVarDecl 0x1379132d8 <col:44, col:48> col:48 used cpu 'int'   `-CompoundStmt 0x137932720 <line:2:1, line:22:1>     |-DeclStmt 0x137930eb8 <line:3:2, col:29>     | |-RecordDecl 0x137913498 <col:2, col:9> col:9 struct rq     | `-VarDecl 0x137913608 <col:2, col:28> col:13 used rq 'struct rq *' cinit     |   `-ImplicitCastExpr 0x137913868 <col:18, col:28> 'struct rq *' <IntegralToPointer>     |     `-CallExpr 0x137913828 <col:18, col:28> 'int'     |       |-ImplicitCastExpr 0x137913810 <col:18> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1379137a0 <col:18> 'int ()' Function 0x1379136e8 'cpu_rq' 'int ()'     |       `-ImplicitCastExpr 0x137913850 <col:25> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x1379137c0 <col:25> 'int' lvalue ParmVar 0x1379132d8 'cpu' 'int'     |-DeclStmt 0x137931130 <line:4:2, col:34>     | |-RecordDecl 0x137930ed0 <col:2, col:9> col:9 struct cfs_rq     | `-VarDecl 0x137931038 <col:2, col:31> col:17 used cfs_rq 'struct cfs_rq *' cinit     |   `-UnaryOperator 0x137931100 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1379310d8 <col:27, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1379310a0 <col:27> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     |-DeclStmt 0x137931338 <line:5:2, col:38>     | |-RecordDecl 0x137931148 <col:8, col:15> col:15 struct sched_class     | `-VarDecl 0x1379312b8 <col:2, col:28> col:28 used curr_class 'const struct sched_class *'     |-DeclStmt 0x1379314c8 <line:6:2, col:20>     | |-RecordDecl 0x137931350 <col:2, col:9> col:9 struct rq_flags     | `-VarDecl 0x137931448 <col:2, col:18> col:18 invalid rf 'struct rq_flags'     |-CallExpr 0x137931638 <line:8:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1379315c0 <col:2> 'int ()' Function 0x137931508 'rq_lock_irqsave' 'int ()'     | |-DeclRefExpr 0x1379315e0 <col:18> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     | `-UnaryOperator 0x137931620 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x137931600 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1379317a0 <line:9:2, col:20> 'int'     | |-ImplicitCastExpr 0x137931788 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x137931748 <col:2> 'int ()' Function 0x137931690 'update_rq_clock' 'int ()'     | `-ImplicitCastExpr 0x1379317c8 <col:18> 'struct rq *' <LValueToRValue>     |   `-DeclRefExpr 0x137931768 <col:18> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     |-CallExpr 0x137931a90 <line:10:2, col:58> 'int' contains-errors     | |-ImplicitCastExpr 0x137931a78 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1379318c0 <col:2> 'int ()' Function 0x137931808 'update_cfs_rq_load_avg' 'int ()'     | |-CallExpr 0x137931a18 <col:25, col:49> 'int' contains-errors     | | |-ImplicitCastExpr 0x137931a00 <col:25> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1379319c0 <col:25> 'int ()' Function 0x137931908 'cfs_rq_clock_task' 'int ()'     | | `-ImplicitCastExpr 0x137931a40 <col:43> 'struct cfs_rq *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x1379319e0 <col:43> 'struct cfs_rq *' contains-errors lvalue Var 0x137931038 'cfs_rq' 'struct cfs_rq *'     | `-ImplicitCastExpr 0x137931ac0 <col:52> 'struct cfs_rq *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x137931a58 <col:52> 'struct cfs_rq *' contains-errors lvalue Var 0x137931038 'cfs_rq' 'struct cfs_rq *'     |-BinaryOperator 0x137931ba0 <line:12:2, col:25> 'const struct sched_class *' contains-errors '='     | |-DeclRefExpr 0x137931ad8 <col:2> 'const struct sched_class *' lvalue Var 0x1379312b8 'curr_class' 'const struct sched_class *'     | `-CXXDependentScopeMemberExpr 0x137931b58 <col:15, col:25> '<dependent type>' contains-errors lvalue ->sched_class     |   `-RecoveryExpr 0x137931b30 <col:15, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x137931af8 <col:15> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     |-CallExpr 0x137932020 <line:13:2, col:76> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137931cb8 <col:2> 'int ()' Function 0x137931c00 'update_rt_rq_load_avg' 'int ()'     | |-CallExpr 0x137931f88 <col:24, col:40> 'int'     | | |-ImplicitCastExpr 0x137931f70 <col:24> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x137931db8 <col:24> 'int ()' Function 0x137931d00 'rq_clock_task' 'int ()'     | | `-ImplicitCastExpr 0x137931fb0 <col:38> 'struct rq *' <LValueToRValue>     | |   `-DeclRefExpr 0x137931dd8 <col:38> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     | |-DeclRefExpr 0x137931e50 <col:43> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     | `-BinaryOperator 0x137932000 <col:47, col:62> 'int' contains-errors '=='     |   |-DeclRefExpr 0x137931e70 <col:47> 'const struct sched_class *' lvalue Var 0x1379312b8 'curr_class' 'const struct sched_class *'     |   `-UnaryOperator 0x137931fe8 <col:61, col:62> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x137931fc8 <col:62> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1379323c0 <line:14:2, col:76> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137932138 <col:2> 'int ()' Function 0x137932080 'update_dl_rq_load_avg' 'int ()'     | |-CallExpr 0x137932328 <col:24, col:40> 'int'     | | |-ImplicitCastExpr 0x137932310 <col:24> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x137932158 <col:24> 'int ()' Function 0x137931d00 'rq_clock_task' 'int ()'     | | `-ImplicitCastExpr 0x137932350 <col:38> 'struct rq *' <LValueToRValue>     | |   `-DeclRefExpr 0x137932178 <col:38> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     | |-DeclRefExpr 0x1379321f0 <col:43> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     | `-BinaryOperator 0x1379323a0 <col:47, col:62> 'int' contains-errors '=='     |   |-DeclRefExpr 0x137932210 <col:47> 'const struct sched_class *' lvalue Var 0x1379312b8 'curr_class' 'const struct sched_class *'     |   `-UnaryOperator 0x137932388 <col:61, col:62> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x137932368 <col:62> '<dependent type>' contains-errors lvalue     |-CallExpr 0x137932550 <line:15:2, col:27> 'int'     | |-ImplicitCastExpr 0x137932538 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1379324d8 <col:2> 'int ()' Function 0x137932420 'update_irq_load_avg' 'int ()'     | |-ImplicitCastExpr 0x137932580 <col:22> 'struct rq *' <LValueToRValue>     | | `-DeclRefExpr 0x1379324f8 <col:22> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'     | `-IntegerLiteral 0x137932518 <col:26> 'int' 0     `-CallExpr 0x1379326f0 <line:21:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x137932678 <col:2> 'int ()' Function 0x1379325c0 'rq_unlock_irqrestore' 'int ()'       |-DeclRefExpr 0x137932698 <col:23> 'struct rq *' lvalue Var 0x137913608 'rq' 'struct rq *'       `-UnaryOperator 0x1379326d8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x1379326b8 <col:28> '<dependent type>' contains-errors lvalue ","21205":"`-FunctionDecl 0x14200ddf8  line:1:8 invalid fdsa_box_size 'int (int *)'   |-ParmVarDecl 0x14200dd28 <col:22, col:30> col:30 invalid s 'int *'   `-CompoundStmt 0x14200def0 <line:2:1, line:4:1>     `-ReturnStmt 0x14200dee0 <line:3:2, col:9>       `-RecoveryExpr 0x14200dec0 <col:9> '<dependent type>' contains-errors lvalue ","20337":"`-FunctionDecl 0x13a928ee0  col:7 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x13b008e00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13b008e68 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13a928f88 <<invalid sloc>> Implicit 952 ","21258":"`-FunctionDecl 0x1361429a0  col:22 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x136142aa0 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x136142a48 <<invalid sloc>> Implicit 901 ","20600":"`-FunctionDecl 0x14200ddc0  line:1:8 invalid setSourceTokens 'void (int)'   |-ParmVarDecl 0x14200dcf0 <col:24, <invalid sloc>> col:27 invalid 'int'   `-CompoundStmt 0x14200de88 <col:64, line:3:3> ","21182":"`-FunctionDecl 0x12780e350  line:1:6 kick_iocb 'void (struct kiocb *)'   |-ParmVarDecl 0x12780e248 <col:16, col:30> col:30 used iocb 'struct kiocb *'   `-CompoundStmt 0x12712f550 <line:2:1, line:11:1>     |-IfStmt 0x12712f3b8 <line:4:2, line:8:2>     | |-CallExpr 0x12712eff8 <line:4:6, col:24> 'int'     | | |-ImplicitCastExpr 0x12712efe0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12712ef70 <col:6> 'int ()' Function 0x12712eeb8 'is_sync_kiocb' 'int ()'     | | `-ImplicitCastExpr 0x12712f020 <col:20> 'struct kiocb *' <LValueToRValue>     | |   `-DeclRefExpr 0x12712ef90 <col:20> 'struct kiocb *' lvalue ParmVar 0x12780e248 'iocb' 'struct kiocb *'     | `-CompoundStmt 0x12712f390 <col:27, line:8:2>     |   |-CallExpr 0x12712f170 <line:5:3, col:22> 'int'     |   | |-ImplicitCastExpr 0x12712f158 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12712f118 <col:3> 'int ()' Function 0x12712f060 'kiocbSetKicked' 'int ()'     |   | `-ImplicitCastExpr 0x12712f198 <col:18> 'struct kiocb *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12712f138 <col:18> 'struct kiocb *' lvalue ParmVar 0x12780e248 'iocb' 'struct kiocb *'     |   |-CallExpr 0x12712f358 <line:6:10, col:42> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12712f290 <col:10> 'int ()' Function 0x12712f1d8 'wake_up_process' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x12712f310 <col:26, col:39> '<dependent type>' contains-errors lvalue .tsk     |   |   `-RecoveryExpr 0x12712f2e8 <col:26, col:32> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12712f2b0 <col:26> 'struct kiocb *' lvalue ParmVar 0x12780e248 'iocb' 'struct kiocb *'     |   `-ReturnStmt 0x12712f380 <line:7:3>     `-CallExpr 0x12712f510 <line:10:2, col:28> 'int'       |-ImplicitCastExpr 0x12712f4f8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12712f4b8 <col:2> 'int ()' Function 0x12712f400 'try_queue_kicked_iocb' 'int ()'       `-ImplicitCastExpr 0x12712f538 <col:24> 'struct kiocb *' <LValueToRValue>         `-DeclRefExpr 0x12712f4d8 <col:24> 'struct kiocb *' lvalue ParmVar 0x12780e248 'iocb' 'struct kiocb *' ","20217":"`-FunctionDecl 0x14200ddf8  line:1:12 invalid r_bin_java_print_local_variable_type_attr_summary 'int (int *)'   |-ParmVarDecl 0x14200dd28 <col:62, col:98> col:98 invalid lvattr 'int *'   `-CompoundStmt 0x142027868 <col:106, line:14:1>     |-IfStmt 0x14200e188 <line:2:2, line:5:2>     | |-UnaryOperator 0x14200dee0 <line:2:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14200dec8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14200dea8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14200e168 <col:15, line:5:2>     |   |-CallExpr 0x14200e118 <line:3:3, col:17> 'int'     |   | |-ImplicitCastExpr 0x14200e100 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14200e050 <col:3> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     |   | `-ImplicitCastExpr 0x14200e140 <col:12> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14200e0b0 <col:12> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14200e158 <line:4:3>     |-CallExpr 0x14200e250 <line:6:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14200e1a8 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x14200e1c8 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14200e208 <col:18, col:26> '<dependent type>' contains-errors lvalue ->file_offset     |   `-RecoveryExpr 0x14200e1e8 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14200e328 <line:7:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14200e280 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x14200e2a0 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14200e2e0 <col:18, col:26> '<dependent type>' contains-errors lvalue ->start_pc     |   `-RecoveryExpr 0x14200e2c0 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027400 <line:8:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14200e358 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x14200e378 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14200e3b8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->length     |   `-RecoveryExpr 0x14200e398 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1420274d8 <line:9:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142027430 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x142027450 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x142027490 <col:18, col:26> '<dependent type>' contains-errors lvalue ->name_idx     |   `-RecoveryExpr 0x142027470 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1420275b0 <line:10:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142027508 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x142027528 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x142027568 <col:18, col:26> '<dependent type>' contains-errors lvalue ->name     |   `-RecoveryExpr 0x142027548 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027688 <line:11:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420275e0 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x142027600 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x142027640 <col:18, col:26> '<dependent type>' contains-errors lvalue ->signature_idx     |   `-RecoveryExpr 0x142027620 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142027760 <line:12:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420276b8 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'     | |-StringLiteral 0x1420276d8 <col:11> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x142027718 <col:18, col:26> '<dependent type>' contains-errors lvalue ->signature     |   `-RecoveryExpr 0x1420276f8 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x142027838 <line:13:2, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x142027790 <col:2> 'int ()' Function 0x14200df98 'eprintf' 'int ()'       |-StringLiteral 0x1420277b0 <col:11> 'char[4]' lvalue \"STR\"       `-CXXDependentScopeMemberExpr 0x1420277f0 <col:18, col:26> '<dependent type>' contains-errors lvalue ->index         `-RecoveryExpr 0x1420277d0 <col:18> '<dependent type>' contains-errors lvalue ","20816":"`-FunctionDecl 0x12180ddf8  line:1:1 invalid vrrp_notify_handler 'int (int *)'   |-ParmVarDecl 0x12180dd28 <col:21, col:31> col:31 invalid strvec 'int *'   `-CompoundStmt 0x121828428 <line:2:1, line:10:1>     `-IfStmt 0x121828280 <line:4:2, line:7:2>       |-CXXDependentScopeMemberExpr 0x12180e148 <line:4:6, col:12> '<dependent type>' contains-errors lvalue ->script       | `-RecoveryExpr 0x12180e128 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x121828260 <col:20, line:7:2>         |-CallExpr 0x121828210 <line:5:3, col:88> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12180e270 <col:3> 'int ()' Function 0x12180e1b8 'report_config_error' 'int ()'         | |-RecoveryExpr 0x121828188 <col:23> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x12180e2f0 <col:45> 'char[4]' lvalue \"STR\"         | |-CXXDependentScopeMemberExpr 0x1218281c8 <col:52, col:58> '<dependent type>' contains-errors lvalue ->iname         | | `-RecoveryExpr 0x1218281a8 <col:52> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x121828118 <col:65, col:87> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1218280b8 <col:65> 'int ()' Function 0x121828000 'FMT_STR_VSLOT' 'int ()'         |   |-RecoveryExpr 0x1218280d8 <col:79> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x1218280f8 <col:86> 'int' 1         `-ReturnStmt 0x121828250 <line:6:3> ","21118":"`-FunctionDecl 0x15190bac8  line:1:1 invalid gdk_pixbuf__gif_image_load 'int (int *, int **)'   |-ParmVarDecl 0x15190b928 <col:29, col:35> col:35 invalid file 'int *'   |-ParmVarDecl 0x15190b9e0 <col:41, col:50> col:50 invalid error 'int **'   `-CompoundStmt 0x151926308 <line:2:1, line:41:1>     |-CallExpr 0x15190be30 <line:6:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15190bd10 <col:2> 'int ()' Function 0x15190bc58 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x15190bdf0 <col:24, col:32> 'int' contains-errors '!='     | | |-RecoveryExpr 0x15190bd30 <col:24> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15190bdd0 <col:32> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15190be10 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151925b08 <line:10:9, line:16:9>     | |-BinaryOperator 0x151925660 <line:10:13, col:24> 'int' contains-errors '=='     | | |-RecoveryExpr 0x151925620 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x151925640 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151925ae8 <col:30, line:16:9>     |   |-CallExpr 0x151925a60 <line:11:17, line:14:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x151925760 <line:11:17> 'int ()' Function 0x1519256a8 'g_set_error_literal' 'int ()'     |   | |-RecoveryExpr 0x151925780 <col:38> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x1519259c8 <line:12:38> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x1519259e8 <line:13:38> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x151925a20 <line:14:38, col:45> 'int'     |   |   |-ImplicitCastExpr 0x151925a08 <col:38> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1519258b0 <col:38> 'int ()' Function 0x1519257f8 '_' 'int ()'     |   |   `-ImplicitCastExpr 0x151925a48 <col:40> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x151925910 <col:40> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x151925ad8 <line:15:17, col:24>     |     `-RecoveryExpr 0x151925ab8 <col:24> '<dependent type>' contains-errors lvalue     `-IfStmt 0x151925da8 <line:22:2, line:28:9>       |-RecoveryExpr 0x151925ca0 <line:22:6, col:69> '_Bool' contains-errors       `-CompoundStmt 0x151925d98 <col:75, line:28:9> ","20883":"`-FunctionDecl 0x12f053ff8  line:1:1 arch_get_unmapped_area 'int (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'   |-ParmVarDecl 0x12f030e48 <col:24, col:37> col:37 used filp 'struct file *'   |-ParmVarDecl 0x12f030ec8 <col:43, col:57> col:57 used addr 'unsigned long'   |-ParmVarDecl 0x12f030f48 <line:2:3, col:17> col:17 used len 'unsigned long'   |-ParmVarDecl 0x12f053e00 <col:22, col:36> col:36 used pgoff 'unsigned long'   |-ParmVarDecl 0x12f053e80 <col:43, col:57> col:57 used flags 'unsigned long'   `-CompoundStmt 0x12f0582e0 <line:3:1, line:44:1>     |-DeclStmt 0x12f0543d8 <line:4:2, col:36>     | |-RecordDecl 0x12f054110 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x12f054278 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x12f054378 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm     |     `-RecoveryExpr 0x12f054358 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12f0545d8 <line:5:2, col:28>     | |-RecordDecl 0x12f0543f0 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x12f054558 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-DeclStmt 0x12f054690 <line:6:2, col:18>     | `-VarDecl 0x12f054608 <col:2, col:17> col:6 used do_align 'int' cinit     |   `-IntegerLiteral 0x12f054670 <col:17> 'int' 0     |-DeclStmt 0x12f0548c8 <line:7:2, col:41>     | `-VarDecl 0x12f0546c0 <col:2, col:40> col:6 used aliasing 'int' cinit     |   `-CallExpr 0x12f0548a8 <col:17, col:40> 'int'     |     `-ImplicitCastExpr 0x12f054890 <col:17> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12f054840 <col:17> 'int ()' Function 0x12f054788 'cache_is_vipt_aliasing' 'int ()'     |-DeclStmt 0x12f054a58 <line:8:2, col:35>     | |-RecordDecl 0x12f0548e0 <col:2, col:9> col:9 struct vm_unmapped_area_info     | `-VarDecl 0x12f0549d8 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'     |-IfStmt 0x12f0564b0 <line:15:2, line:20:2>     | |-BinaryOperator 0x12f054bb8 <line:15:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x12f054b40 <col:6> 'unsigned long' lvalue ParmVar 0x12f053e80 'flags' 'unsigned long'     | | `-RecoveryExpr 0x12f054b98 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f056490 <col:25, line:20:2>     |   |-IfStmt 0x12f056410 <line:16:3, line:18:12>     |   | |-RecoveryExpr 0x12f054d40 <line:16:7, line:17:51> '_Bool' contains-errors     |   | `-ReturnStmt 0x12f056400 <line:18:4, col:12>     |   |   `-UnaryOperator 0x12f054de0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x12f054dc8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x12f054da8 <col:12> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12f056480 <line:19:3, col:10>     |     `-ImplicitCastExpr 0x12f056468 <col:10> 'int' <IntegralCast>     |       `-ImplicitCastExpr 0x12f056450 <col:10> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x12f056430 <col:10> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |-IfStmt 0x12f056610 <line:22:2, line:23:11>     | |-BinaryOperator 0x12f056548 <line:22:6, col:12> 'int' contains-errors '>'     | | |-DeclRefExpr 0x12f0564d0 <col:6> 'unsigned long' lvalue ParmVar 0x12f030f48 'len' 'unsigned long'     | | `-RecoveryExpr 0x12f056528 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f056600 <line:23:3, col:11>     |   `-UnaryOperator 0x12f0565e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12f0565d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12f0565b0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f0571e0 <line:25:2, line:35:2>     | |-ImplicitCastExpr 0x12f056650 <line:25:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x12f056630 <col:6> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     | `-CompoundStmt 0x12f0571b8 <col:12, line:35:2>     |   |-IfStmt 0x12f056a80 <line:26:3, line:29:26> has_else     |   | |-ImplicitCastExpr 0x12f056688 <line:26:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x12f056668 <col:7> 'int' lvalue Var 0x12f054608 'do_align' 'int'     |   | |-BinaryOperator 0x12f056890 <line:27:4, col:35> 'unsigned long' '='     |   | | |-DeclRefExpr 0x12f0566a0 <col:4> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |   | | `-ImplicitCastExpr 0x12f056878 <col:11, col:35> 'unsigned long' <IntegralCast>     |   | |   `-CallExpr 0x12f056818 <col:11, col:35> 'int'     |   | |     |-ImplicitCastExpr 0x12f056800 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x12f0567a0 <col:11> 'int ()' Function 0x12f0566e8 'COLOUR_ALIGN' 'int ()'     |   | |     |-ImplicitCastExpr 0x12f056848 <col:24> 'unsigned long' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x12f0567c0 <col:24> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |   | |     `-ImplicitCastExpr 0x12f056860 <col:30> 'unsigned long' <LValueToRValue>     |   | |       `-DeclRefExpr 0x12f0567e0 <col:30> 'unsigned long' lvalue ParmVar 0x12f053e00 'pgoff' 'unsigned long'     |   | `-BinaryOperator 0x12f056a60 <line:29:4, col:26> 'unsigned long' '='     |   |   |-DeclRefExpr 0x12f0568b0 <col:4> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |   |   `-ImplicitCastExpr 0x12f056a48 <col:11, col:26> 'unsigned long' <IntegralCast>     |   |     `-CallExpr 0x12f056a08 <col:11, col:26> 'int'     |   |       |-ImplicitCastExpr 0x12f0569f0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x12f0569b0 <col:11> 'int ()' Function 0x12f0568f8 'PAGE_ALIGN' 'int ()'     |   |       `-ImplicitCastExpr 0x12f056a30 <col:22> 'unsigned long' <LValueToRValue>     |   |         `-DeclRefExpr 0x12f0569d0 <col:22> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |   |-BinaryOperator 0x12f056ca0 <line:31:3, col:26> 'struct vm_area_struct *' contains-errors '='     |   | |-DeclRefExpr 0x12f056ab0 <col:3> 'struct vm_area_struct *' lvalue Var 0x12f054558 'vma' 'struct vm_area_struct *'     |   | `-ImplicitCastExpr 0x12f056c88 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x12f056c28 <col:9, col:26> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x12f056c10 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x12f056bb0 <col:9> 'int ()' Function 0x12f056af8 'find_vma' 'int ()'     |   |     |-ImplicitCastExpr 0x12f056c58 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x12f056bd0 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x12f054278 'mm' 'struct mm_struct *'     |   |     `-ImplicitCastExpr 0x12f056c70 <col:22> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x12f056bf0 <col:22> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |   `-IfStmt 0x12f057198 <line:32:3, line:34:11>     |     |-BinaryOperator 0x12f057118 <line:32:7, line:33:43> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x12f057018 <line:32:7, col:26> 'int' contains-errors '>='     |     | | |-BinaryOperator 0x12f056ff8 <col:7, col:19> '<dependent type>' contains-errors '-'     |     | | | |-RecoveryExpr 0x12f056fd8 <col:7> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x12f056cd8 <col:19> 'unsigned long' lvalue ParmVar 0x12f030f48 'len' 'unsigned long'     |     | | `-DeclRefExpr 0x12f056d18 <col:26> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |     | `-ParenExpr 0x12f0570f8 <line:33:7, col:43> 'int' contains-errors     |     |   `-BinaryOperator 0x12f0570d8 <col:8, col:35> 'int' contains-errors '||'     |     |     |-UnaryOperator 0x12f057050 <col:8, col:9> 'int' prefix '!' cannot overflow     |     |     | `-ImplicitCastExpr 0x12f057038 <col:9> 'struct vm_area_struct *' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x12f056d58 <col:9> 'struct vm_area_struct *' lvalue Var 0x12f054558 'vma' 'struct vm_area_struct *'     |     |     `-BinaryOperator 0x12f0570b8 <col:16, col:35> 'int' contains-errors '<='     |     |       |-BinaryOperator 0x12f057098 <col:16, col:23> 'unsigned long' '+'     |     |       | |-ImplicitCastExpr 0x12f057068 <col:16> 'unsigned long' <LValueToRValue>     |     |       | | `-DeclRefExpr 0x12f056da8 <col:16> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |     |       | `-ImplicitCastExpr 0x12f057080 <col:23> 'unsigned long' <LValueToRValue>     |     |       |   `-DeclRefExpr 0x12f056dc8 <col:23> 'unsigned long' lvalue ParmVar 0x12f030f48 'len' 'unsigned long'     |     |       `-RecoveryExpr 0x12f056e70 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x12f056e38 <col:30> 'struct vm_area_struct *' lvalue Var 0x12f054558 'vma' 'struct vm_area_struct *'     |     `-ReturnStmt 0x12f057188 <line:34:4, col:11>     |       `-ImplicitCastExpr 0x12f057170 <col:11> 'int' <IntegralCast>     |         `-ImplicitCastExpr 0x12f057158 <col:11> 'unsigned long' <LValueToRValue>     |           `-DeclRefExpr 0x12f057138 <col:11> 'unsigned long' lvalue ParmVar 0x12f030ec8 'addr' 'unsigned long'     |-BinaryOperator 0x12f0572b0 <line:37:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f057248 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x12f057220 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f057200 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12f0549d8 'info' 'struct vm_unmapped_area_info'     | `-IntegerLiteral 0x12f057290 <col:15> 'int' 0     |-BinaryOperator 0x12f057380 <line:38:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f057318 <col:2, col:7> '<dependent type>' contains-errors lvalue .length     | | `-RecoveryExpr 0x12f0572f0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f0572d0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12f0549d8 'info' 'struct vm_unmapped_area_info'     | `-DeclRefExpr 0x12f057360 <col:16> 'unsigned long' lvalue ParmVar 0x12f030f48 'len' 'unsigned long'     |-BinaryOperator 0x12f057ea8 <line:39:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f057e00 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit     | | `-RecoveryExpr 0x12f0573c0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f0573a0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12f0549d8 'info' 'struct vm_unmapped_area_info'     | `-RecoveryExpr 0x12f057e80 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12f057e48 <col:19> 'struct mm_struct *' contains-errors lvalue Var 0x12f054278 'mm' 'struct mm_struct *'     |-BinaryOperator 0x12f057fb0 <line:40:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f057f10 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit     | | `-RecoveryExpr 0x12f057ee8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f057ec8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x12f0549d8 'info' 'struct vm_unmapped_area_info'     | `-RecoveryExpr 0x12f057f90 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12f0582d0 <line:43:2, col:31>       `-CallExpr 0x12f0582a8 <col:9, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x12f058250 <col:9> 'int ()' Function 0x12f058198 'vm_unmapped_area' 'int ()'         `-UnaryOperator 0x12f058290 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x12f058270 <col:27> '<dependent type>' contains-errors lvalue ","21122":"`-FunctionDecl 0x128942690  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x128942790 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12a809000 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12a809068 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x128942738 <<invalid sloc>> Implicit 882 ","21083":"`-FunctionDecl 0x14a9281c8  line:1:12 invalid wake_futex_pi 'int (int)' static   |-ParmVarDecl 0x14a9280f0 <col:26, col:30> col:30 invalid __user 'int'   `-CompoundStmt 0x14b00a100 <line:2:1, line:50:1>     |-DeclStmt 0x14a928468 <line:3:2, col:31>     | |-RecordDecl 0x14a928278 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x14a9283e8 <col:2, col:22> col:22 used new_owner 'struct task_struct *'     |-DeclStmt 0x14a928730 <line:4:2, col:50>     | |-RecordDecl 0x14a928480 <col:2, col:9> col:9 struct futex_pi_state     | `-VarDecl 0x14a9285e8 <col:2, col:42> col:25 used pi_state 'struct futex_pi_state *' cinit     |   `-CXXDependentScopeMemberExpr 0x14a9286d0 <col:36, col:42> '<dependent type>' contains-errors lvalue ->pi_state     |     `-RecoveryExpr 0x14a9286b0 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a941840 <line:7:2, line:8:11>     | |-UnaryOperator 0x14a928780 <line:7:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a928768 <col:7> 'struct futex_pi_state *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x14a928748 <col:7> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     | `-ReturnStmt 0x14a941830 <line:8:3, col:11>     |   `-UnaryOperator 0x14a941818 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14a941800 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14a9287e0 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a941ec8 <line:10:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a9419c0 <col:2> 'int ()' Function 0x14a941908 'raw_spin_lock' 'int ()'     | `-UnaryOperator 0x14a941eb0 <col:16, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14a941e68 <col:17, col:36> '<dependent type>' contains-errors lvalue .wait_lock     |     `-RecoveryExpr 0x14a941e40 <col:17, col:27> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a9419e0 <col:17> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |-BinaryOperator 0x14a9420b0 <line:11:2, col:53> 'struct task_struct *' contains-errors '='     | |-DeclRefExpr 0x14a941ef0 <col:2> 'struct task_struct *' lvalue Var 0x14a9283e8 'new_owner' 'struct task_struct *'     | `-CallExpr 0x14a942088 <col:14, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a941ff0 <col:14> 'int ()' Function 0x14a941f38 'rt_mutex_next_owner' 'int ()'     |   `-UnaryOperator 0x14a942070 <col:34, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14a942048 <col:35, col:45> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a942010 <col:35> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |-IfStmt 0x14a942248 <line:14:2, line:15:21>     | |-UnaryOperator 0x14a942108 <line:14:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a9420f0 <col:7> 'struct task_struct *' <LValueToRValue>     | |   `-DeclRefExpr 0x14a9420d0 <col:7> 'struct task_struct *' lvalue Var 0x14a9283e8 'new_owner' 'struct task_struct *'     | `-BinaryOperator 0x14a942228 <line:15:3, col:21> 'struct task_struct *' contains-errors '='     |   |-DeclRefExpr 0x14a942120 <col:3> 'struct task_struct *' lvalue Var 0x14a9283e8 'new_owner' 'struct task_struct *'     |   `-CXXDependentScopeMemberExpr 0x14a9421e0 <col:15, col:21> '<dependent type>' contains-errors lvalue ->task     |     `-RecoveryExpr 0x14a9421c0 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b008468 <line:18:2, line:33:2>     | |-RecoveryExpr 0x14a9422b8 <line:18:6, col:31> '_Bool' contains-errors     | `-CompoundStmt 0x14b008448 <col:34, line:33:2>     |   |-DeclStmt 0x14a942378 <line:19:3, col:14>     |   | `-VarDecl 0x14a9422f0 <col:3, col:13> col:7 used ret 'int' cinit     |   |   `-IntegerLiteral 0x14a942358 <col:13> 'int' 0     |   `-IfStmt 0x14b008428 <line:29:3, line:32:3>     |     |-ImplicitCastExpr 0x14a942798 <line:29:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14a942778 <col:7> 'int' lvalue Var 0x14a9422f0 'ret' 'int'     |     `-CompoundStmt 0x14b008408 <col:12, line:32:3>     |       |-CallExpr 0x14b008398 <line:30:4, col:49> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14b0082b8 <col:4> 'int ()' Function 0x14b008200 'raw_spin_unlock' 'int ()'     |       | `-UnaryOperator 0x14b008380 <col:20, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   `-CXXDependentScopeMemberExpr 0x14b008338 <col:21, col:40> '<dependent type>' contains-errors lvalue .wait_lock     |       |     `-RecoveryExpr 0x14b008310 <col:21, col:31> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x14b0082d8 <col:21> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |       `-ReturnStmt 0x14b0083f8 <line:31:4, col:11>     |         `-ImplicitCastExpr 0x14b0083e0 <col:11> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x14b0083c0 <col:11> 'int' lvalue Var 0x14a9422f0 'ret' 'int'     |-CallExpr 0x14b008648 <line:35:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008568 <col:2> 'int ()' Function 0x14b0084b0 'raw_spin_lock_irq' 'int ()'     | `-UnaryOperator 0x14b008630 <col:20, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b0085e8 <col:21, col:38> '<dependent type>' contains-errors lvalue ->pi_lock     |     `-RecoveryExpr 0x14b0085c0 <col:21, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14b008588 <col:21> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x14b008910 <line:36:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008750 <col:2> 'int ()' Function 0x14b008698 'WARN_ON' 'int ()'     | `-CallExpr 0x14b0088e8 <col:10, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b008850 <col:10> 'int ()' Function 0x14b008798 'list_empty' 'int ()'     |   `-UnaryOperator 0x14b0088d0 <col:21, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14b0088a8 <col:22, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14b008870 <col:22> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x14b008ab0 <line:37:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008a18 <col:2> 'int ()' Function 0x14b008960 'list_del_init' 'int ()'     | `-UnaryOperator 0x14b008a98 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b008a70 <col:17, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b008a38 <col:17> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x14b008c98 <line:38:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008bb8 <col:2> 'int ()' Function 0x14b008b00 'raw_spin_unlock_irq' 'int ()'     | `-UnaryOperator 0x14b008c80 <col:22, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b008c38 <col:23, col:40> '<dependent type>' contains-errors lvalue ->pi_lock     |     `-RecoveryExpr 0x14b008c10 <col:23, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14b008bd8 <col:23> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x14b008d58 <line:40:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008cc0 <col:2> 'int ()' Function 0x14b0084b0 'raw_spin_lock_irq' 'int ()'     | `-UnaryOperator 0x14b008d40 <col:20, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b008d18 <col:21, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b008ce0 <col:21> 'struct task_struct *' lvalue Var 0x14a9283e8 'new_owner' 'struct task_struct *'     |-CallExpr 0x14b008e78 <line:41:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008d80 <col:2> 'int ()' Function 0x14b008698 'WARN_ON' 'int ()'     | `-UnaryOperator 0x14b008e60 <col:10, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x14b008e38 <col:11, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14b008da0 <col:11> 'int ()' Function 0x14b008798 'list_empty' 'int ()'     |     `-UnaryOperator 0x14b008e20 <col:22, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14b008df8 <col:23, col:33> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14b008dc0 <col:23> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x14b009090 <line:42:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008f80 <col:2> 'int ()' Function 0x14b008ec8 'list_add' 'int ()'     | |-UnaryOperator 0x14b009000 <col:11, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14b008fd8 <col:12, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b008fa0 <col:12> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     | `-UnaryOperator 0x14b009078 <col:28, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b009050 <col:29, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b009018 <col:29> 'struct task_struct *' lvalue Var 0x14a9283e8 'new_owner' 'struct task_struct *'     |-BinaryOperator 0x14b009140 <line:43:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14b0090f8 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b0090c0 <col:2> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     | `-DeclRefExpr 0x14b009120 <col:20> 'struct task_struct *' lvalue Var 0x14a9283e8 'new_owner' 'struct task_struct *'     |-CallExpr 0x14b009e00 <line:44:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b009160 <col:2> 'int ()' Function 0x14b008b00 'raw_spin_unlock_irq' 'int ()'     | `-UnaryOperator 0x14b0091e0 <col:22, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b0091b8 <col:23, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b009180 <col:23> 'struct task_struct *' lvalue Var 0x14a9283e8 'new_owner' 'struct task_struct *'     |-CallExpr 0x14b009f08 <line:46:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b009e28 <col:2> 'int ()' Function 0x14b008200 'raw_spin_unlock' 'int ()'     | `-UnaryOperator 0x14b009ef0 <col:18, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b009ea8 <col:19, col:38> '<dependent type>' contains-errors lvalue .wait_lock     |     `-RecoveryExpr 0x14b009e80 <col:19, col:29> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14b009e48 <col:19> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x14b00a0a8 <line:47:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b00a010 <col:2> 'int ()' Function 0x14b009f58 'rt_mutex_unlock' 'int ()'     | `-UnaryOperator 0x14b00a090 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b00a068 <col:19, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b00a030 <col:19> 'struct futex_pi_state *' contains-errors lvalue Var 0x14a9285e8 'pi_state' 'struct futex_pi_state *'     `-ReturnStmt 0x14b00a0f0 <line:49:2, col:9>       `-IntegerLiteral 0x14b00a0d0 <col:9> 'int' 0 ","20658":"`-FunctionDecl 0x1518543e8  line:1:1 parse_line 'int (struct archive_read *, struct archive_entry *, struct mtree *, struct mtree_entry *, int *)'   |-ParmVarDecl 0x151830e48 <col:12, col:33> col:33 used a 'struct archive_read *'   |-ParmVarDecl 0x151853e28 <col:36, col:58> col:58 used entry 'struct archive_entry *'   |-ParmVarDecl 0x151853ff8 <line:2:5, col:19> col:19 used mtree 'struct mtree *'   |-ParmVarDecl 0x1518541c8 <col:26, col:46> col:46 used mp 'struct mtree_entry *'   |-ParmVarDecl 0x151854278 <col:50, col:55> col:55 used parsed_kws 'int *'   `-CompoundStmt 0x1520a4398 <line:3:1, line:18:1>     |-DeclStmt 0x1518546e8 <line:4:2, col:27>     | |-RecordDecl 0x151854500 <col:2, col:9> col:9 struct mtree_option     | `-VarDecl 0x151854668 <col:2, col:23> col:23 used iter 'struct mtree_option *'     |-DeclStmt 0x151854868 <line:5:2, col:24>     | |-VarDecl 0x151854718 <col:2, col:10> col:6 used r 'int' cinit     | | `-RecoveryExpr 0x1518547b0 <col:10> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x1518547e8 <col:2, col:22> col:22 used r1 'int'     |-ForStmt 0x1520a3ed8 <line:7:2, line:11:2>     | |-BinaryOperator 0x151854900 <line:7:7, col:18> 'struct mtree_option *' contains-errors '='     | | |-DeclRefExpr 0x151854880 <col:7> 'struct mtree_option *' lvalue Var 0x151854668 'iter' 'struct mtree_option *'     | | `-RecoveryExpr 0x1518548d8 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1518548a0 <col:14> 'struct mtree_entry *' lvalue ParmVar 0x1518541c8 'mp' 'struct mtree_entry *'     | |-<<<NULL>>>     | |-BinaryOperator 0x151854998 <col:27, col:35> 'int' contains-errors '!='     | | |-DeclRefExpr 0x151854920 <col:27> 'struct mtree_option *' lvalue Var 0x151854668 'iter' 'struct mtree_option *'     | | `-RecoveryExpr 0x151854978 <col:35> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x151854a38 <col:41, col:54> 'struct mtree_option *' contains-errors '='     | | |-DeclRefExpr 0x1518549b8 <col:41> 'struct mtree_option *' lvalue Var 0x151854668 'iter' 'struct mtree_option *'     | | `-RecoveryExpr 0x151854a10 <col:48, col:54> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1518549d8 <col:48> 'struct mtree_option *' lvalue Var 0x151854668 'iter' 'struct mtree_option *'     | `-CompoundStmt 0x1520a3eb8 <col:60, line:11:2>     |   |-BinaryOperator 0x151854d58 <line:8:3, col:55> 'int' '='     |   | |-DeclRefExpr 0x151854a58 <col:3> 'int' lvalue Var 0x1518547e8 'r1' 'int'     |   | `-CallExpr 0x151854c98 <col:8, col:55> 'int'     |   |   |-ImplicitCastExpr 0x151854c80 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x151854b90 <col:8> 'int ()' Function 0x151854ad8 'parse_keyword' 'int ()'     |   |   |-ImplicitCastExpr 0x151854ce0 <col:22> 'struct archive_read *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x151854bb0 <col:22> 'struct archive_read *' lvalue ParmVar 0x151830e48 'a' 'struct archive_read *'     |   |   |-ImplicitCastExpr 0x151854cf8 <col:25> 'struct mtree *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x151854bd0 <col:25> 'struct mtree *' lvalue ParmVar 0x151853ff8 'mtree' 'struct mtree *'     |   |   |-ImplicitCastExpr 0x151854d10 <col:32> 'struct archive_entry *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x151854bf0 <col:32> 'struct archive_entry *' lvalue ParmVar 0x151853e28 'entry' 'struct archive_entry *'     |   |   |-ImplicitCastExpr 0x151854d28 <col:39> 'struct mtree_option *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x151854c10 <col:39> 'struct mtree_option *' lvalue Var 0x151854668 'iter' 'struct mtree_option *'     |   |   `-ImplicitCastExpr 0x151854d40 <col:45> 'int *' <LValueToRValue>     |   |     `-DeclRefExpr 0x151854c30 <col:45> 'int *' lvalue ParmVar 0x151854278 'parsed_kws' 'int *'     |   `-IfStmt 0x1520a3e98 <line:9:3, line:10:8>     |     |-BinaryOperator 0x1520a3e00 <line:9:7, col:12> 'int' contains-errors '<'     |     | |-ImplicitCastExpr 0x151854db8 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x151854d78 <col:7> 'int' lvalue Var 0x1518547e8 'r1' 'int'     |     | `-ImplicitCastExpr 0x151854dd0 <col:12> 'int' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x151854d98 <col:12> 'int' contains-errors lvalue Var 0x151854718 'r' 'int'     |     `-BinaryOperator 0x1520a3e78 <line:10:4, col:8> 'int' contains-errors '='     |       |-DeclRefExpr 0x1520a3e20 <col:4> 'int' contains-errors lvalue Var 0x151854718 'r' 'int'     |       `-ImplicitCastExpr 0x1520a3e60 <col:8> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x1520a3e40 <col:8> 'int' lvalue Var 0x1518547e8 'r1' 'int'     |-IfStmt 0x1520a4310 <line:12:2, line:16:2>     | |-RecoveryExpr 0x1520a4040 <line:12:6, col:59> '_Bool' contains-errors     | `-CompoundStmt 0x1520a42f8 <col:62, line:16:2>     |   `-CallExpr 0x1520a42a8 <line:13:3, line:14:12> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1520a4140 <line:13:3> 'int ()' Function 0x1520a4088 'archive_set_error' 'int ()'     |     |-UnaryOperator 0x1520a41c0 <col:21, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x1520a4198 <col:22, col:25> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x1520a4160 <col:22> 'struct archive_read *' lvalue ParmVar 0x151830e48 'a' 'struct archive_read *'     |     |-RecoveryExpr 0x1520a4288 <col:34> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x1520a4230 <line:14:7> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x1520a4388 <line:17:2, col:11>       `-ImplicitCastExpr 0x1520a4370 <col:9, col:11> 'int' contains-errors <LValueToRValue>         `-ParenExpr 0x1520a4350 <col:9, col:11> 'int' contains-errors lvalue           `-DeclRefExpr 0x1520a4330 <col:10> 'int' contains-errors lvalue Var 0x151854718 'r' 'int' ","20948":"`-FunctionDecl 0x11d9281f8  line:1:12 invalid peer_has_vnet_hdr 'int (int *)' static   |-ParmVarDecl 0x11d928128 <col:30, col:41> col:41 invalid n 'int *'   `-CompoundStmt 0x11d928320 <line:2:1, line:4:1>     `-ReturnStmt 0x11d928310 <line:3:5, col:15>       `-CXXDependentScopeMemberExpr 0x11d9282c8 <col:12, col:15> '<dependent type>' contains-errors lvalue ->has_vnet_hdr         `-RecoveryExpr 0x11d9282a8 <col:12> '<dependent type>' contains-errors lvalue ","20610":"`-FunctionDecl 0x12e128758  line:1:12 vgacon_switch 'int (struct vc_data *)' static   |-ParmVarDecl 0x12e128648 <col:26, col:42> col:42 used c 'struct vc_data *'   `-CompoundStmt 0x12e141918 <line:2:1, line:27:1>     |-DeclStmt 0x12e140bc0 <line:3:2, col:36>     | `-VarDecl 0x12e140a68 <col:2, col:23> col:6 used x 'int' cinit     |   `-BinaryOperator 0x12e140ba0 <col:10, col:23> '<dependent type>' contains-errors '*'     |     |-RecoveryExpr 0x12e140b08 <col:10, col:13> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12e140ad0 <col:10> 'struct vc_data *' lvalue ParmVar 0x12e128648 'c' 'struct vc_data *'     |     `-RecoveryExpr 0x12e140b80 <col:23> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12e140d80 <line:4:2, col:40>     | `-VarDecl 0x12e140bf0 <col:2, col:34> col:6 used y 'int' cinit     |   `-BinaryOperator 0x12e140d60 <col:10, col:34> '<dependent type>' contains-errors '*'     |     |-RecoveryExpr 0x12e140c90 <col:10, col:13> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12e140c58 <col:10> 'struct vc_data *' lvalue ParmVar 0x12e128648 'c' 'struct vc_data *'     |     `-CXXDependentScopeMemberExpr 0x12e140d18 <col:23, col:34> '<dependent type>' contains-errors lvalue .height     |       `-RecoveryExpr 0x12e140cf0 <col:23, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12e140cb8 <col:23> 'struct vc_data *' lvalue ParmVar 0x12e128648 'c' 'struct vc_data *'     |-DeclStmt 0x12e141040 <line:5:2, line:6:20>     | `-VarDecl 0x12e140db0 <line:5:2, line:6:14> line:5:6 used rows 'int' cinit     |   `-BinaryOperator 0x12e141020 <col:13, line:6:14> '<dependent type>' contains-errors '\/'     |     |-BinaryOperator 0x12e141000 <line:5:13, col:44> '<dependent type>' contains-errors '*'     |     | |-CXXDependentScopeMemberExpr 0x12e140f98 <col:13, col:25> '<dependent type>' contains-errors lvalue .orig_video_lines     |     | | `-RecoveryExpr 0x12e140f78 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x12e140fe0 <col:44> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x12e140f10 <line:6:3, col:14> '<dependent type>' contains-errors lvalue .height     |       `-RecoveryExpr 0x12e140ee8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12e140eb0 <col:3> 'struct vc_data *' lvalue ParmVar 0x12e128648 'c' 'struct vc_data *'     |-IfStmt 0x12e141740 <line:13:2, line:23:2>     | |-UnaryOperator 0x12e141198 <line:13:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12e141180 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12e141160 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12e141728 <col:19, line:23:2>     |   `-IfStmt 0x12e141708 <line:18:3, line:22:45>     |     |-RecoveryExpr 0x12e1414d0 <line:18:7, line:21:35> '_Bool' contains-errors     |     `-CallExpr 0x12e1416d0 <line:22:4, col:45> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x12e1415d0 <col:4> 'int ()' Function 0x12e141518 'vgacon_doresize' 'int ()'     |       |-DeclRefExpr 0x12e1415f0 <col:20> 'struct vc_data *' lvalue ParmVar 0x12e128648 'c' 'struct vc_data *'     |       |-RecoveryExpr 0x12e141648 <col:23, col:26> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x12e141610 <col:23> 'struct vc_data *' lvalue ParmVar 0x12e128648 'c' 'struct vc_data *'     |       `-RecoveryExpr 0x12e1416a8 <col:35, col:38> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12e141670 <col:35> 'struct vc_data *' lvalue ParmVar 0x12e128648 'c' 'struct vc_data *'     |-CallExpr 0x12e1418c0 <line:25:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e141840 <col:2> 'int ()' Function 0x12e141788 'vgacon_scrollback_switch' 'int ()'     | `-RecoveryExpr 0x12e141898 <col:27, col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12e141860 <col:27> 'struct vc_data *' lvalue ParmVar 0x12e128648 'c' 'struct vc_data *'     `-ReturnStmt 0x12e141908 <line:26:2, col:9>       `-IntegerLiteral 0x12e1418e8 <col:9> 'int' 0 ","20520":"`-FunctionDecl 0x125123f08  col:42 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern   |-ParmVarDecl 0x125124008 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-ParmVarDecl 0x125124070 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-BuiltinAttr 0x125123fb0 <<invalid sloc>> Implicit 913   `-FormatAttr 0x1251240e8 <col:42> Implicit scanf 2 3 ","20983":"`-FunctionDecl 0x143925178  line:1:5 invalid my_redel 'int (const char *, const char *, int, int)'   |-ParmVarDecl 0x143924ed8 <col:14, col:26> col:26 used org_name 'const char *'   |-ParmVarDecl 0x143924f58 <col:36, col:48> col:48 used tmp_name 'const char *'   |-ParmVarDecl 0x143924ff0 <line:2:14, col:21> col:21 invalid backup_time_stamp 'int'   |-ParmVarDecl 0x143925070 <col:40, col:44> col:44 invalid MyFlags 'int'   `-CompoundStmt 0x14393f3c0 <line:3:1, line:26:1>     |-DeclStmt 0x1439252e0 <line:4:3, col:14>     | `-VarDecl 0x143925258 <col:3, col:13> col:7 used error 'int' cinit     |   `-IntegerLiteral 0x1439252c0 <col:13> 'int' 1     |-CallExpr 0x143925518 <line:5:3, col:19> 'int'     | |-ImplicitCastExpr 0x143925500 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x143925450 <col:3> 'int ()' Function 0x143925398 'DBUG_ENTER' 'int ()'     | `-ImplicitCastExpr 0x143925540 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1439254b0 <col:14> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14393e758 <line:6:3, line:7:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14393e6b8 <line:6:3> 'int ()' Function 0x14393e600 'DBUG_PRINT' 'int ()'     | |-StringLiteral 0x14393e6d8 <col:14> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x14393e6f8 <line:7:6> 'const char *' lvalue ParmVar 0x143924ed8 'org_name' 'const char *'     | |-DeclRefExpr 0x14393e718 <col:15> 'const char *' lvalue ParmVar 0x143924f58 'tmp_name' 'const char *'     | `-RecoveryExpr 0x14393e738 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14393e9d8 <line:9:3, line:10:10>     | |-BinaryOperator 0x14393e950 <line:9:7, col:48> 'int' contains-errors '<'     | | |-CallExpr 0x14393e8f8 <col:7, col:44> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14393e878 <col:7> 'int ()' Function 0x14393e7c0 'my_copystat' 'int ()'     | | | |-DeclRefExpr 0x14393e898 <col:19> 'const char *' lvalue ParmVar 0x143924ed8 'org_name' 'const char *'     | | | |-DeclRefExpr 0x14393e8b8 <col:28> 'const char *' lvalue ParmVar 0x143924f58 'tmp_name' 'const char *'     | | | `-RecoveryExpr 0x14393e8d8 <col:37> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14393e930 <col:48> 'int' 0     | `-GotoStmt 0x14393e9c0 <line:10:5, col:10> 'end' 0x14393e970     |-IfStmt 0x14393f0a8 <line:11:3, line:19:12> has_else     | |-BinaryOperator 0x14393ea70 <line:11:7, col:17> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14393e9f8 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14393ea50 <col:17> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x14393eed8 <line:12:3, line:17:3>     | | |-DeclStmt 0x14393eb58 <line:13:5, col:60>     | | | `-VarDecl 0x14393eaf0 <col:5, col:10> col:10 invalid name_buff 'char'     | | |-CallExpr 0x14393ecd0 <line:14:5, col:65> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14393ec50 <col:5> 'int ()' Function 0x14393eb98 'my_create_backup_name' 'int ()'     | | | |-RecoveryExpr 0x14393ec70 <col:27> '<dependent type>' contains-errors lvalue     | | | |-DeclRefExpr 0x14393ec90 <col:38> 'const char *' lvalue ParmVar 0x143924ed8 'org_name' 'const char *'     | | | `-RecoveryExpr 0x14393ecb0 <col:48> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x14393eeb8 <line:15:5, line:16:12>     | |   |-CallExpr 0x14393ee68 <line:15:9, col:47> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x14393ede8 <col:9> 'int ()' Function 0x14393ed30 'my_rename' 'int ()'     | |   | |-DeclRefExpr 0x14393ee08 <col:19> 'const char *' lvalue ParmVar 0x143924ed8 'org_name' 'const char *'     | |   | |-RecoveryExpr 0x14393ee28 <col:29> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x14393ee48 <col:40> '<dependent type>' contains-errors lvalue     | |   `-GotoStmt 0x14393eea0 <line:16:7, col:12> 'end' 0x14393e970     | `-IfStmt 0x14393f088 <line:18:8, line:19:12>     |   |-CallExpr 0x14393f040 <line:18:12, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14393efe0 <col:12> 'int ()' Function 0x14393ef28 'my_delete' 'int ()'     |   | |-DeclRefExpr 0x14393f000 <col:22> 'const char *' lvalue ParmVar 0x143924ed8 'org_name' 'const char *'     |   | `-RecoveryExpr 0x14393f020 <col:32> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14393f070 <line:19:7, col:12> 'end' 0x14393e970     |-IfStmt 0x14393f1a8 <line:20:3, line:21:10>     | |-CallExpr 0x14393f158 <line:20:7, col:42> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14393f0d8 <col:7> 'int ()' Function 0x14393ed30 'my_rename' 'int ()'     | | |-DeclRefExpr 0x14393f0f8 <col:17> 'const char *' lvalue ParmVar 0x143924f58 'tmp_name' 'const char *'     | | |-DeclRefExpr 0x14393f118 <col:26> 'const char *' lvalue ParmVar 0x143924ed8 'org_name' 'const char *'     | | `-RecoveryExpr 0x14393f138 <col:35> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x14393f190 <line:21:5, col:10> 'end' 0x14393e970     |-BinaryOperator 0x14393f208 <line:23:3, col:9> 'int' '='     | |-DeclRefExpr 0x14393f1c8 <col:3> 'int' lvalue Var 0x143925258 'error' 'int'     | `-IntegerLiteral 0x14393f1e8 <col:9> 'int' 0     `-LabelStmt 0x14393f3a0 <line:24:1, line:25:20> 'end'       `-CallExpr 0x14393f360 <col:3, col:20> 'int'         |-ImplicitCastExpr 0x14393f348 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14393f308 <col:3> 'int ()' Function 0x14393f250 'DBUG_RETURN' 'int ()'         `-ImplicitCastExpr 0x14393f388 <col:15> 'int' <LValueToRValue>           `-DeclRefExpr 0x14393f328 <col:15> 'int' lvalue Var 0x143925258 'error' 'int' ","21247":"`-FunctionDecl 0x12a928318  line:1:1 invalid imapx_server_info_changed_cb 'int (int *, int *, int)'   |-ParmVarDecl 0x12a928128 <col:31, col:50> col:50 invalid summary 'int *'   |-ParmVarDecl 0x12a9281a8 <line:2:10, col:28> col:28 invalid info 'int *'   |-ParmVarDecl 0x12a928228 <line:3:10, col:19> col:19 invalid user_data 'int'   `-CompoundStmt 0x12a941c10 <line:4:1, line:16:1>     |-CallExpr 0x12a928650 <line:7:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a928570 <col:2> 'int ()' Function 0x12a9284b8 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x12a928630 <col:20, col:28> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12a928590 <col:20> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a928610 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12a928770 <line:8:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a928678 <col:2> 'int ()' Function 0x12a9284b8 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x12a928750 <col:20, col:41> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12a928710 <col:20> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a928730 <col:41> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12a941bf0 <line:11:2, line:15:2>       |-CallExpr 0x12a9418f8 <line:11:6, col:34> '<dependent type>' contains-errors       | |-DeclRefExpr 0x12a9418b8 <col:6> 'int ()' Function 0x12a941800 'camel_message_info_uid' 'int ()'       | `-RecoveryExpr 0x12a9418d8 <col:30> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12a941be0 <col:37, line:15:2> ","21127":"`-FunctionDecl 0x12680de88  line:1:1 invalid rsCStrExtendBuf 'int (int *, int)'   |-ParmVarDecl 0x12680dd28 <col:17, col:25> col:25 referenced invalid pThis 'int *'   |-ParmVarDecl 0x12680dda8 <col:32, col:39> col:39 invalid iMinNeeded 'int'   `-CompoundStmt 0x126124000 <line:2:1, line:23:1>     |-DeclStmt 0x12680dfc0 <line:3:2, col:16>     | `-VarDecl 0x12680df58 <col:2, col:9> col:9 used pNewBuf 'char *'     |-DeclStmt 0x12680e058 <line:4:2, col:25>     | `-VarDecl 0x12680dff0 <col:2, col:17> col:17 used iNewSize 'unsigned short'     |-IfStmt 0x12680e340 <line:8:2, line:13:2> has_else     | |-BinaryOperator 0x12680e0e8 <line:8:5, col:18> 'int' contains-errors '>'     | | |-RecoveryExpr 0x12680e070 <col:5> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12680e0c8 <col:18> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12680e1d8 <col:48, line:11:2>     | `-CompoundStmt 0x12680e328 <col:9, line:13:2>     |   `-BinaryOperator 0x12680e308 <line:12:3, col:32> 'unsigned short' contains-errors '='     |     |-DeclRefExpr 0x12680e1e8 <col:3> 'unsigned short' lvalue Var 0x12680dff0 'iNewSize' 'unsigned short'     |     `-BinaryOperator 0x12680e2e8 <col:14, col:32> '<dependent type>' contains-errors '+'     |       |-CXXDependentScopeMemberExpr 0x12680e228 <col:14, col:21> '<dependent type>' contains-errors lvalue ->iBufSize     |       | `-RecoveryExpr 0x12680e208 <col:14> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x12680e2c8 <col:32> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x126123c00 <line:14:2, col:21> 'unsigned short' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x12680e370 <col:2> 'unsigned short' lvalue Var 0x12680dff0 'iNewSize' 'unsigned short'     | `-CXXDependentScopeMemberExpr 0x12680e3b0 <col:14, col:21> '<dependent type>' contains-errors lvalue ->iBufSize     |   `-RecoveryExpr 0x12680e390 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126123e98 <line:18:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x126123e30 <col:2, col:9> '<dependent type>' contains-errors lvalue ->iBufSize     | | `-RecoveryExpr 0x126123e08 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x126123de8 <col:2> 'int *' lvalue ParmVar 0x12680dd28 'pThis' 'int *'     | `-DeclRefExpr 0x126123e78 <col:20> 'unsigned short' lvalue Var 0x12680dff0 'iNewSize' 'unsigned short'     |-BinaryOperator 0x126123f68 <line:19:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x126123f00 <col:2, col:9> '<dependent type>' contains-errors lvalue ->pBuf     | | `-RecoveryExpr 0x126123ed8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x126123eb8 <col:2> 'int *' lvalue ParmVar 0x12680dd28 'pThis' 'int *'     | `-DeclRefExpr 0x126123f48 <col:16> 'char *' lvalue Var 0x12680df58 'pNewBuf' 'char *'     `-LabelStmt 0x126123fe0 <line:21:1, col:12> 'finalize_it'       `-NullStmt 0x126123f88 <col:12> ","20875":"`-FunctionDecl 0x13d941238  col:12 implicit used isspace 'int (int)' extern   |-ParmVarDecl 0x13d941338 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x13d9412e0 <<invalid sloc>> Implicit 929   |-NoThrowAttr 0x13d9413a8 <col:12> Implicit   `-PureAttr 0x13d9413d0 <col:12> Implicit ","20989":"`-FunctionDecl 0x13d141950  col:6 implicit used realloc 'void *(void *, unsigned long)' extern   |-ParmVarDecl 0x13d142858 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13d1428c0 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x13d142800 <<invalid sloc>> Implicit 872   `-AllocSizeAttr 0x13d142938 <col:6> Implicit 2 ","20572":"`-FunctionDecl 0x157141db8  line:1:1 invalid xfs_bunmapi 'int (int *, struct xfs_inode *, int, int, int, int, int *, struct xfs_defer_ops *, int *)'   |-ParmVarDecl 0x157128128 <line:2:2, col:16> col:16 invalid tp 'int *'   |-ParmVarDecl 0x157128718 <line:3:2, col:20> col:20 used ip 'struct xfs_inode *'   |-ParmVarDecl 0x157128798 <line:4:2, col:17> col:17 invalid bno 'int'   |-ParmVarDecl 0x157141818 <line:5:2, col:17> col:17 invalid len 'int'   |-ParmVarDecl 0x157141898 <line:6:2, col:8> col:8 used flags 'int'   |-ParmVarDecl 0x157141918 <line:7:2, col:16> col:16 invalid nexts 'int'   |-ParmVarDecl 0x157141998 <line:8:2, col:18> col:18 invalid firstblock 'int *'   |-ParmVarDecl 0x157141b68 <line:9:2, col:24> col:24 used dfops 'struct xfs_defer_ops *'   |-ParmVarDecl 0x157141be8 <line:10:2, col:9> col:9 used done 'int *'   `-CompoundStmt 0x1571423b0 <line:11:1, line:18:1>     |-DeclStmt 0x157141f28 <line:12:2, col:13>     | `-VarDecl 0x157141ec0 <col:2, col:8> col:8 used error 'int'     |-BinaryOperator 0x157142258 <line:14:2, line:15:9> 'int' contains-errors '='     | |-DeclRefExpr 0x157141f40 <line:14:2> 'int' lvalue Var 0x157141ec0 'error' 'int'     | `-CallExpr 0x1571421f8 <col:10, line:15:9> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1571420c0 <line:14:10> 'int ()' Function 0x157142008 '__xfs_bunmapi' 'int ()'     |   |-RecoveryExpr 0x1571420e0 <col:24> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x157142100 <col:28> 'struct xfs_inode *' lvalue ParmVar 0x157128718 'ip' 'struct xfs_inode *'     |   |-RecoveryExpr 0x157142120 <col:32> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x157142160 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x157142140 <col:38> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x157142178 <col:43> 'int' lvalue ParmVar 0x157141898 'flags' 'int'     |   |-RecoveryExpr 0x157142198 <col:50> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1571421b8 <col:57> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1571421d8 <line:15:4> 'struct xfs_defer_ops *' lvalue ParmVar 0x157141b68 'dfops' 'struct xfs_defer_ops *'     |-BinaryOperator 0x157142348 <line:16:2, col:19> 'int' contains-errors '='     | |-UnaryOperator 0x1571422b0 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x157142298 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x157142278 <col:3> 'int *' lvalue ParmVar 0x157141be8 'done' 'int *'     | `-ParenExpr 0x157142328 <col:10, col:19> 'int' contains-errors     |   `-BinaryOperator 0x157142308 <col:11, col:18> 'int' contains-errors '=='     |     |-RecoveryExpr 0x1571422c8 <col:11> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1571422e8 <col:18> 'int' 0     `-ReturnStmt 0x1571423a0 <line:17:2, col:9>       `-ImplicitCastExpr 0x157142388 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x157142368 <col:9> 'int' lvalue Var 0x157141ec0 'error' 'int' ","20357":"`-FunctionDecl 0x1239418d8  line:1:12 invalid hclge_tm_q_to_qs_map_cfg 'int (struct hclge_dev *, int, int)' static   |-ParmVarDecl 0x123928648 <col:37, col:55> col:55 used hdev 'struct hclge_dev *'   |-ParmVarDecl 0x1239286e0 <line:2:9, col:13> col:13 invalid q_id 'int'   |-ParmVarDecl 0x123928760 <col:19, col:23> col:23 invalid qs_id 'int'   `-CompoundStmt 0x1239426a8 <line:3:1, line:15:1>     |-DeclStmt 0x123941b88 <line:4:2, col:37>     | |-RecordDecl 0x123941998 <col:2, col:9> col:9 struct hclge_nq_to_qs_link_cmd     | `-VarDecl 0x123941b08 <col:2, col:34> col:34 used map 'struct hclge_nq_to_qs_link_cmd *'     |-DeclStmt 0x123941d18 <line:5:2, col:24>     | |-RecordDecl 0x123941ba0 <col:2, col:9> col:9 struct hclge_desc     | `-VarDecl 0x123941c98 <col:2, col:20> col:20 invalid desc 'struct hclge_desc'     |-CallExpr 0x123941f90 <line:7:2, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123941e90 <col:2> 'int ()' Function 0x123941dd8 'hclge_cmd_setup_basic_desc' 'int ()'     | |-UnaryOperator 0x123941ed0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x123941eb0 <col:30> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x123941f50 <col:36> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x123941f70 <col:64> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x123942100 <line:9:2, col:47> 'struct hclge_nq_to_qs_link_cmd *' contains-errors '='     | |-DeclRefExpr 0x123941fc8 <col:2> 'struct hclge_nq_to_qs_link_cmd *' lvalue Var 0x123941b08 'map' 'struct hclge_nq_to_qs_link_cmd *'     | `-CStyleCastExpr 0x1239420d8 <col:8, col:47> 'struct hclge_nq_to_qs_link_cmd *' contains-errors <Dependent>     |   `-CXXDependentScopeMemberExpr 0x123942008 <col:42, col:47> '<dependent type>' contains-errors lvalue .data     |     `-RecoveryExpr 0x123941fe8 <col:42> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1239422c8 <line:11:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x123942158 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x123942120 <col:2> 'struct hclge_nq_to_qs_link_cmd *' lvalue Var 0x123941b08 'map' 'struct hclge_nq_to_qs_link_cmd *'     | `-CallExpr 0x1239422a0 <col:15, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x123942260 <col:15> 'int ()' Function 0x1239421a8 'cpu_to_le16' 'int ()'     |   `-RecoveryExpr 0x123942280 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x123942470 <line:12:2, col:63> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x123942320 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1239422e8 <col:2> 'struct hclge_nq_to_qs_link_cmd *' lvalue Var 0x123941b08 'map' 'struct hclge_nq_to_qs_link_cmd *'     | `-CallExpr 0x123942448 <col:17, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x123942348 <col:17> 'int ()' Function 0x1239421a8 'cpu_to_le16' 'int ()'     |   `-BinaryOperator 0x123942428 <col:29, col:37> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x123942368 <col:29> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x123942408 <col:37> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x123942698 <line:14:2, col:43>       `-CallExpr 0x123942660 <col:9, col:43> '<dependent type>' contains-errors         |-DeclRefExpr 0x123942570 <col:9> 'int ()' Function 0x1239424b8 'hclge_cmd_send' 'int ()'         |-UnaryOperator 0x1239425f0 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x1239425c8 <col:25, col:31> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x123942590 <col:25> 'struct hclge_dev *' lvalue ParmVar 0x123928648 'hdev' 'struct hclge_dev *'         |-UnaryOperator 0x123942628 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x123942608 <col:36> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x123942640 <col:42> 'int' 1 ","20236":"`-FunctionDecl 0x14d140c10  line:1:13 nfs4_xdr_enc_fs_locations 'void (struct rpc_rqst *, struct xdr_stream *, const void *)' static   |-ParmVarDecl 0x14d128648 <col:39, col:56> col:56 used req 'struct rpc_rqst *'   |-ParmVarDecl 0x14d140a28 <line:2:11, col:30> col:30 used xdr 'struct xdr_stream *'   |-ParmVarDecl 0x14d140ad8 <line:3:11, col:23> col:23 used data 'const void *'   `-CompoundStmt 0x14d809690 <line:4:1, line:29:1>     |-DeclStmt 0x14d140f58 <line:5:2, col:49>     | |-RecordDecl 0x14d140d18 <col:8, col:15> col:15 struct nfs4_fs_locations_arg     | `-VarDecl 0x14d140e88 <col:2, col:45> col:38 used args 'const struct nfs4_fs_locations_arg *' cinit     |   `-ImplicitCastExpr 0x14d140f28 <col:45> 'const struct nfs4_fs_locations_arg *' <BitCast>     |     `-ImplicitCastExpr 0x14d140f10 <col:45> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x14d140ef0 <col:45> 'const void *' lvalue ParmVar 0x14d140ad8 'data' 'const void *'     |-DeclStmt 0x14d141360 <line:6:2, line:8:3>     | |-RecordDecl 0x14d140f70 <line:6:2, col:9> col:9 struct compound_hdr     | `-VarDecl 0x14d141068 <col:2, col:22> col:22 invalid hdr 'struct compound_hdr'     |-CallExpr 0x14d1414f0 <line:11:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d141458 <col:2> 'int ()' Function 0x14d1413a0 'encode_compound_hdr' 'int ()'     | |-DeclRefExpr 0x14d141478 <col:22> 'struct xdr_stream *' lvalue ParmVar 0x14d140a28 'xdr' 'struct xdr_stream *'     | |-DeclRefExpr 0x14d141498 <col:27> 'struct rpc_rqst *' lvalue ParmVar 0x14d128648 'req' 'struct rpc_rqst *'     | `-UnaryOperator 0x14d1414d8 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14d1414b8 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d1416f8 <line:12:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d141608 <col:2> 'int ()' Function 0x14d141550 'encode_sequence' 'int ()'     | |-DeclRefExpr 0x14d141628 <col:18> 'struct xdr_stream *' lvalue ParmVar 0x14d140a28 'xdr' 'struct xdr_stream *'     | |-UnaryOperator 0x14d1416a8 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14d141680 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14d141648 <col:24> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     | `-UnaryOperator 0x14d1416e0 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14d1416c0 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d809128 <line:13:2, line:24:2> has_else     | |-RecoveryExpr 0x14d141768 <line:13:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d141730 <col:6> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     | |-CompoundStmt 0x14d808c60 <col:23, line:19:2>     | | |-CallExpr 0x14d141948 <line:14:3, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14d141870 <col:3> 'int ()' Function 0x14d1417b8 'encode_putfh' 'int ()'     | | | |-DeclRefExpr 0x14d141890 <col:16> 'struct xdr_stream *' lvalue ParmVar 0x14d140a28 'xdr' 'struct xdr_stream *'     | | | |-RecoveryExpr 0x14d1418e8 <col:21, col:27> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14d1418b0 <col:21> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     | | | `-UnaryOperator 0x14d141930 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x14d141910 <col:32> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x14d8089b8 <line:16:3, col:47> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14d8088e0 <col:3> 'int ()' Function 0x14d808828 'encode_fs_locations' 'int ()'     | | | |-DeclRefExpr 0x14d808900 <col:23> 'struct xdr_stream *' lvalue ParmVar 0x14d140a28 'xdr' 'struct xdr_stream *'     | | | |-RecoveryExpr 0x14d808958 <col:28, col:34> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14d808920 <col:28> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     | | | `-UnaryOperator 0x14d8089a0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x14d808980 <col:44> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x14d808c40 <line:17:3, line:18:42>     | |   |-RecoveryExpr 0x14d808a28 <line:17:7, col:13> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14d8089f0 <col:7> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     | |   `-CallExpr 0x14d808c08 <line:18:4, col:42> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x14d808b30 <col:4> 'int ()' Function 0x14d808a78 'encode_renew' 'int ()'     | |     |-DeclRefExpr 0x14d808b50 <col:17> 'struct xdr_stream *' lvalue ParmVar 0x14d140a28 'xdr' 'struct xdr_stream *'     | |     |-RecoveryExpr 0x14d808ba8 <col:22, col:28> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x14d808b70 <col:22> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     | |     `-UnaryOperator 0x14d808bf0 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | |       `-RecoveryExpr 0x14d808bd0 <col:39> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d809100 <line:19:9, line:24:2>     |   |-CallExpr 0x14d808d60 <line:20:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d808c88 <col:3> 'int ()' Function 0x14d1417b8 'encode_putfh' 'int ()'     |   | |-DeclRefExpr 0x14d808ca8 <col:16> 'struct xdr_stream *' lvalue ParmVar 0x14d140a28 'xdr' 'struct xdr_stream *'     |   | |-RecoveryExpr 0x14d808d00 <col:21, col:27> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14d808cc8 <col:21> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     |   | `-UnaryOperator 0x14d808d48 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14d808d28 <col:36> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14d808f50 <line:21:3, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d808e78 <col:3> 'int ()' Function 0x14d808dc0 'encode_lookup' 'int ()'     |   | |-DeclRefExpr 0x14d808e98 <col:17> 'struct xdr_stream *' lvalue ParmVar 0x14d140a28 'xdr' 'struct xdr_stream *'     |   | |-RecoveryExpr 0x14d808ef0 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14d808eb8 <col:22> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     |   | `-UnaryOperator 0x14d808f38 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14d808f18 <col:35> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14d8090c8 <line:23:3, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d808ff0 <col:3> 'int ()' Function 0x14d808828 'encode_fs_locations' 'int ()'     |     |-DeclRefExpr 0x14d809010 <col:23> 'struct xdr_stream *' lvalue ParmVar 0x14d140a28 'xdr' 'struct xdr_stream *'     |     |-RecoveryExpr 0x14d809068 <col:28, col:34> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14d809030 <col:28> 'const struct nfs4_fs_locations_arg *' lvalue Var 0x14d140e88 'args' 'const struct nfs4_fs_locations_arg *'     |     `-UnaryOperator 0x14d8090b0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14d809090 <col:44> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14d809668 <line:28:2, col:18> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d809610 <col:2> 'int ()' Function 0x14d809558 'encode_nops' 'int ()'       `-UnaryOperator 0x14d809650 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14d809630 <col:15> '<dependent type>' contains-errors lvalue ","20305":"`-FunctionDecl 0x1209419d8  line:1:17 invalid cli_connect_nb_recv 'int (struct tevent_req *, struct cli_state **)' static   |-ParmVarDecl 0x120928668 <col:37, col:56> col:56 used req 'struct tevent_req *'   |-ParmVarDecl 0x1209418b8 <line:2:9, col:28> col:28 used pcli 'struct cli_state **'   `-CompoundStmt 0x1209424d8 <line:3:1, line:13:1>     |-DeclStmt 0x120941e18 <line:4:2, line:5:36>     | |-RecordDecl 0x120941a90 <line:4:2, col:9> col:9 struct cli_connect_nb_state     | `-VarDecl 0x120941bf8 <col:2, col:31> col:31 used state 'struct cli_connect_nb_state *'     |-IfStmt 0x120942170 <line:8:2, line:10:2>     | |-CallExpr 0x120942098 <line:8:6, col:40> 'int'     | | |-ImplicitCastExpr 0x120942080 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x120941f10 <col:6> 'int ()' Function 0x120941e58 'tevent_req_is_nterror' 'int ()'     | | |-ImplicitCastExpr 0x1209420c8 <col:28> 'struct tevent_req *' <LValueToRValue>     | | | `-DeclRefExpr 0x120941f30 <col:28> 'struct tevent_req *' lvalue ParmVar 0x120928668 'req' 'struct tevent_req *'     | | `-UnaryOperator 0x120942030 <col:33, col:34> 'struct cli_connect_nb_state **' prefix '&' cannot overflow     | |   `-DeclRefExpr 0x120941fb0 <col:34> 'struct cli_connect_nb_state *' lvalue Var 0x120941bf8 'state' 'struct cli_connect_nb_state *'     | `-CompoundStmt 0x120942158 <col:43, line:10:2>     |   `-ReturnStmt 0x120942148 <line:9:3, col:10>     |     `-ImplicitCastExpr 0x120942130 <col:10> 'int' <PointerToIntegral>     |       `-ImplicitCastExpr 0x120942118 <col:10> 'struct cli_connect_nb_state *' <LValueToRValue>     |         `-DeclRefExpr 0x1209420f8 <col:10> 'struct cli_connect_nb_state *' lvalue Var 0x120941bf8 'state' 'struct cli_connect_nb_state *'     |-BinaryOperator 0x120942470 <line:11:2, col:39> 'struct cli_state *' contains-errors '='     | |-UnaryOperator 0x120942408 <col:2, col:3> 'struct cli_state *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1209423f0 <col:3> 'struct cli_state **' <LValueToRValue>     | |   `-DeclRefExpr 0x120942190 <col:3> 'struct cli_state **' lvalue ParmVar 0x1209418b8 'pcli' 'struct cli_state **'     | `-CallExpr 0x120942440 <col:10, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1209422c0 <col:10> 'int ()' Function 0x120942208 'talloc_move' 'int ()'     |   |-RecoveryExpr 0x120942420 <col:22> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x120942358 <col:28, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x120942330 <col:29, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1209422f8 <col:29> 'struct cli_connect_nb_state *' lvalue Var 0x120941bf8 'state' 'struct cli_connect_nb_state *'     `-ReturnStmt 0x1209424c8 <line:12:2, col:9>       `-RecoveryExpr 0x1209424a8 <col:9> '<dependent type>' contains-errors lvalue ","20641":"`-FunctionDecl 0x123928ba8  line:1:1 invalid on_handle_get_password 'int (int *, int *, const char *, int)'   |-ParmVarDecl 0x123928928 <col:25, col:48> col:48 invalid interface 'int *'   |-ParmVarDecl 0x1239289a8 <line:2:25, col:48> col:48 invalid invocation 'int *'   |-ParmVarDecl 0x123928a28 <line:3:25, col:48> col:48 used id 'const char *'   |-ParmVarDecl 0x123928aa8 <line:4:25, col:48> col:48 invalid user_data 'int'   `-CompoundStmt 0x124009ed8 <line:5:1, line:51:1>     |-DeclStmt 0x123928d68 <line:11:3, col:18>     | `-VarDecl 0x123928d00 <col:3, col:10> col:10 used password 'char *'     |-BinaryOperator 0x123928df8 <line:15:3, col:14> 'char *' contains-errors '='     | |-DeclRefExpr 0x123928d80 <col:3> 'char *' lvalue Var 0x123928d00 'password' 'char *'     | `-RecoveryExpr 0x123928dd8 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x124009030 <line:27:3, line:31:5>     | |-RecoveryExpr 0x124008e70 <line:27:7, col:22> '_Bool' contains-errors     | `-CompoundStmt 0x124009018 <line:28:5, line:31:5>     |   `-GotoStmt 0x124009000 <line:30:7, col:12> 'out' 0x124008fb0     |-IfStmt 0x124009558 <line:33:3, line:41:5>     | |-RecoveryExpr 0x124009218 <line:33:7, col:55> '_Bool' contains-errors     | `-CompoundStmt 0x124009540 <line:34:5, line:41:5>     |   `-GotoStmt 0x124009528 <line:40:7, col:12> 'out' 0x124008fb0     |-CallExpr 0x1240096d8 <line:43:3, col:76> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124009658 <col:3> 'int ()' Function 0x1240095a0 'goa_password_based_complete_get_password' 'int ()'     | |-RecoveryExpr 0x124009678 <col:45> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x124009698 <col:56> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x1240096b8 <col:68> 'char *' lvalue Var 0x123928d00 'password' 'char *'     `-LabelStmt 0x124009c98 <line:45:2, line:46:19> 'out'       `-CallExpr 0x124009c58 <col:3, col:19> 'int'         |-ImplicitCastExpr 0x124009c40 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x124009c00 <col:3> 'int ()' Function 0x124009738 'g_free' 'int ()'         `-ImplicitCastExpr 0x124009c80 <col:11> 'char *' <LValueToRValue>           `-DeclRefExpr 0x124009c20 <col:11> 'char *' lvalue Var 0x123928d00 'password' 'char *' ","21054":"`-FunctionDecl 0x126827308  col:13 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x126827408 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1268273b0 <<invalid sloc>> Implicit 950 ","20468":"`-FunctionDecl 0x12c80de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x12c80dd58 <col:6> col:6 used MessageCompressorManager 'int'   |-ParmVarDecl 0x12c80dcd8 <col:32> col:32 MessageSizeTooSmall 'int'   `-CompoundStmt 0x12c826c80 <col:53, line:19:1>     |-DeclStmt 0x12c80e168 <line:2:5, col:36>     | `-VarDecl 0x12c80df50 <col:5, col:35> col:10 used registry 'int' auto cinit     |   `-CallExpr 0x12c80e148 <col:21, col:35> 'int'     |     `-ImplicitCastExpr 0x12c80e130 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12c80e0e0 <col:21> 'int ()' Function 0x12c80e028 'buildRegistry' 'int ()'     |-ImplicitCastExpr 0x12c80e1a0 <line:3:5> 'int' <LValueToRValue>     | `-DeclRefExpr 0x12c80e180 <col:5> 'int' lvalue ParmVar 0x12c80dd58 'MessageCompressorManager' 'int'     |-CallExpr 0x12c80e340 <col:30, col:51> 'int'     | |-ImplicitCastExpr 0x12c80e328 <col:30> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c80e298 <col:30> 'int ()' Function 0x12c80e1e0 'compManager' 'int ()'     | `-UnaryOperator 0x12c80e310 <col:42, col:43> 'int *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x12c80e2b8 <col:43> 'int' lvalue Var 0x12c80df50 'registry' 'int'     |-DeclStmt 0x12c826620 <line:5:5, col:41>     | `-VarDecl 0x12c80e380 <col:5, col:29> col:10 used badMessageBuffer 'int' auto cinit     |   `-RecoveryExpr 0x12c826600 <col:29> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12c826668 <line:6:5> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12c826af0 <line:17:5, col:96>     | `-VarDecl 0x12c8268c8 <col:5, col:10> col:10 used status 'int' auto     `-CallExpr 0x12c826c40 <line:18:5, col:25> 'int'       |-ImplicitCastExpr 0x12c826c28 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12c826be8 <col:5> 'int ()' Function 0x12c826b30 'ASSERT_NOT_OK' 'int ()'       `-ImplicitCastExpr 0x12c826c68 <col:19> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c826c08 <col:19> 'int' lvalue Var 0x12c8268c8 'status' 'int' ","20402":"`-FunctionDecl 0x1260270f8  col:2 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x1260271f8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x1260271a0 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x126027268 <col:2> Implicit ","20839":"`-FunctionDecl 0x15800e358  line:1:12 hci_sock_release 'int (struct socket *)' static   |-ParmVarDecl 0x15800e248 <col:29, col:44> col:44 used sock 'struct socket *'   `-CompoundStmt 0x1588093f8 <line:2:1, line:30:1>     |-DeclStmt 0x158026898 <line:3:2, col:28>     | |-RecordDecl 0x158026650 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x1580267b8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x158026858 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158026820 <col:20> 'struct socket *' lvalue ParmVar 0x15800e248 'sock' 'struct socket *'     |-DeclStmt 0x158026a98 <line:4:2, col:22>     | |-RecordDecl 0x1580268b0 <col:2, col:9> col:9 struct hci_dev     | `-VarDecl 0x158026a18 <col:2, col:18> col:18 used hdev 'struct hci_dev *'     |-CallExpr 0x158026ce8 <line:6:2, col:24> 'int' contains-errors     | |-ImplicitCastExpr 0x158026cd0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x158026be0 <col:2> 'int ()' Function 0x158026b28 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x158026d20 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x158026c40 <col:9> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x158026d38 <col:16> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x158026c60 <col:16> 'struct socket *' lvalue ParmVar 0x15800e248 'sock' 'struct socket *'     | `-ImplicitCastExpr 0x158026d50 <col:22> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x158026c80 <col:22> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     |-IfStmt 0x158026de8 <line:8:2, line:9:10>     | |-UnaryOperator 0x158026da0 <line:8:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x158026d88 <col:7> 'struct sock *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x158026d68 <col:7> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     | `-ReturnStmt 0x158026dd8 <line:9:3, col:10>     |   `-IntegerLiteral 0x158026db8 <col:10> 'int' 0     |-BinaryOperator 0x158026fc8 <line:11:2, col:21> 'struct hci_dev *' contains-errors '='     | |-DeclRefExpr 0x158026e08 <col:2> 'struct hci_dev *' lvalue Var 0x158026a18 'hdev' 'struct hci_dev *'     | `-RecoveryExpr 0x158026fa0 <col:9, col:21> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x158026f60 <col:9, col:18> 'int' contains-errors     |     |-ImplicitCastExpr 0x158026f48 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x158026f08 <col:9> 'int ()' Function 0x158026e50 'hci_pi' 'int ()'     |     `-ImplicitCastExpr 0x158026f88 <col:16> 'struct sock *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x158026f28 <col:16> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     |-IfStmt 0x1580273b0 <line:13:2, line:14:30>     | |-BinaryOperator 0x1580271d8 <line:13:6, col:29> 'int' contains-errors '=='     | | |-RecoveryExpr 0x158027190 <col:6, col:18> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x158027150 <col:6, col:15> 'int' contains-errors     | | |   |-ImplicitCastExpr 0x158027138 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x158026fe8 <col:6> 'int ()' Function 0x158026e50 'hci_pi' 'int ()'     | | |   `-ImplicitCastExpr 0x158027178 <col:13> 'struct sock *' contains-errors <LValueToRValue>     | | |     `-DeclRefExpr 0x158027008 <col:13> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     | | `-RecoveryExpr 0x1580271b8 <col:29> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x158027388 <line:14:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1580272d8 <col:3> 'int ()' Function 0x158027220 'atomic_dec' 'int ()'     |   `-UnaryOperator 0x158027370 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x158027350 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x158027588 <line:16:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1580274b0 <col:2> 'int ()' Function 0x1580273f8 'bt_sock_unlink' 'int ()'     | |-UnaryOperator 0x158027570 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x158027550 <col:18> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x158027500 <col:31> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     |-IfStmt 0x158808e58 <line:18:2, line:21:2>     | |-ImplicitCastExpr 0x1580275d8 <line:18:6> 'struct hci_dev *' <LValueToRValue>     | | `-DeclRefExpr 0x1580275b8 <col:6> 'struct hci_dev *' lvalue Var 0x158026a18 'hdev' 'struct hci_dev *'     | `-CompoundStmt 0x158808e38 <col:12, line:21:2>     |   |-CallExpr 0x158808c98 <line:19:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x158808c00 <col:3> 'int ()' Function 0x158027220 'atomic_dec' 'int ()'     |   | `-UnaryOperator 0x158808c80 <col:14, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x158808c58 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x158808c20 <col:15> 'struct hci_dev *' lvalue Var 0x158026a18 'hdev' 'struct hci_dev *'     |   `-CallExpr 0x158808df8 <line:20:3, col:19> 'int'     |     |-ImplicitCastExpr 0x158808de0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x158808da0 <col:3> 'int ()' Function 0x158808ce8 'hci_dev_put' 'int ()'     |     `-ImplicitCastExpr 0x158808e20 <col:15> 'struct hci_dev *' <LValueToRValue>     |       `-DeclRefExpr 0x158808dc0 <col:15> 'struct hci_dev *' lvalue Var 0x158026a18 'hdev' 'struct hci_dev *'     |-CallExpr 0x158808fb0 <line:23:2, col:16> 'int' contains-errors     | |-ImplicitCastExpr 0x158808f98 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x158808f58 <col:2> 'int ()' Function 0x158808ea0 'sock_orphan' 'int ()'     | `-ImplicitCastExpr 0x158808fd8 <col:14> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x158808f78 <col:14> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     |-CallExpr 0x158809168 <line:25:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1588090d0 <col:2> 'int ()' Function 0x158809018 'skb_queue_purge' 'int ()'     | `-UnaryOperator 0x158809150 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x158809128 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1588090f0 <col:19> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     |-CallExpr 0x158809228 <line:26:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158809190 <col:2> 'int ()' Function 0x158809018 'skb_queue_purge' 'int ()'     | `-UnaryOperator 0x158809210 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1588091e8 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1588091b0 <col:19> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     |-CallExpr 0x158809388 <line:28:2, col:13> 'int' contains-errors     | |-ImplicitCastExpr 0x158809370 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x158809330 <col:2> 'int ()' Function 0x158809278 'sock_put' 'int ()'     | `-ImplicitCastExpr 0x1588093b0 <col:11> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x158809350 <col:11> 'struct sock *' contains-errors lvalue Var 0x1580267b8 'sk' 'struct sock *'     `-ReturnStmt 0x1588093e8 <line:29:2, col:9>       `-IntegerLiteral 0x1588093c8 <col:9> 'int' 0 ","20326":"`-FunctionDecl 0x14f928280  line:1:13 referenced invalid f_parser 'void (int *, void *)' static   |-ParmVarDecl 0x14f928128 <col:23, col:34> col:34 invalid L 'int *'   |-ParmVarDecl 0x14f9281a8 <col:37, col:43> col:43 used ud 'void *'   `-CompoundStmt 0x14f9432a8 <col:47, line:16:1>     |-DeclStmt 0x14f9283b8 <line:2:3, col:8>     | `-VarDecl 0x14f928350 <col:3, col:7> col:7 used i 'int'     |-DeclStmt 0x14f928788 <line:5:3, col:49>     | |-RecordDecl 0x14f928400 <col:3, col:10> col:10 struct SParser     | `-VarDecl 0x14f928568 <col:3, col:19> col:19 used p 'struct SParser *'     |-DeclStmt 0x14f941e10 <line:6:3, col:31>     | `-VarDecl 0x14f941800 <col:3, col:30> col:7 used c 'int' cinit     |   `-CallExpr 0x14f941de8 <col:11, col:30> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14f941948 <col:11> 'int ()' Function 0x14f941890 'luaZ_lookahead' 'int ()'     |     `-RecoveryExpr 0x14f941dc0 <col:26, col:29> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14f941968 <col:26> 'struct SParser *' lvalue Var 0x14f928568 'p' 'struct SParser *'     |-CallExpr 0x14f941f48 <line:7:3, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f941f08 <col:3> 'int ()' Function 0x14f941e50 'luaC_checkGC' 'int ()'     | `-RecoveryExpr 0x14f941f28 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14f943280 <line:15:3, col:13> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f943240 <col:3> 'int ()' Function 0x14f943188 'incr_top' 'int ()'       `-RecoveryExpr 0x14f943260 <col:12> '<dependent type>' contains-errors lvalue ","20681":"`-FunctionDecl 0x14c00a950  line:1:6 i915_gem_context_close 'void (struct drm_file *)'   |-ParmVarDecl 0x14c00a848 <col:29, col:46> col:46 used file 'struct drm_file *'   `-CompoundStmt 0x14c023528 <line:2:1, line:9:1>     |-DeclStmt 0x14c022e98 <line:3:2, col:61>     | |-RecordDecl 0x14c022c48 <col:2, col:9> col:9 struct drm_i915_file_private     | `-VarDecl 0x14c022db8 <col:2, col:50> col:32 used file_priv 'struct drm_i915_file_private *' cinit     |   `-RecoveryExpr 0x14c022e58 <col:44, col:50> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c022e20 <col:44> 'struct drm_file *' lvalue ParmVar 0x14c00a848 'file' 'struct drm_file *'     |-CallExpr 0x14c023108 <line:5:2, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c022fe0 <col:2> 'int ()' Function 0x14c022f28 'lockdep_assert_held' 'int ()'     | `-UnaryOperator 0x14c0230f0 <col:22, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14c0230a8 <col:23, col:48> '<dependent type>' contains-errors lvalue .struct_mutex     |     `-CXXDependentScopeMemberExpr 0x14c023060 <col:23, col:44> '<dependent type>' contains-errors lvalue ->drm     |       `-RecoveryExpr 0x14c023038 <col:23, col:34> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14c023000 <col:23> 'struct drm_i915_file_private *' contains-errors lvalue Var 0x14c022db8 'file_priv' 'struct drm_i915_file_private *'     |-CallExpr 0x14c023350 <line:7:2, col:65> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c023210 <col:2> 'int ()' Function 0x14c023158 'idr_for_each' 'int ()'     | |-UnaryOperator 0x14c023290 <col:15, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c023268 <col:16, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c023230 <col:16> 'struct drm_i915_file_private *' contains-errors lvalue Var 0x14c022db8 'file_priv' 'struct drm_i915_file_private *'     | |-RecoveryExpr 0x14c023310 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c023330 <col:61> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14c023500 <line:8:2, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x14c023468 <col:2> 'int ()' Function 0x14c0233b0 'idr_destroy' 'int ()'       `-UnaryOperator 0x14c0234e8 <col:14, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14c0234c0 <col:15, col:26> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14c023488 <col:15> 'struct drm_i915_file_private *' contains-errors lvalue Var 0x14c022db8 'file_priv' 'struct drm_i915_file_private *' ","21107":"`-FunctionDecl 0x140928238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x140928158 <col:8> col:8 EncryptedRecordTest 'int'   |-ParmVarDecl 0x1409280d8 <col:29> col:29 TestAllPaddingHandshake 'int'   `-CompoundStmt 0x140942c50 <col:54, line:9:1>     |-CallExpr 0x140928528 <line:2:3, col:19> 'int'     | |-ImplicitCastExpr 0x140928510 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x140928460 <col:3> 'int ()' Function 0x1409283a8 'addToQueue' 'int ()'     | `-ImplicitCastExpr 0x140928550 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1409284c0 <col:14> 'char[4]' lvalue \"STR\"     `-CallExpr 0x140942c28 <line:8:3, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x140942a90 <col:3> 'int ()' Function 0x1409429d8 'EXPECT_NO_THROW' 'int ()'       `-CallExpr 0x140942c00 <col:19, col:36> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x140942b98 <col:19, col:25> '<dependent type>' contains-errors lvalue .read         | `-RecoveryExpr 0x140942b78 <col:19> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x140942be0 <col:30> '<dependent type>' contains-errors lvalue ","20499":"`-FunctionDecl 0x15a00e358  line:1:12 hso_get_config_data 'int (struct usb_interface *)' static   |-ParmVarDecl 0x15a00e248 <col:32, col:54> col:54 used interface 'struct usb_interface *'   `-CompoundStmt 0x15b00a268 <line:2:1, line:72:1>     |-DeclStmt 0x15a026a48 <line:3:2, col:60>     | |-RecordDecl 0x15a026650 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x15a0267b8 <col:2, col:59> col:21 used usbdev 'struct usb_device *' cinit     |   `-ImplicitCastExpr 0x15a026a18 <col:30, col:59> 'struct usb_device *' <IntegralToPointer>     |     `-CallExpr 0x15a0269d8 <col:30, col:59> 'int'     |       |-ImplicitCastExpr 0x15a0269c0 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15a026950 <col:30> 'int ()' Function 0x15a026898 'interface_to_usbdev' 'int ()'     |       `-ImplicitCastExpr 0x15a026a00 <col:50> 'struct usb_interface *' <LValueToRValue>     |         `-DeclRefExpr 0x15a026970 <col:50> 'struct usb_interface *' lvalue ParmVar 0x15a00e248 'interface' 'struct usb_interface *'     |-IfStmt 0x15a026d20 <line:8:2, line:9:11>     | |-UnaryOperator 0x15a026c60 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15a026c48 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15a026c28 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a026d10 <line:9:3, col:11>     |   `-UnaryOperator 0x15a026cf8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15a026ce0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15a026cc0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a027550 <line:10:2, line:15:2>     | |-BinaryOperator 0x15a0272e0 <line:10:6, line:12:33> 'int' contains-errors '!='     | | |-CallExpr 0x15a027278 <line:10:6, line:12:28> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15a026e20 <line:10:6> 'int ()' Function 0x15a026d68 'usb_control_msg' 'int ()'     | | | |-DeclRefExpr 0x15a026e40 <col:22> 'struct usb_device *' lvalue Var 0x15a0267b8 'usbdev' 'struct usb_device *'     | | | |-CallExpr 0x15a0271f0 <col:30, col:55> 'int'     | | | | |-ImplicitCastExpr 0x15a0271d8 <col:30> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x15a026f40 <col:30> 'int ()' Function 0x15a026e88 'usb_rcvctrlpipe' 'int ()'     | | | | |-ImplicitCastExpr 0x15a027220 <col:46> 'struct usb_device *' <LValueToRValue>     | | | | | `-DeclRefExpr 0x15a026f60 <col:46> 'struct usb_device *' lvalue Var 0x15a0267b8 'usbdev' 'struct usb_device *'     | | | | `-IntegerLiteral 0x15a026f80 <col:54> 'int' 0     | | | |-IntegerLiteral 0x15a027000 <line:11:8> 'int' 134     | | | |-IntegerLiteral 0x15a027020 <col:14> 'int' 192     | | | |-IntegerLiteral 0x15a027040 <col:20> 'int' 0     | | | |-IntegerLiteral 0x15a027060 <col:23> 'int' 0     | | | |-RecoveryExpr 0x15a027238 <col:26> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x15a027098 <col:39> 'int' 17     | | | `-RecoveryExpr 0x15a027258 <line:12:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x15a027138 <col:33> 'int' 17     | `-CompoundStmt 0x15a027530 <col:39, line:15:2>     |   |-CallExpr 0x15a027460 <line:13:3, col:20> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a0273e0 <col:3> 'int ()' Function 0x15a027328 'kfree' 'int ()'     |   | `-RecoveryExpr 0x15a027440 <col:9> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x15a027520 <line:14:3, col:11>     |     `-UnaryOperator 0x15a027508 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x15a0274f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x15a0274d0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b009ae0 <line:18:2, line:21:2>     | |-BinaryOperator 0x15b009a00 <line:18:6, col:15> 'int' contains-errors '>'     | | |-RecoveryExpr 0x15a0275c8 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x15a027588 <col:15> 'int' 16     | `-CompoundStmt 0x15b009ac8 <col:19, line:21:2>     |   `-CallExpr 0x15b009aa0 <line:19:3, col:20> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15b009a20 <col:3> 'int ()' Function 0x15a027328 'kfree' 'int ()'     |     `-RecoveryExpr 0x15b009a80 <col:9> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x15b009b20 <line:23:2, line:62:2>       |-RecoveryExpr 0x15b009b00 <line:23:10, col:28> 'int' contains-errors       `-CompoundStmt 0x15b00a0f0 <col:31, line:62:2>         |-CaseStmt 0x15b009b80 <line:24:2, <invalid sloc>>         | |-ConstantExpr 0x15b009b68 <col:7> 'int'         | | `-IntegerLiteral 0x15b009b48 <col:7> 'int' 0         | `-NullStmt 0x15b009bc8 <<invalid sloc>>         |-BreakStmt 0x15b009bd0 <line:26:3>         |-CaseStmt 0x15b009c10 <line:27:2, <invalid sloc>>         | |-ConstantExpr 0x15b009bf8 <col:7> 'int'         | | `-IntegerLiteral 0x15b009bd8 <col:7> 'int' 1         | `-NullStmt 0x15b009c38 <<invalid sloc>>         |-BreakStmt 0x15b009c40 <line:29:3>         |-CaseStmt 0x15b009c80 <line:30:2, <invalid sloc>>         | |-ConstantExpr 0x15b009c68 <col:7> 'int'         | | `-IntegerLiteral 0x15b009c48 <col:7> 'int' 2         | `-NullStmt 0x15b009ca8 <<invalid sloc>>         |-BreakStmt 0x15b009cb0 <line:32:3>         |-CaseStmt 0x15b009cf0 <line:33:2, <invalid sloc>>         | |-ConstantExpr 0x15b009cd8 <col:7> 'int'         | | `-IntegerLiteral 0x15b009cb8 <col:7> 'int' 3         | `-NullStmt 0x15b009d18 <<invalid sloc>>         |-BreakStmt 0x15b009d20 <line:35:3>         |-CaseStmt 0x15b009d60 <line:36:2, <invalid sloc>>         | |-ConstantExpr 0x15b009d48 <col:7> 'int'         | | `-IntegerLiteral 0x15b009d28 <col:7> 'int' 4         | `-NullStmt 0x15b009d88 <<invalid sloc>>         |-BreakStmt 0x15b009d90 <line:38:3>         |-CaseStmt 0x15b009dd0 <line:39:2, <invalid sloc>>         | |-ConstantExpr 0x15b009db8 <col:7> 'int'         | | `-IntegerLiteral 0x15b009d98 <col:7> 'int' 5         | `-NullStmt 0x15b009df8 <<invalid sloc>>         |-BreakStmt 0x15b009e00 <line:41:3>         |-CaseStmt 0x15b009e40 <line:42:2, <invalid sloc>>         | |-ConstantExpr 0x15b009e28 <col:7> 'int'         | | `-IntegerLiteral 0x15b009e08 <col:7> 'int' 6         | `-NullStmt 0x15b009e68 <<invalid sloc>>         |-BreakStmt 0x15b009e70 <line:44:3>         |-CaseStmt 0x15b009eb0 <line:45:2, <invalid sloc>>         | |-ConstantExpr 0x15b009e98 <col:7> 'int'         | | `-IntegerLiteral 0x15b009e78 <col:7> 'int' 7         | `-NullStmt 0x15b009ed8 <<invalid sloc>>         |-BreakStmt 0x15b009ee0 <line:47:3>         |-CaseStmt 0x15b009f20 <line:48:2, <invalid sloc>>         | |-ConstantExpr 0x15b009f08 <col:7> 'int'         | | `-IntegerLiteral 0x15b009ee8 <col:7> 'int' 8         | `-NullStmt 0x15b009f48 <<invalid sloc>>         |-BreakStmt 0x15b009f50 <line:50:3>         |-CaseStmt 0x15b009f90 <line:51:2, <invalid sloc>>         | |-ConstantExpr 0x15b009f78 <col:7> 'int'         | | `-IntegerLiteral 0x15b009f58 <col:7> 'int' 9         | `-NullStmt 0x15b009fb8 <<invalid sloc>>         |-BreakStmt 0x15b009fc0 <line:53:3>         |-CaseStmt 0x15b00a000 <line:54:2, <invalid sloc>>         | |-ConstantExpr 0x15b009fe8 <col:7> 'int'         | | `-IntegerLiteral 0x15b009fc8 <col:7> 'int' 10         | `-NullStmt 0x15b00a028 <<invalid sloc>>         |-BreakStmt 0x15b00a030 <line:56:3>         |-CaseStmt 0x15b00a070 <line:57:2, <invalid sloc>>         | |-ConstantExpr 0x15b00a058 <col:7> 'int'         | | `-IntegerLiteral 0x15b00a038 <col:7> 'int' 11         | `-NullStmt 0x15b00a098 <<invalid sloc>>         |-BreakStmt 0x15b00a0a0 <line:59:3>         `-DefaultStmt 0x15b00a0d0 <line:60:2, col:9>           `-NullStmt 0x15b00a0c8 <col:9> ","20546":"`-FunctionDecl 0x11d922668  line:1:1 invalid PREFIX 'int (int)'   |-ParmVarDecl 0x11e00df28 <col:8> col:8 scanComment 'int'   `-CompoundStmt 0x11d923590 <line:2:46, line:33:1>     `-IfStmt 0x11d923570 <line:3:3, line:31:3>       |-CallExpr 0x11d922970 <line:3:7, col:29> '<dependent type>' contains-errors       | |-DeclRefExpr 0x11d922870 <col:7> 'int ()' Function 0x11d9227b8 'HAS_CHAR' 'int ()'       | |-RecoveryExpr 0x11d922910 <col:16> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x11d922930 <col:21> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x11d922950 <col:26> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x11d923550 <col:32, line:31:3>         |-IfStmt 0x11d922d68 <line:4:5, line:7:5>         | |-UnaryOperator 0x11d922bd8 <line:4:9, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow         | | `-CallExpr 0x11d922ba0 <col:11, col:45> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x11d922a88 <col:11> 'int ()' Function 0x11d9229d0 'CHAR_MATCHES' 'int ()'         | |   |-RecoveryExpr 0x11d922b40 <col:24> '<dependent type>' contains-errors lvalue         | |   |-RecoveryExpr 0x11d922b60 <col:29> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x11d922b80 <col:34> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x11d922d48 <col:48, line:7:5>         |   |-BinaryOperator 0x11d922ce0 <line:5:7, col:21> '<dependent type>' contains-errors '='         |   | |-UnaryOperator 0x11d922ca8 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow         |   | | `-ImplicitCastExpr 0x11d922c90 <col:8> '<dependent type>' contains-errors <LValueToRValue>         |   | |   `-RecoveryExpr 0x11d922c70 <col:8> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x11d922cc0 <col:21> '<dependent type>' contains-errors lvalue         |   `-ReturnStmt 0x11d922d38 <line:6:7, col:14>         |     `-RecoveryExpr 0x11d922d18 <col:14> '<dependent type>' contains-errors lvalue         `-WhileStmt 0x11d923530 <line:9:5, line:30:5>           |-CallExpr 0x11d922fc8 <line:9:12, col:34> '<dependent type>' contains-errors           | |-DeclRefExpr 0x11d922ec8 <col:12> 'int ()' Function 0x11d9227b8 'HAS_CHAR' 'int ()'           | |-RecoveryExpr 0x11d922f68 <col:21> '<dependent type>' contains-errors lvalue           | |-RecoveryExpr 0x11d922f88 <col:26> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x11d922fa8 <col:31> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x11d923518 <col:37, line:30:5>             `-SwitchStmt 0x11d923120 <line:10:7, line:29:7>               |-RecoveryExpr 0x11d923100 <line:10:15, col:33> 'int' contains-errors               `-CompoundStmt 0x11d9234e8 <col:36, line:29:7>                 |-IfStmt 0x11d923470 <line:15:9, line:24:9>                 | |-RecoveryExpr 0x11d923368 <line:15:13, col:47> '_Bool' contains-errors                 | `-CompoundStmt 0x11d923458 <col:50, line:24:9>                 |   `-IfStmt 0x11d923418 <line:18:11, line:21:11>                 |     |-RecoveryExpr 0x11d9233e8 <line:18:15, col:48> '_Bool' contains-errors                 |     `-CompoundStmt 0x11d923408 <col:51, line:21:11>                 |-BreakStmt 0x11d923490 <line:25:9>                 |-DefaultStmt 0x11d9234c0 <line:26:7, col:14>                 | `-NullStmt 0x11d9234b8 <col:14>                 `-BreakStmt 0x11d9234e0 <line:28:9> ","20529":"`-FunctionDecl 0x1400097c0  col:30 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x1400098c0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x140009868 <<invalid sloc>> Implicit 902 ","20419":"`-FunctionDecl 0x13b940c58  line:1:5 cil_gen_typeattributeset 'int (struct cil_db *, struct cil_tree_node *, struct cil_tree_node *)'   |-ParmVarDecl 0x13b928648 <col:30, col:45> col:45 used db 'struct cil_db *'   |-ParmVarDecl 0x13b940a28 <col:49, col:71> col:71 used parse_current 'struct cil_tree_node *'   |-ParmVarDecl 0x13b940b18 <col:86, col:108> col:108 used ast_node 'struct cil_tree_node *'   `-CompoundStmt 0x13b942bc8 <line:2:1, line:39:1>     |-DeclStmt 0x13b940fa0 <line:3:2, line:8:3>     | |-EnumDecl 0x13b940d60 <line:3:2, col:7> col:7 cil_syntax     | `-VarDecl 0x13b940e70 <col:2, col:18> col:18 invalid syntax 'int'     |-DeclStmt 0x13b941160 <line:9:2, col:49>     | `-VarDecl 0x13b940fd0 <col:2, col:48> col:6 used syntax_len 'int' cinit     |   `-ImplicitCastExpr 0x13b941148 <col:19, col:48> 'int' contains-errors <IntegralCast>     |     `-BinaryOperator 0x13b941128 <col:19, col:48> 'unsigned long' contains-errors '\/'     |       |-UnaryExprOrTypeTraitExpr 0x13b941078 <col:19, col:32> 'unsigned long' contains-errors sizeof     |       | `-ParenExpr 0x13b941058 <col:25, col:32> '<dependent type>' contains-errors lvalue     |       |   `-RecoveryExpr 0x13b941038 <col:26> '<dependent type>' contains-errors lvalue     |       `-UnaryExprOrTypeTraitExpr 0x13b941108 <col:34, col:48> 'unsigned long' contains-errors sizeof     |         `-ParenExpr 0x13b9410e8 <col:40, col:48> '<dependent type>' contains-errors     |           `-UnaryOperator 0x13b9410d0 <col:41, col:42> '<dependent type>' contains-errors prefix '*' cannot overflow     |             `-ImplicitCastExpr 0x13b9410b8 <col:42> '<dependent type>' contains-errors <LValueToRValue>     |               `-RecoveryExpr 0x13b941098 <col:42> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13b9413a0 <line:10:2, col:45>     | |-RecordDecl 0x13b941178 <col:2, col:9> col:9 struct cil_typeattributeset     | `-VarDecl 0x13b9412e8 <col:2, col:41> col:31 used attrset 'struct cil_typeattributeset *' cinit     |   `-RecoveryExpr 0x13b941368 <col:41> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13b941470 <line:11:2, col:20>     | `-VarDecl 0x13b9413d0 <col:2, col:11> col:6 used rc 'int' cinit     |   `-RecoveryExpr 0x13b941450 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b941750 <line:13:2, line:15:2>     | |-BinaryOperator 0x13b9416b0 <line:13:6, col:57> 'int' contains-errors '||'     | | |-BinaryOperator 0x13b941650 <col:6, col:37> 'int' contains-errors '||'     | | | |-BinaryOperator 0x13b9415f0 <col:6, col:12> 'int' contains-errors '=='     | | | | |-DeclRefExpr 0x13b941488 <col:6> 'struct cil_db *' lvalue ParmVar 0x13b928648 'db' 'struct cil_db *'     | | | | `-RecoveryExpr 0x13b9415d0 <col:12> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x13b941630 <col:20, col:37> 'int' contains-errors '=='     | | |   |-DeclRefExpr 0x13b9414e0 <col:20> 'struct cil_tree_node *' lvalue ParmVar 0x13b940a28 'parse_current' 'struct cil_tree_node *'     | | |   `-RecoveryExpr 0x13b941610 <col:37> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13b941690 <col:45, col:57> 'int' contains-errors '=='     | |   |-DeclRefExpr 0x13b941558 <col:45> 'struct cil_tree_node *' lvalue ParmVar 0x13b940b18 'ast_node' 'struct cil_tree_node *'     | |   `-RecoveryExpr 0x13b941670 <col:57> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b941738 <col:63, line:15:2>     |   `-GotoStmt 0x13b941720 <line:14:3, col:8> 'exit' 0x13b9416d0     |-BinaryOperator 0x13b941958 <line:17:2, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x13b941770 <col:2> 'int' contains-errors lvalue Var 0x13b9413d0 'rc' 'int'     | `-CallExpr 0x13b941920 <col:7, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b9418a0 <col:7> 'int ()' Function 0x13b9417e8 '__cil_verify_syntax' 'int ()'     |   |-DeclRefExpr 0x13b9418c0 <col:27> 'struct cil_tree_node *' lvalue ParmVar 0x13b940a28 'parse_current' 'struct cil_tree_node *'     |   |-RecoveryExpr 0x13b9418e0 <col:42> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13b941900 <col:50> 'int' contains-errors lvalue Var 0x13b940fd0 'syntax_len' 'int'     |-IfStmt 0x13b942050 <line:18:2, line:20:2>     | |-BinaryOperator 0x13b942000 <line:18:6, col:12> 'int' contains-errors '!='     | | |-DeclRefExpr 0x13b941978 <col:6> 'int' contains-errors lvalue Var 0x13b9413d0 'rc' 'int'     | | `-RecoveryExpr 0x13b9419d0 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b942038 <col:22, line:20:2>     |   `-GotoStmt 0x13b942020 <line:19:3, col:8> 'exit' 0x13b9416d0     |-CallExpr 0x13b942258 <line:22:2, col:36> 'int' contains-errors     | |-ImplicitCastExpr 0x13b942240 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13b942150 <col:2> 'int ()' Function 0x13b942098 'cil_typeattributeset_init' 'int ()'     | `-UnaryOperator 0x13b9421f0 <col:28, col:29> 'struct cil_typeattributeset **' contains-errors prefix '&' cannot overflow     |   `-DeclRefExpr 0x13b942170 <col:29> 'struct cil_typeattributeset *' contains-errors lvalue Var 0x13b9412e8 'attrset' 'struct cil_typeattributeset *'     |-BinaryOperator 0x13b942388 <line:24:2, col:43> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b9422b8 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b942280 <col:2> 'struct cil_typeattributeset *' contains-errors lvalue Var 0x13b9412e8 'attrset' 'struct cil_typeattributeset *'     | `-CXXDependentScopeMemberExpr 0x13b942340 <col:22, col:43> '<dependent type>' contains-errors lvalue ->data     |   `-RecoveryExpr 0x13b942318 <col:22, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13b9422e0 <col:22> 'struct cil_tree_node *' lvalue ParmVar 0x13b940a28 'parse_current' 'struct cil_tree_node *'     |-BinaryOperator 0x13b9426b0 <line:26:2, col:75> 'int' contains-errors '='     | |-DeclRefExpr 0x13b9423a8 <col:2> 'int' contains-errors lvalue Var 0x13b9413d0 'rc' 'int'     | `-CallExpr 0x13b942678 <col:7, col:75> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b9424a8 <col:7> 'int ()' Function 0x13b9423f0 'cil_gen_expr' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x13b942528 <col:20, col:41> '<dependent type>' contains-errors lvalue ->next     |   | `-RecoveryExpr 0x13b942500 <col:20, col:35> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13b9424c8 <col:20> 'struct cil_tree_node *' lvalue ParmVar 0x13b940a28 'parse_current' 'struct cil_tree_node *'     |   |-RecoveryExpr 0x13b942658 <col:47> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x13b9425e8 <col:57, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13b9425c0 <col:58, col:67> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b942588 <col:58> 'struct cil_typeattributeset *' contains-errors lvalue Var 0x13b9412e8 'attrset' 'struct cil_typeattributeset *'     |-IfStmt 0x13b942740 <line:27:2, line:29:2>     | |-RecoveryExpr 0x13b9426f0 <line:27:6, col:12> '_Bool' contains-errors     | `-CompoundStmt 0x13b942728 <col:22, line:29:2>     |   `-GotoStmt 0x13b942710 <line:28:3, col:8> 'exit' 0x13b9416d0     |-BinaryOperator 0x13b9427e0 <line:30:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b942798 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b942760 <col:2> 'struct cil_tree_node *' lvalue ParmVar 0x13b940b18 'ast_node' 'struct cil_tree_node *'     | `-DeclRefExpr 0x13b9427c0 <col:19> 'struct cil_typeattributeset *' contains-errors lvalue Var 0x13b9412e8 'attrset' 'struct cil_typeattributeset *'     |-LabelStmt 0x13b9429e8 <line:35:1, col:5> 'exit'     | `-NullStmt 0x13b9429e0 <col:5>     |-CallExpr 0x13b942b40 <line:37:2, col:38> 'int' contains-errors     | |-ImplicitCastExpr 0x13b942b28 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13b942ae8 <col:2> 'int ()' Function 0x13b942a30 'cil_destroy_typeattributeset' 'int ()'     | `-ImplicitCastExpr 0x13b942b68 <col:31> 'struct cil_typeattributeset *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13b942b08 <col:31> 'struct cil_typeattributeset *' contains-errors lvalue Var 0x13b9412e8 'attrset' 'struct cil_typeattributeset *'     `-ReturnStmt 0x13b942bb8 <line:38:2, col:9>       `-ImplicitCastExpr 0x13b942ba0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13b942b80 <col:9> 'int' contains-errors lvalue Var 0x13b9413d0 'rc' 'int' ","20639":"`-FunctionDecl 0x12100dd90  line:1:13 sched_ttwu_pending 'void (void)' static   `-CompoundStmt 0x121809578 <line:2:1, line:16:1>     |-DeclStmt 0x12102c088 <line:3:2, col:27>     | |-RecordDecl 0x12100de80 <col:2, col:9> col:9 struct rq     | `-VarDecl 0x12100dfe8 <col:2, col:26> col:13 used rq 'struct rq *' cinit     |   `-ImplicitCastExpr 0x12100e208 <col:18, col:26> 'struct rq *' <IntegralToPointer>     |     `-CallExpr 0x12100e1e8 <col:18, col:26> 'int'     |       `-ImplicitCastExpr 0x12100e1d0 <col:18> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x12100e180 <col:18> 'int ()' Function 0x12100e0c8 'this_rq' 'int ()'     |-DeclStmt 0x12102c428 <line:4:2, col:58>     | |-RecordDecl 0x12102c0a0 <col:2, col:9> col:9 struct llist_node     | `-VarDecl 0x12102c208 <col:2, col:57> col:21 used llist 'struct llist_node *' cinit     |   `-CallExpr 0x12102c3e8 <col:29, col:57> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12102c350 <col:29> 'int ()' Function 0x12102c298 'llist_del_all' 'int ()'     |     `-UnaryOperator 0x12102c3d0 <col:43, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x12102c3a8 <col:44, col:48> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12102c370 <col:44> 'struct rq *' lvalue Var 0x12100dfe8 'rq' 'struct rq *'     |-DeclStmt 0x12102c628 <line:5:2, col:23>     | |-RecordDecl 0x12102c440 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x12102c5a8 <col:2, col:22> col:22 used p 'struct task_struct *'     |-CallExpr 0x12102c7b8 <line:7:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12102c720 <col:2> 'int ()' Function 0x12102c668 'raw_spin_lock' 'int ()'     | `-UnaryOperator 0x12102c7a0 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12102c778 <col:17, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12102c740 <col:17> 'struct rq *' lvalue Var 0x12100dfe8 'rq' 'struct rq *'     |-WhileStmt 0x12102cd40 <line:9:2, line:13:2>     | |-ImplicitCastExpr 0x12102c800 <line:9:9> 'struct llist_node *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x12102c7e0 <col:9> 'struct llist_node *' contains-errors lvalue Var 0x12102c208 'llist' 'struct llist_node *'     | `-CompoundStmt 0x12102cd20 <col:16, line:13:2>     |   |-BinaryOperator 0x12102cb20 <line:11:3, col:27> 'struct llist_node *' contains-errors '='     |   | |-DeclRefExpr 0x12102c970 <col:3> 'struct llist_node *' contains-errors lvalue Var 0x12102c208 'llist' 'struct llist_node *'     |   | `-ImplicitCastExpr 0x12102cb08 <col:11, col:27> 'struct llist_node *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x12102cac8 <col:11, col:27> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x12102cab0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x12102ca70 <col:11> 'int ()' Function 0x12102c9b8 'llist_next' 'int ()'     |   |     `-ImplicitCastExpr 0x12102caf0 <col:22> 'struct llist_node *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x12102ca90 <col:22> 'struct llist_node *' contains-errors lvalue Var 0x12102c208 'llist' 'struct llist_node *'     |   `-CallExpr 0x12102ccb8 <line:12:3, col:28> 'int'     |     |-ImplicitCastExpr 0x12102cca0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12102cc20 <col:3> 'int ()' Function 0x12102cb68 'ttwu_do_activate' 'int ()'     |     |-ImplicitCastExpr 0x12102ccf0 <col:20> 'struct rq *' <LValueToRValue>     |     | `-DeclRefExpr 0x12102cc40 <col:20> 'struct rq *' lvalue Var 0x12100dfe8 'rq' 'struct rq *'     |     |-ImplicitCastExpr 0x12102cd08 <col:24> 'struct task_struct *' <LValueToRValue>     |     | `-DeclRefExpr 0x12102cc60 <col:24> 'struct task_struct *' lvalue Var 0x12102c5a8 'p' 'struct task_struct *'     |     `-IntegerLiteral 0x12102cc80 <col:27> 'int' 0     `-CallExpr 0x121809550 <line:15:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x1218094b8 <col:2> 'int ()' Function 0x121809400 'raw_spin_unlock' 'int ()'       `-UnaryOperator 0x121809538 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x121809510 <col:19, col:23> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x1218094d8 <col:19> 'struct rq *' lvalue Var 0x12100dfe8 'rq' 'struct rq *' ","20628":"`-FunctionDecl 0x14e80e358  line:1:1 pci_lintr_route 'int (struct pci_vdev *)'   |-ParmVarDecl 0x14e80e248 <col:17, col:34> col:34 used dev 'struct pci_vdev *'   `-CompoundStmt 0x14e829598 <line:2:1, line:26:1>     |-DeclStmt 0x14e826838 <line:3:2, col:20>     | |-RecordDecl 0x14e826650 <col:2, col:9> col:9 struct businfo     | `-VarDecl 0x14e8267b8 <col:2, col:18> col:18 used bi 'struct businfo *'     |-DeclStmt 0x14e826a38 <line:4:2, col:21>     | |-RecordDecl 0x14e826850 <col:2, col:9> col:9 struct intxinfo     | `-VarDecl 0x14e8269b8 <col:2, col:19> col:19 used ii 'struct intxinfo *'     |-IfStmt 0x14e826b48 <line:6:2, line:7:3>     | |-BinaryOperator 0x14e826b18 <line:6:6, col:24> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14e826ab0 <col:6, col:17> '<dependent type>' contains-errors lvalue .pin     | | | `-RecoveryExpr 0x14e826a88 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14e826a50 <col:6> 'struct pci_vdev *' lvalue ParmVar 0x14e80e248 'dev' 'struct pci_vdev *'     | | `-IntegerLiteral 0x14e826af8 <col:24> 'int' 0     | `-ReturnStmt 0x14e826b38 <line:7:3>     |-CallExpr 0x14e826e10 <line:10:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e826d30 <col:2> 'int ()' Function 0x14e826c78 'assert' 'int ()'     | `-BinaryOperator 0x14e826df0 <col:9, col:15> 'int' contains-errors '!='     |   |-DeclRefExpr 0x14e826d50 <col:9> 'struct businfo *' lvalue Var 0x14e8267b8 'bi' 'struct businfo *'     |   `-RecoveryExpr 0x14e826dd0 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e8270e8 <line:11:2, col:61> 'struct intxinfo *' contains-errors '='     | |-DeclRefExpr 0x14e826e38 <col:2> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *'     | `-UnaryOperator 0x14e8270d0 <col:7, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x14e8270b0 <col:8, col:61> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x14e827098 <col:8, col:32> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x14e826f68 <col:8, col:32> '<dependent type>' contains-errors lvalue .si_intpins     |     |   `-ArraySubscriptExpr 0x14e826f48 <col:8, col:30> '<dependent type>' contains-errors lvalue     |     |     |-ImplicitCastExpr 0x14e826f18 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>     |     |     | `-RecoveryExpr 0x14e826e90 <col:8, col:12> '<dependent type>' contains-errors lvalue     |     |     |   `-DeclRefExpr 0x14e826e58 <col:8> 'struct businfo *' lvalue Var 0x14e8267b8 'bi' 'struct businfo *'     |     |     `-ImplicitCastExpr 0x14e826f30 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x14e826ef0 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x14e826eb8 <col:21> 'struct pci_vdev *' lvalue ParmVar 0x14e80e248 'dev' 'struct pci_vdev *'     |     `-BinaryOperator 0x14e827078 <col:43, col:60> '<dependent type>' contains-errors '-'     |       |-CXXDependentScopeMemberExpr 0x14e827010 <col:43, col:54> '<dependent type>' contains-errors lvalue .pin     |       | `-RecoveryExpr 0x14e826fe8 <col:43, col:48> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14e826fb0 <col:43> 'struct pci_vdev *' lvalue ParmVar 0x14e80e248 'dev' 'struct pci_vdev *'     |       `-IntegerLiteral 0x14e827058 <col:60> 'int' 1     |-IfStmt 0x14e8273d8 <line:14:2, line:15:47>     | |-BinaryOperator 0x14e827188 <line:14:6, col:27> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14e827140 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14e827108 <col:6> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *'     | | `-IntegerLiteral 0x14e827168 <col:27> 'int' 0     | `-BinaryOperator 0x14e8273b8 <line:15:3, col:47> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x14e8271e0 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14e8271a8 <col:3> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *'     |   `-CallExpr 0x14e827378 <col:23, col:47> 'int'     |     |-ImplicitCastExpr 0x14e827360 <col:23> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14e8272e8 <col:23> 'int ()' Function 0x14e827230 'ioapic_pci_alloc_irq' 'int ()'     |     `-ImplicitCastExpr 0x14e8273a0 <col:44> 'struct pci_vdev *' <LValueToRValue>     |       `-DeclRefExpr 0x14e827308 <col:44> 'struct pci_vdev *' lvalue ParmVar 0x14e80e248 'dev' 'struct pci_vdev *'     |-CallExpr 0x14e8274b8 <line:16:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e8273f8 <col:2> 'int ()' Function 0x14e826c78 'assert' 'int ()'     | `-BinaryOperator 0x14e827498 <col:9, col:29> 'int' contains-errors '>'     |   |-RecoveryExpr 0x14e827450 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14e827418 <col:9> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *'     |   `-IntegerLiteral 0x14e827478 <col:29> 'int' 0     |-IfStmt 0x14e828f98 <line:19:2, line:20:39>     | |-BinaryOperator 0x14e827560 <line:19:6, col:25> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14e827518 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14e8274e0 <col:6> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *'     | | `-IntegerLiteral 0x14e827540 <col:25> 'int' 0     | `-BinaryOperator 0x14e828f78 <line:20:3, col:39> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x14e8275b8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14e827580 <col:3> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *'     |   `-CallExpr 0x14e828f38 <col:21, col:39> 'int'     |     |-ImplicitCastExpr 0x14e828f20 <col:21> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14e828ee0 <col:21> 'int ()' Function 0x14e828e28 'pirq_alloc_pin' 'int ()'     |     `-ImplicitCastExpr 0x14e828f60 <col:36> 'struct pci_vdev *' <LValueToRValue>     |       `-DeclRefExpr 0x14e828f00 <col:36> 'struct pci_vdev *' lvalue ParmVar 0x14e80e248 'dev' 'struct pci_vdev *'     |-CallExpr 0x14e829078 <line:21:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e828fb8 <col:2> 'int ()' Function 0x14e826c78 'assert' 'int ()'     | `-BinaryOperator 0x14e829058 <col:9, col:27> 'int' contains-errors '>'     |   |-RecoveryExpr 0x14e829010 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14e828fd8 <col:9> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *'     |   `-IntegerLiteral 0x14e829038 <col:27> 'int' 0     |-BinaryOperator 0x14e8291a8 <line:23:2, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e829100 <col:2, col:13> '<dependent type>' contains-errors lvalue .ioapic_irq     | | `-RecoveryExpr 0x14e8290d8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e8290a0 <col:2> 'struct pci_vdev *' lvalue ParmVar 0x14e80e248 'dev' 'struct pci_vdev *'     | `-RecoveryExpr 0x14e829180 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14e829148 <col:26> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *'     `-BinaryOperator 0x14e8292d0 <line:24:2, col:28> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x14e829228 <col:2, col:13> '<dependent type>' contains-errors lvalue .pirq_pin       | `-RecoveryExpr 0x14e829200 <col:2, col:7> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14e8291c8 <col:2> 'struct pci_vdev *' lvalue ParmVar 0x14e80e248 'dev' 'struct pci_vdev *'       `-RecoveryExpr 0x14e8292a8 <col:24, col:28> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14e829270 <col:24> 'struct intxinfo *' lvalue Var 0x14e8269b8 'ii' 'struct intxinfo *' ","20502":"`-FunctionDecl 0x12a80df78  line:1:1 invalid scroll_idl 'int (int, int, int, int)'   |-ParmVarDecl 0x12a80dcf0 <col:12, col:32> col:32 invalid n 'int'   |-ParmVarDecl 0x12a80dd70 <col:35, col:39> col:39 del 'int'   |-ParmVarDecl 0x12a80ddf0 <col:44, col:48> col:48 ins 'int'   |-ParmVarDecl 0x12a80de70 <col:53, col:66> col:66 invalid blank 'int'   `-CompoundStmt 0x12b00a668 <line:2:1, line:41:1>     |-DeclStmt 0x12a80e0c0 <line:3:5, col:10>     | `-VarDecl 0x12a80e058 <col:5, col:9> col:9 used i 'int'     |-IfStmt 0x12a80e1e0 <line:5:5, line:6:9>     | |-RecoveryExpr 0x12a80e178 <line:5:9, col:81> '_Bool' contains-errors     | `-ReturnStmt 0x12a80e1d0 <line:6:2, col:9>     |   `-RecoveryExpr 0x12a80e1b0 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b009960 <line:9:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b0098b8 <col:5> 'int ()' Function 0x12b009800 'UpdateAttrs' 'int ()'     | |-RecoveryExpr 0x12b009940 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b0098f0 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b00a1c0 <line:10:5, line:22:5> has_else     | |-BinaryOperator 0x12b009a48 <line:10:9, col:19> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12b0099d0 <col:9, col:14> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x12b009990 <col:9> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x12b0099b0 <col:14> 'int' 1     | | `-RecoveryExpr 0x12b009a28 <col:19> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12b009c68 <col:32, line:12:5>     | | `-CallExpr 0x12b009c38 <line:11:2, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12b009b48 <col:2> 'int ()' Function 0x12b009a90 'NCURSES_PUTP2' 'int ()'     | |   |-StringLiteral 0x12b009bb0 <col:16> 'char[4]' lvalue \"STR\"     | |   `-RecoveryExpr 0x12b009c18 <col:23> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x12b00a190 <line:12:12, line:22:5> has_else     |   |-RecoveryExpr 0x12b009c98 <line:12:16> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x12b009fe0 <col:34, line:18:5>     |   | `-CallExpr 0x12b009e28 <line:13:2, col:19> 'int'     |   |   |-ImplicitCastExpr 0x12b009e10 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12b009d98 <col:2> 'int ()' Function 0x12b009ce0 'TPUTS_TRACE' 'int ()'     |   |   `-ImplicitCastExpr 0x12b009e50 <col:14> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x12b009db8 <col:14> 'char[4]' lvalue \"STR\"     |   `-CompoundStmt 0x12b00a178 <line:18:12, line:22:5>     |     `-ForStmt 0x12b00a140 <line:19:2, line:21:2>     |       |-BinaryOperator 0x12b00a038 <line:19:7, col:11> 'int' '='     |       | |-DeclRefExpr 0x12b009ff8 <col:7> 'int' lvalue Var 0x12a80e058 'i' 'int'     |       | `-IntegerLiteral 0x12b00a018 <col:11> 'int' 0     |       |-<<<NULL>>>     |       |-BinaryOperator 0x12b00a098 <col:14, col:18> 'int' contains-errors '<'     |       | |-DeclRefExpr 0x12b00a058 <col:14> 'int' lvalue Var 0x12a80e058 'i' 'int'     |       | `-RecoveryExpr 0x12b00a078 <col:18> '<dependent type>' contains-errors lvalue     |       |-UnaryOperator 0x12b00a0d8 <col:21, col:22> 'int' postfix '++'     |       | `-DeclRefExpr 0x12b00a0b8 <col:21> 'int' lvalue Var 0x12a80e058 'i' 'int'     |       `-CompoundStmt 0x12b00a130 <col:26, line:21:2>     `-IfStmt 0x12b00a638 <line:26:5, line:38:5> has_else       |-RecoveryExpr 0x12b00a2d0 <line:26:9, col:19> '_Bool' contains-errors       |-CompoundStmt 0x12b00a330 <col:32, line:28:5>       `-IfStmt 0x12b00a608 <col:12, line:38:5> has_else         |-RecoveryExpr 0x12b00a340 <line:28:16> '_Bool' contains-errors         |-CompoundStmt 0x12b00a458 <col:34, line:34:5>         | `-CallExpr 0x12b00a3b8 <line:29:2, col:19> 'int'         |   |-ImplicitCastExpr 0x12b00a3a0 <col:2> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x12b00a360 <col:2> 'int ()' Function 0x12b009ce0 'TPUTS_TRACE' 'int ()'         |   `-ImplicitCastExpr 0x12b00a3e0 <col:14> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x12b00a380 <col:14> 'char[4]' lvalue \"STR\"         `-CompoundStmt 0x12b00a5f0 <line:34:12, line:38:5>           `-ForStmt 0x12b00a5b8 <line:35:2, line:37:2>             |-BinaryOperator 0x12b00a4b0 <line:35:7, col:11> 'int' '='             | |-DeclRefExpr 0x12b00a470 <col:7> 'int' lvalue Var 0x12a80e058 'i' 'int'             | `-IntegerLiteral 0x12b00a490 <col:11> 'int' 0             |-<<<NULL>>>             |-BinaryOperator 0x12b00a510 <col:14, col:18> 'int' contains-errors '<'             | |-DeclRefExpr 0x12b00a4d0 <col:14> 'int' lvalue Var 0x12a80e058 'i' 'int'             | `-RecoveryExpr 0x12b00a4f0 <col:18> '<dependent type>' contains-errors lvalue             |-UnaryOperator 0x12b00a550 <col:21, col:22> 'int' postfix '++'             | `-DeclRefExpr 0x12b00a530 <col:21> 'int' lvalue Var 0x12a80e058 'i' 'int'             `-CompoundStmt 0x12b00a5a8 <col:26, line:37:2> ","20595":"`-FunctionDecl 0x157928230  line:1:13 _cmd_window_show_opt 'void (const char *, int)' static   |-ParmVarDecl 0x1579280d8 <col:34, col:46> col:46 used data 'const char *'   |-ParmVarDecl 0x157928158 <col:52, col:56> col:56 used right 'int'   `-CompoundStmt 0x161008898 <line:2:1, line:43:1>     |-IfStmt 0x1579285e8 <line:6:2, col:62>     | |-BinaryOperator 0x157928410 <col:6, col:15> 'int' '=='     | | |-ImplicitCastExpr 0x1579283f8 <col:6, col:7> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x1579283e0 <col:6, col:7> 'char' <LValueToRValue>     | | |   `-UnaryOperator 0x1579283b0 <col:6, col:7> 'const char' lvalue prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x157928398 <col:7> 'const char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x157928378 <col:7> 'const char *' lvalue ParmVar 0x1579280d8 'data' 'const char *'     | | `-CharacterLiteral 0x1579283c8 <col:15> 'int' 0     | `-CallExpr 0x1579285c0 <col:21, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157928540 <col:21> 'int ()' Function 0x157928488 'cmd_return_error' 'int ()'     |   `-RecoveryExpr 0x1579285a0 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x160008f98 <line:8:2, line:16:2> has_else     | |-CallExpr 0x157928788 <line:8:6, col:27> 'int'     | | |-ImplicitCastExpr 0x157928770 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1579286e8 <col:6> 'int ()' Function 0x157928630 'is_numeric' 'int ()'     | | |-ImplicitCastExpr 0x1579287b8 <col:17> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x157928708 <col:17> 'const char *' lvalue ParmVar 0x1579280d8 'data' 'const char *'     | | `-CharacterLiteral 0x157928728 <col:23> 'int' 0     | |-CompoundStmt 0x160008dc0 <col:30, line:14:2>     | | `-IfStmt 0x160008da0 <line:10:3, line:13:3>     | |   |-BinaryOperator 0x160008b20 <line:10:7, col:17> 'int' contains-errors '=='     | |   | |-RecoveryExpr 0x160008ae0 <col:7> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x160008b00 <col:17> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x160008d88 <col:23, line:13:3>     | |     `-CallExpr 0x160008d48 <line:11:4, line:12:35> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x160008c20 <line:11:4> 'int ()' Function 0x160008b68 'printformat_window' 'int ()'     | |       |-RecoveryExpr 0x160008ce8 <col:23> '<dependent type>' contains-errors lvalue     | |       |-RecoveryExpr 0x160008d08 <col:35> '<dependent type>' contains-errors lvalue     | |       |-RecoveryExpr 0x160008d28 <line:12:9> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x160008c88 <col:31> 'const char *' lvalue ParmVar 0x1579280d8 'data' 'const char *'     | `-CompoundStmt 0x160008f88 <line:14:9, line:16:2>     |-IfStmt 0x160009148 <line:18:2, line:19:3>     | |-RecoveryExpr 0x160009118 <line:18:6, col:48> '_Bool' contains-errors     | `-ReturnStmt 0x160009138 <line:19:3>     |-IfStmt 0x1600094e0 <line:21:2, line:27:2>     | |-RecoveryExpr 0x160009268 <line:21:6, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x1600094c8 <col:34, line:27:2>     |   `-IfStmt 0x1600094a8 <line:22:3, line:26:3>     |     |-UnaryOperator 0x160009448 <line:22:7, col:31> 'int' prefix '!' cannot overflow     |     | `-CallExpr 0x160009408 <col:8, col:31> 'int'     |     |   |-ImplicitCastExpr 0x1600093f0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x160009368 <col:8> 'int ()' Function 0x1600092b0 'settings_get_bool' 'int ()'     |     |   `-ImplicitCastExpr 0x160009430 <col:26> 'char *' <ArrayToPointerDecay>     |     |     `-StringLiteral 0x1600093d0 <col:26> 'char[4]' lvalue \"STR\"     |     `-CompoundStmt 0x160009490 <col:34, line:26:3>     |       `-ReturnStmt 0x160009480 <line:25:4>     `-IfStmt 0x1600096e0 <line:30:2, line:33:2>       |-RecoveryExpr 0x160009678 <line:30:6, col:16> '_Bool' contains-errors       `-CompoundStmt 0x1600096c8 <col:22, line:33:2>         `-ReturnStmt 0x1600096b8 <line:32:3> ","20734":"`-FunctionDecl 0x153128750  line:1:13 stub_shutdown_connection 'void (struct usbip_device *)' static   |-ParmVarDecl 0x153128648 <col:38, col:59> col:59 used ud 'struct usbip_device *'   `-CompoundStmt 0x153143830 <line:2:1, line:48:1>     |-DeclStmt 0x153140dc8 <line:3:2, col:69>     | |-RecordDecl 0x153140a48 <col:2, col:9> col:9 struct stub_device     | `-VarDecl 0x153140bb8 <col:2, col:22> col:22 used sdev 'struct stub_device *'     |-IfStmt 0x153141310 <line:6:2, line:9:2>     | |-RecoveryExpr 0x153140e18 <line:6:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153140de0 <col:6> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     | `-CompoundStmt 0x1531412f0 <col:22, line:9:2>     |   |-CallExpr 0x1531410c0 <line:7:3, col:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x153140f20 <col:3> 'int ()' Function 0x153140e68 'dev_dbg' 'int ()'     |   | |-UnaryOperator 0x153140fe8 <col:11, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x153140fa0 <col:12, col:24> '<dependent type>' contains-errors lvalue ->dev     |   | |   `-RecoveryExpr 0x153140f78 <col:12, col:18> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x153140f40 <col:12> 'struct stub_device *' lvalue Var 0x153140bb8 'sdev' 'struct stub_device *'     |   | |-StringLiteral 0x153141040 <col:29> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x153141098 <col:36, col:40> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x153141060 <col:36> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     |   `-CallExpr 0x1531412c0 <line:8:3, col:49> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1531411d8 <col:3> 'int ()' Function 0x153141120 'kernel_sock_shutdown' 'int ()'     |     |-RecoveryExpr 0x153141230 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1531411f8 <col:24> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     |     `-RecoveryExpr 0x1531412a0 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x153141610 <line:12:2, line:15:2>     | |-RecoveryExpr 0x153141368 <line:12:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153141330 <col:6> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     | `-CompoundStmt 0x1531415f0 <col:18, line:15:2>     |   |-CallExpr 0x1531414f0 <line:13:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x153141470 <col:3> 'int ()' Function 0x1531413b8 'kthread_stop_put' 'int ()'     |   | `-RecoveryExpr 0x1531414c8 <col:20, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x153141490 <col:20> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     |   `-BinaryOperator 0x1531415d0 <line:14:3, col:16> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x153141550 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x153141518 <col:3> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     |     `-RecoveryExpr 0x1531415b0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x153141830 <line:16:2, line:19:2>     | |-RecoveryExpr 0x153141668 <line:16:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153141630 <col:6> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     | `-CompoundStmt 0x153141810 <col:18, line:19:2>     |   |-CallExpr 0x153141710 <line:17:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x153141690 <col:3> 'int ()' Function 0x1531413b8 'kthread_stop_put' 'int ()'     |   | `-RecoveryExpr 0x1531416e8 <col:20, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1531416b0 <col:20> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     |   `-BinaryOperator 0x1531417f0 <line:18:3, col:16> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x153141770 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x153141738 <col:3> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     |     `-RecoveryExpr 0x1531417d0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x153142f88 <line:22:2, line:26:2>     | |-RecoveryExpr 0x153141888 <line:22:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153141850 <col:6> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     | `-CompoundStmt 0x153142f68 <col:22, line:26:2>     |   |-CallExpr 0x153142e28 <line:23:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x153141990 <col:3> 'int ()' Function 0x1531418d8 'sockfd_put' 'int ()'     |   | `-RecoveryExpr 0x153142e00 <col:14, col:18> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1531419b0 <col:14> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     |   `-BinaryOperator 0x153142f48 <line:25:3, col:17> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x153142ee8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x153142eb0 <col:3> 'struct usbip_device *' lvalue ParmVar 0x153128648 'ud' 'struct usbip_device *'     |     `-UnaryOperator 0x153142f30 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x153142f10 <col:17> 'int' 1     |-CallExpr 0x153143118 <line:29:2, col:31> 'int'     | |-ImplicitCastExpr 0x153143100 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x153143088 <col:2> 'int ()' Function 0x153142fd0 'stub_device_cleanup_urbs' 'int ()'     | `-ImplicitCastExpr 0x153143140 <col:27> 'struct stub_device *' <LValueToRValue>     |   `-DeclRefExpr 0x1531430a8 <col:27> 'struct stub_device *' lvalue Var 0x153140bb8 'sdev' 'struct stub_device *'     `-CompoundStmt 0x153143808 <line:32:2, line:47:2>       |-DeclStmt 0x1531431d8 <line:33:3, col:22>       | `-VarDecl 0x153143170 <col:3, col:17> col:17 used flags 'unsigned long'       |-DeclStmt 0x153143470 <line:34:3, col:35>       | |-RecordDecl 0x1531431f0 <col:3, col:10> col:10 struct stub_unlink       | |-VarDecl 0x153143358 <col:3, col:23> col:23 used unlink 'struct stub_unlink *'       | `-VarDecl 0x1531433e8 <col:3, col:32> col:32 used tmp 'struct stub_unlink *'       `-CallExpr 0x153143620 <line:36:3, col:44> '<dependent type>' contains-errors         |-DeclRefExpr 0x153143568 <col:3> 'int ()' Function 0x1531434b0 'spin_lock_irqsave' 'int ()'         |-UnaryOperator 0x1531435e8 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x1531435c0 <col:22, col:28> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x153143588 <col:22> 'struct stub_device *' lvalue Var 0x153140bb8 'sdev' 'struct stub_device *'         `-DeclRefExpr 0x153143600 <col:39> 'unsigned long' lvalue Var 0x153143170 'flags' 'unsigned long' ","21172":"`-FunctionDecl 0x13e0271a0  col:10 implicit used strtol 'long (const char *, char **, int)' extern   |-ParmVarDecl 0x13e0272a0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13e027308 <<invalid sloc>> <invalid sloc> 'char **'   |-ParmVarDecl 0x13e027370 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13e027248 <<invalid sloc>> Implicit 877 ","20388":"`-FunctionDecl 0x14e80e008  line:1:1 invalid _fill16_spans 'int (void *, int, int, const int *, unsigned int)'   |-ParmVarDecl 0x14e80dcd8 <col:16, col:22> col:22 used abstract_renderer 'void *'   |-ParmVarDecl 0x14e80dd58 <col:41, col:45> col:45 used y 'int'   |-ParmVarDecl 0x14e80ddd8 <col:48, col:52> col:52 used h 'int'   |-ParmVarDecl 0x14e80de70 <line:2:9, col:39> col:39 referenced invalid spans 'const int *'   |-ParmVarDecl 0x14e80def0 <col:46, col:55> col:55 used num_spans 'unsigned int'   `-CompoundStmt 0x14e8298f0 <line:3:1, line:36:1>     |-IfStmt 0x14e80e1e8 <line:6:5, line:7:9>     | |-BinaryOperator 0x14e80e180 <line:6:9, col:22> 'int' '=='     | | |-ImplicitCastExpr 0x14e80e150 <col:9> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e80e110 <col:9> 'unsigned int' lvalue ParmVar 0x14e80def0 'num_spans' 'unsigned int'     | | `-ImplicitCastExpr 0x14e80e168 <col:22> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x14e80e130 <col:22> 'int' 0     | `-ReturnStmt 0x14e80e1d8 <line:7:2, col:9>     |   `-RecoveryExpr 0x14e80e1b8 <col:9> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14e8298c0 <line:9:5, line:33:5> has_else       |-CallExpr 0x14e827e48 <line:9:9, col:22> 'int'       | |-ImplicitCastExpr 0x14e827e30 <col:9> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x14e80e360 <col:9> 'int ()' Function 0x14e80e2a8 'likely' 'int ()'       | `-BinaryOperator 0x14e80e3d8 <col:16, col:21> 'int' '=='       |   |-ImplicitCastExpr 0x14e80e3c0 <col:16> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x14e80e380 <col:16> 'int' lvalue ParmVar 0x14e80ddd8 'h' 'int'       |   `-IntegerLiteral 0x14e80e3a0 <col:21> 'int' 1       |-CompoundStmt 0x14e8289c0 <col:25, line:19:5>       | `-DoStmt 0x14e8289a0 <line:10:2, line:18:26>       |   |-CompoundStmt 0x14e8288f0 <line:10:5, line:18:2>       |   | |-IfStmt 0x14e828870 <line:11:6, line:16:6>       |   | | |-CXXDependentScopeMemberExpr 0x14e827ee8 <line:11:10, col:19> '<dependent type>' contains-errors lvalue .coverage       |   | | | `-ArraySubscriptExpr 0x14e827ec8 <col:10, col:17> '<dependent type>' contains-errors lvalue       |   | | |   |-ImplicitCastExpr 0x14e827eb0 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   | | |   | `-RecoveryExpr 0x14e827e70 <col:10> '<dependent type>' contains-errors lvalue       |   | | |   `-IntegerLiteral 0x14e827e90 <col:16> 'int' 0       |   | | `-CompoundStmt 0x14e828850 <col:29, line:16:6>       |   | |   |-DeclStmt 0x14e828150 <line:12:3, col:36>       |   | |   | `-VarDecl 0x14e827f48 <col:3, col:35> col:7 used len 'int' cinit       |   | |   |   `-BinaryOperator 0x14e828130 <col:13, col:35> '<dependent type>' contains-errors '-'       |   | |   |     |-CXXDependentScopeMemberExpr 0x14e828028 <col:13, col:22> '<dependent type>' contains-errors lvalue .x       |   | |   |     | `-ArraySubscriptExpr 0x14e828008 <col:13, col:20> '<dependent type>' contains-errors lvalue       |   | |   |     |   |-ImplicitCastExpr 0x14e827ff0 <col:13> '<dependent type>' contains-errors <LValueToRValue>       |   | |   |     |   | `-RecoveryExpr 0x14e827fb0 <col:13> '<dependent type>' contains-errors lvalue       |   | |   |     |   `-IntegerLiteral 0x14e827fd0 <col:19> 'int' 1       |   | |   |     `-CXXDependentScopeMemberExpr 0x14e8280e8 <col:26, col:35> '<dependent type>' contains-errors lvalue .x       |   | |   |       `-ArraySubscriptExpr 0x14e8280c8 <col:26, col:33> '<dependent type>' contains-errors lvalue       |   | |   |         |-ImplicitCastExpr 0x14e8280b0 <col:26> '<dependent type>' contains-errors <LValueToRValue>       |   | |   |         | `-RecoveryExpr 0x14e828070 <col:26> '<dependent type>' contains-errors lvalue       |   | |   |         `-IntegerLiteral 0x14e828090 <col:32> 'int' 0       |   | |   `-WhileStmt 0x14e828830 <line:14:3, line:15:24>       |   | |     |-BinaryOperator 0x14e828550 <line:14:10, col:18> 'int' contains-errors '>'       |   | |     | |-UnaryOperator 0x14e828518 <col:10, col:13> 'int' contains-errors postfix '--'       |   | |     | | `-DeclRefExpr 0x14e8284f8 <col:10> 'int' contains-errors lvalue Var 0x14e827f48 'len' 'int'       |   | |     | `-IntegerLiteral 0x14e828530 <col:18> 'int' 0       |   | |     `-BinaryOperator 0x14e828810 <line:15:7, col:24> '<dependent type>' contains-errors '='       |   | |       |-UnaryOperator 0x14e828700 <col:7, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow       |   | |       | `-UnaryOperator 0x14e8286e8 <col:8, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow       |   | |       |   `-RecoveryExpr 0x14e8286c8 <col:8> '<dependent type>' contains-errors lvalue       |   | |       `-CXXDependentScopeMemberExpr 0x14e8287c8 <col:14, col:24> '<dependent type>' contains-errors lvalue .pixel       |   | |         `-CXXDependentScopeMemberExpr 0x14e828780 <col:14, col:19> '<dependent type>' contains-errors lvalue .fill       |   | |           `-CXXDependentScopeMemberExpr 0x14e828738 <col:14, col:17> '<dependent type>' contains-errors lvalue ->u       |   | |             `-RecoveryExpr 0x14e828718 <col:14> '<dependent type>' contains-errors lvalue       |   | `-UnaryOperator 0x14e8288d8 <line:17:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow       |   |   `-RecoveryExpr 0x14e8288b0 <col:6> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x14e828890 <col:6> 'const int *' lvalue ParmVar 0x14e80de70 'spans' 'const int *'       |   `-BinaryOperator 0x14e828980 <line:18:11, col:25> 'int' '>'       |     |-UnaryOperator 0x14e828930 <col:11, col:13> 'unsigned int' prefix '--'       |     | `-DeclRefExpr 0x14e828910 <col:13> 'unsigned int' lvalue ParmVar 0x14e80def0 'num_spans' 'unsigned int'       |     `-ImplicitCastExpr 0x14e828968 <col:25> 'unsigned int' <IntegralCast>       |       `-IntegerLiteral 0x14e828948 <col:25> 'int' 1       `-CompoundStmt 0x14e8298a8 <line:19:12, line:33:5>         `-DoStmt 0x14e829888 <line:20:2, line:32:26>           |-CompoundStmt 0x14e8297d8 <line:20:5, line:32:2>           | |-IfStmt 0x14e829758 <line:21:6, line:30:6>           | | |-CXXDependentScopeMemberExpr 0x14e828a50 <line:21:10, col:19> '<dependent type>' contains-errors lvalue .coverage           | | | `-ArraySubscriptExpr 0x14e828a30 <col:10, col:17> '<dependent type>' contains-errors lvalue           | | |   |-ImplicitCastExpr 0x14e828a18 <col:10> '<dependent type>' contains-errors <LValueToRValue>           | | |   | `-RecoveryExpr 0x14e8289d8 <col:10> '<dependent type>' contains-errors lvalue           | | |   `-IntegerLiteral 0x14e8289f8 <col:16> 'int' 0           | | `-CompoundStmt 0x14e829738 <col:29, line:30:6>           | |   |-DeclStmt 0x14e828c20 <line:22:3, col:21>           | |   | |-VarDecl 0x14e828ab0 <col:3, col:12> col:7 used yy 'int' cinit           | |   | | `-ImplicitCastExpr 0x14e828b38 <col:12> 'int' <LValueToRValue>           | |   | |   `-DeclRefExpr 0x14e828b18 <col:12> 'int' lvalue ParmVar 0x14e80dd58 'y' 'int'           | |   | `-VarDecl 0x14e828b68 <col:3, col:20> col:15 used hh 'int' cinit           | |   |   `-ImplicitCastExpr 0x14e828bf0 <col:20> 'int' <LValueToRValue>           | |   |     `-DeclRefExpr 0x14e828bd0 <col:20> 'int' lvalue ParmVar 0x14e80ddd8 'h' 'int'           | |   `-DoStmt 0x14e829718 <line:23:3, line:29:16>           | |     |-CompoundStmt 0x14e8296c0 <line:23:6, line:29:3>           | |     | |-DeclStmt 0x14e829268 <line:24:7, col:40>           | |     | | `-VarDecl 0x14e828c50 <col:7, col:39> col:11 used len 'int' cinit           | |     | |   `-BinaryOperator 0x14e829248 <col:17, col:39> '<dependent type>' contains-errors '-'           | |     | |     |-CXXDependentScopeMemberExpr 0x14e828d30 <col:17, col:26> '<dependent type>' contains-errors lvalue .x           | |     | |     | `-ArraySubscriptExpr 0x14e828d10 <col:17, col:24> '<dependent type>' contains-errors lvalue           | |     | |     |   |-ImplicitCastExpr 0x14e828cf8 <col:17> '<dependent type>' contains-errors <LValueToRValue>           | |     | |     |   | `-RecoveryExpr 0x14e828cb8 <col:17> '<dependent type>' contains-errors lvalue           | |     | |     |   `-IntegerLiteral 0x14e828cd8 <col:23> 'int' 1           | |     | |     `-CXXDependentScopeMemberExpr 0x14e829200 <col:30, col:39> '<dependent type>' contains-errors lvalue .x           | |     | |       `-ArraySubscriptExpr 0x14e828dd0 <col:30, col:37> '<dependent type>' contains-errors lvalue           | |     | |         |-ImplicitCastExpr 0x14e828db8 <col:30> '<dependent type>' contains-errors <LValueToRValue>           | |     | |         | `-RecoveryExpr 0x14e828d78 <col:30> '<dependent type>' contains-errors lvalue           | |     | |         `-IntegerLiteral 0x14e828d98 <col:36> 'int' 0           | |     | `-UnaryOperator 0x14e8296a8 <line:28:7, col:9> 'int' postfix '++'           | |     |   `-DeclRefExpr 0x14e829688 <col:7> 'int' lvalue Var 0x14e828ab0 'yy' 'int'           | |     `-UnaryOperator 0x14e829700 <line:29:12, col:14> 'int' prefix '--'           | |       `-DeclRefExpr 0x14e8296e0 <col:14> 'int' lvalue Var 0x14e828b68 'hh' 'int'           | `-UnaryOperator 0x14e8297c0 <line:31:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow           |   `-RecoveryExpr 0x14e829798 <col:6> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x14e829778 <col:6> 'const int *' lvalue ParmVar 0x14e80de70 'spans' 'const int *'           `-BinaryOperator 0x14e829868 <line:32:11, col:25> 'int' '>'             |-UnaryOperator 0x14e829818 <col:11, col:13> 'unsigned int' prefix '--'             | `-DeclRefExpr 0x14e8297f8 <col:13> 'unsigned int' lvalue ParmVar 0x14e80def0 'num_spans' 'unsigned int'             `-ImplicitCastExpr 0x14e829850 <col:25> 'unsigned int' <IntegralCast>               `-IntegerLiteral 0x14e829830 <col:25> 'int' 1 ","21165":"`-FunctionDecl 0x129128198  line:1:1 rpc_alloc_task 'int (void)'   `-CompoundStmt 0x1291285a8 <line:2:1, line:4:1> ","21178":"`-FunctionDecl 0x139141888  line:1:6 invalid set_part_state 'int (int *, int *, enum partition_state)'   |-ParmVarDecl 0x139128128 <col:21, col:33> col:33 invalid alter_info 'int *'   |-ParmVarDecl 0x1391281a8 <col:45, col:61> col:61 invalid tab_part_info 'int *'   |-ParmVarDecl 0x139128748 <line:2:21, col:42> col:42 invalid part_state 'enum partition_state'   `-CompoundStmt 0x139143220 <line:3:1, line:39:1>     |-DeclStmt 0x1391419e8 <line:4:3, col:21>     | `-VarDecl 0x139141960 <col:3, col:20> col:8 used part_count 'int' cinit     |   `-IntegerLiteral 0x1391419c8 <col:20> 'int' 0     |-DeclStmt 0x139141aa0 <line:5:3, col:26>     | `-VarDecl 0x139141a18 <col:3, col:25> col:8 used num_parts_found 'int' cinit     |   `-IntegerLiteral 0x139141a80 <col:25> 'int' 0     |-DoStmt 0x139142438 <line:8:3, line:23:51>     | |-CompoundStmt 0x139142360 <line:9:3, line:23:3>     | | `-IfStmt 0x139142330 <line:11:5, line:22:7> has_else     | |   |-RecoveryExpr 0x139141fd8 <line:11:9, line:13:39> '_Bool' contains-errors     | |   |-CompoundStmt 0x139142308 <line:14:5, line:20:5>     | |   | |-UnaryOperator 0x139142018 <line:16:7, col:22> 'int' postfix '++'     | |   | | `-DeclRefExpr 0x139141ff8 <col:7> 'int' lvalue Var 0x139141a18 'num_parts_found' 'int'     | |   | `-CallExpr 0x1391422d0 <line:18:7, line:19:64> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x139142130 <line:18:7> 'int ()' Function 0x139142078 'DBUG_PRINT' 'int ()'     | |   |   |-StringLiteral 0x139142190 <col:18> 'char[4]' lvalue \"STR\"     | |   |   |-RecoveryExpr 0x1391421b0 <line:19:27> '<dependent type>' contains-errors lvalue     | |   |   `-CXXDependentScopeMemberExpr 0x139142288 <col:39, col:50> '<dependent type>' contains-errors lvalue ->partition_name     | |   |     `-RecoveryExpr 0x139142268 <col:39> '<dependent type>' contains-errors lvalue     | |   `-NullStmt 0x139142328 <line:22:7>     | `-BinaryOperator 0x139142418 <line:23:12, col:42> 'int' contains-errors '<'     |   |-UnaryOperator 0x139142398 <col:12, col:14> 'int' prefix '++'     |   | `-DeclRefExpr 0x139142378 <col:14> 'int' lvalue Var 0x139141960 'part_count' 'int'     |   `-CXXDependentScopeMemberExpr 0x1391423d0 <col:27, col:42> '<dependent type>' contains-errors lvalue ->num_parts     |     `-RecoveryExpr 0x1391423b0 <col:27> '<dependent type>' contains-errors lvalue     `-IfStmt 0x139143200 <line:25:3, line:37:3>       |-RecoveryExpr 0x1391425b0 <line:25:7, line:26:58> '_Bool' contains-errors       `-CompoundStmt 0x1391427d0 <line:27:3, line:37:3>         |-CallExpr 0x139142618 <line:29:5, col:20> '<dependent type>' contains-errors         | `-RecoveryExpr 0x1391425f0 <col:5, col:13> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1391425d0 <col:5> 'int ()' Function 0x139141b78 'part_it' 'int ()'         |-BinaryOperator 0x139142678 <line:30:5, col:17> 'int' '='         | |-DeclRefExpr 0x139142638 <col:5> 'int' lvalue Var 0x139141960 'part_count' 'int'         | `-IntegerLiteral 0x139142658 <col:17> 'int' 0         `-DoStmt 0x1391427b0 <line:31:5, line:35:53>           |-CompoundStmt 0x1391426e0 <line:32:5, line:35:5>           `-BinaryOperator 0x139142790 <col:14, col:44> 'int' contains-errors '<'             |-UnaryOperator 0x139142710 <col:14, col:16> 'int' prefix '++'             | `-DeclRefExpr 0x1391426f0 <col:16> 'int' lvalue Var 0x139141960 'part_count' 'int'             `-CXXDependentScopeMemberExpr 0x139142748 <col:29, col:44> '<dependent type>' contains-errors lvalue ->num_parts               `-RecoveryExpr 0x139142728 <col:29> '<dependent type>' contains-errors lvalue ","20563":"`-FunctionDecl 0x1450c09a8  line:1:1 LOG_OpenFileLog 'int (const char *)'   |-ParmVarDecl 0x1450c08d8 <col:17, col:29> col:29 used log_file 'const char *'   `-CompoundStmt 0x1450d9788 <line:2:1, line:20:1>     |-IfStmt 0x1450d9228 <line:5:3, line:11:3> has_else     | |-ImplicitCastExpr 0x1450c0af0 <line:5:7> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x1450c0ad0 <col:7> 'const char *' lvalue ParmVar 0x1450c08d8 'log_file' 'const char *'     | |-CompoundStmt 0x1450c0fd8 <col:17, line:9:3>     | | `-IfStmt 0x1450c0fb8 <line:7:5, line:8:32>     | |   |-UnaryOperator 0x1450c0de8 <line:7:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   | `-ImplicitCastExpr 0x1450c0dd0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x1450c0db0 <col:10> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x1450c0f58 <line:8:7, col:32> 'int'     | |     |-ImplicitCastExpr 0x1450c0f40 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x1450c0ee0 <col:7> 'int ()' Function 0x1450c0e28 'LOG_FATAL' 'int ()'     | |     |-ImplicitCastExpr 0x1450c0f88 <col:17> 'char *' <ArrayToPointerDecay>     | |     | `-StringLiteral 0x1450c0f00 <col:17> 'char[4]' lvalue \"STR\"     | |     `-ImplicitCastExpr 0x1450c0fa0 <col:24> 'const char *' <LValueToRValue>     | |       `-DeclRefExpr 0x1450c0f20 <col:24> 'const char *' lvalue ParmVar 0x1450c08d8 'log_file' 'const char *'     | `-CompoundStmt 0x1450d9218 <line:9:10, line:11:3>     |-CallExpr 0x1450d9478 <line:14:3, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1450d9338 <col:3> 'int ()' Function 0x1450d9280 'setvbuf' 'int ()'     | |-RecoveryExpr 0x1450d93f8 <col:11> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1450d9418 <col:14> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1450d9438 <col:20> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1450d9458 <col:28> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1450d9768 <line:16:3, line:17:20>       |-BinaryOperator 0x1450d95c0 <line:16:7, col:31> 'int' contains-errors '&&'       | |-RecoveryExpr 0x1450d9540 <col:7> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x1450d95a0 <col:19, col:31> 'int' contains-errors '!='       |   |-RecoveryExpr 0x1450d9560 <col:19> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x1450d9580 <col:31> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1450d9740 <line:17:5, col:20> '<dependent type>' contains-errors         |-DeclRefExpr 0x1450d96c0 <col:5> 'int ()' Function 0x1450d9608 'fclose' 'int ()'         `-RecoveryExpr 0x1450d9720 <col:12> '<dependent type>' contains-errors lvalue ","21153":"`-FunctionDecl 0x13c80ddf0  line:1:13 invalid ms_adpcm_run_pull 'void (int *)' static   |-ParmVarDecl 0x13c80dd28 <col:32, col:47> col:47 referenced invalid module 'int *'   `-CompoundStmt 0x13c829030 <line:2:1, line:49:1>     |-DeclStmt 0x13c80e070 <line:6:2, col:36>     | |-VarDecl 0x13c80dee8 <col:2, col:7> col:7 used i 'int'     | |-VarDecl 0x13c80df68 <col:2, col:10> col:10 used framesPerBlock 'int'     | `-VarDecl 0x13c80dfe8 <col:2, col:26> col:26 used blockCount 'int'     |-BinaryOperator 0x13c80e3b8 <line:9:2, col:52> 'int' contains-errors '='     | |-DeclRefExpr 0x13c80e088 <col:2> 'int' lvalue Var 0x13c80df68 'framesPerBlock' 'int'     | `-BinaryOperator 0x13c80e398 <col:19, col:52> '<dependent type>' contains-errors '\/'     |   |-CXXDependentScopeMemberExpr 0x13c80e258 <col:19, col:22> '<dependent type>' contains-errors lvalue ->samplesPerBlock     |   | `-RecoveryExpr 0x13c80e238 <col:19> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x13c80e350 <col:40, col:52> '<dependent type>' contains-errors lvalue .channelCount     |     `-CXXDependentScopeMemberExpr 0x13c80e308 <col:40, col:50> '<dependent type>' contains-errors lvalue ->f     |       `-CXXDependentScopeMemberExpr 0x13c80e2c0 <col:40, col:43> '<dependent type>' contains-errors lvalue ->track     |         `-RecoveryExpr 0x13c80e2a0 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c8284b0 <line:10:2, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c828360 <col:2> 'int ()' Function 0x13c8282a8 'assert' 'int ()'     | `-BinaryOperator 0x13c828490 <col:9, col:51> 'int' contains-errors '=='     |   |-BinaryOperator 0x13c828450 <col:9, col:33> '<dependent type>' contains-errors '%'     |   | |-CXXDependentScopeMemberExpr 0x13c8283e8 <col:9, col:23> '<dependent type>' contains-errors lvalue ->nframes     |   | | `-CXXDependentScopeMemberExpr 0x13c8283a0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->outc     |   | |   `-RecoveryExpr 0x13c828380 <col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13c828430 <col:33> 'int' lvalue Var 0x13c80df68 'framesPerBlock' 'int'     |   `-IntegerLiteral 0x13c828470 <col:51> 'int' 0     |-BinaryOperator 0x13c8285e8 <line:11:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x13c8284d8 <col:2> 'int' lvalue Var 0x13c80dfe8 'blockCount' 'int'     | `-BinaryOperator 0x13c8285c8 <col:15, col:39> '<dependent type>' contains-errors '\/'     |   |-CXXDependentScopeMemberExpr 0x13c828560 <col:15, col:29> '<dependent type>' contains-errors lvalue ->nframes     |   | `-CXXDependentScopeMemberExpr 0x13c828518 <col:15, col:23> '<dependent type>' contains-errors lvalue ->outc     |   |   `-RecoveryExpr 0x13c8284f8 <col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13c8285a8 <col:39> 'int' lvalue Var 0x13c80df68 'framesPerBlock' 'int'     |-ForStmt 0x13c828b78 <line:17:2, line:24:2>     | |-BinaryOperator 0x13c828918 <line:17:7, col:9> 'int' '='     | | |-DeclRefExpr 0x13c8288d8 <col:7> 'int' lvalue Var 0x13c80dee8 'i' 'int'     | | `-IntegerLiteral 0x13c8288f8 <col:9> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13c8289a8 <col:12, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x13c828978 <col:12> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13c828938 <col:12> 'int' lvalue Var 0x13c80dee8 'i' 'int'     | | `-ImplicitCastExpr 0x13c828990 <col:14> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13c828958 <col:14> 'int' lvalue Var 0x13c80dfe8 'blockCount' 'int'     | |-UnaryOperator 0x13c8289e8 <col:26, col:27> 'int' postfix '++'     | | `-DeclRefExpr 0x13c8289c8 <col:26> 'int' lvalue Var 0x13c80dee8 'i' 'int'     | `-CompoundStmt 0x13c828b68 <line:18:2, line:24:2>     `-IfStmt 0x13c828f38 <line:35:2, line:46:2>       |-RecoveryExpr 0x13c828d48 <line:35:6, col:49> '_Bool' contains-errors       `-CompoundStmt 0x13c828f20 <line:36:2, line:46:2>         `-IfStmt 0x13c828f00 <line:38:3, line:45:3>           |-RecoveryExpr 0x13c828d68 <line:38:7, col:17> '_Bool' contains-errors           `-CompoundStmt 0x13c828ef0 <line:39:3, line:45:3> ","20566":"`-FunctionDecl 0x13e80e458  line:1:1 invalid utf32be_mbc_to_code 'int (const int *, const int *)'   |-ParmVarDecl 0x13e80e2f0 <col:21, col:34> col:34 invalid p 'const int *'   |-ParmVarDecl 0x13e80e370 <col:37, col:50> col:50 invalid end 'const int *'   `-CompoundStmt 0x13e80e868 <line:2:1, line:4:1> ","20377":"`-FunctionDecl 0x13b1281a0  line:1:17 pad 'void (int)' inline   |-ParmVarDecl 0x13b1280d8 <col:21, col:25> col:25 used bytes 'int'   `-CompoundStmt 0x13b128510 <col:32, line:3:5>     `-WhileStmt 0x13b1284f0 <line:2:7, col:36>       |-BinaryOperator 0x13b1282f0 <col:14, col:24> 'int' '>'       | |-UnaryOperator 0x13b1282b8 <col:14, col:19> 'int' postfix '--'       | | `-DeclRefExpr 0x13b128298 <col:14> 'int' lvalue ParmVar 0x13b1280d8 'bytes' 'int'       | `-IntegerLiteral 0x13b1282d0 <col:24> 'int' 0       `-CallExpr 0x13b1284c8 <col:27, col:36> 'int'         |-ImplicitCastExpr 0x13b1284b0 <col:27> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x13b128440 <col:27> 'int ()' Function 0x13b128388 'writeU8' 'int ()'         `-IntegerLiteral 0x13b128460 <col:35> 'int' 0 ","20375":"`-FunctionDecl 0x149128238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x149128158 <col:8> col:8 used HttpConnectionManagerConfigTest 'int'   |-ParmVarDecl 0x1491280d8 <col:41> col:41 NormalizePathFalse 'int'   `-CompoundStmt 0x149808810 <col:61, line:19:1>     |-ImplicitCastExpr 0x149128370 <line:14:3> 'int' <LValueToRValue>     | `-DeclRefExpr 0x149128350 <col:3> 'int' lvalue ParmVar 0x149128158 'HttpConnectionManagerConfigTest' 'int'     |-CallExpr 0x149808200 <col:31, line:17:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1491284a0 <line:14:31> 'int ()' Function 0x1491283e8 'config' 'int ()'     | |-CallExpr 0x149128708 <col:38, col:84> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1491285a0 <col:38> 'int ()' Function 0x1491284e8 'parseHttpConnectionManagerFromYaml' 'int ()'     | | `-RecoveryExpr 0x1491286e8 <col:73> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x149128730 <col:87> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x149128750 <line:15:38> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x149128770 <col:54> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x149128790 <line:16:38> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1491287b0 <col:78> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1491287d0 <line:17:38> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1498087e8 <line:18:3, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x149808338 <col:3> 'int ()' Function 0x149808280 'EXPECT_FALSE' 'int ()'       `-CallExpr 0x1498087c8 <col:16, col:43> '<dependent type>' contains-errors         `-RecoveryExpr 0x1498087a0 <col:16, col:23> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x149808358 <col:16> 'int ()' Function 0x1491283e8 'config' 'int ()' ","20799":"`-FunctionDecl 0x12802a350  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12802a450 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12802a4b8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12802a520 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12802a3f8 <<invalid sloc>> Implicit 882 ","21185":"`-FunctionDecl 0x12a141830  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x12a141930 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12a1418d8 <<invalid sloc>> Implicit 903   `-FormatAttr 0x12a1419a0 <col:3> Implicit printf 1 2 ","20339":"`-FunctionDecl 0x12c141a08  line:1:12 invalid parse_sockaddr_pair 'int (struct sockaddr *, int, int *, int *, int *)' static   |-ParmVarDecl 0x12c128648 <col:32, col:49> col:49 used sa 'struct sockaddr *'   |-ParmVarDecl 0x12c1286c8 <col:53, col:57> col:57 used ext_len 'int'   |-ParmVarDecl 0x12c128798 <line:2:11, col:27> col:27 invalid saddr 'int *'   |-ParmVarDecl 0x12c141818 <col:34, col:50> col:50 invalid daddr 'int *'   |-ParmVarDecl 0x12c141898 <line:3:11, col:16> col:16 invalid family 'int *'   `-CompoundStmt 0x12c142608 <line:4:1, line:21:1>     |-DeclStmt 0x12c141bf0 <line:5:2, col:17>     | |-VarDecl 0x12c141af0 <col:2, col:6> col:6 used af 'int'     | `-VarDecl 0x12c141b70 <col:2, col:10> col:10 used socklen 'int'     |-IfStmt 0x12c141ef0 <line:7:2, line:8:11>     | |-BinaryOperator 0x12c141e28 <line:7:6, col:54> 'int' contains-errors '<'     | | |-DeclRefExpr 0x12c141c08 <col:6> 'int' lvalue ParmVar 0x12c1286c8 'ext_len' 'int'     | | `-CallExpr 0x12c141e00 <col:16, col:54> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c141d80 <col:16> 'int ()' Function 0x12c141cc8 'pfkey_sockaddr_pair_size' 'int ()'     | |   `-RecoveryExpr 0x12c141dd8 <col:41, col:45> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12c141da0 <col:41> 'struct sockaddr *' lvalue ParmVar 0x12c128648 'sa' 'struct sockaddr *'     | `-ReturnStmt 0x12c141ee0 <line:8:3, col:11>     |   `-UnaryOperator 0x12c141ec8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c141eb0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c141e90 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c1420a0 <line:10:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x12c141f10 <col:2> 'int' lvalue Var 0x12c141af0 'af' 'int'     | `-CallExpr 0x12c142070 <col:7, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c142010 <col:7> 'int ()' Function 0x12c141f58 'pfkey_sockaddr_extract' 'int ()'     |   |-DeclRefExpr 0x12c142030 <col:30> 'struct sockaddr *' lvalue ParmVar 0x12c128648 'sa' 'struct sockaddr *'     |   `-RecoveryExpr 0x12c142050 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c1421b8 <line:11:2, line:12:11>     | |-UnaryOperator 0x12c1420f8 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c1420e0 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x12c1420c0 <col:7> 'int' lvalue Var 0x12c141af0 'af' 'int'     | `-ReturnStmt 0x12c1421a8 <line:12:3, col:11>     |   `-UnaryOperator 0x12c142190 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c142178 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c142158 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c1423a8 <line:14:2, col:33> 'int' '='     | |-DeclRefExpr 0x12c1421d8 <col:2> 'int' lvalue Var 0x12c141b70 'socklen' 'int'     | `-CallExpr 0x12c142368 <col:12, col:33> 'int'     |   |-ImplicitCastExpr 0x12c142350 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12c1422d8 <col:12> 'int ()' Function 0x12c142220 'pfkey_sockaddr_len' 'int ()'     |   `-ImplicitCastExpr 0x12c142390 <col:31> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12c1422f8 <col:31> 'int' lvalue Var 0x12c141af0 'af' 'int'     |-IfStmt 0x12c142528 <line:15:2, line:17:11>     | |-RecoveryExpr 0x12c142460 <line:15:6, line:16:18> '_Bool' contains-errors     | `-ReturnStmt 0x12c142518 <line:17:3, col:11>     |   `-UnaryOperator 0x12c142500 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c1424e8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c1424c8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c1425b8 <line:19:2, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x12c142580 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12c142568 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12c142548 <col:3> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x12c142598 <col:12> 'int' lvalue Var 0x12c141af0 'af' 'int'     `-ReturnStmt 0x12c1425f8 <line:20:2, col:9>       `-IntegerLiteral 0x12c1425d8 <col:9> 'int' 0 ","20554":"`-FunctionDecl 0x14580df18  line:1:1 invalid end_lex_with_single_table 'int (int *, int *, int *)'   |-ParmVarDecl 0x14580dd28 <col:27, col:32> col:32 referenced invalid thd 'int *'   |-ParmVarDecl 0x14580dda8 <col:37, col:44> col:44 referenced invalid table 'int *'   |-ParmVarDecl 0x14580de28 <col:51, col:56> col:56 invalid old_lex 'int *'   `-CompoundStmt 0x145827518 <line:2:1, line:8:1>     |-BinaryOperator 0x14580e108 <line:4:3, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14580e0a0 <col:3, col:10> '<dependent type>' contains-errors lvalue ->map     | | `-RecoveryExpr 0x14580e078 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14580e058 <col:3> 'int *' lvalue ParmVar 0x14580dda8 'table' 'int *'     | `-IntegerLiteral 0x14580e0e8 <col:15> 'int' 0     |-BinaryOperator 0x14580e210 <line:5:3, col:35> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14580e170 <col:3, col:10> '<dependent type>' contains-errors lvalue ->get_fields_in_item_tree     | | `-RecoveryExpr 0x14580e148 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14580e128 <col:3> 'int *' lvalue ParmVar 0x14580dda8 'table' 'int *'     | `-RecoveryExpr 0x14580e1f0 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x145827420 <line:6:3, col:14> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14580e390 <col:3> 'int ()' Function 0x14580e2d8 'lex_end' 'int ()'     | `-RecoveryExpr 0x145827400 <col:11> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1458274f8 <line:7:3, col:13> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x145827490 <col:3, col:8> '<dependent type>' contains-errors lvalue ->lex       | `-RecoveryExpr 0x145827468 <col:3> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x145827448 <col:3> 'int *' lvalue ParmVar 0x14580dd28 'thd' 'int *'       `-RecoveryExpr 0x1458274d8 <col:13> '<dependent type>' contains-errors lvalue ","20919":"`-FunctionDecl 0x12e141838  line:1:16 invalid get_privs_2_svc 'int *(int *, struct svc_req *)'   |-ParmVarDecl 0x12e128128 <col:32, col:43> col:43 invalid arg 'int *'   |-ParmVarDecl 0x12e128718 <col:48, col:64> col:64 used rqstp 'struct svc_req *'   `-CompoundStmt 0x12e144590 <line:2:1, line:40:1>     |-DeclStmt 0x12e141970 <line:3:5, col:39>     | `-VarDecl 0x12e141908 <col:5, col:36> col:36 referenced invalid ret 'int' static     |-DeclStmt 0x12e141a40 <line:8:5, col:50>     | `-VarDecl 0x12e1419a0 <col:5, col:46> col:37 used errmsg 'const char *' cinit     |   `-RecoveryExpr 0x12e141a20 <col:46> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e141c70 <line:10:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e141bb0 <col:5> 'int ()' Function 0x12e141af8 'xdr_free' 'int ()'     | |-RecoveryExpr 0x12e141c50 <col:14> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x12e141c08 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e141be8 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e141fb8 <line:12:5, line:13:14>     | |-RecoveryExpr 0x12e141f30 <line:12:9, col:60> '_Bool' contains-errors     | `-GotoStmt 0x12e141fa0 <line:13:9, col:14> 'exit_func' 0x12e141f50     |-IfStmt 0x12e1421a8 <line:15:5, line:16:14>     | |-RecoveryExpr 0x12e142170 <line:15:9, col:49> '_Bool' contains-errors     | `-GotoStmt 0x12e142190 <line:16:9, col:14> 'exit_func' 0x12e141f50     |-BinaryOperator 0x12e142340 <line:18:5, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12e142210 <col:5, col:9> '<dependent type>' contains-errors lvalue .api_version     | | `-RecoveryExpr 0x12e1421e8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12e1421c8 <col:5> 'int' lvalue Var 0x12e141908 'ret' 'int'     | `-CXXDependentScopeMemberExpr 0x12e1422f8 <col:23, col:31> '<dependent type>' contains-errors lvalue ->api_version     |   `-RecoveryExpr 0x12e1422d8 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e142760 <line:20:5, line:23:5>     | |-BinaryOperator 0x12e142600 <line:20:9, col:63> 'int' contains-errors '<'     | | |-CallExpr 0x12e1425c8 <col:9, col:59> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12e142440 <col:9> 'int ()' Function 0x12e142388 'setup_gss_names' 'int ()'     | | | |-DeclRefExpr 0x12e142460 <col:25> 'struct svc_req *' lvalue ParmVar 0x12e128718 'rqstp' 'struct svc_req *'     | | | |-UnaryOperator 0x12e142578 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x12e142558 <col:33> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x12e1425b0 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x12e142590 <col:47> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12e142518 <col:63> 'int' 0     | `-CompoundStmt 0x12e142740 <col:66, line:23:5>     |   |-BinaryOperator 0x12e142708 <line:21:9, col:20> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12e142668 <col:9, col:13> '<dependent type>' contains-errors lvalue .code     |   | | `-RecoveryExpr 0x12e142640 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e142620 <col:9> 'int' lvalue Var 0x12e141908 'ret' 'int'     |   | `-RecoveryExpr 0x12e1426e8 <col:20> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12e142728 <line:22:9, col:14> 'exit_func' 0x12e141f50     |-LabelStmt 0x12e144408 <line:35:1, col:10> 'exit_func'     | `-NullStmt 0x12e144400 <col:10>     `-ReturnStmt 0x12e144580 <line:39:5, col:13>       `-UnaryOperator 0x12e144568 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x12e144548 <col:13> '<dependent type>' contains-errors lvalue ","21003":"`-FunctionDecl 0x12c827a50  col:5 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x12c827b50 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12c827bb8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12c827af8 <<invalid sloc>> Implicit 887 ","20548":"`-FunctionDecl 0x13d128318  line:2:1 invalid mono_image_create_method_token 'int (int *, int *, int *)'   |-ParmVarDecl 0x13d128128 <col:33, col:51> col:51 invalid assembly 'int *'   |-ParmVarDecl 0x13d1281a8 <col:61, col:73> col:73 invalid obj 'int *'   |-ParmVarDecl 0x13d128228 <col:78, col:89> col:89 invalid opt_param_types 'int *'   `-CompoundStmt 0x13d1285e8 <line:3:1, line:5:11>     |-CallExpr 0x13d128598 <line:4:2, col:24> 'int'     | `-ImplicitCastExpr 0x13d128580 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13d128530 <col:2> 'int ()' Function 0x13d128478 'g_assert_not_reached' 'int ()'     `-ReturnStmt 0x13d1285d8 <line:5:2, col:9>       `-IntegerLiteral 0x13d1285b8 <col:9> 'int' 0 ","20240":"`-FunctionDecl 0x12e128438  line:1:13 invalid rdpei_touch_begin 'int (int *, int, int, int, int *)' static   |-ParmVarDecl 0x12e128128 <col:31, col:51> col:51 invalid context 'int *'   |-ParmVarDecl 0x12e1281a8 <col:60, col:64> col:64 used externalId 'int'   |-ParmVarDecl 0x12e128228 <col:76, col:80> col:80 used x 'int'   |-ParmVarDecl 0x12e1282a8 <col:83, col:87> col:87 used y 'int'   |-ParmVarDecl 0x12e128328 <line:2:31, col:36> col:36 used contactId 'int *'   `-CompoundStmt 0x12f8087b8 <line:3:1, line:44:1>     |-DeclStmt 0x12e128588 <line:4:2, col:16>     | `-VarDecl 0x12e128520 <col:2, col:15> col:15 used i 'unsigned int'     |-ForStmt 0x12f808440 <line:13:2, line:26:2>     | |-BinaryOperator 0x12e128658 <line:13:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x12e128600 <col:7> 'unsigned int' lvalue Var 0x12e128520 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x12e128640 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x12e128620 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12e128780 <col:14, col:25> 'int' contains-errors '<'     | | |-DeclRefExpr 0x12e128678 <col:14> 'unsigned int' lvalue Var 0x12e128520 'i' 'unsigned int'     | | `-CXXDependentScopeMemberExpr 0x12e128738 <col:18, col:25> '<dependent type>' contains-errors lvalue ->maxTouchContacts     | |   `-RecoveryExpr 0x12e128718 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x12e1287c0 <col:43, col:44> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x12e1287a0 <col:43> 'unsigned int' lvalue Var 0x12e128520 'i' 'unsigned int'     | `-CompoundStmt 0x12f808428 <line:14:2, line:26:2>     |   `-IfStmt 0x12f808408 <line:17:3, line:25:3>     |     |-UnaryOperator 0x12f808390 <line:17:7, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x12f808378 <col:8, col:22> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-CXXDependentScopeMemberExpr 0x12f808330 <col:8, col:22> '<dependent type>' contains-errors lvalue ->active     |     |     `-RecoveryExpr 0x12f808310 <col:8> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12f8083f0 <line:18:3, line:25:3>     |       `-BreakStmt 0x12f8083e8 <line:24:4>     `-IfStmt 0x12f808748 <line:28:2, line:40:2>       |-RecoveryExpr 0x12f808498 <line:28:6, col:24> '_Bool' contains-errors       `-CompoundStmt 0x12f808738 <line:29:2, line:40:2> ","21192":"`-FunctionDecl 0x10500dee8  line:1:13 invalid start_new_rx_buffer 'int (int, unsigned long, int)' static   |-ParmVarDecl 0x10500dcf0 <col:33, col:37> col:37 used offset 'int'   |-ParmVarDecl 0x10500dd70 <col:45, col:59> col:59 used size 'unsigned long'   |-ParmVarDecl 0x10500ddf0 <col:65, col:69> col:69 used head 'int'   `-CompoundStmt 0x105027f60 <line:2:1, line:13:1>     |-IfStmt 0x10500e088 <line:4:2, line:5:10>     | |-BinaryOperator 0x10500e020 <line:4:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x10500dfa8 <col:6> 'int' lvalue ParmVar 0x10500dcf0 'offset' 'int'     | | `-RecoveryExpr 0x10500e000 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x10500e078 <line:5:3, col:10>     |   `-RecoveryExpr 0x10500e058 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x10500e2e0 <line:8:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x10500e200 <col:2> 'int ()' Function 0x10500e148 'BUG_ON' 'int ()'     | `-BinaryOperator 0x10500e2c0 <col:9, col:16> 'int' contains-errors '>'     |   |-DeclRefExpr 0x10500e220 <col:9> 'unsigned long' lvalue ParmVar 0x10500dd70 'size' 'unsigned long'     |   `-RecoveryExpr 0x10500e2a0 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x105027f28 <line:9:2, line:10:10>       |-RecoveryExpr 0x105027ec0 <line:9:6, col:56> '_Bool' contains-errors       `-ReturnStmt 0x105027f18 <line:10:3, col:10>         `-RecoveryExpr 0x105027ef8 <col:10> '<dependent type>' contains-errors lvalue ","20774":"`-FunctionDecl 0x14a124158  col:9 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14a124258 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14a1242c0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14a124328 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a124200 <<invalid sloc>> Implicit 883 ","20298":"`-FunctionDecl 0x12c941890  col:6 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x12c941990 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12c9419f8 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12c941a60 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12c941938 <<invalid sloc>> Implicit 888 ","20440":"`-FunctionDecl 0x121941a00  line:1:13 invalid read_multiple_cb 'void (struct bt_att_chan *, int, const void *, int, void *)' static   |-ParmVarDecl 0x121928648 <col:30, col:50> col:50 used chan 'struct bt_att_chan *'   |-ParmVarDecl 0x1219286e0 <col:56, col:64> col:64 invalid opcode 'int'   |-ParmVarDecl 0x121928798 <line:2:6, col:18> col:18 used pdu 'const void *'   |-ParmVarDecl 0x121941818 <col:23, col:32> col:32 invalid length 'int'   |-ParmVarDecl 0x121941898 <line:3:6, col:12> col:12 used user_data 'void *'   `-CompoundStmt 0x121943e20 <line:4:1, line:54:1>     |-DeclStmt 0x121941d08 <line:5:2, col:43>     | |-RecordDecl 0x121941ad0 <col:2, col:9> col:9 struct bt_gatt_server     | `-VarDecl 0x121941c38 <col:2, col:34> col:25 used server 'struct bt_gatt_server *' cinit     |   `-ImplicitCastExpr 0x121941cd8 <col:34> 'struct bt_gatt_server *' <BitCast>     |     `-ImplicitCastExpr 0x121941cc0 <col:34> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x121941ca0 <col:34> 'void *' lvalue ParmVar 0x121941898 'user_data' 'void *'     |-DeclStmt 0x121941f08 <line:6:2, col:32>     | |-RecordDecl 0x121941d20 <col:2, col:9> col:9 struct gatt_db_attribute     | `-VarDecl 0x121941e88 <col:2, col:28> col:28 used attr 'struct gatt_db_attribute *'     |-DeclStmt 0x121942140 <line:7:2, col:36>     | |-RecordDecl 0x121941f20 <col:2, col:9> col:9 struct read_mult_data     | `-VarDecl 0x121942088 <col:2, col:32> col:25 used data 'struct read_mult_data *' cinit     |   `-RecoveryExpr 0x121942108 <col:32> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x121942238 <line:9:2, col:13> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x121942218 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x1219421f8 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x121942190 <col:13> 'int' 0     |-IfStmt 0x121942360 <line:12:2, line:15:2>     | |-BinaryOperator 0x1219422a8 <line:12:6, col:15> 'int' contains-errors '<'     | | |-RecoveryExpr 0x121942268 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x121942288 <col:15> 'int' 4     | `-CompoundStmt 0x121942348 <col:18, line:15:2>     |   `-GotoStmt 0x121942330 <line:14:3, col:8> 'error' 0x1219422e0     |-BinaryOperator 0x121942620 <line:17:2, col:60> 'struct read_mult_data *' contains-errors '='     | |-DeclRefExpr 0x121942380 <col:2> 'struct read_mult_data *' contains-errors lvalue Var 0x121942088 'data' 'struct read_mult_data *'     | `-CallExpr 0x1219425e0 <col:9, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x121942500 <col:9> 'int ()' Function 0x121942448 'read_mult_data_new' 'int ()'     |   |-DeclRefExpr 0x121942520 <col:28> 'struct bt_gatt_server *' lvalue Var 0x121941c38 'server' 'struct bt_gatt_server *'     |   |-DeclRefExpr 0x121942540 <col:36> 'struct bt_att_chan *' lvalue ParmVar 0x121928648 'chan' 'struct bt_att_chan *'     |   |-RecoveryExpr 0x121942560 <col:42> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1219425c0 <col:50, col:59> '<dependent type>' contains-errors '\/'     |     |-RecoveryExpr 0x121942580 <col:50> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1219425a0 <col:59> 'int' 2     |-IfStmt 0x1219426a8 <line:18:2, line:19:8>     | |-UnaryOperator 0x121942678 <line:18:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x121942660 <col:7> 'struct read_mult_data *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x121942640 <col:7> 'struct read_mult_data *' contains-errors lvalue Var 0x121942088 'data' 'struct read_mult_data *'     | `-GotoStmt 0x121942690 <line:19:3, col:8> 'error' 0x1219422e0     |-IfStmt 0x121943680 <line:34:2, line:37:2>     | |-UnaryOperator 0x121943638 <line:34:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x121943620 <col:7> 'struct gatt_db_attribute *' <LValueToRValue>     | |   `-DeclRefExpr 0x121943600 <col:7> 'struct gatt_db_attribute *' lvalue Var 0x121941e88 'attr' 'struct gatt_db_attribute *'     | `-CompoundStmt 0x121943668 <col:13, line:37:2>     |   `-GotoStmt 0x121943650 <line:36:3, col:8> 'error' 0x1219422e0     |-IfStmt 0x121943858 <line:40:2, line:41:8>     | |-RecoveryExpr 0x121943820 <line:40:6> '_Bool' contains-errors     | `-GotoStmt 0x121943840 <line:41:3, col:8> 'error' 0x1219422e0     |-IfStmt 0x121943a88 <line:43:2, line:45:3>     | |-RecoveryExpr 0x121943a58 <line:43:6, line:44:37> '_Bool' contains-errors     | `-ReturnStmt 0x121943a78 <line:45:3>     `-LabelStmt 0x121943ca8 <line:49:1, line:51:27> 'error'       `-IfStmt 0x121943c88 <line:50:2, line:51:27>         |-ImplicitCastExpr 0x121943ac8 <line:50:6> 'struct read_mult_data *' contains-errors <LValueToRValue>         | `-DeclRefExpr 0x121943aa8 <col:6> 'struct read_mult_data *' contains-errors lvalue Var 0x121942088 'data' 'struct read_mult_data *'         `-CallExpr 0x121943c48 <line:51:3, col:27> 'int' contains-errors           |-ImplicitCastExpr 0x121943c30 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x121943bc0 <col:3> 'int ()' Function 0x121943b08 'read_mult_data_free' 'int ()'           `-ImplicitCastExpr 0x121943c70 <col:23> 'struct read_mult_data *' contains-errors <LValueToRValue>             `-DeclRefExpr 0x121943be0 <col:23> 'struct read_mult_data *' contains-errors lvalue Var 0x121942088 'data' 'struct read_mult_data *' ","20700":"`-FunctionDecl 0x144928758  line:1:12 replmd_start_transaction 'int (struct ldb_module *)' static   |-ParmVarDecl 0x144928648 <col:37, col:56> col:56 used module 'struct ldb_module *'   `-CompoundStmt 0x1450098f0 <line:2:1, line:18:1>     |-DeclStmt 0x145008f30 <line:4:2, line:5:31>     | |-RecordDecl 0x145008a50 <line:4:2, col:9> col:9 struct replmd_private     | `-VarDecl 0x145008bb8 <col:2, col:25> col:25 used replmd_private 'struct replmd_private *'     |-CallExpr 0x145009080 <line:6:2, col:35> 'int'     | |-ImplicitCastExpr 0x145009068 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x145009028 <col:2> 'int ()' Function 0x145008f70 'replmd_txn_cleanup' 'int ()'     | `-ImplicitCastExpr 0x1450090a8 <col:21> 'struct replmd_private *' <LValueToRValue>     |   `-DeclRefExpr 0x145009048 <col:21> 'struct replmd_private *' lvalue Var 0x145008bb8 'replmd_private' 'struct replmd_private *'     |-WhileStmt 0x1450096d0 <line:9:2, line:13:2>     | |-RecoveryExpr 0x1450090f8 <line:9:9, col:25> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1450090c0 <col:9> 'struct replmd_private *' lvalue Var 0x145008bb8 'replmd_private' 'struct replmd_private *'     | `-CompoundStmt 0x1450096a8 <col:30, line:13:2>     |   |-DeclStmt 0x145009368 <line:10:3, col:43>     |   | |-RecordDecl 0x145009120 <col:3, col:10> col:10 struct nc_entry     |   | `-VarDecl 0x145009288 <col:3, col:40> col:20 used e 'struct nc_entry *' cinit     |   |   `-RecoveryExpr 0x145009328 <col:24, col:40> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1450092f0 <col:24> 'struct replmd_private *' lvalue Var 0x145008bb8 'replmd_private' 'struct replmd_private *'     |   |-CallExpr 0x145009500 <line:11:3, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x145009460 <col:3> 'int ()' Function 0x1450093a8 'DLIST_REMOVE' 'int ()'     |   | |-RecoveryExpr 0x1450094b8 <col:16, col:32> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x145009480 <col:16> 'struct replmd_private *' lvalue Var 0x145008bb8 'replmd_private' 'struct replmd_private *'     |   | `-DeclRefExpr 0x1450094e0 <col:37> 'struct nc_entry *' contains-errors lvalue Var 0x145009288 'e' 'struct nc_entry *'     |   `-CallExpr 0x145009668 <line:12:3, col:16> 'int' contains-errors     |     |-ImplicitCastExpr 0x145009650 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x145009610 <col:3> 'int ()' Function 0x145009558 'talloc_free' 'int ()'     |     `-ImplicitCastExpr 0x145009690 <col:15> 'struct nc_entry *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x145009630 <col:15> 'struct nc_entry *' contains-errors lvalue Var 0x145009288 'e' 'struct nc_entry *'     `-ReturnStmt 0x1450098e0 <line:17:2, col:36>       `-CallExpr 0x1450098a0 <col:9, col:36> 'int'         |-ImplicitCastExpr 0x145009888 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x145009848 <col:9> 'int ()' Function 0x145009790 'ldb_next_start_trans' 'int ()'         `-ImplicitCastExpr 0x1450098c8 <col:30> 'struct ldb_module *' <LValueToRValue>           `-DeclRefExpr 0x145009868 <col:30> 'struct ldb_module *' lvalue ParmVar 0x144928648 'module' 'struct ldb_module *' ","20896":"`-FunctionDecl 0x14700ddf8  line:1:1 invalid parser_module_parse_import_clause 'int (int *)'   |-ParmVarDecl 0x14700dd28 <col:36, col:54> col:54 invalid context_p 'int *'   `-CompoundStmt 0x147809ad8 <line:2:1, line:98:1>     |-CallExpr 0x14700e170 <line:3:3, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14700e000 <col:3> 'int ()' Function 0x14700df48 'JERRY_ASSERT' 'int ()'     | `-BinaryOperator 0x14700e150 <col:17, col:42> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x14700e088 <col:17, col:34> '<dependent type>' contains-errors lvalue .type     |   | `-CXXDependentScopeMemberExpr 0x14700e040 <col:17, col:28> '<dependent type>' contains-errors lvalue ->token     |   |   `-RecoveryExpr 0x14700e020 <col:17> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14700e130 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14700e2b8 <line:4:3, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14700e278 <col:3> 'int ()' Function 0x14700e1c0 'lexer_next_token' 'int ()'     | `-RecoveryExpr 0x14700e298 <col:21> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x147809ab8 <line:6:3, line:97:3>       |-RecoveryExpr 0x14700e2f8 <line:6:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x147809a60 <line:7:3, line:97:3>         |-IfStmt 0x1470274d0 <line:8:5, line:12:5>         | |-BinaryOperator 0x147027420 <line:8:9, col:34> 'int' contains-errors '=='         | | |-CXXDependentScopeMemberExpr 0x14700e380 <col:9, col:26> '<dependent type>' contains-errors lvalue .type         | | | `-CXXDependentScopeMemberExpr 0x14700e338 <col:9, col:20> '<dependent type>' contains-errors lvalue ->token         | | |   `-RecoveryExpr 0x14700e318 <col:9> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x147027400 <col:34> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x1470274b0 <line:9:5, line:12:5>         |   |-CallExpr 0x147027480 <line:10:7, col:34> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x147027440 <col:7> 'int ()' Function 0x14700e1c0 'lexer_next_token' 'int ()'         |   | `-RecoveryExpr 0x147027460 <col:25> '<dependent type>' contains-errors lvalue         |   `-BreakStmt 0x1470274a8 <line:11:7>         |-IfStmt 0x147027998 <line:14:5, line:18:5>         | |-BinaryOperator 0x1470277a8 <line:14:9, line:15:50> 'int' contains-errors '||'         | | |-BinaryOperator 0x147027748 <line:14:9, col:34> 'int' contains-errors '!='         | | | |-CXXDependentScopeMemberExpr 0x147027558 <col:9, col:26> '<dependent type>' contains-errors lvalue .type         | | | | `-CXXDependentScopeMemberExpr 0x147027510 <col:9, col:20> '<dependent type>' contains-errors lvalue ->token         | | | |   `-RecoveryExpr 0x1470274f0 <col:9> '<dependent type>' contains-errors lvalue         | | | `-RecoveryExpr 0x147027728 <col:34> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x147027788 <line:15:12, col:50> 'int' contains-errors '!='         | |   |-CXXDependentScopeMemberExpr 0x147027688 <col:12, col:42> '<dependent type>' contains-errors lvalue .type         | |   | `-CXXDependentScopeMemberExpr 0x147027640 <col:12, col:29> '<dependent type>' contains-errors lvalue .lit_location         | |   |   `-CXXDependentScopeMemberExpr 0x1470275f8 <col:12, col:23> '<dependent type>' contains-errors lvalue ->token         | |   |     `-RecoveryExpr 0x1470275d8 <col:12> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x147027768 <col:50> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x147027980 <line:16:5, line:18:5>         |   `-CallExpr 0x147027950 <line:17:7, col:68> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x1470278a8 <col:7> 'int ()' Function 0x1470277f0 'parser_raise_error' 'int ()'         |     |-RecoveryExpr 0x1470278c8 <col:27> '<dependent type>' contains-errors lvalue         |     `-RecoveryExpr 0x147027930 <col:38> '<dependent type>' contains-errors lvalue         |-IfStmt 0x147027d80 <line:20:5, line:24:5>         | |-BinaryOperator 0x147027ad0 <line:20:9, col:64> 'int' contains-errors '=='         | | |-CXXDependentScopeMemberExpr 0x147027a20 <col:9, col:41> '<dependent type>' contains-errors lvalue ->source_p         | | | `-CXXDependentScopeMemberExpr 0x1470279d8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->next_scanner_info_p         | | |   `-RecoveryExpr 0x1470279b8 <col:9> '<dependent type>' contains-errors lvalue         | | `-CXXDependentScopeMemberExpr 0x147027a88 <col:53, col:64> '<dependent type>' contains-errors lvalue ->source_p         | |   `-RecoveryExpr 0x147027a68 <col:53> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x147027d60 <line:21:5, line:24:5>         |   |-CallExpr 0x147027c60 <line:22:7, col:88> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x147027af0 <col:7> 'int ()' Function 0x14700df48 'JERRY_ASSERT' 'int ()'         |   | `-BinaryOperator 0x147027c40 <col:21, col:61> 'int' contains-errors '=='         |   |   |-CXXDependentScopeMemberExpr 0x147027b78 <col:21, col:53> '<dependent type>' contains-errors lvalue ->type         |   |   | `-CXXDependentScopeMemberExpr 0x147027b30 <col:21, col:32> '<dependent type>' contains-errors lvalue ->next_scanner_info_p         |   |   |   `-RecoveryExpr 0x147027b10 <col:21> '<dependent type>' contains-errors lvalue         |   |   `-RecoveryExpr 0x147027c20 <col:61> '<dependent type>' contains-errors lvalue         |   `-CallExpr 0x147027d30 <line:23:7, col:68> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x147027c88 <col:7> 'int ()' Function 0x1470277f0 'parser_raise_error' 'int ()'         |     |-RecoveryExpr 0x147027ca8 <col:27> '<dependent type>' contains-errors lvalue         |     `-RecoveryExpr 0x147027d10 <col:38> '<dependent type>' contains-errors lvalue         |-CallExpr 0x147028028 <line:34:5, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x147027fe8 <col:5> 'int ()' Function 0x14700e1c0 'lexer_next_token' 'int ()'         | `-RecoveryExpr 0x147028008 <col:23> '<dependent type>' contains-errors lvalue         |-IfStmt 0x147808da0 <line:35:5, line:56:5>         | |-CallExpr 0x1470281f0 <line:35:9, col:55> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x147028130 <col:9> 'int ()' Function 0x147028078 'lexer_token_is_identifier' 'int ()'         | | |-RecoveryExpr 0x147028150 <col:36> '<dependent type>' contains-errors lvalue         | | |-StringLiteral 0x1470281b0 <col:47> 'char[4]' lvalue \"STR\"         | | `-IntegerLiteral 0x1470281d0 <col:54> 'int' 2         | `-CompoundStmt 0x147808d70 <line:36:5, line:56:5>         |   |-CallExpr 0x147028268 <line:37:7, col:34> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x147028228 <col:7> 'int ()' Function 0x14700e1c0 'lexer_next_token' 'int ()'         |   | `-RecoveryExpr 0x147028248 <col:25> '<dependent type>' contains-errors lvalue         |   |-IfStmt 0x1478088b8 <line:39:7, line:43:7>         |   | |-RecoveryExpr 0x147808848 <line:39:11, line:40:52> '_Bool' contains-errors         |   | `-CompoundStmt 0x1478088a8 <line:41:7, line:43:7>         |   |-IfStmt 0x147808b30 <line:45:7, line:49:7>         |   | |-BinaryOperator 0x1478089f0 <line:45:11, col:66> 'int' contains-errors '=='         |   | | |-CXXDependentScopeMemberExpr 0x147808940 <col:11, col:43> '<dependent type>' contains-errors lvalue ->source_p         |   | | | `-CXXDependentScopeMemberExpr 0x1478088f8 <col:11, col:22> '<dependent type>' contains-errors lvalue ->next_scanner_info_p         |   | | |   `-RecoveryExpr 0x1478088d8 <col:11> '<dependent type>' contains-errors lvalue         |   | | `-CXXDependentScopeMemberExpr 0x1478089a8 <col:55, col:66> '<dependent type>' contains-errors lvalue ->source_p         |   | |   `-RecoveryExpr 0x147808988 <col:55> '<dependent type>' contains-errors lvalue         |   | `-CompoundStmt 0x147808b20 <line:46:7, line:49:7>         |   `-CallExpr 0x147808d48 <line:55:7, col:34> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x147808d08 <col:7> 'int ()' Function 0x14700e1c0 'lexer_next_token' 'int ()'         |     `-RecoveryExpr 0x147808d28 <col:25> '<dependent type>' contains-errors lvalue         |-IfStmt 0x147809140 <line:61:5, line:70:5> has_else         | |-RecoveryExpr 0x147808fc0 <line:61:9, col:29> '_Bool' contains-errors         | |-CompoundStmt 0x147809020 <line:62:5, line:65:5>         | `-CompoundStmt 0x147809130 <line:67:5, line:70:5>         |-IfStmt 0x147809420 <line:72:5, line:77:5>         | |-RecoveryExpr 0x147809290 <line:72:9, col:70> '_Bool' contains-errors         | `-CompoundStmt 0x147809410 <line:73:5, line:77:5>         |-IfStmt 0x147809908 <line:83:5, line:91:5> has_else         | |-RecoveryExpr 0x147809700 <line:83:9, line:84:55> '_Bool' contains-errors         | |-CompoundStmt 0x147809760 <line:85:5, line:87:5>         | `-IfStmt 0x1478098e8 <line:88:10, line:91:5>         |   |-RecoveryExpr 0x147809848 <line:88:14, col:39> '_Bool' contains-errors         |   `-CompoundStmt 0x1478098d0 <line:89:5, line:91:5>         |     `-CallExpr 0x1478098a8 <line:90:7, col:34> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x147809868 <col:7> 'int ()' Function 0x14700e1c0 'lexer_next_token' 'int ()'         |       `-RecoveryExpr 0x147809888 <col:25> '<dependent type>' contains-errors lvalue         `-IfStmt 0x147809a40 <line:93:5, line:96:5>           |-CallExpr 0x1478099b8 <line:93:9, col:55> '<dependent type>' contains-errors           | |-DeclRefExpr 0x147809938 <col:9> 'int ()' Function 0x147028078 'lexer_token_is_identifier' 'int ()'           | |-RecoveryExpr 0x147809958 <col:36> '<dependent type>' contains-errors lvalue           | |-StringLiteral 0x147809978 <col:47> 'char[4]' lvalue \"STR\"           | `-IntegerLiteral 0x147809998 <col:54> 'int' 4           `-CompoundStmt 0x147809a30 <line:94:5, line:96:5> ","20588":"`-FunctionDecl 0x14800df60  line:1:8 invalid DoRealForwardFFT 'void (int *, int *, const int)'   |-ParmVarDecl 0x14800dd28 <col:25, col:42> col:42 invalid ctx 'int *'   |-ParmVarDecl 0x14800dda8 <col:47, col:55> col:55 invalid fft_shape 'int *'   |-ParmVarDecl 0x14800de28 <line:2:25, <invalid sloc>> col:37 invalid 'const int'   `-CompoundStmt 0x149008e48 <col:56, line:33:3>     |-DeclStmt 0x14800e0d8 <line:4:5, col:28>     | `-VarDecl 0x14800e038 <col:5, col:23> col:16 axes 'const int' auto cinit     |   `-RecoveryExpr 0x14800e0b8 <col:23> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14800e210 <line:5:5, col:49>     | `-VarDecl 0x14800e108 <col:5, col:10> col:10 used device 'int' auto     |-DeclStmt 0x13f922e48 <line:6:5, col:60>     | |-VarDecl 0x14800e240 <col:5, col:45> col:10 used input 'int' auto cinit     | | `-BinaryOperator 0x13f922d90 <col:18, col:45> 'int' contains-errors '<'     | |   |-CXXDependentScopeMemberExpr 0x13f922d28 <col:18, col:29> '<dependent type>' contains-errors lvalue .flat_inner_dims     | |   | `-CallExpr 0x13f922d00 <col:18, col:27> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x13f922c00 <col:18> 'int ()' Function 0x14800e348 'Tensor' 'int ()'     | |   |   `-RecoveryExpr 0x13f922ce0 <col:25> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13f922d70 <col:45> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x13f922dc8 <col:5, col:52> col:52 used FFTRank 'int' auto     |-DeclStmt 0x13f923368 <line:7:5, col:47>     | `-VarDecl 0x13f922e78 <col:5, col:46> col:16 used input_dims 'const int' auto cinit     |   `-CallExpr 0x13f923348 <col:29, col:46> '<dependent type>' contains-errors     |     `-RecoveryExpr 0x13f923320 <col:29, col:35> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13f922ee0 <col:29> 'int' contains-errors lvalue Var 0x14800e240 'input' 'int'     |-RecoveryExpr 0x13f9233b0 <line:10:5> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13f923798 <line:13:5, line:16:5>     | |-DeclStmt 0x13f9234e8 <line:13:10, col:19>     | | `-VarDecl 0x13f923460 <col:10, col:18> col:14 used i 'int' cinit     | |   `-IntegerLiteral 0x13f9234c8 <col:18> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x13f923570 <col:21, col:26> 'int' '<='     | | |-ImplicitCastExpr 0x13f923540 <col:21> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13f923500 <col:21> 'int' lvalue Var 0x13f923460 'i' 'int'     | | `-ImplicitCastExpr 0x13f923558 <col:26> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13f923520 <col:26> 'int' lvalue Var 0x13f922dc8 'FFTRank' 'int'     | |-UnaryOperator 0x13f9235b0 <col:35, col:37> 'int' prefix '++'     | | `-DeclRefExpr 0x13f923590 <col:37> 'int' lvalue Var 0x13f923460 'i' 'int'     | `-CompoundStmt 0x13f923788 <col:40, line:16:5>     |-DeclStmt 0x13f9238e8 <line:18:5, col:58>     | |-VarDecl 0x13f9237e8 <col:5, col:10> col:10 used output 'int' auto     | `-VarDecl 0x13f923868 <col:5, col:50> col:50 invalid FFTRank 'int' auto     |-ImplicitCastExpr 0x13f923950 <line:22:5> 'int (*)()' <FunctionToPointerDecay>     | `-DeclRefExpr 0x13f923900 <col:5> 'int ()' Function 0x14800e348 'Tensor' 'int ()'     `-DeclStmt 0x149008c18 <line:25:5, col:60>       |-VarDecl 0x13f923b08 <col:5, col:10> col:10 used full_fft 'int' auto       `-VarDecl 0x13f923b88 <col:5, col:52> col:52 invalid FFTRank 'int' auto ","20719":"`-FunctionDecl 0x142141e38  col:5 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x142141f38 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x142141ee0 <<invalid sloc>> Implicit 869 ","20691":"`-FunctionDecl 0x13400dfe8  line:1:16 invalid qmp_guest_file_read 'int *(int, int, int, int **)'   |-ParmVarDecl 0x13400dcf0 <col:36, col:44> col:44 invalid handle 'int'   |-ParmVarDecl 0x13400dd70 <col:52, col:57> col:57 invalid has_count 'int'   |-ParmVarDecl 0x13400ddf0 <line:2:36, col:44> col:44 referenced invalid count 'int'   |-ParmVarDecl 0x13400dee0 <col:51, col:59> col:59 invalid errp 'int **'   `-CompoundStmt 0x134027418 <line:3:1, line:41:1>     |-DeclStmt 0x13400e160 <line:5:5, col:16>     | `-VarDecl 0x13400e0f8 <col:5, col:13> col:13 used buf 'char *'     |-IfStmt 0x133922c78 <line:11:5, line:13:5>     | |-UnaryOperator 0x133922c00 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13400e3e8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13400e3c8 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133922c60 <col:15, line:13:5>     |   `-ReturnStmt 0x133922c50 <line:12:9, col:16>     |     `-RecoveryExpr 0x133922c30 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133922fd0 <line:14:5, line:20:5> has_else     | |-UnaryOperator 0x133922cd0 <line:14:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x133922cb8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x133922c98 <col:10> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x133922da8 <col:21, line:16:5>     | | `-BinaryOperator 0x133922d88 <line:15:9, col:17> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x133922d08 <col:9> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x133922ce8 <col:9> 'int' lvalue ParmVar 0x13400ddf0 'count' 'int'     | |   `-RecoveryExpr 0x133922d68 <col:17> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x133922fb0 <line:16:12, line:20:5>     |   |-BinaryOperator 0x133922e00 <line:16:16, col:24> 'int' contains-errors '<'     |   | |-RecoveryExpr 0x133922dc0 <col:16> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x133922de0 <col:24> 'int' 0     |   `-CompoundStmt 0x133922fa0 <col:27, line:20:5>     |-BinaryOperator 0x1339231a8 <line:23:5, col:28> 'char *' contains-errors '='     | |-DeclRefExpr 0x133923000 <col:5> 'char *' lvalue Var 0x13400e0f8 'buf' 'char *'     | `-CallExpr 0x133923180 <col:11, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133923100 <col:11> 'int ()' Function 0x133923048 'g_malloc0' 'int ()'     |   `-BinaryOperator 0x133923160 <col:21, col:27> '<dependent type>' contains-errors '+'     |     |-RecoveryExpr 0x133923120 <col:21> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x133923140 <col:27> 'int' 1     |-IfStmt 0x133923a70 <line:25:5, line:37:5> has_else     | |-RecoveryExpr 0x133923308 <line:25:9, col:10> '_Bool' contains-errors     | |-CompoundStmt 0x133923730 <col:17, line:28:5>     | | `-CallExpr 0x1339235d8 <line:26:9, col:53> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x133923408 <col:9> 'int ()' Function 0x133923350 'error_setg_win32' 'int ()'     | |   |-RecoveryExpr 0x133923428 <col:26> '<dependent type>' contains-errors lvalue     | |   |-CallExpr 0x133923598 <col:32, col:45> 'int'     | |   | `-ImplicitCastExpr 0x133923580 <col:32> 'int (*)()' <FunctionToPointerDecay>     | |   |   `-DeclRefExpr 0x133923528 <col:32> 'int ()' Function 0x133923470 'GetLastError' 'int ()'     | |   `-StringLiteral 0x1339235b8 <col:48> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x133923a58 <line:28:12, line:37:5>     |   `-IfStmt 0x133923a38 <line:34:9, line:36:9>     |     |-RecoveryExpr 0x1339238e8 <line:34:13, col:27> '_Bool' contains-errors     |     `-CompoundStmt 0x133923a28 <col:30, line:36:9>     `-CallExpr 0x133923bd8 <line:38:5, col:15> 'int'       |-ImplicitCastExpr 0x133923bc0 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x133923b80 <col:5> 'int ()' Function 0x133923ac8 'g_free' 'int ()'       `-ImplicitCastExpr 0x134027400 <col:12> 'char *' <LValueToRValue>         `-DeclRefExpr 0x133923ba0 <col:12> 'char *' lvalue Var 0x13400e0f8 'buf' 'char *' ","20938":"`-FunctionDecl 0x14d03e398  line:1:12 ecryptfs_init_kmem_caches 'int (void)' static   `-CompoundStmt 0x14d058cf8 <line:2:1, line:20:1>     |-DeclStmt 0x14d03e508 <line:3:2, col:7>     | `-VarDecl 0x14d03e4a0 <col:2, col:6> col:6 used i 'int'     |-ForStmt 0x14d058c90 <line:5:2, line:18:2>     | |-BinaryOperator 0x14d03e560 <line:5:7, col:11> 'int' '='     | | |-DeclRefExpr 0x14d03e520 <col:7> 'int' lvalue Var 0x14d03e4a0 'i' 'int'     | | `-IntegerLiteral 0x14d03e540 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14d03e798 <col:14, col:49> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14d03e580 <col:14> 'int' lvalue Var 0x14d03e4a0 'i' 'int'     | | `-CallExpr 0x14d03e770 <col:18, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14d03e6d0 <col:18> 'int ()' Function 0x14d03e618 'ARRAY_SIZE' 'int ()'     | |   `-RecoveryExpr 0x14d03e750 <col:29> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14d03e7d8 <col:52, col:53> 'int' postfix '++'     | | `-DeclRefExpr 0x14d03e7b8 <col:52> 'int' lvalue Var 0x14d03e4a0 'i' 'int'     | `-CompoundStmt 0x14d058c68 <col:57, line:18:2>     |   |-DeclStmt 0x14d03e9d8 <line:6:3, col:35>     |   | |-RecordDecl 0x14d03e7f0 <col:3, col:10> col:10 struct ecryptfs_cache_info     |   | `-VarDecl 0x14d03e958 <col:3, col:31> col:31 used info 'struct ecryptfs_cache_info *'     |   |-BinaryOperator 0x14d0586b0 <line:9:3, line:10:38> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x14d058630 <line:9:3, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x14d058618 <col:4, col:16> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-ParenExpr 0x14d0582d8 <col:4, col:16> '<dependent type>' contains-errors lvalue     |   | |     `-RecoveryExpr 0x14d0582b0 <col:5, col:11> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x14d057e58 <col:5> 'struct ecryptfs_cache_info *' lvalue Var 0x14d03e958 'info' 'struct ecryptfs_cache_info *'     |   | `-CallExpr 0x14d058668 <col:20, line:10:38> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14d058408 <line:9:20> 'int ()' Function 0x14d058350 'kmem_cache_create' 'int ()'     |   |   |-RecoveryExpr 0x14d058460 <col:38, col:44> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14d058428 <col:38> 'struct ecryptfs_cache_info *' lvalue Var 0x14d03e958 'info' 'struct ecryptfs_cache_info *'     |   |   |-RecoveryExpr 0x14d0584c0 <col:50, col:56> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14d058488 <col:50> 'struct ecryptfs_cache_info *' lvalue Var 0x14d03e958 'info' 'struct ecryptfs_cache_info *'     |   |   |-IntegerLiteral 0x14d0584e8 <line:10:5> 'int' 0     |   |   |-RecoveryExpr 0x14d058648 <col:8> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x14d058558 <col:28, col:34> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14d058520 <col:28> 'struct ecryptfs_cache_info *' lvalue Var 0x14d03e958 'info' 'struct ecryptfs_cache_info *'     |   `-IfStmt 0x14d058c48 <line:11:3, line:17:3>     |     |-UnaryOperator 0x14d058780 <line:11:7, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-UnaryOperator 0x14d058768 <col:8, col:21> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   `-ImplicitCastExpr 0x14d058750 <col:9, col:21> '<dependent type>' contains-errors <LValueToRValue>     |     |     `-ParenExpr 0x14d058730 <col:9, col:21> '<dependent type>' contains-errors lvalue     |     |       `-RecoveryExpr 0x14d058708 <col:10, col:16> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x14d0586d0 <col:10> 'struct ecryptfs_cache_info *' lvalue Var 0x14d03e958 'info' 'struct ecryptfs_cache_info *'     |     `-CompoundStmt 0x14d058c20 <col:24, line:17:3>     |       |-CallExpr 0x14d0588e8 <line:12:4, col:30> 'int'     |       | `-ImplicitCastExpr 0x14d0588d0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       |   `-DeclRefExpr 0x14d058878 <col:4> 'int ()' Function 0x14d0587c0 'ecryptfs_free_kmem_caches' 'int ()'     |       |-CallExpr 0x14d058b40 <line:13:4, line:15:16> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14d0589e8 <line:13:4> 'int ()' Function 0x14d058930 'ecryptfs_printk' 'int ()'     |       | |-RecoveryExpr 0x14d058b20 <col:20> '<dependent type>' contains-errors lvalue     |       | |-StringLiteral 0x14d058a60 <col:34, line:14:6> 'char[7]' lvalue \"STRSTR\"     |       | `-RecoveryExpr 0x14d058ac0 <line:15:6, col:12> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14d058a88 <col:6> 'struct ecryptfs_cache_info *' lvalue Var 0x14d03e958 'info' 'struct ecryptfs_cache_info *'     |       `-ReturnStmt 0x14d058c10 <line:16:4, col:12>     |         `-UnaryOperator 0x14d058bf8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |           `-ImplicitCastExpr 0x14d058be0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |             `-RecoveryExpr 0x14d058bc0 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14d058ce8 <line:19:2, col:9>       `-IntegerLiteral 0x14d058cc8 <col:9> 'int' 0 ","20812":"`-FunctionDecl 0x13b144850  col:10 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x13b144950 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13b1449b8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13b1448f8 <<invalid sloc>> Implicit 887 ","21025":"`-FunctionDecl 0x131940b20  line:1:13 umount_tree 'void (struct mount *, enum umount_tree_flags)' static   |-ParmVarDecl 0x131928648 <col:25, col:39> col:39 used mnt 'struct mount *'   |-ParmVarDecl 0x131940a00 <col:44, col:67> col:67 invalid how 'enum umount_tree_flags'   `-CompoundStmt 0x131944fb0 <line:2:1, line:49:1>     |-CallExpr 0x131940dd0 <line:3:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131940d50 <col:2> 'int ()' Function 0x131940c98 'LIST_HEAD' 'int ()'     | `-RecoveryExpr 0x131940db0 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x131940ef0 <line:4:2, col:17>     | `-VarDecl 0x131940e88 <col:2, col:16> col:16 used p 'struct mount *'     |-IfStmt 0x131941148 <line:6:2, line:7:29>     | |-BinaryOperator 0x131940f80 <line:6:6, col:12> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x131940f08 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x131940f60 <col:12> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x131941108 <line:7:3, col:29> 'int'     |   |-ImplicitCastExpr 0x1319410f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x131941080 <col:3> 'int ()' Function 0x131940fc8 'propagate_mount_unlock' 'int ()'     |   `-ImplicitCastExpr 0x131941130 <col:26> 'struct mount *' <LValueToRValue>     |     `-DeclRefExpr 0x1319410a0 <col:26> 'struct mount *' lvalue ParmVar 0x131928648 'mnt' 'struct mount *'     |-ForStmt 0x1319417c8 <line:10:2, line:13:2>     | |-BinaryOperator 0x1319411c0 <line:10:7, col:11> 'struct mount *' '='     | | |-DeclRefExpr 0x131941168 <col:7> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'     | | `-ImplicitCastExpr 0x1319411a8 <col:11> 'struct mount *' <LValueToRValue>     | |   `-DeclRefExpr 0x131941188 <col:11> 'struct mount *' lvalue ParmVar 0x131928648 'mnt' 'struct mount *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x131941200 <col:16> 'struct mount *' <LValueToRValue>     | | `-DeclRefExpr 0x1319411e0 <col:16> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'     | |-BinaryOperator 0x131941408 <col:19, col:38> 'struct mount *' '='     | | |-DeclRefExpr 0x131941218 <col:19> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'     | | `-ImplicitCastExpr 0x1319413f0 <col:23, col:38> 'struct mount *' <IntegralToPointer>     | |   `-CallExpr 0x131941390 <col:23, col:38> 'int'     | |     |-ImplicitCastExpr 0x131941378 <col:23> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x131941318 <col:23> 'int ()' Function 0x131941260 'next_mnt' 'int ()'     | |     |-ImplicitCastExpr 0x1319413c0 <col:32> 'struct mount *' <LValueToRValue>     | |     | `-DeclRefExpr 0x131941338 <col:32> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'     | |     `-ImplicitCastExpr 0x1319413d8 <col:35> 'struct mount *' <LValueToRValue>     | |       `-DeclRefExpr 0x131941358 <col:35> 'struct mount *' lvalue ParmVar 0x131928648 'mnt' 'struct mount *'     | `-CompoundStmt 0x1319417a8 <col:41, line:13:2>     |   |-CompoundAssignOperator 0x131941538 <line:11:3, col:23> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-CXXDependentScopeMemberExpr 0x131941488 <col:3, col:10> '<dependent type>' contains-errors lvalue .mnt_flags     |   | | `-RecoveryExpr 0x131941460 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x131941428 <col:3> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'     |   | `-RecoveryExpr 0x131941518 <col:23> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x131941778 <line:12:3, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x131941648 <col:3> 'int ()' Function 0x131941590 'list_move' 'int ()'     |     |-UnaryOperator 0x1319416c8 <col:13, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x1319416a0 <col:14, col:17> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x131941668 <col:14> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'     |     `-UnaryOperator 0x131941760 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x131941740 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x131943800 <line:16:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1319418e0 <col:2> 'int ()' Function 0x131941828 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x131941900 <col:22> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'     | |-UnaryOperator 0x1319419c0 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1319419a0 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1319419d8 <col:36> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1319439d8 <col:46, line:18:2>     | `-CallExpr 0x1319439b0 <line:17:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x131943918 <col:3> 'int ()' Function 0x131943860 'list_del_init' 'int ()'     |   `-UnaryOperator 0x131943998 <col:17, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x131943970 <col:18, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x131943938 <col:18> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'     `-WhileStmt 0x131944f90 <line:24:2, line:48:2>       |-RecoveryExpr 0x131943c88 <line:24:9, col:30> '_Bool' contains-errors       `-CompoundStmt 0x131944f60 <col:33, line:48:2>         |-CallExpr 0x131943e60 <line:27:3, col:31> '<dependent type>' contains-errors         | |-DeclRefExpr 0x131943dc8 <col:3> 'int ()' Function 0x131943860 'list_del_init' 'int ()'         | `-UnaryOperator 0x131943e48 <col:17, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x131943e20 <col:18, col:21> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x131943de8 <col:18> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'         |-CallExpr 0x131943f20 <line:28:3, col:29> '<dependent type>' contains-errors         | |-DeclRefExpr 0x131943e88 <col:3> 'int ()' Function 0x131943860 'list_del_init' 'int ()'         | `-UnaryOperator 0x131943f08 <col:17, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x131943ee0 <col:18, col:21> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x131943ea8 <col:18> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'         |-CallExpr 0x1319440a8 <line:29:3, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x131944028 <col:3> 'int ()' Function 0x131943f70 '__touch_mnt_namespace' 'int ()'         | `-RecoveryExpr 0x131944080 <col:25, col:28> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x131944048 <col:25> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'         `-IfStmt 0x131944e20 <line:38:3, line:46:3>           |-CallExpr 0x131944718 <line:38:7, col:23> 'int'           | |-ImplicitCastExpr 0x131944700 <col:7> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x1319446c0 <col:7> 'int ()' Function 0x131944608 'mnt_has_parent' 'int ()'           | `-ImplicitCastExpr 0x131944740 <col:22> 'struct mount *' <LValueToRValue>           |   `-DeclRefExpr 0x1319446e0 <col:22> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'           `-CompoundStmt 0x131944e00 <col:26, line:46:3>             |-CallExpr 0x131944970 <line:39:4, col:35> '<dependent type>' contains-errors             | |-DeclRefExpr 0x1319448b8 <col:4> 'int ()' Function 0x131944800 'mnt_add_count' 'int ()'             | |-RecoveryExpr 0x131944910 <col:18, col:21> '<dependent type>' contains-errors lvalue             | | `-DeclRefExpr 0x1319448d8 <col:18> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'             | `-UnaryOperator 0x131944958 <col:33, col:34> 'int' prefix '-'             |   `-IntegerLiteral 0x131944938 <col:34> 'int' 1             `-IfStmt 0x131944dd0 <line:40:4, line:45:4> has_else               |-RecoveryExpr 0x1319449a0 <line:40:8, col:9> '_Bool' contains-errors               |-CompoundStmt 0x131944c28 <col:21, line:43:4>               | `-CallExpr 0x131944bf8 <line:42:5, col:60> '<dependent type>' contains-errors               |   |-DeclRefExpr 0x131944aa0 <col:5> 'int ()' Function 0x1319449e8 'list_add_tail' 'int ()'               |   |-UnaryOperator 0x131944b20 <col:19, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow               |   | `-RecoveryExpr 0x131944af8 <col:20, col:23> '<dependent type>' contains-errors lvalue               |   |   `-DeclRefExpr 0x131944ac0 <col:20> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'               |   `-UnaryOperator 0x131944be0 <col:34, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow               |     `-CXXDependentScopeMemberExpr 0x131944b98 <col:35, col:50> '<dependent type>' contains-errors lvalue ->mnt_mounts               |       `-RecoveryExpr 0x131944b70 <col:35, col:38> '<dependent type>' contains-errors lvalue               |         `-DeclRefExpr 0x131944b38 <col:35> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *'               `-CompoundStmt 0x131944db8 <line:43:11, line:45:4>                 `-CallExpr 0x131944d78 <line:44:5, col:17> 'int'                   |-ImplicitCastExpr 0x131944d60 <col:5> 'int (*)()' <FunctionToPointerDecay>                   | `-DeclRefExpr 0x131944d20 <col:5> 'int ()' Function 0x131944c68 'umount_mnt' 'int ()'                   `-ImplicitCastExpr 0x131944da0 <col:16> 'struct mount *' <LValueToRValue>                     `-DeclRefExpr 0x131944d40 <col:16> 'struct mount *' lvalue Var 0x131940e88 'p' 'struct mount *' ","20911":"`-FunctionDecl 0x14c0a34d8  line:1:9 invalid dmar_assign_irte 'int (const struct intr_source *, union dmar_ir_entry *, int, int *)'   |-ParmVarDecl 0x14c08a068 <col:26, col:52> col:52 used intr_src 'const struct intr_source *'   |-ParmVarDecl 0x14c0a3258 <col:62, col:83> col:83 used irte 'union dmar_ir_entry *'   |-ParmVarDecl 0x14c0a32d8 <line:2:2, col:11> col:11 invalid idx_in 'int'   |-ParmVarDecl 0x14c0a3388 <col:19, col:29> col:29 invalid idx_out 'int *'   `-CompoundStmt 0x14c0a6b60 <line:3:1, line:64:1>     |-DeclStmt 0x14c0a3788 <line:4:2, col:32>     | |-RecordDecl 0x14c0a35a0 <col:2, col:9> col:9 struct dmar_drhd_rt     | `-VarDecl 0x14c0a3708 <col:2, col:23> col:23 used dmar_unit 'struct dmar_drhd_rt *'     |-DeclStmt 0x14c0a3938 <line:5:2, col:42>     | |-VarDecl 0x14c0a3828 <col:2, col:23> col:23 used ir_table 'union dmar_ir_entry *'     | `-VarDecl 0x14c0a38b8 <col:2, col:34> col:34 used ir_entry 'union dmar_ir_entry *'     |-DeclStmt 0x14c0a3ac8 <line:6:2, col:19>     | |-RecordDecl 0x14c0a3950 <col:2, col:8> col:8 union pci_bdf     | `-VarDecl 0x14c0a3a48 <col:2, col:16> col:16 referenced invalid sid 'union pci_bdf'     |-IfStmt 0x14b841b58 <line:10:2, line:17:2> has_else     | |-RecoveryExpr 0x14c0a3b18 <line:10:6, col:16> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c0a3ae0 <col:6> 'const struct intr_source *' lvalue ParmVar 0x14c08a068 'intr_src' 'const struct intr_source *'     | |-CompoundStmt 0x14c0a3fe8 <col:24, line:14:2>     | `-CompoundStmt 0x14b841b40 <col:9, line:17:2>     |   `-BinaryOperator 0x14b841a30 <line:15:3, col:60> 'struct dmar_drhd_rt *' contains-errors '='     |     |-DeclRefExpr 0x14c0a3ff8 <col:3> 'struct dmar_drhd_rt *' lvalue Var 0x14c0a3708 'dmar_unit' 'struct dmar_drhd_rt *'     |     `-CallExpr 0x14b841a00 <col:15, col:60> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14c0a40f8 <col:15> 'int ()' Function 0x14c0a4040 'ioapic_to_dmaru' 'int ()'     |       |-CXXDependentScopeMemberExpr 0x14c0a4178 <col:31, col:45> '<dependent type>' contains-errors lvalue .ioapic_id     |       | `-RecoveryExpr 0x14c0a4150 <col:31, col:41> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c0a4118 <col:31> 'const struct intr_source *' lvalue ParmVar 0x14c08a068 'intr_src' 'const struct intr_source *'     |       `-UnaryOperator 0x14c0a41e0 <col:56, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x14c0a41c0 <col:57> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14c0a6b40 <line:19:2, line:61:2>       |-CallExpr 0x14b841cc8 <line:19:6, col:39> '<dependent type>' contains-errors       | |-DeclRefExpr 0x14b841c68 <col:6> 'int ()' Function 0x14b841bb0 'is_dmar_unit_valid' 'int ()'       | |-DeclRefExpr 0x14b841c88 <col:25> 'struct dmar_drhd_rt *' lvalue Var 0x14c0a3708 'dmar_unit' 'struct dmar_drhd_rt *'       | `-RecoveryExpr 0x14b841ca8 <col:36> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14c0a6b08 <col:42, line:61:2>         |-CallExpr 0x14b841e68 <line:20:3, col:39> 'int'         | |-ImplicitCastExpr 0x14b841e50 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x14b841dd8 <col:3> 'int ()' Function 0x14b841d20 'dmar_enable_intr_remapping' 'int ()'         | `-ImplicitCastExpr 0x14b841e90 <col:30> 'struct dmar_drhd_rt *' <LValueToRValue>         |   `-DeclRefExpr 0x14b841df8 <col:30> 'struct dmar_drhd_rt *' lvalue Var 0x14c0a3708 'dmar_unit' 'struct dmar_drhd_rt *'         |-BinaryOperator 0x14b8420a0 <line:22:3, col:69> 'union dmar_ir_entry *' contains-errors '='         | |-DeclRefExpr 0x14b841ea8 <col:3> 'union dmar_ir_entry *' lvalue Var 0x14c0a3828 'ir_table' 'union dmar_ir_entry *'         | `-CStyleCastExpr 0x14b842078 <col:14, col:69> 'union dmar_ir_entry *' contains-errors <Dependent>         |   `-CallExpr 0x14b842028 <col:37, col:69> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x14b841fa8 <col:37> 'int ()' Function 0x14b841ef0 'hpa2hva' 'int ()'         |     `-RecoveryExpr 0x14b842000 <col:45, col:56> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x14b841fc8 <col:45> 'struct dmar_drhd_rt *' lvalue Var 0x14c0a3708 'dmar_unit' 'struct dmar_drhd_rt *'         |-BinaryOperator 0x14b842130 <line:23:3, col:14> '<dependent type>' contains-errors '='         | |-UnaryOperator 0x14b8420f8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x14b8420e0 <col:4> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x14b8420c0 <col:4> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x14b842110 <col:14> '<dependent type>' contains-errors lvalue         |-IfStmt 0x14b8423b8 <line:24:3, line:26:3>         | |-RecoveryExpr 0x14b842170 <line:24:7, col:17> '_Bool' contains-errors         | `-CompoundStmt 0x14b8423a0 <col:34, line:26:3>         |   `-BinaryOperator 0x14b842380 <line:25:4, col:40> '<dependent type>' contains-errors '='         |     |-UnaryOperator 0x14b8421c8 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow         |     | `-ImplicitCastExpr 0x14b8421b0 <col:5> '<dependent type>' contains-errors <LValueToRValue>         |     |   `-RecoveryExpr 0x14b842190 <col:5> '<dependent type>' contains-errors lvalue         |     `-CallExpr 0x14b842338 <col:15, col:40> 'int'         |       |-ImplicitCastExpr 0x14b842320 <col:15> 'int (*)()' <FunctionToPointerDecay>         |       | `-DeclRefExpr 0x14b8422c0 <col:15> 'int ()' Function 0x14b842208 'alloc_irtes' 'int ()'         |       |-ImplicitCastExpr 0x14b842368 <col:27> 'struct dmar_drhd_rt *' <LValueToRValue>         |       | `-DeclRefExpr 0x14b8422e0 <col:27> 'struct dmar_drhd_rt *' lvalue Var 0x14c0a3708 'dmar_unit' 'struct dmar_drhd_rt *'         |       `-IntegerLiteral 0x14b842300 <col:38> 'unsigned int' 1         `-IfStmt 0x14c0a6ac8 <line:27:3, line:59:3>           |-RecoveryExpr 0x14b842428 <line:27:7, col:18> '_Bool' contains-errors           `-CompoundStmt 0x14c0a6aa8 <col:41, line:59:3>             |-BinaryOperator 0x14b8424f8 <line:28:4, col:27> 'union dmar_ir_entry *' contains-errors '='             | |-DeclRefExpr 0x14b842448 <col:4> 'union dmar_ir_entry *' lvalue Var 0x14c0a38b8 'ir_entry' 'union dmar_ir_entry *'             | `-BinaryOperator 0x14b8424d8 <col:15, col:27> '<dependent type>' contains-errors '+'             |   |-DeclRefExpr 0x14b842468 <col:15> 'union dmar_ir_entry *' lvalue Var 0x14c0a3828 'ir_table' 'union dmar_ir_entry *'             |   `-UnaryOperator 0x14b8424c0 <col:26, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow             |     `-ImplicitCastExpr 0x14b8424a8 <col:27> '<dependent type>' contains-errors <LValueToRValue>             |       `-RecoveryExpr 0x14b842488 <col:27> '<dependent type>' contains-errors lvalue             `-IfStmt 0x14c0a67a8 <line:30:4, line:56:4> has_else               |-BinaryOperator 0x14b842598 <line:30:8, col:31> 'int' contains-errors '!='               | |-RecoveryExpr 0x14b842550 <col:8, col:18> '<dependent type>' contains-errors lvalue               | | `-DeclRefExpr 0x14b842518 <col:8> 'const struct intr_source *' lvalue ParmVar 0x14c08a068 'intr_src' 'const struct intr_source *'               | `-IntegerLiteral 0x14b842578 <col:31> 'unsigned long' 0               |-CompoundStmt 0x14c0a6130 <col:36, line:48:4>               | |-DeclStmt 0x14b842640 <line:31:5, col:32>               | | `-VarDecl 0x14b8425d8 <col:5, col:25> col:25 referenced invalid irte_pi 'union dmar_ir_entry'               | |-BinaryOperator 0x14b842750 <line:34:5, col:27> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14b8426e8 <col:5, col:19> '<dependent type>' contains-errors lvalue .lo_64               | | | `-CXXDependentScopeMemberExpr 0x14b8426a0 <col:5, col:13> '<dependent type>' contains-errors lvalue .value               | | |   `-RecoveryExpr 0x14b842678 <col:5> '<dependent type>' contains-errors lvalue               | | |     `-DeclRefExpr 0x14b842658 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-IntegerLiteral 0x14b842730 <col:27> 'unsigned long' 0               | |-BinaryOperator 0x14b842868 <line:35:5, col:27> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14b842800 <col:5, col:19> '<dependent type>' contains-errors lvalue .hi_64               | | | `-CXXDependentScopeMemberExpr 0x14b8427b8 <col:5, col:13> '<dependent type>' contains-errors lvalue .value               | | |   `-RecoveryExpr 0x14b842790 <col:5> '<dependent type>' contains-errors lvalue               | | |     `-DeclRefExpr 0x14b842770 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-IntegerLiteral 0x14b842848 <col:27> 'unsigned long' 0               | |-BinaryOperator 0x14c0a56b8 <line:37:5, col:49> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14b842960 <col:5, col:23> '<dependent type>' contains-errors lvalue .vector               | | | `-CXXDependentScopeMemberExpr 0x14b842918 <col:5, col:18> '<dependent type>' contains-errors lvalue .post               | | |   `-CXXDependentScopeMemberExpr 0x14b8428d0 <col:5, col:13> '<dependent type>' contains-errors lvalue .bits               | | |     `-RecoveryExpr 0x14b8428a8 <col:5> '<dependent type>' contains-errors lvalue               | | |       `-DeclRefExpr 0x14b842888 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-CXXDependentScopeMemberExpr 0x14c0a5670 <col:32, col:49> '<dependent type>' contains-errors lvalue .vector               | |   `-CXXDependentScopeMemberExpr 0x14c0a5628 <col:32, col:43> '<dependent type>' contains-errors lvalue .remap               | |     `-RecoveryExpr 0x14c0a5600 <col:32, col:38> '<dependent type>' contains-errors lvalue               | |       `-DeclRefExpr 0x14b8429a8 <col:32> 'union dmar_ir_entry *' lvalue ParmVar 0x14c0a3258 'irte' 'union dmar_ir_entry *'               | |-BinaryOperator 0x14c0a5818 <line:39:5, col:29> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14c0a57b0 <col:5, col:23> '<dependent type>' contains-errors lvalue .svt               | | | `-CXXDependentScopeMemberExpr 0x14c0a5768 <col:5, col:18> '<dependent type>' contains-errors lvalue .post               | | |   `-CXXDependentScopeMemberExpr 0x14c0a5720 <col:5, col:13> '<dependent type>' contains-errors lvalue .bits               | | |     `-RecoveryExpr 0x14c0a56f8 <col:5> '<dependent type>' contains-errors lvalue               | | |       `-DeclRefExpr 0x14c0a56d8 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-IntegerLiteral 0x14c0a57f8 <col:29> 'unsigned long' 1               | |-BinaryOperator 0x14c0a59c0 <line:40:5, col:33> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14c0a5910 <col:5, col:23> '<dependent type>' contains-errors lvalue .sid               | | | `-CXXDependentScopeMemberExpr 0x14c0a58c8 <col:5, col:18> '<dependent type>' contains-errors lvalue .post               | | |   `-CXXDependentScopeMemberExpr 0x14c0a5880 <col:5, col:13> '<dependent type>' contains-errors lvalue .bits               | | |     `-RecoveryExpr 0x14c0a5858 <col:5> '<dependent type>' contains-errors lvalue               | | |       `-DeclRefExpr 0x14c0a5838 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-CXXDependentScopeMemberExpr 0x14c0a5978 <col:29, col:33> '<dependent type>' contains-errors lvalue .value               | |   `-RecoveryExpr 0x14c0a5958 <col:29> '<dependent type>' contains-errors lvalue               | |-BinaryOperator 0x14c0a5b20 <line:41:5, col:33> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14c0a5ab8 <col:5, col:23> '<dependent type>' contains-errors lvalue .present               | | | `-CXXDependentScopeMemberExpr 0x14c0a5a70 <col:5, col:18> '<dependent type>' contains-errors lvalue .post               | | |   `-CXXDependentScopeMemberExpr 0x14c0a5a28 <col:5, col:13> '<dependent type>' contains-errors lvalue .bits               | | |     `-RecoveryExpr 0x14c0a5a00 <col:5> '<dependent type>' contains-errors lvalue               | | |       `-DeclRefExpr 0x14c0a59e0 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-IntegerLiteral 0x14c0a5b00 <col:33> 'unsigned long' 1               | |-BinaryOperator 0x14c0a5c80 <line:42:5, col:30> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14c0a5c18 <col:5, col:23> '<dependent type>' contains-errors lvalue .mode               | | | `-CXXDependentScopeMemberExpr 0x14c0a5bd0 <col:5, col:18> '<dependent type>' contains-errors lvalue .post               | | |   `-CXXDependentScopeMemberExpr 0x14c0a5b88 <col:5, col:13> '<dependent type>' contains-errors lvalue .bits               | | |     `-RecoveryExpr 0x14c0a5b60 <col:5> '<dependent type>' contains-errors lvalue               | | |       `-DeclRefExpr 0x14c0a5b40 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-IntegerLiteral 0x14c0a5c60 <col:30> 'unsigned long' 1               | |-BinaryOperator 0x14c0a5e80 <line:44:5, col:56> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14c0a5d78 <col:5, col:23> '<dependent type>' contains-errors lvalue .pda_l               | | | `-CXXDependentScopeMemberExpr 0x14c0a5d30 <col:5, col:18> '<dependent type>' contains-errors lvalue .post               | | |   `-CXXDependentScopeMemberExpr 0x14c0a5ce8 <col:5, col:13> '<dependent type>' contains-errors lvalue .bits               | | |     `-RecoveryExpr 0x14c0a5cc0 <col:5> '<dependent type>' contains-errors lvalue               | | |       `-DeclRefExpr 0x14c0a5ca0 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-BinaryOperator 0x14c0a5e60 <col:31, col:56> '<dependent type>' contains-errors '>>'               | |   |-ParenExpr 0x14c0a5e20 <col:31, col:51> '<dependent type>' contains-errors lvalue               | |   | `-RecoveryExpr 0x14c0a5df8 <col:32, col:42> '<dependent type>' contains-errors lvalue               | |   |   `-DeclRefExpr 0x14c0a5dc0 <col:32> 'const struct intr_source *' lvalue ParmVar 0x14c08a068 'intr_src' 'const struct intr_source *'               | |   `-IntegerLiteral 0x14c0a5e40 <col:56> 'unsigned int' 6               | |-BinaryOperator 0x14c0a6080 <line:45:5, col:56> '<dependent type>' contains-errors '='               | | |-CXXDependentScopeMemberExpr 0x14c0a5f78 <col:5, col:23> '<dependent type>' contains-errors lvalue .pda_h               | | | `-CXXDependentScopeMemberExpr 0x14c0a5f30 <col:5, col:18> '<dependent type>' contains-errors lvalue .post               | | |   `-CXXDependentScopeMemberExpr 0x14c0a5ee8 <col:5, col:13> '<dependent type>' contains-errors lvalue .bits               | | |     `-RecoveryExpr 0x14c0a5ec0 <col:5> '<dependent type>' contains-errors lvalue               | | |       `-DeclRefExpr 0x14c0a5ea0 <col:5> 'union dmar_ir_entry' lvalue Var 0x14b8425d8 'irte_pi' 'union dmar_ir_entry'               | | `-BinaryOperator 0x14c0a6060 <col:31, col:56> '<dependent type>' contains-errors '>>'               | |   |-ParenExpr 0x14c0a6020 <col:31, col:51> '<dependent type>' contains-errors lvalue               | |   | `-RecoveryExpr 0x14c0a5ff8 <col:32, col:42> '<dependent type>' contains-errors lvalue               | |   |   `-DeclRefExpr 0x14c0a5fc0 <col:32> 'const struct intr_source *' lvalue ParmVar 0x14c08a068 'intr_src' 'const struct intr_source *'               | |   `-IntegerLiteral 0x14c0a6040 <col:56> 'unsigned int' 32               | `-BinaryOperator 0x14c0a6110 <line:47:5, col:17> 'union dmar_ir_entry' contains-errors '='               |   |-UnaryOperator 0x14c0a60d8 <col:5, col:6> 'union dmar_ir_entry' lvalue prefix '*' cannot overflow               |   | `-ImplicitCastExpr 0x14c0a60c0 <col:6> 'union dmar_ir_entry *' <LValueToRValue>               |   |   `-DeclRefExpr 0x14c0a60a0 <col:6> 'union dmar_ir_entry *' lvalue Var 0x14c0a38b8 'ir_entry' 'union dmar_ir_entry *'               |   `-RecoveryExpr 0x14c0a60f0 <col:17> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x14c0a6778 <line:48:11, line:56:4>                 |-BinaryOperator 0x14c0a62a8 <line:50:5, col:28> '<dependent type>' contains-errors '='                 | |-CXXDependentScopeMemberExpr 0x14c0a6240 <col:5, col:22> '<dependent type>' contains-errors lvalue .svt                 | | `-CXXDependentScopeMemberExpr 0x14c0a61f8 <col:5, col:16> '<dependent type>' contains-errors lvalue .remap                 | |   `-RecoveryExpr 0x14c0a61d0 <col:5, col:11> '<dependent type>' contains-errors lvalue                 | |     `-DeclRefExpr 0x14c0a6198 <col:5> 'union dmar_ir_entry *' lvalue ParmVar 0x14c0a3258 'irte' 'union dmar_ir_entry *'                 | `-IntegerLiteral 0x14c0a6288 <col:28> 'unsigned long' 1                 |-BinaryOperator 0x14c0a6420 <line:51:5, col:32> '<dependent type>' contains-errors '='                 | |-CXXDependentScopeMemberExpr 0x14c0a6370 <col:5, col:22> '<dependent type>' contains-errors lvalue .sid                 | | `-CXXDependentScopeMemberExpr 0x14c0a6328 <col:5, col:16> '<dependent type>' contains-errors lvalue .remap                 | |   `-RecoveryExpr 0x14c0a6300 <col:5, col:11> '<dependent type>' contains-errors lvalue                 | |     `-DeclRefExpr 0x14c0a62c8 <col:5> 'union dmar_ir_entry *' lvalue ParmVar 0x14c0a3258 'irte' 'union dmar_ir_entry *'                 | `-CXXDependentScopeMemberExpr 0x14c0a63d8 <col:28, col:32> '<dependent type>' contains-errors lvalue .value                 |   `-RecoveryExpr 0x14c0a63b8 <col:28> '<dependent type>' contains-errors lvalue                 |-BinaryOperator 0x14c0a6550 <line:52:5, col:32> '<dependent type>' contains-errors '='                 | |-CXXDependentScopeMemberExpr 0x14c0a64e8 <col:5, col:22> '<dependent type>' contains-errors lvalue .present                 | | `-CXXDependentScopeMemberExpr 0x14c0a64a0 <col:5, col:16> '<dependent type>' contains-errors lvalue .remap                 | |   `-RecoveryExpr 0x14c0a6478 <col:5, col:11> '<dependent type>' contains-errors lvalue                 | |     `-DeclRefExpr 0x14c0a6440 <col:5> 'union dmar_ir_entry *' lvalue ParmVar 0x14c0a3258 'irte' 'union dmar_ir_entry *'                 | `-IntegerLiteral 0x14c0a6530 <col:32> 'unsigned long' 1                 `-ImplicitCastExpr 0x14c0a6760 <line:55:5, col:18> '<dependent type>' contains-errors <LValueToRValue>                   `-RecoveryExpr 0x14c0a6730 <col:5, col:18> '<dependent type>' contains-errors lvalue                     |-UnaryOperator 0x14c0a66c8 <col:5, col:6> 'union dmar_ir_entry' lvalue prefix '*' cannot overflow                     | `-ImplicitCastExpr 0x14c0a66b0 <col:6> 'union dmar_ir_entry *' <LValueToRValue>                     |   `-DeclRefExpr 0x14c0a6690 <col:6> 'union dmar_ir_entry *' lvalue Var 0x14c0a38b8 'ir_entry' 'union dmar_ir_entry *'                     `-UnaryOperator 0x14c0a6718 <col:17, col:18> 'union dmar_ir_entry' lvalue prefix '*' cannot overflow                       `-ImplicitCastExpr 0x14c0a6700 <col:18> 'union dmar_ir_entry *' <LValueToRValue>                         `-DeclRefExpr 0x14c0a66e0 <col:18> 'union dmar_ir_entry *' lvalue ParmVar 0x14c0a3258 'irte' 'union dmar_ir_entry *' ","20997":"`-FunctionDecl 0x15b125030  col:13 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x15b125130 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15b125198 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x15b125200 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15b1250d8 <<invalid sloc>> Implicit 900 ","20684":"`-FunctionDecl 0x14700dd90  line:1:13 __xen_evtchn_do_upcall 'void (void)' static   `-CompoundStmt 0x14702c4a0 <line:2:1, line:20:1>     |-DeclStmt 0x14700e240 <line:3:2, col:57>     | |-RecordDecl 0x14700de80 <col:2, col:9> col:9 struct vcpu_info     | `-VarDecl 0x14700dfe8 <col:2, col:56> col:20 used vcpu_info 'struct vcpu_info *' cinit     |   `-CallExpr 0x14700e200 <col:32, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14700e180 <col:32> 'int ()' Function 0x14700e0c8 '__this_cpu_read' 'int ()'     |     `-RecoveryExpr 0x14700e1e0 <col:48> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14702b668 <line:4:2, col:30>     | `-VarDecl 0x14700e270 <col:2, col:29> col:6 used cpu 'int' cinit     |   `-CallExpr 0x14702b648 <col:12, col:29> 'int'     |     `-ImplicitCastExpr 0x14702b630 <col:12> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x14700e3b8 <col:12> 'int ()' Function 0x14700e300 'smp_processor_id' 'int ()'     |-CallExpr 0x14702b810 <line:6:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14702b760 <col:2> 'int ()' Function 0x14702b6a8 'read_lock' 'int ()'     | `-UnaryOperator 0x14702b7f8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14702b7d8 <col:13> '<dependent type>' contains-errors lvalue     |-DoStmt 0x14702c2c8 <line:8:2, line:17:43>     | |-CompoundStmt 0x14702c238 <line:8:5, line:17:2>     | | |-BinaryOperator 0x14702bcd8 <line:9:3, col:38> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x14702bc90 <col:3, col:14> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14702b838 <col:3> 'struct vcpu_info *' contains-errors lvalue Var 0x14700dfe8 'vcpu_info' 'struct vcpu_info *'     | | | `-IntegerLiteral 0x14702bcb8 <col:38> 'int' 0     | | |-CallExpr 0x14702be30 <line:11:3, col:31> 'int'     | | | |-ImplicitCastExpr 0x14702be18 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x14702bdd8 <col:3> 'int ()' Function 0x14702bd20 'xen_evtchn_handle_events' 'int ()'     | | | `-ImplicitCastExpr 0x14702be58 <col:28> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x14702bdf8 <col:28> 'int' lvalue Var 0x14700e270 'cpu' 'int'     | | |-CallExpr 0x14702c0d8 <line:13:3, col:26> 'int'     | | | |-ImplicitCastExpr 0x14702c0c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x14702bf50 <col:3> 'int ()' Function 0x14702be98 'BUG_ON' 'int ()'     | | | `-UnaryOperator 0x14702c0a8 <col:10, col:25> 'int' prefix '!' cannot overflow     | | |   `-CallExpr 0x14702c088 <col:11, col:25> 'int'     | | |     `-ImplicitCastExpr 0x14702c070 <col:11> 'int (*)()' <FunctionToPointerDecay>     | | |       `-DeclRefExpr 0x14702c050 <col:11> 'int ()' Function 0x14702bf98 'irqs_disabled' 'int ()'     | | `-CallExpr 0x14702c218 <line:15:3, col:12> 'int'     | |   `-ImplicitCastExpr 0x14702c200 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |     `-DeclRefExpr 0x14702c1e0 <col:3> 'int ()' Function 0x14702c128 'virt_rmb' 'int ()'     | `-RecoveryExpr 0x14702c2a0 <line:17:11, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14702c268 <col:11> 'struct vcpu_info *' contains-errors lvalue Var 0x14700dfe8 'vcpu_info' 'struct vcpu_info *'     `-CallExpr 0x14702c478 <line:19:2, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x14702c3c8 <col:2> 'int ()' Function 0x14702c310 'read_unlock' 'int ()'       `-UnaryOperator 0x14702c460 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14702c440 <col:15> '<dependent type>' contains-errors lvalue ","20802":"`-FunctionDecl 0x1581281f8  line:1:1 invalid sraSpanRemove 'int (int *)'   |-ParmVarDecl 0x158128128 <col:15, col:24> col:24 referenced invalid span 'int *'   `-CompoundStmt 0x158128568 <col:30, line:4:1>     |-BinaryOperator 0x1581283e8 <line:2:3, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x158128338 <col:3, col:16> '<dependent type>' contains-errors lvalue ->_next     | | `-CXXDependentScopeMemberExpr 0x1581282f0 <col:3, col:9> '<dependent type>' contains-errors lvalue ->_prev     | |   `-RecoveryExpr 0x1581282c8 <col:3> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1581282a8 <col:3> 'int *' lvalue ParmVar 0x158128128 'span' 'int *'     | `-CXXDependentScopeMemberExpr 0x1581283a0 <col:24, col:30> '<dependent type>' contains-errors lvalue ->_next     |   `-RecoveryExpr 0x158128380 <col:24> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x158128548 <line:3:3, col:30> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x158128498 <col:3, col:16> '<dependent type>' contains-errors lvalue ->_prev       | `-CXXDependentScopeMemberExpr 0x158128450 <col:3, col:9> '<dependent type>' contains-errors lvalue ->_next       |   `-RecoveryExpr 0x158128428 <col:3> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x158128408 <col:3> 'int *' lvalue ParmVar 0x158128128 'span' 'int *'       `-CXXDependentScopeMemberExpr 0x158128500 <col:24, col:30> '<dependent type>' contains-errors lvalue ->_prev         `-RecoveryExpr 0x1581284e0 <col:24> '<dependent type>' contains-errors lvalue ","20347":"`-FunctionDecl 0x149928438  line:1:5 invalid luaD_pcall 'int (int *, int, void *, int, int)'   |-ParmVarDecl 0x149928128 <col:17, col:28> col:28 referenced invalid L 'int *'   |-ParmVarDecl 0x1499281a8 <col:31, col:37> col:37 invalid func 'int'   |-ParmVarDecl 0x149928228 <col:43, col:49> col:49 used u 'void *'   |-ParmVarDecl 0x1499282a8 <line:2:17, col:27> col:27 referenced invalid old_top 'int'   |-ParmVarDecl 0x149928328 <col:36, col:46> col:46 invalid ef 'int'   `-CompoundStmt 0x149942c68 <col:50, line:23:1>     |-DeclStmt 0x149928588 <line:3:3, col:13>     | `-VarDecl 0x149928520 <col:3, col:7> col:7 used status 'int'     |-DeclStmt 0x149928688 <line:4:3, col:41>     | `-VarDecl 0x1499285b8 <col:3, col:34> col:18 used oldnCcalls 'unsigned short' cinit     |   `-CXXDependentScopeMemberExpr 0x149928640 <col:31, col:34> '<dependent type>' contains-errors lvalue ->nCcalls     |     `-RecoveryExpr 0x149928620 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149928750 <line:8:3, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1499286e8 <col:3, col:6> '<dependent type>' contains-errors lvalue ->errfunc     | | `-RecoveryExpr 0x1499286c0 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1499286a0 <col:3> 'int *' lvalue ParmVar 0x149928128 'L' 'int *'     | `-RecoveryExpr 0x149928730 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1499419c8 <line:9:3, col:43> 'int' contains-errors '='     | |-DeclRefExpr 0x149928770 <col:3> 'int' lvalue Var 0x149928520 'status' 'int'     | `-CallExpr 0x149941990 <col:12, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149941910 <col:12> 'int ()' Function 0x149941858 'luaD_rawrunprotected' 'int ()'     |   |-RecoveryExpr 0x149941930 <col:33> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x149941950 <col:36> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x149941970 <col:42> 'void *' lvalue ParmVar 0x149928228 'u' 'void *'     |-IfStmt 0x1499426f8 <line:10:3, line:20:3>     | |-BinaryOperator 0x149941a40 <line:10:7, col:17> 'int' '!='     | | |-ImplicitCastExpr 0x149941a28 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1499419e8 <col:7> 'int' lvalue Var 0x149928520 'status' 'int'     | | `-IntegerLiteral 0x149941a08 <col:17> 'int' 0     | `-CompoundStmt 0x1499426a8 <col:20, line:20:3>     |   |-CallExpr 0x149941c08 <line:12:5, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x149941b40 <col:5> 'int ()' Function 0x149941a88 'luaF_close' 'int ()'     |   | |-RecoveryExpr 0x149941b60 <col:16> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x149941be8 <col:19> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x149941e08 <line:13:5, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x149941d18 <col:5> 'int ()' Function 0x149941c60 'luaD_seterrorobj' 'int ()'     |   | |-RecoveryExpr 0x149941d38 <col:22> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x149941d58 <col:25> 'int' lvalue Var 0x149928520 'status' 'int'     |   | `-RecoveryExpr 0x149941de8 <col:33> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x149941ef0 <line:14:5, col:18> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149941e88 <col:5, col:8> '<dependent type>' contains-errors lvalue ->nCcalls     |   | | `-RecoveryExpr 0x149941e60 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x149941e40 <col:5> 'int *' lvalue ParmVar 0x149928128 'L' 'int *'     |   | `-DeclRefExpr 0x149941ed0 <col:18> 'unsigned short' contains-errors lvalue Var 0x1499285b8 'oldnCcalls' 'unsigned short'     |   |-BinaryOperator 0x149942178 <line:15:5, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149941f58 <col:5, col:8> '<dependent type>' contains-errors lvalue ->ci     |   | | `-RecoveryExpr 0x149941f30 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x149941f10 <col:5> 'int *' lvalue ParmVar 0x149928128 'L' 'int *'     |   | `-CallExpr 0x149942148 <col:13, col:32> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x149942080 <col:13> 'int ()' Function 0x149941fc8 'restoreci' 'int ()'     |   |   |-RecoveryExpr 0x1499420a0 <col:23> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x149942128 <col:26> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1499422d8 <line:16:5, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1499421e0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->base     |   | | `-RecoveryExpr 0x1499421b8 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x149942198 <col:5> 'int *' lvalue ParmVar 0x149928128 'L' 'int *'     |   | `-CXXDependentScopeMemberExpr 0x149942290 <col:15, col:22> '<dependent type>' contains-errors lvalue ->base     |   |   `-CXXDependentScopeMemberExpr 0x149942248 <col:15, col:18> '<dependent type>' contains-errors lvalue ->ci     |   |     `-RecoveryExpr 0x149942228 <col:15> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x149942438 <line:17:5, col:25> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149942340 <col:5, col:8> '<dependent type>' contains-errors lvalue ->savedpc     |   | | `-RecoveryExpr 0x149942318 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1499422f8 <col:5> 'int *' lvalue ParmVar 0x149928128 'L' 'int *'     |   | `-CXXDependentScopeMemberExpr 0x1499423f0 <col:18, col:25> '<dependent type>' contains-errors lvalue ->savedpc     |   |   `-CXXDependentScopeMemberExpr 0x1499423a8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->ci     |   |     `-RecoveryExpr 0x149942388 <col:18> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x149942540 <line:18:5, col:20> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1499424a0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->allowhook     |   | | `-RecoveryExpr 0x149942478 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x149942458 <col:5> 'int *' lvalue ParmVar 0x149928128 'L' 'int *'     |   | `-RecoveryExpr 0x149942520 <col:20> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x149942680 <line:19:5, col:26> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x149942640 <col:5> 'int ()' Function 0x149942588 'restore_stack_limit' 'int ()'     |     `-RecoveryExpr 0x149942660 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149942c00 <line:21:3, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x149942760 <col:3, col:6> '<dependent type>' contains-errors lvalue ->errfunc     | | `-RecoveryExpr 0x149942738 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x149942718 <col:3> 'int *' lvalue ParmVar 0x149928128 'L' 'int *'     | `-RecoveryExpr 0x1499427e0 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x149942c58 <line:22:3, col:10>       `-ImplicitCastExpr 0x149942c40 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x149942c20 <col:10> 'int' lvalue Var 0x149928520 'status' 'int' ","20810":"`-FunctionDecl 0x13280de88  line:1:14 invalid Eval 'int (int *, int *)'   |-ParmVarDecl 0x13280dd28 <col:19, col:34> col:34 invalid context 'int *'   |-ParmVarDecl 0x13280dda8 <col:43, col:55> col:55 invalid node 'int *'   `-CompoundStmt 0x132827ce8 <col:61, line:22:1>     |-DeclStmt 0x13280e1d0 <line:2:3, line:3:53>     | `-VarDecl 0x13280df58 <line:2:3, col:23> col:23 invalid cond_tensor 'const int *'     |-IfStmt 0x1328278e0 <line:6:3, line:9:3>     | |-CallExpr 0x132827538 <line:6:7, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1328274b8 <col:7> 'int ()' Function 0x132827400 'IsDynamicTensor' 'int ()'     | | `-RecoveryExpr 0x132827518 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1328278c8 <col:32, line:9:3>     |   `-CallExpr 0x132827898 <line:7:5, line:8:71> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x132827640 <line:7:5> 'int ()' Function 0x132827588 'TF_LITE_ENSURE_OK' 'int ()'     |     |-RecoveryExpr 0x132827660 <col:23> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x132827860 <line:8:23, col:70> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x132827760 <col:23> 'int ()' Function 0x1328276a8 'ResizeOutputTensor' 'int ()'     |       |-RecoveryExpr 0x132827780 <col:42> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x1328277a0 <col:51> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x132827840 <col:64> '<dependent type>' contains-errors lvalue     `-IfStmt 0x132827cc8 <line:12:3, line:16:3>       |-BinaryOperator 0x132827a88 <line:12:7, col:21> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x132827a40 <col:7, col:13> '<dependent type>' contains-errors lvalue ->size       | | `-RecoveryExpr 0x132827a20 <col:7> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x1328279e0 <col:21> 'int' 0       `-CompoundStmt 0x132827ca8 <col:24, line:16:3>         |-CallExpr 0x132827c30 <line:14:5, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x132827b88 <col:5> 'int ()' Function 0x132827ad0 'TF_LITE_KERNEL_LOG' 'int ()'         | |-RecoveryExpr 0x132827ba8 <col:24> '<dependent type>' contains-errors lvalue         | `-StringLiteral 0x132827c10 <col:33> 'char[4]' lvalue \"STR\"         `-ReturnStmt 0x132827c98 <line:15:5, col:12>           `-RecoveryExpr 0x132827c78 <col:12> '<dependent type>' contains-errors lvalue ","20309":"`-FunctionDecl 0x151026b18  line:1:5 invalid kernel_recvmsg 'int (struct socket *, struct msghdr *, struct kvec *, int, int, int)'   |-ParmVarDecl 0x15100e248 <col:20, col:35> col:35 used sock 'struct socket *'   |-ParmVarDecl 0x151026628 <col:41, col:56> col:56 used msg 'struct msghdr *'   |-ParmVarDecl 0x1510267f8 <line:2:6, col:19> col:19 used vec 'struct kvec *'   |-ParmVarDecl 0x151026890 <col:24, col:31> col:31 invalid num 'int'   |-ParmVarDecl 0x151026910 <col:36, col:43> col:43 invalid size 'int'   |-ParmVarDecl 0x151026990 <col:49, col:53> col:53 used flags 'int'   `-CompoundStmt 0x151027488 <line:3:1, line:13:1>     |-DeclStmt 0x151026c70 <line:5:2, col:12>     | `-VarDecl 0x151026c08 <col:2, col:6> col:6 used result 'int'     |-CallExpr 0x151026e60 <line:7:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151026de0 <col:2> 'int ()' Function 0x151026d28 'set_fs' 'int ()'     | `-RecoveryExpr 0x151026e40 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151027178 <line:9:2, col:56> '<dependent type>' contains-errors ','     | |-BinaryOperator 0x1510270b8 <col:2, col:33> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x151026ec0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x151026e88 <col:2> 'struct msghdr *' lvalue ParmVar 0x151026628 'msg' 'struct msghdr *'     | | `-CStyleCastExpr 0x151027090 <col:17, col:33> 'struct iovec *' <BitCast>     | |   `-ImplicitCastExpr 0x151027078 <col:33> 'struct kvec *' <LValueToRValue> part_of_explicit_cast     | |     `-DeclRefExpr 0x151026f90 <col:33> 'struct kvec *' lvalue ParmVar 0x1510267f8 'vec' 'struct kvec *'     | `-BinaryOperator 0x151027158 <col:38, col:56> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x151027110 <col:38, col:43> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1510270d8 <col:38> 'struct msghdr *' lvalue ParmVar 0x151026628 'msg' 'struct msghdr *'     |   `-RecoveryExpr 0x151027138 <col:56> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151027378 <line:10:2, col:46> 'int' contains-errors '='     | |-DeclRefExpr 0x151027198 <col:2> 'int' lvalue Var 0x151026c08 'result' 'int'     | `-CallExpr 0x151027338 <col:11, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151027298 <col:11> 'int ()' Function 0x1510271e0 'sock_recvmsg' 'int ()'     |   |-DeclRefExpr 0x1510272b8 <col:24> 'struct socket *' lvalue ParmVar 0x15100e248 'sock' 'struct socket *'     |   |-DeclRefExpr 0x1510272d8 <col:30> 'struct msghdr *' lvalue ParmVar 0x151026628 'msg' 'struct msghdr *'     |   |-RecoveryExpr 0x1510272f8 <col:35> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x151027318 <col:41> 'int' lvalue ParmVar 0x151026990 'flags' 'int'     |-CallExpr 0x151027418 <line:11:2, col:14> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151027398 <col:2> 'int ()' Function 0x151026d28 'set_fs' 'int ()'     | `-RecoveryExpr 0x1510273f8 <col:9> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x151027478 <line:12:2, col:9>       `-ImplicitCastExpr 0x151027460 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x151027440 <col:9> 'int' lvalue Var 0x151026c08 'result' 'int' ","20629":"`-FunctionDecl 0x152941838  line:2:16 invalid xps_rxqs_show 'int (struct netdev_queue *, char *)' static   |-ParmVarDecl 0x152928668 <col:30, col:51> col:51 used queue 'struct netdev_queue *'   |-ParmVarDecl 0x1529286e8 <col:58, col:64> col:64 used buf 'char *'   `-CompoundStmt 0x1529452e8 <line:3:1, line:48:41>     |-DeclStmt 0x152941b38 <line:4:2, col:37>     | |-RecordDecl 0x1529418f0 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x152941a58 <col:2, col:34> col:21 used dev 'struct net_device *' cinit     |   `-RecoveryExpr 0x152941af8 <col:27, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152941ac0 <col:27> 'struct netdev_queue *' lvalue ParmVar 0x152928668 'queue' 'struct netdev_queue *'     |-DeclStmt 0x152941d38 <line:5:2, col:31>     | |-RecordDecl 0x152941b50 <col:2, col:9> col:9 struct xps_dev_maps     | `-VarDecl 0x152941cb8 <col:2, col:23> col:23 used dev_maps 'struct xps_dev_maps *'     |-DeclStmt 0x152941e98 <line:6:2, col:28>     | |-VarDecl 0x152941d98 <col:2, col:17> col:17 used mask 'unsigned long *'     | `-VarDecl 0x152941e18 <col:2, col:23> col:23 used index 'unsigned long'     |-DeclStmt 0x152942118 <line:7:2, col:32>     | |-VarDecl 0x152941ec8 <col:2, col:6> col:6 used j 'int'     | |-VarDecl 0x152941f48 <col:2, col:9> col:9 used len 'int'     | |-VarDecl 0x152941fc8 <col:2, col:23> col:14 used num_tc 'int' cinit     | | `-IntegerLiteral 0x152942030 <col:23> 'int' 1     | `-VarDecl 0x152942068 <col:2, col:31> col:26 used tc 'int' cinit     |   `-IntegerLiteral 0x1529420d0 <col:31> 'int' 0     |-BinaryOperator 0x152942390 <line:9:2, col:38> 'unsigned long' '='     | |-DeclRefExpr 0x152942130 <col:2> 'unsigned long' lvalue Var 0x152941e18 'index' 'unsigned long'     | `-ImplicitCastExpr 0x152942378 <col:10, col:38> 'unsigned long' <IntegralCast>     |   `-CallExpr 0x152942338 <col:10, col:38> 'int'     |     |-ImplicitCastExpr 0x152942320 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1529422b0 <col:10> 'int ()' Function 0x1529421f8 'get_netdev_queue_index' 'int ()'     |     `-ImplicitCastExpr 0x152942360 <col:33> 'struct netdev_queue *' <LValueToRValue>     |       `-DeclRefExpr 0x1529422d0 <col:33> 'struct netdev_queue *' lvalue ParmVar 0x152928668 'queue' 'struct netdev_queue *'     |-IfStmt 0x152943428 <line:11:2, line:16:2>     | |-RecoveryExpr 0x1529423e8 <line:11:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1529423b0 <col:6> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     | `-CompoundStmt 0x152943400 <col:19, line:16:2>     |   |-BinaryOperator 0x152942490 <line:12:3, col:17> 'int' contains-errors '='     |   | |-DeclRefExpr 0x152942410 <col:3> 'int' lvalue Var 0x152941fc8 'num_tc' 'int'     |   | `-RecoveryExpr 0x152942468 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x152942430 <col:12> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     |   |-BinaryOperator 0x152942688 <line:13:3, col:35> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1529424b0 <col:3> 'int' lvalue Var 0x152942068 'tc' 'int'     |   | `-CallExpr 0x152942628 <col:8, col:35> 'int' contains-errors     |   |   |-ImplicitCastExpr 0x152942610 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1529425b0 <col:8> 'int ()' Function 0x1529424f8 'netdev_txq_to_tc' 'int ()'     |   |   |-ImplicitCastExpr 0x152942658 <col:25> 'struct net_device *' contains-errors <LValueToRValue>     |   |   | `-DeclRefExpr 0x1529425d0 <col:25> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     |   |   `-ImplicitCastExpr 0x152942670 <col:30> 'unsigned long' <LValueToRValue>     |   |     `-DeclRefExpr 0x1529425f0 <col:30> 'unsigned long' lvalue Var 0x152941e18 'index' 'unsigned long'     |   `-IfStmt 0x1529427c8 <line:14:3, line:15:12>     |     |-BinaryOperator 0x152942700 <line:14:7, col:12> 'int' '<'     |     | |-ImplicitCastExpr 0x1529426e8 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x1529426a8 <col:7> 'int' lvalue Var 0x152942068 'tc' 'int'     |     | `-IntegerLiteral 0x1529426c8 <col:12> 'int' 0     |     `-ReturnStmt 0x1529427b8 <line:15:4, col:12>     |       `-UnaryOperator 0x1529427a0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x152942788 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x152942768 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152943680 <line:17:2, col:53> 'unsigned long *' contains-errors '='     | |-DeclRefExpr 0x152943448 <col:2> 'unsigned long *' lvalue Var 0x152941d98 'mask' 'unsigned long *'     | `-CallExpr 0x152943650 <col:9, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152943548 <col:9> 'int ()' Function 0x152943490 'bitmap_zalloc' 'int ()'     |   |-RecoveryExpr 0x1529435a0 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x152943568 <col:23> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     |   `-RecoveryExpr 0x152943630 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152943798 <line:18:2, line:19:11>     | |-UnaryOperator 0x1529436d8 <line:18:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1529436c0 <col:7> 'unsigned long *' <LValueToRValue>     | |   `-DeclRefExpr 0x1529436a0 <col:7> 'unsigned long *' lvalue Var 0x152941d98 'mask' 'unsigned long *'     | `-ReturnStmt 0x152943788 <line:19:3, col:11>     |   `-UnaryOperator 0x152943770 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x152943758 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152943738 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1529438d0 <line:21:2, col:16> 'int'     | `-ImplicitCastExpr 0x1529438b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x152943898 <col:2> 'int ()' Function 0x1529437e0 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x152943a98 <line:22:2, col:46> 'struct xps_dev_maps *' contains-errors '='     | |-DeclRefExpr 0x1529438f0 <col:2> 'struct xps_dev_maps *' lvalue Var 0x152941cb8 'dev_maps' 'struct xps_dev_maps *'     | `-CallExpr 0x152943a70 <col:13, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1529439f0 <col:13> 'int ()' Function 0x152943938 'rcu_dereference' 'int ()'     |   `-RecoveryExpr 0x152943a48 <col:29, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152943a10 <col:29> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     |-IfStmt 0x152943b70 <line:23:2, line:24:8>     | |-UnaryOperator 0x152943af0 <line:23:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x152943ad8 <col:7> 'struct xps_dev_maps *' <LValueToRValue>     | |   `-DeclRefExpr 0x152943ab8 <col:7> 'struct xps_dev_maps *' lvalue Var 0x152941cb8 'dev_maps' 'struct xps_dev_maps *'     | `-GotoStmt 0x152943b58 <line:24:3, col:8> 'out_no_maps' 0x152943b08     |-ForStmt 0x152944de0 <line:26:2, line:41:2>     | |-BinaryOperator 0x152943be8 <line:26:7, col:12> 'int' '='     | | |-DeclRefExpr 0x152943b90 <col:7> 'int' lvalue Var 0x152941ec8 'j' 'int'     | | `-UnaryOperator 0x152943bd0 <col:11, col:12> 'int' prefix '-'     | |   `-IntegerLiteral 0x152943bb0 <col:12> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x152943f50 <col:15, line:27:16> 'int' contains-errors ','     | | |-BinaryOperator 0x152943f30 <line:26:15, col:66> 'int' contains-errors '='     | | | |-DeclRefExpr 0x152943c08 <col:15> 'int' lvalue Var 0x152941ec8 'j' 'int'     | | | `-CallExpr 0x152943ef8 <col:19, col:66> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x152943d08 <col:19> 'int ()' Function 0x152943c50 'netif_attrmask_next' 'int ()'     | | |   |-DeclRefExpr 0x152943d28 <col:39> 'int' lvalue Var 0x152941ec8 'j' 'int'     | | |   |-RecoveryExpr 0x152943ed8 <col:42> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x152943d98 <col:48, col:53> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x152943d60 <col:48> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     | | `-BinaryOperator 0x152943e98 <line:27:7, col:16> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x152943e18 <col:7> 'int' lvalue Var 0x152941ec8 'j' 'int'     | |   `-RecoveryExpr 0x152943e70 <col:11, col:16> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x152943e38 <col:11> 'struct net_device *' contains-errors lvalue Var 0x152941a58 'dev' 'struct net_device *'     | |-<<<NULL>>>     | `-CompoundStmt 0x152944da8 <col:32, line:41:2>     |   |-DeclStmt 0x152944170 <line:28:3, col:31>     |   | |-VarDecl 0x152943f88 <col:3, col:7> col:7 used i 'int'     |   | `-VarDecl 0x152944008 <col:3, col:29> col:10 used tci 'int' cinit     |   |   `-BinaryOperator 0x152944138 <col:16, col:29> 'int' '+'     |   |     |-BinaryOperator 0x1529440e0 <col:16, col:20> 'int' '*'     |   |     | |-ImplicitCastExpr 0x1529440b0 <col:16> 'int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x152944070 <col:16> 'int' lvalue Var 0x152941ec8 'j' 'int'     |   |     | `-ImplicitCastExpr 0x1529440c8 <col:20> 'int' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x152944090 <col:20> 'int' lvalue Var 0x152941fc8 'num_tc' 'int'     |   |     `-ImplicitCastExpr 0x152944120 <col:29> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x152944100 <col:29> 'int' lvalue Var 0x152942068 'tc' 'int'     |   |-DeclStmt 0x152944378 <line:29:3, col:22>     |   | |-RecordDecl 0x152944188 <col:3, col:10> col:10 struct xps_map     |   | `-VarDecl 0x1529442f8 <col:3, col:19> col:19 used map 'struct xps_map *'     |   |-BinaryOperator 0x1529448d8 <line:31:3, col:48> 'struct xps_map *' contains-errors '='     |   | |-DeclRefExpr 0x152944390 <col:3> 'struct xps_map *' lvalue Var 0x1529442f8 'map' 'struct xps_map *'     |   | `-CallExpr 0x1529448b0 <col:9, col:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1529443b0 <col:9> 'int ()' Function 0x152943938 'rcu_dereference' 'int ()'     |   |   `-ArraySubscriptExpr 0x152944890 <col:25, col:47> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x152944860 <col:25, col:35> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x152944818 <col:25, col:35> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x1529443d0 <col:25> 'struct xps_dev_maps *' lvalue Var 0x152941cb8 'dev_maps' 'struct xps_dev_maps *'     |   |     `-ImplicitCastExpr 0x152944878 <col:44> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x152944840 <col:44> 'int' lvalue Var 0x152944008 'tci' 'int'     |   |-IfStmt 0x152944950 <line:32:3, line:33:4>     |   | |-UnaryOperator 0x152944930 <line:32:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x152944918 <col:8> 'struct xps_map *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1529448f8 <col:8> 'struct xps_map *' lvalue Var 0x1529442f8 'map' 'struct xps_map *'     |   | `-ContinueStmt 0x152944948 <line:33:4>     |   `-ForStmt 0x152944d70 <line:35:3, line:40:3>     |     |-BinaryOperator 0x1529449f0 <line:35:8, col:17> 'int' contains-errors '='     |     | |-DeclRefExpr 0x152944970 <col:8> 'int' lvalue Var 0x152943f88 'i' 'int'     |     | `-RecoveryExpr 0x1529449c8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x152944990 <col:12> 'struct xps_map *' lvalue Var 0x1529442f8 'map' 'struct xps_map *'     |     |-<<<NULL>>>     |     |-UnaryOperator 0x152944a30 <col:22, col:23> 'int' postfix '--'     |     | `-DeclRefExpr 0x152944a10 <col:22> 'int' lvalue Var 0x152943f88 'i' 'int'     |     |-<<<NULL>>>     |     `-CompoundStmt 0x152944d58 <col:28, line:40:3>     |       `-IfStmt 0x152944d38 <line:36:4, line:39:4>     |         |-BinaryOperator 0x152944b38 <line:36:8, col:26> 'int' contains-errors '=='     |         | |-ArraySubscriptExpr 0x152944af8 <col:8, col:21> '<dependent type>' contains-errors lvalue     |         | | |-ImplicitCastExpr 0x152944ac8 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>     |         | | | `-RecoveryExpr 0x152944a80 <col:8, col:13> '<dependent type>' contains-errors lvalue     |         | | |   `-DeclRefExpr 0x152944a48 <col:8> 'struct xps_map *' lvalue Var 0x1529442f8 'map' 'struct xps_map *'     |         | | `-ImplicitCastExpr 0x152944ae0 <col:20> 'int' <LValueToRValue>     |         | |   `-DeclRefExpr 0x152944aa8 <col:20> 'int' lvalue Var 0x152943f88 'i' 'int'     |         | `-DeclRefExpr 0x152944b18 <col:26> 'unsigned long' lvalue Var 0x152941e18 'index' 'unsigned long'     |         `-CompoundStmt 0x152944d18 <col:33, line:39:4>     |           |-CallExpr 0x152944cb0 <line:37:5, col:20> 'int'     |           | |-ImplicitCastExpr 0x152944c98 <col:5> 'int (*)()' <FunctionToPointerDecay>     |           | | `-DeclRefExpr 0x152944c38 <col:5> 'int ()' Function 0x152944b80 'set_bit' 'int ()'     |           | |-ImplicitCastExpr 0x152944ce0 <col:13> 'int' <LValueToRValue>     |           | | `-DeclRefExpr 0x152944c58 <col:13> 'int' lvalue Var 0x152941ec8 'j' 'int'     |           | `-ImplicitCastExpr 0x152944cf8 <col:16> 'unsigned long *' <LValueToRValue>     |           |   `-DeclRefExpr 0x152944c78 <col:16> 'unsigned long *' lvalue Var 0x152941d98 'mask' 'unsigned long *'     |           `-BreakStmt 0x152944d10 <line:38:5>     |-LabelStmt 0x152944f50 <line:42:1, line:43:18> 'out_no_maps'     | `-CallExpr 0x152944f30 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x152944f18 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x152944ef8 <col:2> 'int ()' Function 0x152944e40 'rcu_read_unlock' 'int ()'     `-CallExpr 0x152945268 <line:46:2, col:18> 'int'       |-ImplicitCastExpr 0x152945250 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x152945210 <col:2> 'int ()' Function 0x152945158 'bitmap_free' 'int ()'       `-ImplicitCastExpr 0x152945290 <col:14> 'unsigned long *' <LValueToRValue>         `-DeclRefExpr 0x152945230 <col:14> 'unsigned long *' lvalue Var 0x152941d98 'mask' 'unsigned long *' ","20404":"`-FunctionDecl 0x1331281a8  line:1:17 invalid GC_setpagesize 'int (void)'   `-CompoundStmt 0x1331284e8 <line:2:3, line:27:3>     `-CallExpr 0x133128460 <line:3:5, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x1331283b0 <col:5> 'int ()' Function 0x1331282f8 'GetSystemInfo' 'int ()'       `-UnaryOperator 0x133128448 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x133128428 <col:20> '<dependent type>' contains-errors lvalue ","20418":"`-FunctionDecl 0x14000dd98  line:1:1 DefragInOrderSimpleTest 'int (void)'   `-CompoundStmt 0x14100ae40 <line:2:1, line:72:1>     |-DeclStmt 0x14000e0a0 <line:5:5, col:16>     | `-VarDecl 0x14000e018 <col:5, col:14> col:9 used id 'int' cinit     |   `-IntegerLiteral 0x14000e080 <col:14> 'int' 12     |-DeclStmt 0x14000e138 <line:6:5, col:10>     | `-VarDecl 0x14000e0d0 <col:5, col:9> col:9 used i 'int'     |-DeclStmt 0x14000e1f0 <line:7:5, col:16>     | `-VarDecl 0x14000e168 <col:5, col:15> col:9 used ret 'int' cinit     |   `-IntegerLiteral 0x14000e1d0 <col:15> 'int' 0     |-CallExpr 0x14000e388 <line:9:5, col:16> 'int'     | `-ImplicitCastExpr 0x14000e370 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14000e320 <col:5> 'int ()' Function 0x14000e268 'DefragInit' 'int ()'     |-IfStmt 0x141009500 <line:12:5, line:13:14>     | |-BinaryOperator 0x141009478 <line:12:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x141009438 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x141009458 <col:15> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1410094e8 <line:13:9, col:14> 'end' 0x141009498     |-IfStmt 0x141009718 <line:15:5, line:16:14>     | |-BinaryOperator 0x1410096e0 <line:15:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1410096a0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1410096c0 <col:15> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x141009700 <line:16:9, col:14> 'end' 0x141009498     |-IfStmt 0x1410098a0 <line:18:5, line:19:14>     | |-RecoveryExpr 0x141009868 <line:18:9, col:15> '_Bool' contains-errors     | `-GotoStmt 0x141009888 <line:19:9, col:14> 'end' 0x141009498     |-IfStmt 0x1410099f8 <line:21:5, line:22:14>     | |-RecoveryExpr 0x1410099c0 <line:21:9, col:41> '_Bool' contains-errors     | `-GotoStmt 0x1410099e0 <line:22:9, col:14> 'end' 0x141009498     |-IfStmt 0x141009a70 <line:23:5, line:24:14>     | |-RecoveryExpr 0x141009a38 <line:23:9, col:41> '_Bool' contains-errors     | `-GotoStmt 0x141009a58 <line:24:9, col:14> 'end' 0x141009498     |-IfStmt 0x141009b00 <line:27:5, line:29:5>     | |-RecoveryExpr 0x141009ab0 <line:27:9, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x141009ae8 <col:30, line:29:5>     |   `-GotoStmt 0x141009ad0 <line:28:9, col:14> 'end' 0x141009498     |-IfStmt 0x141009c90 <line:31:5, line:33:5>     | |-RecoveryExpr 0x141009c40 <line:31:9, col:39> '_Bool' contains-errors     | `-CompoundStmt 0x141009c78 <col:43, line:33:5>     |   `-GotoStmt 0x141009c60 <line:32:9, col:14> 'end' 0x141009498     |-IfStmt 0x141009e20 <line:34:5, line:36:5>     | |-RecoveryExpr 0x141009dd0 <line:34:9, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x141009e08 <col:44, line:36:5>     |   `-GotoStmt 0x141009df0 <line:35:9, col:14> 'end' 0x141009498     |-ForStmt 0x14100a150 <line:39:5, line:43:5>     | |-BinaryOperator 0x141009e80 <line:39:10, col:14> 'int' '='     | | |-DeclRefExpr 0x141009e40 <col:10> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | | `-IntegerLiteral 0x141009e60 <col:14> 'int' 20     | |-<<<NULL>>>     | |-BinaryOperator 0x141009f38 <col:18, col:27> 'int' '<'     | | |-ImplicitCastExpr 0x141009f20 <col:18> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x141009ea0 <col:18> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | | `-BinaryOperator 0x141009f00 <col:22, col:27> 'int' '+'     | |   |-IntegerLiteral 0x141009ec0 <col:22> 'int' 20     | |   `-IntegerLiteral 0x141009ee0 <col:27> 'int' 8     | |-UnaryOperator 0x141009f78 <col:30, col:31> 'int' postfix '++'     | | `-DeclRefExpr 0x141009f58 <col:30> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | `-CompoundStmt 0x14100a138 <col:35, line:43:5>     |   `-IfStmt 0x14100a118 <line:40:9, line:42:9>     |     |-RecoveryExpr 0x14100a0c8 <line:40:13, col:45> '_Bool' contains-errors     |     `-CompoundStmt 0x14100a100 <col:50, line:42:9>     |       `-GotoStmt 0x14100a0e8 <line:41:13, col:18> 'end' 0x141009498     |-ForStmt 0x14100a7d0 <line:46:5, line:50:5>     | |-BinaryOperator 0x14100a1c8 <line:46:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14100a188 <col:10> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | | `-IntegerLiteral 0x14100a1a8 <col:14> 'int' 28     | |-<<<NULL>>>     | |-BinaryOperator 0x14100a698 <col:18, col:27> 'int' '<'     | | |-ImplicitCastExpr 0x14100a680 <col:18> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14100a600 <col:18> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | | `-BinaryOperator 0x14100a660 <col:22, col:27> 'int' '+'     | |   |-IntegerLiteral 0x14100a620 <col:22> 'int' 28     | |   `-IntegerLiteral 0x14100a640 <col:27> 'int' 8     | |-UnaryOperator 0x14100a6d8 <col:30, col:31> 'int' postfix '++'     | | `-DeclRefExpr 0x14100a6b8 <col:30> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | `-CompoundStmt 0x14100a7b8 <col:35, line:50:5>     |   `-IfStmt 0x14100a798 <line:47:9, line:49:9>     |     |-RecoveryExpr 0x14100a748 <line:47:13, col:45> '_Bool' contains-errors     |     `-CompoundStmt 0x14100a780 <col:50, line:49:9>     |       `-GotoStmt 0x14100a768 <line:48:13, col:18> 'end' 0x141009498     |-ForStmt 0x14100aa20 <line:53:5, line:56:5>     | |-BinaryOperator 0x14100a848 <line:53:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14100a808 <col:10> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | | `-IntegerLiteral 0x14100a828 <col:14> 'int' 36     | |-<<<NULL>>>     | |-BinaryOperator 0x14100a900 <col:18, col:27> 'int' '<'     | | |-ImplicitCastExpr 0x14100a8e8 <col:18> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14100a868 <col:18> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | | `-BinaryOperator 0x14100a8c8 <col:22, col:27> 'int' '+'     | |   |-IntegerLiteral 0x14100a888 <col:22> 'int' 36     | |   `-IntegerLiteral 0x14100a8a8 <col:27> 'int' 3     | |-UnaryOperator 0x14100a940 <col:30, col:31> 'int' postfix '++'     | | `-DeclRefExpr 0x14100a920 <col:30> 'int' lvalue Var 0x14000e0d0 'i' 'int'     | `-CompoundStmt 0x14100aa08 <col:35, line:56:5>     |   `-IfStmt 0x14100a9e8 <line:54:9, line:55:18>     |     |-RecoveryExpr 0x14100a9b0 <line:54:13, col:45> '_Bool' contains-errors     |     `-GotoStmt 0x14100a9d0 <line:55:13, col:18> 'end' 0x141009498     |-BinaryOperator 0x14100aa98 <line:58:5, col:11> 'int' '='     | |-DeclRefExpr 0x14100aa58 <col:5> 'int' lvalue Var 0x14000e168 'ret' 'int'     | `-IntegerLiteral 0x14100aa78 <col:11> 'int' 1     |-LabelStmt 0x14100abe0 <line:60:1, col:4> 'end'     | `-NullStmt 0x14100abd8 <col:4>     |-CallExpr 0x14100add8 <line:70:5, col:19> 'int'     | `-ImplicitCastExpr 0x14100adc0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14100ada0 <col:5> 'int ()' Function 0x14100ace8 'DefragDestroy' 'int ()'     `-ReturnStmt 0x14100ae30 <line:71:5, col:12>       `-ImplicitCastExpr 0x14100ae18 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x14100adf8 <col:12> 'int' lvalue Var 0x14000e168 'ret' 'int' ","20416":"`-FunctionDecl 0x159141ab8  line:1:1 invalid evdev_notify_axis_finger 'int (struct evdev_device *, int, int, const struct normalized_coords *)'   |-ParmVarDecl 0x159128648 <col:26, col:47> col:47 used device 'struct evdev_device *'   |-ParmVarDecl 0x1591286e0 <line:2:4, col:13> col:13 invalid time 'int'   |-ParmVarDecl 0x159128760 <line:3:4, col:13> col:13 invalid axes 'int'   |-ParmVarDecl 0x159141968 <line:4:4, col:36> col:36 used delta_in 'const struct normalized_coords *'   `-CompoundStmt 0x159142220 <line:5:1, line:17:1>     |-DeclStmt 0x159141c88 <line:6:2, col:44>     | `-VarDecl 0x159141bd0 <col:2, col:27> col:27 referenced invalid delta 'struct normalized_coords'     |-IfStmt 0x159141f58 <line:8:2, line:11:2>     | |-CXXDependentScopeMemberExpr 0x159141d00 <line:8:6, col:21> '<dependent type>' contains-errors lvalue .natural_scrolling_enabled     | | `-RecoveryExpr 0x159141cd8 <col:6, col:14> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x159141ca0 <col:6> 'struct evdev_device *' lvalue ParmVar 0x159128648 'device' 'struct evdev_device *'     | `-CompoundStmt 0x159141f38 <col:48, line:11:2>     |   |-CompoundAssignOperator 0x159141e10 <line:9:3, col:15> '<dependent type>' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-CXXDependentScopeMemberExpr 0x159141d90 <col:3, col:9> '<dependent type>' contains-errors lvalue .x     |   | | `-RecoveryExpr 0x159141d68 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x159141d48 <col:3> 'struct normalized_coords' lvalue Var 0x159141bd0 'delta' 'struct normalized_coords'     |   | `-UnaryOperator 0x159141df8 <col:14, col:15> 'int' prefix '-'     |   |   `-IntegerLiteral 0x159141dd8 <col:15> 'int' 1     |   `-CompoundAssignOperator 0x159141f08 <line:10:3, col:15> '<dependent type>' contains-errors '*=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-CXXDependentScopeMemberExpr 0x159141e88 <col:3, col:9> '<dependent type>' contains-errors lvalue .y     |     | `-RecoveryExpr 0x159141e60 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x159141e40 <col:3> 'struct normalized_coords' lvalue Var 0x159141bd0 'delta' 'struct normalized_coords'     |     `-UnaryOperator 0x159141ef0 <col:14, col:15> 'int' prefix '-'     |       `-IntegerLiteral 0x159141ed0 <col:15> 'int' 1     `-CallExpr 0x1591421e0 <line:13:2, line:16:13> '<dependent type>' contains-errors       |-DeclRefExpr 0x1591420d0 <line:13:2> 'int ()' Function 0x159142018 'pointer_notify_axis_finger' 'int ()'       |-UnaryOperator 0x159142150 <col:29, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x159142128 <col:30, col:38> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1591420f0 <col:30> 'struct evdev_device *' lvalue ParmVar 0x159128648 'device' 'struct evdev_device *'       |-RecoveryExpr 0x159142168 <line:14:7> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x159142188 <line:15:7> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x1591421c8 <line:16:7, col:8> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x1591421a8 <col:8> '<dependent type>' contains-errors lvalue ","20729":"`-FunctionDecl 0x145826728  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x145826828 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1458267d0 <<invalid sloc>> Implicit 873 ","21034":"`-FunctionDecl 0x15a128288  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x15a128128 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x15a1281a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x15b809af8 <col:64, line:19:1>     |-CallExpr 0x15a128648 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a1284a0 <col:3> 'int ()' Function 0x15a1283e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x15a1284c0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x15a128600 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a1285c0 <col:30> 'int ()' Function 0x15a128508 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x15a1285e0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15a128628 <col:47> 'int' 2     |-CallExpr 0x15b808c48 <line:3:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a128680 <col:3> 'int ()' Function 0x15a1283e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x15a1286a0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x15b808c00 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a1287a0 <col:30> 'int ()' Function 0x15a1286e8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x15a1287c0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15b808c28 <col:48> 'int' 1     |-DeclStmt 0x15b808e90 <line:4:3, col:71>     | `-VarDecl 0x15b808c98 <col:3, col:23> col:23 invalid data 'const int *'     |-DeclStmt 0x15b808fd8 <line:5:3, line:6:54>     | `-VarDecl 0x15b808ec0 <line:5:3, col:23> col:23 invalid segment_ids 'const int *'     |-CallExpr 0x15b8094e8 <line:9:3, line:10:76> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b809278 <line:9:3> 'int ()' Function 0x15b8091c0 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x15b809298 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x15b8094c8 <line:10:18, col:62> 'int' contains-errors '||'     |   |-BinaryOperator 0x15b809468 <col:18, col:32> 'int' contains-errors '=='     |   | |-CXXDependentScopeMemberExpr 0x15b8092d8 <col:18, col:24> '<dependent type>' contains-errors lvalue ->type     |   | | `-RecoveryExpr 0x15b8092b8 <col:18> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x15b809448 <col:32> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x15b8094a8 <col:48, col:62> 'int' contains-errors '=='     |     |-CXXDependentScopeMemberExpr 0x15b809378 <col:48, col:54> '<dependent type>' contains-errors lvalue ->type     |     | `-RecoveryExpr 0x15b809358 <col:48> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15b809488 <col:62> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b809630 <line:11:3, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b809518 <col:3> 'int ()' Function 0x15a1283e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x15b809538 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x15b809578 <col:30, col:43> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x15b809558 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15b809610 <col:49> '<dependent type>' contains-errors lvalue     `-IfStmt 0x15b809978 <line:13:3, line:16:3>       |-BinaryOperator 0x15b809848 <line:13:7, col:63> 'int' contains-errors '||'       | |-UnaryOperator 0x15b8097b0 <col:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow       | | `-CallExpr 0x15b809788 <col:8, col:29> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x15b809748 <col:8> 'int ()' Function 0x15b809690 'IsConstantTensor' 'int ()'       | |   `-RecoveryExpr 0x15b809768 <col:25> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x15b809830 <col:34, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow       |   `-CallExpr 0x15b809808 <col:35, col:63> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x15b8097c8 <col:35> 'int ()' Function 0x15b809690 'IsConstantTensor' 'int ()'       |     `-RecoveryExpr 0x15b8097e8 <col:52> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15b809968 <col:66, line:16:3> ","20706":"`-FunctionDecl 0x13800dd98  line:1:1 socket_is_send_pending 'int (void)'   `-CompoundStmt 0x13800def0 <line:2:1, line:4:1> ","20461":"`-FunctionDecl 0x1308b8c88  line:1:12 _activate_check_status 'int (struct crypt_device *, const char *, unsigned int)' static   |-ParmVarDecl 0x1308a0848 <col:35, col:56> col:56 used cd 'struct crypt_device *'   |-ParmVarDecl 0x1308a08c8 <col:60, col:72> col:72 used name 'const char *'   |-ParmVarDecl 0x1308a0948 <col:78, col:87> col:87 used reload 'unsigned int'   `-CompoundStmt 0x1308bae00 <line:2:1, line:23:1>     |-DeclStmt 0x1308b8e10 <line:3:2, col:7>     | `-VarDecl 0x1308b8da8 <col:2, col:6> col:6 used r 'int'     |-IfStmt 0x1308b8ea8 <line:5:2, line:6:10>     | |-UnaryOperator 0x1308b8e60 <line:5:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1308b8e48 <col:7> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x1308b8e28 <col:7> 'const char *' lvalue ParmVar 0x1308a08c8 'name' 'const char *'     | `-ReturnStmt 0x1308b8e98 <line:6:3, col:10>     |   `-IntegerLiteral 0x1308b8e78 <col:10> 'int' 0     |-BinaryOperator 0x1308b9118 <line:8:2, col:31> 'int' '='     | |-DeclRefExpr 0x1308b8ec8 <col:2> 'int' lvalue Var 0x1308b8da8 'r' 'int'     | `-CallExpr 0x1308b90b8 <col:6, col:31> 'int'     |   |-ImplicitCastExpr 0x1308b90a0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1308b9010 <col:6> 'int ()' Function 0x1308b8f58 'dm_status_device' 'int ()'     |   |-ImplicitCastExpr 0x1308b90e8 <col:23> 'struct crypt_device *' <LValueToRValue>     |   | `-DeclRefExpr 0x1308b9030 <col:23> 'struct crypt_device *' lvalue ParmVar 0x1308a0848 'cd' 'struct crypt_device *'     |   `-ImplicitCastExpr 0x1308b9100 <col:27> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x1308b9050 <col:27> 'const char *' lvalue ParmVar 0x1308a08c8 'name' 'const char *'     |-IfStmt 0x1308b9238 <line:10:2, line:11:10>     | |-BinaryOperator 0x1308b91e8 <line:10:6, col:16> 'int' '&&'     | | |-BinaryOperator 0x1308b9190 <col:6, col:11> 'int' '>='     | | | |-ImplicitCastExpr 0x1308b9178 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x1308b9138 <col:6> 'int' lvalue Var 0x1308b8da8 'r' 'int'     | | | `-IntegerLiteral 0x1308b9158 <col:11> 'int' 0     | | `-ImplicitCastExpr 0x1308b91d0 <col:16> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x1308b91b0 <col:16> 'unsigned int' lvalue ParmVar 0x1308a0948 'reload' 'unsigned int'     | `-ReturnStmt 0x1308b9228 <line:11:3, col:10>     |   `-IntegerLiteral 0x1308b9208 <col:10> 'int' 0     |-IfStmt 0x1308b98c0 <line:13:2, line:16:2>     | |-BinaryOperator 0x1308b9458 <line:13:6, col:22> 'int' contains-errors '||'     | | |-BinaryOperator 0x1308b93c8 <col:6, col:11> 'int' '>='     | | | |-ImplicitCastExpr 0x1308b93b0 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x1308b9258 <col:6> 'int' lvalue Var 0x1308b8da8 'r' 'int'     | | | `-IntegerLiteral 0x1308b9278 <col:11> 'int' 0     | | `-BinaryOperator 0x1308b9438 <col:16, col:22> 'int' contains-errors '=='     | |   |-DeclRefExpr 0x1308b92d0 <col:16> 'int' lvalue Var 0x1308b8da8 'r' 'int'     | |   `-UnaryOperator 0x1308b9420 <col:21, col:22> '<dependent type>' contains-errors prefix '-' cannot overflow     | |     `-ImplicitCastExpr 0x1308b9408 <col:22> '<dependent type>' contains-errors <LValueToRValue>     | |       `-RecoveryExpr 0x1308b93e8 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1308b98a0 <col:30, line:16:2>     |   |-CallExpr 0x1308b9790 <line:14:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x1308b9778 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1308b9558 <col:3> 'int ()' Function 0x1308b94a0 'log_err' 'int ()'     |   | |-ImplicitCastExpr 0x1308b97c8 <col:11> 'struct crypt_device *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1308b9578 <col:11> 'struct crypt_device *' lvalue ParmVar 0x1308a0848 'cd' 'struct crypt_device *'     |   | |-CallExpr 0x1308b9718 <col:15, col:22> 'int'     |   | | |-ImplicitCastExpr 0x1308b9700 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x1308b9678 <col:15> 'int ()' Function 0x1308b95c0 '_' 'int ()'     |   | | `-ImplicitCastExpr 0x1308b9740 <col:17> 'char *' <ArrayToPointerDecay>     |   | |   `-StringLiteral 0x1308b96e0 <col:17> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x1308b97e0 <col:25> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1308b9758 <col:25> 'const char *' lvalue ParmVar 0x1308a08c8 'name' 'const char *'     |   `-ReturnStmt 0x1308b9890 <line:15:3, col:11>     |     `-UnaryOperator 0x1308b9878 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1308b9860 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1308b9840 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1308b9a08 <line:18:2, line:19:10>     | |-BinaryOperator 0x1308b99b8 <line:18:6, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1308b98e0 <col:6> 'int' lvalue Var 0x1308b8da8 'r' 'int'     | | `-UnaryOperator 0x1308b99a0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x1308b9988 <col:12> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x1308b9968 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1308b99f8 <line:19:3, col:10>     |   `-IntegerLiteral 0x1308b99d8 <col:10> 'int' 0     |-CallExpr 0x1308b9b38 <line:21:2, col:28> 'int'     | |-ImplicitCastExpr 0x1308b9b20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1308b9a28 <col:2> 'int ()' Function 0x1308b94a0 'log_err' 'int ()'     | |-ImplicitCastExpr 0x1308b9b70 <col:10> 'struct crypt_device *' <LValueToRValue>     | | `-DeclRefExpr 0x1308b9a48 <col:10> 'struct crypt_device *' lvalue ParmVar 0x1308a0848 'cd' 'struct crypt_device *'     | |-CallExpr 0x1308b9ac0 <col:14, col:21> 'int'     | | |-ImplicitCastExpr 0x1308b9aa8 <col:14> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1308b9a68 <col:14> 'int ()' Function 0x1308b95c0 '_' 'int ()'     | | `-ImplicitCastExpr 0x1308b9ae8 <col:16> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x1308b9a88 <col:16> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x1308b9b88 <col:24> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x1308b9b00 <col:24> 'const char *' lvalue ParmVar 0x1308a08c8 'name' 'const char *'     `-ReturnStmt 0x1308b9bd8 <line:22:2, col:9>       `-ImplicitCastExpr 0x1308b9bc0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1308b9ba0 <col:9> 'int' lvalue Var 0x1308b8da8 'r' 'int' ","20524":"`-FunctionDecl 0x14a008200  col:28 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x14a008300 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x14a0082a8 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x14a008370 <col:28> Implicit 1 ","20321":"`-FunctionDecl 0x1401283a8  line:1:8 invalid CreateTempFile 'int (int *, float, int, int *)'   |-ParmVarDecl 0x140128128 <col:23, col:28> col:28 invalid env 'int *'   |-ParmVarDecl 0x1401281a8 <col:33, col:39> col:39 value 'float'   |-ParmVarDecl 0x140128228 <col:46, col:53> col:53 referenced invalid size 'int'   |-ParmVarDecl 0x1401282a8 <col:59, col:67> col:67 invalid filename 'int *'   `-CompoundStmt 0x140141e18 <col:77, line:13:1>     |-DeclStmt 0x140128508 <line:2:3, col:29>     | `-VarDecl 0x140128488 <col:3, col:16> col:16 invalid dir 'const int'     |-BinaryOperator 0x140128628 <line:3:3, col:15> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x1401285f0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1401285d8 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x140128520 <col:4> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x140128608 <col:15> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x140128678 <line:4:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x140141a48 <line:5:3, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140141800 <col:3> 'int ()' Function 0x140128738 'TF_RETURN_IF_ERROR' 'int ()'     | `-CallExpr 0x140141a18 <col:22, col:59> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x140141840 <col:22, col:27> '<dependent type>' contains-errors lvalue ->NewWritableFile     |   | `-RecoveryExpr 0x140141820 <col:22> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x1401419c8 <col:43, col:44> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x1401419b0 <col:44> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x140141888 <col:44> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x140141a00 <col:54, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1401419e0 <col:55> '<dependent type>' contains-errors lvalue     `-ForStmt 0x140141dc0 <line:6:3, line:10:3>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x140141b00 <line:6:22, col:26> 'int' contains-errors '<'       | |-RecoveryExpr 0x140141ae0 <col:22> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x140141aa0 <col:26> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x140141b70 <col:32, col:34> '<dependent type>' contains-errors prefix '++' cannot overflow       | `-RecoveryExpr 0x140141b50 <col:34> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x140141da8 <col:37, line:10:3>         `-CallExpr 0x140141d80 <line:9:5, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x140141b88 <col:5> 'int ()' Function 0x140128738 'TF_RETURN_IF_ERROR' 'int ()'           `-CallExpr 0x140141d58 <col:24, col:39> '<dependent type>' contains-errors             |-CXXDependentScopeMemberExpr 0x140141cf0 <col:24, col:30> '<dependent type>' contains-errors lvalue ->Append             | `-RecoveryExpr 0x140141cd0 <col:24> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x140141d38 <col:37> '<dependent type>' contains-errors lvalue ","20790":"`-FunctionDecl 0x121928288  line:1:1 invalid parseuid 'int (const char *, int *)'   |-ParmVarDecl 0x1219280d8 <col:10, col:22> col:22 used s 'const char *'   |-ParmVarDecl 0x1219281a8 <col:25, col:32> col:32 invalid uid 'int *'   `-CompoundStmt 0x1219423c8 <line:2:1, line:18:1>     |-DeclStmt 0x121928528 <line:3:2, col:19>     | |-RecordDecl 0x121928340 <col:2, col:9> col:9 struct passwd     | `-VarDecl 0x1219284a8 <col:2, col:17> col:17 used pw 'struct passwd *'     |-DeclStmt 0x1219285c0 <line:4:2, col:20>     | `-VarDecl 0x121928558 <col:2, col:14> col:14 used errstr 'const char *'     |-IfStmt 0x121941f88 <line:6:2, line:9:2>     | |-BinaryOperator 0x121941e48 <line:6:6, col:28> 'int' contains-errors '!='     | | |-ParenExpr 0x121941e08 <col:6, col:23> 'struct passwd *'     | | | `-BinaryOperator 0x121941de8 <col:7, col:22> 'struct passwd *' '='     | | |   |-DeclRefExpr 0x1219285d8 <col:7> 'struct passwd *' lvalue Var 0x1219284a8 'pw' 'struct passwd *'     | | |   `-ImplicitCastExpr 0x121941dd0 <col:12, col:22> 'struct passwd *' <IntegralToPointer>     | | |     `-CallExpr 0x121941d90 <col:12, col:22> 'int'     | | |       |-ImplicitCastExpr 0x121941d78 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |       | `-DeclRefExpr 0x121928750 <col:12> 'int ()' Function 0x121928698 'getpwnam' 'int ()'     | | |       `-ImplicitCastExpr 0x121941db8 <col:21> 'const char *' <LValueToRValue>     | | |         `-DeclRefExpr 0x121928770 <col:21> 'const char *' lvalue ParmVar 0x1219280d8 's' 'const char *'     | | `-RecoveryExpr 0x121941e28 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x121941f68 <col:34, line:9:2>     |   |-BinaryOperator 0x121941f18 <line:7:3, col:14> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x121941ea0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x121941e88 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x121941e68 <col:4> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x121941ef0 <col:10, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x121941eb8 <col:10> 'struct passwd *' lvalue Var 0x1219284a8 'pw' 'struct passwd *'     |   `-ReturnStmt 0x121941f58 <line:8:3, col:10>     |     `-IntegerLiteral 0x121941f38 <col:10> 'int' 0     |-BinaryOperator 0x1219422d8 <line:11:2, col:40> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x121942260 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x121942248 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x121941fa8 <col:3> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x121942298 <col:9, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1219420d8 <col:9> 'int ()' Function 0x121942020 'strtonum' 'int ()'     |   |-DeclRefExpr 0x1219420f8 <col:18> 'const char *' lvalue ParmVar 0x1219280d8 's' 'const char *'     |   |-IntegerLiteral 0x121942118 <col:21> 'int' 0     |   |-RecoveryExpr 0x121942278 <col:24> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1219421a0 <col:33, col:34> 'const char **' prefix '&' cannot overflow     |     `-DeclRefExpr 0x121942150 <col:34> 'const char *' lvalue Var 0x121928558 'errstr' 'const char *'     |-IfStmt 0x121942378 <line:15:2, line:16:11>     | |-ImplicitCastExpr 0x121942318 <line:15:6> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x1219422f8 <col:6> 'const char *' lvalue Var 0x121928558 'errstr' 'const char *'     | `-ReturnStmt 0x121942368 <line:16:3, col:11>     |   `-UnaryOperator 0x121942350 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x121942330 <col:11> 'int' 1     `-ReturnStmt 0x1219423b8 <line:17:2, col:9>       `-IntegerLiteral 0x121942398 <col:9> 'int' 0 ","20481":"`-FunctionDecl 0x1490fabc0  line:1:6 invalid e2fsck_rehash_directories 'void (int)'   |-ParmVarDecl 0x1490faaf0 <col:32, col:41> col:41 referenced invalid ctx 'int'   `-CompoundStmt 0x1491187f0 <line:2:1, line:77:1>     |-DeclStmt 0x149114218 <line:3:2, col:29>     | |-RecordDecl 0x1490fac70 <col:2, col:9> col:9 struct problem_context     | `-VarDecl 0x1490fad68 <col:2, col:25> col:25 referenced invalid pctx 'struct problem_context'     |-DeclStmt 0x149114418 <line:7:2, col:23>     | |-RecordDecl 0x149114230 <col:2, col:9> col:9 struct dir_info     | `-VarDecl 0x149114398 <col:2, col:20> col:20 used dir 'struct dir_info *'     |-DeclStmt 0x149114650 <line:9:2, col:41>     | |-RecordDecl 0x149114430 <col:2, col:9> col:9 struct dir_info_iter     | `-VarDecl 0x149114598 <col:2, col:40> col:25 used dirinfo_iter 'struct dir_info_iter *' cinit     |   `-ImplicitCastExpr 0x149114620 <col:40> 'struct dir_info_iter *' <NullToPointer>     |     `-IntegerLiteral 0x149114600 <col:40> 'int' 0     |-DeclStmt 0x1491148b0 <line:12:2, col:37>     | |-VarDecl 0x149114680 <col:2, col:8> col:8 used cur 'int'     | |-VarDecl 0x149114700 <col:2, col:13> col:13 used max 'int'     | |-VarDecl 0x149114780 <col:2, col:18> col:18 used all_dirs 'int'     | `-VarDecl 0x149114800 <col:2, col:36> col:28 used first 'int' cinit     |   `-IntegerLiteral 0x149114868 <col:36> 'int' 1     |-CallExpr 0x149114b88 <line:14:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149114a20 <col:2> 'int ()' Function 0x149114968 'init_resource_track' 'int ()'     | |-UnaryOperator 0x149114b70 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x149114b50 <col:23> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x149114ad8 <col:31, col:40> '<dependent type>' contains-errors lvalue ->io     |   `-CXXDependentScopeMemberExpr 0x149114a90 <col:31, col:36> '<dependent type>' contains-errors lvalue ->fs     |     `-RecoveryExpr 0x149114a70 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149114cd8 <line:15:2, col:28> 'int' contains-errors '='     | |-DeclRefExpr 0x149114bb8 <col:2> 'int' lvalue Var 0x149114780 'all_dirs' 'int'     | `-BinaryOperator 0x149114cb8 <col:13, col:28> '<dependent type>' contains-errors '&'     |   |-CXXDependentScopeMemberExpr 0x149114bf8 <col:13, col:18> '<dependent type>' contains-errors lvalue ->options     |   | `-RecoveryExpr 0x149114bd8 <col:13> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x149114c98 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149114e10 <line:17:2, line:18:3>     | |-BinaryOperator 0x149114de0 <line:17:6, col:29> 'int' contains-errors '&&'     | | |-UnaryOperator 0x149114d78 <col:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x149114d60 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x149114d18 <col:7, col:12> '<dependent type>' contains-errors lvalue ->dirs_to_hash     | | |     `-RecoveryExpr 0x149114cf8 <col:7> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x149114dc8 <col:28, col:29> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x149114db0 <col:29> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x149114d90 <col:29> 'int' lvalue Var 0x149114780 'all_dirs' 'int'     | `-ReturnStmt 0x149114e00 <line:18:3>     |-CStyleCastExpr 0x149114fb0 <line:20:2, col:41> 'void' contains-errors <ToVoid>     | `-CallExpr 0x149114f70 <col:9, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149114f10 <col:9> 'int ()' Function 0x149114e58 'e2fsck_get_lost_and_found' 'int ()'     |   |-RecoveryExpr 0x149114f30 <col:35> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x149114f50 <col:40> 'int' 0     |-CallExpr 0x149115110 <line:22:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1491150b8 <col:2> 'int ()' Function 0x149115000 'clear_problem_context' 'int ()'     | `-UnaryOperator 0x1491150f8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1491150d8 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149115178 <line:24:2, col:8> 'int' '='     | |-DeclRefExpr 0x149115138 <col:2> 'int' lvalue Var 0x149114680 'cur' 'int'     | `-IntegerLiteral 0x149115158 <col:8> 'int' 0     |-IfStmt 0x149117060 <line:25:2, line:37:2> has_else     | |-ImplicitCastExpr 0x1491151b8 <line:25:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x149115198 <col:6> 'int' lvalue Var 0x149114780 'all_dirs' 'int'     | |-CompoundStmt 0x1491168f0 <col:16, line:28:2>     | | |-BinaryOperator 0x149116748 <line:26:3, col:48> 'struct dir_info_iter *' contains-errors '='     | | | |-DeclRefExpr 0x1491151d0 <col:3> 'struct dir_info_iter *' lvalue Var 0x149114598 'dirinfo_iter' 'struct dir_info_iter *'     | | | `-CallExpr 0x149116720 <col:18, col:48> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1491166e0 <col:18> 'int ()' Function 0x149116628 'e2fsck_dir_info_iter_begin' 'int ()'     | | |   `-RecoveryExpr 0x149116700 <col:45> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1491168d0 <line:27:3, col:35> 'int' contains-errors '='     | |   |-DeclRefExpr 0x149116768 <col:3> 'int' lvalue Var 0x149114700 'max' 'int'     | |   `-CallExpr 0x1491168a8 <col:9, col:35> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x149116868 <col:9> 'int ()' Function 0x1491167b0 'e2fsck_get_num_dirinfo' 'int ()'     | |     `-RecoveryExpr 0x149116888 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x149117040 <line:28:9, line:37:2>     |   |-IfStmt 0x149116e50 <line:31:3, line:35:3>     |   | |-RecoveryExpr 0x149116af0 <line:31:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x149116e28 <col:15, line:35:3>     |   |   |-BinaryOperator 0x149116bf8 <line:32:4, col:19> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x149116b58 <col:4, col:9> '<dependent type>' contains-errors lvalue .errcode     |   |   | | `-RecoveryExpr 0x149116b30 <col:4> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x149116b10 <col:4> 'struct problem_context' lvalue Var 0x1490fad68 'pctx' 'struct problem_context'     |   |   | `-RecoveryExpr 0x149116bd8 <col:19> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x149116de0 <line:33:4, col:47> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x149116cf8 <col:4> 'int ()' Function 0x149116c40 'fix_problem' 'int ()'     |   |   | |-RecoveryExpr 0x149116d18 <col:16> '<dependent type>' contains-errors lvalue     |   |   | |-RecoveryExpr 0x149116dc0 <col:21> '<dependent type>' contains-errors lvalue     |   |   | `-UnaryOperator 0x149116d70 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x149116d50 <col:43> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x149116e18 <line:34:4>     |   `-BinaryOperator 0x149117020 <line:36:3, col:48> 'int' contains-errors '='     |     |-DeclRefExpr 0x149116e70 <col:3> 'int' lvalue Var 0x149114700 'max' 'int'     |     `-CallExpr 0x149116ff8 <col:9, col:48> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x149116f70 <col:9> 'int ()' Function 0x149116eb8 'ext2fs_u32_list_count' 'int ()'     |       `-CXXDependentScopeMemberExpr 0x149116fb0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->dirs_to_hash     |         `-RecoveryExpr 0x149116f90 <col:31> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x149117fb8 <line:38:2, line:65:2>     | |-IntegerLiteral 0x149117090 <line:38:9> 'int' 1     | `-CompoundStmt 0x149117f90 <col:12, line:65:2>     |   |-IfStmt 0x1491174f8 <line:39:3, line:47:3> has_else     |   | |-ImplicitCastExpr 0x1491170d0 <line:39:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1491170b0 <col:7> 'int' lvalue Var 0x149114780 'all_dirs' 'int'     |   | |-CompoundStmt 0x149117380 <col:17, line:44:3>     |   | | `-IfStmt 0x149117300 <line:40:4, line:42:5>     |   | |   |-BinaryOperator 0x1491172d8 <line:40:8, line:41:26> 'int' contains-errors '=='     |   | |   | |-ParenExpr 0x149117298 <line:40:8, line:41:21> 'struct dir_info *' contains-errors     |   | |   | | `-BinaryOperator 0x149117278 <line:40:9, line:41:20> 'struct dir_info *' contains-errors '='     |   | |   | |   |-DeclRefExpr 0x1491170e8 <line:40:9> 'struct dir_info *' lvalue Var 0x149114398 'dir' 'struct dir_info *'     |   | |   | |   `-CallExpr 0x149117248 <col:15, line:41:20> '<dependent type>' contains-errors     |   | |   | |     |-DeclRefExpr 0x1491171e8 <line:40:15> 'int ()' Function 0x149117130 'e2fsck_dir_info_iter' 'int ()'     |   | |   | |     |-RecoveryExpr 0x149117208 <col:36> '<dependent type>' contains-errors lvalue     |   | |   | |     `-DeclRefExpr 0x149117228 <line:41:8> 'struct dir_info_iter *' lvalue Var 0x149114598 'dirinfo_iter' 'struct dir_info_iter *'     |   | |   | `-IntegerLiteral 0x1491172b8 <col:26> 'int' 0     |   | |   `-BreakStmt 0x1491172f8 <line:42:5>     |   | `-CompoundStmt 0x1491174e0 <line:44:10, line:47:3>     |   |   `-IfStmt 0x1491174c0 <line:45:4, line:46:5>     |   |     |-RecoveryExpr 0x149117498 <line:45:8, col:43> '_Bool' contains-errors     |   |     `-BreakStmt 0x1491174b8 <line:46:5>     |   |-IfStmt 0x1491176f0 <line:50:3, line:53:3>     |   | |-ImplicitCastExpr 0x1491175d8 <line:50:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1491175b8 <col:7> 'int' lvalue Var 0x149114800 'first' 'int'     |   | `-CompoundStmt 0x1491176d8 <col:14, line:53:3>     |   |   `-BinaryOperator 0x1491176b8 <line:52:4, col:12> 'int' '='     |   |     |-DeclRefExpr 0x149117678 <col:4> 'int' lvalue Var 0x149114800 'first' 'int'     |   |     `-IntegerLiteral 0x149117698 <col:12> 'int' 0     |   `-IfStmt 0x149117b08 <line:58:3, line:61:3>     |     |-CXXDependentScopeMemberExpr 0x149117918 <line:58:7, col:12> '<dependent type>' contains-errors lvalue .errcode     |     | `-RecoveryExpr 0x1491178f8 <col:7> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x149117af8 <col:21, line:61:3>     |-IfStmt 0x1491182c8 <line:67:2, line:70:3> has_else     | |-ImplicitCastExpr 0x149118038 <line:67:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x149118018 <col:6> 'int' lvalue Var 0x149114780 'all_dirs' 'int'     | |-CallExpr 0x149118190 <line:68:3, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x149118130 <col:3> 'int ()' Function 0x149118078 'e2fsck_dir_info_iter_end' 'int ()'     | | |-RecoveryExpr 0x149118150 <col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149118170 <col:33> 'struct dir_info_iter *' lvalue Var 0x149114598 'dirinfo_iter' 'struct dir_info_iter *'     | `-NullStmt 0x1491182c0 <line:70:3>     |-IfStmt 0x1491184f0 <line:72:2, line:73:41>     | |-CXXDependentScopeMemberExpr 0x149118318 <line:72:6, col:11> '<dependent type>' contains-errors lvalue ->dirs_to_hash     | | `-RecoveryExpr 0x1491182f8 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1491184c8 <line:73:3, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149118440 <col:3> 'int ()' Function 0x149118388 'ext2fs_u32_list_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x149118480 <col:24, col:29> '<dependent type>' contains-errors lvalue ->dirs_to_hash     |     `-RecoveryExpr 0x149118460 <col:24> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1491185c0 <line:74:2, col:22> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x149118558 <col:2, col:7> '<dependent type>' contains-errors lvalue ->dirs_to_hash       | `-RecoveryExpr 0x149118530 <col:2> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x149118510 <col:2> 'int' lvalue ParmVar 0x1490faaf0 'ctx' 'int'       `-IntegerLiteral 0x1491185a0 <col:22> 'int' 0 ","21067":"`-FunctionDecl 0x14d128318  line:1:1 invalid buflist_match 'int (int *, int *, int)'   |-ParmVarDecl 0x14d128128 <line:2:5, col:17> col:17 invalid rmp 'int *'   |-ParmVarDecl 0x14d1281a8 <line:3:5, col:12> col:12 invalid buf 'int *'   |-ParmVarDecl 0x14d128228 <line:4:5, col:10> col:10 used ignore_case 'int'   `-CompoundStmt 0x14d81bba0 <line:5:1, line:14:1>     |-DeclStmt 0x14d128458 <line:6:5, col:18>     | `-VarDecl 0x14d1283f0 <col:5, col:13> col:13 used match 'char *'     |-BinaryOperator 0x14d1286f0 <line:9:5, col:56> 'char *' contains-errors '='     | |-DeclRefExpr 0x14d128470 <col:5> 'char *' lvalue Var 0x14d1283f0 'match' 'char *'     | `-CallExpr 0x14d1286b8 <col:13, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d1285f0 <col:13> 'int ()' Function 0x14d128538 'fname_match' 'int ()'     |   |-RecoveryExpr 0x14d128610 <col:25> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x14d128650 <col:30, col:35> '<dependent type>' contains-errors lvalue ->b_sfname     |   | `-RecoveryExpr 0x14d128630 <col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14d128698 <col:45> 'int' lvalue ParmVar 0x14d128228 'ignore_case' 'int'     |-IfStmt 0x14d81b700 <line:10:5, line:11:53>     | |-BinaryOperator 0x14d128788 <line:10:9, col:18> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14d128710 <col:9> 'char *' lvalue Var 0x14d1283f0 'match' 'char *'     | | `-RecoveryExpr 0x14d128768 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x14d81b6e0 <line:11:2, col:53> 'char *' contains-errors '='     |   |-DeclRefExpr 0x14d1287a8 <col:2> 'char *' lvalue Var 0x14d1283f0 'match' 'char *'     |   `-CallExpr 0x14d81b6a8 <col:10, col:53> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d1287c8 <col:10> 'int ()' Function 0x14d128538 'fname_match' 'int ()'     |     |-RecoveryExpr 0x14d81b600 <col:22> '<dependent type>' contains-errors lvalue     |     |-CXXDependentScopeMemberExpr 0x14d81b640 <col:27, col:32> '<dependent type>' contains-errors lvalue ->b_ffname     |     | `-RecoveryExpr 0x14d81b620 <col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14d81b688 <col:42> 'int' lvalue ParmVar 0x14d128228 'ignore_case' 'int'     `-ReturnStmt 0x14d81bb90 <line:13:5, col:12>       `-ImplicitCastExpr 0x14d81b758 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x14d81b740 <col:12> 'char *' <LValueToRValue>           `-DeclRefExpr 0x14d81b720 <col:12> 'char *' lvalue Var 0x14d1283f0 'match' 'char *' ","21023":"`-FunctionDecl 0x147142260  col:8 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x147142360 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1471423c8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x147142308 <<invalid sloc>> Implicit 893 ","20544":"`-FunctionDecl 0x12a00e078  line:1:1 invalid flatpak_dir_get_deploy_data 'int (int *, int *, int, int *, int **)'   |-ParmVarDecl 0x12a00dd28 <col:30, col:49> col:49 invalid self 'int *'   |-ParmVarDecl 0x12a00dda8 <line:2:30, col:49> col:49 invalid ref 'int *'   |-ParmVarDecl 0x12a00de28 <line:3:30, col:49> col:49 used required_version 'int'   |-ParmVarDecl 0x12a00dea8 <line:4:30, col:49> col:49 invalid cancellable 'int *'   |-ParmVarDecl 0x12a00df60 <line:5:30, col:49> col:49 invalid error 'int **'   `-CompoundStmt 0x12b00a9b8 <line:6:1, line:26:1>     |-CallExpr 0x12a00e320 <line:7:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a00e2a0 <col:3> 'int ()' Function 0x12a00e1e8 'g_autoptr' 'int ()'     | `-RecoveryExpr 0x12a00e300 <col:13> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12b00a600 <line:10:3, line:15:5>       |-BinaryOperator 0x12b00a020 <line:10:7, col:21> 'int' contains-errors '=='       | |-RecoveryExpr 0x12b009fe0 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12b00a000 <col:21> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12b00a5e8 <line:11:5, line:15:5>         `-CallExpr 0x12b00a5a0 <line:12:7, line:13:62> '<dependent type>' contains-errors           |-DeclRefExpr 0x12b00a120 <line:12:7> 'int ()' Function 0x12b00a068 'g_set_error' 'int ()'           |-RecoveryExpr 0x12b00a140 <col:20> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x12b00a508 <col:27> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x12b00a528 <col:42> '<dependent type>' contains-errors lvalue           |-CallExpr 0x12b00a560 <line:13:20, col:27> 'int'           | |-ImplicitCastExpr 0x12b00a548 <col:20> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x12b00a270 <col:20> 'int ()' Function 0x12b00a1b8 '_' 'int ()'           | `-ImplicitCastExpr 0x12b00a588 <col:22> 'char *' <ArrayToPointerDecay>           |   `-StringLiteral 0x12b00a2d0 <col:22> 'char[4]' lvalue \"STR\"           `-CallExpr 0x12b00a498 <col:30, col:61> '<dependent type>' contains-errors             |-DeclRefExpr 0x12b00a458 <col:30> 'int ()' Function 0x12b00a3a0 'flatpak_decomposed_get_ref' 'int ()'             `-RecoveryExpr 0x12b00a478 <col:58> '<dependent type>' contains-errors lvalue ","20970":"`-FunctionDecl 0x12800e350  line:1:13 vhost_init_is_le 'void (struct vhost_virtqueue *)' static   |-ParmVarDecl 0x12800e248 <col:30, col:54> col:54 used vq 'struct vhost_virtqueue *'   `-CompoundStmt 0x128026ad0 <line:2:1, line:5:1>     `-BinaryOperator 0x128026ab0 <line:3:2, line:4:37> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x128026680 <line:3:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x128026648 <col:2> 'struct vhost_virtqueue *' lvalue ParmVar 0x12800e248 'vq' 'struct vhost_virtqueue *'       `-BinaryOperator 0x128026a90 <col:14, line:4:37> 'int' contains-errors '||'         |-CallExpr 0x128026a28 <line:3:14, col:54> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1280267d0 <col:14> 'int ()' Function 0x128026718 'vhost_has_feature' 'int ()'         | |-DeclRefExpr 0x1280267f0 <col:32> 'struct vhost_virtqueue *' lvalue ParmVar 0x12800e248 'vq' 'struct vhost_virtqueue *'         | `-RecoveryExpr 0x128026a08 <col:36> '<dependent type>' contains-errors lvalue         `-CallExpr 0x128026a70 <line:4:6, col:37> 'int'           `-ImplicitCastExpr 0x128026a58 <col:6> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x128026938 <col:6> 'int ()' Function 0x128026880 'virtio_legacy_is_little_endian' 'int ()' ","20784":"`-FunctionDecl 0x144128910  line:1:13 test_double_free_in_vrend_renderer_blit_int_trigger_invalid_formats 'void ()' static   `-CompoundStmt 0x144144df0 <line:2:1, line:76:1>     |-DeclStmt 0x144128f98 <line:3:4, col:51>     | |-RecordDecl 0x144128a00 <col:4, col:11> col:11 struct virgl_renderer_resource_create_args     | `-VarDecl 0x144128af8 <col:4, col:47> col:47 referenced invalid args 'struct virgl_renderer_resource_create_args'     |-BinaryOperator 0x144141268 <line:4:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144141200 <col:4, col:9> '<dependent type>' contains-errors lvalue .handle     | | `-RecoveryExpr 0x144128fd0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144128fb0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144141248 <col:18> 'int' 1     |-BinaryOperator 0x144141338 <line:5:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441412d0 <col:4, col:9> '<dependent type>' contains-errors lvalue .target     | | `-RecoveryExpr 0x1441412a8 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141288 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144141318 <col:18> 'int' 0     |-BinaryOperator 0x144141408 <line:6:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441413a0 <col:4, col:9> '<dependent type>' contains-errors lvalue .format     | | `-RecoveryExpr 0x144141378 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141358 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441413e8 <col:18> 'int' 262144     |-BinaryOperator 0x1441414d8 <line:7:4, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144141470 <col:4, col:9> '<dependent type>' contains-errors lvalue .bind     | | `-RecoveryExpr 0x144141448 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141428 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441414b8 <col:16> 'int' 131072     |-BinaryOperator 0x1441415a8 <line:8:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144141540 <col:4, col:9> '<dependent type>' contains-errors lvalue .width     | | `-RecoveryExpr 0x144141518 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1441414f8 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144141588 <col:17> 'int' 1     |-BinaryOperator 0x144141678 <line:9:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144141610 <col:4, col:9> '<dependent type>' contains-errors lvalue .height     | | `-RecoveryExpr 0x1441415e8 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1441415c8 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144141658 <col:18> 'int' 1     |-BinaryOperator 0x144141748 <line:10:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441416e0 <col:4, col:9> '<dependent type>' contains-errors lvalue .depth     | | `-RecoveryExpr 0x1441416b8 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141698 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144141728 <col:17> 'int' 1     |-BinaryOperator 0x144141818 <line:11:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441417b0 <col:4, col:9> '<dependent type>' contains-errors lvalue .array_size     | | `-RecoveryExpr 0x144141788 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141768 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441417f8 <col:22> 'int' 0     |-BinaryOperator 0x1441418e8 <line:12:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144141880 <col:4, col:9> '<dependent type>' contains-errors lvalue .last_level     | | `-RecoveryExpr 0x144141858 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141838 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441418c8 <col:22> 'int' 0     |-BinaryOperator 0x1441419b8 <line:13:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144141950 <col:4, col:9> '<dependent type>' contains-errors lvalue .nr_samples     | | `-RecoveryExpr 0x144141928 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141908 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144141998 <col:22> 'int' 0     |-BinaryOperator 0x144141a88 <line:14:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144141a20 <col:4, col:9> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x1441419f8 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1441419d8 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144141a68 <col:17> 'int' 0     |-CallExpr 0x144141cb8 <line:16:4, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144141bd0 <col:4> 'int ()' Function 0x144141b18 'virgl_renderer_resource_create' 'int ()'     | |-UnaryOperator 0x144141c10 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x144141bf0 <col:36> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x144141c98 <col:42> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x144141c40 <col:48> 'int' 0     |-CallExpr 0x144141ec0 <line:17:4, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144141dd0 <col:4> 'int ()' Function 0x144141d18 'virgl_renderer_ctx_attach_resource' 'int ()'     | |-RecoveryExpr 0x144141ea0 <col:39> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x144141e28 <col:47, col:52> '<dependent type>' contains-errors lvalue .handle     |   `-RecoveryExpr 0x144141e08 <col:47> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144141fa0 <line:19:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144141f38 <col:4, col:9> '<dependent type>' contains-errors lvalue .handle     | | `-RecoveryExpr 0x144141f10 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141ef0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144141f80 <col:18> 'int' 6     |-BinaryOperator 0x144142070 <line:20:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144142008 <col:4, col:9> '<dependent type>' contains-errors lvalue .target     | | `-RecoveryExpr 0x144141fe0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144141fc0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144142050 <col:18> 'int' 4     |-BinaryOperator 0x144142140 <line:21:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441420d8 <col:4, col:9> '<dependent type>' contains-errors lvalue .format     | | `-RecoveryExpr 0x1441420b0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144142090 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144142120 <col:18> 'int' 1     |-BinaryOperator 0x144143020 <line:22:4, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441421a8 <col:4, col:9> '<dependent type>' contains-errors lvalue .bind     | | `-RecoveryExpr 0x144142180 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144142160 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143000 <col:16> 'int' 2     |-BinaryOperator 0x1441430f0 <line:23:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143088 <col:4, col:9> '<dependent type>' contains-errors lvalue .width     | | `-RecoveryExpr 0x144143060 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143040 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441430d0 <col:17> 'int' 2     |-BinaryOperator 0x1441431c0 <line:24:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143158 <col:4, col:9> '<dependent type>' contains-errors lvalue .height     | | `-RecoveryExpr 0x144143130 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143110 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441431a0 <col:18> 'int' 0     |-BinaryOperator 0x144143290 <line:25:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143228 <col:4, col:9> '<dependent type>' contains-errors lvalue .depth     | | `-RecoveryExpr 0x144143200 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1441431e0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143270 <col:17> 'int' 1     |-BinaryOperator 0x144143360 <line:26:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441432f8 <col:4, col:9> '<dependent type>' contains-errors lvalue .array_size     | | `-RecoveryExpr 0x1441432d0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1441432b0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143340 <col:22> 'int' 6     |-BinaryOperator 0x144143430 <line:27:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441433c8 <col:4, col:9> '<dependent type>' contains-errors lvalue .last_level     | | `-RecoveryExpr 0x1441433a0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143380 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143410 <col:22> 'int' 2     |-BinaryOperator 0x144143500 <line:28:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143498 <col:4, col:9> '<dependent type>' contains-errors lvalue .nr_samples     | | `-RecoveryExpr 0x144143470 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143450 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441434e0 <col:22> 'int' 0     |-BinaryOperator 0x1441435d0 <line:29:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143568 <col:4, col:9> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x144143540 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143520 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441435b0 <col:17> 'int' 0     |-CallExpr 0x1441436d8 <line:31:4, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1441435f0 <col:4> 'int ()' Function 0x144141b18 'virgl_renderer_resource_create' 'int ()'     | |-UnaryOperator 0x144143630 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x144143610 <col:36> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1441436b8 <col:42> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x144143660 <col:48> 'int' 0     |-CallExpr 0x144143800 <line:32:4, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144143710 <col:4> 'int ()' Function 0x144141d18 'virgl_renderer_ctx_attach_resource' 'int ()'     | |-RecoveryExpr 0x1441437e0 <col:39> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x144143768 <col:47, col:52> '<dependent type>' contains-errors lvalue .handle     |   `-RecoveryExpr 0x144143748 <col:47> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1441438e0 <line:34:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143878 <col:4, col:9> '<dependent type>' contains-errors lvalue .handle     | | `-RecoveryExpr 0x144143850 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143830 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x1441438c0 <col:18> 'int' 1     |-BinaryOperator 0x1441439b0 <line:35:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143948 <col:4, col:9> '<dependent type>' contains-errors lvalue .target     | | `-RecoveryExpr 0x144143920 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143900 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143990 <col:18> 'int' 7     |-BinaryOperator 0x144143a80 <line:36:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143a18 <col:4, col:9> '<dependent type>' contains-errors lvalue .format     | | `-RecoveryExpr 0x1441439f0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1441439d0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143a60 <col:18> 'int' 237     |-BinaryOperator 0x144143b50 <line:37:4, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143ae8 <col:4, col:9> '<dependent type>' contains-errors lvalue .bind     | | `-RecoveryExpr 0x144143ac0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143aa0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143b30 <col:16> 'int' 1     |-BinaryOperator 0x144143c20 <line:38:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143bb8 <col:4, col:9> '<dependent type>' contains-errors lvalue .width     | | `-RecoveryExpr 0x144143b90 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143b70 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143c00 <col:17> 'int' 6     |-BinaryOperator 0x144143cf0 <line:39:4, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143c88 <col:4, col:9> '<dependent type>' contains-errors lvalue .height     | | `-RecoveryExpr 0x144143c60 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143c40 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143cd0 <col:18> 'int' 0     |-BinaryOperator 0x144143dc0 <line:40:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143d58 <col:4, col:9> '<dependent type>' contains-errors lvalue .depth     | | `-RecoveryExpr 0x144143d30 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143d10 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143da0 <col:17> 'int' 1     |-BinaryOperator 0x144143e90 <line:41:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143e28 <col:4, col:9> '<dependent type>' contains-errors lvalue .array_size     | | `-RecoveryExpr 0x144143e00 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143de0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143e70 <col:22> 'int' 0     |-BinaryOperator 0x144143f60 <line:42:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144143ef8 <col:4, col:9> '<dependent type>' contains-errors lvalue .last_level     | | `-RecoveryExpr 0x144143ed0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143eb0 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144143f40 <col:22> 'int' 0     |-BinaryOperator 0x144144068 <line:43:4, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144144000 <col:4, col:9> '<dependent type>' contains-errors lvalue .nr_samples     | | `-RecoveryExpr 0x144143fa0 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144143f80 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144144048 <col:22> 'int' 6     |-BinaryOperator 0x144144138 <line:44:4, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1441440d0 <col:4, col:9> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x1441440a8 <col:4> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144144088 <col:4> 'struct virgl_renderer_resource_create_args' lvalue Var 0x144128af8 'args' 'struct virgl_renderer_resource_create_args'     | `-IntegerLiteral 0x144144118 <col:17> 'int' 0     |-CallExpr 0x144144240 <line:46:4, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144144158 <col:4> 'int ()' Function 0x144141b18 'virgl_renderer_resource_create' 'int ()'     | |-UnaryOperator 0x144144198 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x144144178 <col:36> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x144144220 <col:42> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1441441c8 <col:48> 'int' 0     |-CallExpr 0x144144368 <line:47:4, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144144278 <col:4> 'int ()' Function 0x144141d18 'virgl_renderer_ctx_attach_resource' 'int ()'     | |-RecoveryExpr 0x144144348 <col:39> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1441442d0 <col:47, col:52> '<dependent type>' contains-errors lvalue .handle     |   `-RecoveryExpr 0x1441442b0 <col:47> '<dependent type>' contains-errors lvalue     `-DeclStmt 0x144144438 <line:51:4, col:13>       `-VarDecl 0x1441443b0 <col:4, col:12> col:8 used i 'int' cinit         `-IntegerLiteral 0x144144418 <col:12> 'int' 0 ","20322":"`-FunctionDecl 0x13d940fe8  line:1:12 invalid l2tp_ip6_recvmsg 'int (struct kiocb *, struct sock *, struct msghdr *, int, int, int, int *)' static   |-ParmVarDecl 0x13d928648 <col:29, col:43> col:43 iocb 'struct kiocb *'   |-ParmVarDecl 0x13d940a28 <col:49, col:62> col:62 used sk 'struct sock *'   |-ParmVarDecl 0x13d940bf8 <line:2:8, col:23> col:23 used msg 'struct msghdr *'   |-ParmVarDecl 0x13d940c90 <col:28, col:35> col:35 invalid len 'int'   |-ParmVarDecl 0x13d940d10 <col:40, col:44> col:44 used noblock 'int'   |-ParmVarDecl 0x13d940d90 <line:3:8, col:12> col:12 used flags 'int'   |-ParmVarDecl 0x13d940e48 <col:19, col:24> col:24 used addr_len 'int *'   `-CompoundStmt 0x13d945d68 <line:4:1, line:56:1>     |-DeclStmt 0x13d9414f8 <line:5:2, col:38>     | |-RecordDecl 0x13d9410c8 <col:2, col:9> col:9 struct ipv6_pinfo     | `-VarDecl 0x13d941238 <col:2, col:37> col:21 used np 'struct ipv6_pinfo *' cinit     |   `-ImplicitCastExpr 0x13d9414c8 <col:26, col:37> 'struct ipv6_pinfo *' <IntegralToPointer>     |     `-CallExpr 0x13d941488 <col:26, col:37> 'int'     |       |-ImplicitCastExpr 0x13d941470 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13d941400 <col:26> 'int ()' Function 0x13d941348 'inet6_sk' 'int ()'     |       `-ImplicitCastExpr 0x13d9414b0 <col:35> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x13d941420 <col:35> 'struct sock *' lvalue ParmVar 0x13d940a28 'sk' 'struct sock *'     |-DeclStmt 0x13d941808 <line:6:2, col:73>     | |-RecordDecl 0x13d941510 <col:2, col:9> col:9 struct sockaddr_l2tpip6     | `-VarDecl 0x13d941678 <col:2, col:65> col:27 used lsa 'struct sockaddr_l2tpip6 *' cinit     |   `-CStyleCastExpr 0x13d9417c8 <col:33, col:65> 'struct sockaddr_l2tpip6 *' contains-errors <Dependent>     |     `-RecoveryExpr 0x13d941718 <col:60, col:65> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d9416e0 <col:60> 'struct msghdr *' lvalue ParmVar 0x13d940bf8 'msg' 'struct msghdr *'     |-RecoveryExpr 0x13d941900 <line:7:2, col:18> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x13d9418e0 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x13d9418c0 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13d941858 <col:18> 'int' 0     |-DeclStmt 0x13d943e50 <line:8:2, col:23>     | `-VarDecl 0x13d941948 <col:2, col:13> col:6 used err 'int' cinit     |   `-UnaryOperator 0x13d943e38 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13d943e20 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13d943e00 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13d944058 <line:9:2, col:21>     | |-RecordDecl 0x13d943e68 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x13d943fd8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-IfStmt 0x13d944170 <line:11:2, line:12:8>     | |-BinaryOperator 0x13d9440e8 <line:11:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x13d944070 <col:6> 'int' lvalue ParmVar 0x13d940d90 'flags' 'int'     | | `-RecoveryExpr 0x13d9440c8 <col:14> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x13d944158 <line:12:3, col:8> 'out' 0x13d944108     |-IfStmt 0x13d9444c8 <line:17:2, line:18:38>     | |-BinaryOperator 0x13d944300 <line:17:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x13d944288 <col:6> 'int' lvalue ParmVar 0x13d940d90 'flags' 'int'     | | `-RecoveryExpr 0x13d9442e0 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13d9444b8 <line:18:3, col:38>     |   `-CallExpr 0x13d944480 <col:10, col:38> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13d944400 <col:10> 'int ()' Function 0x13d944348 'ipv6_recv_error' 'int ()'     |     |-DeclRefExpr 0x13d944420 <col:26> 'struct sock *' lvalue ParmVar 0x13d940a28 'sk' 'struct sock *'     |     |-DeclRefExpr 0x13d944440 <col:30> 'struct msghdr *' lvalue ParmVar 0x13d940bf8 'msg' 'struct msghdr *'     |     `-RecoveryExpr 0x13d944460 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d944758 <line:20:2, col:50> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x13d9444e8 <col:2> 'struct sk_buff *' lvalue Var 0x13d943fd8 'skb' 'struct sk_buff *'     | `-ImplicitCastExpr 0x13d944740 <col:8, col:50> 'struct sk_buff *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x13d9446b8 <col:8, col:50> 'int' contains-errors     |     |-ImplicitCastExpr 0x13d9446a0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13d9445e8 <col:8> 'int ()' Function 0x13d944530 'skb_recv_datagram' 'int ()'     |     |-ImplicitCastExpr 0x13d9446f8 <col:26> 'struct sock *' <LValueToRValue>     |     | `-DeclRefExpr 0x13d944608 <col:26> 'struct sock *' lvalue ParmVar 0x13d940a28 'sk' 'struct sock *'     |     |-ImplicitCastExpr 0x13d944710 <col:30> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x13d944628 <col:30> 'int' lvalue ParmVar 0x13d940d90 'flags' 'int'     |     |-ImplicitCastExpr 0x13d944728 <col:37> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x13d944648 <col:37> 'int' lvalue ParmVar 0x13d940d10 'noblock' 'int'     |     `-UnaryOperator 0x13d944688 <col:46, col:47> 'int *' contains-errors prefix '&' cannot overflow     |       `-DeclRefExpr 0x13d944668 <col:47> 'int' contains-errors lvalue Var 0x13d941948 'err' 'int'     |-IfStmt 0x13d9447e0 <line:21:2, line:22:8>     | |-UnaryOperator 0x13d9447b0 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13d944798 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x13d944778 <col:7> 'struct sk_buff *' lvalue Var 0x13d943fd8 'skb' 'struct sk_buff *'     | `-GotoStmt 0x13d9447c8 <line:22:3, col:8> 'out' 0x13d944108     |-IfStmt 0x13d944a28 <line:25:2, line:28:2>     | |-BinaryOperator 0x13d9448d8 <line:25:6, col:12> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13d944860 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d9448b8 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d944a10 <col:20, line:28:2>     |   `-CompoundAssignOperator 0x13d9449c0 <line:26:3, col:21> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x13d944930 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13d9448f8 <col:3> 'struct msghdr *' lvalue ParmVar 0x13d940bf8 'msg' 'struct msghdr *'     |     `-RecoveryExpr 0x13d9449a0 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d944ca8 <line:31:2, line:32:8>     | |-ImplicitCastExpr 0x13d944c28 <line:31:6> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x13d944c08 <col:6> 'int' contains-errors lvalue Var 0x13d941948 'err' 'int'     | `-GotoStmt 0x13d944c90 <line:32:3, col:8> 'done' 0x13d944c40     |-CallExpr 0x13d944e58 <line:34:2, col:34> 'int'     | |-ImplicitCastExpr 0x13d944e40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13d944da8 <col:2> 'int ()' Function 0x13d944cf0 'sock_recv_timestamp' 'int ()'     | |-ImplicitCastExpr 0x13d944e90 <col:22> 'struct msghdr *' <LValueToRValue>     | | `-DeclRefExpr 0x13d944dc8 <col:22> 'struct msghdr *' lvalue ParmVar 0x13d940bf8 'msg' 'struct msghdr *'     | |-ImplicitCastExpr 0x13d944ea8 <col:27> 'struct sock *' <LValueToRValue>     | | `-DeclRefExpr 0x13d944e00 <col:27> 'struct sock *' lvalue ParmVar 0x13d940a28 'sk' 'struct sock *'     | `-ImplicitCastExpr 0x13d944ec0 <col:31> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x13d944e20 <col:31> 'struct sk_buff *' lvalue Var 0x13d943fd8 'skb' 'struct sk_buff *'     |-IfStmt 0x13d9457a8 <line:37:2, line:45:2>     | |-ImplicitCastExpr 0x13d944ef8 <line:37:6> 'struct sockaddr_l2tpip6 *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x13d944ed8 <col:6> 'struct sockaddr_l2tpip6 *' contains-errors lvalue Var 0x13d941678 'lsa' 'struct sockaddr_l2tpip6 *'     | `-CompoundStmt 0x13d945770 <col:11, line:45:2>     |   |-BinaryOperator 0x13d944ff0 <line:39:3, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13d944fa8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13d944f70 <col:3> 'struct sockaddr_l2tpip6 *' contains-errors lvalue Var 0x13d941678 'lsa' 'struct sockaddr_l2tpip6 *'     |   | `-IntegerLiteral 0x13d944fd0 <col:22> 'int' 0     |   |-BinaryOperator 0x13d945210 <line:40:3, col:35> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13d945048 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13d945010 <col:3> 'struct sockaddr_l2tpip6 *' contains-errors lvalue Var 0x13d941678 'lsa' 'struct sockaddr_l2tpip6 *'     |   | `-RecoveryExpr 0x13d9451e8 <col:20, col:35> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x13d9451a8 <col:20, col:32> 'int'     |   |     |-ImplicitCastExpr 0x13d945190 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x13d945150 <col:20> 'int ()' Function 0x13d945098 'ipv6_hdr' 'int ()'     |   |     `-ImplicitCastExpr 0x13d9451d0 <col:29> 'struct sk_buff *' <LValueToRValue>     |   |       `-DeclRefExpr 0x13d945170 <col:29> 'struct sk_buff *' lvalue Var 0x13d943fd8 'skb' 'struct sk_buff *'     |   |-BinaryOperator 0x13d9452b0 <line:41:3, col:24> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13d945268 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13d945230 <col:3> 'struct sockaddr_l2tpip6 *' contains-errors lvalue Var 0x13d941678 'lsa' 'struct sockaddr_l2tpip6 *'     |   | `-IntegerLiteral 0x13d945290 <col:24> 'int' 0     |   |-BinaryOperator 0x13d945350 <line:42:3, col:24> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13d945308 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13d9452d0 <col:3> 'struct sockaddr_l2tpip6 *' contains-errors lvalue Var 0x13d941678 'lsa' 'struct sockaddr_l2tpip6 *'     |   | `-IntegerLiteral 0x13d945330 <col:24> 'int' 0     |   `-IfStmt 0x13d945750 <line:43:3, line:44:37>     |     |-RecoveryExpr 0x13d945510 <line:43:7, col:41> '_Bool' contains-errors     |     `-BinaryOperator 0x13d945730 <line:44:4, col:37> '<dependent type>' contains-errors '='     |       |-RecoveryExpr 0x13d945568 <col:4, col:9> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x13d945530 <col:4> 'struct sockaddr_l2tpip6 *' contains-errors lvalue Var 0x13d941678 'lsa' 'struct sockaddr_l2tpip6 *'     |       `-RecoveryExpr 0x13d945708 <col:25, col:37> '<dependent type>' contains-errors lvalue     |         `-CallExpr 0x13d9456c8 <col:25, col:34> 'int'     |           |-ImplicitCastExpr 0x13d9456b0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x13d945670 <col:25> 'int ()' Function 0x13d9455b8 'IP6CB' 'int ()'     |           `-ImplicitCastExpr 0x13d9456f0 <col:31> 'struct sk_buff *' <LValueToRValue>     |             `-DeclRefExpr 0x13d945690 <col:31> 'struct sk_buff *' lvalue Var 0x13d943fd8 'skb' 'struct sk_buff *'     |-IfStmt 0x13d945a68 <line:47:2, line:48:37>     | |-CXXDependentScopeMemberExpr 0x13d945828 <line:47:6, col:16> '<dependent type>' contains-errors lvalue .all     | | `-RecoveryExpr 0x13d945800 <col:6, col:10> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13d9457c8 <col:6> 'struct ipv6_pinfo *' lvalue Var 0x13d941238 'np' 'struct ipv6_pinfo *'     | `-CallExpr 0x13d9459e8 <line:48:3, col:37> 'int'     |   |-ImplicitCastExpr 0x13d9459d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13d945950 <col:3> 'int ()' Function 0x13d945898 'ip6_datagram_recv_ctl' 'int ()'     |   |-ImplicitCastExpr 0x13d945a20 <col:25> 'struct sock *' <LValueToRValue>     |   | `-DeclRefExpr 0x13d945970 <col:25> 'struct sock *' lvalue ParmVar 0x13d940a28 'sk' 'struct sock *'     |   |-ImplicitCastExpr 0x13d945a38 <col:29> 'struct msghdr *' <LValueToRValue>     |   | `-DeclRefExpr 0x13d945990 <col:29> 'struct msghdr *' lvalue ParmVar 0x13d940bf8 'msg' 'struct msghdr *'     |   `-ImplicitCastExpr 0x13d945a50 <col:34> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x13d9459b0 <col:34> 'struct sk_buff *' lvalue Var 0x13d943fd8 'skb' 'struct sk_buff *'     |-LabelStmt 0x13d945ce0 <line:52:1, line:53:27> 'done'     | `-CallExpr 0x13d945c80 <col:2, col:27> 'int'     |   |-ImplicitCastExpr 0x13d945c68 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13d945c08 <col:2> 'int ()' Function 0x13d945b50 'skb_free_datagram' 'int ()'     |   |-ImplicitCastExpr 0x13d945cb0 <col:20> 'struct sock *' <LValueToRValue>     |   | `-DeclRefExpr 0x13d945c28 <col:20> 'struct sock *' lvalue ParmVar 0x13d940a28 'sk' 'struct sock *'     |   `-ImplicitCastExpr 0x13d945cc8 <col:24> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x13d945c48 <col:24> 'struct sk_buff *' lvalue Var 0x13d943fd8 'skb' 'struct sk_buff *'     `-LabelStmt 0x13d945d48 <line:54:1, col:4> 'out'       `-NullStmt 0x13d945d40 <col:4> ","21184":"`-FunctionDecl 0x11d922c38  line:1:10 invalid Curl_disconnect 'int (struct connectdata *, int)'   |-ParmVarDecl 0x11e00e268 <col:26, col:46> col:46 used conn 'struct connectdata *'   |-ParmVarDecl 0x11e00e2e8 <col:52, col:57> col:57 invalid dead_connection 'int'   `-CompoundStmt 0x11f009620 <line:2:1, line:55:1>     |-DeclStmt 0x11d922ed8 <line:3:3, col:29>     | |-RecordDecl 0x11d922cf0 <col:3, col:10> col:10 struct SessionHandle     | `-VarDecl 0x11d922e58 <col:3, col:25> col:25 used data 'struct SessionHandle *'     |-IfStmt 0x11d922f88 <line:4:3, line:5:12>     | |-UnaryOperator 0x11d922f28 <line:4:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d922f10 <col:7> 'struct connectdata *' <LValueToRValue>     | |   `-DeclRefExpr 0x11d922ef0 <col:7> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     | `-ReturnStmt 0x11d922f78 <line:5:5, col:12>     |   `-RecoveryExpr 0x11d922f58 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11d923028 <line:6:3, col:16> 'struct SessionHandle *' contains-errors '='     | |-DeclRefExpr 0x11d922fa8 <col:3> 'struct SessionHandle *' lvalue Var 0x11d922e58 'data' 'struct SessionHandle *'     | `-RecoveryExpr 0x11d923000 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11d922fc8 <col:10> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     |-IfStmt 0x11d9234c8 <line:8:3, line:11:3>     | |-UnaryOperator 0x11d923080 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11d923068 <col:7> 'struct SessionHandle *' <LValueToRValue>     | |   `-DeclRefExpr 0x11d923048 <col:7> 'struct SessionHandle *' lvalue Var 0x11d922e58 'data' 'struct SessionHandle *'     | `-CompoundStmt 0x11d9234a8 <col:13, line:11:3>     |   |-CallExpr 0x11d923438 <line:9:5, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11d9231f0 <col:5> 'int ()' Function 0x11d923138 'DEBUGF' 'int ()'     |   | `-CallExpr 0x11d923408 <col:12, col:33> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11d9232f0 <col:12> 'int ()' Function 0x11d923238 'fprintf' 'int ()'     |   |   |-RecoveryExpr 0x11d9233e8 <col:20> '<dependent type>' contains-errors lvalue     |   |   `-StringLiteral 0x11d923370 <col:28> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x11d923498 <line:10:5, col:12>     |     `-RecoveryExpr 0x11d923478 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d923868 <line:13:3, line:16:3>     | |-BinaryOperator 0x11d9235a0 <line:13:6, col:25> 'int' contains-errors '!='     | | |-RecoveryExpr 0x11d923520 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x11d9234e8 <col:6> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     | | `-RecoveryExpr 0x11d923580 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11d923848 <col:31, line:16:3>     |   |-CallExpr 0x11d923740 <line:14:5, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11d9236a0 <col:5> 'int ()' Function 0x11d9235e8 'Curl_resolv_unlock' 'int ()'     |   | |-DeclRefExpr 0x11d9236c0 <col:24> 'struct SessionHandle *' lvalue Var 0x11d922e58 'data' 'struct SessionHandle *'     |   | `-RecoveryExpr 0x11d923718 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11d9236e0 <col:30> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     |   `-BinaryOperator 0x11d923828 <line:15:5, col:23> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x11d9237a8 <col:5, col:11> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x11d923770 <col:5> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     |     `-RecoveryExpr 0x11d923808 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11d9239f8 <line:18:3, col:28> 'int'     | |-ImplicitCastExpr 0x11d9239e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11d923968 <col:3> 'int ()' Function 0x11d9238b0 'Curl_hostcache_prune' 'int ()'     | `-ImplicitCastExpr 0x11d923a20 <col:24> 'struct SessionHandle *' <LValueToRValue>     |   `-DeclRefExpr 0x11d923988 <col:24> 'struct SessionHandle *' lvalue Var 0x11d922e58 'data' 'struct SessionHandle *'     |-IfStmt 0x11f008c00 <line:25:3, line:27:52>     | |-CXXDependentScopeMemberExpr 0x11d923a98 <line:25:6, col:21> '<dependent type>' contains-errors lvalue ->disconnect     | | `-RecoveryExpr 0x11d923a70 <col:6, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d923a38 <col:6> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     | `-CallExpr 0x11d923bc8 <line:27:5, col:52> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x11d923b40 <col:5, col:20> '<dependent type>' contains-errors lvalue ->disconnect     |   | `-RecoveryExpr 0x11d923b18 <col:5, col:11> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11d923ae0 <col:5> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     |   |-DeclRefExpr 0x11d923b88 <col:31> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     |   `-RecoveryExpr 0x11d923ba8 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f008dc0 <line:30:3, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f008d00 <col:3> 'int ()' Function 0x11f008c48 'infof' 'int ()'     | |-DeclRefExpr 0x11f008d20 <col:9> 'struct SessionHandle *' lvalue Var 0x11d922e58 'data' 'struct SessionHandle *'     | |-StringLiteral 0x11f008d40 <col:15> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x11f008d98 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11f008d60 <col:22> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     |-CallExpr 0x11f008fc0 <line:31:3, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f008ed8 <col:3> 'int ()' Function 0x11f008e20 'Curl_conncache_remove_conn' 'int ()'     | |-CXXDependentScopeMemberExpr 0x11f008f58 <col:30, col:42> '<dependent type>' contains-errors lvalue .conn_cache     | | `-RecoveryExpr 0x11f008f30 <col:30, col:36> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f008ef8 <col:30> 'struct SessionHandle *' lvalue Var 0x11d922e58 'data' 'struct SessionHandle *'     | `-DeclRefExpr 0x11f008fa0 <col:54> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *'     |-IfStmt 0x11f009488 <line:47:3, line:50:3>     | |-CallExpr 0x11f009270 <line:47:6, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11f0091f0 <col:6> 'int ()' Function 0x11f009138 'Curl_multi_pipeline_enabled' 'int ()'     | | `-RecoveryExpr 0x11f009248 <col:34, col:40> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f009210 <col:34> 'struct SessionHandle *' lvalue Var 0x11d922e58 'data' 'struct SessionHandle *'     | `-CompoundStmt 0x11f009478 <col:48, line:50:3>     `-CallExpr 0x11f0095e0 <line:52:3, col:17> 'int'       |-ImplicitCastExpr 0x11f0095c8 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x11f009588 <col:3> 'int ()' Function 0x11f0094d0 'conn_free' 'int ()'       `-ImplicitCastExpr 0x11f009608 <col:13> 'struct connectdata *' <LValueToRValue>         `-DeclRefExpr 0x11f0095a8 <col:13> 'struct connectdata *' lvalue ParmVar 0x11e00e268 'conn' 'struct connectdata *' ","20829":"`-FunctionDecl 0x128928168  line:2:9 invalid udta_box_new 'int *()'   `-CompoundStmt 0x129008d28 <line:3:1, line:10:23>     |-CallExpr 0x128928430 <line:4:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128928370 <col:2> 'int ()' Function 0x1289282b8 'ISOM_DECL_BOX_ALLOC' 'int ()'     | |-RecoveryExpr 0x1289283f0 <col:22> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x128928410 <col:38> '<dependent type>' contains-errors lvalue     `-IfStmt 0x129008cf0 <line:6:2, line:9:2>       |-UnaryOperator 0x1289286d8 <line:6:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x1289286c0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x128928678 <col:7, col:12> '<dependent type>' contains-errors lvalue ->recordList       |     `-RecoveryExpr 0x128928658 <col:7> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x129008cd0 <col:24, line:9:2>         |-CallExpr 0x129008c60 <line:7:3, col:14> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1289287d0 <col:3> 'int ()' Function 0x128928718 'gf_free' 'int ()'         | `-RecoveryExpr 0x129008c40 <col:11> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x129008cc0 <line:8:3, col:10>           `-RecoveryExpr 0x129008ca0 <col:10> '<dependent type>' contains-errors lvalue ","20932":"`-FunctionDecl 0x125928208  line:1:3 invalid Nef_polyhedron_2 'int (const int)'   |-ParmVarDecl 0x1259280f0 <col:20, <invalid sloc>> col:35 invalid 'const int'   `-CompoundStmt 0x125928338 <line:3:3, line:7:3>     `-IfStmt 0x125928318 <line:3:5, line:6:5>       |-RecoveryExpr 0x1259282d0 <line:3:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x125928308 <col:16, line:6:5> ","21160":"`-FunctionDecl 0x13b00de88  line:1:1 invalid gs_manager_create_windows_for_screen 'int (int *, int *)'   |-ParmVarDecl 0x13b00dd28 <col:39, col:50> col:50 referenced invalid manager 'int *'   |-ParmVarDecl 0x13b00dda8 <line:2:39, col:50> col:50 invalid screen 'int *'   `-CompoundStmt 0x13a923c70 <line:3:1, line:37:1>     |-DeclStmt 0x13b00dfd8 <line:5:9, col:29>     | `-VarDecl 0x13b00df70 <col:9, col:19> col:19 used n_monitors 'int'     |-DeclStmt 0x13b00e070 <line:6:9, col:20>     | `-VarDecl 0x13b00e008 <col:9, col:19> col:19 used i 'int'     |-CallExpr 0x13b00e2c0 <line:8:9, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b00e1e0 <col:9> 'int ()' Function 0x13b00e128 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x13b00e2a0 <col:27, col:38> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13b00e200 <col:27> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13b00e280 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b027468 <line:9:9, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b00e2e8 <col:9> 'int ()' Function 0x13b00e128 'g_return_if_fail' 'int ()'     | `-CallExpr 0x13b027440 <col:27, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b027400 <col:27> 'int ()' Function 0x13b00e330 'GS_IS_MANAGER' 'int ()'     |   `-RecoveryExpr 0x13b027420 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b0275f8 <line:10:9, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b027490 <col:9> 'int ()' Function 0x13b00e128 'g_return_if_fail' 'int ()'     | `-CallExpr 0x13b0275d0 <col:27, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b027590 <col:27> 'int ()' Function 0x13b0274d8 'GDK_IS_SCREEN' 'int ()'     |   `-RecoveryExpr 0x13b0275b0 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b027740 <line:12:9, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b027700 <col:9> 'int ()' Function 0x13b027648 'g_object_ref' 'int ()'     | `-RecoveryExpr 0x13b027720 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b0277a8 <line:13:9, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b027768 <col:9> 'int ()' Function 0x13b027648 'g_object_ref' 'int ()'     | `-RecoveryExpr 0x13b027788 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b027938 <line:15:9, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x13b0277d0 <col:9> 'int' lvalue Var 0x13b00df70 'n_monitors' 'int'     | `-CallExpr 0x13b027910 <col:22, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b0278d0 <col:22> 'int ()' Function 0x13b027818 'gdk_screen_get_n_monitors' 'int ()'     |   `-RecoveryExpr 0x13b0278f0 <col:49> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b027c28 <line:17:9, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b027a38 <col:9> 'int ()' Function 0x13b027980 'gs_debug' 'int ()'     | |-StringLiteral 0x13b027aa0 <col:19> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x13b027ac0 <col:26> 'int' lvalue Var 0x13b00df70 'n_monitors' 'int'     | `-CallExpr 0x13b027c00 <col:38, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b027bc0 <col:38> 'int ()' Function 0x13b027b08 'gdk_screen_get_number' 'int ()'     |   `-RecoveryExpr 0x13b027be0 <col:61> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13a923a88 <line:19:9, line:33:9>     | |-BinaryOperator 0x13b027ca0 <line:19:14, col:18> 'int' '='     | | |-DeclRefExpr 0x13b027c60 <col:14> 'int' lvalue Var 0x13b00e008 'i' 'int'     | | `-IntegerLiteral 0x13b027c80 <col:18> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13b027d30 <col:21, col:25> 'int' '<'     | | |-ImplicitCastExpr 0x13b027d00 <col:21> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13b027cc0 <col:21> 'int' lvalue Var 0x13b00e008 'i' 'int'     | | `-ImplicitCastExpr 0x13b027d18 <col:25> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13b027ce0 <col:25> 'int' lvalue Var 0x13b00df70 'n_monitors' 'int'     | |-UnaryOperator 0x13b027d70 <col:37, col:38> 'int' postfix '++'     | | `-DeclRefExpr 0x13b027d50 <col:37> 'int' lvalue Var 0x13b00e008 'i' 'int'     | `-CompoundStmt 0x13a923a68 <col:42, line:33:9>     |   |-CallExpr 0x13b0281c8 <line:22:17, col:94> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13b028090 <col:17> 'int ()' Function 0x13b027fd8 'gs_window_set_user_switch_enabled' 'int ()'     |   | |-RecoveryExpr 0x13b0281a8 <col:52> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x13b028130 <col:60, col:75> '<dependent type>' contains-errors lvalue ->user_switch_enabled     |   |   `-CXXDependentScopeMemberExpr 0x13b0280e8 <col:60, col:69> '<dependent type>' contains-errors lvalue ->priv     |   |     `-RecoveryExpr 0x13b0280c8 <col:60> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x13a922e20 <line:23:17, col:84> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13b0282d8 <col:17> 'int ()' Function 0x13b028220 'gs_window_set_logout_enabled' 'int ()'     |     |-RecoveryExpr 0x13a922e00 <col:47> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x13b028378 <col:55, col:70> '<dependent type>' contains-errors lvalue ->logout_enabled     |       `-CXXDependentScopeMemberExpr 0x13b028330 <col:55, col:64> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x13b028310 <col:55> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a923be0 <line:35:9, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a923ba0 <col:9> 'int ()' Function 0x13a923ae8 'g_object_unref' 'int ()'     | `-RecoveryExpr 0x13a923bc0 <col:25> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13a923c48 <line:36:9, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x13a923c08 <col:9> 'int ()' Function 0x13a923ae8 'g_object_unref' 'int ()'       `-RecoveryExpr 0x13a923c28 <col:25> '<dependent type>' contains-errors lvalue ","21137":"`-FunctionDecl 0x14580ddc0  line:1:13 invalid ref_parttable 'void (int)' static   |-ParmVarDecl 0x14580dcf0 <col:27, col:43> col:43 referenced invalid tab 'int'   `-CompoundStmt 0x14580df18 <line:2:1, line:4:1>     `-UnaryOperator 0x14580df00 <line:3:2, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow       `-CXXDependentScopeMemberExpr 0x14580deb8 <col:2, col:7> '<dependent type>' contains-errors lvalue ->nparts         `-RecoveryExpr 0x14580de90 <col:2> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14580de70 <col:2> 'int' lvalue ParmVar 0x14580dcf0 'tab' 'int' ","20534":"`-FunctionDecl 0x12e142e20  col:14 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x12e142f20 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12e142f88 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12e142ec8 <<invalid sloc>> Implicit 887 ","21241":"`-FunctionDecl 0x12e928190  line:1:6 atalk_register_sysctl 'void (void)'   `-CompoundStmt 0x12e9284b0 <line:2:1, line:4:1> ","20738":"`-FunctionDecl 0x1438faad8  line:1:16 invalid __nfs4_get_acl_uncached 'int (struct inode *, void *, int)' static   |-ParmVarDecl 0x143030e68 <col:40, col:54> col:54 used inode 'struct inode *'   |-ParmVarDecl 0x143030ee8 <col:61, col:67> col:67 used buf 'void *'   |-ParmVarDecl 0x143030f68 <col:72, col:79> col:79 invalid buflen 'int'   `-CompoundStmt 0x143055a08 <line:2:1, line:67:1>     |-DeclStmt 0x1438fadc0 <line:3:2, col:49>     | |-RecordDecl 0x1438fab98 <col:2, col:9> col:9 struct page     | `-VarDecl 0x1438fad28 <col:2, col:15> col:15 referenced invalid pages 'struct page *'     |-DeclStmt 0x1438fb2d8 <line:4:2, line:8:3>     | |-RecordDecl 0x1438fadd8 <line:4:2, col:9> col:9 struct nfs_getaclargs     | `-VarDecl 0x1438faed8 <col:2, col:24> col:24 referenced invalid args 'struct nfs_getaclargs'     |-DeclStmt 0x1438fb510 <line:9:2, line:11:3>     | |-RecordDecl 0x1438fb2f0 <line:9:2, col:9> col:9 struct nfs_getaclres     | `-VarDecl 0x1438fb3e8 <col:2, col:23> col:23 referenced invalid res 'struct nfs_getaclres'     |-DeclStmt 0x1438fb7c8 <line:12:2, line:16:3>     | |-RecordDecl 0x1438fb528 <line:12:2, col:9> col:9 struct rpc_message     | `-VarDecl 0x1438fb628 <col:2, col:21> col:21 invalid msg 'struct rpc_message'     |-DeclStmt 0x1438fc030 <line:17:2, col:55>     | `-VarDecl 0x1438fb7f8 <col:2, col:54> col:15 used npages 'unsigned int' cinit     |   `-CallExpr 0x1438fc000 <col:24, col:54> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1438fb940 <col:24> 'int ()' Function 0x1438fb888 'DIV_ROUND_UP' 'int ()'     |     |-RecoveryExpr 0x1438fb960 <col:37> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1438fb9c8 <col:45> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1438fc1f8 <line:18:2, col:22>     | |-VarDecl 0x1438fc060 <col:2, col:13> col:6 used ret 'int' cinit     | | `-UnaryOperator 0x1438fc148 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x1438fc130 <col:13> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x1438fc110 <col:13> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x1438fc178 <col:2, col:21> col:21 used i 'int'     |-IfStmt 0x1438fc318 <line:21:2, line:22:12>     | |-BinaryOperator 0x1438fc280 <line:21:6, col:16> 'int' contains-errors '=='     | | |-ImplicitCastExpr 0x1438fc250 <col:6> 'unsigned int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x1438fc210 <col:6> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     | | `-ImplicitCastExpr 0x1438fc268 <col:16> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x1438fc230 <col:16> 'int' 0     | `-BinaryOperator 0x1438fc2f8 <line:22:3, col:12> 'unsigned int' contains-errors '='     |   |-DeclRefExpr 0x1438fc2a0 <col:3> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     |   `-ImplicitCastExpr 0x1438fc2e0 <col:12> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x1438fc2c0 <col:12> 'int' 1     |-IfStmt 0x1438fc568 <line:23:2, line:24:11>     | |-BinaryOperator 0x1438fc4a0 <line:23:6, col:31> 'int' contains-errors '>'     | | |-DeclRefExpr 0x1438fc338 <col:6> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     | | `-CallExpr 0x1438fc478 <col:15, col:31> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1438fc438 <col:15> 'int ()' Function 0x1438fc380 'ARRAY_SIZE' 'int ()'     | |   `-RecoveryExpr 0x1438fc458 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1438fc558 <line:24:3, col:11>     |   `-UnaryOperator 0x1438fc540 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1438fc528 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1438fc508 <col:11> '<dependent type>' contains-errors lvalue     |-ForStmt 0x1438fcb50 <line:26:2, line:30:2>     | |-BinaryOperator 0x1438fc5c8 <line:26:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1438fc588 <col:7> 'int' lvalue Var 0x1438fc178 'i' 'int'     | | `-IntegerLiteral 0x1438fc5a8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1438fc670 <col:14, col:18> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x1438fc658 <col:14> 'unsigned int' <IntegralCast>     | | | `-ImplicitCastExpr 0x1438fc628 <col:14> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x1438fc5e8 <col:14> 'int' lvalue Var 0x1438fc178 'i' 'int'     | | `-ImplicitCastExpr 0x1438fc640 <col:18> 'unsigned int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x1438fc608 <col:18> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     | |-UnaryOperator 0x1438fc6b0 <col:26, col:27> 'int' postfix '++'     | | `-DeclRefExpr 0x1438fc690 <col:26> 'int' lvalue Var 0x1438fc178 'i' 'int'     | `-CompoundStmt 0x1438fcb30 <col:31, line:30:2>     |   |-BinaryOperator 0x1438fc9c8 <line:27:3, col:35> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x1438fc960 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x1438fc930 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x1438fc6e8 <col:3> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x1438fc6c8 <col:3> 'struct page *' lvalue Var 0x1438fad28 'pages' 'struct page *'     |   | | `-ImplicitCastExpr 0x1438fc948 <col:9> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1438fc710 <col:9> 'int' lvalue Var 0x1438fc178 'i' 'int'     |   | `-CallExpr 0x1438fc9a0 <col:14, col:35> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1438fc860 <col:14> 'int ()' Function 0x1438fc7a8 'alloc_page' 'int ()'     |   |   `-RecoveryExpr 0x1438fc980 <col:25> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1438fcb10 <line:28:3, line:29:9>     |     |-UnaryOperator 0x1438fca90 <line:28:7, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x1438fca78 <col:8, col:15> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-ArraySubscriptExpr 0x1438fca58 <col:8, col:15> '<dependent type>' contains-errors lvalue     |     |     |-ImplicitCastExpr 0x1438fca28 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |     |     | `-RecoveryExpr 0x1438fc9e8 <col:8> '<dependent type>' contains-errors lvalue     |     |     `-ImplicitCastExpr 0x1438fca40 <col:14> 'int' <LValueToRValue>     |     |       `-DeclRefExpr 0x1438fca08 <col:14> 'int' lvalue Var 0x1438fc178 'i' 'int'     |     `-GotoStmt 0x1438fcaf8 <line:29:4, col:9> 'out_free' 0x1438fcaa8     |-BinaryOperator 0x1438fcce0 <line:33:2, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1438fcbd0 <col:2, col:6> '<dependent type>' contains-errors lvalue .acl_scratch     | | `-RecoveryExpr 0x1438fcba8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1438fcb88 <col:2> 'struct nfs_getaclres' lvalue Var 0x1438fb3e8 'res' 'struct nfs_getaclres'     | `-CallExpr 0x1438fccb8 <col:20, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1438fcc18 <col:20> 'int ()' Function 0x1438fc7a8 'alloc_page' 'int ()'     |   `-RecoveryExpr 0x1438fcc98 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1438fcdb0 <line:34:2, line:35:8>     | |-UnaryOperator 0x1438fcd80 <line:34:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1438fcd68 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x1438fcd20 <col:7, col:11> '<dependent type>' contains-errors lvalue .acl_scratch     | |     `-RecoveryExpr 0x1438fcd00 <col:7> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1438fcd98 <line:35:3, col:8> 'out_free' 0x1438fcaa8     |-BinaryOperator 0x1438fcf18 <line:37:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1438fce18 <col:2, col:7> '<dependent type>' contains-errors lvalue .acl_len     | | `-RecoveryExpr 0x1438fcdf0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1438fcdd0 <col:2> 'struct nfs_getaclargs' lvalue Var 0x1438faed8 'args' 'struct nfs_getaclargs'     | `-BinaryOperator 0x1438fcef8 <col:17, col:26> '<dependent type>' contains-errors '*'     |   |-DeclRefExpr 0x1438fce60 <col:17> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     |   `-RecoveryExpr 0x1438fced8 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143054400 <line:38:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1438fcf80 <col:2, col:7> '<dependent type>' contains-errors lvalue .acl_pgbase     | | `-RecoveryExpr 0x1438fcf58 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1438fcf38 <col:2> 'struct nfs_getaclargs' lvalue Var 0x1438faed8 'args' 'struct nfs_getaclargs'     | `-IntegerLiteral 0x1438fcfc8 <col:20> 'int' 0     |-CallExpr 0x143054710 <line:40:2, line:41:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143054500 <line:40:2> 'int ()' Function 0x143054448 'dprintk' 'int ()'     | |-StringLiteral 0x143054560 <col:10> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x143054630 <line:41:3> 'const char[24]' lvalue __func__     | | `-StringLiteral 0x143054600 <col:3> 'const char[24]' lvalue \"__nfs4_get_acl_uncached\"     | |-DeclRefExpr 0x143054648 <col:13> 'void *' lvalue ParmVar 0x143030ee8 'buf' 'void *'     | |-RecoveryExpr 0x143054668 <col:18> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x143054688 <col:26> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     | `-CXXDependentScopeMemberExpr 0x1430546c8 <col:34, col:39> '<dependent type>' contains-errors lvalue .acl_len     |   `-RecoveryExpr 0x1430546a8 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143054c60 <line:42:2, line:43:46> 'int' contains-errors '='     | |-DeclRefExpr 0x143054760 <line:42:2> 'int' contains-errors lvalue Var 0x1438fc060 'ret' 'int'     | `-CallExpr 0x143054c10 <col:8, line:43:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x143054860 <line:42:8> 'int ()' Function 0x1430547a8 'nfs4_call_sync' 'int ()'     |   |-RecoveryExpr 0x1430549f8 <col:23, col:42> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x1430549b8 <col:23, col:39> 'int'     |   |   |-ImplicitCastExpr 0x1430549a0 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x143054960 <col:23> 'int ()' Function 0x1430548a8 'NFS_SERVER' 'int ()'     |   |   `-ImplicitCastExpr 0x1430549e0 <col:34> 'struct inode *' <LValueToRValue>     |   |     `-DeclRefExpr 0x143054980 <col:34> 'struct inode *' lvalue ParmVar 0x143030e68 'inode' 'struct inode *'     |   |-CallExpr 0x143054a78 <col:50, col:66> 'int'     |   | |-ImplicitCastExpr 0x143054a60 <col:50> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x143054a20 <col:50> 'int ()' Function 0x1430548a8 'NFS_SERVER' 'int ()'     |   | `-ImplicitCastExpr 0x143054aa0 <col:61> 'struct inode *' <LValueToRValue>     |   |   `-DeclRefExpr 0x143054a40 <col:61> 'struct inode *' lvalue ParmVar 0x143030e68 'inode' 'struct inode *'     |   |-UnaryOperator 0x143054ad8 <line:43:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x143054ab8 <col:10> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x143054b58 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x143054b10 <col:16, col:21> '<dependent type>' contains-errors lvalue .seq_args     |   |   `-RecoveryExpr 0x143054af0 <col:16> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x143054bd8 <col:31, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x143054b90 <col:32, col:36> '<dependent type>' contains-errors lvalue .seq_res     |   |   `-RecoveryExpr 0x143054b70 <col:32> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x143054bf0 <col:45> 'int' 0     |-IfStmt 0x143054cd0 <line:44:2, line:45:8>     | |-ImplicitCastExpr 0x143054ca0 <line:44:6> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x143054c80 <col:6> 'int' contains-errors lvalue Var 0x1438fc060 'ret' 'int'     | `-GotoStmt 0x143054cb8 <line:45:3, col:8> 'out_free' 0x1438fcaa8     |-IfStmt 0x143054e98 <line:48:2, line:54:2>     | |-RecoveryExpr 0x143054d58 <line:48:6, col:22> '_Bool' contains-errors     | `-CompoundStmt 0x143054e78 <col:38, line:54:2>     |   |-IfStmt 0x143054e20 <line:50:3, line:51:9>     |   | |-RecoveryExpr 0x143054d98 <line:50:7, col:14> '_Bool' contains-errors     |   | `-GotoStmt 0x143054e08 <line:51:4, col:9> 'out_ok' 0x143054db8     |   `-GotoStmt 0x143054e60 <line:53:3, col:8> 'out_free' 0x1438fcaa8     |-CallExpr 0x1430550c8 <line:55:2, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143054f98 <col:2> 'int ()' Function 0x143054ee0 'nfs4_write_cached_acl' 'int ()'     | |-DeclRefExpr 0x143054fb8 <col:24> 'struct inode *' lvalue ParmVar 0x143030e68 'inode' 'struct inode *'     | |-RecoveryExpr 0x143054fd8 <col:31> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x143055018 <col:38, col:42> '<dependent type>' contains-errors lvalue .acl_data_offset     | | `-RecoveryExpr 0x143054ff8 <col:38> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x143055080 <col:59, col:63> '<dependent type>' contains-errors lvalue .acl_len     |   `-RecoveryExpr 0x143055060 <col:59> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143055390 <line:56:2, line:57:64>     | |-ImplicitCastExpr 0x143055128 <line:56:6> 'void *' <LValueToRValue>     | | `-DeclRefExpr 0x143055108 <col:6> 'void *' lvalue ParmVar 0x143030ee8 'buf' 'void *'     | `-CallExpr 0x143055350 <line:57:3, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x143055220 <col:3> 'int ()' Function 0x143055168 '_copy_from_pages' 'int ()'     |   |-DeclRefExpr 0x143055240 <col:20> 'void *' lvalue ParmVar 0x143030ee8 'buf' 'void *'     |   |-RecoveryExpr 0x143055260 <col:25> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x1430552a0 <col:32, col:36> '<dependent type>' contains-errors lvalue .acl_data_offset     |   | `-RecoveryExpr 0x143055280 <col:32> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x143055308 <col:53, col:57> '<dependent type>' contains-errors lvalue .acl_len     |     `-RecoveryExpr 0x1430552e8 <col:53> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x143055468 <line:58:1, line:59:12> 'out_ok'     | `-BinaryOperator 0x143055448 <col:2, col:12> 'int' contains-errors '='     |   |-DeclRefExpr 0x1430553b0 <col:2> 'int' contains-errors lvalue Var 0x1438fc060 'ret' 'int'     |   `-CXXDependentScopeMemberExpr 0x143055400 <col:8, col:12> '<dependent type>' contains-errors lvalue .acl_len     |     `-RecoveryExpr 0x1430553d0 <col:8> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x143055868 <line:60:1, line:63:24> 'out_free'     | `-ForStmt 0x143055830 <line:61:2, line:63:24>     |   |-BinaryOperator 0x1430554c8 <line:61:7, col:11> 'int' '='     |   | |-DeclRefExpr 0x143055488 <col:7> 'int' lvalue Var 0x1438fc178 'i' 'int'     |   | `-IntegerLiteral 0x1430554a8 <col:11> 'int' 0     |   |-<<<NULL>>>     |   |-BinaryOperator 0x143055570 <col:14, col:18> 'int' contains-errors '<'     |   | |-ImplicitCastExpr 0x143055558 <col:14> 'unsigned int' <IntegralCast>     |   | | `-ImplicitCastExpr 0x143055528 <col:14> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1430554e8 <col:14> 'int' lvalue Var 0x1438fc178 'i' 'int'     |   | `-ImplicitCastExpr 0x143055540 <col:18> 'unsigned int' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x143055508 <col:18> 'unsigned int' contains-errors lvalue Var 0x1438fb7f8 'npages' 'unsigned int'     |   |-UnaryOperator 0x1430555b0 <col:26, col:27> 'int' postfix '++'     |   | `-DeclRefExpr 0x143055590 <col:26> 'int' lvalue Var 0x1438fc178 'i' 'int'     |   `-IfStmt 0x143055810 <line:62:3, line:63:24>     |     |-ArraySubscriptExpr 0x143055638 <line:62:7, col:14> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x143055608 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     | | `-RecoveryExpr 0x1430555c8 <col:7> '<dependent type>' contains-errors lvalue     |     | `-ImplicitCastExpr 0x143055620 <col:13> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x1430555e8 <col:13> 'int' lvalue Var 0x1438fc178 'i' 'int'     |     `-CallExpr 0x1430557e8 <line:63:4, col:24> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x143055738 <col:4> 'int ()' Function 0x143055680 '__free_page' 'int ()'     |       `-ArraySubscriptExpr 0x1430557c8 <col:16, col:23> '<dependent type>' contains-errors lvalue     |         |-ImplicitCastExpr 0x143055798 <col:16> '<dependent type>' contains-errors <LValueToRValue>     |         | `-RecoveryExpr 0x143055758 <col:16> '<dependent type>' contains-errors lvalue     |         `-ImplicitCastExpr 0x1430557b0 <col:22> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x143055778 <col:22> 'int' lvalue Var 0x1438fc178 'i' 'int'     |-IfStmt 0x1430559a0 <line:64:2, line:65:30>     | |-CXXDependentScopeMemberExpr 0x1430558a8 <line:64:6, col:10> '<dependent type>' contains-errors lvalue .acl_scratch     | | `-RecoveryExpr 0x143055888 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x143055978 <line:65:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1430558f0 <col:3> 'int ()' Function 0x143055680 '__free_page' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x143055930 <col:15, col:19> '<dependent type>' contains-errors lvalue .acl_scratch     |     `-RecoveryExpr 0x143055910 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1430559f8 <line:66:2, col:9>       `-ImplicitCastExpr 0x1430559e0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1430559c0 <col:9> 'int' contains-errors lvalue Var 0x1438fc060 'ret' 'int' ","20786":"`-FunctionDecl 0x1360fb150  line:1:13 xenvif_fatal_tx_err 'void (struct xenvif *)' static   |-ParmVarDecl 0x1360fb048 <col:33, col:48> col:48 used vif 'struct xenvif *'   `-CompoundStmt 0x136113828 <line:2:1, line:5:1>     |-CallExpr 0x136113650 <line:3:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136113570 <col:2> 'int ()' Function 0x1361134b8 'netdev_err' 'int ()'     | |-RecoveryExpr 0x1361135c8 <col:13, col:18> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x136113590 <col:13> 'struct xenvif *' lvalue ParmVar 0x1360fb048 'vif' 'struct xenvif *'     | `-StringLiteral 0x136113630 <col:23> 'char[4]' lvalue \"STR\"     `-CallExpr 0x1361137e8 <line:4:2, col:24> 'int'       |-ImplicitCastExpr 0x1361137d0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x136113760 <col:2> 'int ()' Function 0x1361136a8 'xenvif_carrier_off' 'int ()'       `-ImplicitCastExpr 0x136113810 <col:21> 'struct xenvif *' <LValueToRValue>         `-DeclRefExpr 0x136113780 <col:21> 'struct xenvif *' lvalue ParmVar 0x1360fb048 'vif' 'struct xenvif *' ","20575":"`-FunctionDecl 0x12100ddc8  line:1:1 invalid load_vector_int 'int (int)'   |-ParmVarDecl 0x12100dcf0 <col:17, <invalid sloc>> col:26 invalid 'int'   `-CompoundStmt 0x12100e3d8 <line:3:1, line:23:1>     |-ForStmt 0x12100e338 <line:8:5, line:15:5>     | |-DeclStmt 0x12100df18 <line:8:10, col:19>     | | `-VarDecl 0x12100de90 <col:10, col:18> col:14 used i 'int' cinit     | |   `-IntegerLiteral 0x12100def8 <col:18> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12100dfa8 <col:21, col:25> 'int' contains-errors '<'     | | |-DeclRefExpr 0x12100df30 <col:21> 'int' lvalue Var 0x12100de90 'i' 'int'     | | `-RecoveryExpr 0x12100df88 <col:25> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x12100dfe8 <col:33, col:35> 'int' prefix '++'     | | `-DeclRefExpr 0x12100dfc8 <col:35> 'int' lvalue Var 0x12100de90 'i' 'int'     | `-CompoundStmt 0x12100e320 <line:9:5, line:15:5>     |   `-IfStmt 0x12100e228 <line:10:9, line:13:9>     |     |-RecoveryExpr 0x12100e018 <line:10:13> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12100e218 <line:11:9, line:13:9>     `-IfStmt 0x12100e3b8 <line:16:5, line:19:5>       |-RecoveryExpr 0x12100e388 <line:16:9, col:41> '_Bool' contains-errors       `-CompoundStmt 0x12100e3a8 <line:17:5, line:19:5> ","20432":"`-FunctionDecl 0x1330090d8  line:1:13 invalid ntlmssp_t_str_i 'const char *(const void *, struct ntlmssp_buffer *, int)'   |-ParmVarDecl 0x132928108 <col:29, col:41> col:41 used message 'const void *'   |-ParmVarDecl 0x1329286f8 <col:50, col:73> col:73 used buffer 'struct ntlmssp_buffer *'   |-ParmVarDecl 0x132928790 <line:2:8, col:13> col:13 invalid unicode 'int'   `-CompoundStmt 0x133009f08 <line:3:1, line:19:1>     |-DeclStmt 0x133009430 <line:4:2, col:47>     | `-VarDecl 0x1330091b0 <col:2, col:46> col:15 used len 'unsigned int' cinit     |   `-CallExpr 0x133009408 <col:21, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x133009370 <col:21> 'int ()' Function 0x1330092b8 'read_le16' 'int ()'     |     `-UnaryOperator 0x1330093f0 <col:31, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1330093c8 <col:32, col:40> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x133009390 <col:32> 'struct ntlmssp_buffer *' lvalue ParmVar 0x1329286f8 'buffer' 'struct ntlmssp_buffer *'     |-DeclStmt 0x133009720 <line:5:2, col:71>     | `-VarDecl 0x133009460 <col:2, col:70> col:14 used p 'const char *' cinit     |   `-BinaryOperator 0x133009700 <col:18, col:70> '<dependent type>' contains-errors '+'     |     |-ParenExpr 0x133009540 <col:18, col:41> 'const char *'     |     | `-CStyleCastExpr 0x133009518 <col:19, col:34> 'const char *' <BitCast>     |     |   `-ImplicitCastExpr 0x133009500 <col:34> 'const void *' <LValueToRValue> part_of_explicit_cast     |     |     `-DeclRefExpr 0x1330094c8 <col:34> 'const void *' lvalue ParmVar 0x132928108 'message' 'const void *'     |     `-CallExpr 0x1330096d8 <col:45, col:70> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x133009640 <col:45> 'int ()' Function 0x133009588 'read_le32' 'int ()'     |       `-UnaryOperator 0x1330096c0 <col:55, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x133009698 <col:56, col:64> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x133009660 <col:56> 'struct ntlmssp_buffer *' lvalue ParmVar 0x1329286f8 'buffer' 'struct ntlmssp_buffer *'     |-WhileStmt 0x133009d50 <line:13:2, line:16:2>     | |-BinaryOperator 0x1330099c8 <line:13:9, col:17> 'int' contains-errors '>'     | | |-UnaryOperator 0x133009978 <col:9, col:12> 'unsigned int' contains-errors postfix '--'     | | | `-DeclRefExpr 0x133009958 <col:9> 'unsigned int' contains-errors lvalue Var 0x1330091b0 'len' 'unsigned int'     | | `-ImplicitCastExpr 0x1330099b0 <col:17> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x133009990 <col:17> 'int' 0     | `-CompoundStmt 0x133009d38 <col:20, line:16:2>     |   `-CallExpr 0x133009c90 <line:14:3, col:30> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x133009ac8 <col:3> 'int ()' Function 0x133009a10 'str_append_c' 'int ()'     |     |-RecoveryExpr 0x133009bf0 <col:16> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x133009c70 <col:21, col:26> 'int' contains-errors '&'     |       |-ImplicitCastExpr 0x133009c58 <col:21, col:22> 'int' contains-errors <IntegralCast>     |       | `-ImplicitCastExpr 0x133009c40 <col:21, col:22> 'char' contains-errors <LValueToRValue>     |       |   `-UnaryOperator 0x133009c28 <col:21, col:22> 'const char' contains-errors lvalue prefix '*' cannot overflow     |       |     `-ImplicitCastExpr 0x133009c10 <col:22> 'const char *' contains-errors <LValueToRValue>     |       |       `-DeclRefExpr 0x133009b00 <col:22> 'const char *' contains-errors lvalue Var 0x133009460 'p' 'const char *'     |       `-IntegerLiteral 0x133009b50 <col:26> 'int' 127     `-ReturnStmt 0x133009ef8 <line:18:2, col:18>       `-CallExpr 0x133009ed0 <col:9, col:18> '<dependent type>' contains-errors         |-DeclRefExpr 0x133009e50 <col:9> 'int ()' Function 0x133009d98 'str_c' 'int ()'         `-RecoveryExpr 0x133009eb0 <col:15> '<dependent type>' contains-errors lvalue ","21148":"`-FunctionDecl 0x1209281a8  line:1:5 ber_skip_sequence_tag 'int (int)'   |-ParmVarDecl 0x1209280d8 <col:27, col:31> col:31 used length 'int'   `-CompoundStmt 0x1209284e8 <line:2:1, line:4:1>     `-ReturnStmt 0x1209284d8 <line:3:2, col:36>       `-BinaryOperator 0x1209284b8 <col:9, col:36> 'int' '+'         |-IntegerLiteral 0x1209282a0 <col:9> 'int' 1         `-CallExpr 0x120928478 <col:13, col:36> 'int'           |-ImplicitCastExpr 0x120928460 <col:13> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x1209283f0 <col:13> 'int ()' Function 0x120928338 '_ber_skip_length' 'int ()'           `-ImplicitCastExpr 0x1209284a0 <col:30> 'int' <LValueToRValue>             `-DeclRefExpr 0x120928410 <col:30> 'int' lvalue ParmVar 0x1209280d8 'length' 'int' ","20608":"`-FunctionDecl 0x1249281c0  line:1:10 invalid add 'void (int)'   |-ParmVarDecl 0x1249280f0 <col:14, col:20> col:20 invalid chr 'int'   `-CompoundStmt 0x124928320 <col:25, line:5:5> ","20295":"`-FunctionDecl 0x1339283e8 prev 0x133928228  line:1:16 abs 'int (const unsigned int)' inline   |-ParmVarDecl 0x1339280d8 <col:20, col:39> col:39 used a 'const unsigned int'   `-CompoundStmt 0x133940b98 <col:42, line:3:5>     `-ReturnStmt 0x133940b88 <line:2:7, col:19>       `-CStyleCastExpr 0x133940b60 <col:14, col:19> 'int' <IntegralCast>         `-ImplicitCastExpr 0x133940b48 <col:19> 'unsigned int' <LValueToRValue> part_of_explicit_cast           `-DeclRefExpr 0x133940b10 <col:19> 'const unsigned int' lvalue ParmVar 0x1339280d8 'a' 'const unsigned int' ","21102":"`-FunctionDecl 0x121124670  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x121124770 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x121124718 <<invalid sloc>> Implicit 903   `-FormatAttr 0x1211247e0 <col:3> Implicit printf 1 2 ","20448":"`-FunctionDecl 0x12d9418d8  line:1:1 invalid ofpacts_output_to_group 'int (const struct ofpact *, int, int)'   |-ParmVarDecl 0x12d928648 <col:25, col:46> col:46 used ofpacts 'const struct ofpact *'   |-ParmVarDecl 0x12d9286e0 <col:55, col:62> col:62 invalid ofpacts_len 'int'   |-ParmVarDecl 0x12d928760 <line:2:25, col:34> col:34 invalid group_id 'int'   `-CompoundStmt 0x12d942130 <line:3:1, line:14:1>     |-DeclStmt 0x12d941a90 <line:4:5, col:27>     | `-VarDecl 0x12d941a28 <col:5, col:26> col:26 used a 'const struct ofpact *'     |-CallExpr 0x12d941c80 <line:6:5, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d941c00 <col:5> 'int ()' Function 0x12d941b48 'OFPACT_FOR_EACH_FLATTENED' 'int ()'     | |-DeclRefExpr 0x12d941c20 <col:32> 'const struct ofpact *' lvalue Var 0x12d941a28 'a' 'const struct ofpact *'     | |-DeclRefExpr 0x12d941c40 <col:35> 'const struct ofpact *' lvalue ParmVar 0x12d928648 'ofpacts' 'const struct ofpact *'     | `-RecoveryExpr 0x12d941c60 <col:44> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x12d942100 <col:57, line:11:5>       `-IfStmt 0x12d9420e0 <line:7:9, line:10:9>         |-BinaryOperator 0x12d942060 <line:7:13, line:8:49> 'int' contains-errors '&&'         | |-BinaryOperator 0x12d941fa0 <line:7:13, col:24> 'int' contains-errors '=='         | | |-RecoveryExpr 0x12d941cf0 <col:13, col:16> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x12d941cb8 <col:13> 'const struct ofpact *' lvalue Var 0x12d941a28 'a' 'const struct ofpact *'         | | `-RecoveryExpr 0x12d941f80 <col:24> '<dependent type>' contains-errors lvalue         | `-BinaryOperator 0x12d942040 <line:8:16, col:49> 'int' contains-errors '=='         |   |-RecoveryExpr 0x12d942018 <col:16, col:37> '<dependent type>' contains-errors lvalue         |   | `-CallExpr 0x12d941fd8 <col:16, col:34> 'int'         |   |   |-ImplicitCastExpr 0x12d941fc0 <col:16> 'int (*)()' <FunctionToPointerDecay>         |   |   | `-DeclRefExpr 0x12d941e30 <col:16> 'int ()' Function 0x12d941d78 'ofpact_get_GROUP' 'int ()'         |   |   `-ImplicitCastExpr 0x12d942000 <col:33> 'const struct ofpact *' <LValueToRValue>         |   |     `-DeclRefExpr 0x12d941e50 <col:33> 'const struct ofpact *' lvalue Var 0x12d941a28 'a' 'const struct ofpact *'         |   `-RecoveryExpr 0x12d941f20 <col:49> '<dependent type>' contains-errors lvalue         `-CompoundStmt 0x12d9420c8 <col:59, line:10:9>           `-ReturnStmt 0x12d9420b8 <line:9:13, col:20>             `-RecoveryExpr 0x12d942098 <col:20> '<dependent type>' contains-errors lvalue ","21115":"`-FunctionDecl 0x12480ddf8  line:1:12 invalid set_side_data 'int (int *)' static   |-ParmVarDecl 0x12480dd28 <col:26, col:39> col:39 invalid s 'int *'   `-CompoundStmt 0x125009950 <line:2:1, line:34:1>     |-IfStmt 0x125009900 <line:5:5, line:31:5>     | |-BinaryOperator 0x12480e2d8 <line:5:9, line:9:42> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12480e210 <line:5:9, line:8:42> 'int' contains-errors '&&'     | | | |-BinaryOperator 0x12480e148 <line:5:9, line:7:46> 'int' contains-errors '&&'     | | | | |-BinaryOperator 0x12480e080 <line:5:9, line:6:46> 'int' contains-errors '&&'     | | | | | |-CXXDependentScopeMemberExpr 0x12480df90 <line:5:9, col:12> '<dependent type>' contains-errors lvalue ->sei_frame_packing_present     | | | | | | `-RecoveryExpr 0x12480df70 <col:9> '<dependent type>' contains-errors lvalue     | | | | | `-BinaryOperator 0x12480e060 <line:6:9, col:46> 'int' contains-errors '>='     | | | | |   |-CXXDependentScopeMemberExpr 0x12480dff8 <col:9, col:12> '<dependent type>' contains-errors lvalue ->frame_packing_arrangement_type     | | | | |   | `-RecoveryExpr 0x12480dfd8 <col:9> '<dependent type>' contains-errors lvalue     | | | | |   `-IntegerLiteral 0x12480e040 <col:46> 'int' 3     | | | | `-BinaryOperator 0x12480e128 <line:7:9, col:46> 'int' contains-errors '<='     | | | |   |-CXXDependentScopeMemberExpr 0x12480e0c0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->frame_packing_arrangement_type     | | | |   | `-RecoveryExpr 0x12480e0a0 <col:9> '<dependent type>' contains-errors lvalue     | | | |   `-IntegerLiteral 0x12480e108 <col:46> 'int' 5     | | | `-BinaryOperator 0x12480e1f0 <line:8:9, col:42> 'int' contains-errors '>'     | | |   |-CXXDependentScopeMemberExpr 0x12480e188 <col:9, col:12> '<dependent type>' contains-errors lvalue ->content_interpretation_type     | | |   | `-RecoveryExpr 0x12480e168 <col:9> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x12480e1d0 <col:42> 'int' 0     | | `-BinaryOperator 0x12480e2b8 <line:9:9, col:42> 'int' contains-errors '<'     | |   |-CXXDependentScopeMemberExpr 0x12480e250 <col:9, col:12> '<dependent type>' contains-errors lvalue ->content_interpretation_type     | |   | `-RecoveryExpr 0x12480e230 <col:9> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x12480e298 <col:42> 'int' 3     | `-CompoundStmt 0x1250098e0 <col:45, line:31:5>     |   |-IfStmt 0x125009548 <line:11:9, line:12:34>     |   | |-UnaryOperator 0x125009398 <line:11:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x125009380 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x125009360 <col:14> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x125009538 <line:12:13, col:34>     |   |   `-CallExpr 0x125009510 <col:20, col:34> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x125009490 <col:20> 'int ()' Function 0x1250093d8 'AVERROR' 'int ()'     |   |     `-RecoveryExpr 0x1250094f0 <col:28> '<dependent type>' contains-errors lvalue     |   `-SwitchStmt 0x1250095e8 <line:14:9, line:27:9>     |     |-ImplicitCastExpr 0x1250095d0 <line:14:17, col:20> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x125009588 <col:17, col:20> '<dependent type>' contains-errors lvalue ->frame_packing_arrangement_type     |     |   `-RecoveryExpr 0x125009568 <col:17> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x1250097e0 <col:52, line:27:9>     |       |-CaseStmt 0x125009630 <line:15:9, <invalid sloc>>     |       | |-IntegerLiteral 0x125009610 <col:14> 'int' 3     |       | `-NullStmt 0x1250096f0 <<invalid sloc>>     |       |-BreakStmt 0x1250096f8 <line:20:13>     |       |-CaseStmt 0x125009720 <line:21:9, <invalid sloc>>     |       | |-IntegerLiteral 0x125009700 <col:14> 'int' 4     |       | `-NullStmt 0x125009760 <<invalid sloc>>     |       |-BreakStmt 0x125009768 <line:23:13>     |       |-CaseStmt 0x125009790 <line:24:9, <invalid sloc>>     |       | |-IntegerLiteral 0x125009770 <col:14> 'int' 5     |       | `-NullStmt 0x1250097d0 <<invalid sloc>>     |       `-BreakStmt 0x1250097d8 <line:26:13>     `-ReturnStmt 0x125009940 <line:33:5, col:12>       `-IntegerLiteral 0x125009920 <col:12> 'int' 0 ","21198":"`-FunctionDecl 0x155928f50  line:1:6 ax25_dev_device_up 'void (struct net_device *)'   |-ParmVarDecl 0x155928e48 <col:25, col:44> col:44 used dev 'struct net_device *'   `-CompoundStmt 0x155942000 <line:2:1, line:42:1>     |-IfStmt 0x155941598 <line:5:2, line:8:2>     | |-RecoveryExpr 0x155941438 <line:5:6, col:61> '_Bool' contains-errors     | `-CompoundStmt 0x155941580 <col:67, line:8:2>     |   `-ReturnStmt 0x155941570 <line:7:3>     |-CallExpr 0x155941800 <line:10:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155941698 <col:2> 'int ()' Function 0x1559415e0 'refcount_set' 'int ()'     | |-UnaryOperator 0x1559417e8 <col:15, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1559417a0 <col:16, col:26> '<dependent type>' contains-errors lvalue ->refcount     | |   `-RecoveryExpr 0x155941780 <col:16> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x155941730 <col:36> 'int' 1     |-BinaryOperator 0x1559418e8 <line:11:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x155941868 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x155941830 <col:2> 'struct net_device *' lvalue ParmVar 0x155928e48 'dev' 'struct net_device *'     | `-RecoveryExpr 0x1559418c8 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x155941bb0 <line:13:2, col:56> '<dependent type>' contains-errors       |-DeclRefExpr 0x155941a08 <col:2> 'int ()' Function 0x155941950 'dev_hold_track' 'int ()'       |-DeclRefExpr 0x155941a28 <col:17> 'struct net_device *' lvalue ParmVar 0x155928e48 'dev' 'struct net_device *'       |-UnaryOperator 0x155941b78 <col:22, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-CXXDependentScopeMemberExpr 0x155941b30 <col:23, col:33> '<dependent type>' contains-errors lvalue ->dev_tracker       |   `-RecoveryExpr 0x155941b10 <col:23> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x155941b90 <col:46> '<dependent type>' contains-errors lvalue ","20579":"`-FunctionDecl 0x134808408  line:1:12 invalid sco_sock_sendmsg 'int (struct socket *, struct msghdr *, int)' static   |-ParmVarDecl 0x13400e248 <col:29, col:44> col:44 used sock 'struct socket *'   |-ParmVarDecl 0x134808228 <col:50, col:65> col:65 used msg 'struct msghdr *'   |-ParmVarDecl 0x1348082c0 <line:2:8, col:15> col:15 invalid len 'int'   `-CompoundStmt 0x134026dc0 <line:3:1, line:25:1>     |-DeclStmt 0x134808718 <line:4:2, col:28>     | |-RecordDecl 0x1348084c8 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x134808638 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x1348086d8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1348086a0 <col:20> 'struct socket *' lvalue ParmVar 0x13400e248 'sock' 'struct socket *'     |-DeclStmt 0x1348087b0 <line:5:2, col:9>     | `-VarDecl 0x134808748 <col:2, col:6> col:6 used err 'int'     |-CallExpr 0x134808a28 <line:7:2, col:24> 'int' contains-errors     | |-ImplicitCastExpr 0x134808a10 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x134808920 <col:2> 'int ()' Function 0x134808868 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x134808a60 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x134808980 <col:9> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x134808a78 <col:16> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x1348089a0 <col:16> 'struct socket *' lvalue ParmVar 0x13400e248 'sock' 'struct socket *'     | `-ImplicitCastExpr 0x134808a90 <col:22> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x1348089c0 <col:22> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'     |-BinaryOperator 0x134808c40 <line:9:2, col:21> 'int' contains-errors '='     | |-DeclRefExpr 0x134808aa8 <col:2> 'int' lvalue Var 0x134808748 'err' 'int'     | `-CallExpr 0x134808c00 <col:8, col:21> 'int' contains-errors     |   |-ImplicitCastExpr 0x134808be8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x134808ba8 <col:8> 'int ()' Function 0x134808af0 'sock_error' 'int ()'     |   `-ImplicitCastExpr 0x134808c28 <col:19> 'struct sock *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x134808bc8 <col:19> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'     |-IfStmt 0x134808ce0 <line:10:2, line:11:10>     | |-ImplicitCastExpr 0x134808c80 <line:10:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x134808c60 <col:6> 'int' lvalue Var 0x134808748 'err' 'int'     | `-ReturnStmt 0x134808cd0 <line:11:3, col:10>     |   `-ImplicitCastExpr 0x134808cb8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x134808c98 <col:10> 'int' lvalue Var 0x134808748 'err' 'int'     |-IfStmt 0x134808e80 <line:13:2, line:14:11>     | |-BinaryOperator 0x134808db8 <line:13:6, col:23> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x134808d38 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x134808d00 <col:6> 'struct msghdr *' lvalue ParmVar 0x134808228 'msg' 'struct msghdr *'     | | `-RecoveryExpr 0x134808d98 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x134808e70 <line:14:3, col:11>     |   `-UnaryOperator 0x134808e58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x134808e40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x134808e20 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x134808fd8 <line:16:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x134808fc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x134808f80 <col:2> 'int ()' Function 0x134808ec8 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x134809000 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x134808fa0 <col:12> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'     |-IfStmt 0x134026bd0 <line:18:2, line:21:10> has_else     | |-BinaryOperator 0x1348090d0 <line:18:6, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x134809050 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x134809018 <col:6> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'     | | `-RecoveryExpr 0x1348090b0 <col:22> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x134026ab8 <line:19:3, col:36> 'int' contains-errors '='     | | |-DeclRefExpr 0x1348090f0 <col:3> 'int' lvalue Var 0x134808748 'err' 'int'     | | `-CallExpr 0x134026a80 <col:9, col:36> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x134026a00 <col:9> 'int ()' Function 0x134809138 'sco_send_frame' 'int ()'     | |   |-DeclRefExpr 0x134026a20 <col:24> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'     | |   |-DeclRefExpr 0x134026a40 <col:28> 'struct msghdr *' lvalue ParmVar 0x134808228 'msg' 'struct msghdr *'     | |   `-RecoveryExpr 0x134026a60 <col:33> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x134026bb0 <line:21:3, col:10> 'int' contains-errors '='     |   |-DeclRefExpr 0x134026ad8 <col:3> 'int' lvalue Var 0x134808748 'err' 'int'     |   `-UnaryOperator 0x134026b98 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x134026b80 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x134026b60 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x134026d38 <line:23:2, col:17> 'int' contains-errors     | |-ImplicitCastExpr 0x134026d20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x134026ce0 <col:2> 'int ()' Function 0x134026c28 'release_sock' 'int ()'     | `-ImplicitCastExpr 0x134026d60 <col:15> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x134026d00 <col:15> 'struct sock *' contains-errors lvalue Var 0x134808638 'sk' 'struct sock *'     `-ReturnStmt 0x134026db0 <line:24:2, col:9>       `-ImplicitCastExpr 0x134026d98 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x134026d78 <col:9> 'int' lvalue Var 0x134808748 'err' 'int' ","21187":"`-FunctionDecl 0x15a940dd8  line:1:12 pmu_set 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, const void *, int)' static   |-ParmVarDecl 0x15a928648 <col:20, col:40> col:40 used target 'struct task_struct *'   |-ParmVarDecl 0x15a940a28 <line:2:9, col:35> col:35 regset 'const struct user_regset *'   |-ParmVarDecl 0x15a940aa8 <line:3:9, col:22> col:22 used pos 'unsigned int'   |-ParmVarDecl 0x15a940b28 <col:27, col:40> col:40 used count 'unsigned int'   |-ParmVarDecl 0x15a940bd8 <line:4:9, col:21> col:21 used kbuf 'const void *'   |-ParmVarDecl 0x15a940c50 <col:27, col:38> col:38 __user 'int'   `-CompoundStmt 0x15a945c58 <line:5:1, line:41:1>     |-DeclStmt 0x15a940f98 <line:6:2, col:13>     | `-VarDecl 0x15a940f10 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x15a940f78 <col:12> 'int' 0     |-CallExpr 0x15a941448 <line:9:2, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a9410e0 <col:2> 'int ()' Function 0x15a941028 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x15a941428 <col:15, col:60> 'int' contains-errors '!='     |   |-BinaryOperator 0x15a9413c0 <col:15, col:47> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x15a941360 <col:15, col:23> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a9411e0 <col:15> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x15a941340 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x15a9413a0 <col:27, col:47> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x15a941400 <col:52, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a941298 <col:52> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |     `-RecoveryExpr 0x15a9413e0 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a9416f8 <line:10:2, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a941470 <col:2> 'int ()' Function 0x15a941028 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x15a9416d8 <col:15, col:60> 'int' contains-errors '!='     |   |-BinaryOperator 0x15a941670 <col:15, col:47> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x15a941610 <col:15, col:23> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a941490 <col:15> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x15a9415f0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x15a941650 <col:27, col:47> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x15a9416b0 <col:52, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a941548 <col:52> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |     `-RecoveryExpr 0x15a941690 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a9419a8 <line:11:2, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a941720 <col:2> 'int ()' Function 0x15a941028 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x15a941988 <col:15, col:61> 'int' contains-errors '!='     |   |-BinaryOperator 0x15a941920 <col:15, col:47> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x15a9418c0 <col:15, col:23> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a941740 <col:15> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x15a9418a0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x15a941900 <col:27, col:47> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x15a941960 <col:52, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a9417f8 <col:52> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |     `-RecoveryExpr 0x15a941940 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a944668 <line:12:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a9419d0 <col:2> 'int ()' Function 0x15a941028 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x15a944648 <col:15, col:62> 'int' contains-errors '!='     |   |-BinaryOperator 0x15a9445e0 <col:15, col:48> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x15a944580 <col:15, col:24> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15a944400 <col:15> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x15a944560 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x15a9445c0 <col:28, col:48> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x15a944620 <col:53, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a9444b8 <col:53> 'int ()' Function 0x15a941128 'TSO' 'int ()'     |     `-RecoveryExpr 0x15a944600 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a9448f0 <line:14:2, line:15:11>     | |-UnaryOperator 0x15a944830 <line:14:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15a944808 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15a944770 <col:7> 'int ()' Function 0x15a9446b8 'cpu_has_feature' 'int ()'     | |   `-RecoveryExpr 0x15a9447e8 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a9448e0 <line:15:3, col:11>     |   `-UnaryOperator 0x15a9448c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15a9448b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15a944890 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15a944dc0 <line:17:2, line:19:25> 'int' contains-errors '='     | |-DeclRefExpr 0x15a944910 <line:17:2> 'int' lvalue Var 0x15a940f10 'ret' 'int'     | `-CallExpr 0x15a944d68 <col:8, line:19:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a944a10 <line:17:8> 'int ()' Function 0x15a944958 'user_regset_copyin' 'int ()'     |   |-UnaryOperator 0x15a944a80 <col:27, col:28> 'unsigned int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x15a944a30 <col:28> 'unsigned int' lvalue ParmVar 0x15a940aa8 'pos' 'unsigned int'     |   |-UnaryOperator 0x15a944ab8 <col:33, col:34> 'unsigned int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x15a944a98 <col:34> 'unsigned int' lvalue ParmVar 0x15a940b28 'count' 'unsigned int'     |   |-UnaryOperator 0x15a944b20 <col:41, col:42> 'const void **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x15a944ad0 <col:42> 'const void *' lvalue ParmVar 0x15a940bd8 'kbuf' 'const void *'     |   |-UnaryOperator 0x15a944d18 <col:48, col:49> 'const void **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x15a944cf8 <col:49> 'const void *' lvalue ParmVar 0x15a940bd8 'kbuf' 'const void *'     |   |-UnaryOperator 0x15a944c10 <line:18:4, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x15a944bc8 <col:5, col:20> '<dependent type>' contains-errors lvalue .siar     |   |   `-RecoveryExpr 0x15a944ba0 <col:5, col:13> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15a944b68 <col:5> 'struct task_struct *' lvalue ParmVar 0x15a928648 'target' 'struct task_struct *'     |   |-IntegerLiteral 0x15a944c28 <col:26> 'int' 0     |   `-UnaryExprOrTypeTraitExpr 0x15a944d48 <line:19:4, col:24> 'unsigned long' sizeof 'unsigned long'     |-IfStmt 0x15a9452a0 <line:21:2, line:24:29>     | |-UnaryOperator 0x15a944e18 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15a944e00 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x15a944de0 <col:7> 'int' lvalue Var 0x15a940f10 'ret' 'int'     | `-BinaryOperator 0x15a945280 <line:22:3, line:24:29> 'int' contains-errors '='     |   |-DeclRefExpr 0x15a944e30 <line:22:3> 'int' lvalue Var 0x15a940f10 'ret' 'int'     |   `-CallExpr 0x15a945228 <col:9, line:24:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a944e50 <line:22:9> 'int ()' Function 0x15a944958 'user_regset_copyin' 'int ()'     |     |-UnaryOperator 0x15a944e90 <col:28, col:29> 'unsigned int *' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x15a944e70 <col:29> 'unsigned int' lvalue ParmVar 0x15a940aa8 'pos' 'unsigned int'     |     |-UnaryOperator 0x15a944ec8 <col:34, col:35> 'unsigned int *' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x15a944ea8 <col:35> 'unsigned int' lvalue ParmVar 0x15a940b28 'count' 'unsigned int'     |     |-UnaryOperator 0x15a944f00 <col:42, col:43> 'const void **' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x15a944ee0 <col:43> 'const void *' lvalue ParmVar 0x15a940bd8 'kbuf' 'const void *'     |     |-UnaryOperator 0x15a945168 <col:49, col:50> 'const void **' prefix '&' cannot overflow     |     | `-DeclRefExpr 0x15a945148 <col:50> 'const void *' lvalue ParmVar 0x15a940bd8 'kbuf' 'const void *'     |     |-UnaryOperator 0x15a944ff0 <line:23:4, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-CXXDependentScopeMemberExpr 0x15a944fa8 <col:5, col:20> '<dependent type>' contains-errors lvalue .sdar     |     |   `-RecoveryExpr 0x15a944f80 <col:5, col:13> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x15a944f48 <col:5> 'struct task_struct *' lvalue ParmVar 0x15a928648 'target' 'struct task_struct *'     |     |-UnaryExprOrTypeTraitExpr 0x15a945198 <col:26, col:46> 'unsigned long' sizeof 'unsigned long'     |     `-BinaryOperator 0x15a945208 <line:24:4, col:28> 'unsigned long' '*'     |       |-ImplicitCastExpr 0x15a9451f0 <col:4> 'unsigned long' <IntegralCast>     |       | `-IntegerLiteral 0x15a945040 <col:4> 'int' 2     |       `-UnaryExprOrTypeTraitExpr 0x15a9451d0 <col:8, col:28> 'unsigned long' sizeof 'unsigned long'     `-ReturnStmt 0x15a945c48 <line:40:2, col:9>       `-ImplicitCastExpr 0x15a945c30 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15a945c10 <col:9> 'int' lvalue Var 0x15a940f10 'ret' 'int' ","20811":"`-FunctionDecl 0x14600de38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x14600dd58 <col:12> col:12 SplFileObject 'int'   |-ParmVarDecl 0x14600dcd8 <col:27> col:27 hasChildren 'int'   `-CompoundStmt 0x14600e218 <line:2:1, line:8:1>     `-IfStmt 0x14600e1f8 <line:3:2, line:5:2>       |-BinaryOperator 0x14600e1b0 <line:3:6, col:38> 'int' contains-errors '=='       | |-CallExpr 0x14600e170 <col:6, col:33> 'int'       | | `-ImplicitCastExpr 0x14600e158 <col:6> 'int (*)()' <FunctionToPointerDecay>       | |   `-DeclRefExpr 0x14600e060 <col:6> 'int ()' Function 0x14600dfa8 'zend_parse_parameters_none' 'int ()'       | `-RecoveryExpr 0x14600e190 <col:38> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14600e1e0 <col:47, line:5:2>         `-ReturnStmt 0x14600e1d0 <line:4:3> ","20441":"`-FunctionDecl 0x154026740  line:1:6 oz_usb_rx 'void (struct oz_pd *, struct oz_elt *)'   |-ParmVarDecl 0x15400e248 <col:16, col:30> col:30 used pd 'struct oz_pd *'   |-ParmVarDecl 0x154026628 <col:34, col:49> col:49 used elt 'struct oz_elt *'   `-CompoundStmt 0x15480a6f0 <line:2:1, line:65:1>     |-DeclStmt 0x154026ba8 <line:3:2, col:61>     | |-RecordDecl 0x154026840 <col:2, col:9> col:9 struct oz_usb_hdr     | `-VarDecl 0x1540269a8 <col:2, col:60> col:21 used usb_hdr 'struct oz_usb_hdr *' cinit     |   `-CStyleCastExpr 0x154026b68 <col:31, col:60> 'struct oz_usb_hdr *' contains-errors <Dependent>     |     `-ParenExpr 0x154026b48 <col:52, col:60> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x154026a68 <col:53, col:59> '<dependent type>' contains-errors lvalue     |         |-DeclRefExpr 0x154026a10 <col:53> 'struct oz_elt *' lvalue ParmVar 0x154026628 'elt' 'struct oz_elt *'     |         `-IntegerLiteral 0x154026a30 <col:59> 'int' 1     |-DeclStmt 0x154026da8 <line:4:2, col:28>     | |-RecordDecl 0x154026bc0 <col:2, col:9> col:9 struct oz_usb_ctx     | `-VarDecl 0x154026d28 <col:2, col:21> col:21 used usb_ctx 'struct oz_usb_ctx *'     |-IfStmt 0x154027208 <line:8:2, line:9:21>     | |-ImplicitCastExpr 0x154027040 <line:8:6> 'struct oz_usb_ctx *' <LValueToRValue>     | | `-DeclRefExpr 0x154027020 <col:6> 'struct oz_usb_ctx *' lvalue Var 0x154026d28 'usb_ctx' 'struct oz_usb_ctx *'     | `-CallExpr 0x1540271c8 <line:9:3, col:21> 'int'     |   |-ImplicitCastExpr 0x1540271b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x154027138 <col:3> 'int ()' Function 0x154027080 'oz_usb_get' 'int ()'     |   `-ImplicitCastExpr 0x1540271f0 <col:14> 'struct oz_usb_ctx *' <LValueToRValue>     |     `-DeclRefExpr 0x154027158 <col:14> 'struct oz_usb_ctx *' lvalue Var 0x154026d28 'usb_ctx' 'struct oz_usb_ctx *'     |-IfStmt 0x154027448 <line:11:2, line:12:3>     | |-BinaryOperator 0x154027418 <line:11:6, col:17> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1540273a0 <col:6> 'struct oz_usb_ctx *' lvalue Var 0x154026d28 'usb_ctx' 'struct oz_usb_ctx *'     | | `-RecoveryExpr 0x1540273f8 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x154027438 <line:12:3>     |-IfStmt 0x154027530 <line:13:2, line:14:8>     | |-RecoveryExpr 0x1540274a0 <line:13:6, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x154027468 <col:6> 'struct oz_usb_ctx *' lvalue Var 0x154026d28 'usb_ctx' 'struct oz_usb_ctx *'     | `-GotoStmt 0x154027518 <line:14:3, col:8> 'done' 0x1540274c8     |-IfStmt 0x154029ff0 <line:16:2, line:20:2>     | |-BinaryOperator 0x1540275d0 <line:16:6, col:30> 'int' contains-errors '!='     | | |-RecoveryExpr 0x154027588 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x154027550 <col:6> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     | | `-IntegerLiteral 0x1540275b0 <col:30> 'int' 0     | `-CompoundStmt 0x154029fd8 <col:33, line:20:2>     |   `-IfStmt 0x154029fb8 <line:17:3, line:19:9>     |     |-BinaryOperator 0x154029f80 <line:17:7, col:64> 'int' contains-errors '=='     |     | |-ParenExpr 0x154029f40 <col:7, col:59> '<dependent type>' contains-errors     |     | | `-BinaryOperator 0x154029f20 <col:8, col:55> '<dependent type>' contains-errors '&'     |     | |   |-ParenExpr 0x154029ee0 <col:8, col:51> '<dependent type>' contains-errors     |     | |   | `-BinaryOperator 0x154029ec0 <col:9, col:40> '<dependent type>' contains-errors '-'     |     | |   |   |-RecoveryExpr 0x154029e38 <col:9, col:18> '<dependent type>' contains-errors lvalue     |     | |   |   | `-DeclRefExpr 0x154029e00 <col:9> 'struct oz_usb_ctx *' lvalue Var 0x154026d28 'usb_ctx' 'struct oz_usb_ctx *'     |     | |   |   `-RecoveryExpr 0x154029e98 <col:31, col:40> '<dependent type>' contains-errors lvalue     |     | |   |     `-DeclRefExpr 0x154029e60 <col:31> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     |     | |   `-IntegerLiteral 0x154029f00 <col:55> 'int' 128     |     | `-IntegerLiteral 0x154029f60 <col:64> 'int' 0     |     `-GotoStmt 0x154029fa0 <line:19:4, col:9> 'done' 0x1540274c8     |-BinaryOperator 0x15402a0d0 <line:21:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15402a048 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15402a010 <col:2> 'struct oz_usb_ctx *' lvalue Var 0x154026d28 'usb_ctx' 'struct oz_usb_ctx *'     | `-RecoveryExpr 0x15402a0a8 <col:24, col:33> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15402a070 <col:24> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     |-SwitchStmt 0x15402a168 <line:22:2, line:62:2>     | |-ImplicitCastExpr 0x15402a150 <line:22:10, col:19> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x15402a128 <col:10, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15402a0f0 <col:10> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     | `-CompoundStmt 0x15480a4f8 <col:25, line:62:2>     |   |-CompoundStmt 0x15402a9d0 <line:23:24, line:35:3>     |   | |-DeclStmt 0x15402a480 <line:24:4, line:25:38>     |   | | |-RecordDecl 0x15402a1a8 <line:24:4, col:11> col:11 struct oz_get_desc_rsp     |   | | `-VarDecl 0x15402a318 <col:4, line:25:31> line:24:28 used body 'struct oz_get_desc_rsp *' cinit     |   | |   `-CStyleCastExpr 0x15402a440 <line:25:5, col:31> 'struct oz_get_desc_rsp *' contains-errors <BitCast>     |   | |     `-ImplicitCastExpr 0x15402a428 <col:31> 'struct oz_usb_hdr *' contains-errors <LValueToRValue> part_of_explicit_cast     |   | |       `-DeclRefExpr 0x15402a380 <col:31> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     |   | `-DeclStmt 0x15402a5b8 <line:26:4, line:27:40>     |   |   `-VarDecl 0x15402a4b0 <line:26:4, col:8> col:8 used data_len 'int'     |   |-BreakStmt 0x15402a9f0 <line:36:3>     |   |-CompoundStmt 0x154809940 <line:37:26, line:42:3>     |   | `-DeclStmt 0x15402acd0 <line:38:4, line:39:40>     |   |   |-RecordDecl 0x15402a9f8 <line:38:4, col:11> col:11 struct oz_set_config_rsp     |   |   `-VarDecl 0x15402ab68 <col:4, line:39:33> line:38:30 used body 'struct oz_set_config_rsp *' cinit     |   |     `-CStyleCastExpr 0x15402ac90 <line:39:5, col:33> 'struct oz_set_config_rsp *' contains-errors <BitCast>     |   |       `-ImplicitCastExpr 0x15402ac78 <col:33> 'struct oz_usb_hdr *' contains-errors <LValueToRValue> part_of_explicit_cast     |   |         `-DeclRefExpr 0x15402abd0 <col:33> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     |   |-BreakStmt 0x154809958 <line:43:3>     |   |-CompoundStmt 0x154809da8 <line:44:29, line:49:3>     |   | `-DeclStmt 0x154809c30 <line:45:4, line:46:43>     |   |   |-RecordDecl 0x154809960 <line:45:4, col:11> col:11 struct oz_set_interface_rsp     |   |   `-VarDecl 0x154809ac8 <col:4, line:46:36> line:45:33 used body 'struct oz_set_interface_rsp *' cinit     |   |     `-CStyleCastExpr 0x154809bf0 <line:46:5, col:36> 'struct oz_set_interface_rsp *' contains-errors <BitCast>     |   |       `-ImplicitCastExpr 0x154809bd8 <col:36> 'struct oz_usb_hdr *' contains-errors <LValueToRValue> part_of_explicit_cast     |   |         `-DeclRefExpr 0x154809b30 <col:36> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     |   |-BreakStmt 0x154809dc0 <line:50:3>     |   |-CompoundStmt 0x15480a2f8 <line:51:28, line:57:3>     |   | `-DeclStmt 0x15480a0a0 <line:52:4, line:53:42>     |   |   |-RecordDecl 0x154809dc8 <line:52:4, col:11> col:11 struct oz_vendor_class_rsp     |   |   `-VarDecl 0x154809f38 <col:4, line:53:35> line:52:32 used body 'struct oz_vendor_class_rsp *' cinit     |   |     `-CStyleCastExpr 0x15480a060 <line:53:5, col:35> 'struct oz_vendor_class_rsp *' contains-errors <BitCast>     |   |       `-ImplicitCastExpr 0x15480a048 <col:35> 'struct oz_usb_hdr *' contains-errors <LValueToRValue> part_of_explicit_cast     |   |         `-DeclRefExpr 0x154809fa0 <col:35> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     |   |-BreakStmt 0x15480a310 <line:58:3>     |   |-CallExpr 0x15480a4b8 <line:60:3, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15480a3f8 <col:3> 'int ()' Function 0x15480a340 'oz_usb_handle_ep_data' 'int ()'     |   | |-DeclRefExpr 0x15480a418 <col:25> 'struct oz_usb_ctx *' lvalue Var 0x154026d28 'usb_ctx' 'struct oz_usb_ctx *'     |   | |-DeclRefExpr 0x15480a438 <col:34> 'struct oz_usb_hdr *' contains-errors lvalue Var 0x1540269a8 'usb_hdr' 'struct oz_usb_hdr *'     |   | `-RecoveryExpr 0x15480a490 <col:43, col:48> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15480a458 <col:43> 'struct oz_elt *' lvalue ParmVar 0x154026628 'elt' 'struct oz_elt *'     |   `-BreakStmt 0x15480a4f0 <line:61:3>     `-LabelStmt 0x15480a6d0 <line:63:1, line:64:20> 'done'       `-CallExpr 0x15480a690 <col:2, col:20> 'int'         |-ImplicitCastExpr 0x15480a678 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x15480a638 <col:2> 'int ()' Function 0x15480a580 'oz_usb_put' 'int ()'         `-ImplicitCastExpr 0x15480a6b8 <col:13> 'struct oz_usb_ctx *' <LValueToRValue>           `-DeclRefExpr 0x15480a658 <col:13> 'struct oz_usb_ctx *' lvalue Var 0x154026d28 'usb_ctx' 'struct oz_usb_ctx *' ","20363":"`-FunctionDecl 0x14c859e88  line:1:1 check_matching_with_multibyte_ops 'int (struct dfa *, int, int)'   |-ParmVarDecl 0x14c842248 <col:36, col:48> col:48 used d 'struct dfa *'   |-ParmVarDecl 0x14c8422c8 <col:51, col:55> col:55 used s 'int'   |-ParmVarDecl 0x14c842348 <col:58, col:62> col:62 used idx 'int'   `-CompoundStmt 0x14c85b398 <line:2:1, line:23:1>     |-DeclStmt 0x14c85a010 <line:3:3, col:8>     | `-VarDecl 0x14c859fa8 <col:3, col:7> col:7 used i 'int'     |-DeclStmt 0x14c85a0e0 <line:4:3, col:14>     | `-VarDecl 0x14c85a078 <col:3, col:8> col:8 used rarray 'int *'     |-CallExpr 0x14c85a3c0 <line:6:3, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c85a220 <col:3> 'int ()' Function 0x14c85a168 'MALLOC' 'int ()'     | |-DeclRefExpr 0x14c85a240 <col:10> 'int *' lvalue Var 0x14c85a078 'rarray' 'int *'     | `-CXXDependentScopeMemberExpr 0x14c85a378 <col:18, col:36> '<dependent type>' contains-errors lvalue .nelem     |   `-CXXDependentScopeMemberExpr 0x14c85a330 <col:18, col:31> '<dependent type>' contains-errors lvalue .mbps     |     `-ArraySubscriptExpr 0x14c85a310 <col:18, col:29> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x14c85a2e0 <col:18, col:21> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x14c85a298 <col:18, col:21> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c85a260 <col:18> 'struct dfa *' lvalue ParmVar 0x14c842248 'd' 'struct dfa *'     |       `-ImplicitCastExpr 0x14c85a2f8 <col:28> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14c85a2c0 <col:28> 'int' lvalue ParmVar 0x14c8422c8 's' 'int'     |-ForStmt 0x14c85b300 <line:7:3, line:21:5>     | |-BinaryOperator 0x14c85a430 <line:7:8, col:12> 'int' '='     | | |-DeclRefExpr 0x14c85a3f0 <col:8> 'int' lvalue Var 0x14c859fa8 'i' 'int'     | | `-IntegerLiteral 0x14c85a410 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14c85a5d0 <col:15, col:37> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14c85a450 <col:15> 'int' lvalue Var 0x14c859fa8 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x14c85a588 <col:19, col:37> '<dependent type>' contains-errors lvalue .nelem     | |   `-CXXDependentScopeMemberExpr 0x14c85a540 <col:19, col:32> '<dependent type>' contains-errors lvalue .mbps     | |     `-ArraySubscriptExpr 0x14c85a520 <col:19, col:30> '<dependent type>' contains-errors lvalue     | |       |-ImplicitCastExpr 0x14c85a4f0 <col:19, col:22> '<dependent type>' contains-errors <LValueToRValue>     | |       | `-RecoveryExpr 0x14c85a4a8 <col:19, col:22> '<dependent type>' contains-errors lvalue     | |       |   `-DeclRefExpr 0x14c85a470 <col:19> 'struct dfa *' lvalue ParmVar 0x14c842248 'd' 'struct dfa *'     | |       `-ImplicitCastExpr 0x14c85a508 <col:29> 'int' <LValueToRValue>     | |         `-DeclRefExpr 0x14c85a4d0 <col:29> 'int' lvalue ParmVar 0x14c8422c8 's' 'int'     | |-UnaryOperator 0x14c85a610 <col:44, col:46> 'int' prefix '++'     | | `-DeclRefExpr 0x14c85a5f0 <col:46> 'int' lvalue Var 0x14c859fa8 'i' 'int'     | `-CompoundStmt 0x14c85b2e8 <line:8:5, line:21:5>     |   `-SwitchStmt 0x14c85a708 <line:10:7, line:20:9>     |     |-RecoveryExpr 0x14c85a6e8 <line:10:14, col:33> 'int' contains-errors     |     `-CompoundStmt 0x14c85b2b0 <line:11:9, line:20:9>     |       |-BinaryOperator 0x14c85aab0 <line:13:11, col:51> 'int' contains-errors '='     |       | |-ArraySubscriptExpr 0x14c85aa30 <col:11, col:19> 'int' lvalue     |       | | |-ImplicitCastExpr 0x14c85aa00 <col:11> 'int *' <LValueToRValue>     |       | | | `-DeclRefExpr 0x14c85a748 <col:11> 'int *' lvalue Var 0x14c85a078 'rarray' 'int *'     |       | | `-ImplicitCastExpr 0x14c85aa18 <col:18> 'int' <LValueToRValue>     |       | |   `-DeclRefExpr 0x14c85a768 <col:18> 'int' lvalue Var 0x14c859fa8 'i' 'int'     |       | `-CallExpr 0x14c85aa70 <col:23, col:51> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x14c85a8b8 <col:23> 'int ()' Function 0x14c85a800 'match_anychar' 'int ()'     |       |   |-DeclRefExpr 0x14c85a8d8 <col:37> 'struct dfa *' lvalue ParmVar 0x14c842248 'd' 'struct dfa *'     |       |   |-DeclRefExpr 0x14c85a8f8 <col:40> 'int' lvalue ParmVar 0x14c8422c8 's' 'int'     |       |   |-RecoveryExpr 0x14c85aa50 <col:43> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c85a930 <col:48> 'int' lvalue ParmVar 0x14c842348 'idx' 'int'     |       |-BreakStmt 0x14c85aad0 <line:14:11>     |       |-BinaryOperator 0x14c85b260 <line:16:11, col:54> 'int' contains-errors '='     |       | |-ArraySubscriptExpr 0x14c85add8 <col:11, col:19> 'int' lvalue     |       | | |-ImplicitCastExpr 0x14c85ada8 <col:11> 'int *' <LValueToRValue>     |       | | | `-DeclRefExpr 0x14c85aaf0 <col:11> 'int *' lvalue Var 0x14c85a078 'rarray' 'int *'     |       | | `-ImplicitCastExpr 0x14c85adc0 <col:18> 'int' <LValueToRValue>     |       | |   `-DeclRefExpr 0x14c85ab10 <col:18> 'int' lvalue Var 0x14c859fa8 'i' 'int'     |       | `-CallExpr 0x14c85b220 <col:23, col:54> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x14c85ac60 <col:23> 'int ()' Function 0x14c85aba8 'match_mb_charset' 'int ()'     |       |   |-DeclRefExpr 0x14c85ac80 <col:40> 'struct dfa *' lvalue ParmVar 0x14c842248 'd' 'struct dfa *'     |       |   |-DeclRefExpr 0x14c85aca0 <col:43> 'int' lvalue ParmVar 0x14c8422c8 's' 'int'     |       |   |-RecoveryExpr 0x14c85b200 <col:46> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c85acd8 <col:51> 'int' lvalue ParmVar 0x14c842348 'idx' 'int'     |       |-BreakStmt 0x14c85b280 <line:17:11>     |       `-DefaultStmt 0x14c85b290 <line:18:9, line:19:11>     |         `-BreakStmt 0x14c85b288 <col:11>     `-ReturnStmt 0x14c85b388 <line:22:3, col:10>       `-ImplicitCastExpr 0x14c85b370 <col:10> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x14c85b358 <col:10> 'int *' <LValueToRValue>           `-DeclRefExpr 0x14c85b338 <col:10> 'int *' lvalue Var 0x14c85a078 'rarray' 'int *' ","20650":"`-FunctionDecl 0x12193b420  line:1:13 geneve_unquiesce 'void (struct geneve_dev *, struct geneve_sock *, struct geneve_sock)' static   |-ParmVarDecl 0x121922e48 <col:30, col:49> col:49 used geneve 'struct geneve_dev *'   |-ParmVarDecl 0x12193b228 <col:57, col:77> col:77 used gs4 'struct geneve_sock *'   |-ParmVarDecl 0x12193b2e0 <line:2:9, col:28> col:28 invalid __maybe_unused 'struct geneve_sock'   `-CompoundStmt 0x12193bad8 <line:3:1, line:13:1>     |-CallExpr 0x12193b6f0 <line:4:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12193b650 <col:2> 'int ()' Function 0x12193b598 'rcu_assign_pointer' 'int ()'     | |-RecoveryExpr 0x12193b6a8 <col:21, col:29> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12193b670 <col:21> 'struct geneve_dev *' lvalue ParmVar 0x121922e48 'geneve' 'struct geneve_dev *'     | `-DeclRefExpr 0x12193b6d0 <col:36> 'struct geneve_sock *' lvalue ParmVar 0x12193b228 'gs4' 'struct geneve_sock *'     |-IfStmt 0x12193b950 <line:5:2, line:6:45>     | |-ImplicitCastExpr 0x12193b740 <line:5:6> 'struct geneve_sock *' <LValueToRValue>     | | `-DeclRefExpr 0x12193b720 <col:6> 'struct geneve_sock *' lvalue ParmVar 0x12193b228 'gs4' 'struct geneve_sock *'     | `-CallExpr 0x12193b920 <line:6:3, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12193b838 <col:3> 'int ()' Function 0x12193b780 'rcu_assign_sk_user_data' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12193b8b8 <col:27, col:38> '<dependent type>' contains-errors lvalue ->sk     |   | `-RecoveryExpr 0x12193b890 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12193b858 <col:27> 'struct geneve_sock *' lvalue ParmVar 0x12193b228 'gs4' 'struct geneve_sock *'     |   `-DeclRefExpr 0x12193b900 <col:42> 'struct geneve_sock *' lvalue ParmVar 0x12193b228 'gs4' 'struct geneve_sock *'     `-CallExpr 0x12193bab8 <line:12:2, col:18> 'int'       `-ImplicitCastExpr 0x12193baa0 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12193ba50 <col:2> 'int ()' Function 0x12193b998 'synchronize_net' 'int ()' ","21085":"`-FunctionDecl 0x14781f3a8  line:1:12 ps_files_valid_key 'int (const char *)' static   |-ParmVarDecl 0x14781f2d8 <col:31, col:43> col:43 used key 'const char *'   `-CompoundStmt 0x14783f820 <line:2:1, line:28:1>     |-UnaryExprOrTypeTraitExpr 0x14781f510 <line:3:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x14781f4f0 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14781f5b0 <line:4:2, col:15>     | `-VarDecl 0x14781f548 <col:2, col:14> col:14 used p 'const char *'     |-DeclStmt 0x14781f640 <line:5:2, col:8>     | `-VarDecl 0x14781f5d8 <col:2, col:7> col:7 used c 'char'     |-DeclStmt 0x14781f6f8 <line:6:2, col:13>     | `-VarDecl 0x14781f670 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x14781f6d8 <col:12> 'int' 1     |-ForStmt 0x14783f508 <line:8:2, line:18:2>     | |-BinaryOperator 0x14781f768 <line:8:7, col:11> 'const char *' '='     | | |-DeclRefExpr 0x14781f710 <col:7> 'const char *' lvalue Var 0x14781f548 'p' 'const char *'     | | `-ImplicitCastExpr 0x14781f750 <col:11> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x14781f730 <col:11> 'const char *' lvalue ParmVar 0x14781f2d8 'key' 'const char *'     | |-<<<NULL>>>     | |-ParenExpr 0x14781f830 <col:16, col:23> 'char'     | | `-BinaryOperator 0x14781f810 <col:17, col:22> 'char' '='     | |   |-DeclRefExpr 0x14781f788 <col:17> 'char' lvalue Var 0x14781f5d8 'c' 'char'     | |   `-ImplicitCastExpr 0x14781f7f8 <col:21, col:22> 'char' <LValueToRValue>     | |     `-UnaryOperator 0x14781f7e0 <col:21, col:22> 'const char' lvalue prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x14781f7c8 <col:22> 'const char *' <LValueToRValue>     | |         `-DeclRefExpr 0x14781f7a8 <col:22> 'const char *' lvalue Var 0x14781f548 'p' 'const char *'     | |-UnaryOperator 0x14781f870 <col:26, col:27> 'const char *' postfix '++'     | | `-DeclRefExpr 0x14781f850 <col:26> 'const char *' lvalue Var 0x14781f548 'p' 'const char *'     | `-CompoundStmt 0x14783f4f0 <col:31, line:18:2>     |   `-IfStmt 0x14783f4d0 <line:10:3, line:17:3>     |     |-UnaryOperator 0x14783f430 <line:10:7, line:14:16> 'int' prefix '!' cannot overflow     |     | `-ParenExpr 0x14783f410 <line:10:8, line:14:16> 'int'     |     |   `-BinaryOperator 0x14783f3f0 <line:10:9, line:14:13> 'int' '||'     |     |     |-BinaryOperator 0x14783f348 <line:10:9, line:13:13> 'int' '||'     |     |     | |-BinaryOperator 0x14783f2a0 <line:10:9, line:12:29> 'int' '||'     |     |     | | |-BinaryOperator 0x14783f130 <line:10:9, line:11:29> 'int' '||'     |     |     | | | |-ParenExpr 0x14781f9b8 <line:10:9, col:30> 'int'     |     |     | | | | `-BinaryOperator 0x14781f998 <col:10, col:27> 'int' '&&'     |     |     | | | |   |-BinaryOperator 0x14781f8f0 <col:10, col:15> 'int' '>='     |     |     | | | |   | |-ImplicitCastExpr 0x14781f8d8 <col:10> 'int' <IntegralCast>     |     |     | | | |   | | `-ImplicitCastExpr 0x14781f8c0 <col:10> 'char' <LValueToRValue>     |     |     | | | |   | |   `-DeclRefExpr 0x14781f888 <col:10> 'char' lvalue Var 0x14781f5d8 'c' 'char'     |     |     | | | |   | `-CharacterLiteral 0x14781f8a8 <col:15> 'int' 97     |     |     | | | |   `-BinaryOperator 0x14781f978 <col:22, col:27> 'int' '<='     |     |     | | | |     |-ImplicitCastExpr 0x14781f960 <col:22> 'int' <IntegralCast>     |     |     | | | |     | `-ImplicitCastExpr 0x14781f948 <col:22> 'char' <LValueToRValue>     |     |     | | | |     |   `-DeclRefExpr 0x14781f910 <col:22> 'char' lvalue Var 0x14781f5d8 'c' 'char'     |     |     | | | |     `-CharacterLiteral 0x14781f930 <col:27> 'int' 122     |     |     | | | `-ParenExpr 0x14783f110 <line:11:8, col:29> 'int'     |     |     | | |   `-BinaryOperator 0x14783f0f0 <col:9, col:26> 'int' '&&'     |     |     | | |     |-BinaryOperator 0x14783f048 <col:9, col:14> 'int' '>='     |     |     | | |     | |-ImplicitCastExpr 0x14783f030 <col:9> 'int' <IntegralCast>     |     |     | | |     | | `-ImplicitCastExpr 0x14783f018 <col:9> 'char' <LValueToRValue>     |     |     | | |     | |   `-DeclRefExpr 0x14781f9d8 <col:9> 'char' lvalue Var 0x14781f5d8 'c' 'char'     |     |     | | |     | `-CharacterLiteral 0x14783f000 <col:14> 'int' 65     |     |     | | |     `-BinaryOperator 0x14783f0d0 <col:21, col:26> 'int' '<='     |     |     | | |       |-ImplicitCastExpr 0x14783f0b8 <col:21> 'int' <IntegralCast>     |     |     | | |       | `-ImplicitCastExpr 0x14783f0a0 <col:21> 'char' <LValueToRValue>     |     |     | | |       |   `-DeclRefExpr 0x14783f068 <col:21> 'char' lvalue Var 0x14781f5d8 'c' 'char'     |     |     | | |       `-CharacterLiteral 0x14783f088 <col:26> 'int' 90     |     |     | | `-ParenExpr 0x14783f280 <line:12:8, col:29> 'int'     |     |     | |   `-BinaryOperator 0x14783f260 <col:9, col:26> 'int' '&&'     |     |     | |     |-BinaryOperator 0x14783f1b8 <col:9, col:14> 'int' '>='     |     |     | |     | |-ImplicitCastExpr 0x14783f1a0 <col:9> 'int' <IntegralCast>     |     |     | |     | | `-ImplicitCastExpr 0x14783f188 <col:9> 'char' <LValueToRValue>     |     |     | |     | |   `-DeclRefExpr 0x14783f150 <col:9> 'char' lvalue Var 0x14781f5d8 'c' 'char'     |     |     | |     | `-CharacterLiteral 0x14783f170 <col:14> 'int' 48     |     |     | |     `-BinaryOperator 0x14783f240 <col:21, col:26> 'int' '<='     |     |     | |       |-ImplicitCastExpr 0x14783f228 <col:21> 'int' <IntegralCast>     |     |     | |       | `-ImplicitCastExpr 0x14783f210 <col:21> 'char' <LValueToRValue>     |     |     | |       |   `-DeclRefExpr 0x14783f1d8 <col:21> 'char' lvalue Var 0x14781f5d8 'c' 'char'     |     |     | |       `-CharacterLiteral 0x14783f1f8 <col:26> 'int' 57     |     |     | `-BinaryOperator 0x14783f328 <line:13:8, col:13> 'int' '=='     |     |     |   |-ImplicitCastExpr 0x14783f310 <col:8> 'int' <IntegralCast>     |     |     |   | `-ImplicitCastExpr 0x14783f2f8 <col:8> 'char' <LValueToRValue>     |     |     |   |   `-DeclRefExpr 0x14783f2c0 <col:8> 'char' lvalue Var 0x14781f5d8 'c' 'char'     |     |     |   `-CharacterLiteral 0x14783f2e0 <col:13> 'int' 44     |     |     `-BinaryOperator 0x14783f3d0 <line:14:8, col:13> 'int' '=='     |     |       |-ImplicitCastExpr 0x14783f3b8 <col:8> 'int' <IntegralCast>     |     |       | `-ImplicitCastExpr 0x14783f3a0 <col:8> 'char' <LValueToRValue>     |     |       |   `-DeclRefExpr 0x14783f368 <col:8> 'char' lvalue Var 0x14781f5d8 'c' 'char'     |     |       `-CharacterLiteral 0x14783f388 <col:13> 'int' 45     |     `-CompoundStmt 0x14783f4b0 <col:19, line:17:3>     |       |-BinaryOperator 0x14783f488 <line:15:4, col:10> 'int' '='     |       | |-DeclRefExpr 0x14783f448 <col:4> 'int' lvalue Var 0x14781f670 'ret' 'int'     |       | `-IntegerLiteral 0x14783f468 <col:10> 'int' 0     |       `-BreakStmt 0x14783f4a8 <line:16:4>     |-IfStmt 0x14783f7b8 <line:23:2, line:25:2>     | |-BinaryOperator 0x14783f720 <line:23:6, col:24> 'int' contains-errors '||'     | | |-BinaryOperator 0x14783f6c0 <col:6, col:13> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x14783f6a0 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x14783f5e8 <col:13> 'int' 0     | | `-BinaryOperator 0x14783f700 <col:18, col:24> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x14783f6e0 <col:18> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x14783f640 <col:24> 'int' 128     | `-CompoundStmt 0x14783f7a0 <col:29, line:25:2>     |   `-BinaryOperator 0x14783f780 <line:24:3, col:9> 'int' '='     |     |-DeclRefExpr 0x14783f740 <col:3> 'int' lvalue Var 0x14781f670 'ret' 'int'     |     `-IntegerLiteral 0x14783f760 <col:9> 'int' 0     `-ReturnStmt 0x14783f810 <line:27:2, col:9>       `-ImplicitCastExpr 0x14783f7f8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14783f7d8 <col:9> 'int' lvalue Var 0x14781f670 'ret' 'int' ","20647":"`-FunctionDecl 0x144093a88  line:1:15 invalid jas_matrix_create 'int *(int, int)'   |-ParmVarDecl 0x1440938f0 <col:33, col:37> col:37 used numrows 'int'   |-ParmVarDecl 0x144093970 <col:46, col:50> col:50 used numcols 'int'   `-CompoundStmt 0x1440ade78 <line:2:1, line:47:1>     |-DeclStmt 0x144093bd8 <line:4:2, col:7>     | `-VarDecl 0x144093b70 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x144093e18 <line:6:2, line:8:2>     | |-RecoveryExpr 0x144093d98 <line:6:6, col:49> '_Bool' contains-errors     | `-CompoundStmt 0x144093e00 <col:52, line:8:2>     |   `-ReturnStmt 0x144093df0 <line:7:3, col:10>     |     `-ImplicitCastExpr 0x144093dd8 <col:10> 'int *' <NullToPointer>     |       `-IntegerLiteral 0x144093db8 <col:10> 'int' 0     |-IfStmt 0x1440ada08 <line:17:2, line:23:2>     | |-BinaryOperator 0x1440ad6a8 <line:17:6, col:25> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x1440ad660 <col:6, col:14> '<dependent type>' contains-errors lvalue ->maxrows_     | | | `-RecoveryExpr 0x1440ad640 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1440ad600 <col:25> 'int' 0     | `-CompoundStmt 0x1440ad9f0 <col:28, line:23:2>     |   `-IfStmt 0x1440ad9d0 <line:18:3, line:22:3>     |     |-RecoveryExpr 0x1440ad7c0 <line:18:7, line:19:28> '_Bool' contains-errors     |     `-CompoundStmt 0x1440ad9b0 <col:31, line:22:3>     |       |-CallExpr 0x1440ad940 <line:20:4, col:29> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1440ad8c0 <col:4> 'int ()' Function 0x1440ad808 'jas_matrix_destroy' 'int ()'     |       | `-RecoveryExpr 0x1440ad920 <col:23> '<dependent type>' contains-errors lvalue     |       `-ReturnStmt 0x1440ad9a0 <line:21:4, col:11>     |         `-ImplicitCastExpr 0x1440ad988 <col:11> 'int *' <NullToPointer>     |           `-IntegerLiteral 0x1440ad968 <col:11> 'int' 0     |-IfStmt 0x1440adb60 <line:25:2, line:31:2>     | |-RecoveryExpr 0x1440ada48 <line:25:6, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x1440adb48 <col:29, line:31:2>     |   `-IfStmt 0x1440adb28 <line:26:3, line:30:3>     |     |-RecoveryExpr 0x1440ada88 <line:26:7, line:27:26> '_Bool' contains-errors     |     `-CompoundStmt 0x1440adb10 <col:29, line:30:3>     |       `-ReturnStmt 0x1440adb00 <line:29:4, col:11>     |         `-ImplicitCastExpr 0x1440adae8 <col:11> 'int *' <NullToPointer>     |           `-IntegerLiteral 0x1440adac8 <col:11> 'int' 0     `-ForStmt 0x1440adcf8 <line:33:2, line:35:2>       |-BinaryOperator 0x1440adbc0 <line:33:7, col:11> 'int' '='       | |-DeclRefExpr 0x1440adb80 <col:7> 'int' lvalue Var 0x144093b70 'i' 'int'       | `-IntegerLiteral 0x1440adba0 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x1440adc50 <col:14, col:18> 'int' '<'       | |-ImplicitCastExpr 0x1440adc20 <col:14> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x1440adbe0 <col:14> 'int' lvalue Var 0x144093b70 'i' 'int'       | `-ImplicitCastExpr 0x1440adc38 <col:18> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x1440adc00 <col:18> 'int' lvalue ParmVar 0x1440938f0 'numrows' 'int'       |-UnaryOperator 0x1440adc90 <col:27, col:29> 'int' prefix '++'       | `-DeclRefExpr 0x1440adc70 <col:29> 'int' lvalue Var 0x144093b70 'i' 'int'       `-CompoundStmt 0x1440adce8 <col:32, line:35:2> ","20951":"`-FunctionDecl 0x146128750  line:1:13 ath6kl_wmi_relinquish_implicit_pstream_credits 'void (struct wmi *)' static   |-ParmVarDecl 0x146128648 <col:60, col:72> col:72 used wmi 'struct wmi *'   `-CompoundStmt 0x146146a00 <line:2:1, line:33:1>     |-DeclStmt 0x146144ce0 <line:5:2, col:7>     | `-VarDecl 0x146144c78 <col:2, col:6> col:6 used i 'int'     |-CallExpr 0x146144ea8 <line:8:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146144e10 <col:2> 'int ()' Function 0x146144d58 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x146144e90 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x146144e68 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x146144e30 <col:16> 'struct wmi *' lvalue ParmVar 0x146128648 'wmi' 'struct wmi *'     |-CallExpr 0x1461450a8 <line:10:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146145010 <col:2> 'int ()' Function 0x146144f58 'spin_unlock_bh' 'int ()'     | `-UnaryOperator 0x146145090 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x146145068 <col:18, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x146145030 <col:18> 'struct wmi *' lvalue ParmVar 0x146128648 'wmi' 'struct wmi *'     |-ForStmt 0x1461459c0 <line:12:2, line:27:2>     | |-BinaryOperator 0x146145110 <line:12:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1461450d0 <col:7> 'int' lvalue Var 0x146144c78 'i' 'int'     | | `-IntegerLiteral 0x1461450f0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1461451a8 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x146145130 <col:14> 'int' lvalue Var 0x146144c78 'i' 'int'     | | `-RecoveryExpr 0x146145188 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1461451e8 <col:30, col:31> 'int' postfix '++'     | | `-DeclRefExpr 0x1461451c8 <col:30> 'int' lvalue Var 0x146144c78 'i' 'int'     | `-CompoundStmt 0x1461459a8 <col:35, line:27:2>     |   `-IfStmt 0x146145988 <line:13:3, line:26:3>     |     |-BinaryOperator 0x146145348 <line:13:7, col:29> '<dependent type>' contains-errors '&'     |     | |-RecoveryExpr 0x1461452d0 <col:7> '<dependent type>' contains-errors lvalue     |     | `-ParenExpr 0x146145328 <col:22, col:29> 'int'     |     |   `-BinaryOperator 0x146145308 <col:23, col:28> 'int' '<<'     |     |     |-IntegerLiteral 0x146145218 <col:23> 'int' 1     |     |     `-ImplicitCastExpr 0x1461452f0 <col:28> 'int' <LValueToRValue>     |     |       `-DeclRefExpr 0x146145238 <col:28> 'int' lvalue Var 0x146144c78 'i' 'int'     |     `-CompoundStmt 0x146145960 <col:32, line:26:3>     |       |-CallExpr 0x146145400 <line:15:4, col:27> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x146145368 <col:4> 'int ()' Function 0x146144d58 'spin_lock_bh' 'int ()'     |       | `-UnaryOperator 0x1461453e8 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   `-RecoveryExpr 0x1461453c0 <col:18, col:23> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x146145388 <col:18> 'struct wmi *' lvalue ParmVar 0x146128648 'wmi' 'struct wmi *'     |       |-CallExpr 0x146145590 <line:17:4, col:29> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1461454f8 <col:4> 'int ()' Function 0x146144f58 'spin_unlock_bh' 'int ()'     |       | `-UnaryOperator 0x146145578 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   `-RecoveryExpr 0x146145550 <col:20, col:25> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x146145518 <col:20> 'struct wmi *' lvalue ParmVar 0x146128648 'wmi' 'struct wmi *'     |       `-IfStmt 0x146145940 <line:20:4, line:25:4>     |         |-UnaryOperator 0x146145638 <line:20:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow     |         | `-ImplicitCastExpr 0x146145620 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |         |   `-RecoveryExpr 0x146145600 <col:9> '<dependent type>' contains-errors lvalue     |         `-CompoundStmt 0x146145928 <col:23, line:25:4>     |           `-CallExpr 0x1461458f0 <line:23:5, line:24:20> '<dependent type>' contains-errors     |             |-DeclRefExpr 0x1461457e0 <line:23:5> 'int ()' Function 0x146145728 'ath6kl_indicate_tx_activity' 'int ()'     |             |-RecoveryExpr 0x146145838 <col:33, col:38> '<dependent type>' contains-errors lvalue     |             | `-DeclRefExpr 0x146145800 <col:33> 'struct wmi *' lvalue ParmVar 0x146128648 'wmi' 'struct wmi *'     |             |-DeclRefExpr 0x146145860 <line:24:12> 'int' lvalue Var 0x146144c78 'i' 'int'     |             `-RecoveryExpr 0x1461458d0 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x146145a90 <line:30:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1461459f8 <col:2> 'int ()' Function 0x146144d58 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x146145a78 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x146145a50 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x146145a18 <col:16> 'struct wmi *' lvalue ParmVar 0x146128648 'wmi' 'struct wmi *'     `-CallExpr 0x146145bb0 <line:32:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x146145b18 <col:2> 'int ()' Function 0x146144f58 'spin_unlock_bh' 'int ()'       `-UnaryOperator 0x146145b98 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x146145b70 <col:18, col:23> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x146145b38 <col:18> 'struct wmi *' lvalue ParmVar 0x146128648 'wmi' 'struct wmi *' ","20654":"`-FunctionDecl 0x149055138  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x149055238 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1490552a0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x149055308 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1490551e0 <<invalid sloc>> Implicit 900 ","20760":"`-FunctionDecl 0x14e027408  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14e027508 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14e0274b0 <<invalid sloc>> Implicit 873 ","21073":"`-FunctionDecl 0x13c1282a8  line:1:20 parse_iv2 'long (const unsigned char *, const unsigned char **)' static inline   |-ParmVarDecl 0x13c128108 <col:30, col:51> col:51 used p 'const unsigned char *'   |-ParmVarDecl 0x13c1281c0 <col:54, col:76> col:76 used q 'const unsigned char **'   `-CompoundStmt 0x13c141168 <line:2:1, line:27:1>     |-DeclStmt 0x13c128420 <line:3:2, col:13>     | `-VarDecl 0x13c1283b8 <col:2, col:7> col:7 used cursor 'char'     |-DeclStmt 0x13c1284f0 <line:4:2, col:17>     | `-VarDecl 0x13c128450 <col:2, col:16> col:7 used result 'long' cinit     |   `-ImplicitCastExpr 0x13c1284d8 <col:16> 'long' <IntegralCast>     |     `-IntegerLiteral 0x13c1284b8 <col:16> 'int' 0     |-DeclStmt 0x13c1285a8 <line:5:2, col:13>     | `-VarDecl 0x13c128520 <col:2, col:12> col:6 used neg 'int' cinit     |   `-IntegerLiteral 0x13c128588 <col:12> 'int' 0     |-SwitchStmt 0x13c128640 <line:7:2, line:13:2>     | |-ImplicitCastExpr 0x13c128628 <line:7:10, col:11> 'int' <IntegralCast>     | | `-ImplicitCastExpr 0x13c128610 <col:10, col:11> 'unsigned char' <LValueToRValue>     | |   `-UnaryOperator 0x13c1285f8 <col:10, col:11> 'const unsigned char' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x13c1285e0 <col:11> 'const unsigned char *' <LValueToRValue>     | |       `-DeclRefExpr 0x13c1285c0 <col:11> 'const unsigned char *' lvalue ParmVar 0x13c128108 'p' 'const unsigned char *'     | `-CompoundStmt 0x13c128788 <col:14, line:13:2>     |   |-CaseStmt 0x13c128698 <line:8:3, line:9:7>     |   | |-ConstantExpr 0x13c128680 <line:8:8> 'int'     |   | | `-CharacterLiteral 0x13c128668 <col:8> 'int' 45     |   | `-UnaryOperator 0x13c1286e0 <line:9:4, col:7> 'int' postfix '++'     |   |   `-DeclRefExpr 0x13c1286c0 <col:4> 'int' lvalue Var 0x13c128520 'neg' 'int'     |   `-CaseStmt 0x13c128728 <line:11:3, line:12:5>     |     |-ConstantExpr 0x13c128710 <line:11:8> 'int'     |     | `-CharacterLiteral 0x13c1286f8 <col:8> 'int' 43     |     `-UnaryOperator 0x13c128770 <line:12:4, col:5> 'const unsigned char *' postfix '++'     |       `-DeclRefExpr 0x13c128750 <col:4> 'const unsigned char *' lvalue ParmVar 0x13c128108 'p' 'const unsigned char *'     |-WhileStmt 0x13c140f48 <line:15:2, line:23:2>     | |-IntegerLiteral 0x13c1287a8 <line:15:9> 'int' 1     | `-CompoundStmt 0x13c140f20 <col:12, line:23:2>     |   |-BinaryOperator 0x13c140aa0 <line:16:3, col:19> 'char' '='     |   | |-DeclRefExpr 0x13c1287c8 <col:3> 'char' lvalue Var 0x13c1283b8 'cursor' 'char'     |   | `-CStyleCastExpr 0x13c140a78 <col:12, col:19> 'char' <IntegralCast>     |   |   `-ImplicitCastExpr 0x13c140a60 <col:18, col:19> 'unsigned char' <LValueToRValue> part_of_explicit_cast     |   |     `-UnaryOperator 0x13c140a38 <col:18, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow     |   |       `-ImplicitCastExpr 0x13c140a20 <col:19> 'const unsigned char *' <LValueToRValue>     |   |         `-DeclRefExpr 0x13c140a00 <col:19> 'const unsigned char *' lvalue ParmVar 0x13c128108 'p' 'const unsigned char *'     |   |-IfStmt 0x13c140eb8 <line:17:3, line:21:3> has_else     |   | |-BinaryOperator 0x13c140bd0 <line:17:7, col:34> 'int' '&&'     |   | | |-BinaryOperator 0x13c140b28 <col:7, col:17> 'int' '>='     |   | | | |-ImplicitCastExpr 0x13c140b10 <col:7> 'int' <IntegralCast>     |   | | | | `-ImplicitCastExpr 0x13c140af8 <col:7> 'char' <LValueToRValue>     |   | | | |   `-DeclRefExpr 0x13c140ac0 <col:7> 'char' lvalue Var 0x13c1283b8 'cursor' 'char'     |   | | | `-CharacterLiteral 0x13c140ae0 <col:17> 'int' 48     |   | | `-BinaryOperator 0x13c140bb0 <col:24, col:34> 'int' '<='     |   | |   |-ImplicitCastExpr 0x13c140b98 <col:24> 'int' <IntegralCast>     |   | |   | `-ImplicitCastExpr 0x13c140b80 <col:24> 'char' <LValueToRValue>     |   | |   |   `-DeclRefExpr 0x13c140b48 <col:24> 'char' lvalue Var 0x13c1283b8 'cursor' 'char'     |   | |   `-CharacterLiteral 0x13c140b68 <col:34> 'int' 57     |   | |-CompoundStmt 0x13c140e80 <col:39, line:19:3>     |   | | `-BinaryOperator 0x13c140e60 <line:18:4, col:63> 'long' contains-errors '='     |   | |   |-DeclRefExpr 0x13c140bf0 <col:4> 'long' lvalue Var 0x13c128450 'result' 'long'     |   | |   `-BinaryOperator 0x13c140e40 <col:13, col:63> '<dependent type>' contains-errors '+'     |   | |     |-BinaryOperator 0x13c140c80 <col:13, col:22> 'long' '*'     |   | |     | |-ImplicitCastExpr 0x13c140c50 <col:13> 'long' <LValueToRValue>     |   | |     | | `-DeclRefExpr 0x13c140c10 <col:13> 'long' lvalue Var 0x13c128450 'result' 'long'     |   | |     | `-ImplicitCastExpr 0x13c140c68 <col:22> 'long' <IntegralCast>     |   | |     |   `-IntegerLiteral 0x13c140c30 <col:22> 'int' 10     |   | |     `-RecoveryExpr 0x13c140e10 <col:27, col:63> '<dependent type>' contains-errors lvalue     |   | |       |-ParenExpr 0x13c140d10 <col:27, col:34> '<overloaded function type>' lvalue     |   | |       | `-UnresolvedLookupExpr 0x13c140cd0 <col:28> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty     |   | |       `-BinaryOperator 0x13c140df0 <col:36, col:60> 'int' '-'     |   | |         |-ImplicitCastExpr 0x13c140dc0 <col:36> 'int' <IntegralCast>     |   | |         | `-ImplicitCastExpr 0x13c140da8 <col:36> 'char' <LValueToRValue>     |   | |         |   `-DeclRefExpr 0x13c140d30 <col:36> 'char' lvalue Var 0x13c1283b8 'cursor' 'char'     |   | |         `-ImplicitCastExpr 0x13c140dd8 <col:45, col:60> 'int' <IntegralCast>     |   | |           `-CStyleCastExpr 0x13c140d80 <col:45, col:60> 'unsigned char' <IntegralCast>     |   | |             `-CharacterLiteral 0x13c140d50 <col:60> 'int' 48     |   | `-CompoundStmt 0x13c140ea0 <line:19:10, line:21:3>     |   |   `-BreakStmt 0x13c140e98 <line:20:4>     |   `-UnaryOperator 0x13c140f08 <line:22:3, col:4> 'const unsigned char *' postfix '++'     |     `-DeclRefExpr 0x13c140ee8 <col:3> 'const unsigned char *' lvalue ParmVar 0x13c128108 'p' 'const unsigned char *'     |-IfStmt 0x13c141048 <line:24:2, col:14>     | |-ImplicitCastExpr 0x13c140f88 <col:6> 'const unsigned char **' <LValueToRValue>     | | `-DeclRefExpr 0x13c140f68 <col:6> 'const unsigned char **' lvalue ParmVar 0x13c1281c0 'q' 'const unsigned char **'     | `-BinaryOperator 0x13c141028 <col:9, col:14> 'const unsigned char *' '='     |   |-UnaryOperator 0x13c140fd8 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x13c140fc0 <col:10> 'const unsigned char **' <LValueToRValue>     |   |   `-DeclRefExpr 0x13c140fa0 <col:10> 'const unsigned char **' lvalue ParmVar 0x13c1281c0 'q' 'const unsigned char **'     |   `-ImplicitCastExpr 0x13c141010 <col:14> 'const unsigned char *' <LValueToRValue>     |     `-DeclRefExpr 0x13c140ff0 <col:14> 'const unsigned char *' lvalue ParmVar 0x13c128108 'p' 'const unsigned char *'     |-IfStmt 0x13c141100 <line:25:2, col:19>     | |-ImplicitCastExpr 0x13c141088 <col:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13c141068 <col:6> 'int' lvalue Var 0x13c128520 'neg' 'int'     | `-ReturnStmt 0x13c1410f0 <col:11, col:19>     |   `-UnaryOperator 0x13c1410d8 <col:18, col:19> 'long' prefix '-'     |     `-ImplicitCastExpr 0x13c1410c0 <col:19> 'long' <LValueToRValue>     |       `-DeclRefExpr 0x13c1410a0 <col:19> 'long' lvalue Var 0x13c128450 'result' 'long'     `-ReturnStmt 0x13c141158 <line:26:2, col:9>       `-ImplicitCastExpr 0x13c141140 <col:9> 'long' <LValueToRValue>         `-DeclRefExpr 0x13c141120 <col:9> 'long' lvalue Var 0x13c128450 'result' 'long' ","20383":"`-FunctionDecl 0x11e140b58  line:1:12 do_dccp_getsockopt 'int (struct sock *, int, int, char)' static   |-ParmVarDecl 0x11e128648 <col:31, col:44> col:44 used sk 'struct sock *'   |-ParmVarDecl 0x11e1286c8 <col:48, col:52> col:52 level 'int'   |-ParmVarDecl 0x11e128748 <col:59, col:63> col:63 used optname 'int'   |-ParmVarDecl 0x11e140a00 <line:2:7, col:12> col:12 __user 'char'   `-CompoundStmt 0x11e144dd8 <line:3:1, line:42:1>     |-DeclStmt 0x11e140e58 <line:4:2, col:22>     | |-RecordDecl 0x11e140c68 <col:2, col:9> col:9 struct dccp_sock     | `-VarDecl 0x11e140dd8 <col:2, col:20> col:20 used dp 'struct dccp_sock *'     |-DeclStmt 0x11e140f88 <line:5:2, col:14>     | |-VarDecl 0x11e140e88 <col:2, col:6> col:6 used val 'int'     | `-VarDecl 0x11e140f08 <col:2, col:11> col:11 used len 'int'     |-IfStmt 0x11e141250 <line:7:2, line:8:11>     | |-CallExpr 0x11e141178 <line:7:6, col:26> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11e1410d0 <col:6> 'int ()' Function 0x11e141018 'get_user' 'int ()'     | | |-DeclRefExpr 0x11e1410f0 <col:15> 'int' lvalue Var 0x11e140f08 'len' 'int'     | | `-RecoveryExpr 0x11e141158 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11e141240 <line:8:3, col:11>     |   `-UnaryOperator 0x11e141228 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11e141210 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11e1411f0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11e1413c0 <line:10:2, line:11:11>     | |-BinaryOperator 0x11e1412f8 <line:10:6, col:22> 'int' '<'     | | |-ImplicitCastExpr 0x11e1412e0 <col:6> 'unsigned long' <IntegralCast>     | | | `-ImplicitCastExpr 0x11e1412c8 <col:6> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x11e141270 <col:6> 'int' lvalue Var 0x11e140f08 'len' 'int'     | | `-UnaryExprOrTypeTraitExpr 0x11e1412a8 <col:12, col:22> 'unsigned long' sizeof 'int'     | `-ReturnStmt 0x11e1413b0 <line:11:3, col:11>     |   `-UnaryOperator 0x11e141398 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11e141380 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11e141360 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11e1415c0 <line:13:2, col:17> 'struct dccp_sock *' '='     | |-DeclRefExpr 0x11e1413e0 <col:2> 'struct dccp_sock *' lvalue Var 0x11e140dd8 'dp' 'struct dccp_sock *'     | `-ImplicitCastExpr 0x11e1415a8 <col:7, col:17> 'struct dccp_sock *' <IntegralToPointer>     |   `-CallExpr 0x11e141568 <col:7, col:17> 'int'     |     |-ImplicitCastExpr 0x11e141550 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11e1414e0 <col:7> 'int ()' Function 0x11e141428 'dccp_sk' 'int ()'     |     `-ImplicitCastExpr 0x11e141590 <col:15> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x11e141500 <col:15> 'struct sock *' lvalue ParmVar 0x11e128648 'sk' 'struct sock *'     |-SwitchStmt 0x11e141618 <line:15:2, line:36:2>     | |-ImplicitCastExpr 0x11e141600 <line:15:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x11e1415e0 <col:10> 'int' lvalue ParmVar 0x11e128748 'optname' 'int'     | `-CompoundStmt 0x11e144a88 <col:19, line:36:2>     |   |-CallExpr 0x11e1417d8 <line:17:3, col:18> 'int'     |   | |-ImplicitCastExpr 0x11e1417c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11e141738 <col:3> 'int ()' Function 0x11e141680 'DCCP_WARN' 'int ()'     |   | `-ImplicitCastExpr 0x11e141800 <col:13> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x11e1417a0 <col:13> 'char[4]' lvalue \"STR\"     |   |-ReturnStmt 0x11e141838 <line:18:3, col:10>     |   | `-IntegerLiteral 0x11e141818 <col:10> 'int' 0     |   |-BinaryOperator 0x11e144480 <line:23:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11e144400 <col:3> 'int' lvalue Var 0x11e140e88 'val' 'int'     |   | `-RecoveryExpr 0x11e144458 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11e144420 <col:9> 'struct dccp_sock *' lvalue Var 0x11e140dd8 'dp' 'struct dccp_sock *'     |   |-BreakStmt 0x11e1444a0 <line:24:3>     |   |-BinaryOperator 0x11e144540 <line:26:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11e1444c0 <col:3> 'int' lvalue Var 0x11e140e88 'val' 'int'     |   | `-RecoveryExpr 0x11e144518 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11e1444e0 <col:9> 'struct dccp_sock *' lvalue Var 0x11e140dd8 'dp' 'struct dccp_sock *'     |   |-BreakStmt 0x11e144560 <line:27:3>     |   |-CaseStmt 0x11e1445d8 <line:28:2, <invalid sloc>> gnu_range     |   | |-ConstantExpr 0x11e144588 <col:7> 'int'     |   | | `-IntegerLiteral 0x11e144568 <col:7> 'int' 128     |   | |-ConstantExpr 0x11e1445c0 <col:15> 'int'     |   | | `-IntegerLiteral 0x11e1445a0 <col:15> 'int' 191     |   | `-NullStmt 0x11e1447e8 <<invalid sloc>>     |   |-CaseStmt 0x11e144860 <line:31:2, <invalid sloc>> gnu_range     |   | |-ConstantExpr 0x11e144810 <col:7> 'int'     |   | | `-IntegerLiteral 0x11e1447f0 <col:7> 'int' 192     |   | |-ConstantExpr 0x11e144848 <col:15> 'int'     |   | | `-IntegerLiteral 0x11e144828 <col:15> 'int' 255     |   | `-NullStmt 0x11e144a58 <<invalid sloc>>     |   `-DefaultStmt 0x11e144a68 <line:34:2, col:9>     |     `-NullStmt 0x11e144a60 <col:9>     `-ReturnStmt 0x11e144dc8 <line:41:2, col:9>       `-IntegerLiteral 0x11e144da8 <col:9> 'int' 0 ","21216":"`-FunctionDecl 0x13e1281a8  line:1:1 has_database_privilege_id_id 'int (int)'   |-ParmVarDecl 0x13e1280d8 <col:30> col:30 PG_FUNCTION_ARGS 'int'   `-CompoundStmt 0x13e140ef8 <line:2:1, line:17:1>     `-IfStmt 0x13e140c58 <line:11:2, line:12:18>       |-UnaryOperator 0x13e140b08 <line:11:6, col:71> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x13e140ad8 <col:7, col:71> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13e1286b0 <col:7> 'int ()' Function 0x13e1285f8 'SearchSysCacheExists1' 'int ()'       |   |-RecoveryExpr 0x13e140a70 <col:29> '<dependent type>' contains-errors lvalue       |   `-CallExpr 0x13e140ab0 <col:42, col:70> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x13e1287c8 <col:42> 'int ()' Function 0x13e128710 'ObjectIdGetDatum' 'int ()'       |     `-RecoveryExpr 0x13e140a90 <col:59> '<dependent type>' contains-errors lvalue       `-CallExpr 0x13e140c38 <line:12:3, col:18> 'int'         `-ImplicitCastExpr 0x13e140c20 <col:3> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x13e140c00 <col:3> 'int ()' Function 0x13e140b48 'PG_RETURN_NULL' 'int ()' ","20491":"`-FunctionDecl 0x14f9282c8  line:1:1 xpathExprTest 'int (const char *, const char *, const char *)'   |-ParmVarDecl 0x14f9280d8 <col:15, col:27> col:27 used filename 'const char *'   |-ParmVarDecl 0x14f928158 <col:37, col:49> col:49 used result 'const char *'   |-ParmVarDecl 0x14f9281d8 <line:2:15, col:27> col:27 err 'const char *'   `-CompoundStmt 0x14f928688 <line:3:45, line:5:1>     `-ReturnStmt 0x14f928678 <line:4:5, col:51>       `-ParenExpr 0x14f928658 <col:11, col:51> 'int'         `-CallExpr 0x14f9285e8 <col:12, col:50> 'int'           |-ImplicitCastExpr 0x14f9285d0 <col:12> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14f928500 <col:12> 'int ()' Function 0x14f928448 'xpathCommonTest' 'int ()'           |-ImplicitCastExpr 0x14f928628 <col:28> 'const char *' <LValueToRValue>           | `-DeclRefExpr 0x14f928520 <col:28> 'const char *' lvalue ParmVar 0x14f9280d8 'filename' 'const char *'           |-ImplicitCastExpr 0x14f928640 <col:38> 'const char *' <LValueToRValue>           | `-DeclRefExpr 0x14f928540 <col:38> 'const char *' lvalue ParmVar 0x14f928158 'result' 'const char *'           |-IntegerLiteral 0x14f928560 <col:46> 'int' 0           `-IntegerLiteral 0x14f928580 <col:49> 'int' 1 ","20373":"`-FunctionDecl 0x125941800  col:8 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x125941900 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x125941968 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1259419d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1259418a8 <<invalid sloc>> Implicit 883 ","20396":"`-FunctionDecl 0x10500dda8  line:1:1 referenced goto_tabpage 'int (int)'   |-ParmVarDecl 0x10500dcd8 <col:14, col:18> col:18 used n 'int'   `-CompoundStmt 0x105028f00 <line:2:1, line:67:1>     |-DeclStmt 0x10500df80 <line:5:5, col:11>     | `-VarDecl 0x10500df18 <col:5, col:10> col:10 used i 'int'     |-IfStmt 0x10500e2a0 <line:7:5, line:12:5>     | |-CallExpr 0x10500e118 <line:7:9, col:21> 'int'     | | `-ImplicitCastExpr 0x10500e100 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x10500e0b0 <col:9> 'int ()' Function 0x10500dff8 'text_locked' 'int ()'     | `-CompoundStmt 0x10500e280 <line:8:5, line:12:5>     |   |-CallExpr 0x10500e250 <line:10:2, col:18> 'int'     |   | `-ImplicitCastExpr 0x10500e238 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x10500e218 <col:2> 'int ()' Function 0x10500e160 'text_locked_msg' 'int ()'     |   `-ReturnStmt 0x10500e270 <line:11:2>     |-IfStmt 0x105028600 <line:16:5, line:21:5>     | |-BinaryOperator 0x10500e3e0 <line:16:9, col:35> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x10500e378 <col:9, col:24> '<dependent type>' contains-errors lvalue ->tp_next     | | | `-RecoveryExpr 0x10500e358 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x10500e3c0 <col:35> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1050285e0 <line:17:5, line:21:5>     |   |-IfStmt 0x1050285b0 <line:18:2, line:19:17>     |   | |-BinaryOperator 0x105028458 <line:18:6, col:10> 'int' '>'     |   | | |-ImplicitCastExpr 0x105028440 <col:6> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x105028400 <col:6> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'     |   | | `-IntegerLiteral 0x105028420 <col:10> 'int' 1     |   | `-CallExpr 0x105028590 <line:19:6, col:17> 'int'     |   |   `-ImplicitCastExpr 0x105028578 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x105028558 <col:6> 'int ()' Function 0x1050284a0 'beep_flush' 'int ()'     |   `-ReturnStmt 0x1050285d0 <line:20:2>     `-IfStmt 0x105028dd0 <line:23:5, line:59:5> has_else       |-BinaryOperator 0x105028678 <line:23:9, col:14> 'int' '=='       | |-ImplicitCastExpr 0x105028660 <col:9> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x105028620 <col:9> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'       | `-IntegerLiteral 0x105028640 <col:14> 'int' 0       |-CompoundStmt 0x105028870 <line:24:5, line:30:5>       `-IfStmt 0x105028da0 <line:31:10, line:59:5> has_else         |-BinaryOperator 0x1050288d8 <line:31:14, col:18> 'int' '<'         | |-ImplicitCastExpr 0x1050288c0 <col:14> 'int' <LValueToRValue>         | | `-DeclRefExpr 0x105028880 <col:14> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'         | `-IntegerLiteral 0x1050288a0 <col:18> 'int' 0         |-CompoundStmt 0x105028a70 <line:32:5, line:43:5>         | `-ForStmt 0x105028a38 <line:36:2, line:42:2>         |   |-BinaryOperator 0x105028950 <line:36:7, col:11> 'int' '='         |   | |-DeclRefExpr 0x1050288f8 <col:7> 'int' lvalue Var 0x10500df18 'i' 'int'         |   | `-ImplicitCastExpr 0x105028938 <col:11> 'int' <LValueToRValue>         |   |   `-DeclRefExpr 0x105028918 <col:11> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'         |   |-<<<NULL>>>         |   |-BinaryOperator 0x1050289c8 <col:14, col:18> 'int' '<'         |   | |-ImplicitCastExpr 0x1050289b0 <col:14> 'int' <LValueToRValue>         |   | | `-DeclRefExpr 0x105028970 <col:14> 'int' lvalue Var 0x10500df18 'i' 'int'         |   | `-IntegerLiteral 0x105028990 <col:18> 'int' 0         |   |-UnaryOperator 0x105028a08 <col:21, col:23> 'int' prefix '++'         |   | `-DeclRefExpr 0x1050289e8 <col:23> 'int' lvalue Var 0x10500df18 'i' 'int'         |   `-CompoundStmt 0x105028a28 <line:37:2, line:42:2>         `-IfStmt 0x105028d70 <line:44:10, line:59:5> has_else           |-BinaryOperator 0x105028ae0 <line:44:14, col:19> 'int' '=='           | |-ImplicitCastExpr 0x105028ac8 <col:14> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x105028a88 <col:14> 'int' lvalue ParmVar 0x10500dcd8 'n' 'int'           | `-IntegerLiteral 0x105028aa8 <col:19> 'int' 9999           |-CompoundStmt 0x105028b08 <line:45:5, line:49:5>           `-CompoundStmt 0x105028d58 <line:51:5, line:59:5>             `-IfStmt 0x105028d38 <line:54:2, line:58:2>               |-RecoveryExpr 0x105028c90 <line:54:6, col:12> '_Bool' contains-errors               `-CompoundStmt 0x105028d18 <line:55:2, line:58:2>                 |-CallExpr 0x105028ce8 <line:56:6, col:17> 'int'                 | `-ImplicitCastExpr 0x105028cd0 <col:6> 'int (*)()' <FunctionToPointerDecay>                 |   `-DeclRefExpr 0x105028cb0 <col:6> 'int ()' Function 0x1050284a0 'beep_flush' 'int ()'                 `-ReturnStmt 0x105028d08 <line:57:6> ","20526":"`-FunctionDecl 0x150128750  line:1:13 uvc_delete 'void (struct kref *)' static   |-ParmVarDecl 0x150128648 <col:24, col:37> col:37 used kref 'struct kref *'   `-CompoundStmt 0x148009ee0 <line:2:1, line:40:1>     |-DeclStmt 0x150144fe0 <line:3:2, col:69>     | |-RecordDecl 0x150144c48 <col:2, col:9> col:9 struct uvc_device     | `-VarDecl 0x150144db8 <col:2, col:21> col:21 used dev 'struct uvc_device *'     |-DeclStmt 0x150145280 <line:4:2, col:25>     | |-RecordDecl 0x150144ff8 <col:2, col:9> col:9 struct list_head     | |-VarDecl 0x150145168 <col:2, col:20> col:20 used p 'struct list_head *'     | `-VarDecl 0x1501451f8 <col:2, col:24> col:24 used n 'struct list_head *'     |-CallExpr 0x150145408 <line:6:2, col:24> 'int'     | |-ImplicitCastExpr 0x1501453f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150145378 <col:2> 'int ()' Function 0x1501452c0 'uvc_status_cleanup' 'int ()'     | `-ImplicitCastExpr 0x150145430 <col:21> 'struct uvc_device *' <LValueToRValue>     |   `-DeclRefExpr 0x150145398 <col:21> 'struct uvc_device *' lvalue Var 0x150144db8 'dev' 'struct uvc_device *'     |-CallExpr 0x150145580 <line:7:2, col:29> 'int'     | |-ImplicitCastExpr 0x150145568 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150145528 <col:2> 'int ()' Function 0x150145470 'uvc_ctrl_cleanup_device' 'int ()'     | `-ImplicitCastExpr 0x1501455a8 <col:26> 'struct uvc_device *' <LValueToRValue>     |   `-DeclRefExpr 0x150145548 <col:26> 'struct uvc_device *' lvalue Var 0x150144db8 'dev' 'struct uvc_device *'     |-CallExpr 0x150145720 <line:9:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1501456a0 <col:2> 'int ()' Function 0x1501455e8 'usb_put_intf' 'int ()'     | `-RecoveryExpr 0x1501456f8 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1501456c0 <col:15> 'struct uvc_device *' lvalue Var 0x150144db8 'dev' 'struct uvc_device *'     |-CallExpr 0x1501458a8 <line:10:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150145828 <col:2> 'int ()' Function 0x150145770 'usb_put_dev' 'int ()'     | `-RecoveryExpr 0x150145880 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x150145848 <col:14> 'struct uvc_device *' lvalue Var 0x150144db8 'dev' 'struct uvc_device *'     |-CallExpr 0x150145a88 <line:16:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1501459b0 <col:2> 'int ()' Function 0x1501458f8 'list_for_each_safe' 'int ()'     | |-DeclRefExpr 0x1501459d0 <col:21> 'struct list_head *' lvalue Var 0x150145168 'p' 'struct list_head *'     | |-DeclRefExpr 0x1501459f0 <col:24> 'struct list_head *' lvalue Var 0x1501451f8 'n' 'struct list_head *'     | `-UnaryOperator 0x150145a70 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x150145a48 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x150145a10 <col:28> 'struct uvc_device *' lvalue Var 0x150144db8 'dev' 'struct uvc_device *'     |-CompoundStmt 0x148009390 <col:41, line:20:2>     | |-DeclStmt 0x1480090a8 <line:17:3, col:32>     | | |-RecordDecl 0x150145ac0 <col:3, col:10> col:10 struct uvc_video_chain     | | `-VarDecl 0x148009028 <col:3, col:27> col:27 used chain 'struct uvc_video_chain *'     | `-CallExpr 0x148009350 <line:19:3, col:14> 'int'     |   |-ImplicitCastExpr 0x148009338 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1480092f8 <col:3> 'int ()' Function 0x148009240 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x148009378 <col:9> 'struct uvc_video_chain *' <LValueToRValue>     |     `-DeclRefExpr 0x148009318 <col:9> 'struct uvc_video_chain *' lvalue Var 0x148009028 'chain' 'struct uvc_video_chain *'     |-CallExpr 0x148009488 <line:22:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1480093b0 <col:2> 'int ()' Function 0x1501458f8 'list_for_each_safe' 'int ()'     | |-DeclRefExpr 0x1480093d0 <col:21> 'struct list_head *' lvalue Var 0x150145168 'p' 'struct list_head *'     | |-DeclRefExpr 0x1480093f0 <col:24> 'struct list_head *' lvalue Var 0x1501451f8 'n' 'struct list_head *'     | `-UnaryOperator 0x148009470 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148009448 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148009410 <col:28> 'struct uvc_device *' lvalue Var 0x150144db8 'dev' 'struct uvc_device *'     |-CompoundStmt 0x1480097b8 <col:43, line:29:2>     | |-DeclStmt 0x1480096a8 <line:23:3, col:28>     | | |-RecordDecl 0x1480094c0 <col:3, col:10> col:10 struct uvc_entity     | | `-VarDecl 0x148009628 <col:3, col:22> col:22 used entity 'struct uvc_entity *'     | `-CallExpr 0x148009778 <line:28:3, col:15> 'int'     |   |-ImplicitCastExpr 0x148009760 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x148009720 <col:3> 'int ()' Function 0x148009240 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x1480097a0 <col:9> 'struct uvc_entity *' <LValueToRValue>     |     `-DeclRefExpr 0x148009740 <col:9> 'struct uvc_entity *' lvalue Var 0x148009628 'entity' 'struct uvc_entity *'     |-CallExpr 0x1480098b0 <line:31:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1480097d8 <col:2> 'int ()' Function 0x1501458f8 'list_for_each_safe' 'int ()'     | |-DeclRefExpr 0x1480097f8 <col:21> 'struct list_head *' lvalue Var 0x150145168 'p' 'struct list_head *'     | |-DeclRefExpr 0x148009818 <col:24> 'struct list_head *' lvalue Var 0x1501451f8 'n' 'struct list_head *'     | `-UnaryOperator 0x148009898 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x148009870 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148009838 <col:28> 'struct uvc_device *' lvalue Var 0x150144db8 'dev' 'struct uvc_device *'     |-CompoundStmt 0x148009e28 <col:42, line:37:2>     | |-DeclStmt 0x148009ad8 <line:32:3, col:34>     | | |-RecordDecl 0x1480098e8 <col:3, col:10> col:10 struct uvc_streaming     | | `-VarDecl 0x148009a58 <col:3, col:25> col:25 used streaming 'struct uvc_streaming *'     | `-CallExpr 0x148009de8 <line:36:3, col:30> 'int'     |   |-ImplicitCastExpr 0x148009dd0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x148009d90 <col:3> 'int ()' Function 0x148009cd8 'uvc_stream_delete' 'int ()'     |   `-ImplicitCastExpr 0x148009e10 <col:21> 'struct uvc_streaming *' <LValueToRValue>     |     `-DeclRefExpr 0x148009db0 <col:21> 'struct uvc_streaming *' lvalue Var 0x148009a58 'streaming' 'struct uvc_streaming *'     `-CallExpr 0x148009ea0 <line:39:2, col:11> 'int'       |-ImplicitCastExpr 0x148009e88 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x148009e48 <col:2> 'int ()' Function 0x148009240 'kfree' 'int ()'       `-ImplicitCastExpr 0x148009ec8 <col:8> 'struct uvc_device *' <LValueToRValue>         `-DeclRefExpr 0x148009e68 <col:8> 'struct uvc_device *' lvalue Var 0x150144db8 'dev' 'struct uvc_device *' ","21239":"`-FunctionDecl 0x1591281f8  line:1:1 invalid z2restore 'int (int *)'   |-ParmVarDecl 0x159128128 <col:11, col:20> col:20 invalid i_ctx_p 'int *'   `-CompoundStmt 0x159141f00 <line:2:1, line:11:1>     |-WhileStmt 0x159141b68 <line:3:5, line:7:5>     | |-CallExpr 0x1591284f0 <line:3:12, col:48> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x159128400 <col:12> 'int ()' Function 0x159128348 'gs_gstate_saved' 'int ()'     | | `-CallExpr 0x1591284c8 <col:28, col:47> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x159128420 <col:28> 'int ()' Function 0x159128348 'gs_gstate_saved' 'int ()'     | |   `-RecoveryExpr 0x1591284a8 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x159141b48 <col:51, line:7:5>     |   |-IfStmt 0x1591419a0 <line:4:9, line:5:47>     |   | |-CallExpr 0x159128728 <line:4:13, col:58> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1591285f8 <col:13> 'int ()' Function 0x159128540 'restore_page_device' 'int ()'     |   | | |-RecoveryExpr 0x1591286c0 <col:33> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x159128700 <col:38, col:57> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x159128630 <col:38> 'int ()' Function 0x159128348 'gs_gstate_saved' 'int ()'     |   | |   `-RecoveryExpr 0x1591286e0 <col:54> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x159141990 <line:5:13, col:47>     |   |   `-CallExpr 0x159141960 <col:20, col:47> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1591418b8 <col:20> 'int ()' Function 0x159141800 'push_callout' 'int ()'     |   |     |-RecoveryExpr 0x1591418d8 <col:33> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x159141940 <col:42> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x159141b20 <line:6:9, col:24> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x159141aa0 <col:9> 'int ()' Function 0x1591419e8 'gs_grestore' 'int ()'     |     `-RecoveryExpr 0x159141b00 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159141d88 <line:8:5, line:9:43>     | |-CallExpr 0x159141cb8 <line:8:9, col:54> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x159141b88 <col:9> 'int ()' Function 0x159128540 'restore_page_device' 'int ()'     | | |-RecoveryExpr 0x159141c50 <col:29> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x159141c90 <col:34, col:53> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x159141bc0 <col:34> 'int ()' Function 0x159128348 'gs_gstate_saved' 'int ()'     | |   `-RecoveryExpr 0x159141c70 <col:50> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x159141d78 <line:9:9, col:43>     |   `-CallExpr 0x159141d48 <col:16, col:43> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x159141ce8 <col:16> 'int ()' Function 0x159141800 'push_callout' 'int ()'     |     |-RecoveryExpr 0x159141d08 <col:29> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x159141d28 <col:38> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x159141ef0 <line:10:5, col:28>       `-CallExpr 0x159141ec8 <col:12, col:28> '<dependent type>' contains-errors         |-DeclRefExpr 0x159141e88 <col:12> 'int ()' Function 0x159141dd0 'zrestore' 'int ()'         `-RecoveryExpr 0x159141ea8 <col:21> '<dependent type>' contains-errors lvalue ","20747":"`-FunctionDecl 0x12092d178  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12092d278 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12092d2e0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12092d348 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12092d220 <<invalid sloc>> Implicit 882 ","20859":"`-FunctionDecl 0x14009ba88  line:1:23 invalid pcnet_get_next_poll_time 'int (int *, int)' static inline   |-ParmVarDecl 0x14009b928 <col:48, col:60> col:60 invalid s 'int *'   |-ParmVarDecl 0x14009b9a8 <col:63, col:71> col:71 invalid current_time 'int'   `-CompoundStmt 0x14009bcb0 <line:2:1, line:10:1>     |-IfStmt 0x14009bc48 <line:6:5, line:8:5>     | |-BinaryOperator 0x14009bbb8 <line:6:9, col:22> 'int' contains-errors '<='     | | |-RecoveryExpr 0x14009bb98 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14009bb58 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14009bc38 <col:36, line:8:5>     `-ReturnStmt 0x14009bca0 <line:9:5, col:12>       `-RecoveryExpr 0x14009bc80 <col:12> '<dependent type>' contains-errors lvalue ","20397":"`-FunctionDecl 0x12f008bb0  col:32 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12f008cb0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12f008c58 <<invalid sloc>> Implicit 902 ","20803":"`-FunctionDecl 0x14f128d38  line:1:1 invalid ews_backend_authenticate_sync 'int (int *, const int *, char **, int *, int *, int **)'   |-ParmVarDecl 0x14f128928 <col:32, col:42> col:42 invalid backend 'int *'   |-ParmVarDecl 0x14f1289a8 <line:2:11, col:35> col:35 invalid credentials 'const int *'   |-ParmVarDecl 0x14f128a58 <line:3:11, col:19> col:19 out_certificate_pem 'char **'   |-ParmVarDecl 0x14f128ad8 <line:4:11, col:33> col:33 invalid out_certificate_errors 'int *'   |-ParmVarDecl 0x14f128b58 <line:5:11, col:25> col:25 invalid cancellable 'int *'   |-ParmVarDecl 0x14f128c10 <line:6:11, col:20> col:20 invalid error 'int **'   `-CompoundStmt 0x14f1432f0 <line:7:1, line:40:1>     |-CallExpr 0x14f142188 <line:13:2, col:81> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f128fb0 <col:2> 'int ()' Function 0x14f128ef8 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x14f1420f8 <col:24, col:49> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14f1420b8 <col:24> 'int ()' Function 0x14f142000 'E_IS_EWS_BACKEND' 'int ()'     | | `-RecoveryExpr 0x14f1420d8 <col:42> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14f142168 <col:52> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14f1432c0 <line:28:2, line:37:2> has_else       |-RecoveryExpr 0x14f142ac8 <line:28:6, col:16> '_Bool' contains-errors       |-CompoundStmt 0x14f142e80 <col:50, line:32:2>       | `-CallExpr 0x14f142d50 <line:29:3, col:90> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14f142bc8 <col:3> 'int ()' Function 0x14f142b10 'e_collection_backend_authenticate_children' 'int ()'       |   |-CallExpr 0x14f142d08 <col:47, col:76> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x14f142cc8 <col:47> 'int ()' Function 0x14f142c10 'E_COLLECTION_BACKEND' 'int ()'       |   | `-RecoveryExpr 0x14f142ce8 <col:69> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14f142d30 <col:79> '<dependent type>' contains-errors lvalue       `-IfStmt 0x14f1432a0 <line:32:9, line:37:2>         |-RecoveryExpr 0x14f1430f8 <line:32:13, line:34:75> '_Bool' contains-errors         `-CompoundStmt 0x14f143288 <col:78, line:37:2>           `-CallExpr 0x14f143268 <line:35:3, col:53> 'int'             `-ImplicitCastExpr 0x14f143250 <col:3> 'int (*)()' <FunctionToPointerDecay>               `-DeclRefExpr 0x14f1431f8 <col:3> 'int ()' Function 0x14f143140 'e_ews_connection_utils_force_off_ntlm_auth_check' 'int ()' ","21052":"`-FunctionDecl 0x129128310  line:1:13 invalid reds_set_one_channel_security 'void (int *, int, int)' static   |-ParmVarDecl 0x129128128 <col:43, col:54> col:54 referenced invalid reds 'int *'   |-ParmVarDecl 0x1291281a8 <col:60, col:64> col:64 used id 'int'   |-ParmVarDecl 0x129128228 <col:68, col:77> col:77 invalid security 'int'   `-CompoundStmt 0x129141a40 <line:2:1, line:14:1>     |-IfStmt 0x129128678 <line:5:5, line:8:5>     | |-RecoveryExpr 0x129128610 <line:5:9, col:65> '_Bool' contains-errors     | `-CompoundStmt 0x129128660 <col:68, line:8:5>     |   `-ReturnStmt 0x129128650 <line:7:9>     `-BinaryOperator 0x129141a20 <line:13:5, col:39> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x129141980 <col:5, col:19> '<dependent type>' contains-errors lvalue ->channels_security       | `-CXXDependentScopeMemberExpr 0x129141938 <col:5, col:11> '<dependent type>' contains-errors lvalue ->config       |   `-RecoveryExpr 0x129141910 <col:5> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x1291418f0 <col:5> 'int *' lvalue ParmVar 0x129128128 'reds' 'int *'       `-RecoveryExpr 0x129141a00 <col:39> '<dependent type>' contains-errors lvalue ","20903":"`-FunctionDecl 0x15a80de80  line:1:6 invalid gpp_write_box 'void (int *, int *)'   |-ParmVarDecl 0x15a80dd28 <col:20, col:34> col:34 invalid bs 'int *'   |-ParmVarDecl 0x15a80dda8 <col:38, col:52> col:52 invalid rec 'int *'   `-CompoundStmt 0x15a827400 <line:2:1, line:7:1>     |-CallExpr 0x15a80e138 <line:3:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a80e090 <col:2> 'int ()' Function 0x15a80dfd8 'gf_bs_write_u16' 'int ()'     | |-RecoveryExpr 0x15a80e0b0 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x15a80e0f0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->top     |   `-RecoveryExpr 0x15a80e0d0 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a80e210 <line:4:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a80e168 <col:2> 'int ()' Function 0x15a80dfd8 'gf_bs_write_u16' 'int ()'     | |-RecoveryExpr 0x15a80e188 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x15a80e1c8 <col:22, col:27> '<dependent type>' contains-errors lvalue ->left     |   `-RecoveryExpr 0x15a80e1a8 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a80e2e8 <line:5:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a80e240 <col:2> 'int ()' Function 0x15a80dfd8 'gf_bs_write_u16' 'int ()'     | |-RecoveryExpr 0x15a80e260 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x15a80e2a0 <col:22, col:27> '<dependent type>' contains-errors lvalue ->bottom     |   `-RecoveryExpr 0x15a80e280 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x15a80e3c0 <line:6:2, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x15a80e318 <col:2> 'int ()' Function 0x15a80dfd8 'gf_bs_write_u16' 'int ()'       |-RecoveryExpr 0x15a80e338 <col:18> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x15a80e378 <col:22, col:27> '<dependent type>' contains-errors lvalue ->right         `-RecoveryExpr 0x15a80e358 <col:22> '<dependent type>' contains-errors lvalue ","20631":"`-FunctionDecl 0x1369281a8  line:1:14 urlUnescape 'char *(char *)' static   |-ParmVarDecl 0x1369280d8 <col:26, col:32> col:32 used s 'char *'   `-CompoundStmt 0x136942ce0 <col:35, line:27:1>     |-DeclStmt 0x136928340 <line:2:3, col:20>     | `-VarDecl 0x1369282b8 <col:3, col:19> col:7 used warned 'int' cinit     |   `-IntegerLiteral 0x136928320 <col:19> 'int' 0     |-DeclStmt 0x136928410 <line:3:3, col:20>     | `-VarDecl 0x136928370 <col:3, col:19> col:9 used r 'char *' cinit     |   `-ImplicitCastExpr 0x1369283f8 <col:19> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x1369283d8 <col:19> 'char *' lvalue ParmVar 0x1369280d8 's' 'char *'     |-ForStmt 0x136942bc0 <line:4:3, line:24:3>     | |-DeclStmt 0x1369284e0 <line:4:8, col:20>     | | `-VarDecl 0x136928440 <col:8, col:19> col:14 used u 'char *' cinit     | |   `-ImplicitCastExpr 0x1369284c8 <col:19> 'char *' <LValueToRValue>     | |     `-DeclRefExpr 0x1369284a8 <col:19> 'char *' lvalue ParmVar 0x1369280d8 's' 'char *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x136928548 <col:22, col:23> 'char' <LValueToRValue>     | | `-UnaryOperator 0x136928530 <col:22, col:23> 'char' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x136928518 <col:23> 'char *' <LValueToRValue>     | |     `-DeclRefExpr 0x1369284f8 <col:23> 'char *' lvalue Var 0x136928440 'u' 'char *'     | |-<<<NULL>>>     | `-CompoundStmt 0x136942b98 <col:28, line:24:3>     |   |-DeclStmt 0x136928640 <line:5:5, col:23>     |   | `-VarDecl 0x136928570 <col:5, col:21> col:10 used ch 'char' cinit     |   |   `-ImplicitCastExpr 0x136928628 <col:19, col:21> 'char' <LValueToRValue>     |   |     `-UnaryOperator 0x136928610 <col:19, col:21> 'char' lvalue prefix '*' cannot overflow     |   |       `-UnaryOperator 0x1369285f8 <col:20, col:21> 'char *' postfix '++'     |   |         `-DeclRefExpr 0x1369285d8 <col:20> 'char *' lvalue Var 0x136928440 'u' 'char *'     |   |-IfStmt 0x136942ac0 <line:6:5, line:22:5> has_else     |   | |-BinaryOperator 0x1369286c0 <line:6:9, col:15> 'int' '=='     |   | | |-ImplicitCastExpr 0x1369286a8 <col:9> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x136928690 <col:9> 'char' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x136928658 <col:9> 'char' lvalue Var 0x136928570 'ch' 'char'     |   | | `-CharacterLiteral 0x136928678 <col:15> 'int' 43     |   | |-CompoundStmt 0x136928750 <col:20, line:8:5>     |   | | `-BinaryOperator 0x136928730 <line:7:7, col:19> 'char' '='     |   | |   |-DeclRefExpr 0x1369286e0 <col:7> 'char' lvalue Var 0x136928570 'ch' 'char'     |   | |   `-ImplicitCastExpr 0x136928718 <col:19> 'char' <IntegralCast>     |   | |     `-CharacterLiteral 0x136928700 <col:19> 'int' 32     |   | `-IfStmt 0x136942aa0 <line:8:12, line:22:5>     |   |   |-BinaryOperator 0x1369287d0 <line:8:16, col:22> 'int' '=='     |   |   | |-ImplicitCastExpr 0x1369287b8 <col:16> 'int' <IntegralCast>     |   |   | | `-ImplicitCastExpr 0x1369287a0 <col:16> 'char' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x136928768 <col:16> 'char' lvalue Var 0x136928570 'ch' 'char'     |   |   | `-CharacterLiteral 0x136928788 <col:22> 'int' 37     |   |   `-CompoundStmt 0x136942a80 <col:27, line:22:5>     |   |     |-DeclStmt 0x136940ad0 <line:9:7, col:21>     |   |     | `-VarDecl 0x136940a00 <col:7, col:20> col:12 used c1 'char' cinit     |   |     |   `-ImplicitCastExpr 0x136940ab8 <col:19, col:20> 'char' <LValueToRValue>     |   |     |     `-UnaryOperator 0x136940aa0 <col:19, col:20> 'char' lvalue prefix '*' cannot overflow     |   |     |       `-ImplicitCastExpr 0x136940a88 <col:20> 'char *' <LValueToRValue>     |   |     |         `-DeclRefExpr 0x136940a68 <col:20> 'char *' lvalue Var 0x136928440 'u' 'char *'     |   |     `-IfStmt 0x136942a50 <line:10:7, line:21:7> has_else     |   |       |-BinaryOperator 0x136940df8 <line:10:11, col:73> 'int' '||'     |   |       | |-ParenExpr 0x136940c18 <col:11, col:34> 'int'     |   |       | | `-BinaryOperator 0x136940bf8 <col:12, col:31> 'int' '&&'     |   |       | |   |-BinaryOperator 0x136940b50 <col:12, col:18> 'int' '>='     |   |       | |   | |-ImplicitCastExpr 0x136940b38 <col:12> 'int' <IntegralCast>     |   |       | |   | | `-ImplicitCastExpr 0x136940b20 <col:12> 'char' <LValueToRValue>     |   |       | |   | |   `-DeclRefExpr 0x136940ae8 <col:12> 'char' lvalue Var 0x136940a00 'c1' 'char'     |   |       | |   | `-CharacterLiteral 0x136940b08 <col:18> 'int' 48     |   |       | |   `-BinaryOperator 0x136940bd8 <col:25, col:31> 'int' '<='     |   |       | |     |-ImplicitCastExpr 0x136940bc0 <col:25> 'int' <IntegralCast>     |   |       | |     | `-ImplicitCastExpr 0x136940ba8 <col:25> 'char' <LValueToRValue>     |   |       | |     |   `-DeclRefExpr 0x136940b70 <col:25> 'char' lvalue Var 0x136940a00 'c1' 'char'     |   |       | |     `-CharacterLiteral 0x136940b90 <col:31> 'int' 57     |   |       | `-ParenExpr 0x136940dd8 <col:39, col:73> 'int'     |   |       |   `-BinaryOperator 0x136940db8 <col:40, col:70> 'int' '&&'     |   |       |     |-BinaryOperator 0x136940d10 <col:40, col:57> 'int' '>='     |   |       |     | |-ImplicitCastExpr 0x136940cf8 <col:40, col:52> 'int' <IntegralCast>     |   |       |     | | `-ParenExpr 0x136940cc0 <col:40, col:52> 'char'     |   |       |     | |   `-CompoundAssignOperator 0x136940c90 <col:41, col:48> 'char' '&=' ComputeLHSTy='int' ComputeResultTy='int'     |   |       |     | |     |-DeclRefExpr 0x136940c38 <col:41> 'char' lvalue Var 0x136940a00 'c1' 'char'     |   |       |     | |     `-UnaryOperator 0x136940c78 <col:47, col:48> 'int' prefix '~' cannot overflow     |   |       |     | |       `-IntegerLiteral 0x136940c58 <col:48> 'int' 32     |   |       |     | `-CharacterLiteral 0x136940ce0 <col:57> 'int' 65     |   |       |     `-BinaryOperator 0x136940d98 <col:64, col:70> 'int' '<='     |   |       |       |-ImplicitCastExpr 0x136940d80 <col:64> 'int' <IntegralCast>     |   |       |       | `-ImplicitCastExpr 0x136940d68 <col:64> 'char' <LValueToRValue>     |   |       |       |   `-DeclRefExpr 0x136940d30 <col:64> 'char' lvalue Var 0x136940a00 'c1' 'char'     |   |       |       `-CharacterLiteral 0x136940d50 <col:70> 'int' 70     |   |       |-CompoundStmt 0x1369428c8 <col:76, line:19:7>     |   |       | |-BinaryOperator 0x136941008 <line:11:9, col:50> 'char' '='     |   |       | | |-DeclRefExpr 0x136940e18 <col:9> 'char' lvalue Var 0x136928570 'ch' 'char'     |   |       | | `-ImplicitCastExpr 0x136940ff0 <col:19, col:50> 'char' <IntegralCast>     |   |       | |   `-BinaryOperator 0x136940fd0 <col:19, col:50> 'int' '-'     |   |       | |     |-ImplicitCastExpr 0x136940fb8 <col:19> 'int' <IntegralCast>     |   |       | |     | `-ImplicitCastExpr 0x136940fa0 <col:19> 'char' <LValueToRValue>     |   |       | |     |   `-DeclRefExpr 0x136940e38 <col:19> 'char' lvalue Var 0x136940a00 'c1' 'char'     |   |       | |     `-ParenExpr 0x136940f80 <col:24, col:50> 'int'     |   |       | |       `-ConditionalOperator 0x136940f50 <col:25, col:47> 'int'     |   |       | |         |-BinaryOperator 0x136940ec0 <col:25, col:30> 'int' '>'     |   |       | |         | |-ImplicitCastExpr 0x136940ea8 <col:25> 'int' <IntegralCast>     |   |       | |         | | `-ImplicitCastExpr 0x136940e90 <col:25> 'char' <LValueToRValue>     |   |       | |         | |   `-DeclRefExpr 0x136940e58 <col:25> 'char' lvalue Var 0x136940a00 'c1' 'char'     |   |       | |         | `-CharacterLiteral 0x136940e78 <col:30> 'int' 57     |   |       | |         |-BinaryOperator 0x136940f18 <col:36, col:42> 'int' '-'     |   |       | |         | |-CharacterLiteral 0x136940ee0 <col:36> 'int' 65     |   |       | |         | `-IntegerLiteral 0x136940ef8 <col:42> 'int' 10     |   |       | |         `-CharacterLiteral 0x136940f38 <col:47> 'int' 48     |   |       | |-DeclStmt 0x136941108 <line:12:9, col:23>     |   |       | | `-VarDecl 0x136941038 <col:9, col:22> col:14 used c2 'char' cinit     |   |       | |   `-ImplicitCastExpr 0x1369410f0 <col:19, col:22> 'char' <LValueToRValue>     |   |       | |     `-UnaryOperator 0x1369410d8 <col:19, col:22> 'char' lvalue prefix '*' cannot overflow     |   |       | |       `-UnaryOperator 0x1369410c0 <col:20, col:22> 'char *' prefix '++'     |   |       | |         `-DeclRefExpr 0x1369410a0 <col:22> 'char *' lvalue Var 0x136928440 'u' 'char *'     |   |       | `-IfStmt 0x136942898 <line:13:9, line:18:9> has_else     |   |       |   |-BinaryOperator 0x136941430 <line:13:13, col:75> 'int' '||'     |   |       |   | |-ParenExpr 0x136941250 <col:13, col:36> 'int'     |   |       |   | | `-BinaryOperator 0x136941230 <col:14, col:33> 'int' '&&'     |   |       |   | |   |-BinaryOperator 0x136941188 <col:14, col:20> 'int' '>='     |   |       |   | |   | |-ImplicitCastExpr 0x136941170 <col:14> 'int' <IntegralCast>     |   |       |   | |   | | `-ImplicitCastExpr 0x136941158 <col:14> 'char' <LValueToRValue>     |   |       |   | |   | |   `-DeclRefExpr 0x136941120 <col:14> 'char' lvalue Var 0x136941038 'c2' 'char'     |   |       |   | |   | `-CharacterLiteral 0x136941140 <col:20> 'int' 48     |   |       |   | |   `-BinaryOperator 0x136941210 <col:27, col:33> 'int' '<='     |   |       |   | |     |-ImplicitCastExpr 0x1369411f8 <col:27> 'int' <IntegralCast>     |   |       |   | |     | `-ImplicitCastExpr 0x1369411e0 <col:27> 'char' <LValueToRValue>     |   |       |   | |     |   `-DeclRefExpr 0x1369411a8 <col:27> 'char' lvalue Var 0x136941038 'c2' 'char'     |   |       |   | |     `-CharacterLiteral 0x1369411c8 <col:33> 'int' 57     |   |       |   | `-ParenExpr 0x136941410 <col:41, col:75> 'int'     |   |       |   |   `-BinaryOperator 0x1369413f0 <col:42, col:72> 'int' '&&'     |   |       |   |     |-BinaryOperator 0x136941348 <col:42, col:59> 'int' '>='     |   |       |   |     | |-ImplicitCastExpr 0x136941330 <col:42, col:54> 'int' <IntegralCast>     |   |       |   |     | | `-ParenExpr 0x1369412f8 <col:42, col:54> 'char'     |   |       |   |     | |   `-CompoundAssignOperator 0x1369412c8 <col:43, col:50> 'char' '&=' ComputeLHSTy='int' ComputeResultTy='int'     |   |       |   |     | |     |-DeclRefExpr 0x136941270 <col:43> 'char' lvalue Var 0x136941038 'c2' 'char'     |   |       |   |     | |     `-UnaryOperator 0x1369412b0 <col:49, col:50> 'int' prefix '~' cannot overflow     |   |       |   |     | |       `-IntegerLiteral 0x136941290 <col:50> 'int' 32     |   |       |   |     | `-CharacterLiteral 0x136941318 <col:59> 'int' 65     |   |       |   |     `-BinaryOperator 0x1369413d0 <col:66, col:72> 'int' '<='     |   |       |   |       |-ImplicitCastExpr 0x1369413b8 <col:66> 'int' <IntegralCast>     |   |       |   |       | `-ImplicitCastExpr 0x1369413a0 <col:66> 'char' <LValueToRValue>     |   |       |   |       |   `-DeclRefExpr 0x136941368 <col:66> 'char' lvalue Var 0x136941038 'c2' 'char'     |   |       |   |       `-CharacterLiteral 0x136941388 <col:72> 'int' 70     |   |       |   |-CompoundStmt 0x136941768 <col:78, line:16:9>     |   |       |   | |-BinaryOperator 0x136941710 <line:14:11, col:62> 'char' '='     |   |       |   | | |-DeclRefExpr 0x136941450 <col:11> 'char' lvalue Var 0x136928570 'ch' 'char'     |   |       |   | | `-ImplicitCastExpr 0x1369416f8 <col:19, col:62> 'char' <IntegralCast>     |   |       |   | |   `-BinaryOperator 0x1369416d8 <col:19, col:62> 'int' '-'     |   |       |   | |     |-BinaryOperator 0x136941570 <col:19, col:31> 'int' '+'     |   |       |   | |     | |-ParenExpr 0x136941500 <col:19, col:27> 'int'     |   |       |   | |     | | `-BinaryOperator 0x1369414e0 <col:20, col:26> 'int' '<<'     |   |       |   | |     | |   |-ImplicitCastExpr 0x1369414c8 <col:20> 'int' <IntegralCast>     |   |       |   | |     | |   | `-ImplicitCastExpr 0x1369414b0 <col:20> 'char' <LValueToRValue>     |   |       |   | |     | |   |   `-DeclRefExpr 0x136941470 <col:20> 'char' lvalue Var 0x136928570 'ch' 'char'     |   |       |   | |     | |   `-IntegerLiteral 0x136941490 <col:26> 'int' 4     |   |       |   | |     | `-ImplicitCastExpr 0x136941558 <col:31> 'int' <IntegralCast>     |   |       |   | |     |   `-ImplicitCastExpr 0x136941540 <col:31> 'char' <LValueToRValue>     |   |       |   | |     |     `-DeclRefExpr 0x136941520 <col:31> 'char' lvalue Var 0x136941038 'c2' 'char'     |   |       |   | |     `-ParenExpr 0x1369416b8 <col:36, col:62> 'int'     |   |       |   | |       `-ConditionalOperator 0x136941688 <col:37, col:59> 'int'     |   |       |   | |         |-BinaryOperator 0x1369415f8 <col:37, col:42> 'int' '>'     |   |       |   | |         | |-ImplicitCastExpr 0x1369415e0 <col:37> 'int' <IntegralCast>     |   |       |   | |         | | `-ImplicitCastExpr 0x1369415c8 <col:37> 'char' <LValueToRValue>     |   |       |   | |         | |   `-DeclRefExpr 0x136941590 <col:37> 'char' lvalue Var 0x136941038 'c2' 'char'     |   |       |   | |         | `-CharacterLiteral 0x1369415b0 <col:42> 'int' 57     |   |       |   | |         |-BinaryOperator 0x136941650 <col:48, col:54> 'int' '-'     |   |       |   | |         | |-CharacterLiteral 0x136941618 <col:48> 'int' 65     |   |       |   | |         | `-IntegerLiteral 0x136941630 <col:54> 'int' 10     |   |       |   | |         `-CharacterLiteral 0x136941670 <col:59> 'int' 48     |   |       |   | `-UnaryOperator 0x136941750 <line:15:11, col:13> 'char *' prefix '++'     |   |       |   |   `-DeclRefExpr 0x136941730 <col:13> 'char *' lvalue Var 0x136928440 'u' 'char *'     |   |       |   `-IfStmt 0x136942878 <line:16:16, line:18:9>     |   |       |     |-UnaryOperator 0x1369417c0 <line:16:20, col:27> 'int' prefix '!' cannot overflow     |   |       |     | `-UnaryOperator 0x1369417a8 <col:21, col:27> 'int' postfix '++'     |   |       |     |   `-DeclRefExpr 0x136941788 <col:21> 'int' lvalue Var 0x1369282b8 'warned' 'int'     |   |       |     `-CompoundStmt 0x136942860 <col:31, line:18:9>     |   |       |       `-CallExpr 0x136942800 <line:17:11, col:24> 'int'     |   |       |         |-ImplicitCastExpr 0x1369419d0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |       |         | `-DeclRefExpr 0x136941900 <col:11> 'int ()' Function 0x136941848 'warn' 'int ()'     |   |       |         |-ImplicitCastExpr 0x136942830 <col:16> 'char *' <ArrayToPointerDecay>     |   |       |         | `-StringLiteral 0x136941960 <col:16> 'char[4]' lvalue \"STR\"     |   |       |         `-ImplicitCastExpr 0x136942848 <col:23> 'char *' <LValueToRValue>     |   |       |           `-DeclRefExpr 0x136941980 <col:23> 'char *' lvalue Var 0x136928370 'r' 'char *'     |   |       `-IfStmt 0x136942a30 <line:19:14, line:21:7>     |   |         |-UnaryOperator 0x136942928 <line:19:18, col:25> 'int' prefix '!' cannot overflow     |   |         | `-UnaryOperator 0x136942910 <col:19, col:25> 'int' postfix '++'     |   |         |   `-DeclRefExpr 0x1369428f0 <col:19> 'int' lvalue Var 0x1369282b8 'warned' 'int'     |   |         `-CompoundStmt 0x136942a18 <col:29, line:21:7>     |   |           `-CallExpr 0x1369429b8 <line:20:9, col:22> 'int'     |   |             |-ImplicitCastExpr 0x1369429a0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |             | `-DeclRefExpr 0x136942940 <col:9> 'int ()' Function 0x136941848 'warn' 'int ()'     |   |             |-ImplicitCastExpr 0x1369429e8 <col:14> 'char *' <ArrayToPointerDecay>     |   |             | `-StringLiteral 0x136942960 <col:14> 'char[4]' lvalue \"STR\"     |   |             `-ImplicitCastExpr 0x136942a00 <col:21> 'char *' <LValueToRValue>     |   |               `-DeclRefExpr 0x136942980 <col:21> 'char *' lvalue Var 0x136928370 'r' 'char *'     |   `-BinaryOperator 0x136942b78 <line:23:5, col:19> 'char' '='     |     |-UnaryOperator 0x136942b28 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow     |     | `-UnaryOperator 0x136942b10 <col:6, col:7> 'char *' postfix '++'     |     |   `-DeclRefExpr 0x136942af0 <col:6> 'char *' lvalue ParmVar 0x1369280d8 's' 'char *'     |     `-ImplicitCastExpr 0x136942b60 <col:19> 'char' <LValueToRValue>     |       `-DeclRefExpr 0x136942b40 <col:19> 'char' lvalue Var 0x136928570 'ch' 'char'     |-BinaryOperator 0x136942c78 <line:25:3, col:19> 'char' '='     | |-UnaryOperator 0x136942c30 <col:3, col:4> 'char' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x136942c18 <col:4> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x136942bf8 <col:4> 'char *' lvalue ParmVar 0x1369280d8 's' 'char *'     | `-ImplicitCastExpr 0x136942c60 <col:19> 'char' <IntegralCast>     |   `-CharacterLiteral 0x136942c48 <col:19> 'int' 0     `-ReturnStmt 0x136942cd0 <line:26:3, col:10>       `-ImplicitCastExpr 0x136942cb8 <col:10> 'char *' <LValueToRValue>         `-DeclRefExpr 0x136942c98 <col:10> 'char *' lvalue Var 0x136928370 'r' 'char *' ","20724":"`-FunctionDecl 0x12c9282f8  line:1:1 put_u32 'int (void *, __int128_t)'   |-ParmVarDecl 0x12c9280d8 <col:9, col:15> col:15 vp 'void *'   |-ParmVarDecl 0x12c9281d0 <col:19, col:29> col:29 used v '__int128_t':'__int128'   `-CompoundStmt 0x12c942238 <line:2:1, line:9:1>     |-DeclStmt 0x12c928490 <line:3:2, col:26>     | `-VarDecl 0x12c928410 <col:2, col:10> col:10 used p 'char *'     `-BinaryOperator 0x12c942218 <line:8:17, col:21> '__int128_t':'__int128' '&'       |-ImplicitCastExpr 0x12c9421e8 <col:17> '__int128_t':'__int128' <LValueToRValue>       | `-DeclRefExpr 0x12c9421a8 <col:17> '__int128_t':'__int128' lvalue ParmVar 0x12c9281d0 'v' '__int128_t':'__int128'       `-ImplicitCastExpr 0x12c942200 <col:21> '__int128_t':'__int128' <IntegralCast>         `-IntegerLiteral 0x12c9421c8 <col:21> 'int' 255 ","20234":"`-FunctionDecl 0x141143078  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x141143178 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1411431e0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x141143248 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x141143120 <<invalid sloc>> Implicit 900 ","20807":"`-FunctionDecl 0x158928280  line:1:6 invalid AV1_RewriteESDescriptorEx 'void (int *, int *)'   |-ParmVarDecl 0x158928128 <col:32, col:61> col:61 referenced invalid av1 'int *'   |-ParmVarDecl 0x1589281a8 <col:66, col:79> col:79 invalid mdia 'int *'   `-CompoundStmt 0x158941ca0 <line:2:1, line:22:1>     |-BinaryOperator 0x158940ab0 <line:6:2, col:39> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1589286c8 <col:2, col:7> '<dependent type>' contains-errors lvalue ->emul_esd     | | `-RecoveryExpr 0x1589286a0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158928680 <col:2> 'int *' lvalue ParmVar 0x158928128 'av1' 'int *'     | `-CallExpr 0x158940a88 <col:18, col:39> 'int'     |   |-ImplicitCastExpr 0x158940a70 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x158940a00 <col:18> 'int ()' Function 0x158928738 'gf_odf_desc_esd_new' 'int ()'     |   `-IntegerLiteral 0x158940a20 <col:38> 'int' 2     |-BinaryOperator 0x158940c48 <line:7:2, col:45> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x158940ba8 <col:2, col:32> '<dependent type>' contains-errors lvalue ->streamType     | | `-CXXDependentScopeMemberExpr 0x158940b60 <col:2, col:17> '<dependent type>' contains-errors lvalue ->decoderConfig     | |   `-CXXDependentScopeMemberExpr 0x158940b18 <col:2, col:7> '<dependent type>' contains-errors lvalue ->emul_esd     | |     `-RecoveryExpr 0x158940af0 <col:2> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x158940ad0 <col:2> 'int *' lvalue ParmVar 0x158928128 'av1' 'int *'     | `-RecoveryExpr 0x158940c28 <col:45> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x158940de0 <line:8:2, col:55> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x158940d40 <col:2, col:32> '<dependent type>' contains-errors lvalue ->objectTypeIndication     | | `-CXXDependentScopeMemberExpr 0x158940cf8 <col:2, col:17> '<dependent type>' contains-errors lvalue ->decoderConfig     | |   `-CXXDependentScopeMemberExpr 0x158940cb0 <col:2, col:7> '<dependent type>' contains-errors lvalue ->emul_esd     | |     `-RecoveryExpr 0x158940c88 <col:2> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x158940c68 <col:2> 'int *' lvalue ParmVar 0x158928128 'av1' 'int *'     | `-RecoveryExpr 0x158940dc0 <col:55> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1589414d8 <line:10:2, line:14:2>     | |-RecoveryExpr 0x158940e18 <line:10:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1589414b0 <col:12, line:14:2>     |   |-BinaryOperator 0x158941040 <line:11:3, col:54> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x158940f10 <col:3, col:33> '<dependent type>' contains-errors lvalue ->bufferSizeDB     |   | | `-CXXDependentScopeMemberExpr 0x158940ec8 <col:3, col:18> '<dependent type>' contains-errors lvalue ->decoderConfig     |   | |   `-CXXDependentScopeMemberExpr 0x158940e80 <col:3, col:8> '<dependent type>' contains-errors lvalue ->emul_esd     |   | |     `-RecoveryExpr 0x158940e58 <col:3> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x158940e38 <col:3> 'int *' lvalue ParmVar 0x158928128 'av1' 'int *'     |   | `-CXXDependentScopeMemberExpr 0x158940ff8 <col:48, col:54> '<dependent type>' contains-errors lvalue ->bufferSizeDB     |   |   `-RecoveryExpr 0x158940fd8 <col:48> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x158941268 <line:12:3, col:52> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x158941138 <col:3, col:33> '<dependent type>' contains-errors lvalue ->avgBitrate     |   | | `-CXXDependentScopeMemberExpr 0x1589410f0 <col:3, col:18> '<dependent type>' contains-errors lvalue ->decoderConfig     |   | |   `-CXXDependentScopeMemberExpr 0x1589410a8 <col:3, col:8> '<dependent type>' contains-errors lvalue ->emul_esd     |   | |     `-RecoveryExpr 0x158941080 <col:3> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x158941060 <col:3> 'int *' lvalue ParmVar 0x158928128 'av1' 'int *'     |   | `-CXXDependentScopeMemberExpr 0x158941220 <col:46, col:52> '<dependent type>' contains-errors lvalue ->avgBitrate     |   |   `-RecoveryExpr 0x158941200 <col:46> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x158941490 <line:13:3, col:52> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x158941360 <col:3, col:33> '<dependent type>' contains-errors lvalue ->maxBitrate     |     | `-CXXDependentScopeMemberExpr 0x158941318 <col:3, col:18> '<dependent type>' contains-errors lvalue ->decoderConfig     |     |   `-CXXDependentScopeMemberExpr 0x1589412d0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->emul_esd     |     |     `-RecoveryExpr 0x1589412a8 <col:3> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x158941288 <col:3> 'int *' lvalue ParmVar 0x158928128 'av1' 'int *'     |     `-CXXDependentScopeMemberExpr 0x158941448 <col:46, col:52> '<dependent type>' contains-errors lvalue ->maxBitrate     |       `-RecoveryExpr 0x158941428 <col:46> '<dependent type>' contains-errors lvalue     `-IfStmt 0x158941c80 <line:15:2, line:21:2>       |-CXXDependentScopeMemberExpr 0x158941518 <line:15:6, col:11> '<dependent type>' contains-errors lvalue ->av1_config       | `-RecoveryExpr 0x1589414f8 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x158941c68 <col:23, line:21:2>         `-IfStmt 0x158941c48 <line:17:3, line:20:3>           |-RecoveryExpr 0x158941750 <line:17:7> '_Bool' contains-errors           `-CompoundStmt 0x158941c38 <col:16, line:20:3> ","21202":"`-FunctionDecl 0x14c80e358  line:1:12 gfar_of_group_count 'int (struct device_node *)' static   |-ParmVarDecl 0x14c80e248 <col:32, col:52> col:52 used np 'struct device_node *'   `-CompoundStmt 0x14c826ce8 <line:2:1, line:11:1>     |-DeclStmt 0x14c826740 <line:3:2, col:27>     | `-VarDecl 0x14c8266d8 <col:2, col:22> col:22 used child 'struct device_node *'     |-DeclStmt 0x14c8267f8 <line:4:2, col:13>     | `-VarDecl 0x14c826770 <col:2, col:12> col:6 used num 'int' cinit     |   `-IntegerLiteral 0x14c8267d8 <col:12> 'int' 0     |-CallExpr 0x14c8269e8 <line:6:2, col:44> 'int'     | |-ImplicitCastExpr 0x14c8269d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c826940 <col:2> 'int ()' Function 0x14c826888 'for_each_available_child_of_node' 'int ()'     | |-ImplicitCastExpr 0x14c826a18 <col:35> 'struct device_node *' <LValueToRValue>     | | `-DeclRefExpr 0x14c826960 <col:35> 'struct device_node *' lvalue ParmVar 0x14c80e248 'np' 'struct device_node *'     | `-ImplicitCastExpr 0x14c826a30 <col:39> 'struct device_node *' <LValueToRValue>     |   `-DeclRefExpr 0x14c826980 <col:39> 'struct device_node *' lvalue Var 0x14c8266d8 'child' 'struct device_node *'     |-IfStmt 0x14c826c80 <line:7:3, line:8:7>     | |-CallExpr 0x14c826be8 <line:7:7, col:35> 'int'     | | |-ImplicitCastExpr 0x14c826bd0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14c826b28 <col:7> 'int ()' Function 0x14c826a70 'of_node_name_eq' 'int ()'     | | |-ImplicitCastExpr 0x14c826c18 <col:23> 'struct device_node *' <LValueToRValue>     | | | `-DeclRefExpr 0x14c826b48 <col:23> 'struct device_node *' lvalue Var 0x14c8266d8 'child' 'struct device_node *'     | | `-ImplicitCastExpr 0x14c826c30 <col:30> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x14c826bb0 <col:30> 'char[4]' lvalue \"STR\"     | `-UnaryOperator 0x14c826c68 <line:8:4, col:7> 'int' postfix '++'     |   `-DeclRefExpr 0x14c826c48 <col:4> 'int' lvalue Var 0x14c826770 'num' 'int'     `-ReturnStmt 0x14c826cd8 <line:10:2, col:9>       `-ImplicitCastExpr 0x14c826cc0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c826ca0 <col:9> 'int' lvalue Var 0x14c826770 'num' 'int' ","21090":"`-FunctionDecl 0x128928288  line:1:5 invalid ssl_set_peer_cert_type 'int (int *, int)'   |-ParmVarDecl 0x128928128 <col:28, col:39> col:39 referenced invalid sc 'int *'   |-ParmVarDecl 0x1289281a8 <col:42, col:46> col:46 used type 'int'   `-CompoundStmt 0x128928460 <line:2:2, line:5:2>     |-BinaryOperator 0x1289283f0 <line:3:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x128928388 <col:2, col:6> '<dependent type>' contains-errors lvalue ->peer_cert_type     | | `-RecoveryExpr 0x128928360 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x128928340 <col:2> 'int *' lvalue ParmVar 0x128928128 'sc' 'int *'     | `-DeclRefExpr 0x1289283d0 <col:23> 'int' lvalue ParmVar 0x1289281a8 'type' 'int'     `-ReturnStmt 0x128928450 <line:4:2, col:10>       `-ParenExpr 0x128928430 <col:8, col:10> 'int'         `-IntegerLiteral 0x128928410 <col:9> 'int' 1 ","20967":"`-FunctionDecl 0x147928758  line:1:1 max3421_urb_done 'int (struct usb_hcd *)'   |-ParmVarDecl 0x147928648 <col:18, col:34> col:34 used hcd 'struct usb_hcd *'   `-CompoundStmt 0x147943148 <line:2:1, line:23:1>     |-DeclStmt 0x147940e48 <line:3:2, col:55>     | |-RecordDecl 0x147940a50 <col:2, col:9> col:9 struct max3421_hcd     | `-VarDecl 0x147940bb8 <col:2, col:54> col:22 used max3421_hcd 'struct max3421_hcd *' cinit     |   `-ImplicitCastExpr 0x147940e18 <col:36, col:54> 'struct max3421_hcd *' <IntegralToPointer>     |     `-CallExpr 0x147940dd8 <col:36, col:54> 'int'     |       |-ImplicitCastExpr 0x147940dc0 <col:36> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x147940d50 <col:36> 'int ()' Function 0x147940c98 'hcd_to_max3421' 'int ()'     |       `-ImplicitCastExpr 0x147940e00 <col:51> 'struct usb_hcd *' <LValueToRValue>     |         `-DeclRefExpr 0x147940d70 <col:51> 'struct usb_hcd *' lvalue ParmVar 0x147928648 'hcd' 'struct usb_hcd *'     |-DeclStmt 0x147940ee0 <line:4:2, col:21>     | `-VarDecl 0x147940e78 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x1479410e8 <line:5:2, col:17>     | |-RecordDecl 0x147940ef8 <col:2, col:9> col:9 struct urb     | `-VarDecl 0x147941068 <col:2, col:14> col:14 used urb 'struct urb *'     |-DeclStmt 0x147941180 <line:6:2, col:12>     | `-VarDecl 0x147941118 <col:2, col:6> col:6 used status 'int'     |-BinaryOperator 0x147941218 <line:8:2, col:24> 'int' contains-errors '='     | |-DeclRefExpr 0x147941198 <col:2> 'int' lvalue Var 0x147941118 'status' 'int'     | `-RecoveryExpr 0x1479411f0 <col:11, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1479411b8 <col:11> 'struct max3421_hcd *' lvalue Var 0x147940bb8 'max3421_hcd' 'struct max3421_hcd *'     |-BinaryOperator 0x1479412b8 <line:9:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x147941270 <col:2, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147941238 <col:2> 'struct max3421_hcd *' lvalue Var 0x147940bb8 'max3421_hcd' 'struct max3421_hcd *'     | `-IntegerLiteral 0x147941298 <col:26> 'int' 0     |-IfStmt 0x1479413b0 <line:10:2, line:11:12>     | |-BinaryOperator 0x147941330 <line:10:6, col:15> 'int' '>'     | | |-ImplicitCastExpr 0x147941318 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1479412d8 <col:6> 'int' lvalue Var 0x147941118 'status' 'int'     | | `-IntegerLiteral 0x1479412f8 <col:15> 'int' 0     | `-BinaryOperator 0x147941390 <line:11:3, col:12> 'int' '='     |   |-DeclRefExpr 0x147941350 <col:3> 'int' lvalue Var 0x147941118 'status' 'int'     |   `-IntegerLiteral 0x147941370 <col:12> 'int' 0     |-BinaryOperator 0x147941450 <line:12:2, col:21> 'struct urb *' contains-errors '='     | |-DeclRefExpr 0x1479413d0 <col:2> 'struct urb *' lvalue Var 0x147941068 'urb' 'struct urb *'     | `-RecoveryExpr 0x147941428 <col:8, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1479413f0 <col:8> 'struct max3421_hcd *' lvalue Var 0x147940bb8 'max3421_hcd' 'struct max3421_hcd *'     |-IfStmt 0x1479430f8 <line:13:2, line:21:2>     | |-ImplicitCastExpr 0x147941490 <line:13:6> 'struct urb *' <LValueToRValue>     | | `-DeclRefExpr 0x147941470 <col:6> 'struct urb *' lvalue Var 0x147941068 'urb' 'struct urb *'     | `-CompoundStmt 0x1479430c0 <col:11, line:21:2>     |   |-BinaryOperator 0x147941560 <line:14:3, col:27> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1479414e0 <col:3, col:16> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1479414a8 <col:3> 'struct max3421_hcd *' lvalue Var 0x147940bb8 'max3421_hcd' 'struct max3421_hcd *'     |   | `-RecoveryExpr 0x147941540 <col:27> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x147941718 <line:15:3, col:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x147941660 <col:3> 'int ()' Function 0x1479415a8 'spin_lock_irqsave' 'int ()'     |   | |-UnaryOperator 0x1479416e0 <col:21, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x1479416b8 <col:22, col:35> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x147941680 <col:22> 'struct max3421_hcd *' lvalue Var 0x147940bb8 'max3421_hcd' 'struct max3421_hcd *'     |   | `-DeclRefExpr 0x1479416f8 <col:41> 'unsigned long' lvalue Var 0x147940e78 'flags' 'unsigned long'     |   |-CallExpr 0x1479418a0 <line:16:3, col:38> 'int'     |   | |-ImplicitCastExpr 0x147941888 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x147941828 <col:3> 'int ()' Function 0x147941770 'usb_hcd_unlink_urb_from_ep' 'int ()'     |   | |-ImplicitCastExpr 0x1479418d0 <col:30> 'struct usb_hcd *' <LValueToRValue>     |   | | `-DeclRefExpr 0x147941848 <col:30> 'struct usb_hcd *' lvalue ParmVar 0x147928648 'hcd' 'struct usb_hcd *'     |   | `-ImplicitCastExpr 0x1479418e8 <col:35> 'struct urb *' <LValueToRValue>     |   |   `-DeclRefExpr 0x147941868 <col:35> 'struct urb *' lvalue Var 0x147941068 'urb' 'struct urb *'     |   |-CallExpr 0x147942e98 <line:17:3, col:51> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1479419e0 <col:3> 'int ()' Function 0x147941928 'spin_unlock_irqrestore' 'int ()'     |   | |-UnaryOperator 0x147942e60 <col:26, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x147942e38 <col:27, col:40> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x147942e00 <col:27> 'struct max3421_hcd *' lvalue Var 0x147940bb8 'max3421_hcd' 'struct max3421_hcd *'     |   | `-DeclRefExpr 0x147942e78 <col:46> 'unsigned long' lvalue Var 0x147940e78 'flags' 'unsigned long'     |   `-CallExpr 0x147943040 <line:20:3, col:40> 'int'     |     |-ImplicitCastExpr 0x147943028 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x147942fa8 <col:3> 'int ()' Function 0x147942ef0 'usb_hcd_giveback_urb' 'int ()'     |     |-ImplicitCastExpr 0x147943078 <col:24> 'struct usb_hcd *' <LValueToRValue>     |     | `-DeclRefExpr 0x147942fc8 <col:24> 'struct usb_hcd *' lvalue ParmVar 0x147928648 'hcd' 'struct usb_hcd *'     |     |-ImplicitCastExpr 0x147943090 <col:29> 'struct urb *' <LValueToRValue>     |     | `-DeclRefExpr 0x147942fe8 <col:29> 'struct urb *' lvalue Var 0x147941068 'urb' 'struct urb *'     |     `-ImplicitCastExpr 0x1479430a8 <col:34> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x147943008 <col:34> 'int' lvalue Var 0x147941118 'status' 'int'     `-ReturnStmt 0x147943138 <line:22:2, col:9>       `-IntegerLiteral 0x147943118 <col:9> 'int' 1 ","20488":"`-FunctionDecl 0x15685ae88  line:1:5 invalid proxy_authentication 'int (int *, int *)'   |-ParmVarDecl 0x15685ad28 <col:26, col:32> col:32 invalid this_ptr 'int *'   |-ParmVarDecl 0x15685ada8 <col:42, col:53> col:53 invalid soap_headers 'int *'   `-CompoundStmt 0x15685b3f0 <line:2:1, line:25:1> ","20607":"`-FunctionDecl 0x14800dd68  col:12 invalid context 'int *()'   `-CompoundStmt 0x14800dee8 <col:22, col:59>     `-ReturnStmt 0x14800ded8 <col:24, col:49>       `-CXXDependentScopeMemberExpr 0x14800de90 <col:31, col:49> '<dependent type>' contains-errors lvalue .context_         `-RecoveryExpr 0x14800de70 <col:31> '<dependent type>' contains-errors lvalue ","20452":"`-FunctionDecl 0x14e1426b0  col:7 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x14e142e00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14e142e68 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14e142758 <<invalid sloc>> Implicit 887 ","20744":"`-FunctionDecl 0x13d80e350  line:1:13 audit_receive_skb 'void (struct sk_buff *)' static   |-ParmVarDecl 0x13d80e248 <col:31, col:47> col:47 used skb 'struct sk_buff *'   `-CompoundStmt 0x13d827598 <line:2:1, line:19:1>     |-DeclStmt 0x13d826838 <line:3:2, col:22>     | |-RecordDecl 0x13d826648 <col:2, col:9> col:9 struct nlmsghdr     | `-VarDecl 0x13d8267b8 <col:2, col:19> col:19 used nlh 'struct nlmsghdr *'     |-DeclStmt 0x13d8268d0 <line:5:2, col:9>     | `-VarDecl 0x13d826868 <col:2, col:6> col:6 used len 'int'     |-DeclStmt 0x13d826968 <line:6:2, col:9>     | `-VarDecl 0x13d826900 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x13d826bb0 <line:8:2, col:21> 'struct nlmsghdr *' '='     | |-DeclRefExpr 0x13d826980 <col:2> 'struct nlmsghdr *' lvalue Var 0x13d8267b8 'nlh' 'struct nlmsghdr *'     | `-ImplicitCastExpr 0x13d826b98 <col:8, col:21> 'struct nlmsghdr *' <IntegralToPointer>     |   `-CallExpr 0x13d826b58 <col:8, col:21> 'int'     |     |-ImplicitCastExpr 0x13d826b40 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13d826ad0 <col:8> 'int ()' Function 0x13d826a18 'nlmsg_hdr' 'int ()'     |     `-ImplicitCastExpr 0x13d826b80 <col:18> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x13d826af0 <col:18> 'struct sk_buff *' lvalue ParmVar 0x13d80e248 'skb' 'struct sk_buff *'     |-BinaryOperator 0x13d826c50 <line:9:2, col:13> 'int' contains-errors '='     | |-DeclRefExpr 0x13d826bd0 <col:2> 'int' lvalue Var 0x13d826868 'len' 'int'     | `-RecoveryExpr 0x13d826c28 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13d826bf0 <col:8> 'struct sk_buff *' lvalue ParmVar 0x13d80e248 'skb' 'struct sk_buff *'     `-WhileStmt 0x13d827578 <line:11:2, line:18:2>       |-CallExpr 0x13d826dc8 <line:11:9, col:26> 'int'       | |-ImplicitCastExpr 0x13d826db0 <col:9> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x13d826d50 <col:9> 'int ()' Function 0x13d826c98 'nlmsg_ok' 'int ()'       | |-ImplicitCastExpr 0x13d826df8 <col:18> 'struct nlmsghdr *' <LValueToRValue>       | | `-DeclRefExpr 0x13d826d70 <col:18> 'struct nlmsghdr *' lvalue Var 0x13d8267b8 'nlh' 'struct nlmsghdr *'       | `-ImplicitCastExpr 0x13d826e10 <col:23> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x13d826d90 <col:23> 'int' lvalue Var 0x13d826868 'len' 'int'       `-CompoundStmt 0x13d827550 <col:29, line:18:2>         |-BinaryOperator 0x13d827000 <line:12:3, col:35> 'int' '='         | |-DeclRefExpr 0x13d826e28 <col:3> 'int' lvalue Var 0x13d826900 'err' 'int'         | `-CallExpr 0x13d826fa0 <col:9, col:35> 'int'         |   |-ImplicitCastExpr 0x13d826f88 <col:9> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x13d826f28 <col:9> 'int ()' Function 0x13d826e70 'audit_receive_msg' 'int ()'         |   |-ImplicitCastExpr 0x13d826fd0 <col:27> 'struct sk_buff *' <LValueToRValue>         |   | `-DeclRefExpr 0x13d826f48 <col:27> 'struct sk_buff *' lvalue ParmVar 0x13d80e248 'skb' 'struct sk_buff *'         |   `-ImplicitCastExpr 0x13d826fe8 <col:32> 'struct nlmsghdr *' <LValueToRValue>         |     `-DeclRefExpr 0x13d826f68 <col:32> 'struct nlmsghdr *' lvalue Var 0x13d8267b8 'nlh' 'struct nlmsghdr *'         |-IfStmt 0x13d8272f0 <line:14:3, line:15:29>         | |-RecoveryExpr 0x13d8270d8 <line:14:7, col:43> '_Bool' contains-errors         | `-CallExpr 0x13d827270 <line:15:4, col:29> 'int'         |   |-ImplicitCastExpr 0x13d827258 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x13d8271d8 <col:4> 'int ()' Function 0x13d827120 'netlink_ack' 'int ()'         |   |-ImplicitCastExpr 0x13d8272a8 <col:16> 'struct sk_buff *' <LValueToRValue>         |   | `-DeclRefExpr 0x13d8271f8 <col:16> 'struct sk_buff *' lvalue ParmVar 0x13d80e248 'skb' 'struct sk_buff *'         |   |-ImplicitCastExpr 0x13d8272c0 <col:21> 'struct nlmsghdr *' <LValueToRValue>         |   | `-DeclRefExpr 0x13d827218 <col:21> 'struct nlmsghdr *' lvalue Var 0x13d8267b8 'nlh' 'struct nlmsghdr *'         |   `-ImplicitCastExpr 0x13d8272d8 <col:26> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x13d827238 <col:26> 'int' lvalue Var 0x13d826900 'err' 'int'         `-BinaryOperator 0x13d827530 <line:17:3, col:29> 'struct nlmsghdr *' '='           |-DeclRefExpr 0x13d827310 <col:3> 'struct nlmsghdr *' lvalue Var 0x13d8267b8 'nlh' 'struct nlmsghdr *'           `-ImplicitCastExpr 0x13d827518 <col:9, col:29> 'struct nlmsghdr *' <IntegralToPointer>             `-CallExpr 0x13d8274d0 <col:9, col:29> 'int'               |-ImplicitCastExpr 0x13d8274b8 <col:9> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x13d827410 <col:9> 'int ()' Function 0x13d827358 'nlmsg_next' 'int ()'               |-ImplicitCastExpr 0x13d827500 <col:20> 'struct nlmsghdr *' <LValueToRValue>               | `-DeclRefExpr 0x13d827430 <col:20> 'struct nlmsghdr *' lvalue Var 0x13d8267b8 'nlh' 'struct nlmsghdr *'               `-UnaryOperator 0x13d8274a0 <col:25, col:26> 'int *' prefix '&' cannot overflow                 `-DeclRefExpr 0x13d827450 <col:26> 'int' lvalue Var 0x13d826868 'len' 'int' ","20538":"`-FunctionDecl 0x13180dda8  line:1:1 poly_right 'int (int)'   |-ParmVarDecl 0x13180dcd8 <col:12> col:12 PG_FUNCTION_ARGS 'int'   `-CompoundStmt 0x131826948 <line:2:1, line:14:1>     |-CallExpr 0x1318266b8 <line:10:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131826610 <col:2> 'int ()' Function 0x13180e350 'PG_FREE_IF_COPY' 'int ()'     | |-RecoveryExpr 0x131826698 <col:18> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x131826648 <col:25> 'int' 0     |-CallExpr 0x131826790 <line:11:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1318266e8 <col:2> 'int ()' Function 0x13180e350 'PG_FREE_IF_COPY' 'int ()'     | |-RecoveryExpr 0x131826770 <col:18> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x131826720 <col:25> 'int' 1     `-CallExpr 0x131826920 <line:13:2, col:23> '<dependent type>' contains-errors       |-DeclRefExpr 0x1318268a0 <col:2> 'int ()' Function 0x1318267e8 'PG_RETURN_BOOL' 'int ()'       `-RecoveryExpr 0x131826900 <col:17> '<dependent type>' contains-errors lvalue ","20497":"`-FunctionDecl 0x13e9281a8  line:1:1 SPICE_CONSTRUCTOR_FUNC 'int (int)'   |-ParmVarDecl 0x13e9280d8 <col:24> col:24 quic_global_init 'int'   `-CompoundStmt 0x13e928710 <line:2:1, line:5:1>     |-CallExpr 0x13e928550 <line:3:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e9283d0 <col:5> 'int ()' Function 0x13e928318 'family_init' 'int ()'     | |-UnaryOperator 0x13e928518 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13e9284f8 <col:18> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x13e928420 <col:31> 'int' 8     | `-RecoveryExpr 0x13e928530 <col:34> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13e9286d8 <line:4:5, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x13e928588 <col:5> 'int ()' Function 0x13e928318 'family_init' 'int ()'       |-UnaryOperator 0x13e9286a0 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x13e928680 <col:18> '<dependent type>' contains-errors lvalue       |-IntegerLiteral 0x13e9285d8 <col:31> 'int' 5       `-RecoveryExpr 0x13e9286b8 <col:34> '<dependent type>' contains-errors lvalue ","20282":"`-FunctionDecl 0x158008200  line:1:20 invalid subpool_is_free 'int (struct hugepage_subpool *)' static inline   |-ParmVarDecl 0x14f928668 <col:36, col:61> col:61 used spool 'struct hugepage_subpool *'   `-CompoundStmt 0x1580086c0 <line:2:1, line:11:1>     |-IfStmt 0x158008490 <line:5:2, line:6:32>     | |-BinaryOperator 0x1580083c0 <line:5:6, col:28> 'int' contains-errors '!='     | | |-RecoveryExpr 0x158008360 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x158008328 <col:6> 'struct hugepage_subpool *' lvalue ParmVar 0x14f928668 'spool' 'struct hugepage_subpool *'     | | `-UnaryOperator 0x1580083a8 <col:27, col:28> 'int' prefix '-'     | |   `-IntegerLiteral 0x158008388 <col:28> 'int' 1     | `-ReturnStmt 0x158008480 <line:6:3, col:32>     |   `-BinaryOperator 0x158008460 <col:10, col:32> 'int' contains-errors '=='     |     |-RecoveryExpr 0x158008418 <col:10, col:17> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1580083e0 <col:10> 'struct hugepage_subpool *' lvalue ParmVar 0x14f928668 'spool' 'struct hugepage_subpool *'     |     `-IntegerLiteral 0x158008440 <col:32> 'int' 0     |-IfStmt 0x158008658 <line:7:2, line:8:38>     | |-BinaryOperator 0x158008548 <line:7:6, col:28> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1580084e8 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1580084b0 <col:6> 'struct hugepage_subpool *' lvalue ParmVar 0x14f928668 'spool' 'struct hugepage_subpool *'     | | `-UnaryOperator 0x158008530 <col:27, col:28> 'int' prefix '-'     | |   `-IntegerLiteral 0x158008510 <col:28> 'int' 1     | `-ReturnStmt 0x158008648 <line:8:3, col:38>     |   `-BinaryOperator 0x158008628 <col:10, col:38> 'int' contains-errors '=='     |     |-RecoveryExpr 0x1580085a0 <col:10, col:17> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x158008568 <col:10> 'struct hugepage_subpool *' lvalue ParmVar 0x14f928668 'spool' 'struct hugepage_subpool *'     |     `-RecoveryExpr 0x158008600 <col:31, col:38> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1580085c8 <col:31> 'struct hugepage_subpool *' lvalue ParmVar 0x14f928668 'spool' 'struct hugepage_subpool *'     `-ReturnStmt 0x1580086b0 <line:10:2, col:9>       `-RecoveryExpr 0x158008690 <col:9> '<dependent type>' contains-errors lvalue ","20689":"`-FunctionDecl 0x14c00e3c8  line:2:16 invalid input 'int (int)' static   |-ParmVarDecl 0x14c00e2f0 <col:24, col:33> col:33 invalid yyscanner 'int'   `-CompoundStmt 0x15990eff8 <line:5:1, line:65:11>     |-DeclStmt 0x14c00e4f8 <line:6:2, col:7>     | `-VarDecl 0x14c00e490 <col:2, col:6> col:6 used c 'int'     |-DeclStmt 0x14c00e7c8 <line:7:5, col:56>     | |-RecordDecl 0x14c00e510 <col:5, col:12> col:12 struct yyguts_t     | `-VarDecl 0x14c00e678 <col:5, col:47> col:23 used yyg 'struct yyguts_t *' cinit     |   `-CStyleCastExpr 0x14c00e788 <col:29, col:47> 'struct yyguts_t *' contains-errors <Dependent>     |     `-RecoveryExpr 0x14c00e6e0 <col:47> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c029528 <line:9:2, col:26> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x14c0294b0 <col:2, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14c029498 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14c029470 <col:3, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14c00e7e0 <col:3> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     | `-RecoveryExpr 0x14c029500 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c0294c8 <col:21> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     |-IfStmt 0x14c02a138 <line:11:2, line:52:3>     | |-BinaryOperator 0x14c029690 <line:11:7, col:27> 'int' contains-errors '=='     | | |-UnaryOperator 0x14c029658 <col:7, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x14c029640 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x14c029580 <col:8, col:13> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x14c029548 <col:8> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     | | `-RecoveryExpr 0x14c029670 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c02a120 <line:12:3, line:52:3>     |   `-IfStmt 0x14c02a0f0 <line:14:3, line:51:4> has_else     |     |-RecoveryExpr 0x14c0297d0 <line:14:8, col:78> '_Bool' contains-errors     |     |-BinaryOperator 0x14c029898 <line:16:4, col:23> '<dependent type>' contains-errors '='     |     | |-UnaryOperator 0x14c029868 <col:4, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | | `-ImplicitCastExpr 0x14c029850 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x14c029828 <col:5, col:10> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x14c0297f0 <col:5> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     |     | `-CharacterLiteral 0x14c029880 <col:23> 'int' 0     |     `-CompoundStmt 0x14c02a0d0 <line:19:4, line:51:4>     |       |-UnaryOperator 0x14c029918 <line:21:4, col:11> '<dependent type>' contains-errors prefix '++' cannot overflow     |       | `-RecoveryExpr 0x14c0298f0 <col:6, col:11> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c0298b8 <col:6> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     |       `-SwitchStmt 0x14c029af8 <line:23:4, line:50:5>     |         |-CallExpr 0x14c029ad0 <line:23:13, col:43> '<dependent type>' contains-errors     |         | |-DeclRefExpr 0x14c029a90 <col:13> 'int ()' Function 0x14c0299d8 'yy_get_next_buffer' 'int ()'     |         | `-RecoveryExpr 0x14c029ab0 <col:33> '<dependent type>' contains-errors lvalue     |         `-CompoundStmt 0x14c02a0a8 <line:24:5, line:50:5>     |           |-CallExpr 0x14c029cc0 <line:29:6, col:34> '<dependent type>' contains-errors     |           | |-DeclRefExpr 0x14c029c18 <col:6> 'int ()' Function 0x14c029b60 're_yyrestart' 'int ()'     |           | |-DeclRefExpr 0x14c029ca0 <col:19> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     |           | `-RecoveryExpr 0x14c029c50 <col:25> '<dependent type>' contains-errors lvalue     |           |-CompoundStmt 0x14c029fc0 <line:34:6, line:45:6>     |           | |-IfStmt 0x14c029e98 <line:35:6, line:36:14>     |           | | |-CallExpr 0x14c029e28 <line:35:11, col:31> '<dependent type>' contains-errors     |           | | | |-DeclRefExpr 0x14c029de8 <col:11> 'int ()' Function 0x14c029d30 're_yywrap' 'int ()'     |           | | | `-RecoveryExpr 0x14c029e08 <col:21> '<dependent type>' contains-errors lvalue     |           | | `-ReturnStmt 0x14c029e88 <line:36:7, col:14>     |           | |   `-RecoveryExpr 0x14c029e68 <col:14> '<dependent type>' contains-errors lvalue     |           | `-ReturnStmt 0x14c029fb0 <line:43:6, col:28>     |           |   `-CallExpr 0x14c029f88 <col:13, col:28> '<dependent type>' contains-errors     |           |     |-RecoveryExpr 0x14c029f48 <col:13> '<dependent type>' contains-errors lvalue     |           |     `-RecoveryExpr 0x14c029f68 <col:19> '<dependent type>' contains-errors lvalue     |           `-BreakStmt 0x14c02a0a0 <line:49:6>     |-BinaryOperator 0x15990ecb8 <line:54:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x14c02a158 <col:2> 'int' lvalue Var 0x14c00e490 'c' 'int'     | `-ImplicitCastExpr 0x15990eca0 <col:6, col:30> 'int' contains-errors <IntegralCast>     |   `-ImplicitCastExpr 0x15990ec88 <col:6, col:30> 'unsigned char' contains-errors <LValueToRValue>     |     `-UnaryOperator 0x15990ec70 <col:6, col:30> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow     |       `-CStyleCastExpr 0x15990ec48 <col:7, col:30> 'unsigned char *' contains-errors <Dependent>     |         `-RecoveryExpr 0x14c02a1b0 <col:25, col:30> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x14c02a178 <col:25> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     |-BinaryOperator 0x15990ed80 <line:55:2, col:21> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x15990ed50 <col:2, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x15990ed38 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15990ed10 <col:3, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15990ecd8 <col:3> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     | `-CharacterLiteral 0x15990ed68 <col:21> 'int' 0     |-BinaryOperator 0x15990ee90 <line:56:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15990edd8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15990eda0 <col:2> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     | `-UnaryOperator 0x15990ee78 <col:22, col:30> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-UnaryOperator 0x15990ee60 <col:23, col:30> '<dependent type>' contains-errors prefix '++' cannot overflow     |     `-RecoveryExpr 0x15990ee38 <col:25, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15990ee00 <col:25> 'struct yyguts_t *' contains-errors lvalue Var 0x14c00e678 'yyg' 'struct yyguts_t *'     |-IfStmt 0x15990ef90 <line:58:2, line:62:13>     | |-BinaryOperator 0x15990ef00 <line:58:7, col:12> 'int' '=='     | | |-ImplicitCastExpr 0x15990eee8 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15990eeb0 <col:7> 'int' lvalue Var 0x14c00e490 'c' 'int'     | | `-CharacterLiteral 0x15990eed0 <col:12> 'int' 10     | `-DoStmt 0x15990ef70 <line:60:5, line:62:13>     |   |-CompoundStmt 0x15990ef40 <line:60:7, line:62:5>     |   `-IntegerLiteral 0x15990ef50 <col:12> 'int' 0     `-ReturnStmt 0x15990efe8 <line:65:2, col:9>       `-ImplicitCastExpr 0x15990efd0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15990efb0 <col:9> 'int' lvalue Var 0x14c00e490 'c' 'int' ","20256":"`-FunctionDecl 0x14e928750  line:1:13 cil_reset_role 'void (struct cil_role *)' static   |-ParmVarDecl 0x14e928648 <col:28, col:45> col:45 used role 'struct cil_role *'   `-CompoundStmt 0x14e940b38 <line:2:1, line:5:1>     `-BinaryOperator 0x14e940b18 <line:4:2, col:17> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x14e940a80 <col:2, col:8> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14e940a48 <col:2> 'struct cil_role *' lvalue ParmVar 0x14e928648 'role' 'struct cil_role *'       `-RecoveryExpr 0x14e940af8 <col:17> '<dependent type>' contains-errors lvalue ","20462":"`-FunctionDecl 0x136008470  col:13 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x136008570 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x136008518 <<invalid sloc>> Implicit 873 ","20469":"`-FunctionDecl 0x1369281f8  line:1:15 invalid zend_object_store_ctor_failed 'int (int *)'   |-ParmVarDecl 0x136928128 <col:45, col:51> col:51 invalid zobject 'int *'   `-CompoundStmt 0x136928650 <line:2:1, line:8:1>     `-NullStmt 0x136928628 <line:6:56> ","20242":"`-FunctionDecl 0x132927d18  line:1:1 invalid vte_terminal_find_charcell 'int (int *, long, long)'   |-ParmVarDecl 0x132927b28 <col:28, col:41> col:41 invalid terminal 'int *'   |-ParmVarDecl 0x132927ba8 <col:51, col:57> col:57 used col 'long'   |-ParmVarDecl 0x132927c28 <col:62, col:68> col:68 used row 'long'   `-CompoundStmt 0x132009080 <line:2:1, line:17:1>     |-DeclStmt 0x132928010 <line:4:2, col:33>     | |-RecordDecl 0x132927df0 <col:2, col:9> col:9 struct vte_charcell     | `-VarDecl 0x132927f58 <col:2, col:29> col:23 used ret 'struct vte_charcell *' cinit     |   `-RecoveryExpr 0x132927fd8 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x132008920 <line:6:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1329281a0 <col:2> 'int ()' Function 0x1329280e8 'g_assert' 'int ()'     | `-CallExpr 0x1320088f8 <col:11, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1320088b8 <col:11> 'int ()' Function 0x132008800 'VTE_IS_TERMINAL' 'int ()'     |   `-RecoveryExpr 0x1320088d8 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132009000 <line:8:2, line:15:2>     | |-CallExpr 0x132008c10 <line:8:6, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x132008ad8 <col:6> 'int ()' Function 0x132008a20 '_vte_ring_contains' 'int ()'     | | |-CXXDependentScopeMemberExpr 0x132008bc8 <col:25, col:33> '<dependent type>' contains-errors lvalue ->row_data     | | | `-RecoveryExpr 0x132008ba8 <col:25> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x132008b58 <col:43> 'long' lvalue ParmVar 0x132927c28 'row' 'long'     | `-CompoundStmt 0x132008fe8 <col:49, line:15:2>     |   `-IfStmt 0x132008fc8 <line:10:3, line:14:3>     |     |-RecoveryExpr 0x132008e50 <line:10:7, col:13> '_Bool' contains-errors     |     | `-ParenExpr 0x132008e30 <col:7, col:13> '<overloaded function type>' lvalue     |     |   `-UnresolvedLookupExpr 0x132008df0 <col:8> '<overloaded function type>' lvalue (no ADL) = 'glong' empty     |     `-CompoundStmt 0x132008fb8 <col:42, line:14:3>     `-ReturnStmt 0x132009070 <line:16:2, col:9>       `-ImplicitCastExpr 0x132009058 <col:9> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x132009040 <col:9> 'struct vte_charcell *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x132009020 <col:9> 'struct vte_charcell *' contains-errors lvalue Var 0x132927f58 'ret' 'struct vte_charcell *' ","20897":"`-FunctionDecl 0x156026748  line:1:19 init_new_context 'int (struct task_struct *, struct mm_struct *)' static inline   |-ParmVarDecl 0x15600e248 <col:36, col:56> col:56 tsk 'struct task_struct *'   |-ParmVarDecl 0x156026628 <line:2:8, col:26> col:26 used mm 'struct mm_struct *'   `-CompoundStmt 0x156027560 <line:3:1, line:17:1>     |-CallExpr 0x156026a50 <line:4:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x156026970 <col:2> 'int ()' Function 0x1560268b8 'cpumask_clear' 'int ()'     | `-UnaryOperator 0x156026a38 <col:16, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1560269f0 <col:17, col:29> '<dependent type>' contains-errors lvalue .cpu_attach_mask     |     `-RecoveryExpr 0x1560269c8 <col:17, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x156026990 <col:17> 'struct mm_struct *' lvalue ParmVar 0x156026628 'mm' 'struct mm_struct *'     |-CallExpr 0x156026c58 <line:5:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x156026b58 <col:2> 'int ()' Function 0x156026aa0 'atomic_set' 'int ()'     | |-UnaryOperator 0x156026c20 <col:13, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x156026bd8 <col:14, col:26> '<dependent type>' contains-errors lvalue .attach_count     | |   `-RecoveryExpr 0x156026bb0 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x156026b78 <col:14> 'struct mm_struct *' lvalue ParmVar 0x156026628 'mm' 'struct mm_struct *'     | `-IntegerLiteral 0x156026c38 <col:40> 'int' 0     |-BinaryOperator 0x156026d50 <line:6:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x156026ce8 <col:2, col:14> '<dependent type>' contains-errors lvalue .flush_mm     | | `-RecoveryExpr 0x156026cc0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x156026c88 <col:2> 'struct mm_struct *' lvalue ParmVar 0x156026628 'mm' 'struct mm_struct *'     | `-IntegerLiteral 0x156026d30 <col:25> 'int' 0     |-BinaryOperator 0x156026ee8 <line:7:2, col:47> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x156026dd0 <col:2, col:14> '<dependent type>' contains-errors lvalue .asce_bits     | | `-RecoveryExpr 0x156026da8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x156026d70 <col:2> 'struct mm_struct *' lvalue ParmVar 0x156026628 'mm' 'struct mm_struct *'     | `-BinaryOperator 0x156026ec8 <col:26, col:47> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x156026e88 <col:26> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x156026ea8 <col:47> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x156027018 <line:8:2, col:27> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x156026f68 <col:2, col:14> '<dependent type>' contains-errors lvalue .asce_bits     | | `-RecoveryExpr 0x156026f40 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x156026f08 <col:2> 'struct mm_struct *' lvalue ParmVar 0x156026628 'mm' 'struct mm_struct *'     | `-RecoveryExpr 0x156026ff8 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x156027148 <line:14:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1560270a8 <col:2, col:14> '<dependent type>' contains-errors lvalue .asce_limit     | | `-RecoveryExpr 0x156027080 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x156027048 <col:2> 'struct mm_struct *' lvalue ParmVar 0x156026628 'mm' 'struct mm_struct *'     | `-RecoveryExpr 0x156027128 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x156027500 <line:15:2, col:63> 'int' contains-errors     | |-ImplicitCastExpr 0x1560274e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x156027248 <col:2> 'int ()' Function 0x156027190 'crst_table_init' 'int ()'     | |-CStyleCastExpr 0x156027318 <col:18, col:40> 'unsigned long *' contains-errors <Dependent>     | | `-RecoveryExpr 0x1560272a0 <col:36, col:40> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x156027268 <col:36> 'struct mm_struct *' lvalue ParmVar 0x156026628 'mm' 'struct mm_struct *'     | `-CallExpr 0x1560274a8 <col:45, col:62> 'int'     |   |-ImplicitCastExpr 0x156027490 <col:45> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x156027420 <col:45> 'int ()' Function 0x156027368 'pgd_entry_type' 'int ()'     |   `-ImplicitCastExpr 0x1560274d0 <col:60> 'struct mm_struct *' <LValueToRValue>     |     `-DeclRefExpr 0x156027440 <col:60> 'struct mm_struct *' lvalue ParmVar 0x156026628 'mm' 'struct mm_struct *'     `-ReturnStmt 0x156027550 <line:16:2, col:9>       `-IntegerLiteral 0x156027530 <col:9> 'int' 0 ","20808":"`-FunctionDecl 0x1440fbc88  line:1:12 invalid php_snmp_write_exceptions_enabled 'int (int *, int *)' static   |-ParmVarDecl 0x1440fbb28 <col:46, col:63> col:63 referenced invalid snmp_object 'int *'   |-ParmVarDecl 0x1440fbba8 <col:76, col:82> col:82 referenced invalid newval 'int *'   `-CompoundStmt 0x1441159d8 <line:2:1, line:18:1>     |-DeclStmt 0x1440fbdf8 <line:4:2, col:19>     | `-VarDecl 0x1440fbd58 <col:2, col:12> col:6 used ret 'int' cinit     |   `-RecoveryExpr 0x1440fbdd8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144115530 <line:5:2, line:10:2>     | |-BinaryOperator 0x1440fc030 <line:5:6, col:26> 'int' contains-errors '!='     | | |-CallExpr 0x1440fbfb0 <col:6, col:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1440fbf70 <col:6> 'int ()' Function 0x1440fbeb8 'Z_TYPE_P' 'int ()'     | | | `-RecoveryExpr 0x1440fbf90 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1440fc010 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144115508 <col:35, line:10:2>     |   |-CallExpr 0x144115238 <line:7:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1440fc180 <col:3> 'int ()' Function 0x1440fc0c8 'zval_copy_ctor' 'int ()'     |   | `-UnaryOperator 0x144115220 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x144115200 <col:19> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1441153f0 <line:8:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144115340 <col:3> 'int ()' Function 0x144115288 'convert_to_long' 'int ()'     |   | `-UnaryOperator 0x1441153d8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1441153b8 <col:20> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1441154e8 <line:9:3, col:13> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x144115438 <col:3> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x144115418 <col:3> 'int *' lvalue ParmVar 0x1440fbba8 'newval' 'int *'     |     `-UnaryOperator 0x1441154d0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1441154b0 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144115728 <line:12:2, col:51> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x144115598 <col:2, col:15> '<dependent type>' contains-errors lvalue ->exceptions_enabled     | | `-RecoveryExpr 0x144115570 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144115550 <col:2> 'int *' lvalue ParmVar 0x1440fbb28 'snmp_object' 'int *'     | `-CallExpr 0x144115700 <col:36, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1441156c0 <col:36> 'int ()' Function 0x144115608 'Z_LVAL_P' 'int ()'     |   `-RecoveryExpr 0x1441156e0 <col:45> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144115970 <line:14:2, line:16:2>     | |-BinaryOperator 0x1441157f0 <line:14:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x144115748 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1441157d8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1441157b8 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144115958 <col:23, line:16:2>     |   `-CallExpr 0x144115930 <line:15:3, col:19> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1441158f0 <col:3> 'int ()' Function 0x144115838 'zval_dtor' 'int ()'     |     `-RecoveryExpr 0x144115910 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1441159c8 <line:17:2, col:9>       `-ImplicitCastExpr 0x1441159b0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x144115990 <col:9> 'int' contains-errors lvalue Var 0x1440fbd58 'ret' 'int' ","20634":"`-FunctionDecl 0x12c00e2e0  col:10 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x12c809000 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x12c00e388 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x12c809070 <col:10> Implicit 1 ","20211":"`-FunctionDecl 0x13700dd10  line:1:8 clear_pending_exception 'void ()'   `-CompoundStmt 0x13700de98 <col:34, line:3:3> ","20412":"`-FunctionDecl 0x12d00e350  line:1:13 tpacket_destruct_skb 'void (struct sk_buff *)' static   |-ParmVarDecl 0x12d00e248 <col:34, col:50> col:50 used skb 'struct sk_buff *'   `-CompoundStmt 0x12c922678 <line:2:1, line:17:1>     |-DeclStmt 0x12d026a10 <line:3:2, col:42>     | |-RecordDecl 0x12d026648 <col:2, col:9> col:9 struct packet_sock     | `-VarDecl 0x12d0267b8 <col:2, col:41> col:22 used po 'struct packet_sock *' cinit     |   `-CallExpr 0x12d0269d0 <col:27, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12d026950 <col:27> 'int ()' Function 0x12d026898 'pkt_sk' 'int ()'     |     `-RecoveryExpr 0x12d0269a8 <col:34, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d026970 <col:34> 'struct sk_buff *' lvalue ParmVar 0x12d00e248 'skb' 'struct sk_buff *'     |-IfStmt 0x12d0274c8 <line:5:2, line:14:2>     | |-CallExpr 0x12d026bd0 <line:5:6, col:31> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12d026b08 <col:6> 'int ()' Function 0x12d026a50 'likely' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x12d026b88 <col:13, col:25> '<dependent type>' contains-errors lvalue .pg_vec     | |   `-RecoveryExpr 0x12d026b60 <col:13, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d026b28 <col:13> 'struct packet_sock *' contains-errors lvalue Var 0x12d0267b8 'po' 'struct packet_sock *'     | `-CompoundStmt 0x12d027498 <col:34, line:14:2>     |   |-DeclStmt 0x12d026c78 <line:6:3, col:11>     |   | `-VarDecl 0x12d026c10 <col:3, col:9> col:9 used ph 'void *'     |   |-BinaryOperator 0x12d026e80 <line:9:3, col:25> 'void *' contains-errors '='     |   | |-DeclRefExpr 0x12d026c90 <col:3> 'void *' lvalue Var 0x12d026c10 'ph' 'void *'     |   | `-RecoveryExpr 0x12d026e58 <col:8, col:25> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x12d026e18 <col:8, col:22> 'int'     |   |     |-ImplicitCastExpr 0x12d026e00 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x12d026d90 <col:8> 'int ()' Function 0x12d026cd8 'skb_shinfo' 'int ()'     |   |     `-ImplicitCastExpr 0x12d026e40 <col:19> 'struct sk_buff *' <LValueToRValue>     |   |       `-DeclRefExpr 0x12d026db0 <col:19> 'struct sk_buff *' lvalue ParmVar 0x12d00e248 'skb' 'struct sk_buff *'     |   |-CallExpr 0x12d027018 <line:10:3, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12d026f80 <col:3> 'int ()' Function 0x12d026ec8 'packet_dec_pending' 'int ()'     |   | `-UnaryOperator 0x12d027000 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12d026fd8 <col:23, col:27> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12d026fa0 <col:23> 'struct packet_sock *' contains-errors lvalue Var 0x12d0267b8 'po' 'struct packet_sock *'     |   `-CallExpr 0x12d027460 <line:13:3, col:55> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12d027318 <col:3> 'int ()' Function 0x12d027260 '__packet_set_status' 'int ()'     |     |-DeclRefExpr 0x12d027338 <col:23> 'struct packet_sock *' contains-errors lvalue Var 0x12d0267b8 'po' 'struct packet_sock *'     |     |-DeclRefExpr 0x12d027358 <col:27> 'void *' lvalue Var 0x12d026c10 'ph' 'void *'     |     `-BinaryOperator 0x12d027440 <col:31, col:53> '<dependent type>' contains-errors '|'     |       |-RecoveryExpr 0x12d027400 <col:31> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x12d027420 <col:53> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12c922638 <line:16:2, col:16> 'int'       |-ImplicitCastExpr 0x12c922620 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12d0275c8 <col:2> 'int ()' Function 0x12d027510 'sock_wfree' 'int ()'       `-ImplicitCastExpr 0x12c922660 <col:13> 'struct sk_buff *' <LValueToRValue>         `-DeclRefExpr 0x12c922600 <col:13> 'struct sk_buff *' lvalue ParmVar 0x12d00e248 'skb' 'struct sk_buff *' ","20244":"`-FunctionDecl 0x14900dd18  line:1:1 TEST_CASE 'int ()'   `-CompoundStmt 0x14900e020 <line:2:1, line:10:1>     `-CallExpr 0x14900dff8 <line:9:5, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x14900df00 <col:5> 'int ()' Function 0x14900de48 'REQUIRE' 'int ()'       `-BinaryOperator 0x14900dfd8 <col:13, col:20> 'int' contains-errors '=='         |-RecoveryExpr 0x14900df98 <col:13> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14900dfb8 <col:20> '<dependent type>' contains-errors lvalue ","21068":"`-FunctionDecl 0x134128c38  line:1:6 invalid remove_dir 'int (int *, int *, int *, int *, int)'   |-ParmVarDecl 0x134128928 <line:2:3, col:16> col:16 invalid cct 'int *'   |-ParmVarDecl 0x1341289a8 <line:3:3, col:16> col:16 referenced invalid store 'int *'   |-ParmVarDecl 0x134128a28 <col:23, col:35> col:35 invalid mapper 'int *'   |-ParmVarDecl 0x134128aa8 <line:4:3, col:13> col:13 invalid osdriver 'int *'   |-ParmVarDecl 0x134128b28 <line:5:3, <invalid sloc>> col:14 invalid 'int'   `-CompoundStmt 0x134142e90 <line:9:1, line:65:1>     |-RecoveryExpr 0x134128d68 <line:12:3> '<dependent type>' contains-errors lvalue     `-IfStmt 0x134142e70 <line:52:3, line:61:3>       |-RecoveryExpr 0x134142d90 <line:52:7> '_Bool' contains-errors       `-CompoundStmt 0x134142e60 <col:12, line:61:3> ","20609":"`-FunctionDecl 0x11d143160  col:37 implicit used strndup 'char *(const char *, unsigned long)' extern   |-ParmVarDecl 0x11d143260 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x11d1432c8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11d143208 <<invalid sloc>> Implicit 951 ","20330":"`-FunctionDecl 0x12e928318  line:1:12 invalid read_sane_extended 'int (int *, int *, const char *)'   |-ParmVarDecl 0x12e928128 <col:31, col:37> col:37 invalid f 'int *'   |-ParmVarDecl 0x12e9281a8 <col:40, col:54> col:54 invalid val 'int *'   |-ParmVarDecl 0x12e928228 <col:59, col:71> col:71 used fn 'const char *'   `-CompoundStmt 0x12e941dd0 <line:3:1, line:24:1>     |-DeclStmt 0x12e928458 <line:4:2, col:16>     | `-VarDecl 0x12e9283f0 <col:2, col:15> col:15 used i 'unsigned int'     `-IfStmt 0x12e941a30 <line:14:2, line:17:2>       |-RecoveryExpr 0x12e941860 <line:14:5, col:33> '_Bool' contains-errors       `-CompoundStmt 0x12e941a20 <col:37, line:17:2> ","20675":"`-FunctionDecl 0x14980ddf8  line:1:1 invalid gdm_session_worker_finalize 'int (int *)'   |-ParmVarDecl 0x14980dd28 <col:30, col:39> col:39 invalid object 'int *'   `-CompoundStmt 0x149124a00 <line:2:1, line:38:1>     |-CallExpr 0x14980e100 <line:5:9, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14980e020 <col:9> 'int ()' Function 0x14980df68 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x14980e0e0 <col:27, col:37> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14980e040 <col:27> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14980e0c0 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14980e290 <line:6:9, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14980e128 <col:9> 'int ()' Function 0x14980df68 'g_return_if_fail' 'int ()'     | `-CallExpr 0x14980e268 <col:27, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14980e228 <col:27> 'int ()' Function 0x14980e170 'GDM_IS_SESSION_WORKER' 'int ()'     |   `-RecoveryExpr 0x14980e248 <col:50> '<dependent type>' contains-errors lvalue     |-CallExpr 0x149122d88 <line:10:9, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149122c00 <col:9> 'int ()' Function 0x14980df68 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x149122d68 <col:27, col:43> 'int' contains-errors '!='     |   |-CXXDependentScopeMemberExpr 0x149122d00 <col:27, col:35> '<dependent type>' contains-errors lvalue ->priv     |   | `-RecoveryExpr 0x149122ce0 <col:27> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x149122d48 <col:43> '<dependent type>' contains-errors lvalue     |-CallExpr 0x149122f10 <line:12:9, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149122e90 <col:9> 'int ()' Function 0x149122dd8 'gdm_session_worker_unwatch_child' 'int ()'     | `-RecoveryExpr 0x149122ef0 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1491236a8 <line:14:9, line:17:9>     | |-BinaryOperator 0x1491230d0 <line:14:13, col:39> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x149123088 <col:13, col:27> '<dependent type>' contains-errors lvalue ->child_pid     | | | `-CXXDependentScopeMemberExpr 0x149123040 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x149123020 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x149122fe0 <col:39> 'int' 0     | `-CompoundStmt 0x149123688 <col:42, line:17:9>     |   |-CallExpr 0x1491233b0 <line:15:17, col:65> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1491231d0 <col:17> 'int ()' Function 0x149123118 'gdm_signal_pid' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x149123348 <col:33, col:47> '<dependent type>' contains-errors lvalue ->child_pid     |   | | `-CXXDependentScopeMemberExpr 0x149123300 <col:33, col:41> '<dependent type>' contains-errors lvalue ->priv     |   | |   `-RecoveryExpr 0x1491232e0 <col:33> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x149123390 <col:58> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x149123660 <line:16:17, col:57> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1491234c0 <col:17> 'int ()' Function 0x149123408 'gdm_wait_on_pid' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x149123618 <col:34, col:48> '<dependent type>' contains-errors lvalue ->child_pid     |       `-CXXDependentScopeMemberExpr 0x1491235d0 <col:34, col:42> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x1491235b0 <col:34> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1491239a8 <line:19:9, line:21:9>       |-BinaryOperator 0x149123878 <line:19:13, col:41> 'int' contains-errors '!='       | |-CXXDependentScopeMemberExpr 0x149123810 <col:13, col:27> '<dependent type>' contains-errors lvalue ->pam_handle       | | `-CXXDependentScopeMemberExpr 0x1491237c8 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv       | |   `-RecoveryExpr 0x1491237a8 <col:13> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x149123858 <col:41> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x149123998 <col:47, line:21:9> ","20259":"`-FunctionDecl 0x13002aa00  col:7 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13002ab00 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13002aaa8 <<invalid sloc>> Implicit 873 ","21009":"`-FunctionDecl 0x13c87de68  col:47 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x13c87df68 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13c87df10 <<invalid sloc>> Implicit 902 ","20690":"`-FunctionDecl 0x14680e350  line:1:13 vhost_net_ubuf_put_and_wait 'void (struct vhost_net_ubuf_ref *)' static   |-ParmVarDecl 0x14680e248 <col:41, col:68> col:68 used ubufs 'struct vhost_net_ubuf_ref *'   `-CompoundStmt 0x146826dd8 <line:2:1, line:6:1>     |-CallExpr 0x146826870 <line:3:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146826770 <col:2> 'int ()' Function 0x1468266b8 'kref_put' 'int ()'     | |-UnaryOperator 0x1468267f0 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1468267c8 <col:12, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146826790 <col:12> 'struct vhost_net_ubuf_ref *' lvalue ParmVar 0x14680e248 'ubufs' 'struct vhost_net_ubuf_ref *'     | `-RecoveryExpr 0x146826850 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x146826c00 <line:4:2, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146826980 <col:2> 'int ()' Function 0x1468268c8 'wait_event' 'int ()'     | |-RecoveryExpr 0x1468269d8 <col:13, col:20> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1468269a0 <col:13> 'struct vhost_net_ubuf_ref *' lvalue ParmVar 0x14680e248 'ubufs' 'struct vhost_net_ubuf_ref *'     | `-UnaryOperator 0x146826be8 <col:26, col:60> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x146826bc0 <col:27, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x146826ae0 <col:27> 'int ()' Function 0x146826a28 'atomic_read' 'int ()'     |     `-UnaryOperator 0x146826ba8 <col:39, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-CXXDependentScopeMemberExpr 0x146826b60 <col:40, col:52> '<dependent type>' contains-errors lvalue .refcount     |         `-RecoveryExpr 0x146826b38 <col:40, col:47> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x146826b00 <col:40> 'struct vhost_net_ubuf_ref *' lvalue ParmVar 0x14680e248 'ubufs' 'struct vhost_net_ubuf_ref *'     `-CallExpr 0x146826d98 <line:5:2, col:13> 'int'       |-ImplicitCastExpr 0x146826d80 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x146826d10 <col:2> 'int ()' Function 0x146826c58 'kfree' 'int ()'       `-ImplicitCastExpr 0x146826dc0 <col:8> 'struct vhost_net_ubuf_ref *' <LValueToRValue>         `-DeclRefExpr 0x146826d30 <col:8> 'struct vhost_net_ubuf_ref *' lvalue ParmVar 0x14680e248 'ubufs' 'struct vhost_net_ubuf_ref *' ","20255":"`-FunctionDecl 0x149026878  line:1:12 __blk_send_generic 'int (struct request_queue *, struct gendisk *, int, int)' static   |-ParmVarDecl 0x14900e248 <col:31, col:53> col:53 used q 'struct request_queue *'   |-ParmVarDecl 0x149026628 <col:56, col:72> col:72 used bd_disk 'struct gendisk *'   |-ParmVarDecl 0x1490266a8 <line:2:10, col:14> col:14 used cmd 'int'   |-ParmVarDecl 0x149026728 <col:19, col:23> col:23 used data 'int'   `-CompoundStmt 0x158842198 <line:3:1, line:17:1>     |-DeclStmt 0x149026b78 <line:4:2, col:20>     | |-RecordDecl 0x149026988 <col:2, col:9> col:9 struct request     | `-VarDecl 0x149026af8 <col:2, col:18> col:18 used rq 'struct request *'     |-DeclStmt 0x149026c10 <line:5:2, col:9>     | `-VarDecl 0x149026ba8 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x149026eb0 <line:7:2, col:43> 'struct request *' contains-errors '='     | |-DeclRefExpr 0x149026c28 <col:2> 'struct request *' lvalue Var 0x149026af8 'rq' 'struct request *'     | `-CallExpr 0x149026e78 <col:7, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149026d70 <col:7> 'int ()' Function 0x149026cb8 'blk_get_request' 'int ()'     |   |-DeclRefExpr 0x149026d90 <col:23> 'struct request_queue *' lvalue ParmVar 0x14900e248 'q' 'struct request_queue *'     |   |-RecoveryExpr 0x149026e38 <col:26> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x149026e58 <col:33> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149026f88 <line:8:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x149026f08 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149026ed0 <col:2> 'struct request *' lvalue Var 0x149026af8 'rq' 'struct request *'     | `-RecoveryExpr 0x149026f68 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149027060 <line:9:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x149026fe0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149026fa8 <col:2> 'struct request *' lvalue Var 0x149026af8 'rq' 'struct request *'     | `-RecoveryExpr 0x149027040 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149027158 <line:10:2, col:15> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x149027118 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x149027100 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x1490270b8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x149027080 <col:2> 'struct request *' lvalue Var 0x149026af8 'rq' 'struct request *'     | | `-IntegerLiteral 0x1490270e0 <col:10> 'int' 0     | `-DeclRefExpr 0x149027138 <col:15> 'int' lvalue ParmVar 0x1490266a8 'cmd' 'int'     |-BinaryOperator 0x149027250 <line:11:2, col:15> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x149027210 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x1490271f8 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x1490271b0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x149027178 <col:2> 'struct request *' lvalue Var 0x149026af8 'rq' 'struct request *'     | | `-IntegerLiteral 0x1490271d8 <col:10> 'int' 4     | `-DeclRefExpr 0x149027230 <col:15> 'int' lvalue ParmVar 0x149026728 'data' 'int'     |-BinaryOperator 0x1490272f0 <line:12:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1490272a8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149027270 <col:2> 'struct request *' lvalue Var 0x149026af8 'rq' 'struct request *'     | `-IntegerLiteral 0x1490272d0 <col:16> 'int' 6     |-BinaryOperator 0x149027580 <line:13:2, col:40> 'int' '='     | |-DeclRefExpr 0x149027310 <col:2> 'int' lvalue Var 0x149026ba8 'err' 'int'     | `-CallExpr 0x1490274f8 <col:8, col:40> 'int'     |   |-ImplicitCastExpr 0x1490274e0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x149027410 <col:8> 'int ()' Function 0x149027358 'blk_execute_rq' 'int ()'     |   |-ImplicitCastExpr 0x149027538 <col:23> 'struct request_queue *' <LValueToRValue>     |   | `-DeclRefExpr 0x149027430 <col:23> 'struct request_queue *' lvalue ParmVar 0x14900e248 'q' 'struct request_queue *'     |   |-ImplicitCastExpr 0x149027550 <col:26> 'struct gendisk *' <LValueToRValue>     |   | `-DeclRefExpr 0x149027450 <col:26> 'struct gendisk *' lvalue ParmVar 0x149026628 'bd_disk' 'struct gendisk *'     |   |-ImplicitCastExpr 0x149027568 <col:35> 'struct request *' <LValueToRValue>     |   | `-DeclRefExpr 0x149027470 <col:35> 'struct request *' lvalue Var 0x149026af8 'rq' 'struct request *'     |   `-IntegerLiteral 0x149027490 <col:39> 'int' 0     |-CallExpr 0x158842110 <line:14:2, col:20> 'int'     | |-ImplicitCastExpr 0x1588420f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1588420b8 <col:2> 'int ()' Function 0x158842000 'blk_put_request' 'int ()'     | `-ImplicitCastExpr 0x158842138 <col:18> 'struct request *' <LValueToRValue>     |   `-DeclRefExpr 0x1588420d8 <col:18> 'struct request *' lvalue Var 0x149026af8 'rq' 'struct request *'     `-ReturnStmt 0x158842188 <line:16:2, col:9>       `-ImplicitCastExpr 0x158842170 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x158842150 <col:9> 'int' lvalue Var 0x149026ba8 'err' 'int' ","20987":"`-FunctionDecl 0x12482af48  col:27 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12482b048 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12482aff0 <<invalid sloc>> Implicit 902 ","20433":"`-FunctionDecl 0x143928318  line:1:1 invalid alt_merge_opt_exact 'int (int *, int *, int *)'   |-ParmVarDecl 0x143928128 <col:21, col:29> col:29 referenced invalid to 'int *'   |-ParmVarDecl 0x1439281a8 <col:33, col:41> col:41 invalid add 'int *'   |-ParmVarDecl 0x143928228 <col:46, col:54> col:54 invalid env 'int *'   `-CompoundStmt 0x1439420a0 <line:2:1, line:33:1>     |-DeclStmt 0x143928578 <line:3:3, col:16>     | |-VarDecl 0x1439283f0 <col:3, col:7> col:7 used i 'int'     | |-VarDecl 0x143928470 <col:3, col:10> col:10 used j 'int'     | `-VarDecl 0x1439284f0 <col:3, col:13> col:13 used len 'int'     |-IfStmt 0x144008f50 <line:5:3, line:8:3>     | |-BinaryOperator 0x1439286e0 <line:5:7, col:35> 'int' contains-errors '||'     | | |-BinaryOperator 0x143928618 <col:7, col:19> 'int' contains-errors '=='     | | | |-CXXDependentScopeMemberExpr 0x1439285b0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->len     | | | | `-RecoveryExpr 0x143928590 <col:7> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x1439285f8 <col:19> 'int' 0     | | `-BinaryOperator 0x1439286c0 <col:24, col:35> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x143928658 <col:24, col:28> '<dependent type>' contains-errors lvalue ->len     | |   | `-RecoveryExpr 0x143928638 <col:24> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1439286a0 <col:35> 'int' 0     | `-CompoundStmt 0x144008f30 <col:38, line:8:3>     |   |-CallExpr 0x144008ef8 <line:6:5, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144008eb8 <col:5> 'int ()' Function 0x144008e00 'clear_opt_exact' 'int ()'     |   | `-RecoveryExpr 0x144008ed8 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x144008f20 <line:7:5>     |-IfStmt 0x144009250 <line:10:3, line:13:3>     | |-UnaryOperator 0x1440091a0 <line:10:7, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x144009170 <col:9, col:39> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x144009050 <col:9> 'int ()' Function 0x144008f98 'mml_is_equal' 'int ()'     | |   |-UnaryOperator 0x1440090d8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-CXXDependentScopeMemberExpr 0x144009090 <col:23, col:27> '<dependent type>' contains-errors lvalue ->mm     | |   |   `-RecoveryExpr 0x144009070 <col:23> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x144009158 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x144009110 <col:32, col:37> '<dependent type>' contains-errors lvalue ->mm     | |       `-RecoveryExpr 0x1440090f0 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x144009230 <col:42, line:13:3>     |   |-CallExpr 0x1440091f8 <line:11:5, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1440091b8 <col:5> 'int ()' Function 0x144008e00 'clear_opt_exact' 'int ()'     |   | `-RecoveryExpr 0x1440091d8 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x144009220 <line:12:5>     |-ForStmt 0x143941868 <line:15:3, line:24:3>     | |-BinaryOperator 0x1440092b0 <line:15:8, col:12> 'int' '='     | | |-DeclRefExpr 0x144009270 <col:8> 'int' lvalue Var 0x1439283f0 'i' 'int'     | | `-IntegerLiteral 0x144009290 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x144009420 <col:15, col:39> 'int' contains-errors '&&'     | | |-BinaryOperator 0x144009358 <col:15, col:23> 'int' contains-errors '<'     | | | |-DeclRefExpr 0x1440092d0 <col:15> 'int' lvalue Var 0x1439283f0 'i' 'int'     | | | `-CXXDependentScopeMemberExpr 0x144009310 <col:19, col:23> '<dependent type>' contains-errors lvalue ->len     | | |   `-RecoveryExpr 0x1440092f0 <col:19> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x144009400 <col:30, col:39> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x144009378 <col:30> 'int' lvalue Var 0x1439283f0 'i' 'int'     | |   `-CXXDependentScopeMemberExpr 0x1440093b8 <col:34, col:39> '<dependent type>' contains-errors lvalue ->len     | |     `-RecoveryExpr 0x144009398 <col:34> '<dependent type>' contains-errors lvalue     | |-<<<NULL>>>     | `-CompoundStmt 0x143941830 <col:46, line:24:3>     |   |-IfStmt 0x144009618 <line:16:5, col:32>     |   | |-BinaryOperator 0x1440095f0 <col:9, col:29> 'int' contains-errors '!='     |   | | |-ArraySubscriptExpr 0x1440094f8 <col:9, col:16> '<dependent type>' contains-errors lvalue     |   | | | |-ImplicitCastExpr 0x1440094c8 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | `-CXXDependentScopeMemberExpr 0x144009460 <col:9, col:13> '<dependent type>' contains-errors lvalue ->s     |   | | | |   `-RecoveryExpr 0x144009440 <col:9> '<dependent type>' contains-errors lvalue     |   | | | `-ImplicitCastExpr 0x1440094e0 <col:15> 'int' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x1440094a8 <col:15> 'int' lvalue Var 0x1439283f0 'i' 'int'     |   | | `-ArraySubscriptExpr 0x1440095d0 <col:21, col:29> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x1440095a0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-CXXDependentScopeMemberExpr 0x144009538 <col:21, col:26> '<dependent type>' contains-errors lvalue ->s     |   | |   |   `-RecoveryExpr 0x144009518 <col:21> '<dependent type>' contains-errors lvalue     |   | |   `-ImplicitCastExpr 0x1440095b8 <col:28> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x144009580 <col:28> 'int' lvalue Var 0x1439283f0 'i' 'int'     |   | `-BreakStmt 0x144009610 <col:32>     |   |-BinaryOperator 0x144009898 <line:17:5, col:37> 'int' contains-errors '='     |   | |-DeclRefExpr 0x144009638 <col:5> 'int' lvalue Var 0x1439284f0 'len' 'int'     |   | `-CallExpr 0x144009868 <col:11, col:37> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x144009738 <col:11> 'int ()' Function 0x144009680 'enclen' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x144009778 <col:18, col:23> '<dependent type>' contains-errors lvalue ->enc     |   |   | `-RecoveryExpr 0x144009758 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x144009848 <col:28, col:36> '<dependent type>' contains-errors '+'     |   |     |-CXXDependentScopeMemberExpr 0x1440097e0 <col:28, col:32> '<dependent type>' contains-errors lvalue ->s     |   |     | `-RecoveryExpr 0x1440097c0 <col:28> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x144009828 <col:36> 'int' lvalue Var 0x1439283f0 'i' 'int'     |   |-ForStmt 0x144009ca0 <line:19:5, line:21:5>     |   | |-BinaryOperator 0x1440098f8 <line:19:10, col:14> 'int' '='     |   | | |-DeclRefExpr 0x1440098b8 <col:10> 'int' lvalue Var 0x143928470 'j' 'int'     |   | | `-IntegerLiteral 0x1440098d8 <col:14> 'int' 1     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x144009988 <col:17, col:21> 'int' '<'     |   | | |-ImplicitCastExpr 0x144009958 <col:17> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x144009918 <col:17> 'int' lvalue Var 0x143928470 'j' 'int'     |   | | `-ImplicitCastExpr 0x144009970 <col:21> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x144009938 <col:21> 'int' lvalue Var 0x1439284f0 'len' 'int'     |   | |-UnaryOperator 0x1440099c8 <col:26, col:27> 'int' postfix '++'     |   | | `-DeclRefExpr 0x1440099a8 <col:26> 'int' lvalue Var 0x143928470 'j' 'int'     |   | `-CompoundStmt 0x144009c88 <col:31, line:21:5>     |   |   `-IfStmt 0x144009c68 <line:20:7, col:38>     |   |     |-BinaryOperator 0x144009c40 <col:11, col:35> 'int' contains-errors '!='     |   |     | |-ArraySubscriptExpr 0x144009af0 <col:11, col:20> '<dependent type>' contains-errors lvalue     |   |     | | |-ImplicitCastExpr 0x144009ad8 <col:11, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   |     | | | `-CXXDependentScopeMemberExpr 0x144009a00 <col:11, col:15> '<dependent type>' contains-errors lvalue ->s     |   |     | | |   `-RecoveryExpr 0x1440099e0 <col:11> '<dependent type>' contains-errors lvalue     |   |     | | `-BinaryOperator 0x144009ab8 <col:17, col:19> 'int' '+'     |   |     | |   |-ImplicitCastExpr 0x144009a88 <col:17> 'int' <LValueToRValue>     |   |     | |   | `-DeclRefExpr 0x144009a48 <col:17> 'int' lvalue Var 0x1439283f0 'i' 'int'     |   |     | |   `-ImplicitCastExpr 0x144009aa0 <col:19> 'int' <LValueToRValue>     |   |     | |     `-DeclRefExpr 0x144009a68 <col:19> 'int' lvalue Var 0x143928470 'j' 'int'     |   |     | `-ArraySubscriptExpr 0x144009c20 <col:25, col:35> '<dependent type>' contains-errors lvalue     |   |     |   |-ImplicitCastExpr 0x144009c08 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   | `-CXXDependentScopeMemberExpr 0x144009b30 <col:25, col:30> '<dependent type>' contains-errors lvalue ->s     |   |     |   |   `-RecoveryExpr 0x144009b10 <col:25> '<dependent type>' contains-errors lvalue     |   |     |   `-BinaryOperator 0x144009be8 <col:32, col:34> 'int' '+'     |   |     |     |-ImplicitCastExpr 0x144009bb8 <col:32> 'int' <LValueToRValue>     |   |     |     | `-DeclRefExpr 0x144009b78 <col:32> 'int' lvalue Var 0x1439283f0 'i' 'int'     |   |     |     `-ImplicitCastExpr 0x144009bd0 <col:34> 'int' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x144009b98 <col:34> 'int' lvalue Var 0x143928470 'j' 'int'     |   |     `-BreakStmt 0x144009c60 <col:38>     |   |-IfStmt 0x144009d70 <line:22:5, col:18>     |   | |-BinaryOperator 0x144009d48 <col:9, col:13> 'int' '<'     |   | | |-ImplicitCastExpr 0x144009d18 <col:9> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x144009cd8 <col:9> 'int' lvalue Var 0x143928470 'j' 'int'     |   | | `-ImplicitCastExpr 0x144009d30 <col:13> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x144009cf8 <col:13> 'int' lvalue Var 0x1439284f0 'len' 'int'     |   | `-BreakStmt 0x144009d68 <col:18>     |   `-CompoundAssignOperator 0x143941800 <line:23:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     |-DeclRefExpr 0x144009d90 <col:5> 'int' lvalue Var 0x1439283f0 'i' 'int'     |     `-ImplicitCastExpr 0x144009dd0 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x144009db0 <col:10> 'int' lvalue Var 0x1439284f0 'len' 'int'     |-IfStmt 0x143941bb0 <line:26:3, line:28:3>     | |-BinaryOperator 0x143941aa8 <line:26:7, col:51> 'int' contains-errors '||'     | | |-BinaryOperator 0x1439419e0 <col:7, col:36> 'int' contains-errors '||'     | | | |-UnaryOperator 0x143941920 <col:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x143941908 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-CXXDependentScopeMemberExpr 0x1439418c0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->reach_end     | | | |     `-RecoveryExpr 0x1439418a0 <col:9> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x1439419c0 <col:27, col:36> 'int' contains-errors '<'     | | |   |-DeclRefExpr 0x143941938 <col:27> 'int' lvalue Var 0x1439283f0 'i' 'int'     | | |   `-CXXDependentScopeMemberExpr 0x143941978 <col:31, col:36> '<dependent type>' contains-errors lvalue ->len     | | |     `-RecoveryExpr 0x143941958 <col:31> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x143941a88 <col:43, col:51> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x143941a00 <col:43> 'int' lvalue Var 0x1439283f0 'i' 'int'     | |   `-CXXDependentScopeMemberExpr 0x143941a40 <col:47, col:51> '<dependent type>' contains-errors lvalue ->len     | |     `-RecoveryExpr 0x143941a20 <col:47> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143941b98 <col:56, line:28:3>     |   `-BinaryOperator 0x143941b78 <line:27:5, col:21> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x143941b10 <col:5, col:9> '<dependent type>' contains-errors lvalue ->reach_end     |     | `-RecoveryExpr 0x143941ae8 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x143941ac8 <col:5> 'int *' lvalue ParmVar 0x143928128 'to' 'int *'     |     `-IntegerLiteral 0x143941b58 <col:21> 'int' 0     |-BinaryOperator 0x143941c80 <line:29:3, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143941c18 <col:3, col:7> '<dependent type>' contains-errors lvalue ->len     | | `-RecoveryExpr 0x143941bf0 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x143941bd0 <col:3> 'int *' lvalue ParmVar 0x143928128 'to' 'int *'     | `-DeclRefExpr 0x143941c60 <col:13> 'int' lvalue Var 0x1439283f0 'i' 'int'     |-CallExpr 0x143941ea0 <line:31:3, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143941d80 <col:3> 'int ()' Function 0x143941cc8 'alt_merge_opt_anc_info' 'int ()'     | |-UnaryOperator 0x143941e08 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x143941dc0 <col:27, col:31> '<dependent type>' contains-errors lvalue ->anc     | |   `-RecoveryExpr 0x143941da0 <col:27> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x143941e88 <col:36, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x143941e40 <col:37, col:42> '<dependent type>' contains-errors lvalue ->anc     |     `-RecoveryExpr 0x143941e20 <col:37> '<dependent type>' contains-errors lvalue     `-IfStmt 0x143942080 <line:32:3, col:40>       |-UnaryOperator 0x143941f50 <col:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x143941f38 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x143941ef0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->reach_end       |     `-RecoveryExpr 0x143941ed0 <col:9> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x143942060 <col:24, col:40> '<dependent type>' contains-errors '='         |-CXXDependentScopeMemberExpr 0x143941ff8 <col:24, col:32> '<dependent type>' contains-errors lvalue .right         | `-CXXDependentScopeMemberExpr 0x143941fb0 <col:24, col:28> '<dependent type>' contains-errors lvalue ->anc         |   `-RecoveryExpr 0x143941f88 <col:24> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x143941f68 <col:24> 'int *' lvalue ParmVar 0x143928128 'to' 'int *'         `-IntegerLiteral 0x143942040 <col:40> 'int' 0 ","20385":"`-FunctionDecl 0x125026978  line:1:1 dump_counters 'int (struct sk_buff *, struct nf_conn_acct *, enum ip_conntrack_dir, int)'   |-ParmVarDecl 0x12500e248 <col:15, col:31> col:31 used skb 'struct sk_buff *'   |-ParmVarDecl 0x125026628 <col:36, col:57> col:57 used acct 'struct nf_conn_acct *'   |-ParmVarDecl 0x1250267a8 <line:2:8, col:30> col:30 invalid dir 'enum ip_conntrack_dir'   |-ParmVarDecl 0x125026828 <col:35, col:39> col:39 used type 'int'   `-CompoundStmt 0x12502b060 <line:3:1, line:33:1>     |-DeclStmt 0x125026cc0 <line:4:2, col:69>     | |-EnumDecl 0x125026a88 <col:2, col:7> col:7 ctattr_type     | `-VarDecl 0x125026ba8 <col:2, col:19> col:19 invalid attr 'enum ctattr_type'     |-DeclStmt 0x125026f28 <line:5:2, col:49>     | |-RecordDecl 0x125026cd8 <col:2, col:9> col:9 struct nf_conn_counter     | `-VarDecl 0x125026e48 <col:2, col:42> col:26 used counter 'struct nf_conn_counter *' cinit     |   `-RecoveryExpr 0x125026ee8 <col:36, col:42> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125026eb0 <col:36> 'struct nf_conn_acct *' lvalue ParmVar 0x125026628 'acct' 'struct nf_conn_acct *'     |-DeclStmt 0x125027128 <line:6:2, col:27>     | |-RecordDecl 0x125026f40 <col:2, col:9> col:9 struct nlattr     | `-VarDecl 0x1250270a8 <col:2, col:17> col:17 used nest_count 'struct nlattr *'     |-IfStmt 0x125027cb0 <line:9:2, line:15:2> has_else     | |-BinaryOperator 0x1250271b8 <line:9:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x125027140 <col:6> 'int' lvalue ParmVar 0x125026828 'type' 'int'     | | `-RecoveryExpr 0x125027198 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x125027790 <col:41, line:12:2>     | `-CompoundStmt 0x125027ca0 <col:9, line:15:2>     |-BinaryOperator 0x125027e70 <line:17:2, col:39> 'struct nlattr *' contains-errors '='     | |-DeclRefExpr 0x125027ce0 <col:2> 'struct nlattr *' lvalue Var 0x1250270a8 'nest_count' 'struct nlattr *'     | `-CallExpr 0x125027e40 <col:15, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125027de0 <col:15> 'int ()' Function 0x125027d28 'nla_nest_start' 'int ()'     |   |-DeclRefExpr 0x125027e00 <col:30> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     |   `-RecoveryExpr 0x125027e20 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125027f48 <line:18:2, line:19:8>     | |-UnaryOperator 0x125027ec8 <line:18:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x125027eb0 <col:7> 'struct nlattr *' <LValueToRValue>     | |   `-DeclRefExpr 0x125027e90 <col:7> 'struct nlattr *' lvalue Var 0x1250270a8 'nest_count' 'struct nlattr *'     | `-GotoStmt 0x125027f30 <line:19:3, col:8> 'nla_put_failure' 0x125027ee0     |-IfStmt 0x125028530 <line:21:2, line:25:8>     | |-BinaryOperator 0x1250284f8 <line:21:6, line:24:21> 'int' contains-errors '||'     | | |-CallExpr 0x1250283f0 <line:21:6, line:22:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x125028048 <line:21:6> 'int ()' Function 0x125027f90 'nla_put_be64' 'int ()'     | | | |-DeclRefExpr 0x125028068 <col:19> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     | | | |-RecoveryExpr 0x125028368 <col:24> '<dependent type>' contains-errors lvalue     | | | |-CallExpr 0x1250283a8 <col:46, col:62> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x125028180 <col:46> 'int ()' Function 0x1250280c8 'cpu_to_be64' 'int ()'     | | | | `-RecoveryExpr 0x125028388 <col:58> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x1250283d0 <line:22:5> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1250284b8 <line:23:6, line:24:21> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x125028238 <line:23:6> 'int ()' Function 0x125027f90 'nla_put_be64' 'int ()'     | |   |-DeclRefExpr 0x125028258 <col:19> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     | |   |-RecoveryExpr 0x125028430 <col:24> '<dependent type>' contains-errors lvalue     | |   |-CallExpr 0x125028470 <col:44, col:61> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x125028290 <col:44> 'int ()' Function 0x1250280c8 'cpu_to_be64' 'int ()'     | |   | `-RecoveryExpr 0x125028450 <col:56> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x125028498 <line:24:5> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x125028518 <line:25:3, col:8> 'nla_put_failure' 0x125027ee0     |-CallExpr 0x12502af68 <line:27:2, col:30> 'int'     | |-ImplicitCastExpr 0x12502af50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12502aeb8 <col:2> 'int ()' Function 0x12502ae00 'nla_nest_end' 'int ()'     | |-ImplicitCastExpr 0x12502af98 <col:15> 'struct sk_buff *' <LValueToRValue>     | | `-DeclRefExpr 0x12502aed8 <col:15> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     | `-ImplicitCastExpr 0x12502afb0 <col:20> 'struct nlattr *' <LValueToRValue>     |   `-DeclRefExpr 0x12502aef8 <col:20> 'struct nlattr *' lvalue Var 0x1250270a8 'nest_count' 'struct nlattr *'     |-ReturnStmt 0x12502afe8 <line:29:2, col:9>     | `-IntegerLiteral 0x12502afc8 <col:9> 'int' 0     `-LabelStmt 0x12502b040 <line:31:1, line:32:10> 'nla_put_failure'       `-ReturnStmt 0x12502b030 <col:2, col:10>         `-UnaryOperator 0x12502b018 <col:9, col:10> 'int' prefix '-'           `-IntegerLiteral 0x12502aff8 <col:10> 'int' 1 ","20423":"`-FunctionDecl 0x15b01be58  line:1:1 invalid storageVolLookupByPath 'int (int, const char *)'   |-ParmVarDecl 0x15b01bcf0 <col:24, col:38> col:38 invalid conn 'int'   |-ParmVarDecl 0x15b01bd70 <line:2:24, col:36> col:36 used path 'const char *'   `-CompoundStmt 0x15c0093c0 <line:3:1, line:39:1>     |-DeclStmt 0x15a92d7b8 <line:6:5, line:7:39>     | |-RecordDecl 0x15b01bf40 <line:6:5, col:12> col:12 struct storageVolLookupData     | `-VarDecl 0x15b01c038 <col:5, col:33> col:33 invalid data 'struct storageVolLookupData'     |-IfStmt 0x15a92daf8 <line:10:5, line:11:16>     | |-UnaryOperator 0x15a92da98 <line:10:9, col:53> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ParenExpr 0x15a92da78 <col:10, col:53> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x15a92da58 <col:11, col:52> '<dependent type>' contains-errors '='     | |     |-CXXDependentScopeMemberExpr 0x15a92d7f0 <col:11, col:16> '<dependent type>' contains-errors lvalue .cleanpath     | |     | `-RecoveryExpr 0x15a92d7d0 <col:11> '<dependent type>' contains-errors lvalue     | |     `-CallExpr 0x15a92da18 <col:28, col:52> 'int'     | |       |-ImplicitCastExpr 0x15a92da00 <col:28> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x15a92d990 <col:28> 'int ()' Function 0x15a92d8d8 'virFileSanitizePath' 'int ()'     | |       `-ImplicitCastExpr 0x15a92da40 <col:48> 'const char *' <LValueToRValue>     | |         `-DeclRefExpr 0x15a92d9b0 <col:48> 'const char *' lvalue ParmVar 0x15b01bd70 'path' 'const char *'     | `-ReturnStmt 0x15a92dae8 <line:11:9, col:16>     |   `-RecoveryExpr 0x15a92dac8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a92e558 <line:13:5, line:24:5>     | |-RecoveryExpr 0x15a92dda0 <line:13:9, line:15:60> '_Bool' contains-errors     | `-CompoundStmt 0x15a92e540 <col:68, line:24:5>     |   `-IfStmt 0x15a92e420 <line:18:9, line:22:9>     |     |-BinaryOperator 0x15a92e170 <line:18:13, col:75> 'int' contains-errors '=='     |     | |-CallExpr 0x15a92e138 <col:13, col:70> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x15a92dfe0 <col:13> 'int ()' Function 0x15a92df28 'virStorageVolLookupByPathEnsureACL' 'int ()'     |     | | |-RecoveryExpr 0x15a92e000 <col:48> '<dependent type>' contains-errors lvalue     |     | | |-RecoveryExpr 0x15a92e118 <col:54> '<dependent type>' contains-errors lvalue     |     | | `-CXXDependentScopeMemberExpr 0x15a92e058 <col:59, col:64> '<dependent type>' contains-errors lvalue .voldef     |     | |   `-RecoveryExpr 0x15a92e038 <col:59> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x15a92e0d8 <col:75> 'int' 0     |     `-CompoundStmt 0x15a92e410 <col:78, line:22:9>     |-IfStmt 0x15c009210 <line:26:5, line:35:5>     | |-RecoveryExpr 0x15a92e578 <line:26:9, col:10> '_Bool' contains-errors     | `-CompoundStmt 0x15c0091f8 <col:15, line:35:5>     |   `-IfStmt 0x15c0091c8 <line:27:9, line:34:9> has_else     |     |-CallExpr 0x15c008d60 <line:27:13, col:39> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x15c008cb8 <col:13> 'int ()' Function 0x15c008c00 'STREQ' 'int ()'     |     | |-DeclRefExpr 0x15c008cd8 <col:19> 'const char *' lvalue ParmVar 0x15b01bd70 'path' 'const char *'     |     | `-CXXDependentScopeMemberExpr 0x15c008d18 <col:25, col:30> '<dependent type>' contains-errors lvalue .cleanpath     |     |   `-RecoveryExpr 0x15c008cf8 <col:25> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x15c009068 <col:42, line:30:9>     |     `-CompoundStmt 0x15c0091b8 <col:16, line:34:9>     `-CallExpr 0x15c009398 <line:37:5, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x15c009310 <col:5> 'int ()' Function 0x15c009258 'VIR_FREE' 'int ()'       `-CXXDependentScopeMemberExpr 0x15c009350 <col:14, col:19> '<dependent type>' contains-errors lvalue .cleanpath         `-RecoveryExpr 0x15c009330 <col:14> '<dependent type>' contains-errors lvalue ","21071":"`-FunctionDecl 0x14600dd98  line:1:17 evtchn_2l_max_channels 'unsigned int (void)' static   `-CompoundStmt 0x14600dee8 <line:2:1, line:4:1>     `-ReturnStmt 0x14600ded8 <line:3:2, col:9>       `-RecoveryExpr 0x14600deb8 <col:9> '<dependent type>' contains-errors lvalue ","20653":"`-FunctionDecl 0x1329281f8  line:1:15 invalid quote_any_token 'int *(int *)' static   |-ParmVarDecl 0x132928128 <col:31, col:38> col:38 referenced invalid t 'int *'   `-CompoundStmt 0x132941b50 <line:2:1, line:9:1>     |-BinaryOperator 0x1329283a8 <line:3:5, col:21> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x132928388 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x132928368 <col:12> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x132928300 <col:18, col:21> '<dependent type>' contains-errors lvalue ->len     |   `-RecoveryExpr 0x1329282e0 <col:18> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132928448 <line:4:5, col:12>     | `-VarDecl 0x1329283e0 <col:5, col:11> col:11 used p 'char *'     |-BinaryOperator 0x132941830 <line:6:5, col:37> 'char *' contains-errors '='     | |-DeclRefExpr 0x132928460 <col:5> 'char *' lvalue Var 0x1329283e0 'p' 'char *'     | `-CallExpr 0x132941800 <col:9, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1329285e0 <col:9> 'int ()' Function 0x132928528 'nasm_quote' 'int ()'     |   |-CallExpr 0x132928720 <col:20, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1329286e0 <col:20> 'int ()' Function 0x132928628 'tok_text' 'int ()'     |   | `-RecoveryExpr 0x132928700 <col:29> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1329287e8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1329287c8 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x132941938 <line:7:5, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x132941898 <col:5, col:8> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x132941870 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x132941850 <col:5> 'int *' lvalue ParmVar 0x132928128 't' 'int *'     | `-RecoveryExpr 0x132941918 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x132941b40 <line:8:5, col:35>       `-CallExpr 0x132941b08 <col:12, col:35> '<dependent type>' contains-errors         |-DeclRefExpr 0x132941a38 <col:12> 'int ()' Function 0x132941980 'set_text_free' 'int ()'         |-RecoveryExpr 0x132941a58 <col:26> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x132941a78 <col:29> 'char *' lvalue Var 0x1329283e0 'p' 'char *'         `-RecoveryExpr 0x132941ae8 <col:32> '<dependent type>' contains-errors lvalue ","20478":"`-FunctionDecl 0x139928258  line:1:1 utf8_str 'int (const char *, char *)'   |-ParmVarDecl 0x1399280f0 <col:11, col:24> col:24 used utf8 'const char *'   |-ParmVarDecl 0x139928170 <line:2:11, col:24> col:24 used buf 'char *'   `-CompoundStmt 0x13a00a340 <line:3:1, line:6:1>     |-CallExpr 0x139928670 <line:4:3, col:40> 'int'     | |-ImplicitCastExpr 0x139928658 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x139928470 <col:3> 'int ()' Function 0x1399283b8 'char_str' 'int ()'     | |-CallExpr 0x1399285f8 <col:13, col:34> 'int'     | | |-ImplicitCastExpr 0x1399285e0 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x139928570 <col:13> 'int ()' Function 0x1399284b8 'g_utf8_get_char' 'int ()'     | | `-ImplicitCastExpr 0x139928620 <col:30> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x139928590 <col:30> 'const char *' lvalue ParmVar 0x1399280f0 'utf8' 'const char *'     | `-ImplicitCastExpr 0x1399286a0 <col:37> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x139928638 <col:37> 'char *' lvalue ParmVar 0x139928170 'buf' 'char *'     `-ReturnStmt 0x13a00a330 <line:5:3, col:10>       `-ImplicitCastExpr 0x1399286f0 <col:10> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x1399286d8 <col:10> 'char *' <LValueToRValue>           `-DeclRefExpr 0x1399286b8 <col:10> 'char *' lvalue ParmVar 0x139928170 'buf' 'char *' ","20669":"`-FunctionDecl 0x127018ae8  line:1:1 invalid vmxnet3_io_bar1_read 'int (void *, int, unsigned int)'   |-ParmVarDecl 0x1270188d8 <col:22, col:28> col:28 used opaque 'void *'   |-ParmVarDecl 0x127018970 <col:36, col:43> col:43 invalid addr 'int'   |-ParmVarDecl 0x1270189f0 <col:49, col:58> col:58 used size 'unsigned int'   `-CompoundStmt 0x1280ef228 <line:2:1, line:54:1>     `-SwitchStmt 0x127018c18 <line:6:9, line:51:9>       |-ImplicitCastExpr 0x127018c00 <line:6:17> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x127018be0 <col:17> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1280ef1a0 <col:23, line:51:9>         |-CallExpr 0x127018e98 <line:9:13, col:34> 'int'         | |-ImplicitCastExpr 0x127018e80 <col:13> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x127018db0 <col:13> 'int ()' Function 0x127018cf8 'VMW_CBPRN' 'int ()'         | |-ImplicitCastExpr 0x127018ec8 <col:23> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x127018e10 <col:23> 'char[4]' lvalue \"STR\"         | `-ImplicitCastExpr 0x127018ee0 <col:30> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x127018e30 <col:30> 'unsigned int' lvalue ParmVar 0x1270189f0 'size' 'unsigned int'         |-BreakStmt 0x127018f10 <line:11:13>         |-CallExpr 0x127018fa8 <line:15:13, col:34> 'int'         | |-ImplicitCastExpr 0x127018f90 <col:13> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x127018f30 <col:13> 'int ()' Function 0x127018cf8 'VMW_CBPRN' 'int ()'         | |-ImplicitCastExpr 0x127018fd8 <col:23> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x127018f50 <col:23> 'char[4]' lvalue \"STR\"         | `-ImplicitCastExpr 0x1280ee600 <col:30> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x127018f70 <col:30> 'unsigned int' lvalue ParmVar 0x1270189f0 'size' 'unsigned int'         |-BreakStmt 0x1280ee630 <line:17:13>         |-CallExpr 0x1280ee6c8 <line:21:13, col:34> 'int'         | |-ImplicitCastExpr 0x1280ee6b0 <col:13> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1280ee650 <col:13> 'int ()' Function 0x127018cf8 'VMW_CBPRN' 'int ()'         | |-ImplicitCastExpr 0x1280ee6f8 <col:23> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x1280ee670 <col:23> 'char[4]' lvalue \"STR\"         | `-ImplicitCastExpr 0x1280ee710 <col:30> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x1280ee690 <col:30> 'unsigned int' lvalue ParmVar 0x1270189f0 'size' 'unsigned int'         |-BreakStmt 0x1280ee868 <line:23:13>         |-CallExpr 0x1280ee900 <line:27:13, col:34> 'int'         | |-ImplicitCastExpr 0x1280ee8e8 <col:13> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1280ee888 <col:13> 'int ()' Function 0x127018cf8 'VMW_CBPRN' 'int ()'         | |-ImplicitCastExpr 0x1280ee930 <col:23> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x1280ee8a8 <col:23> 'char[4]' lvalue \"STR\"         | `-ImplicitCastExpr 0x1280ee948 <col:30> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x1280ee8c8 <col:30> 'unsigned int' lvalue ParmVar 0x1270189f0 'size' 'unsigned int'         |-BreakStmt 0x1280eeb48 <line:29:13>         |-CallExpr 0x1280eebc8 <line:33:13, col:34> 'int'         | |-ImplicitCastExpr 0x1280eebb0 <col:13> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1280eeb50 <col:13> 'int ()' Function 0x127018cf8 'VMW_CBPRN' 'int ()'         | |-ImplicitCastExpr 0x1280eebf8 <col:23> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x1280eeb70 <col:23> 'char[4]' lvalue \"STR\"         | `-ImplicitCastExpr 0x1280eec10 <col:30> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x1280eeb90 <col:30> 'unsigned int' lvalue ParmVar 0x1270189f0 'size' 'unsigned int'         |-BreakStmt 0x1280eed28 <line:35:13>         |-CallExpr 0x1280eeda8 <line:39:13, col:34> 'int'         | |-ImplicitCastExpr 0x1280eed90 <col:13> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1280eed30 <col:13> 'int ()' Function 0x127018cf8 'VMW_CBPRN' 'int ()'         | |-ImplicitCastExpr 0x1280eedd8 <col:23> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x1280eed50 <col:23> 'char[4]' lvalue \"STR\"         | `-ImplicitCastExpr 0x1280eedf0 <col:30> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x1280eed70 <col:30> 'unsigned int' lvalue ParmVar 0x1270189f0 'size' 'unsigned int'         |-IfStmt 0x1280ef088 <line:40:13, line:45:13> has_else         | |-RecoveryExpr 0x1280eef28 <line:40:17, col:48> '_Bool' contains-errors         | |-CompoundStmt 0x1280ef068 <col:51, line:43:13>         | `-CompoundStmt 0x1280ef078 <col:20, line:45:13>         |-BreakStmt 0x1280ef0b8 <line:46:13>         |-DefaultStmt 0x1280ef178 <line:48:9, line:49:40>         | `-CallExpr 0x1280ef140 <col:13, col:40> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1280ef0c0 <col:13> 'int ()' Function 0x127018cf8 'VMW_CBPRN' 'int ()'         |   |-StringLiteral 0x1280ef0e0 <col:23> 'char[4]' lvalue \"STR\"         |   |-RecoveryExpr 0x1280ef100 <col:30> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1280ef120 <col:36> 'unsigned int' lvalue ParmVar 0x1270189f0 'size' 'unsigned int'         `-BreakStmt 0x1280ef198 <line:50:13> ","20407":"`-FunctionDecl 0x143940b48  line:1:12 nl80211_get_wiphy 'int (struct sk_buff *, struct genl_info *)' static   |-ParmVarDecl 0x143928648 <col:30, col:46> col:46 skb 'struct sk_buff *'   |-ParmVarDecl 0x143940a28 <col:51, col:69> col:69 used info 'struct genl_info *'   `-CompoundStmt 0x1450096a8 <line:2:1, line:16:1>     |-DeclStmt 0x143940d40 <line:3:2, col:21>     | `-VarDecl 0x143940cd8 <col:2, col:18> col:18 used msg 'struct sk_buff *'     |-DeclStmt 0x143941000 <line:4:2, col:60>     | |-RecordDecl 0x143940d58 <col:2, col:9> col:9 struct cfg80211_registered_device     | `-VarDecl 0x143940ec8 <col:2, col:59> col:37 used dev 'struct cfg80211_registered_device *' cinit     |   `-ArraySubscriptExpr 0x143940fc8 <col:43, col:59> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x143940fb0 <col:43, col:49> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x143940f68 <col:43, col:49> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x143940f30 <col:43> 'struct genl_info *' lvalue ParmVar 0x143940a28 'info' 'struct genl_info *'     |     `-IntegerLiteral 0x143940f90 <col:58> 'int' 0     |-BinaryOperator 0x143941270 <line:6:2, col:48> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x143941018 <col:2> 'struct sk_buff *' lvalue Var 0x143940cd8 'msg' 'struct sk_buff *'     | `-CallExpr 0x143941240 <col:8, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x143941160 <col:8> 'int ()' Function 0x1439410a8 'nlmsg_new' 'int ()'     |   |-RecoveryExpr 0x143941200 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x143941220 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143941388 <line:7:2, line:8:11>     | |-UnaryOperator 0x1439412c8 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1439412b0 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x143941290 <col:7> 'struct sk_buff *' lvalue Var 0x143940cd8 'msg' 'struct sk_buff *'     | `-ReturnStmt 0x143941378 <line:8:3, col:11>     |   `-UnaryOperator 0x143941360 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x143941348 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x143941328 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1439418c0 <line:10:2, line:13:2>     | |-BinaryOperator 0x143941630 <line:10:6, col:70> 'int' contains-errors '<'     | | |-CallExpr 0x1439415c8 <col:6, col:66> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x143941488 <col:6> 'int ()' Function 0x1439413d0 'nl80211_send_wiphy' 'int ()'     | | | |-DeclRefExpr 0x1439414a8 <col:25> 'struct sk_buff *' lvalue Var 0x143940cd8 'msg' 'struct sk_buff *'     | | | |-RecoveryExpr 0x143941500 <col:30, col:36> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1439414c8 <col:30> 'struct genl_info *' lvalue ParmVar 0x143940a28 'info' 'struct genl_info *'     | | | |-RecoveryExpr 0x143941560 <col:45, col:51> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x143941528 <col:45> 'struct genl_info *' lvalue ParmVar 0x143940a28 'info' 'struct genl_info *'     | | | |-IntegerLiteral 0x143941588 <col:60> 'int' 0     | | | `-DeclRefExpr 0x1439415a8 <col:63> 'struct cfg80211_registered_device *' contains-errors lvalue Var 0x143940ec8 'dev' 'struct cfg80211_registered_device *'     | | `-IntegerLiteral 0x143941610 <col:70> 'int' 0     | `-CompoundStmt 0x1439418a0 <col:73, line:13:2>     |   |-CallExpr 0x1439417b8 <line:11:3, col:17> 'int'     |   | |-ImplicitCastExpr 0x1439417a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x143941730 <col:3> 'int ()' Function 0x143941678 'nlmsg_free' 'int ()'     |   | `-ImplicitCastExpr 0x1439417e0 <col:14> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x143941750 <col:14> 'struct sk_buff *' lvalue Var 0x143940cd8 'msg' 'struct sk_buff *'     |   `-ReturnStmt 0x143941890 <line:12:3, col:11>     |     `-UnaryOperator 0x143941878 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x143941860 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x143941840 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x145009698 <line:15:2, col:32>       `-CallExpr 0x145009638 <col:9, col:32> 'int'         |-ImplicitCastExpr 0x145009620 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1439419c0 <col:9> 'int ()' Function 0x143941908 'genlmsg_reply' 'int ()'         |-ImplicitCastExpr 0x145009668 <col:23> 'struct sk_buff *' <LValueToRValue>         | `-DeclRefExpr 0x1439419e0 <col:23> 'struct sk_buff *' lvalue Var 0x143940cd8 'msg' 'struct sk_buff *'         `-ImplicitCastExpr 0x145009680 <col:28> 'struct genl_info *' <LValueToRValue>           `-DeclRefExpr 0x145009600 <col:28> 'struct genl_info *' lvalue ParmVar 0x143940a28 'info' 'struct genl_info *' ","20229":"`-FunctionDecl 0x14d9421a8  col:7 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x14d9422a8 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14d942310 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14d942378 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14d942250 <<invalid sloc>> Implicit 969 ","20845":"`-FunctionDecl 0x1339205c8  line:1:1 invalid DelChar 'int (int)'   |-ParmVarDecl 0x1339204f0 <col:9, col:29> col:29 invalid count 'int'   `-CompoundStmt 0x13393a300 <line:2:1, line:21:1>     `-IfStmt 0x13393a2d0 <line:8:5, line:20:5> has_else       |-RecoveryExpr 0x133920b38 <line:8:9> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x133939f00 <col:19, line:14:5>       | `-CallExpr 0x133939d48 <line:9:2, col:19> 'int'       |   |-ImplicitCastExpr 0x133939d30 <col:2> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x133939cb8 <col:2> 'int ()' Function 0x133939c00 'TPUTS_TRACE' 'int ()'       |   `-ImplicitCastExpr 0x133939d70 <col:14> 'char *' <ArrayToPointerDecay>       |     `-StringLiteral 0x133939cd8 <col:14> 'char[4]' lvalue \"STR\"       `-CompoundStmt 0x13393a2b0 <line:14:12, line:20:5>         |-DeclStmt 0x133939f98 <line:15:2, col:7>         | `-VarDecl 0x133939f30 <col:2, col:6> col:6 used n 'int'         `-ForStmt 0x13393a278 <line:17:2, line:19:2>           |-BinaryOperator 0x133939ff0 <line:17:7, col:11> 'int' '='           | |-DeclRefExpr 0x133939fb0 <col:7> 'int' lvalue Var 0x133939f30 'n' 'int'           | `-IntegerLiteral 0x133939fd0 <col:11> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x13393a050 <col:14, col:18> 'int' contains-errors '<'           | |-DeclRefExpr 0x13393a010 <col:14> 'int' lvalue Var 0x133939f30 'n' 'int'           | `-RecoveryExpr 0x13393a030 <col:18> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x13393a090 <col:25, col:26> 'int' postfix '++'           | `-DeclRefExpr 0x13393a070 <col:25> 'int' lvalue Var 0x133939f30 'n' 'int'           `-CompoundStmt 0x13393a260 <col:30, line:19:2>             `-CallExpr 0x13393a230 <line:18:6, col:43> '<dependent type>' contains-errors               |-DeclRefExpr 0x13393a188 <col:6> 'int ()' Function 0x13393a0d0 'NCURSES_PUTP2' 'int ()'               |-StringLiteral 0x13393a1a8 <col:20> 'char[4]' lvalue \"STR\"               `-RecoveryExpr 0x13393a210 <col:27> '<dependent type>' contains-errors lvalue ","20651":"`-FunctionDecl 0x14b00ddf0  line:1:6 invalid sqlite3VdbeDelete 'void (int *)'   |-ParmVarDecl 0x14b00dd28 <col:24, col:30> col:30 referenced invalid p 'int *'   `-CompoundStmt 0x14b027f48 <col:32, line:20:1>     |-CallExpr 0x14b00e090 <line:4:3, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b00e010 <col:3> 'int ()' Function 0x14b00df58 'assert' 'int ()'     | `-BinaryOperator 0x14b00e070 <col:11, col:14> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14b00e030 <col:11> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14b00e050 <col:14> 'int' 0     |-CallExpr 0x14b00e380 <line:6:3, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b00e120 <col:3> 'int ()' Function 0x14b00df58 'assert' 'int ()'     | `-CallExpr 0x14b00e358 <col:11, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b00e220 <col:11> 'int ()' Function 0x14b00e168 'sqlite3_mutex_held' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14b00e310 <col:30, col:34> '<dependent type>' contains-errors lvalue ->mutex     |     `-RecoveryExpr 0x14b00e2f0 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b027560 <line:7:3, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b0274b8 <col:3> 'int ()' Function 0x14b027400 'sqlite3VdbeClearObject' 'int ()'     | |-RecoveryExpr 0x14b027540 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b0274f0 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b027988 <line:8:3, line:13:3> has_else     | |-CXXDependentScopeMemberExpr 0x14b0275b0 <line:8:7, col:10> '<dependent type>' contains-errors lvalue ->pPrev     | | `-RecoveryExpr 0x14b027590 <col:7> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x14b027758 <col:17, line:10:3>     | | `-BinaryOperator 0x14b027738 <line:9:5, col:26> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x14b027688 <col:5, col:15> '<dependent type>' contains-errors lvalue ->pNext     | |   | `-CXXDependentScopeMemberExpr 0x14b027640 <col:5, col:8> '<dependent type>' contains-errors lvalue ->pPrev     | |   |   `-RecoveryExpr 0x14b027618 <col:5> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x14b0275f8 <col:5> 'int *' lvalue ParmVar 0x14b00dd28 'p' 'int *'     | |   `-CXXDependentScopeMemberExpr 0x14b0276f0 <col:23, col:26> '<dependent type>' contains-errors lvalue ->pNext     | |     `-RecoveryExpr 0x14b0276d0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b027970 <line:10:8, line:13:3>     |   `-CallExpr 0x14b0278e0 <line:11:5, col:26> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14b027770 <col:5> 'int ()' Function 0x14b00df58 'assert' 'int ()'     |     `-BinaryOperator 0x14b0278c0 <col:13, col:24> 'int' contains-errors '=='     |       |-CXXDependentScopeMemberExpr 0x14b027878 <col:13, col:17> '<dependent type>' contains-errors lvalue ->pVdbe     |       | `-RecoveryExpr 0x14b027858 <col:13> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x14b0277f0 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b027b98 <line:14:3, line:16:3>     | |-CXXDependentScopeMemberExpr 0x14b0279d8 <line:14:7, col:10> '<dependent type>' contains-errors lvalue ->pNext     | | `-RecoveryExpr 0x14b0279b8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b027b80 <col:17, line:16:3>     |   `-BinaryOperator 0x14b027b60 <line:15:5, col:26> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14b027ab0 <col:5, col:15> '<dependent type>' contains-errors lvalue ->pPrev     |     | `-CXXDependentScopeMemberExpr 0x14b027a68 <col:5, col:8> '<dependent type>' contains-errors lvalue ->pNext     |     |   `-RecoveryExpr 0x14b027a40 <col:5> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14b027a20 <col:5> 'int *' lvalue ParmVar 0x14b00dd28 'p' 'int *'     |     `-CXXDependentScopeMemberExpr 0x14b027b18 <col:23, col:26> '<dependent type>' contains-errors lvalue ->pPrev     |       `-RecoveryExpr 0x14b027af8 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b027ca0 <line:17:3, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14b027c00 <col:3, col:6> '<dependent type>' contains-errors lvalue ->magic     | | `-RecoveryExpr 0x14b027bd8 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b027bb8 <col:3> 'int *' lvalue ParmVar 0x14b00dd28 'p' 'int *'     | `-RecoveryExpr 0x14b027c80 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b027d70 <line:18:3, col:11> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14b027d08 <col:3, col:6> '<dependent type>' contains-errors lvalue ->db     | | `-RecoveryExpr 0x14b027ce0 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b027cc0 <col:3> 'int *' lvalue ParmVar 0x14b00dd28 'p' 'int *'     | `-IntegerLiteral 0x14b027d50 <col:11> 'int' 0     `-CallExpr 0x14b027f18 <line:19:3, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b027e70 <col:3> 'int ()' Function 0x14b027db8 'sqlite3DbFreeNN' 'int ()'       |-RecoveryExpr 0x14b027ef8 <col:19> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14b027ea8 <col:23> '<dependent type>' contains-errors lvalue ","21072":"`-FunctionDecl 0x145928280  line:1:6 invalid zsetConvertToZiplistIfNeeded 'void (int *, int)'   |-ParmVarDecl 0x145928128 <col:35, col:41> col:41 invalid zobj 'int *'   |-ParmVarDecl 0x1459281a8 <col:47, col:54> col:54 invalid maxelelen 'int'   `-CompoundStmt 0x1459420f8 <col:65, line:8:1>     |-IfStmt 0x145928428 <line:2:5, col:49>     | |-BinaryOperator 0x1459283f8 <col:9, col:27> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x145928358 <col:9, col:15> '<dependent type>' contains-errors lvalue ->encoding     | | | `-RecoveryExpr 0x145928338 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1459283d8 <col:27> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x145928418 <col:49>     `-IfStmt 0x1459420d8 <line:5:5, line:7:50>       |-BinaryOperator 0x145941e88 <line:5:9, line:6:29> 'int' contains-errors '&&'       | |-BinaryOperator 0x1459287c8 <line:5:9, col:37> 'int' contains-errors '<='       | | |-CXXDependentScopeMemberExpr 0x145928718 <col:9, col:20> '<dependent type>' contains-errors lvalue ->length       | | | `-CXXDependentScopeMemberExpr 0x1459286d0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->zsl       | | |   `-RecoveryExpr 0x1459286b0 <col:9> '<dependent type>' contains-errors lvalue       | | `-CXXDependentScopeMemberExpr 0x145928780 <col:30, col:37> '<dependent type>' contains-errors lvalue .zset_max_ziplist_entries       | |   `-RecoveryExpr 0x145928760 <col:30> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x145941e68 <line:6:9, col:29> 'int' contains-errors '<='       |   |-RecoveryExpr 0x1459285f0 <col:9> '<dependent type>' contains-errors lvalue       |   `-CXXDependentScopeMemberExpr 0x145941e20 <col:22, col:29> '<dependent type>' contains-errors lvalue .zset_max_ziplist_value       |     `-RecoveryExpr 0x145941e00 <col:22> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1459420a8 <line:7:13, col:50> '<dependent type>' contains-errors         |-DeclRefExpr 0x145942000 <col:13> 'int ()' Function 0x145941f48 'zsetConvert' 'int ()'         |-RecoveryExpr 0x145942020 <col:25> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x145942088 <col:30> '<dependent type>' contains-errors lvalue ","21207":"`-FunctionDecl 0x129808408  line:1:1 i915_gem_execbuffer2_ioctl 'int (struct drm_device *, void *, struct drm_file *)'   |-ParmVarDecl 0x1290fc848 <col:28, col:47> col:47 used dev 'struct drm_device *'   |-ParmVarDecl 0x1290fc8c8 <col:52, col:58> col:58 used data 'void *'   |-ParmVarDecl 0x1298082c8 <line:2:7, col:24> col:24 used file 'struct drm_file *'   `-CompoundStmt 0x1291162b0 <line:3:1, line:70:1>     |-DeclStmt 0x129808748 <line:4:2, col:46>     | |-RecordDecl 0x129808510 <col:2, col:9> col:9 struct drm_i915_gem_execbuffer2     | `-VarDecl 0x129808678 <col:2, col:42> col:35 used args 'struct drm_i915_gem_execbuffer2 *' cinit     |   `-ImplicitCastExpr 0x129808718 <col:42> 'struct drm_i915_gem_execbuffer2 *' <BitCast>     |     `-ImplicitCastExpr 0x129808700 <col:42> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x1298086e0 <col:42> 'void *' lvalue ParmVar 0x1290fc8c8 'data' 'void *'     |-DeclStmt 0x129808948 <line:5:2, col:46>     | |-RecordDecl 0x129808760 <col:2, col:9> col:9 struct drm_i915_gem_exec_object2     | `-VarDecl 0x1298088c8 <col:2, col:36> col:36 used exec2_list 'struct drm_i915_gem_exec_object2 *'     |-DeclStmt 0x129808bf8 <line:6:2, col:36>     | |-RecordDecl 0x129808960 <col:2, col:9> col:9 struct drm_syncobj     | `-VarDecl 0x129808b28 <col:2, col:32> col:23 used fences 'struct drm_syncobj **' cinit     |   `-RecoveryExpr 0x129808bc0 <col:32> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x129808cf0 <line:7:2, col:41>     | `-VarDecl 0x129808c28 <col:2, col:15> col:15 invalid count 'const int'     |-DeclStmt 0x129808d88 <line:8:2, col:9>     | `-VarDecl 0x129808d20 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x1298091a8 <line:10:2, line:13:2>     | |-UnaryOperator 0x129808f18 <line:10:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x129808ef0 <col:7, col:31> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x129808eb0 <col:7> 'int ()' Function 0x129808df8 'check_buffer_count' 'int ()'     | |   `-RecoveryExpr 0x129808ed0 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129809188 <col:34, line:13:2>     |   |-CallExpr 0x1298090b0 <line:11:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x129809010 <col:3> 'int ()' Function 0x129808f58 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x129809070 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x129809090 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x129809178 <line:12:3, col:11>     |     `-UnaryOperator 0x129809160 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x129809148 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x129809128 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12980b848 <line:15:2, line:16:11>     | |-UnaryOperator 0x12980b788 <line:15:6, col:37> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x12980b748 <col:7, col:37> 'int'     | |   |-ImplicitCastExpr 0x12980b730 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x12980b6b8 <col:7> 'int ()' Function 0x12980b600 'i915_gem_check_execbuffer' 'int ()'     | |   `-ImplicitCastExpr 0x12980b770 <col:33> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     | |     `-DeclRefExpr 0x12980b6d8 <col:33> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     | `-ReturnStmt 0x12980b838 <line:16:3, col:11>     |   `-UnaryOperator 0x12980b820 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12980b808 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12980b7e8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12980bcd0 <line:19:2, line:20:34> 'struct drm_i915_gem_exec_object2 *' contains-errors '='     | |-DeclRefExpr 0x12980b868 <line:19:2> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     | `-CallExpr 0x12980bc98 <col:15, line:20:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12980b968 <line:19:15> 'int ()' Function 0x12980b8b0 'kvmalloc_array' 'int ()'     |   |-BinaryOperator 0x12980b9c8 <col:30, col:38> '<dependent type>' contains-errors '+'     |   | |-RecoveryExpr 0x12980b988 <col:30> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x12980b9a8 <col:38> 'int' 1     |   |-CallExpr 0x12980bc18 <col:41, col:57> 'int'     |   | `-ImplicitCastExpr 0x12980bc00 <col:41> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x12980bac8 <col:41> 'int ()' Function 0x12980ba10 'eb_element_size' 'int ()'     |   `-BinaryOperator 0x12980bc78 <line:20:9, col:24> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x12980bc38 <col:9> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12980bc58 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12980bee0 <line:21:2, line:25:2>     | |-BinaryOperator 0x12980bd68 <line:21:6, col:20> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12980bcf0 <col:6> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     | | `-RecoveryExpr 0x12980bd48 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12980bec0 <col:26, line:25:2>     |   |-CallExpr 0x12980bde8 <line:22:3, line:23:11> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12980bd88 <line:22:3> 'int ()' Function 0x129808f58 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x12980bda8 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x12980bdc8 <line:23:6> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12980beb0 <line:24:3, col:11>     |     `-UnaryOperator 0x12980be98 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12980be80 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12980be60 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12980c480 <line:26:2, line:32:2>     | |-RecoveryExpr 0x12980c238 <line:26:6, line:28:34> '_Bool' contains-errors     | `-CompoundStmt 0x12980c460 <col:37, line:32:2>     |   |-CallExpr 0x12980c2b8 <line:29:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12980c258 <col:3> 'int ()' Function 0x129808f58 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x12980c278 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x12980c298 <col:20> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12980c420 <line:30:3, col:20> 'int'     |     |-ImplicitCastExpr 0x12980c408 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12980c3c8 <col:3> 'int ()' Function 0x12980c310 'kvfree' 'int ()'     |     `-ImplicitCastExpr 0x12980c448 <col:10> 'struct drm_i915_gem_exec_object2 *' <LValueToRValue>     |       `-DeclRefExpr 0x12980c3e8 <col:10> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     |-IfStmt 0x1291151c0 <line:34:2, line:40:2>     | |-RecoveryExpr 0x12980c500 <line:34:6, col:20> '_Bool' contains-errors     | `-CompoundStmt 0x1291151a0 <col:43, line:40:2>     |   |-BinaryOperator 0x129114da8 <line:35:3, col:38> 'struct drm_syncobj **' contains-errors '='     |   | |-DeclRefExpr 0x12980c520 <col:3> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |   | `-ImplicitCastExpr 0x129114d90 <col:12, col:38> 'struct drm_syncobj **' <IntegralToPointer>     |   |   `-CallExpr 0x129114d30 <col:12, col:38> 'int'     |   |     |-ImplicitCastExpr 0x129114d18 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x129114cb8 <col:12> 'int ()' Function 0x129114c00 'get_fence_array' 'int ()'     |   |     |-ImplicitCastExpr 0x129114d60 <col:28> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x129114cd8 <col:28> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     |   |     `-ImplicitCastExpr 0x129114d78 <col:34> 'struct drm_file *' <LValueToRValue>     |   |       `-DeclRefExpr 0x129114cf8 <col:34> 'struct drm_file *' lvalue ParmVar 0x1298082c8 'file' 'struct drm_file *'     |   `-IfStmt 0x129115180 <line:36:3, line:39:3>     |     |-CallExpr 0x129114f00 <line:36:7, col:20> 'int' contains-errors     |     | |-ImplicitCastExpr 0x129114ee8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x129114ea8 <col:7> 'int ()' Function 0x129114df0 'IS_ERR' 'int ()'     |     | `-ImplicitCastExpr 0x129114f28 <col:14> 'struct drm_syncobj **' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x129114ec8 <col:14> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |     `-CompoundStmt 0x129115160 <col:23, line:39:3>     |       |-CallExpr 0x129114f98 <line:37:4, col:21> 'int'     |       | |-ImplicitCastExpr 0x129114f80 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x129114f40 <col:4> 'int ()' Function 0x12980c310 'kvfree' 'int ()'     |       | `-ImplicitCastExpr 0x129114fc0 <col:11> 'struct drm_i915_gem_exec_object2 *' <LValueToRValue>     |       |   `-DeclRefExpr 0x129114f60 <col:11> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     |       `-ReturnStmt 0x129115150 <line:38:4, col:25>     |         `-CallExpr 0x129115110 <col:11, col:25> 'int' contains-errors     |           |-ImplicitCastExpr 0x1291150f8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x1291150b8 <col:11> 'int ()' Function 0x129115000 'PTR_ERR' 'int ()'     |           `-ImplicitCastExpr 0x129115138 <col:19> 'struct drm_syncobj **' contains-errors <LValueToRValue>     |             `-DeclRefExpr 0x1291150d8 <col:19> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |-BinaryOperator 0x129115478 <line:42:2, col:66> 'int' contains-errors '='     | |-DeclRefExpr 0x1291151e0 <col:2> 'int' lvalue Var 0x129808d20 'err' 'int'     | `-CallExpr 0x1291153b8 <col:8, col:66> 'int' contains-errors     |   |-ImplicitCastExpr 0x1291153a0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1291152e0 <col:8> 'int ()' Function 0x129115228 'i915_gem_do_execbuffer' 'int ()'     |   |-ImplicitCastExpr 0x129115400 <col:31> 'struct drm_device *' <LValueToRValue>     |   | `-DeclRefExpr 0x129115300 <col:31> 'struct drm_device *' lvalue ParmVar 0x1290fc848 'dev' 'struct drm_device *'     |   |-ImplicitCastExpr 0x129115418 <col:36> 'struct drm_file *' <LValueToRValue>     |   | `-DeclRefExpr 0x129115320 <col:36> 'struct drm_file *' lvalue ParmVar 0x1298082c8 'file' 'struct drm_file *'     |   |-ImplicitCastExpr 0x129115430 <col:42> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     |   | `-DeclRefExpr 0x129115340 <col:42> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     |   |-ImplicitCastExpr 0x129115448 <col:48> 'struct drm_i915_gem_exec_object2 *' <LValueToRValue>     |   | `-DeclRefExpr 0x129115360 <col:48> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     |   `-ImplicitCastExpr 0x129115460 <col:60> 'struct drm_syncobj **' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x129115380 <col:60> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |-IfStmt 0x129115f98 <line:45:2, line:64:2>     | |-RecoveryExpr 0x1291154f8 <line:45:6, col:20> '_Bool' contains-errors     | `-CompoundStmt 0x129115f60 <col:38, line:64:2>     |   |-DeclStmt 0x1291155d8 <line:46:3, col:43>     |   | `-VarDecl 0x129115570 <col:3, col:36> col:36 invalid __user 'struct drm_i915_gem_exec_object2'     |   |-DeclStmt 0x129115670 <line:48:3, col:17>     |   | `-VarDecl 0x129115608 <col:3, col:16> col:16 used i 'unsigned int'     |   |-CallExpr 0x1291157a0 <line:51:3, col:21> 'int'     |   | `-ImplicitCastExpr 0x129115788 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x129115768 <col:3> 'int ()' Function 0x1291156b0 'user_access_begin' 'int ()'     |   |-ForStmt 0x129115d80 <line:52:3, line:61:3>     |   | |-BinaryOperator 0x129115818 <line:52:8, col:12> 'unsigned int' '='     |   | | |-DeclRefExpr 0x1291157c0 <col:8> 'unsigned int' lvalue Var 0x129115608 'i' 'unsigned int'     |   | | `-ImplicitCastExpr 0x129115800 <col:12> 'unsigned int' <IntegralCast>     |   | |   `-IntegerLiteral 0x1291157e0 <col:12> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x1291158b8 <col:15, col:25> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x129115838 <col:15> 'unsigned int' lvalue Var 0x129115608 'i' 'unsigned int'     |   | | `-RecoveryExpr 0x129115890 <col:19, col:25> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x129115858 <col:19> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     |   | |-UnaryOperator 0x1291158f8 <col:39, col:40> 'unsigned int' postfix '++'     |   | | `-DeclRefExpr 0x1291158d8 <col:39> 'unsigned int' lvalue Var 0x129115608 'i' 'unsigned int'     |   | `-CompoundStmt 0x129115d68 <col:44, line:61:3>     |   |   `-IfStmt 0x1291159a8 <line:53:4, line:54:5>     |   |     |-RecoveryExpr 0x129115980 <line:53:8, col:39> '_Bool' contains-errors     |   |     `-ContinueStmt 0x1291159a0 <line:54:5>     |   `-LabelStmt 0x129115f40 <line:62:1, line:63:19> 'end_user'     |     `-CallExpr 0x129115ed0 <col:3, col:19> 'int'     |       `-ImplicitCastExpr 0x129115eb8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x129115e98 <col:3> 'int ()' Function 0x129115de0 'user_access_end' 'int ()'     |-CallExpr 0x129116170 <line:67:2, col:30> 'int' contains-errors     | |-ImplicitCastExpr 0x129116158 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1291160f8 <col:2> 'int ()' Function 0x129116040 'put_fence_array' 'int ()'     | |-ImplicitCastExpr 0x1291161a0 <col:18> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     | | `-DeclRefExpr 0x129116118 <col:18> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x129808678 'args' 'struct drm_i915_gem_execbuffer2 *'     | `-ImplicitCastExpr 0x1291161b8 <col:24> 'struct drm_syncobj **' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x129116138 <col:24> 'struct drm_syncobj **' contains-errors lvalue Var 0x129808b28 'fences' 'struct drm_syncobj **'     |-CallExpr 0x129116228 <line:68:2, col:19> 'int'     | |-ImplicitCastExpr 0x129116210 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1291161d0 <col:2> 'int ()' Function 0x12980c310 'kvfree' 'int ()'     | `-ImplicitCastExpr 0x129116250 <col:9> 'struct drm_i915_gem_exec_object2 *' <LValueToRValue>     |   `-DeclRefExpr 0x1291161f0 <col:9> 'struct drm_i915_gem_exec_object2 *' lvalue Var 0x1298088c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     `-ReturnStmt 0x1291162a0 <line:69:2, col:9>       `-ImplicitCastExpr 0x129116288 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x129116268 <col:9> 'int' lvalue Var 0x129808d20 'err' 'int' ","20508":"`-FunctionDecl 0x12b00dec8  line:1:1 invalid cdata_finish 'int (int *, int **)'   |-ParmVarDecl 0x12b00dd28 <col:15, col:24> col:24 invalid cd 'int *'   |-ParmVarDecl 0x12b00dde0 <col:28, col:37> col:37 invalid error 'int **'   `-CompoundStmt 0x12b027ce0 <line:2:1, line:20:1>     |-DeclStmt 0x12b00e098 <line:4:5, col:13>     | `-VarDecl 0x12b00e030 <col:5, col:9> col:9 used zret 'int'     |-IfStmt 0x12b027430 <line:6:5, line:9:5>     | |-BinaryOperator 0x12b00e1b8 <line:6:9, col:32> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12b00e118 <col:9, col:20> '<dependent type>' contains-errors lvalue .comptype     | | | `-CXXDependentScopeMemberExpr 0x12b00e0d0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->decomp     | | |   `-RecoveryExpr 0x12b00e0b0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12b00e198 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b027410 <col:54, line:9:5>     |   |-CallExpr 0x12b00e3d0 <line:7:9, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b00e330 <col:9> 'int ()' Function 0x12b00e278 'LZXfdi_clear' 'int ()'     |   | `-UnaryOperator 0x12b00e3b8 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x12b00e370 <col:24, col:28> '<dependent type>' contains-errors lvalue ->decomp     |   |     `-RecoveryExpr 0x12b00e350 <col:24> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12b027400 <line:8:9>     |-IfStmt 0x12b027588 <line:11:5, line:12:9>     | |-UnaryOperator 0x12b027560 <line:11:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12b027548 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12b027500 <col:10, col:13> '<dependent type>' contains-errors lvalue ->opaque     | |     `-RecoveryExpr 0x12b0274e0 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12b027578 <line:12:9>     |-BinaryOperator 0x12b027770 <line:14:5, col:25> 'int' contains-errors '='     | |-DeclRefExpr 0x12b0275a8 <col:5> 'int' lvalue Var 0x12b00e030 'zret' 'int'     | `-CallExpr 0x12b027748 <col:12, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b0276a8 <col:12> 'int ()' Function 0x12b0275f0 'inflateEnd' 'int ()'     |   `-RecoveryExpr 0x12b027728 <col:24> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12b027cc0 <line:17:5, line:19:42>       |-BinaryOperator 0x12b027820 <line:17:9, col:17> 'int' contains-errors '!='       | |-DeclRefExpr 0x12b0277a8 <col:9> 'int' lvalue Var 0x12b00e030 'zret' 'int'       | `-RecoveryExpr 0x12b027800 <col:17> '<dependent type>' contains-errors lvalue       `-CallExpr 0x12b027c78 <line:18:9, line:19:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x12b027920 <line:18:9> 'int ()' Function 0x12b027868 'g_set_error' 'int ()'         |-RecoveryExpr 0x12b027940 <col:22> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12b027be0 <col:29> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12b027c00 <col:41> '<dependent type>' contains-errors lvalue         |-StringLiteral 0x12b0279d0 <line:19:22> 'char[4]' lvalue \"STR\"         `-CallExpr 0x12b027c38 <col:29, col:41> 'int'           |-ImplicitCastExpr 0x12b027c20 <col:29> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x12b027ad0 <col:29> 'int ()' Function 0x12b027a18 'zError' 'int ()'           `-ImplicitCastExpr 0x12b027c60 <col:37> 'int' <LValueToRValue>             `-DeclRefExpr 0x12b027af0 <col:37> 'int' lvalue Var 0x12b00e030 'zret' 'int' ","21106":"`-FunctionDecl 0x15b8ae920  line:1:3 catch 'int (...)'   `-CompoundStmt 0x15b8aebd8 <col:15, line:3:1>     `-ReturnStmt 0x15b8aebc8 <line:2:5, col:30>       `-CallExpr 0x15b8aeba8 <col:12, col:30> 'int'         `-ImplicitCastExpr 0x15b8aeb90 <col:12> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x15b8aeb40 <col:12> 'int ()' Function 0x15b8aea88 'exceptionToStatus' 'int ()' ","20513":"`-FunctionDecl 0x13a928b18  line:1:14 invalid NonMaxSuppressionMultiClass 'int (int *, int *, int *)'   |-ParmVarDecl 0x13a928928 <col:42, col:57> col:57 invalid context 'int *'   |-ParmVarDecl 0x13a9289a8 <line:2:42, col:54> col:54 invalid node 'int *'   |-ParmVarDecl 0x13a928a28 <col:60, col:68> col:68 invalid op_data 'int *'   `-CompoundStmt 0x13a943770 <col:77, line:42:1>     |-DeclStmt 0x13a928e60 <line:4:3, line:5:56>     | `-VarDecl 0x13a928bf0 <line:4:3, col:23> col:23 invalid input_box_encodings 'const int *'     |-DeclStmt 0x13a928fa8 <line:6:3, line:7:60>     | `-VarDecl 0x13a928e90 <line:6:3, col:23> col:23 invalid input_class_predictions 'const int *'     |-DeclStmt 0x13a942170 <line:8:3, col:59>     | `-VarDecl 0x13a942000 <col:3, col:58> col:13 used num_boxes 'const int' cinit     |   `-ArraySubscriptExpr 0x13a942150 <col:25, col:58> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x13a942138 <col:25, col:52> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x13a9420d0 <col:25, col:52> '<dependent type>' contains-errors lvalue ->data     |     |   `-CXXDependentScopeMemberExpr 0x13a942088 <col:25, col:46> '<dependent type>' contains-errors lvalue ->dims     |     |     `-RecoveryExpr 0x13a942068 <col:25> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x13a942118 <col:57> 'int' 1     |-DeclStmt 0x13a942270 <line:9:3, col:47>     | `-VarDecl 0x13a9421a0 <col:3, col:36> col:13 used num_classes 'const int' cinit     |   `-CXXDependentScopeMemberExpr 0x13a942228 <col:27, col:36> '<dependent type>' contains-errors lvalue ->num_classes     |     `-RecoveryExpr 0x13a942208 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a942590 <line:10:3, line:11:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a942368 <line:10:3> 'int ()' Function 0x13a9422b0 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x13a942388 <col:21> '<dependent type>' contains-errors lvalue     | |-ArraySubscriptExpr 0x13a942550 <col:30, col:67> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x13a942538 <col:30, col:61> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x13a942410 <col:30, col:61> '<dependent type>' contains-errors lvalue ->data     | | |   `-CXXDependentScopeMemberExpr 0x13a9423c8 <col:30, col:55> '<dependent type>' contains-errors lvalue ->dims     | | |     `-RecoveryExpr 0x13a9423a8 <col:30> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13a942458 <col:66> 'int' 0     | `-RecoveryExpr 0x13a942570 <line:11:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a942730 <line:12:3, col:79> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a9425c8 <col:3> 'int ()' Function 0x13a9422b0 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x13a9425e8 <col:21> '<dependent type>' contains-errors lvalue     | |-ArraySubscriptExpr 0x13a9426f0 <col:30, col:67> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x13a9426d8 <col:30, col:61> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x13a942670 <col:30, col:61> '<dependent type>' contains-errors lvalue ->data     | | |   `-CXXDependentScopeMemberExpr 0x13a942628 <col:30, col:55> '<dependent type>' contains-errors lvalue ->dims     | | |     `-RecoveryExpr 0x13a942608 <col:30> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13a9426b8 <col:66> 'int' 1     | `-DeclRefExpr 0x13a942710 <col:70> 'const int' contains-errors lvalue Var 0x13a942000 'num_boxes' 'const int'     |-DeclStmt 0x13a9428f0 <line:13:3, line:14:45>     | `-VarDecl 0x13a942780 <line:13:3, line:14:44> line:13:13 used num_classes_with_background 'const int' cinit     |   `-ArraySubscriptExpr 0x13a9428d0 <line:14:7, col:44> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x13a9428b8 <col:7, col:38> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x13a942850 <col:7, col:38> '<dependent type>' contains-errors lvalue ->data     |     |   `-CXXDependentScopeMemberExpr 0x13a942808 <col:7, col:32> '<dependent type>' contains-errors lvalue ->dims     |     |     `-RecoveryExpr 0x13a9427e8 <col:7> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x13a942898 <col:43> 'int' 2     |-CallExpr 0x13a942b18 <line:16:3, col:75> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a9429e8 <col:3> 'int ()' Function 0x13a942930 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x13a942a08 <col:18> '<dependent type>' contains-errors lvalue     | `-ParenExpr 0x13a942af8 <col:27, col:74> 'int' contains-errors     |   `-BinaryOperator 0x13a942ad8 <col:28, col:73> 'int' contains-errors '<='     |     |-BinaryOperator 0x13a942a98 <col:28, col:58> 'int' contains-errors '-'     |     | |-ImplicitCastExpr 0x13a942a68 <col:28> 'int' contains-errors <LValueToRValue>     |     | | `-DeclRefExpr 0x13a942a28 <col:28> 'const int' contains-errors lvalue Var 0x13a942780 'num_classes_with_background' 'const int'     |     | `-ImplicitCastExpr 0x13a942a80 <col:58> 'int' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x13a942a48 <col:58> 'const int' contains-errors lvalue Var 0x13a9421a0 'num_classes' 'const int'     |     `-IntegerLiteral 0x13a942ab8 <col:73> 'int' 1     |-CallExpr 0x13a942c38 <line:17:3, col:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a942b48 <col:3> 'int ()' Function 0x13a942930 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x13a942b68 <col:18> '<dependent type>' contains-errors lvalue     | `-ParenExpr 0x13a942c18 <col:27, col:70> 'int' contains-errors     |   `-BinaryOperator 0x13a942bf8 <col:28, col:59> 'int' contains-errors '>='     |     |-ImplicitCastExpr 0x13a942bc8 <col:28> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x13a942b88 <col:28> 'const int' contains-errors lvalue Var 0x13a942780 'num_classes_with_background' 'const int'     |     `-ImplicitCastExpr 0x13a942be0 <col:59> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x13a942ba8 <col:59> 'const int' contains-errors lvalue Var 0x13a9421a0 'num_classes' 'const int'     |-DeclStmt 0x13a942ce8 <line:19:3, col:29>     | `-VarDecl 0x13a942c80 <col:3, col:23> col:23 referenced invalid scores 'const int *'     `-SwitchStmt 0x13a942d80 <line:20:3, line:33:3>       |-ImplicitCastExpr 0x13a942d68 <line:20:11, col:36> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x13a942d20 <col:11, col:36> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x13a942d00 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13a9432f0 <col:42, line:33:3>         |-CompoundStmt 0x13a9431f8 <line:21:24, line:26:5>         | |-CallExpr 0x13a9430f8 <line:23:7, line:24:79> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x13a943000 <line:23:7> 'int ()' Function 0x13a942f38 'DequantizeClassPredictions' 'int ()'         | | |-RecoveryExpr 0x13a943020 <col:34> '<dependent type>' contains-errors lvalue         | | |-DeclRefExpr 0x13a943040 <col:59> 'const int' contains-errors lvalue Var 0x13a942000 'num_boxes' 'const int'         | | |-DeclRefExpr 0x13a943060 <line:24:34> 'const int' contains-errors lvalue Var 0x13a942780 'num_classes_with_background' 'const int'         | | `-RecoveryExpr 0x13a9430d8 <col:63> '<dependent type>' contains-errors lvalue         | `-BinaryOperator 0x13a9431d8 <line:25:7, col:16> '<dependent type>' contains-errors '='         |   |-RecoveryExpr 0x13a943158 <col:7> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x13a943138 <col:7> 'const int *' lvalue Var 0x13a942c80 'scores' 'const int *'         |   `-RecoveryExpr 0x13a9431b8 <col:16> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13a943218 <line:26:7>         |-BinaryOperator 0x13a9432a0 <line:28:7, col:16> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x13a943258 <col:7> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x13a943238 <col:7> 'const int *' lvalue Var 0x13a942c80 'scores' 'const int *'         | `-RecoveryExpr 0x13a943280 <col:16> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x13a9432c0 <line:29:7>         `-DefaultStmt 0x13a9432d0 <line:30:5, col:12>           `-NullStmt 0x13a9432c8 <col:12> ","20279":"`-FunctionDecl 0x14a8b49a8  line:1:1 DEFINE_RUN_ONCE_STATIC 'int (int)'   |-ParmVarDecl 0x14a8b48d8 <col:24> col:24 used ssl_x509_store_ctx_init 'int'   `-CompoundStmt 0x14a8b4ec8 <line:2:1, line:7:1>     |-BinaryOperator 0x14a8b4de8 <line:3:5, line:5:78> 'int' contains-errors '='     | |-DeclRefExpr 0x14a8b4ab8 <line:3:5> 'int' lvalue ParmVar 0x14a8b48d8 'ssl_x509_store_ctx_init' 'int'     | `-CallExpr 0x14a8b4da0 <col:30, line:5:78> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a8b4bf0 <line:3:30> 'int ()' Function 0x14a8b4b38 'X509_STORE_CTX_get_ex_new_index' 'int ()'     |   |-IntegerLiteral 0x14a8b4c10 <col:62> 'int' 0     |   |-StringLiteral 0x14a8b4c70 <line:4:62> 'char[4]' lvalue \"STR\"     |   |-RecoveryExpr 0x14a8b4d40 <line:5:62> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14a8b4d60 <col:68> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14a8b4d80 <col:74> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14a8b4eb8 <line:6:5, col:38>       `-BinaryOperator 0x14a8b4e98 <col:12, col:38> 'int' '>='         |-ImplicitCastExpr 0x14a8b4e80 <col:12> 'int' <LValueToRValue>         | `-DeclRefExpr 0x14a8b4e60 <col:12> 'int' lvalue ParmVar 0x14a8b48d8 'ssl_x509_store_ctx_init' 'int'         `-IntegerLiteral 0x14a8b4e20 <col:38> 'int' 0 ","20697":"`-FunctionDecl 0x15b8283a0  col:2 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x15b8284a0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x15b828508 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x15b828448 <<invalid sloc>> Implicit 885 ","21255":"`-FunctionDecl 0x125928288  line:1:14 invalid AverageEval 'int (int *, int *)'   |-ParmVarDecl 0x125928128 <col:26, col:41> col:41 invalid context 'int *'   |-ParmVarDecl 0x1259281a8 <col:50, col:62> col:62 invalid node 'int *'   `-CompoundStmt 0x125942430 <col:68, line:31:1>     |-DeclStmt 0x125928478 <line:2:3, col:73>     | `-VarDecl 0x125928358 <col:3, col:9> col:9 used params 'int *' auto     |-CallExpr 0x125941998 <line:6:3, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1259286d0 <col:3> 'int ()' Function 0x125928618 'TF_LITE_ENSURE_OK' 'int ()'     | |-RecoveryExpr 0x1259286f0 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x125941958 <col:30, col:69> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125941800 <col:30> 'int ()' Function 0x125928738 'GetOutputSafe' 'int ()'     |   |-RecoveryExpr 0x125941820 <col:44> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x125941840 <col:53> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x125941860 <col:59> 'int' 0     |   `-UnaryOperator 0x125941940 <col:62, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x125941920 <col:63> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x125941a48 <line:7:3, col:28>     | `-VarDecl 0x1259419e0 <col:3, col:23> col:23 invalid input 'const int *'     |-CallExpr 0x125941c78 <line:8:3, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125941a60 <col:3> 'int ()' Function 0x125928618 'TF_LITE_ENSURE_OK' 'int ()'     | |-RecoveryExpr 0x125941a80 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x125941c38 <col:30, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125941b80 <col:30> 'int ()' Function 0x125941ac8 'GetInputSafe' 'int ()'     |   |-RecoveryExpr 0x125941ba0 <col:43> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x125941bc0 <col:52> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x125941be0 <col:58> 'int' 0     |   `-UnaryOperator 0x125941c20 <col:61, col:62> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x125941c00 <col:62> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x125941d28 <line:9:3, line:29:3>       |-ImplicitCastExpr 0x125941d10 <line:9:11, col:18> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x125941cc8 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x125941ca8 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1259423f8 <col:24, line:29:3>         |-BreakStmt 0x125941e28 <line:12:7>         |-BreakStmt 0x125941ef0 <line:16:7>         |-BreakStmt 0x125941fb8 <line:20:7>         |-BreakStmt 0x125942080 <line:24:7>         `-DefaultStmt 0x1259423d8 <line:25:5, line:27:56>           `-CallExpr 0x1259423a0 <line:26:7, line:27:56> '<dependent type>' contains-errors             |-DeclRefExpr 0x125942168 <line:26:7> 'int ()' Function 0x1259420b0 'TF_LITE_KERNEL_LOG' 'int ()'             |-RecoveryExpr 0x125942188 <col:26> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x1259421f0 <col:35> 'char[4]' lvalue \"STR\"             `-CallExpr 0x125942378 <line:27:26, col:55> '<dependent type>' contains-errors               |-DeclRefExpr 0x1259422f0 <col:26> 'int ()' Function 0x125942238 'TfLiteTypeGetName' 'int ()'               `-CXXDependentScopeMemberExpr 0x125942330 <col:44, col:51> '<dependent type>' contains-errors lvalue ->type                 `-RecoveryExpr 0x125942310 <col:44> '<dependent type>' contains-errors lvalue ","20640":"`-FunctionDecl 0x157128138  col:15 invalid start 'int ()'   `-CompoundStmt 0x157128228 <col:23, col:51>     `-ReturnStmt 0x157128218 <col:41, col:48>       `-IntegerLiteral 0x1571281f8 <col:48> 'int' 0 ","21088":"`-FunctionDecl 0x121928288  line:1:16 invalid socket_option_text 'int *(int, int *)'   |-ParmVarDecl 0x1219280f0 <col:35, col:44> col:44 invalid type 'int'   |-ParmVarDecl 0x1219281a8 <col:50, col:61> col:61 invalid val 'int *'   `-CompoundStmt 0x121942558 <col:66, line:21:1>     |-IfStmt 0x121941a80 <line:2:5, line:3:29>     | |-UnaryOperator 0x121928378 <line:2:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x121928360 <col:9> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x121928340 <col:9> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x121941a70 <line:3:9, col:29>     |   `-ImplicitCastExpr 0x1219285f8 <col:16, col:29> 'int *' <IntegralToPointer>     |     `-CallExpr 0x1219285b8 <col:16, col:29> 'int'     |       |-ImplicitCastExpr 0x1219285a0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1219284f0 <col:16> 'int ()' Function 0x121928438 'str_dup' 'int ()'     |       `-ImplicitCastExpr 0x1219285e0 <col:24> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x121928550 <col:24> 'char[4]' lvalue \"STR\"     |-SwitchStmt 0x121941ad8 <line:4:5, line:19:5>     | |-ImplicitCastExpr 0x121941ac0 <line:4:12> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x121941aa0 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x121942458 <col:18, line:19:5>     |   |-ReturnStmt 0x121941ca8 <line:6:9, col:32>     |   | `-ImplicitCastExpr 0x121941c90 <col:16, col:32> 'int *' <IntegralToPointer>     |   |   `-CallExpr 0x121941c50 <col:16, col:32> 'int'     |   |     |-ImplicitCastExpr 0x121941c38 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x121941bf8 <col:16> 'int ()' Function 0x121941b40 'str_printf' 'int ()'     |   |     `-ImplicitCastExpr 0x121941c78 <col:27> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x121941c18 <col:27> 'char[4]' lvalue \"STR\"     |   |-ReturnStmt 0x121941da8 <line:8:9, col:44>     |   | `-CallExpr 0x121941d78 <col:16, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x121941cd0 <col:16> 'int ()' Function 0x121941b40 'str_printf' 'int ()'     |   |   |-StringLiteral 0x121941cf0 <col:27> 'char[4]' lvalue \"STR\"     |   |   `-CXXDependentScopeMemberExpr 0x121941d30 <col:34, col:39> '<dependent type>' contains-errors lvalue ->i_val     |   |     `-RecoveryExpr 0x121941d10 <col:34> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x121941fa8 <line:10:9, line:11:62>     |   | `-CallExpr 0x121941f70 <line:10:16, line:11:62> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x121941dd0 <line:10:16> 'int ()' Function 0x121941b40 'str_printf' 'int ()'     |   |   |-StringLiteral 0x121941df0 <col:27> 'char[4]' lvalue \"STR\"     |   |   |-CXXDependentScopeMemberExpr 0x121941e78 <line:11:13, col:29> '<dependent type>' contains-errors lvalue .l_onoff     |   |   | `-CXXDependentScopeMemberExpr 0x121941e30 <col:13, col:18> '<dependent type>' contains-errors lvalue ->linger_val     |   |   |   `-RecoveryExpr 0x121941e10 <col:13> '<dependent type>' contains-errors lvalue     |   |   `-CXXDependentScopeMemberExpr 0x121941f28 <col:38, col:54> '<dependent type>' contains-errors lvalue .l_linger     |   |     `-CXXDependentScopeMemberExpr 0x121941ee0 <col:38, col:43> '<dependent type>' contains-errors lvalue ->linger_val     |   |       `-RecoveryExpr 0x121941ec0 <col:38> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x121942270 <line:13:9, line:14:72>     |   | `-ImplicitCastExpr 0x121942258 <line:13:16, line:14:72> 'int *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x121942208 <line:13:16, line:14:72> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x1219421f0 <line:13:16> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x121941fd0 <col:16> 'int ()' Function 0x121941b40 'str_printf' 'int ()'     |   |     |-ImplicitCastExpr 0x121942240 <col:27> 'char *' <ArrayToPointerDecay>     |   |     | `-StringLiteral 0x121941ff0 <col:27> 'char[4]' lvalue \"STR\"     |   |     |-CStyleCastExpr 0x1219420d8 <line:14:13, col:35> 'int' contains-errors <Dependent>     |   |     | `-CXXDependentScopeMemberExpr 0x121942078 <col:18, col:35> '<dependent type>' contains-errors lvalue .tv_sec     |   |     |   `-CXXDependentScopeMemberExpr 0x121942030 <col:18, col:23> '<dependent type>' contains-errors lvalue ->timeval_val     |   |     |     `-RecoveryExpr 0x121942010 <col:18> '<dependent type>' contains-errors lvalue     |   |     `-CStyleCastExpr 0x1219421c8 <col:43, col:65> 'int' contains-errors <Dependent>     |   |       `-CXXDependentScopeMemberExpr 0x121942168 <col:48, col:65> '<dependent type>' contains-errors lvalue .tv_usec     |   |         `-CXXDependentScopeMemberExpr 0x121942120 <col:48, col:53> '<dependent type>' contains-errors lvalue ->timeval_val     |   |           `-RecoveryExpr 0x121942100 <col:48> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x121942370 <line:16:9, col:44>     |   | `-CallExpr 0x121942340 <col:16, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x121942298 <col:16> 'int ()' Function 0x121941b40 'str_printf' 'int ()'     |   |   |-StringLiteral 0x1219422b8 <col:27> 'char[4]' lvalue \"STR\"     |   |   `-CXXDependentScopeMemberExpr 0x1219422f8 <col:34, col:39> '<dependent type>' contains-errors lvalue ->c_val     |   |     `-RecoveryExpr 0x1219422d8 <col:34> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x121942448 <line:18:9, col:29>     |     `-ImplicitCastExpr 0x121942430 <col:16, col:29> 'int *' <IntegralToPointer>     |       `-CallExpr 0x1219423f0 <col:16, col:29> 'int'     |         |-ImplicitCastExpr 0x1219423d8 <col:16> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x121942398 <col:16> 'int ()' Function 0x121928438 'str_dup' 'int ()'     |         `-ImplicitCastExpr 0x121942418 <col:24> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x1219423b8 <col:24> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x121942548 <line:20:5, col:25>       `-ImplicitCastExpr 0x121942530 <col:12, col:25> 'int *' <IntegralToPointer>         `-CallExpr 0x1219424f0 <col:12, col:25> 'int'           |-ImplicitCastExpr 0x1219424d8 <col:12> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x121942498 <col:12> 'int ()' Function 0x121928438 'str_dup' 'int ()'           `-ImplicitCastExpr 0x121942518 <col:20> 'char *' <ArrayToPointerDecay>             `-StringLiteral 0x1219424b8 <col:20> 'char[4]' lvalue \"STR\" ","20559":"`-FunctionDecl 0x15680ddc8  line:1:1 invalid SProcXkbListComponents 'int (int)'   |-ParmVarDecl 0x15680dcf0 <col:24, col:34> col:34 invalid client 'int'   `-CompoundStmt 0x156827c70 <line:2:1, line:10:1>     |-CallExpr 0x15680e050 <line:3:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15680dfd0 <col:5> 'int ()' Function 0x15680df18 'REQUEST' 'int ()'     | `-RecoveryExpr 0x15680e030 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15680e298 <line:5:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15680e158 <col:5> 'int ()' Function 0x15680e0a0 'swaps' 'int ()'     | `-UnaryOperator 0x15680e280 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x15680e238 <col:12, col:19> '<dependent type>' contains-errors lvalue ->length     |     `-RecoveryExpr 0x15680e218 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x156827820 <line:6:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15680e3a0 <col:5> 'int ()' Function 0x15680e2e8 'REQUEST_AT_LEAST_SIZE' 'int ()'     | `-RecoveryExpr 0x156827800 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x156827988 <line:7:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x156827848 <col:5> 'int ()' Function 0x15680e0a0 'swaps' 'int ()'     | `-UnaryOperator 0x156827970 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x156827928 <col:12, col:19> '<dependent type>' contains-errors lvalue ->deviceSpec     |     `-RecoveryExpr 0x156827908 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x156827af0 <line:8:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1568279b0 <col:5> 'int ()' Function 0x15680e0a0 'swaps' 'int ()'     | `-UnaryOperator 0x156827ad8 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x156827a90 <col:12, col:19> '<dependent type>' contains-errors lvalue ->maxNames     |     `-RecoveryExpr 0x156827a70 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x156827c60 <line:9:5, col:40>       `-CallExpr 0x156827c38 <col:12, col:40> '<dependent type>' contains-errors         |-DeclRefExpr 0x156827bf8 <col:12> 'int ()' Function 0x156827b40 'ProcXkbListComponents' 'int ()'         `-RecoveryExpr 0x156827c18 <col:34> '<dependent type>' contains-errors lvalue ","20963":"`-FunctionDecl 0x150026a28  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x150026b28 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150026b90 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x150026bf8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x150026ad0 <<invalid sloc>> Implicit 900 ","20856":"`-FunctionDecl 0x143145540  line:1:6 sock_init_data 'void (struct socket *, struct sock *)'   |-ParmVarDecl 0x143128e48 <col:21, col:36> col:36 used sock 'struct socket *'   |-ParmVarDecl 0x143145428 <col:42, col:55> col:55 used sk 'struct sock *'   `-CompoundStmt 0x143148cc8 <line:2:1, line:59:1>     |-CallExpr 0x143145808 <line:3:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143145770 <col:2> 'int ()' Function 0x1431456b8 'skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x1431457f0 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1431457c8 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143145790 <col:23> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     |-CallExpr 0x1431458c8 <line:4:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143145830 <col:2> 'int ()' Function 0x1431456b8 'skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x1431458b0 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x143145888 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143145850 <col:23> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     |-CallExpr 0x143145988 <line:5:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1431458f0 <col:2> 'int ()' Function 0x1431456b8 'skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x143145970 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x143145948 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143145910 <col:23> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     |-BinaryOperator 0x143145a68 <line:10:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1431459e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1431459b0 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-RecoveryExpr 0x143145a48 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143145c00 <line:12:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143145b68 <col:2> 'int ()' Function 0x143145ab0 'init_timer' 'int ()'     | `-UnaryOperator 0x143145be8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x143145bc0 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143145b88 <col:14> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     |-BinaryOperator 0x143145ce0 <line:14:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x143145c60 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143145c28 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-RecoveryExpr 0x143145cc0 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143145db8 <line:15:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x143145d38 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143145d00 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-RecoveryExpr 0x143145d98 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143145e90 <line:16:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x143145e10 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143145dd8 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-RecoveryExpr 0x143145e70 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143145ff8 <line:17:2, col:42> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143145f10 <col:2, col:17> '<dependent type>' contains-errors lvalue .limit     | | `-RecoveryExpr 0x143145ee8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x143145eb0 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-BinaryOperator 0x143145fd8 <col:25, col:42> '<dependent type>' contains-errors '<<'     |   |-RecoveryExpr 0x143145f90 <col:25, col:29> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x143145f58 <col:25> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     |   `-IntegerLiteral 0x143145fb8 <col:42> 'int' 1     |-BinaryOperator 0x1431460d0 <line:18:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x143146050 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143146018 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-RecoveryExpr 0x1431460b0 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143146278 <line:19:2, col:24> 'int'     | |-ImplicitCastExpr 0x143146260 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1431461d0 <col:2> 'int ()' Function 0x143146118 'sk_set_socket' 'int ()'     | |-ImplicitCastExpr 0x1431462a8 <col:16> 'struct sock *' <LValueToRValue>     | | `-DeclRefExpr 0x1431461f0 <col:16> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-ImplicitCastExpr 0x1431462c0 <col:20> 'struct socket *' <LValueToRValue>     |   `-DeclRefExpr 0x143146210 <col:20> 'struct socket *' lvalue ParmVar 0x143128e48 'sock' 'struct socket *'     |-IfStmt 0x143147940 <line:23:2, line:28:3> has_else     | |-ImplicitCastExpr 0x143147620 <line:23:6> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x143147600 <col:6> 'struct socket *' lvalue ParmVar 0x143128e48 'sock' 'struct socket *'     | |-CompoundStmt 0x1431478b0 <col:12, line:27:2>     | | |-BinaryOperator 0x1431476f8 <line:24:3, col:23> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x143147670 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x143147638 <col:3> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | | | `-RecoveryExpr 0x1431476d0 <col:17, col:23> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x143147698 <col:17> 'struct socket *' lvalue ParmVar 0x143128e48 'sock' 'struct socket *'     | | |-BinaryOperator 0x1431477f0 <line:25:3, col:25> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x143147750 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x143147718 <col:3> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | | | `-UnaryOperator 0x1431477d8 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x1431477b0 <col:19, col:25> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x143147778 <col:19> 'struct socket *' lvalue ParmVar 0x143128e48 'sock' 'struct socket *'     | | `-BinaryOperator 0x143147890 <line:26:3, col:14> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x143147848 <col:3, col:9> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x143147810 <col:3> 'struct socket *' lvalue ParmVar 0x143128e48 'sock' 'struct socket *'     | |   `-DeclRefExpr 0x143147870 <col:14> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-NullStmt 0x143147938 <line:28:3>     |-CallExpr 0x143147ae8 <line:30:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143147a50 <col:2> 'int ()' Function 0x143147998 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x143147ad0 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x143147aa8 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143147a70 <col:18> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     |-CallExpr 0x143147c88 <line:31:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143147bf0 <col:2> 'int ()' Function 0x143147b38 'rwlock_init' 'int ()'     | `-UnaryOperator 0x143147c70 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x143147c48 <col:15, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143147c10 <col:15> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     |-BinaryOperator 0x1431481a8 <line:43:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x143148160 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143148128 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-IntegerLiteral 0x143148188 <col:22> 'int' 0     |-BinaryOperator 0x143148290 <line:45:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143148228 <col:2, col:18> '<dependent type>' contains-errors lvalue .pid     | | `-RecoveryExpr 0x143148200 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1431481c8 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-IntegerLiteral 0x143148270 <col:25> 'int' 0     |-BinaryOperator 0x143148390 <line:46:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143148310 <col:2, col:18> '<dependent type>' contains-errors lvalue .uid     | | `-RecoveryExpr 0x1431482e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1431482b0 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-UnaryOperator 0x143148378 <col:24, col:25> 'int' prefix '-'     |   `-IntegerLiteral 0x143148358 <col:25> 'int' 1     |-BinaryOperator 0x143148490 <line:47:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143148410 <col:2, col:18> '<dependent type>' contains-errors lvalue .gid     | | `-RecoveryExpr 0x1431483e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1431483b0 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-UnaryOperator 0x143148478 <col:24, col:25> 'int' prefix '-'     |   `-IntegerLiteral 0x143148458 <col:25> 'int' 1     |-BinaryOperator 0x143148530 <line:48:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1431484e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1431484b0 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-IntegerLiteral 0x143148510 <col:25> 'int' 0     |-BinaryOperator 0x1431485d0 <line:49:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x143148588 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143148550 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-IntegerLiteral 0x1431485b0 <col:21> 'int' 1     |-BinaryOperator 0x1431488c0 <line:53:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1431486f8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1431486c0 <col:2> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-CallExpr 0x143148890 <col:17, col:33> 'int'     |   |-ImplicitCastExpr 0x143148878 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x143148800 <col:17> 'int ()' Function 0x143148748 'ktime_set' 'int ()'     |   |-UnaryOperator 0x143148840 <col:27, col:28> 'long' prefix '-'     |   | `-IntegerLiteral 0x143148820 <col:28> 'long' 1     |   `-IntegerLiteral 0x143148858 <col:32> 'int' 0     |-CallExpr 0x1431489f8 <line:56:2, col:10> 'int'     | `-ImplicitCastExpr 0x1431489e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1431489c0 <col:2> 'int ()' Function 0x143148908 'smp_wmb' 'int ()'     |-CallExpr 0x143148bb0 <line:57:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143148af8 <col:2> 'int ()' Function 0x143148a40 'atomic_set' 'int ()'     | |-UnaryOperator 0x143148b78 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x143148b50 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x143148b18 <col:14> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'     | `-IntegerLiteral 0x143148b90 <col:29> 'int' 1     `-CallExpr 0x143148c98 <line:58:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x143148be0 <col:2> 'int ()' Function 0x143148a40 'atomic_set' 'int ()'       |-UnaryOperator 0x143148c60 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x143148c38 <col:14, col:18> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x143148c00 <col:14> 'struct sock *' lvalue ParmVar 0x143145428 'sk' 'struct sock *'       `-IntegerLiteral 0x143148c78 <col:28> 'int' 0 ","20705":"`-FunctionDecl 0x14500e008  line:1:1 invalid _fill_xrgb32_lerp_opaque_spans 'int (void *, int, int, const int *, unsigned int)'   |-ParmVarDecl 0x14500dcd8 <col:33, col:39> col:39 used abstract_renderer 'void *'   |-ParmVarDecl 0x14500dd58 <col:58, col:62> col:62 used y 'int'   |-ParmVarDecl 0x14500ddd8 <col:65, col:69> col:69 used h 'int'   |-ParmVarDecl 0x14500de70 <line:2:5, col:35> col:35 referenced invalid spans 'const int *'   |-ParmVarDecl 0x14500def0 <col:42, col:51> col:51 used num_spans 'unsigned int'   `-CompoundStmt 0x14502a8a0 <line:3:1, line:68:1>     |-IfStmt 0x14500e1e8 <line:6:5, line:7:9>     | |-BinaryOperator 0x14500e180 <line:6:9, col:22> 'int' '=='     | | |-ImplicitCastExpr 0x14500e150 <col:9> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x14500e110 <col:9> 'unsigned int' lvalue ParmVar 0x14500def0 'num_spans' 'unsigned int'     | | `-ImplicitCastExpr 0x14500e168 <col:22> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x14500e130 <col:22> 'int' 0     | `-ReturnStmt 0x14500e1d8 <line:7:2, col:9>     |   `-RecoveryExpr 0x14500e1b8 <col:9> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14502a870 <line:9:5, line:65:5> has_else       |-CallExpr 0x145027e48 <line:9:9, col:22> 'int'       | |-ImplicitCastExpr 0x145027e30 <col:9> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x14500e360 <col:9> 'int ()' Function 0x14500e2a8 'likely' 'int ()'       | `-BinaryOperator 0x14500e3d8 <col:16, col:21> 'int' '=='       |   |-ImplicitCastExpr 0x14500e3c0 <col:16> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x14500e380 <col:16> 'int' lvalue ParmVar 0x14500ddd8 'h' 'int'       |   `-IntegerLiteral 0x14500e3a0 <col:21> 'int' 1       |-CompoundStmt 0x145029440 <col:25, line:31:5>       | `-DoStmt 0x145029420 <line:10:2, line:30:26>       |   |-CompoundStmt 0x145028d58 <line:10:5, line:30:2>       |   | |-IfStmt 0x145028cd8 <line:12:6, line:28:6>       |   | | |-RecoveryExpr 0x145027e88 <line:12:10> '<dependent type>' contains-errors lvalue       |   | | `-CompoundStmt 0x145028cb8 <col:13, line:28:6>       |   | |   |-DeclStmt 0x1450280c8 <line:13:3, col:36>       |   | |   | `-VarDecl 0x145027ec0 <col:3, col:35> col:7 used len 'int' cinit       |   | |   |   `-BinaryOperator 0x1450280a8 <col:13, col:35> '<dependent type>' contains-errors '-'       |   | |   |     |-CXXDependentScopeMemberExpr 0x145027fa0 <col:13, col:22> '<dependent type>' contains-errors lvalue .x       |   | |   |     | `-ArraySubscriptExpr 0x145027f80 <col:13, col:20> '<dependent type>' contains-errors lvalue       |   | |   |     |   |-ImplicitCastExpr 0x145027f68 <col:13> '<dependent type>' contains-errors <LValueToRValue>       |   | |   |     |   | `-RecoveryExpr 0x145027f28 <col:13> '<dependent type>' contains-errors lvalue       |   | |   |     |   `-IntegerLiteral 0x145027f48 <col:19> 'int' 1       |   | |   |     `-CXXDependentScopeMemberExpr 0x145028060 <col:26, col:35> '<dependent type>' contains-errors lvalue .x       |   | |   |       `-ArraySubscriptExpr 0x145028040 <col:26, col:33> '<dependent type>' contains-errors lvalue       |   | |   |         |-ImplicitCastExpr 0x145028028 <col:26> '<dependent type>' contains-errors <LValueToRValue>       |   | |   |         | `-RecoveryExpr 0x145027fe8 <col:26> '<dependent type>' contains-errors lvalue       |   | |   |         `-IntegerLiteral 0x145028008 <col:32> 'int' 0       |   | |   `-IfStmt 0x145028c88 <line:15:3, line:27:3> has_else       |   | |     |-BinaryOperator 0x1450284e8 <line:15:7, col:12> 'int' contains-errors '=='       |   | |     | |-RecoveryExpr 0x1450284c8 <col:7> '<dependent type>' contains-errors lvalue       |   | |     | `-IntegerLiteral 0x145028488 <col:12> 'int' 255       |   | |     |-CompoundStmt 0x145028ac8 <col:18, line:24:3>       |   | |     | `-IfStmt 0x145028a98 <line:16:7, line:23:7> has_else       |   | |     |   |-BinaryOperator 0x145028560 <line:16:11, col:17> 'int' contains-errors '>'       |   | |     |   | |-ImplicitCastExpr 0x145028548 <col:11> 'int' contains-errors <LValueToRValue>       |   | |     |   | | `-DeclRefExpr 0x145028508 <col:11> 'int' contains-errors lvalue Var 0x145027ec0 'len' 'int'       |   | |     |   | `-IntegerLiteral 0x145028528 <col:17> 'int' 31       |   | |     |   |-CompoundStmt 0x1450288e0 <col:21, line:19:7>       |   | |     |   `-CompoundStmt 0x145028a88 <col:14, line:23:7>       |   | |     `-WhileStmt 0x145028c68 <line:24:10, line:27:3>       |   | |       |-BinaryOperator 0x145028b38 <line:24:17, col:25> 'int' contains-errors '>'       |   | |       | |-UnaryOperator 0x145028b00 <col:17, col:20> 'int' contains-errors postfix '--'       |   | |       | | `-DeclRefExpr 0x145028ae0 <col:17> 'int' contains-errors lvalue Var 0x145027ec0 'len' 'int'       |   | |       | `-IntegerLiteral 0x145028b18 <col:25> 'int' 0       |   | |       `-CompoundStmt 0x145028c58 <col:28, line:27:3>       |   | `-UnaryOperator 0x145028d40 <line:29:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow       |   |   `-RecoveryExpr 0x145028d18 <col:6> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x145028cf8 <col:6> 'const int *' lvalue ParmVar 0x14500de70 'spans' 'const int *'       |   `-BinaryOperator 0x145029400 <line:30:11, col:25> 'int' '>'       |     |-UnaryOperator 0x145028d98 <col:11, col:13> 'unsigned int' prefix '--'       |     | `-DeclRefExpr 0x145028d78 <col:13> 'unsigned int' lvalue ParmVar 0x14500def0 'num_spans' 'unsigned int'       |     `-ImplicitCastExpr 0x145028dd0 <col:25> 'unsigned int' <IntegralCast>       |       `-IntegerLiteral 0x145028db0 <col:25> 'int' 1       `-CompoundStmt 0x14502a858 <line:31:12, line:65:5>         `-DoStmt 0x14502a838 <line:32:2, line:64:26>           |-CompoundStmt 0x14502a788 <line:32:5, line:64:2>           | |-IfStmt 0x14502a708 <line:34:6, line:62:6>           | | |-RecoveryExpr 0x145029458 <line:34:10> '_Bool' contains-errors           | | `-CompoundStmt 0x14502a6f0 <col:13, line:62:6>           | |   `-IfStmt 0x14502a6c0 <line:35:3, line:61:3> has_else           | |     |-RecoveryExpr 0x145029498 <line:35:7, col:12> '_Bool' contains-errors           | |     |-CompoundStmt 0x145029ff8 <col:18, line:50:3>           | |     | `-IfStmt 0x145029fc8 <line:36:7, line:49:7> has_else           | |     |   |-BinaryOperator 0x145029678 <line:36:11, col:37> 'int' contains-errors '>'           | |     |   | |-BinaryOperator 0x145029638 <col:11, col:33> '<dependent type>' contains-errors '-'           | |     |   | | |-CXXDependentScopeMemberExpr 0x145029530 <col:11, col:20> '<dependent type>' contains-errors lvalue .x           | |     |   | | | `-ArraySubscriptExpr 0x145029510 <col:11, col:18> '<dependent type>' contains-errors lvalue           | |     |   | | |   |-ImplicitCastExpr 0x1450294f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>           | |     |   | | |   | `-RecoveryExpr 0x1450294b8 <col:11> '<dependent type>' contains-errors lvalue           | |     |   | | |   `-IntegerLiteral 0x1450294d8 <col:17> 'int' 1           | |     |   | | `-CXXDependentScopeMemberExpr 0x1450295f0 <col:24, col:33> '<dependent type>' contains-errors lvalue .x           | |     |   | |   `-ArraySubscriptExpr 0x1450295d0 <col:24, col:31> '<dependent type>' contains-errors lvalue           | |     |   | |     |-ImplicitCastExpr 0x1450295b8 <col:24> '<dependent type>' contains-errors <LValueToRValue>           | |     |   | |     | `-RecoveryExpr 0x145029578 <col:24> '<dependent type>' contains-errors lvalue           | |     |   | |     `-IntegerLiteral 0x145029598 <col:30> 'int' 0           | |     |   | `-IntegerLiteral 0x145029658 <col:37> 'int' 16           | |     |   |-CompoundStmt 0x145029978 <col:41, line:40:7>           | |     |   `-CompoundStmt 0x145029fa8 <col:14, line:49:7>           | |     |     |-DeclStmt 0x145029b10 <line:41:4, col:22>           | |     |     | |-VarDecl 0x1450299a0 <col:4, col:13> col:8 used yy 'int' cinit           | |     |     | | `-ImplicitCastExpr 0x145029a28 <col:13> 'int' <LValueToRValue>           | |     |     | |   `-DeclRefExpr 0x145029a08 <col:13> 'int' lvalue ParmVar 0x14500dd58 'y' 'int'           | |     |     | `-VarDecl 0x145029a58 <col:4, col:21> col:16 used hh 'int' cinit           | |     |     |   `-ImplicitCastExpr 0x145029ae0 <col:21> 'int' <LValueToRValue>           | |     |     |     `-DeclRefExpr 0x145029ac0 <col:21> 'int' lvalue ParmVar 0x14500ddd8 'h' 'int'           | |     |     `-DoStmt 0x145029f88 <line:42:4, line:48:17>           | |     |       |-CompoundStmt 0x145029f30 <line:42:7, line:48:4>           | |     |       | |-DeclStmt 0x145029d48 <line:43:8, col:41>           | |     |       | | `-VarDecl 0x145029b40 <col:8, col:40> col:12 used len 'int' cinit           | |     |       | |   `-BinaryOperator 0x145029d28 <col:18, col:40> '<dependent type>' contains-errors '-'           | |     |       | |     |-CXXDependentScopeMemberExpr 0x145029c20 <col:18, col:27> '<dependent type>' contains-errors lvalue .x           | |     |       | |     | `-ArraySubscriptExpr 0x145029c00 <col:18, col:25> '<dependent type>' contains-errors lvalue           | |     |       | |     |   |-ImplicitCastExpr 0x145029be8 <col:18> '<dependent type>' contains-errors <LValueToRValue>           | |     |       | |     |   | `-RecoveryExpr 0x145029ba8 <col:18> '<dependent type>' contains-errors lvalue           | |     |       | |     |   `-IntegerLiteral 0x145029bc8 <col:24> 'int' 1           | |     |       | |     `-CXXDependentScopeMemberExpr 0x145029ce0 <col:31, col:40> '<dependent type>' contains-errors lvalue .x           | |     |       | |       `-ArraySubscriptExpr 0x145029cc0 <col:31, col:38> '<dependent type>' contains-errors lvalue           | |     |       | |         |-ImplicitCastExpr 0x145029ca8 <col:31> '<dependent type>' contains-errors <LValueToRValue>           | |     |       | |         | `-RecoveryExpr 0x145029c68 <col:31> '<dependent type>' contains-errors lvalue           | |     |       | |         `-IntegerLiteral 0x145029c88 <col:37> 'int' 0           | |     |       | `-UnaryOperator 0x145029f18 <line:47:8, col:10> 'int' postfix '++'           | |     |       |   `-DeclRefExpr 0x145029ef8 <col:8> 'int' lvalue Var 0x1450299a0 'yy' 'int'           | |     |       `-UnaryOperator 0x145029f70 <line:48:13, col:15> 'int' prefix '--'           | |     |         `-DeclRefExpr 0x145029f50 <col:15> 'int' lvalue Var 0x145029a58 'hh' 'int'           | |     `-CompoundStmt 0x14502a6a0 <line:50:10, line:61:3>           | |       |-DeclStmt 0x14502a198 <line:51:7, col:25>           | |       | |-VarDecl 0x14502a028 <col:7, col:16> col:11 used yy 'int' cinit           | |       | | `-ImplicitCastExpr 0x14502a0b0 <col:16> 'int' <LValueToRValue>           | |       | |   `-DeclRefExpr 0x14502a090 <col:16> 'int' lvalue ParmVar 0x14500dd58 'y' 'int'           | |       | `-VarDecl 0x14502a0e0 <col:7, col:24> col:19 used hh 'int' cinit           | |       |   `-ImplicitCastExpr 0x14502a168 <col:24> 'int' <LValueToRValue>           | |       |     `-DeclRefExpr 0x14502a148 <col:24> 'int' lvalue ParmVar 0x14500ddd8 'h' 'int'           | |       `-DoStmt 0x14502a680 <line:52:7, line:60:20>           | |         |-CompoundStmt 0x14502a620 <line:52:10, line:60:7>           | |         | |-DeclStmt 0x14502a3d0 <line:53:4, col:37>           | |         | | `-VarDecl 0x14502a1c8 <col:4, col:36> col:8 used len 'int' cinit           | |         | |   `-BinaryOperator 0x14502a3b0 <col:14, col:36> '<dependent type>' contains-errors '-'           | |         | |     |-CXXDependentScopeMemberExpr 0x14502a2a8 <col:14, col:23> '<dependent type>' contains-errors lvalue .x           | |         | |     | `-ArraySubscriptExpr 0x14502a288 <col:14, col:21> '<dependent type>' contains-errors lvalue           | |         | |     |   |-ImplicitCastExpr 0x14502a270 <col:14> '<dependent type>' contains-errors <LValueToRValue>           | |         | |     |   | `-RecoveryExpr 0x14502a230 <col:14> '<dependent type>' contains-errors lvalue           | |         | |     |   `-IntegerLiteral 0x14502a250 <col:20> 'int' 1           | |         | |     `-CXXDependentScopeMemberExpr 0x14502a368 <col:27, col:36> '<dependent type>' contains-errors lvalue .x           | |         | |       `-ArraySubscriptExpr 0x14502a348 <col:27, col:34> '<dependent type>' contains-errors lvalue           | |         | |         |-ImplicitCastExpr 0x14502a330 <col:27> '<dependent type>' contains-errors <LValueToRValue>           | |         | |         | `-RecoveryExpr 0x14502a2f0 <col:27> '<dependent type>' contains-errors lvalue           | |         | |         `-IntegerLiteral 0x14502a310 <col:33> 'int' 0           | |         | |-WhileStmt 0x14502a5c8 <line:55:4, line:58:4>           | |         | | |-BinaryOperator 0x14502a578 <line:55:11, col:19> 'int' contains-errors '>'           | |         | | | |-UnaryOperator 0x14502a540 <col:11, col:14> 'int' contains-errors postfix '--'           | |         | | | | `-DeclRefExpr 0x14502a520 <col:11> 'int' contains-errors lvalue Var 0x14502a1c8 'len' 'int'           | |         | | | `-IntegerLiteral 0x14502a558 <col:19> 'int' 0           | |         | | `-CompoundStmt 0x14502a5b8 <col:22, line:58:4>           | |         | `-UnaryOperator 0x14502a608 <line:59:4, col:6> 'int' postfix '++'           | |         |   `-DeclRefExpr 0x14502a5e8 <col:4> 'int' lvalue Var 0x14502a028 'yy' 'int'           | |         `-UnaryOperator 0x14502a668 <line:60:16, col:18> 'int' prefix '--'           | |           `-DeclRefExpr 0x14502a648 <col:18> 'int' lvalue Var 0x14502a0e0 'hh' 'int'           | `-UnaryOperator 0x14502a770 <line:63:6, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow           |   `-RecoveryExpr 0x14502a748 <col:6> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x14502a728 <col:6> 'const int *' lvalue ParmVar 0x14500de70 'spans' 'const int *'           `-BinaryOperator 0x14502a818 <line:64:11, col:25> 'int' '>'             |-UnaryOperator 0x14502a7c8 <col:11, col:13> 'unsigned int' prefix '--'             | `-DeclRefExpr 0x14502a7a8 <col:13> 'unsigned int' lvalue ParmVar 0x14500def0 'num_spans' 'unsigned int'             `-ImplicitCastExpr 0x14502a800 <col:25> 'unsigned int' <IntegralCast>               `-IntegerLiteral 0x14502a7e0 <col:25> 'int' 1 ","21015":"`-FunctionDecl 0x122941aa8  col:2 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x122941ba8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x122941c10 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x122941c78 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x122941b50 <<invalid sloc>> Implicit 884 ","20395":"`-FunctionDecl 0x14f141b38  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14f141c38 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14f141be0 <<invalid sloc>> Implicit 873 ","21154":"`-FunctionDecl 0x1280a59a8  line:1:6 invalid recovery_cipher_abort 'int (void)'   `-CompoundStmt 0x1280a5b38 <line:2:1, line:8:1>     `-IfStmt 0x1280a5b00 <line:3:5, line:6:5>       |-RecoveryExpr 0x1280a5a68 <line:3:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1280a5ae8 <col:29, line:6:5>         `-ReturnStmt 0x1280a5ad8 <line:5:9, col:16>           `-RecoveryExpr 0x1280a5ab8 <col:16> '<dependent type>' contains-errors lvalue ","21033":"`-FunctionDecl 0x147945fe8  line:1:1 invalid bgp_attr_as4_aggregator 'int (struct peer *, int, struct attr *, char, int *, struct in_addr *, char *)'   |-ParmVarDecl 0x147928648 <col:26, col:39> col:39 used peer 'struct peer *'   |-ParmVarDecl 0x1479286e0 <col:45, col:56> col:56 invalid length 'int'   |-ParmVarDecl 0x147945ac8 <line:2:8, col:21> col:21 used attr 'struct attr *'   |-ParmVarDecl 0x147945b40 <col:27, col:34> col:34 used flag 'char'   |-ParmVarDecl 0x147945bf8 <line:3:8, col:14> col:14 invalid as4_aggregator_as 'int *'   |-ParmVarDecl 0x147945dc8 <line:4:8, col:24> col:24 used as4_aggregator_addr 'struct in_addr *'   |-ParmVarDecl 0x147945e48 <line:5:8, col:16> col:16 used startp 'char *'   `-CompoundStmt 0x147947870 <line:6:1, line:29:1>     |-IfStmt 0x147946718 <line:9:3, line:15:5>     | |-BinaryOperator 0x147946108 <line:9:7, col:17> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1479460c8 <col:7> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1479460e8 <col:17> 'int' 8     | `-CompoundStmt 0x1479466f8 <line:10:5, line:15:5>     |   |-CallExpr 0x147946400 <line:11:7, col:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x147946280 <col:7> 'int ()' Function 0x1479461c8 'zlog' 'int ()'     |   | |-RecoveryExpr 0x1479462d8 <col:13, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1479462a0 <col:13> 'struct peer *' lvalue ParmVar 0x147928648 'peer' 'struct peer *'     |   | |-RecoveryExpr 0x1479463e0 <col:24> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x147946360 <col:33> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x147946380 <col:40> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1479466e8 <line:12:7, line:14:41>     |     `-CallExpr 0x147946698 <line:12:14, line:14:41> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x147946520 <line:12:14> 'int ()' Function 0x147946468 'bgp_attr_malformed' 'int ()'     |       |-DeclRefExpr 0x147946540 <col:34> 'struct peer *' lvalue ParmVar 0x147928648 'peer' 'struct peer *'     |       |-RecoveryExpr 0x147946638 <col:40> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x147946578 <col:65> 'char' lvalue ParmVar 0x147945b40 'flag' 'char'     |       |-RecoveryExpr 0x147946658 <line:13:34> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x147946678 <line:14:34> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x1479465c8 <col:40> 'int' 0     |-IfStmt 0x1479472f0 <line:18:3, line:21:45>     | |-CallExpr 0x1479470e0 <line:18:7, col:65> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x147947010 <col:7> 'int ()' Function 0x147946958 'bgp_attr_flag_invalid' 'int ()'     | | |-DeclRefExpr 0x147947030 <col:30> 'struct peer *' lvalue ParmVar 0x147928648 'peer' 'struct peer *'     | | |-RecoveryExpr 0x1479470c0 <col:36> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147947068 <col:61> 'char' lvalue ParmVar 0x147945b40 'flag' 'char'     | `-ReturnStmt 0x1479472e0 <line:19:5, line:21:45>     |   `-CallExpr 0x147947290 <line:19:12, line:21:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x147947118 <line:19:12> 'int ()' Function 0x147946468 'bgp_attr_malformed' 'int ()'     |     |-DeclRefExpr 0x147947138 <col:32> 'struct peer *' lvalue ParmVar 0x147928648 'peer' 'struct peer *'     |     |-RecoveryExpr 0x147947230 <col:38> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x147947170 <col:63> 'char' lvalue ParmVar 0x147945b40 'flag' 'char'     |     |-RecoveryExpr 0x147947250 <line:20:32> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x1479471a8 <line:21:32> 'char *' lvalue ParmVar 0x147945e48 'startp' 'char *'     |     `-RecoveryExpr 0x147947270 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1479474e8 <line:23:3, col:47> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x147947348 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x147947330 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x147947310 <col:4> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1479474c0 <col:24, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x147947440 <col:24> 'int ()' Function 0x147947388 'stream_getl' 'int ()'     |   `-RecoveryExpr 0x147947498 <col:37, col:43> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x147947460 <col:37> 'struct peer *' lvalue ParmVar 0x147928648 'peer' 'struct peer *'     `-BinaryOperator 0x1479476f0 <line:24:3, col:60> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x147947540 <col:3, col:24> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x147947508 <col:3> 'struct in_addr *' lvalue ParmVar 0x147945dc8 'as4_aggregator_addr' 'struct in_addr *'       `-CallExpr 0x1479476c8 <col:33, col:60> '<dependent type>' contains-errors         |-DeclRefExpr 0x147947648 <col:33> 'int ()' Function 0x147947590 'stream_get_ipv4' 'int ()'         `-RecoveryExpr 0x1479476a0 <col:50, col:56> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x147947668 <col:50> 'struct peer *' lvalue ParmVar 0x147928648 'peer' 'struct peer *' ","20369":"`-FunctionDecl 0x15b9415d8  col:15 implicit used isspace 'int (int)' extern   |-ParmVarDecl 0x15b9416d8 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x15b941680 <<invalid sloc>> Implicit 929   |-NoThrowAttr 0x15b941748 <col:15> Implicit   `-PureAttr 0x15b941770 <col:15> Implicit ","20846":"`-FunctionDecl 0x133128498  line:1:12 invalid pkey_sm2_decrypt 'int (int *, unsigned char *, int *, const unsigned char *, int)' static   |-ParmVarDecl 0x133128128 <col:29, col:43> col:43 referenced invalid ctx 'int *'   |-ParmVarDecl 0x1331281d8 <line:2:29, col:44> col:44 used out 'unsigned char *'   |-ParmVarDecl 0x133128258 <col:49, col:57> col:57 invalid outlen 'int *'   |-ParmVarDecl 0x133128308 <line:3:29, col:50> col:50 used in 'const unsigned char *'   |-ParmVarDecl 0x133128388 <col:54, col:61> col:61 invalid inlen 'int'   `-CompoundStmt 0x133142118 <line:4:1, line:17:1>     |-DeclStmt 0x133141ab8 <line:7:5, col:65>     | `-VarDecl 0x133128730 <col:5, col:19> col:19 invalid md 'const int *'     |-IfStmt 0x133141e70 <line:9:5, line:14:5>     | |-BinaryOperator 0x133141b48 <line:9:9, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x133141ad0 <col:9> 'unsigned char *' lvalue ParmVar 0x1331281d8 'out' 'unsigned char *'     | | `-RecoveryExpr 0x133141b28 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133141e58 <col:22, line:14:5>     |   `-IfStmt 0x133141e28 <line:10:9, line:13:20> has_else     |     |-UnaryOperator 0x133141d98 <line:10:13, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-CallExpr 0x133141d58 <col:14, col:54> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x133141c48 <col:14> 'int ()' Function 0x133141b90 'sm2_plaintext_size' 'int ()'     |     |   |-RecoveryExpr 0x133141d38 <col:33> '<dependent type>' contains-errors lvalue     |     |   |-RecoveryExpr 0x133141c80 <col:37> '<dependent type>' contains-errors lvalue     |     |   |-RecoveryExpr 0x133141ca0 <col:41> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x133141cc0 <col:48> '<dependent type>' contains-errors lvalue     |     |-ReturnStmt 0x133141de8 <line:11:13, col:21>     |     | `-UnaryOperator 0x133141dd0 <col:20, col:21> 'int' prefix '-'     |     |   `-IntegerLiteral 0x133141db0 <col:21> 'int' 1     |     `-ReturnStmt 0x133141e18 <line:13:13, col:20>     |       `-IntegerLiteral 0x133141df8 <col:20> 'int' 1     `-ReturnStmt 0x133142108 <line:16:5, col:54>       `-CallExpr 0x1331420b8 <col:12, col:54> '<dependent type>' contains-errors         |-DeclRefExpr 0x133141f70 <col:12> 'int ()' Function 0x133141eb8 'sm2_decrypt' 'int ()'         |-RecoveryExpr 0x133142098 <col:24> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x133141fa8 <col:28> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x133141fc8 <col:32> 'const unsigned char *' lvalue ParmVar 0x133128308 'in' 'const unsigned char *'         |-RecoveryExpr 0x133141fe8 <col:36> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x133142008 <col:43> 'unsigned char *' lvalue ParmVar 0x1331281d8 'out' 'unsigned char *'         `-RecoveryExpr 0x133142028 <col:48> '<dependent type>' contains-errors lvalue ","20436":"`-FunctionDecl 0x15780de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x15780dd58 <col:8> col:8 used QueryPlannerTest 'int'   |-ParmVarDecl 0x15780dcd8 <col:26> col:26 ElemMatchIndexIntersection 'int'   `-CompoundStmt 0x157829400 <col:54, line:33:1>     |-CallExpr 0x1578286f8 <line:3:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15780e0a0 <col:5> 'int ()' Function 0x15780dfe8 'addIndex' 'int ()'     | `-CallExpr 0x1578286d0 <col:14, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15780e1a0 <col:14> 'int ()' Function 0x15780e0e8 'BSON' 'int ()'     |   `-RecoveryExpr 0x1578286a0 <col:19, col:28> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x15780e200 <col:19> 'char[4]' lvalue \"STR\"     |     `-IntegerLiteral 0x15780e220 <col:28> 'int' 1     |-CallExpr 0x157828878 <line:5:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157828720 <col:5> 'int ()' Function 0x15780dfe8 'addIndex' 'int ()'     | |-CallExpr 0x1578287e8 <col:14, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x157828740 <col:14> 'int ()' Function 0x15780e0e8 'BSON' 'int ()'     | | `-RecoveryExpr 0x1578287b8 <col:19, col:28> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x157828760 <col:19> 'char[4]' lvalue \"STR\"     | |   `-IntegerLiteral 0x157828780 <col:28> 'int' 1     | `-RecoveryExpr 0x157828858 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157828a00 <line:6:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1578288a8 <col:5> 'int ()' Function 0x15780dfe8 'addIndex' 'int ()'     | |-CallExpr 0x157828970 <col:14, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1578288c8 <col:14> 'int ()' Function 0x15780e0e8 'BSON' 'int ()'     | | `-RecoveryExpr 0x157828940 <col:19, col:28> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x1578288e8 <col:19> 'char[4]' lvalue \"STR\"     | |   `-IntegerLiteral 0x157828908 <col:28> 'int' 1     | `-RecoveryExpr 0x1578289e0 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157828d40 <line:8:5, line:10:24> 'int'     | |-ImplicitCastExpr 0x157828d28 <line:8:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157828b10 <col:5> 'int ()' Function 0x157828a58 'runQuery' 'int ()'     | `-CallExpr 0x157828ce8 <line:9:9, line:10:23> 'int'     |   |-ImplicitCastExpr 0x157828cd0 <line:9:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157828c10 <col:9> 'int ()' Function 0x157828b58 'fromjson' 'int ()'     |   `-ImplicitCastExpr 0x157828d10 <col:18, line:10:18> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x157828c70 <line:9:18, line:10:18> 'char[7]' lvalue \"STRSTR\"     |-CallExpr 0x157828ea0 <line:12:5, col:26> 'int'     | |-ImplicitCastExpr 0x157828e88 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157828e48 <col:5> 'int ()' Function 0x157828d90 'assertNumSolutions' 'int ()'     | `-IntegerLiteral 0x157828e68 <col:24> 'unsigned int' 6     |-CallExpr 0x157829000 <line:15:5, col:31> 'int'     | |-ImplicitCastExpr 0x157828fe8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157828fa8 <col:5> 'int ()' Function 0x157828ef0 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x157829028 <col:26> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x157828fc8 <col:26> 'char[4]' lvalue \"STR\"     |-CallExpr 0x157829098 <line:16:5, col:31> 'int'     | |-ImplicitCastExpr 0x157829080 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157829040 <col:5> 'int ()' Function 0x157828ef0 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x1578290c0 <col:26> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x157829060 <col:26> 'char[4]' lvalue \"STR\"     |-CallExpr 0x157829130 <line:17:5, col:31> 'int'     | |-ImplicitCastExpr 0x157829118 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1578290d8 <col:5> 'int ()' Function 0x157828ef0 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x157829158 <col:26> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1578290f8 <col:26> 'char[4]' lvalue \"STR\"     |-CallExpr 0x157829218 <line:21:5, line:24:14> 'int'     | |-ImplicitCastExpr 0x157829200 <line:21:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157829170 <col:5> 'int ()' Function 0x157828ef0 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x157829240 <line:22:9, line:24:9> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1578291d0 <line:22:9, line:24:9> 'char[10]' lvalue \"STRSTRSTR\"     |-CallExpr 0x1578292c0 <line:25:5, line:28:14> 'int'     | |-ImplicitCastExpr 0x1578292a8 <line:25:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157829258 <col:5> 'int ()' Function 0x157828ef0 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x1578292e8 <line:26:9, line:28:9> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x157829278 <line:26:9, line:28:9> 'char[10]' lvalue \"STRSTRSTR\"     `-CallExpr 0x157829368 <line:29:5, line:32:14> 'int'       |-ImplicitCastExpr 0x157829350 <line:29:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x157829300 <col:5> 'int ()' Function 0x157828ef0 'assertSolutionExists' 'int ()'       `-ImplicitCastExpr 0x157829390 <line:30:9, line:32:9> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x157829320 <line:30:9, line:32:9> 'char[10]' lvalue \"STRSTRSTR\" ","20476":"`-FunctionDecl 0x12f940a00  line:1:1 referenced nfsd4_layout_verify 'int (struct svc_export *, unsigned int)'   |-ParmVarDecl 0x12f928648 <col:21, col:40> col:40 used exp 'struct svc_export *'   |-ParmVarDecl 0x12f9286c8 <col:45, col:58> col:58 used layout_type 'unsigned int'   `-CompoundStmt 0x12f941340 <line:2:1, line:15:1>     |-IfStmt 0x12f940f20 <line:3:2, line:6:2>     | |-UnaryOperator 0x12f940b78 <line:3:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f940b60 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12f940b38 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12f940b00 <col:7> 'struct svc_export *' lvalue ParmVar 0x12f928648 'exp' 'struct svc_export *'     | `-CompoundStmt 0x12f940f00 <col:29, line:6:2>     |   |-CallExpr 0x12f940e58 <line:4:3, col:26> 'int'     |   | |-ImplicitCastExpr 0x12f940e40 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12f940cc0 <col:3> 'int ()' Function 0x12f940c08 'dprintk' 'int ()'     |   | |-ImplicitCastExpr 0x12f940e88 <col:11> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x12f940d20 <col:11> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x12f940ea0 <col:18> 'const char *' <ArrayToPointerDecay>     |   |   `-PredefinedExpr 0x12f940df0 <col:18> 'const char[20]' lvalue __func__     |   |     `-StringLiteral 0x12f940dc0 <col:18> 'const char[20]' lvalue \"nfsd4_layout_verify\"     |   `-ReturnStmt 0x12f940ef0 <line:5:3, col:10>     |     `-RecoveryExpr 0x12f940ed0 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12f941238 <line:8:2, line:12:2>       |-UnaryOperator 0x12f941078 <line:8:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ParenExpr 0x12f941058 <col:7, col:49> '<dependent type>' contains-errors       |   `-BinaryOperator 0x12f941038 <col:8, col:48> '<dependent type>' contains-errors '&'       |     |-RecoveryExpr 0x12f940f78 <col:8, col:13> '<dependent type>' contains-errors lvalue       |     | `-DeclRefExpr 0x12f940f40 <col:8> 'struct svc_export *' lvalue ParmVar 0x12f928648 'exp' 'struct svc_export *'       |     `-ParenExpr 0x12f941018 <col:31, col:48> 'int'       |       `-BinaryOperator 0x12f940ff8 <col:32, col:37> 'int' '<<'       |         |-IntegerLiteral 0x12f940fa0 <col:32> 'int' 1       |         `-ImplicitCastExpr 0x12f940fe0 <col:37> 'unsigned int' <LValueToRValue>       |           `-DeclRefExpr 0x12f940fc0 <col:37> 'unsigned int' lvalue ParmVar 0x12f9286c8 'layout_type' 'unsigned int'       `-CompoundStmt 0x12f941218 <col:52, line:12:2>         |-CallExpr 0x12f941150 <line:9:3, line:10:25> 'int'         | |-ImplicitCastExpr 0x12f941138 <line:9:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x12f941090 <col:3> 'int ()' Function 0x12f940c08 'dprintk' 'int ()'         | |-ImplicitCastExpr 0x12f941188 <col:11> 'char *' <ArrayToPointerDecay>         | | `-StringLiteral 0x12f9410b0 <col:11> 'char[4]' lvalue \"STR\"         | |-ImplicitCastExpr 0x12f9411a0 <line:10:4> 'const char *' <ArrayToPointerDecay>         | | `-PredefinedExpr 0x12f941100 <col:4> 'const char[20]' lvalue __func__         | |   `-StringLiteral 0x12f9410d0 <col:4> 'const char[20]' lvalue \"nfsd4_layout_verify\"         | `-ImplicitCastExpr 0x12f9411b8 <col:14> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x12f941118 <col:14> 'unsigned int' lvalue ParmVar 0x12f9286c8 'layout_type' 'unsigned int'         `-ReturnStmt 0x12f941208 <line:11:3, col:10>           `-RecoveryExpr 0x12f9411e8 <col:10> '<dependent type>' contains-errors lvalue ","20996":"`-FunctionDecl 0x16000ddf8  line:1:5 invalid mp_pack 'int (int *)'   |-ParmVarDecl 0x16000dd28 <col:13, col:24> col:24 invalid L 'int *'   `-CompoundStmt 0x160028cc8 <col:27, line:30:1>     |-DeclStmt 0x16000e0e8 <line:2:5, col:30>     | `-VarDecl 0x16000dec0 <col:5, col:29> col:9 used nargs 'int' cinit     |   `-CallExpr 0x16000e0c0 <col:17, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x16000e080 <col:17> 'int ()' Function 0x16000dfc8 'lua_gettop' 'int ()'     |     `-RecoveryExpr 0x16000e0a0 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x16000e180 <line:3:5, col:10>     | `-VarDecl 0x16000e118 <col:5, col:9> col:9 used i 'int'     |-IfStmt 0x160027e48 <line:6:5, line:7:41>     | |-BinaryOperator 0x16000e208 <line:6:9, col:18> 'int' contains-errors '=='     | | |-ImplicitCastExpr 0x16000e1f0 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x16000e1b0 <col:9> 'int' contains-errors lvalue Var 0x16000dec0 'nargs' 'int'     | | `-IntegerLiteral 0x16000e1d0 <col:18> 'int' 0     | `-ReturnStmt 0x160027e38 <line:7:9, col:41>     |   `-CallExpr 0x160027e00 <col:16, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x16000e308 <col:16> 'int ()' Function 0x16000e250 'luaL_argerror' 'int ()'     |     |-RecoveryExpr 0x16000e328 <col:30> '<dependent type>' contains-errors lvalue     |     |-IntegerLiteral 0x16000e348 <col:33> 'int' 0     |     `-StringLiteral 0x16000e3b0 <col:36> 'char[4]' lvalue \"STR\"     |-IfStmt 0x1600280b8 <line:9:5, line:10:41>     | |-UnaryOperator 0x160027fd8 <line:9:9, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x160027fa8 <col:10, col:33> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x160027f48 <col:10> 'int ()' Function 0x160027e90 'lua_checkstack' 'int ()'     | |   |-RecoveryExpr 0x160027f68 <col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x160027f88 <col:28> 'int' contains-errors lvalue Var 0x16000dec0 'nargs' 'int'     | `-ReturnStmt 0x1600280a8 <line:10:9, col:41>     |   `-CallExpr 0x160028070 <col:16, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x160027ff0 <col:16> 'int ()' Function 0x16000e250 'luaL_argerror' 'int ()'     |     |-RecoveryExpr 0x160028010 <col:30> '<dependent type>' contains-errors lvalue     |     |-IntegerLiteral 0x160028030 <col:33> 'int' 0     |     `-StringLiteral 0x160028050 <col:36> 'char[4]' lvalue \"STR\"     |-ForStmt 0x160028938 <line:13:5, line:24:5>     | |-BinaryOperator 0x160028260 <line:13:9, col:13> 'int' '='     | | |-DeclRefExpr 0x160028220 <col:9> 'int' lvalue Var 0x16000e118 'i' 'int'     | | `-IntegerLiteral 0x160028240 <col:13> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x1600282f0 <col:16, col:21> 'int' contains-errors '<='     | | |-ImplicitCastExpr 0x1600282c0 <col:16> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x160028280 <col:16> 'int' lvalue Var 0x16000e118 'i' 'int'     | | `-ImplicitCastExpr 0x1600282d8 <col:21> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x1600282a0 <col:21> 'int' contains-errors lvalue Var 0x16000dec0 'nargs' 'int'     | |-UnaryOperator 0x160028330 <col:28, col:29> 'int' postfix '++'     | | `-DeclRefExpr 0x160028310 <col:28> 'int' lvalue Var 0x16000e118 'i' 'int'     | `-CompoundStmt 0x160028918 <col:33, line:24:5>     |   |-CallExpr 0x160028488 <line:15:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x160028428 <col:9> 'int ()' Function 0x160028370 'lua_pushvalue' 'int ()'     |   | |-RecoveryExpr 0x160028448 <col:23> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x160028468 <col:26> 'int' lvalue Var 0x16000e118 'i' 'int'     |   `-CallExpr 0x160028668 <line:17:9, col:35> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x160028598 <col:9> 'int ()' Function 0x1600284e0 'mp_encode_lua_type' 'int ()'     |     |-RecoveryExpr 0x1600285b8 <col:28> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x160028648 <col:30> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1600285f0 <col:34> 'int' 0     |-CallExpr 0x160028af8 <line:25:5, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160028a50 <col:5> 'int ()' Function 0x160028998 'mp_buf_free' 'int ()'     | |-RecoveryExpr 0x160028a70 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x160028ad8 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x160028c68 <line:28:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160028c08 <col:5> 'int ()' Function 0x160028b50 'lua_concat' 'int ()'     | |-RecoveryExpr 0x160028c28 <col:16> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x160028c48 <col:19> 'int' contains-errors lvalue Var 0x16000dec0 'nargs' 'int'     `-ReturnStmt 0x160028cb8 <line:29:5, col:12>       `-IntegerLiteral 0x160028c98 <col:12> 'int' 1 ","20525":"`-FunctionDecl 0x15404a600  line:1:6 update_group_capacity 'void (struct sched_domain *, int)'   |-ParmVarDecl 0x15401e248 <col:28, col:49> col:49 used sd 'struct sched_domain *'   |-ParmVarDecl 0x15401e2c8 <col:53, col:57> col:57 used cpu 'int'   `-CompoundStmt 0x155009800 <line:2:1, line:56:1>     |-DeclStmt 0x15404a850 <line:3:2, col:40>     | `-VarDecl 0x15404a788 <col:2, col:35> col:23 used child 'struct sched_domain *' cinit     |   `-RecoveryExpr 0x15404a828 <col:31, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15404a7f0 <col:31> 'struct sched_domain *' lvalue ParmVar 0x15401e248 'sd' 'struct sched_domain *'     |-DeclStmt 0x15404ab50 <line:4:2, col:46>     | |-RecordDecl 0x15404a868 <col:2, col:9> col:9 struct sched_group     | |-VarDecl 0x15404a9d8 <col:2, col:22> col:22 used group 'struct sched_group *'     | `-VarDecl 0x15404aa68 <col:2, col:40> col:30 used sdg 'struct sched_group *' cinit     |   `-RecoveryExpr 0x15404ab08 <col:36, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15404aad0 <col:36> 'struct sched_domain *' lvalue ParmVar 0x15401e248 'sd' 'struct sched_domain *'     |-DeclStmt 0x15404ad08 <line:5:2, col:52>     | |-VarDecl 0x15404ab80 <col:2, col:16> col:16 used capacity 'unsigned long'     | |-VarDecl 0x15404ac00 <col:2, col:26> col:26 used min_capacity 'unsigned long'     | `-VarDecl 0x15404ac80 <col:2, col:40> col:40 used max_capacity 'unsigned long'     |-DeclStmt 0x15404ada0 <line:6:2, col:24>     | `-VarDecl 0x15404ad38 <col:2, col:16> col:16 used interval 'unsigned long'     |-BinaryOperator 0x15404afa8 <line:8:2, col:50> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x15404adb8 <col:2> 'unsigned long' lvalue Var 0x15404ad38 'interval' 'unsigned long'     | `-CallExpr 0x15404af80 <col:13, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15404af00 <col:13> 'int ()' Function 0x15404ae48 'msecs_to_jiffies' 'int ()'     |   `-RecoveryExpr 0x15404af58 <col:30, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15404af20 <col:30> 'struct sched_domain *' lvalue ParmVar 0x15401e248 'sd' 'struct sched_domain *'     |-BinaryOperator 0x15404b1f0 <line:9:2, col:59> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x15404afc8 <col:2> 'unsigned long' lvalue Var 0x15404ad38 'interval' 'unsigned long'     | `-CallExpr 0x15404b1b8 <col:13, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15404b0c8 <col:13> 'int ()' Function 0x15404b010 'clamp' 'int ()'     |   |-DeclRefExpr 0x15404b0e8 <col:19> 'unsigned long' lvalue Var 0x15404ad38 'interval' 'unsigned long'     |   |-IntegerLiteral 0x15404b108 <col:29> 'unsigned long' 1     |   `-RecoveryExpr 0x15404b198 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15404b370 <line:10:2, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15404b270 <col:2, col:12> '<dependent type>' contains-errors lvalue ->next_update     | | `-RecoveryExpr 0x15404b248 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15404b210 <col:2> 'struct sched_group *' contains-errors lvalue Var 0x15404aa68 'sdg' 'struct sched_group *'     | `-BinaryOperator 0x15404b350 <col:26, col:36> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x15404b330 <col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15404b2d0 <col:36> 'unsigned long' lvalue Var 0x15404ad38 'interval' 'unsigned long'     |-IfStmt 0x15404c800 <line:12:2, line:15:2>     | |-UnaryOperator 0x15404b3c8 <line:12:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15404b3b0 <col:7> 'struct sched_domain *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x15404b390 <col:7> 'struct sched_domain *' contains-errors lvalue Var 0x15404a788 'child' 'struct sched_domain *'     | `-CompoundStmt 0x15404b5d8 <col:14, line:15:2>     |   |-CallExpr 0x15404b568 <line:13:3, col:30> 'int'     |   | |-ImplicitCastExpr 0x15404b550 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15404b4c0 <col:3> 'int ()' Function 0x15404b408 'update_cpu_capacity' 'int ()'     |   | |-ImplicitCastExpr 0x15404b598 <col:23> 'struct sched_domain *' <LValueToRValue>     |   | | `-DeclRefExpr 0x15404b4e0 <col:23> 'struct sched_domain *' lvalue ParmVar 0x15401e248 'sd' 'struct sched_domain *'     |   | `-ImplicitCastExpr 0x15404b5b0 <col:27> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x15404b500 <col:27> 'int' lvalue ParmVar 0x15401e2c8 'cpu' 'int'     |   `-ReturnStmt 0x15404b5c8 <line:14:3>     |-BinaryOperator 0x15404c878 <line:17:2, col:13> 'unsigned long' '='     | |-DeclRefExpr 0x15404c820 <col:2> 'unsigned long' lvalue Var 0x15404ab80 'capacity' 'unsigned long'     | `-ImplicitCastExpr 0x15404c860 <col:13> 'unsigned long' <IntegralCast>     |   `-IntegerLiteral 0x15404c840 <col:13> 'int' 0     |-BinaryOperator 0x15404c910 <line:18:2, col:17> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x15404c898 <col:2> 'unsigned long' lvalue Var 0x15404ac00 'min_capacity' 'unsigned long'     | `-RecoveryExpr 0x15404c8f0 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15404c988 <line:19:2, col:17> 'unsigned long' '='     | |-DeclRefExpr 0x15404c930 <col:2> 'unsigned long' lvalue Var 0x15404ac80 'max_capacity' 'unsigned long'     | `-ImplicitCastExpr 0x15404c970 <col:17> 'unsigned long' <IntegralCast>     |   `-IntegerLiteral 0x15404c950 <col:17> 'int' 0     |-IfStmt 0x155009508 <line:21:2, line:51:2> has_else     | |-BinaryOperator 0x15404ca60 <line:21:6, col:21> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x15404c9e0 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15404c9a8 <col:6> 'struct sched_domain *' contains-errors lvalue Var 0x15404a788 'child' 'struct sched_domain *'     | | `-RecoveryExpr 0x15404ca40 <col:21> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x155008d58 <col:33, line:39:2>     | | |-CallExpr 0x15404cd30 <line:24:3, col:42> 'int' contains-errors     | | | |-ImplicitCastExpr 0x15404cd18 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x15404cb60 <col:3> 'int ()' Function 0x15404caa8 'for_each_cpu' 'int ()'     | | | |-ImplicitCastExpr 0x15404cd60 <col:16> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x15404cb80 <col:16> 'int' lvalue ParmVar 0x15401e2c8 'cpu' 'int'     | | | `-CallExpr 0x15404ccd8 <col:21, col:41> 'int' contains-errors     | | |   |-ImplicitCastExpr 0x15404ccc0 <col:21> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x15404cc80 <col:21> 'int ()' Function 0x15404cbc8 'sched_group_span' 'int ()'     | | |   `-ImplicitCastExpr 0x15404cd00 <col:38> 'struct sched_group *' contains-errors <LValueToRValue>     | | |     `-DeclRefExpr 0x15404cca0 <col:38> 'struct sched_group *' contains-errors lvalue Var 0x15404aa68 'sdg' 'struct sched_group *'     | | `-CompoundStmt 0x155008d20 <col:44, line:38:3>     | |   |-DeclStmt 0x15404cf68 <line:25:4, col:36>     | |   | |-RecordDecl 0x15404cd78 <col:4, col:11> col:11 struct sched_group_capacity     | |   | `-VarDecl 0x15404cee8 <col:4, col:33> col:33 used sgc 'struct sched_group_capacity *'     | |   |-DeclStmt 0x15404d2f8 <line:26:4, col:31>     | |   | |-RecordDecl 0x15404cf80 <col:4, col:11> col:11 struct rq     | |   | `-VarDecl 0x15404d0e8 <col:4, col:30> col:15 used rq 'struct rq *' cinit     | |   |   `-ImplicitCastExpr 0x15404d2c8 <col:20, col:30> 'struct rq *' <IntegralToPointer>     | |   |     `-CallExpr 0x15404d288 <col:20, col:30> 'int'     | |   |       |-ImplicitCastExpr 0x15404d270 <col:20> 'int (*)()' <FunctionToPointerDecay>     | |   |       | `-DeclRefExpr 0x15404d230 <col:20> 'int ()' Function 0x15404d178 'cpu_rq' 'int ()'     | |   |       `-ImplicitCastExpr 0x15404d2b0 <col:27> 'int' <LValueToRValue>     | |   |         `-DeclRefExpr 0x15404d250 <col:27> 'int' lvalue ParmVar 0x15401e2c8 'cpu' 'int'     | |   |-IfStmt 0x1550088d0 <line:29:4, line:34:4> has_else     | |   | |-CallExpr 0x15404d4a0 <line:29:8, col:24> '<dependent type>' contains-errors     | |   | | |-DeclRefExpr 0x15404d3f0 <col:8> 'int ()' Function 0x15404d338 'unlikely' 'int ()'     | |   | | `-UnaryOperator 0x15404d488 <col:17, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   | |   `-ImplicitCastExpr 0x15404d470 <col:18, col:22> '<dependent type>' contains-errors <LValueToRValue>     | |   | |     `-RecoveryExpr 0x15404d448 <col:18, col:22> '<dependent type>' contains-errors lvalue     | |   | |       `-DeclRefExpr 0x15404d410 <col:18> 'struct rq *' lvalue Var 0x15404d0e8 'rq' 'struct rq *'     | |   | |-CompoundStmt 0x15404d6a8 <col:27, line:31:4>     | |   | | `-CompoundAssignOperator 0x15404d678 <line:30:5, col:32> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     | |   | |   |-DeclRefExpr 0x15404d4c8 <col:5> 'unsigned long' lvalue Var 0x15404ab80 'capacity' 'unsigned long'     | |   | |   `-ImplicitCastExpr 0x15404d660 <col:17, col:32> 'unsigned long' <IntegralCast>     | |   | |     `-CallExpr 0x15404d620 <col:17, col:32> 'int'     | |   | |       |-ImplicitCastExpr 0x15404d608 <col:17> 'int (*)()' <FunctionToPointerDecay>     | |   | |       | `-DeclRefExpr 0x15404d5c8 <col:17> 'int ()' Function 0x15404d510 'capacity_of' 'int ()'     | |   | |       `-ImplicitCastExpr 0x15404d648 <col:29> 'int' <LValueToRValue>     | |   | |         `-DeclRefExpr 0x15404d5e8 <col:29> 'int' lvalue ParmVar 0x15401e2c8 'cpu' 'int'     | |   | `-CompoundStmt 0x1550088b0 <line:31:11, line:34:4>     | |   |   |-BinaryOperator 0x15404d7d0 <line:32:5, col:27> 'struct sched_group_capacity *' contains-errors '='     | |   |   | |-DeclRefExpr 0x15404d6c0 <col:5> 'struct sched_group_capacity *' lvalue Var 0x15404cee8 'sgc' 'struct sched_group_capacity *'     | |   |   | `-CXXDependentScopeMemberExpr 0x15404d788 <col:11, col:27> '<dependent type>' contains-errors lvalue ->sgc     | |   |   |   `-CXXDependentScopeMemberExpr 0x15404d740 <col:11, col:19> '<dependent type>' contains-errors lvalue ->groups     | |   |   |     `-RecoveryExpr 0x15404d718 <col:11, col:15> '<dependent type>' contains-errors lvalue     | |   |   |       `-DeclRefExpr 0x15404d6e0 <col:11> 'struct rq *' lvalue Var 0x15404d0e8 'rq' 'struct rq *'     | |   |   `-CompoundAssignOperator 0x155008880 <line:33:5, col:22> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |     |-DeclRefExpr 0x155008800 <col:5> 'unsigned long' lvalue Var 0x15404ab80 'capacity' 'unsigned long'     | |   |     `-RecoveryExpr 0x155008858 <col:17, col:22> '<dependent type>' contains-errors lvalue     | |   |       `-DeclRefExpr 0x155008820 <col:17> 'struct sched_group_capacity *' lvalue Var 0x15404cee8 'sgc' 'struct sched_group_capacity *'     | |   |-BinaryOperator 0x155008af0 <line:36:4, col:45> 'unsigned long' '='     | |   | |-DeclRefExpr 0x155008900 <col:4> 'unsigned long' lvalue Var 0x15404ac00 'min_capacity' 'unsigned long'     | |   | `-ImplicitCastExpr 0x155008ad8 <col:19, col:45> 'unsigned long' <IntegralCast>     | |   |   `-CallExpr 0x155008a78 <col:19, col:45> 'int'     | |   |     |-ImplicitCastExpr 0x155008a60 <col:19> 'int (*)()' <FunctionToPointerDecay>     | |   |     | `-DeclRefExpr 0x155008a00 <col:19> 'int ()' Function 0x155008948 'min' 'int ()'     | |   |     |-ImplicitCastExpr 0x155008aa8 <col:23> 'unsigned long' <LValueToRValue>     | |   |     | `-DeclRefExpr 0x155008a20 <col:23> 'unsigned long' lvalue Var 0x15404ab80 'capacity' 'unsigned long'     | |   |     `-ImplicitCastExpr 0x155008ac0 <col:33> 'unsigned long' <LValueToRValue>     | |   |       `-DeclRefExpr 0x155008a40 <col:33> 'unsigned long' lvalue Var 0x15404ac00 'min_capacity' 'unsigned long'     | |   `-BinaryOperator 0x155008d00 <line:37:4, col:45> 'unsigned long' '='     | |     |-DeclRefExpr 0x155008b10 <col:4> 'unsigned long' lvalue Var 0x15404ac80 'max_capacity' 'unsigned long'     | |     `-ImplicitCastExpr 0x155008ce8 <col:19, col:45> 'unsigned long' <IntegralCast>     | |       `-CallExpr 0x155008c88 <col:19, col:45> 'int'     | |         |-ImplicitCastExpr 0x155008c70 <col:19> 'int (*)()' <FunctionToPointerDecay>     | |         | `-DeclRefExpr 0x155008c10 <col:19> 'int ()' Function 0x155008b58 'max' 'int ()'     | |         |-ImplicitCastExpr 0x155008cb8 <col:23> 'unsigned long' <LValueToRValue>     | |         | `-DeclRefExpr 0x155008c30 <col:23> 'unsigned long' lvalue Var 0x15404ab80 'capacity' 'unsigned long'     | |         `-ImplicitCastExpr 0x155008cd0 <col:33> 'unsigned long' <LValueToRValue>     | |           `-DeclRefExpr 0x155008c50 <col:33> 'unsigned long' lvalue Var 0x15404ac80 'max_capacity' 'unsigned long'     | `-CompoundStmt 0x1550094e8 <line:39:10, line:51:2>     |   |-BinaryOperator 0x155008df8 <line:42:3, col:18> 'struct sched_group *' contains-errors '='     |   | |-DeclRefExpr 0x155008d78 <col:3> 'struct sched_group *' lvalue Var 0x15404a9d8 'group' 'struct sched_group *'     |   | `-RecoveryExpr 0x155008dd0 <col:11, col:18> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x155008d98 <col:11> 'struct sched_domain *' contains-errors lvalue Var 0x15404a788 'child' 'struct sched_domain *'     |   `-DoStmt 0x1550094c8 <line:43:3, line:50:34>     |     |-CompoundStmt 0x1550093f0 <line:43:6, line:50:3>     |     | |-DeclStmt 0x155009068 <line:44:4, col:49>     |     | | |-RecordDecl 0x155008e18 <col:4, col:11> col:11 struct sched_group_capacity     |     | | `-VarDecl 0x155008f88 <col:4, col:46> col:33 used sgc 'struct sched_group_capacity *' cinit     |     | |   `-RecoveryExpr 0x155009028 <col:39, col:46> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x155008ff0 <col:39> 'struct sched_group *' lvalue Var 0x15404a9d8 'group' 'struct sched_group *'     |     | |-CompoundAssignOperator 0x155009100 <line:46:4, col:21> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     | | |-DeclRefExpr 0x155009080 <col:4> 'unsigned long' lvalue Var 0x15404ab80 'capacity' 'unsigned long'     |     | | `-RecoveryExpr 0x1550090d8 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x1550090a0 <col:16> 'struct sched_group_capacity *' contains-errors lvalue Var 0x155008f88 'sgc' 'struct sched_group_capacity *'     |     | |-BinaryOperator 0x155009220 <line:47:4, col:54> 'unsigned long' contains-errors '='     |     | | |-DeclRefExpr 0x155009130 <col:4> 'unsigned long' lvalue Var 0x15404ac00 'min_capacity' 'unsigned long'     |     | | `-CallExpr 0x1550091f0 <col:19, col:54> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x155009150 <col:19> 'int ()' Function 0x155008948 'min' 'int ()'     |     | |   |-RecoveryExpr 0x1550091a8 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     | |   | `-DeclRefExpr 0x155009170 <col:23> 'struct sched_group_capacity *' contains-errors lvalue Var 0x155008f88 'sgc' 'struct sched_group_capacity *'     |     | |   `-DeclRefExpr 0x1550091d0 <col:42> 'unsigned long' lvalue Var 0x15404ac00 'min_capacity' 'unsigned long'     |     | |-BinaryOperator 0x155009330 <line:48:4, col:54> 'unsigned long' contains-errors '='     |     | | |-DeclRefExpr 0x155009240 <col:4> 'unsigned long' lvalue Var 0x15404ac80 'max_capacity' 'unsigned long'     |     | | `-CallExpr 0x155009300 <col:19, col:54> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x155009260 <col:19> 'int ()' Function 0x155008b58 'max' 'int ()'     |     | |   |-RecoveryExpr 0x1550092b8 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     | |   | `-DeclRefExpr 0x155009280 <col:23> 'struct sched_group_capacity *' contains-errors lvalue Var 0x155008f88 'sgc' 'struct sched_group_capacity *'     |     | |   `-DeclRefExpr 0x1550092e0 <col:42> 'unsigned long' lvalue Var 0x15404ac80 'max_capacity' 'unsigned long'     |     | `-BinaryOperator 0x1550093d0 <line:49:4, col:19> 'struct sched_group *' contains-errors '='     |     |   |-DeclRefExpr 0x155009350 <col:4> 'struct sched_group *' lvalue Var 0x15404a9d8 'group' 'struct sched_group *'     |     |   `-RecoveryExpr 0x1550093a8 <col:12, col:19> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x155009370 <col:12> 'struct sched_group *' lvalue Var 0x15404a9d8 'group' 'struct sched_group *'     |     `-BinaryOperator 0x1550094a8 <line:50:12, col:28> 'int' contains-errors '!='     |       |-DeclRefExpr 0x155009428 <col:12> 'struct sched_group *' lvalue Var 0x15404a9d8 'group' 'struct sched_group *'     |       `-RecoveryExpr 0x155009480 <col:21, col:28> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x155009448 <col:21> 'struct sched_domain *' contains-errors lvalue Var 0x15404a788 'child' 'struct sched_domain *'     |-BinaryOperator 0x155009600 <line:53:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x155009598 <col:2, col:12> '<dependent type>' contains-errors lvalue ->capacity     | | `-RecoveryExpr 0x155009570 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x155009538 <col:2> 'struct sched_group *' contains-errors lvalue Var 0x15404aa68 'sdg' 'struct sched_group *'     | `-DeclRefExpr 0x1550095e0 <col:23> 'unsigned long' lvalue Var 0x15404ab80 'capacity' 'unsigned long'     |-BinaryOperator 0x1550096e8 <line:54:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x155009680 <col:2, col:12> '<dependent type>' contains-errors lvalue ->min_capacity     | | `-RecoveryExpr 0x155009658 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x155009620 <col:2> 'struct sched_group *' contains-errors lvalue Var 0x15404aa68 'sdg' 'struct sched_group *'     | `-DeclRefExpr 0x1550096c8 <col:27> 'unsigned long' lvalue Var 0x15404ac00 'min_capacity' 'unsigned long'     `-BinaryOperator 0x1550097d0 <line:55:2, col:27> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x155009768 <col:2, col:12> '<dependent type>' contains-errors lvalue ->max_capacity       | `-RecoveryExpr 0x155009740 <col:2, col:7> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x155009708 <col:2> 'struct sched_group *' contains-errors lvalue Var 0x15404aa68 'sdg' 'struct sched_group *'       `-DeclRefExpr 0x1550097b0 <col:27> 'unsigned long' lvalue Var 0x15404ac80 'max_capacity' 'unsigned long' ","20224":"`-FunctionDecl 0x13800df18  line:1:26 invalid TIFFGetProfiles 'int (int *, int *, int *)' static   |-ParmVarDecl 0x13800dd28 <col:42, col:48> col:48 invalid tiff 'int *'   |-ParmVarDecl 0x13800dda8 <col:53, col:60> col:60 invalid image 'int *'   |-ParmVarDecl 0x13800de28 <line:2:3, col:18> col:18 invalid exception 'int *'   `-CompoundStmt 0x138028108 <line:3:1, line:61:1>     `-DeclStmt 0x13800e0c0 <line:10:3, line:11:38>       `-VarDecl 0x13800e028 <line:10:3, line:11:6> col:6 used profile 'unsigned char *' ","21152":"`-FunctionDecl 0x15990b3f8  line:1:1 invalid nautilus_application_close_parent_windows 'int (int *)'   |-ParmVarDecl 0x15990b328 <col:44, col:67> col:67 invalid window 'int *'   `-CompoundStmt 0x159924d00 <line:2:1, line:16:1>     |-CallExpr 0x15990b798 <line:6:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15990b630 <col:2> 'int ()' Function 0x15990b578 'g_return_if_fail' 'int ()'     | `-CallExpr 0x15990b770 <col:20, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15990b730 <col:20> 'int ()' Function 0x15990b678 'NAUTILUS_IS_SPATIAL_WINDOW' 'int ()'     |   `-RecoveryExpr 0x15990b750 <col:48> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x159924ce0 <line:10:2, line:15:2>       |-RecoveryExpr 0x15990b920 <line:10:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x159924cc8 <col:24, line:15:2>         `-CallExpr 0x159924c88 <line:13:3, col:57> '<dependent type>' contains-errors           |-DeclRefExpr 0x159924ab8 <col:3> 'int ()' Function 0x159924a00 'nautilus_window_close' 'int ()'           `-CallExpr 0x159924c60 <col:26, col:56> '<dependent type>' contains-errors             |-DeclRefExpr 0x159924bb8 <col:26> 'int ()' Function 0x159924b00 'NAUTILUS_WINDOW' 'int ()'             `-RecoveryExpr 0x159924c40 <col:43> '<dependent type>' contains-errors lvalue ","21209":"`-FunctionDecl 0x129128318  line:1:20 invalid findvararg 'const char *(int *, int, int *)' static   |-ParmVarDecl 0x129128128 <col:32, col:42> col:42 invalid ci 'int *'   |-ParmVarDecl 0x1291281a8 <col:46, col:50> col:50 used n 'int'   |-ParmVarDecl 0x129128228 <col:53, col:60> col:60 invalid pos 'int *'   `-CompoundStmt 0x129141d48 <col:65, line:10:1>     |-IfStmt 0x129141ce0 <line:2:3, line:8:3>     | |-CXXDependentScopeMemberExpr 0x129128750 <line:2:7, col:35> '<dependent type>' contains-errors lvalue ->is_vararg     | | `-CXXDependentScopeMemberExpr 0x129128708 <col:7, col:32> '<dependent type>' contains-errors lvalue ->p     | |   `-CallExpr 0x1291286e0 <col:7, col:29> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x129128530 <col:7> 'int ()' Function 0x129128478 'clLvalue' 'int ()'     | |     `-CallExpr 0x1291286b8 <col:16, col:28> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x129128630 <col:16> 'int ()' Function 0x129128578 's2v' 'int ()'     | |       `-CXXDependentScopeMemberExpr 0x129128670 <col:20, col:24> '<dependent type>' contains-errors lvalue ->func     | |         `-RecoveryExpr 0x129128650 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129141cc0 <col:46, line:8:3>     |   |-DeclStmt 0x129141960 <line:3:5, col:36>     |   | `-VarDecl 0x129141800 <col:5, col:26> col:9 used nextra 'int' cinit     |   |   `-CXXDependentScopeMemberExpr 0x129141918 <col:18, col:26> '<dependent type>' contains-errors lvalue .nextraargs     |   |     `-CXXDependentScopeMemberExpr 0x1291418d0 <col:18, col:24> '<dependent type>' contains-errors lvalue .l     |   |       `-CXXDependentScopeMemberExpr 0x129141888 <col:18, col:22> '<dependent type>' contains-errors lvalue ->u     |   |         `-RecoveryExpr 0x129141868 <col:18> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x129141ca0 <line:4:5, line:7:5>     |     |-BinaryOperator 0x1291419e8 <line:4:9, col:14> 'int' contains-errors '<='     |     | |-ImplicitCastExpr 0x1291419b8 <col:9> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x129141978 <col:9> 'int' lvalue ParmVar 0x1291281a8 'n' 'int'     |     | `-ImplicitCastExpr 0x1291419d0 <col:14> 'int' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x129141998 <col:14> 'int' contains-errors lvalue Var 0x129141800 'nextra' 'int'     |     `-CompoundStmt 0x129141c80 <col:22, line:7:5>     |       |-BinaryOperator 0x129141bb8 <line:5:7, col:40> '<dependent type>' contains-errors '='     |       | |-UnaryOperator 0x129141a40 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | | `-ImplicitCastExpr 0x129141a28 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |       | |   `-RecoveryExpr 0x129141a08 <col:8> '<dependent type>' contains-errors lvalue     |       | `-BinaryOperator 0x129141b98 <col:14, col:40> '<dependent type>' contains-errors '+'     |       |   |-BinaryOperator 0x129141ae0 <col:14, col:25> '<dependent type>' contains-errors '-'     |       |   | |-CXXDependentScopeMemberExpr 0x129141a78 <col:14, col:18> '<dependent type>' contains-errors lvalue ->func     |       |   | | `-RecoveryExpr 0x129141a58 <col:14> '<dependent type>' contains-errors lvalue     |       |   | `-DeclRefExpr 0x129141ac0 <col:25> 'int' contains-errors lvalue Var 0x129141800 'nextra' 'int'     |       |   `-ParenExpr 0x129141b78 <col:34, col:40> 'int'     |       |     `-BinaryOperator 0x129141b58 <col:35, col:39> 'int' '-'     |       |       |-ImplicitCastExpr 0x129141b40 <col:35> 'int' <LValueToRValue>     |       |       | `-DeclRefExpr 0x129141b00 <col:35> 'int' lvalue ParmVar 0x1291281a8 'n' 'int'     |       |       `-IntegerLiteral 0x129141b20 <col:39> 'int' 1     |       `-ReturnStmt 0x129141c70 <line:6:7, col:14>     |         `-ImplicitCastExpr 0x129141c58 <col:14> 'const char *' <NoOp>     |           `-ImplicitCastExpr 0x129141c40 <col:14> 'char *' <ArrayToPointerDecay>     |             `-StringLiteral 0x129141c20 <col:14> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x129141d38 <line:9:3, col:10>       `-RecoveryExpr 0x129141d18 <col:10> '<dependent type>' contains-errors lvalue ","20261":"`-FunctionDecl 0x15700ddc8  line:1:1 skip_string 'int (char *)'   |-ParmVarDecl 0x15700dcf0 <col:13, col:21> col:21 used p 'char *'   `-CompoundStmt 0x15702b678 <line:2:1, line:63:1>     |-DeclStmt 0x15700df40 <line:3:5, col:14>     | `-VarDecl 0x15700ded8 <col:5, col:13> col:13 used i 'int'     |-ForStmt 0x15702b508 <line:6:5, line:59:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-UnaryOperator 0x15700df78 <line:6:15, col:17> 'char *' prefix '++'     | | `-DeclRefExpr 0x15700df58 <col:17> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     | `-CompoundStmt 0x15702b4e8 <line:7:5, line:59:5>     |   |-IfStmt 0x15702b4b0 <line:8:2, line:57:2> has_else     |   | |-BinaryOperator 0x15700e050 <line:8:6, col:14> 'int' '=='     |   | | |-ImplicitCastExpr 0x15700e038 <col:6, col:9> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x15700e020 <col:6, col:9> 'char' <LValueToRValue>     |   | | |   `-ArraySubscriptExpr 0x15700dfe8 <col:6, col:9> 'char' lvalue     |   | | |     |-ImplicitCastExpr 0x15700dfd0 <col:6> 'char *' <LValueToRValue>     |   | | |     | `-DeclRefExpr 0x15700df90 <col:6> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   | | |     `-IntegerLiteral 0x15700dfb0 <col:8> 'int' 0     |   | | `-CharacterLiteral 0x15700e008 <col:14> 'int' 39     |   | |-CompoundStmt 0x157026d40 <line:9:2, line:24:2>     |   | | |-IfStmt 0x15700e1d8 <line:10:6, line:11:3>     |   | | | |-BinaryOperator 0x15700e1b0 <line:10:10, col:18> 'int' contains-errors '=='     |   | | | | |-ArraySubscriptExpr 0x15700e170 <col:10, col:13> 'char' lvalue     |   | | | | | |-ImplicitCastExpr 0x15700e158 <col:10> 'char *' <LValueToRValue>     |   | | | | | | `-DeclRefExpr 0x15700e070 <col:10> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   | | | | | `-IntegerLiteral 0x15700e090 <col:12> 'int' 1     |   | | | | `-RecoveryExpr 0x15700e190 <col:18> '<dependent type>' contains-errors lvalue     |   | | | `-BreakStmt 0x15700e1d0 <line:11:3>     |   | | |-BinaryOperator 0x15700e238 <line:12:6, col:10> 'int' '='     |   | | | |-DeclRefExpr 0x15700e1f8 <col:6> 'int' lvalue Var 0x15700ded8 'i' 'int'     |   | | | `-IntegerLiteral 0x15700e218 <col:10> 'int' 2     |   | | |-IfStmt 0x157026b58 <line:13:6, line:18:6>     |   | | | |-BinaryOperator 0x1570267e0 <line:13:10, col:34> 'int' contains-errors '&&'     |   | | | | |-BinaryOperator 0x157026748 <col:10, col:18> 'int' '=='     |   | | | | | |-ImplicitCastExpr 0x157026730 <col:10, col:13> 'int' <IntegralCast>     |   | | | | | | `-ImplicitCastExpr 0x157026718 <col:10, col:13> 'char' <LValueToRValue>     |   | | | | | |   `-ArraySubscriptExpr 0x1570266f8 <col:10, col:13> 'char' lvalue     |   | | | | | |     |-ImplicitCastExpr 0x1570266e0 <col:10> 'char *' <LValueToRValue>     |   | | | | | |     | `-DeclRefExpr 0x15700e258 <col:10> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   | | | | | |     `-IntegerLiteral 0x15700e278 <col:12> 'int' 1     |   | | | | | `-CharacterLiteral 0x15700e2d0 <col:18> 'int' 92     |   | | | | `-BinaryOperator 0x1570267c0 <col:26, col:34> 'int' contains-errors '!='     |   | | | |   |-ArraySubscriptExpr 0x157026780 <col:26, col:29> 'char' lvalue     |   | | | |   | |-ImplicitCastExpr 0x157026768 <col:26> 'char *' <LValueToRValue>     |   | | | |   | | `-DeclRefExpr 0x15700e338 <col:26> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   | | | |   | `-IntegerLiteral 0x15700e358 <col:28> 'int' 2     |   | | | |   `-RecoveryExpr 0x1570267a0 <col:34> '<dependent type>' contains-errors lvalue     |   | | | `-CompoundStmt 0x157026b38 <line:14:6, line:18:6>     |   | | |   |-UnaryOperator 0x157026820 <line:15:3, col:5> 'int' prefix '++'     |   | | |   | `-DeclRefExpr 0x157026800 <col:5> 'int' lvalue Var 0x15700ded8 'i' 'int'     |   | | |   `-WhileStmt 0x157026b18 <line:16:3, line:17:9>     |   | | |     |-CallExpr 0x157026a88 <line:16:10, col:30> 'int'     |   | | |     | |-ImplicitCastExpr 0x157026a70 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | | |     | | `-DeclRefExpr 0x157026950 <col:10> 'int ()' Function 0x157026898 'vim_isdigit' 'int ()'     |   | | |     | `-ImplicitCastExpr 0x157026ac8 <col:22, col:29> 'int' <IntegralCast>     |   | | |     |   `-ImplicitCastExpr 0x157026ab0 <col:22, col:29> 'char' <LValueToRValue>     |   | | |     |     `-ArraySubscriptExpr 0x157026a20 <col:22, col:29> 'char' lvalue     |   | | |     |       |-ImplicitCastExpr 0x157026a08 <col:22> 'char *' <LValueToRValue>     |   | | |     |       | `-DeclRefExpr 0x157026970 <col:22> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   | | |     |       `-BinaryOperator 0x1570269e8 <col:24, col:28> 'int' '-'     |   | | |     |         |-ImplicitCastExpr 0x1570269d0 <col:24> 'int' <LValueToRValue>     |   | | |     |         | `-DeclRefExpr 0x157026990 <col:24> 'int' lvalue Var 0x15700ded8 'i' 'int'     |   | | |     |         `-IntegerLiteral 0x1570269b0 <col:28> 'int' 1     |   | | |     `-UnaryOperator 0x157026b00 <line:17:7, col:9> 'int' prefix '++'     |   | | |       `-DeclRefExpr 0x157026ae0 <col:9> 'int' lvalue Var 0x15700ded8 'i' 'int'     |   | | `-IfStmt 0x157026d20 <line:19:6, line:23:6>     |   | |   |-BinaryOperator 0x157026c50 <line:19:10, col:18> 'int' '=='     |   | |   | |-ImplicitCastExpr 0x157026c38 <col:10, col:13> 'int' <IntegralCast>     |   | |   | | `-ImplicitCastExpr 0x157026c20 <col:10, col:13> 'char' <LValueToRValue>     |   | |   | |   `-ArraySubscriptExpr 0x157026be8 <col:10, col:13> 'char' lvalue     |   | |   | |     |-ImplicitCastExpr 0x157026bb8 <col:10> 'char *' <LValueToRValue>     |   | |   | |     | `-DeclRefExpr 0x157026b78 <col:10> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   | |   | |     `-ImplicitCastExpr 0x157026bd0 <col:12> 'int' <LValueToRValue>     |   | |   | |       `-DeclRefExpr 0x157026b98 <col:12> 'int' lvalue Var 0x15700ded8 'i' 'int'     |   | |   | `-CharacterLiteral 0x157026c08 <col:18> 'int' 39     |   | |   `-CompoundStmt 0x157026d00 <line:20:6, line:23:6>     |   | |     |-CompoundAssignOperator 0x157026cc8 <line:21:3, col:8> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |   | |     | |-DeclRefExpr 0x157026c70 <col:3> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   | |     | `-ImplicitCastExpr 0x157026cb0 <col:8> 'int' <LValueToRValue>     |   | |     |   `-DeclRefExpr 0x157026c90 <col:8> 'int' lvalue Var 0x15700ded8 'i' 'int'     |   | |     `-ContinueStmt 0x157026cf8 <line:22:3>     |   | `-IfStmt 0x15702b480 <line:25:7, line:57:2> has_else     |   |   |-BinaryOperator 0x157026e30 <line:25:11, col:19> 'int' '=='     |   |   | |-ImplicitCastExpr 0x157026e18 <col:11, col:14> 'int' <IntegralCast>     |   |   | | `-ImplicitCastExpr 0x157026e00 <col:11, col:14> 'char' <LValueToRValue>     |   |   | |   `-ArraySubscriptExpr 0x157026dc8 <col:11, col:14> 'char' lvalue     |   |   | |     |-ImplicitCastExpr 0x157026db0 <col:11> 'char *' <LValueToRValue>     |   |   | |     | `-DeclRefExpr 0x157026d70 <col:11> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   | |     `-IntegerLiteral 0x157026d90 <col:13> 'int' 0     |   |   | `-CharacterLiteral 0x157026de8 <col:19> 'int' 34     |   |   |-CompoundStmt 0x1570275a8 <line:26:2, line:36:2>     |   |   | |-ForStmt 0x157027468 <line:27:6, line:33:6>     |   |   | | |-UnaryOperator 0x157026e70 <line:27:11, col:13> 'char *' prefix '++'     |   |   | | | `-DeclRefExpr 0x157026e50 <col:13> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   | | |-<<<NULL>>>     |   |   | | |-ImplicitCastExpr 0x157026f00 <col:16, col:19> 'char' <LValueToRValue>     |   |   | | | `-ArraySubscriptExpr 0x157026ee0 <col:16, col:19> 'char' lvalue     |   |   | | |   |-ImplicitCastExpr 0x157026ec8 <col:16> 'char *' <LValueToRValue>     |   |   | | |   | `-DeclRefExpr 0x157026e88 <col:16> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   | | |   `-IntegerLiteral 0x157026ea8 <col:18> 'int' 0     |   |   | | |-UnaryOperator 0x157026f38 <col:22, col:24> 'char *' prefix '++'     |   |   | | | `-DeclRefExpr 0x157026f18 <col:24> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   | | `-CompoundStmt 0x157027450 <line:28:6, line:33:6>     |   |   | |   `-IfStmt 0x157027420 <line:29:3, line:32:7> has_else     |   |   | |     |-BinaryOperator 0x1570272c0 <line:29:7, col:31> 'int' contains-errors '&&'     |   |   | |     | |-BinaryOperator 0x157027228 <col:7, col:15> 'int' '=='     |   |   | |     | | |-ImplicitCastExpr 0x157027210 <col:7, col:10> 'int' <IntegralCast>     |   |   | |     | | | `-ImplicitCastExpr 0x1570271f8 <col:7, col:10> 'char' <LValueToRValue>     |   |   | |     | | |   `-ArraySubscriptExpr 0x1570271d8 <col:7, col:10> 'char' lvalue     |   |   | |     | | |     |-ImplicitCastExpr 0x1570271c0 <col:7> 'char *' <LValueToRValue>     |   |   | |     | | |     | `-DeclRefExpr 0x157026f50 <col:7> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   | |     | | |     `-IntegerLiteral 0x157026f70 <col:9> 'int' 0     |   |   | |     | | `-CharacterLiteral 0x157026fc8 <col:15> 'int' 92     |   |   | |     | `-BinaryOperator 0x1570272a0 <col:23, col:31> 'int' contains-errors '!='     |   |   | |     |   |-ArraySubscriptExpr 0x157027260 <col:23, col:26> 'char' lvalue     |   |   | |     |   | |-ImplicitCastExpr 0x157027248 <col:23> 'char *' <LValueToRValue>     |   |   | |     |   | | `-DeclRefExpr 0x157027030 <col:23> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   | |     |   | `-IntegerLiteral 0x157027050 <col:25> 'int' 1     |   |   | |     |   `-RecoveryExpr 0x157027280 <col:31> '<dependent type>' contains-errors lvalue     |   |   | |     |-UnaryOperator 0x157027300 <line:30:7, col:9> 'char *' prefix '++'     |   |   | |     | `-DeclRefExpr 0x1570272e0 <col:9> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   | |     `-IfStmt 0x157027400 <line:31:8, line:32:7>     |   |   | |       |-BinaryOperator 0x1570273d8 <line:31:12, col:20> 'int' '=='     |   |   | |       | |-ImplicitCastExpr 0x1570273c0 <col:12, col:15> 'int' <IntegralCast>     |   |   | |       | | `-ImplicitCastExpr 0x1570273a8 <col:12, col:15> 'char' <LValueToRValue>     |   |   | |       | |   `-ArraySubscriptExpr 0x157027370 <col:12, col:15> 'char' lvalue     |   |   | |       | |     |-ImplicitCastExpr 0x157027358 <col:12> 'char *' <LValueToRValue>     |   |   | |       | |     | `-DeclRefExpr 0x157027318 <col:12> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   | |       | |     `-IntegerLiteral 0x157027338 <col:14> 'int' 0     |   |   | |       | `-CharacterLiteral 0x157027390 <col:20> 'int' 34     |   |   | |       `-BreakStmt 0x1570273f8 <line:32:7>     |   |   | `-IfStmt 0x157027588 <line:34:6, line:35:3>     |   |   |   |-BinaryOperator 0x157027560 <line:34:10, col:18> 'int' '=='     |   |   |   | |-ImplicitCastExpr 0x157027548 <col:10, col:13> 'int' <IntegralCast>     |   |   |   | | `-ImplicitCastExpr 0x157027530 <col:10, col:13> 'char' <LValueToRValue>     |   |   |   | |   `-ArraySubscriptExpr 0x1570274f8 <col:10, col:13> 'char' lvalue     |   |   |   | |     |-ImplicitCastExpr 0x1570274e0 <col:10> 'char *' <LValueToRValue>     |   |   |   | |     | `-DeclRefExpr 0x1570274a0 <col:10> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |   |   | |     `-IntegerLiteral 0x1570274c0 <col:12> 'int' 0     |   |   |   | `-CharacterLiteral 0x157027518 <col:18> 'int' 34     |   |   |   `-ContinueStmt 0x157027580 <line:35:3>     |   |   `-IfStmt 0x15702b460 <line:37:7, line:57:2>     |   |     |-BinaryOperator 0x157028fa0 <line:37:11, col:34> 'int' '&&'     |   |     | |-BinaryOperator 0x157028ea0 <col:11, col:19> 'int' '=='     |   |     | | |-ImplicitCastExpr 0x157028e88 <col:11, col:14> 'int' <IntegralCast>     |   |     | | | `-ImplicitCastExpr 0x157028e70 <col:11, col:14> 'char' <LValueToRValue>     |   |     | | |   `-ArraySubscriptExpr 0x157028e38 <col:11, col:14> 'char' lvalue     |   |     | | |     |-ImplicitCastExpr 0x157028e20 <col:11> 'char *' <LValueToRValue>     |   |     | | |     | `-DeclRefExpr 0x1570275c8 <col:11> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |     | | |     `-IntegerLiteral 0x157028e00 <col:13> 'int' 0     |   |     | | `-CharacterLiteral 0x157028e58 <col:19> 'int' 82     |   |     | `-BinaryOperator 0x157028f80 <col:26, col:34> 'int' '=='     |   |     |   |-ImplicitCastExpr 0x157028f68 <col:26, col:29> 'int' <IntegralCast>     |   |     |   | `-ImplicitCastExpr 0x157028f50 <col:26, col:29> 'char' <LValueToRValue>     |   |     |   |   `-ArraySubscriptExpr 0x157028f18 <col:26, col:29> 'char' lvalue     |   |     |   |     |-ImplicitCastExpr 0x157028f00 <col:26> 'char *' <LValueToRValue>     |   |     |   |     | `-DeclRefExpr 0x157028ec0 <col:26> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |     |   |     `-IntegerLiteral 0x157028ee0 <col:28> 'int' 1     |   |     |   `-CharacterLiteral 0x157028f38 <col:34> 'int' 34     |   |     `-CompoundStmt 0x15702b438 <line:38:2, line:57:2>     |   |       |-DeclStmt 0x1570290b8 <line:40:6, col:27>     |   |       | `-VarDecl 0x157028fd8 <col:6, col:26> col:14 used delim 'char *' cinit     |   |       |   `-BinaryOperator 0x157029098 <col:22, col:26> 'char *' '+'     |   |       |     |-ImplicitCastExpr 0x157029080 <col:22> 'char *' <LValueToRValue>     |   |       |     | `-DeclRefExpr 0x157029040 <col:22> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |       |     `-IntegerLiteral 0x157029060 <col:26> 'int' 2     |   |       |-DeclStmt 0x157029720 <line:41:6, col:44>     |   |       | `-VarDecl 0x1570290e8 <col:6, col:43> col:14 used paren 'char *' cinit     |   |       |   `-ImplicitCastExpr 0x1570292e8 <col:22, col:43> 'char *' <IntegralToPointer>     |   |       |     `-CallExpr 0x1570292a0 <col:22, col:43> 'int'     |   |       |       |-ImplicitCastExpr 0x157029288 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   |       |       | `-DeclRefExpr 0x157029230 <col:22> 'int ()' Function 0x157029178 'vim_strchr' 'int ()'     |   |       |       |-ImplicitCastExpr 0x1570292d0 <col:33> 'char *' <LValueToRValue>     |   |       |       | `-DeclRefExpr 0x157029250 <col:33> 'char *' lvalue Var 0x157028fd8 'delim' 'char *'     |   |       |       `-CharacterLiteral 0x157029270 <col:40> 'int' 40     |   |       `-IfStmt 0x15702b418 <line:43:6, line:56:6>     |   |         |-BinaryOperator 0x1570297b0 <line:43:10, col:19> 'int' contains-errors '!='     |   |         | |-DeclRefExpr 0x157029738 <col:10> 'char *' lvalue Var 0x1570290e8 'paren' 'char *'     |   |         | `-RecoveryExpr 0x157029790 <col:19> '<dependent type>' contains-errors lvalue     |   |         `-CompoundStmt 0x15702b3f0 <line:44:6, line:56:6>     |   |           |-RecoveryExpr 0x157029970 <line:45:3, col:30> '<dependent type>' contains-errors lvalue     |   |           | |-UnaryExprOrTypeTraitExpr 0x157029900 <col:3, col:10> 'unsigned long' contains-errors sizeof     |   |           | | `-RecoveryExpr 0x1570298e0 <col:10> '<dependent type>' contains-errors lvalue     |   |           | `-BinaryOperator 0x157029950 <col:22, col:30> 'long' '-'     |   |           |   |-ImplicitCastExpr 0x157029920 <col:22> 'char *' <LValueToRValue>     |   |           |   | `-DeclRefExpr 0x157029808 <col:22> 'char *' lvalue Var 0x1570290e8 'paren' 'char *'     |   |           |   `-ImplicitCastExpr 0x157029938 <col:30> 'char *' <LValueToRValue>     |   |           |     `-DeclRefExpr 0x157029828 <col:30> 'char *' lvalue Var 0x157028fd8 'delim' 'char *'     |   |           |-ForStmt 0x15702b2b0 <line:47:3, line:53:7>     |   |           | |-CompoundAssignOperator 0x1570299e0 <line:47:8, col:13> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |   |           | | |-DeclRefExpr 0x1570299a0 <col:8> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |           | | `-IntegerLiteral 0x1570299c0 <col:13> 'int' 3     |   |           | |-<<<NULL>>>     |   |           | |-ImplicitCastExpr 0x157029a60 <col:16, col:17> 'char' <LValueToRValue>     |   |           | | `-UnaryOperator 0x157029a48 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow     |   |           | |   `-ImplicitCastExpr 0x157029a30 <col:17> 'char *' <LValueToRValue>     |   |           | |     `-DeclRefExpr 0x157029a10 <col:17> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |           | |-UnaryOperator 0x157029a98 <col:20, col:22> 'char *' prefix '++'     |   |           | | `-DeclRefExpr 0x157029a78 <col:22> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |           | `-IfStmt 0x15702b290 <line:48:7, line:53:7>     |   |           |   |-RecoveryExpr 0x15702b130 <line:48:11, line:49:31> '_Bool' contains-errors     |   |           |   `-CompoundStmt 0x15702b270 <line:50:7, line:53:7>     |   |           |     |-CompoundAssignOperator 0x15702b238 <line:51:4, col:21> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |           |     | |-DeclRefExpr 0x15702b150 <col:4> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |           |     | `-BinaryOperator 0x15702b218 <col:9, col:21> '<dependent type>' contains-errors '+'     |   |           |     |   |-RecoveryExpr 0x15702b1f8 <col:9> '<dependent type>' contains-errors lvalue     |   |           |     |   `-IntegerLiteral 0x15702b188 <col:21> 'int' 1     |   |           |     `-BreakStmt 0x15702b268 <line:52:4>     |   |           `-IfStmt 0x15702b3d0 <line:54:3, line:55:7>     |   |             |-BinaryOperator 0x15702b3a8 <line:54:7, col:15> 'int' '=='     |   |             | |-ImplicitCastExpr 0x15702b390 <col:7, col:10> 'int' <IntegralCast>     |   |             | | `-ImplicitCastExpr 0x15702b378 <col:7, col:10> 'char' <LValueToRValue>     |   |             | |   `-ArraySubscriptExpr 0x15702b340 <col:7, col:10> 'char' lvalue     |   |             | |     |-ImplicitCastExpr 0x15702b328 <col:7> 'char *' <LValueToRValue>     |   |             | |     | `-DeclRefExpr 0x15702b2e8 <col:7> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     |   |             | |     `-IntegerLiteral 0x15702b308 <col:9> 'int' 0     |   |             | `-CharacterLiteral 0x15702b360 <col:15> 'int' 34     |   |             `-ContinueStmt 0x15702b3c8 <line:55:7>     |   `-BreakStmt 0x15702b4e0 <line:58:2>     |-IfStmt 0x15702b5f8 <line:60:5, line:61:4>     | |-UnaryOperator 0x15702b5a8 <line:60:9, col:11> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15702b590 <col:10, col:11> 'char' <LValueToRValue>     | |   `-UnaryOperator 0x15702b578 <col:10, col:11> 'char' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x15702b560 <col:11> 'char *' <LValueToRValue>     | |       `-DeclRefExpr 0x15702b540 <col:11> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     | `-UnaryOperator 0x15702b5e0 <line:61:2, col:4> 'char *' prefix '--'     |   `-DeclRefExpr 0x15702b5c0 <col:4> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *'     `-ReturnStmt 0x15702b668 <line:62:5, col:12>       `-ImplicitCastExpr 0x15702b650 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x15702b638 <col:12> 'char *' <LValueToRValue>           `-DeclRefExpr 0x15702b618 <col:12> 'char *' lvalue ParmVar 0x15700dcf0 'p' 'char *' ","20703":"`-FunctionDecl 0x1599239f0  line:1:6 invalid krok_box_del 'void (int *)'   |-ParmVarDecl 0x159923928 <col:19, col:27> col:27 invalid s 'int *'   `-CompoundStmt 0x159923ef0 <line:2:1, line:6:1>     |-IfStmt 0x159923e28 <line:4:2, col:40>     | |-CXXDependentScopeMemberExpr 0x159923b50 <col:6, col:11> '<dependent type>' contains-errors lvalue ->records     | | `-RecoveryExpr 0x159923b30 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x159923e00 <col:20, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159923cf0 <col:20> 'int ()' Function 0x159923c38 'gf_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x159923db8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->records     |     `-RecoveryExpr 0x159923d98 <col:28> '<dependent type>' contains-errors lvalue     `-CallExpr 0x159923ec8 <line:5:2, col:13> '<dependent type>' contains-errors       |-DeclRefExpr 0x159923e48 <col:2> 'int ()' Function 0x159923c38 'gf_free' 'int ()'       `-RecoveryExpr 0x159923ea8 <col:10> '<dependent type>' contains-errors lvalue ","20742":"`-FunctionDecl 0x156141868  line:1:1 invalid NCURSES_SP_NAME 'int (int)'   |-ParmVarDecl 0x1561282f0 <col:17> col:17 init_extended_color 'int'   `-CompoundStmt 0x156141c48 <line:4:1, line:6:1>     `-ReturnStmt 0x156141c38 <line:5:5, col:50>       `-CallExpr 0x156141bf0 <col:12, col:50> '<dependent type>' contains-errors         |-DeclRefExpr 0x156141a70 <col:12> 'int ()' Function 0x1561419b8 '_nc_init_color' 'int ()'         |-RecoveryExpr 0x156141b50 <col:27> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x156141b70 <col:36> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x156141b90 <col:43> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x156141bb0 <col:46> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x156141bd0 <col:49> '<dependent type>' contains-errors lvalue ","20487":"`-FunctionDecl 0x11f80e6c8  line:1:1 invalid gss_wrap_size_limit 'int (int *, int, int, int, int, int *)'   |-ParmVarDecl 0x11f80e328 <col:21, col:33> col:33 invalid minor_status 'int *'   |-ParmVarDecl 0x11f80e3a8 <line:2:21, col:34> col:34 invalid context_handle 'int'   |-ParmVarDecl 0x11f80e428 <line:3:21, col:25> col:25 used conf_req_flag 'int'   |-ParmVarDecl 0x11f80e4a8 <line:4:21, col:31> col:31 invalid qop_req 'int'   |-ParmVarDecl 0x11f80e528 <col:40, col:50> col:50 invalid req_output_size 'int'   |-ParmVarDecl 0x11f80e5a8 <col:67, col:78> col:78 invalid max_input_size 'int *'   `-CompoundStmt 0x11f827ff0 <line:5:1, line:43:1>     `-BinaryOperator 0x11f80e8c0 <line:12:5, col:21> '<dependent type>' contains-errors '='       |-UnaryOperator 0x11f80e888 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x11f80e870 <col:6> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x11f80e850 <col:6> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x11f80e8a0 <col:21> 'int' 0 ","20614":"`-FunctionDecl 0x11d00e350  line:1:20 preempt_conditional_cli 'void (struct pt_regs *)' static inline   |-ParmVarDecl 0x11d00e248 <col:44, col:60> col:60 used regs 'struct pt_regs *'   `-CompoundStmt 0x11d026a30 <line:2:1, line:6:1>     |-IfStmt 0x11d0268d8 <line:3:2, line:4:21>     | |-BinaryOperator 0x11d026718 <line:3:6, col:20> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x11d026680 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x11d026648 <col:6> 'struct pt_regs *' lvalue ParmVar 0x11d00e248 'regs' 'struct pt_regs *'     | | `-RecoveryExpr 0x11d0266f8 <col:20> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x11d0268b8 <line:4:3, col:21> 'int'     |   `-ImplicitCastExpr 0x11d0268a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x11d026850 <col:3> 'int ()' Function 0x11d026798 'local_irq_disable' 'int ()'     `-CallExpr 0x11d026a10 <line:5:2, col:20> 'int'       `-ImplicitCastExpr 0x11d0269f8 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x11d0269d8 <col:2> 'int ()' Function 0x11d026920 'preempt_count_dec' 'int ()' ","20535":"`-FunctionDecl 0x12e941838  line:1:1 invalid cpio_realloc_c_name 'int (struct cpio_file_stat *, int)'   |-ParmVarDecl 0x12e928648 <col:22, col:45> col:45 used file_hdr 'struct cpio_file_stat *'   |-ParmVarDecl 0x12e9286e0 <col:55, col:62> col:62 invalid len 'int'   `-CompoundStmt 0x12e941cb8 <line:2:1, line:5:1>     `-WhileStmt 0x12e941c98 <line:3:3, line:4:77>       |-BinaryOperator 0x12e941970 <line:3:10, col:36> 'int' contains-errors '<'       | |-RecoveryExpr 0x12e941928 <col:10, col:20> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x12e9418f0 <col:10> 'struct cpio_file_stat *' lvalue ParmVar 0x12e928648 'file_hdr' 'struct cpio_file_stat *'       | `-RecoveryExpr 0x12e941950 <col:36> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x12e941c78 <line:4:5, col:77> '<dependent type>' contains-errors '='         |-RecoveryExpr 0x12e9419c8 <col:5, col:15> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x12e941990 <col:5> 'struct cpio_file_stat *' lvalue ParmVar 0x12e928648 'file_hdr' 'struct cpio_file_stat *'         `-CallExpr 0x12e941c48 <col:24, col:77> '<dependent type>' contains-errors           |-DeclRefExpr 0x12e941b50 <col:24> 'int ()' Function 0x12e941a98 'x2realloc' 'int ()'           |-RecoveryExpr 0x12e941ba8 <col:35, col:45> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x12e941b70 <col:35> 'struct cpio_file_stat *' lvalue ParmVar 0x12e928648 'file_hdr' 'struct cpio_file_stat *'           `-UnaryOperator 0x12e941c30 <col:53, col:64> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x12e941c08 <col:54, col:64> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x12e941bd0 <col:54> 'struct cpio_file_stat *' lvalue ParmVar 0x12e928648 'file_hdr' 'struct cpio_file_stat *' ","21144":"`-FunctionDecl 0x14c80ddc8  line:1:1 invalid restore_stack_base 'int (int)'   |-ParmVarDecl 0x14c80dcf0 <col:20, col:36> col:36 invalid base 'int'   `-CompoundStmt 0x14c80de98 <line:2:1, line:9:1> ","21124":"`-FunctionDecl 0x153826600  line:1:13 free_mem_cgroup_per_zone_info 'void (struct mem_cgroup *, int)' static   |-ParmVarDecl 0x15380e248 <col:43, col:62> col:62 used memcg 'struct mem_cgroup *'   |-ParmVarDecl 0x15380e2c8 <col:69, col:73> col:73 used node 'int'   `-CompoundStmt 0x153826990 <line:2:1, line:4:1>     `-CallExpr 0x153826968 <line:3:2, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x153826830 <col:2> 'int ()' Function 0x153826778 'kfree' 'int ()'       `-ArraySubscriptExpr 0x153826948 <col:8, col:33> '<dependent type>' contains-errors lvalue         |-ImplicitCastExpr 0x153826918 <col:8, col:20> '<dependent type>' contains-errors <LValueToRValue>         | `-CXXDependentScopeMemberExpr 0x1538268b0 <col:8, col:20> '<dependent type>' contains-errors lvalue .nodeinfo         |   `-RecoveryExpr 0x153826888 <col:8, col:15> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x153826850 <col:8> 'struct mem_cgroup *' lvalue ParmVar 0x15380e248 'memcg' 'struct mem_cgroup *'         `-ImplicitCastExpr 0x153826930 <col:29> 'int' <LValueToRValue>           `-DeclRefExpr 0x1538268f8 <col:29> 'int' lvalue ParmVar 0x15380e2c8 'node' 'int' ","20949":"`-FunctionDecl 0x13500e350  line:1:13 __sctp_write_space 'void (struct sctp_association *)' static   |-ParmVarDecl 0x13500e248 <col:32, col:57> col:57 used asoc 'struct sctp_association *'   `-CompoundStmt 0x134923c88 <line:2:1, line:20:1>     |-DeclStmt 0x1350268e0 <line:3:2, col:33>     | |-RecordDecl 0x135026648 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x1350267b8 <col:2, col:31> col:15 used sk 'struct sock *' cinit     |   `-CXXDependentScopeMemberExpr 0x135026880 <col:20, col:31> '<dependent type>' contains-errors lvalue .sk     |     `-RecoveryExpr 0x135026858 <col:20, col:26> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x135026820 <col:20> 'struct sctp_association *' lvalue ParmVar 0x13500e248 'asoc' 'struct sctp_association *'     |-DeclStmt 0x135026b48 <line:4:2, col:37>     | |-RecordDecl 0x1350268f8 <col:2, col:9> col:9 struct socket     | `-VarDecl 0x135026a68 <col:2, col:28> col:17 used sock 'struct socket *' cinit     |   `-RecoveryExpr 0x135026b08 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x135026ad0 <col:24> 'struct sock *' contains-errors lvalue Var 0x1350267b8 'sk' 'struct sock *'     `-IfStmt 0x134923c68 <line:6:2, line:19:2>       |-BinaryOperator 0x135026df0 <line:6:6, col:33> 'int' contains-errors '&&'       | |-ParenExpr 0x135026d98 <col:6, col:28> 'int'       | | `-BinaryOperator 0x135026d78 <col:7, col:27> 'int' '>'       | |   |-CallExpr 0x135026d18 <col:7, col:23> 'int'       | |   | |-ImplicitCastExpr 0x135026d00 <col:7> 'int (*)()' <FunctionToPointerDecay>       | |   | | `-DeclRefExpr 0x135026c90 <col:7> 'int ()' Function 0x135026bd8 'sctp_wspace' 'int ()'       | |   | `-ImplicitCastExpr 0x135026d40 <col:19> 'struct sctp_association *' <LValueToRValue>       | |   |   `-DeclRefExpr 0x135026cb0 <col:19> 'struct sctp_association *' lvalue ParmVar 0x13500e248 'asoc' 'struct sctp_association *'       | |   `-IntegerLiteral 0x135026d58 <col:27> 'int' 0       | `-ImplicitCastExpr 0x135026dd8 <col:33> 'struct socket *' contains-errors <LValueToRValue>       |   `-DeclRefExpr 0x135026db8 <col:33> 'struct socket *' contains-errors lvalue Var 0x135026a68 'sock' 'struct socket *'       `-CompoundStmt 0x134923c48 <col:39, line:19:2>         |-IfStmt 0x135027150 <line:7:3, line:8:37>         | |-CallExpr 0x135026f88 <line:7:7, col:35> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x135026ef0 <col:7> 'int ()' Function 0x135026e38 'waitqueue_active' 'int ()'         | | `-UnaryOperator 0x135026f70 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         | |   `-RecoveryExpr 0x135026f48 <col:25, col:31> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x135026f10 <col:25> 'struct sctp_association *' lvalue ParmVar 0x13500e248 'asoc' 'struct sctp_association *'         | `-CallExpr 0x135027128 <line:8:4, col:37> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x135027090 <col:4> 'int ()' Function 0x135026fd8 'wake_up_interruptible' 'int ()'         |   `-UnaryOperator 0x135027110 <col:26, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-RecoveryExpr 0x1350270e8 <col:27, col:33> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x1350270b0 <col:27> 'struct sctp_association *' lvalue ParmVar 0x13500e248 'asoc' 'struct sctp_association *'         `-IfStmt 0x134923c28 <line:10:3, line:18:3>           |-CallExpr 0x1350272a8 <line:10:7, col:24> 'int' contains-errors           | |-ImplicitCastExpr 0x135027290 <col:7> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x135027250 <col:7> 'int ()' Function 0x135027198 'sctp_writeable' 'int ()'           | `-ImplicitCastExpr 0x1350272d0 <col:22> 'struct sock *' contains-errors <LValueToRValue>           |   `-DeclRefExpr 0x135027270 <col:22> 'struct sock *' contains-errors lvalue Var 0x1350267b8 'sk' 'struct sock *'           `-CompoundStmt 0x134923c08 <col:27, line:18:3>             |-IfStmt 0x1350274b8 <line:11:4, line:12:39>             | |-BinaryOperator 0x1350273f0 <line:11:8, col:53> 'int' contains-errors '&&'             | | |-RecoveryExpr 0x135027320 <col:8, col:12> '<dependent type>' contains-errors lvalue             | | | `-DeclRefExpr 0x1350272e8 <col:8> 'struct sock *' contains-errors lvalue Var 0x1350267b8 'sk' 'struct sock *'             | | `-CallExpr 0x1350273c8 <col:24, col:53> '<dependent type>' contains-errors             | |   |-DeclRefExpr 0x135027348 <col:24> 'int ()' Function 0x135026e38 'waitqueue_active' 'int ()'             | |   `-RecoveryExpr 0x1350273a0 <col:41, col:45> '<dependent type>' contains-errors lvalue             | |     `-DeclRefExpr 0x135027368 <col:41> 'struct sock *' contains-errors lvalue Var 0x1350267b8 'sk' 'struct sock *'             | `-CallExpr 0x135027490 <line:12:5, col:39> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x135027410 <col:5> 'int ()' Function 0x135026fd8 'wake_up_interruptible' 'int ()'             |   `-RecoveryExpr 0x135027468 <col:27, col:31> '<dependent type>' contains-errors lvalue             |     `-DeclRefExpr 0x135027430 <col:27> 'struct sock *' contains-errors lvalue Var 0x1350267b8 'sk' 'struct sock *'             `-IfStmt 0x134923be8 <line:15:4, line:17:38>               |-RecoveryExpr 0x1350275d0 <line:15:8, line:16:41> '_Bool' contains-errors               `-CallExpr 0x134923bb0 <line:17:5, col:38> '<dependent type>' contains-errors                 |-DeclRefExpr 0x134923ae0 <col:5> 'int ()' Function 0x134923a28 'sock_wake_async' 'int ()'                 |-DeclRefExpr 0x134923b00 <col:21> 'struct socket *' contains-errors lvalue Var 0x135026a68 'sock' 'struct socket *'                 |-IntegerLiteral 0x134923b20 <col:27> 'int' 2                 `-RecoveryExpr 0x134923b90 <col:30> '<dependent type>' contains-errors lvalue ","21087":"`-FunctionDecl 0x1390279b0  col:9 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x139027ab0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x139027a58 <<invalid sloc>> Implicit 903   `-FormatAttr 0x139027b20 <col:9> Implicit printf 1 2 ","20228":"`-FunctionDecl 0x11e128198  line:1:1 aspath_new 'int (void)'   `-CompoundStmt 0x11e142910 <line:2:1, line:4:1> ","20230":"`-FunctionDecl 0x14900e350  line:1:13 blk_mq_delay_work_fn 'void (struct work_struct *)' static   |-ParmVarDecl 0x14900e248 <col:34, col:54> col:54 used work 'struct work_struct *'   `-CompoundStmt 0x149026e18 <line:2:1, line:9:1>     |-DeclStmt 0x149026838 <line:3:2, col:28>     | |-RecordDecl 0x149026648 <col:2, col:9> col:9 struct blk_mq_hw_ctx     | `-VarDecl 0x1490267b8 <col:2, col:24> col:24 used hctx 'struct blk_mq_hw_ctx *'     `-IfStmt 0x149026df8 <line:7:2, line:8:29>       |-CallExpr 0x149026c20 <line:7:6, col:55> '<dependent type>' contains-errors       | |-DeclRefExpr 0x149026b20 <col:6> 'int ()' Function 0x149026a68 'test_and_clear_bit' 'int ()'       | |-RecoveryExpr 0x149026c00 <col:25> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x149026bb8 <col:43, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x149026b90 <col:44, col:50> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x149026b58 <col:44> 'struct blk_mq_hw_ctx *' lvalue Var 0x1490267b8 'hctx' 'struct blk_mq_hw_ctx *'       `-CallExpr 0x149026db8 <line:8:3, col:29> 'int'         |-ImplicitCastExpr 0x149026da0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x149026d30 <col:3> 'int ()' Function 0x149026c78 '__blk_mq_run_hw_queue' 'int ()'         `-ImplicitCastExpr 0x149026de0 <col:25> 'struct blk_mq_hw_ctx *' <LValueToRValue>           `-DeclRefExpr 0x149026d50 <col:25> 'struct blk_mq_hw_ctx *' lvalue Var 0x1490267b8 'hctx' 'struct blk_mq_hw_ctx *' ","20219":"`-FunctionDecl 0x128106ba0  line:1:20 print_dropped_signal 'void (int)' static inline   |-ParmVarDecl 0x128106ad8 <col:41, col:45> col:45 sig 'int'   `-CompoundStmt 0x1281071d8 <line:2:1, line:13:1>     |-DeclStmt 0x128106db0 <line:3:2, col:60>     | `-FunctionDecl 0x128106cf8 parent 0x128034008 <col:2, col:59> col:9 DEFINE_RATELIMIT_STATE 'int ()'     |-IfStmt 0x128106e88 <line:5:2, line:6:3>     | |-UnaryOperator 0x128106e60 <line:5:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x128106e48 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x128106e28 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x128106e78 <line:6:3>     `-IfStmt 0x1281070a0 <line:8:2, line:9:3>       |-UnaryOperator 0x128107078 <line:8:6, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x128107050 <col:7, col:35> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x128106f88 <col:7> 'int ()' Function 0x128106ed0 '__ratelimit' 'int ()'       |   `-UnaryOperator 0x128107038 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x128107018 <col:20> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x128107090 <line:9:3> ","20834":"`-FunctionDecl 0x1581281a0  line:1:20 xen_evtchn_handle_events 'void (unsigned int)' static inline   |-ParmVarDecl 0x1581280d8 <col:45, col:54> col:54 used cpu 'unsigned int'   `-CompoundStmt 0x1581283f8 <line:2:1, line:4:1>     `-ReturnStmt 0x1581283e8 <line:3:2, col:38>       `-CallExpr 0x1581283c0 <col:9, col:38> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x158128378 <col:9, col:21> '<dependent type>' contains-errors lvalue ->handle_events         | `-RecoveryExpr 0x158128358 <col:9> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x158128310 <col:35> 'unsigned int' lvalue ParmVar 0x1581280d8 'cpu' 'unsigned int' ","20400":"`-FunctionDecl 0x13a9281f8  line:1:5 invalid DH_generate_key 'int (int *)'   |-ParmVarDecl 0x13a928128 <col:21, col:25> col:25 invalid dh 'int *'   `-CompoundStmt 0x13a9283b0 <line:2:1, line:11:1>     `-ReturnStmt 0x13a9283a0 <line:10:5, col:37>       `-CallExpr 0x13a928378 <col:12, col:37> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x13a928310 <col:12, col:22> '<dependent type>' contains-errors lvalue ->generate_key         | `-CXXDependentScopeMemberExpr 0x13a9282c8 <col:12, col:16> '<dependent type>' contains-errors lvalue ->meth         |   `-RecoveryExpr 0x13a9282a8 <col:12> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13a928358 <col:35> '<dependent type>' contains-errors lvalue ","20688":"`-FunctionDecl 0x14f123aa0  col:19 implicit used realloc 'void *(void *, unsigned long)' extern   |-ParmVarDecl 0x14f123ba0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14f123c08 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x14f123b48 <<invalid sloc>> Implicit 872   `-AllocSizeAttr 0x14f123c80 <col:19> Implicit 2 ","20484":"`-FunctionDecl 0x103027438  line:1:10 invalid dhcp_get_option 'int *(struct dhcp_packet *, int)'   |-ParmVarDecl 0x10300e268 <col:26, col:46> col:46 used packet 'struct dhcp_packet *'   |-ParmVarDecl 0x10300e2e8 <col:54, col:58> col:58 used code 'int'   `-CompoundStmt 0x1030280d0 <line:2:1, line:59:1>     |-DeclStmt 0x103027608 <line:3:2, col:14>     | |-VarDecl 0x103027508 <col:2, col:6> col:6 used len 'int'     | `-VarDecl 0x103027588 <col:2, col:11> col:11 used rem 'int'     |-BinaryOperator 0x103027770 <line:9:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x103027698 <col:2> 'int' lvalue Var 0x103027588 'rem' 'int'     | `-ImplicitCastExpr 0x103027758 <col:8, col:30> 'int' contains-errors <IntegralCast>     |   `-UnaryExprOrTypeTraitExpr 0x103027738 <col:8, col:30> 'unsigned long' contains-errors sizeof     |     `-ParenExpr 0x103027718 <col:14, col:30> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x1030276f0 <col:15, col:23> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1030276b8 <col:15> 'struct dhcp_packet *' lvalue ParmVar 0x10300e268 'packet' 'struct dhcp_packet *' non_odr_use_unevaluated     `-WhileStmt 0x1030280b0 <line:11:2, line:56:2>       |-IntegerLiteral 0x103027790 <line:11:9> 'int' 1       `-CompoundStmt 0x103028078 <col:12, line:56:2>         |-IfStmt 0x103027870 <line:12:3, line:14:11>         | |-BinaryOperator 0x103027808 <line:12:7, col:14> 'int' '<='         | | |-ImplicitCastExpr 0x1030277f0 <col:7> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x1030277b0 <col:7> 'int' lvalue Var 0x103027588 'rem' 'int'         | | `-IntegerLiteral 0x1030277d0 <col:14> 'int' 0         | `-ReturnStmt 0x103027860 <line:14:4, col:11>         |   `-RecoveryExpr 0x103027840 <col:11> '<dependent type>' contains-errors lvalue         |-IfStmt 0x103027958 <line:16:3, line:21:3>         | |-RecoveryExpr 0x1030278d8 <line:16:7, col:30> '_Bool' contains-errors         | `-CompoundStmt 0x103027938 <col:44, line:21:3>         |   |-UnaryOperator 0x103027918 <line:17:4, col:7> 'int' postfix '--'         |   | `-DeclRefExpr 0x1030278f8 <col:4> 'int' lvalue Var 0x103027588 'rem' 'int'         |   `-ContinueStmt 0x103027930 <line:20:4>         |-IfStmt 0x103027e70 <line:23:3, line:41:3>         | |-RecoveryExpr 0x1030279c0 <line:23:7, col:30> '_Bool' contains-errors         | `-CompoundStmt 0x103027e50 <col:40, line:41:3>         |   |-IfStmt 0x103027e18 <line:24:4, line:38:4> has_else         |   | |-BinaryOperator 0x103027a70 <line:24:8, col:19> '<dependent type>' contains-errors '&'         |   | | |-RecoveryExpr 0x103027a30 <col:8> '<dependent type>' contains-errors lvalue         |   | | `-RecoveryExpr 0x103027a50 <col:19> '<dependent type>' contains-errors lvalue         |   | |-CompoundStmt 0x103027c38 <col:31, line:31:4>         |   | | |-BinaryOperator 0x103027c10 <line:28:5, col:30> 'int' contains-errors '='         |   | | | |-DeclRefExpr 0x103027b38 <col:5> 'int' lvalue Var 0x103027588 'rem' 'int'         |   | | | `-ImplicitCastExpr 0x103027bf8 <col:11, col:30> 'int' contains-errors <IntegralCast>         |   | | |   `-UnaryExprOrTypeTraitExpr 0x103027bd8 <col:11, col:30> 'unsigned long' contains-errors sizeof         |   | | |     `-ParenExpr 0x103027bb8 <col:17, col:30> '<dependent type>' contains-errors lvalue         |   | | |       `-RecoveryExpr 0x103027b90 <col:18, col:26> '<dependent type>' contains-errors lvalue         |   | | |         `-DeclRefExpr 0x103027b58 <col:18> 'struct dhcp_packet *' lvalue ParmVar 0x10300e268 'packet' 'struct dhcp_packet *' non_odr_use_unevaluated         |   | | `-ContinueStmt 0x103027c30 <line:30:5>         |   | `-IfStmt 0x103027df8 <line:31:11, line:38:4>         |   |   |-RecoveryExpr 0x103027c58 <line:31:15, col:26> '_Bool' contains-errors         |   |   `-CompoundStmt 0x103027dd8 <col:39, line:38:4>         |   |     |-BinaryOperator 0x103027db0 <line:35:5, col:31> 'int' contains-errors '='         |   |     | |-DeclRefExpr 0x103027cd8 <col:5> 'int' lvalue Var 0x103027588 'rem' 'int'         |   |     | `-ImplicitCastExpr 0x103027d98 <col:11, col:31> 'int' contains-errors <IntegralCast>         |   |     |   `-UnaryExprOrTypeTraitExpr 0x103027d78 <col:11, col:31> 'unsigned long' contains-errors sizeof         |   |     |     `-ParenExpr 0x103027d58 <col:17, col:31> '<dependent type>' contains-errors lvalue         |   |     |       `-RecoveryExpr 0x103027d30 <col:18, col:26> '<dependent type>' contains-errors lvalue         |   |     |         `-DeclRefExpr 0x103027cf8 <col:18> 'struct dhcp_packet *' lvalue ParmVar 0x10300e268 'packet' 'struct dhcp_packet *' non_odr_use_unevaluated         |   |     `-ContinueStmt 0x103027dd0 <line:37:5>         |   `-BreakStmt 0x103027e48 <line:40:4>         |-CompoundAssignOperator 0x103027f28 <line:45:3, col:10> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'         | |-DeclRefExpr 0x103027ed0 <col:3> 'int' lvalue Var 0x103027588 'rem' 'int'         | `-ImplicitCastExpr 0x103027f10 <col:10> 'int' <LValueToRValue>         |   `-DeclRefExpr 0x103027ef0 <col:10> 'int' lvalue Var 0x103027508 'len' 'int'         `-IfStmt 0x103027fd8 <line:46:3, line:47:4>           |-BinaryOperator 0x103027fb0 <line:46:7, col:13> 'int' '<'           | |-ImplicitCastExpr 0x103027f98 <col:7> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x103027f58 <col:7> 'int' lvalue Var 0x103027588 'rem' 'int'           | `-IntegerLiteral 0x103027f78 <col:13> 'int' 0           `-ContinueStmt 0x103027fd0 <line:47:4> ","20342":"`-FunctionDecl 0x135923208  line:1:1 v3d_submit_cl_ioctl 'int (struct drm_device *, void *, struct drm_file *)'   |-ParmVarDecl 0x13600e248 <col:21, col:40> col:40 used dev 'struct drm_device *'   |-ParmVarDecl 0x13600e2c8 <col:45, col:51> col:51 used data 'void *'   |-ParmVarDecl 0x1359230c8 <line:2:7, col:24> col:24 used file_priv 'struct drm_file *'   `-CompoundStmt 0x136029188 <line:3:1, line:102:1>     |-DeclStmt 0x135923708 <line:4:2, col:39>     | |-RecordDecl 0x135923310 <col:2, col:9> col:9 struct v3d_dev     | `-VarDecl 0x135923478 <col:2, col:38> col:18 used v3d 'struct v3d_dev *' cinit     |   `-ImplicitCastExpr 0x1359236d8 <col:24, col:38> 'struct v3d_dev *' <IntegralToPointer>     |     `-CallExpr 0x135923698 <col:24, col:38> 'int'     |       |-ImplicitCastExpr 0x135923680 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x135923610 <col:24> 'int ()' Function 0x135923558 'to_v3d_dev' 'int ()'     |       `-ImplicitCastExpr 0x1359236c0 <col:35> 'struct drm_device *' <LValueToRValue>     |         `-DeclRefExpr 0x135923630 <col:35> 'struct drm_device *' lvalue ParmVar 0x13600e248 'dev' 'struct drm_device *'     |-DeclStmt 0x135923968 <line:5:2, col:57>     | |-RecordDecl 0x135923720 <col:2, col:9> col:9 struct v3d_file_priv     | `-VarDecl 0x135923888 <col:2, col:46> col:24 used v3d_priv 'struct v3d_file_priv *' cinit     |   `-RecoveryExpr 0x135923928 <col:35, col:46> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1359238f0 <col:35> 'struct drm_file *' lvalue ParmVar 0x1359230c8 'file_priv' 'struct drm_file *'     |-DeclStmt 0x135923bb8 <line:6:2, col:39>     | |-RecordDecl 0x135923980 <col:2, col:9> col:9 struct drm_v3d_submit_cl     | `-VarDecl 0x135923ae8 <col:2, col:35> col:28 used args 'struct drm_v3d_submit_cl *' cinit     |   `-ImplicitCastExpr 0x135923b88 <col:35> 'struct drm_v3d_submit_cl *' <BitCast>     |     `-ImplicitCastExpr 0x135923b70 <col:35> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x135923b50 <col:35> 'void *' lvalue ParmVar 0x13600e2c8 'data' 'void *'     |-DeclStmt 0x135923df0 <line:7:2, col:32>     | |-RecordDecl 0x135923bd0 <col:2, col:9> col:9 struct v3d_bin_job     | `-VarDecl 0x135923d38 <col:2, col:28> col:22 used bin 'struct v3d_bin_job *' cinit     |   `-RecoveryExpr 0x135923db8 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x137008c00 <line:8:2, col:31>     | |-RecordDecl 0x135923e08 <col:2, col:9> col:9 struct v3d_render_job     | `-VarDecl 0x135923f78 <col:2, col:25> col:25 used render 'struct v3d_render_job *'     |-DeclStmt 0x137008d98 <line:9:2, col:35>     | |-RecordDecl 0x137008c18 <col:2, col:9> col:9 struct ww_acquire_ctx     | `-VarDecl 0x137008d18 <col:2, col:24> col:24 invalid acquire_ctx 'struct ww_acquire_ctx'     |-DeclStmt 0x137008e50 <line:10:2, col:13>     | `-VarDecl 0x137008dc8 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x137008e30 <col:12> 'int' 0     |-CallExpr 0x1370090a0 <line:12:2, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137008f48 <col:2> 'int ()' Function 0x137008e90 'trace_v3d_submit_cl_ioctl' 'int ()'     | |-UnaryOperator 0x137008fc8 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x137008fa0 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137008f68 <col:29> 'struct v3d_dev *' lvalue Var 0x135923478 'v3d' 'struct v3d_dev *'     | |-RecoveryExpr 0x137009018 <col:39, col:45> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137008fe0 <col:39> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | `-RecoveryExpr 0x137009078 <col:56, col:62> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137009040 <col:56> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |-IfStmt 0x137009438 <line:14:2, line:17:2>     | |-BinaryOperator 0x137009158 <line:14:6, col:19> 'int' contains-errors '!='     | | |-RecoveryExpr 0x137009110 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1370090d8 <col:6> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | | `-IntegerLiteral 0x137009138 <col:19> 'int' 0     | `-CompoundStmt 0x137009418 <col:22, line:17:2>     |   |-CallExpr 0x137009340 <line:15:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x137009258 <col:3> 'int ()' Function 0x1370091a0 'DRM_INFO' 'int ()'     |   | |-StringLiteral 0x1370092c0 <col:12> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x137009318 <col:19, col:25> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1370092e0 <col:19> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   `-ReturnStmt 0x137009408 <line:16:3, col:11>     |     `-UnaryOperator 0x1370093f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1370093d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1370093b8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x137009718 <line:20:2, line:21:11>     | |-UnaryOperator 0x137009658 <line:20:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x137009640 <col:7> 'struct v3d_render_job *' <LValueToRValue>     | |   `-DeclRefExpr 0x137009620 <col:7> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | `-ReturnStmt 0x137009708 <line:21:3, col:11>     |   `-UnaryOperator 0x1370096f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1370096d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1370096b8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1370097f8 <line:23:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137009770 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137009738 <col:2> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | `-RecoveryExpr 0x1370097d0 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137009798 <col:18> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |-BinaryOperator 0x1370098d8 <line:24:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137009850 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137009818 <col:2> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | `-RecoveryExpr 0x1370098b0 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137009878 <col:16> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |-CallExpr 0x137009a70 <line:25:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1370099d8 <col:2> 'int ()' Function 0x137009920 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x137009a58 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x137009a30 <col:18, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1370099f8 <col:18> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |-IfStmt 0x1360268f0 <line:29:2, line:32:2>     | |-ImplicitCastExpr 0x1360266f8 <line:29:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1360266d8 <col:6> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-CompoundStmt 0x1360268d0 <col:11, line:32:2>     |   |-CallExpr 0x136026848 <line:30:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x136026830 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1360267f0 <col:3> 'int ()' Function 0x136026738 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x136026870 <col:9> 'struct v3d_render_job *' <LValueToRValue>     |   |   `-DeclRefExpr 0x136026810 <col:9> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   `-ReturnStmt 0x1360268c0 <line:31:3, col:10>     |     `-ImplicitCastExpr 0x1360268a8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x136026888 <col:10> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |-IfStmt 0x136027410 <line:34:2, line:52:2>     | |-BinaryOperator 0x1360269d0 <line:34:6, col:31> 'int' contains-errors '!='     | | |-RecoveryExpr 0x136026948 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x136026910 <col:6> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | | `-RecoveryExpr 0x1360269a8 <col:25, col:31> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136026970 <col:25> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | `-CompoundStmt 0x1360273c8 <col:40, line:52:2>     |   |-IfStmt 0x136026ea8 <line:41:3, line:44:3>     |   | |-ImplicitCastExpr 0x136026c88 <line:41:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x136026c68 <col:7> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |   | `-CompoundStmt 0x136026e88 <col:12, line:44:3>     |   |   |-CallExpr 0x136026e18 <line:42:4, col:29> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x136026d80 <col:4> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     |   |   | `-UnaryOperator 0x136026e00 <col:16, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x136026dd8 <col:17, col:25> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x136026da0 <col:17> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   |   `-ReturnStmt 0x136026e78 <line:43:4, col:11>     |   |     `-ImplicitCastExpr 0x136026e60 <col:11> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x136026e40 <col:11> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |   |-BinaryOperator 0x136026f88 <line:46:3, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x136026f00 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136026ec8 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x136026f60 <col:16, col:22> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x136026f28 <col:16> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   |-BinaryOperator 0x136027068 <line:47:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x136026fe0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136026fa8 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x136027040 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x136027008 <col:14> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   |-BinaryOperator 0x136027148 <line:48:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1360270c0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136027088 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x136027120 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1360270e8 <col:14> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   |-BinaryOperator 0x136027228 <line:49:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1360271a0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136027168 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x136027200 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1360271c8 <col:14> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   |-BinaryOperator 0x136027308 <line:50:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x136027280 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x136027248 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   | `-RecoveryExpr 0x1360272e0 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1360272a8 <col:14> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   `-BinaryOperator 0x1360273a8 <line:51:3, col:17> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x136027360 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x136027328 <col:3> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |     `-DeclRefExpr 0x136027388 <col:17> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |-BinaryOperator 0x136027720 <line:54:2, line:55:48> 'int' contains-errors '='     | |-DeclRefExpr 0x136027430 <line:54:2> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-CallExpr 0x1360276d8 <col:8, line:55:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136027530 <line:54:8> 'int ()' Function 0x136027478 'v3d_lookup_bos' 'int ()'     |   |-DeclRefExpr 0x136027550 <col:23> 'struct drm_device *' lvalue ParmVar 0x13600e248 'dev' 'struct drm_device *'     |   |-DeclRefExpr 0x136027570 <col:28> 'struct drm_file *' lvalue ParmVar 0x1359230c8 'file_priv' 'struct drm_file *'     |   |-UnaryOperator 0x136027600 <col:39, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1360275c8 <col:40, col:48> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x136027590 <col:40> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   |-RecoveryExpr 0x136027650 <line:55:9, col:15> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x136027618 <col:9> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |   `-RecoveryExpr 0x1360276b0 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136027678 <col:27> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     |-IfStmt 0x1360277e0 <line:56:2, line:57:8>     | |-ImplicitCastExpr 0x136027760 <line:56:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x136027740 <col:6> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-GotoStmt 0x1360277c8 <line:57:3, col:8> 'fail' 0x136027778     |-BinaryOperator 0x136027a00 <line:59:2, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x136027800 <col:2> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-CallExpr 0x1360279d0 <col:8, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136027900 <col:8> 'int ()' Function 0x136027848 'v3d_lock_bo_reservations' 'int ()'     |   |-UnaryOperator 0x136027980 <col:33, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x136027958 <col:34, col:42> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x136027920 <col:34> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   `-UnaryOperator 0x1360279b8 <col:48, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x136027998 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136027a70 <line:60:2, line:61:8>     | |-ImplicitCastExpr 0x136027a40 <line:60:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x136027a20 <col:6> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-GotoStmt 0x136027a58 <line:61:3, col:8> 'fail' 0x136027778     |-CallExpr 0x136027c08 <line:63:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136027b70 <col:2> 'int ()' Function 0x136027ab8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x136027bf0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136027bc8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136027b90 <col:14> 'struct v3d_dev *' lvalue Var 0x135923478 'v3d' 'struct v3d_dev *'     |-IfStmt 0x136028378 <line:64:2, line:73:2>     | |-ImplicitCastExpr 0x136027c50 <line:64:6> 'struct v3d_bin_job *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x136027c30 <col:6> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     | `-CompoundStmt 0x136028350 <col:11, line:73:2>     |   |-IfStmt 0x136027ec0 <line:66:3, line:67:9>     |   | |-ImplicitCastExpr 0x136027e40 <line:66:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x136027e20 <col:7> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |   | `-GotoStmt 0x136027ea8 <line:67:4, col:9> 'fail_unreserve' 0x136027e58     |   |-BinaryOperator 0x1360282c0 <line:69:3, line:70:47> 'int' contains-errors '='     |   | |-DeclRefExpr 0x136027ee0 <line:69:3> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |   | `-CallExpr 0x136028290 <col:9, line:70:47> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x136027fe0 <line:69:9> 'int ()' Function 0x136027f28 'drm_gem_fence_array_add' 'int ()'     |   |   |-UnaryOperator 0x1360280a8 <col:33, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-CXXDependentScopeMemberExpr 0x136028060 <col:34, col:47> '<dependent type>' contains-errors lvalue .deps     |   |   |   `-RecoveryExpr 0x136028038 <col:34, col:42> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x136028000 <col:34> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |   |   `-CallExpr 0x136028268 <line:70:12, col:46> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1360281a0 <col:12> 'int ()' Function 0x1360280e8 'dma_fence_get' 'int ()'     |   |     `-CXXDependentScopeMemberExpr 0x136028220 <col:26, col:36> '<dependent type>' contains-errors lvalue .done_fence     |   |       `-RecoveryExpr 0x1360281f8 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x1360281c0 <col:26> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   `-IfStmt 0x136028330 <line:71:3, line:72:9>     |     |-ImplicitCastExpr 0x136028300 <line:71:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1360282e0 <col:7> 'int' lvalue Var 0x137008dc8 'ret' 'int'     |     `-GotoStmt 0x136028318 <line:72:4, col:9> 'fail_unreserve' 0x136027e58     |-IfStmt 0x1360284c0 <line:76:2, line:77:8>     | |-ImplicitCastExpr 0x136028490 <line:76:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x136028470 <col:6> 'int' lvalue Var 0x137008dc8 'ret' 'int'     | `-GotoStmt 0x1360284a8 <line:77:3, col:8> 'fail_unreserve' 0x136027e58     |-CallExpr 0x136028658 <line:78:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1360285c0 <col:2> 'int ()' Function 0x136028508 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x136028640 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136028618 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1360285e0 <col:16> 'struct v3d_dev *' lvalue Var 0x135923478 'v3d' 'struct v3d_dev *'     |-CallExpr 0x136028958 <line:80:2, line:84:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136028760 <line:80:2> 'int ()' Function 0x1360286a8 'v3d_attach_fences_and_unlock_reservation' 'int ()'     | |-DeclRefExpr 0x136028780 <col:43> 'struct drm_file *' lvalue ParmVar 0x1359230c8 'file_priv' 'struct drm_file *'     | |-UnaryOperator 0x136028800 <line:81:8, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1360287d8 <col:9, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1360287a0 <col:9> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | |-UnaryOperator 0x136028838 <line:82:8, col:9> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x136028818 <col:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x136028888 <line:83:8, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x136028850 <col:8> 'struct drm_v3d_submit_cl *' lvalue Var 0x135923ae8 'args' 'struct drm_v3d_submit_cl *'     | `-CXXDependentScopeMemberExpr 0x136028910 <line:84:8, col:21> '<dependent type>' contains-errors lvalue .done_fence     |   `-RecoveryExpr 0x1360288e8 <col:8, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1360288b0 <col:8> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |-IfStmt 0x136028a98 <line:86:2, line:87:25>     | |-ImplicitCastExpr 0x1360289c0 <line:86:6> 'struct v3d_bin_job *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x1360289a0 <col:6> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     | `-CallExpr 0x136028a70 <line:87:3, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1360289d8 <col:3> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     |   `-UnaryOperator 0x136028a58 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x136028a30 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1360289f8 <col:16> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |-CallExpr 0x136028b50 <line:88:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136028ab8 <col:2> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     | `-UnaryOperator 0x136028b38 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136028b10 <col:15, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136028ad8 <col:15> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     |-ReturnStmt 0x136028b98 <line:90:2, col:9>     | `-IntegerLiteral 0x136028b78 <col:9> 'int' 0     |-LabelStmt 0x136028c68 <line:92:1, line:93:31> 'fail_unreserve'     | `-CallExpr 0x136028c40 <col:2, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136028ba8 <col:2> 'int ()' Function 0x136028508 'mutex_unlock' 'int ()'     |   `-UnaryOperator 0x136028c28 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x136028c00 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x136028bc8 <col:16> 'struct v3d_dev *' lvalue Var 0x135923478 'v3d' 'struct v3d_dev *'     |-CallExpr 0x136028f10 <line:94:2, line:95:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136028d68 <line:94:2> 'int ()' Function 0x136028cb0 'drm_gem_unlock_reservations' 'int ()'     | |-CXXDependentScopeMemberExpr 0x136028de8 <col:30, col:43> '<dependent type>' contains-errors lvalue .bo     | | `-RecoveryExpr 0x136028dc0 <col:30, col:38> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136028d88 <col:30> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | |-CXXDependentScopeMemberExpr 0x136028e90 <line:95:9, col:22> '<dependent type>' contains-errors lvalue .bo_count     | | `-RecoveryExpr 0x136028e68 <col:9, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136028e30 <col:9> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     | `-UnaryOperator 0x136028ef8 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136028ed8 <col:33> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x136029060 <line:96:1, line:98:25> 'fail'     | `-IfStmt 0x136029040 <line:97:2, line:98:25>     |   |-ImplicitCastExpr 0x136028f68 <line:97:6> 'struct v3d_bin_job *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x136028f48 <col:6> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |   `-CallExpr 0x136029018 <line:98:3, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x136028f80 <col:3> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     |     `-UnaryOperator 0x136029000 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x136028fd8 <col:16, col:21> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x136028fa0 <col:16> 'struct v3d_bin_job *' contains-errors lvalue Var 0x135923d38 'bin' 'struct v3d_bin_job *'     |-CallExpr 0x136029118 <line:99:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136029080 <col:2> 'int ()' Function 0x136026cc8 'v3d_job_put' 'int ()'     | `-UnaryOperator 0x136029100 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1360290d8 <col:15, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1360290a0 <col:15> 'struct v3d_render_job *' lvalue Var 0x135923f78 'render' 'struct v3d_render_job *'     `-ReturnStmt 0x136029178 <line:101:2, col:9>       `-ImplicitCastExpr 0x136029160 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x136029140 <col:9> 'int' lvalue Var 0x137008dc8 'ret' 'int' ","20445":"`-FunctionDecl 0x12392b600  line:1:13 nfs4_locku_prepare 'void (struct rpc_task *, void *)' static   |-ParmVarDecl 0x123913248 <col:32, col:49> col:49 used task 'struct rpc_task *'   |-ParmVarDecl 0x1239132c8 <col:55, col:61> col:61 used data 'void *'   `-CompoundStmt 0x12392d608 <line:2:1, line:20:1>     |-DeclStmt 0x12392b938 <line:3:2, col:41>     | |-RecordDecl 0x12392b700 <col:2, col:9> col:9 struct nfs4_unlockdata     | `-VarDecl 0x12392b868 <col:2, col:37> col:26 used calldata 'struct nfs4_unlockdata *' cinit     |   `-ImplicitCastExpr 0x12392b908 <col:37> 'struct nfs4_unlockdata *' <BitCast>     |     `-ImplicitCastExpr 0x12392b8f0 <col:37> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x12392b8d0 <col:37> 'void *' lvalue ParmVar 0x1239132c8 'data' 'void *'     |-IfStmt 0x12392bbe8 <line:5:2, line:6:3>     | |-BinaryOperator 0x12392bbb8 <line:5:6, col:57> 'int' contains-errors '!='     | | |-CallExpr 0x12392bb68 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12392ba80 <col:6> 'int ()' Function 0x12392b9c8 'nfs_wait_on_sequence' 'int ()'     | | | |-CXXDependentScopeMemberExpr 0x12392bb00 <col:27, col:41> '<dependent type>' contains-errors lvalue .seqid     | | | | `-RecoveryExpr 0x12392bad8 <col:27, col:37> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x12392baa0 <col:27> 'struct nfs4_unlockdata *' lvalue Var 0x12392b868 'calldata' 'struct nfs4_unlockdata *'     | | | `-DeclRefExpr 0x12392bb48 <col:48> 'struct rpc_task *' lvalue ParmVar 0x123913248 'task' 'struct rpc_task *'     | | `-IntegerLiteral 0x12392bb98 <col:57> 'int' 0     | `-ReturnStmt 0x12392bbd8 <line:6:3>     |-IfStmt 0x12392bfc8 <line:7:2, line:11:2>     | |-BinaryOperator 0x12392bea0 <line:7:6, col:66> 'int' contains-errors '=='     | | |-CallExpr 0x12392be70 <col:6, col:61> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12392bce8 <col:6> 'int ()' Function 0x12392bc30 'test_bit' 'int ()'     | | | |-RecoveryExpr 0x12392be50 <col:15> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x12392bdc8 <col:37, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x12392bd80 <col:38, col:53> '<dependent type>' contains-errors lvalue ->ls_flags     | | |     `-RecoveryExpr 0x12392bd58 <col:38, col:48> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x12392bd20 <col:38> 'struct nfs4_unlockdata *' lvalue Var 0x12392b868 'calldata' 'struct nfs4_unlockdata *'     | | `-IntegerLiteral 0x12392be10 <col:66> 'int' 0     | `-CompoundStmt 0x12392bfa8 <col:69, line:11:2>     |   |-BinaryOperator 0x12392bf78 <line:9:3, col:21> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12392bef8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12392bec0 <col:3> 'struct rpc_task *' lvalue ParmVar 0x123913248 'task' 'struct rpc_task *'     |   | `-RecoveryExpr 0x12392bf58 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12392bf98 <line:10:3>     |-BinaryOperator 0x12392c0a0 <line:12:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12392c020 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12392bfe8 <col:2> 'struct nfs4_unlockdata *' lvalue Var 0x12392b868 'calldata' 'struct nfs4_unlockdata *'     | `-RecoveryExpr 0x12392c080 <col:24> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12392d5d8 <line:13:2, line:19:22> has_else       |-BinaryOperator 0x12392c420 <line:13:6, line:16:14> 'int' contains-errors '!='       | |-CallExpr 0x12392c3c0 <line:13:6, line:16:9> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x12392c1a0 <line:13:6> 'int ()' Function 0x12392c0e8 'nfs4_setup_sequence' 'int ()'       | | |-RecoveryExpr 0x12392c1f8 <col:26, col:36> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x12392c1c0 <col:26> 'struct nfs4_unlockdata *' lvalue Var 0x12392b868 'calldata' 'struct nfs4_unlockdata *'       | | |-UnaryOperator 0x12392c2c8 <line:14:5, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow       | | | `-CXXDependentScopeMemberExpr 0x12392c280 <col:6, col:20> '<dependent type>' contains-errors lvalue .seq_args       | | |   `-RecoveryExpr 0x12392c258 <col:6, col:16> '<dependent type>' contains-errors lvalue       | | |     `-DeclRefExpr 0x12392c220 <col:6> 'struct nfs4_unlockdata *' lvalue Var 0x12392b868 'calldata' 'struct nfs4_unlockdata *'       | | |-UnaryOperator 0x12392c388 <line:15:5, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow       | | | `-CXXDependentScopeMemberExpr 0x12392c340 <col:6, col:20> '<dependent type>' contains-errors lvalue .seq_res       | | |   `-RecoveryExpr 0x12392c318 <col:6, col:16> '<dependent type>' contains-errors lvalue       | | |     `-DeclRefExpr 0x12392c2e0 <col:6> 'struct nfs4_unlockdata *' lvalue Var 0x12392b868 'calldata' 'struct nfs4_unlockdata *'       | | `-DeclRefExpr 0x12392c3a0 <line:16:5> 'struct rpc_task *' lvalue ParmVar 0x123913248 'task' 'struct rpc_task *'       | `-IntegerLiteral 0x12392c400 <col:14> 'int' 0       |-CallExpr 0x12392d400 <line:17:3, col:40> '<dependent type>' contains-errors       | |-DeclRefExpr 0x12392c520 <col:3> 'int ()' Function 0x12392c468 'nfs_release_seqid' 'int ()'       | `-CXXDependentScopeMemberExpr 0x12392c5a0 <col:21, col:35> '<dependent type>' contains-errors lvalue .seqid       |   `-RecoveryExpr 0x12392c578 <col:21, col:31> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x12392c540 <col:21> 'struct nfs4_unlockdata *' lvalue Var 0x12392b868 'calldata' 'struct nfs4_unlockdata *'       `-CallExpr 0x12392d598 <line:19:3, col:22> 'int'         |-ImplicitCastExpr 0x12392d580 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12392d508 <col:3> 'int ()' Function 0x12392d450 'rpc_call_start' 'int ()'         `-ImplicitCastExpr 0x12392d5c0 <col:18> 'struct rpc_task *' <LValueToRValue>           `-DeclRefExpr 0x12392d528 <col:18> 'struct rpc_task *' lvalue ParmVar 0x123913248 'task' 'struct rpc_task *' ","20732":"`-FunctionDecl 0x123928318  line:1:5 invalid X509_check_trust 'int (int *, int, int)'   |-ParmVarDecl 0x123928128 <col:22, col:28> col:28 invalid x 'int *'   |-ParmVarDecl 0x1239281a8 <col:31, col:35> col:35 used id 'int'   |-ParmVarDecl 0x123928228 <col:39, col:43> col:43 used flags 'int'   `-CompoundStmt 0x123941d70 <line:2:1, line:10:1>     |-DeclStmt 0x123928470 <line:4:2, col:9>     | `-VarDecl 0x123928408 <col:2, col:6> col:6 used idx 'int'     |-IfStmt 0x123928548 <line:5:2, col:22>     | |-BinaryOperator 0x1239284f8 <col:5, col:12> 'int' '=='     | | |-ImplicitCastExpr 0x1239284e0 <col:5> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x123928488 <col:5> 'int' lvalue ParmVar 0x1239281a8 'id' 'int'     | | `-UnaryOperator 0x1239284c8 <col:11, col:12> 'int' prefix '-'     | |   `-IntegerLiteral 0x1239284a8 <col:12> 'int' 1     | `-ReturnStmt 0x123928538 <col:15, col:22>     |   `-IntegerLiteral 0x123928518 <col:22> 'int' 1     |-BinaryOperator 0x1239287a8 <line:6:2, col:31> 'int' '='     | |-DeclRefExpr 0x123928568 <col:2> 'int' lvalue Var 0x123928408 'idx' 'int'     | `-CallExpr 0x123928768 <col:8, col:31> 'int'     |   |-ImplicitCastExpr 0x123928750 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1239286e0 <col:8> 'int ()' Function 0x123928628 'X509_TRUST_get_by_id' 'int ()'     |   `-ImplicitCastExpr 0x123928790 <col:29> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x123928700 <col:29> 'int' lvalue ParmVar 0x1239281a8 'id' 'int'     |-IfStmt 0x123941a18 <line:7:2, col:49>     | |-BinaryOperator 0x123941850 <col:5, col:13> 'int' '=='     | | |-ImplicitCastExpr 0x123941838 <col:5> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1239287c8 <col:5> 'int' lvalue Var 0x123928408 'idx' 'int'     | | `-UnaryOperator 0x123941820 <col:12, col:13> 'int' prefix '-'     | |   `-IntegerLiteral 0x123941800 <col:13> 'int' 1     | `-ReturnStmt 0x123941a08 <col:16, col:49>     |   `-CallExpr 0x1239419d0 <col:23, col:49> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x123941950 <col:23> 'int ()' Function 0x123941898 'default_trust' 'int ()'     |     |-DeclRefExpr 0x123941970 <col:37> 'int' lvalue ParmVar 0x1239281a8 'id' 'int'     |     |-RecoveryExpr 0x123941990 <col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1239419b0 <col:44> 'int' lvalue ParmVar 0x123928228 'flags' 'int'     `-ReturnStmt 0x123941d60 <line:9:2, col:37>       `-CallExpr 0x123941d28 <col:9, col:37> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x123941cc0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->check_trust         | `-RecoveryExpr 0x123941ca0 <col:9> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x123941d08 <col:25> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x123941c28 <col:29> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x123941c48 <col:32> 'int' lvalue ParmVar 0x123928228 'flags' 'int' ","20393":"`-FunctionDecl 0x13a91e538  line:1:24 invalid to_longlong_hybrid_null 'int ()'   `-CompoundStmt 0x13a91e9b0 <line:2:3, line:4:3>     `-ReturnStmt 0x13a91e9a0 <line:3:5, col:66>       `-CallExpr 0x13a91e970 <col:12, col:66> '<dependent type>' contains-errors         |-DeclRefExpr 0x13a91e708 <col:12> 'int ()' Function 0x13a91e650 'Longlong_hybrid_null' 'int ()'         |-CallExpr 0x13a91e930 <col:33, col:50> 'int'         | `-ImplicitCastExpr 0x13a91e918 <col:33> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x13a91e808 <col:33> 'int ()' Function 0x13a91e750 'to_longlong_null' 'int ()'         `-RecoveryExpr 0x13a91e950 <col:53> '<dependent type>' contains-errors lvalue ","20286":"`-FunctionDecl 0x128142d08  line:1:12 invalid propfind_alturiset 'int (const int *, int, struct propfind_ctx *, int, int, int, void *)' static   |-ParmVarDecl 0x1281280f0 <col:31, col:46> col:46 invalid name 'const int *'   |-ParmVarDecl 0x128128170 <col:52, col:61> col:61 invalid ns 'int'   |-ParmVarDecl 0x128128768 <line:2:31, col:52> col:52 used fctx 'struct propfind_ctx *'   |-ParmVarDecl 0x128142800 <line:3:31, col:42> col:42 invalid prop 'int'   | `-UnusedAttr 0x128142868 <col:62> unused   |-ParmVarDecl 0x1281428d8 <line:4:31, col:42> col:42 invalid resp 'int'   | `-UnusedAttr 0x128142940 <col:62> unused   |-ParmVarDecl 0x128142a90 <line:5:31, col:47> col:47 invalid propstat 'int'   |-ParmVarDecl 0x128142b10 <line:6:31, col:37> col:37 rock 'void *'   | `-UnusedAttr 0x128142b78 <col:57> unused   `-CompoundStmt 0x1281430d0 <line:7:1, line:12:1>     `-ReturnStmt 0x1281430c0 <line:11:5, col:12>       `-IntegerLiteral 0x1281430a0 <col:12> 'int' 0 ","20795":"`-FunctionDecl 0x14a942bf0  col:43 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x14a942cf0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14a942c98 <<invalid sloc>> Implicit 950 ","20343":"`-FunctionDecl 0x14b808fa0  col:8 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x14b8090a0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14b809108 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14b809048 <<invalid sloc>> Implicit 887 ","20252":"`-FunctionDecl 0x1430968c0  col:9 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x1430969c0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x143096a28 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x143096968 <<invalid sloc>> Implicit 887 ","21136":"`-FunctionDecl 0x12e128758  line:1:5 sas_discover_end_dev 'int (struct domain_device *)'   |-ParmVarDecl 0x12e128648 <col:26, col:48> col:48 used dev 'struct domain_device *'   `-CompoundStmt 0x12e140fe0 <line:2:1, line:11:1>     |-DeclStmt 0x12e140ad0 <line:3:2, col:9>     | `-VarDecl 0x12e140a68 <col:2, col:6> col:6 used res 'int'     |-BinaryOperator 0x12e140cf8 <line:5:2, col:37> 'int' '='     | |-DeclRefExpr 0x12e140ae8 <col:2> 'int' lvalue Var 0x12e140a68 'res' 'int'     | `-CallExpr 0x12e140cb8 <col:8, col:37> 'int'     |   |-ImplicitCastExpr 0x12e140ca0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12e140c30 <col:8> 'int ()' Function 0x12e140b78 'sas_notify_lldd_dev_found' 'int ()'     |   `-ImplicitCastExpr 0x12e140ce0 <col:34> 'struct domain_device *' <LValueToRValue>     |     `-DeclRefExpr 0x12e140c50 <col:34> 'struct domain_device *' lvalue ParmVar 0x12e128648 'dev' 'struct domain_device *'     |-IfStmt 0x12e140d98 <line:6:2, line:7:10>     | |-ImplicitCastExpr 0x12e140d38 <line:6:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12e140d18 <col:6> 'int' lvalue Var 0x12e140a68 'res' 'int'     | `-ReturnStmt 0x12e140d88 <line:7:3, col:10>     |   `-ImplicitCastExpr 0x12e140d70 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12e140d50 <col:10> 'int' lvalue Var 0x12e140a68 'res' 'int'     |-CallExpr 0x12e140f80 <line:8:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e140e98 <col:2> 'int ()' Function 0x12e140de0 'sas_discover_event' 'int ()'     | |-RecoveryExpr 0x12e140ef0 <col:21, col:26> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e140eb8 <col:21> 'struct domain_device *' lvalue ParmVar 0x12e128648 'dev' 'struct domain_device *'     | `-RecoveryExpr 0x12e140f60 <col:32> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e140fd0 <line:10:2, col:9>       `-IntegerLiteral 0x12e140fb0 <col:9> 'int' 0 ","20507":"`-FunctionDecl 0x12b928200  line:1:10 invalid CloneUser 'void (const int)'   |-ParmVarDecl 0x12b9280f0 <col:20, <invalid sloc>> col:33 invalid 'const int'   `-CompoundStmt 0x12b942f70 <col:42, line:39:5>     |-IfStmt 0x12b942498 <line:2:9, line:6:9>     | |-UnaryOperator 0x12b942158 <line:2:13, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12b942138 <col:14, col:33> '<dependent type>' contains-errors     | |   `-RecoveryExpr 0x12b942110 <col:14, col:25> '<dependent type>' contains-errors lvalue     | |     `-CallExpr 0x12b928478 <col:14, col:22> 'int'     | |       `-ImplicitCastExpr 0x12b928460 <col:14> 'int (*)()' <FunctionToPointerDecay>     | |         `-DeclRefExpr 0x12b928410 <col:14> 'int ()' Function 0x12b928358 'GetUser' 'int ()'     | `-CompoundStmt 0x12b942478 <col:36, line:6:9>     |   |-CallExpr 0x12b942440 <line:3:13, line:4:27> 'int'     |   | |-ImplicitCastExpr 0x12b942428 <line:3:13> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12b942250 <col:13> 'int ()' Function 0x12b942198 'PutModule' 'int ()'     |   | `-CallExpr 0x12b9423e8 <line:4:17, col:26> 'int'     |   |   |-ImplicitCastExpr 0x12b9423d0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12b942350 <col:17> 'int ()' Function 0x12b942298 't_s' 'int ()'     |   |   `-ImplicitCastExpr 0x12b942410 <col:21> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x12b9423b0 <col:21> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12b942468 <line:5:13>     |-DeclStmt 0x12b9425e0 <line:8:9, line:9:36>     | `-VarDecl 0x12b9424d0 <line:8:9, col:23> col:23 referenced invalid sOldUsername 'const int'     |-IfStmt 0x12b942910 <line:11:9, line:14:9>     | |-BinaryOperator 0x12b9427c8 <line:11:13, col:56> 'int' contains-errors '||'     | | |-CallExpr 0x12b942660 <col:13, col:32> '<dependent type>' contains-errors     | | | `-CXXDependentScopeMemberExpr 0x12b942618 <col:13, col:26> '<dependent type>' contains-errors lvalue .empty     | | |   `-RecoveryExpr 0x12b9425f8 <col:13> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12b9427a8 <col:37, col:56> '<dependent type>' contains-errors     | |   `-CXXDependentScopeMemberExpr 0x12b942760 <col:37, col:50> '<dependent type>' contains-errors lvalue .empty     | |     `-RecoveryExpr 0x12b942740 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b9428f0 <col:59, line:14:9>     |   |-CallExpr 0x12b9428b8 <line:12:13, col:33> 'int'     |   | |-ImplicitCastExpr 0x12b9428a0 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12b9427e8 <col:13> 'int ()' Function 0x12b942198 'PutModule' 'int ()'     |   | `-CallExpr 0x12b942860 <col:23, col:32> 'int'     |   |   |-ImplicitCastExpr 0x12b942848 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12b942808 <col:23> 'int ()' Function 0x12b942298 't_s' 'int ()'     |   |   `-ImplicitCastExpr 0x12b942888 <col:27> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x12b942828 <col:27> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12b9428e0 <line:13:13>     |-IfStmt 0x12b942c30 <line:18:9, line:21:9>     | |-UnaryOperator 0x12b9429e0 <line:18:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12b9429c8 <col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12b9429a8 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b942c10 <col:24, line:21:9>     |   |-CallExpr 0x12b942bd8 <line:19:13, col:47> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b9429f8 <col:13> 'int ()' Function 0x12b942198 'PutModule' 'int ()'     |   | `-CallExpr 0x12b942bb0 <col:23, col:46> '<dependent type>' contains-errors     |   |   |-CallExpr 0x12b942b50 <col:23, col:32> 'int'     |   |   | |-ImplicitCastExpr 0x12b942b38 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x12b942af8 <col:23> 'int ()' Function 0x12b942a40 't_f' 'int ()'     |   |   | `-ImplicitCastExpr 0x12b942b78 <col:27> 'char *' <ArrayToPointerDecay>     |   |   |   `-StringLiteral 0x12b942b18 <col:27> 'char[4]' lvalue \"STR\"     |   |   `-RecoveryExpr 0x12b942b90 <col:34> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12b942c00 <line:20:13>     |-IfStmt 0x12b942d68 <line:25:9, line:29:9>     | |-RecoveryExpr 0x12b942c68 <line:25:13, col:47> '_Bool' contains-errors     | `-CompoundStmt 0x12b942d50 <col:50, line:29:9>     |   `-ReturnStmt 0x12b942d40 <line:28:13>     |-IfStmt 0x12b942e88 <line:31:9, line:35:9>     | |-RecoveryExpr 0x12b942d88 <line:31:13, col:50> '_Bool' contains-errors     | `-CompoundStmt 0x12b942e70 <col:53, line:35:9>     |   `-ReturnStmt 0x12b942e60 <line:34:13>     `-ReturnStmt 0x12b942f60 <line:38:9> ","20788":"`-FunctionDecl 0x128843738  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x128843838 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1288438a0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x128843908 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1288437e0 <<invalid sloc>> Implicit 900 ","20272":"`-FunctionDecl 0x1500274d0  line:1:6 invalid upstream_timeoutcb 'void (struct ev_loop *, int *, int)'   |-ParmVarDecl 0x15000e248 <col:25, col:41> col:41 loop 'struct ev_loop *'   |-ParmVarDecl 0x15000e318 <col:47, col:57> col:57 invalid w 'int *'   |-ParmVarDecl 0x15000e398 <col:60, col:64> col:64 used revents 'int'   `-CompoundStmt 0x1500280e0 <col:73, line:16:1>     |-DeclStmt 0x1500276e8 <line:2:3, col:55>     | `-VarDecl 0x1500275a8 <col:3, col:8> col:8 used downstream 'int' auto     |-DeclStmt 0x150027800 <line:3:3, col:45>     | `-VarDecl 0x150027718 <col:3, col:44> col:8 used upstream 'int' auto cinit     |   `-CallExpr 0x1500277e0 <col:19, col:44> '<dependent type>' contains-errors     |     `-RecoveryExpr 0x1500277b8 <col:19, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x150027780 <col:19> 'int' lvalue Var 0x1500275a8 'downstream' 'int'     |-DeclStmt 0x150027950 <line:5:3, col:42>     | `-VarDecl 0x150027830 <col:3, col:8> col:8 used which 'int' auto     |-IfStmt 0x150027f18 <line:7:3, line:10:3>     | |-CallExpr 0x150027b40 <line:7:7, col:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x150027ac0 <col:7> 'int ()' Function 0x150027a08 'LOG_ENABLED' 'int ()'     | | `-RecoveryExpr 0x150027b20 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x150027f00 <col:26, line:10:3>     |   `-BinaryOperator 0x150027ee0 <line:8:5, line:9:71> '<dependent type>' contains-errors '<<'     |     |-BinaryOperator 0x150027ec0 <line:8:5, line:9:62> '<dependent type>' contains-errors '<<'     |     | |-BinaryOperator 0x150027ea0 <line:8:5, line:9:57> '<dependent type>' contains-errors '<<'     |     | | |-BinaryOperator 0x150027e80 <line:8:5, col:31> '<dependent type>' contains-errors '<<'     |     | | | |-CallExpr 0x150027e50 <col:5, col:26> '<dependent type>' contains-errors     |     | | | | |-DeclRefExpr 0x150027c48 <col:5> 'int ()' Function 0x150027b90 'DLOG' 'int ()'     |     | | | | |-RecoveryExpr 0x150027e30 <col:10> '<dependent type>' contains-errors lvalue     |     | | | | `-DeclRefExpr 0x150027c80 <col:16> 'int' lvalue Var 0x1500275a8 'downstream' 'int'     |     | | | `-StringLiteral 0x150027cd0 <col:31> 'char[4]' lvalue \"STR\"     |     | | `-CallExpr 0x150027d70 <line:9:31, col:57> '<dependent type>' contains-errors     |     | |   `-RecoveryExpr 0x150027d48 <col:31, col:43> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x150027d10 <col:31> 'int' lvalue Var 0x1500275a8 'downstream' 'int'     |     | `-StringLiteral 0x150027db0 <col:62> 'char[4]' lvalue \"STR\"     |     `-DeclRefExpr 0x150027df0 <col:71> 'int' lvalue Var 0x150027830 'which' 'int'     |-CallExpr 0x150027f98 <line:12:3, col:39> '<dependent type>' contains-errors     | `-RecoveryExpr 0x150027f70 <col:3, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x150027f38 <col:3> 'int' lvalue Var 0x1500275a8 'downstream' 'int'     |-CallExpr 0x150028018 <line:13:3, col:39> '<dependent type>' contains-errors     | `-RecoveryExpr 0x150027ff0 <col:3, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x150027fb8 <col:3> 'int' lvalue Var 0x1500275a8 'downstream' 'int'     `-CallExpr 0x1500280b8 <line:15:3, col:34> '<dependent type>' contains-errors       |-RecoveryExpr 0x150028070 <col:3, col:13> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x150028038 <col:3> 'int' contains-errors lvalue Var 0x150027718 'upstream' 'int'       `-DeclRefExpr 0x150028098 <col:24> 'int' lvalue Var 0x1500275a8 'downstream' 'int' ","20288":"`-FunctionDecl 0x151141800  line:1:6 invalid iov_iter_advance 'void (struct iov_iter *, int)'   |-ParmVarDecl 0x151128648 <col:23, col:40> col:40 used i 'struct iov_iter *'   |-ParmVarDecl 0x1511286e0 <col:43, col:50> col:50 referenced invalid bytes 'int'   `-CompoundStmt 0x15180a180 <line:2:1, line:29:1>     |-CallExpr 0x151141ad0 <line:3:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151141a10 <col:2> 'int ()' Function 0x151141958 'BUG_ON' 'int ()'     | `-BinaryOperator 0x151141ab0 <col:9, col:20> 'int' contains-errors '<'     |   |-RecoveryExpr 0x151141a68 <col:9, col:12> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x151141a30 <col:9> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'     |   `-RecoveryExpr 0x151141a90 <col:20> '<dependent type>' contains-errors lvalue     `-IfStmt 0x15180a150 <line:5:2, line:28:2> has_else       |-CallExpr 0x151141c98 <line:5:6, col:28> '<dependent type>' contains-errors       | |-DeclRefExpr 0x151141bd8 <col:6> 'int ()' Function 0x151141b20 'likely' 'int ()'       | `-BinaryOperator 0x151141c78 <col:13, col:27> 'int' contains-errors '=='       |   |-RecoveryExpr 0x151141c30 <col:13, col:16> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x151141bf8 <col:13> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'       |   `-IntegerLiteral 0x151141c58 <col:27> 'int' 1       |-CompoundStmt 0x151141e20 <col:31, line:8:2>       | |-CompoundAssignOperator 0x151141d40 <line:6:3, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       | | |-RecoveryExpr 0x151141cf8 <col:3, col:6> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x151141cc0 <col:3> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'       | | `-RecoveryExpr 0x151141d20 <col:20> '<dependent type>' contains-errors lvalue       | `-CompoundAssignOperator 0x151141df0 <line:7:3, col:15> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |   |-RecoveryExpr 0x151141da8 <col:3, col:6> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x151141d70 <col:3> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'       |   `-RecoveryExpr 0x151141dd0 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15180a128 <line:8:9, line:28:2>         |-DeclStmt 0x151142088 <line:9:3, col:35>         | |-RecordDecl 0x151141e40 <col:9, col:16> col:16 struct iovec         | `-VarDecl 0x151141fa8 <col:3, col:32> col:23 used iov 'const struct iovec *' cinit         |   `-RecoveryExpr 0x151142048 <col:29, col:32> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x151142010 <col:29> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'         |-WhileStmt 0x15180a008 <line:13:3, line:25:3>         | |-BinaryOperator 0x1511423a8 <line:13:10, col:53> 'int' contains-errors '||'         | | |-RecoveryExpr 0x1511420b8 <col:10> '<dependent type>' contains-errors lvalue         | | `-CallExpr 0x151142380 <col:19, col:53> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x1511421b8 <col:19> 'int ()' Function 0x151142100 'unlikely' 'int ()'         | |   `-BinaryOperator 0x151142360 <col:28, col:48> 'int' contains-errors '&&'         | |     |-UnaryOperator 0x151142348 <col:28, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow         | |     | `-ImplicitCastExpr 0x151142330 <col:29, col:34> '<dependent type>' contains-errors <LValueToRValue>         | |     |   `-RecoveryExpr 0x151142210 <col:29, col:34> '<dependent type>' contains-errors lvalue         | |     |     `-DeclRefExpr 0x1511421d8 <col:29> 'const struct iovec *' contains-errors lvalue Var 0x151141fa8 'iov' 'const struct iovec *'         | |     `-RecoveryExpr 0x1511422a0 <col:45, col:48> '<dependent type>' contains-errors lvalue         | |       `-DeclRefExpr 0x151142268 <col:45> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'         | `-CompoundStmt 0x151809fc8 <col:56, line:25:3>         |   |-DeclStmt 0x151142448 <line:14:4, col:12>         |   | `-VarDecl 0x1511423e0 <col:4, col:8> col:8 used copy 'int'         |   |-BinaryOperator 0x1511426f8 <line:16:4, col:41> 'int' contains-errors '='         |   | |-DeclRefExpr 0x151142460 <col:4> 'int' lvalue Var 0x1511423e0 'copy' 'int'         |   | `-CallExpr 0x1511426c8 <col:11, col:41> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x151142560 <col:11> 'int ()' Function 0x1511424a8 'min' 'int ()'         |   |   |-RecoveryExpr 0x151142580 <col:15> '<dependent type>' contains-errors lvalue         |   |   `-BinaryOperator 0x1511426a8 <col:22, col:37> '<dependent type>' contains-errors '-'         |   |     |-RecoveryExpr 0x1511425d8 <col:22, col:27> '<dependent type>' contains-errors lvalue         |   |     | `-DeclRefExpr 0x1511425a0 <col:22> 'const struct iovec *' contains-errors lvalue Var 0x151141fa8 'iov' 'const struct iovec *'         |   |     `-RecoveryExpr 0x151142688 <col:37> '<dependent type>' contains-errors lvalue         |   |-CallExpr 0x151809d00 <line:17:4, col:39> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x151142718 <col:4> 'int ()' Function 0x151141958 'BUG_ON' 'int ()'         |   | `-BinaryOperator 0x151809ce0 <col:11, col:35> 'int' contains-errors '||'         |   |   |-UnaryOperator 0x151809cc8 <col:11, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow         |   |   | `-ImplicitCastExpr 0x151809cb0 <col:12, col:15> '<dependent type>' contains-errors <LValueToRValue>         |   |   |   `-RecoveryExpr 0x151142770 <col:12, col:15> '<dependent type>' contains-errors lvalue         |   |   |     `-DeclRefExpr 0x151142738 <col:12> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'         |   |   `-BinaryOperator 0x151809c48 <col:24, col:35> 'int' contains-errors '<'         |   |     |-RecoveryExpr 0x151809c00 <col:24, col:27> '<dependent type>' contains-errors lvalue         |   |     | `-DeclRefExpr 0x1511427c8 <col:24> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'         |   |     `-DeclRefExpr 0x151809c28 <col:35> 'int' lvalue Var 0x1511423e0 'copy' 'int'         |   |-CompoundAssignOperator 0x151809da8 <line:18:4, col:16> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |   | |-RecoveryExpr 0x151809d60 <col:4, col:7> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x151809d28 <col:4> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'         |   | `-DeclRefExpr 0x151809d88 <col:16> 'int' lvalue Var 0x1511423e0 'copy' 'int'         |   |-CompoundAssignOperator 0x151809e40 <line:19:4, col:13> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |   | |-RecoveryExpr 0x151809df8 <col:4> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x151809dd8 <col:4> 'int' lvalue ParmVar 0x1511286e0 'bytes' 'int'         |   | `-DeclRefExpr 0x151809e20 <col:13> 'int' lvalue Var 0x1511423e0 'copy' 'int'         |   `-IfStmt 0x151809fa8 <line:21:4, line:24:4>         |     |-RecoveryExpr 0x151809ef0 <line:21:8, col:24> '_Bool' contains-errors         |     `-CompoundStmt 0x151809f90 <col:30, line:24:4>         |       `-RecoveryExpr 0x151809f30 <line:22:5, col:8> '<dependent type>' contains-errors lvalue         |         `-DeclRefExpr 0x151809f10 <col:5> 'const struct iovec *' contains-errors lvalue Var 0x151141fa8 'iov' 'const struct iovec *'         `-BinaryOperator 0x15180a0a8 <line:26:3, col:12> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x15180a060 <col:3, col:6> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x15180a028 <col:3> 'struct iov_iter *' lvalue ParmVar 0x151128648 'i' 'struct iov_iter *'           `-DeclRefExpr 0x15180a088 <col:12> 'const struct iovec *' contains-errors lvalue Var 0x151141fa8 'iov' 'const struct iovec *' ","21020":"`-FunctionDecl 0x140940a00  line:1:1 pci_get_cfgdata32 'int (struct pci_vdev *, int)'   |-ParmVarDecl 0x140928648 <col:19, col:36> col:36 used dev 'struct pci_vdev *'   |-ParmVarDecl 0x1409286c8 <col:41, col:45> col:45 used offset 'int'   `-CompoundStmt 0x140940e58 <line:2:1, line:5:1> ","21190":"`-FunctionDecl 0x13f80e038  line:1:1 invalid CryptRsaDecrypt 'int (int *, int *, int *, int *, const int *)'   |-ParmVarDecl 0x13f80dd28 <line:2:3, col:24> col:24 invalid dOut 'int *'   |-ParmVarDecl 0x13f80dda8 <line:3:3, col:24> col:24 invalid cIn 'int *'   |-ParmVarDecl 0x13f80de28 <line:4:3, col:24> col:24 invalid key 'int *'   |-ParmVarDecl 0x13f80dea8 <line:5:3, col:24> col:24 invalid scheme 'int *'   |-ParmVarDecl 0x13f80df28 <line:6:3, col:24> col:24 invalid label 'const int *'   `-CompoundStmt 0x13f827ff8 <line:8:1, line:42:1>     |-CallExpr 0x148008300 <line:11:5, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f80e260 <col:5> 'int ()' Function 0x13f80e1a8 'pAssert' 'int ()'     | `-BinaryOperator 0x1480082e0 <col:13, col:51> 'int' contains-errors '&&'     |   |-BinaryOperator 0x148008280 <col:13, col:36> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x148008220 <col:13, col:20> 'int' contains-errors '!='     |   | | |-RecoveryExpr 0x13f80e280 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x148008200 <col:20> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x148008260 <col:28, col:36> 'int' contains-errors '!='     |   |   |-RecoveryExpr 0x13f80e2d8 <col:28> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x148008240 <col:36> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1480082c0 <col:44, col:51> 'int' contains-errors '!='     |     |-RecoveryExpr 0x13f80e350 <col:44> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1480082a0 <col:51> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1480086c0 <line:13:5, line:14:26>     | |-BinaryOperator 0x148008518 <line:13:8, col:50> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x148008348 <col:8, col:13> '<dependent type>' contains-errors lvalue ->size     | | | `-RecoveryExpr 0x148008328 <col:8> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1480084d0 <col:21, col:50> '<dependent type>' contains-errors lvalue .size     | |   `-CXXDependentScopeMemberExpr 0x148008488 <col:21, col:48> '<dependent type>' contains-errors lvalue .t     | |     `-CXXDependentScopeMemberExpr 0x148008440 <col:21, col:44> '<dependent type>' contains-errors lvalue .rsa     | |       `-CXXDependentScopeMemberExpr 0x1480083f8 <col:21, col:37> '<dependent type>' contains-errors lvalue .unique     | |         `-CXXDependentScopeMemberExpr 0x1480083b0 <col:21, col:26> '<dependent type>' contains-errors lvalue ->publicArea     | |           `-RecoveryExpr 0x148008390 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x148008698 <line:14:2, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148008618 <col:2> 'int ()' Function 0x148008560 'ERROR_RETURN' 'int ()'     |   `-RecoveryExpr 0x148008678 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x148008848 <line:15:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1480087c0 <col:5> 'int ()' Function 0x148008708 'TEST' 'int ()'     | `-CXXDependentScopeMemberExpr 0x148008800 <col:10, col:18> '<dependent type>' contains-errors lvalue ->scheme     |   `-RecoveryExpr 0x1480087e0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f827f60 <line:19:5, line:39:2>     | |-BinaryOperator 0x148008a70 <line:19:8, col:18> 'int' contains-errors '=='     | | |-RecoveryExpr 0x148008a30 <col:8> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x148008a50 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f827f48 <line:20:2, line:39:2>     |   `-SwitchStmt 0x148008b10 <line:22:6, line:38:3>     |     |-ImplicitCastExpr 0x148008af8 <line:22:13, col:21> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x148008ab0 <col:13, col:21> '<dependent type>' contains-errors lvalue ->scheme     |     |   `-RecoveryExpr 0x148008a90 <col:13> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13f827f00 <line:23:3, line:38:3>     |       |-IfStmt 0x148008c88 <line:25:7, line:26:11>     |       | |-BinaryOperator 0x148008c20 <line:25:10, col:28> 'int' contains-errors '<'     |       | | |-CXXDependentScopeMemberExpr 0x148008b70 <col:10, col:16> '<dependent type>' contains-errors lvalue ->size     |       | | | `-RecoveryExpr 0x148008b50 <col:10> '<dependent type>' contains-errors lvalue     |       | | `-CXXDependentScopeMemberExpr 0x148008bd8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->size     |       | |   `-RecoveryExpr 0x148008bb8 <col:23> '<dependent type>' contains-errors lvalue     |       | `-ReturnStmt 0x148008c78 <line:26:4, col:11>     |       |   `-RecoveryExpr 0x148008c58 <col:11> '<dependent type>' contains-errors lvalue     |       |-CallExpr 0x148008e50 <line:27:7, col:41> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x148008d88 <col:7> 'int ()' Function 0x148008cd0 'MemoryCopy2B' 'int ()'     |       | |-RecoveryExpr 0x148008da8 <col:20> '<dependent type>' contains-errors lvalue     |       | |-RecoveryExpr 0x148008dc8 <col:26> '<dependent type>' contains-errors lvalue     |       | `-CXXDependentScopeMemberExpr 0x148008e08 <col:31, col:37> '<dependent type>' contains-errors lvalue ->size     |       |   `-RecoveryExpr 0x148008de8 <col:31> '<dependent type>' contains-errors lvalue     |       |-BreakStmt 0x148008e88 <line:28:7>     |       |-BreakStmt 0x148009000 <line:31:7>     |       |-BreakStmt 0x13f827ec8 <line:34:7>     |       |-DefaultStmt 0x13f827ed8 <line:35:5, col:12>     |       | `-NullStmt 0x13f827ed0 <col:12>     |       `-BreakStmt 0x13f827ef8 <line:37:7>     `-LabelStmt 0x13f827fd8 <line:40:2, col:6> 'Exit'       `-NullStmt 0x13f827f80 <col:6> ","21240":"`-FunctionDecl 0x15900de88  line:1:1 invalid xmlParserInputBufferCreateFile 'int (int *, int)'   |-ParmVarDecl 0x15900dd28 <col:32, col:38> col:38 invalid file 'int *'   |-ParmVarDecl 0x15900dda8 <col:44, col:60> col:60 invalid enc 'int'   `-CompoundStmt 0x158922d18 <col:65, line:17:1>     |-IfStmt 0x15900e1b8 <line:4:5, line:5:35>     | |-BinaryOperator 0x15900dfb8 <line:4:9, col:40> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15900df98 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x15900df58 <col:40> 'int' 0     | `-CallExpr 0x15900e198 <line:5:2, col:35> 'int'     |   `-ImplicitCastExpr 0x15900e180 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x15900e130 <col:2> 'int ()' Function 0x15900e078 'xmlRegisterDefaultInputCallbacks' 'int ()'     `-IfStmt 0x158922ce0 <line:10:5, line:14:5>       |-BinaryOperator 0x158922c60 <line:10:9, col:16> 'int' contains-errors '!='       | |-RecoveryExpr 0x158922c20 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x158922c40 <col:16> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x158922cd0 <col:22, line:14:5> ","21046":"`-FunctionDecl 0x1578293f0  col:2 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x1578294f0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x157829498 <<invalid sloc>> Implicit 903   `-FormatAttr 0x157829560 <col:2> Implicit printf 1 2 ","21227":"`-FunctionDecl 0x132140a00  line:2:5 __dev_change_flags 'int (struct net_device *, unsigned int)'   |-ParmVarDecl 0x132128648 <col:24, col:43> col:43 used dev 'struct net_device *'   |-ParmVarDecl 0x1321286c8 <col:48, col:61> col:61 used flags 'unsigned int'   `-CompoundStmt 0x132143c08 <line:3:1, line:53:13>     |-DeclStmt 0x132140be0 <line:4:2, col:37>     | `-VarDecl 0x132140b18 <col:2, col:32> col:15 used old_flags 'unsigned int' cinit     |   `-RecoveryExpr 0x132140bb8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x132140b80 <col:27> 'struct net_device *' lvalue ParmVar 0x132128648 'dev' 'struct net_device *'     |-DeclStmt 0x132140c78 <line:5:2, col:9>     | `-VarDecl 0x132140c10 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x132140e28 <line:7:2, col:14> 'int'     | `-ImplicitCastExpr 0x132140e10 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x132140dc0 <col:2> 'int ()' Function 0x132140d08 'ASSERT_RTNL' 'int ()'     |-IfStmt 0x132141510 <line:19:2, line:20:41>     | |-BinaryOperator 0x132141338 <line:19:6, col:28> '<dependent type>' contains-errors '&'     | | |-ParenExpr 0x1321412f8 <col:6, col:24> 'unsigned int' contains-errors     | | | `-BinaryOperator 0x1321412d8 <col:7, col:19> 'unsigned int' contains-errors '^'     | | |   |-ImplicitCastExpr 0x1321412a8 <col:7> 'unsigned int' contains-errors <LValueToRValue>     | | |   | `-DeclRefExpr 0x132141150 <col:7> 'unsigned int' contains-errors lvalue Var 0x132140b18 'old_flags' 'unsigned int'     | | |   `-ImplicitCastExpr 0x1321412c0 <col:19> 'unsigned int' <LValueToRValue>     | | |     `-DeclRefExpr 0x132141170 <col:19> 'unsigned int' lvalue ParmVar 0x1321286c8 'flags' 'unsigned int'     | | `-RecoveryExpr 0x132141318 <col:28> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1321414e0 <line:20:3, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x132141438 <col:3> 'int ()' Function 0x132141380 'dev_change_rx_flags' 'int ()'     |   |-DeclRefExpr 0x132141458 <col:23> 'struct net_device *' lvalue ParmVar 0x132128648 'dev' 'struct net_device *'     |   `-RecoveryExpr 0x1321414c0 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x132141668 <line:22:2, col:21> 'int'     | |-ImplicitCastExpr 0x132141650 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x132141610 <col:2> 'int ()' Function 0x132141558 'dev_set_rx_mode' 'int ()'     | `-ImplicitCastExpr 0x132141690 <col:18> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x132141630 <col:18> 'struct net_device *' lvalue ParmVar 0x132128648 'dev' 'struct net_device *'     |-BinaryOperator 0x1321416e8 <line:26:2, col:8> 'int' '='     | |-DeclRefExpr 0x1321416a8 <col:2> 'int' lvalue Var 0x132140c10 'ret' 'int'     | `-IntegerLiteral 0x1321416c8 <col:8> 'int' 0     |-IfStmt 0x132143150 <line:27:2, line:32:2>     | |-BinaryOperator 0x1321418f0 <line:27:6, col:28> '<dependent type>' contains-errors '&'     | | |-ParenExpr 0x1321418b0 <col:6, col:24> 'unsigned int' contains-errors     | | | `-BinaryOperator 0x132141890 <col:7, col:19> 'unsigned int' contains-errors '^'     | | |   |-ImplicitCastExpr 0x132141860 <col:7> 'unsigned int' contains-errors <LValueToRValue>     | | |   | `-DeclRefExpr 0x132141708 <col:7> 'unsigned int' contains-errors lvalue Var 0x132140b18 'old_flags' 'unsigned int'     | | |   `-ImplicitCastExpr 0x132141878 <col:19> 'unsigned int' <LValueToRValue>     | | |     `-DeclRefExpr 0x132141728 <col:19> 'unsigned int' lvalue ParmVar 0x1321286c8 'flags' 'unsigned int'     | | `-RecoveryExpr 0x1321418d0 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x132143138 <col:36, line:32:2>     |   `-IfStmt 0x132143108 <line:28:3, line:31:24> has_else     |     |-RecoveryExpr 0x132141930 <line:28:7, col:19> '_Bool' contains-errors     |     |-CallExpr 0x132142f10 <line:29:4, col:19> 'int'     |     | |-ImplicitCastExpr 0x132142ef8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x132142eb8 <col:4> 'int ()' Function 0x132142e00 '__dev_close' 'int ()'     |     | `-ImplicitCastExpr 0x132142f38 <col:16> 'struct net_device *' <LValueToRValue>     |     |   `-DeclRefExpr 0x132142ed8 <col:16> 'struct net_device *' lvalue ParmVar 0x132128648 'dev' 'struct net_device *'     |     `-BinaryOperator 0x1321430e8 <line:31:4, col:24> 'int' '='     |       |-DeclRefExpr 0x132142f50 <col:4> 'int' lvalue Var 0x132140c10 'ret' 'int'     |       `-CallExpr 0x1321430a8 <col:10, col:24> 'int'     |         |-ImplicitCastExpr 0x132143090 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x132143050 <col:10> 'int ()' Function 0x132142f98 '__dev_open' 'int ()'     |         `-ImplicitCastExpr 0x1321430d0 <col:21> 'struct net_device *' <LValueToRValue>     |           `-DeclRefExpr 0x132143070 <col:21> 'struct net_device *' lvalue ParmVar 0x132128648 'dev' 'struct net_device *'     |-IfStmt 0x1321437d8 <line:34:2, line:43:2>     | |-RecoveryExpr 0x132143230 <line:34:6, col:30> '_Bool' contains-errors     | `-CompoundStmt 0x1321437b0 <col:43, line:43:2>     |   |-DeclStmt 0x132143348 <line:35:3, col:43>     |   | `-VarDecl 0x132143268 <col:3, col:7> col:7 used inc 'int'     |   |-DeclStmt 0x132143440 <line:36:3, col:38>     |   | `-VarDecl 0x132143378 <col:3, col:33> col:16 used old_flags 'unsigned int' cinit     |   |   `-RecoveryExpr 0x132143418 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1321433e0 <col:28> 'struct net_device *' lvalue ParmVar 0x132128648 'dev' 'struct net_device *'     |   `-IfStmt 0x132143790 <line:40:3, line:42:24>     |     |-RecoveryExpr 0x132143618 <line:40:7, col:49> '_Bool' contains-errors     |     `-IfStmt 0x132143770 <line:41:4, line:42:24>     |       |-BinaryOperator 0x1321436b8 <line:41:8, col:22> 'int' contains-errors '!='     |       | |-RecoveryExpr 0x132143670 <col:8, col:13> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x132143638 <col:8> 'struct net_device *' lvalue ParmVar 0x132128648 'dev' 'struct net_device *'     |       | `-DeclRefExpr 0x132143698 <col:22> 'unsigned int' contains-errors lvalue Var 0x132143378 'old_flags' 'unsigned int'     |       `-CallExpr 0x132143730 <line:42:5, col:24> 'int'     |         |-ImplicitCastExpr 0x132143718 <col:5> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x1321436d8 <col:5> 'int ()' Function 0x132141558 'dev_set_rx_mode' 'int ()'     |         `-ImplicitCastExpr 0x132143758 <col:21> 'struct net_device *' <LValueToRValue>     |           `-DeclRefExpr 0x1321436f8 <col:21> 'struct net_device *' lvalue ParmVar 0x132128648 'dev' 'struct net_device *'     |-IfStmt 0x132143ba0 <line:46:2, line:51:2>     | |-RecoveryExpr 0x1321438b8 <line:46:6, col:30> '_Bool' contains-errors     | `-CompoundStmt 0x132143b88 <col:44, line:51:2>     |   `-DeclStmt 0x1321439d0 <line:47:3, col:44>     |     `-VarDecl 0x1321438f0 <col:3, col:7> col:7 used inc 'int'     `-ReturnStmt 0x132143bf8 <line:53:2, col:9>       `-ImplicitCastExpr 0x132143be0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x132143bc0 <col:9> 'int' lvalue Var 0x132140c10 'ret' 'int' ","20984":"`-FunctionDecl 0x13e940b98  line:1:5 do_set_thread_area 'int (struct task_struct *, int, struct user_desc)'   |-ParmVarDecl 0x13e928648 <col:24, col:44> col:44 used p 'struct task_struct *'   |-ParmVarDecl 0x13e9286c8 <col:47, col:51> col:51 used idx 'int'   |-ParmVarDecl 0x13e940a58 <line:2:10, col:27> col:27 invalid __user 'struct user_desc'   `-CompoundStmt 0x13f009040 <line:4:1, line:28:1>     |-DeclStmt 0x13e940d58 <line:5:2, col:23>     | `-VarDecl 0x13e940cf0 <col:2, col:19> col:19 referenced invalid info 'struct user_desc'     |-IfStmt 0x13e9410c8 <line:7:2, line:8:11>     | |-CallExpr 0x13e940fe8 <line:7:6, col:48> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13e940ea0 <col:6> 'int ()' Function 0x13e940de8 'copy_from_user' 'int ()'     | | |-UnaryOperator 0x13e940ee0 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x13e940ec0 <col:22> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x13e940fc8 <col:28> '<dependent type>' contains-errors lvalue     | | `-UnaryExprOrTypeTraitExpr 0x13e940f50 <col:36, col:47> 'unsigned long' contains-errors sizeof     | |   `-ParenExpr 0x13e940f30 <col:42, col:47> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x13e940f10 <col:43> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13e9410b8 <line:8:3, col:11>     |   `-UnaryOperator 0x13e9410a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13e941088 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13e941068 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e941220 <line:10:2, line:11:14>     | |-BinaryOperator 0x13e941158 <line:10:6, col:14> 'int' '=='     | | |-ImplicitCastExpr 0x13e941140 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13e9410e8 <col:6> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     | | `-UnaryOperator 0x13e941128 <col:13, col:14> 'int' prefix '-'     | |   `-IntegerLiteral 0x13e941108 <col:14> 'int' 1     | `-BinaryOperator 0x13e941200 <line:11:3, col:14> 'int' contains-errors '='     |   |-DeclRefExpr 0x13e941178 <col:3> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     |   `-CXXDependentScopeMemberExpr 0x13e9411b8 <col:9, col:14> '<dependent type>' contains-errors lvalue .entry_number     |     `-RecoveryExpr 0x13e941198 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e9419d0 <line:14:2, line:20:2>     | |-BinaryOperator 0x13e941398 <line:14:6, col:19> 'int' contains-errors '&&'     | | |-BinaryOperator 0x13e941358 <col:6, col:14> 'int' '=='     | | | |-ImplicitCastExpr 0x13e941340 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x13e941240 <col:6> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     | | | `-UnaryOperator 0x13e941280 <col:13, col:14> 'int' prefix '-'     | | |   `-IntegerLiteral 0x13e941260 <col:14> 'int' 1     | | `-RecoveryExpr 0x13e941378 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e9419a8 <col:33, line:20:2>     |   |-BinaryOperator 0x13e941548 <line:15:3, col:22> 'int' '='     |   | |-DeclRefExpr 0x13e9413b8 <col:3> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     |   | `-CallExpr 0x13e941528 <col:9, col:22> 'int'     |   |   `-ImplicitCastExpr 0x13e941510 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x13e9414b8 <col:9> 'int ()' Function 0x13e941400 'get_free_idx' 'int ()'     |   |-IfStmt 0x13e941628 <line:16:3, line:17:11>     |   | |-BinaryOperator 0x13e9415c0 <line:16:7, col:13> 'int' '<'     |   | | |-ImplicitCastExpr 0x13e9415a8 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13e941568 <col:7> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     |   | | `-IntegerLiteral 0x13e941588 <col:13> 'int' 0     |   | `-ReturnStmt 0x13e941618 <line:17:4, col:11>     |   |   `-ImplicitCastExpr 0x13e941600 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x13e9415e0 <col:11> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     |   `-IfStmt 0x13e941988 <line:18:3, line:19:12>     |     |-CallExpr 0x13e9418b0 <line:18:7, col:42> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x13e941728 <col:7> 'int ()' Function 0x13e941670 'put_user' 'int ()'     |     | |-DeclRefExpr 0x13e941748 <col:16> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     |     | `-UnaryOperator 0x13e941898 <col:21, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-CXXDependentScopeMemberExpr 0x13e941850 <col:22, col:30> '<dependent type>' contains-errors lvalue ->entry_number     |     |     `-RecoveryExpr 0x13e941830 <col:22> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x13e941978 <line:19:4, col:12>     |       `-UnaryOperator 0x13e941960 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x13e941948 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x13e941928 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f008e18 <line:22:2, line:23:11>     | |-BinaryOperator 0x13f008d50 <line:22:6, col:39> 'int' contains-errors '||'     | | |-BinaryOperator 0x13f008cf0 <col:6, col:12> 'int' contains-errors '<'     | | | |-DeclRefExpr 0x13f008c00 <col:6> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     | | | `-RecoveryExpr 0x13f008cd0 <col:12> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13f008d30 <col:33, col:39> 'int' contains-errors '>'     | |   |-DeclRefExpr 0x13f008c58 <col:33> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     | |   `-RecoveryExpr 0x13f008d10 <col:39> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13f008e08 <line:23:3, col:11>     |   `-UnaryOperator 0x13f008df0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13f008dd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13f008db8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f008fd0 <line:25:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f008f18 <col:2> 'int ()' Function 0x13f008e60 'set_tls_desc' 'int ()'     | |-DeclRefExpr 0x13f008f38 <col:15> 'struct task_struct *' lvalue ParmVar 0x13e928648 'p' 'struct task_struct *'     | |-DeclRefExpr 0x13f008f58 <col:18> 'int' lvalue ParmVar 0x13e9286c8 'idx' 'int'     | |-UnaryOperator 0x13f008f98 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13f008f78 <col:24> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13f008fb0 <col:30> 'int' 1     `-ReturnStmt 0x13f009030 <line:27:2, col:9>       `-IntegerLiteral 0x13f009010 <col:9> 'int' 0 ","20624":"`-FunctionDecl 0x12280dec0  line:1:13 server 'void (int, unsigned int, const char *)' static   |-ParmVarDecl 0x12280dcd8 <col:20, col:24> col:24 used fd 'int'   |-ParmVarDecl 0x12280dd58 <col:28, col:37> col:37 used rounds 'unsigned int'   |-ParmVarDecl 0x12280ddd8 <col:45, col:57> col:57 used prio 'const char *'   `-CompoundStmt 0x12380a5c8 <line:2:1, line:68:1>     |-DeclStmt 0x12280e048 <line:3:2, col:12>     | `-VarDecl 0x12280dfe0 <col:2, col:6> col:6 used retval 'int'     |-CallExpr 0x12280e1f8 <line:8:2, col:17> 'int'     | `-ImplicitCastExpr 0x12280e1e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12280e190 <col:2> 'int ()' Function 0x12280e0d8 'virt_time_init' 'int ()'     |-IfStmt 0x122827620 <line:10:2, line:12:2>     | |-BinaryOperator 0x122827428 <line:10:6, col:64> 'int' contains-errors '<'     | | |-CallExpr 0x122827400 <col:6, col:60> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12280e2f8 <col:6> 'int ()' Function 0x12280e240 'gnutls_session_ticket_key_generate' 'int ()'     | | | `-UnaryOperator 0x12280e3d0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x12280e3b0 <col:42> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12280e370 <col:64> 'int' 0     | `-CompoundStmt 0x122827608 <col:67, line:12:2>     |   `-CallExpr 0x1228275c8 <line:11:3, col:13> 'int'     |     |-ImplicitCastExpr 0x1228275b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x122827528 <col:3> 'int ()' Function 0x122827470 'fail' 'int ()'     |     `-ImplicitCastExpr 0x1228275f0 <col:8> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x122827590 <col:8> 'char[4]' lvalue \"STR\"     `-ForStmt 0x12380a3d0 <line:14:2, line:60:2>       |-DeclStmt 0x1228276f8 <line:14:7, col:21>       | `-VarDecl 0x122827658 <col:7, col:20> col:16 used i 'unsigned int' cinit       |   `-ImplicitCastExpr 0x1228276e0 <col:20> 'unsigned int' <IntegralCast>       |     `-IntegerLiteral 0x1228276c0 <col:20> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x122827780 <col:23, col:27> 'int' '<'       | |-ImplicitCastExpr 0x122827750 <col:23> 'unsigned int' <LValueToRValue>       | | `-DeclRefExpr 0x122827710 <col:23> 'unsigned int' lvalue Var 0x122827658 'i' 'unsigned int'       | `-ImplicitCastExpr 0x122827768 <col:27> 'unsigned int' <LValueToRValue>       |   `-DeclRefExpr 0x122827730 <col:27> 'unsigned int' lvalue ParmVar 0x12280dd58 'rounds' 'unsigned int'       |-UnaryOperator 0x1228277c0 <col:35, col:36> 'unsigned int' postfix '++'       | `-DeclRefExpr 0x1228277a0 <col:35> 'unsigned int' lvalue Var 0x122827658 'i' 'unsigned int'       `-CompoundStmt 0x12380a380 <col:40, line:60:2>         |-CallExpr 0x122827b60 <line:15:3, col:49> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1228278b8 <col:3> 'int ()' Function 0x122827800 'assert' 'int ()'         | `-BinaryOperator 0x122827b40 <col:10, col:48> 'int' contains-errors '>='         |   |-CallExpr 0x122827b10 <col:10, col:45> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x1228279b8 <col:10> 'int ()' Function 0x122827900 'gnutls_init' 'int ()'         |   | |-UnaryOperator 0x122827ad8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | | `-RecoveryExpr 0x122827ab8 <col:23> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x122827af0 <col:32> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x122827a50 <col:48> 'int' 0         |-CallExpr 0x122827de8 <line:17:3, col:69> '<dependent type>' contains-errors         | |-DeclRefExpr 0x122827b88 <col:3> 'int ()' Function 0x122827800 'assert' 'int ()'         | `-BinaryOperator 0x122827dc8 <col:10, col:68> 'int' contains-errors '>='         |   |-CallExpr 0x122827da0 <col:10, col:65> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x122827c88 <col:10> 'int ()' Function 0x122827bd0 'gnutls_certificate_allocate_credentials' 'int ()'         |   | `-UnaryOperator 0x122827d88 <col:50, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-RecoveryExpr 0x122827d68 <col:51> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x122827d00 <col:68> 'int' 0         |-BinaryOperator 0x122828110 <line:18:3, line:20:26> 'int' contains-errors '='         | |-DeclRefExpr 0x122827e10 <line:18:3> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         | `-CallExpr 0x1228280d0 <col:12, line:20:26> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x122827f10 <line:18:12> 'int ()' Function 0x122827e58 'gnutls_certificate_set_x509_key_mem' 'int ()'         |   |-RecoveryExpr 0x122828020 <col:48> '<dependent type>' contains-errors lvalue         |   |-UnaryOperator 0x122828060 <line:19:7, col:8> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-RecoveryExpr 0x122828040 <col:8> '<dependent type>' contains-errors lvalue         |   |-UnaryOperator 0x122828098 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-RecoveryExpr 0x122828078 <col:22> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x1228280b0 <line:20:7> '<dependent type>' contains-errors lvalue         |-IfStmt 0x1228283c0 <line:21:3, line:22:39>         | |-BinaryOperator 0x122828188 <line:21:7, col:16> 'int' '<'         | | |-ImplicitCastExpr 0x122828170 <col:7> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x122828130 <col:7> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         | | `-IntegerLiteral 0x122828150 <col:16> 'int' 0         | `-CallExpr 0x122828378 <line:22:4, col:39> 'int'         |   |-ImplicitCastExpr 0x122828360 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x1228281a8 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'         |   |-ImplicitCastExpr 0x1228283a8 <col:9> 'char *' <ArrayToPointerDecay>         |   | `-StringLiteral 0x1228281c8 <col:9> 'char[4]' lvalue \"STR\"         |   `-CallExpr 0x122828320 <col:16, col:38> 'int'         |     |-ImplicitCastExpr 0x122828308 <col:16> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x1228282c8 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'         |     `-ImplicitCastExpr 0x122828348 <col:32> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x1228282e8 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         |-IfStmt 0x123808ef0 <line:32:3, line:34:3>         | |-RecoveryExpr 0x123808d80 <line:32:7, col:17> '_Bool' contains-errors         | `-CompoundStmt 0x123808ed8 <col:35, line:34:3>         |   `-CallExpr 0x123808e90 <line:33:4, col:39> 'int'         |     |-ImplicitCastExpr 0x123808e78 <col:4> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x123808da0 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'         |     |-ImplicitCastExpr 0x123808ec0 <col:9> 'char *' <ArrayToPointerDecay>         |     | `-StringLiteral 0x123808dc0 <col:9> 'char[4]' lvalue \"STR\"         |     `-CallExpr 0x123808e38 <col:16, col:38> 'int'         |       |-ImplicitCastExpr 0x123808e20 <col:16> 'int (*)()' <FunctionToPointerDecay>         |       | `-DeclRefExpr 0x123808de0 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'         |       `-ImplicitCastExpr 0x123808e60 <col:32> 'int' <LValueToRValue>         |         `-DeclRefExpr 0x123808e00 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         |-DoStmt 0x123809440 <line:41:3, line:43:70>         | |-CompoundStmt 0x1238093d0 <line:41:6, line:43:3>         | `-RecoveryExpr 0x123809420 <col:12, col:50> '_Bool' contains-errors         |-IfStmt 0x1238097b8 <line:45:3, line:49:3> has_else         | |-BinaryOperator 0x1238094b8 <line:45:7, col:16> 'int' '<'         | | |-ImplicitCastExpr 0x1238094a0 <col:7> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x123809460 <col:7> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         | | `-IntegerLiteral 0x123809480 <col:16> 'int' 0         | |-CompoundStmt 0x123809610 <col:19, line:47:3>         | | `-CallExpr 0x1238095c8 <line:46:4, col:39> 'int'         | |   |-ImplicitCastExpr 0x1238095b0 <col:4> 'int (*)()' <FunctionToPointerDecay>         | |   | `-DeclRefExpr 0x1238094d8 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'         | |   |-ImplicitCastExpr 0x1238095f8 <col:9> 'char *' <ArrayToPointerDecay>         | |   | `-StringLiteral 0x1238094f8 <col:9> 'char[4]' lvalue \"STR\"         | |   `-CallExpr 0x123809570 <col:16, col:38> 'int'         | |     |-ImplicitCastExpr 0x123809558 <col:16> 'int (*)()' <FunctionToPointerDecay>         | |     | `-DeclRefExpr 0x123809518 <col:16> 'int ()' Function 0x122828210 'gnutls_strerror' 'int ()'         | |     `-ImplicitCastExpr 0x123809598 <col:32> 'int' <LValueToRValue>         | |       `-DeclRefExpr 0x123809538 <col:32> 'int' lvalue Var 0x12280dfe0 'retval' 'int'         | `-CompoundStmt 0x1238097a0 <line:47:10, line:49:3>         |   `-CallExpr 0x123809760 <line:48:4, col:17> 'int'         |     |-ImplicitCastExpr 0x123809748 <col:4> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x123809708 <col:4> 'int ()' Function 0x123809650 'success' 'int ()'         |     `-ImplicitCastExpr 0x123809788 <col:12> 'char *' <ArrayToPointerDecay>         |       `-StringLiteral 0x123809728 <col:12> 'char[4]' lvalue \"STR\"         `-IfStmt 0x12380a050 <line:51:3, line:54:17> has_else           |-RecoveryExpr 0x123809f00 <line:51:7, col:40> '_Bool' contains-errors           |-CallExpr 0x123809f78 <line:52:4, col:14> 'int'           | |-ImplicitCastExpr 0x123809f60 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x123809f20 <col:4> 'int ()' Function 0x122827470 'fail' 'int ()'           | `-ImplicitCastExpr 0x123809fa0 <col:9> 'char *' <ArrayToPointerDecay>           |   `-StringLiteral 0x123809f40 <col:9> 'char[4]' lvalue \"STR\"           `-CallExpr 0x12380a010 <line:54:4, col:17> 'int'             |-ImplicitCastExpr 0x123809ff8 <col:4> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x123809fb8 <col:4> 'int ()' Function 0x123809650 'success' 'int ()'             `-ImplicitCastExpr 0x12380a038 <col:12> 'char *' <ArrayToPointerDecay>               `-StringLiteral 0x123809fd8 <col:12> 'char[4]' lvalue \"STR\" ","20685":"`-FunctionDecl 0x120128258  line:1:1 invalid Panic 'int (const char *, int)'   |-ParmVarDecl 0x1201280d8 <col:7, col:19> col:19 fmtstr 'const char *'   |-ParmVarDecl 0x120128170 <line:2:7, col:15> col:15 invalid args 'int'   `-CompoundStmt 0x120128590 <line:3:1, line:6:1>     `-CallExpr 0x120128560 <line:5:4, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x120128470 <col:4> 'int ()' Function 0x1201283b8 'sLog' 'int ()'       |-RecoveryExpr 0x120128540 <col:9> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x1201284f0 <col:22> 'char[4]' lvalue \"STR\" ","21134":"`-FunctionDecl 0x14100ddc8  line:1:5 invalid qpdf_get_pdf_extension_level 'int (int)'   |-ParmVarDecl 0x14100dcf0 <col:34, col:44> col:44 invalid qpdf 'int'   `-CompoundStmt 0x14100dfa8 <line:2:1, line:5:1>     |-RecoveryExpr 0x14100dea8 <line:3:5> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14100df98 <line:4:5, col:42>       `-CallExpr 0x14100df78 <col:12, col:42> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x14100df30 <col:12, col:24> '<dependent type>' contains-errors lvalue ->getExtensionLevel           `-CXXDependentScopeMemberExpr 0x14100dee8 <col:12, col:18> '<dependent type>' contains-errors lvalue ->qpdf             `-RecoveryExpr 0x14100dec8 <col:12> '<dependent type>' contains-errors lvalue ","20769":"`-FunctionDecl 0x12b128758  line:1:12 vt_io_fontreset 'int (struct console_font_op *)' static   |-ParmVarDecl 0x12b128648 <col:28, col:52> col:52 used op 'struct console_font_op *'   `-CompoundStmt 0x12b141560 <line:2:1, line:21:1>     |-DeclStmt 0x12b140ad0 <line:3:2, col:9>     | `-VarDecl 0x12b140a68 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x12b140d78 <line:5:2, line:8:2>     | |-CallExpr 0x12b140c90 <line:5:6, col:43> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b140c10 <col:6> 'int ()' Function 0x12b140b58 '__is_defined' 'int ()'     | | `-RecoveryExpr 0x12b140c70 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b140d60 <col:46, line:8:2>     |   `-ReturnStmt 0x12b140d50 <line:7:3, col:11>     |     `-UnaryOperator 0x12b140d38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12b140d20 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12b140d00 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b140e50 <line:10:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b140dd0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b140d98 <col:2> 'struct console_font_op *' lvalue ParmVar 0x12b128648 'op' 'struct console_font_op *'     | `-RecoveryExpr 0x12b140e30 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b140f28 <line:11:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b140ea8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b140e70 <col:2> 'struct console_font_op *' lvalue ParmVar 0x12b128648 'op' 'struct console_font_op *'     | `-RecoveryExpr 0x12b140f08 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b141138 <line:13:2, line:14:10>     | |-ImplicitCastExpr 0x12b1410d8 <line:13:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12b1410b8 <col:6> 'int' lvalue Var 0x12b140a68 'ret' 'int'     | `-ReturnStmt 0x12b141128 <line:14:3, col:10>     |   `-ImplicitCastExpr 0x12b141110 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12b1410f0 <col:10> 'int' lvalue Var 0x12b140a68 'ret' 'int'     |-CallExpr 0x12b1412a8 <line:16:2, col:15> 'int'     | `-ImplicitCastExpr 0x12b141290 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12b141238 <col:2> 'int ()' Function 0x12b141180 'console_lock' 'int ()'     |-CallExpr 0x12b141510 <line:18:2, col:17> 'int'     | `-ImplicitCastExpr 0x12b1414f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12b1414d8 <col:2> 'int ()' Function 0x12b141420 'console_unlock' 'int ()'     `-ReturnStmt 0x12b141550 <line:20:2, col:9>       `-IntegerLiteral 0x12b141530 <col:9> 'int' 0 ","21002":"`-FunctionDecl 0x159026748  line:1:12 key_seal 'int (struct trusted_key_payload *, struct trusted_key_options *)' static   |-ParmVarDecl 0x15900e248 <col:21, col:49> col:49 used p 'struct trusted_key_payload *'   |-ParmVarDecl 0x159026628 <line:2:7, col:35> col:35 used o 'struct trusted_key_options *'   `-CompoundStmt 0x14f81b3e8 <line:3:1, line:22:1>     |-DeclStmt 0x159026a38 <line:4:2, col:20>     | |-RecordDecl 0x159026848 <col:2, col:9> col:9 struct tpm_buf     | `-VarDecl 0x1590269b8 <col:2, col:18> col:18 used tb 'struct tpm_buf *'     |-DeclStmt 0x159026ad0 <line:5:2, col:9>     | `-VarDecl 0x159026a68 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x159026db0 <line:8:2, line:9:11>     | |-UnaryOperator 0x159026cf0 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159026cd8 <col:7> 'struct tpm_buf *' <LValueToRValue>     | |   `-DeclRefExpr 0x159026cb8 <col:7> 'struct tpm_buf *' lvalue Var 0x1590269b8 'tb' 'struct tpm_buf *'     | `-ReturnStmt 0x159026da0 <line:9:3, col:11>     |   `-UnaryOperator 0x159026d88 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x159026d70 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x159026d50 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x159026f40 <line:12:2, col:26> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x159026ec0 <col:2, col:19> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x159026e90 <col:2, col:5> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x159026e08 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x159026dd0 <col:2> 'struct trusted_key_payload *' lvalue ParmVar 0x15900e248 'p' 'struct trusted_key_payload *'     | | `-ImplicitCastExpr 0x159026ea8 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x159026e68 <col:9, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x159026e30 <col:9> 'struct trusted_key_payload *' lvalue ParmVar 0x15900e248 'p' 'struct trusted_key_payload *'     | `-RecoveryExpr 0x159026f18 <col:23, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x159026ee0 <col:23> 'struct trusted_key_payload *' lvalue ParmVar 0x15900e248 'p' 'struct trusted_key_payload *'     |-BinaryOperator 0x159027530 <line:14:2, line:16:49> 'int' contains-errors '='     | |-DeclRefExpr 0x159026f60 <line:14:2> 'int' lvalue Var 0x159026a68 'ret' 'int'     | `-CallExpr 0x1590274b8 <col:8, line:16:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159027060 <line:14:8> 'int ()' Function 0x159026fa8 'tpm_seal' 'int ()'     |   |-DeclRefExpr 0x159027080 <col:17> 'struct tpm_buf *' lvalue Var 0x1590269b8 'tb' 'struct tpm_buf *'     |   |-RecoveryExpr 0x1590270d8 <col:21, col:24> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1590270a0 <col:21> 'struct trusted_key_options *' lvalue ParmVar 0x159026628 'o' 'struct trusted_key_options *'     |   |-RecoveryExpr 0x159027138 <col:33, col:36> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x159027100 <col:33> 'struct trusted_key_options *' lvalue ParmVar 0x159026628 'o' 'struct trusted_key_options *'     |   |-RecoveryExpr 0x159027198 <col:47, col:50> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x159027160 <col:47> 'struct trusted_key_options *' lvalue ParmVar 0x159026628 'o' 'struct trusted_key_options *'     |   |-RecoveryExpr 0x1590271f8 <line:15:10, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1590271c0 <col:10> 'struct trusted_key_payload *' lvalue ParmVar 0x15900e248 'p' 'struct trusted_key_payload *'     |   |-BinaryOperator 0x1590272a0 <col:18, col:31> '<dependent type>' contains-errors '+'     |   | |-RecoveryExpr 0x159027258 <col:18, col:21> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x159027220 <col:18> 'struct trusted_key_payload *' lvalue ParmVar 0x15900e248 'p' 'struct trusted_key_payload *'     |   | `-IntegerLiteral 0x159027280 <col:31> 'int' 1     |   |-RecoveryExpr 0x1590272f8 <col:34, col:37> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1590272c0 <col:34> 'struct trusted_key_payload *' lvalue ParmVar 0x15900e248 'p' 'struct trusted_key_payload *'     |   |-UnaryOperator 0x159027380 <col:43, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x159027358 <col:44, col:47> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x159027320 <col:44> 'struct trusted_key_payload *' lvalue ParmVar 0x15900e248 'p' 'struct trusted_key_payload *'     |   |-RecoveryExpr 0x1590273d0 <line:16:10, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x159027398 <col:10> 'struct trusted_key_options *' lvalue ParmVar 0x159026628 'o' 'struct trusted_key_options *'     |   |-RecoveryExpr 0x159027430 <col:23, col:26> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1590273f8 <col:23> 'struct trusted_key_options *' lvalue ParmVar 0x159026628 'o' 'struct trusted_key_options *'     |   `-RecoveryExpr 0x159027490 <col:35, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159027458 <col:35> 'struct trusted_key_options *' lvalue ParmVar 0x159026628 'o' 'struct trusted_key_options *'     |-IfStmt 0x14f81b208 <line:17:2, line:18:21>     | |-BinaryOperator 0x1590275a8 <line:17:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x159027590 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x159027550 <col:6> 'int' lvalue Var 0x159026a68 'ret' 'int'     | | `-IntegerLiteral 0x159027570 <col:12> 'int' 0     | `-CallExpr 0x14f81b1a8 <line:18:3, col:21> 'int'     |   |-ImplicitCastExpr 0x14f81b190 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14f81b0b8 <col:3> 'int ()' Function 0x14f81b000 'pr_info' 'int ()'     |   |-ImplicitCastExpr 0x14f81b1d8 <col:11> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x14f81b120 <col:11> 'char[4]' lvalue \"STR\"     |   `-ImplicitCastExpr 0x14f81b1f0 <col:18> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14f81b140 <col:18> 'int' lvalue Var 0x159026a68 'ret' 'int'     |-CallExpr 0x14f81b360 <line:20:2, col:10> 'int'     | |-ImplicitCastExpr 0x14f81b348 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14f81b308 <col:2> 'int ()' Function 0x14f81b250 'kfree' 'int ()'     | `-ImplicitCastExpr 0x14f81b388 <col:8> 'struct tpm_buf *' <LValueToRValue>     |   `-DeclRefExpr 0x14f81b328 <col:8> 'struct tpm_buf *' lvalue Var 0x1590269b8 'tb' 'struct tpm_buf *'     `-ReturnStmt 0x14f81b3d8 <line:21:2, col:9>       `-ImplicitCastExpr 0x14f81b3c0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14f81b3a0 <col:9> 'int' lvalue Var 0x159026a68 'ret' 'int' ","20798":"`-FunctionDecl 0x126923c10  col:32 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x126923d10 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x126923cb8 <<invalid sloc>> Implicit 902 ","20694":"`-FunctionDecl 0x10700df68  line:1:1 invalid connection_handle_read_body_unknown 'int (int *const, int *const, int *const)'   |-ParmVarDecl 0x10700dd28 <col:38, col:57> col:57 invalid r 'int *const'   |-ParmVarDecl 0x10700dda8 <col:60, col:79> col:79 invalid cq 'int *const'   |-ParmVarDecl 0x10700de28 <col:83, col:102> col:102 invalid dst_cq 'int *const'   `-CompoundStmt 0x1070279a8 <line:2:1, line:13:1>     |-DeclStmt 0x10700e0c0 <line:4:5, col:73>     | `-VarDecl 0x10700e040 <col:5, col:17> col:17 invalid max_request_size 'const int'     |-CallExpr 0x10700e290 <line:5:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x10700e230 <col:5> 'int ()' Function 0x10700e178 'chunkqueue_append_chunkqueue' 'int ()'     | |-RecoveryExpr 0x10700e250 <col:34> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x10700e270 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x107027940 <line:6:5, line:11:5>     | |-BinaryOperator 0x10700e3c8 <line:6:9, col:53> 'int' contains-errors '&&'     | | |-BinaryOperator 0x10700e300 <col:9, col:14> 'int' contains-errors '!='     | | | |-IntegerLiteral 0x10700e2c0 <col:9> 'int' 0     | | | `-RecoveryExpr 0x10700e2e0 <col:14> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x10700e3a8 <col:34, col:53> 'int' contains-errors '>'     | |   |-CXXDependentScopeMemberExpr 0x10700e340 <col:34, col:42> '<dependent type>' contains-errors lvalue ->bytes_in     | |   | `-RecoveryExpr 0x10700e320 <col:34> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x10700e388 <col:53> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x107027920 <col:71, line:11:5>     |   |-CallExpr 0x107027758 <line:7:9, line:8:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1070274e0 <line:7:9> 'int ()' Function 0x107027428 'log_error' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x107027568 <col:19, col:27> '<dependent type>' contains-errors lvalue .errh     |   | | `-CXXDependentScopeMemberExpr 0x107027520 <col:19, col:22> '<dependent type>' contains-errors lvalue ->conf     |   | |   `-RecoveryExpr 0x107027500 <col:19> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x1070275f0 <<scratch space>:2:1> 'char[41]' lvalue \"dataset_diviso_filec\/func20321_nonvuln.c\"     |   | |-IntegerLiteral 0x107027630 <line:3:1> 'int' 7     |   | |-StringLiteral 0x107027690 <dataset_diviso_filec\/func20321_nonvuln.c:8:11> 'char[4]' lvalue \"STR\"     |   | `-CStyleCastExpr 0x107027730 <col:18, col:37> 'long long' contains-errors <Dependent>     |   |   `-CXXDependentScopeMemberExpr 0x1070276d0 <col:29, col:37> '<dependent type>' contains-errors lvalue ->bytes_in     |   |     `-RecoveryExpr 0x1070276b0 <col:29> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x107027910 <line:10:9, col:55>     |     `-CallExpr 0x1070278e0 <col:16, col:55> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x107027880 <col:16> 'int ()' Function 0x1070277c8 'http_response_reqbody_read_error' 'int ()'     |       |-RecoveryExpr 0x1070278a0 <col:49> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x1070278c0 <col:52> 'int' 413     `-ReturnStmt 0x107027998 <line:12:5, col:12>       `-RecoveryExpr 0x107027978 <col:12> '<dependent type>' contains-errors lvalue ","20924":"`-FunctionDecl 0x126141858  line:1:24 invalid macsec_decrypt 'struct sk_buff *(struct sk_buff *, struct net_device *, struct macsec_rx_sa *, int, struct macsec_secy *)' static   |-ParmVarDecl 0x126128a18 <col:39, col:55> col:55 used skb 'struct sk_buff *'   |-ParmVarDecl 0x126141228 <line:2:11, col:30> col:30 used dev 'struct net_device *'   |-ParmVarDecl 0x1261413f8 <line:3:11, col:32> col:32 used rx_sa 'struct macsec_rx_sa *'   |-ParmVarDecl 0x126141490 <line:4:11, col:17> col:17 invalid sci 'int'   |-ParmVarDecl 0x126141668 <line:5:11, col:31> col:31 secy 'struct macsec_secy *'   `-CompoundStmt 0x127809d80 <line:6:1, line:70:1>     |-DeclStmt 0x1261419a8 <line:7:2, col:9>     | `-VarDecl 0x126141940 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x126141ba8 <line:8:2, col:24>     | |-RecordDecl 0x1261419c0 <col:2, col:9> col:9 struct scatterlist     | `-VarDecl 0x126141b28 <col:2, col:22> col:22 used sg 'struct scatterlist *'     |-DeclStmt 0x126141c70 <line:9:2, col:19>     | `-VarDecl 0x126141c08 <col:2, col:17> col:17 used iv 'unsigned char *'     |-DeclStmt 0x126141e78 <line:10:2, col:26>     | |-RecordDecl 0x126141c88 <col:2, col:9> col:9 struct aead_request     | `-VarDecl 0x126141df8 <col:2, col:23> col:23 used req 'struct aead_request *'     |-DeclStmt 0x126142078 <line:11:2, col:31>     | |-RecordDecl 0x126141e90 <col:2, col:9> col:9 struct macsec_eth_header     | `-VarDecl 0x126141ff8 <col:2, col:28> col:28 used hdr 'struct macsec_eth_header *'     |-BinaryOperator 0x126809158 <line:15:2, col:39> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x126808f60 <col:2> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | `-CallExpr 0x126809128 <col:8, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x126809060 <col:8> 'int ()' Function 0x126808fa8 'skb_share_check' 'int ()'     |   |-DeclRefExpr 0x126809080 <col:24> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     |   `-RecoveryExpr 0x126809108 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126809418 <line:16:2, line:17:25>     | |-UnaryOperator 0x1268091b0 <line:16:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x126809198 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x126809178 <col:7> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | `-ReturnStmt 0x126809408 <line:17:3, col:25>     |   `-CallExpr 0x1268093e0 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1268092a8 <col:10> 'int ()' Function 0x1268091f0 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x1268093c8 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1268093b0 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x126809338 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126809740 <line:19:2, col:49> 'struct aead_request *' contains-errors '='     | |-DeclRefExpr 0x126809438 <col:2> 'struct aead_request *' lvalue Var 0x126141df8 'req' 'struct aead_request *'     | `-CallExpr 0x126809708 <col:8, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x126809538 <col:8> 'int ()' Function 0x126809480 'macsec_alloc_req' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x1268095b8 <col:25, col:36> '<dependent type>' contains-errors lvalue .tfm     |   | `-RecoveryExpr 0x126809590 <col:25, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x126809558 <col:25> 'struct macsec_rx_sa *' lvalue ParmVar 0x1261413f8 'rx_sa' 'struct macsec_rx_sa *'     |   |-UnaryOperator 0x126809650 <col:41, col:42> 'unsigned char **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x126809600 <col:42> 'unsigned char *' lvalue Var 0x126141c08 'iv' 'unsigned char *'     |   `-UnaryOperator 0x1268096f0 <col:46, col:47> 'struct scatterlist **' prefix '&' cannot overflow     |     `-DeclRefExpr 0x126809668 <col:47> 'struct scatterlist *' lvalue Var 0x126141b28 'sg' 'struct scatterlist *'     |-IfStmt 0x126809ab8 <line:20:2, line:23:2>     | |-UnaryOperator 0x126809798 <line:20:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x126809780 <col:7> 'struct aead_request *' <LValueToRValue>     | |   `-DeclRefExpr 0x126809760 <col:7> 'struct aead_request *' lvalue Var 0x126141df8 'req' 'struct aead_request *'     | `-CompoundStmt 0x126809a98 <col:12, line:23:2>     |   |-CallExpr 0x1268098e8 <line:21:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x1268098d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x126809890 <col:3> 'int ()' Function 0x1268097d8 'kfree_skb' 'int ()'     |   | `-ImplicitCastExpr 0x126809910 <col:13> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1268098b0 <col:13> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     |   `-ReturnStmt 0x126809a88 <line:22:3, col:25>     |     `-CallExpr 0x126809a60 <col:10, col:25> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x126809928 <col:10> 'int ()' Function 0x1268091f0 'ERR_PTR' 'int ()'     |       `-UnaryOperator 0x126809a48 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x126809a30 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x1268099b8 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126809c80 <line:25:2, col:41> 'struct macsec_eth_header *' contains-errors '='     | |-DeclRefExpr 0x126809ad8 <col:2> 'struct macsec_eth_header *' lvalue Var 0x126141ff8 'hdr' 'struct macsec_eth_header *'     | `-CStyleCastExpr 0x126809c58 <col:8, col:41> 'struct macsec_eth_header *' contains-errors <Dependent>     |   `-RecoveryExpr 0x126809b30 <col:36, col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x126809af8 <col:36> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     |-CallExpr 0x126144188 <line:26:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126809d80 <col:2> 'int ()' Function 0x126809cc8 'macsec_fill_iv' 'int ()'     | |-DeclRefExpr 0x126809da0 <col:17> 'unsigned char *' lvalue Var 0x126141c08 'iv' 'unsigned char *'     | |-RecoveryExpr 0x126809dc0 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x126144160 <col:26, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1261440e0 <col:26> 'int ()' Function 0x126144028 'ntohl' 'int ()'     |   `-RecoveryExpr 0x126144138 <col:32, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x126144100 <col:32> 'struct macsec_eth_header *' lvalue Var 0x126141ff8 'hdr' 'struct macsec_eth_header *'     |-CallExpr 0x1261443a8 <line:28:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1261442a0 <col:2> 'int ()' Function 0x1261441e8 'sg_init_table' 'int ()'     | |-DeclRefExpr 0x1261442c0 <col:16> 'struct scatterlist *' lvalue Var 0x126141b28 'sg' 'struct scatterlist *'     | `-BinaryOperator 0x126144388 <col:20, col:36> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x126144368 <col:20> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1261442f8 <col:36> 'int' 1     |-CallExpr 0x126144598 <line:29:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1261444b8 <col:2> 'int ()' Function 0x126144400 'skb_to_sgvec' 'int ()'     | |-DeclRefExpr 0x1261444d8 <col:15> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | |-DeclRefExpr 0x1261444f8 <col:20> 'struct scatterlist *' lvalue Var 0x126141b28 'sg' 'struct scatterlist *'     | |-IntegerLiteral 0x126144518 <col:24> 'int' 0     | `-RecoveryExpr 0x126144570 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x126144538 <col:27> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     |-IfStmt 0x127808e90 <line:31:2, line:46:2> has_else     | |-RecoveryExpr 0x126144638 <line:31:6, col:20> '_Bool' contains-errors     | |-CompoundStmt 0x127808d10 <col:34, line:42:2>     | | |-DeclStmt 0x126144b80 <line:33:3, col:67>     | | | `-VarDecl 0x126144670 <col:3, col:66> col:7 used len 'int' cinit     | | |   `-BinaryOperator 0x126144b60 <col:13, col:66> '<dependent type>' contains-errors '-'     | | |     |-RecoveryExpr 0x126144710 <col:13, col:18> '<dependent type>' contains-errors lvalue     | | |     | `-DeclRefExpr 0x1261446d8 <col:13> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | | |     `-CallExpr 0x126144b38 <col:24, col:66> '<dependent type>' contains-errors     | | |       |-DeclRefExpr 0x126144818 <col:24> 'int ()' Function 0x126144760 'macsec_hdr_len' 'int ()'     | | |       `-RecoveryExpr 0x126144b10 <col:39, col:59> '<dependent type>' contains-errors lvalue     | | |         `-CallExpr 0x126144ad0 <col:39, col:56> 'int'     | | |           |-ImplicitCastExpr 0x126144ab8 <col:39> 'int (*)()' <FunctionToPointerDecay>     | | |           | `-DeclRefExpr 0x126144838 <col:39> 'int ()' Function 0x126142138 'macsec_skb_cb' 'int ()'     | | |           `-ImplicitCastExpr 0x126144af8 <col:53> 'struct sk_buff *' <LValueToRValue>     | | |             `-DeclRefExpr 0x126144858 <col:53> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | | |-CallExpr 0x126144d50 <line:35:3, col:46> 'int' contains-errors     | | | |-ImplicitCastExpr 0x126144d38 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x126144c78 <col:3> 'int ()' Function 0x126144bc0 'aead_request_set_crypt' 'int ()'     | | | |-ImplicitCastExpr 0x126144d98 <col:26> 'struct aead_request *' <LValueToRValue>     | | | | `-DeclRefExpr 0x126144c98 <col:26> 'struct aead_request *' lvalue Var 0x126141df8 'req' 'struct aead_request *'     | | | |-ImplicitCastExpr 0x126144db0 <col:31> 'struct scatterlist *' <LValueToRValue>     | | | | `-DeclRefExpr 0x126144cb8 <col:31> 'struct scatterlist *' lvalue Var 0x126141b28 'sg' 'struct scatterlist *'     | | | |-ImplicitCastExpr 0x126144dc8 <col:35> 'struct scatterlist *' <LValueToRValue>     | | | | `-DeclRefExpr 0x126144cd8 <col:35> 'struct scatterlist *' lvalue Var 0x126141b28 'sg' 'struct scatterlist *'     | | | |-ImplicitCastExpr 0x126144de0 <col:39> 'int' contains-errors <LValueToRValue>     | | | | `-DeclRefExpr 0x126144cf8 <col:39> 'int' contains-errors lvalue Var 0x126144670 'len' 'int'     | | | `-ImplicitCastExpr 0x126144df8 <col:44> 'unsigned char *' <LValueToRValue>     | | |   `-DeclRefExpr 0x126144d18 <col:44> 'unsigned char *' lvalue Var 0x126141c08 'iv' 'unsigned char *'     | | |-CallExpr 0x127808980 <line:36:3, col:71> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x126144ef0 <col:3> 'int ()' Function 0x126144e38 'aead_request_set_ad' 'int ()'     | | | |-DeclRefExpr 0x126144f10 <col:23> 'struct aead_request *' lvalue Var 0x126141df8 'req' 'struct aead_request *'     | | | `-CallExpr 0x127808958 <col:28, col:70> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x126144f30 <col:28> 'int ()' Function 0x126144760 'macsec_hdr_len' 'int ()'     | | |   `-RecoveryExpr 0x127808930 <col:43, col:63> '<dependent type>' contains-errors lvalue     | | |     `-CallExpr 0x1278088f0 <col:43, col:60> 'int'     | | |       |-ImplicitCastExpr 0x1278088d8 <col:43> 'int (*)()' <FunctionToPointerDecay>     | | |       | `-DeclRefExpr 0x126144f50 <col:43> 'int ()' Function 0x126142138 'macsec_skb_cb' 'int ()'     | | |       `-ImplicitCastExpr 0x127808918 <col:57> 'struct sk_buff *' <LValueToRValue>     | | |         `-DeclRefExpr 0x126144f70 <col:57> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | | `-IfStmt 0x127808cf0 <line:38:3, line:41:3>     | |   |-UnaryOperator 0x127808b28 <line:38:7, col:8> 'int' prefix '!' cannot overflow     | |   | `-ImplicitCastExpr 0x127808b10 <col:8> 'struct sk_buff *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x127808af0 <col:8> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | |   `-CompoundStmt 0x127808cd8 <col:13, line:41:3>     | |     `-CallExpr 0x127808c78 <line:39:4, col:25> 'int'     | |       |-ImplicitCastExpr 0x127808c60 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x127808c20 <col:4> 'int ()' Function 0x127808b68 'aead_request_free' 'int ()'     | |       `-ImplicitCastExpr 0x127808ca0 <col:22> 'struct aead_request *' <LValueToRValue>     | |         `-DeclRefExpr 0x127808c40 <col:22> 'struct aead_request *' lvalue Var 0x126141df8 'req' 'struct aead_request *'     | `-CompoundStmt 0x127808e80 <line:42:9, line:46:2>     |-BinaryOperator 0x127809098 <line:48:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127809070 <col:2, col:22> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x127809030 <col:2, col:19> 'int'     | |   |-ImplicitCastExpr 0x127809018 <col:2> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x127808ec0 <col:2> 'int ()' Function 0x126142138 'macsec_skb_cb' 'int ()'     | |   `-ImplicitCastExpr 0x127809058 <col:16> 'struct sk_buff *' <LValueToRValue>     | |     `-DeclRefExpr 0x127808ee0 <col:16> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | `-DeclRefExpr 0x127808f80 <col:28> 'struct aead_request *' lvalue Var 0x126141df8 'req' 'struct aead_request *'     |-BinaryOperator 0x127809138 <line:49:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1278090f0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1278090b8 <col:2> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     | `-DeclRefExpr 0x127809118 <col:13> 'struct net_device *' lvalue ParmVar 0x126141228 'dev' 'struct net_device *'     |-CallExpr 0x1278093f0 <line:52:2, col:14> 'int'     | |-ImplicitCastExpr 0x1278093d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127809398 <col:2> 'int ()' Function 0x1278092e0 'dev_hold' 'int ()'     | `-ImplicitCastExpr 0x127809418 <col:11> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x1278093b8 <col:11> 'struct net_device *' lvalue ParmVar 0x126141228 'dev' 'struct net_device *'     |-BinaryOperator 0x1278095c8 <line:53:2, col:31> 'int' '='     | |-DeclRefExpr 0x127809430 <col:2> 'int' lvalue Var 0x126141940 'ret' 'int'     | `-CallExpr 0x127809588 <col:8, col:31> 'int'     |   |-ImplicitCastExpr 0x127809570 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x127809530 <col:8> 'int ()' Function 0x127809478 'crypto_aead_decrypt' 'int ()'     |   `-ImplicitCastExpr 0x1278095b0 <col:28> 'struct aead_request *' <LValueToRValue>     |     `-DeclRefExpr 0x127809550 <col:28> 'struct aead_request *' lvalue Var 0x126141df8 'req' 'struct aead_request *'     |-IfStmt 0x127809af8 <line:54:2, line:64:2> has_else     | |-RecoveryExpr 0x127809608 <line:54:6, col:14> '_Bool' contains-errors     | |-CompoundStmt 0x1278096e8 <col:27, line:56:2>     | | `-ReturnStmt 0x1278096d8 <line:55:3, col:21>     | |   `-ImplicitCastExpr 0x1278096c0 <col:10, col:21> 'struct sk_buff *' <IntegralToPointer>     | |     `-CallExpr 0x127809680 <col:10, col:21> 'int'     | |       |-ImplicitCastExpr 0x127809668 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x127809628 <col:10> 'int ()' Function 0x1268091f0 'ERR_PTR' 'int ()'     | |       `-ImplicitCastExpr 0x1278096a8 <col:18> 'int' <LValueToRValue>     | |         `-DeclRefExpr 0x127809648 <col:18> 'int' lvalue Var 0x126141940 'ret' 'int'     | `-IfStmt 0x127809ac8 <line:56:9, line:64:2> has_else     |   |-BinaryOperator 0x127809758 <line:56:13, col:20> 'int' '!='     |   | |-ImplicitCastExpr 0x127809740 <col:13> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x127809700 <col:13> 'int' lvalue Var 0x126141940 'ret' 'int'     |   | `-IntegerLiteral 0x127809720 <col:20> 'int' 0     |   |-CompoundStmt 0x127809988 <col:23, line:62:2>     |   | `-IfStmt 0x127809968 <line:58:3, line:61:3>     |   |   |-RecoveryExpr 0x127809798 <line:58:7, col:15> '_Bool' contains-errors     |   |   `-CompoundStmt 0x127809948 <col:24, line:61:3>     |   |     |-CallExpr 0x127809818 <line:59:4, col:17> 'int'     |   |     | |-ImplicitCastExpr 0x127809800 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     | | `-DeclRefExpr 0x1278097b8 <col:4> 'int ()' Function 0x1268097d8 'kfree_skb' 'int ()'     |   |     | `-ImplicitCastExpr 0x127809840 <col:14> 'struct sk_buff *' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x1278097d8 <col:14> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     |   |     `-BinaryOperator 0x127809928 <line:60:4, col:21> 'struct sk_buff *' '='     |   |       |-DeclRefExpr 0x127809858 <col:4> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *'     |   |       `-ImplicitCastExpr 0x127809910 <col:10, col:21> 'struct sk_buff *' <IntegralToPointer>     |   |         `-CallExpr 0x1278098d0 <col:10, col:21> 'int'     |   |           |-ImplicitCastExpr 0x1278098b8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |           | `-DeclRefExpr 0x127809878 <col:10> 'int ()' Function 0x1268091f0 'ERR_PTR' 'int ()'     |   |           `-ImplicitCastExpr 0x1278098f8 <col:18> 'int' <LValueToRValue>     |   |             `-DeclRefExpr 0x127809898 <col:18> 'int' lvalue Var 0x126141940 'ret' 'int'     |   `-CompoundStmt 0x127809ab8 <line:62:9, line:64:2>     |-CallExpr 0x127809c60 <line:65:2, col:13> 'int'     | |-ImplicitCastExpr 0x127809c48 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127809c08 <col:2> 'int ()' Function 0x127809b50 'dev_put' 'int ()'     | `-ImplicitCastExpr 0x127809c88 <col:10> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x127809c28 <col:10> 'struct net_device *' lvalue ParmVar 0x126141228 'dev' 'struct net_device *'     |-CallExpr 0x127809cf8 <line:67:2, col:23> 'int'     | |-ImplicitCastExpr 0x127809ce0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127809ca0 <col:2> 'int ()' Function 0x127808b68 'aead_request_free' 'int ()'     | `-ImplicitCastExpr 0x127809d20 <col:20> 'struct aead_request *' <LValueToRValue>     |   `-DeclRefExpr 0x127809cc0 <col:20> 'struct aead_request *' lvalue Var 0x126141df8 'req' 'struct aead_request *'     `-ReturnStmt 0x127809d70 <line:69:2, col:9>       `-ImplicitCastExpr 0x127809d58 <col:9> 'struct sk_buff *' <LValueToRValue>         `-DeclRefExpr 0x127809d38 <col:9> 'struct sk_buff *' lvalue ParmVar 0x126128a18 'skb' 'struct sk_buff *' ","20251":"`-FunctionDecl 0x14102b258  col:7 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14102b358 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14102b300 <<invalid sloc>> Implicit 873 ","20349":"`-FunctionDecl 0x13b9281f8  line:1:1 invalid gdk_pixbuf__tiff_fill_vtable 'int (int *)'   |-ParmVarDecl 0x13b928128 <col:31, col:48> col:48 referenced invalid module 'int *'   `-CompoundStmt 0x13b9286c8 <line:2:1, line:7:1>     |-BinaryOperator 0x13b928390 <line:3:3, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b9282f0 <col:3, col:11> '<dependent type>' contains-errors lvalue ->load     | | `-RecoveryExpr 0x13b9282c8 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13b9282a8 <col:3> 'int *' lvalue ParmVar 0x13b928128 'module' 'int *'     | `-RecoveryExpr 0x13b928370 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b928498 <line:4:3, col:24> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b9283f8 <col:3, col:11> '<dependent type>' contains-errors lvalue ->begin_load     | | `-RecoveryExpr 0x13b9283d0 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13b9283b0 <col:3> 'int *' lvalue ParmVar 0x13b928128 'module' 'int *'     | `-RecoveryExpr 0x13b928478 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b9285a0 <line:5:3, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b928500 <col:3, col:11> '<dependent type>' contains-errors lvalue ->stop_load     | | `-RecoveryExpr 0x13b9284d8 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13b9284b8 <col:3> 'int *' lvalue ParmVar 0x13b928128 'module' 'int *'     | `-RecoveryExpr 0x13b928580 <col:23> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x13b9286a8 <line:6:3, col:28> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x13b928608 <col:3, col:11> '<dependent type>' contains-errors lvalue ->load_increment       | `-RecoveryExpr 0x13b9285e0 <col:3> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13b9285c0 <col:3> 'int *' lvalue ParmVar 0x13b928128 'module' 'int *'       `-RecoveryExpr 0x13b928688 <col:28> '<dependent type>' contains-errors lvalue ","20722":"`-FunctionDecl 0x1529281f8  line:1:1 invalid lexer_token_is_async 'int (int *)'   |-ParmVarDecl 0x152928128 <col:23, col:41> col:41 invalid context_p 'int *'   `-CompoundStmt 0x153008948 <line:2:1, line:8:1>     `-CallExpr 0x1529286d8 <line:3:3, line:4:67> '<dependent type>' contains-errors       |-DeclRefExpr 0x152928400 <line:3:3> 'int ()' Function 0x152928348 'JERRY_ASSERT' 'int ()'       `-BinaryOperator 0x1529286b8 <col:17, line:4:45> 'int' contains-errors '||'         |-BinaryOperator 0x152928658 <line:3:17, col:42> 'int' contains-errors '=='         | |-CXXDependentScopeMemberExpr 0x152928488 <col:17, col:34> '<dependent type>' contains-errors lvalue .type         | | `-CXXDependentScopeMemberExpr 0x152928440 <col:17, col:28> '<dependent type>' contains-errors lvalue ->token         | |   `-RecoveryExpr 0x152928420 <col:17> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x152928638 <col:42> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x152928698 <line:4:20, col:45> 'int' contains-errors '=='           |-CXXDependentScopeMemberExpr 0x152928570 <col:20, col:37> '<dependent type>' contains-errors lvalue .type           | `-CXXDependentScopeMemberExpr 0x152928528 <col:20, col:31> '<dependent type>' contains-errors lvalue ->token           |   `-RecoveryExpr 0x152928508 <col:20> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x152928678 <col:45> '<dependent type>' contains-errors lvalue ","21089":"`-FunctionDecl 0x158940c10  line:1:13 nfs4_xdr_enc_lookup_root 'void (struct rpc_rqst *, struct xdr_stream *, const void *)' static   |-ParmVarDecl 0x158928648 <col:38, col:55> col:55 used req 'struct rpc_rqst *'   |-ParmVarDecl 0x158940a28 <line:2:10, col:29> col:29 used xdr 'struct xdr_stream *'   |-ParmVarDecl 0x158940ad8 <line:3:10, col:22> col:22 used data 'const void *'   `-CompoundStmt 0x159008598 <line:4:1, line:16:1>     |-DeclStmt 0x158940f58 <line:5:2, col:48>     | |-RecordDecl 0x158940d18 <col:8, col:15> col:15 struct nfs4_lookup_root_arg     | `-VarDecl 0x158940e88 <col:2, col:44> col:37 used args 'const struct nfs4_lookup_root_arg *' cinit     |   `-ImplicitCastExpr 0x158940f28 <col:44> 'const struct nfs4_lookup_root_arg *' <BitCast>     |     `-ImplicitCastExpr 0x158940f10 <col:44> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x158940ef0 <col:44> 'const void *' lvalue ParmVar 0x158940ad8 'data' 'const void *'     |-DeclStmt 0x158941360 <line:6:2, line:8:3>     | |-RecordDecl 0x158940f70 <line:6:2, col:9> col:9 struct compound_hdr     | `-VarDecl 0x158941068 <col:2, col:22> col:22 invalid hdr 'struct compound_hdr'     |-CallExpr 0x1589414f0 <line:10:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158941458 <col:2> 'int ()' Function 0x1589413a0 'encode_compound_hdr' 'int ()'     | |-DeclRefExpr 0x158941478 <col:22> 'struct xdr_stream *' lvalue ParmVar 0x158940a28 'xdr' 'struct xdr_stream *'     | |-DeclRefExpr 0x158941498 <col:27> 'struct rpc_rqst *' lvalue ParmVar 0x158928648 'req' 'struct rpc_rqst *'     | `-UnaryOperator 0x1589414d8 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1589414b8 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1589416f8 <line:11:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158941608 <col:2> 'int ()' Function 0x158941550 'encode_sequence' 'int ()'     | |-DeclRefExpr 0x158941628 <col:18> 'struct xdr_stream *' lvalue ParmVar 0x158940a28 'xdr' 'struct xdr_stream *'     | |-UnaryOperator 0x1589416a8 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x158941680 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158941648 <col:24> 'const struct nfs4_lookup_root_arg *' lvalue Var 0x158940e88 'args' 'const struct nfs4_lookup_root_arg *'     | `-UnaryOperator 0x1589416e0 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1589416c0 <col:41> '<dependent type>' contains-errors lvalue     |-CallExpr 0x158941888 <line:12:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158941810 <col:2> 'int ()' Function 0x158941758 'encode_putrootfh' 'int ()'     | |-DeclRefExpr 0x158941830 <col:19> 'struct xdr_stream *' lvalue ParmVar 0x158940a28 'xdr' 'struct xdr_stream *'     | `-UnaryOperator 0x158941870 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x158941850 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x159008218 <line:13:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158941998 <col:2> 'int ()' Function 0x1589418e0 'encode_getfh' 'int ()'     | |-DeclRefExpr 0x1589419b8 <col:15> 'struct xdr_stream *' lvalue ParmVar 0x158940a28 'xdr' 'struct xdr_stream *'     | `-UnaryOperator 0x159008200 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1589419d8 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x159008400 <line:14:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159008328 <col:2> 'int ()' Function 0x159008270 'encode_getfattr' 'int ()'     | |-DeclRefExpr 0x159008348 <col:18> 'struct xdr_stream *' lvalue ParmVar 0x158940a28 'xdr' 'struct xdr_stream *'     | |-RecoveryExpr 0x1590083a0 <col:23, col:29> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x159008368 <col:23> 'const struct nfs4_lookup_root_arg *' lvalue Var 0x158940e88 'args' 'const struct nfs4_lookup_root_arg *'     | `-UnaryOperator 0x1590083e8 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1590083c8 <col:39> '<dependent type>' contains-errors lvalue     `-CallExpr 0x159008570 <line:15:2, col:18> '<dependent type>' contains-errors       |-DeclRefExpr 0x159008518 <col:2> 'int ()' Function 0x159008460 'encode_nops' 'int ()'       `-UnaryOperator 0x159008558 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x159008538 <col:15> '<dependent type>' contains-errors lvalue ","20581":"`-FunctionDecl 0x158928138  line:1:16 invalid requestInit 'int ()'   `-CompoundStmt 0x1589283c8 <col:30, line:5:3>     `-CallExpr 0x1589283a0 <line:4:5, col:54> '<dependent type>' contains-errors       |-DeclRefExpr 0x158928320 <col:5> 'int ()' Function 0x158928268 'xmlParserInputBufferCreateFilenameDefault' 'int ()'       `-RecoveryExpr 0x158928380 <col:47> '<dependent type>' contains-errors lvalue ","20646":"`-FunctionDecl 0x11e82b778  line:1:12 invalid sched_vslice_add 'int (struct cfs_rq *, struct sched_entity *)' static   |-ParmVarDecl 0x11e80e268 <col:29, col:44> col:44 used cfs_rq 'struct cfs_rq *'   |-ParmVarDecl 0x11e82b658 <col:52, col:73> col:73 used se 'struct sched_entity *'   `-CompoundStmt 0x11e82c4e8 <line:2:1, line:24:1>     |-DeclStmt 0x11e82b910 <line:3:2, col:47>     | `-VarDecl 0x11e82b848 <col:2, col:37> col:16 used nr_running 'unsigned long' cinit     |   `-RecoveryExpr 0x11e82b8e8 <col:29, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11e82b8b0 <col:29> 'struct cfs_rq *' lvalue ParmVar 0x11e80e268 'cfs_rq' 'struct cfs_rq *'     |-DeclStmt 0x11e82b9a8 <line:4:2, col:22>     | `-VarDecl 0x11e82b940 <col:2, col:16> col:16 used weight 'unsigned long'     |-IfStmt 0x11e82ba88 <line:7:2, line:8:13>     | |-UnaryOperator 0x11e82ba38 <line:7:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11e82ba20 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11e82b9f8 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11e82b9c0 <col:7> 'struct sched_entity *' lvalue ParmVar 0x11e82b658 'se' 'struct sched_entity *'     | `-UnaryOperator 0x11e82ba70 <line:8:3, col:13> 'unsigned long' contains-errors postfix '++'     |   `-DeclRefExpr 0x11e82ba50 <col:3> 'unsigned long' contains-errors lvalue Var 0x11e82b848 'nr_running' 'unsigned long'     |-CallExpr 0x11e82be00 <line:12:2, col:26> 'int'     | |-ImplicitCastExpr 0x11e82bde8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e82bda8 <col:2> 'int ()' Function 0x11e82bcf0 'for_each_sched_entity' 'int ()'     | `-ImplicitCastExpr 0x11e82be28 <col:24> 'struct sched_entity *' <LValueToRValue>     |   `-DeclRefExpr 0x11e82bdc8 <col:24> 'struct sched_entity *' lvalue ParmVar 0x11e82b658 'se' 'struct sched_entity *'     |-CompoundStmt 0x11e82c470 <col:28, line:21:2>     | |-BinaryOperator 0x11e82bff0 <line:13:3, col:24> 'struct cfs_rq *' '='     | | |-DeclRefExpr 0x11e82be40 <col:3> 'struct cfs_rq *' lvalue ParmVar 0x11e80e268 'cfs_rq' 'struct cfs_rq *'     | | `-ImplicitCastExpr 0x11e82bfd8 <col:12, col:24> 'struct cfs_rq *' <IntegralToPointer>     | |   `-CallExpr 0x11e82bf98 <col:12, col:24> 'int'     | |     |-ImplicitCastExpr 0x11e82bf80 <col:12> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x11e82bf40 <col:12> 'int ()' Function 0x11e82be88 'cfs_rq_of' 'int ()'     | |     `-ImplicitCastExpr 0x11e82bfc0 <col:22> 'struct sched_entity *' <LValueToRValue>     | |       `-DeclRefExpr 0x11e82bf60 <col:22> 'struct sched_entity *' lvalue ParmVar 0x11e82b658 'se' 'struct sched_entity *'     | |-BinaryOperator 0x11e82c0d8 <line:15:3, col:25> 'unsigned long' contains-errors '='     | | |-DeclRefExpr 0x11e82c010 <col:3> 'unsigned long' lvalue Var 0x11e82b940 'weight' 'unsigned long'     | | `-CXXDependentScopeMemberExpr 0x11e82c090 <col:12, col:25> '<dependent type>' contains-errors lvalue .weight     | |   `-RecoveryExpr 0x11e82c068 <col:12, col:20> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11e82c030 <col:12> 'struct cfs_rq *' lvalue ParmVar 0x11e80e268 'cfs_rq' 'struct cfs_rq *'     | |-IfStmt 0x11e82c280 <line:16:3, line:17:23>     | | |-UnaryOperator 0x11e82c170 <line:16:7, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x11e82c158 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x11e82c130 <col:8, col:12> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x11e82c0f8 <col:8> 'struct sched_entity *' lvalue ParmVar 0x11e82b658 'se' 'struct sched_entity *'     | | `-CompoundAssignOperator 0x11e82c250 <line:17:4, col:23> 'unsigned long' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |-DeclRefExpr 0x11e82c188 <col:4> 'unsigned long' lvalue Var 0x11e82b940 'weight' 'unsigned long'     | |   `-CXXDependentScopeMemberExpr 0x11e82c208 <col:14, col:23> '<dependent type>' contains-errors lvalue .weight     | |     `-RecoveryExpr 0x11e82c1e0 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11e82c1a8 <col:14> 'struct sched_entity *' lvalue ParmVar 0x11e82b658 'se' 'struct sched_entity *'     | `-CallExpr 0x11e82c440 <line:20:3, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11e82c398 <col:3> 'int ()' Function 0x11e82c2e0 'do_div' 'int ()'     |   |-RecoveryExpr 0x11e82c420 <col:10> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11e82c3d0 <col:18> 'unsigned long' lvalue Var 0x11e82b940 'weight' 'unsigned long'     `-ReturnStmt 0x11e82c4d8 <line:23:2, col:9>       `-RecoveryExpr 0x11e82c4b8 <col:9> '<dependent type>' contains-errors lvalue ","20613":"`-FunctionDecl 0x126928368  line:1:5 invalid bson_check_field_name 'int (int *, const char *, const int)'   |-ParmVarDecl 0x126928128 <col:28, col:34> col:34 invalid b 'int *'   |-ParmVarDecl 0x1269281a8 <col:37, col:49> col:49 used string 'const char *'   |-ParmVarDecl 0x126928228 <line:2:28, col:38> col:38 used length 'const int'   `-CompoundStmt 0x126928748 <col:47, line:5:1>     `-ReturnStmt 0x126928738 <line:4:5, col:86>       `-CallExpr 0x1269286e8 <col:12, col:86> '<dependent type>' contains-errors         |-DeclRefExpr 0x126928580 <col:12> 'int ()' Function 0x1269284c8 'bson_validate_string' 'int ()'         |-RecoveryExpr 0x1269285a0 <col:34> '<dependent type>' contains-errors lvalue         |-CStyleCastExpr 0x126928640 <col:37, col:62> 'const unsigned char *' <BitCast>         | `-ImplicitCastExpr 0x126928628 <col:62> 'const char *' <LValueToRValue> part_of_explicit_cast         |   `-DeclRefExpr 0x1269285c0 <col:62> 'const char *' lvalue ParmVar 0x1269281a8 'string' 'const char *'         |-DeclRefExpr 0x126928668 <col:70> 'const int' lvalue ParmVar 0x126928228 'length' 'const int'         |-IntegerLiteral 0x126928688 <col:78> 'int' 1         |-IntegerLiteral 0x1269286a8 <col:81> 'int' 1         `-IntegerLiteral 0x1269286c8 <col:84> 'int' 1 ","20918":"`-FunctionDecl 0x13202ace8  col:19 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x13202ade8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13202ad90 <<invalid sloc>> Implicit 902 ","21183":"`-FunctionDecl 0x120128190  line:1:13 virtio_register_types 'void (void)' static   `-CompoundStmt 0x120128488 <line:2:1, line:4:1>     `-CallExpr 0x120128460 <line:3:5, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x1201283b0 <col:5> 'int ()' Function 0x1201282f8 'type_register_static' 'int ()'       `-UnaryOperator 0x120128448 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x120128428 <col:27> '<dependent type>' contains-errors lvalue ","20512":"`-FunctionDecl 0x12a026720  line:1:13 ndp_msg_init 'void (struct ndp_msg *, enum ndp_msg_type)' static   |-ParmVarDecl 0x12a00e248 <col:26, col:42> col:42 used msg 'struct ndp_msg *'   |-ParmVarDecl 0x12a026600 <col:47, col:65> col:65 invalid msg_type 'enum ndp_msg_type'   `-CompoundStmt 0x12a027128 <line:2:1, line:11:1>     |-BinaryOperator 0x12a026a90 <line:3:2, col:56> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x12a026a70 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x12a026a50 <col:9> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x12a0269e8 <col:27, col:56> '<dependent type>' contains-errors lvalue ->raw_struct_size     |   `-CallExpr 0x12a0269c0 <col:27, col:53> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a026980 <col:27> 'int ()' Function 0x12a0268c8 'ndp_msg_type_info' 'int ()'     |     `-RecoveryExpr 0x12a0269a0 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12a026bf0 <line:5:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a026b90 <col:2> 'int ()' Function 0x12a026ad8 'ndp_msg_type_set' 'int ()'     | |-DeclRefExpr 0x12a026bb0 <col:19> 'struct ndp_msg *' lvalue ParmVar 0x12a00e248 'msg' 'struct ndp_msg *'     | `-RecoveryExpr 0x12a026bd0 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12a026cd8 <line:6:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12a026c58 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12a026c20 <col:2> 'struct ndp_msg *' lvalue ParmVar 0x12a00e248 'msg' 'struct ndp_msg *'     | `-RecoveryExpr 0x12a026cb8 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12a026e50 <line:7:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12a026d30 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12a026cf8 <col:2> 'struct ndp_msg *' lvalue ParmVar 0x12a00e248 'msg' 'struct ndp_msg *'     | `-BinaryOperator 0x12a026e30 <col:20, col:31> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x12a026d90 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12a026d58 <col:20> 'struct ndp_msg *' lvalue ParmVar 0x12a00e248 'msg' 'struct ndp_msg *'     |   `-RecoveryExpr 0x12a026e10 <col:31> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x12a027108 <line:10:2, col:51> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x12a026f18 <col:2, col:22> '<dependent type>' contains-errors lvalue .dataptr       | `-CXXDependentScopeMemberExpr 0x12a026ed0 <col:2, col:14> '<dependent type>' contains-errors lvalue .generic       |   `-RecoveryExpr 0x12a026ea8 <col:2, col:7> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x12a026e70 <col:2> 'struct ndp_msg *' lvalue ParmVar 0x12a00e248 'msg' 'struct ndp_msg *'       `-CallExpr 0x12a0270c8 <col:32, col:51> 'int'         |-ImplicitCastExpr 0x12a0270b0 <col:32> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12a027040 <col:32> 'int ()' Function 0x12a026f88 'ndp_msg_payload' 'int ()'         `-ImplicitCastExpr 0x12a0270f0 <col:48> 'struct ndp_msg *' <LValueToRValue>           `-DeclRefExpr 0x12a027060 <col:48> 'struct ndp_msg *' lvalue ParmVar 0x12a00e248 'msg' 'struct ndp_msg *' ","21042":"`-FunctionDecl 0x12b80de00  line:1:7 invalid initialize 'void (const int)'   |-ParmVarDecl 0x12b80dcf0 <col:18, <invalid sloc>> col:31 invalid 'const int'   `-CompoundStmt 0x12b80e2c0 <col:50, line:8:2>     |-CallExpr 0x12b80e078 <line:2:3, col:15> 'int'     | `-ImplicitCastExpr 0x12b80e060 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12b80e010 <col:3> 'int ()' Function 0x12b80df58 'TRACE_POINT' 'int ()'     `-CallExpr 0x12b80e290 <line:7:3, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x12b80e1a8 <col:3> 'int ()' Function 0x12b80e0f0 'makeDirTree' 'int ()'       |-RecoveryExpr 0x12b80e270 <col:15> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x12b80e220 <col:21> 'char[4]' lvalue \"STR\" ","20498":"`-FunctionDecl 0x14c027460  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14c027560 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14c027508 <<invalid sloc>> Implicit 873 ","20560":"`-FunctionDecl 0x14000dd90  line:1:6 synchronize_net 'void (void)'   `-CompoundStmt 0x14000e170 <line:2:1, line:5:1>     |-CallExpr 0x14000e018 <line:3:2, col:14> 'int'     | `-ImplicitCastExpr 0x14000e000 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14000dfb0 <col:2> 'int ()' Function 0x14000def8 'might_sleep' 'int ()'     `-CallExpr 0x14000e150 <line:4:2, col:18> 'int'       `-ImplicitCastExpr 0x14000e138 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x14000e118 <col:2> 'int ()' Function 0x14000e060 'synchronize_rcu' 'int ()' ","20380":"`-FunctionDecl 0x12f80e350  line:1:13 ext4_clamp_want_extra_isize 'void (struct super_block *)' static   |-ParmVarDecl 0x12f80e248 <col:41, col:61> col:61 used sb 'struct super_block *'   `-CompoundStmt 0x138808e30 <line:2:1, line:30:1>     |-DeclStmt 0x12f826a48 <line:3:2, col:40>     | |-RecordDecl 0x12f826648 <col:2, col:9> col:9 struct ext4_sb_info     | `-VarDecl 0x12f8267b8 <col:2, col:39> col:23 used sbi 'struct ext4_sb_info *' cinit     |   `-ImplicitCastExpr 0x12f826a18 <col:29, col:39> 'struct ext4_sb_info *' <IntegralToPointer>     |     `-CallExpr 0x12f8269d8 <col:29, col:39> 'int'     |       |-ImplicitCastExpr 0x12f8269c0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12f826950 <col:29> 'int ()' Function 0x12f826898 'EXT4_SB' 'int ()'     |       `-ImplicitCastExpr 0x12f826a00 <col:37> 'struct super_block *' <LValueToRValue>     |         `-DeclRefExpr 0x12f826970 <col:37> 'struct super_block *' lvalue ParmVar 0x12f80e248 'sb' 'struct super_block *'     |-DeclStmt 0x12f826ca8 <line:4:2, col:41>     | |-RecordDecl 0x12f826a60 <col:2, col:9> col:9 struct ext4_super_block     | `-VarDecl 0x12f826bc8 <col:2, col:37> col:27 used es 'struct ext4_super_block *' cinit     |   `-RecoveryExpr 0x12f826c68 <col:32, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f826c30 <col:32> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'     |-IfStmt 0x138808980 <line:7:2, line:21:2>     | |-BinaryOperator 0x12f826e58 <line:7:6, line:8:33> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12f826e38 <line:7:6, col:26> 'int' contains-errors '>'     | | | |-RecoveryExpr 0x12f826cf8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12f826cc0 <col:6> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'     | | | `-RecoveryExpr 0x12f826e18 <col:26> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12f826dd8 <line:8:6, col:33> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x12f826d90 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12f826d58 <col:6> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'     | |   `-IntegerLiteral 0x12f826db8 <col:33> 'int' 0     | `-CompoundStmt 0x138808968 <col:36, line:21:2>     |   `-IfStmt 0x138808948 <line:11:3, line:20:3>     |     |-CallExpr 0x12f827128 <line:11:7, col:38> 'int'     |     | |-ImplicitCastExpr 0x12f827110 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x12f8270d0 <col:7> 'int ()' Function 0x12f827018 'ext4_has_feature_extra_isize' 'int ()'     |     | `-ImplicitCastExpr 0x12f827150 <col:36> 'struct super_block *' <LValueToRValue>     |     |   `-DeclRefExpr 0x12f8270f0 <col:36> 'struct super_block *' lvalue ParmVar 0x12f80e248 'sb' 'struct super_block *'     |     `-CompoundStmt 0x138808928 <col:41, line:20:3>     |       |-IfStmt 0x12f827498 <line:12:4, line:15:40>     |       | |-BinaryOperator 0x12f827350 <line:12:8, line:13:42> 'int' contains-errors '<'     |       | | |-RecoveryExpr 0x12f8271a0 <line:12:8, col:13> '<dependent type>' contains-errors lvalue     |       | | | `-DeclRefExpr 0x12f827168 <col:8> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'     |       | | `-CallExpr 0x12f827328 <line:13:8, col:42> '<dependent type>' contains-errors     |       | |   |-DeclRefExpr 0x12f8272a8 <col:8> 'int ()' Function 0x12f8271f0 'le16_to_cpu' 'int ()'     |       | |   `-RecoveryExpr 0x12f827300 <col:20, col:24> '<dependent type>' contains-errors lvalue     |       | |     `-DeclRefExpr 0x12f8272c8 <col:20> 'struct ext4_super_block *' contains-errors lvalue Var 0x12f826bc8 'es' 'struct ext4_super_block *'     |       | `-BinaryOperator 0x12f827478 <line:14:5, line:15:40> '<dependent type>' contains-errors '='     |       |   |-RecoveryExpr 0x12f8273a8 <line:14:5, col:10> '<dependent type>' contains-errors lvalue     |       |   | `-DeclRefExpr 0x12f827370 <col:5> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'     |       |   `-CallExpr 0x12f827450 <line:15:6, col:40> '<dependent type>' contains-errors     |       |     |-DeclRefExpr 0x12f8273d0 <col:6> 'int ()' Function 0x12f8271f0 'le16_to_cpu' 'int ()'     |       |     `-RecoveryExpr 0x12f827428 <col:18, col:22> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x12f8273f0 <col:18> 'struct ext4_super_block *' contains-errors lvalue Var 0x12f826bc8 'es' 'struct ext4_super_block *'     |       `-IfStmt 0x138808908 <line:16:4, line:19:39>     |         |-BinaryOperator 0x12f8275c0 <line:16:8, line:17:41> 'int' contains-errors '<'     |         | |-RecoveryExpr 0x12f8274f0 <line:16:8, col:13> '<dependent type>' contains-errors lvalue     |         | | `-DeclRefExpr 0x12f8274b8 <col:8> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'     |         | `-CallExpr 0x12f827598 <line:17:8, col:41> '<dependent type>' contains-errors     |         |   |-DeclRefExpr 0x12f827518 <col:8> 'int ()' Function 0x12f8271f0 'le16_to_cpu' 'int ()'     |         |   `-RecoveryExpr 0x12f827570 <col:20, col:24> '<dependent type>' contains-errors lvalue     |         |     `-DeclRefExpr 0x12f827538 <col:20> 'struct ext4_super_block *' contains-errors lvalue Var 0x12f826bc8 'es' 'struct ext4_super_block *'     |         `-BinaryOperator 0x1388088e8 <line:18:5, line:19:39> '<dependent type>' contains-errors '='     |           |-RecoveryExpr 0x138808818 <line:18:5, col:10> '<dependent type>' contains-errors lvalue     |           | `-DeclRefExpr 0x12f8275e0 <col:5> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'     |           `-CallExpr 0x1388088c0 <line:19:6, col:39> '<dependent type>' contains-errors     |             |-DeclRefExpr 0x138808840 <col:6> 'int ()' Function 0x12f8271f0 'le16_to_cpu' 'int ()'     |             `-RecoveryExpr 0x138808898 <col:18, col:22> '<dependent type>' contains-errors lvalue     |               `-DeclRefExpr 0x138808860 <col:18> 'struct ext4_super_block *' contains-errors lvalue Var 0x12f826bc8 'es' 'struct ext4_super_block *'     `-IfStmt 0x138808e10 <line:23:2, line:29:2>       |-BinaryOperator 0x138808af8 <line:23:6, line:24:13> 'int' contains-errors '>'       | |-BinaryOperator 0x138808ad8 <line:23:6, col:38> '<dependent type>' contains-errors '+'       | | |-RecoveryExpr 0x138808ab8 <col:6> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x1388089f0 <col:33, col:38> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x1388089b8 <col:33> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'       | `-RecoveryExpr 0x138808a70 <line:24:8, col:13> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x138808a38 <col:8> 'struct ext4_sb_info *' lvalue Var 0x12f8267b8 'sbi' 'struct ext4_sb_info *'       `-CompoundStmt 0x138808e00 <col:27, line:29:2> ","21112":"`-FunctionDecl 0x15700de88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x15700dd28 <col:22, col:37> col:37 referenced invalid context 'int *'   |-ParmVarDecl 0x15700dda8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x15702a4a0 <col:64, line:55:1>     |-CallExpr 0x157027a00 <line:5:3, col:65> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15700e170 <col:3> 'int ()' Function 0x15700e0b8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x15700e190 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x15700e2d0 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15700e290 <col:30> 'int ()' Function 0x15700e1d8 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x15700e2b0 <col:40> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x15700e3b0 <col:47, col:53> '<dependent type>' contains-errors lvalue ->values_count     |   `-RecoveryExpr 0x15700e390 <col:47> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157027be0 <line:6:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157027a38 <col:3> 'int ()' Function 0x15700e0b8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x157027a58 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x157027b98 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x157027b58 <col:30> 'int ()' Function 0x157027aa0 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x157027b78 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x157027bc0 <col:48> 'int' 1     |-DeclStmt 0x157027e30 <line:8:3, col:58>     | `-VarDecl 0x157027c30 <col:3, col:23> col:23 invalid input0 'const int *'     |-DeclStmt 0x157028050 <line:9:3, col:55>     | `-VarDecl 0x157027e60 <col:3, col:54> col:13 used dimension_size 'const int' cinit     |   `-BinaryOperator 0x157028030 <col:30, col:54> '<dependent type>' contains-errors '+'     |     |-CallExpr 0x157027fe8 <col:30, col:50> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x157027fa8 <col:30> 'int ()' Function 0x157027ef0 'NumDimensions' 'int ()'     |     | `-RecoveryExpr 0x157027fc8 <col:44> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x157028010 <col:54> 'int' 1     |-IfStmt 0x1570281c0 <line:10:3, line:12:3>     | |-BinaryOperator 0x157028170 <line:10:7, col:20> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x157028128 <col:7, col:13> '<dependent type>' contains-errors lvalue ->axis     | | | `-RecoveryExpr 0x157028108 <col:7> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1570280c8 <col:20> 'int' 0     | `-CompoundStmt 0x1570281b0 <col:23, line:12:3>     |-CallExpr 0x1570284a0 <line:13:3, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1570282c0 <col:3> 'int ()' Function 0x157028208 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x1570282e0 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x157028480 <col:27, col:58> 'int' contains-errors '>='     |   |-CallExpr 0x157028340 <col:27, col:47> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x157028300 <col:27> 'int ()' Function 0x157027ef0 'NumDimensions' 'int ()'     |   | `-RecoveryExpr 0x157028320 <col:41> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x157028438 <col:52, col:58> '<dependent type>' contains-errors lvalue ->axis     |     `-RecoveryExpr 0x157028418 <col:52> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157028668 <line:14:3, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1570284d0 <col:3> 'int ()' Function 0x157028208 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x1570284f0 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x157028648 <col:27, col:41> 'int' contains-errors '>='     |   |-CXXDependentScopeMemberExpr 0x157028600 <col:27, col:33> '<dependent type>' contains-errors lvalue ->axis     |   | `-RecoveryExpr 0x1570285e0 <col:27> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x157028570 <col:41> 'int' 0     |-IfStmt 0x157029040 <line:16:3, line:22:3>     | |-RecoveryExpr 0x157028908 <line:16:7, line:18:55> '_Bool' contains-errors     | `-CompoundStmt 0x157029028 <col:69, line:22:3>     |   `-CallExpr 0x157028ff0 <line:19:5, line:20:57> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x157028970 <line:19:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |     | `-RecoveryExpr 0x157028948 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x157028928 <col:5> 'int *' lvalue ParmVar 0x15700dd28 'context' 'int *'     |     |-RecoveryExpr 0x1570289b8 <col:26> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x157028e40 <col:35> 'char[4]' lvalue \"STR\"     |     `-CallExpr 0x157028fc8 <line:20:26, col:56> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x157028f40 <col:26> 'int ()' Function 0x157028e88 'TfLiteTypeGetName' 'int ()'     |       `-CXXDependentScopeMemberExpr 0x157028f80 <col:44, col:52> '<dependent type>' contains-errors lvalue ->type     |         `-RecoveryExpr 0x157028f60 <col:44> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1570297d8 <line:31:3, col:51>     | `-VarDecl 0x157029708 <col:3, col:25> col:25 invalid input_shape 'const int *'     |-DeclStmt 0x157029a38 <line:33:3, col:12>     | `-VarDecl 0x1570299b0 <col:3, col:11> col:7 used i 'int' cinit     |   `-IntegerLiteral 0x157029a18 <col:11> 'int' 0     `-ForStmt 0x157029d90 <line:34:3, line:40:3>       |-DeclStmt 0x157029af0 <line:34:8, col:21>       | `-VarDecl 0x157029a68 <col:8, col:20> col:12 used index 'int' cinit       |   `-IntegerLiteral 0x157029ad0 <col:20> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x157029b78 <col:23, col:31> 'int' contains-errors '<'       | |-ImplicitCastExpr 0x157029b48 <col:23> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x157029b08 <col:23> 'int' lvalue Var 0x157029a68 'index' 'int'       | `-ImplicitCastExpr 0x157029b60 <col:31> 'int' contains-errors <LValueToRValue>       |   `-DeclRefExpr 0x157029b28 <col:31> 'const int' contains-errors lvalue Var 0x157027e60 'dimension_size' 'const int'       |-UnaryOperator 0x157029bb8 <col:47, col:49> 'int' prefix '++'       | `-DeclRefExpr 0x157029b98 <col:49> 'int' lvalue Var 0x157029a68 'index' 'int'       `-CompoundStmt 0x157029d78 <col:56, line:40:3>         `-IfStmt 0x157029d48 <line:35:5, line:39:5> has_else           |-RecoveryExpr 0x157029bf0 <line:35:9, col:24> '_Bool' contains-errors           |-CompoundStmt 0x157029c30 <col:30, line:37:5>           `-CompoundStmt 0x157029d38 <col:12, line:39:5> ","20990":"`-FunctionDecl 0x155128238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x155128158 <col:8> col:8 QueryPlannerTest 'int'   |-ParmVarDecl 0x1551280d8 <col:26> col:26 AllElemMatchCompound 'int'   `-CompoundStmt 0x155808c68 <col:48, line:18:1>     |-CallExpr 0x155808530 <line:3:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155128460 <col:5> 'int ()' Function 0x1551283a8 'addIndex' 'int ()'     | |-CallExpr 0x1558084a0 <col:14, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x155128560 <col:14> 'int ()' Function 0x1551284a8 'BSON' 'int ()'     | | `-RecoveryExpr 0x155808470 <col:19, col:28> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x1551285c0 <col:19> 'char[4]' lvalue \"STR\"     | |   `-IntegerLiteral 0x1551285e0 <col:28> 'int' 1     | `-RecoveryExpr 0x155808510 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155808870 <line:5:5, line:7:24> 'int'     | |-ImplicitCastExpr 0x155808858 <line:5:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x155808640 <col:5> 'int ()' Function 0x155808588 'runQuery' 'int ()'     | `-CallExpr 0x155808818 <line:6:9, line:7:23> 'int'     |   |-ImplicitCastExpr 0x155808800 <line:6:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x155808740 <col:9> 'int ()' Function 0x155808688 'fromjson' 'int ()'     |   `-ImplicitCastExpr 0x155808840 <col:18, line:7:18> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x1558087a0 <line:6:18, line:7:18> 'char[7]' lvalue \"STRSTR\"     |-CallExpr 0x1558089d0 <line:9:5, col:26> 'int'     | |-ImplicitCastExpr 0x1558089b8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x155808978 <col:5> 'int ()' Function 0x1558088c0 'assertNumSolutions' 'int ()'     | `-IntegerLiteral 0x155808998 <col:24> 'unsigned int' 2     |-CallExpr 0x155808b30 <line:10:5, col:31> 'int'     | |-ImplicitCastExpr 0x155808b18 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x155808ad8 <col:5> 'int ()' Function 0x155808a20 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x155808b58 <col:26> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x155808af8 <col:26> 'char[4]' lvalue \"STR\"     `-CallExpr 0x155808c28 <line:11:5, line:17:14> 'int'       |-ImplicitCastExpr 0x155808c10 <line:11:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x155808b70 <col:5> 'int ()' Function 0x155808a20 'assertSolutionExists' 'int ()'       `-ImplicitCastExpr 0x155808c50 <line:12:9, line:17:9> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x155808bd0 <line:12:9, line:17:9> 'char[19]' lvalue \"STRSTRSTRSTRSTRSTR\" ","20731":"`-FunctionDecl 0x1268285b0  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1268286b0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x126828718 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x126828780 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x126828658 <<invalid sloc>> Implicit 882 ","21097":"`-FunctionDecl 0x11f00e350  line:1:13 fpm_resources_discard 'void (struct fpm_child_s *)' static   |-ParmVarDecl 0x11f00e248 <col:35, col:55> col:55 used child 'struct fpm_child_s *'   `-CompoundStmt 0x11f026b28 <line:2:1, line:6:1>     |-CallExpr 0x11f0267f8 <line:3:2, col:32> 'int'     | |-ImplicitCastExpr 0x11f0267e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f026770 <col:2> 'int ()' Function 0x11f0266b8 'fpm_scoreboard_proc_free' 'int ()'     | `-ImplicitCastExpr 0x11f026820 <col:27> 'struct fpm_child_s *' <LValueToRValue>     |   `-DeclRefExpr 0x11f026790 <col:27> 'struct fpm_child_s *' lvalue ParmVar 0x11f00e248 'child' 'struct fpm_child_s *'     |-CallExpr 0x11f026970 <line:4:2, col:31> 'int'     | |-ImplicitCastExpr 0x11f026958 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f026918 <col:2> 'int ()' Function 0x11f026860 'fpm_stdio_discard_pipes' 'int ()'     | `-ImplicitCastExpr 0x11f026998 <col:26> 'struct fpm_child_s *' <LValueToRValue>     |   `-DeclRefExpr 0x11f026938 <col:26> 'struct fpm_child_s *' lvalue ParmVar 0x11f00e248 'child' 'struct fpm_child_s *'     `-CallExpr 0x11f026ae8 <line:5:2, col:22> 'int'       |-ImplicitCastExpr 0x11f026ad0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x11f026a90 <col:2> 'int ()' Function 0x11f0269d8 'fpm_child_free' 'int ()'       `-ImplicitCastExpr 0x11f026b10 <col:17> 'struct fpm_child_s *' <LValueToRValue>         `-DeclRefExpr 0x11f026ab0 <col:17> 'struct fpm_child_s *' lvalue ParmVar 0x11f00e248 'child' 'struct fpm_child_s *' ","20198":"`-FunctionDecl 0x14e80e078  line:1:9 invalid _cmsOptimizePipeline 'int (int **, int, int *, int *, int *)'   |-ParmVarDecl 0x14e80dd60 <col:30, col:47> col:47 invalid PtrLut 'int **'   |-ParmVarDecl 0x14e80dde0 <line:2:30, col:47> col:47 used Intent 'int'   |-ParmVarDecl 0x14e80de60 <line:3:30, col:47> col:47 invalid InputFormat 'int *'   |-ParmVarDecl 0x14e80dee0 <line:4:30, col:47> col:47 invalid OutputFormat 'int *'   |-ParmVarDecl 0x14e80df60 <line:5:30, col:47> col:47 invalid dwFlags 'int *'   `-CompoundStmt 0x14e828350 <line:6:1, line:50:1>     |-IfStmt 0x14e827690 <line:11:5, line:15:5>     | |-BinaryOperator 0x14e80e268 <line:11:9, col:20> '<dependent type>' contains-errors '&'     | | |-UnaryOperator 0x14e80e230 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x14e80e218 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x14e80e160 <col:10> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14e80e248 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e827670 <col:41, line:15:5>     |   |-CallExpr 0x14e827450 <line:13:9, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e80e3e0 <col:9> 'int ()' Function 0x14e80e328 'PreOptimize' 'int ()'     |   | `-UnaryOperator 0x14e827438 <col:21, col:22> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   `-ImplicitCastExpr 0x14e827420 <col:22> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14e827400 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14e827660 <line:14:9, col:87>     |     `-CallExpr 0x14e827618 <col:16, col:87> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14e827558 <col:16> 'int ()' Function 0x14e8274a0 'OptimizeByResampling' 'int ()'     |       |-RecoveryExpr 0x14e827578 <col:37> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x14e827598 <col:45> 'int' lvalue ParmVar 0x14e80dde0 'Intent' 'int'     |       |-RecoveryExpr 0x14e8275b8 <col:53> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x14e8275d8 <col:66> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x14e8275f8 <col:80> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e827d90 <line:18:5, line:21:5>     | |-BinaryOperator 0x14e8278f0 <line:18:9, col:33> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14e827888 <col:9, col:21> '<dependent type>' contains-errors lvalue ->Elements     | | | `-ParenExpr 0x14e827868 <col:9, col:17> '<dependent type>' contains-errors     | | |   `-UnaryOperator 0x14e827850 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     | | |     `-ImplicitCastExpr 0x14e827838 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | | |       `-RecoveryExpr 0x14e8276b0 <col:11> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14e8278d0 <col:33> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e827d70 <col:39, line:21:5>     |   |-CallExpr 0x14e827ce0 <line:19:9, col:99> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e8279f0 <col:9> 'int ()' Function 0x14e827938 '_cmsPipelineSetOptimizationParameters' 'int ()'     |   | |-UnaryOperator 0x14e827bf8 <col:47, col:48> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x14e827be0 <col:48> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x14e827a10 <col:48> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14e827c10 <col:56> '<dependent type>' contains-errors lvalue     |   | |-CStyleCastExpr 0x14e827c78 <col:72, col:81> 'void *' contains-errors <Dependent>     |   | | `-UnaryOperator 0x14e827c60 <col:80, col:81> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | |   `-ImplicitCastExpr 0x14e827c48 <col:81> '<dependent type>' contains-errors <LValueToRValue>     |   | |     `-RecoveryExpr 0x14e827a78 <col:81> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14e827ca0 <col:89> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14e827cc0 <col:95> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14e827d60 <line:20:9, col:16>     |     `-RecoveryExpr 0x14e827d40 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14e8281b8 <line:27:5, line:30:5>       |-BinaryOperator 0x14e828088 <line:27:9, col:33> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x14e828020 <col:9, col:21> '<dependent type>' contains-errors lvalue ->Elements       | | `-ParenExpr 0x14e828000 <col:9, col:17> '<dependent type>' contains-errors       | |   `-UnaryOperator 0x14e827fe8 <col:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow       | |     `-ImplicitCastExpr 0x14e827fd0 <col:11> '<dependent type>' contains-errors <LValueToRValue>       | |       `-RecoveryExpr 0x14e827e48 <col:11> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14e828068 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14e8281a8 <col:39, line:30:5> ","20317":"`-FunctionDecl 0x15700dec0  line:1:13 save_key_to 'void (const char *, const char *, const char *)' static   |-ParmVarDecl 0x15700dcd8 <col:25, col:37> col:37 used algo 'const char *'   |-ParmVarDecl 0x15700dd58 <col:43, col:55> col:55 used name 'const char *'   |-ParmVarDecl 0x15700ddd8 <col:61, col:73> col:73 used keydata 'const char *'   `-CompoundStmt 0x15581ab58 <line:2:1, line:12:1>     |-DeclStmt 0x15700e048 <line:3:2, col:19>     | `-VarDecl 0x15700dfe0 <col:2, col:14> col:14 used error 'const char *'     |-DeclStmt 0x155819c40 <line:4:2, line:5:36>     | |-RecordDecl 0x15700e060 <line:4:2, col:9> col:9 struct dict_transaction_context     | `-VarDecl 0x15700e1c8 <col:2, line:5:35> line:4:35 used ctx 'struct dict_transaction_context *' cinit     |   `-CallExpr 0x155819c00 <line:5:3, col:35> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15700e360 <col:3> 'int ()' Function 0x15700e2a8 'dict_transaction_begin' 'int ()'     |     `-RecoveryExpr 0x15700e3c0 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15581a260 <line:6:2, col:25> 'const char *' '='     | |-DeclRefExpr 0x155819c58 <col:2> 'const char *' lvalue ParmVar 0x15700dcd8 'algo' 'const char *'     | `-ImplicitCastExpr 0x155819e28 <col:9, col:25> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x155819de8 <col:9, col:25> 'int'     |     |-ImplicitCastExpr 0x155819dd0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x155819d58 <col:9> 'int ()' Function 0x155819ca0 't_str_ucase' 'int ()'     |     `-ImplicitCastExpr 0x155819e10 <col:21> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x155819d78 <col:21> 'const char *' lvalue ParmVar 0x15700dcd8 'algo' 'const char *'     |-CallExpr 0x15581a670 <line:7:2, line:9:11> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15581a360 <line:7:2> 'int ()' Function 0x15581a2a8 'dict_set' 'int ()'     | |-DeclRefExpr 0x15581a380 <col:11> 'struct dict_transaction_context *' contains-errors lvalue Var 0x15700e1c8 'ctx' 'struct dict_transaction_context *'     | |-CallExpr 0x15581a630 <col:16, line:8:17> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15581a480 <line:7:16> 'int ()' Function 0x15581a3c8 't_strconcat' 'int ()'     | | |-RecoveryExpr 0x15581a5f0 <col:28> '<dependent type>' contains-errors lvalue     | | |-StringLiteral 0x15581a500 <col:46> 'char[4]' lvalue \"STR\"     | | |-DeclRefExpr 0x15581a520 <line:8:7> 'const char *' lvalue ParmVar 0x15700dd58 'name' 'const char *'     | | `-RecoveryExpr 0x15581a610 <col:13> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x15581a598 <line:9:4> 'const char *' lvalue ParmVar 0x15700ddd8 'keydata' 'const char *'     `-IfStmt 0x15581ab38 <line:10:2, line:11:29>       |-BinaryOperator 0x15581a920 <line:10:6, col:46> 'int' contains-errors '<'       | |-CallExpr 0x15581a8d0 <col:6, col:42> 'int' contains-errors       | | |-ImplicitCastExpr 0x15581a8b8 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x15581a788 <col:6> 'int ()' Function 0x15581a6d0 'dict_transaction_commit' 'int ()'       | | |-UnaryOperator 0x15581a830 <col:30, col:31> 'struct dict_transaction_context **' contains-errors prefix '&' cannot overflow       | | | `-DeclRefExpr 0x15581a7a8 <col:31> 'struct dict_transaction_context *' contains-errors lvalue Var 0x15700e1c8 'ctx' 'struct dict_transaction_context *'       | | `-UnaryOperator 0x15581a8a0 <col:36, col:37> 'const char **' prefix '&' cannot overflow       | |   `-DeclRefExpr 0x15581a848 <col:37> 'const char *' lvalue Var 0x15700dfe0 'error' 'const char *'       | `-IntegerLiteral 0x15581a900 <col:46> 'int' 0       `-CallExpr 0x15581aab8 <line:11:3, col:29> 'int'         |-ImplicitCastExpr 0x15581aaa0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x15581aa20 <col:3> 'int ()' Function 0x15581a968 'i_error' 'int ()'         |-ImplicitCastExpr 0x15581aaf0 <col:11> 'char *' <ArrayToPointerDecay>         | `-StringLiteral 0x15581aa40 <col:11> 'char[4]' lvalue \"STR\"         |-ImplicitCastExpr 0x15581ab08 <col:18> 'const char *' <LValueToRValue>         | `-DeclRefExpr 0x15581aa60 <col:18> 'const char *' lvalue ParmVar 0x15700dd58 'name' 'const char *'         `-ImplicitCastExpr 0x15581ab20 <col:24> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x15581aa80 <col:24> 'const char *' lvalue Var 0x15700dfe0 'error' 'const char *' ","21092":"`-FunctionDecl 0x1489281a8  line:1:1 INST_HANDLER 'int (int)'   |-ParmVarDecl 0x1489280d8 <col:15> col:15 sbrx 'int'   `-CompoundStmt 0x148943b18 <col:21, line:27:1>     |-DeclStmt 0x148928390 <line:3:2, col:22>     | `-VarDecl 0x1489282b8 <col:2, col:6> col:6 used b 'int'     |-DeclStmt 0x148928518 <line:4:2, col:56>     | `-VarDecl 0x1489283c0 <col:2, col:6> col:6 used r 'int'     |-CallExpr 0x1489433d8 <line:9:2, line:12:7> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148928640 <line:9:2> 'int ()' Function 0x148928588 'avr_op_analyze' 'int ()'     | |-RecoveryExpr 0x148943120 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x148943160 <line:10:4, col:5> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x148943140 <col:5> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x148943248 <line:11:4, col:19> '<dependent type>' contains-errors '+'     | | |-CXXDependentScopeMemberExpr 0x148943198 <col:4, col:8> '<dependent type>' contains-errors lvalue ->addr     | | | `-RecoveryExpr 0x148943178 <col:4> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x148943200 <col:15, col:19> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x1489431e0 <col:15> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x1489432f0 <col:25, col:35> '<dependent type>' contains-errors '+'     | | |-RecoveryExpr 0x148943268 <col:25> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1489432a8 <col:31, col:35> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x148943288 <col:31> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x148943398 <col:41, col:51> '<dependent type>' contains-errors '-'     | | |-RecoveryExpr 0x148943310 <col:41> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x148943350 <col:47, col:51> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x148943330 <col:47> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1489433b8 <line:12:4> '<dependent type>' contains-errors lvalue     |-CallExpr 0x148943648 <line:13:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148943508 <col:2> 'int ()' Function 0x148943450 'r_strbuf_fini' 'int ()'     | `-UnaryOperator 0x148943630 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1489435e8 <col:18, col:26> '<dependent type>' contains-errors lvalue .esil     |     `-RecoveryExpr 0x1489435c8 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x148943998 <line:22:2, col:21> 'int'       |-ImplicitCastExpr 0x148943980 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x148943890 <col:2> 'int ()' Function 0x1489437d8 'ESIL_A' 'int ()'       |-ImplicitCastExpr 0x1489439d0 <col:10> 'char *' <ArrayToPointerDecay>       | `-StringLiteral 0x1489438f0 <col:10> 'char[4]' lvalue \"STR\"       |-ImplicitCastExpr 0x1489439e8 <col:17> 'int' <LValueToRValue>       | `-DeclRefExpr 0x148943910 <col:17> 'int' lvalue Var 0x1489282b8 'b' 'int'       `-ImplicitCastExpr 0x148943a00 <col:20> 'int' <LValueToRValue>         `-DeclRefExpr 0x148943930 <col:20> 'int' lvalue Var 0x1489283c0 'r' 'int' ","20906":"`-FunctionDecl 0x13680de88  line:1:20 invalid TensorSliceToEigenMatrix 'int (int *, int)' static   |-ParmVarDecl 0x13680dd28 <col:45, col:53> col:53 invalid t 'int *'   |-ParmVarDecl 0x13680dda8 <col:56, col:60> col:60 used slice 'int'   `-CompoundStmt 0x136827890 <col:67, line:5:3> ","20895":"`-FunctionDecl 0x1511285e8  line:1:12 invalid on_header 'int (int *, const int *, const int *, int, const int *, int, int, void *)' static   |-ParmVarDecl 0x151128128 <col:22, col:39> col:39 invalid ngh2 'int *'   |-ParmVarDecl 0x1511281a8 <col:45, col:66> col:66 invalid frame 'const int *'   |-ParmVarDecl 0x151128228 <line:2:22, col:37> col:37 invalid namearg 'const int *'   |-ParmVarDecl 0x1511282a8 <col:46, col:53> col:53 invalid nlen 'int'   |-ParmVarDecl 0x151128328 <line:3:22, col:37> col:37 invalid valuearg 'const int *'   |-ParmVarDecl 0x1511283a8 <col:47, col:54> col:54 invalid vlen 'int'   |-ParmVarDecl 0x151128428 <col:60, col:68> col:68 invalid flags 'int'   |-ParmVarDecl 0x1511284a8 <line:4:22, col:28> col:28 used user_data 'void *'   `-CompoundStmt 0x151143248 <line:5:1, line:24:1>     |-DeclStmt 0x151142800 <line:8:5, col:41>     | `-VarDecl 0x151128738 <col:5, col:34> col:17 used n 'const char *' cinit     |   `-CStyleCastExpr 0x1511287d8 <col:21, col:34> 'const char *' contains-errors <Dependent>     |     `-RecoveryExpr 0x1511287a0 <col:34> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1511428f8 <line:9:5, col:42>     | `-VarDecl 0x151142830 <col:5, col:34> col:17 used v 'const char *' cinit     |   `-CStyleCastExpr 0x1511428d0 <col:21, col:34> 'const char *' contains-errors <Dependent>     |     `-RecoveryExpr 0x151142898 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1511431e8 <line:12:5, line:21:5> has_else     | |-BinaryOperator 0x151142aa0 <line:12:9, col:46> 'int' contains-errors '&&'     | | |-BinaryOperator 0x151142a80 <col:9, col:27> 'int' contains-errors '=='     | | | |-CXXDependentScopeMemberExpr 0x1511429a0 <col:9, col:19> '<dependent type>' contains-errors lvalue .type     | | | | `-CXXDependentScopeMemberExpr 0x151142958 <col:9, col:16> '<dependent type>' contains-errors lvalue ->hd     | | | |   `-RecoveryExpr 0x151142938 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x151142a60 <col:27> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x151142a20 <col:46> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x151143078 <col:52, line:19:5>     | | `-IfStmt 0x151143058 <line:14:9, line:18:9>     | |   |-RecoveryExpr 0x151142d58 <line:14:13> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x151143040 <col:21, line:18:9>     | |     `-IfStmt 0x151143020 <line:15:13, line:17:13>     | |       |-CallExpr 0x151142f78 <line:15:17, col:72> '<dependent type>' contains-errors     | |       | |-DeclRefExpr 0x151142e58 <col:17> 'int ()' Function 0x151142da0 'h2_proxy_stream_add_header_out' 'int ()'     | |       | |-RecoveryExpr 0x151142f58 <col:48> '<dependent type>' contains-errors lvalue     | |       | |-DeclRefExpr 0x151142e90 <col:56> 'const char *' contains-errors lvalue Var 0x151128738 'n' 'const char *'     | |       | |-RecoveryExpr 0x151142eb0 <col:59> '<dependent type>' contains-errors lvalue     | |       | |-DeclRefExpr 0x151142ed0 <col:65> 'const char *' contains-errors lvalue Var 0x151142830 'v' 'const char *'     | |       | `-RecoveryExpr 0x151142ef0 <col:68> '<dependent type>' contains-errors lvalue     | |       `-CompoundStmt 0x151143008 <col:75, line:17:13>     | |         `-ReturnStmt 0x151142ff8 <line:16:17, col:24>     | |           `-RecoveryExpr 0x151142fd8 <col:24> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x1511431c8 <line:20:10, line:21:5>     |   |-BinaryOperator 0x151143198 <line:20:14, col:32> 'int' contains-errors '=='     |   | |-CXXDependentScopeMemberExpr 0x1511430f8 <col:14, col:24> '<dependent type>' contains-errors lvalue .type     |   | | `-CXXDependentScopeMemberExpr 0x1511430b0 <col:14, col:21> '<dependent type>' contains-errors lvalue ->hd     |   | |   `-RecoveryExpr 0x151143090 <col:14> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x151143178 <col:32> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x1511431b8 <col:54, line:21:5>     `-ReturnStmt 0x151143238 <line:23:5, col:12>       `-IntegerLiteral 0x151143218 <col:12> 'int' 0 ","20356":"`-FunctionDecl 0x12c124cf8  col:6 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12c124df8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12c124e60 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12c124ec8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12c124da0 <<invalid sloc>> Implicit 883 ","21091":"`-FunctionDecl 0x13e00ddc8  line:1:7 invalid qemu_mac_strdup_printf 'char *(const int *)'   |-ParmVarDecl 0x13e00dcf0 <col:30, col:45> col:45 invalid macaddr 'const int *'   `-CompoundStmt 0x13e00e388 <line:2:1, line:6:1>     `-ReturnStmt 0x13e00e378 <line:3:5, line:5:62>       `-CallExpr 0x13e00e320 <line:3:12, line:5:62> '<dependent type>' contains-errors         |-DeclRefExpr 0x13e00dfd0 <line:3:12> 'int ()' Function 0x13e00df18 'g_strdup_printf' 'int ()'         |-StringLiteral 0x13e00e030 <col:28> 'char[4]' lvalue \"STR\"         |-ArraySubscriptExpr 0x13e00e0a8 <line:4:28, col:37> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e090 <col:28> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e050 <col:28> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e070 <col:36> 'int' 0         |-ArraySubscriptExpr 0x13e00e120 <col:40, col:49> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e108 <col:40> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e0c8 <col:40> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e0e8 <col:48> 'int' 1         |-ArraySubscriptExpr 0x13e00e198 <col:52, col:61> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e180 <col:52> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e140 <col:52> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e160 <col:60> 'int' 2         |-ArraySubscriptExpr 0x13e00e210 <line:5:28, col:37> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e1f8 <col:28> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e1b8 <col:28> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e1d8 <col:36> 'int' 3         |-ArraySubscriptExpr 0x13e00e288 <col:40, col:49> '<dependent type>' contains-errors lvalue         | |-ImplicitCastExpr 0x13e00e270 <col:40> '<dependent type>' contains-errors <LValueToRValue>         | | `-RecoveryExpr 0x13e00e230 <col:40> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13e00e250 <col:48> 'int' 4         `-ArraySubscriptExpr 0x13e00e300 <col:52, col:61> '<dependent type>' contains-errors lvalue           |-ImplicitCastExpr 0x13e00e2e8 <col:52> '<dependent type>' contains-errors <LValueToRValue>           | `-RecoveryExpr 0x13e00e2a8 <col:52> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x13e00e2c8 <col:60> 'int' 5 ","21169":"`-FunctionDecl 0x12600dd90  line:1:6 cpu_exec_init_all 'void (void)'   `-CompoundStmt 0x12600e3c0 <line:2:1, line:8:1>     |-CallExpr 0x12600e0f0 <line:4:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12600dfb0 <col:5> 'int ()' Function 0x12600def8 'qemu_mutex_init' 'int ()'     | `-UnaryOperator 0x12600e0d8 <col:21, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12600e090 <col:22, col:31> '<dependent type>' contains-errors lvalue .mutex     |     `-RecoveryExpr 0x12600e070 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12600e268 <line:5:5, col:21> 'int'     | `-ImplicitCastExpr 0x12600e250 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12600e1f8 <col:5> 'int ()' Function 0x12600e140 'memory_map_init' 'int ()'     `-CallExpr 0x12600e3a0 <line:6:5, col:17> 'int'       `-ImplicitCastExpr 0x12600e388 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12600e368 <col:5> 'int ()' Function 0x12600e2b0 'io_mem_init' 'int ()' ","20205":"`-FunctionDecl 0x159940da8  line:1:12 ebb_get 'int (struct task_struct *, const struct user_regset *, unsigned int, unsigned int, void *, int)' static   |-ParmVarDecl 0x159928648 <col:20, col:40> col:40 used target 'struct task_struct *'   |-ParmVarDecl 0x159940a28 <line:2:9, col:35> col:35 regset 'const struct user_regset *'   |-ParmVarDecl 0x159940aa8 <line:3:9, col:22> col:22 used pos 'unsigned int'   |-ParmVarDecl 0x159940b28 <col:27, col:40> col:40 used count 'unsigned int'   |-ParmVarDecl 0x159940ba8 <line:4:9, col:15> col:15 used kbuf 'void *'   |-ParmVarDecl 0x159940c20 <col:21, col:26> col:26 __user 'int'   `-CompoundStmt 0x159944370 <line:5:1, line:18:1>     |-CallExpr 0x159941358 <line:7:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159940ff0 <col:2> 'int ()' Function 0x159940f38 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x159941338 <col:15, col:62> 'int' contains-errors '!='     |   |-BinaryOperator 0x1599412d0 <col:15, col:48> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x159941270 <col:15, col:24> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1599410f0 <col:15> 'int ()' Function 0x159941038 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x159941250 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x1599412b0 <col:28, col:48> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x159941310 <col:53, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1599411a8 <col:53> 'int ()' Function 0x159941038 'TSO' 'int ()'     |     `-RecoveryExpr 0x1599412f0 <col:57> '<dependent type>' contains-errors lvalue     |-CallExpr 0x159941608 <line:8:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159941380 <col:2> 'int ()' Function 0x159940f38 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x1599415e8 <col:15, col:62> 'int' contains-errors '!='     |   |-BinaryOperator 0x159941580 <col:15, col:48> '<dependent type>' contains-errors '+'     |   | |-CallExpr 0x159941520 <col:15, col:24> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1599413a0 <col:15> 'int ()' Function 0x159941038 'TSO' 'int ()'     |   | | `-RecoveryExpr 0x159941500 <col:19> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x159941560 <col:28, col:48> 'unsigned long' sizeof 'unsigned long'     |   `-CallExpr 0x1599415c0 <col:53, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x159941458 <col:53> 'int ()' Function 0x159941038 'TSO' 'int ()'     |     `-RecoveryExpr 0x1599415a0 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159941890 <line:10:2, line:11:11>     | |-UnaryOperator 0x1599417d0 <line:10:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1599417a8 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x159941710 <col:7> 'int ()' Function 0x159941658 'cpu_has_feature' 'int ()'     | |   `-RecoveryExpr 0x159941788 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x159941880 <line:11:3, col:11>     |   `-UnaryOperator 0x159941868 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x159941850 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x159941830 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159943e40 <line:13:2, line:14:11>     | |-UnaryOperator 0x159941970 <line:13:6, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159941958 <col:7, col:22> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x159941910 <col:7, col:22> '<dependent type>' contains-errors lvalue .used_ebb     | |     `-RecoveryExpr 0x1599418e8 <col:7, col:15> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1599418b0 <col:7> 'struct task_struct *' lvalue ParmVar 0x159928648 'target' 'struct task_struct *'     | `-ReturnStmt 0x159943e30 <line:14:3, col:11>     |   `-UnaryOperator 0x159943e18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x159943e00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1599419d0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x159944360 <line:16:2, line:17:55>       `-CallExpr 0x159944308 <line:16:9, line:17:55> '<dependent type>' contains-errors         |-DeclRefExpr 0x159943f40 <line:16:9> 'int ()' Function 0x159943e88 'user_regset_copyout' 'int ()'         |-UnaryOperator 0x159943fb0 <col:29, col:30> 'unsigned int *' prefix '&' cannot overflow         | `-DeclRefExpr 0x159943f60 <col:30> 'unsigned int' lvalue ParmVar 0x159940aa8 'pos' 'unsigned int'         |-UnaryOperator 0x159943fe8 <col:35, col:36> 'unsigned int *' prefix '&' cannot overflow         | `-DeclRefExpr 0x159943fc8 <col:36> 'unsigned int' lvalue ParmVar 0x159940b28 'count' 'unsigned int'         |-UnaryOperator 0x159944050 <col:43, col:44> 'void **' prefix '&' cannot overflow         | `-DeclRefExpr 0x159944000 <col:44> 'void *' lvalue ParmVar 0x159940ba8 'kbuf' 'void *'         |-UnaryOperator 0x159944280 <col:50, col:51> 'void **' prefix '&' cannot overflow         | `-DeclRefExpr 0x159944260 <col:51> 'void *' lvalue ParmVar 0x159940ba8 'kbuf' 'void *'         |-UnaryOperator 0x159944140 <line:17:4, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-CXXDependentScopeMemberExpr 0x1599440f8 <col:5, col:20> '<dependent type>' contains-errors lvalue .ebbrr         |   `-RecoveryExpr 0x1599440d0 <col:5, col:13> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x159944098 <col:5> 'struct task_struct *' lvalue ParmVar 0x159928648 'target' 'struct task_struct *'         |-IntegerLiteral 0x159944158 <col:27> 'int' 0         `-BinaryOperator 0x1599442e8 <col:30, col:54> 'unsigned long' '*'           |-ImplicitCastExpr 0x1599442d0 <col:30> 'unsigned long' <IntegralCast>           | `-IntegerLiteral 0x159944178 <col:30> 'int' 3           `-UnaryExprOrTypeTraitExpr 0x1599442b0 <col:34, col:54> 'unsigned long' sizeof 'unsigned long' ","21238":"`-FunctionDecl 0x14580de88  line:1:1 invalid compile_endif 'int (char *, int *)'   |-ParmVarDecl 0x14580dcf0 <col:15, col:23> col:23 used arg 'char *'   |-ParmVarDecl 0x14580dda8 <col:28, col:36> col:36 referenced invalid cctx 'int *'   `-CompoundStmt 0x145828e08 <line:2:1, line:48:1>     |-IfStmt 0x14580e290 <line:8:5, line:9:9>     | |-CallExpr 0x14580e220 <line:8:9, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14580e1e0 <col:9> 'int ()' Function 0x14580e128 'misplaced_cmdmod' 'int ()'     | | `-RecoveryExpr 0x14580e200 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14580e280 <line:9:2, col:9>     |   `-RecoveryExpr 0x14580e260 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1458287d8 <line:11:5, line:15:5>     | |-BinaryOperator 0x1458284c8 <line:11:9, col:44> 'int' contains-errors '||'     | | |-BinaryOperator 0x145828400 <col:9, col:18> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x14580e3b8 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x14580e3d8 <col:18> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1458284a8 <col:26, col:44> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x145828440 <col:26, col:33> '<dependent type>' contains-errors lvalue ->se_type     | |   | `-RecoveryExpr 0x145828420 <col:26> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x145828488 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1458287c0 <line:12:5, line:15:5>     |   `-CallExpr 0x145828798 <line:13:2, col:28> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1458285c8 <col:2> 'int ()' Function 0x145828510 'emsg' 'int ()'     |     `-CallExpr 0x145828770 <col:7, col:27> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1458286c8 <col:7> 'int ()' Function 0x145828610 '_' 'int ()'     |       `-RecoveryExpr 0x145828750 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145828a00 <line:21:5, line:26:5>     | |-RecoveryExpr 0x1458289d0 <line:21:9, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x1458289f0 <line:22:5, line:26:5>     |-CallExpr 0x145828d80 <line:46:5, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145828d40 <col:5> 'int ()' Function 0x145828c88 'drop_scope' 'int ()'     | `-RecoveryExpr 0x145828d60 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x145828df8 <line:47:5, col:12>       `-ImplicitCastExpr 0x145828de0 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x145828dc8 <col:12> 'char *' <LValueToRValue>           `-DeclRefExpr 0x145828da8 <col:12> 'char *' lvalue ParmVar 0x14580dcf0 'arg' 'char *' ","20965":"`-FunctionDecl 0x12f80e068  line:1:20 invalid try_opening_table_row 'int *(int *, int *, int *, unsigned char *, int)' static   |-ParmVarDecl 0x12f80dd28 <col:42, col:66> col:66 invalid self 'int *'   |-ParmVarDecl 0x12f80dda8 <line:2:42, col:56> col:56 invalid parser 'int *'   |-ParmVarDecl 0x12f80de28 <line:3:42, col:54> col:54 invalid parent_container 'int *'   |-ParmVarDecl 0x12f80ded8 <line:4:42, col:57> col:57 used input 'unsigned char *'   |-ParmVarDecl 0x12f80df58 <col:64, col:68> col:68 used len 'int'   `-CompoundStmt 0x12f829148 <col:73, line:48:1>     |-IfStmt 0x12f80e370 <line:8:3, line:9:12>     | |-CallExpr 0x12f80e300 <line:8:7, col:35> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12f80e2c0 <col:7> 'int ()' Function 0x12f80e208 'cmark_parser_is_blank' 'int ()'     | | `-RecoveryExpr 0x12f80e2e0 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f80e360 <line:9:5, col:12>     |   `-RecoveryExpr 0x12f80e340 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f827760 <line:14:3, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f8276b8 <col:3> 'int ()' Function 0x12f827600 'cmark_node_set_syntax_extension' 'int ()'     | |-RecoveryExpr 0x12f827740 <col:35> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12f8276f0 <col:52> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x12f828c48 <line:21:3, line:40:3>       |-DeclStmt 0x12f827ef0 <line:23:5, col:65>       | |-VarDecl 0x12f827ca8 <col:5, col:9> col:9 used i 'int'       | `-VarDecl 0x12f827d28 <col:5, col:64> col:12 used table_columns 'int' cinit       |   `-CallExpr 0x12f827eb0 <col:28, col:64> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x12f827e70 <col:28> 'int ()' Function 0x12f827db8 'get_n_table_columns' 'int ()'       |     `-RecoveryExpr 0x12f827e90 <col:48> '<dependent type>' contains-errors lvalue       `-ForStmt 0x12f828c10 <line:35:5, line:39:5>         |-<<<NULL>>>         |-<<<NULL>>>         |-BinaryOperator 0x12f828300 <line:35:12, col:16> 'int' contains-errors '<'         | |-ImplicitCastExpr 0x12f8282d0 <col:12> 'int' <LValueToRValue>         | | `-DeclRefExpr 0x12f828290 <col:12> 'int' lvalue Var 0x12f827ca8 'i' 'int'         | `-ImplicitCastExpr 0x12f8282e8 <col:16> 'int' contains-errors <LValueToRValue>         |   `-DeclRefExpr 0x12f8282b0 <col:16> 'int' contains-errors lvalue Var 0x12f827d28 'table_columns' 'int'         |-UnaryOperator 0x12f828340 <col:31, col:33> 'int' prefix '++'         | `-DeclRefExpr 0x12f828320 <col:33> 'int' lvalue Var 0x12f827ca8 'i' 'int'         `-CompoundStmt 0x12f828c00 <col:36, line:39:5> ","21058":"`-FunctionDecl 0x155827940  col:58 implicit used remainder 'double (double, double)' extern   |-ParmVarDecl 0x155827a40 <<invalid sloc>> <invalid sloc> 'double'   |-ParmVarDecl 0x155827aa8 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x1558279e8 <<invalid sloc>> Implicit 1136   |-ConstAttr 0x155827b20 <col:58> Implicit   `-NoThrowAttr 0x155827b48 <col:58> Implicit ","20429":"`-FunctionDecl 0x13d128288  line:1:1 invalid vte_sequence_handler_mk 'int (int *, int *)'   |-ParmVarDecl 0x13d128128 <col:26, col:39> col:39 referenced invalid terminal 'int *'   |-ParmVarDecl 0x13d1281a8 <col:49, col:62> col:62 invalid params 'int *'   `-CompoundStmt 0x13d128530 <line:2:1, line:4:1>     `-BinaryOperator 0x13d128510 <line:3:2, col:51> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x13d1284a8 <col:2, col:39> '<dependent type>' contains-errors lvalue .invisible       | `-CXXDependentScopeMemberExpr 0x13d128460 <col:2, col:34> '<dependent type>' contains-errors lvalue .attr       |   `-CXXDependentScopeMemberExpr 0x13d128418 <col:2, col:25> '<dependent type>' contains-errors lvalue ->defaults       |     `-CXXDependentScopeMemberExpr 0x13d1283d0 <col:2, col:17> '<dependent type>' contains-errors lvalue ->screen       |       `-CXXDependentScopeMemberExpr 0x13d128388 <col:2, col:12> '<dependent type>' contains-errors lvalue ->pvt       |         `-RecoveryExpr 0x13d128360 <col:2> '<dependent type>' contains-errors lvalue       |           `-DeclRefExpr 0x13d128340 <col:2> 'int *' lvalue ParmVar 0x13d128128 'terminal' 'int *'       `-IntegerLiteral 0x13d1284f0 <col:51> 'int' 1 ","20267":"`-FunctionDecl 0x152128758  line:1:19 sctp_wspace 'int (struct sctp_association *)' static inline   |-ParmVarDecl 0x152128648 <col:31, col:56> col:56 used asoc 'struct sctp_association *'   `-CompoundStmt 0x152141728 <line:2:1, line:22:1>     |-DeclStmt 0x152140ad0 <line:3:2, col:9>     | `-VarDecl 0x152140a68 <col:2, col:6> col:6 used amt 'int'     |-IfStmt 0x152140e90 <line:5:2, line:8:40> has_else     | |-CXXDependentScopeMemberExpr 0x152140b48 <line:5:6, col:16> '<dependent type>' contains-errors lvalue ->sndbuf_policy     | | `-RecoveryExpr 0x152140b20 <col:6, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152140ae8 <col:6> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | |-BinaryOperator 0x152140c10 <line:6:3, col:15> 'int' contains-errors '='     | | |-DeclRefExpr 0x152140b90 <col:3> 'int' lvalue Var 0x152140a68 'amt' 'int'     | | `-RecoveryExpr 0x152140be8 <col:9, col:15> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152140bb0 <col:9> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | `-BinaryOperator 0x152140e70 <line:8:3, col:40> 'int' contains-errors '='     |   |-DeclRefExpr 0x152140c30 <col:3> 'int' lvalue Var 0x152140a68 'amt' 'int'     |   `-CallExpr 0x152140e48 <col:9, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x152140d80 <col:9> 'int ()' Function 0x152140cc8 'sk_wmem_alloc_get' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x152140e00 <col:27, col:38> '<dependent type>' contains-errors lvalue .sk     |       `-RecoveryExpr 0x152140dd8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x152140da0 <col:27> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     |-IfStmt 0x1521416b0 <line:10:2, line:20:2> has_else     | |-BinaryOperator 0x152140fd0 <line:10:6, col:28> 'int' contains-errors '>='     | | |-DeclRefExpr 0x152140ec0 <col:6> 'int' lvalue Var 0x152140a68 'amt' 'int'     | | `-CXXDependentScopeMemberExpr 0x152140f88 <col:13, col:28> '<dependent type>' contains-errors lvalue ->sk_sndbuf     | |   `-CXXDependentScopeMemberExpr 0x152140f40 <col:13, col:24> '<dependent type>' contains-errors lvalue .sk     | |     `-RecoveryExpr 0x152140f18 <col:13, col:19> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x152140ee0 <col:13> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | |-CompoundStmt 0x152141510 <col:39, line:18:2>     | | `-IfStmt 0x1521414e0 <line:11:3, line:17:3> has_else     | |   |-BinaryOperator 0x152141138 <line:11:7, col:37> '<dependent type>' contains-errors '&'     | |   | |-CXXDependentScopeMemberExpr 0x152141098 <col:7, col:22> '<dependent type>' contains-errors lvalue ->sk_userlocks     | |   | | `-CXXDependentScopeMemberExpr 0x152141050 <col:7, col:18> '<dependent type>' contains-errors lvalue .sk     | |   | |   `-RecoveryExpr 0x152141028 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |   | |     `-DeclRefExpr 0x152140ff0 <col:7> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | |   | `-RecoveryExpr 0x152141118 <col:37> '<dependent type>' contains-errors lvalue     | |   |-BinaryOperator 0x152141198 <line:12:4, col:10> 'int' '='     | |   | |-DeclRefExpr 0x152141158 <col:4> 'int' lvalue Var 0x152140a68 'amt' 'int'     | |   | `-IntegerLiteral 0x152141178 <col:10> 'int' 0     | |   `-CompoundStmt 0x1521414c0 <line:13:8, line:17:3>     | |     |-BinaryOperator 0x1521413a8 <line:14:4, col:40> 'int' contains-errors '='     | |     | |-DeclRefExpr 0x1521411b8 <col:4> 'int' lvalue Var 0x152140a68 'amt' 'int'     | |     | `-CallExpr 0x152141380 <col:10, col:40> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x1521412b8 <col:10> 'int ()' Function 0x152141200 'sk_stream_wspace' 'int ()'     | |     |   `-CXXDependentScopeMemberExpr 0x152141338 <col:27, col:38> '<dependent type>' contains-errors lvalue .sk     | |     |     `-RecoveryExpr 0x152141310 <col:27, col:33> '<dependent type>' contains-errors lvalue     | |     |       `-DeclRefExpr 0x1521412d8 <col:27> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     | |     `-IfStmt 0x1521414a0 <line:15:4, line:16:11>     | |       |-BinaryOperator 0x152141420 <line:15:8, col:14> 'int' '<'     | |       | |-ImplicitCastExpr 0x152141408 <col:8> 'int' <LValueToRValue>     | |       | | `-DeclRefExpr 0x1521413c8 <col:8> 'int' lvalue Var 0x152140a68 'amt' 'int'     | |       | `-IntegerLiteral 0x1521413e8 <col:14> 'int' 0     | |       `-BinaryOperator 0x152141480 <line:16:5, col:11> 'int' '='     | |         |-DeclRefExpr 0x152141440 <col:5> 'int' lvalue Var 0x152140a68 'amt' 'int'     | |         `-IntegerLiteral 0x152141460 <col:11> 'int' 0     | `-CompoundStmt 0x152141698 <line:18:9, line:20:2>     |   `-BinaryOperator 0x152141678 <line:19:3, col:36> 'int' contains-errors '='     |     |-DeclRefExpr 0x152141528 <col:3> 'int' lvalue Var 0x152140a68 'amt' 'int'     |     `-BinaryOperator 0x152141658 <col:9, col:36> '<dependent type>' contains-errors '-'     |       |-CXXDependentScopeMemberExpr 0x1521415f0 <col:9, col:24> '<dependent type>' contains-errors lvalue ->sk_sndbuf     |       | `-CXXDependentScopeMemberExpr 0x1521415a8 <col:9, col:20> '<dependent type>' contains-errors lvalue .sk     |       |   `-RecoveryExpr 0x152141580 <col:9, col:15> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x152141548 <col:9> 'struct sctp_association *' lvalue ParmVar 0x152128648 'asoc' 'struct sctp_association *'     |       `-DeclRefExpr 0x152141638 <col:36> 'int' lvalue Var 0x152140a68 'amt' 'int'     `-ReturnStmt 0x152141718 <line:21:2, col:9>       `-ImplicitCastExpr 0x152141700 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1521416e0 <col:9> 'int' lvalue Var 0x152140a68 'amt' 'int' ","20931":"`-FunctionDecl 0x13b1445d8  col:19 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x13b1446d8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13b144680 <<invalid sloc>> Implicit 901 ","21011":"`-FunctionDecl 0x15200e438  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x15200e358 <col:6> col:6 used HeaderMapImplTest 'int'   |-ParmVarDecl 0x15200e2d8 <col:25> col:25 RemoveRegex 'int'   `-CompoundStmt 0x152028ea8 <col:38, line:37:1>     `-ImplicitCastExpr 0x15200e570 <line:10:3> 'int' <LValueToRValue>       `-DeclRefExpr 0x15200e550 <col:3> 'int' lvalue ParmVar 0x15200e358 'HeaderMapImplTest' 'int' ","20483":"`-FunctionDecl 0x12b04a958  line:1:5 snd_timer_pause 'int (struct snd_timer_instance *)'   |-ParmVarDecl 0x12b04a848 <col:21, col:49> col:49 used timeri 'struct snd_timer_instance *'   `-CompoundStmt 0x12b062e98 <line:2:1, line:4:1>     `-ReturnStmt 0x12b062e88 <line:3:2, col:59>       `-CallExpr 0x12b062e50 <col:9, col:59> '<dependent type>' contains-errors         |-DeclRefExpr 0x12b062d80 <col:9> 'int ()' Function 0x12b062cc8 '_snd_timer_stop' 'int ()'         |-DeclRefExpr 0x12b062da0 <col:25> 'struct snd_timer_instance *' lvalue ParmVar 0x12b04a848 'timeri' 'struct snd_timer_instance *'         |-IntegerLiteral 0x12b062dc0 <col:33> 'int' 0         `-RecoveryExpr 0x12b062e30 <col:36> '<dependent type>' contains-errors lvalue ","20225":"`-FunctionDecl 0x16000dda8  line:1:5 ReplaceThumbnail 'int (const char *)'   |-ParmVarDecl 0x16000dcd8 <col:22, col:35> col:35 used ThumbFileName 'const char *'   `-CompoundStmt 0x160029338 <line:2:1, line:72:1>     |-DeclStmt 0x16000dfe8 <line:4:5, col:30>     | |-VarDecl 0x16000dee8 <col:5, col:9> col:9 used ThumbLen 'int'     | `-VarDecl 0x16000df68 <col:5, col:19> col:19 used NewExifSize 'int'     |-DeclStmt 0x16000e098 <line:6:5, col:29>     | `-VarDecl 0x16000e030 <col:5, col:13> col:13 used ThumbnailPointer 'char *'     |-IfStmt 0x160027b20 <line:8:5, line:19:5>     | |-BinaryOperator 0x16000e338 <line:8:9, col:71> 'int' contains-errors '||'     | | |-BinaryOperator 0x16000e270 <col:9, col:38> 'int' contains-errors '=='     | | | |-CXXDependentScopeMemberExpr 0x16000e228 <col:9, col:19> '<dependent type>' contains-errors lvalue .ThumbnailOffset     | | | | `-RecoveryExpr 0x16000e208 <col:9> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x16000e110 <col:38> 'int' 0     | | `-BinaryOperator 0x16000e318 <col:43, col:71> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x16000e2b0 <col:43, col:53> '<dependent type>' contains-errors lvalue .ThumbnailAtEnd     | |   | `-RecoveryExpr 0x16000e290 <col:43> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x16000e2f8 <col:71> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x160027af8 <col:77, line:19:5>     |   |-IfStmt 0x160027860 <line:9:9, line:13:9>     |   | |-BinaryOperator 0x16000e3d0 <line:9:13, col:30> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x16000e358 <col:13> 'const char *' lvalue ParmVar 0x16000dcd8 'ThumbFileName' 'const char *'     |   | | `-RecoveryExpr 0x16000e3b0 <col:30> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x160027848 <col:35, line:13:9>     |   |   `-ReturnStmt 0x160027838 <line:12:13, col:20>     |   |     `-RecoveryExpr 0x160027818 <col:20> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x160027a80 <line:17:9, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x160027990 <col:9> 'int ()' Function 0x1600278d8 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x160027a60 <col:17> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x160027a10 <col:24> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x160027ae8 <line:18:9, col:16>     |     `-RecoveryExpr 0x160027ac8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1600285a8 <line:21:5, line:47:5> has_else     | |-ImplicitCastExpr 0x160027b60 <line:21:9> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x160027b40 <col:9> 'const char *' lvalue ParmVar 0x16000dcd8 'ThumbFileName' 'const char *'     | |-CompoundStmt 0x160028498 <col:23, line:39:5>     | | |-IfStmt 0x160028088 <line:24:9, line:28:9>     | | | |-BinaryOperator 0x160027e18 <line:24:13, col:30> 'int' contains-errors '=='     | | | | |-RecoveryExpr 0x160027dd8 <col:13> '<dependent type>' contains-errors lvalue     | | | | `-RecoveryExpr 0x160027df8 <col:30> '<dependent type>' contains-errors lvalue     | | | `-CompoundStmt 0x160028068 <col:35, line:28:9>     | | |   |-LabelStmt 0x160028000 <line:25:13, line:26:27> 'noread'     | | |   | `-CallExpr 0x160027f70 <col:13, col:27> 'int'     | | |   |   |-ImplicitCastExpr 0x160027f58 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | |   |   | `-DeclRefExpr 0x160027f18 <col:13> 'int ()' Function 0x160027e60 'ErrFatal' 'int ()'     | | |   |   `-ImplicitCastExpr 0x160027f98 <col:22> 'char *' <ArrayToPointerDecay>     | | |   |     `-StringLiteral 0x160027f38 <col:22> 'char[4]' lvalue \"STR\"     | | |   `-ReturnStmt 0x160028058 <line:27:13, col:20>     | | |     `-RecoveryExpr 0x160028038 <col:20> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x160028478 <line:36:9, line:38:9>     | |   |-RecoveryExpr 0x1600283a8 <line:36:13, col:60> '_Bool' contains-errors     | |   `-CompoundStmt 0x160028460 <col:63, line:38:9>     | |     `-CallExpr 0x160028420 <line:37:13, col:27> 'int'     | |       |-ImplicitCastExpr 0x160028408 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x1600283c8 <col:13> 'int ()' Function 0x160027e60 'ErrFatal' 'int ()'     | |       `-ImplicitCastExpr 0x160028448 <col:22> 'char *' <ArrayToPointerDecay>     | |         `-StringLiteral 0x1600283e8 <col:22> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x160028588 <line:39:10, line:47:5>     |   |-IfStmt 0x160028508 <line:40:9, line:42:9>     |   | |-RecoveryExpr 0x1600284d8 <line:40:13, col:40> '_Bool' contains-errors     |   | `-CompoundStmt 0x1600284f8 <col:42, line:42:9>     |   `-BinaryOperator 0x160028568 <line:44:9, col:20> 'int' '='     |     |-DeclRefExpr 0x160028528 <col:9> 'int' lvalue Var 0x16000dee8 'ThumbLen' 'int'     |     `-IntegerLiteral 0x160028548 <col:20> 'int' 0     `-IfStmt 0x1600290e0 <line:56:5, line:61:5>       |-RecoveryExpr 0x160028778 <line:56:9> '_Bool' contains-errors       `-CompoundStmt 0x1600290c8 <col:23, line:61:5>         `-IfStmt 0x160028fa8 <line:57:9, line:59:9>           |-RecoveryExpr 0x160028f58 <line:57:13, col:68> '_Bool' contains-errors           `-CompoundStmt 0x160028f90 <col:77, line:59:9>             `-GotoStmt 0x160028f78 <line:58:13, col:18> 'noread' 0x160027fb0 ","20992":"`-FunctionDecl 0x14480de88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x14480dd28 <col:22, col:37> col:37 referenced invalid context 'int *'   |-ParmVarDecl 0x14480dda8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x144829030 <col:64, line:32:1>     |-CallExpr 0x14480e248 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14480e0a0 <col:3> 'int ()' Function 0x14480dfe8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x14480e0c0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x14480e200 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14480e1c0 <col:30> 'int ()' Function 0x14480e108 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x14480e1e0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14480e228 <col:47> 'int' 2     |-CallExpr 0x144827448 <line:3:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14480e280 <col:3> 'int ()' Function 0x14480dfe8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x14480e2a0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x144827400 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14480e3a0 <col:30> 'int ()' Function 0x14480e2e8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x14480e3c0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x144827428 <col:48> 'int' 1     |-DeclStmt 0x144827760 <line:8:3, col:70>     | `-VarDecl 0x144827568 <col:3, col:23> col:23 invalid input1 'const int *'     |-DeclStmt 0x1448278a8 <line:9:3, col:70>     | `-VarDecl 0x144827790 <col:3, col:23> col:23 invalid input2 'const int *'     |-CallExpr 0x144827c58 <line:12:3, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144827b48 <col:3> 'int ()' Function 0x144827a90 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'     | |-RecoveryExpr 0x144827b68 <col:27> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x144827ba8 <col:36, col:44> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x144827b88 <col:36> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x144827c10 <col:50, col:58> '<dependent type>' contains-errors lvalue ->type     |   `-RecoveryExpr 0x144827bf0 <col:50> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x144827d78 <line:14:3, col:39>     | `-VarDecl 0x144827ca8 <col:3, col:20> col:20 invalid type 'const int'     |-IfStmt 0x144827f28 <line:15:3, line:18:3>     | |-RecoveryExpr 0x144827db0 <line:15:7, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x144827f10 <col:28, line:18:3>     |   `-CallExpr 0x144827ee0 <line:16:5, col:40> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x144827e18 <col:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |     | `-RecoveryExpr 0x144827df0 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x144827dd0 <col:5> 'int *' lvalue ParmVar 0x14480dd28 'context' 'int *'     |     |-RecoveryExpr 0x144827e60 <col:26> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x144827ec0 <col:35> 'char[4]' lvalue \"STR\"     `-IfStmt 0x144828f78 <line:24:3, line:29:3> has_else       |-RecoveryExpr 0x1448280f0 <line:24:7, col:13> '_Bool' contains-errors       |-CompoundStmt 0x144828390 <col:33, line:27:3>       `-CompoundStmt 0x144828f68 <col:10, line:29:3> ","20665":"`-FunctionDecl 0x15b00ddc8  line:1:20 invalid h2_log2inv 'int (unsigned char)' static   |-ParmVarDecl 0x15b00dcf0 <col:31, col:45> col:45 used log2 'unsigned char'   `-CompoundStmt 0x15b00dfd8 <line:2:1, line:4:1>     `-ReturnStmt 0x15b00dfc8 <line:3:5, col:32>       `-ConditionalOperator 0x15b00df98 <col:12, col:32> 'int'         |-ImplicitCastExpr 0x15b00df80 <col:12> 'int' <IntegralCast>         | `-ImplicitCastExpr 0x15b00df68 <col:12> 'unsigned char' <LValueToRValue>         |   `-DeclRefExpr 0x15b00de78 <col:12> 'unsigned char' lvalue ParmVar 0x15b00dcf0 'log2' 'unsigned char'         |-ParenExpr 0x15b00df28 <col:18, col:28> 'int'         | `-BinaryOperator 0x15b00df08 <col:19, col:24> 'int' '<<'         |   |-IntegerLiteral 0x15b00de98 <col:19> 'int' 1         |   `-ImplicitCastExpr 0x15b00def0 <col:24> 'int' <IntegralCast>         |     `-ImplicitCastExpr 0x15b00ded8 <col:24> 'unsigned char' <LValueToRValue>         |       `-DeclRefExpr 0x15b00deb8 <col:24> 'unsigned char' lvalue ParmVar 0x15b00dcf0 'log2' 'unsigned char'         `-IntegerLiteral 0x15b00df48 <col:32> 'int' 1 ","21242":"`-FunctionDecl 0x121928288  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x121928128 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x1219281a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x121942620 <col:64, line:20:1>     |-DeclStmt 0x1219285d8 <line:2:3, col:64>     | `-VarDecl 0x121928358 <col:3, col:23> col:23 referenced invalid input_tensor 'const int *'     |-DeclStmt 0x121928728 <line:3:3, col:66>     | `-VarDecl 0x121928608 <col:3, col:23> col:23 invalid padding_matrix 'const int *'     |-CallExpr 0x121941bf8 <line:6:3, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121941a50 <col:3> 'int ()' Function 0x121941998 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x121941a70 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x121941bb0 <col:30, col:58> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x121941b70 <col:30> 'int ()' Function 0x121941ab8 'NumDimensions' 'int ()'     | | `-RecoveryExpr 0x121941b90 <col:44> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x121941bd8 <col:61> 'int' 2     |-CallExpr 0x121941e48 <line:7:3, line:8:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121941c30 <line:7:3> 'int ()' Function 0x121941998 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x121941c50 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x121941db0 <col:30, col:63> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x121941d50 <col:30> 'int ()' Function 0x121941c98 'SizeOfDimension' 'int ()'     | | |-RecoveryExpr 0x121941d70 <col:46> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x121941d90 <col:62> 'int' 0     | `-CallExpr 0x121941e20 <line:8:21, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x121941de0 <col:21> 'int ()' Function 0x121941ab8 'NumDimensions' 'int ()'     |   `-RecoveryExpr 0x121941e00 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1219421f0 <line:10:3, line:13:3>     | |-UnaryOperator 0x121941fc8 <line:10:7, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x121941fa0 <col:8, col:39> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x121941f60 <col:8> 'int ()' Function 0x121941ea8 'IsConstantTensor' 'int ()'     | |   `-RecoveryExpr 0x121941f80 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1219421d0 <col:42, line:13:3>     |   |-CallExpr 0x121942160 <line:11:5, col:37> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1219420c0 <col:5> 'int ()' Function 0x121942008 'SetTensorToDynamic' 'int ()'     |   | `-RecoveryExpr 0x121942140 <col:24> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1219421c0 <line:12:5, col:12>     |     `-RecoveryExpr 0x1219421a0 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x121942400 <line:15:3, col:72>     | `-VarDecl 0x121942228 <col:3, col:71> col:8 used output_size 'int' auto cinit     |   `-CallExpr 0x1219423d0 <col:22, col:71> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x121942370 <col:22> 'int ()' Function 0x1219422b8 'GetPaddedOutputShape' 'int ()'     |     |-RecoveryExpr 0x121942390 <col:43> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1219423b0 <col:57> '<dependent type>' contains-errors lvalue     `-IfStmt 0x121942510 <line:16:3, line:18:3>       |-BinaryOperator 0x121942490 <line:16:7, col:22> 'int' contains-errors '=='       | |-DeclRefExpr 0x121942418 <col:7> 'int' contains-errors lvalue Var 0x121942228 'output_size' 'int'       | `-RecoveryExpr 0x121942470 <col:22> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1219424f8 <col:31, line:18:3>         `-ReturnStmt 0x1219424e8 <line:17:5, col:12>           `-RecoveryExpr 0x1219424c8 <col:12> '<dependent type>' contains-errors lvalue ","20270":"`-FunctionDecl 0x138027d10  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x138027e10 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x138027db8 <<invalid sloc>> Implicit 873 ","20746":"`-FunctionDecl 0x1269283a0  line:1:13 invalid jsR_calllwfunction 'void (int *, int, int *, int *)' static   |-ParmVarDecl 0x126928128 <col:32, col:42> col:42 invalid J 'int *'   |-ParmVarDecl 0x1269281a8 <col:45, col:49> col:49 used n 'int'   |-ParmVarDecl 0x126928228 <col:52, col:65> col:65 invalid F 'int *'   |-ParmVarDecl 0x1269282a8 <col:68, col:84> col:84 invalid scope 'int *'   `-CompoundStmt 0x1269423d0 <line:2:1, line:21:1>     |-DeclStmt 0x1269284e8 <line:4:2, col:7>     | `-VarDecl 0x126928480 <col:2, col:6> col:6 used i 'int'     |-CallExpr 0x1269286c0 <line:6:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126928660 <col:2> 'int ()' Function 0x1269285a8 'jsR_savescope' 'int ()'     | |-RecoveryExpr 0x126928680 <col:16> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1269286a0 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126941a98 <line:8:2, line:11:2>     | |-BinaryOperator 0x126928778 <line:8:6, col:13> 'int' contains-errors '>'     | | |-DeclRefExpr 0x1269286f0 <col:6> 'int' lvalue ParmVar 0x1269281a8 'n' 'int'     | | `-CXXDependentScopeMemberExpr 0x126928730 <col:10, col:13> '<dependent type>' contains-errors lvalue ->numparams     | |   `-RecoveryExpr 0x126928710 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126941a78 <col:24, line:11:2>     |   |-CallExpr 0x1269419a0 <line:9:3, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1269418b8 <col:3> 'int ()' Function 0x126941800 'js_pop' 'int ()'     |   | |-RecoveryExpr 0x1269418d8 <col:10> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x126941980 <col:13, col:28> '<dependent type>' contains-errors '-'     |   |   |-CXXDependentScopeMemberExpr 0x126941918 <col:13, col:16> '<dependent type>' contains-errors lvalue ->numparams     |   |   | `-RecoveryExpr 0x1269418f8 <col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x126941960 <col:28> 'int' lvalue ParmVar 0x1269281a8 'n' 'int'     |   `-BinaryOperator 0x126941a58 <line:10:3, col:10> 'int' contains-errors '='     |     |-DeclRefExpr 0x1269419d0 <col:3> 'int' lvalue ParmVar 0x1269281a8 'n' 'int'     |     `-CXXDependentScopeMemberExpr 0x126941a10 <col:7, col:10> '<dependent type>' contains-errors lvalue ->numparams     |       `-RecoveryExpr 0x1269419f0 <col:7> '<dependent type>' contains-errors lvalue     |-ForStmt 0x126941d58 <line:12:2, line:13:21>     | |-BinaryOperator 0x126941b10 <line:12:7, col:11> 'int' '='     | | |-DeclRefExpr 0x126941ab8 <col:7> 'int' lvalue Var 0x126928480 'i' 'int'     | | `-ImplicitCastExpr 0x126941af8 <col:11> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x126941ad8 <col:11> 'int' lvalue ParmVar 0x1269281a8 'n' 'int'     | |-<<<NULL>>>     | |-BinaryOperator 0x126941bb8 <col:14, col:21> 'int' contains-errors '<'     | | |-DeclRefExpr 0x126941b30 <col:14> 'int' lvalue Var 0x126928480 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x126941b70 <col:18, col:21> '<dependent type>' contains-errors lvalue ->varlen     | |   `-RecoveryExpr 0x126941b50 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x126941bf8 <col:29, col:31> 'int' prefix '++'     | | `-DeclRefExpr 0x126941bd8 <col:31> 'int' lvalue Var 0x126928480 'i' 'int'     | `-CallExpr 0x126941d30 <line:13:3, col:21> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x126941cf0 <col:3> 'int ()' Function 0x126941c38 'js_pushundefined' 'int ()'     |   `-RecoveryExpr 0x126941d10 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126941ed0 <line:15:2, col:14> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126941e70 <col:2> 'int ()' Function 0x126941db8 'jsR_run' 'int ()'     | |-RecoveryExpr 0x126941e90 <col:10> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x126941eb0 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126942258 <line:18:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1269421b0 <col:2> 'int ()' Function 0x1269420f8 'js_pushvalue' 'int ()'     | |-RecoveryExpr 0x1269421d0 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x126942238 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1269423a8 <line:20:2, col:20> '<dependent type>' contains-errors       |-DeclRefExpr 0x126942368 <col:2> 'int ()' Function 0x1269422b0 'jsR_restorescope' 'int ()'       `-RecoveryExpr 0x126942388 <col:19> '<dependent type>' contains-errors lvalue ","20601":"`-FunctionDecl 0x13f128190  line:1:6 run_local_timers 'void (void)'   `-CompoundStmt 0x13f809358 <line:2:1, line:16:1>     |-DeclStmt 0x13f1285e8 <line:3:2, col:64>     | |-RecordDecl 0x13f128280 <col:2, col:9> col:9 struct timer_base     | `-VarDecl 0x13f1283e8 <col:2, col:21> col:21 used base 'struct timer_base *'     |-CallExpr 0x13f128748 <line:5:2, col:21> 'int'     | `-ImplicitCastExpr 0x13f128730 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x13f1286e0 <col:2> 'int ()' Function 0x13f128628 'hrtimer_run_queues' 'int ()'     |-IfStmt 0x13f8091b0 <line:7:2, line:14:2>     | |-CallExpr 0x13f808dc8 <line:7:6, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f8088b8 <col:6> 'int ()' Function 0x13f808800 'time_before' 'int ()'     | | |-RecoveryExpr 0x13f808da8 <col:18> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13f808d50 <col:27, col:33> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f8088f0 <col:27> 'struct timer_base *' lvalue Var 0x13f1283e8 'base' 'struct timer_base *'     | `-CompoundStmt 0x13f809188 <col:39, line:14:2>     |   |-IfStmt 0x13f808fc0 <line:8:3, line:9:4>     |   | |-UnaryOperator 0x13f808f98 <line:8:7, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x13f808f70 <col:8, col:38> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x13f808ed8 <col:8> 'int ()' Function 0x13f808e20 'IS_ENABLED' 'int ()'     |   | |   `-RecoveryExpr 0x13f808f50 <col:19> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x13f808fb0 <line:9:4>     |   |-ImplicitCastExpr 0x13f809028 <line:11:3, col:7> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x13f809000 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13f808fe0 <col:3> 'struct timer_base *' lvalue Var 0x13f1283e8 'base' 'struct timer_base *'     |   `-IfStmt 0x13f809168 <line:12:3, line:13:4>     |     |-CallExpr 0x13f809128 <line:12:7, col:37> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x13f809040 <col:7> 'int ()' Function 0x13f808800 'time_before' 'int ()'     |     | |-RecoveryExpr 0x13f809108 <col:19> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x13f8090b0 <col:28, col:34> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13f809078 <col:28> 'struct timer_base *' lvalue Var 0x13f1283e8 'base' 'struct timer_base *'     |     `-ReturnStmt 0x13f809158 <line:13:4>     `-CallExpr 0x13f809330 <line:15:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x13f8092b0 <col:2> 'int ()' Function 0x13f8091f8 'raise_softirq' 'int ()'       `-RecoveryExpr 0x13f809310 <col:16> '<dependent type>' contains-errors lvalue ","20555":"`-FunctionDecl 0x12691fc38  line:1:1 PHP_METHOD 'int (int, int)'   |-ParmVarDecl 0x12691fb58 <col:12> col:12 Phar 'int'   |-ParmVarDecl 0x12691fad8 <col:18> col:18 createDefaultStub 'int'   `-CompoundStmt 0x126011648 <line:2:1, line:19:1>     |-DeclStmt 0x12691ff60 <line:3:2, col:46>     | |-VarDecl 0x12691fd50 <col:2, col:16> col:8 used index 'char *' cinit     | | `-RecoveryExpr 0x12691fde8 <col:16> '<dependent type>' contains-errors lvalue     | |-VarDecl 0x12691fe20 <col:2, col:34> col:23 used webindex 'char *' cinit     | | `-RecoveryExpr 0x12691fea0 <col:34> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x12691fed8 <col:2, col:41> col:41 used error 'char *'     |-BinaryOperator 0x126920140 <line:5:2, col:39> '<dependent type>' contains-errors ','     | |-RecoveryExpr 0x1269200d0 <col:2, col:21> '<dependent type>' contains-errors lvalue     | | |-UnaryExprOrTypeTraitExpr 0x1269200b0 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | | `-RecoveryExpr 0x126920090 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12691ffc8 <col:21> 'int' 0     | `-BinaryOperator 0x126920120 <col:24, col:39> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x126920100 <col:24> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x126920030 <col:39> 'int' 0     |-IfStmt 0x126010fd0 <line:7:2, line:9:2>     | |-BinaryOperator 0x126010f88 <line:7:6, col:101> 'int' contains-errors '=='     | | |-CallExpr 0x126010f18 <col:6, col:96> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x126010ab8 <col:6> 'int ()' Function 0x126010a00 'zend_parse_parameters' 'int ()'     | | | |-CallExpr 0x126010e88 <col:28, col:42> 'int'     | | | | `-ImplicitCastExpr 0x126010e70 <col:28> 'int (*)()' <FunctionToPointerDecay>     | | | |   `-DeclRefExpr 0x126010bb8 <col:28> 'int ()' Function 0x126010b00 'ZEND_NUM_ARGS' 'int ()'     | | | |-StringLiteral 0x126010c90 <col:45> 'char[4]' lvalue \"STR\"     | | | |-UnaryOperator 0x126010d00 <col:52, col:53> 'char **' contains-errors prefix '&' cannot overflow     | | | | `-DeclRefExpr 0x126010cb0 <col:53> 'char *' contains-errors lvalue Var 0x12691fd50 'index' 'char *'     | | | |-UnaryOperator 0x126010ec8 <col:60, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x126010ea8 <col:61> '<dependent type>' contains-errors lvalue     | | | |-UnaryOperator 0x126010d68 <col:72, col:73> 'char **' contains-errors prefix '&' cannot overflow     | | | | `-DeclRefExpr 0x126010d48 <col:73> 'char *' contains-errors lvalue Var 0x12691fe20 'webindex' 'char *'     | | | `-UnaryOperator 0x126010f00 <col:83, col:84> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x126010ee0 <col:84> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x126010f68 <col:101> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126010fb8 <col:110, line:9:2>     |   `-ReturnStmt 0x126010fa8 <line:8:3>     `-IfStmt 0x126011528 <line:13:2, line:17:2>       |-ImplicitCastExpr 0x126011208 <line:13:6> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x1260111e8 <col:6> 'char *' lvalue Var 0x12691fed8 'error' 'char *'       `-CompoundStmt 0x126011508 <col:13, line:17:2>         |-CallExpr 0x1260114b8 <line:15:3, col:14> 'int'         | |-ImplicitCastExpr 0x1260114a0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x126011460 <col:3> 'int ()' Function 0x1260113a8 'efree' 'int ()'         | `-ImplicitCastExpr 0x1260114e0 <col:9> 'char *' <LValueToRValue>         |   `-DeclRefExpr 0x126011480 <col:9> 'char *' lvalue Var 0x12691fed8 'error' 'char *'         `-ReturnStmt 0x1260114f8 <line:16:3> ","20908":"`-FunctionDecl 0x14f00ddc8  line:1:1 invalid S3BootScriptSaveMemWrite 'int (int)'   |-ParmVarDecl 0x14f00dcf0 <line:2:3, col:7> col:7 referenced invalid S3_BOOT_SCRIPT_LIB_WIDTH 'int'   `-CompoundStmt 0x14f027ed8 <line:7:1, line:35:1>     `-IfStmt 0x14f00e240 <line:17:3, line:19:3>       |-BinaryOperator 0x14f00e210 <line:17:7, col:17> 'int' contains-errors '=='       | |-RecoveryExpr 0x14f00e1d0 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14f00e1f0 <col:17> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14f00e230 <col:23, line:19:3> ","21204":"`-FunctionDecl 0x12880a4d0  line:1:19 invalid sweeptolive 'int **(int *, int **)' static   |-ParmVarDecl 0x12880a328 <col:32, col:43> col:43 invalid L 'int *'   |-ParmVarDecl 0x12880a3e0 <col:46, col:57> col:57 referenced invalid p 'int **'   `-CompoundStmt 0x128823a10 <col:60, line:7:1>     |-DoStmt 0x12880a9b8 <line:3:3, line:5:20>     | |-CompoundStmt 0x12880a908 <line:3:6, line:5:3>     | | `-BinaryOperator 0x12880a8e8 <line:4:5, col:32> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x12880a610 <col:5> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12880a5f0 <col:5> 'int **' lvalue ParmVar 0x12880a3e0 'p' 'int **'     | |   `-CallExpr 0x12880a8a8 <col:9, col:32> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12880a790 <col:9> 'int ()' Function 0x12880a6d8 'sweeplist' 'int ()'     | |     |-RecoveryExpr 0x12880a7b0 <col:19> '<dependent type>' contains-errors lvalue     | |     |-RecoveryExpr 0x12880a7d0 <col:22> '<dependent type>' contains-errors lvalue     | |     |-IntegerLiteral 0x12880a7f0 <col:25> 'int' 1     | |     `-RecoveryExpr 0x12880a888 <col:28> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x12880a998 <line:5:12, col:17> 'int' contains-errors '=='     |   |-RecoveryExpr 0x12880a920 <col:12> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12880a978 <col:17> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x128823a00 <line:6:3, col:10>       `-RecoveryExpr 0x12880a9d8 <col:10> '<dependent type>' contains-errors lvalue ","20824":"`-FunctionDecl 0x14a819c00  line:1:1 invalid includeFile 'int (int *, int *, int **, int *, short *, int *, int **, int **, int **)'   |-ParmVarDecl 0x14c80dd28 <col:13, col:23> col:23 invalid nested 'int *'   |-ParmVarDecl 0x14c80dda8 <col:31, col:44> col:44 invalid includedFile 'int *'   |-ParmVarDecl 0x14c80de60 <line:2:3, col:20> col:20 invalid characterClasses 'int **'   |-ParmVarDecl 0x14c80dee0 <line:3:3, col:40> col:40 invalid characterClassAttribute 'int *'   |-ParmVarDecl 0x14c80e010 <line:4:3, col:23> col:9 used opcodeLengths 'short *'   |-ParmVarDecl 0x14c80e090 <col:26, col:50> col:50 invalid newRuleOffset 'int *'   |-ParmVarDecl 0x14c80e118 <line:5:3, col:26> col:26 invalid newRule 'int **'   |-ParmVarDecl 0x14c80e1a0 <col:35, col:46> col:46 invalid ruleNames 'int **'   |-ParmVarDecl 0x14c80e228 <line:6:3, col:28> col:28 invalid table 'int **'   `-CompoundStmt 0x14c108eb8 <col:35, line:31:1>     |-DeclStmt 0x14a819d70 <line:7:2, col:7>     | `-VarDecl 0x14a819d08 <col:2, col:6> col:6 used k 'int'     |-DeclStmt 0x14a819e18 <line:8:2, col:29>     | `-VarDecl 0x14a819db0 <col:2, col:7> col:7 referenced invalid includeThis 'char'     |-DeclStmt 0x14a819ee0 <line:9:2, col:19>     | `-VarDecl 0x14a819e78 <col:2, col:9> col:9 used tableFiles 'char **'     |-DeclStmt 0x14a819f78 <line:10:2, col:8>     | `-VarDecl 0x14a819f10 <col:2, col:6> col:6 used rv 'int'     |-ForStmt 0x14a81a2b8 <line:11:2, line:12:47>     | |-BinaryOperator 0x14a819fd0 <line:11:7, col:11> 'int' '='     | | |-DeclRefExpr 0x14a819f90 <col:7> 'int' lvalue Var 0x14a819d08 'k' 'int'     | | `-IntegerLiteral 0x14a819fb0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14a81a078 <col:14, col:32> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14a819ff0 <col:14> 'int' lvalue Var 0x14a819d08 'k' 'int'     | | `-CXXDependentScopeMemberExpr 0x14a81a030 <col:18, col:32> '<dependent type>' contains-errors lvalue ->length     | |   `-RecoveryExpr 0x14a81a010 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14a81a0b8 <col:40, col:41> 'int' postfix '++'     | | `-DeclRefExpr 0x14a81a098 <col:40> 'int' lvalue Var 0x14a819d08 'k' 'int'     | `-BinaryOperator 0x14a81a298 <line:12:3, col:47> '<dependent type>' contains-errors '='     |   |-ArraySubscriptExpr 0x14a81a168 <col:3, col:16> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x14a81a138 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x14a81a0f0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14a81a0d0 <col:3> 'char' lvalue Var 0x14a819db0 'includeThis' 'char'     |   | `-ImplicitCastExpr 0x14a81a150 <col:15> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x14a81a118 <col:15> 'int' lvalue Var 0x14a819d08 'k' 'int'     |   `-CStyleCastExpr 0x14a81a270 <col:20, col:47> 'char' contains-errors <Dependent>     |     `-ArraySubscriptExpr 0x14a81a240 <col:26, col:47> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x14a81a210 <col:26, col:40> '<dependent type>' contains-errors <LValueToRValue>     |       | `-CXXDependentScopeMemberExpr 0x14a81a1a8 <col:26, col:40> '<dependent type>' contains-errors lvalue ->chars     |       |   `-RecoveryExpr 0x14a81a188 <col:26> '<dependent type>' contains-errors lvalue     |       `-ImplicitCastExpr 0x14a81a228 <col:46> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14a81a1f0 <col:46> 'int' lvalue Var 0x14a819d08 'k' 'int'     |-BinaryOperator 0x14a81a3c8 <line:13:2, col:19> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x14a81a388 <col:2, col:15> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x14a81a358 <col:2> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x14a81a310 <col:2> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14a81a2f0 <col:2> 'char' lvalue Var 0x14a819db0 'includeThis' 'char'     | | `-ImplicitCastExpr 0x14a81a370 <col:14> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14a81a338 <col:14> 'int' lvalue Var 0x14a819d08 'k' 'int'     | `-IntegerLiteral 0x14a81a3a8 <col:19> 'int' 0     |-BinaryOperator 0x14a81a638 <line:14:2, col:62> 'char **' contains-errors '='     | |-DeclRefExpr 0x14a81a3e8 <col:2> 'char **' lvalue Var 0x14a819e78 'tableFiles' 'char **'     | `-CallExpr 0x14a81a608 <col:15, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a81a560 <col:15> 'int ()' Function 0x14a81a4a8 '_lou_resolveTable' 'int ()'     |   |-RecoveryExpr 0x14a81a580 <col:33> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x14a81a5c0 <col:46, col:54> '<dependent type>' contains-errors lvalue ->fileName     |     `-RecoveryExpr 0x14a81a5a0 <col:46> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a81a738 <line:15:2, line:18:2>     | |-BinaryOperator 0x14a81a6d0 <line:15:6, col:20> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14a81a658 <col:6> 'char **' lvalue Var 0x14a819e78 'tableFiles' 'char **'     | | `-RecoveryExpr 0x14a81a6b0 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a81a720 <col:26, line:18:2>     |   `-ReturnStmt 0x14a81a710 <line:17:3, col:10>     |     `-IntegerLiteral 0x14a81a6f0 <col:10> 'int' 0     |-IfStmt 0x14c108ae8 <line:19:2, line:26:2>     | |-BinaryOperator 0x14a81a898 <line:19:6, col:23> 'int' contains-errors '!='     | | |-ArraySubscriptExpr 0x14a81a858 <col:6, col:18> 'char *' lvalue     | | | |-ImplicitCastExpr 0x14a81a840 <col:6> 'char **' <LValueToRValue>     | | | | `-DeclRefExpr 0x14a81a758 <col:6> 'char **' lvalue Var 0x14a819e78 'tableFiles' 'char **'     | | | `-IntegerLiteral 0x14a81a778 <col:17> 'int' 1     | | `-RecoveryExpr 0x14a81a878 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c108ac0 <col:29, line:26:2>     |   |-CallExpr 0x14a81aa28 <line:21:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x14a81aa10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14a81a998 <col:3> 'int ()' Function 0x14a81a8e0 'free_tablefiles' 'int ()'     |   | `-ImplicitCastExpr 0x14a81aa50 <col:19> 'char **' <LValueToRValue>     |   |   `-DeclRefExpr 0x14a81a9b8 <col:19> 'char **' lvalue Var 0x14a819e78 'tableFiles' 'char **'     |   |-CallExpr 0x14c108a58 <line:22:3, line:24:16> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a81ab48 <line:22:3> 'int ()' Function 0x14a81aa90 '_lou_logMessage' 'int ()'     |   | |-RecoveryExpr 0x14c108a38 <col:19> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14a81abc0 <line:23:5> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x14a81abe0 <line:24:5> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14c108ab0 <line:25:3, col:10>     |     `-IntegerLiteral 0x14c108a90 <col:10> 'int' 0     |-BinaryOperator 0x14c108db8 <line:27:2, line:28:59> 'int' contains-errors '='     | |-DeclRefExpr 0x14c108b08 <line:27:2> 'int' lvalue Var 0x14a819f10 'rv' 'int'     | `-CallExpr 0x14c108d58 <col:7, line:28:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c108c08 <line:27:7> 'int ()' Function 0x14c108b50 'compileFile' 'int ()'     |   |-UnaryOperator 0x14c108c60 <col:19, col:20> 'char *' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x14c108c48 <col:20> 'char **' <LValueToRValue>     |   |   `-DeclRefExpr 0x14c108c28 <col:20> 'char **' lvalue Var 0x14a819e78 'tableFiles' 'char **'     |   |-RecoveryExpr 0x14c108c78 <col:32> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c108c98 <col:50> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x14c108cb8 <line:28:4> 'short *' lvalue ParmVar 0x14c80e010 'opcodeLengths' 'short *'     |   |-RecoveryExpr 0x14c108cd8 <col:19> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c108cf8 <col:34> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c108d18 <col:43> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c108d38 <col:54> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c108e30 <line:29:2, col:28> 'int'     | |-ImplicitCastExpr 0x14c108e18 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c108dd8 <col:2> 'int ()' Function 0x14a81a8e0 'free_tablefiles' 'int ()'     | `-ImplicitCastExpr 0x14c108e58 <col:18> 'char **' <LValueToRValue>     |   `-DeclRefExpr 0x14c108df8 <col:18> 'char **' lvalue Var 0x14a819e78 'tableFiles' 'char **'     `-ReturnStmt 0x14c108ea8 <line:30:2, col:9>       `-ImplicitCastExpr 0x14c108e90 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c108e70 <col:9> 'int' lvalue Var 0x14a819f10 'rv' 'int' ","20427":"`-FunctionDecl 0x1280fafc8  line:1:25 invalid create_page_contents 'int (int)' static   |-ParmVarDecl 0x1280faef0 <col:46, <invalid sloc>> col:50 invalid 'int'   `-CompoundStmt 0x1280fb0c8 <line:2:1, line:4:1>     |-ReturnStmt 0x1280fb0b0 <line:3:5, col:12>     | `-RecoveryExpr 0x1280fb090 <col:12> '<dependent type>' contains-errors lvalue     `-NullStmt 0x1280fb0c0 <col:77> ","20306":"`-FunctionDecl 0x12a82a1f8  col:17 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12a82a2f8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12a82a2a0 <<invalid sloc>> Implicit 902 ","20578":"`-FunctionDecl 0x14380a038  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14380a138 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14380a1a0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14380a208 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14380a0e0 <<invalid sloc>> Implicit 882 ","20727":"`-FunctionDecl 0x1209283a8  line:1:1 invalid theme_adium_find_next 'int (int *, const char *, int, int)'   |-ParmVarDecl 0x120928128 <col:24, col:41> col:41 invalid view 'int *'   |-ParmVarDecl 0x1209281a8 <line:2:10, col:27> col:27 used search_criteria 'const char *'   |-ParmVarDecl 0x120928228 <line:3:10, col:27> col:27 invalid new_search 'int'   |-ParmVarDecl 0x1209282a8 <line:4:10, col:27> col:27 invalid match_case 'int'   `-CompoundStmt 0x120941c98 <line:5:1, line:10:1>     `-ReturnStmt 0x120941c88 <line:7:2, line:9:20>       `-CallExpr 0x120941c40 <line:7:9, line:9:20> '<dependent type>' contains-errors         |-DeclRefExpr 0x1209285d0 <line:7:9> 'int ()' Function 0x120928518 'webkit_web_view_search_text' 'int ()'         |-CallExpr 0x120928710 <col:38, col:59> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1209286d0 <col:38> 'int ()' Function 0x120928618 'WEBKIT_WEB_VIEW' 'int ()'         | `-RecoveryExpr 0x1209286f0 <col:55> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x120928738 <line:8:10> 'const char *' lvalue ParmVar 0x1209281a8 'search_criteria' 'const char *'         |-RecoveryExpr 0x120928758 <col:27> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x120941c00 <line:9:10> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x120941c20 <col:16> '<dependent type>' contains-errors lvalue ","20756":"`-FunctionDecl 0x147027778  col:9 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x147027878 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1470278e0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x147027948 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x147027820 <<invalid sloc>> Implicit 900 ","20863":"`-FunctionDecl 0x1461281a8  line:1:1 qb_log_blackbox_write_to_file 'int (const char *)'   |-ParmVarDecl 0x1461280d8 <col:31, col:43> col:43 used filename 'const char *'   `-CompoundStmt 0x146143830 <line:2:1, line:33:1>     |-DeclStmt 0x1461284a8 <line:4:2, col:25>     | |-RecordDecl 0x1461282b8 <col:2, col:9> col:9 struct qb_log_target     | `-VarDecl 0x146128428 <col:2, col:24> col:24 used t 'struct qb_log_target *'     |-DeclStmt 0x146140c88 <line:5:2, col:37>     | |-RecordDecl 0x1461284c0 <col:2, col:9> col:9 struct _blackbox_file_header     | `-VarDecl 0x1461285b8 <col:2, col:31> col:31 referenced invalid header 'struct _blackbox_file_header'     |-DeclStmt 0x146140fb0 <line:6:2, col:49>     | `-VarDecl 0x146140cb8 <col:2, col:48> col:6 used fd 'int' cinit     |   `-CallExpr 0x146140f78 <col:11, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x146140e30 <col:11> 'int ()' Function 0x146140d78 'open' 'int ()'     |     |-DeclRefExpr 0x146140e50 <col:16> 'const char *' lvalue ParmVar 0x1461280d8 'filename' 'const char *'     |     |-BinaryOperator 0x146140f58 <col:26, col:36> '<dependent type>' contains-errors '|'     |     | |-RecoveryExpr 0x146140f18 <col:26> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x146140f38 <col:36> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x146140ec0 <col:44> 'int' 448     |-IfStmt 0x146141100 <line:8:2, line:10:2>     | |-BinaryOperator 0x146141020 <line:8:6, col:11> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x146141008 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x146140fc8 <col:6> 'int' contains-errors lvalue Var 0x146140cb8 'fd' 'int'     | | `-IntegerLiteral 0x146140fe8 <col:11> 'int' 0     | `-CompoundStmt 0x1461410e8 <col:14, line:10:2>     |   `-ReturnStmt 0x1461410d8 <line:9:3, col:11>     |     `-UnaryOperator 0x1461410c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1461410a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x146141088 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146141208 <line:13:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x146141168 <col:2, col:9> '<dependent type>' contains-errors lvalue .word_size     | | `-RecoveryExpr 0x146141140 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146141120 <col:2> 'struct _blackbox_file_header' lvalue Var 0x1461285b8 'header' 'struct _blackbox_file_header'     | `-RecoveryExpr 0x1461411e8 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146141310 <line:14:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x146141270 <col:2, col:9> '<dependent type>' contains-errors lvalue .read_pt     | | `-RecoveryExpr 0x146141248 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146141228 <col:2> 'struct _blackbox_file_header' lvalue Var 0x1461285b8 'header' 'struct _blackbox_file_header'     | `-RecoveryExpr 0x1461412f0 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146141418 <line:15:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x146141378 <col:2, col:9> '<dependent type>' contains-errors lvalue .write_pt     | | `-RecoveryExpr 0x146141350 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146141330 <col:2> 'struct _blackbox_file_header' lvalue Var 0x1461285b8 'header' 'struct _blackbox_file_header'     | `-RecoveryExpr 0x1461413f8 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146141520 <line:16:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x146141480 <col:2, col:9> '<dependent type>' contains-errors lvalue .version     | | `-RecoveryExpr 0x146141458 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146141438 <col:2> 'struct _blackbox_file_header' lvalue Var 0x1461285b8 'header' 'struct _blackbox_file_header'     | `-RecoveryExpr 0x146141500 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146141628 <line:17:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x146141588 <col:2, col:9> '<dependent type>' contains-errors lvalue .hash     | | `-RecoveryExpr 0x146141560 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x146141540 <col:2> 'struct _blackbox_file_header' lvalue Var 0x1461285b8 'header' 'struct _blackbox_file_header'     | `-RecoveryExpr 0x146141608 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146143330 <line:19:2, line:22:2>     | |-BinaryOperator 0x1461418f0 <line:19:6, col:34> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1461418d0 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryExprOrTypeTraitExpr 0x146141890 <col:21, col:34> 'unsigned long' contains-errors sizeof     | |   `-ParenExpr 0x146141870 <col:27, col:34> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x146141850 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x146143310 <col:37, line:22:2>     |   |-CallExpr 0x146143288 <line:20:3, col:11> 'int' contains-errors     |   | |-ImplicitCastExpr 0x146143270 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x146143200 <col:3> 'int ()' Function 0x146141938 'close' 'int ()'     |   | `-ImplicitCastExpr 0x1461432b0 <col:9> 'int' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x146143220 <col:9> 'int' contains-errors lvalue Var 0x146140cb8 'fd' 'int'     |   `-ReturnStmt 0x146143300 <line:21:3, col:10>     |     `-RecoveryExpr 0x1461432e0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146143518 <line:24:2, col:39> 'struct qb_log_target *' contains-errors '='     | |-DeclRefExpr 0x146143350 <col:2> 'struct qb_log_target *' lvalue Var 0x146128428 't' 'struct qb_log_target *'     | `-CallExpr 0x1461434f0 <col:6, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146143450 <col:6> 'int ()' Function 0x146143398 'qb_log_target_get' 'int ()'     |   `-RecoveryExpr 0x1461434d0 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146143768 <line:25:2, line:29:2> has_else     | |-RecoveryExpr 0x146143570 <line:25:6, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x146143538 <col:6> 'struct qb_log_target *' lvalue Var 0x146128428 't' 'struct qb_log_target *'     | |-CompoundStmt 0x146143748 <col:19, line:27:2>     | `-CompoundStmt 0x146143758 <col:9, line:29:2>     `-CallExpr 0x1461437f0 <line:30:2, col:10> 'int' contains-errors       |-ImplicitCastExpr 0x1461437d8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x146143798 <col:2> 'int ()' Function 0x146141938 'close' 'int ()'       `-ImplicitCastExpr 0x146143818 <col:8> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1461437b8 <col:8> 'int' contains-errors lvalue Var 0x146140cb8 'fd' 'int' ","20663":"`-FunctionDecl 0x14e80e358  line:1:12 cap_socket_getsockname 'int (struct socket *)' static   |-ParmVarDecl 0x14e80e248 <col:35, col:50> col:50 sock 'struct socket *'   `-CompoundStmt 0x14e826680 <line:2:1, line:4:1>     `-ReturnStmt 0x14e826670 <line:3:2, col:9>       `-IntegerLiteral 0x14e826650 <col:9> 'int' 0 ","20518":"`-FunctionDecl 0x13f80dfa8  line:1:1 invalid symbol_precedence_set 'int (int *, int, int, int)'   |-ParmVarDecl 0x13f80dd28 <col:24, col:32> col:32 invalid sym 'int *'   |-ParmVarDecl 0x13f80dda8 <col:37, col:41> col:41 used prec 'int'   |-ParmVarDecl 0x13f80de28 <col:47, col:53> col:53 invalid a 'int'   |-ParmVarDecl 0x13f80dea8 <col:56, col:65> col:65 invalid loc 'int'   `-CompoundStmt 0x13f8279b8 <line:2:1, line:19:1>     |-IfStmt 0x13f827768 <line:3:3, line:15:5>     | |-BinaryOperator 0x13f80e0e8 <line:3:7, col:12> 'int' contains-errors '!='     | | |-RecoveryExpr 0x13f80e070 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13f80e0c8 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f827750 <line:4:5, line:15:5>     |   `-IfStmt 0x13f827720 <line:6:7, line:14:9> has_else     |     |-CXXDependentScopeMemberExpr 0x13f80e208 <line:6:11, col:14> '<dependent type>' contains-errors lvalue ->prec     |     | `-RecoveryExpr 0x13f80e1e8 <col:11> '<dependent type>' contains-errors lvalue     |     |-CallExpr 0x13f827670 <line:7:9, line:8:53> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x13f80e3b0 <line:7:9> 'int ()' Function 0x13f80e2f8 'complain_symbol_redeclared' 'int ()'     |     | |-RecoveryExpr 0x13f80e3d0 <col:37> '<dependent type>' contains-errors lvalue     |     | |-CallExpr 0x13f827520 <col:42, col:60> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x13f8274e0 <col:42> 'int ()' Function 0x13f827428 'assoc_to_string' 'int ()'     |     | | `-RecoveryExpr 0x13f827500 <col:59> '<dependent type>' contains-errors lvalue     |     | |-CXXDependentScopeMemberExpr 0x13f827628 <line:8:37, col:40> '<dependent type>' contains-errors lvalue ->prec_loc     |     | | `-RecoveryExpr 0x13f827608 <col:37> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x13f8275a8 <col:50> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13f827710 <line:10:9, line:14:9>     `-CallExpr 0x13f827978 <line:18:3, col:47> '<dependent type>' contains-errors       |-DeclRefExpr 0x13f827868 <col:3> 'int ()' Function 0x13f8277b0 'symbol_class_set' 'int ()'       |-RecoveryExpr 0x13f827888 <col:21> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13f827938 <col:26> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13f8278c0 <col:37> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x13f827958 <col:42> '<dependent type>' contains-errors lvalue ","21228":"`-FunctionDecl 0x15981e238  line:1:22 invalid ParaNdis_CheckRxChecksum 'int (int *, int, int *, int, int)'   |-ParmVarDecl 0x15981df28 <line:2:45, col:63> col:63 referenced invalid pContext 'int *'   |-ParmVarDecl 0x15981dfa8 <line:3:45, col:51> col:51 invalid virtioFlags 'int'   |-ParmVarDecl 0x15981e028 <line:4:45, col:71> col:71 invalid pPacketPages 'int *'   |-ParmVarDecl 0x15981e0a8 <line:5:45, col:51> col:51 invalid ulPacketLength 'int'   |-ParmVarDecl 0x15981e128 <line:6:45, col:51> col:51 invalid ulDataOffset 'int'   `-CompoundStmt 0x15b0f14e8 <line:7:1, line:94:1>     |-IfStmt 0x15b0f0cb8 <line:20:5, line:33:5>     | |-RecoveryExpr 0x15981e480 <line:20:9, col:52> '_Bool' contains-errors     | `-CompoundStmt 0x15b0f0ca0 <line:21:5, line:33:5>     |   `-IfStmt 0x15b0f0c70 <line:22:9, line:32:9> has_else     |     |-BinaryOperator 0x15981e518 <line:22:13, col:27> '<dependent type>' contains-errors '&'     |     | |-RecoveryExpr 0x15981e4a0 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x15981e4f8 <col:27> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x15981e5c0 <line:23:9, line:25:9>     |     `-CompoundStmt 0x15b0f0c60 <line:27:9, line:32:9>     |-IfStmt 0x15b0f10c0 <line:37:5, line:41:5>     | |-RecoveryExpr 0x15b0f0f98 <line:37:9, col:23> '_Bool' contains-errors     | `-CompoundStmt 0x15b0f10a8 <line:38:5, line:41:5>     |   `-UnaryOperator 0x15b0f1090 <line:39:9, col:49> '<dependent type>' contains-errors postfix '++' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x15b0f1048 <col:9, col:35> '<dependent type>' contains-errors lvalue .framesRxCSHwOK     |       `-CXXDependentScopeMemberExpr 0x15b0f1000 <col:9, col:19> '<dependent type>' contains-errors lvalue ->extraStatistics     |         `-RecoveryExpr 0x15b0f0fd8 <col:9> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x15b0f0fb8 <col:9> 'int *' lvalue ParmVar 0x15981df28 'pContext' 'int *'     `-IfStmt 0x15b0f14b8 <line:43:5, line:91:5> has_else       |-RecoveryExpr 0x15b0f10e0 <line:43:9, col:43> '_Bool' contains-errors       |-CompoundStmt 0x15b0f12c8 <line:44:5, line:69:5>       | |-IfStmt 0x15b0f1130 <line:45:9, line:49:9>       | | |-RecoveryExpr 0x15b0f1100 <line:45:13, col:15> '_Bool' contains-errors       | | `-CompoundStmt 0x15b0f1120 <line:46:9, line:49:9>       | `-IfStmt 0x15b0f12a8 <line:50:9, line:68:9>       |   |-RecoveryExpr 0x15b0f1150 <line:50:12, col:29> '_Bool' contains-errors       |   `-CompoundStmt 0x15b0f1290 <line:51:9, line:68:9>       |     `-IfStmt 0x15b0f1260 <line:52:13, line:67:13> has_else       |       |-RecoveryExpr 0x15b0f1170 <line:52:16, col:30> '_Bool' contains-errors       |       |-CompoundStmt 0x15b0f11e0 <line:53:13, line:59:13>       |       | `-IfStmt 0x15b0f11c0 <line:54:17, line:58:17>       |       |   |-RecoveryExpr 0x15b0f1190 <line:54:21, col:23> '_Bool' contains-errors       |       |   `-CompoundStmt 0x15b0f11b0 <line:55:17, line:58:17>       |       `-CompoundStmt 0x15b0f1248 <line:61:13, line:67:13>       |         `-IfStmt 0x15b0f1228 <line:62:17, line:66:17>       |           |-RecoveryExpr 0x15b0f11f8 <line:62:21, col:23> '_Bool' contains-errors       |           `-CompoundStmt 0x15b0f1218 <line:63:17, line:66:17>       `-IfStmt 0x15b0f1498 <line:70:10, line:91:5>         |-RecoveryExpr 0x15b0f12e8 <line:70:14, col:30> '_Bool' contains-errors         `-CompoundStmt 0x15b0f1480 <line:71:5, line:91:5>           `-IfStmt 0x15b0f1460 <line:72:9, line:90:9>             |-RecoveryExpr 0x15b0f1308 <line:72:12, col:29> '_Bool' contains-errors             `-CompoundStmt 0x15b0f1448 <line:73:9, line:90:9>               `-IfStmt 0x15b0f1418 <line:74:13, line:89:13> has_else                 |-RecoveryExpr 0x15b0f1328 <line:74:16, col:30> '_Bool' contains-errors                 |-CompoundStmt 0x15b0f1398 <line:75:13, line:81:13>                 | `-IfStmt 0x15b0f1378 <line:76:17, line:80:17>                 |   |-RecoveryExpr 0x15b0f1348 <line:76:21, col:23> '_Bool' contains-errors                 |   `-CompoundStmt 0x15b0f1368 <line:77:17, line:80:17>                 `-CompoundStmt 0x15b0f1400 <line:83:13, line:89:13>                   `-IfStmt 0x15b0f13e0 <line:84:17, line:88:17>                     |-RecoveryExpr 0x15b0f13b0 <line:84:21, col:23> '_Bool' contains-errors                     `-CompoundStmt 0x15b0f13d0 <line:85:17, line:88:17> ","20553":"`-FunctionDecl 0x1380fb518  line:1:1 SYSCALL_DEFINE3 'int ()'   `-CompoundStmt 0x12e031ad0 <line:2:1, line:99:1>     |-DeclStmt 0x1380fb7f8 <line:3:2, col:26>     | |-RecordDecl 0x1380fb608 <col:2, col:9> col:9 struct shmid_kernel     | `-VarDecl 0x1380fb778 <col:2, col:23> col:23 used shp 'struct shmid_kernel *'     |-DeclStmt 0x1380fb928 <line:4:2, col:18>     | |-VarDecl 0x1380fb828 <col:2, col:6> col:6 used err 'int'     | `-VarDecl 0x1380fb8a8 <col:2, col:11> col:11 used version 'int'     |-DeclStmt 0x1380fbb28 <line:5:2, col:26>     | |-RecordDecl 0x1380fb940 <col:2, col:9> col:9 struct ipc_namespace     | `-VarDecl 0x1380fbaa8 <col:2, col:24> col:24 used ns 'struct ipc_namespace *'     |-IfStmt 0x12e01ad88 <line:7:2, line:8:11>     | |-BinaryOperator 0x12e01acc0 <line:7:6, col:25> 'int' contains-errors '||'     | | |-BinaryOperator 0x12e01ac60 <col:6, col:12> 'int' contains-errors '<'     | | | |-RecoveryExpr 0x12e01ac40 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x1380fbb70 <col:12> 'int' 0     | | `-BinaryOperator 0x12e01aca0 <col:17, col:25> 'int' contains-errors '<'     | |   |-RecoveryExpr 0x12e01ac80 <col:17> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1380fbbc8 <col:25> 'int' 0     | `-ReturnStmt 0x12e01ad78 <line:8:3, col:11>     |   `-UnaryOperator 0x12e01ad60 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12e01ad48 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12e01ad28 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e01afa0 <line:10:2, col:34> 'int' contains-errors '='     | |-DeclRefExpr 0x12e01ada8 <col:2> 'int' lvalue Var 0x1380fb8a8 'version' 'int'     | `-CallExpr 0x12e01af78 <col:12, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e01aea8 <col:12> 'int ()' Function 0x12e01adf0 'ipc_parse_version' 'int ()'     |   `-UnaryOperator 0x12e01af60 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e01af40 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e01b158 <line:11:2, col:25> 'struct ipc_namespace *' contains-errors '='     | |-DeclRefExpr 0x12e01afc0 <col:2> 'struct ipc_namespace *' lvalue Var 0x1380fbaa8 'ns' 'struct ipc_namespace *'     | `-CXXDependentScopeMemberExpr 0x12e01b110 <col:7, col:25> '<dependent type>' contains-errors lvalue ->ipc_ns     |   `-CXXDependentScopeMemberExpr 0x12e01b0c8 <col:7, col:16> '<dependent type>' contains-errors lvalue ->nsproxy     |     `-RecoveryExpr 0x12e01b0a8 <col:7> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x12e01b1c8 <line:13:2, line:92:2>     | |-RecoveryExpr 0x12e01b1a8 <line:13:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12e031908 <col:15, line:92:2>     |   |-ReturnStmt 0x12e01b4c8 <line:18:3, col:52>     |   | `-CallExpr 0x12e01b480 <col:10, col:52> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12e01b330 <col:10> 'int ()' Function 0x12e01b278 'shmctl_nolock' 'int ()'     |   |   |-DeclRefExpr 0x12e01b350 <col:24> 'struct ipc_namespace *' lvalue Var 0x1380fbaa8 'ns' 'struct ipc_namespace *'     |   |   |-RecoveryExpr 0x12e01b420 <col:28> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x12e01b440 <col:35> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x12e01b3a0 <col:40> 'int' lvalue Var 0x1380fb8a8 'version' 'int'     |   |   `-RecoveryExpr 0x12e01b460 <col:49> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x12e031838 <line:24:2, line:89:2>     |   | |-DeclStmt 0x12e01b838 <line:25:3, col:24>     |   | | |-RecordDecl 0x12e01b648 <col:3, col:10> col:10 struct file     |   | | `-VarDecl 0x12e01b7b8 <col:3, col:16> col:16 used shm_file 'struct file *'     |   | |-CallExpr 0x12e01b998 <line:27:3, col:17> 'int'     |   | | `-ImplicitCastExpr 0x12e01b980 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | |   `-DeclRefExpr 0x12e01b930 <col:3> 'int ()' Function 0x12e01b878 'rcu_read_lock' 'int ()'     |   | |-IfStmt 0x12e01d2b8 <line:29:3, line:32:3>     |   | | |-CallExpr 0x12e01d038 <line:29:7, col:17> 'int'     |   | | | |-ImplicitCastExpr 0x12e01d020 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x12e01bbd8 <col:7> 'int ()' Function 0x12e01bb20 'IS_ERR' 'int ()'     |   | | | `-ImplicitCastExpr 0x12e01d060 <col:14> 'struct shmid_kernel *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x12e01d000 <col:14> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | | `-CompoundStmt 0x12e01d298 <col:20, line:32:3>     |   | |   |-BinaryOperator 0x12e01d210 <line:30:4, col:21> 'int' '='     |   | |   | |-DeclRefExpr 0x12e01d078 <col:4> 'int' lvalue Var 0x1380fb828 'err' 'int'     |   | |   | `-CallExpr 0x12e01d1d0 <col:10, col:21> 'int'     |   | |   |   |-ImplicitCastExpr 0x12e01d1b8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | |   |   | `-DeclRefExpr 0x12e01d178 <col:10> 'int ()' Function 0x12e01d0c0 'PTR_ERR' 'int ()'     |   | |   |   `-ImplicitCastExpr 0x12e01d1f8 <col:18> 'struct shmid_kernel *' <LValueToRValue>     |   | |   |     `-DeclRefExpr 0x12e01d198 <col:18> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |   `-GotoStmt 0x12e01d280 <line:31:4, col:9> 'out_unlock1' 0x12e01d230     |   | |-CallExpr 0x12e01d470 <line:34:3, col:33> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e01d3b8 <col:3> 'int ()' Function 0x12e01d300 'audit_ipc_obj' 'int ()'     |   | | `-UnaryOperator 0x12e01d458 <col:17, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   `-ParenExpr 0x12e01d438 <col:18, col:32> '<dependent type>' contains-errors lvalue     |   | |     `-RecoveryExpr 0x12e01d410 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x12e01d3d8 <col:19> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-IfStmt 0x12e01d628 <line:36:3, line:37:9>     |   | | |-ImplicitCastExpr 0x12e01d5f8 <line:36:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x12e01d5d8 <col:7> 'int' lvalue Var 0x1380fb828 'err' 'int'     |   | | `-GotoStmt 0x12e01d610 <line:37:4, col:9> 'out_unlock1' 0x12e01d230     |   | |-CallExpr 0x12e01d7c0 <line:39:3, col:33> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e01d728 <col:3> 'int ()' Function 0x12e01d670 'ipc_lock_object' 'int ()'     |   | | `-UnaryOperator 0x12e01d7a8 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   `-RecoveryExpr 0x12e01d780 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x12e01d748 <col:20> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-IfStmt 0x12e01da40 <line:42:3, line:45:3>     |   | | |-UnaryOperator 0x12e01d988 <line:42:7, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | | `-CallExpr 0x12e01d960 <col:8, col:39> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x12e01d8c8 <col:8> 'int ()' Function 0x12e01d810 'ipc_valid_object' 'int ()'     |   | | |   `-UnaryOperator 0x12e01d948 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | |     `-RecoveryExpr 0x12e01d920 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   | | |       `-DeclRefExpr 0x12e01d8e8 <col:26> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | | `-CompoundStmt 0x12e01da28 <col:42, line:45:3>     |   | |   `-GotoStmt 0x12e01da10 <line:44:4, col:9> 'out_unlock0' 0x12e01d9c0     |   | |-IfStmt 0x12e01e090 <line:47:3, line:59:3>     |   | | |-RecoveryExpr 0x12e01dbc0 <line:47:7, col:44> '_Bool' contains-errors     |   | | `-CompoundStmt 0x12e01e070 <col:47, line:59:3>     |   | |   |-IfStmt 0x12e01dec0 <line:50:4, line:54:4>     |   | |   | |-RecoveryExpr 0x12e01de50 <line:50:8, line:51:40> '_Bool' contains-errors     |   | |   | `-CompoundStmt 0x12e01dea8 <col:43, line:54:4>     |   | |   |   `-GotoStmt 0x12e01de90 <line:53:5, col:10> 'out_unlock0' 0x12e01d9c0     |   | |   `-IfStmt 0x12e01e050 <line:55:4, line:58:4>     |   | |     |-RecoveryExpr 0x12e01dfe0 <line:55:8, col:49> '_Bool' contains-errors     |   | |     `-CompoundStmt 0x12e01e038 <col:52, line:58:4>     |   | |       `-GotoStmt 0x12e01e020 <line:57:5, col:10> 'out_unlock0' 0x12e01d9c0     |   | |-BinaryOperator 0x12e01e130 <line:61:3, col:19> 'struct file *' contains-errors '='     |   | | |-DeclRefExpr 0x12e01e0b0 <col:3> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | | `-RecoveryExpr 0x12e01e108 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e01e0d0 <col:14> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-IfStmt 0x12e01e2e0 <line:62:3, line:63:9>     |   | | |-CallExpr 0x12e01e288 <line:62:7, col:33> 'int'     |   | | | |-ImplicitCastExpr 0x12e01e270 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x12e01e230 <col:7> 'int ()' Function 0x12e01e178 'is_file_hugepages' 'int ()'     |   | | | `-ImplicitCastExpr 0x12e01e2b0 <col:25> 'struct file *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x12e01e250 <col:25> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | | `-GotoStmt 0x12e01e2c8 <line:63:4, col:9> 'out_unlock0' 0x12e01d9c0     |   | |-IfStmt 0x12e01eb70 <line:65:3, line:74:3>     |   | | |-RecoveryExpr 0x12e01e300 <line:65:7, col:14> '_Bool' contains-errors     |   | | `-CompoundStmt 0x12e01eb40 <col:24, line:74:3>     |   | |   |-DeclStmt 0x12e01e658 <line:66:4, col:45>     |   | |   | |-RecordDecl 0x12e01e320 <col:4, col:11> col:11 struct user_struct     |   | |   | `-VarDecl 0x12e01e488 <col:4, col:44> col:24 used user 'struct user_struct *' cinit     |   | |   |   `-ImplicitCastExpr 0x12e01e628 <col:31, col:44> 'struct user_struct *' <IntegralToPointer>     |   | |   |     `-CallExpr 0x12e01e608 <col:31, col:44> 'int'     |   | |   |       `-ImplicitCastExpr 0x12e01e5f0 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   | |   |         `-DeclRefExpr 0x12e01e5d0 <col:31> 'int ()' Function 0x12e01e518 'current_user' 'int ()'     |   | |   |-BinaryOperator 0x12e01e870 <line:68:4, col:38> 'int' '='     |   | |   | |-DeclRefExpr 0x12e01e670 <col:4> 'int' lvalue Var 0x1380fb828 'err' 'int'     |   | |   | `-CallExpr 0x12e01e808 <col:10, col:38> 'int'     |   | |   |   |-ImplicitCastExpr 0x12e01e7f0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | |   |   | `-DeclRefExpr 0x12e01e770 <col:10> 'int ()' Function 0x12e01e6b8 'shmem_lock' 'int ()'     |   | |   |   |-ImplicitCastExpr 0x12e01e840 <col:21> 'struct file *' <LValueToRValue>     |   | |   |   | `-DeclRefExpr 0x12e01e790 <col:21> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | |   |   |-IntegerLiteral 0x12e01e7b0 <col:31> 'int' 1     |   | |   |   `-ImplicitCastExpr 0x12e01e858 <col:34> 'struct user_struct *' <LValueToRValue>     |   | |   |     `-DeclRefExpr 0x12e01e7d0 <col:34> 'struct user_struct *' lvalue Var 0x12e01e488 'user' 'struct user_struct *'     |   | |   |-IfStmt 0x12e01eb08 <line:69:4, line:72:4>     |   | |   | |-RecoveryExpr 0x12e01e988 <line:69:8, col:49> '_Bool' contains-errors     |   | |   | `-CompoundStmt 0x12e01eaf0 <col:52, line:72:4>     |   | |   |   `-BinaryOperator 0x12e01ead0 <line:71:5, col:23> '<dependent type>' contains-errors '='     |   | |   |     |-RecoveryExpr 0x12e01ea88 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   | |   |     | `-DeclRefExpr 0x12e01ea50 <col:5> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |   |     `-DeclRefExpr 0x12e01eab0 <col:23> 'struct user_struct *' lvalue Var 0x12e01e488 'user' 'struct user_struct *'     |   | |   `-GotoStmt 0x12e01eb28 <line:73:4, col:9> 'out_unlock0' 0x12e01d9c0     |   | |-IfStmt 0x12e01ec70 <line:77:3, line:78:9>     |   | | |-RecoveryExpr 0x12e01ec38 <line:77:7, col:40> '_Bool' contains-errors     |   | | `-GotoStmt 0x12e01ec58 <line:78:4, col:9> 'out_unlock0' 0x12e01d9c0     |   | |-CallExpr 0x12e01ed50 <line:79:3, col:42> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e01ec90 <col:3> 'int ()' Function 0x12e01e6b8 'shmem_lock' 'int ()'     |   | | |-DeclRefExpr 0x12e01ecb0 <col:14> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | | |-IntegerLiteral 0x12e01ecd0 <col:24> 'int' 0     |   | | `-RecoveryExpr 0x12e01ed28 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e01ecf0 <col:27> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-CallExpr 0x12e01efc8 <line:82:3, col:20> 'int'     |   | | |-ImplicitCastExpr 0x12e01efb0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x12e01ef70 <col:3> 'int ()' Function 0x12e01eeb8 'get_file' 'int ()'     |   | | `-ImplicitCastExpr 0x12e031200 <col:12> 'struct file *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x12e01ef90 <col:12> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | |-CallExpr 0x12e031390 <line:83:3, col:35> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e0312f8 <col:3> 'int ()' Function 0x12e031240 'ipc_unlock_object' 'int ()'     |   | | `-UnaryOperator 0x12e031378 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   `-RecoveryExpr 0x12e031350 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x12e031318 <col:22> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |   | |-CallExpr 0x12e0314d0 <line:84:3, col:19> 'int'     |   | | `-ImplicitCastExpr 0x12e0314b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | |   `-DeclRefExpr 0x12e031498 <col:3> 'int ()' Function 0x12e0313e0 'rcu_read_unlock' 'int ()'     |   | |-CallExpr 0x12e031650 <line:85:3, col:43> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12e0315d0 <col:3> 'int ()' Function 0x12e031518 'shmem_unlock_mapping' 'int ()'     |   | | `-RecoveryExpr 0x12e031628 <col:24, col:34> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e0315f0 <col:24> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | |-CallExpr 0x12e0317b0 <line:87:3, col:16> 'int'     |   | | |-ImplicitCastExpr 0x12e031798 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x12e031758 <col:3> 'int ()' Function 0x12e0316a0 'fput' 'int ()'     |   | | `-ImplicitCastExpr 0x12e0317d8 <col:8> 'struct file *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x12e031778 <col:8> 'struct file *' lvalue Var 0x12e01b7b8 'shm_file' 'struct file *'     |   | `-ReturnStmt 0x12e031828 <line:88:3, col:10>     |   |   `-ImplicitCastExpr 0x12e031810 <col:10> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x12e0317f0 <col:10> 'int' lvalue Var 0x1380fb828 'err' 'int'     |   `-DefaultStmt 0x12e0318e8 <line:90:2, col:9>     |     `-NullStmt 0x12e0318e0 <col:9>     |-LabelStmt 0x12e0319f0 <line:94:1, line:95:34> 'out_unlock0'     | `-CallExpr 0x12e0319c8 <col:2, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e031930 <col:2> 'int ()' Function 0x12e031240 'ipc_unlock_object' 'int ()'     |   `-UnaryOperator 0x12e0319b0 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e031988 <col:21, col:26> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12e031950 <col:21> 'struct shmid_kernel *' lvalue Var 0x1380fb778 'shp' 'struct shmid_kernel *'     |-LabelStmt 0x12e031a68 <line:96:1, line:97:18> 'out_unlock1'     | `-CallExpr 0x12e031a48 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x12e031a30 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x12e031a10 <col:2> 'int ()' Function 0x12e0313e0 'rcu_read_unlock' 'int ()'     `-ReturnStmt 0x12e031ac0 <line:98:2, col:9>       `-ImplicitCastExpr 0x12e031aa8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12e031a88 <col:9> 'int' lvalue Var 0x1380fb828 'err' 'int' ","20426":"`-FunctionDecl 0x121928f50  line:1:13 xudc_set_clear_feature 'void (struct xusb_udc *)' static   |-ParmVarDecl 0x121928e48 <col:36, col:53> col:53 used udc 'struct xusb_udc *'   `-CompoundStmt 0x122008ce8 <line:2:1, line:76:1>     |-DeclStmt 0x121941508 <line:3:2, col:35>     | |-RecordDecl 0x121941248 <col:2, col:9> col:9 struct xusb_ep     | `-VarDecl 0x1219413b8 <col:2, col:34> col:18 used ep0 'struct xusb_ep *' cinit     |   `-UnaryOperator 0x1219414d8 <col:24, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x1219414b8 <col:25, col:34> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x1219414a0 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x121941458 <col:25, col:30> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x121941420 <col:25> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |       `-IntegerLiteral 0x121941480 <col:33> 'int' 0     |-DeclStmt 0x121941768 <line:4:2, col:33>     | |-RecordDecl 0x121941520 <col:2, col:9> col:9 struct xusb_req     | `-VarDecl 0x121941688 <col:2, col:30> col:19 used req 'struct xusb_req *' cinit     |   `-RecoveryExpr 0x121941728 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1219416f0 <col:25> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |-DeclStmt 0x121941870 <line:5:2, col:27>     | `-VarDecl 0x121941808 <col:2, col:18> col:18 used target_ep 'struct xusb_ep *'     |-DeclStmt 0x121941a70 <line:9:2, col:65>     | `-VarDecl 0x1219418b8 <col:2, col:6> col:6 used flag 'int'     |-DeclStmt 0x121941b08 <line:10:2, col:9>     | `-VarDecl 0x121941aa0 <col:2, col:6> col:6 used ret 'int'     |-SwitchStmt 0x121941be0 <line:12:2, line:67:2>     | |-ImplicitCastExpr 0x121941bc8 <line:12:10, col:21> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x121941b80 <col:10, col:21> '<dependent type>' contains-errors lvalue .bRequestType     | |   `-RecoveryExpr 0x121941b58 <col:10, col:15> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x121941b20 <col:10> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     | `-CompoundStmt 0x121943a98 <col:35, line:67:2>     |   |-SwitchStmt 0x121941ce0 <line:14:3, line:27:3>     |   | |-ImplicitCastExpr 0x121941cc8 <line:14:11, col:22> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-CXXDependentScopeMemberExpr 0x121941c80 <col:11, col:22> '<dependent type>' contains-errors lvalue .wValue     |   | |   `-RecoveryExpr 0x121941c58 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x121941c20 <col:11> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |   | `-CompoundStmt 0x1219420f0 <col:30, line:27:3>     |   |   |-BreakStmt 0x121941d20 <line:17:4>     |   |   |-IfStmt 0x121941eb8 <line:19:4, line:22:23> has_else     |   |   | |-ImplicitCastExpr 0x121941d60 <line:19:8> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x121941d40 <col:8> 'int' lvalue Var 0x1219418b8 'flag' 'int'     |   |   | |-BinaryOperator 0x121941df8 <line:20:5, col:23> '<dependent type>' contains-errors '='     |   |   | | |-RecoveryExpr 0x121941db0 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   |   | | | `-DeclRefExpr 0x121941d78 <col:5> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |   |   | | `-IntegerLiteral 0x121941dd8 <col:23> 'int' 1     |   |   | `-BinaryOperator 0x121941e98 <line:22:5, col:23> '<dependent type>' contains-errors '='     |   |   |   |-RecoveryExpr 0x121941e50 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   |   |   | `-DeclRefExpr 0x121941e18 <col:5> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |   |   |   `-IntegerLiteral 0x121941e78 <col:23> 'int' 0     |   |   |-BreakStmt 0x121941ee8 <line:23:4>     |   |   |-DefaultStmt 0x1219420c8 <line:24:3, line:25:22>     |   |   | `-CallExpr 0x121942088 <col:4, col:22> 'int'     |   |   |   |-ImplicitCastExpr 0x121942070 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x121942000 <col:4> 'int ()' Function 0x121941f48 'xudc_ep0_stall' 'int ()'     |   |   |   `-ImplicitCastExpr 0x1219420b0 <col:19> 'struct xusb_udc *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x121942020 <col:19> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |   |   `-BreakStmt 0x1219420e8 <line:26:4>     |   |-BreakStmt 0x121942128 <line:28:3>     |   |-IfStmt 0x1219439a8 <line:30:3, line:62:3>     |   | |-UnaryOperator 0x121943018 <line:30:7, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x121943000 <col:8, col:19> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-CXXDependentScopeMemberExpr 0x1219421a8 <col:8, col:19> '<dependent type>' contains-errors lvalue .wValue     |   | |     `-RecoveryExpr 0x121942180 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x121942148 <col:8> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |   | `-CompoundStmt 0x121943988 <col:27, line:62:3>     |   |   |-IfStmt 0x1219433a0 <line:37:4, line:40:4>     |   |   | |-RecoveryExpr 0x1219432b8 <line:37:8, col:31> '_Bool' contains-errors     |   |   | `-CompoundStmt 0x121943380 <col:38, line:40:4>     |   |   |   |-CallExpr 0x121943330 <line:38:5, col:23> 'int'     |   |   |   | |-ImplicitCastExpr 0x121943318 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | | `-DeclRefExpr 0x1219432d8 <col:5> 'int ()' Function 0x121941f48 'xudc_ep0_stall' 'int ()'     |   |   |   | `-ImplicitCastExpr 0x121943358 <col:20> 'struct xusb_udc *' <LValueToRValue>     |   |   |   |   `-DeclRefExpr 0x1219432f8 <col:20> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |   |   |   `-ReturnStmt 0x121943370 <line:39:5>     |   |   `-IfStmt 0x121943958 <line:42:4, line:61:4> has_else     |   |     |-RecoveryExpr 0x121943528 <line:42:8, col:9> '_Bool' contains-errors     |   |     |-CompoundStmt 0x121943668 <col:19, line:47:4>     |   |     `-CompoundStmt 0x121943940 <col:11, line:61:4>     |   |       `-IfStmt 0x121943910 <line:48:5, line:60:5> has_else     |   |         |-ImplicitCastExpr 0x121943698 <line:48:9> 'int' <LValueToRValue>     |   |         | `-DeclRefExpr 0x121943678 <col:9> 'int' lvalue Var 0x1219418b8 'flag' 'int'     |   |         |-CompoundStmt 0x1219437d0 <col:15, line:53:5>     |   |         `-CompoundStmt 0x121943900 <col:12, line:60:5>     |   |-BreakStmt 0x1219439c8 <line:63:3>     |   |-DefaultStmt 0x121943a68 <line:64:2, line:65:21>     |   | `-CallExpr 0x121943a28 <col:3, col:21> 'int'     |   |   |-ImplicitCastExpr 0x121943a10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1219439d0 <col:3> 'int ()' Function 0x121941f48 'xudc_ep0_stall' 'int ()'     |   |   `-ImplicitCastExpr 0x121943a50 <col:18> 'struct xusb_udc *' <LValueToRValue>     |   |     `-DeclRefExpr 0x1219439f0 <col:18> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     |   `-ReturnStmt 0x121943a88 <line:66:3>     |-BinaryOperator 0x121943ba0 <line:69:2, col:24> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x121943b38 <col:2, col:15> '<dependent type>' contains-errors lvalue .length     | | `-RecoveryExpr 0x121943b10 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x121943ad8 <col:2> 'struct xusb_req *' contains-errors lvalue Var 0x121941688 'req' 'struct xusb_req *'     | `-IntegerLiteral 0x121943b80 <col:24> 'int' 0     |-BinaryOperator 0x121943d98 <line:70:2, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x121943bc0 <col:2> 'int' lvalue Var 0x121941aa0 'ret' 'int'     | `-CallExpr 0x121943d38 <col:8, col:33> 'int' contains-errors     |   |-ImplicitCastExpr 0x121943d20 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x121943cc0 <col:8> 'int ()' Function 0x121943c08 '__xudc_ep0_queue' 'int ()'     |   |-ImplicitCastExpr 0x121943d68 <col:25> 'struct xusb_ep *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x121943ce0 <col:25> 'struct xusb_ep *' contains-errors lvalue Var 0x1219413b8 'ep0' 'struct xusb_ep *'     |   `-ImplicitCastExpr 0x121943d80 <col:30> 'struct xusb_req *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x121943d00 <col:30> 'struct xusb_req *' contains-errors lvalue Var 0x121941688 'req' 'struct xusb_req *'     |-IfStmt 0x121943e40 <line:71:2, line:72:3>     | |-BinaryOperator 0x121943e10 <line:71:6, col:13> 'int' '=='     | | |-ImplicitCastExpr 0x121943df8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x121943db8 <col:6> 'int' lvalue Var 0x121941aa0 'ret' 'int'     | | `-IntegerLiteral 0x121943dd8 <col:13> 'int' 0     | `-ReturnStmt 0x121943e30 <line:72:3>     |-CallExpr 0x122008c20 <line:74:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121943f40 <col:2> 'int ()' Function 0x121943e88 'dev_err' 'int ()'     | |-RecoveryExpr 0x121943f98 <col:10, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x121943f60 <col:10> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *'     | `-StringLiteral 0x122008c00 <col:20> 'char[4]' lvalue \"STR\"     `-CallExpr 0x122008ca8 <line:75:2, col:20> 'int'       |-ImplicitCastExpr 0x122008c90 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x122008c50 <col:2> 'int ()' Function 0x121941f48 'xudc_ep0_stall' 'int ()'       `-ImplicitCastExpr 0x122008cd0 <col:17> 'struct xusb_udc *' <LValueToRValue>         `-DeclRefExpr 0x122008c70 <col:17> 'struct xusb_udc *' lvalue ParmVar 0x121928e48 'udc' 'struct xusb_udc *' ","20876":"`-FunctionDecl 0x12c027400  line:1:6 invalid smb1cli_session_set_action 'void (struct smbXcli_session *, int)'   |-ParmVarDecl 0x12c00e248 <col:33, col:57> col:57 used session 'struct smbXcli_session *'   |-ParmVarDecl 0x12c00e2e0 <line:2:5, col:14> col:14 invalid action 'int'   `-CompoundStmt 0x12c0275a0 <line:3:1, line:5:1>     `-BinaryOperator 0x12c027580 <line:4:2, col:25> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x12c027518 <col:2, col:16> '<dependent type>' contains-errors lvalue .action       | `-RecoveryExpr 0x12c0274f0 <col:2, col:11> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x12c0274b8 <col:2> 'struct smbXcli_session *' lvalue ParmVar 0x12c00e248 'session' 'struct smbXcli_session *'       `-RecoveryExpr 0x12c027560 <col:25> '<dependent type>' contains-errors lvalue ","20504":"`-FunctionDecl 0x145144cb8  line:1:36 kvm_memslots 'struct kvm_memslots *(struct kvm *)' static inline   |-ParmVarDecl 0x1451286e8 <col:49, col:61> col:61 used kvm 'struct kvm *'   `-CompoundStmt 0x145145300 <line:2:1, line:6:1>     `-ReturnStmt 0x1451452f0 <line:3:2, line:5:40>       `-CallExpr 0x1451452c0 <line:3:9, line:5:40> '<dependent type>' contains-errors         |-DeclRefExpr 0x145144ee0 <line:3:9> 'int ()' Function 0x145144e28 'rcu_dereference_check' 'int ()'         |-RecoveryExpr 0x145144f38 <col:31, col:36> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x145144f00 <col:31> 'struct kvm *' lvalue ParmVar 0x1451286e8 'kvm' 'struct kvm *'         `-BinaryOperator 0x1451452a0 <line:4:4, line:5:39> 'int' contains-errors '||'           |-CallExpr 0x1451450d8 <line:4:4, col:34> '<dependent type>' contains-errors           | |-DeclRefExpr 0x145145040 <col:4> 'int ()' Function 0x145144f88 'srcu_read_lock_held' 'int ()'           | `-UnaryOperator 0x1451450c0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow           |   `-RecoveryExpr 0x145145098 <col:25, col:30> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x145145060 <col:25> 'struct kvm *' lvalue ParmVar 0x1451286e8 'kvm' 'struct kvm *'           `-CallExpr 0x145145278 <line:5:7, col:39> '<dependent type>' contains-errors             |-DeclRefExpr 0x1451451e0 <col:7> 'int ()' Function 0x145145128 'lockdep_is_held' 'int ()'             `-UnaryOperator 0x145145260 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow               `-RecoveryExpr 0x145145238 <col:24, col:29> '<dependent type>' contains-errors lvalue                 `-DeclRefExpr 0x145145200 <col:24> 'struct kvm *' lvalue ParmVar 0x1451286e8 'kvm' 'struct kvm *' ","20565":"`-FunctionDecl 0x11f928750  line:1:13 referenced drop_sysctl_table 'void (struct ctl_table_header *)' static   |-ParmVarDecl 0x11f928648 <col:31, col:56> col:56 used header 'struct ctl_table_header *'   `-CompoundStmt 0x11f941440 <line:2:1, line:15:1>     |-DeclStmt 0x11f940c98 <line:3:2, col:41>     | |-RecordDecl 0x11f940a48 <col:2, col:9> col:9 struct ctl_dir     | `-VarDecl 0x11f940bb8 <col:2, col:35> col:18 used parent 'struct ctl_dir *' cinit     |   `-RecoveryExpr 0x11f940c58 <col:27, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11f940c20 <col:27> 'struct ctl_table_header *' lvalue ParmVar 0x11f928648 'header' 'struct ctl_table_header *'     |-IfStmt 0x11f940d38 <line:5:2, line:6:3>     | |-UnaryOperator 0x11f940d10 <line:5:6, col:16> '<dependent type>' contains-errors prefix '--' cannot overflow     | | `-RecoveryExpr 0x11f940ce8 <col:8, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11f940cb0 <col:8> 'struct ctl_table_header *' lvalue ParmVar 0x11f928648 'header' 'struct ctl_table_header *'     | `-ReturnStmt 0x11f940d28 <line:6:3>     |-CallExpr 0x11f940f08 <line:8:2, col:18> 'int'     | |-ImplicitCastExpr 0x11f940ef0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f940e80 <col:2> 'int ()' Function 0x11f940dc8 'put_links' 'int ()'     | `-ImplicitCastExpr 0x11f940f30 <col:12> 'struct ctl_table_header *' <LValueToRValue>     |   `-DeclRefExpr 0x11f940ea0 <col:12> 'struct ctl_table_header *' lvalue ParmVar 0x11f928648 'header' 'struct ctl_table_header *'     |-CallExpr 0x11f941080 <line:9:2, col:28> 'int'     | |-ImplicitCastExpr 0x11f941068 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11f941028 <col:2> 'int ()' Function 0x11f940f70 'start_unregistering' 'int ()'     | `-ImplicitCastExpr 0x11f9410a8 <col:22> 'struct ctl_table_header *' <LValueToRValue>     |   `-DeclRefExpr 0x11f941048 <col:22> 'struct ctl_table_header *' lvalue ParmVar 0x11f928648 'header' 'struct ctl_table_header *'     |-IfStmt 0x11f941308 <line:10:2, line:11:24>     | |-UnaryOperator 0x11f941138 <line:10:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-UnaryOperator 0x11f941120 <col:7, col:17> '<dependent type>' contains-errors prefix '--' cannot overflow     | |   `-RecoveryExpr 0x11f9410f8 <col:9, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f9410c0 <col:9> 'struct ctl_table_header *' lvalue ParmVar 0x11f928648 'header' 'struct ctl_table_header *'     | `-CallExpr 0x11f9412d8 <line:11:3, col:24> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f941230 <col:3> 'int ()' Function 0x11f941178 'kfree_rcu' 'int ()'     |   |-DeclRefExpr 0x11f941250 <col:13> 'struct ctl_table_header *' lvalue ParmVar 0x11f928648 'header' 'struct ctl_table_header *'     |   `-RecoveryExpr 0x11f9412b8 <col:21> '<dependent type>' contains-errors lvalue     `-IfStmt 0x11f941420 <line:13:2, line:14:36>       |-ImplicitCastExpr 0x11f941348 <line:13:6> 'struct ctl_dir *' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x11f941328 <col:6> 'struct ctl_dir *' contains-errors lvalue Var 0x11f940bb8 'parent' 'struct ctl_dir *'       `-CallExpr 0x11f9413f8 <line:14:3, col:36> '<dependent type>' contains-errors         |-DeclRefExpr 0x11f941360 <col:3> 'void (struct ctl_table_header *)' Function 0x11f928750 'drop_sysctl_table' 'void (struct ctl_table_header *)'         `-UnaryOperator 0x11f9413e0 <col:21, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x11f9413b8 <col:22, col:30> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x11f941380 <col:22> 'struct ctl_dir *' contains-errors lvalue Var 0x11f940bb8 'parent' 'struct ctl_dir *' ","20214":"`-FunctionDecl 0x121028a40  col:10 implicit used isspace 'int (int)' extern   |-ParmVarDecl 0x121028b40 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x121028ae8 <<invalid sloc>> Implicit 929   |-NoThrowAttr 0x121028bb0 <col:10> Implicit   `-PureAttr 0x121028bd8 <col:10> Implicit ","20716":"`-FunctionDecl 0x14c128cc8  line:1:12 connect_to_db 'int (char *, char *, char *)' static   |-ParmVarDecl 0x14c128ad8 <col:26, col:32> col:32 used host 'char *'   |-ParmVarDecl 0x14c128b58 <col:38, col:44> col:44 used user 'char *'   |-ParmVarDecl 0x14c128bd8 <col:49, col:55> col:55 used passwd 'char *'   `-CompoundStmt 0x14c144868 <line:2:1, line:70:1>     |-DeclStmt 0x14c128eb8 <line:3:3, col:26>     | `-VarDecl 0x14c128e50 <col:3, col:8> col:8 invalid buff 'char'     |-CallExpr 0x14c1290a8 <line:4:3, col:19> 'int'     | |-ImplicitCastExpr 0x14c129090 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c128fe0 <col:3> 'int ()' Function 0x14c128f28 'DBUG_ENTER' 'int ()'     | `-ImplicitCastExpr 0x14c1290d0 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14c129040 <col:14> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14c142238 <line:6:3, col:20> 'int'     | |-ImplicitCastExpr 0x14c142220 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c1291c8 <col:3> 'int ()' Function 0x14c129110 'verbose_msg' 'int ()'     | `-ImplicitCastExpr 0x14c142260 <col:15> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14c142200 <col:15> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14c142408 <line:7:3, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c142358 <col:3> 'int ()' Function 0x14c1422a0 'mysql_init' 'int ()'     | `-UnaryOperator 0x14c1423f0 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14c1423d0 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c1426e8 <line:8:3, line:9:61>     | |-RecoveryExpr 0x14c142448 <line:8:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14c1426b0 <line:9:5, col:61> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c142548 <col:5> 'int ()' Function 0x14c142490 'mysql_options' 'int ()'     |   |-UnaryOperator 0x14c142658 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c142638 <col:20> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c142670 <col:37> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c142690 <col:56> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c142a00 <line:23:3, line:24:65>     | |-RecoveryExpr 0x14c142840 <line:23:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14c1429c8 <line:24:5, col:65> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c142860 <col:5> 'int ()' Function 0x14c142490 'mysql_options' 'int ()'     |   |-UnaryOperator 0x14c142970 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c142950 <col:20> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c142988 <col:37> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c1429a8 <col:52> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c142b88 <line:29:3, col:75> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c142a20 <col:3> 'int ()' Function 0x14c142490 'mysql_options' 'int ()'     | |-UnaryOperator 0x14c142b30 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c142b10 <col:18> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14c142b48 <col:36> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c142b68 <col:60> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c1431d8 <line:40:3, line:46:3>     | |-RecoveryExpr 0x14c142f20 <line:40:7, line:42:37> '_Bool' contains-errors     | `-CompoundStmt 0x14c1431c0 <line:43:3, line:46:3>     |   `-CallExpr 0x14c143198 <line:45:5, col:18> 'int'     |     |-ImplicitCastExpr 0x14c143180 <col:5> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14c143140 <col:5> 'int ()' Function 0x14c143088 'DBUG_RETURN' 'int ()'     |     `-IntegerLiteral 0x14c143160 <col:17> 'int' 1     |-IfStmt 0x14c144190 <line:47:3, line:55:3>     | |-RecoveryExpr 0x14c144140 <line:47:7, line:48:31> '_Bool' contains-errors     | `-CompoundStmt 0x14c144180 <line:49:3, line:55:3>     |-IfStmt 0x14c144550 <line:60:3, line:61:18>     | |-RecoveryExpr 0x14c1444b0 <line:60:7, col:51> '_Bool' contains-errors     | `-CallExpr 0x14c144528 <line:61:5, col:18> 'int'     |   |-ImplicitCastExpr 0x14c144510 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14c1444d0 <col:5> 'int ()' Function 0x14c143088 'DBUG_RETURN' 'int ()'     |   `-IntegerLiteral 0x14c1444f0 <col:17> 'int' 1     |-IfStmt 0x14c1447c8 <line:63:3, line:68:3>     | |-RecoveryExpr 0x14c144570 <line:63:7> '_Bool' contains-errors     | `-CompoundStmt 0x14c1447a8 <line:64:3, line:68:3>     |   |-CallExpr 0x14c144650 <line:65:5, col:42> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c144590 <col:5> 'int ()' Function 0x14c1441f8 'my_snprintf' 'int ()'     |   | |-RecoveryExpr 0x14c1445b0 <col:17> '<dependent type>' contains-errors lvalue     |   | |-UnaryExprOrTypeTraitExpr 0x14c144610 <col:23, col:34> 'unsigned long' contains-errors sizeof     |   | | `-ParenExpr 0x14c1445f0 <col:29, col:34> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x14c1445d0 <col:30> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x14c144630 <col:37> 'char[4]' lvalue \"STR\"     |   `-IfStmt 0x14c144788 <line:66:5, line:67:20>     |     |-RecoveryExpr 0x14c1446e8 <line:66:9, col:53> '_Bool' contains-errors     |     `-CallExpr 0x14c144760 <line:67:7, col:20> 'int'     |       |-ImplicitCastExpr 0x14c144748 <col:7> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14c144708 <col:7> 'int ()' Function 0x14c143088 'DBUG_RETURN' 'int ()'     |       `-IntegerLiteral 0x14c144728 <col:19> 'int' 1     `-CallExpr 0x14c144840 <line:69:3, col:16> 'int'       |-ImplicitCastExpr 0x14c144828 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14c1447e8 <col:3> 'int ()' Function 0x14c143088 'DBUG_RETURN' 'int ()'       `-IntegerLiteral 0x14c144808 <col:15> 'int' 0 ","21163":"`-FunctionDecl 0x1590fafa0  line:1:13 invalid new_conn_param 'void (int, int, const void *, void *)' static   |-ParmVarDecl 0x1590facf0 <col:28, col:37> col:37 invalid index 'int'   |-ParmVarDecl 0x1590fad70 <col:44, col:53> col:53 invalid length 'int'   |-ParmVarDecl 0x1590fae28 <line:2:6, col:18> col:18 used param 'const void *'   |-ParmVarDecl 0x1590faea8 <col:25, col:31> col:31 used user_data 'void *'   `-CompoundStmt 0x159116150 <line:3:1, line:40:1>     |-DeclStmt 0x1590fb2a8 <line:4:2, col:49>     | |-RecordDecl 0x1590fb068 <col:8, col:15> col:15 struct mgmt_ev_new_conn_param     | `-VarDecl 0x1590fb1d8 <col:2, col:44> col:39 used ev 'const struct mgmt_ev_new_conn_param *' cinit     |   `-ImplicitCastExpr 0x1590fb278 <col:44> 'const struct mgmt_ev_new_conn_param *' <BitCast>     |     `-ImplicitCastExpr 0x1590fb260 <col:44> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x1590fb240 <col:44> 'const void *' lvalue ParmVar 0x1590fae28 'param' 'const void *'     |-DeclStmt 0x1591144f8 <line:5:2, col:41>     | |-RecordDecl 0x1590fb2c0 <col:2, col:9> col:9 struct btd_adapter     | `-VarDecl 0x159114428 <col:2, col:32> col:22 used adapter 'struct btd_adapter *' cinit     |   `-ImplicitCastExpr 0x1591144c8 <col:32> 'struct btd_adapter *' <BitCast>     |     `-ImplicitCastExpr 0x1591144b0 <col:32> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x159114490 <col:32> 'void *' lvalue ParmVar 0x1590faea8 'user_data' 'void *'     |-DeclStmt 0x1591146f8 <line:7:2, col:24>     | |-RecordDecl 0x159114510 <col:2, col:9> col:9 struct btd_device     | `-VarDecl 0x159114678 <col:2, col:21> col:21 used dev 'struct btd_device *'     |-DeclStmt 0x159114818 <line:8:2, col:14>     | `-VarDecl 0x1591147b0 <col:2, col:13> col:7 used dst 'char[18]'     |-IfStmt 0x159114fa0 <line:11:2, line:15:2>     | |-RecoveryExpr 0x159114ce0 <line:11:6, col:25> '_Bool' contains-errors     | `-CompoundStmt 0x159114f80 <col:28, line:15:2>     |   |-CallExpr 0x159114f40 <line:12:3, line:13:10> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x159114e60 <line:12:3> 'int ()' Function 0x159114da8 'btd_error' 'int ()'     |   | |-RecoveryExpr 0x159114eb8 <col:13, col:22> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x159114e80 <col:13> 'struct btd_adapter *' lvalue Var 0x159114428 'adapter' 'struct btd_adapter *'     |   | `-StringLiteral 0x159114f20 <line:13:5> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x159114f70 <line:14:3>     |-CallExpr 0x1591151a0 <line:17:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1591150a0 <col:2> 'int ()' Function 0x159114fe8 'ba2str' 'int ()'     | |-UnaryOperator 0x159115168 <col:9, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x159115120 <col:10, col:19> '<dependent type>' contains-errors lvalue .bdaddr     | |   `-RecoveryExpr 0x1591150f8 <col:10, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1591150c0 <col:10> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'     | `-DeclRefExpr 0x159115180 <col:27> 'char[18]' lvalue Var 0x1591147b0 'dst' 'char[18]'     |-BinaryOperator 0x159115a78 <line:27:2, col:71> 'struct btd_device *' contains-errors '='     | |-DeclRefExpr 0x159115798 <col:2> 'struct btd_device *' lvalue Var 0x159114678 'dev' 'struct btd_device *'     | `-CallExpr 0x159115a40 <col:8, col:71> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159115898 <col:8> 'int ()' Function 0x1591157e0 'btd_adapter_get_device' 'int ()'     |   |-DeclRefExpr 0x1591158b8 <col:31> 'struct btd_adapter *' lvalue Var 0x159114428 'adapter' 'struct btd_adapter *'     |   |-UnaryOperator 0x159115980 <col:40, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x159115938 <col:41, col:50> '<dependent type>' contains-errors lvalue .bdaddr     |   |   `-RecoveryExpr 0x159115910 <col:41, col:45> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1591158d8 <col:41> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'     |   `-CXXDependentScopeMemberExpr 0x1591159f8 <col:58, col:67> '<dependent type>' contains-errors lvalue .type     |     `-RecoveryExpr 0x1591159d0 <col:58, col:62> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x159115998 <col:58> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'     |-IfStmt 0x159115c10 <line:28:2, line:32:2>     | |-UnaryOperator 0x159115ad0 <line:28:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159115ab8 <col:7> 'struct btd_device *' <LValueToRValue>     | |   `-DeclRefExpr 0x159115a98 <col:7> 'struct btd_device *' lvalue Var 0x159114678 'dev' 'struct btd_device *'     | `-CompoundStmt 0x159115bf0 <col:12, line:32:2>     |   |-CallExpr 0x159115ba8 <line:29:3, line:30:15> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x159115ae8 <line:29:3> 'int ()' Function 0x159114da8 'btd_error' 'int ()'     |   | |-RecoveryExpr 0x159115b40 <col:13, col:22> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x159115b08 <col:13> 'struct btd_adapter *' lvalue Var 0x159114428 'adapter' 'struct btd_adapter *'     |   | |-StringLiteral 0x159115b68 <line:30:5> 'char[4]' lvalue \"STR\"     |   | `-DeclRefExpr 0x159115b88 <col:12> 'char[18]' lvalue Var 0x1591147b0 'dst' 'char[18]'     |   `-ReturnStmt 0x159115be0 <line:31:3>     |-IfStmt 0x159115cd0 <line:34:2, line:35:3>     | |-UnaryOperator 0x159115ca8 <line:34:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159115c90 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x159115c68 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x159115c30 <col:7> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'     | `-ReturnStmt 0x159115cc0 <line:35:3>     `-CallExpr 0x1591160f8 <line:37:2, line:39:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x159115dd0 <line:37:2> 'int ()' Function 0x159115d18 'store_conn_param' 'int ()'       |-DeclRefExpr 0x159115df0 <col:19> 'struct btd_adapter *' lvalue Var 0x159114428 'adapter' 'struct btd_adapter *'       |-UnaryOperator 0x159115eb8 <col:28, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-CXXDependentScopeMemberExpr 0x159115e70 <col:29, col:38> '<dependent type>' contains-errors lvalue .bdaddr       |   `-RecoveryExpr 0x159115e48 <col:29, col:33> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x159115e10 <col:29> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'       |-CXXDependentScopeMemberExpr 0x159115f30 <col:46, col:55> '<dependent type>' contains-errors lvalue .type       | `-RecoveryExpr 0x159115f08 <col:46, col:50> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x159115ed0 <col:46> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'       |-RecoveryExpr 0x159115fb0 <line:38:6, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x159115f78 <col:6> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'       |-RecoveryExpr 0x159116010 <col:24, col:28> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x159115fd8 <col:24> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'       |-RecoveryExpr 0x159116070 <line:39:6, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x159116038 <col:6> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *'       `-RecoveryExpr 0x1591160d0 <col:19, col:23> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x159116098 <col:19> 'const struct mgmt_ev_new_conn_param *' lvalue Var 0x1590fb1d8 'ev' 'const struct mgmt_ev_new_conn_param *' ","20438":"`-FunctionDecl 0x153143118  col:5 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x153143218 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x1531431c0 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x153143288 <col:5> Implicit ","20998":"`-FunctionDecl 0x131128238  line:1:12 alloc_fd 'int (unsigned int, unsigned int)' static   |-ParmVarDecl 0x1311280d8 <col:21, col:30> col:30 used start 'unsigned int'   |-ParmVarDecl 0x131128158 <col:37, col:46> col:46 used flags 'unsigned int'   `-CompoundStmt 0x1311287a0 <line:2:1, line:4:1>     `-ReturnStmt 0x131128790 <line:3:2, col:71>       `-CallExpr 0x131128750 <col:9, col:71> '<dependent type>' contains-errors         |-DeclRefExpr 0x131128460 <col:9> 'int ()' Function 0x1311283a8 '__alloc_fd' 'int ()'         |-CXXDependentScopeMemberExpr 0x1311286c0 <col:20, col:29> '<dependent type>' contains-errors lvalue ->files         | `-RecoveryExpr 0x1311286a0 <col:20> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x1311284e0 <col:36> 'unsigned int' lvalue ParmVar 0x1311280d8 'start' 'unsigned int'         |-CallExpr 0x131128728 <col:43, col:63> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1311285e0 <col:43> 'int ()' Function 0x131128528 'rlimit' 'int ()'         | `-RecoveryExpr 0x131128708 <col:50> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x131128640 <col:66> 'unsigned int' lvalue ParmVar 0x131128158 'flags' 'unsigned int' ","20821":"`-FunctionDecl 0x13d00ddf0  line:1:13 invalid spl_filesystem_dir_it_move_forward 'void (int *)' static   |-ParmVarDecl 0x13d00dd28 <col:48, col:70> col:70 invalid iter 'int *'   `-CompoundStmt 0x13c922ac0 <line:2:1, line:11:1>     `-IfStmt 0x13c922aa0 <line:7:2, line:10:2>       |-CXXDependentScopeMemberExpr 0x13d00e1e0 <line:7:6, col:14> '<dependent type>' contains-errors lvalue ->file_name       | `-RecoveryExpr 0x13d00e1c0 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13c922a88 <col:25, line:10:2>         `-CallExpr 0x13c922a48 <line:8:3, col:26> '<dependent type>' contains-errors           |-DeclRefExpr 0x13d00e308 <col:3> 'int ()' Function 0x13d00e250 'efree' 'int ()'           `-CXXDependentScopeMemberExpr 0x13c922a00 <col:9, col:17> '<dependent type>' contains-errors lvalue ->file_name             `-RecoveryExpr 0x13d00e3b0 <col:9> '<dependent type>' contains-errors lvalue ","20275":"`-FunctionDecl 0x135928750  line:1:13 cli_session_setup_gensec_remote_done 'void (struct tevent_req *)' static   |-ParmVarDecl 0x135928648 <col:50, col:69> col:69 used subreq 'struct tevent_req *'   `-CompoundStmt 0x13600af18 <line:2:1, line:51:1>     |-DeclStmt 0x135940cb0 <line:3:2, line:5:21>     | `-VarDecl 0x135940ad8 <line:3:2, col:21> col:21 used req 'struct tevent_req *'     |-DeclStmt 0x135940fd8 <line:6:2, line:8:41>     | |-RecordDecl 0x135940cc8 <line:6:2, col:9> col:9 struct cli_session_setup_gensec_state     | `-VarDecl 0x135940e38 <col:2, col:41> col:41 used state 'struct cli_session_setup_gensec_state *'     |-CallExpr 0x135941150 <line:11:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359410d0 <col:2> 'int ()' Function 0x135941018 'TALLOC_FREE' 'int ()'     | `-RecoveryExpr 0x135941128 <col:14, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1359410f0 <col:14> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |-CallExpr 0x1359411f8 <line:12:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135941178 <col:2> 'int ()' Function 0x135941018 'TALLOC_FREE' 'int ()'     | `-RecoveryExpr 0x1359411d0 <col:14, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x135941198 <col:14> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |-BinaryOperator 0x135941530 <line:14:2, line:15:38> 'struct cli_session_setup_gensec_state *' contains-errors '='     | |-DeclRefExpr 0x135941220 <line:14:2> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     | `-CallExpr 0x1359414e8 <col:11, line:15:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x135941320 <line:14:11> 'int ()' Function 0x135941268 'cli_sesssetup_blob_recv' 'int ()'     |   |-DeclRefExpr 0x135941340 <col:35> 'struct tevent_req *' lvalue ParmVar 0x135928648 'subreq' 'struct tevent_req *'     |   |-DeclRefExpr 0x135941360 <col:43> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |   |-UnaryOperator 0x1359413e0 <col:50, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1359413b8 <col:51, col:58> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x135941380 <col:51> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |   |-UnaryOperator 0x135941458 <line:15:7, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x135941430 <col:8, col:15> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1359413f8 <col:8> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |   `-UnaryOperator 0x1359414d0 <col:22, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1359414a8 <col:23, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x135941470 <col:23> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |-CallExpr 0x1359415d8 <line:16:2, col:20> 'int'     | |-ImplicitCastExpr 0x1359415c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135941550 <col:2> 'int ()' Function 0x135941018 'TALLOC_FREE' 'int ()'     | `-ImplicitCastExpr 0x135941600 <col:14> 'struct tevent_req *' <LValueToRValue>     |   `-DeclRefExpr 0x135941570 <col:14> 'struct tevent_req *' lvalue ParmVar 0x135928648 'subreq' 'struct tevent_req *'     |-CallExpr 0x135941790 <line:17:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359416f8 <col:2> 'int ()' Function 0x135941640 'data_blob_free' 'int ()'     | `-UnaryOperator 0x135941778 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x135941750 <col:18, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x135941718 <col:18> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |-IfStmt 0x136009648 <line:18:2, line:23:2>     | |-BinaryOperator 0x1360094e0 <line:18:6, line:19:65> 'int' contains-errors '&&'     | | |-UnaryOperator 0x136009440 <line:18:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x136009418 <col:7, col:29> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x135941898 <col:7> 'int ()' Function 0x1359417e0 'NT_STATUS_IS_OK' 'int ()'     | | |   `-RecoveryExpr 0x1360093f8 <col:23> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1360094c8 <line:19:6, col:65> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x136009498 <col:7, col:65> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x136009200 <col:7> 'int ()' Function 0x135941938 'NT_STATUS_EQUAL' 'int ()'     | |     |-RecoveryExpr 0x136009458 <col:23> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x136009478 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136009630 <line:20:2, line:23:2>     |   `-ReturnStmt 0x136009620 <line:22:3>     |-IfStmt 0x13600a070 <line:25:2, line:43:2>     | |-RecoveryExpr 0x136009688 <line:25:6, col:28> '_Bool' contains-errors     | `-CompoundStmt 0x13600a048 <col:31, line:43:2>     |   |-DeclStmt 0x136009898 <line:26:3, col:41>     |   | |-RecordDecl 0x1360096a8 <col:3, col:10> col:10 struct smbXcli_session     |   | `-VarDecl 0x136009818 <col:3, col:27> col:27 used session 'struct smbXcli_session *'     |   |-IfStmt 0x136009d30 <line:29:3, line:33:3> has_else     |   | |-RecoveryExpr 0x136009a80 <line:29:7, col:50> '_Bool' contains-errors     |   | |-CompoundStmt 0x136009bd0 <col:68, line:31:3>     |   | | `-BinaryOperator 0x136009bb0 <line:30:4, col:31> 'struct smbXcli_session *' contains-errors '='     |   | |   |-DeclRefExpr 0x136009aa0 <col:4> 'struct smbXcli_session *' lvalue Var 0x136009818 'session' 'struct smbXcli_session *'     |   | |   `-CXXDependentScopeMemberExpr 0x136009b68 <col:14, col:31> '<dependent type>' contains-errors lvalue .session     |   | |     `-CXXDependentScopeMemberExpr 0x136009b20 <col:14, col:26> '<dependent type>' contains-errors lvalue ->smb2     |   | |       `-RecoveryExpr 0x136009af8 <col:14, col:21> '<dependent type>' contains-errors lvalue     |   | |         `-DeclRefExpr 0x136009ac0 <col:14> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |   | `-CompoundStmt 0x136009d18 <line:31:10, line:33:3>     |   |   `-BinaryOperator 0x136009cf8 <line:32:4, col:31> 'struct smbXcli_session *' contains-errors '='     |   |     |-DeclRefExpr 0x136009be8 <col:4> 'struct smbXcli_session *' lvalue Var 0x136009818 'session' 'struct smbXcli_session *'     |   |     `-CXXDependentScopeMemberExpr 0x136009cb0 <col:14, col:31> '<dependent type>' contains-errors lvalue .session     |   |       `-CXXDependentScopeMemberExpr 0x136009c68 <col:14, col:26> '<dependent type>' contains-errors lvalue ->smb1     |   |         `-RecoveryExpr 0x136009c40 <col:14, col:21> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x136009c08 <col:14> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     |   `-IfStmt 0x136009fc8 <line:36:3, line:40:3>     |     |-RecoveryExpr 0x136009ed8 <line:36:7> '_Bool' contains-errors     |     `-CompoundStmt 0x136009fb8 <col:17, line:40:3>     |-IfStmt 0x13600ad80 <line:45:2, line:48:2>     | |-BinaryOperator 0x13600a150 <line:45:6, col:35> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x13600a0c8 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13600a090 <col:6> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     | | `-RecoveryExpr 0x13600a128 <col:28, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13600a0f0 <col:28> 'struct cli_session_setup_gensec_state *' lvalue Var 0x135940e38 'state' 'struct cli_session_setup_gensec_state *'     | `-CompoundStmt 0x13600ad60 <col:49, line:48:2>     |   |-CallExpr 0x13600ad10 <line:46:3, col:37> 'int'     |   | |-ImplicitCastExpr 0x13600acf8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13600acb8 <col:3> 'int ()' Function 0x13600ac00 'cli_session_setup_gensec_ready' 'int ()'     |   | `-ImplicitCastExpr 0x13600ad38 <col:34> 'struct tevent_req *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13600acd8 <col:34> 'struct tevent_req *' lvalue Var 0x135940ad8 'req' 'struct tevent_req *'     |   `-ReturnStmt 0x13600ad50 <line:47:3>     `-CallExpr 0x13600aed8 <line:50:2, col:41> 'int'       |-ImplicitCastExpr 0x13600aec0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13600ae80 <col:2> 'int ()' Function 0x13600adc8 'cli_session_setup_gensec_local_next' 'int ()'       `-ImplicitCastExpr 0x13600af00 <col:38> 'struct tevent_req *' <LValueToRValue>         `-DeclRefExpr 0x13600aea0 <col:38> 'struct tevent_req *' lvalue Var 0x135940ad8 'req' 'struct tevent_req *' ","21001":"`-FunctionDecl 0x127064e88  line:1:12 fib_netdev_event 'int (struct notifier_block *, unsigned long, void *)' static   |-ParmVarDecl 0x12704ca48 <col:29, col:52> col:52 this 'struct notifier_block *'   |-ParmVarDecl 0x12704cac8 <col:58, col:72> col:72 used event 'unsigned long'   |-ParmVarDecl 0x12704cb48 <col:79, col:85> col:85 used ptr 'void *'   `-CompoundStmt 0x127066a28 <line:2:1, line:51:1>     |-DeclStmt 0x127065388 <line:3:2, col:59>     | |-RecordDecl 0x127064f90 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x1270650f8 <col:2, col:58> col:21 used dev 'struct net_device *' cinit     |   `-ImplicitCastExpr 0x127065358 <col:27, col:58> 'struct net_device *' <IntegralToPointer>     |     `-CallExpr 0x127065318 <col:27, col:58> 'int'     |       |-ImplicitCastExpr 0x127065300 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x127065290 <col:27> 'int ()' Function 0x1270651d8 'netdev_notifier_info_to_dev' 'int ()'     |       `-ImplicitCastExpr 0x127065340 <col:55> 'void *' <LValueToRValue>     |         `-DeclRefExpr 0x1270652b0 <col:55> 'void *' lvalue ParmVar 0x12704cb48 'ptr' 'void *'     |-DeclStmt 0x127065588 <line:4:2, col:47>     | |-RecordDecl 0x1270653a0 <col:2, col:9> col:9 struct netdev_notifier_changeupper_info     | `-VarDecl 0x127065508 <col:2, col:43> col:43 used info 'struct netdev_notifier_changeupper_info *'     |-DeclStmt 0x127065788 <line:5:2, col:26>     | |-RecordDecl 0x1270655a0 <col:2, col:9> col:9 struct in_device     | `-VarDecl 0x127065708 <col:2, col:20> col:20 used in_dev 'struct in_device *'     |-DeclStmt 0x127065b18 <line:6:2, col:32>     | |-RecordDecl 0x1270657a0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x127065908 <col:2, col:31> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x127065ae8 <col:20, col:31> 'struct net *' <IntegralToPointer>     |     `-CallExpr 0x127065aa8 <col:20, col:31> 'int'     |       |-ImplicitCastExpr 0x127065a90 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x127065a50 <col:20> 'int ()' Function 0x127065998 'dev_net' 'int ()'     |       `-ImplicitCastExpr 0x127065ad0 <col:28> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x127065a70 <col:28> 'struct net_device *' lvalue Var 0x1270650f8 'dev' 'struct net_device *'     |-DeclStmt 0x127065bb0 <line:7:2, col:20>     | `-VarDecl 0x127065b48 <col:2, col:15> col:15 used flags 'unsigned int'     |-IfStmt 0x12803a440 <line:9:2, line:13:2>     | |-BinaryOperator 0x127065c40 <line:9:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x127065bc8 <col:6> 'unsigned long' lvalue ParmVar 0x12704cac8 'event' 'unsigned long'     | | `-RecoveryExpr 0x127065c20 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12803a418 <col:34, line:13:2>     |   |-CallExpr 0x12803a220 <line:10:3, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127065d40 <col:3> 'int ()' Function 0x127065c88 'fib_disable_ip' 'int ()'     |   | |-DeclRefExpr 0x127065d60 <col:18> 'struct net_device *' lvalue Var 0x1270650f8 'dev' 'struct net_device *'     |   | |-DeclRefExpr 0x127065d80 <col:23> 'unsigned long' lvalue ParmVar 0x12704cac8 'event' 'unsigned long'     |   | `-RecoveryExpr 0x12803a200 <col:30> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x12803a390 <line:11:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x12803a378 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12803a338 <col:3> 'int ()' Function 0x12803a280 'rt_flush_dev' 'int ()'     |   | `-ImplicitCastExpr 0x12803a3b8 <col:16> 'struct net_device *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12803a358 <col:16> 'struct net_device *' lvalue Var 0x1270650f8 'dev' 'struct net_device *'     |   `-ReturnStmt 0x12803a408 <line:12:3, col:10>     |     `-RecoveryExpr 0x12803a3e8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12803a610 <line:15:2, col:32> 'struct in_device *' '='     | |-DeclRefExpr 0x12803a460 <col:2> 'struct in_device *' lvalue Var 0x127065708 'in_dev' 'struct in_device *'     | `-ImplicitCastExpr 0x12803a5f8 <col:11, col:32> 'struct in_device *' <IntegralToPointer>     |   `-CallExpr 0x12803a5b8 <col:11, col:32> 'int'     |     |-ImplicitCastExpr 0x12803a5a0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12803a560 <col:11> 'int ()' Function 0x12803a4a8 '__in_dev_get_rtnl' 'int ()'     |     `-ImplicitCastExpr 0x12803a5e0 <col:29> 'struct net_device *' <LValueToRValue>     |       `-DeclRefExpr 0x12803a580 <col:29> 'struct net_device *' lvalue Var 0x1270650f8 'dev' 'struct net_device *'     |-IfStmt 0x12803a6c8 <line:16:2, line:17:10>     | |-UnaryOperator 0x12803a668 <line:16:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12803a650 <col:7> 'struct in_device *' <LValueToRValue>     | |   `-DeclRefExpr 0x12803a630 <col:7> 'struct in_device *' lvalue Var 0x127065708 'in_dev' 'struct in_device *'     | `-ReturnStmt 0x12803a6b8 <line:17:3, col:10>     |   `-RecoveryExpr 0x12803a698 <col:10> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x12803a720 <line:19:2, line:49:2>       |-ImplicitCastExpr 0x12803a708 <line:19:10> 'unsigned long' <LValueToRValue>       | `-DeclRefExpr 0x12803a6e8 <col:10> 'unsigned long' lvalue ParmVar 0x12704cac8 'event' 'unsigned long'       `-CompoundStmt 0x1270669b8 <col:17, line:49:2>         |-CallExpr 0x12803a898 <line:21:3, col:17> 'int'         | |-ImplicitCastExpr 0x12803a880 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x12803a840 <col:3> 'int ()' Function 0x12803a788 'for_ifa' 'int ()'         | `-ImplicitCastExpr 0x12803a8c0 <col:11> 'struct in_device *' <LValueToRValue>         |   `-DeclRefExpr 0x12803a860 <col:11> 'struct in_device *' lvalue Var 0x127065708 'in_dev' 'struct in_device *'         |-CompoundStmt 0x12803aa60 <col:19, line:23:3>         | `-CallExpr 0x12803aa38 <line:22:4, col:22> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x12803a9b8 <col:4> 'int ()' Function 0x12803a900 'fib_add_ifaddr' 'int ()'         |   `-RecoveryExpr 0x12803aa18 <col:19> '<dependent type>' contains-errors lvalue         |-CallExpr 0x12803abb0 <line:23:5, col:22> 'int'         | |-ImplicitCastExpr 0x12803ab98 <col:5> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x12803ab58 <col:5> 'int ()' Function 0x12803aaa0 'endfor_ifa' 'int ()'         | `-ImplicitCastExpr 0x12803abd8 <col:16> 'struct in_device *' <LValueToRValue>         |   `-DeclRefExpr 0x12803ab78 <col:16> 'struct in_device *' lvalue Var 0x127065708 'in_dev' 'struct in_device *'         |-CallExpr 0x12803adb0 <line:27:3, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12803acd0 <col:3> 'int ()' Function 0x12803ac18 'atomic_inc' 'int ()'         | `-UnaryOperator 0x12803ad98 <col:14, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x12803ad50 <col:15, col:25> '<dependent type>' contains-errors lvalue .dev_addr_genid         |     `-RecoveryExpr 0x12803ad28 <col:15, col:20> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x12803acf0 <col:15> 'struct net *' lvalue Var 0x127065908 'net' 'struct net *'         |-CallExpr 0x12803af10 <line:28:3, col:21> 'int'         | |-ImplicitCastExpr 0x12803aef8 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x12803aeb8 <col:3> 'int ()' Function 0x12803ae00 'rt_cache_flush' 'int ()'         | `-ImplicitCastExpr 0x12803af38 <col:18> 'struct net *' <LValueToRValue>         |   `-DeclRefExpr 0x12803aed8 <col:18> 'struct net *' lvalue Var 0x127065908 'net' 'struct net *'         |-BreakStmt 0x12803af50 <line:29:3>         |-BreakStmt 0x12803afb8 <line:32:3>         |-BinaryOperator 0x12803b170 <line:34:3, col:28> 'unsigned int' '='         | |-DeclRefExpr 0x12803afc0 <col:3> 'unsigned int' lvalue Var 0x127065b48 'flags' 'unsigned int'         | `-ImplicitCastExpr 0x12803b158 <col:11, col:28> 'unsigned int' <IntegralCast>         |   `-CallExpr 0x12803b118 <col:11, col:28> 'int'         |     |-ImplicitCastExpr 0x12803b100 <col:11> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x12803b0c0 <col:11> 'int ()' Function 0x12803b008 'dev_get_flags' 'int ()'         |     `-ImplicitCastExpr 0x12803b140 <col:25> 'struct net_device *' <LValueToRValue>         |       `-DeclRefExpr 0x12803b0e0 <col:25> 'struct net_device *' lvalue Var 0x1270650f8 'dev' 'struct net_device *'         |-CallExpr 0x127066690 <line:41:3, col:21> 'int'         | |-ImplicitCastExpr 0x127066678 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x127066638 <col:3> 'int ()' Function 0x12803ae00 'rt_cache_flush' 'int ()'         | `-ImplicitCastExpr 0x1270666b8 <col:18> 'struct net *' <LValueToRValue>         |   `-DeclRefExpr 0x127066658 <col:18> 'struct net *' lvalue Var 0x127065908 'net' 'struct net *'         |-BreakStmt 0x1270666d0 <line:42:3>         |-BinaryOperator 0x127066748 <line:44:3, col:10> 'struct netdev_notifier_changeupper_info *' '='         | |-DeclRefExpr 0x1270666d8 <col:3> 'struct netdev_notifier_changeupper_info *' lvalue Var 0x127065508 'info' 'struct netdev_notifier_changeupper_info *'         | `-ImplicitCastExpr 0x127066730 <col:10> 'struct netdev_notifier_changeupper_info *' <BitCast>         |   `-ImplicitCastExpr 0x127066718 <col:10> 'void *' <LValueToRValue>         |     `-DeclRefExpr 0x1270666f8 <col:10> 'void *' lvalue ParmVar 0x12704cb48 'ptr' 'void *'         `-BreakStmt 0x1270669b0 <line:48:3> ","20633":"`-FunctionDecl 0x13e008688  line:1:5 invalid bt_sock_stream_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)'   |-ParmVarDecl 0x13c891248 <col:28, col:42> col:42 iocb 'struct kiocb *'   |-ParmVarDecl 0x13e008228 <col:48, col:63> col:63 used sock 'struct socket *'   |-ParmVarDecl 0x13e0083f8 <line:2:11, col:26> col:26 used msg 'struct msghdr *'   |-ParmVarDecl 0x13e008490 <col:31, col:38> col:38 referenced invalid size 'int'   |-ParmVarDecl 0x13e008510 <col:44, col:48> col:48 used flags 'int'   `-CompoundStmt 0x13d0a4860 <line:3:1, line:105:1>     |-DeclStmt 0x13e0089a8 <line:4:2, col:28>     | |-RecordDecl 0x13e008758 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x13e0088c8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x13e008968 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e008930 <col:20> 'struct socket *' lvalue ParmVar 0x13e008228 'sock' 'struct socket *'     |-DeclStmt 0x13e008a60 <line:5:2, col:13>     | `-VarDecl 0x13e0089d8 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x13e008a40 <col:12> 'int' 0     |-BinaryOperator 0x13e008bc0 <line:6:2, col:26> '<dependent type>' contains-errors ','     | |-UnaryExprOrTypeTraitExpr 0x13e008b60 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x13e008b40 <col:9> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13e008ba0 <col:17, col:26> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13e008b80 <col:17> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13e008ae0 <col:26> 'int' 0     |-DeclStmt 0x13e008c60 <line:7:2, col:12>     | `-VarDecl 0x13e008bf8 <col:2, col:7> col:7 used timeo 'long'     |-IfStmt 0x13e008de8 <line:9:2, line:10:11>     | |-BinaryOperator 0x13e008cf0 <line:9:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x13e008c78 <col:6> 'int' lvalue ParmVar 0x13e008510 'flags' 'int'     | | `-RecoveryExpr 0x13e008cd0 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13e008dd8 <line:10:3, col:11>     |   `-UnaryOperator 0x13e008dc0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13e008da8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13e008d58 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13e008e88 <line:12:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e008e40 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e008e08 <col:2> 'struct msghdr *' lvalue ParmVar 0x13e0083f8 'msg' 'struct msghdr *'     | `-IntegerLiteral 0x13e008e68 <col:21> 'int' 0     |-CallExpr 0x13e0090c0 <line:14:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e009000 <col:2> 'int ()' Function 0x13e008f48 'BT_DBG' 'int ()'     | |-StringLiteral 0x13e009060 <col:9> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x13e009080 <col:16> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     | `-RecoveryExpr 0x13e0090a0 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e00fc68 <line:16:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x13e00fc50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e0091d8 <col:2> 'int ()' Function 0x13e009120 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x13e00fc90 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e00fc00 <col:12> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     |-BinaryOperator 0x13e0100d0 <line:19:2, col:49> 'long' contains-errors '='     | |-DeclRefExpr 0x13e00fe78 <col:2> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'     | `-CallExpr 0x13e0100a0 <col:11, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13e00ff78 <col:11> 'int ()' Function 0x13e00fec0 'sock_rcvtimeo' 'int ()'     |   |-DeclRefExpr 0x13e00ff98 <col:25> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     |   `-BinaryOperator 0x13e010080 <col:29, col:37> '<dependent type>' contains-errors '&'     |     |-DeclRefExpr 0x13e00ffb8 <col:29> 'int' lvalue ParmVar 0x13e008510 'flags' 'int'     |     `-RecoveryExpr 0x13e010060 <col:37> '<dependent type>' contains-errors lvalue     |-DoStmt 0x13d0a4688 <line:21:2, line:100:15>     | |-CompoundStmt 0x13d0a4618 <line:21:5, line:100:2>     | | |-DeclStmt 0x13e0102d8 <line:22:3, col:22>     | | | |-RecordDecl 0x13e0100f0 <col:3, col:10> col:10 struct sk_buff     | | | `-VarDecl 0x13e010258 <col:3, col:19> col:19 used skb 'struct sk_buff *'     | | |-DeclStmt 0x13e010370 <line:23:3, col:12>     | | | `-VarDecl 0x13e010308 <col:3, col:7> col:7 used chunk 'int'     | | |-BinaryOperator 0x13e010548 <line:25:3, col:42> 'struct sk_buff *' contains-errors '='     | | | |-DeclRefExpr 0x13e010388 <col:3> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | | | `-CallExpr 0x13e010520 <col:9, col:42> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x13e010488 <col:9> 'int ()' Function 0x13e0103d0 'skb_dequeue' 'int ()'     | | |   `-UnaryOperator 0x13e010508 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x13e0104e0 <col:22, col:26> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x13e0104a8 <col:22> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     | | |-IfStmt 0x13d0a27d8 <line:26:3, line:47:3>     | | | |-UnaryOperator 0x13e0105a0 <line:26:7, col:8> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x13e010588 <col:8> 'struct sk_buff *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x13e010568 <col:8> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | | | `-CompoundStmt 0x13d0a2788 <col:13, line:47:3>     | | |   |-IfStmt 0x13e010670 <line:27:4, line:28:5>     | | |   | |-BinaryOperator 0x13e010648 <line:27:8, col:18> 'int' contains-errors '>='     | | |   | | |-RecoveryExpr 0x13e010608 <col:8> '<dependent type>' contains-errors lvalue     | | |   | | `-RecoveryExpr 0x13e010628 <col:18> '<dependent type>' contains-errors lvalue     | | |   | `-BreakStmt 0x13e010668 <line:28:5>     | | |   |-BinaryOperator 0x13e010828 <line:30:4, col:23> 'int' contains-errors '='     | | |   | |-DeclRefExpr 0x13e010690 <col:4> 'int' lvalue Var 0x13e0089d8 'err' 'int'     | | |   | `-CallExpr 0x13e0107e8 <col:10, col:23> 'int' contains-errors     | | |   |   |-ImplicitCastExpr 0x13e0107d0 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | |   |   | `-DeclRefExpr 0x13e010790 <col:10> 'int ()' Function 0x13e0106d8 'sock_error' 'int ()'     | | |   |   `-ImplicitCastExpr 0x13e010810 <col:21> 'struct sock *' contains-errors <LValueToRValue>     | | |   |     `-DeclRefExpr 0x13e0107b0 <col:21> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     | | |   |-IfStmt 0x13e010888 <line:31:4, line:32:5>     | | |   | |-ImplicitCastExpr 0x13e010868 <line:31:8> 'int' <LValueToRValue>     | | |   | | `-DeclRefExpr 0x13e010848 <col:8> 'int' lvalue Var 0x13e0089d8 'err' 'int'     | | |   | `-BreakStmt 0x13e010880 <line:32:5>     | | |   |-IfStmt 0x13e010930 <line:33:4, line:34:5>     | | |   | |-RecoveryExpr 0x13e010908 <line:33:8, col:26> '_Bool' contains-errors     | | |   | `-BreakStmt 0x13e010928 <line:34:5>     | | |   |-IfStmt 0x13e0109c8 <line:37:4, line:38:5>     | | |   | |-UnaryOperator 0x13e0109a8 <line:37:8, col:9> 'int' prefix '!' cannot overflow     | | |   | | `-ImplicitCastExpr 0x13e010990 <col:9> 'long' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x13e010970 <col:9> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'     | | |   | `-BreakStmt 0x13e0109c0 <line:38:5>     | | |   |-BinaryOperator 0x13e010bd8 <line:40:4, col:39> 'long' contains-errors '='     | | |   | |-DeclRefExpr 0x13e0109e8 <col:4> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'     | | |   | `-ImplicitCastExpr 0x13e010bc0 <col:12, col:39> 'long' contains-errors <IntegralCast>     | | |   |   `-CallExpr 0x13e010b60 <col:12, col:39> 'int' contains-errors     | | |   |     |-ImplicitCastExpr 0x13e010b48 <col:12> 'int (*)()' <FunctionToPointerDecay>     | | |   |     | `-DeclRefExpr 0x13e010ae8 <col:12> 'int ()' Function 0x13e010a30 'bt_sock_data_wait' 'int ()'     | | |   |     |-ImplicitCastExpr 0x13e010b90 <col:30> 'struct sock *' contains-errors <LValueToRValue>     | | |   |     | `-DeclRefExpr 0x13e010b08 <col:30> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     | | |   |     `-ImplicitCastExpr 0x13e010ba8 <col:34> 'long' <LValueToRValue>     | | |   |       `-DeclRefExpr 0x13e010b28 <col:34> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'     | | |   |-IfStmt 0x13d0a2760 <line:42:4, line:45:4>     | | |   | |-RecoveryExpr 0x13d0a2500 <line:42:8, col:30> '_Bool' contains-errors     | | |   | `-CompoundStmt 0x13d0a2740 <col:33, line:45:4>     | | |   |   |-BinaryOperator 0x13d0a26b8 <line:43:5, col:32> 'int' '='     | | |   |   | |-DeclRefExpr 0x13d0a2520 <col:5> 'int' lvalue Var 0x13e0089d8 'err' 'int'     | | |   |   | `-CallExpr 0x13d0a2678 <col:11, col:32> 'int'     | | |   |   |   |-ImplicitCastExpr 0x13d0a2660 <col:11> 'int (*)()' <FunctionToPointerDecay>     | | |   |   |   | `-DeclRefExpr 0x13d0a2620 <col:11> 'int ()' Function 0x13d0a2568 'sock_intr_errno' 'int ()'     | | |   |   |   `-ImplicitCastExpr 0x13d0a26a0 <col:27> 'long' <LValueToRValue>     | | |   |   |     `-DeclRefExpr 0x13d0a2640 <col:27> 'long' lvalue Var 0x13e008bf8 'timeo' 'long'     | | |   |   `-GotoStmt 0x13d0a2728 <line:44:5, col:10> 'out' 0x13d0a26d8     | | |   `-ContinueStmt 0x13d0a2780 <line:46:4>     | | |-IfStmt 0x13d0a2da8 <line:50:3, line:55:3>     | | | |-CallExpr 0x13d0a2b58 <line:50:7, col:58> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x13d0a2a78 <col:7> 'int ()' Function 0x13d0a29c0 'skb_copy_datagram_iovec' 'int ()'     | | | | |-DeclRefExpr 0x13d0a2a98 <col:31> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | | | | |-IntegerLiteral 0x13d0a2ab8 <col:36> 'int' 0     | | | | |-RecoveryExpr 0x13d0a2b10 <col:39, col:44> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x13d0a2ad8 <col:39> 'struct msghdr *' lvalue ParmVar 0x13e0083f8 'msg' 'struct msghdr *'     | | | | `-DeclRefExpr 0x13d0a2b38 <col:53> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | | | `-CompoundStmt 0x13d0a2d88 <col:61, line:55:3>     | | |   |-CallExpr 0x13d0a2d30 <line:51:4, col:45> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x13d0a2c78 <col:4> 'int ()' Function 0x13d0a2bc0 'skb_queue_head' 'int ()'     | | |   | |-UnaryOperator 0x13d0a2cf8 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   | | `-RecoveryExpr 0x13d0a2cd0 <col:20, col:24> '<dependent type>' contains-errors lvalue     | | |   | |   `-DeclRefExpr 0x13d0a2c98 <col:20> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     | | |   | `-DeclRefExpr 0x13d0a2d10 <col:42> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | | |   `-BreakStmt 0x13d0a2d80 <line:54:4>     | | |-CompoundAssignOperator 0x13d0a2e50 <line:57:3, col:13> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | | |-RecoveryExpr 0x13d0a2e08 <col:3> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x13d0a2de8 <col:3> 'int' lvalue ParmVar 0x13e008490 'size' 'int'     | | | `-DeclRefExpr 0x13d0a2e30 <col:13> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | | |-CallExpr 0x13d0a2ff8 <line:59:3, col:38> 'int' contains-errors     | | | |-ImplicitCastExpr 0x13d0a2fe0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x13d0a2f60 <col:3> 'int ()' Function 0x13d0a2ea8 'sock_recv_ts_and_drops' 'int ()'     | | | |-ImplicitCastExpr 0x13d0a3030 <col:26> 'struct msghdr *' <LValueToRValue>     | | | | `-DeclRefExpr 0x13d0a2f80 <col:26> 'struct msghdr *' lvalue ParmVar 0x13e0083f8 'msg' 'struct msghdr *'     | | | |-ImplicitCastExpr 0x13d0a3048 <col:31> 'struct sock *' contains-errors <LValueToRValue>     | | | | `-DeclRefExpr 0x13d0a2fa0 <col:31> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     | | | `-ImplicitCastExpr 0x13d0a3060 <col:35> 'struct sk_buff *' <LValueToRValue>     | | |   `-DeclRefExpr 0x13d0a2fc0 <col:35> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | | `-IfStmt 0x13d0a45e8 <line:61:3, line:99:3> has_else     | |   |-RecoveryExpr 0x13d0a3098 <line:61:7, col:25> '_Bool' contains-errors     | |   |-CompoundStmt 0x13d0a44a8 <col:28, line:95:3>     | |   | |-DeclStmt 0x13d0a32b0 <line:62:4, col:34>     | |   | | `-VarDecl 0x13d0a30d0 <col:4, col:33> col:8 used skb_len 'int' cinit     | |   | |   `-CallExpr 0x13d0a3270 <col:18, col:33> 'int'     | |   | |     |-ImplicitCastExpr 0x13d0a3258 <col:18> 'int (*)()' <FunctionToPointerDecay>     | |   | |     | `-DeclRefExpr 0x13d0a3218 <col:18> 'int ()' Function 0x13d0a3160 'skb_headlen' 'int ()'     | |   | |     `-ImplicitCastExpr 0x13d0a3298 <col:30> 'struct sk_buff *' <LValueToRValue>     | |   | |       `-DeclRefExpr 0x13d0a3238 <col:30> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | |-IfStmt 0x13d0a4170 <line:64:4, line:87:4> has_else     | |   | | |-BinaryOperator 0x13d0a3338 <line:64:8, col:17> 'int' '<='     | |   | | | |-ImplicitCastExpr 0x13d0a3308 <col:8> 'int' <LValueToRValue>     | |   | | | | `-DeclRefExpr 0x13d0a32c8 <col:8> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | |   | | | `-ImplicitCastExpr 0x13d0a3320 <col:17> 'int' <LValueToRValue>     | |   | | |   `-DeclRefExpr 0x13d0a32e8 <col:17> 'int' lvalue Var 0x13d0a30d0 'skb_len' 'int'     | |   | | |-CompoundStmt 0x13d0a3590 <col:26, line:66:4>     | |   | | | `-CallExpr 0x13d0a3530 <line:65:5, col:26> 'int'     | |   | | |   |-ImplicitCastExpr 0x13d0a3518 <col:5> 'int (*)()' <FunctionToPointerDecay>     | |   | | |   | `-DeclRefExpr 0x13d0a34b8 <col:5> 'int ()' Function 0x13d0a3400 '__skb_pull' 'int ()'     | |   | | |   |-ImplicitCastExpr 0x13d0a3560 <col:16> 'struct sk_buff *' <LValueToRValue>     | |   | | |   | `-DeclRefExpr 0x13d0a34d8 <col:16> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | | |   `-ImplicitCastExpr 0x13d0a3578 <col:21> 'int' <LValueToRValue>     | |   | | |     `-DeclRefExpr 0x13d0a34f8 <col:21> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | |   | | `-CompoundStmt 0x13d0a4138 <line:66:11, line:87:4>     | |   | |   |-DeclStmt 0x13d0a36a0 <line:67:5, col:25>     | |   | |   | `-VarDecl 0x13d0a3638 <col:5, col:21> col:21 used frag 'struct sk_buff *'     | |   | |   |-CallExpr 0x13d0a3730 <line:69:5, col:28> 'int'     | |   | |   | |-ImplicitCastExpr 0x13d0a3718 <col:5> 'int (*)()' <FunctionToPointerDecay>     | |   | |   | | `-DeclRefExpr 0x13d0a36b8 <col:5> 'int ()' Function 0x13d0a3400 '__skb_pull' 'int ()'     | |   | |   | |-ImplicitCastExpr 0x13d0a3760 <col:16> 'struct sk_buff *' <LValueToRValue>     | |   | |   | | `-DeclRefExpr 0x13d0a36d8 <col:16> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | |   | `-ImplicitCastExpr 0x13d0a3778 <col:21> 'int' <LValueToRValue>     | |   | |   |   `-DeclRefExpr 0x13d0a36f8 <col:21> 'int' lvalue Var 0x13d0a30d0 'skb_len' 'int'     | |   | |   |-CompoundAssignOperator 0x13d0a37e8 <line:70:5, col:14> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'     | |   | |   | |-DeclRefExpr 0x13d0a3790 <col:5> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | |   | |   | `-ImplicitCastExpr 0x13d0a37d0 <col:14> 'int' <LValueToRValue>     | |   | |   |   `-DeclRefExpr 0x13d0a37b0 <col:14> 'int' lvalue Var 0x13d0a30d0 'skb_len' 'int'     | |   | |   |-CallExpr 0x13d0a3970 <line:72:5, col:29> 'int'     | |   | |   | |-ImplicitCastExpr 0x13d0a3958 <col:5> 'int (*)()' <FunctionToPointerDecay>     | |   | |   | | `-DeclRefExpr 0x13d0a38f8 <col:5> 'int ()' Function 0x13d0a3840 'skb_walk_frags' 'int ()'     | |   | |   | |-ImplicitCastExpr 0x13d0a39a0 <col:20> 'struct sk_buff *' <LValueToRValue>     | |   | |   | | `-DeclRefExpr 0x13d0a3918 <col:20> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | |   | `-ImplicitCastExpr 0x13d0a39b8 <col:25> 'struct sk_buff *' <LValueToRValue>     | |   | |   |   `-DeclRefExpr 0x13d0a3938 <col:25> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |   `-CompoundStmt 0x13d0a4120 <col:31, line:86:5>     | |   | |     `-IfStmt 0x13d0a40f0 <line:73:6, line:85:6> has_else     | |   | |       |-BinaryOperator 0x13d0a3a50 <line:73:10, col:25> 'int' contains-errors '<='     | |   | |       | |-DeclRefExpr 0x13d0a39d0 <col:10> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | |   | |       | `-RecoveryExpr 0x13d0a3a28 <col:19, col:25> '<dependent type>' contains-errors lvalue     | |   | |       |   `-DeclRefExpr 0x13d0a39f0 <col:19> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |       |-CompoundStmt 0x13d0a3cb0 <col:30, line:79:6>     | |   | |       | |-CompoundAssignOperator 0x13d0a3af0 <line:75:7, col:19> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   | |       | | |-RecoveryExpr 0x13d0a3aa8 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |   | |       | | | `-DeclRefExpr 0x13d0a3a70 <col:7> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | |       | | `-DeclRefExpr 0x13d0a3ad0 <col:19> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | |   | |       | |-CompoundAssignOperator 0x13d0a3ba0 <line:76:7, col:24> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   | |       | | |-RecoveryExpr 0x13d0a3b58 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |   | |       | | | `-DeclRefExpr 0x13d0a3b20 <col:7> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | |       | | `-DeclRefExpr 0x13d0a3b80 <col:24> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | |   | |       | |-CallExpr 0x13d0a3c48 <line:77:7, col:29> 'int'     | |   | |       | | |-ImplicitCastExpr 0x13d0a3c30 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | |       | | | `-DeclRefExpr 0x13d0a3bd0 <col:7> 'int ()' Function 0x13d0a3400 '__skb_pull' 'int ()'     | |   | |       | | |-ImplicitCastExpr 0x13d0a3c78 <col:18> 'struct sk_buff *' <LValueToRValue>     | |   | |       | | | `-DeclRefExpr 0x13d0a3bf0 <col:18> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |       | | `-ImplicitCastExpr 0x13d0a3c90 <col:24> 'int' <LValueToRValue>     | |   | |       | |   `-DeclRefExpr 0x13d0a3c10 <col:24> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | |   | |       | `-BreakStmt 0x13d0a3ca8 <line:78:7>     | |   | |       `-IfStmt 0x13d0a40d0 <line:79:13, line:85:6>     | |   | |         |-RecoveryExpr 0x13d0a3d18 <line:79:17, col:23> '<dependent type>' contains-errors lvalue     | |   | |         | `-DeclRefExpr 0x13d0a3ce0 <col:17> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |         `-CompoundStmt 0x13d0a40a0 <col:28, line:85:6>     | |   | |           |-CompoundAssignOperator 0x13d0a3dc0 <line:81:7, col:22> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   | |           | |-DeclRefExpr 0x13d0a3d40 <col:7> 'int' lvalue Var 0x13e010308 'chunk' 'int'     | |   | |           | `-RecoveryExpr 0x13d0a3d98 <col:16, col:22> '<dependent type>' contains-errors lvalue     | |   | |           |   `-DeclRefExpr 0x13d0a3d60 <col:16> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |           |-CompoundAssignOperator 0x13d0a3eb0 <line:82:7, col:25> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   | |           | |-RecoveryExpr 0x13d0a3e28 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |   | |           | | `-DeclRefExpr 0x13d0a3df0 <col:7> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | |           | `-RecoveryExpr 0x13d0a3e88 <col:19, col:25> '<dependent type>' contains-errors lvalue     | |   | |           |   `-DeclRefExpr 0x13d0a3e50 <col:19> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |           |-CompoundAssignOperator 0x13d0a3fa0 <line:83:7, col:30> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   | |           | |-RecoveryExpr 0x13d0a3f18 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |   | |           | | `-DeclRefExpr 0x13d0a3ee0 <col:7> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | |           | `-RecoveryExpr 0x13d0a3f78 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |   | |           |   `-DeclRefExpr 0x13d0a3f40 <col:24> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |           `-CallExpr 0x13d0a4070 <line:84:7, col:33> '<dependent type>' contains-errors     | |   | |             |-DeclRefExpr 0x13d0a3fd0 <col:7> 'int ()' Function 0x13d0a3400 '__skb_pull' 'int ()'     | |   | |             |-DeclRefExpr 0x13d0a3ff0 <col:18> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |             `-RecoveryExpr 0x13d0a4048 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |   | |               `-DeclRefExpr 0x13d0a4010 <col:24> 'struct sk_buff *' lvalue Var 0x13d0a3638 'frag' 'struct sk_buff *'     | |   | |-IfStmt 0x13d0a4310 <line:89:4, line:92:4>     | |   | | |-RecoveryExpr 0x13d0a41d8 <line:89:8, col:13> '<dependent type>' contains-errors lvalue     | |   | | | `-DeclRefExpr 0x13d0a41a0 <col:8> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | | `-CompoundStmt 0x13d0a42f0 <col:18, line:92:4>     | |   | |   |-CallExpr 0x13d0a42b8 <line:90:5, col:46> '<dependent type>' contains-errors     | |   | |   | |-DeclRefExpr 0x13d0a4200 <col:5> 'int ()' Function 0x13d0a2bc0 'skb_queue_head' 'int ()'     | |   | |   | |-UnaryOperator 0x13d0a4280 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | |   | | `-RecoveryExpr 0x13d0a4258 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |   | |   | |   `-DeclRefExpr 0x13d0a4220 <col:21> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     | |   | |   | `-DeclRefExpr 0x13d0a4298 <col:43> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   | |   `-BreakStmt 0x13d0a42e8 <line:91:5>     | |   | `-CallExpr 0x13d0a4468 <line:93:4, col:17> 'int'     | |   |   |-ImplicitCastExpr 0x13d0a4450 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |   |   | `-DeclRefExpr 0x13d0a4410 <col:4> 'int ()' Function 0x13d0a4358 'kfree_skb' 'int ()'     | |   |   `-ImplicitCastExpr 0x13d0a4490 <col:14> 'struct sk_buff *' <LValueToRValue>     | |   |     `-DeclRefExpr 0x13d0a4430 <col:14> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |   `-CompoundStmt 0x13d0a45c8 <line:95:10, line:99:3>     | |     |-CallExpr 0x13d0a4590 <line:97:4, col:45> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x13d0a44d8 <col:4> 'int ()' Function 0x13d0a2bc0 'skb_queue_head' 'int ()'     | |     | |-UnaryOperator 0x13d0a4558 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     | | `-RecoveryExpr 0x13d0a4530 <col:20, col:24> '<dependent type>' contains-errors lvalue     | |     | |   `-DeclRefExpr 0x13d0a44f8 <col:20> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *'     | |     | `-DeclRefExpr 0x13d0a4570 <col:42> 'struct sk_buff *' lvalue Var 0x13e010258 'skb' 'struct sk_buff *'     | |     `-BreakStmt 0x13d0a45c0 <line:98:4>     | `-RecoveryExpr 0x13d0a4668 <line:100:11> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x13d0a4820 <line:102:1, line:103:17> 'out'       `-CallExpr 0x13d0a47e0 <col:2, col:17> 'int' contains-errors         |-ImplicitCastExpr 0x13d0a47c8 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x13d0a4788 <col:2> 'int ()' Function 0x13d0a46d0 'release_sock' 'int ()'         `-ImplicitCastExpr 0x13d0a4808 <col:15> 'struct sock *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x13d0a47a8 <col:15> 'struct sock *' contains-errors lvalue Var 0x13e0088c8 'sk' 'struct sock *' ","20835":"`-FunctionDecl 0x14b80eb88  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14b80ec88 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14b80ec30 <<invalid sloc>> Implicit 873 ","21133":"`-FunctionDecl 0x14780e350  line:1:13 acm_port_destruct 'void (struct tty_port *)' static   |-ParmVarDecl 0x14780e248 <col:31, col:48> col:48 used port 'struct tty_port *'   `-CompoundStmt 0x147826f30 <line:2:1, line:9:1>     |-DeclStmt 0x1478269c8 <line:3:2, col:56>     | |-RecordDecl 0x147826648 <col:2, col:9> col:9 struct acm     | `-VarDecl 0x1478267b8 <col:2, col:14> col:14 used acm 'struct acm *'     |-CallExpr 0x147826b48 <line:5:2, col:23> 'int'     | |-ImplicitCastExpr 0x147826b30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x147826ac0 <col:2> 'int ()' Function 0x147826a08 'acm_release_minor' 'int ()'     | `-ImplicitCastExpr 0x147826b70 <col:20> 'struct acm *' <LValueToRValue>     |   `-DeclRefExpr 0x147826ae0 <col:20> 'struct acm *' lvalue Var 0x1478267b8 'acm' 'struct acm *'     |-CallExpr 0x147826ce8 <line:6:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147826c68 <col:2> 'int ()' Function 0x147826bb0 'usb_put_intf' 'int ()'     | `-RecoveryExpr 0x147826cc0 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x147826c88 <col:15> 'struct acm *' lvalue Var 0x1478267b8 'acm' 'struct acm *'     |-CallExpr 0x147826e70 <line:7:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147826df0 <col:2> 'int ()' Function 0x147826d38 'kfree' 'int ()'     | `-RecoveryExpr 0x147826e48 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x147826e10 <col:8> 'struct acm *' lvalue Var 0x1478267b8 'acm' 'struct acm *'     `-CallExpr 0x147826ef0 <line:8:2, col:11> 'int'       |-ImplicitCastExpr 0x147826ed8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x147826e98 <col:2> 'int ()' Function 0x147826d38 'kfree' 'int ()'       `-ImplicitCastExpr 0x147826f18 <col:8> 'struct acm *' <LValueToRValue>         `-DeclRefExpr 0x147826eb8 <col:8> 'struct acm *' lvalue Var 0x1478267b8 'acm' 'struct acm *' ","20310":"`-FunctionDecl 0x1319133f8  line:1:8 invalid gf_isom_text_reset 'int (int *)'   |-ParmVarDecl 0x131913328 <col:27, col:42> col:42 referenced invalid samp 'int *'   `-CompoundStmt 0x132808330 <line:2:1, line:8:1>     |-IfStmt 0x131913540 <line:3:2, col:20>     | |-UnaryOperator 0x1319134e0 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1319134c8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1319134a8 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x131913530 <col:13, col:20>     |   `-RecoveryExpr 0x131913510 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1319137d0 <line:4:2, col:36>     | |-CXXDependentScopeMemberExpr 0x131913580 <col:6, col:12> '<dependent type>' contains-errors lvalue ->text     | | `-RecoveryExpr 0x131913560 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1319137a8 <col:18, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x131913720 <col:18> 'int ()' Function 0x131913668 'gf_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x131913760 <col:26, col:32> '<dependent type>' contains-errors lvalue ->text     |     `-RecoveryExpr 0x131913740 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1319138d8 <line:5:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x131913838 <col:2, col:8> '<dependent type>' contains-errors lvalue ->text     | | `-RecoveryExpr 0x131913810 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1319137f0 <col:2> 'int *' lvalue ParmVar 0x131913328 'samp' 'int *'     | `-RecoveryExpr 0x1319138b8 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1319139a8 <line:6:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x131913940 <col:2, col:8> '<dependent type>' contains-errors lvalue ->len     | | `-RecoveryExpr 0x131913918 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1319138f8 <col:2> 'int *' lvalue ParmVar 0x131913328 'samp' 'int *'     | `-IntegerLiteral 0x131913988 <col:14> 'int' 0     `-ReturnStmt 0x132808320 <line:7:2, col:39>       `-CallExpr 0x1328082f8 <col:9, col:39> '<dependent type>' contains-errors         |-DeclRefExpr 0x1328082b8 <col:9> 'int ()' Function 0x132808200 'gf_isom_text_reset_styles' 'int ()'         `-RecoveryExpr 0x1328082d8 <col:35> '<dependent type>' contains-errors lvalue ","20913":"`-FunctionDecl 0x142928288  line:1:5 invalid hashTypeDelete 'int (int *, int)'   |-ParmVarDecl 0x142928128 <col:20, col:26> col:26 referenced invalid o 'int *'   |-ParmVarDecl 0x1429281a8 <col:29, col:33> col:33 invalid field 'int'   `-CompoundStmt 0x1429448f8 <col:40, line:30:1>     |-DeclStmt 0x1429283e0 <line:2:5, col:20>     | `-VarDecl 0x142928358 <col:5, col:19> col:9 used deleted 'int' cinit     |   `-IntegerLiteral 0x1429283c0 <col:19> 'int' 0     |-IfStmt 0x142944880 <line:4:5, line:28:5> has_else     | |-BinaryOperator 0x1429284b8 <line:4:9, col:24> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x142928418 <col:9, col:12> '<dependent type>' contains-errors lvalue ->encoding     | | | `-RecoveryExpr 0x1429283f8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x142928498 <col:24> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x142944000 <col:46, line:18:5>     | | |-DeclStmt 0x142928628 <line:5:9, col:33>     | | | |-VarDecl 0x142928528 <col:9, col:24> col:24 used zl 'unsigned char *'     | | | `-VarDecl 0x1429285a8 <col:9, col:29> col:29 used fptr 'unsigned char *'     | | |-BinaryOperator 0x1429286c8 <line:7:9, col:17> 'unsigned char *' contains-errors '='     | | | |-DeclRefExpr 0x142928640 <col:9> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'     | | | `-CXXDependentScopeMemberExpr 0x142928680 <col:14, col:17> '<dependent type>' contains-errors lvalue ->ptr     | | |   `-RecoveryExpr 0x142928660 <col:14> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x1429419b0 <line:8:9, col:45> 'unsigned char *' contains-errors '='     | | | |-DeclRefExpr 0x1429286e8 <col:9> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'     | | | `-CallExpr 0x142941980 <col:16, col:45> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1429418b8 <col:16> 'int ()' Function 0x142941800 'ziplistIndex' 'int ()'     | | |   |-DeclRefExpr 0x1429418d8 <col:29> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'     | | |   `-RecoveryExpr 0x142941960 <col:33> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x1429427e0 <line:9:9, line:17:9>     | |   |-BinaryOperator 0x142941a48 <line:9:13, col:21> 'int' contains-errors '!='     | |   | |-DeclRefExpr 0x1429419d0 <col:13> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'     | |   | `-RecoveryExpr 0x142941a28 <col:21> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x1429427c0 <col:27, line:17:9>     | |     |-BinaryOperator 0x142941db0 <line:10:13, col:77> 'unsigned char *' contains-errors '='     | |     | |-DeclRefExpr 0x142941a68 <col:13> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'     | |     | `-CallExpr 0x142941d70 <col:20, col:77> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x142941b68 <col:20> 'int ()' Function 0x142941ab0 'ziplistFind' 'int ()'     | |     |   |-DeclRefExpr 0x142941b88 <col:32> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'     | |     |   |-CStyleCastExpr 0x142941be0 <col:38, col:54> 'unsigned char *' contains-errors <Dependent>     | |     |   | `-RecoveryExpr 0x142941ba8 <col:54> '<dependent type>' contains-errors lvalue     | |     |   |-CallExpr 0x142941d28 <col:61, col:73> '<dependent type>' contains-errors     | |     |   | |-DeclRefExpr 0x142941ce8 <col:61> 'int ()' Function 0x142941c30 'sdslen' 'int ()'     | |     |   | `-RecoveryExpr 0x142941d08 <col:68> '<dependent type>' contains-errors lvalue     | |     |   `-IntegerLiteral 0x142941d50 <col:76> 'int' 1     | |     `-IfStmt 0x1429427a0 <line:11:13, line:16:13>     | |       |-BinaryOperator 0x142941e48 <line:11:17, col:25> 'int' contains-errors '!='     | |       | |-DeclRefExpr 0x142941dd0 <col:17> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'     | |       | `-RecoveryExpr 0x142941e28 <col:25> '<dependent type>' contains-errors lvalue     | |       `-CompoundStmt 0x142942770 <col:31, line:16:13>     | |         |-BinaryOperator 0x1429424f0 <line:12:17, col:44> 'unsigned char *' '='     | |         | |-DeclRefExpr 0x142941e68 <col:17> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'     | |         | `-ImplicitCastExpr 0x1429420b0 <col:22, col:44> 'unsigned char *' <IntegralToPointer>     | |         |   `-CallExpr 0x142942068 <col:22, col:44> 'int'     | |         |     |-ImplicitCastExpr 0x142942050 <col:22> 'int (*)()' <FunctionToPointerDecay>     | |         |     | `-DeclRefExpr 0x142941f68 <col:22> 'int ()' Function 0x142941eb0 'ziplistDelete' 'int ()'     | |         |     |-ImplicitCastExpr 0x142942098 <col:36> 'unsigned char *' <LValueToRValue>     | |         |     | `-DeclRefExpr 0x142941f88 <col:36> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'     | |         |     `-UnaryOperator 0x142942000 <col:39, col:40> 'unsigned char **' prefix '&' cannot overflow     | |         |       `-DeclRefExpr 0x142941fa8 <col:40> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'     | |         |-BinaryOperator 0x142942620 <line:13:17, col:44> 'unsigned char *' '='     | |         | |-DeclRefExpr 0x142942510 <col:17> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'     | |         | `-ImplicitCastExpr 0x142942608 <col:22, col:44> 'unsigned char *' <IntegralToPointer>     | |         |   `-CallExpr 0x1429425c0 <col:22, col:44> 'int'     | |         |     |-ImplicitCastExpr 0x1429425a8 <col:22> 'int (*)()' <FunctionToPointerDecay>     | |         |     | `-DeclRefExpr 0x142942530 <col:22> 'int ()' Function 0x142941eb0 'ziplistDelete' 'int ()'     | |         |     |-ImplicitCastExpr 0x1429425f0 <col:36> 'unsigned char *' <LValueToRValue>     | |         |     | `-DeclRefExpr 0x142942550 <col:36> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'     | |         |     `-UnaryOperator 0x142942590 <col:39, col:40> 'unsigned char **' prefix '&' cannot overflow     | |         |       `-DeclRefExpr 0x142942570 <col:40> 'unsigned char *' lvalue Var 0x1429285a8 'fptr' 'unsigned char *'     | |         |-BinaryOperator 0x1429426f0 <line:14:17, col:26> '<dependent type>' contains-errors '='     | |         | |-CXXDependentScopeMemberExpr 0x142942688 <col:17, col:20> '<dependent type>' contains-errors lvalue ->ptr     | |         | | `-RecoveryExpr 0x142942660 <col:17> '<dependent type>' contains-errors lvalue     | |         | |   `-DeclRefExpr 0x142942640 <col:17> 'int *' lvalue ParmVar 0x142928128 'o' 'int *'     | |         | `-DeclRefExpr 0x1429426d0 <col:26> 'unsigned char *' lvalue Var 0x142928528 'zl' 'unsigned char *'     | |         `-BinaryOperator 0x142942750 <line:15:17, col:27> 'int' '='     | |           |-DeclRefExpr 0x142942710 <col:17> 'int' lvalue Var 0x142928358 'deleted' 'int'     | |           `-IntegerLiteral 0x142942730 <col:27> 'int' 1     | `-IfStmt 0x142944850 <line:18:12, line:28:5> has_else     |   |-BinaryOperator 0x1429440f0 <line:18:16, col:31> 'int' contains-errors '=='     |   | |-CXXDependentScopeMemberExpr 0x142944050 <col:16, col:19> '<dependent type>' contains-errors lvalue ->encoding     |   | | `-RecoveryExpr 0x142944030 <col:16> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1429440d0 <col:31> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x142944660 <col:48, line:26:5>     |   | `-IfStmt 0x142944640 <line:19:9, line:24:9>     |   |   |-RecoveryExpr 0x142944260 <line:19:13, col:49> '_Bool' contains-errors     |   |   `-CompoundStmt 0x142944620 <col:55, line:24:9>     |   |     |-BinaryOperator 0x1429442c0 <line:20:13, col:23> 'int' '='     |   |     | |-DeclRefExpr 0x142944280 <col:13> 'int' lvalue Var 0x142928358 'deleted' 'int'     |   |     | `-IntegerLiteral 0x1429442a0 <col:23> 'int' 1     |   |     `-IfStmt 0x142944600 <line:23:13, col:57>     |   |       |-CallExpr 0x142944448 <col:17, col:37> '<dependent type>' contains-errors     |   |       | |-DeclRefExpr 0x1429443c0 <col:17> 'int ()' Function 0x142944308 'htNeedsResize' 'int ()'     |   |       | `-CXXDependentScopeMemberExpr 0x142944400 <col:31, col:34> '<dependent type>' contains-errors lvalue ->ptr     |   |       |   `-RecoveryExpr 0x1429443e0 <col:31> '<dependent type>' contains-errors lvalue     |   |       `-CallExpr 0x1429445d8 <col:40, col:57> '<dependent type>' contains-errors     |   |         |-DeclRefExpr 0x142944550 <col:40> 'int ()' Function 0x142944498 'dictResize' 'int ()'     |   |         `-CXXDependentScopeMemberExpr 0x142944590 <col:51, col:54> '<dependent type>' contains-errors lvalue ->ptr     |   |           `-RecoveryExpr 0x142944570 <col:51> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x142944838 <line:26:12, line:28:5>     |     `-CallExpr 0x1429447f8 <line:27:9, col:26> 'int'     |       |-ImplicitCastExpr 0x1429447e0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x142944758 <col:9> 'int ()' Function 0x1429446a0 'serverPanic' 'int ()'     |       `-ImplicitCastExpr 0x142944820 <col:21> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x1429447c0 <col:21> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x1429448e8 <line:29:5, col:12>       `-ImplicitCastExpr 0x1429448d0 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x1429448b0 <col:12> 'int' lvalue Var 0x142928358 'deleted' 'int' ","20612":"`-FunctionDecl 0x1048266d8  line:1:12 shmem_remount_fs 'int (struct super_block *, int *, char *)' static   |-ParmVarDecl 0x10480e248 <col:29, col:49> col:49 used sb 'struct super_block *'   |-ParmVarDecl 0x10480e2f8 <col:53, col:58> col:58 flags 'int *'   |-ParmVarDecl 0x10480e378 <col:65, col:71> col:71 used data 'char *'   `-CompoundStmt 0x10482a448 <line:2:1, line:33:1>     |-DeclStmt 0x104826bd8 <line:3:2, col:45>     | |-RecordDecl 0x1048267e0 <col:2, col:9> col:9 struct shmem_sb_info     | `-VarDecl 0x104826948 <col:2, col:44> col:24 used sbinfo 'struct shmem_sb_info *' cinit     |   `-ImplicitCastExpr 0x104826ba8 <col:33, col:44> 'struct shmem_sb_info *' <IntegralToPointer>     |     `-CallExpr 0x104826b68 <col:33, col:44> 'int'     |       |-ImplicitCastExpr 0x104826b50 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x104826ae0 <col:33> 'int ()' Function 0x104826a28 'SHMEM_SB' 'int ()'     |       `-ImplicitCastExpr 0x104826b90 <col:42> 'struct super_block *' <LValueToRValue>     |         `-DeclRefExpr 0x104826b00 <col:42> 'struct super_block *' lvalue ParmVar 0x10480e248 'sb' 'struct super_block *'     |-DeclStmt 0x104826cf8 <line:4:2, col:39>     | `-VarDecl 0x104826c40 <col:2, col:23> col:23 invalid config 'struct shmem_sb_info'     |-DeclStmt 0x104826d90 <line:5:2, col:22>     | `-VarDecl 0x104826d28 <col:2, col:16> col:16 used inodes 'unsigned long'     |-DeclStmt 0x104826ec0 <line:6:2, col:21>     | `-VarDecl 0x104826dc0 <col:2, col:15> col:6 used error 'int' cinit     |   `-UnaryOperator 0x104826ea8 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x104826e90 <col:15> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x104826e70 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x104827120 <line:8:2, line:9:10>     | |-CallExpr 0x1048270a0 <line:8:6, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x104826fb8 <col:6> 'int ()' Function 0x104826f00 'shmem_parse_options' 'int ()'     | | |-DeclRefExpr 0x104826fd8 <col:26> 'char *' lvalue ParmVar 0x10480e378 'data' 'char *'     | | |-UnaryOperator 0x104827018 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x104826ff8 <col:33> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x104827080 <col:41> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x104827110 <line:9:3, col:10>     |   `-ImplicitCastExpr 0x1048270f8 <col:10> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x1048270d8 <col:10> 'int' contains-errors lvalue Var 0x104826dc0 'error' 'int'     |-CallExpr 0x1048272b8 <line:11:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x104827220 <col:2> 'int ()' Function 0x104827168 'spin_lock' 'int ()'     | `-UnaryOperator 0x1048272a0 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x104827278 <col:13, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x104827240 <col:13> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     |-BinaryOperator 0x1048273e0 <line:12:2, col:40> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x1048272e0 <col:2> 'unsigned long' lvalue Var 0x104826d28 'inodes' 'unsigned long'     | `-BinaryOperator 0x1048273c0 <col:11, col:40> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x104827338 <col:11, col:19> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x104827300 <col:11> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     |   `-RecoveryExpr 0x104827398 <col:32, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x104827360 <col:32> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     |-IfStmt 0x1048298d8 <line:13:2, line:14:8>     | |-BinaryOperator 0x104829850 <line:13:6, col:72> 'int' contains-errors '>'     | | |-CallExpr 0x104829800 <col:6, col:68> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1048274e0 <col:6> 'int ()' Function 0x104827428 'percpu_counter_compare' 'int ()'     | | | |-UnaryOperator 0x104827560 <col:29, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x104827538 <col:30, col:38> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x104827500 <col:30> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     | | | `-CXXDependentScopeMemberExpr 0x104827598 <col:51, col:58> '<dependent type>' contains-errors lvalue .max_blocks     | | |   `-RecoveryExpr 0x104827578 <col:51> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x104829830 <col:72> 'int' 0     | `-GotoStmt 0x1048298c0 <line:14:3, col:8> 'out' 0x104829870     |-IfStmt 0x1048299b8 <line:15:2, line:16:8>     | |-BinaryOperator 0x104829980 <line:15:6, col:26> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x104829918 <col:6, col:13> '<dependent type>' contains-errors lvalue .max_inodes     | | | `-RecoveryExpr 0x1048298f8 <col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x104829960 <col:26> 'unsigned long' lvalue Var 0x104826d28 'inodes' 'unsigned long'     | `-GotoStmt 0x1048299a0 <line:16:3, col:8> 'out' 0x104829870     |-IfStmt 0x104829b08 <line:18:2, line:19:8>     | |-BinaryOperator 0x104829ad0 <line:18:6, col:36> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x1048299f8 <col:6, col:13> '<dependent type>' contains-errors lvalue .max_blocks     | | | `-RecoveryExpr 0x1048299d8 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x104829ab8 <col:27, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x104829aa0 <col:28, col:36> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x104829a78 <col:28, col:36> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x104829a40 <col:28> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     | `-GotoStmt 0x104829af0 <line:19:3, col:8> 'out' 0x104829870     |-IfStmt 0x104829c58 <line:20:2, line:21:8>     | |-BinaryOperator 0x104829c20 <line:20:6, col:36> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x104829b48 <col:6, col:13> '<dependent type>' contains-errors lvalue .max_inodes     | | | `-RecoveryExpr 0x104829b28 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x104829c08 <col:27, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x104829bf0 <col:28, col:36> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x104829bc8 <col:28, col:36> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x104829b90 <col:28> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     | `-GotoStmt 0x104829c40 <line:21:3, col:8> 'out' 0x104829870     |-BinaryOperator 0x104829cb8 <line:23:2, col:10> 'int' contains-errors '='     | |-DeclRefExpr 0x104829c78 <col:2> 'int' contains-errors lvalue Var 0x104826dc0 'error' 'int'     | `-IntegerLiteral 0x104829c98 <col:10> 'int' 0     |-BinaryOperator 0x104829da0 <line:24:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x104829d10 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x104829cd8 <col:2> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     | `-CXXDependentScopeMemberExpr 0x104829d58 <col:24, col:31> '<dependent type>' contains-errors lvalue .max_blocks     |   `-RecoveryExpr 0x104829d38 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x104829e88 <line:25:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x104829df8 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x104829dc0 <col:2> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     | `-CXXDependentScopeMemberExpr 0x104829e40 <col:24, col:31> '<dependent type>' contains-errors lvalue .max_inodes     |   `-RecoveryExpr 0x104829e20 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x104829fb0 <line:26:2, col:44> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x104829ee0 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x104829ea8 <col:2> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     | `-BinaryOperator 0x104829f90 <col:24, col:44> '<dependent type>' contains-errors '-'     |   |-CXXDependentScopeMemberExpr 0x104829f28 <col:24, col:31> '<dependent type>' contains-errors lvalue .max_inodes     |   | `-RecoveryExpr 0x104829f08 <col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x104829f70 <col:44> 'unsigned long' lvalue Var 0x104826d28 'inodes' 'unsigned long'     |-CallExpr 0x10482a130 <line:28:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x10482a0b0 <col:2> 'int ()' Function 0x104829ff8 'mpol_put' 'int ()'     | `-RecoveryExpr 0x10482a108 <col:11, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x10482a0d0 <col:11> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     |-BinaryOperator 0x10482a220 <line:29:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x10482a190 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x10482a158 <col:2> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     | `-CXXDependentScopeMemberExpr 0x10482a1d8 <col:24, col:31> '<dependent type>' contains-errors lvalue .mpol     |   `-RecoveryExpr 0x10482a1b8 <col:24> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x10482a3e0 <line:30:1, line:31:32> 'out'     | `-CallExpr 0x10482a3b8 <col:2, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x10482a320 <col:2> 'int ()' Function 0x10482a268 'spin_unlock' 'int ()'     |   `-UnaryOperator 0x10482a3a0 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x10482a378 <col:15, col:23> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x10482a340 <col:15> 'struct shmem_sb_info *' lvalue Var 0x104826948 'sbinfo' 'struct shmem_sb_info *'     `-ReturnStmt 0x10482a438 <line:32:2, col:9>       `-ImplicitCastExpr 0x10482a420 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x10482a400 <col:9> 'int' contains-errors lvalue Var 0x104826dc0 'error' 'int' ","21028":"`-FunctionDecl 0x160808200  line:1:13 invalid io_run_task_work_head 'int (struct callback_head **)' static   |-ParmVarDecl 0x15780e2c8 <col:35, col:58> col:58 used work_head 'struct callback_head **'   `-CompoundStmt 0x160808be8 <line:2:1, line:21:1>     |-DeclStmt 0x160808448 <line:3:2, col:35>     | |-VarDecl 0x160808338 <col:2, col:24> col:24 used work 'struct callback_head *'     | `-VarDecl 0x1608083c8 <col:2, col:31> col:31 used next 'struct callback_head *'     |-DoStmt 0x160808b80 <line:6:2, line:18:12>     | |-CompoundStmt 0x160808b38 <line:6:5, line:18:2>     | | |-BinaryOperator 0x1608086d8 <line:7:3, col:30> 'struct callback_head *' contains-errors '='     | | | |-DeclRefExpr 0x160808460 <col:3> 'struct callback_head *' lvalue Var 0x160808338 'work' 'struct callback_head *'     | | | `-CallExpr 0x1608086a8 <col:10, col:30> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1608085e0 <col:10> 'int ()' Function 0x160808528 'xchg' 'int ()'     | | |   |-DeclRefExpr 0x160808600 <col:15> 'struct callback_head **' lvalue ParmVar 0x15780e2c8 'work_head' 'struct callback_head **'     | | |   `-RecoveryExpr 0x160808688 <col:26> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x160808750 <line:8:3, line:9:4>     | | | |-UnaryOperator 0x160808730 <line:8:7, col:8> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x160808718 <col:8> 'struct callback_head *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x1608086f8 <col:8> 'struct callback_head *' lvalue Var 0x160808338 'work' 'struct callback_head *'     | | | `-BreakStmt 0x160808748 <line:9:4>     | | `-DoStmt 0x160808b00 <line:11:3, line:16:16>     | |   |-CompoundStmt 0x160808a98 <line:11:6, line:16:3>     | |   | |-BinaryOperator 0x1608087f0 <line:12:4, col:17> 'struct callback_head *' contains-errors '='     | |   | | |-DeclRefExpr 0x160808770 <col:4> 'struct callback_head *' lvalue Var 0x1608083c8 'next' 'struct callback_head *'     | |   | | `-RecoveryExpr 0x1608087c8 <col:11, col:17> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x160808790 <col:11> 'struct callback_head *' lvalue Var 0x160808338 'work' 'struct callback_head *'     | |   | |-CallExpr 0x160808890 <line:13:4, col:19> '<dependent type>' contains-errors     | |   | | |-RecoveryExpr 0x160808848 <col:4, col:10> '<dependent type>' contains-errors lvalue     | |   | | | `-DeclRefExpr 0x160808810 <col:4> 'struct callback_head *' lvalue Var 0x160808338 'work' 'struct callback_head *'     | |   | | `-DeclRefExpr 0x160808870 <col:15> 'struct callback_head *' lvalue Var 0x160808338 'work' 'struct callback_head *'     | |   | |-BinaryOperator 0x160808910 <line:14:4, col:11> 'struct callback_head *' '='     | |   | | |-DeclRefExpr 0x1608088b8 <col:4> 'struct callback_head *' lvalue Var 0x160808338 'work' 'struct callback_head *'     | |   | | `-ImplicitCastExpr 0x1608088f8 <col:11> 'struct callback_head *' <LValueToRValue>     | |   | |   `-DeclRefExpr 0x1608088d8 <col:11> 'struct callback_head *' lvalue Var 0x1608083c8 'next' 'struct callback_head *'     | |   | `-CallExpr 0x160808a78 <line:15:4, col:17> 'int'     | |   |   `-ImplicitCastExpr 0x160808a60 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |   |     `-DeclRefExpr 0x160808a10 <col:4> 'int ()' Function 0x160808958 'cond_resched' 'int ()'     | |   `-ImplicitCastExpr 0x160808ae8 <line:16:12> 'struct callback_head *' <LValueToRValue>     | |     `-DeclRefExpr 0x160808ac8 <col:12> 'struct callback_head *' lvalue Var 0x160808338 'work' 'struct callback_head *'     | `-IntegerLiteral 0x160808b60 <line:18:11> 'int' 1     `-ReturnStmt 0x160808bd8 <line:20:2, col:9>       `-RecoveryExpr 0x160808bb8 <col:9> '<dependent type>' contains-errors lvalue ","20257":"`-FunctionDecl 0x134008cc8  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x134008dc8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x134008e30 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x134008e98 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x134008d70 <<invalid sloc>> Implicit 882 ","21035":"`-FunctionDecl 0x12f828110  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12f828210 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12f828278 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12f8282e0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12f8281b8 <<invalid sloc>> Implicit 882 ","20943":"`-FunctionDecl 0x1359281f8  col:16 invalid endString 'int (int *)'   |-ParmVarDecl 0x135928128 <col:26, col:35> col:37 invalid 'int *'   `-CompoundStmt 0x1359282a8 <col:39, col:40> ","21220":"`-FunctionDecl 0x120928468  line:1:1 invalid gst_h264_quant_matrix_8x8_get_zigzag_from_raster 'int (int *, const int *)'   |-ParmVarDecl 0x1209281f0 <col:51, col:70> col:58 referenced invalid out_quant 'int *'   |-ParmVarDecl 0x120928340 <line:2:5, col:26> col:18 invalid quant 'const int *'   `-CompoundStmt 0x120941938 <line:3:1, line:10:1>     `-CallExpr 0x120928700 <line:6:3, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x120928680 <col:3> 'int ()' Function 0x1209285c8 'g_return_if_fail' 'int ()'       `-BinaryOperator 0x1209286e0 <col:21, col:34> 'int' contains-errors '!='         |-RecoveryExpr 0x1209286a0 <col:21> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x1209286c0 <col:34> '<dependent type>' contains-errors lvalue ","20319":"`-FunctionDecl 0x13f1281f8  line:1:15 invalid zend_ts_hash_graceful_destroy 'int (int *)'   |-ParmVarDecl 0x13f128128 <col:45, col:58> col:58 invalid ht 'int *'   `-CompoundStmt 0x13f141828 <line:2:1, line:11:1>     |-CallExpr 0x13f128440 <line:3:2, col:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f128400 <col:2> 'int ()' Function 0x13f128348 'begin_write' 'int ()'     | `-RecoveryExpr 0x13f128420 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f1286b0 <line:4:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f128548 <col:2> 'int ()' Function 0x13f128490 'zend_hash_graceful_destroy' 'int ()'     | `-CallExpr 0x13f128688 <col:29, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f128648 <col:29> 'int ()' Function 0x13f128590 'TS_HASH' 'int ()'     |   `-RecoveryExpr 0x13f128668 <col:37> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13f141800 <line:5:2, col:14> '<dependent type>' contains-errors       |-DeclRefExpr 0x13f1287b8 <col:2> 'int ()' Function 0x13f128700 'end_write' 'int ()'       `-RecoveryExpr 0x13f1287d8 <col:12> '<dependent type>' contains-errors lvalue ","21062":"`-FunctionDecl 0x1361281c8  line:1:1 invalid mcs_recv_connect_response 'int (int)'   |-ParmVarDecl 0x1361280f0 <col:27, col:34> col:34 invalid mcs_data 'int'   `-CompoundStmt 0x136808c00 <line:2:1, line:30:1>     |-DeclStmt 0x1361282f8 <line:4:2, col:12>     | `-VarDecl 0x136128290 <col:2, col:6> col:6 used length 'int'     |-CallExpr 0x1361287b0 <line:11:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136128678 <col:2> 'int ()' Function 0x1361285c0 'ber_parse_header' 'int ()'     | |-RecoveryExpr 0x136128770 <col:19> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x136128790 <col:22> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x136128720 <col:44, col:45> 'int *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x1361286c8 <col:45> 'int' lvalue Var 0x136128290 'length' 'int'     |-CallExpr 0x136808300 <line:13:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136808200 <col:2> 'int ()' Function 0x1361285c0 'ber_parse_header' 'int ()'     | |-RecoveryExpr 0x1368082c0 <col:19> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1368082e0 <col:22> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x136808270 <col:38, col:39> 'int *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x136808250 <col:39> 'int' lvalue Var 0x136128290 'length' 'int'     |-CallExpr 0x1368084d8 <line:14:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136808418 <col:2> 'int ()' Function 0x136808360 'in_uint8' 'int ()'     | |-RecoveryExpr 0x136808498 <col:11> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1368084b8 <col:14> '<dependent type>' contains-errors lvalue     `-IfStmt 0x136808710 <line:15:2, line:19:2>       |-BinaryOperator 0x136808580 <line:15:6, col:16> 'int' contains-errors '!='       | |-RecoveryExpr 0x136808560 <col:6> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x136808520 <col:16> 'int' 0       `-CompoundStmt 0x136808700 <line:16:2, line:19:2> ","20371":"`-FunctionDecl 0x12a1281f0  line:1:6 invalid AllocateDataSet 'void (int *)'   |-ParmVarDecl 0x12a128128 <col:22, col:30> col:30 invalid it8 'int *'   `-CompoundStmt 0x12a141da0 <line:2:1, line:16:1>     |-IfStmt 0x12a128550 <line:5:5, col:20>     | |-CXXDependentScopeMemberExpr 0x12a1284f8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->Data     | | `-RecoveryExpr 0x12a1284d8 <col:9> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12a128540 <col:20>     `-IfStmt 0x12a141d80 <line:11:5, line:14:5>       |-BinaryOperator 0x12a141bd8 <line:11:9, col:20> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x12a141b70 <col:9, col:12> '<dependent type>' contains-errors lvalue ->Data       | | `-RecoveryExpr 0x12a141b50 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12a141bb8 <col:20> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12a141d68 <col:26, line:14:5>         `-CallExpr 0x12a141d38 <line:13:9, col:28> '<dependent type>' contains-errors           |-DeclRefExpr 0x12a141cd8 <col:9> 'int ()' Function 0x12a141c20 'SynError' 'int ()'           |-RecoveryExpr 0x12a141cf8 <col:18> '<dependent type>' contains-errors lvalue           `-StringLiteral 0x12a141d18 <col:23> 'char[4]' lvalue \"STR\" ","20574":"`-FunctionDecl 0x123142cd8  col:37 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x123142dd8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x123142d80 <<invalid sloc>> Implicit 902 ","20867":"`-FunctionDecl 0x1579281c8  line:1:1 referenced invalid _copyAlterOpFamilyStmt 'int (const int *)'   |-ParmVarDecl 0x1579280f0 <col:24, col:49> col:49 invalid from 'const int *'   `-CompoundStmt 0x157941b00 <line:2:1, line:11:1>     |-BinaryOperator 0x157928558 <line:3:2, col:57> '<dependent type>' contains-errors '='     | |-BinaryOperator 0x1579284f0 <col:2, col:21> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x157928298 <col:2> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x157928278 <col:2> 'int (const int *)' Function 0x1579281c8 '_copyAlterOpFamilyStmt' 'int (const int *)'     | | `-RecoveryExpr 0x1579284d0 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x157928530 <col:31, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157928450 <col:31> 'int ()' Function 0x157928398 'makeNode' 'int ()'     |   `-RecoveryExpr 0x157928510 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1579286d8 <line:5:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157928658 <col:2> 'int ()' Function 0x1579285a0 'COPY_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x1579286b8 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157941860 <line:6:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1579287e0 <col:2> 'int ()' Function 0x157928728 'COPY_STRING_FIELD' 'int ()'     | `-RecoveryExpr 0x157941840 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1579419e8 <line:7:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157941968 <col:2> 'int ()' Function 0x1579418b0 'COPY_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x1579419c8 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157941a90 <line:8:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157941a10 <col:2> 'int ()' Function 0x1579285a0 'COPY_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x157941a70 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x157941af0 <line:10:2, col:9>       `-RecoveryExpr 0x157941ad0 <col:9> '<dependent type>' contains-errors lvalue ","21109":"`-FunctionDecl 0x12d80df50  line:1:13 test18 'void (const char *, const char *, const char *, const char *)' static   |-ParmVarDecl 0x12d80dcd8 <col:20, col:32> col:32 used infile 'const char *'   |-ParmVarDecl 0x12d80dd58 <line:2:6, col:18> col:18 used password 'const char *'   |-ParmVarDecl 0x12d80ddd8 <line:3:6, col:18> col:18 used outfile 'const char *'   |-ParmVarDecl 0x12d80de58 <line:4:6, col:18> col:18 outfile2 'const char *'   `-CompoundStmt 0x12d828298 <line:5:1, line:16:1>     |-CallExpr 0x12d80e260 <line:6:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d80e190 <col:5> 'int ()' Function 0x12d80e0d8 'qpdf_read' 'int ()'     | |-RecoveryExpr 0x12d80e240 <col:15> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x12d80e1c8 <col:21> 'const char *' lvalue ParmVar 0x12d80dcd8 'infile' 'const char *'     | `-DeclRefExpr 0x12d80e1e8 <col:29> 'const char *' lvalue ParmVar 0x12d80dd58 'password' 'const char *'     |-CallExpr 0x12d827820 <line:7:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d80e378 <col:5> 'int ()' Function 0x12d80e2c0 'qpdf_init_write' 'int ()'     | |-RecoveryExpr 0x12d827800 <col:21> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x12d80e3b0 <col:27> 'const char *' lvalue ParmVar 0x12d80ddd8 'outfile' 'const char *'     |-CallExpr 0x12d8279f0 <line:8:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d827930 <col:5> 'int ()' Function 0x12d827878 'qpdf_set_static_ID' 'int ()'     | |-RecoveryExpr 0x12d8279b0 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12d8279d0 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d827bc0 <line:9:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d827b00 <col:5> 'int ()' Function 0x12d827a48 'qpdf_set_static_aes_IV' 'int ()'     | |-RecoveryExpr 0x12d827b80 <col:28> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12d827ba0 <col:34> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d827fc0 <line:10:5, line:13:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d827cd0 <line:10:5> 'int ()' Function 0x12d827c18 'qpdf_set_r6_encryption_parameters2' 'int ()'     | |-RecoveryExpr 0x12d827ea0 <line:11:2> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12d827d50 <col:8> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x12d827ec0 <col:15> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12d827ee0 <col:26> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12d827f00 <line:12:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12d827f20 <col:20> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12d827f40 <col:31> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12d827f60 <col:42> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12d827f80 <line:13:2> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12d827fa0 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12d828278 <line:15:5, col:19> 'int'       `-ImplicitCastExpr 0x12d828260 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12d828210 <col:5> 'int ()' Function 0x12d828158 'report_errors' 'int ()' ","21096":"`-FunctionDecl 0x138066df0  line:1:6 invalid ssl_set_client_disabled 'void (int *)'   |-ParmVarDecl 0x138066d28 <col:30, col:35> col:35 invalid s 'int *'   `-CompoundStmt 0x1300c31e8 <line:2:2, line:35:2>     |-CallExpr 0x1300c2c00 <line:11:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138067258 <col:2> 'int ()' Function 0x1380671a0 'ssl_set_sig_mask' 'int ()'     | |-UnaryOperator 0x1380673c8 <col:19, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x138067380 <col:20, col:23> '<dependent type>' contains-errors lvalue ->mask_a     | |   `-RecoveryExpr 0x138067360 <col:20> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1380672f0 <col:31> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1380673e0 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1300c30e0 <line:20:2, line:24:3>     | |-UnaryOperator 0x1300c30b8 <line:20:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1300c3090 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1300c3008 <col:7> 'int ()' Function 0x1300c2f50 'kssl_tgt_is_available' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x1300c3048 <col:29, col:32> '<dependent type>' contains-errors lvalue ->kssl_ctx     | |     `-RecoveryExpr 0x1300c3028 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1300c30d0 <line:21:3, line:24:3>     `-IfStmt 0x1300c31a8 <line:28:2, line:32:3>       |-UnaryOperator 0x1300c3180 <line:28:6, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x1300c3168 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x1300c3120 <col:7, col:10> '<dependent type>' contains-errors lvalue ->psk_client_callback       |     `-RecoveryExpr 0x1300c3100 <col:7> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1300c3198 <line:29:3, line:32:3> ","21135":"`-FunctionDecl 0x131922638  line:1:12 invalid ahash_save_req 'int (struct ahash_request *, int)' static   |-ParmVarDecl 0x13200e248 <col:27, col:49> col:49 used req 'struct ahash_request *'   |-ParmVarDecl 0x13200e2e0 <col:54, col:74> col:74 invalid cplt 'int'   `-CompoundStmt 0x133008ab8 <line:2:1, line:27:1>     |-DeclStmt 0x131922b18 <line:3:2, col:53>     | |-RecordDecl 0x1319226f0 <col:2, col:9> col:9 struct crypto_ahash     | `-VarDecl 0x131922858 <col:2, col:52> col:23 used tfm 'struct crypto_ahash *' cinit     |   `-ImplicitCastExpr 0x131922ae8 <col:29, col:52> 'struct crypto_ahash *' <IntegralToPointer>     |     `-CallExpr 0x131922aa8 <col:29, col:52> 'int'     |       |-ImplicitCastExpr 0x131922a90 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x131922a20 <col:29> 'int ()' Function 0x131922968 'crypto_ahash_reqtfm' 'int ()'     |       `-ImplicitCastExpr 0x131922ad0 <col:49> 'struct ahash_request *' <LValueToRValue>     |         `-DeclRefExpr 0x131922a40 <col:49> 'struct ahash_request *' lvalue ParmVar 0x13200e248 'req' 'struct ahash_request *'     |-DeclStmt 0x131922d40 <line:4:2, col:55>     | `-VarDecl 0x131922b48 <col:2, col:54> col:16 used alignmask 'unsigned long' cinit     |   `-ImplicitCastExpr 0x131922d28 <col:28, col:54> 'unsigned long' <IntegralCast>     |     `-CallExpr 0x131922ce8 <col:28, col:54> 'int'     |       |-ImplicitCastExpr 0x131922cd0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x131922c90 <col:28> 'int ()' Function 0x131922bd8 'crypto_ahash_alignmask' 'int ()'     |       `-ImplicitCastExpr 0x131922d10 <col:51> 'struct crypto_ahash *' <LValueToRValue>     |         `-DeclRefExpr 0x131922cb0 <col:51> 'struct crypto_ahash *' lvalue Var 0x131922858 'tfm' 'struct crypto_ahash *'     |-DeclStmt 0x131922f68 <line:5:2, col:48>     | `-VarDecl 0x131922d70 <col:2, col:47> col:15 used ds 'unsigned int' cinit     |   `-ImplicitCastExpr 0x131922f50 <col:20, col:47> 'unsigned int' <IntegralCast>     |     `-CallExpr 0x131922f10 <col:20, col:47> 'int'     |       |-ImplicitCastExpr 0x131922ef8 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x131922eb8 <col:20> 'int ()' Function 0x131922e00 'crypto_ahash_digestsize' 'int ()'     |       `-ImplicitCastExpr 0x131922f38 <col:44> 'struct crypto_ahash *' <LValueToRValue>     |         `-DeclRefExpr 0x131922ed8 <col:44> 'struct crypto_ahash *' lvalue Var 0x131922858 'tfm' 'struct crypto_ahash *'     |-DeclStmt 0x131923168 <line:6:2, col:33>     | |-RecordDecl 0x131922f80 <col:2, col:9> col:9 struct ahash_request_priv     | `-VarDecl 0x1319230e8 <col:2, col:29> col:29 used priv 'struct ahash_request_priv *'     |-IfStmt 0x1330082d8 <line:11:2, line:12:11>     | |-UnaryOperator 0x133008218 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x133008200 <col:7> 'struct ahash_request_priv *' <LValueToRValue>     | |   `-DeclRefExpr 0x1319235d8 <col:7> 'struct ahash_request_priv *' lvalue Var 0x1319230e8 'priv' 'struct ahash_request_priv *'     | `-ReturnStmt 0x1330082c8 <line:12:3, col:11>     |   `-UnaryOperator 0x1330082b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x133008298 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x133008278 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1330083b8 <line:16:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x133008330 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1330082f8 <col:2> 'struct ahash_request_priv *' lvalue Var 0x1319230e8 'priv' 'struct ahash_request_priv *'     | `-RecoveryExpr 0x133008390 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x133008358 <col:17> 'struct ahash_request *' lvalue ParmVar 0x13200e248 'req' 'struct ahash_request *'     |-BinaryOperator 0x1330084e0 <line:17:2, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x133008410 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1330083d8 <col:2> 'struct ahash_request_priv *' lvalue Var 0x1319230e8 'priv' 'struct ahash_request_priv *'     | `-CXXDependentScopeMemberExpr 0x133008498 <col:19, col:29> '<dependent type>' contains-errors lvalue .complete     |   `-RecoveryExpr 0x133008470 <col:19, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133008438 <col:19> 'struct ahash_request *' lvalue ParmVar 0x13200e248 'req' 'struct ahash_request *'     |-BinaryOperator 0x133008608 <line:18:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x133008538 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x133008500 <col:2> 'struct ahash_request_priv *' lvalue Var 0x1319230e8 'priv' 'struct ahash_request_priv *'     | `-CXXDependentScopeMemberExpr 0x1330085c0 <col:15, col:25> '<dependent type>' contains-errors lvalue .data     |   `-RecoveryExpr 0x133008598 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133008560 <col:15> 'struct ahash_request *' lvalue ParmVar 0x13200e248 'req' 'struct ahash_request *'     |-BinaryOperator 0x1330088e0 <line:22:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133008878 <col:2, col:12> '<dependent type>' contains-errors lvalue .complete     | | `-RecoveryExpr 0x133008850 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133008818 <col:2> 'struct ahash_request *' lvalue ParmVar 0x13200e248 'req' 'struct ahash_request *'     | `-RecoveryExpr 0x1330088c0 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1330089c8 <line:23:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133008960 <col:2, col:12> '<dependent type>' contains-errors lvalue .data     | | `-RecoveryExpr 0x133008938 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133008900 <col:2> 'struct ahash_request *' lvalue ParmVar 0x13200e248 'req' 'struct ahash_request *'     | `-DeclRefExpr 0x1330089a8 <col:19> 'struct ahash_request *' lvalue ParmVar 0x13200e248 'req' 'struct ahash_request *'     |-BinaryOperator 0x133008a68 <line:24:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x133008a20 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1330089e8 <col:2> 'struct ahash_request *' lvalue ParmVar 0x13200e248 'req' 'struct ahash_request *'     | `-DeclRefExpr 0x133008a48 <col:14> 'struct ahash_request_priv *' lvalue Var 0x1319230e8 'priv' 'struct ahash_request_priv *'     `-ReturnStmt 0x133008aa8 <line:26:2, col:9>       `-IntegerLiteral 0x133008a88 <col:9> 'int' 0 ","20939":"`-FunctionDecl 0x1299281f8  line:1:1 invalid DefragGetOsPolicy 'int (int *)'   |-ParmVarDecl 0x129928128 <col:19, col:27> col:27 invalid p 'int *'   `-CompoundStmt 0x1299420a8 <line:2:1, line:57:1>     |-DeclStmt 0x129928360 <line:3:5, col:20>     | `-VarDecl 0x1299282c0 <col:5, col:19> col:9 used policy 'int' cinit     |   `-UnaryOperator 0x129928348 <col:18, col:19> 'int' prefix '-'     |     `-IntegerLiteral 0x129928328 <col:19> 'int' 1     |-IfStmt 0x129941d48 <line:5:5, line:10:5> has_else     | |-CallExpr 0x129928510 <line:5:9, col:22> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1299284d0 <col:9> 'int ()' Function 0x129928418 'PKT_IS_IPV4' 'int ()'     | | `-RecoveryExpr 0x1299284f0 <col:21> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x129928670 <col:25, line:7:5>     | `-IfStmt 0x129941d28 <line:8:10, line:10:5>     |   |-CallExpr 0x1299287a0 <line:8:14, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x129928760 <col:14> 'int ()' Function 0x1299286a8 'PKT_IS_IPV6' 'int ()'     |   | `-RecoveryExpr 0x129928780 <col:26> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x129941d18 <col:30, line:10:5>     |-IfStmt 0x129941e68 <line:12:5, line:14:5>     | |-BinaryOperator 0x129941de8 <line:12:9, col:20> 'int' '=='     | | |-ImplicitCastExpr 0x129941dd0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x129941d78 <col:9> 'int' lvalue Var 0x1299282c0 'policy' 'int'     | | `-UnaryOperator 0x129941db8 <col:19, col:20> 'int' prefix '-'     | |   `-IntegerLiteral 0x129941d98 <col:20> 'int' 1     | `-CompoundStmt 0x129941e50 <col:23, line:14:5>     |   `-ReturnStmt 0x129941e40 <line:13:9, col:16>     |     `-RecoveryExpr 0x129941e20 <col:16> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x129941ec0 <line:17:5, line:56:5>       |-ImplicitCastExpr 0x129941ea8 <line:17:13> 'int' <LValueToRValue>       | `-DeclRefExpr 0x129941e88 <col:13> 'int' lvalue Var 0x1299282c0 'policy' 'int'       `-CompoundStmt 0x129942078 <col:21, line:56:5>         |-ReturnStmt 0x129941f68 <line:22:9, col:16>         | `-RecoveryExpr 0x129941f48 <col:16> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x129941fc8 <line:26:9, col:16>         | `-RecoveryExpr 0x129941fa8 <col:16> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x129942040 <line:31:9, col:16>         | `-RecoveryExpr 0x129942020 <col:16> '<dependent type>' contains-errors lvalue         `-DefaultStmt 0x129942058 <line:54:5, col:12>           `-NullStmt 0x129942050 <col:12> ","20936":"`-FunctionDecl 0x13a00ddf8  line:1:12 invalid cirrus_bitblt_videotovideo_patterncopy 'int (int *)' static   |-ParmVarDecl 0x13a00dd28 <col:51, col:68> col:68 invalid s 'int *'   `-CompoundStmt 0x13a00e0e8 <line:2:1, line:4:1>     `-ReturnStmt 0x13a00e0d8 <line:3:5, col:52>       `-CallExpr 0x13a00e0a8 <col:12, col:52> '<dependent type>' contains-errors         |-DeclRefExpr 0x13a00e000 <col:12> 'int ()' Function 0x13a00df48 'cirrus_bitblt_common_patterncopy' 'int ()'         |-RecoveryExpr 0x13a00e020 <col:45> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13a00e088 <col:48> '<dependent type>' contains-errors lvalue ","20411":"`-FunctionDecl 0x12e00e2a8  line:1:8 invalid olm_pk_decrypt 'int (int *, const void *, int, const void *, int, void *, int, void *, int)'   |-ParmVarDecl 0x12e00dd28 <line:2:5, col:23> col:23 referenced invalid decryption 'int *'   |-ParmVarDecl 0x12e00ddd8 <line:3:5, col:18> col:18 ephemeral_key 'const void *'   |-ParmVarDecl 0x12e00de58 <col:33, col:40> col:40 invalid ephemeral_key_length 'int'   |-ParmVarDecl 0x12e00ded8 <line:4:5, col:18> col:18 mac 'const void *'   |-ParmVarDecl 0x12e00df58 <col:23, col:30> col:30 invalid mac_length 'int'   |-ParmVarDecl 0x12e00dfd8 <line:5:5, col:12> col:12 ciphertext 'void *'   |-ParmVarDecl 0x12e00e058 <col:24, col:31> col:31 invalid ciphertext_length 'int'   |-ParmVarDecl 0x12e00e0d8 <line:6:5, col:12> col:12 plaintext 'void *'   |-ParmVarDecl 0x12e00e158 <col:23, col:30> col:30 invalid max_plaintext_length 'int'   `-CompoundStmt 0x12e808e68 <line:7:3, line:42:1>     |-IfStmt 0x12e808540 <line:8:5, line:13:5>     | |-BinaryOperator 0x12e8083a0 <line:8:9, line:9:72> 'int' contains-errors '<'     | | |-RecoveryExpr 0x12e00e398 <line:8:9> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12e808370 <line:9:15, col:72> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12e808310 <col:15> 'int ()' Function 0x12e808258 'olm_pk_max_plaintext_length' 'int ()'     | |   |-RecoveryExpr 0x12e808330 <col:43> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x12e808350 <col:55> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12e808518 <col:75, line:13:5>     |   |-BinaryOperator 0x12e8084a8 <line:10:9, line:11:13> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12e808408 <line:10:9, col:21> '<dependent type>' contains-errors lvalue ->last_error     |   | | `-RecoveryExpr 0x12e8083e0 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e8083c0 <col:9> 'int *' lvalue ParmVar 0x12e00dd28 'decryption' 'int *'     |   | `-RecoveryExpr 0x12e808488 <line:11:13> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x12e808500 <line:12:9, col:16>     |   | `-RecoveryExpr 0x12e8084e0 <col:16> '<dependent type>' contains-errors lvalue     |   `-NullStmt 0x12e808510 <col:31>     |-DeclStmt 0x12e808af8 <line:15:5, col:48>     | |-RecordDecl 0x12e808560 <col:5, col:12> col:12 struct _olm_curve25519_public_key     | `-VarDecl 0x12e808658 <col:5, col:39> col:39 invalid ephemeral 'struct _olm_curve25519_public_key'     |-RecoveryExpr 0x12e808b40 <line:16:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12e808b90 <line:20:5> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12e808e38 <line:33:5, line:41:5> has_else       |-RecoveryExpr 0x12e808d68 <line:33:9, col:33> '_Bool' contains-errors       |-CompoundStmt 0x12e808e18 <col:36, line:39:5>       `-CompoundStmt 0x12e808e28 <col:12, line:41:5> ","20954":"`-FunctionDecl 0x15780df18  line:1:1 invalid tokenize 'int (int *, int *, const int *)'   |-ParmVarDecl 0x15780dd28 <col:10, col:20> col:20 referenced invalid parseCtx 'int *'   |-ParmVarDecl 0x15780dda8 <col:30, col:39> col:39 referenced invalid ctx 'int *'   |-ParmVarDecl 0x15780de28 <col:44, col:65> col:65 invalid src 'const int *'   `-CompoundStmt 0x157122d60 <col:70, line:23:1>     |-BinaryOperator 0x15780e140 <line:3:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15780e020 <col:5, col:10> '<dependent type>' contains-errors lvalue ->pos     | | `-RecoveryExpr 0x15780dff8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15780dfd8 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'     | `-UnaryOperator 0x15780e128 <col:16, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x15780e108 <col:17, col:28> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x15780e0f0 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x15780e088 <col:17, col:22> '<dependent type>' contains-errors lvalue ->data     |     |   `-RecoveryExpr 0x15780e068 <col:17> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x15780e0d0 <col:27> 'int' 0     |-BinaryOperator 0x15780e328 <line:4:5, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15780e1a8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->end     | | `-RecoveryExpr 0x15780e180 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15780e160 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'     | `-UnaryOperator 0x15780e310 <col:16, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x15780e2f0 <col:17, col:38> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x15780e2c0 <col:17, col:22> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x15780e210 <col:17, col:22> '<dependent type>' contains-errors lvalue ->data     |     |   `-RecoveryExpr 0x15780e1f0 <col:17> '<dependent type>' contains-errors lvalue     |     `-ImplicitCastExpr 0x15780e2d8 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     |       `-CXXDependentScopeMemberExpr 0x15780e278 <col:27, col:32> '<dependent type>' contains-errors lvalue ->length     |         `-RecoveryExpr 0x15780e258 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157122600 <line:5:5, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15780e390 <col:5, col:10> '<dependent type>' contains-errors lvalue ->depth     | | `-RecoveryExpr 0x15780e368 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15780e348 <col:5> 'int *' lvalue ParmVar 0x15780dda8 'ctx' 'int *'     | `-IntegerLiteral 0x15780e3d8 <col:18> 'int' 0     |-BinaryOperator 0x1571226d0 <line:6:5, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157122668 <col:5, col:15> '<dependent type>' contains-errors lvalue ->tokenCount     | | `-RecoveryExpr 0x157122640 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x157122620 <col:5> 'int *' lvalue ParmVar 0x15780dd28 'parseCtx' 'int *'     | `-IntegerLiteral 0x1571226b0 <col:28> 'int' 0     |-BinaryOperator 0x1571227a0 <line:7:5, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157122738 <col:5, col:15> '<dependent type>' contains-errors lvalue ->index     | | `-RecoveryExpr 0x157122710 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1571226f0 <col:5> 'int *' lvalue ParmVar 0x15780dd28 'parseCtx' 'int *'     | `-IntegerLiteral 0x157122780 <col:23> 'int' 0     |-CallExpr 0x1571229d0 <line:11:5, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157122920 <col:5> 'int ()' Function 0x157122868 'jsmn_init' 'int ()'     | `-UnaryOperator 0x1571229b8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x157122998 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157122cf8 <line:16:5, line:20:5>     | |-BinaryOperator 0x157122b28 <line:16:8, col:31> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x157122ac0 <col:8, col:18> '<dependent type>' contains-errors lvalue ->tokenCount     | | | `-RecoveryExpr 0x157122aa0 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x157122b08 <col:31> 'int' 0     | `-CompoundStmt 0x157122cd8 <col:34, line:20:5>     |   |-IfStmt 0x157122c70 <line:17:9, line:18:20>     |   | |-BinaryOperator 0x157122c08 <line:17:12, col:36> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x157122b68 <col:12, col:22> '<dependent type>' contains-errors lvalue ->tokenCount     |   | | | `-RecoveryExpr 0x157122b48 <col:12> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x157122be8 <col:36> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x157122c60 <line:18:13, col:20>     |   |   `-RecoveryExpr 0x157122c40 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x157122cc8 <line:19:9, col:16>     |     `-RecoveryExpr 0x157122ca8 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x157122d50 <line:22:5, col:12>       `-RecoveryExpr 0x157122d30 <col:12> '<dependent type>' contains-errors lvalue ","20953":"`-FunctionDecl 0x134928288  line:1:5 invalid highlight_file 'int (char *, int *)'   |-ParmVarDecl 0x1349280d8 <col:20, col:26> col:26 used filename 'char *'   |-ParmVarDecl 0x1349281a8 <col:36, col:65> col:65 invalid syntax_highlighter_ini 'int *'   `-CompoundStmt 0x134941e80 <line:2:1, line:24:1>     |-IfStmt 0x134941990 <line:11:2, line:15:2>     | |-RecoveryExpr 0x1349286a8 <line:11:6, col:54> '_Bool' contains-errors     | `-CompoundStmt 0x134941978 <col:63, line:15:2>     |   `-ReturnStmt 0x134941968 <line:14:3, col:10>     |     `-RecoveryExpr 0x134941948 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x134941d40 <line:17:2, line:20:2>       |-RecoveryExpr 0x134941bd0 <line:17:6, col:26> '_Bool' contains-errors       `-CompoundStmt 0x134941d30 <col:29, line:20:2> ","20594":"`-FunctionDecl 0x155128288  line:1:12 invalid jpc_seq_upsample 'int *(int *, int)'   |-ParmVarDecl 0x155128128 <col:29, col:40> col:40 invalid x 'int *'   |-ParmVarDecl 0x1551281a8 <col:43, col:47> col:47 used m 'int'   `-CompoundStmt 0x1551429f0 <line:2:1, line:14:1>     |-DeclStmt 0x1551283d8 <line:4:2, col:7>     | `-VarDecl 0x155128370 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x155141e00 <line:6:2, line:7:10>     | |-RecoveryExpr 0x155141d98 <line:6:6, col:78> '_Bool' contains-errors     | `-ReturnStmt 0x155141df0 <line:7:3, col:10>     |   `-ImplicitCastExpr 0x155141dd8 <col:10> 'int *' <NullToPointer>     |     `-IntegerLiteral 0x155141db8 <col:10> 'int' 0     |-ForStmt 0x155142970 <line:8:2, line:11:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x155141fa8 <line:8:29, col:46> 'int' contains-errors '<'     | | |-DeclRefExpr 0x155141ec0 <col:29> 'int' lvalue Var 0x155128370 'i' 'int'     | | `-CallExpr 0x155141f80 <col:33, col:46> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x155141ee0 <col:33> 'int ()' Function 0x155128730 'jas_seq_end' 'int ()'     | |   `-RecoveryExpr 0x155141f60 <col:45> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x155141fe8 <col:49, col:50> 'int' postfix '++'     | | `-DeclRefExpr 0x155141fc8 <col:49> 'int' lvalue Var 0x155128370 'i' 'int'     | `-CompoundStmt 0x155142958 <col:54, line:11:2>     |   `-BinaryOperator 0x155142938 <line:9:3, line:10:19> '<dependent type>' contains-errors '='     |     |-UnaryOperator 0x155142780 <line:9:3, col:23> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-CallExpr 0x155142750 <col:4, col:23> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x1551420e0 <col:4> 'int ()' Function 0x155142028 'jas_seq_getref' 'int ()'     |     |   |-RecoveryExpr 0x155142730 <col:19> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x155142118 <col:22> 'int' lvalue Var 0x155128370 'i' 'int'     |     `-ConditionalOperator 0x155142908 <col:27, line:10:19> '<dependent type>' contains-errors     |       |-ParenExpr 0x155142828 <line:9:27, col:42> 'int'     |       | `-UnaryOperator 0x155142810 <col:28, col:41> 'int' prefix '!' cannot overflow     |       |   `-CallExpr 0x1551427b0 <col:29, col:41> 'int'     |       |     |-ImplicitCastExpr 0x155142798 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       |     | `-DeclRefExpr 0x155142260 <col:29> 'int ()' Function 0x1551421a8 'JAS_MOD' 'int ()'     |       |     |-ImplicitCastExpr 0x1551427e0 <col:37> 'int' <LValueToRValue>     |       |     | `-DeclRefExpr 0x155142280 <col:37> 'int' lvalue Var 0x155128370 'i' 'int'     |       |     `-ImplicitCastExpr 0x1551427f8 <col:40> 'int' <LValueToRValue>     |       |       `-DeclRefExpr 0x1551422a0 <col:40> 'int' lvalue ParmVar 0x1551281a8 'm' 'int'     |       |-CallExpr 0x155142898 <col:46, col:66> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x155142480 <col:46> 'int ()' Function 0x1551423c8 'jas_seq_get' 'int ()'     |       | |-RecoveryExpr 0x1551424a0 <col:58> '<dependent type>' contains-errors lvalue     |       | `-BinaryOperator 0x155142878 <col:61, col:65> 'int' '\/'     |       |   |-ImplicitCastExpr 0x155142848 <col:61> 'int' <LValueToRValue>     |       |   | `-DeclRefExpr 0x1551424c0 <col:61> 'int' lvalue Var 0x155128370 'i' 'int'     |       |   `-ImplicitCastExpr 0x155142860 <col:65> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x1551424e0 <col:65> 'int' lvalue ParmVar 0x1551281a8 'm' 'int'     |       `-CallExpr 0x1551428e0 <line:10:5, col:19> 'int'     |         |-ImplicitCastExpr 0x1551428c8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x155142660 <col:5> 'int ()' Function 0x1551425a8 'jpc_inttofix' 'int ()'     |         `-IntegerLiteral 0x155142680 <col:18> 'int' 0     `-ReturnStmt 0x1551429e0 <line:13:2, col:9>       `-RecoveryExpr 0x1551429c0 <col:9> '<dependent type>' contains-errors lvalue ","20656":"`-FunctionDecl 0x14d140e88  line:1:19 invalid __sock_recvmsg_nosec 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)' static inline   |-ParmVarDecl 0x14d128648 <col:40, col:54> col:54 used iocb 'struct kiocb *'   |-ParmVarDecl 0x14d140a28 <col:60, col:75> col:75 used sock 'struct socket *'   |-ParmVarDecl 0x14d140bf8 <line:2:12, col:27> col:27 used msg 'struct msghdr *'   |-ParmVarDecl 0x14d140c90 <col:32, col:39> col:39 invalid size 'int'   |-ParmVarDecl 0x14d140d10 <col:45, col:49> col:49 used flags 'int'   `-CompoundStmt 0x14d1410f8 <line:3:1, line:5:1>     `-ReturnStmt 0x14d1410e8 <line:4:2, col:56>       `-CallExpr 0x14d1410a0 <col:9, col:56> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x14d140fb8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->recvmsg         | `-RecoveryExpr 0x14d140f90 <col:9, col:15> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14d140f58 <col:9> 'struct socket *' lvalue ParmVar 0x14d140a28 'sock' 'struct socket *'         |-DeclRefExpr 0x14d141000 <col:28> 'struct kiocb *' lvalue ParmVar 0x14d128648 'iocb' 'struct kiocb *'         |-DeclRefExpr 0x14d141020 <col:34> 'struct socket *' lvalue ParmVar 0x14d140a28 'sock' 'struct socket *'         |-DeclRefExpr 0x14d141040 <col:40> 'struct msghdr *' lvalue ParmVar 0x14d140bf8 'msg' 'struct msghdr *'         |-RecoveryExpr 0x14d141060 <col:45> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14d141080 <col:51> 'int' lvalue ParmVar 0x14d140d10 'flags' 'int' ","21180":"`-FunctionDecl 0x125128258  line:1:14 invalid pb_istream_from_buffer 'int (const int *, int)'   |-ParmVarDecl 0x1251280f0 <col:37, col:54> col:54 invalid buf 'const int *'   |-ParmVarDecl 0x125128170 <col:59, col:66> col:66 invalid bufsize 'int'   `-CompoundStmt 0x125128740 <line:2:1, line:21:1>     |-DeclStmt 0x125128598 <line:5:5, line:8:12>     | |-RecordDecl 0x125128310 <line:5:5, line:8:5> line:5:5 union definition     | | |-FieldDecl 0x1251283c8 <line:6:9, col:15> col:15 referenced state 'void *'     | | `-FieldDecl 0x125128468 <line:7:9, col:21> col:21 referenced c_state 'const void *'     | `-VarDecl 0x125128518 <line:5:5, line:8:7> col:7 used state 'union (unnamed union at dataset_diviso_filec\/func8580_nonvuln.c:5:5)':'union (unnamed at dataset_diviso_filec\/func8580_nonvuln.c:5:5)'     |-BinaryOperator 0x125128650 <line:14:5, col:21> 'const void *' contains-errors '='     | |-MemberExpr 0x125128600 <col:5, col:11> 'const void *' lvalue .c_state 0x125128468     | | `-DeclRefExpr 0x1251285e0 <col:5> 'union (unnamed union at dataset_diviso_filec\/func8580_nonvuln.c:5:5)':'union (unnamed at dataset_diviso_filec\/func8580_nonvuln.c:5:5)' lvalue Var 0x125128518 'state' 'union (unnamed union at dataset_diviso_filec\/func8580_nonvuln.c:5:5)':'union (unnamed at dataset_diviso_filec\/func8580_nonvuln.c:5:5)'     | `-RecoveryExpr 0x125128630 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x125128730 <line:20:5, col:12>       `-RecoveryExpr 0x125128710 <col:12> '<dependent type>' contains-errors lvalue ","20915":"`-FunctionDecl 0x14d140a00  line:1:13 m_stop 'void (struct seq_file *, void *)' static   |-ParmVarDecl 0x14d128648 <col:20, col:37> col:37 used m 'struct seq_file *'   |-ParmVarDecl 0x14d1286c8 <col:40, col:46> col:46 used v 'void *'   `-CompoundStmt 0x14d1413f0 <line:2:1, line:9:1>     |-DeclStmt 0x14d140d48 <line:3:2, col:45>     | |-RecordDecl 0x14d140b00 <col:2, col:9> col:9 struct proc_maps_private     | `-VarDecl 0x14d140c68 <col:2, col:38> col:28 used priv 'struct proc_maps_private *' cinit     |   `-RecoveryExpr 0x14d140d08 <col:35, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14d140cd0 <col:35> 'struct seq_file *' lvalue ParmVar 0x14d128648 'm' 'struct seq_file *'     |-DeclStmt 0x14d140f98 <line:4:2, col:32>     | |-RecordDecl 0x14d140d60 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x14d140ec8 <col:2, col:31> col:25 used vma 'struct vm_area_struct *' cinit     |   `-ImplicitCastExpr 0x14d140f68 <col:31> 'struct vm_area_struct *' <BitCast>     |     `-ImplicitCastExpr 0x14d140f50 <col:31> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x14d140f30 <col:31> 'void *' lvalue ParmVar 0x14d1286c8 'v' 'void *'     |-CallExpr 0x14d141188 <line:6:2, col:20> 'int' contains-errors     | |-ImplicitCastExpr 0x14d141170 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14d1410e0 <col:2> 'int ()' Function 0x14d141028 'vma_stop' 'int ()'     | |-ImplicitCastExpr 0x14d1411b8 <col:11> 'struct proc_maps_private *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14d141100 <col:11> 'struct proc_maps_private *' contains-errors lvalue Var 0x14d140c68 'priv' 'struct proc_maps_private *'     | `-ImplicitCastExpr 0x14d1411d0 <col:17> 'struct vm_area_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x14d141120 <col:17> 'struct vm_area_struct *' lvalue Var 0x14d140ec8 'vma' 'struct vm_area_struct *'     `-IfStmt 0x14d1413d0 <line:7:2, line:8:29>       |-RecoveryExpr 0x14d141220 <line:7:6, col:12> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14d1411e8 <col:6> 'struct proc_maps_private *' contains-errors lvalue Var 0x14d140c68 'priv' 'struct proc_maps_private *'       `-CallExpr 0x14d1413a8 <line:8:3, col:29> '<dependent type>' contains-errors         |-DeclRefExpr 0x14d141328 <col:3> 'int ()' Function 0x14d141270 'put_task_struct' 'int ()'         `-RecoveryExpr 0x14d141380 <col:19, col:25> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14d141348 <col:19> 'struct proc_maps_private *' contains-errors lvalue Var 0x14d140c68 'priv' 'struct proc_maps_private *' ","20791":"`-FunctionDecl 0x15c00dec0  line:1:6 invalid close_thread_table 'void (int *, int **)'   |-ParmVarDecl 0x15c00dd28 <col:25, col:30> col:30 invalid thd 'int *'   |-ParmVarDecl 0x15c00dde0 <col:35, col:43> col:43 invalid table_ptr 'int **'   `-CompoundStmt 0x15c0289d8 <line:2:1, line:43:1>     |-CallExpr 0x15c00e208 <line:4:3, col:19> 'int'     | |-ImplicitCastExpr 0x15c00e1f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15c00e140 <col:3> 'int ()' Function 0x15c00e088 'DBUG_ENTER' 'int ()'     | `-ImplicitCastExpr 0x15c00e230 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x15c00e1a0 <col:14> 'char[4]' lvalue \"STR\"     |-CallExpr 0x15c0277e8 <line:5:3, line:6:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c00e328 <line:5:3> 'int ()' Function 0x15c00e270 'DBUG_PRINT' 'int ()'     | |-StringLiteral 0x15c00e348 <col:14> 'char[4]' lvalue \"STR\"     | |-CXXDependentScopeMemberExpr 0x15c027688 <col:21, col:34> '<dependent type>' contains-errors lvalue .str     | | `-CXXDependentScopeMemberExpr 0x15c027640 <col:21, col:31> '<dependent type>' contains-errors lvalue ->db     | |   `-CXXDependentScopeMemberExpr 0x15c0275f8 <col:21, col:28> '<dependent type>' contains-errors lvalue ->s     | |     `-RecoveryExpr 0x15c0275d8 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x15c027780 <line:6:25, col:46> '<dependent type>' contains-errors lvalue .str     | | `-CXXDependentScopeMemberExpr 0x15c027738 <col:25, col:35> '<dependent type>' contains-errors lvalue ->table_name     | |   `-CXXDependentScopeMemberExpr 0x15c0276f0 <col:25, col:32> '<dependent type>' contains-errors lvalue ->s     | |     `-RecoveryExpr 0x15c0276d0 <col:25> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15c0277c8 <col:51> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15c027b18 <line:7:3, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c027908 <col:3> 'int ()' Function 0x15c027850 'DBUG_ASSERT' 'int ()'     | `-UnaryOperator 0x15c027b00 <col:15, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x15c027ae0 <col:16, col:45> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x15c027a98 <col:16, col:29> '<dependent type>' contains-errors lvalue ->keyread_enabled     |       `-CXXDependentScopeMemberExpr 0x15c027a50 <col:16, col:23> '<dependent type>' contains-errors lvalue ->file     |         `-RecoveryExpr 0x15c027a30 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15c027ec8 <line:17:3, line:21:3>     | |-CXXDependentScopeMemberExpr 0x15c027e70 <line:17:7, col:14> '<dependent type>' contains-errors lvalue ->file     | | `-RecoveryExpr 0x15c027e50 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15c027eb8 <line:18:3, line:21:3>     |-CallExpr 0x15c028068 <line:25:3, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c027fc8 <col:3> 'int ()' Function 0x15c027f10 'mysql_mutex_lock' 'int ()'     | `-UnaryOperator 0x15c028050 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x15c028008 <col:21, col:26> '<dependent type>' contains-errors lvalue ->LOCK_thd_data     |     `-RecoveryExpr 0x15c027fe8 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15c028260 <line:27:3, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c0281c0 <col:3> 'int ()' Function 0x15c028108 'mysql_mutex_unlock' 'int ()'     | `-UnaryOperator 0x15c028248 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x15c028200 <col:23, col:28> '<dependent type>' contains-errors lvalue ->LOCK_thd_data     |     `-RecoveryExpr 0x15c0281e0 <col:23> '<dependent type>' contains-errors lvalue     `-IfStmt 0x15c0283b8 <line:29:3, line:36:3>       |-RecoveryExpr 0x15c028288 <line:29:7, col:29> '_Bool' contains-errors       `-CompoundStmt 0x15c0283a8 <line:30:3, line:36:3> ","20231":"`-FunctionDecl 0x121928750  line:1:20 tss_invalidate_io_bitmap 'void (struct tss_struct *)' static inline   |-ParmVarDecl 0x121928648 <col:45, col:64> col:64 used tss 'struct tss_struct *'   `-CompoundStmt 0x121940b80 <line:2:1, line:5:1>     `-BinaryOperator 0x121940b60 <line:4:2, col:32> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x121940aa8 <col:2, col:15> '<dependent type>' contains-errors lvalue .io_bitmap_base       | `-RecoveryExpr 0x121940a80 <col:2, col:7> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x121940a48 <col:2> 'struct tss_struct *' lvalue ParmVar 0x121928648 'tss' 'struct tss_struct *'       `-RecoveryExpr 0x121940b40 <col:32> '<dependent type>' contains-errors lvalue ","20750":"`-FunctionDecl 0x150008a38  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x150008b38 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150008ba0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x150008c08 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x150008ae0 <<invalid sloc>> Implicit 900 ","20415":"`-FunctionDecl 0x1491283a8  line:1:5 invalid TS_RESP_CTX_set_accuracy 'int (int *, int, int, int)'   |-ParmVarDecl 0x149128128 <col:30, col:43> col:43 invalid ctx 'int *'   |-ParmVarDecl 0x1491281a8 <line:2:9, col:13> col:13 used secs 'int'   |-ParmVarDecl 0x149128228 <col:19, col:23> col:23 used millis 'int'   |-ParmVarDecl 0x1491282a8 <col:31, col:35> col:35 used micros 'int'   `-CompoundStmt 0x149142380 <line:3:2, line:21:2>     |-CallExpr 0x149128610 <line:5:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1491285d0 <col:2> 'int ()' Function 0x149128518 'TS_RESP_CTX_accuracy_free' 'int ()'     | `-RecoveryExpr 0x1491285f0 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149141b28 <line:6:2, line:8:8>     | |-BinaryOperator 0x149141aa0 <line:6:6, line:7:48> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x149128638 <line:6:6> 'int' lvalue ParmVar 0x1491281a8 'secs' 'int'     | | `-ParenExpr 0x149141a80 <col:14, line:7:48> 'int' contains-errors     | |   `-BinaryOperator 0x149141a60 <line:6:15, line:7:47> 'int' contains-errors '||'     | |     |-UnaryOperator 0x149141878 <line:6:15, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     | `-ParenExpr 0x149141858 <col:16, col:50> '<dependent type>' contains-errors     | |     |   `-BinaryOperator 0x149141838 <col:17, col:49> '<dependent type>' contains-errors '='     | |     |     |-CXXDependentScopeMemberExpr 0x149128678 <col:17, col:22> '<dependent type>' contains-errors lvalue ->seconds     | |     |     | `-RecoveryExpr 0x149128658 <col:17> '<dependent type>' contains-errors lvalue     | |     |     `-CallExpr 0x149141818 <col:32, col:49> 'int'     | |     |       `-ImplicitCastExpr 0x149141800 <col:32> 'int (*)()' <FunctionToPointerDecay>     | |     |         `-DeclRefExpr 0x1491287a0 <col:32> 'int ()' Function 0x1491286e8 'ASN1_INTEGER_new' 'int ()'     | |     `-UnaryOperator 0x149141a48 <line:7:11, col:47> '<dependent type>' contains-errors prefix '!' cannot overflow     | |       `-CallExpr 0x149141a18 <col:12, col:47> '<dependent type>' contains-errors     | |         |-DeclRefExpr 0x149141970 <col:12> 'int ()' Function 0x1491418b8 'ASN1_INTEGER_set' 'int ()'     | |         |-CXXDependentScopeMemberExpr 0x1491419b0 <col:29, col:34> '<dependent type>' contains-errors lvalue ->seconds     | |         | `-RecoveryExpr 0x149141990 <col:29> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x1491419f8 <col:43> 'int' lvalue ParmVar 0x1491281a8 'secs' 'int'     | `-GotoStmt 0x149141b10 <line:8:3, col:8> 'err' 0x149141ac0     |-IfStmt 0x149141de8 <line:9:2, line:11:8>     | |-BinaryOperator 0x149141db0 <line:9:6, line:10:51> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x149141b48 <line:9:6> 'int' lvalue ParmVar 0x149128228 'millis' 'int'     | | `-ParenExpr 0x149141d90 <col:16, line:10:51> 'int' contains-errors     | |   `-BinaryOperator 0x149141d70 <line:9:17, line:10:50> 'int' contains-errors '||'     | |     |-UnaryOperator 0x149141c68 <line:9:17, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     | `-ParenExpr 0x149141c48 <col:18, col:51> '<dependent type>' contains-errors     | |     |   `-BinaryOperator 0x149141c28 <col:19, col:50> '<dependent type>' contains-errors '='     | |     |     |-CXXDependentScopeMemberExpr 0x149141b88 <col:19, col:24> '<dependent type>' contains-errors lvalue ->millis     | |     |     | `-RecoveryExpr 0x149141b68 <col:19> '<dependent type>' contains-errors lvalue     | |     |     `-CallExpr 0x149141c08 <col:33, col:50> 'int'     | |     |       `-ImplicitCastExpr 0x149141bf0 <col:33> 'int (*)()' <FunctionToPointerDecay>     | |     |         `-DeclRefExpr 0x149141bd0 <col:33> 'int ()' Function 0x1491286e8 'ASN1_INTEGER_new' 'int ()'     | |     `-UnaryOperator 0x149141d58 <line:10:13, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | |       `-CallExpr 0x149141d28 <col:14, col:50> '<dependent type>' contains-errors     | |         |-DeclRefExpr 0x149141c80 <col:14> 'int ()' Function 0x1491418b8 'ASN1_INTEGER_set' 'int ()'     | |         |-CXXDependentScopeMemberExpr 0x149141cc0 <col:31, col:36> '<dependent type>' contains-errors lvalue ->millis     | |         | `-RecoveryExpr 0x149141ca0 <col:31> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x149141d08 <col:44> 'int' lvalue ParmVar 0x149128228 'millis' 'int'     | `-GotoStmt 0x149141dd0 <line:11:3, col:8> 'err' 0x149141ac0     |-IfStmt 0x1491420a8 <line:12:2, line:14:8>     | |-BinaryOperator 0x149142070 <line:12:6, line:13:51> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x149141e08 <line:12:6> 'int' lvalue ParmVar 0x1491282a8 'micros' 'int'     | | `-ParenExpr 0x149142050 <col:16, line:13:51> 'int' contains-errors     | |   `-BinaryOperator 0x149142030 <line:12:17, line:13:50> 'int' contains-errors '||'     | |     |-UnaryOperator 0x149141f28 <line:12:17, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     | `-ParenExpr 0x149141f08 <col:18, col:51> '<dependent type>' contains-errors     | |     |   `-BinaryOperator 0x149141ee8 <col:19, col:50> '<dependent type>' contains-errors '='     | |     |     |-CXXDependentScopeMemberExpr 0x149141e48 <col:19, col:24> '<dependent type>' contains-errors lvalue ->micros     | |     |     | `-RecoveryExpr 0x149141e28 <col:19> '<dependent type>' contains-errors lvalue     | |     |     `-CallExpr 0x149141ec8 <col:33, col:50> 'int'     | |     |       `-ImplicitCastExpr 0x149141eb0 <col:33> 'int (*)()' <FunctionToPointerDecay>     | |     |         `-DeclRefExpr 0x149141e90 <col:33> 'int ()' Function 0x1491286e8 'ASN1_INTEGER_new' 'int ()'     | |     `-UnaryOperator 0x149142018 <line:13:13, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | |       `-CallExpr 0x149141fe8 <col:14, col:50> '<dependent type>' contains-errors     | |         |-DeclRefExpr 0x149141f40 <col:14> 'int ()' Function 0x1491418b8 'ASN1_INTEGER_set' 'int ()'     | |         |-CXXDependentScopeMemberExpr 0x149141f80 <col:31, col:36> '<dependent type>' contains-errors lvalue ->micros     | |         | `-RecoveryExpr 0x149141f60 <col:31> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x149141fc8 <col:44> 'int' lvalue ParmVar 0x1491282a8 'micros' 'int'     | `-GotoStmt 0x149142090 <line:14:3, col:8> 'err' 0x149141ac0     |-ReturnStmt 0x1491420e8 <line:16:2, col:9>     | `-IntegerLiteral 0x1491420c8 <col:9> 'int' 1     |-LabelStmt 0x149142160 <line:17:2, line:18:31> 'err'     | `-CallExpr 0x149142138 <col:2, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1491420f8 <col:2> 'int ()' Function 0x149128518 'TS_RESP_CTX_accuracy_free' 'int ()'     |   `-RecoveryExpr 0x149142118 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x149142320 <line:19:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149142260 <col:2> 'int ()' Function 0x1491421a8 'TSerr' 'int ()'     | |-RecoveryExpr 0x1491422e0 <col:8> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x149142300 <col:39> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x149142370 <line:20:2, col:9>       `-IntegerLiteral 0x149142350 <col:9> 'int' 0 ","20238":"`-FunctionDecl 0x14000dda8  line:1:5 credssp_skip_nego_tokens 'int (int)'   |-ParmVarDecl 0x14000dcd8 <col:30, col:34> col:34 used length 'int'   `-CompoundStmt 0x1379227c8 <line:2:1, line:8:1>     |-BinaryOperator 0x14000e0b8 <line:3:2, col:41> 'int' '='     | |-DeclRefExpr 0x14000dea0 <col:2> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int'     | `-CallExpr 0x14000e078 <col:11, col:41> 'int'     |   |-ImplicitCastExpr 0x14000e060 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14000dff0 <col:11> 'int ()' Function 0x14000df38 'credssp_skip_nego_token' 'int ()'     |   `-ImplicitCastExpr 0x14000e0a0 <col:35> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14000e010 <col:35> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int'     |-CompoundAssignOperator 0x14000e270 <line:4:2, col:40> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x14000e0d8 <col:2> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int'     | `-CallExpr 0x14000e230 <col:12, col:40> 'int'     |   |-ImplicitCastExpr 0x14000e218 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14000e1d8 <col:12> 'int ()' Function 0x14000e120 'der_skip_sequence_tag' 'int ()'     |   `-ImplicitCastExpr 0x14000e258 <col:34> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14000e1f8 <col:34> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int'     |-CompoundAssignOperator 0x14000e358 <line:5:2, col:40> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x14000e2a0 <col:2> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int'     | `-CallExpr 0x14000e318 <col:12, col:40> 'int'     |   |-ImplicitCastExpr 0x14000e300 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14000e2c0 <col:12> 'int ()' Function 0x14000e120 'der_skip_sequence_tag' 'int ()'     |   `-ImplicitCastExpr 0x14000e340 <col:34> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14000e2e0 <col:34> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int'     |-CompoundAssignOperator 0x137922750 <line:6:2, col:42> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x14000e388 <col:2> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int'     | `-CallExpr 0x137922710 <col:12, col:42> 'int'     |   |-ImplicitCastExpr 0x1379226f8 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1379226b8 <col:12> 'int ()' Function 0x137922600 'der_skip_contextual_tag' 'int ()'     |   `-ImplicitCastExpr 0x137922738 <col:36> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1379226d8 <col:36> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int'     `-ReturnStmt 0x1379227b8 <line:7:2, col:9>       `-ImplicitCastExpr 0x1379227a0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x137922780 <col:9> 'int' lvalue ParmVar 0x14000dcd8 'length' 'int' ","20247":"`-FunctionDecl 0x1358fa5e8  line:1:8 invalid gf_lz_decompress_payload 'int (int *, int, int **, int *)'   |-ParmVarDecl 0x1358fa328 <col:33, col:37> col:37 invalid data 'int *'   |-ParmVarDecl 0x1358fa3a8 <col:43, col:47> col:47 invalid data_len 'int'   |-ParmVarDecl 0x1358fa460 <col:57, col:62> col:62 invalid uncompressed_data 'int **'   |-ParmVarDecl 0x1358fa4e0 <col:81, col:86> col:86 invalid out_size 'int *'   `-CompoundStmt 0x1358fa788 <line:2:1, line:5:1>     |-BinaryOperator 0x1358fa720 <line:3:2, col:14> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x1358fa6e8 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1358fa6d0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1358fa6b0 <col:3> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1358fa700 <col:14> 'int' 0     `-ReturnStmt 0x1358fa778 <line:4:2, col:9>       `-RecoveryExpr 0x1358fa758 <col:9> '<dependent type>' contains-errors lvalue ","20904":"`-FunctionDecl 0x1429281f8  line:1:1 invalid f_server2client 'int (int *)'   |-ParmVarDecl 0x142928128 <col:17, col:27> col:27 invalid argvars 'int *'   `-CompoundStmt 0x1429282e0 <line:2:1, line:27:1> ","20920":"`-FunctionDecl 0x1450f4b38  col:14 implicit used isdigit 'int (int)' extern   |-ParmVarDecl 0x1450f4c38 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x1450f4be0 <<invalid sloc>> Implicit 924   |-NoThrowAttr 0x1450f4ca8 <col:14> Implicit   `-PureAttr 0x1450f4cd0 <col:14> Implicit ","21007":"`-FunctionDecl 0x14e80ddf8  line:1:1 invalid tree_calculate 'int (int *)'   |-ParmVarDecl 0x14e80dd28 <col:16, col:34> col:34 invalid treeroot 'int *'   `-CompoundStmt 0x14e826f30 <line:2:1, line:29:1>     |-CallExpr 0x14e80e178 <line:6:5, col:17> 'int'     | |-ImplicitCastExpr 0x14e80e160 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14e80e090 <col:5> 'int ()' Function 0x14e80dfd8 'dbg' 'int ()'     | |-IntegerLiteral 0x14e80e0b0 <col:9> 'int' 1     | `-ImplicitCastExpr 0x14e80e1a8 <col:12> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14e80e110 <col:12> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14e80e388 <line:8:5, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e80e2a0 <col:5> 'int ()' Function 0x14e80e1e8 'RB_FOREACH' 'int ()'     | |-RecoveryExpr 0x14e80e348 <col:16> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14e80e368 <col:22> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14e80e2f0 <col:40> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x14e826f10 <col:50, line:28:5>       |-CallExpr 0x14e826a40 <line:9:9, col:59> '<dependent type>' contains-errors       | |-DeclRefExpr 0x14e8266b8 <col:9> 'int ()' Function 0x14e826600 'dbgx' 'int ()'       | |-IntegerLiteral 0x14e8266d8 <col:14> 'int' 4       | |-StringLiteral 0x14e8266f8 <col:17> 'char[4]' lvalue \"STR\"       | `-CallExpr 0x14e826a10 <col:24, col:58> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14e8267f8 <col:24> 'int ()' Function 0x14e826740 'get_addr2name4' 'int ()'       |   |-CXXDependentScopeMemberExpr 0x14e8269a8 <col:39, col:47> '<dependent type>' contains-errors lvalue .ip       |   | `-CXXDependentScopeMemberExpr 0x14e826960 <col:39, col:45> '<dependent type>' contains-errors lvalue ->u       |   |   `-RecoveryExpr 0x14e826940 <col:39> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14e8269f0 <col:51> '<dependent type>' contains-errors lvalue       `-IfStmt 0x14e826ee0 <line:10:9, line:27:9> has_else         |-RecoveryExpr 0x14e826bb8 <line:10:13, col:60> '_Bool' contains-errors         |-CompoundStmt 0x14e826e38 <col:63, line:22:9>         | `-IfStmt 0x14e826e08 <line:12:13, line:21:13> has_else         |   |-RecoveryExpr 0x14e826cc8 <line:12:17, col:81> '_Bool' contains-errors         |   |-CompoundStmt 0x14e826d68 <col:88, line:16:13>         |   `-CompoundStmt 0x14e826df8 <line:17:18, line:21:13>         `-CompoundStmt 0x14e826ed0 <line:23:14, line:27:9> ","20370":"`-FunctionDecl 0x12c9234d8  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12d027e00 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12d027e68 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12d027ed0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12c923580 <<invalid sloc>> Implicit 882 ","20975":"`-FunctionDecl 0x12a1281f0  line:1:6 invalid jbd2_journal_wait_updates 'void (int *)'   |-ParmVarDecl 0x12a128128 <col:32, col:43> col:43 invalid journal 'int *'   `-CompoundStmt 0x12a142dc0 <line:2:1, line:24:1>     |-IfStmt 0x12a1283c8 <line:5:2, line:6:3>     | |-UnaryOperator 0x12a1283a0 <line:5:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12a128388 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12a128368 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12a1283b8 <line:6:3>     |-CallExpr 0x12a128680 <line:8:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a128540 <col:2> 'int ()' Function 0x12a128488 'spin_lock' 'int ()'     | `-UnaryOperator 0x12a128668 <col:12, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x12a128620 <col:13, col:33> '<dependent type>' contains-errors lvalue ->t_handle_lock     |     `-RecoveryExpr 0x12a128600 <col:13> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x12a142d80 <line:9:2, line:22:2>       |-CallExpr 0x12a141908 <line:9:9, col:51> '<dependent type>' contains-errors       | |-DeclRefExpr 0x12a128788 <col:9> 'int ()' Function 0x12a1286d0 'atomic_read' 'int ()'       | `-UnaryOperator 0x12a1418f0 <col:21, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-CXXDependentScopeMemberExpr 0x12a1418a8 <col:22, col:42> '<dependent type>' contains-errors lvalue ->t_updates       |     `-RecoveryExpr 0x12a141888 <col:22> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12a142d58 <col:54, line:22:2>         |-CallExpr 0x12a141a90 <line:10:3, col:19> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12a141a10 <col:3> 'int ()' Function 0x12a141958 'DEFINE_WAIT' 'int ()'         | `-RecoveryExpr 0x12a141a70 <col:15> '<dependent type>' contains-errors lvalue         |-CallExpr 0x12a141d10 <line:12:3, line:13:26> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12a141b98 <line:12:3> 'int ()' Function 0x12a141ae0 'prepare_to_wait' 'int ()'         | |-UnaryOperator 0x12a141c20 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x12a141bd8 <col:20, col:29> '<dependent type>' contains-errors lvalue ->j_wait_updates         | |   `-RecoveryExpr 0x12a141bb8 <col:20> '<dependent type>' contains-errors lvalue         | |-UnaryOperator 0x12a141cd8 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x12a141cb8 <col:46> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x12a141cf0 <line:13:6> '<dependent type>' contains-errors lvalue         `-IfStmt 0x12a142750 <line:14:3, line:20:3>           |-CallExpr 0x12a141e88 <line:14:7, col:49> '<dependent type>' contains-errors           | |-DeclRefExpr 0x12a141d48 <col:7> 'int ()' Function 0x12a1286d0 'atomic_read' 'int ()'           | `-UnaryOperator 0x12a141e70 <col:19, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow           |   `-CXXDependentScopeMemberExpr 0x12a141e28 <col:20, col:40> '<dependent type>' contains-errors lvalue ->t_updates           |     `-RecoveryExpr 0x12a141e08 <col:20> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x12a142718 <col:52, line:20:3>             |-CallExpr 0x12a1420d0 <line:15:4, col:50> '<dependent type>' contains-errors             | |-DeclRefExpr 0x12a141f90 <col:4> 'int ()' Function 0x12a141ed8 'spin_unlock' 'int ()'             | `-UnaryOperator 0x12a1420b8 <col:16, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow             |   `-CXXDependentScopeMemberExpr 0x12a142070 <col:17, col:37> '<dependent type>' contains-errors lvalue ->t_handle_lock             |     `-RecoveryExpr 0x12a142050 <col:17> '<dependent type>' contains-errors lvalue             |-CallExpr 0x12a142278 <line:16:4, col:39> '<dependent type>' contains-errors             | |-DeclRefExpr 0x12a1421d8 <col:4> 'int ()' Function 0x12a142120 'write_unlock' 'int ()'             | `-UnaryOperator 0x12a142260 <col:17, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow             |   `-CXXDependentScopeMemberExpr 0x12a142218 <col:18, col:27> '<dependent type>' contains-errors lvalue ->j_state_lock             |     `-RecoveryExpr 0x12a1421f8 <col:18> '<dependent type>' contains-errors lvalue             |-CallExpr 0x12a1423e8 <line:17:4, col:13> 'int'             | `-ImplicitCastExpr 0x12a1423d0 <col:4> 'int (*)()' <FunctionToPointerDecay>             |   `-DeclRefExpr 0x12a142380 <col:4> 'int ()' Function 0x12a1422c8 'schedule' 'int ()'             |-CallExpr 0x12a142588 <line:18:4, col:37> '<dependent type>' contains-errors             | |-DeclRefExpr 0x12a1424e8 <col:4> 'int ()' Function 0x12a142430 'write_lock' 'int ()'             | `-UnaryOperator 0x12a142570 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow             |   `-CXXDependentScopeMemberExpr 0x12a142528 <col:16, col:25> '<dependent type>' contains-errors lvalue ->j_state_lock             |     `-RecoveryExpr 0x12a142508 <col:16> '<dependent type>' contains-errors lvalue             `-CallExpr 0x12a1426f0 <line:19:4, col:48> '<dependent type>' contains-errors               |-DeclRefExpr 0x12a1425b0 <col:4> 'int ()' Function 0x12a128488 'spin_lock' 'int ()'               `-UnaryOperator 0x12a1426d8 <col:14, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow                 `-CXXDependentScopeMemberExpr 0x12a142690 <col:15, col:35> '<dependent type>' contains-errors lvalue ->t_handle_lock                   `-RecoveryExpr 0x12a142670 <col:15> '<dependent type>' contains-errors lvalue ","20221":"`-FunctionDecl 0x14a00df18  line:2:23 referenced invalid pdo_stmt_iter_get 'int *(int *, int *, int)'   |-ParmVarDecl 0x14a00dd28 <col:41, col:59> col:59 invalid ce 'int *'   |-ParmVarDecl 0x14a00dda8 <col:63, col:69> col:69 invalid object 'int *'   |-ParmVarDecl 0x14a00de28 <col:77, col:81> col:81 used by_ref 'int'   `-CompoundStmt 0x149922888 <line:3:1, line:26:18>     |-DeclStmt 0x14a00e1f8 <line:5:2, col:28>     | |-RecordDecl 0x14a00e008 <col:2, col:9> col:9 struct php_pdo_iterator     | `-VarDecl 0x14a00e178 <col:2, col:27> col:27 used I 'struct php_pdo_iterator *'     |-IfStmt 0x14a0278f8 <line:7:2, line:9:2>     | |-ImplicitCastExpr 0x14a00e230 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14a00e210 <col:6> 'int' lvalue ParmVar 0x14a00de28 'by_ref' 'int'     | `-CompoundStmt 0x14a0278e0 <col:14, line:9:2>     |   `-CallExpr 0x14a0278b0 <line:8:3, col:28> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a00e3a0 <col:3> 'int ()' Function 0x14a00e2e8 'zend_error' 'int ()'     |     |-RecoveryExpr 0x14a027890 <col:14> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14a027840 <col:23> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x14a028040 <line:12:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14a027f50 <col:2, col:10> '<dependent type>' contains-errors lvalue .funcs     | | `-RecoveryExpr 0x14a027f28 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a027ef0 <col:2> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     | `-UnaryOperator 0x14a028028 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a028008 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a028128 <line:13:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14a0280c0 <col:2, col:10> '<dependent type>' contains-errors lvalue .data     | | `-RecoveryExpr 0x14a028098 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a028060 <col:2> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     | `-DeclRefExpr 0x14a028108 <col:17> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     |-BinaryOperator 0x14a028200 <line:14:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a028180 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a028148 <col:2> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     | `-RecoveryExpr 0x14a0281e0 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a028380 <line:17:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a028300 <col:2> 'int ()' Function 0x14a028248 'MAKE_STD_ZVAL' 'int ()'     | `-RecoveryExpr 0x14a028358 <col:16, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a028320 <col:16> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     |-IfStmt 0x1499227e0 <line:18:2, line:24:2>     | |-RecoveryExpr 0x14a0285a8 <line:18:6, line:19:38> '_Bool' contains-errors     | `-CompoundStmt 0x1499227c0 <col:41, line:24:2>     |   |-CallExpr 0x14a028718 <line:20:3, col:23> 'int'     |   | `-ImplicitCastExpr 0x14a028700 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14a0286a8 <col:3> 'int ()' Function 0x14a0285f0 'PDO_HANDLE_STMT_ERR' 'int ()'     |   `-CallExpr 0x149922738 <line:22:3, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1499226b8 <col:3> 'int ()' Function 0x149922600 'FREE_ZVAL' 'int ()'     |     `-RecoveryExpr 0x149922710 <col:13, col:16> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1499226d8 <col:13> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *'     `-ReturnStmt 0x149922878 <line:26:2, col:13>       `-UnaryOperator 0x149922860 <col:9, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x149922838 <col:10, col:13> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x149922800 <col:10> 'struct php_pdo_iterator *' lvalue Var 0x14a00e178 'I' 'struct php_pdo_iterator *' ","21066":"`-FunctionDecl 0x13c028340  col:25 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x13c028440 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13c0284a8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13c0283e8 <<invalid sloc>> Implicit 952 ","20950":"`-FunctionDecl 0x133026b18  line:1:12 create_fixed_stream_quirk 'int (struct snd_usb_audio *, struct usb_interface *, struct usb_driver *, const struct snd_usb_audio_quirk *)' static   |-ParmVarDecl 0x13300e248 <col:38, col:60> col:60 used chip 'struct snd_usb_audio *'   |-ParmVarDecl 0x133026628 <line:2:10, col:32> col:32 used iface 'struct usb_interface *'   |-ParmVarDecl 0x1330267f8 <line:3:10, col:29> col:29 driver 'struct usb_driver *'   |-ParmVarDecl 0x1330269c8 <line:4:10, col:44> col:44 used quirk 'const struct snd_usb_audio_quirk *'   `-CompoundStmt 0x13400a338 <line:5:1, line:63:1>     |-DeclStmt 0x133026e18 <line:6:2, col:24>     | |-RecordDecl 0x133026c28 <col:2, col:9> col:9 struct audioformat     | `-VarDecl 0x133026d98 <col:2, col:22> col:22 used fp 'struct audioformat *'     |-DeclStmt 0x133027018 <line:7:2, col:33>     | |-RecordDecl 0x133026e30 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x133026f98 <col:2, col:29> col:29 used alts 'struct usb_host_interface *'     |-DeclStmt 0x133027218 <line:8:2, col:40>     | |-RecordDecl 0x133027030 <col:2, col:9> col:9 struct usb_interface_descriptor     | `-VarDecl 0x133027198 <col:2, col:35> col:35 used altsd 'struct usb_interface_descriptor *'     |-DeclStmt 0x133027348 <line:9:2, col:17>     | |-VarDecl 0x133027248 <col:2, col:6> col:6 used stream 'int'     | `-VarDecl 0x1330272c8 <col:2, col:14> col:14 used err 'int'     |-DeclStmt 0x133027460 <line:10:2, col:29>     | `-VarDecl 0x1330273a8 <col:2, col:25> col:12 used rate_table 'unsigned int *' cinit     |   `-RecoveryExpr 0x133027440 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133029210 <line:13:2, line:16:2>     | |-UnaryOperator 0x133028f00 <line:13:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x133028ee8 <col:7> 'struct audioformat *' <LValueToRValue>     | |   `-DeclRefExpr 0x133028ec8 <col:7> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | `-CompoundStmt 0x1330291f0 <col:11, line:16:2>     |   |-CallExpr 0x1330290e8 <line:14:3, col:28> 'int'     |   | |-ImplicitCastExpr 0x1330290d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x133028ff8 <col:3> 'int ()' Function 0x133028f40 'usb_audio_err' 'int ()'     |   | |-ImplicitCastExpr 0x133029118 <col:17> 'struct snd_usb_audio *' <LValueToRValue>     |   | | `-DeclRefExpr 0x133029018 <col:17> 'struct snd_usb_audio *' lvalue ParmVar 0x13300e248 'chip' 'struct snd_usb_audio *'     |   | `-ImplicitCastExpr 0x133029130 <col:23> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x133029080 <col:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1330291e0 <line:15:3, col:11>     |     `-UnaryOperator 0x1330291c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1330291b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x133029190 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133029548 <line:17:2, line:20:2>     | |-BinaryOperator 0x1330292e8 <line:17:6, col:21> 'int' contains-errors '>'     | | |-RecoveryExpr 0x133029268 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x133029230 <col:6> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | | `-RecoveryExpr 0x1330292c8 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133029528 <col:35, line:20:2>     |   |-CallExpr 0x133029440 <line:18:3, col:11> 'int'     |   | |-ImplicitCastExpr 0x133029428 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1330293e8 <col:3> 'int ()' Function 0x133029330 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x133029468 <col:9> 'struct audioformat *' <LValueToRValue>     |   |   `-DeclRefExpr 0x133029408 <col:9> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   `-ReturnStmt 0x133029518 <line:19:3, col:11>     |     `-UnaryOperator 0x133029500 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1330294e8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1330294c8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133029b90 <line:21:2, line:29:2>     | |-BinaryOperator 0x1330295e8 <line:21:6, col:21> 'int' contains-errors '>'     | | |-RecoveryExpr 0x1330295a0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x133029568 <col:6> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | | `-IntegerLiteral 0x1330295c8 <col:21> 'int' 0     | `-CompoundStmt 0x133029b68 <col:24, line:29:2>     |   |-BinaryOperator 0x1330298d8 <line:22:3, line:23:48> 'unsigned int *' contains-errors '='     |   | |-DeclRefExpr 0x133029608 <line:22:3> 'unsigned int *' contains-errors lvalue Var 0x1330273a8 'rate_table' 'unsigned int *'     |   | `-CallExpr 0x1330298a0 <col:16, line:23:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x133029628 <line:22:16> 'int ()' Function 0x1330274f8 'kmemdup' 'int ()'     |   |   |-RecoveryExpr 0x133029680 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x133029648 <col:24> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   |   |-BinaryOperator 0x133029860 <line:23:10, col:28> '<dependent type>' contains-errors '*'     |   |   | |-UnaryExprOrTypeTraitExpr 0x133029840 <col:10, col:20> 'unsigned long' sizeof 'int'     |   |   | `-RecoveryExpr 0x133029718 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x1330296e0 <col:24> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   |   `-RecoveryExpr 0x133029880 <col:38> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x133029aa8 <line:24:3, line:27:3>     |   | |-UnaryOperator 0x133029930 <line:24:7, col:8> 'int' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x133029918 <col:8> 'unsigned int *' contains-errors <LValueToRValue>     |   | |   `-DeclRefExpr 0x1330298f8 <col:8> 'unsigned int *' contains-errors lvalue Var 0x1330273a8 'rate_table' 'unsigned int *'     |   | `-CompoundStmt 0x133029a88 <col:20, line:27:3>     |   |   |-CallExpr 0x1330299a0 <line:25:4, col:12> 'int'     |   |   | |-ImplicitCastExpr 0x133029988 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x133029948 <col:4> 'int ()' Function 0x133029330 'kfree' 'int ()'     |   |   | `-ImplicitCastExpr 0x1330299c8 <col:10> 'struct audioformat *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x133029968 <col:10> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   |   `-ReturnStmt 0x133029a78 <line:26:4, col:12>     |   |     `-UnaryOperator 0x133029a60 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x133029a48 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x133029a28 <col:12> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x133029b48 <line:28:3, col:20> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x133029b00 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x133029ac8 <col:3> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |     `-DeclRefExpr 0x133029b28 <col:20> 'unsigned int *' contains-errors lvalue Var 0x1330273a8 'rate_table' 'unsigned int *'     |-BinaryOperator 0x134008880 <line:33:2, col:49> 'int' '='     | |-DeclRefExpr 0x133029c68 <col:2> 'int' lvalue Var 0x1330272c8 'err' 'int'     | `-CallExpr 0x134008800 <col:8, col:49> 'int'     |   |-ImplicitCastExpr 0x133029de8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x133029d68 <col:8> 'int ()' Function 0x133029cb0 'snd_usb_add_audio_stream' 'int ()'     |   |-ImplicitCastExpr 0x134008838 <col:33> 'struct snd_usb_audio *' <LValueToRValue>     |   | `-DeclRefExpr 0x133029d88 <col:33> 'struct snd_usb_audio *' lvalue ParmVar 0x13300e248 'chip' 'struct snd_usb_audio *'     |   |-ImplicitCastExpr 0x134008850 <col:39> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x133029da8 <col:39> 'int' lvalue Var 0x133027248 'stream' 'int'     |   `-ImplicitCastExpr 0x134008868 <col:47> 'struct audioformat *' <LValueToRValue>     |     `-DeclRefExpr 0x133029dc8 <col:47> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |-IfStmt 0x134008ab8 <line:34:2, line:38:2>     | |-BinaryOperator 0x1340088f8 <line:34:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x1340088e0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1340088a0 <col:6> 'int' lvalue Var 0x1330272c8 'err' 'int'     | | `-IntegerLiteral 0x1340088c0 <col:12> 'int' 0     | `-CompoundStmt 0x134008a90 <col:15, line:38:2>     |   |-CallExpr 0x134008970 <line:35:3, col:11> 'int'     |   | |-ImplicitCastExpr 0x134008958 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x134008918 <col:3> 'int ()' Function 0x133029330 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x134008998 <col:9> 'struct audioformat *' <LValueToRValue>     |   |   `-DeclRefExpr 0x134008938 <col:9> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   |-CallExpr 0x134008a08 <line:36:3, col:19> 'int' contains-errors     |   | |-ImplicitCastExpr 0x1340089f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1340089b0 <col:3> 'int ()' Function 0x133029330 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x134008a30 <col:9> 'unsigned int *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x1340089d0 <col:9> 'unsigned int *' contains-errors lvalue Var 0x1330273a8 'rate_table' 'unsigned int *'     |   `-ReturnStmt 0x134008a80 <line:37:3, col:10>     |     `-ImplicitCastExpr 0x134008a68 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x134008a48 <col:10> 'int' lvalue Var 0x1330272c8 'err' 'int'     |-IfStmt 0x134008fe8 <line:39:2, line:44:2>     | |-BinaryOperator 0x134008e78 <line:39:6, line:40:31> 'int' contains-errors '||'     | | |-BinaryOperator 0x134008d78 <line:39:6, col:58> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x134008b10 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x134008ad8 <col:6> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | | | `-CXXDependentScopeMemberExpr 0x134008d30 <col:19, col:58> '<dependent type>' contains-errors lvalue ->bInterfaceNumber     | | |   `-CallExpr 0x134008d08 <col:19, col:55> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x134008c18 <col:19> 'int ()' Function 0x134008b60 'get_iface_desc' 'int ()'     | | |     `-UnaryOperator 0x134008cf0 <col:34, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |       `-ArraySubscriptExpr 0x134008cd0 <col:35, col:54> '<dependent type>' contains-errors lvalue     | | |         |-ImplicitCastExpr 0x134008cb8 <col:35, col:42> '<dependent type>' contains-errors <LValueToRValue>     | | |         | `-RecoveryExpr 0x134008c70 <col:35, col:42> '<dependent type>' contains-errors lvalue     | | |         |   `-DeclRefExpr 0x134008c38 <col:35> 'struct usb_interface *' lvalue ParmVar 0x133026628 'iface' 'struct usb_interface *'     | | |         `-IntegerLiteral 0x134008c98 <col:53> 'int' 0     | | `-BinaryOperator 0x134008e58 <line:40:6, col:31> 'int' contains-errors '>='     | |   |-RecoveryExpr 0x134008dd0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x134008d98 <col:6> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | |   `-RecoveryExpr 0x134008e30 <col:24, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x134008df8 <col:24> 'struct usb_interface *' lvalue ParmVar 0x133026628 'iface' 'struct usb_interface *'     | `-CompoundStmt 0x134008fc8 <col:47, line:44:2>     |   |-CallExpr 0x134008ef0 <line:41:3, col:11> 'int'     |   | |-ImplicitCastExpr 0x134008ed8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x134008e98 <col:3> 'int ()' Function 0x133029330 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x134008f18 <col:9> 'struct audioformat *' <LValueToRValue>     |   |   `-DeclRefExpr 0x134008eb8 <col:9> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   `-CallExpr 0x134008f88 <line:42:3, col:19> 'int' contains-errors     |     |-ImplicitCastExpr 0x134008f70 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x134008f30 <col:3> 'int ()' Function 0x133029330 'kfree' 'int ()'     |     `-ImplicitCastExpr 0x134008fb0 <col:9> 'unsigned int *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x134008f50 <col:9> 'unsigned int *' contains-errors lvalue Var 0x1330273a8 'rate_table' 'unsigned int *'     |-BinaryOperator 0x134009150 <line:45:2, col:42> 'struct usb_host_interface *' contains-errors '='     | |-DeclRefExpr 0x134009008 <col:2> 'struct usb_host_interface *' lvalue Var 0x133026f98 'alts' 'struct usb_host_interface *'     | `-UnaryOperator 0x134009138 <col:9, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x134009118 <col:10, col:42> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x1340090e8 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x134009060 <col:10, col:17> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x134009028 <col:10> 'struct usb_interface *' lvalue ParmVar 0x133026628 'iface' 'struct usb_interface *'     |     `-ImplicitCastExpr 0x134009100 <col:28, col:32> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1340090c0 <col:28, col:32> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x134009088 <col:28> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |-BinaryOperator 0x134009240 <line:46:2, col:29> 'struct usb_interface_descriptor *' '='     | |-DeclRefExpr 0x134009170 <col:2> 'struct usb_interface_descriptor *' lvalue Var 0x133027198 'altsd' 'struct usb_interface_descriptor *'     | `-ImplicitCastExpr 0x134009228 <col:10, col:29> 'struct usb_interface_descriptor *' <IntegralToPointer>     |   `-CallExpr 0x1340091e8 <col:10, col:29> 'int'     |     |-ImplicitCastExpr 0x1340091d0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x134009190 <col:10> 'int ()' Function 0x134008b60 'get_iface_desc' 'int ()'     |     `-ImplicitCastExpr 0x134009210 <col:25> 'struct usb_host_interface *' <LValueToRValue>     |       `-DeclRefExpr 0x1340091b0 <col:25> 'struct usb_host_interface *' lvalue Var 0x133026f98 'alts' 'struct usb_host_interface *'     |-IfStmt 0x134009450 <line:47:2, line:51:2>     | |-BinaryOperator 0x1340092e0 <line:47:6, col:29> 'int' contains-errors '<'     | | |-RecoveryExpr 0x134009298 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x134009260 <col:6> 'struct usb_interface_descriptor *' lvalue Var 0x133027198 'altsd' 'struct usb_interface_descriptor *'     | | `-IntegerLiteral 0x1340092c0 <col:29> 'int' 1     | `-CompoundStmt 0x134009430 <col:32, line:51:2>     |   |-CallExpr 0x134009358 <line:48:3, col:11> 'int'     |   | |-ImplicitCastExpr 0x134009340 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x134009300 <col:3> 'int ()' Function 0x133029330 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x134009380 <col:9> 'struct audioformat *' <LValueToRValue>     |   |   `-DeclRefExpr 0x134009320 <col:9> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   `-CallExpr 0x1340093f0 <line:49:3, col:19> 'int' contains-errors     |     |-ImplicitCastExpr 0x1340093d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x134009398 <col:3> 'int ()' Function 0x133029330 'kfree' 'int ()'     |     `-ImplicitCastExpr 0x134009418 <col:9> 'unsigned int *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x1340093b8 <col:9> 'unsigned int *' contains-errors lvalue Var 0x1330273a8 'rate_table' 'unsigned int *'     |-BinaryOperator 0x134009530 <line:53:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1340094a8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x134009470 <col:2> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | `-RecoveryExpr 0x134009508 <col:17, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1340094d0 <col:17> 'struct usb_interface_descriptor *' lvalue Var 0x133027198 'altsd' 'struct usb_interface_descriptor *'     |-IfStmt 0x134009838 <line:55:2, line:56:59>     | |-BinaryOperator 0x1340095d0 <line:55:6, col:26> 'int' contains-errors '=='     | | |-RecoveryExpr 0x134009588 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x134009550 <col:6> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | | `-IntegerLiteral 0x1340095b0 <col:26> 'int' 0     | `-BinaryOperator 0x134009818 <line:56:3, col:59> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x134009628 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1340095f0 <col:3> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   `-CallExpr 0x1340097a8 <col:22, col:59> 'int'     |     |-ImplicitCastExpr 0x134009790 <col:22> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x134009730 <col:22> 'int ()' Function 0x134009678 'snd_usb_parse_datainterval' 'int ()'     |     |-ImplicitCastExpr 0x1340097d8 <col:49> 'struct snd_usb_audio *' <LValueToRValue>     |     | `-DeclRefExpr 0x134009750 <col:49> 'struct snd_usb_audio *' lvalue ParmVar 0x13300e248 'chip' 'struct snd_usb_audio *'     |     `-ImplicitCastExpr 0x134009800 <col:55> 'struct usb_host_interface *' <LValueToRValue>     |       `-DeclRefExpr 0x134009770 <col:55> 'struct usb_host_interface *' lvalue Var 0x133026f98 'alts' 'struct usb_host_interface *'     |-IfStmt 0x134009c68 <line:57:2, line:58:70>     | |-BinaryOperator 0x1340098d8 <line:57:6, col:25> 'int' contains-errors '=='     | | |-RecoveryExpr 0x134009890 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x134009858 <col:6> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | | `-IntegerLiteral 0x1340098b8 <col:25> 'int' 0     | `-BinaryOperator 0x134009c48 <line:58:3, col:70> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x134009930 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1340098f8 <col:3> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |   `-CallExpr 0x134009c20 <col:21, col:70> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x134009a38 <col:21> 'int ()' Function 0x134009980 'le16_to_cpu' 'int ()'     |     `-RecoveryExpr 0x134009bf8 <col:33, col:56> '<dependent type>' contains-errors lvalue     |       `-CallExpr 0x134009bb0 <col:33, col:53> 'int'     |         |-ImplicitCastExpr 0x134009b98 <col:33> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x134009b38 <col:33> 'int ()' Function 0x134009a80 'get_endpoint' 'int ()'     |         |-ImplicitCastExpr 0x134009be0 <col:46> 'struct usb_host_interface *' <LValueToRValue>     |         | `-DeclRefExpr 0x134009b58 <col:46> 'struct usb_host_interface *' lvalue Var 0x133026f98 'alts' 'struct usb_host_interface *'     |         `-IntegerLiteral 0x134009b78 <col:52> 'int' 0     |-CallExpr 0x134009e68 <line:59:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134009d68 <col:2> 'int ()' Function 0x134009cb0 'usb_set_interface' 'int ()'     | |-RecoveryExpr 0x134009dc0 <col:20, col:26> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x134009d88 <col:20> 'struct snd_usb_audio *' lvalue ParmVar 0x13300e248 'chip' 'struct snd_usb_audio *'     | |-RecoveryExpr 0x134009e20 <col:31, col:35> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x134009de8 <col:31> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | `-IntegerLiteral 0x134009e48 <col:42> 'int' 0     |-CallExpr 0x13400a060 <line:60:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134009f80 <col:2> 'int ()' Function 0x134009ec8 'snd_usb_init_pitch' 'int ()'     | |-DeclRefExpr 0x134009fa0 <col:21> 'struct snd_usb_audio *' lvalue ParmVar 0x13300e248 'chip' 'struct snd_usb_audio *'     | |-RecoveryExpr 0x134009ff8 <col:27, col:31> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x134009fc0 <col:27> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | |-DeclRefExpr 0x13400a020 <col:38> 'struct usb_host_interface *' lvalue Var 0x133026f98 'alts' 'struct usb_host_interface *'     | `-DeclRefExpr 0x13400a040 <col:44> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     |-CallExpr 0x13400a2c0 <line:61:2, col:66> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13400a180 <col:2> 'int ()' Function 0x13400a0c8 'snd_usb_init_sample_rate' 'int ()'     | |-DeclRefExpr 0x13400a1a0 <col:27> 'struct snd_usb_audio *' lvalue ParmVar 0x13300e248 'chip' 'struct snd_usb_audio *'     | |-RecoveryExpr 0x13400a1f8 <col:33, col:37> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13400a1c0 <col:33> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | |-DeclRefExpr 0x13400a220 <col:44> 'struct usb_host_interface *' lvalue Var 0x133026f98 'alts' 'struct usb_host_interface *'     | |-DeclRefExpr 0x13400a240 <col:50> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     | `-RecoveryExpr 0x13400a298 <col:54, col:58> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13400a260 <col:54> 'struct audioformat *' lvalue Var 0x133026d98 'fp' 'struct audioformat *'     `-ReturnStmt 0x13400a328 <line:62:2, col:9>       `-IntegerLiteral 0x13400a308 <col:9> 'int' 0 ","20250":"`-FunctionDecl 0x14500ddf8  line:1:1 invalid abort_job 'int (int *)'   |-ParmVarDecl 0x14500dd28 <col:12, col:23> col:23 invalid job 'int *'   `-CompoundStmt 0x14500e0b0 <line:2:1, line:5:1>     `-CallExpr 0x14500e088 <line:3:2, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x14500e000 <col:2> 'int ()' Function 0x14500df48 'g_cancellable_cancel' 'int ()'       `-CXXDependentScopeMemberExpr 0x14500e040 <col:24, col:29> '<dependent type>' contains-errors lvalue ->cancellable         `-RecoveryExpr 0x14500e020 <col:24> '<dependent type>' contains-errors lvalue ","20358":"`-FunctionDecl 0x121940ab8  line:1:41 queue_lock 'struct futex_hash_bucket *(struct futex_q *)' static inline   |-ParmVarDecl 0x1219286e8 <col:52, col:68> col:68 used q 'struct futex_q *'   `-CompoundStmt 0x121941360 <line:2:1, line:11:1>     |-DeclStmt 0x121940ca0 <line:3:2, col:30>     | `-VarDecl 0x121940c38 <col:2, col:28> col:28 used hb 'struct futex_hash_bucket *'     |-CallExpr 0x121940e78 <line:5:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121940de0 <col:2> 'int ()' Function 0x121940d28 'get_futex_key_refs' 'int ()'     | `-UnaryOperator 0x121940e60 <col:21, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x121940e38 <col:22, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x121940e00 <col:22> 'struct futex_q *' lvalue ParmVar 0x1219286e8 'q' 'struct futex_q *'     |-BinaryOperator 0x121941060 <line:6:2, col:25> 'struct futex_hash_bucket *' contains-errors '='     | |-DeclRefExpr 0x121940ea0 <col:2> 'struct futex_hash_bucket *' lvalue Var 0x121940c38 'hb' 'struct futex_hash_bucket *'     | `-CallExpr 0x121941038 <col:7, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x121940fa0 <col:7> 'int ()' Function 0x121940ee8 'hash_futex' 'int ()'     |   `-UnaryOperator 0x121941020 <col:18, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x121940ff8 <col:19, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x121940fc0 <col:19> 'struct futex_q *' lvalue ParmVar 0x1219286e8 'q' 'struct futex_q *'     |-BinaryOperator 0x121941158 <line:7:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1219410b8 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x121941080 <col:2> 'struct futex_q *' lvalue ParmVar 0x1219286e8 'q' 'struct futex_q *'     | `-UnaryOperator 0x121941140 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x121941118 <col:17, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1219410e0 <col:17> 'struct futex_hash_bucket *' lvalue Var 0x121940c38 'hb' 'struct futex_hash_bucket *'     |-CallExpr 0x1219412f0 <line:9:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121941258 <col:2> 'int ()' Function 0x1219411a0 'spin_lock' 'int ()'     | `-UnaryOperator 0x1219412d8 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1219412b0 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x121941278 <col:13> 'struct futex_hash_bucket *' lvalue Var 0x121940c38 'hb' 'struct futex_hash_bucket *'     `-ReturnStmt 0x121941350 <line:10:2, col:9>       `-ImplicitCastExpr 0x121941338 <col:9> 'struct futex_hash_bucket *' <LValueToRValue>         `-DeclRefExpr 0x121941318 <col:9> 'struct futex_hash_bucket *' lvalue Var 0x121940c38 'hb' 'struct futex_hash_bucket *' ","20515":"`-FunctionDecl 0x1319281c8  line:1:1 invalid wc_ucs_to_ccs 'int (int)'   |-ParmVarDecl 0x1319280f0 <col:15, col:25> col:25 invalid ucs 'int'   `-CompoundStmt 0x132009040 <line:2:1, line:10:1>     `-IfStmt 0x1319283a0 <line:3:5, line:4:9>       |-BinaryOperator 0x131928338 <line:3:9, col:31> 'int' contains-errors '&&'       | |-BinaryOperator 0x1319282b8 <col:9, col:17> 'int' contains-errors '<='       | | |-IntegerLiteral 0x131928278 <col:9> 'int' 128       | | `-RecoveryExpr 0x131928298 <col:17> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x131928318 <col:24, col:31> 'int' contains-errors '<='       |   |-RecoveryExpr 0x1319282d8 <col:24> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x1319282f8 <col:31> 'int' 159       `-ReturnStmt 0x131928390 <line:4:2, col:9>         `-RecoveryExpr 0x131928370 <col:9> '<dependent type>' contains-errors lvalue ","20657":"`-FunctionDecl 0x14090b1f8  line:1:12 invalid FusedBatchNormGradOpBase 'int (int *)'   |-ParmVarDecl 0x14090b128 <col:37, col:59> col:59 invalid context 'int *'   `-CompoundStmt 0x140923938 <line:2:27, line:11:3>     |-DeclStmt 0x14090b328 <line:3:5, col:18>     | `-VarDecl 0x14090b2c0 <col:5, col:11> col:11 used epsilon 'float'     |-CallExpr 0x14090b648 <line:4:5, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14090b4a0 <col:5> 'int ()' Function 0x14090b3e8 'OP_REQUIRES_OK' 'int ()'     | |-RecoveryExpr 0x14090b4c0 <col:20> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14090b618 <col:29, col:61> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x14090b500 <col:29, col:38> '<dependent type>' contains-errors lvalue ->GetAttr     |   | `-RecoveryExpr 0x14090b4e0 <col:29> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x14090b590 <col:46> 'char[4]' lvalue \"STR\"     |   `-UnaryOperator 0x14090b600 <col:53, col:54> 'float *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x14090b5b0 <col:54> 'float' lvalue Var 0x14090b2c0 'epsilon' 'float'     |-BinaryOperator 0x140923288 <line:5:5, col:25> 'float' '='     | |-DeclRefExpr 0x14090b678 <col:5> 'float' lvalue Var 0x14090b2c0 'epsilon' 'float'     | `-ImplicitCastExpr 0x140923270 <col:16, col:25> 'float' <IntegralToFloating>     |   `-CallExpr 0x140923218 <col:16, col:25> 'int'     |     |-ImplicitCastExpr 0x140923200 <col:16> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14090b778 <col:16> 'int ()' Function 0x14090b6c0 'U' 'int ()'     |     `-ImplicitCastExpr 0x140923258 <col:18> 'double' <FloatingCast>     |       `-ImplicitCastExpr 0x140923240 <col:18> 'float' <LValueToRValue>     |         `-DeclRefExpr 0x14090b798 <col:18> 'float' lvalue Var 0x14090b2c0 'epsilon' 'float'     |-CallExpr 0x140923468 <line:7:5, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1409232a8 <col:5> 'int ()' Function 0x14090b3e8 'OP_REQUIRES_OK' 'int ()'     | |-RecoveryExpr 0x1409232c8 <col:20> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x140923438 <col:29, col:67> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x140923308 <col:29, col:38> '<dependent type>' contains-errors lvalue ->GetAttr     |   | `-RecoveryExpr 0x1409232e8 <col:29> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x140923350 <col:46> 'char[4]' lvalue \"STR\"     |   `-UnaryOperator 0x140923420 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x140923400 <col:54> '<dependent type>' contains-errors lvalue     `-CallExpr 0x140923908 <line:10:5, col:67> '<dependent type>' contains-errors       |-DeclRefExpr 0x140923748 <col:5> 'int ()' Function 0x14090b3e8 'OP_REQUIRES_OK' 'int ()'       |-RecoveryExpr 0x140923768 <col:20> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1409238d8 <col:29, col:66> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x1409237a8 <col:29, col:38> '<dependent type>' contains-errors lvalue ->GetAttr         | `-RecoveryExpr 0x140923788 <col:29> '<dependent type>' contains-errors lvalue         |-StringLiteral 0x1409237f0 <col:46> 'char[4]' lvalue \"STR\"         `-UnaryOperator 0x1409238c0 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x1409238a0 <col:54> '<dependent type>' contains-errors lvalue ","21061":"`-FunctionDecl 0x1421281f8  line:1:1 invalid gdm_session_settings_get_session_name 'int (int *)'   |-ParmVarDecl 0x142128128 <col:40, col:60> col:60 invalid settings 'int *'   `-CompoundStmt 0x142808c00 <line:2:1, line:5:1>     |-CallExpr 0x1421285d0 <line:3:9, col:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142128400 <col:9> 'int ()' Function 0x142128348 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x142128540 <col:31, col:64> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x142128500 <col:31> 'int ()' Function 0x142128448 'GDM_IS_SESSION_SETTINGS' 'int ()'     | | `-RecoveryExpr 0x142128520 <col:56> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1421285b0 <col:67> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1421287d8 <line:4:9, col:54>       `-CallExpr 0x1421287b0 <col:16, col:54> '<dependent type>' contains-errors         |-DeclRefExpr 0x1421286e0 <col:16> 'int ()' Function 0x142128628 'g_strdup' 'int ()'         `-CXXDependentScopeMemberExpr 0x142128768 <col:26, col:42> '<dependent type>' contains-errors lvalue ->session_name           `-CXXDependentScopeMemberExpr 0x142128720 <col:26, col:36> '<dependent type>' contains-errors lvalue ->priv             `-RecoveryExpr 0x142128700 <col:26> '<dependent type>' contains-errors lvalue ","21166":"`-FunctionDecl 0x1569281c8  line:1:6 referenced invalid isStaleTopologyVersion 'int (int)'   |-ParmVarDecl 0x1569280f0 <col:29, <invalid sloc>> col:34 invalid 'int'   `-CompoundStmt 0x1569285e0 <line:2:82, line:10:1>     `-IfStmt 0x1569285a8 <line:3:5, line:7:5>       |-RecoveryExpr 0x156928528 <line:3:9, line:5:80> '_Bool' contains-errors       `-CompoundStmt 0x156928590 <col:83, line:7:5>         `-ReturnStmt 0x156928580 <line:6:9, col:16>           `-RecoveryExpr 0x156928560 <col:16> '<dependent type>' contains-errors lvalue ","20818":"`-FunctionDecl 0x12c8274d8  line:1:17 invalid imap_state_starttls_resp 'int (struct connectdata *, int, int)' static   |-ParmVarDecl 0x12c80e268 <col:42, col:62> col:62 used conn 'struct connectdata *'   |-ParmVarDecl 0x12c80e2e8 <line:2:42, col:46> col:46 used imapcode 'int'   |-ParmVarDecl 0x12c80e368 <line:3:42, col:52> col:52 invalid instate 'int'   `-CompoundStmt 0x12c8280b8 <line:4:1, line:22:1>     |-DeclStmt 0x12c8277e8 <line:6:3, col:38>     | |-RecordDecl 0x12c827598 <col:3, col:10> col:10 struct Curl_easy     | `-VarDecl 0x12c827708 <col:3, col:34> col:21 used data 'struct Curl_easy *' cinit     |   `-RecoveryExpr 0x12c8277a8 <col:28, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c827770 <col:28> 'struct connectdata *' lvalue ParmVar 0x12c80e268 'conn' 'struct connectdata *'     |-CStyleCastExpr 0x12c827848 <line:8:3, col:9> 'void' contains-errors <ToVoid>     | `-ImplicitCastExpr 0x12c827830 <col:9> '<dependent type>' contains-errors <LValueToRValue> part_of_explicit_cast     |   `-RecoveryExpr 0x12c827800 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c828040 <line:10:3, line:19:5> has_else     | |-BinaryOperator 0x12c8278e8 <line:10:6, col:18> 'int' contains-errors '!='     | | |-DeclRefExpr 0x12c827870 <col:6> 'int' lvalue ParmVar 0x12c80e2e8 'imapcode' 'int'     | | `-RecoveryExpr 0x12c8278c8 <col:18> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12c827ea8 <col:32, line:17:3>     | | `-IfStmt 0x12c827e78 <line:11:5, line:16:7> has_else     | |   |-BinaryOperator 0x12c827a08 <line:11:8, col:29> 'int' contains-errors '!='     | |   | |-CXXDependentScopeMemberExpr 0x12c827968 <col:8, col:18> '<dependent type>' contains-errors lvalue .use_ssl     | |   | | `-RecoveryExpr 0x12c827940 <col:8, col:14> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x12c827908 <col:8> 'struct Curl_easy *' contains-errors lvalue Var 0x12c827708 'data' 'struct Curl_easy *'     | |   | `-RecoveryExpr 0x12c8279e8 <col:29> '<dependent type>' contains-errors lvalue     | |   |-CompoundStmt 0x12c827ce0 <col:45, line:14:5>     | |   | `-CallExpr 0x12c827c68 <line:12:7, col:24> 'int' contains-errors     | |   |   |-ImplicitCastExpr 0x12c827c50 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   |   | `-DeclRefExpr 0x12c827b80 <col:7> 'int ()' Function 0x12c827ac8 'failf' 'int ()'     | |   |   |-ImplicitCastExpr 0x12c827c98 <col:13> 'struct Curl_easy *' contains-errors <LValueToRValue>     | |   |   | `-DeclRefExpr 0x12c827ba0 <col:13> 'struct Curl_easy *' contains-errors lvalue Var 0x12c827708 'data' 'struct Curl_easy *'     | |   |   `-ImplicitCastExpr 0x12c827cb0 <col:19> 'char *' <ArrayToPointerDecay>     | |   |     `-StringLiteral 0x12c827c00 <col:19> 'char[4]' lvalue \"STR\"     | |   `-NullStmt 0x12c827e70 <line:16:7>     | `-NullStmt 0x12c828038 <line:19:5>     `-ReturnStmt 0x12c8280a8 <line:21:3, col:10>       `-RecoveryExpr 0x12c828088 <col:10> '<dependent type>' contains-errors lvalue ","20659":"`-FunctionDecl 0x14d80df18  line:1:1 invalid suspend_job 'int (int *, int *, int *)'   |-ParmVarDecl 0x14d80dd28 <col:14, col:25> col:25 invalid window 'int *'   |-ParmVarDecl 0x14d80dda8 <line:2:14, col:25> col:25 invalid job 'int *'   |-ParmVarDecl 0x14d80de28 <line:3:14, col:25> col:25 invalid manager 'int *'   `-CompoundStmt 0x14d80e208 <line:4:1, line:6:1>     `-CallExpr 0x14d80e1d8 <line:5:9, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d80e130 <col:9> 'int ()' Function 0x14d80e078 'gs_job_suspend' 'int ()'       |-RecoveryExpr 0x14d80e150 <col:25> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14d80e1b8 <col:30> '<dependent type>' contains-errors lvalue ","21231":"`-FunctionDecl 0x12c928238  line:1:1 PHP_METHOD 'int (int, int)'   |-ParmVarDecl 0x12c928158 <col:12> col:12 imagickkernel 'int'   |-ParmVarDecl 0x12c9280d8 <col:27> col:27 addkernel 'int'   `-CompoundStmt 0x12d009250 <line:2:1, line:34:1>     |-IfStmt 0x12c9286d8 <line:12:2, line:14:2>     | |-RecoveryExpr 0x12c928690 <line:12:6, col:102> '_Bool' contains-errors     | `-CompoundStmt 0x12c9286c0 <col:111, line:14:2>     |   `-ReturnStmt 0x12c9286b0 <line:13:3>     |-IfStmt 0x12d0090d0 <line:19:2, line:22:2>     | |-RecoveryExpr 0x12d008d98 <line:19:6, col:29> '_Bool' contains-errors     | `-CompoundStmt 0x12d0090b8 <col:35, line:22:2>     |   `-CallExpr 0x12d009098 <line:21:3, col:15> 'int'     |     `-ImplicitCastExpr 0x12d009080 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12d009060 <col:3> 'int ()' Function 0x12d008fa8 'RETURN_NULL' 'int ()'     |-DoStmt 0x12d009120 <line:25:2, line:28:30>     | |-CompoundStmt 0x12d0090f0 <line:25:5, line:28:2>     | `-RecoveryExpr 0x12d009100 <col:11, col:26> '_Bool' contains-errors     `-ReturnStmt 0x12d009240 <line:33:2> ","20552":"`-FunctionDecl 0x14a928750  line:1:13 rxrpc_free_krb5_tagged 'void (struct krb5_tagged_data *)' static   |-ParmVarDecl 0x14a928648 <col:36, col:61> col:61 used td 'struct krb5_tagged_data *'   `-CompoundStmt 0x14a940c18 <line:2:1, line:4:1>     `-CallExpr 0x14a940bf0 <line:3:2, col:16> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a940b70 <col:2> 'int ()' Function 0x14a940ab8 'kfree' 'int ()'       `-RecoveryExpr 0x14a940bc8 <col:8, col:12> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14a940b90 <col:8> 'struct krb5_tagged_data *' lvalue ParmVar 0x14a928648 'td' 'struct krb5_tagged_data *' ","20934":"`-FunctionDecl 0x131829c08  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x131829d08 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x131829d70 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x131829dd8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x131829cb0 <<invalid sloc>> Implicit 882 ","20314":"`-FunctionDecl 0x149928710  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x149941830 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x149941898 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x149941900 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1499287b8 <<invalid sloc>> Implicit 900 ","20246":"`-FunctionDecl 0x14a01e9f8  line:1:12 invalid can_run_requests 'int (int *)' static   |-ParmVarDecl 0x14a01e928 <col:29, col:47> col:47 invalid conn 'int *'   `-CompoundStmt 0x14a01ee70 <line:2:1, line:5:1>     `-ReturnStmt 0x14a01ee60 <line:3:5, line:4:47>       `-BinaryOperator 0x14a01ee40 <line:3:12, line:4:47> 'int' contains-errors '<'         |-BinaryOperator 0x14a01ec98 <line:3:12, col:72> '<dependent type>' contains-errors '+'         | |-CXXDependentScopeMemberExpr 0x14a01eb58 <col:12, col:35> '<dependent type>' contains-errors lvalue .half_closed         | | `-CXXDependentScopeMemberExpr 0x14a01eb10 <col:12, col:30> '<dependent type>' contains-errors lvalue .pull         | |   `-CXXDependentScopeMemberExpr 0x14a01eac8 <col:12, col:18> '<dependent type>' contains-errors lvalue ->num_streams         | |     `-RecoveryExpr 0x14a01eaa8 <col:12> '<dependent type>' contains-errors lvalue         | `-CXXDependentScopeMemberExpr 0x14a01ec50 <col:49, col:72> '<dependent type>' contains-errors lvalue .half_closed         |   `-CXXDependentScopeMemberExpr 0x14a01ec08 <col:49, col:67> '<dependent type>' contains-errors lvalue .push         |     `-CXXDependentScopeMemberExpr 0x14a01ebc0 <col:49, col:55> '<dependent type>' contains-errors lvalue ->num_streams         |       `-RecoveryExpr 0x14a01eba0 <col:49> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x14a01edf8 <line:4:12, col:47> '<dependent type>' contains-errors lvalue .max_concurrent_requests_per_connection           `-CXXDependentScopeMemberExpr 0x14a01edb0 <col:12, col:41> '<dependent type>' contains-errors lvalue ->http2             `-CXXDependentScopeMemberExpr 0x14a01ed68 <col:12, col:29> '<dependent type>' contains-errors lvalue ->globalconf               `-CXXDependentScopeMemberExpr 0x14a01ed20 <col:12, col:24> '<dependent type>' contains-errors lvalue .ctx                 `-CXXDependentScopeMemberExpr 0x14a01ecd8 <col:12, col:18> '<dependent type>' contains-errors lvalue ->super                   `-RecoveryExpr 0x14a01ecb8 <col:12> '<dependent type>' contains-errors lvalue ","20664":"`-FunctionDecl 0x10700a600  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x10700a700 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x10700a768 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x10700a7d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x10700a6a8 <<invalid sloc>> Implicit 882 ","21098":"`-FunctionDecl 0x132940d58  line:1:24 invalid nft_set_lookup_byhandle 'struct nft_set *(const struct nft_table *, const struct nlattr *, int)' static   |-ParmVarDecl 0x1329286e8 <col:48, col:72> col:72 used table 'const struct nft_table *'   |-ParmVarDecl 0x132940ac8 <line:2:13, col:34> col:34 used nla 'const struct nlattr *'   |-ParmVarDecl 0x132940b60 <line:3:13, col:16> col:16 invalid genmask 'int'   `-CompoundStmt 0x132941950 <line:4:1, line:13:1>     |-DeclStmt 0x132940f10 <line:5:2, col:21>     | `-VarDecl 0x132940ea8 <col:2, col:18> col:18 used set 'struct nft_set *'     |-CallExpr 0x1329411a8 <line:7:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132941080 <col:2> 'int ()' Function 0x132940fc8 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x1329410a0 <col:22> 'struct nft_set *' lvalue Var 0x132940ea8 'set' 'struct nft_set *'     | |-UnaryOperator 0x132941120 <col:27, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1329410f8 <col:28, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1329410c0 <col:28> 'const struct nft_table *' lvalue ParmVar 0x1329286e8 'table' 'const struct nft_table *'     | `-RecoveryExpr 0x132941188 <col:41> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x132941740 <col:47, line:11:2>     | `-IfStmt 0x132941720 <line:8:3, line:10:11>     |   |-BinaryOperator 0x1329416b8 <line:8:7, line:9:38> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x132941528 <line:8:7, col:46> 'int' contains-errors '=='     |   | | |-CallExpr 0x1329414a0 <col:7, col:36> 'int'     |   | | | |-ImplicitCastExpr 0x132941488 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x1329412c0 <col:7> 'int ()' Function 0x132941208 'be64_to_cpu' 'int ()'     |   | | | `-CallExpr 0x132941448 <col:19, col:35> 'int'     |   | | |   |-ImplicitCastExpr 0x132941430 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | `-DeclRefExpr 0x1329413c0 <col:19> 'int ()' Function 0x132941308 'nla_get_be64' 'int ()'     |   | | |   `-ImplicitCastExpr 0x132941470 <col:32> 'const struct nlattr *' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x1329413e0 <col:32> 'const struct nlattr *' lvalue ParmVar 0x132940ac8 'nla' 'const struct nlattr *'     |   | | `-RecoveryExpr 0x132941500 <col:41, col:46> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1329414c8 <col:41> 'struct nft_set *' lvalue Var 0x132940ea8 'set' 'struct nft_set *'     |   | `-CallExpr 0x132941688 <line:9:7, col:38> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x132941628 <col:7> 'int ()' Function 0x132941570 'nft_active_genmask' 'int ()'     |   |   |-DeclRefExpr 0x132941648 <col:26> 'struct nft_set *' lvalue Var 0x132940ea8 'set' 'struct nft_set *'     |   |   `-RecoveryExpr 0x132941668 <col:31> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x132941710 <line:10:4, col:11>     |     `-ImplicitCastExpr 0x1329416f8 <col:11> 'struct nft_set *' <LValueToRValue>     |       `-DeclRefExpr 0x1329416d8 <col:11> 'struct nft_set *' lvalue Var 0x132940ea8 'set' 'struct nft_set *'     `-ReturnStmt 0x132941940 <line:12:2, col:24>       `-CallExpr 0x132941918 <col:9, col:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x132941838 <col:9> 'int ()' Function 0x132941780 'ERR_PTR' 'int ()'         `-UnaryOperator 0x132941900 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow           `-ImplicitCastExpr 0x1329418e8 <col:18> '<dependent type>' contains-errors <LValueToRValue>             `-RecoveryExpr 0x1329418c8 <col:18> '<dependent type>' contains-errors lvalue ","20819":"`-FunctionDecl 0x130128750  line:1:6 kvm_rtc_eoi_tracking_restore_one 'void (struct kvm_vcpu *)'   |-ParmVarDecl 0x130128648 <col:39, col:56> col:56 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x130141278 <line:2:1, line:8:1>     |-DeclStmt 0x130140d28 <line:3:2, col:53>     | |-RecordDecl 0x130140a48 <col:2, col:9> col:9 struct kvm_ioapic     | `-VarDecl 0x130140bb8 <col:2, col:46> col:21 used ioapic 'struct kvm_ioapic *' cinit     |   `-CXXDependentScopeMemberExpr 0x130140cc8 <col:30, col:46> '<dependent type>' contains-errors lvalue .vioapic     |     `-CXXDependentScopeMemberExpr 0x130140c80 <col:30, col:41> '<dependent type>' contains-errors lvalue ->arch     |       `-RecoveryExpr 0x130140c58 <col:30, col:36> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x130140c20 <col:30> 'struct kvm_vcpu *' lvalue ParmVar 0x130128648 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x130140f08 <line:5:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130140e70 <col:2> 'int ()' Function 0x130140db8 'spin_lock' 'int ()'     | `-UnaryOperator 0x130140ef0 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x130140ec8 <col:13, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130140e90 <col:13> 'struct kvm_ioapic *' contains-errors lvalue Var 0x130140bb8 'ioapic' 'struct kvm_ioapic *'     |-CallExpr 0x130141098 <line:6:2, col:41> 'int'     | |-ImplicitCastExpr 0x130141080 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x130141010 <col:2> 'int ()' Function 0x130140f58 '__rtc_irq_eoi_tracking_restore_one' 'int ()'     | `-ImplicitCastExpr 0x1301410c0 <col:37> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x130141030 <col:37> 'struct kvm_vcpu *' lvalue ParmVar 0x130128648 'vcpu' 'struct kvm_vcpu *'     `-CallExpr 0x130141250 <line:7:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x1301411b8 <col:2> 'int ()' Function 0x130141100 'spin_unlock' 'int ()'       `-UnaryOperator 0x130141238 <col:14, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x130141210 <col:15, col:23> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x1301411d8 <col:15> 'struct kvm_ioapic *' contains-errors lvalue Var 0x130140bb8 'ioapic' 'struct kvm_ioapic *' ","20625":"`-FunctionDecl 0x139827608  line:1:1 invalid pfm_setup_buffer_fmt 'int (struct task_struct *, int *, unsigned int, unsigned int, int *)'   |-ParmVarDecl 0x13980e248 <col:22, col:42> col:42 used task 'struct task_struct *'   |-ParmVarDecl 0x13980e318 <col:48, col:63> col:63 referenced invalid ctx 'int *'   |-ParmVarDecl 0x13980e398 <col:68, col:81> col:81 used ctx_flags 'unsigned int'   |-ParmVarDecl 0x139827418 <line:2:8, col:21> col:21 used cpu 'unsigned int'   |-ParmVarDecl 0x139827498 <col:26, col:43> col:43 referenced invalid arg 'int *'   `-CompoundStmt 0x139829ed8 <line:3:1, line:46:1>     |-DeclStmt 0x1398277a8 <line:5:2, col:26>     | `-VarDecl 0x139827720 <col:2, col:23> col:16 used size 'unsigned long' cinit     |   `-IntegerLiteral 0x139827788 <col:23> 'unsigned long' 0     |-DeclStmt 0x139827878 <line:6:2, col:20>     | `-VarDecl 0x1398277d8 <col:2, col:16> col:8 used uaddr 'void *' cinit     |   `-RecoveryExpr 0x139827858 <col:16> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x139827948 <line:7:2, col:22>     | `-VarDecl 0x1398278a8 <col:2, col:18> col:8 used fmt_arg 'void *' cinit     |   `-RecoveryExpr 0x139827928 <col:18> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x139827a00 <line:8:2, col:13>     | `-VarDecl 0x139827978 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x1398279e0 <col:12> 'int' 0     |-IfStmt 0x139827fc0 <line:13:2, line:16:2>     | |-BinaryOperator 0x139827cb0 <line:13:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x139827c70 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x139827c90 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x139827fa0 <col:19, line:16:2>     |   |-CallExpr 0x139827ed0 <line:14:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x139827db0 <col:3> 'int ()' Function 0x139827cf8 'DPRINT' 'int ()'     |   | `-ParenExpr 0x139827eb0 <col:10, col:27> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x139827e90 <col:11, col:24> '<dependent type>' contains-errors ','     |   |     |-StringLiteral 0x139827e10 <col:11> 'char[4]' lvalue \"STR\"     |   |     `-RecoveryExpr 0x139827e68 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x139827e30 <col:18> 'struct task_struct *' lvalue ParmVar 0x13980e248 'task' 'struct task_struct *'     |   `-ReturnStmt 0x139827f90 <line:15:3, col:11>     |     `-UnaryOperator 0x139827f78 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x139827f60 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x139827f40 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139828230 <line:19:2, col:57>     | |-CXXDependentScopeMemberExpr 0x139828060 <col:6, col:11> '<dependent type>' contains-errors lvalue ->fmt_arg_size     | | `-RecoveryExpr 0x139828040 <col:6> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x139828210 <col:25, col:57> 'void *' contains-errors '='     |   |-DeclRefExpr 0x1398280a8 <col:25> 'void *' contains-errors lvalue Var 0x1398278a8 'fmt_arg' 'void *'     |   `-CallExpr 0x1398281e8 <col:35, col:57> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1398281a8 <col:35> 'int ()' Function 0x1398280f0 'PFM_CTXARG_BUF_ARG' 'int ()'     |     `-RecoveryExpr 0x1398281c8 <col:54> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1398292f0 <line:21:2, col:63> 'int' contains-errors '='     | |-DeclRefExpr 0x139828250 <col:2> 'int' lvalue Var 0x139827978 'ret' 'int'     | `-CallExpr 0x1398292a8 <col:8, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x139828350 <col:8> 'int ()' Function 0x139828298 'pfm_buf_fmt_validate' 'int ()'     |   |-RecoveryExpr 0x139829288 <col:29> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x139828388 <col:34> 'struct task_struct *' lvalue ParmVar 0x13980e248 'task' 'struct task_struct *'     |   |-DeclRefExpr 0x1398283a8 <col:40> 'unsigned int' lvalue ParmVar 0x13980e398 'ctx_flags' 'unsigned int'     |   |-DeclRefExpr 0x1398283c8 <col:51> 'unsigned int' lvalue ParmVar 0x139827418 'cpu' 'unsigned int'     |   `-DeclRefExpr 0x139829200 <col:56> 'void *' contains-errors lvalue Var 0x1398278a8 'fmt_arg' 'void *'     |-CallExpr 0x1398294f0 <line:23:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139829310 <col:2> 'int ()' Function 0x139827cf8 'DPRINT' 'int ()'     | `-ParenExpr 0x1398294d0 <col:9, col:56> 'int' contains-errors     |   `-BinaryOperator 0x1398294b0 <col:10, col:53> 'int' contains-errors ','     |     |-BinaryOperator 0x139829470 <col:10, col:44> 'void *' contains-errors ','     |     | |-BinaryOperator 0x139829430 <col:10, col:39> 'unsigned int' contains-errors ','     |     | | |-BinaryOperator 0x1398293f0 <col:10, col:28> 'unsigned int' contains-errors ','     |     | | | |-BinaryOperator 0x1398293b0 <col:10, col:23> '<dependent type>' contains-errors ','     |     | | | | |-StringLiteral 0x139829330 <col:10> 'char[4]' lvalue \"STR\"     |     | | | | `-RecoveryExpr 0x139829388 <col:17, col:23> '<dependent type>' contains-errors lvalue     |     | | | |   `-DeclRefExpr 0x139829350 <col:17> 'struct task_struct *' lvalue ParmVar 0x13980e248 'task' 'struct task_struct *'     |     | | | `-DeclRefExpr 0x1398293d0 <col:28> 'unsigned int' lvalue ParmVar 0x13980e398 'ctx_flags' 'unsigned int'     |     | | `-DeclRefExpr 0x139829410 <col:39> 'unsigned int' lvalue ParmVar 0x139827418 'cpu' 'unsigned int'     |     | `-DeclRefExpr 0x139829450 <col:44> 'void *' contains-errors lvalue Var 0x1398278a8 'fmt_arg' 'void *'     |     `-DeclRefExpr 0x139829490 <col:53> 'int' lvalue Var 0x139827978 'ret' 'int'     |-IfStmt 0x1398295b8 <line:25:2, col:16>     | |-ImplicitCastExpr 0x139829538 <col:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x139829518 <col:6> 'int' lvalue Var 0x139827978 'ret' 'int'     | `-GotoStmt 0x1398295a0 <col:11, col:16> 'error' 0x139829550     |-IfStmt 0x1398298c8 <line:32:2, col:16>     | |-ImplicitCastExpr 0x139829898 <col:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x139829878 <col:6> 'int' lvalue Var 0x139827978 'ret' 'int'     | `-GotoStmt 0x1398298b0 <col:11, col:16> 'error' 0x139829550     |-IfStmt 0x139829c48 <line:34:2, line:41:2>     | |-ImplicitCastExpr 0x139829908 <line:34:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x1398298e8 <col:6> 'unsigned long' lvalue Var 0x139827720 'size' 'unsigned long'     | `-CompoundStmt 0x139829c28 <col:12, line:41:2>     |   |-IfStmt 0x139829b38 <line:37:3, col:17>     |   | |-ImplicitCastExpr 0x139829b08 <col:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x139829ae8 <col:7> 'int' lvalue Var 0x139827978 'ret' 'int'     |   | `-GotoStmt 0x139829b20 <col:12, col:17> 'error' 0x139829550     |   `-BinaryOperator 0x139829c08 <line:40:3, col:25> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x139829ba0 <col:3, col:8> '<dependent type>' contains-errors lvalue ->ctx_smpl_vaddr     |     | `-RecoveryExpr 0x139829b78 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x139829b58 <col:3> 'int *' lvalue ParmVar 0x139827498 'arg' 'int *'     |     `-DeclRefExpr 0x139829be8 <col:25> 'void *' contains-errors lvalue Var 0x1398277d8 'uaddr' 'void *'     `-LabelStmt 0x139829eb8 <line:44:1, line:45:9> 'error'       `-ReturnStmt 0x139829ea8 <col:2, col:9>         `-ImplicitCastExpr 0x139829e90 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x139829e70 <col:9> 'int' lvalue Var 0x139827978 'ret' 'int' ","20550":"`-FunctionDecl 0x1559281a0  col:20 switch_to_bitmap 'void (unsigned long)' static inline   |-ParmVarDecl 0x1559280d8 <col:37, col:51> col:51 tifp 'unsigned long'   `-CompoundStmt 0x155928298 <col:57, col:59> ","20368":"`-FunctionDecl 0x14d0279a8  line:1:20 invalid winbindd_lookupsids_send 'struct tevent_req *(int *, struct tevent_context *, struct winbindd_cli_state *, struct winbindd_request *)'   |-ParmVarDecl 0x14d00ddc8 <col:45, col:57> col:57 invalid mem_ctx 'int *'   |-ParmVarDecl 0x14d027400 <line:2:10, col:33> col:33 used ev 'struct tevent_context *'   |-ParmVarDecl 0x14d0275d8 <line:3:9, col:36> col:36 cli 'struct winbindd_cli_state *'   |-ParmVarDecl 0x14d0277a8 <line:4:9, col:34> col:34 used request 'struct winbindd_request *'   `-CompoundStmt 0x14d02ac08 <line:5:1, line:38:1>     |-DeclStmt 0x14d027c08 <line:6:2, col:33>     | |-VarDecl 0x14d027af8 <col:2, col:21> col:21 used req 'struct tevent_req *'     | `-VarDecl 0x14d027b88 <col:2, col:27> col:27 used subreq 'struct tevent_req *'     |-DeclStmt 0x14d027e08 <line:7:2, col:41>     | |-RecordDecl 0x14d027c20 <col:2, col:9> col:9 struct winbindd_lookupsids_state     | `-VarDecl 0x14d027d88 <col:2, col:36> col:36 used state 'struct winbindd_lookupsids_state *'     |-IfStmt 0x14d028170 <line:11:2, line:13:2>     | |-BinaryOperator 0x14d0280f0 <line:11:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14d028078 <col:6> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *'     | | `-RecoveryExpr 0x14d0280d0 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d028158 <col:19, line:13:2>     |   `-ReturnStmt 0x14d028148 <line:12:3, col:10>     |     `-RecoveryExpr 0x14d028128 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d028378 <line:15:2, col:18> 'int'     | |-ImplicitCastExpr 0x14d028360 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14d028270 <col:2> 'int ()' Function 0x14d0281b8 'DEBUG' 'int ()'     | |-IntegerLiteral 0x14d028290 <col:8> 'int' 3     | `-ImplicitCastExpr 0x14d0283a8 <col:11, col:17> 'char *' <ArrayToPointerDecay>     |   `-ParenExpr 0x14d028310 <col:11, col:17> 'char[4]' lvalue     |     `-StringLiteral 0x14d0282f0 <col:12> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14d0295e0 <line:17:2, line:20:2>     | |-BinaryOperator 0x14d029248 <line:17:6, col:28> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14d029200 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14d0283c0 <col:6> 'struct winbindd_request *' lvalue ParmVar 0x14d0277a8 'request' 'struct winbindd_request *'     | | `-IntegerLiteral 0x14d029228 <col:28> 'int' 0     | `-CompoundStmt 0x14d0295c0 <col:31, line:20:2>     |   |-CallExpr 0x14d0293a0 <line:18:3, col:22> 'int'     |   | |-ImplicitCastExpr 0x14d029388 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d029348 <col:3> 'int ()' Function 0x14d029290 'tevent_req_done' 'int ()'     |   | `-ImplicitCastExpr 0x14d0293c8 <col:19> 'struct tevent_req *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14d029368 <col:19> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *'     |   `-ReturnStmt 0x14d0295b0 <line:19:3, col:33>     |     `-ImplicitCastExpr 0x14d029598 <col:10, col:33> 'struct tevent_req *' <IntegralToPointer>     |       `-CallExpr 0x14d029538 <col:10, col:33> 'int'     |         |-ImplicitCastExpr 0x14d029520 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x14d0294c0 <col:10> 'int ()' Function 0x14d029408 'tevent_req_post' 'int ()'     |         |-ImplicitCastExpr 0x14d029568 <col:26> 'struct tevent_req *' <LValueToRValue>     |         | `-DeclRefExpr 0x14d0294e0 <col:26> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *'     |         `-ImplicitCastExpr 0x14d029580 <col:31> 'struct tevent_context *' <LValueToRValue>     |           `-DeclRefExpr 0x14d029500 <col:31> 'struct tevent_context *' lvalue ParmVar 0x14d027400 'ev' 'struct tevent_context *'     |-IfStmt 0x14d029b78 <line:21:2, line:25:2>     | |-BinaryOperator 0x14d029798 <line:21:6, col:56> 'int' contains-errors '!='     | | |-ArraySubscriptExpr 0x14d029760 <col:6, col:51> '<dependent type>' contains-errors lvalue     | | | |-ImplicitCastExpr 0x14d029748 <col:6, col:26> '<dependent type>' contains-errors <LValueToRValue>     | | | | `-CXXDependentScopeMemberExpr 0x14d029660 <col:6, col:26> '<dependent type>' contains-errors lvalue .data     | | | |   `-RecoveryExpr 0x14d029638 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x14d029600 <col:6> 'struct winbindd_request *' lvalue ParmVar 0x14d0277a8 'request' 'struct winbindd_request *'     | | | `-BinaryOperator 0x14d029728 <col:31, col:50> '<dependent type>' contains-errors '-'     | | |   |-RecoveryExpr 0x14d0296e0 <col:31, col:40> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x14d0296a8 <col:31> 'struct winbindd_request *' lvalue ParmVar 0x14d0277a8 'request' 'struct winbindd_request *'     | | |   `-IntegerLiteral 0x14d029708 <col:50> 'int' 1     | | `-CharacterLiteral 0x14d029780 <col:56> 'int' 0     | `-CompoundStmt 0x14d029b50 <col:62, line:25:2>     |   |-CallExpr 0x14d029850 <line:22:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x14d029838 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d0297b8 <col:3> 'int ()' Function 0x14d0281b8 'DEBUG' 'int ()'     |   | |-IntegerLiteral 0x14d0297d8 <col:9> 'int' 10     |   | `-ImplicitCastExpr 0x14d029880 <col:13, col:19> 'char *' <ArrayToPointerDecay>     |   |   `-ParenExpr 0x14d029818 <col:13, col:19> 'char[4]' lvalue     |   |     `-StringLiteral 0x14d0297f8 <col:14> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x14d029a20 <line:23:3, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d029978 <col:3> 'int ()' Function 0x14d0298c0 'tevent_req_nterror' 'int ()'     |   | |-DeclRefExpr 0x14d029998 <col:22> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *'     |   | `-RecoveryExpr 0x14d029a00 <col:27> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14d029b40 <line:24:3, col:33>     |     `-ImplicitCastExpr 0x14d029b28 <col:10, col:33> 'struct tevent_req *' <IntegralToPointer>     |       `-CallExpr 0x14d029ac8 <col:10, col:33> 'int'     |         |-ImplicitCastExpr 0x14d029ab0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x14d029a50 <col:10> 'int ()' Function 0x14d029408 'tevent_req_post' 'int ()'     |         |-ImplicitCastExpr 0x14d029af8 <col:26> 'struct tevent_req *' <LValueToRValue>     |         | `-DeclRefExpr 0x14d029a70 <col:26> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *'     |         `-ImplicitCastExpr 0x14d029b10 <col:31> 'struct tevent_context *' <LValueToRValue>     |           `-DeclRefExpr 0x14d029a90 <col:31> 'struct tevent_context *' lvalue ParmVar 0x14d027400 'ev' 'struct tevent_context *'     |-IfStmt 0x14d02a0e8 <line:26:2, line:31:2>     | |-UnaryOperator 0x14d029e90 <line:26:6, line:27:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14d029e50 <line:26:7, line:27:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14d029c78 <line:26:7> 'int ()' Function 0x14d029bc0 'parse_sidlist' 'int ()'     | |   |-DeclRefExpr 0x14d029c98 <col:21> 'struct winbindd_lookupsids_state *' lvalue Var 0x14d027d88 'state' 'struct winbindd_lookupsids_state *'     | |   |-CXXDependentScopeMemberExpr 0x14d029d18 <col:28, col:48> '<dependent type>' contains-errors lvalue .data     | |   | `-RecoveryExpr 0x14d029cf0 <col:28, col:37> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14d029cb8 <col:28> 'struct winbindd_request *' lvalue ParmVar 0x14d0277a8 'request' 'struct winbindd_request *'     | |   |-UnaryOperator 0x14d029dc0 <line:27:7, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-RecoveryExpr 0x14d029d98 <col:8, col:15> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14d029d60 <col:8> 'struct winbindd_lookupsids_state *' lvalue Var 0x14d027d88 'state' 'struct winbindd_lookupsids_state *'     | |   `-UnaryOperator 0x14d029e38 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x14d029e10 <col:22, col:29> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14d029dd8 <col:22> 'struct winbindd_lookupsids_state *' lvalue Var 0x14d027d88 'state' 'struct winbindd_lookupsids_state *'     | `-CompoundStmt 0x14d02a0c8 <col:40, line:31:2>     |   |-CallExpr 0x14d029f40 <line:28:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x14d029f28 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d029ea8 <col:3> 'int ()' Function 0x14d0281b8 'DEBUG' 'int ()'     |   | |-IntegerLiteral 0x14d029ec8 <col:9> 'int' 10     |   | `-ImplicitCastExpr 0x14d029f70 <col:13, col:19> 'char *' <ArrayToPointerDecay>     |   |   `-ParenExpr 0x14d029f08 <col:13, col:19> 'char[4]' lvalue     |   |     `-StringLiteral 0x14d029ee8 <col:14> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14d02a0b8 <line:30:3, col:33>     |     `-ImplicitCastExpr 0x14d02a0a0 <col:10, col:33> 'struct tevent_req *' <IntegralToPointer>     |       `-CallExpr 0x14d02a040 <col:10, col:33> 'int'     |         |-ImplicitCastExpr 0x14d02a028 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x14d029fc8 <col:10> 'int ()' Function 0x14d029408 'tevent_req_post' 'int ()'     |         |-ImplicitCastExpr 0x14d02a070 <col:26> 'struct tevent_req *' <LValueToRValue>     |         | `-DeclRefExpr 0x14d029fe8 <col:26> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *'     |         `-ImplicitCastExpr 0x14d02a088 <col:31> 'struct tevent_context *' <LValueToRValue>     |           `-DeclRefExpr 0x14d02a008 <col:31> 'struct tevent_context *' lvalue ParmVar 0x14d027400 'ev' 'struct tevent_context *'     |-BinaryOperator 0x14d02a770 <line:32:2, col:69> 'struct tevent_req *' contains-errors '='     | |-DeclRefExpr 0x14d02a108 <col:2> 'struct tevent_req *' lvalue Var 0x14d027b88 'subreq' 'struct tevent_req *'     | `-CallExpr 0x14d02a730 <col:11, col:69> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d02a610 <col:11> 'int ()' Function 0x14d02a150 'wb_lookupsids_send' 'int ()'     |   |-DeclRefExpr 0x14d02a630 <col:30> 'struct winbindd_lookupsids_state *' lvalue Var 0x14d027d88 'state' 'struct winbindd_lookupsids_state *'     |   |-DeclRefExpr 0x14d02a650 <col:37> 'struct tevent_context *' lvalue ParmVar 0x14d027400 'ev' 'struct tevent_context *'     |   |-RecoveryExpr 0x14d02a6a8 <col:41, col:48> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14d02a670 <col:41> 'struct winbindd_lookupsids_state *' lvalue Var 0x14d027d88 'state' 'struct winbindd_lookupsids_state *'     |   `-RecoveryExpr 0x14d02a708 <col:54, col:61> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14d02a6d0 <col:54> 'struct winbindd_lookupsids_state *' lvalue Var 0x14d027d88 'state' 'struct winbindd_lookupsids_state *'     |-IfStmt 0x14d02aa60 <line:33:2, line:35:2>     | |-CallExpr 0x14d02a8e8 <line:33:6, col:34> 'int'     | | |-ImplicitCastExpr 0x14d02a8d0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14d02a870 <col:6> 'int ()' Function 0x14d02a7b8 'tevent_req_nomem' 'int ()'     | | |-ImplicitCastExpr 0x14d02a918 <col:23> 'struct tevent_req *' <LValueToRValue>     | | | `-DeclRefExpr 0x14d02a890 <col:23> 'struct tevent_req *' lvalue Var 0x14d027b88 'subreq' 'struct tevent_req *'     | | `-ImplicitCastExpr 0x14d02a930 <col:31> 'struct tevent_req *' <LValueToRValue>     | |   `-DeclRefExpr 0x14d02a8b0 <col:31> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *'     | `-CompoundStmt 0x14d02aa48 <col:37, line:35:2>     |   `-ReturnStmt 0x14d02aa38 <line:34:3, col:33>     |     `-ImplicitCastExpr 0x14d02aa20 <col:10, col:33> 'struct tevent_req *' <IntegralToPointer>     |       `-CallExpr 0x14d02a9c0 <col:10, col:33> 'int'     |         |-ImplicitCastExpr 0x14d02a9a8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x14d02a948 <col:10> 'int ()' Function 0x14d029408 'tevent_req_post' 'int ()'     |         |-ImplicitCastExpr 0x14d02a9f0 <col:26> 'struct tevent_req *' <LValueToRValue>     |         | `-DeclRefExpr 0x14d02a968 <col:26> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *'     |         `-ImplicitCastExpr 0x14d02aa08 <col:31> 'struct tevent_context *' <LValueToRValue>     |           `-DeclRefExpr 0x14d02a988 <col:31> 'struct tevent_context *' lvalue ParmVar 0x14d027400 'ev' 'struct tevent_context *'     `-ReturnStmt 0x14d02abf8 <line:37:2, col:9>       `-ImplicitCastExpr 0x14d02abe0 <col:9> 'struct tevent_req *' <LValueToRValue>         `-DeclRefExpr 0x14d02abc0 <col:9> 'struct tevent_req *' lvalue Var 0x14d027af8 'req' 'struct tevent_req *' ","20866":"`-FunctionDecl 0x155918d18  line:1:21 invalid PHP_to_XMLRPC_worker 'int (const char *, int *, int)' static   |-ParmVarDecl 0x155918af0 <col:43, col:55> col:55 used key 'const char *'   |-ParmVarDecl 0x155918ba8 <col:60, col:66> col:66 invalid in_val 'int *'   |-ParmVarDecl 0x155918c28 <col:74, col:78> col:78 depth 'int'   `-CompoundStmt 0x1550145f8 <line:2:1, line:95:1>     `-IfStmt 0x1550145d8 <line:5:2, line:93:2>       |-RecoveryExpr 0x155918dd8 <line:5:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1550145b8 <col:14, line:93:2>         |-CallExpr 0x155919000 <line:9:3, col:18> '<dependent type>' contains-errors         | |-DeclRefExpr 0x155918f50 <col:3> 'int ()' Function 0x155918e98 'ZVAL_UNDEF' 'int ()'         | `-UnaryOperator 0x155918fe8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x155918fc8 <col:15> '<dependent type>' contains-errors lvalue         `-IfStmt 0x155014598 <line:12:3, line:92:3>           |-UnaryOperator 0x155932378 <line:12:7, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow           | `-CallExpr 0x155932350 <col:8, col:21> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x1559322b8 <col:8> 'int ()' Function 0x155932200 'Z_ISUNDEF' 'int ()'           |   `-RecoveryExpr 0x155932330 <col:18> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x155014580 <col:24, line:92:3>             `-SwitchStmt 0x1559323e0 <line:13:4, line:91:4>               |-RecoveryExpr 0x1559323c0 <line:13:12> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x155014520 <col:18, line:91:4>                 |-IfStmt 0x155932c08 <line:15:6, line:20:6> has_else                 | |-BinaryOperator 0x155932600 <line:15:10, col:25> 'int' contains-errors '=='                 | | |-CallExpr 0x1559325b8 <col:10, col:20> '<dependent type>' contains-errors                 | | | |-DeclRefExpr 0x155932500 <col:10> 'int ()' Function 0x155932448 'Z_TYPE' 'int ()'                 | | | `-RecoveryExpr 0x155932598 <col:17> '<dependent type>' contains-errors lvalue                 | | `-RecoveryExpr 0x1559325e0 <col:25> '<dependent type>' contains-errors lvalue                 | |-CompoundStmt 0x1559328c8 <col:34, line:18:6>                 | `-CompoundStmt 0x155932bf8 <col:13, line:20:6>                 |-BreakStmt 0x155932c38 <line:21:6>                 |-BreakStmt 0x155932e80 <line:25:6>                 |-BreakStmt 0x1559330c8 <line:29:6>                 |-BreakStmt 0x1550135f8 <line:33:6>                 |-BreakStmt 0x155013920 <line:37:6>                 |-BreakStmt 0x155013aa8 <line:41:6>                 |-CompoundStmt 0x1550144d8 <line:43:6, line:87:6>                 | `-IfStmt 0x155013d60 <line:52:7, line:55:7>                 |   |-RecoveryExpr 0x155013bd0 <line:52:11, col:39> '_Bool' contains-errors                 |   `-CompoundStmt 0x155013d50 <col:42, line:55:7>                 |-BreakStmt 0x1550144f0 <line:88:6>                 `-DefaultStmt 0x155014500 <line:89:5, line:90:6>                   `-BreakStmt 0x1550144f8 <col:6> ","21225":"`-FunctionDecl 0x12e928240  line:1:11 ndpi_detection_get_sizeof_ndpi_flow_tcp_struct '__int128_t (void)'   `-CompoundStmt 0x12e941a60 <col:64, line:3:1> ","21141":"`-FunctionDecl 0x1370105f8  line:1:8 invalid txtin_initialize 'int (int *)'   |-ParmVarDecl 0x137010528 <col:25, col:36> col:36 invalid filter 'int *'   `-CompoundStmt 0x137010b80 <line:2:1, line:8:1>     |-DeclStmt 0x1370107b8 <line:3:2, col:14>     | `-VarDecl 0x137010750 <col:2, col:13> col:7 used data 'char[1]'     `-ReturnStmt 0x137010b70 <line:7:2, col:9>       `-RecoveryExpr 0x137010b50 <col:9> '<dependent type>' contains-errors lvalue ","20623":"`-FunctionDecl 0x15000e038  line:1:8 invalid gf_decrypt_fragment 'int (int *, const char *, const char *, const char *, int)'   |-ParmVarDecl 0x15000dd28 <col:28, col:40> col:40 invalid mp4 'int *'   |-ParmVarDecl 0x15000dda8 <col:45, col:57> col:57 used drm_file 'const char *'   |-ParmVarDecl 0x15000de28 <col:67, col:79> col:79 used dst_file 'const char *'   |-ParmVarDecl 0x15000dea8 <col:89, col:101> col:101 used fragment_name 'const char *'   |-ParmVarDecl 0x15000df28 <col:116, col:120> col:120 invalid fs_dump_flags 'int'   `-CompoundStmt 0x15000e3a0 <line:2:1, line:4:1>     `-ReturnStmt 0x15000e390 <line:3:2, col:84>       `-CallExpr 0x15000e340 <col:9, col:84> '<dependent type>' contains-errors         |-DeclRefExpr 0x15000e260 <col:9> 'int ()' Function 0x15000e1a8 'gf_decrypt_file_ex' 'int ()'         |-RecoveryExpr 0x15000e280 <col:28> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x15000e2a0 <col:33> 'const char *' lvalue ParmVar 0x15000dda8 'drm_file' 'const char *'         |-DeclRefExpr 0x15000e2c0 <col:43> 'const char *' lvalue ParmVar 0x15000de28 'dst_file' 'const char *'         |-IntegerLiteral 0x15000e2e0 <col:53> 'int' 0         |-DeclRefExpr 0x15000e300 <col:56> 'const char *' lvalue ParmVar 0x15000dea8 'fragment_name' 'const char *'         `-RecoveryExpr 0x15000e320 <col:71> '<dependent type>' contains-errors lvalue ","21017":"`-FunctionDecl 0x12b00dd90  line:1:6 update_perf_cpu_limits 'void (void)'   `-CompoundStmt 0x12b00e298 <line:2:1, line:8:1>     |-CallExpr 0x12b00e068 <line:6:2, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b00dfc0 <col:2> 'int ()' Function 0x12b00df08 'do_div' 'int ()'     | |-RecoveryExpr 0x12b00e048 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12b00dff8 <col:14> 'int' 100     `-BinaryOperator 0x12b00e278 <line:7:2, col:40> '<dependent type>' contains-errors '='       |-CallExpr 0x12b00e230 <col:2, col:36> '<dependent type>' contains-errors       | |-DeclRefExpr 0x12b00e178 <col:2> 'int ()' Function 0x12b00e0c0 'ACCESS_ONCE' 'int ()'       | `-RecoveryExpr 0x12b00e210 <col:14> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12b00e258 <col:40> '<dependent type>' contains-errors lvalue ","20467":"`-FunctionDecl 0x131826808  line:1:24 find_msg 'struct msg_msg *(struct msg_queue *, long *, int)' static   |-ParmVarDecl 0x13180e2e8 <col:33, col:51> col:51 used msq 'struct msg_queue *'   |-ParmVarDecl 0x13180e398 <col:56, col:62> col:62 used msgtyp 'long *'   |-ParmVarDecl 0x131826618 <col:70, col:74> col:74 used mode 'int'   `-CompoundStmt 0x13182a098 <line:2:1, line:23:1>     |-DeclStmt 0x131826af8 <line:3:2, col:36>     | |-VarDecl 0x131826998 <col:2, col:18> col:18 used msg 'struct msg_msg *'     | `-VarDecl 0x131826a28 <col:2, col:32> col:24 used found 'struct msg_msg *' cinit     |   `-RecoveryExpr 0x131826ac0 <col:32> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x131826bc8 <line:4:2, col:16>     | `-VarDecl 0x131826b28 <col:2, col:15> col:7 used count 'long' cinit     |   `-ImplicitCastExpr 0x131826bb0 <col:15> 'long' <IntegralCast>     |     `-IntegerLiteral 0x131826b90 <col:15> 'int' 0     |-CallExpr 0x131826e18 <line:6:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131826cf0 <col:2> 'int ()' Function 0x131826c38 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x131826d10 <col:22> 'struct msg_msg *' lvalue Var 0x131826998 'msg' 'struct msg_msg *'     | |-UnaryOperator 0x131826d90 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x131826d68 <col:28, col:33> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x131826d30 <col:28> 'struct msg_queue *' lvalue ParmVar 0x13180e2e8 'msq' 'struct msg_queue *'     | `-RecoveryExpr 0x131826df8 <col:45> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x131829d88 <col:53, line:20:2>     | `-IfStmt 0x131829d68 <line:7:3, line:19:3>     |   |-BinaryOperator 0x131827530 <line:7:7, line:9:26> 'int' contains-errors '&&'     |   | |-CallExpr 0x131827400 <line:7:7, col:33> 'int'     |   | | |-ImplicitCastExpr 0x1318273e8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x131826f30 <col:7> 'int ()' Function 0x131826e78 'testmsg' 'int ()'     |   | | |-ImplicitCastExpr 0x131827438 <col:15> 'struct msg_msg *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x131826f50 <col:15> 'struct msg_msg *' lvalue Var 0x131826998 'msg' 'struct msg_msg *'     |   | | |-ImplicitCastExpr 0x131827450 <col:20, col:21> 'long' <LValueToRValue>     |   | | | `-UnaryOperator 0x1318273d0 <col:20, col:21> 'long' lvalue prefix '*' cannot overflow     |   | | |   `-ImplicitCastExpr 0x1318273b8 <col:21> 'long *' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x131826f70 <col:21> 'long *' lvalue ParmVar 0x13180e398 'msgtyp' 'long *'     |   | | `-ImplicitCastExpr 0x131827468 <col:29> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x131826fc0 <col:29> 'int' lvalue ParmVar 0x131826618 'mode' 'int'     |   | `-UnaryOperator 0x131827518 <line:8:7, line:9:26> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   `-CallExpr 0x1318274d0 <line:8:8, line:9:26> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x131827188 <line:8:8> 'int ()' Function 0x1318270d0 'security_msg_queue_msgrcv' 'int ()'     |   |     |-DeclRefExpr 0x1318271a8 <col:34> 'struct msg_queue *' lvalue ParmVar 0x13180e2e8 'msq' 'struct msg_queue *'     |   |     |-DeclRefExpr 0x1318271c8 <col:39> 'struct msg_msg *' lvalue Var 0x131826998 'msg' 'struct msg_msg *'     |   |     |-RecoveryExpr 0x131827480 <col:44> '<dependent type>' contains-errors lvalue     |   |     |-UnaryOperator 0x1318274b8 <line:9:13, col:14> 'long' lvalue prefix '*' cannot overflow     |   |     | `-ImplicitCastExpr 0x1318274a0 <col:14> 'long *' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x131827200 <col:14> 'long *' lvalue ParmVar 0x13180e398 'msgtyp' 'long *'     |   |     `-DeclRefExpr 0x131827250 <col:22> 'int' lvalue ParmVar 0x131826618 'mode' 'int'     |   `-CompoundStmt 0x131829d48 <col:29, line:19:3>     |     |-IfStmt 0x131829ce0 <line:10:4, line:17:12> has_else     |     | |-BinaryOperator 0x1318298c8 <line:10:8, col:51> 'int' contains-errors '&&'     |     | | |-BinaryOperator 0x1318298a8 <col:8, col:16> 'int' contains-errors '=='     |     | | | |-DeclRefExpr 0x131827550 <col:8> 'int' lvalue ParmVar 0x131826618 'mode' 'int'     |     | | | `-RecoveryExpr 0x131829888 <col:16> '<dependent type>' contains-errors lvalue     |     | | `-BinaryOperator 0x131829848 <col:36, col:51> 'int' contains-errors '!='     |     | |   |-RecoveryExpr 0x131829800 <col:36, col:41> '<dependent type>' contains-errors lvalue     |     | |   | `-DeclRefExpr 0x1318275a8 <col:36> 'struct msg_msg *' lvalue Var 0x131826998 'msg' 'struct msg_msg *'     |     | |   `-IntegerLiteral 0x131829828 <col:51> 'int' 1     |     | |-CompoundStmt 0x131829a70 <col:54, line:13:4>     |     | | |-BinaryOperator 0x1318299d8 <line:11:5, col:29> 'long' contains-errors '='     |     | | | |-UnaryOperator 0x131829920 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow     |     | | | | `-ImplicitCastExpr 0x131829908 <col:6> 'long *' <LValueToRValue>     |     | | | |   `-DeclRefExpr 0x1318298e8 <col:6> 'long *' lvalue ParmVar 0x13180e398 'msgtyp' 'long *'     |     | | | `-BinaryOperator 0x1318299b8 <col:15, col:29> '<dependent type>' contains-errors '-'     |     | | |   |-RecoveryExpr 0x131829970 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     | | |   | `-DeclRefExpr 0x131829938 <col:15> 'struct msg_msg *' lvalue Var 0x131826998 'msg' 'struct msg_msg *'     |     | | |   `-IntegerLiteral 0x131829998 <col:29> 'int' 1     |     | | `-BinaryOperator 0x131829a50 <line:12:5, col:13> 'struct msg_msg *' contains-errors '='     |     | |   |-DeclRefExpr 0x1318299f8 <col:5> 'struct msg_msg *' contains-errors lvalue Var 0x131826a28 'found' 'struct msg_msg *'     |     | |   `-ImplicitCastExpr 0x131829a38 <col:13> 'struct msg_msg *' <LValueToRValue>     |     | |     `-DeclRefExpr 0x131829a18 <col:13> 'struct msg_msg *' lvalue Var 0x131826998 'msg' 'struct msg_msg *'     |     | `-IfStmt 0x131829cb0 <line:13:11, line:17:12> has_else     |     |   |-BinaryOperator 0x131829b08 <line:13:15, col:23> 'int' contains-errors '=='     |     |   | |-DeclRefExpr 0x131829a90 <col:15> 'int' lvalue ParmVar 0x131826618 'mode' 'int'     |     |   | `-RecoveryExpr 0x131829ae8 <col:23> '<dependent type>' contains-errors lvalue     |     |   |-CompoundStmt 0x131829c50 <col:38, line:16:4>     |     |   | `-IfStmt 0x131829c30 <line:14:5, line:15:13>     |     |   |   |-BinaryOperator 0x131829bc8 <line:14:9, col:20> 'int' '=='     |     |   |   | |-ImplicitCastExpr 0x131829b98 <col:9, col:10> 'long' <LValueToRValue>     |     |   |   | | `-UnaryOperator 0x131829b60 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow     |     |   |   | |   `-ImplicitCastExpr 0x131829b48 <col:10> 'long *' <LValueToRValue>     |     |   |   | |     `-DeclRefExpr 0x131829b28 <col:10> 'long *' lvalue ParmVar 0x13180e398 'msgtyp' 'long *'     |     |   |   | `-ImplicitCastExpr 0x131829bb0 <col:20> 'long' <LValueToRValue>     |     |   |   |   `-DeclRefExpr 0x131829b78 <col:20> 'long' lvalue Var 0x131826b28 'count' 'long'     |     |   |   `-ReturnStmt 0x131829c20 <line:15:6, col:13>     |     |   |     `-ImplicitCastExpr 0x131829c08 <col:13> 'struct msg_msg *' <LValueToRValue>     |     |   |       `-DeclRefExpr 0x131829be8 <col:13> 'struct msg_msg *' lvalue Var 0x131826998 'msg' 'struct msg_msg *'     |     |   `-ReturnStmt 0x131829ca0 <line:17:5, col:12>     |     |     `-ImplicitCastExpr 0x131829c88 <col:12> 'struct msg_msg *' <LValueToRValue>     |     |       `-DeclRefExpr 0x131829c68 <col:12> 'struct msg_msg *' lvalue Var 0x131826998 'msg' 'struct msg_msg *'     |     `-UnaryOperator 0x131829d30 <line:18:4, col:9> 'long' postfix '++'     |       `-DeclRefExpr 0x131829d10 <col:4> 'long' lvalue Var 0x131826b28 'count' 'long'     `-ReturnStmt 0x13182a088 <line:22:2, col:33>       `-BinaryConditionalOperator 0x13182a048 <col:9, col:33> '<dependent type>' contains-errors         |-ImplicitCastExpr 0x13182a018 <col:9> 'struct msg_msg *' contains-errors <LValueToRValue>         | `-DeclRefExpr 0x131829da0 <col:9> 'struct msg_msg *' contains-errors lvalue Var 0x131826a28 'found' 'struct msg_msg *'         |-OpaqueValueExpr 0x13182a030 <col:9> 'struct msg_msg *' contains-errors         | `-ImplicitCastExpr 0x13182a018 <col:9> 'struct msg_msg *' contains-errors <LValueToRValue>         |   `-DeclRefExpr 0x131829da0 <col:9> 'struct msg_msg *' contains-errors lvalue Var 0x131826a28 'found' 'struct msg_msg *'         |-OpaqueValueExpr 0x13182a030 <col:9> 'struct msg_msg *' contains-errors         | `-ImplicitCastExpr 0x13182a018 <col:9> 'struct msg_msg *' contains-errors <LValueToRValue>         |   `-DeclRefExpr 0x131829da0 <col:9> 'struct msg_msg *' contains-errors lvalue Var 0x131826a28 'found' 'struct msg_msg *'         `-CallExpr 0x131829ff0 <col:18, col:33> '<dependent type>' contains-errors           |-DeclRefExpr 0x131829ea0 <col:18> 'int ()' Function 0x131829de8 'ERR_PTR' 'int ()'           `-UnaryOperator 0x131829fd8 <col:26, col:27> '<dependent type>' contains-errors prefix '-' cannot overflow             `-ImplicitCastExpr 0x131829fc0 <col:27> '<dependent type>' contains-errors <LValueToRValue>               `-RecoveryExpr 0x131829fa0 <col:27> '<dependent type>' contains-errors lvalue ","20227":"`-FunctionDecl 0x122928238  line:1:1 create_attr_sval 'int (int, char *)'   |-ParmVarDecl 0x1229280d8 <line:2:2, col:6> col:6 used attr 'int'   |-ParmVarDecl 0x122928158 <line:3:2, col:8> col:8 used s 'char *'   `-CompoundStmt 0x12300f0b0 <line:5:1, line:16:1>     |-IfStmt 0x12300f010 <line:10:2, line:11:17>     | |-BinaryOperator 0x122928580 <line:10:6, col:14> 'int' contains-errors '=='     | | |-RecoveryExpr 0x122928560 <col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122928520 <col:14> 'char *' lvalue ParmVar 0x122928158 's' 'char *'     | `-BinaryOperator 0x12300eff0 <line:11:3, col:17> 'char *' '='     |   |-DeclRefExpr 0x1229285a0 <col:3> 'char *' lvalue ParmVar 0x122928158 's' 'char *'     |   `-ImplicitCastExpr 0x1229287a8 <col:7, col:17> 'char *' <IntegralToPointer>     |     `-CallExpr 0x122928768 <col:7, col:17> 'int'     |       |-ImplicitCastExpr 0x122928750 <col:7> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1229286a0 <col:7> 'int ()' Function 0x1229285e8 'estrdup' 'int ()'     |       `-ImplicitCastExpr 0x122928790 <col:15> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x122928700 <col:15> 'char[1]' lvalue \"\"     `-ReturnStmt 0x12300f0a0 <line:15:2, col:9>       `-RecoveryExpr 0x12300f080 <col:9> '<dependent type>' contains-errors lvalue ","20831":"`-FunctionDecl 0x125128750  line:1:6 kvm_mmu_reset_context 'void (struct kvm_vcpu *)'   |-ParmVarDecl 0x125128648 <col:28, col:45> col:45 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x125140db0 <line:2:1, line:5:1>     |-CallExpr 0x125140bf8 <line:3:2, col:21> 'int'     | |-ImplicitCastExpr 0x125140be0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x125140b70 <col:2> 'int ()' Function 0x125140ab8 'kvm_mmu_unload' 'int ()'     | `-ImplicitCastExpr 0x125140c20 <col:17> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x125140b90 <col:17> 'struct kvm_vcpu *' lvalue ParmVar 0x125128648 'vcpu' 'struct kvm_vcpu *'     `-CallExpr 0x125140d70 <line:4:2, col:19> 'int'       |-ImplicitCastExpr 0x125140d58 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x125140d18 <col:2> 'int ()' Function 0x125140c60 'kvm_init_mmu' 'int ()'       `-ImplicitCastExpr 0x125140d98 <col:15> 'struct kvm_vcpu *' <LValueToRValue>         `-DeclRefExpr 0x125140d38 <col:15> 'struct kvm_vcpu *' lvalue ParmVar 0x125128648 'vcpu' 'struct kvm_vcpu *' ","20354":"`-FunctionDecl 0x1480e5bc8  line:1:1 invalid SWFInput_getSInt16 'int (int)'   |-ParmVarDecl 0x1480e5af0 <col:20, col:29> col:29 invalid input 'int'   `-CompoundStmt 0x1480e6010 <line:2:1, line:6:1>     |-DeclStmt 0x1480e5eb8 <line:3:2, col:35>     | `-VarDecl 0x1480e5c90 <col:2, col:34> col:6 used num 'int' cinit     |   `-CallExpr 0x1480e5e90 <col:12, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1480e5e50 <col:12> 'int ()' Function 0x1480e5d98 'SWFInput_getChar' 'int ()'     |     `-RecoveryExpr 0x1480e5e70 <col:29> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x1480e5f98 <line:4:2, col:35> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x1480e5ed0 <col:2> 'int' contains-errors lvalue Var 0x1480e5c90 'num' 'int'     | `-BinaryOperator 0x1480e5f78 <col:9, col:35> '<dependent type>' contains-errors '*'     |   |-CallExpr 0x1480e5f30 <col:9, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1480e5ef0 <col:9> 'int ()' Function 0x1480e5d98 'SWFInput_getChar' 'int ()'     |   | `-RecoveryExpr 0x1480e5f10 <col:26> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1480e5f58 <col:35> 'int' 256     `-ReturnStmt 0x1480e6000 <line:5:2, col:9>       `-ImplicitCastExpr 0x1480e5fe8 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1480e5fc8 <col:9> 'int' contains-errors lvalue Var 0x1480e5c90 'num' 'int' ","21114":"`-FunctionDecl 0x140142108  col:8 implicit used fabs 'double (double)' extern   |-ParmVarDecl 0x140142208 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x1401421b0 <<invalid sloc>> Implicit 1004   |-NoThrowAttr 0x140142278 <col:8> Implicit   `-ConstAttr 0x1401422a0 <col:8> Implicit ","20410":"`-FunctionDecl 0x14e928758  line:1:12 fastrpc_create_maps 'int (struct fastrpc_invoke_ctx *)' static   |-ParmVarDecl 0x14e928648 <col:32, col:59> col:59 used ctx 'struct fastrpc_invoke_ctx *'   `-CompoundStmt 0x14e942db8 <line:2:1, line:24:1>     |-DeclStmt 0x14e940d28 <line:3:2, col:41>     | |-RecordDecl 0x14e940a50 <col:2, col:9> col:9 struct device     | `-VarDecl 0x14e940bb8 <col:2, col:38> col:17 used dev 'struct device *' cinit     |   `-CXXDependentScopeMemberExpr 0x14e940cc8 <col:23, col:38> '<dependent type>' contains-errors lvalue ->dev     |     `-CXXDependentScopeMemberExpr 0x14e940c80 <col:23, col:32> '<dependent type>' contains-errors lvalue ->sctx     |       `-RecoveryExpr 0x14e940c58 <col:23, col:28> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14e940c20 <col:23> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |-DeclStmt 0x14e940e58 <line:4:2, col:12>     | |-VarDecl 0x14e940d58 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x14e940dd8 <col:2, col:9> col:9 used err 'int'     |-ForStmt 0x14e942d50 <line:6:2, line:22:2>     | |-BinaryOperator 0x14e940eb0 <line:6:7, col:11> 'int' '='     | | |-DeclRefExpr 0x14e940e70 <col:7> 'int' lvalue Var 0x14e940d58 'i' 'int'     | | `-IntegerLiteral 0x14e940e90 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14e940f50 <col:14, col:23> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14e940ed0 <col:14> 'int' lvalue Var 0x14e940d58 'i' 'int'     | | `-RecoveryExpr 0x14e940f28 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e940ef0 <col:18> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     | |-UnaryOperator 0x14e940f90 <col:33, col:35> 'int' prefix '++'     | | `-DeclRefExpr 0x14e940f70 <col:35> 'int' lvalue Var 0x14e940d58 'i' 'int'     | `-CompoundStmt 0x14e942d20 <col:38, line:22:2>     |   |-IfStmt 0x14e941180 <line:8:3, line:9:12>     |   | |-CXXDependentScopeMemberExpr 0x14e941078 <line:8:7, col:20> '<dependent type>' contains-errors lvalue .reserved     |   | | `-ArraySubscriptExpr 0x14e941058 <col:7, col:18> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x14e941028 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-RecoveryExpr 0x14e940fe0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x14e940fa8 <col:7> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |   | |   `-ImplicitCastExpr 0x14e941040 <col:17> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x14e941008 <col:17> 'int' lvalue Var 0x14e940d58 'i' 'int'     |   | `-ReturnStmt 0x14e941170 <line:9:4, col:12>     |   |   `-UnaryOperator 0x14e941158 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x14e941140 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x14e941120 <col:12> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x14e941608 <line:11:3, line:13:4>     |   | |-BinaryOperator 0x14e9415e0 <line:11:7, line:12:30> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x14e941468 <line:11:7, col:51> 'int' contains-errors '||'     |   | | | |-BinaryOperator 0x14e9412d8 <col:7, col:26> 'int' contains-errors '=='     |   | | | | |-CXXDependentScopeMemberExpr 0x14e941270 <col:7, col:20> '<dependent type>' contains-errors lvalue .fd     |   | | | | | `-ArraySubscriptExpr 0x14e941250 <col:7, col:18> '<dependent type>' contains-errors lvalue     |   | | | | |   |-ImplicitCastExpr 0x14e941220 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | |   | `-RecoveryExpr 0x14e9411d8 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | | | | |   |   `-DeclRefExpr 0x14e9411a0 <col:7> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |   | | | | |   `-ImplicitCastExpr 0x14e941238 <col:17> 'int' <LValueToRValue>     |   | | | | |     `-DeclRefExpr 0x14e941200 <col:17> 'int' lvalue Var 0x14e940d58 'i' 'int'     |   | | | | `-IntegerLiteral 0x14e9412b8 <col:26> 'int' 0     |   | | | `-BinaryOperator 0x14e941448 <col:31, col:51> 'int' contains-errors '=='     |   | | |   |-CXXDependentScopeMemberExpr 0x14e9413c8 <col:31, col:44> '<dependent type>' contains-errors lvalue .fd     |   | | |   | `-ArraySubscriptExpr 0x14e9413a8 <col:31, col:42> '<dependent type>' contains-errors lvalue     |   | | |   |   |-ImplicitCastExpr 0x14e941378 <col:31, col:36> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   |   | `-RecoveryExpr 0x14e941330 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   | | |   |   |   `-DeclRefExpr 0x14e9412f8 <col:31> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |   | | |   |   `-ImplicitCastExpr 0x14e941390 <col:41> 'int' <LValueToRValue>     |   | | |   |     `-DeclRefExpr 0x14e941358 <col:41> 'int' lvalue Var 0x14e940d58 'i' 'int'     |   | | |   `-UnaryOperator 0x14e941430 <col:50, col:51> 'int' prefix '-'     |   | | |     `-IntegerLiteral 0x14e941410 <col:51> 'int' 1     |   | | `-BinaryOperator 0x14e9415c0 <line:12:7, col:30> 'int' contains-errors '=='     |   | |   |-CXXDependentScopeMemberExpr 0x14e941558 <col:7, col:20> '<dependent type>' contains-errors lvalue .length     |   | |   | `-ArraySubscriptExpr 0x14e941538 <col:7, col:18> '<dependent type>' contains-errors lvalue     |   | |   |   |-ImplicitCastExpr 0x14e941508 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   | |   |   | `-RecoveryExpr 0x14e9414c0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | |   |   |   `-DeclRefExpr 0x14e941488 <col:7> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |   | |   |   `-ImplicitCastExpr 0x14e941520 <col:17> 'int' <LValueToRValue>     |   | |   |     `-DeclRefExpr 0x14e9414e8 <col:17> 'int' lvalue Var 0x14e940d58 'i' 'int'     |   | |   `-IntegerLiteral 0x14e9415a0 <col:30> 'int' 0     |   | `-ContinueStmt 0x14e941600 <line:13:4>     |   |-BinaryOperator 0x14e942970 <line:15:3, line:16:41> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14e941628 <line:15:3> 'int' lvalue Var 0x14e940dd8 'err' 'int'     |   | `-CallExpr 0x14e942930 <col:9, line:16:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e941760 <line:15:9> 'int ()' Function 0x14e9416a8 'fastrpc_map_create' 'int ()'     |   |   |-RecoveryExpr 0x14e9417b8 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14e941780 <col:28> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |   |   |-CXXDependentScopeMemberExpr 0x14e9418b0 <col:37, col:50> '<dependent type>' contains-errors lvalue .fd     |   |   | `-ArraySubscriptExpr 0x14e941890 <col:37, col:48> '<dependent type>' contains-errors lvalue     |   |   |   |-ImplicitCastExpr 0x14e941860 <col:37, col:42> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | `-RecoveryExpr 0x14e941818 <col:37, col:42> '<dependent type>' contains-errors lvalue     |   |   |   |   `-DeclRefExpr 0x14e9417e0 <col:37> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |   |   |   `-ImplicitCastExpr 0x14e941878 <col:47> 'int' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x14e941840 <col:47> 'int' lvalue Var 0x14e940d58 'i' 'int'     |   |   |-CXXDependentScopeMemberExpr 0x14e942800 <line:16:7, col:20> '<dependent type>' contains-errors lvalue .length     |   |   | `-ArraySubscriptExpr 0x14e9419a8 <col:7, col:18> '<dependent type>' contains-errors lvalue     |   |   |   |-ImplicitCastExpr 0x14e941978 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | `-RecoveryExpr 0x14e941930 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   |   |   |   `-DeclRefExpr 0x14e9418f8 <col:7> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |   |   |   `-ImplicitCastExpr 0x14e941990 <col:17> 'int' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x14e941958 <col:17> 'int' lvalue Var 0x14e940d58 'i' 'int'     |   |   `-UnaryOperator 0x14e942918 <col:28, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-ArraySubscriptExpr 0x14e9428f8 <col:29, col:40> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x14e9428c8 <col:29, col:34> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-RecoveryExpr 0x14e942880 <col:29, col:34> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x14e942848 <col:29> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14e928648 'ctx' 'struct fastrpc_invoke_ctx *'     |   |       `-ImplicitCastExpr 0x14e9428e0 <col:39> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x14e9428a8 <col:39> 'int' lvalue Var 0x14e940d58 'i' 'int'     |   `-IfStmt 0x14e942d00 <line:17:3, line:20:3>     |     |-ImplicitCastExpr 0x14e9429b0 <line:17:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x14e942990 <col:7> 'int' lvalue Var 0x14e940dd8 'err' 'int'     |     `-CompoundStmt 0x14e942ce0 <col:12, line:20:3>     |       |-CallExpr 0x14e942bb8 <line:18:4, col:27> 'int' contains-errors     |       | |-ImplicitCastExpr 0x14e942ba0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x14e942aa8 <col:4> 'int ()' Function 0x14e9429f0 'dev_err' 'int ()'     |       | |-ImplicitCastExpr 0x14e942bf0 <col:12> 'struct device *' contains-errors <LValueToRValue>     |       | | `-DeclRefExpr 0x14e942ac8 <col:12> 'struct device *' contains-errors lvalue Var 0x14e940bb8 'dev' 'struct device *'     |       | |-ImplicitCastExpr 0x14e942c08 <col:17> 'char *' <ArrayToPointerDecay>     |       | | `-StringLiteral 0x14e942b30 <col:17> 'char[4]' lvalue \"STR\"     |       | `-ImplicitCastExpr 0x14e942c20 <col:24> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x14e942b50 <col:24> 'int' lvalue Var 0x14e940dd8 'err' 'int'     |       `-ReturnStmt 0x14e942cd0 <line:19:4, col:12>     |         `-UnaryOperator 0x14e942cb8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |           `-ImplicitCastExpr 0x14e942ca0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |             `-RecoveryExpr 0x14e942c80 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e942da8 <line:23:2, col:9>       `-IntegerLiteral 0x14e942d88 <col:9> 'int' 0 ","21222":"`-FunctionDecl 0x155141838  line:1:19 invalid __br_ip4_hash 'int (struct net_bridge_mdb_htable *, int)' static inline   |-ParmVarDecl 0x155128648 <col:33, col:63> col:63 used mdb 'struct net_bridge_mdb_htable *'   |-ParmVarDecl 0x1551286e0 <col:68, col:75> col:75 invalid ip 'int'   `-CompoundStmt 0x155141ba8 <line:2:1, line:4:1> ","21230":"`-FunctionDecl 0x15580ddc8  line:1:13 invalid map_line_status 'int (int)' static   |-ParmVarDecl 0x15580dcf0 <col:29, col:34> col:34 invalid ti_lsr 'int'   `-CompoundStmt 0x155827f60 <line:2:1, line:19:1>     |-CallExpr 0x15580e140 <line:9:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580e080 <col:2> 'int ()' Function 0x15580dfc8 'MAP_FLAG' 'int ()'     | |-RecoveryExpr 0x15580e100 <col:11> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15580e120 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15580e230 <line:10:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580e170 <col:2> 'int ()' Function 0x15580dfc8 'MAP_FLAG' 'int ()'     | |-RecoveryExpr 0x15580e1f0 <col:11> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15580e210 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15580e320 <line:11:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580e260 <col:2> 'int ()' Function 0x15580dfc8 'MAP_FLAG' 'int ()'     | |-RecoveryExpr 0x15580e2e0 <col:11> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15580e300 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155827e20 <line:12:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580e350 <col:2> 'int ()' Function 0x15580dfc8 'MAP_FLAG' 'int ()'     | |-RecoveryExpr 0x15580e3d0 <col:11> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x155827e00 <col:33> '<dependent type>' contains-errors lvalue     `-CallExpr 0x155827f10 <line:13:2, col:45> '<dependent type>' contains-errors       |-DeclRefExpr 0x155827e50 <col:2> 'int ()' Function 0x15580dfc8 'MAP_FLAG' 'int ()'       |-RecoveryExpr 0x155827ed0 <col:11> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x155827ef0 <col:33> '<dependent type>' contains-errors lvalue ","20458":"`-FunctionDecl 0x143140e00  line:1:13 tg3_phy_toggle_automdix 'void (struct tg3 *, int)' static   |-ParmVarDecl 0x143128a48 <col:37, col:49> col:49 used tp 'struct tg3 *'   |-ParmVarDecl 0x143128ac8 <col:53, col:57> col:57 used enable 'int'   `-CompoundStmt 0x143141de0 <line:2:1, line:40:1>     |-IfStmt 0x143141138 <line:5:2, line:7:3>     | |-RecoveryExpr 0x143141108 <line:5:6, line:6:44> '_Bool' contains-errors     | `-ReturnStmt 0x143141128 <line:7:3>     `-IfStmt 0x143141db0 <line:9:2, line:39:2> has_else       |-BinaryOperator 0x143141210 <line:9:6, col:22> '<dependent type>' contains-errors '&'       | |-RecoveryExpr 0x143141190 <col:6, col:10> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x143141158 <col:6> 'struct tg3 *' lvalue ParmVar 0x143128a48 'tp' 'struct tg3 *'       | `-RecoveryExpr 0x1431411f0 <col:22> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x1431419c8 <col:41, line:26:2>       | `-IfStmt 0x1431419a8 <line:12:3, line:25:3>       |   |-UnaryOperator 0x143141478 <line:12:7, col:47> '<dependent type>' contains-errors prefix '!' cannot overflow       |   | `-CallExpr 0x143141440 <col:8, col:47> '<dependent type>' contains-errors       |   |   |-DeclRefExpr 0x143141310 <col:8> 'int ()' Function 0x143141258 'tg3_readphy' 'int ()'       |   |   |-DeclRefExpr 0x143141330 <col:20> 'struct tg3 *' lvalue ParmVar 0x143128a48 'tp' 'struct tg3 *'       |   |   |-RecoveryExpr 0x1431413e8 <col:24> '<dependent type>' contains-errors lvalue       |   |   `-UnaryOperator 0x143141428 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow       |   |     `-RecoveryExpr 0x143141408 <col:43> '<dependent type>' contains-errors lvalue       |   `-CompoundStmt 0x143141988 <col:50, line:25:3>       |     |-CallExpr 0x1431416d0 <line:15:4, line:16:38> '<dependent type>' contains-errors       |     | |-DeclRefExpr 0x143141570 <line:15:4> 'int ()' Function 0x1431414b8 'tg3_writephy' 'int ()'       |     | |-DeclRefExpr 0x143141590 <col:17> 'struct tg3 *' lvalue ParmVar 0x143128a48 'tp' 'struct tg3 *'       |     | |-RecoveryExpr 0x143141650 <col:21> '<dependent type>' contains-errors lvalue       |     | `-BinaryOperator 0x1431416b0 <line:16:10, col:17> '<dependent type>' contains-errors '|'       |     |   |-RecoveryExpr 0x143141670 <col:10> '<dependent type>' contains-errors lvalue       |     |   `-RecoveryExpr 0x143141690 <col:17> '<dependent type>' contains-errors lvalue       |     `-IfStmt 0x143141928 <line:17:4, line:23:4>       |       |-UnaryOperator 0x143141870 <line:17:8, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow       |       | `-CallExpr 0x143141838 <col:9, col:34> '<dependent type>' contains-errors       |       |   |-DeclRefExpr 0x143141708 <col:9> 'int ()' Function 0x143141258 'tg3_readphy' 'int ()'       |       |   |-DeclRefExpr 0x143141728 <col:21> 'struct tg3 *' lvalue ParmVar 0x143128a48 'tp' 'struct tg3 *'       |       |   |-RecoveryExpr 0x1431417e0 <col:25> '<dependent type>' contains-errors lvalue       |       |   `-UnaryOperator 0x143141820 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow       |       |     `-RecoveryExpr 0x143141800 <col:31> '<dependent type>' contains-errors lvalue       |       `-CompoundStmt 0x143141918 <col:37, line:23:4>       `-CompoundStmt 0x143141d90 <line:26:9, line:39:2>         |-DeclStmt 0x143141a60 <line:27:3, col:10>         | `-VarDecl 0x1431419f8 <col:3, col:7> col:7 used ret 'int'         `-IfStmt 0x143141d70 <line:31:3, line:38:3>           |-UnaryOperator 0x143141bf0 <line:31:7, col:8> 'int' prefix '!' cannot overflow           | `-ImplicitCastExpr 0x143141bd8 <col:8> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x143141bb8 <col:8> 'int' lvalue Var 0x1431419f8 'ret' 'int'           `-CompoundStmt 0x143141d60 <col:13, line:38:3> ","20680":"`-FunctionDecl 0x12c82a948  line:1:12 userns_install 'int (struct nsproxy *, struct ns_common *)' static   |-ParmVarDecl 0x12c80e248 <col:27, col:43> col:43 nsproxy 'struct nsproxy *'   |-ParmVarDecl 0x12c82a828 <col:52, col:70> col:70 used ns 'struct ns_common *'   `-CompoundStmt 0x12c82df38 <line:2:1, line:28:1>     |-DeclStmt 0x12c82ae48 <line:3:2, col:49>     | |-RecordDecl 0x12c82aa48 <col:2, col:9> col:9 struct user_namespace     | `-VarDecl 0x12c82abb8 <col:2, col:48> col:25 used user_ns 'struct user_namespace *' cinit     |   `-ImplicitCastExpr 0x12c82ae18 <col:35, col:48> 'struct user_namespace *' <IntegralToPointer>     |     `-CallExpr 0x12c82add8 <col:35, col:48> 'int'     |       |-ImplicitCastExpr 0x12c82adc0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12c82ad50 <col:35> 'int ()' Function 0x12c82ac98 'to_user_ns' 'int ()'     |       `-ImplicitCastExpr 0x12c82ae00 <col:46> 'struct ns_common *' <LValueToRValue>     |         `-DeclRefExpr 0x12c82ad70 <col:46> 'struct ns_common *' lvalue ParmVar 0x12c82a828 'ns' 'struct ns_common *'     |-DeclStmt 0x12c82b048 <line:4:2, col:19>     | |-RecordDecl 0x12c82ae60 <col:2, col:9> col:9 struct cred     | `-VarDecl 0x12c82afc8 <col:2, col:15> col:15 used cred 'struct cred *'     |-IfStmt 0x12c82b2b0 <line:7:2, line:8:11>     | |-BinaryOperator 0x12c82b1e8 <line:7:6, col:33> 'int' '=='     | | |-ImplicitCastExpr 0x12c82b1b8 <col:6> 'struct user_namespace *' <LValueToRValue>     | | | `-DeclRefExpr 0x12c82b060 <col:6> 'struct user_namespace *' lvalue Var 0x12c82abb8 'user_ns' 'struct user_namespace *'     | | `-ImplicitCastExpr 0x12c82b1d0 <col:17, col:33> 'struct user_namespace *' <IntegralToPointer>     | |   `-CallExpr 0x12c82b198 <col:17, col:33> 'int'     | |     `-ImplicitCastExpr 0x12c82b180 <col:17> 'int (*)()' <FunctionToPointerDecay>     | |       `-DeclRefExpr 0x12c82b160 <col:17> 'int ()' Function 0x12c82b0a8 'current_user_ns' 'int ()'     | `-ReturnStmt 0x12c82b2a0 <line:8:3, col:11>     |   `-UnaryOperator 0x12c82b288 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82b270 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82b250 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c82b530 <line:11:2, line:12:11>     | |-UnaryOperator 0x12c82b470 <line:11:6, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c82b448 <col:7, col:33> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c82b3b0 <col:7> 'int ()' Function 0x12c82b2f8 'thread_group_empty' 'int ()'     | |   `-RecoveryExpr 0x12c82b428 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c82b520 <line:12:3, col:11>     |   `-UnaryOperator 0x12c82b508 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82b4f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82b4d0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c82b7b0 <line:14:2, line:15:11>     | |-BinaryOperator 0x12c82b6e8 <line:14:6, col:28> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12c82b6a0 <col:6, col:19> '<dependent type>' contains-errors lvalue ->users     | | | `-CXXDependentScopeMemberExpr 0x12c82b658 <col:6, col:15> '<dependent type>' contains-errors lvalue ->fs     | | |   `-RecoveryExpr 0x12c82b638 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12c82b5f8 <col:28> 'int' 1     | `-ReturnStmt 0x12c82b7a0 <line:15:3, col:11>     |   `-UnaryOperator 0x12c82b788 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82b770 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82b750 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c82d668 <line:17:2, line:18:11>     | |-UnaryOperator 0x12c82d5a8 <line:17:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c82d578 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c82d4b8 <col:7> 'int ()' Function 0x12c82d400 'ns_capable' 'int ()'     | |   |-DeclRefExpr 0x12c82d4d8 <col:18> 'struct user_namespace *' lvalue Var 0x12c82abb8 'user_ns' 'struct user_namespace *'     | |   `-RecoveryExpr 0x12c82d558 <col:27> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c82d658 <line:18:3, col:11>     |   `-UnaryOperator 0x12c82d640 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82d628 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82d608 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c82d7f8 <line:20:2, col:23> 'struct cred *' '='     | |-DeclRefExpr 0x12c82d688 <col:2> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *'     | `-ImplicitCastExpr 0x12c82d7e0 <col:9, col:23> 'struct cred *' <IntegralToPointer>     |   `-CallExpr 0x12c82d7c0 <col:9, col:23> 'int'     |     `-ImplicitCastExpr 0x12c82d7a8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12c82d788 <col:9> 'int ()' Function 0x12c82d6d0 'prepare_creds' 'int ()'     |-IfStmt 0x12c82d910 <line:21:2, line:22:11>     | |-UnaryOperator 0x12c82d850 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c82d838 <col:7> 'struct cred *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c82d818 <col:7> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *'     | `-ReturnStmt 0x12c82d900 <line:22:3, col:11>     |   `-UnaryOperator 0x12c82d8e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c82d8d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c82d8b0 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c82da90 <line:24:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c82da10 <col:2> 'int ()' Function 0x12c82d958 'put_user_ns' 'int ()'     | `-RecoveryExpr 0x12c82da68 <col:14, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c82da30 <col:14> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *'     |-CallExpr 0x12c82dd68 <line:25:2, col:45> 'int'     | |-ImplicitCastExpr 0x12c82dd50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c82db98 <col:2> 'int ()' Function 0x12c82dae0 'set_cred_user_ns' 'int ()'     | |-ImplicitCastExpr 0x12c82dd98 <col:19> 'struct cred *' <LValueToRValue>     | | `-DeclRefExpr 0x12c82dbb8 <col:19> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *'     | `-CallExpr 0x12c82dd10 <col:25, col:44> 'int'     |   |-ImplicitCastExpr 0x12c82dcf8 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12c82dcb8 <col:25> 'int ()' Function 0x12c82dc00 'get_user_ns' 'int ()'     |   `-ImplicitCastExpr 0x12c82dd38 <col:37> 'struct user_namespace *' <LValueToRValue>     |     `-DeclRefExpr 0x12c82dcd8 <col:37> 'struct user_namespace *' lvalue Var 0x12c82abb8 'user_ns' 'struct user_namespace *'     `-ReturnStmt 0x12c82df28 <line:27:2, col:26>       `-CallExpr 0x12c82dee8 <col:9, col:26> 'int'         |-ImplicitCastExpr 0x12c82ded0 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12c82de90 <col:9> 'int ()' Function 0x12c82ddd8 'commit_creds' 'int ()'         `-ImplicitCastExpr 0x12c82df10 <col:22> 'struct cred *' <LValueToRValue>           `-DeclRefExpr 0x12c82deb0 <col:22> 'struct cred *' lvalue Var 0x12c82afc8 'cred' 'struct cred *' ","20547":"`-FunctionDecl 0x1409283a8  line:1:1 invalid bus_authorize_authenticated_peer_cb 'int (int *, int *, int *, int)'   |-ParmVarDecl 0x140928128 <col:38, col:61> col:61 invalid observer 'int *'   |-ParmVarDecl 0x1409281a8 <line:2:38, col:61> col:61 invalid stream 'int *'   |-ParmVarDecl 0x140928228 <line:3:38, col:61> col:61 referenced invalid credentials 'int *'   |-ParmVarDecl 0x1409282a8 <line:4:38, col:52> col:52 invalid gpointer 'int'   `-CompoundStmt 0x140941c40 <line:5:1, line:14:1>     |-IfStmt 0x140941bd8 <line:7:5, line:12:5>     | |-RecoveryExpr 0x140928470 <line:7:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140941bb8 <col:22, line:12:5>     |   |-BinaryOperator 0x1409287b0 <line:8:9, col:60> '<dependent type>' contains-errors '='     |   | |-BinaryOperator 0x140928758 <col:9, col:23> '<dependent type>' contains-errors '*'     |   | | |-RecoveryExpr 0x1409284b0 <col:9> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x140928490 <col:9> 'int *' lvalue ParmVar 0x140928228 'credentials' 'int *'     |   | | `-RecoveryExpr 0x140928738 <col:23> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x140928790 <col:41, col:60> 'int'     |   |   `-ImplicitCastExpr 0x140928778 <col:41> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x140928670 <col:41> 'int ()' Function 0x1409285b8 'g_credentials_new' 'int ()'     |   `-CallExpr 0x140941b90 <line:11:9, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x140941af0 <col:9> 'int ()' Function 0x140941a38 'g_object_unref' 'int ()'     |     `-RecoveryExpr 0x140941b70 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x140941c30 <line:13:5, col:12>       `-RecoveryExpr 0x140941c10 <col:12> '<dependent type>' contains-errors lvalue ","20792":"`-FunctionDecl 0x134928750  line:1:13 wait_query_thread_done 'void (struct st_connection *)' static   |-ParmVarDecl 0x134928648 <col:36, col:58> col:58 used con 'struct st_connection *'   `-CompoundStmt 0x134941300 <line:2:1, line:11:1>     |-CallExpr 0x134940bf0 <line:3:3, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134940b70 <col:3> 'int ()' Function 0x134940ab8 'DBUG_ASSERT' 'int ()'     | `-RecoveryExpr 0x134940bc8 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x134940b90 <col:15> 'struct st_connection *' lvalue ParmVar 0x134928648 'con' 'struct st_connection *'     `-IfStmt 0x1349412e0 <line:4:3, line:10:3>       |-UnaryOperator 0x134940c90 <line:4:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x134940c78 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x134940c50 <col:8, col:13> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x134940c18 <col:8> 'struct st_connection *' lvalue ParmVar 0x134928648 'con' 'struct st_connection *'       `-CompoundStmt 0x1349412b8 <line:5:3, line:10:3>         |-CallExpr 0x134940e20 <line:6:5, col:42> '<dependent type>' contains-errors         | |-DeclRefExpr 0x134940d88 <col:5> 'int ()' Function 0x134940cd0 'pthread_mutex_lock' 'int ()'         | `-UnaryOperator 0x134940e08 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x134940de0 <col:25, col:30> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x134940da8 <col:25> 'struct st_connection *' lvalue ParmVar 0x134928648 'con' 'struct st_connection *'         |-WhileStmt 0x1349410f8 <line:7:5, line:8:62>         | |-UnaryOperator 0x134940ec0 <line:7:12, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x134940ea8 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x134940e80 <col:13, col:18> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x134940e48 <col:13> 'struct st_connection *' lvalue ParmVar 0x134928648 'con' 'struct st_connection *'         | `-CallExpr 0x1349410c8 <line:8:7, col:62> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x134940fb8 <col:7> 'int ()' Function 0x134940f00 'pthread_cond_wait' 'int ()'         |   |-UnaryOperator 0x134941038 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-RecoveryExpr 0x134941010 <col:26, col:31> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x134940fd8 <col:26> 'struct st_connection *' lvalue ParmVar 0x134928648 'con' 'struct st_connection *'         |   `-UnaryOperator 0x1349410b0 <col:44, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-RecoveryExpr 0x134941088 <col:45, col:50> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x134941050 <col:45> 'struct st_connection *' lvalue ParmVar 0x134928648 'con' 'struct st_connection *'         `-CallExpr 0x134941290 <line:9:5, col:44> '<dependent type>' contains-errors           |-DeclRefExpr 0x1349411f8 <col:5> 'int ()' Function 0x134941140 'pthread_mutex_unlock' 'int ()'           `-UnaryOperator 0x134941278 <col:26, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x134941250 <col:27, col:32> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x134941218 <col:27> 'struct st_connection *' lvalue ParmVar 0x134928648 'con' 'struct st_connection *' ","20278":"`-FunctionDecl 0x14e922858  line:1:12 rev_compare_tree 'int (struct rev_info *, struct tree *, struct tree *)' static   |-ParmVarDecl 0x14f00e248 <col:29, col:46> col:46 used revs 'struct rev_info *'   |-ParmVarDecl 0x14e922628 <col:52, col:65> col:65 used t1 'struct tree *'   |-ParmVarDecl 0x14e922718 <col:69, col:82> col:82 used t2 'struct tree *'   `-CompoundStmt 0x14e923190 <line:2:1, line:13:1>     |-IfStmt 0x14e922a10 <line:3:2, line:4:10>     | |-UnaryOperator 0x14e922998 <line:3:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14e922980 <col:7> 'struct tree *' <LValueToRValue>     | |   `-DeclRefExpr 0x14e922960 <col:7> 'struct tree *' lvalue ParmVar 0x14e922628 't1' 'struct tree *'     | `-ReturnStmt 0x14e922a00 <line:4:3, col:10>     |   `-RecoveryExpr 0x14e9229e0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e922ac8 <line:5:2, line:6:10>     | |-UnaryOperator 0x14e922a68 <line:5:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14e922a50 <col:7> 'struct tree *' <LValueToRValue>     | |   `-DeclRefExpr 0x14e922a30 <col:7> 'struct tree *' lvalue ParmVar 0x14e922718 't2' 'struct tree *'     | `-ReturnStmt 0x14e922ab8 <line:6:3, col:10>     |   `-RecoveryExpr 0x14e922a98 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e922d10 <line:8:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e922c10 <col:2> 'int ()' Function 0x14e922b58 'DIFF_OPT_CLR' 'int ()'     | |-UnaryOperator 0x14e922c90 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14e922c68 <col:16, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e922c30 <col:16> 'struct rev_info *' lvalue ParmVar 0x14f00e248 'revs' 'struct rev_info *'     | `-RecoveryExpr 0x14e922cf0 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e923128 <line:9:2, line:11:10>     | |-BinaryOperator 0x14e9230c0 <line:9:6, line:10:25> 'int' contains-errors '<'     | | |-CallExpr 0x14e923060 <line:9:6, line:10:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14e922e20 <line:9:6> 'int ()' Function 0x14e922d68 'diff_tree_sha1' 'int ()'     | | | |-CXXDependentScopeMemberExpr 0x14e922ea0 <col:21, col:32> '<dependent type>' contains-errors lvalue .sha1     | | | | `-RecoveryExpr 0x14e922e78 <col:21, col:25> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x14e922e40 <col:21> 'struct tree *' lvalue ParmVar 0x14e922628 't1' 'struct tree *'     | | | |-CXXDependentScopeMemberExpr 0x14e922f48 <col:38, col:49> '<dependent type>' contains-errors lvalue .sha1     | | | | `-RecoveryExpr 0x14e922f20 <col:38, col:42> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x14e922ee8 <col:38> 'struct tree *' lvalue ParmVar 0x14e922718 't2' 'struct tree *'     | | | |-StringLiteral 0x14e922fd0 <col:55> 'char[1]' lvalue \"\"     | | | `-UnaryOperator 0x14e923048 <line:10:7, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x14e923020 <col:8, col:14> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x14e922fe8 <col:8> 'struct rev_info *' lvalue ParmVar 0x14f00e248 'revs' 'struct rev_info *'     | | `-IntegerLiteral 0x14e9230a0 <col:25> 'int' 0     | `-ReturnStmt 0x14e923118 <line:11:3, col:10>     |   `-RecoveryExpr 0x14e9230f8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e923180 <line:12:2, col:9>       `-RecoveryExpr 0x14e923160 <col:9> '<dependent type>' contains-errors lvalue ","20549":"`-FunctionDecl 0x126128758  line:1:12 exec_mmap 'int (struct mm_struct *)' static   |-ParmVarDecl 0x126128648 <col:22, col:40> col:40 used mm 'struct mm_struct *'   `-CompoundStmt 0x126143a08 <line:2:1, line:37:1>     |-DeclStmt 0x126140c38 <line:3:2, col:25>     | |-RecordDecl 0x126140a50 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x126140bb8 <col:2, col:22> col:22 used tsk 'struct task_struct *'     |-DeclStmt 0x126140de8 <line:4:2, col:39>     | |-VarDecl 0x126140cd8 <col:2, col:21> col:21 used old_mm 'struct mm_struct *'     | `-VarDecl 0x126140d68 <col:2, col:30> col:30 used active_mm 'struct mm_struct *'     |-BinaryOperator 0x126140e90 <line:7:2, col:8> 'struct task_struct *' contains-errors '='     | |-DeclRefExpr 0x126140e00 <col:2> 'struct task_struct *' lvalue Var 0x126140bb8 'tsk' 'struct task_struct *'     | `-RecoveryExpr 0x126140e70 <col:8> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126140fb8 <line:8:2, col:20> 'struct mm_struct *' contains-errors '='     | |-DeclRefExpr 0x126140eb0 <col:2> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     | `-CXXDependentScopeMemberExpr 0x126140f70 <col:11, col:20> '<dependent type>' contains-errors lvalue ->mm     |   `-RecoveryExpr 0x126140f50 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126141178 <line:9:2, col:20> 'int'     | |-ImplicitCastExpr 0x126141160 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1261410f0 <col:2> 'int ()' Function 0x126141038 'sync_mm_rss' 'int ()'     | `-ImplicitCastExpr 0x1261411a0 <col:14> 'struct mm_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x126141110 <col:14> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |-CallExpr 0x126141310 <line:10:2, col:24> 'int'     | |-ImplicitCastExpr 0x1261412f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x126141298 <col:2> 'int ()' Function 0x1261411e0 'mm_release' 'int ()'     | |-ImplicitCastExpr 0x126141340 <col:13> 'struct task_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x1261412b8 <col:13> 'struct task_struct *' lvalue Var 0x126140bb8 'tsk' 'struct task_struct *'     | `-ImplicitCastExpr 0x126141358 <col:18> 'struct mm_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x1261412d8 <col:18> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |-IfStmt 0x126141978 <line:12:2, line:19:2>     | |-ImplicitCastExpr 0x126141390 <line:12:6> 'struct mm_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x126141370 <col:6> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     | `-CompoundStmt 0x126141958 <col:14, line:19:2>     |   |-CallExpr 0x126141520 <line:14:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x126141488 <col:3> 'int ()' Function 0x1261413d0 'down_read' 'int ()'     |   | `-UnaryOperator 0x126141508 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1261414e0 <col:14, col:22> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1261414a8 <col:14> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |   `-IfStmt 0x126141938 <line:15:3, line:18:3>     |     |-CallExpr 0x1261416a8 <line:15:7, col:34> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x126141628 <col:7> 'int ()' Function 0x126141570 'unlikely' 'int ()'     |     | `-RecoveryExpr 0x126141680 <col:16, col:24> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x126141648 <col:16> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |     `-CompoundStmt 0x126141918 <col:37, line:18:3>     |       |-CallExpr 0x126141848 <line:16:4, col:29> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1261417b0 <col:4> 'int ()' Function 0x1261416f8 'up_read' 'int ()'     |       | `-UnaryOperator 0x126141830 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   `-RecoveryExpr 0x126141808 <col:13, col:21> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x1261417d0 <col:13> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |       `-ReturnStmt 0x126141908 <line:17:4, col:12>     |         `-UnaryOperator 0x1261418f0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |           `-ImplicitCastExpr 0x1261418d8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |             `-RecoveryExpr 0x1261418b8 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x126142910 <line:20:2, col:15> 'int'     | |-ImplicitCastExpr 0x1261428f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1261428b8 <col:2> 'int ()' Function 0x126142800 'task_lock' 'int ()'     | `-ImplicitCastExpr 0x126142938 <col:12> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x1261428d8 <col:12> 'struct task_struct *' lvalue Var 0x126140bb8 'tsk' 'struct task_struct *'     |-BinaryOperator 0x1261429d0 <line:21:2, col:19> 'struct mm_struct *' contains-errors '='     | |-DeclRefExpr 0x126142950 <col:2> 'struct mm_struct *' lvalue Var 0x126140d68 'active_mm' 'struct mm_struct *'     | `-RecoveryExpr 0x1261429a8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x126142970 <col:14> 'struct task_struct *' lvalue Var 0x126140bb8 'tsk' 'struct task_struct *'     |-BinaryOperator 0x126142a70 <line:22:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x126142a28 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1261429f0 <col:2> 'struct task_struct *' lvalue Var 0x126140bb8 'tsk' 'struct task_struct *'     | `-DeclRefExpr 0x126142a50 <col:12> 'struct mm_struct *' lvalue ParmVar 0x126128648 'mm' 'struct mm_struct *'     |-BinaryOperator 0x126142b10 <line:23:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x126142ac8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x126142a90 <col:2> 'struct task_struct *' lvalue Var 0x126140bb8 'tsk' 'struct task_struct *'     | `-DeclRefExpr 0x126142af0 <col:19> 'struct mm_struct *' lvalue ParmVar 0x126128648 'mm' 'struct mm_struct *'     |-CallExpr 0x126142c88 <line:24:2, col:27> 'int'     | |-ImplicitCastExpr 0x126142c70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x126142c10 <col:2> 'int ()' Function 0x126142b58 'activate_mm' 'int ()'     | |-ImplicitCastExpr 0x126142cb8 <col:14> 'struct mm_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x126142c30 <col:14> 'struct mm_struct *' lvalue Var 0x126140d68 'active_mm' 'struct mm_struct *'     | `-ImplicitCastExpr 0x126142cd0 <col:25> 'struct mm_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x126142c50 <col:25> 'struct mm_struct *' lvalue ParmVar 0x126128648 'mm' 'struct mm_struct *'     |-CallExpr 0x126142e20 <line:25:2, col:17> 'int'     | |-ImplicitCastExpr 0x126142e08 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x126142dc8 <col:2> 'int ()' Function 0x126142d10 'task_unlock' 'int ()'     | `-ImplicitCastExpr 0x126142e48 <col:14> 'struct task_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x126142de8 <col:14> 'struct task_struct *' lvalue Var 0x126140bb8 'tsk' 'struct task_struct *'     |-CallExpr 0x126142f98 <line:26:2, col:26> 'int'     | |-ImplicitCastExpr 0x126142f80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x126142f40 <col:2> 'int ()' Function 0x126142e88 'arch_pick_mmap_layout' 'int ()'     | `-ImplicitCastExpr 0x126142fc0 <col:24> 'struct mm_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x126142f60 <col:24> 'struct mm_struct *' lvalue ParmVar 0x126128648 'mm' 'struct mm_struct *'     |-IfStmt 0x126143840 <line:27:2, line:34:2>     | |-ImplicitCastExpr 0x126142ff8 <line:27:6> 'struct mm_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x126142fd8 <col:6> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     | `-CompoundStmt 0x126143800 <col:14, line:34:2>     |   |-CallExpr 0x1261430a8 <line:28:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x126143010 <col:3> 'int ()' Function 0x1261416f8 'up_read' 'int ()'     |   | `-UnaryOperator 0x126143090 <col:11, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x126143068 <col:12, col:20> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x126143030 <col:12> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |   |-CallExpr 0x126143278 <line:29:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x126143260 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1261431b0 <col:3> 'int ()' Function 0x1261430f8 'BUG_ON' 'int ()'     |   | `-BinaryOperator 0x126143240 <col:10, col:23> 'int' '!='     |   |   |-ImplicitCastExpr 0x126143210 <col:10> 'struct mm_struct *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1261431d0 <col:10> 'struct mm_struct *' lvalue Var 0x126140d68 'active_mm' 'struct mm_struct *'     |   |   `-ImplicitCastExpr 0x126143228 <col:23> 'struct mm_struct *' <LValueToRValue>     |   |     `-DeclRefExpr 0x1261431f0 <col:23> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |   |-CallExpr 0x126143480 <line:30:3, col:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x126143380 <col:3> 'int ()' Function 0x1261432c8 'setmax_mm_hiwater_rss' 'int ()'     |   | |-UnaryOperator 0x126143448 <col:25, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x126143400 <col:26, col:39> '<dependent type>' contains-errors lvalue ->maxrss     |   | |   `-RecoveryExpr 0x1261433d8 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x1261433a0 <col:26> 'struct task_struct *' lvalue Var 0x126140bb8 'tsk' 'struct task_struct *'     |   | `-DeclRefExpr 0x126143460 <col:47> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |   |-CallExpr 0x1261435e8 <line:31:3, col:30> 'int'     |   | |-ImplicitCastExpr 0x1261435d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x126143590 <col:3> 'int ()' Function 0x1261434d8 'mm_update_next_owner' 'int ()'     |   | `-ImplicitCastExpr 0x126143610 <col:24> 'struct mm_struct *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1261435b0 <col:24> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |   |-CallExpr 0x126143760 <line:32:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x126143748 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x126143708 <col:3> 'int ()' Function 0x126143650 'mmput' 'int ()'     |   | `-ImplicitCastExpr 0x126143788 <col:9> 'struct mm_struct *' <LValueToRValue>     |   |   `-DeclRefExpr 0x126143728 <col:9> 'struct mm_struct *' lvalue Var 0x126140cd8 'old_mm' 'struct mm_struct *'     |   `-ReturnStmt 0x1261437c0 <line:33:3, col:10>     |     `-IntegerLiteral 0x1261437a0 <col:10> 'int' 0     |-CallExpr 0x126143998 <line:35:2, col:18> 'int'     | |-ImplicitCastExpr 0x126143980 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x126143940 <col:2> 'int ()' Function 0x126143888 'mmdrop' 'int ()'     | `-ImplicitCastExpr 0x1261439c0 <col:9> 'struct mm_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x126143960 <col:9> 'struct mm_struct *' lvalue Var 0x126140d68 'active_mm' 'struct mm_struct *'     `-ReturnStmt 0x1261439f8 <line:36:2, col:9>       `-IntegerLiteral 0x1261439d8 <col:9> 'int' 0 ","20208":"`-FunctionDecl 0x12b928758  line:1:5 kvm_arch_vcpu_setup 'int (struct kvm_vcpu *)'   |-ParmVarDecl 0x12b928648 <col:25, col:42> col:42 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x12b9414b0 <line:2:1, line:15:1>     |-DeclStmt 0x12b940ad0 <line:3:2, col:7>     | `-VarDecl 0x12b940a68 <col:2, col:6> col:6 used r 'int'     |-BinaryOperator 0x12b940bf8 <line:5:2, col:37> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12b940b90 <col:2, col:24> '<dependent type>' contains-errors lvalue .have_fixed     | | `-CXXDependentScopeMemberExpr 0x12b940b48 <col:2, col:13> '<dependent type>' contains-errors lvalue .mtrr_state     | |   `-RecoveryExpr 0x12b940b20 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12b940ae8 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     | `-IntegerLiteral 0x12b940bd8 <col:37> 'int' 1     |-BinaryOperator 0x12b940e28 <line:6:2, col:20> 'int' '='     | |-DeclRefExpr 0x12b940c18 <col:2> 'int' lvalue Var 0x12b940a68 'r' 'int'     | `-CallExpr 0x12b940de8 <col:6, col:20> 'int'     |   |-ImplicitCastExpr 0x12b940dd0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b940d60 <col:6> 'int ()' Function 0x12b940ca8 'vcpu_load' 'int ()'     |   `-ImplicitCastExpr 0x12b940e10 <col:16> 'struct kvm_vcpu *' <LValueToRValue>     |     `-DeclRefExpr 0x12b940d80 <col:16> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x12b940ec8 <line:7:2, line:8:10>     | |-ImplicitCastExpr 0x12b940e68 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12b940e48 <col:6> 'int' lvalue Var 0x12b940a68 'r' 'int'     | `-ReturnStmt 0x12b940eb8 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x12b940ea0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12b940e80 <col:10> 'int' lvalue Var 0x12b940a68 'r' 'int'     |-BinaryOperator 0x12b941080 <line:9:2, col:30> 'int' '='     | |-DeclRefExpr 0x12b940ee8 <col:2> 'int' lvalue Var 0x12b940a68 'r' 'int'     | `-CallExpr 0x12b941040 <col:6, col:30> 'int'     |   |-ImplicitCastExpr 0x12b941028 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b940fe8 <col:6> 'int ()' Function 0x12b940f30 'kvm_arch_vcpu_reset' 'int ()'     |   `-ImplicitCastExpr 0x12b941068 <col:26> 'struct kvm_vcpu *' <LValueToRValue>     |     `-DeclRefExpr 0x12b941008 <col:26> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x12b9412d0 <line:10:2, line:11:25>     | |-BinaryOperator 0x12b9410f8 <line:10:6, col:11> 'int' '=='     | | |-ImplicitCastExpr 0x12b9410e0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12b9410a0 <col:6> 'int' lvalue Var 0x12b940a68 'r' 'int'     | | `-IntegerLiteral 0x12b9410c0 <col:11> 'int' 0     | `-BinaryOperator 0x12b9412b0 <line:11:3, col:25> 'int' '='     |   |-DeclRefExpr 0x12b941118 <col:3> 'int' lvalue Var 0x12b940a68 'r' 'int'     |   `-CallExpr 0x12b941270 <col:7, col:25> 'int'     |     |-ImplicitCastExpr 0x12b941258 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12b941218 <col:7> 'int ()' Function 0x12b941160 'kvm_mmu_setup' 'int ()'     |     `-ImplicitCastExpr 0x12b941298 <col:21> 'struct kvm_vcpu *' <LValueToRValue>     |       `-DeclRefExpr 0x12b941238 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x12b941428 <line:12:2, col:15> 'int'     | |-ImplicitCastExpr 0x12b941410 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12b9413d0 <col:2> 'int ()' Function 0x12b941318 'vcpu_put' 'int ()'     | `-ImplicitCastExpr 0x12b941450 <col:11> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x12b9413f0 <col:11> 'struct kvm_vcpu *' lvalue ParmVar 0x12b928648 'vcpu' 'struct kvm_vcpu *'     `-ReturnStmt 0x12b9414a0 <line:14:2, col:9>       `-ImplicitCastExpr 0x12b941488 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12b941468 <col:9> 'int' lvalue Var 0x12b940a68 'r' 'int' ","20648":"`-FunctionDecl 0x136128198  line:1:1 new_context 'int (void)'   `-CompoundStmt 0x136128730 <line:2:1, line:22:1> ","20505":"`-FunctionDecl 0x13a9281f8  line:1:1 invalid activate_parameters_install_free 'int (int *)'   |-ParmVarDecl 0x13a928128 <col:35, col:62> col:62 invalid parameters_install 'int *'   `-CompoundStmt 0x13a940e60 <line:2:1, line:12:1>     |-IfStmt 0x13a9286b0 <line:3:2, line:5:2>     | |-CXXDependentScopeMemberExpr 0x13a9282c8 <line:3:6, col:26> '<dependent type>' contains-errors lvalue ->slot_info     | | `-RecoveryExpr 0x13a9282a8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a9286a0 <col:37, line:5:2>     |-IfStmt 0x13a940ab8 <line:6:2, line:8:2>     | |-CXXDependentScopeMemberExpr 0x13a9286f0 <line:6:6, col:26> '<dependent type>' contains-errors lvalue ->parent_window     | | `-RecoveryExpr 0x13a9286d0 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a940aa8 <col:41, line:8:2>     |-CallExpr 0x13a940c40 <line:9:2, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a940bb8 <col:2> 'int ()' Function 0x13a940b00 'nautilus_file_list_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13a940bf8 <col:27, col:47> '<dependent type>' contains-errors lvalue ->files     |   `-RecoveryExpr 0x13a940bd8 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13a940dd0 <line:10:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a940d48 <col:2> 'int ()' Function 0x13a940c90 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13a940d88 <col:10, col:30> '<dependent type>' contains-errors lvalue ->activation_directory     |   `-RecoveryExpr 0x13a940d68 <col:10> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13a940e38 <line:11:2, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x13a940df8 <col:2> 'int ()' Function 0x13a940c90 'g_free' 'int ()'       `-RecoveryExpr 0x13a940e18 <col:10> '<dependent type>' contains-errors lvalue ","20509":"`-FunctionDecl 0x14900df68  line:1:12 invalid WebPEncodeWriter 'int (const unsigned char *, int, const int *const)' static   |-ParmVarDecl 0x14900dd08 <col:29, col:50> col:50 used stream 'const unsigned char *'   |-ParmVarDecl 0x14900dda0 <col:57, col:64> col:64 invalid length 'int'   |-ParmVarDecl 0x14900de20 <line:2:3, col:28> col:28 invalid picture 'const int *const'   `-CompoundStmt 0x14900e2f8 <line:3:1, line:9:1> ","20720":"`-FunctionDecl 0x156941608  line:1:1 invalid propagate_aggs_across_jump_function 'int (struct cgraph_edge *, struct ipa_jump_func *, int)'   |-ParmVarDecl 0x156929048 <col:38, col:58> col:58 used cs 'struct cgraph_edge *'   |-ParmVarDecl 0x156941428 <line:2:10, col:32> col:32 used jfunc 'struct ipa_jump_func *'   |-ParmVarDecl 0x1569414c0 <line:3:10, col:16> col:16 invalid ipcp_param_lattices 'int'   `-CompoundStmt 0x156945580 <line:4:1, line:82:1>     `-IfStmt 0x156945550 <line:10:3, line:79:5> has_else       |-BinaryOperator 0x156941b98 <line:10:7, line:11:55> 'int' contains-errors '&&'       | |-BinaryOperator 0x156941ae0 <line:10:7, col:22> 'int' contains-errors '=='       | | |-RecoveryExpr 0x1569417e0 <col:7, col:14> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x1569417a8 <col:7> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'       | | `-RecoveryExpr 0x156941ac0 <col:22> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x156941b78 <line:11:10, col:55> 'int' contains-errors '=='       |   |-CallExpr 0x156941b18 <col:10, col:50> 'int'       |   | |-ImplicitCastExpr 0x156941b00 <col:10> 'int (*)()' <FunctionToPointerDecay>       |   | | `-DeclRefExpr 0x1569419a0 <col:10> 'int ()' Function 0x1569418e8 'ipa_get_jf_pass_through_operation' 'int ()'       |   | `-ImplicitCastExpr 0x156941b40 <col:45> 'struct ipa_jump_func *' <LValueToRValue>       |   |   `-DeclRefExpr 0x1569419c0 <col:45> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'       |   `-RecoveryExpr 0x156941b58 <col:55> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x156943488 <line:12:5, line:27:5>       | |-DeclStmt 0x156941db0 <line:14:7, col:62>       | | `-VarDecl 0x156941bd0 <col:7, col:61> col:11 used src_idx 'int' cinit       | |   `-CallExpr 0x156941d70 <col:21, col:61> 'int'       | |     |-ImplicitCastExpr 0x156941d58 <col:21> 'int (*)()' <FunctionToPointerDecay>       | |     | `-DeclRefExpr 0x156941d18 <col:21> 'int ()' Function 0x156941c60 'ipa_get_jf_pass_through_formal_id' 'int ()'       | |     `-ImplicitCastExpr 0x156941d98 <col:56> 'struct ipa_jump_func *' <LValueToRValue>       | |       `-DeclRefExpr 0x156941d38 <col:56> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'       | `-IfStmt 0x156943458 <line:18:7, line:26:2> has_else       |   |-CallExpr 0x1569420b8 <line:18:11, col:59> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x156942010 <col:11> 'int ()' Function 0x156941f58 'agg_pass_through_permissible_p' 'int ()'       |   | |-RecoveryExpr 0x156942098 <col:43> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x156942048 <col:54> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'       |   |-CompoundStmt 0x156943338 <line:19:2, line:24:2>       |   | `-CallExpr 0x156942318 <line:21:4, col:33> '<dependent type>' contains-errors       |   |   |-DeclRefExpr 0x1569421c8 <col:4> 'int ()' Function 0x156942110 'gcc_assert' 'int ()'       |   |   `-UnaryOperator 0x156942300 <col:16, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow       |   |     `-ImplicitCastExpr 0x1569422e8 <col:17, col:28> '<dependent type>' contains-errors <LValueToRValue>       |   |       `-CXXDependentScopeMemberExpr 0x156942248 <col:17, col:28> '<dependent type>' contains-errors lvalue .items       |   |         `-RecoveryExpr 0x156942220 <col:17, col:24> '<dependent type>' contains-errors lvalue       |   |           `-DeclRefExpr 0x1569421e8 <col:17> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'       |   `-NullStmt 0x156943450 <line:26:2>       `-IfStmt 0x156945520 <line:28:8, line:79:5> has_else         |-RecoveryExpr 0x156943680 <line:28:12, line:29:48> '_Bool' contains-errors         |-CompoundStmt 0x156943df0 <line:30:5, line:47:5>         | |-DeclStmt 0x156943898 <line:32:7, col:58>         | | `-VarDecl 0x1569436b8 <col:7, col:57> col:11 used src_idx 'int' cinit         | |   `-CallExpr 0x156943858 <col:21, col:57> 'int'         | |     |-ImplicitCastExpr 0x156943840 <col:21> 'int (*)()' <FunctionToPointerDecay>         | |     | `-DeclRefExpr 0x156943800 <col:21> 'int ()' Function 0x156943748 'ipa_get_jf_ancestor_formal_id' 'int ()'         | |     `-ImplicitCastExpr 0x156943880 <col:52> 'struct ipa_jump_func *' <LValueToRValue>         | |       `-DeclRefExpr 0x156943820 <col:52> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'         | `-IfStmt 0x156943dc0 <line:36:7, line:43:12> has_else         |   |-RecoveryExpr 0x1569438f0 <line:36:11, col:41> '_Bool' contains-errors         |   |-CompoundStmt 0x156943c60 <line:37:2, line:42:2>         |   | `-CallExpr 0x156943a60 <line:39:4, col:33> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x156943910 <col:4> 'int ()' Function 0x156942110 'gcc_assert' 'int ()'         |   |   `-UnaryOperator 0x156943a48 <col:16, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow         |   |     `-ImplicitCastExpr 0x156943a30 <col:17, col:28> '<dependent type>' contains-errors <LValueToRValue>         |   |       `-CXXDependentScopeMemberExpr 0x156943990 <col:17, col:28> '<dependent type>' contains-errors lvalue .items         |   |         `-RecoveryExpr 0x156943968 <col:17, col:24> '<dependent type>' contains-errors lvalue         |   |           `-DeclRefExpr 0x156943930 <col:17> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'         |   `-NullStmt 0x156943db8 <line:43:12>         `-IfStmt 0x1569454f0 <line:48:8, line:79:5> has_else           |-CXXDependentScopeMemberExpr 0x156943e70 <line:48:12, col:23> '<dependent type>' contains-errors lvalue .items           | `-RecoveryExpr 0x156943e48 <col:12, col:19> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x156943e10 <col:12> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'           |-CompoundStmt 0x156945490 <line:49:5, line:77:5>           | |-DeclStmt 0x156944108 <line:51:7, col:58>           | | |-RecordDecl 0x156943eb8 <col:7, col:14> col:14 struct ipcp_agg_lattice           | | `-VarDecl 0x156944088 <col:7, col:33> col:33 used aglat 'struct ipcp_agg_lattice **'           | |-DeclStmt 0x156944308 <line:52:7, col:35>           | | |-RecordDecl 0x156944120 <col:7, col:14> col:14 struct ipa_agg_jf_item           | | `-VarDecl 0x156944288 <col:7, col:31> col:31 used item 'struct ipa_agg_jf_item *'           | |-DeclStmt 0x1569443a0 <line:53:7, col:12>           | | `-VarDecl 0x156944338 <col:7, col:11> col:11 used i 'int'           | |-CallExpr 0x156944800 <line:58:7, col:51> '<dependent type>' contains-errors           | | |-DeclRefExpr 0x156944660 <col:7> 'int ()' Function 0x1569445a8 'FOR_EACH_VEC_ELT' 'int ()'           | | |-UnaryOperator 0x1569447e8 <col:25, col:37> '<dependent type>' contains-errors prefix '*' cannot overflow           | | | `-ImplicitCastExpr 0x1569447d0 <col:26, col:37> '<dependent type>' contains-errors <LValueToRValue>           | | |   `-CXXDependentScopeMemberExpr 0x1569446e0 <col:26, col:37> '<dependent type>' contains-errors lvalue .items           | | |     `-RecoveryExpr 0x1569446b8 <col:26, col:33> '<dependent type>' contains-errors lvalue           | | |       `-DeclRefExpr 0x156944680 <col:26> 'struct ipa_jump_func *' lvalue ParmVar 0x156941428 'jfunc' 'struct ipa_jump_func *'           | | |-DeclRefExpr 0x156944758 <col:44> 'int' lvalue Var 0x156944338 'i' 'int'           | | `-DeclRefExpr 0x156944778 <col:47> 'struct ipa_agg_jf_item *' lvalue Var 0x156944288 'item' 'struct ipa_agg_jf_item *'           | `-CompoundStmt 0x1569452d0 <line:59:2, line:74:2>           |   `-IfStmt 0x1569452a0 <line:66:4, line:72:9> has_else           |     |-RecoveryExpr 0x156944e08 <line:66:8, line:67:34> '_Bool' contains-errors           |     |-CompoundStmt 0x156945260 <line:68:6, line:71:6>           |     | `-BinaryOperator 0x156945240 <line:70:8, col:27> 'struct ipcp_agg_lattice **' contains-errors '='           |     |   |-DeclRefExpr 0x156945050 <col:8> 'struct ipcp_agg_lattice **' lvalue Var 0x156944088 'aglat' 'struct ipcp_agg_lattice **'           |     |   `-UnaryOperator 0x156945228 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow           |     |     `-RecoveryExpr 0x156945200 <col:17, col:27> '<dependent type>' contains-errors lvalue           |     |       `-ParenExpr 0x1569451d8 <col:17, col:24> 'struct ipcp_agg_lattice *' lvalue           |     |         `-UnaryOperator 0x1569451c0 <col:18, col:19> 'struct ipcp_agg_lattice *' lvalue prefix '*' cannot overflow           |     |           `-ImplicitCastExpr 0x1569451a8 <col:19> 'struct ipcp_agg_lattice **' <LValueToRValue>           |     |             `-DeclRefExpr 0x156945070 <col:19> 'struct ipcp_agg_lattice **' lvalue Var 0x156944088 'aglat' 'struct ipcp_agg_lattice **'           |     `-NullStmt 0x156945298 <line:72:9>           `-NullStmt 0x1569454e8 <line:79:5> ","20465":"`-FunctionDecl 0x160809b08  col:24 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x160809c08 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x160809bb0 <<invalid sloc>> Implicit 950 ","20582":"`-FunctionDecl 0x136941800  line:1:20 invalid detach_timer 'void (struct timer_list *, int)' static inline   |-ParmVarDecl 0x136928648 <col:33, col:52> col:52 used timer 'struct timer_list *'   |-ParmVarDecl 0x1369286e0 <col:59, col:64> col:64 invalid clear_pending 'int'   `-CompoundStmt 0x1369420c0 <line:2:1, line:11:1>     |-DeclStmt 0x136941b20 <line:3:2, col:42>     | |-RecordDecl 0x1369418b8 <col:2, col:9> col:9 struct hlist_node     | `-VarDecl 0x136941a28 <col:2, col:37> col:21 used entry 'struct hlist_node *' cinit     |   `-UnaryOperator 0x136941af0 <col:29, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x136941ac8 <col:30, col:37> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x136941a90 <col:30> 'struct timer_list *' lvalue ParmVar 0x136928648 'timer' 'struct timer_list *'     |-CallExpr 0x136941d18 <line:5:2, col:24> 'int'     | |-ImplicitCastExpr 0x136941d00 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x136941c90 <col:2> 'int ()' Function 0x136941bd8 'debug_deactivate' 'int ()'     | `-ImplicitCastExpr 0x136941d40 <col:19> 'struct timer_list *' <LValueToRValue>     |   `-DeclRefExpr 0x136941cb0 <col:19> 'struct timer_list *' lvalue ParmVar 0x136928648 'timer' 'struct timer_list *'     |-CallExpr 0x136941e90 <line:7:2, col:19> 'int' contains-errors     | |-ImplicitCastExpr 0x136941e78 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x136941e38 <col:2> 'int ()' Function 0x136941d80 '__hlist_del' 'int ()'     | `-ImplicitCastExpr 0x136941eb8 <col:14> 'struct hlist_node *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x136941e58 <col:14> 'struct hlist_node *' contains-errors lvalue Var 0x136941a28 'entry' 'struct hlist_node *'     |-IfStmt 0x136941fc8 <line:8:2, line:9:18>     | |-RecoveryExpr 0x136941ed0 <line:8:6> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x136941fa8 <line:9:3, col:18> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x136941f28 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x136941ef0 <col:3> 'struct hlist_node *' contains-errors lvalue Var 0x136941a28 'entry' 'struct hlist_node *'     |   `-RecoveryExpr 0x136941f88 <col:18> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1369420a0 <line:10:2, col:16> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x136942020 <col:2, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x136941fe8 <col:2> 'struct hlist_node *' contains-errors lvalue Var 0x136941a28 'entry' 'struct hlist_node *'       `-RecoveryExpr 0x136942080 <col:16> '<dependent type>' contains-errors lvalue ","20749":"`-FunctionDecl 0x14f02b290  col:9 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x14f02b390 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14f02b338 <<invalid sloc>> Implicit 903   `-FormatAttr 0x14f02b400 <col:9> Implicit printf 1 2 ","20935":"`-FunctionDecl 0x13a928758  line:1:1 connect_msg 'int (struct iperf_stream *)'   |-ParmVarDecl 0x13a928648 <col:13, col:34> col:34 used sp 'struct iperf_stream *'   `-CompoundStmt 0x13a945c40 <line:2:1, line:26:1>     |-DeclStmt 0x13a940b10 <line:3:5, col:54>     | `-VarDecl 0x13a940a90 <col:5, col:10> col:10 referenced invalid ipl 'char'     |-DeclStmt 0x13a940c40 <line:4:5, col:21>     | |-VarDecl 0x13a940b40 <col:5, col:9> col:9 used lport 'int'     | `-VarDecl 0x13a940bc0 <col:5, col:16> col:16 used rport 'int'     `-IfStmt 0x13a945608 <line:6:5, line:20:5> has_else       |-BinaryOperator 0x13a940e70 <line:6:9, col:38> 'int' contains-errors '=='       | |-CallExpr 0x13a940df0 <col:9, col:33> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x13a940d70 <col:9> 'int ()' Function 0x13a940cb8 'getsockdomain' 'int ()'       | | `-RecoveryExpr 0x13a940dc8 <col:23, col:27> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x13a940d90 <col:23> 'struct iperf_stream *' lvalue ParmVar 0x13a928648 'sp' 'struct iperf_stream *'       | `-RecoveryExpr 0x13a940e50 <col:38> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x13a944cb8 <col:47, line:13:5>       | |-CallExpr 0x13a941498 <line:8:2, col:29> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x13a941458 <col:2> 'int ()' Function 0x13a9413a0 'mapped_v4_to_regular_v4' 'int ()'       | | `-RecoveryExpr 0x13a941478 <col:26> '<dependent type>' contains-errors lvalue       | |-CallExpr 0x13a941868 <line:10:2, col:29> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x13a9417c8 <col:2> 'int ()' Function 0x13a9413a0 'mapped_v4_to_regular_v4' 'int ()'       | | `-RecoveryExpr 0x13a941848 <col:26> '<dependent type>' contains-errors lvalue       | |-BinaryOperator 0x13a944b00 <line:11:9, col:73> 'int' contains-errors '='       | | |-DeclRefExpr 0x13a941890 <col:9> 'int' lvalue Var 0x13a940b40 'lport' 'int'       | | `-CallExpr 0x13a944ad8 <col:17, col:73> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x13a941990 <col:17> 'int ()' Function 0x13a9418d8 'ntohs' 'int ()'       | |   `-RecoveryExpr 0x13a944ab0 <col:23, col:65> '<dependent type>' contains-errors lvalue       | |     `-ParenExpr 0x13a944a90 <col:23, col:62> 'struct sockaddr_in *' contains-errors       | |       `-CStyleCastExpr 0x13a944a68 <col:24, col:52> 'struct sockaddr_in *' contains-errors <Dependent>       | |         `-UnaryOperator 0x13a944a28 <col:47, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow       | |           `-RecoveryExpr 0x13a944a00 <col:48, col:52> '<dependent type>' contains-errors lvalue       | |             `-DeclRefExpr 0x13a9419b0 <col:48> 'struct iperf_stream *' lvalue ParmVar 0x13a928648 'sp' 'struct iperf_stream *'       | `-BinaryOperator 0x13a944c98 <line:12:9, col:74> 'int' contains-errors '='       |   |-DeclRefExpr 0x13a944b20 <col:9> 'int' lvalue Var 0x13a940bc0 'rport' 'int'       |   `-CallExpr 0x13a944c70 <col:17, col:74> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x13a944b40 <col:17> 'int ()' Function 0x13a9418d8 'ntohs' 'int ()'       |     `-RecoveryExpr 0x13a944c48 <col:23, col:66> '<dependent type>' contains-errors lvalue       |       `-ParenExpr 0x13a944c28 <col:23, col:63> 'struct sockaddr_in *' contains-errors       |         `-CStyleCastExpr 0x13a944c00 <col:24, col:52> 'struct sockaddr_in *' contains-errors <Dependent>       |           `-UnaryOperator 0x13a944bc0 <col:47, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow       |             `-RecoveryExpr 0x13a944b98 <col:48, col:52> '<dependent type>' contains-errors lvalue       |               `-DeclRefExpr 0x13a944b60 <col:48> 'struct iperf_stream *' lvalue ParmVar 0x13a928648 'sp' 'struct iperf_stream *'       `-CompoundStmt 0x13a9455e0 <line:13:12, line:20:5>         |-CallExpr 0x13a945080 <line:15:2, col:29> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13a945040 <col:2> 'int ()' Function 0x13a9413a0 'mapped_v4_to_regular_v4' 'int ()'         | `-RecoveryExpr 0x13a945060 <col:26> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x13a945428 <line:18:9, col:75> 'int' contains-errors '='         | |-DeclRefExpr 0x13a9452b0 <col:9> 'int' lvalue Var 0x13a940b40 'lport' 'int'         | `-CallExpr 0x13a945400 <col:17, col:75> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x13a9452d0 <col:17> 'int ()' Function 0x13a9418d8 'ntohs' 'int ()'         |   `-RecoveryExpr 0x13a9453d8 <col:23, col:66> '<dependent type>' contains-errors lvalue         |     `-ParenExpr 0x13a9453b8 <col:23, col:63> 'struct sockaddr_in6 *' contains-errors         |       `-CStyleCastExpr 0x13a945390 <col:24, col:53> 'struct sockaddr_in6 *' contains-errors <Dependent>         |         `-UnaryOperator 0x13a945350 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow         |           `-RecoveryExpr 0x13a945328 <col:49, col:53> '<dependent type>' contains-errors lvalue         |             `-DeclRefExpr 0x13a9452f0 <col:49> 'struct iperf_stream *' lvalue ParmVar 0x13a928648 'sp' 'struct iperf_stream *'         `-BinaryOperator 0x13a9455c0 <line:19:9, col:76> 'int' contains-errors '='           |-DeclRefExpr 0x13a945448 <col:9> 'int' lvalue Var 0x13a940bc0 'rport' 'int'           `-CallExpr 0x13a945598 <col:17, col:76> '<dependent type>' contains-errors             |-DeclRefExpr 0x13a945468 <col:17> 'int ()' Function 0x13a9418d8 'ntohs' 'int ()'             `-RecoveryExpr 0x13a945570 <col:23, col:67> '<dependent type>' contains-errors lvalue               `-ParenExpr 0x13a945550 <col:23, col:64> 'struct sockaddr_in6 *' contains-errors                 `-CStyleCastExpr 0x13a945528 <col:24, col:53> 'struct sockaddr_in6 *' contains-errors <Dependent>                   `-UnaryOperator 0x13a9454e8 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow                     `-RecoveryExpr 0x13a9454c0 <col:49, col:53> '<dependent type>' contains-errors lvalue                       `-DeclRefExpr 0x13a945488 <col:49> 'struct iperf_stream *' lvalue ParmVar 0x13a928648 'sp' 'struct iperf_stream *' ","20825":"`-FunctionDecl 0x15301c518  line:1:1 invalid read_pbm_integer 'int (int, int *, unsigned int)'   |-ParmVarDecl 0x15301c2f0 <col:18, col:33> col:33 invalid cinfo 'int'   |-ParmVarDecl 0x15301c3a8 <col:40, col:46> col:46 invalid infile 'int *'   |-ParmVarDecl 0x15301c428 <col:54, col:67> col:67 used maxval 'unsigned int'   `-CompoundStmt 0x15382dfe8 <line:6:1, line:30:1>     |-DeclStmt 0x15301c658 <line:7:3, col:18>     | `-VarDecl 0x15301c5f0 <col:3, col:16> col:16 used ch 'int' register     |-DeclStmt 0x15301c6f0 <line:8:3, col:28>     | `-VarDecl 0x15301c688 <col:3, col:25> col:25 used val 'unsigned int' register     |-DoStmt 0x15382d7f0 <line:11:3, line:15:63>     | |-CompoundStmt 0x15382d5b0 <line:11:6, line:15:3>     | | |-BinaryOperator 0x15301c8e8 <line:12:5, col:25> 'int' contains-errors '='     | | | |-DeclRefExpr 0x15301c708 <col:5> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     | | | `-CallExpr 0x15301c8c0 <col:10, col:25> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x15301c880 <col:10> 'int ()' Function 0x15301c7c8 'pbm_getc' 'int ()'     | | |   `-RecoveryExpr 0x15301c8a0 <col:19> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x15382d590 <line:13:5, line:14:36>     | |   |-BinaryOperator 0x15301c980 <line:13:9, col:15> 'int' contains-errors '=='     | |   | |-DeclRefExpr 0x15301c908 <col:9> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     | |   | `-RecoveryExpr 0x15301c960 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x15382d560 <line:14:7, col:36> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x15382d4b8 <col:7> 'int ()' Function 0x15382d400 'ERREXIT' 'int ()'     | |     |-RecoveryExpr 0x15382d4d8 <col:15> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x15382d540 <col:22> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x15382d7d0 <line:15:12, col:59> 'int' '||'     |   |-BinaryOperator 0x15382d740 <col:12, col:45> 'int' '||'     |   | |-BinaryOperator 0x15382d6b0 <col:12, col:31> 'int' '||'     |   | | |-BinaryOperator 0x15382d620 <col:12, col:18> 'int' '=='     |   | | | |-ImplicitCastExpr 0x15382d608 <col:12> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x15382d5d0 <col:12> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     |   | | | `-CharacterLiteral 0x15382d5f0 <col:18> 'int' 32     |   | | `-BinaryOperator 0x15382d690 <col:25, col:31> 'int' '=='     |   | |   |-ImplicitCastExpr 0x15382d678 <col:25> 'int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x15382d640 <col:25> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     |   | |   `-CharacterLiteral 0x15382d660 <col:31> 'int' 9     |   | `-BinaryOperator 0x15382d720 <col:39, col:45> 'int' '=='     |   |   |-ImplicitCastExpr 0x15382d708 <col:39> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x15382d6d0 <col:39> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     |   |   `-CharacterLiteral 0x15382d6f0 <col:45> 'int' 10     |   `-BinaryOperator 0x15382d7b0 <col:53, col:59> 'int' '=='     |     |-ImplicitCastExpr 0x15382d798 <col:53> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15382d760 <col:53> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     |     `-CharacterLiteral 0x15382d780 <col:59> 'int' 13     |-IfStmt 0x15382d9e8 <line:17:3, line:18:39>     | |-BinaryOperator 0x15382d8f0 <line:17:7, col:24> 'int' '||'     | | |-BinaryOperator 0x15382d860 <col:7, col:12> 'int' '<'     | | | |-ImplicitCastExpr 0x15382d848 <col:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x15382d810 <col:7> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     | | | `-CharacterLiteral 0x15382d830 <col:12> 'int' 48     | | `-BinaryOperator 0x15382d8d0 <col:19, col:24> 'int' '>'     | |   |-ImplicitCastExpr 0x15382d8b8 <col:19> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x15382d880 <col:19> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     | |   `-CharacterLiteral 0x15382d8a0 <col:24> 'int' 57     | `-CallExpr 0x15382d9b8 <line:18:5, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15382d910 <col:5> 'int ()' Function 0x15382d400 'ERREXIT' 'int ()'     |   |-RecoveryExpr 0x15382d930 <col:13> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x15382d998 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15382dab0 <line:20:3, col:14> 'unsigned int' '='     | |-DeclRefExpr 0x15382da08 <col:3> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'     | `-ImplicitCastExpr 0x15382da98 <col:9, col:14> 'unsigned int' <IntegralCast>     |   `-BinaryOperator 0x15382da78 <col:9, col:14> 'int' '-'     |     |-ImplicitCastExpr 0x15382da60 <col:9> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15382da28 <col:9> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     |     `-CharacterLiteral 0x15382da48 <col:14> 'int' 48     |-WhileStmt 0x15382dde0 <line:21:3, line:24:3>     | |-BinaryOperator 0x15382dc40 <line:21:10, col:50> 'int' contains-errors '&&'     | | |-BinaryOperator 0x15382dbb0 <col:10, col:37> 'int' contains-errors '>='     | | | |-ParenExpr 0x15382db78 <col:10, col:32> 'int' contains-errors     | | | | `-BinaryOperator 0x15382db58 <col:11, col:31> 'int' contains-errors '='     | | | |   |-DeclRefExpr 0x15382dad0 <col:11> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     | | | |   `-CallExpr 0x15382db30 <col:16, col:31> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x15382daf0 <col:16> 'int ()' Function 0x15301c7c8 'pbm_getc' 'int ()'     | | | |     `-RecoveryExpr 0x15382db10 <col:25> '<dependent type>' contains-errors lvalue     | | | `-CharacterLiteral 0x15382db98 <col:37> 'int' 48     | | `-BinaryOperator 0x15382dc20 <col:44, col:50> 'int' '<='     | |   |-ImplicitCastExpr 0x15382dc08 <col:44> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x15382dbd0 <col:44> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     | |   `-CharacterLiteral 0x15382dbf0 <col:50> 'int' 57     | `-CompoundStmt 0x15382ddc0 <col:55, line:24:3>     |   |-CompoundAssignOperator 0x15382dcb8 <line:22:5, col:12> 'unsigned int' '*=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |   | |-DeclRefExpr 0x15382dc60 <col:5> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'     |   | `-ImplicitCastExpr 0x15382dca0 <col:12> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x15382dc80 <col:12> 'int' 10     |   `-CompoundAssignOperator 0x15382dd90 <line:23:5, col:17> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |     |-DeclRefExpr 0x15382dce8 <col:5> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'     |     `-ImplicitCastExpr 0x15382dd78 <col:12, col:17> 'unsigned int' <IntegralCast>     |       `-BinaryOperator 0x15382dd58 <col:12, col:17> 'int' '-'     |         |-ImplicitCastExpr 0x15382dd40 <col:12> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x15382dd08 <col:12> 'int' lvalue Var 0x15301c5f0 'ch' 'int'     |         `-CharacterLiteral 0x15382dd28 <col:17> 'int' 48     |-IfStmt 0x15382df68 <line:26:3, line:27:37>     | |-BinaryOperator 0x15382de70 <line:26:7, col:13> 'int' '>'     | | |-ImplicitCastExpr 0x15382de40 <col:7> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x15382de00 <col:7> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int'     | | `-ImplicitCastExpr 0x15382de58 <col:13> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x15382de20 <col:13> 'unsigned int' lvalue ParmVar 0x15301c428 'maxval' 'unsigned int'     | `-CallExpr 0x15382df38 <line:27:5, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15382de90 <col:5> 'int ()' Function 0x15382d400 'ERREXIT' 'int ()'     |   |-RecoveryExpr 0x15382deb0 <col:13> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x15382df18 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15382dfd8 <line:29:3, col:10>       `-ImplicitCastExpr 0x15382dfc0 <col:10> 'int' <IntegralCast>         `-ImplicitCastExpr 0x15382dfa8 <col:10> 'unsigned int' <LValueToRValue>           `-DeclRefExpr 0x15382df88 <col:10> 'unsigned int' lvalue Var 0x15301c688 'val' 'unsigned int' ","20209":"`-FunctionDecl 0x13d0a8538  line:1:5 invalid gdTransformAffineGetImage 'int (int *, const int, int, const double *)'   |-ParmVarDecl 0x13d0a8128 <col:31, col:43> col:43 referenced invalid dst 'int *'   |-ParmVarDecl 0x13d0a81a8 <line:2:5, col:22> col:22 invalid src 'const int'   |-ParmVarDecl 0x13d0a8228 <line:3:5, col:15> col:15 referenced invalid src_area 'int'   |-ParmVarDecl 0x13d0a83e0 <line:4:5, col:26> col:18 used affine 'const double *'   `-CompoundStmt 0x13d0c37d0 <line:5:1, line:50:1>     |-DeclStmt 0x13d0a8680 <line:6:2, col:9>     | `-VarDecl 0x13d0a8618 <col:2, col:6> col:6 used res 'int'     |-DeclStmt 0x13d0a8768 <line:7:2, col:13>     | `-VarDecl 0x13d0a8700 <col:2, col:12> col:9 used m 'double[6]'     |-IfStmt 0x13d0c1478 <line:11:2, line:17:2>     | |-BinaryOperator 0x13d0c1000 <line:11:6, col:18> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13d0a8780 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d0a87d8 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d0c1460 <col:24, line:17:2>     |   `-BinaryOperator 0x13d0c1440 <line:16:3, col:15> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13d0c1390 <col:3> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13d0c1370 <col:3> 'int' lvalue ParmVar 0x13d0a8228 'src_area' 'int'     |     `-UnaryOperator 0x13d0c1428 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x13d0c1408 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d0c1678 <line:19:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d0c1578 <col:2> 'int ()' Function 0x13d0c14c0 'gdTransformAffineBoundingBox' 'int ()'     | |-RecoveryExpr 0x13d0c1598 <col:31> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x13d0c15b8 <col:41> 'const double *' lvalue ParmVar 0x13d0a83e0 'affine' 'const double *'     | `-UnaryOperator 0x13d0c1660 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d0c1640 <col:50> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d0c1a70 <line:21:2, col:55> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13d0c1958 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13d0c1940 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13d0c16b0 <col:3> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13d0c1a40 <col:9, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d0c17e0 <col:9> 'int ()' Function 0x13d0c1728 'gdImageCreateTrueColor' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x13d0c1990 <col:32, col:37> '<dependent type>' contains-errors lvalue .width     |   | `-RecoveryExpr 0x13d0c1970 <col:32> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x13d0c19f8 <col:44, col:49> '<dependent type>' contains-errors lvalue .height     |     `-RecoveryExpr 0x13d0c19d8 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d0c1c18 <line:22:2, line:24:2>     | |-BinaryOperator 0x13d0c1b98 <line:22:6, col:14> 'int' contains-errors '=='     | | |-UnaryOperator 0x13d0c1b60 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x13d0c1b48 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x13d0c1a90 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d0c1b78 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d0c1c00 <col:20, line:24:2>     |   `-ReturnStmt 0x13d0c1bf0 <line:23:3, col:10>     |     `-RecoveryExpr 0x13d0c1bd0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d0c1d10 <line:25:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13d0c1ca8 <col:2, col:10> '<dependent type>' contains-errors lvalue ->saveAlphaFlag     | | `-ParenExpr 0x13d0c1c88 <col:2, col:7> '<dependent type>' contains-errors     | |   `-UnaryOperator 0x13d0c1c70 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x13d0c1c58 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |       `-RecoveryExpr 0x13d0c1c38 <col:4> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13d0c1cf0 <col:26> 'int' 1     |-IfStmt 0x13d0c1f28 <line:27:2, line:29:2>     | |-UnaryOperator 0x13d0c1db0 <line:27:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13d0c1d98 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13d0c1d50 <col:7, col:12> '<dependent type>' contains-errors lvalue ->trueColor     | |     `-RecoveryExpr 0x13d0c1d30 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d0c1f10 <col:23, line:29:2>     |   `-CallExpr 0x13d0c1ee8 <line:28:3, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13d0c1ea8 <col:3> 'int ()' Function 0x13d0c1df0 'gdImagePaletteToTrueColor' 'int ()'     |     `-RecoveryExpr 0x13d0c1ec8 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d0c30a8 <line:33:2, col:29> 'int'     | |-ImplicitCastExpr 0x13d0c3090 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13d0c2fd8 <col:2> 'int ()' Function 0x13d0c2f20 'gdAffineConcat' 'int ()'     | |-ImplicitCastExpr 0x13d0c3110 <col:17> 'double *' <ArrayToPointerDecay>     | | `-DeclRefExpr 0x13d0c2ff8 <col:17> 'double[6]' lvalue Var 0x13d0a8700 'm' 'double[6]'     | |-ImplicitCastExpr 0x13d0c3128 <col:20> 'const double *' <LValueToRValue>     | | `-DeclRefExpr 0x13d0c3018 <col:20> 'const double *' lvalue ParmVar 0x13d0a83e0 'affine' 'const double *'     | `-ImplicitCastExpr 0x13d0c3140 <col:28> 'double *' <ArrayToPointerDecay>     |   `-DeclRefExpr 0x13d0c3038 <col:28> 'double[6]' lvalue Var 0x13d0a8700 'm' 'double[6]'     |-CallExpr 0x13d0c32c8 <line:35:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d0c3238 <col:2> 'int ()' Function 0x13d0c3180 'gdImageAlphaBlending' 'int ()'     | |-UnaryOperator 0x13d0c3290 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13d0c3278 <col:24> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13d0c3258 <col:24> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13d0c32a8 <col:29> 'int' 0     |-BinaryOperator 0x13d0c3558 <line:37:2, line:41:6> 'int' contains-errors '='     | |-DeclRefExpr 0x13d0c32f8 <line:37:2> 'int' lvalue Var 0x13d0a8618 'res' 'int'     | `-CallExpr 0x13d0c3508 <col:8, line:41:6> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d0c33f8 <line:37:8> 'int ()' Function 0x13d0c3340 'gdTransformAffineCopy' 'int ()'     |   |-UnaryOperator 0x13d0c3450 <col:30, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x13d0c3438 <col:31> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x13d0c3418 <col:31> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x13d0c3468 <line:38:5> 'int' 0     |   |-IntegerLiteral 0x13d0c3488 <col:7> 'int' 0     |   |-RecoveryExpr 0x13d0c34a8 <line:39:5> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x13d0c34c8 <line:40:5> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13d0c34e8 <line:41:5> 'double[6]' lvalue Var 0x13d0a8700 'm' 'double[6]'     `-IfStmt 0x13d0c37a0 <line:43:2, line:49:2> has_else       |-RecoveryExpr 0x13d0c3598 <line:43:6, col:13> '_Bool' contains-errors       |-CompoundStmt 0x13d0c3778 <col:22, line:47:2>       | `-CallExpr 0x13d0c3708 <line:44:3, col:22> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13d0c3698 <col:3> 'int ()' Function 0x13d0c35e0 'gdImageDestroy' 'int ()'       |   `-UnaryOperator 0x13d0c36f0 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow       |     `-ImplicitCastExpr 0x13d0c36d8 <col:19> '<dependent type>' contains-errors <LValueToRValue>       |       `-RecoveryExpr 0x13d0c36b8 <col:19> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13d0c3790 <line:47:9, line:49:2> ","21049":"`-FunctionDecl 0x138143708  col:24 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x138143808 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x138143870 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1381438d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1381437b0 <<invalid sloc>> Implicit 883 ","21177":"`-FunctionDecl 0x156128318  line:1:9 invalid r_jwe_quick_parse 'int *(const char *, int, int)'   |-ParmVarDecl 0x1561280f0 <col:27, col:40> col:40 used jwe_str 'const char *'   |-ParmVarDecl 0x156128170 <col:49, col:58> col:58 invalid parse_flags 'int'   |-ParmVarDecl 0x1561281f0 <col:71, col:75> col:75 used x5u_flags 'int'   `-CompoundStmt 0x1561287a8 <col:86, line:3:1>     `-ReturnStmt 0x156128798 <line:2:3, col:79>       `-CallExpr 0x156128758 <col:10, col:79> '<dependent type>' contains-errors         |-DeclRefExpr 0x156128530 <col:10> 'int ()' Function 0x156128478 'r_jwe_quick_parsen' 'int ()'         |-DeclRefExpr 0x156128550 <col:29> 'const char *' lvalue ParmVar 0x1561280f0 'jwe_str' 'const char *'         |-CallExpr 0x1561286d8 <col:38, col:54> 'int'         | |-ImplicitCastExpr 0x1561286c0 <col:38> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x156128650 <col:38> 'int ()' Function 0x156128598 'o_strlen' 'int ()'         | `-ImplicitCastExpr 0x156128700 <col:47> 'const char *' <LValueToRValue>         |   `-DeclRefExpr 0x156128670 <col:47> 'const char *' lvalue ParmVar 0x1561280f0 'jwe_str' 'const char *'         |-RecoveryExpr 0x156128718 <col:57> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x156128738 <col:70> 'int' lvalue ParmVar 0x1561281f0 'x5u_flags' 'int' ","21158":"`-FunctionDecl 0x13f008a30  line:1:13 invalid init_ppgtt_reg_state 'void (int *, const struct i915_ppgtt *)' static   |-ParmVarDecl 0x13e928128 <col:34, col:39> col:39 invalid regs 'int *'   |-ParmVarDecl 0x13e928718 <col:45, col:70> col:70 used ppgtt 'const struct i915_ppgtt *'   `-CompoundStmt 0x13f0092a8 <line:2:1, line:12:1>     `-IfStmt 0x13f009278 <line:3:2, line:11:2> has_else       |-CallExpr 0x13f008cd8 <line:3:6, col:32> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13f008c40 <col:6> 'int ()' Function 0x13f008b88 'i915_vm_is_4lvl' 'int ()'       | `-UnaryOperator 0x13f008cc0 <col:22, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x13f008c98 <col:23, col:30> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x13f008c60 <col:23> 'const struct i915_ppgtt *' lvalue ParmVar 0x13e928718 'ppgtt' 'const struct i915_ppgtt *'       |-CompoundStmt 0x13f008e70 <col:35, line:6:2>       | `-CallExpr 0x13f008e40 <line:5:3, col:30> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13f008de0 <col:3> 'int ()' Function 0x13f008d28 'ASSIGN_CTX_PML4' 'int ()'       |   |-DeclRefExpr 0x13f008e00 <col:19> 'const struct i915_ppgtt *' lvalue ParmVar 0x13e928718 'ppgtt' 'const struct i915_ppgtt *'       |   `-RecoveryExpr 0x13f008e20 <col:26> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13f009248 <line:6:9, line:11:2>         |-CallExpr 0x13f008fe8 <line:7:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13f008f68 <col:3> 'int ()' Function 0x13f008eb0 'ASSIGN_CTX_PDP' 'int ()'         | |-DeclRefExpr 0x13f008f88 <col:18> 'const struct i915_ppgtt *' lvalue ParmVar 0x13e928718 'ppgtt' 'const struct i915_ppgtt *'         | |-RecoveryExpr 0x13f008fa8 <col:25> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13f008fc8 <col:31> 'int' 3         |-CallExpr 0x13f0090a0 <line:8:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13f009020 <col:3> 'int ()' Function 0x13f008eb0 'ASSIGN_CTX_PDP' 'int ()'         | |-DeclRefExpr 0x13f009040 <col:18> 'const struct i915_ppgtt *' lvalue ParmVar 0x13e928718 'ppgtt' 'const struct i915_ppgtt *'         | |-RecoveryExpr 0x13f009060 <col:25> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13f009080 <col:31> 'int' 2         |-CallExpr 0x13f009158 <line:9:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13f0090d8 <col:3> 'int ()' Function 0x13f008eb0 'ASSIGN_CTX_PDP' 'int ()'         | |-DeclRefExpr 0x13f0090f8 <col:18> 'const struct i915_ppgtt *' lvalue ParmVar 0x13e928718 'ppgtt' 'const struct i915_ppgtt *'         | |-RecoveryExpr 0x13f009118 <col:25> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13f009138 <col:31> 'int' 1         `-CallExpr 0x13f009210 <line:10:3, col:32> '<dependent type>' contains-errors           |-DeclRefExpr 0x13f009190 <col:3> 'int ()' Function 0x13f008eb0 'ASSIGN_CTX_PDP' 'int ()'           |-DeclRefExpr 0x13f0091b0 <col:18> 'const struct i915_ppgtt *' lvalue ParmVar 0x13e928718 'ppgtt' 'const struct i915_ppgtt *'           |-RecoveryExpr 0x13f0091d0 <col:25> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x13f0091f0 <col:31> 'int' 0 ","20311":"`-FunctionDecl 0x14380e358  line:1:5 hci_conn_check_link_mode 'int (struct hci_conn *)'   |-ParmVarDecl 0x14380e248 <col:30, col:47> col:47 used conn 'struct hci_conn *'   `-CompoundStmt 0x143829cc0 <line:2:1, line:22:1>     |-CallExpr 0x143826868 <line:3:2, col:20> 'int'     | |-ImplicitCastExpr 0x143826850 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x143826780 <col:2> 'int ()' Function 0x1438266c8 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x143826898 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x1438267e0 <col:9> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x1438268b0 <col:16> 'struct hci_conn *' <LValueToRValue>     |   `-DeclRefExpr 0x143826800 <col:16> 'struct hci_conn *' lvalue ParmVar 0x14380e248 'conn' 'struct hci_conn *'     |-IfStmt 0x143827130 <line:6:2, line:11:2>     | |-CallExpr 0x143826a90 <line:6:6, col:47> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1438269a8 <col:6> 'int ()' Function 0x1438268f0 'hci_dev_test_flag' 'int ()'     | | |-RecoveryExpr 0x143826a00 <col:24, col:30> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1438269c8 <col:24> 'struct hci_conn *' lvalue ParmVar 0x14380e248 'conn' 'struct hci_conn *'     | | `-RecoveryExpr 0x143826a70 <col:36> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143827118 <col:50, line:11:2>     |   `-IfStmt 0x1438270f8 <line:7:3, line:10:11>     |     |-BinaryOperator 0x1438270a8 <line:7:7, line:9:25> 'int' contains-errors '||'     |     | |-BinaryOperator 0x143827048 <line:7:7, line:8:47> 'int' contains-errors '||'     |     | | |-UnaryOperator 0x143826fc8 <line:7:7, col:32> 'int' prefix '!' cannot overflow     |     | | | `-CallExpr 0x143826f88 <col:8, col:32> 'int'     |     | | |   |-ImplicitCastExpr 0x143826f70 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | | |   | `-DeclRefExpr 0x143826ba0 <col:8> 'int ()' Function 0x143826ae8 'hci_conn_sc_enabled' 'int ()'     |     | | |   `-ImplicitCastExpr 0x143826fb0 <col:28> 'struct hci_conn *' <LValueToRValue>     |     | | |     `-DeclRefExpr 0x143826bc0 <col:28> 'struct hci_conn *' lvalue ParmVar 0x14380e248 'conn' 'struct hci_conn *'     |     | | `-UnaryOperator 0x143827030 <line:8:7, col:47> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | |   `-CallExpr 0x143827000 <col:8, col:47> '<dependent type>' contains-errors     |     | |     |-DeclRefExpr 0x143826d30 <col:8> 'int ()' Function 0x143826c78 'test_bit' 'int ()'     |     | |     |-RecoveryExpr 0x143826fe0 <col:17> '<dependent type>' contains-errors lvalue     |     | |     `-UnaryOperator 0x143826dc8 <col:35, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | |       `-RecoveryExpr 0x143826da0 <col:36, col:42> '<dependent type>' contains-errors lvalue     |     | |         `-DeclRefExpr 0x143826d68 <col:36> 'struct hci_conn *' lvalue ParmVar 0x14380e248 'conn' 'struct hci_conn *'     |     | `-BinaryOperator 0x143827088 <line:9:7, col:25> 'int' contains-errors '!='     |     |   |-RecoveryExpr 0x143826e80 <col:7, col:13> '<dependent type>' contains-errors lvalue     |     |   | `-DeclRefExpr 0x143826e48 <col:7> 'struct hci_conn *' lvalue ParmVar 0x14380e248 'conn' 'struct hci_conn *'     |     |   `-RecoveryExpr 0x143827068 <col:25> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x1438270e8 <line:10:4, col:11>     |       `-IntegerLiteral 0x1438270c8 <col:11> 'int' 0     |-IfStmt 0x143827548 <line:13:2, line:15:10>     | |-BinaryOperator 0x1438274f8 <line:13:6, line:14:46> 'int' contains-errors '&&'     | | |-CallExpr 0x143827450 <line:13:6, col:31> 'int'     | | | |-ImplicitCastExpr 0x143827438 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x143827230 <col:6> 'int ()' Function 0x143827178 'hci_conn_ssp_enabled' 'int ()'     | | | `-ImplicitCastExpr 0x143827478 <col:27> 'struct hci_conn *' <LValueToRValue>     | | |   `-DeclRefExpr 0x143827250 <col:27> 'struct hci_conn *' lvalue ParmVar 0x14380e248 'conn' 'struct hci_conn *'     | | `-UnaryOperator 0x1438274e0 <line:14:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x1438274b0 <col:7, col:46> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x1438272c8 <col:7> 'int ()' Function 0x143826c78 'test_bit' 'int ()'     | |     |-RecoveryExpr 0x143827490 <col:16> '<dependent type>' contains-errors lvalue     | |     `-UnaryOperator 0x143827360 <col:34, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | |       `-RecoveryExpr 0x143827338 <col:35, col:41> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x143827300 <col:35> 'struct hci_conn *' lvalue ParmVar 0x14380e248 'conn' 'struct hci_conn *'     | `-ReturnStmt 0x143827538 <line:15:3, col:10>     |   `-IntegerLiteral 0x143827518 <col:10> 'int' 0     |-IfStmt 0x143829c70 <line:18:2, line:19:10>     | |-BinaryOperator 0x143829c20 <line:18:6, col:27> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1438275a0 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x143827568 <col:6> 'struct hci_conn *' lvalue ParmVar 0x14380e248 'conn' 'struct hci_conn *'     | | `-RecoveryExpr 0x143829c00 <col:27> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x143829c60 <line:19:3, col:10>     |   `-IntegerLiteral 0x143829c40 <col:10> 'int' 0     `-ReturnStmt 0x143829cb0 <line:21:2, col:9>       `-IntegerLiteral 0x143829c90 <col:9> 'int' 1 ","21171":"`-FunctionDecl 0x1550281c8  col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1550282c8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x155028330 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x155028398 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x155028270 <<invalid sloc>> Implicit 884 ","20778":"`-FunctionDecl 0x12582ba28  col:23 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12582bb28 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12582bad0 <<invalid sloc>> Implicit 902 ","20318":"`-FunctionDecl 0x12901dfa8  line:1:1 DECLAREContigPutFunc 'int (int)'   |-ParmVarDecl 0x12901ded8 <col:22> col:22 put16bitbwtile 'int'   `-CompoundStmt 0x12b008318 <line:2:1, line:21:1>     |-DeclStmt 0x12901e200 <line:3:5, col:47>     | `-VarDecl 0x12901e0b8 <col:5, col:32> col:9 used samplesperpixel 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x12901e1b8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->samplesperpixel     |     `-RecoveryExpr 0x12901e198 <col:27> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x12b0082f8 <line:7:5, line:20:5>       |-BinaryOperator 0x12901e390 <line:7:12, col:18> 'int' contains-errors '>'       | |-UnaryOperator 0x12901e378 <col:12, col:13> '<dependent type>' contains-errors postfix '--' cannot overflow       | | `-RecoveryExpr 0x12901e358 <col:12> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x12901e318 <col:18> 'int' 0       `-CompoundStmt 0x12b0082e0 <col:21, line:20:5>         `-ForStmt 0x12b0082a8 <line:10:2, line:17:9>           |-<<<NULL>>>           |-<<<NULL>>>           |-BinaryOperator 0x12901e4d8 <line:10:14, col:20> 'int' contains-errors '>'           | |-UnaryOperator 0x12901e4c0 <col:14, col:15> '<dependent type>' contains-errors postfix '--' cannot overflow           | | `-RecoveryExpr 0x12901e4a0 <col:14> '<dependent type>' contains-errors lvalue           | `-IntegerLiteral 0x12901e460 <col:20> 'int' 0           |-<<<NULL>>>           `-CompoundStmt 0x12b008298 <line:11:9, line:17:9> ","20988":"`-FunctionDecl 0x157928758  line:1:12 wrmsr_interception 'int (struct vcpu_svm *)' static   |-ParmVarDecl 0x157928648 <col:31, col:48> col:48 used svm 'struct vcpu_svm *'   `-CompoundStmt 0x1610092e8 <line:2:1, line:21:1>     |-DeclStmt 0x157940bc8 <line:3:2, col:21>     | |-RecordDecl 0x157940a50 <col:2, col:9> col:9 struct msr_data     | `-VarDecl 0x157940b48 <col:2, col:18> col:18 referenced invalid msr 'struct msr_data'     |-BinaryOperator 0x157940ce0 <line:8:2, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157940c40 <col:2, col:6> '<dependent type>' contains-errors lvalue .data     | | `-RecoveryExpr 0x157940c18 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x157940bf8 <col:2> 'struct msr_data' lvalue Var 0x157940b48 'msr' 'struct msr_data'     | `-RecoveryExpr 0x157940cc0 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157940de8 <line:9:2, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157940d48 <col:2, col:6> '<dependent type>' contains-errors lvalue .index     | | `-RecoveryExpr 0x157940d20 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x157940d00 <col:2> 'struct msr_data' lvalue Var 0x157940b48 'msr' 'struct msr_data'     | `-RecoveryExpr 0x157940dc8 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157941120 <line:12:2, col:45> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x157940ee8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x157940eb0 <col:2> 'struct vcpu_svm *' lvalue ParmVar 0x157928648 'svm' 'struct vcpu_svm *'     | `-BinaryOperator 0x157941100 <col:18, col:45> '<dependent type>' contains-errors '+'     |   |-CallExpr 0x1579410b8 <col:18, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x157941020 <col:18> 'int ()' Function 0x157940f68 'kvm_rip_read' 'int ()'     |   | `-UnaryOperator 0x1579410a0 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x157941078 <col:32, col:37> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x157941040 <col:32> 'struct vcpu_svm *' lvalue ParmVar 0x157928648 'svm' 'struct vcpu_svm *'     |   `-IntegerLiteral 0x1579410e0 <col:45> 'int' 2     |-IfStmt 0x161009288 <line:13:2, line:19:2> has_else     | |-CallExpr 0x1579412f0 <line:13:6, col:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x157941220 <col:6> 'int ()' Function 0x157941168 'svm_set_msr' 'int ()'     | | |-UnaryOperator 0x1579412a0 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x157941278 <col:19, col:24> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x157941240 <col:19> 'struct vcpu_svm *' lvalue ParmVar 0x157928648 'svm' 'struct vcpu_svm *'     | | `-UnaryOperator 0x1579412d8 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1579412b8 <col:31> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1579416b8 <col:37, line:16:2>     | | |-CallExpr 0x1579414c0 <line:14:3, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x157941400 <col:3> 'int ()' Function 0x157941348 'trace_kvm_msr_write_ex' 'int ()'     | | | |-RecoveryExpr 0x157941480 <col:26> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x1579414a0 <col:31> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x157941688 <line:15:3, col:30> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1579415d0 <col:3> 'int ()' Function 0x157941518 'kvm_inject_gp' 'int ()'     | |   |-UnaryOperator 0x157941650 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-RecoveryExpr 0x157941628 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x1579415f0 <col:18> 'struct vcpu_svm *' lvalue ParmVar 0x157928648 'svm' 'struct vcpu_svm *'     | |   `-IntegerLiteral 0x157941668 <col:29> 'int' 0     | `-CompoundStmt 0x161009268 <line:16:9, line:19:2>     |   |-CallExpr 0x157941878 <line:17:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1579417b8 <col:3> 'int ()' Function 0x157941700 'trace_kvm_msr_write' 'int ()'     |   | |-RecoveryExpr 0x157941838 <col:23> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x157941858 <col:28> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x161009240 <line:18:3, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x157941988 <col:3> 'int ()' Function 0x1579418d0 'skip_emulated_instruction' 'int ()'     |     `-UnaryOperator 0x161009228 <col:29, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x161009200 <col:30, col:35> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1579419a8 <col:30> 'struct vcpu_svm *' lvalue ParmVar 0x157928648 'svm' 'struct vcpu_svm *'     `-ReturnStmt 0x1610092d8 <line:20:2, col:9>       `-IntegerLiteral 0x1610092b8 <col:9> 'int' 1 ","20277":"`-FunctionDecl 0x125028e78  line:1:12 selinux_socket_accept 'int (struct socket *, struct socket *)' static   |-ParmVarDecl 0x125010a48 <col:34, col:49> col:49 used sock 'struct socket *'   |-ParmVarDecl 0x125010b38 <col:55, col:70> col:70 used newsock 'struct socket *'   `-CompoundStmt 0x12502b4b8 <line:2:1, line:25:1>     |-DeclStmt 0x125028ff8 <line:3:2, col:9>     | `-VarDecl 0x125028f90 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x1250291f8 <line:4:2, col:36>     | |-RecordDecl 0x125029010 <col:2, col:9> col:9 struct inode_security_struct     | `-VarDecl 0x125029178 <col:2, col:32> col:32 used isec 'struct inode_security_struct *'     |-DeclStmt 0x125029300 <line:5:2, col:39>     | `-VarDecl 0x125029298 <col:2, col:32> col:32 used newisec 'struct inode_security_struct *'     |-BinaryOperator 0x125029598 <line:9:2, col:46> 'int' contains-errors '='     | |-DeclRefExpr 0x125029330 <col:2> 'int' lvalue Var 0x125028f90 'err' 'int'     | `-CallExpr 0x125029568 <col:8, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125029460 <col:8> 'int ()' Function 0x1250293a8 'sock_has_perm' 'int ()'     |   |-RecoveryExpr 0x1250294b8 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x125029480 <col:22> 'struct socket *' lvalue ParmVar 0x125010a48 'sock' 'struct socket *'     |   `-RecoveryExpr 0x125029548 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125029638 <line:10:2, line:11:10>     | |-ImplicitCastExpr 0x1250295d8 <line:10:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1250295b8 <col:6> 'int' lvalue Var 0x125028f90 'err' 'int'     | `-ReturnStmt 0x125029628 <line:11:3, col:10>     |   `-ImplicitCastExpr 0x125029610 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1250295f0 <col:10> 'int' lvalue Var 0x125028f90 'err' 'int'     |-BinaryOperator 0x125029980 <line:13:2, col:51> 'struct inode_security_struct *' '='     | |-DeclRefExpr 0x125029658 <col:2> 'struct inode_security_struct *' lvalue Var 0x125029178 'isec' 'struct inode_security_struct *'     | `-ImplicitCastExpr 0x125029968 <col:9, col:51> 'struct inode_security_struct *' <IntegralToPointer>     |   `-CallExpr 0x125029940 <col:9, col:51> 'int'     |     |-ImplicitCastExpr 0x125029928 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x125029758 <col:9> 'int ()' Function 0x1250296a0 'inode_security_novalidate' 'int ()'     |     `-CallExpr 0x1250298e8 <col:35, col:50> 'int'     |       |-ImplicitCastExpr 0x1250298d0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x125029858 <col:35> 'int ()' Function 0x1250297a0 'SOCK_INODE' 'int ()'     |       `-ImplicitCastExpr 0x125029910 <col:46> 'struct socket *' <LValueToRValue>     |         `-DeclRefExpr 0x125029878 <col:46> 'struct socket *' lvalue ParmVar 0x125010a48 'sock' 'struct socket *'     |-CallExpr 0x125029b18 <line:14:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125029a80 <col:2> 'int ()' Function 0x1250299c8 'spin_lock' 'int ()'     | `-UnaryOperator 0x125029b00 <col:12, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x125029ad8 <col:13, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125029aa0 <col:13> 'struct inode_security_struct *' lvalue Var 0x125029178 'isec' 'struct inode_security_struct *'     |-CallExpr 0x125029d78 <line:17:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125029ce0 <col:2> 'int ()' Function 0x125029c28 'spin_unlock' 'int ()'     | `-UnaryOperator 0x125029d60 <col:14, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x125029d38 <col:15, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125029d00 <col:15> 'struct inode_security_struct *' lvalue Var 0x125029178 'isec' 'struct inode_security_struct *'     |-BinaryOperator 0x12502b2d0 <line:19:2, col:57> 'struct inode_security_struct *' '='     | |-DeclRefExpr 0x125029da0 <col:2> 'struct inode_security_struct *' lvalue Var 0x125029298 'newisec' 'struct inode_security_struct *'     | `-ImplicitCastExpr 0x12502b2b8 <col:12, col:57> 'struct inode_security_struct *' <IntegralToPointer>     |   `-CallExpr 0x12502b290 <col:12, col:57> 'int'     |     |-ImplicitCastExpr 0x12502b278 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x125029dc0 <col:12> 'int ()' Function 0x1250296a0 'inode_security_novalidate' 'int ()'     |     `-CallExpr 0x12502b238 <col:38, col:56> 'int'     |       |-ImplicitCastExpr 0x12502b220 <col:38> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x125029de0 <col:38> 'int ()' Function 0x1250297a0 'SOCK_INODE' 'int ()'     |       `-ImplicitCastExpr 0x12502b260 <col:49> 'struct socket *' <LValueToRValue>     |         `-DeclRefExpr 0x12502b200 <col:49> 'struct socket *' lvalue ParmVar 0x125010b38 'newsock' 'struct socket *'     |-BinaryOperator 0x12502b3a8 <line:20:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12502b328 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12502b2f0 <col:2> 'struct inode_security_struct *' lvalue Var 0x125029298 'newisec' 'struct inode_security_struct *'     | `-RecoveryExpr 0x12502b388 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12502b4a8 <line:24:2, col:9>       `-IntegerLiteral 0x12502b488 <col:9> 'int' 0 ","20873":"`-FunctionDecl 0x134128750  col:20 memcg_propagate_slab_attrs 'void (struct kmem_cache *)' static inline   |-ParmVarDecl 0x134128648 <col:47, col:66> col:66 s 'struct kmem_cache *'   `-CompoundStmt 0x134140a48 <col:69, col:71> ","21069":"`-FunctionDecl 0x14e928118  line:1:1 referenced hb_map_create 'int ()'   `-CompoundStmt 0x14e9284c0 <line:2:1, line:11:1>     |-IfStmt 0x14e928458 <line:5:3, line:6:30>     | |-RecoveryExpr 0x14e9282c0 <line:5:7, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x14e928448 <line:6:5, col:30>     |   `-CallExpr 0x14e928428 <col:12, col:30> 'int'     |     `-ImplicitCastExpr 0x14e928410 <col:12> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x14e9283c0 <col:12> 'int ()' Function 0x14e928308 'hb_map_get_empty' 'int ()'     `-ReturnStmt 0x14e9284b0 <line:10:3, col:10>       `-RecoveryExpr 0x14e928490 <col:10> '<dependent type>' contains-errors lvalue ","21223":"`-FunctionDecl 0x150928368  line:1:27 invalid SortHuffmanTreeItems 'int (int *, const int, int)' static   |-ParmVarDecl 0x150928128 <col:48, col:61> col:61 referenced invalid items 'int *'   |-ParmVarDecl 0x1509281a8 <line:2:5, col:18> col:18 invalid n 'const int'   |-ParmVarDecl 0x150928228 <col:21, col:43> col:43 invalid comparator 'int'   `-CompoundStmt 0x150942150 <col:55, line:35:1>     |-DeclStmt 0x150928650 <line:3:3, col:55>     | `-VarDecl 0x1509284b8 <col:3, col:28> col:23 invalid gaps 'const int[]' static     `-IfStmt 0x150942120 <line:4:3, line:34:3> has_else       |-BinaryOperator 0x1509286a8 <line:4:7, col:11> 'int' contains-errors '<'       | |-RecoveryExpr 0x150928668 <col:7> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x150928688 <col:11> 'int' 13       |-CompoundStmt 0x150941d48 <col:15, line:19:3>       | |-UnaryExprOrTypeTraitExpr 0x150928720 <line:6:5, col:12> 'unsigned long' contains-errors sizeof       | | `-RecoveryExpr 0x150928700 <col:12> '<dependent type>' contains-errors lvalue       | |-ForStmt 0x150941d00 <line:7:5, line:17:5>       | | |-<<<NULL>>>       | | |-<<<NULL>>>       | | |-BinaryOperator 0x150941820 <line:7:17, col:21> 'int' contains-errors '<'       | | | |-RecoveryExpr 0x150941800 <col:17> '<dependent type>' contains-errors lvalue       | | | `-RecoveryExpr 0x1509287b0 <col:21> '<dependent type>' contains-errors lvalue       | | |-UnaryOperator 0x150941890 <col:24, col:26> '<dependent type>' contains-errors prefix '++' cannot overflow       | | | `-RecoveryExpr 0x150941870 <col:26> '<dependent type>' contains-errors lvalue       | | `-CompoundStmt 0x150941cd8 <col:29, line:17:5>       | |   |-BinaryOperator 0x150941978 <line:9:7, col:18> 'unsigned long' contains-errors '='       | |   | |-UnaryExprOrTypeTraitExpr 0x150941938 <col:7, col:14> 'unsigned long' contains-errors sizeof       | |   | | `-RecoveryExpr 0x150941918 <col:14> '<dependent type>' contains-errors lvalue       | |   | `-RecoveryExpr 0x150941958 <col:18> '<dependent type>' contains-errors lvalue       | |   |-BinaryOperator 0x150941ac8 <line:10:7, col:22> 'unsigned long' contains-errors '='       | |   | |-UnaryExprOrTypeTraitExpr 0x150941a68 <col:7, col:14> 'unsigned long' contains-errors sizeof       | |   | | `-RecoveryExpr 0x150941a48 <col:14> '<dependent type>' contains-errors lvalue       | |   | `-BinaryOperator 0x150941aa8 <col:18, col:22> '<dependent type>' contains-errors '-'       | |   |   |-RecoveryExpr 0x150941a88 <col:18> '<dependent type>' contains-errors lvalue       | |   |   `-IntegerLiteral 0x1509419e8 <col:22> 'int' 1       | |   `-WhileStmt 0x150941c70 <line:11:7, line:15:7>       | |     |-RecoveryExpr 0x150941b70 <line:11:14, col:40> '_Bool' contains-errors       | |     `-CompoundStmt 0x150941c58 <col:43, line:15:7>       | |       `-IfStmt 0x150941c38 <line:14:9, col:19>       | |         |-RecoveryExpr 0x150941c10 <col:13, col:15> '_Bool' contains-errors       | |         `-BreakStmt 0x150941c30 <col:19>       | `-ReturnStmt 0x150941d38 <line:18:5>       `-CompoundStmt 0x150942100 <line:19:10, line:34:3>         |-DeclStmt 0x150941ec0 <line:21:5, col:27>         | `-VarDecl 0x150941d88 <col:5, col:26> col:9 used g 'int' cinit         |   `-ConditionalOperator 0x150941e90 <col:13, col:26> '<dependent type>' contains-errors         |     |-BinaryOperator 0x150941e30 <col:13, col:17> 'int' contains-errors '<'         |     | |-RecoveryExpr 0x150941df0 <col:13> '<dependent type>' contains-errors lvalue         |     | `-IntegerLiteral 0x150941e10 <col:17> 'int' 57         |     |-IntegerLiteral 0x150941e50 <col:22> 'int' 2         |     `-IntegerLiteral 0x150941e70 <col:26> 'int' 0         `-ForStmt 0x1509420c8 <line:22:5, line:33:5>           |-<<<NULL>>>           |-<<<NULL>>>           |-BinaryOperator 0x150941f30 <line:22:12, col:16> 'int' contains-errors '<'           | |-ImplicitCastExpr 0x150941f18 <col:12> 'int' contains-errors <LValueToRValue>           | | `-DeclRefExpr 0x150941ed8 <col:12> 'int' contains-errors lvalue Var 0x150941d88 'g' 'int'           | `-IntegerLiteral 0x150941ef8 <col:16> 'int' 6           |-UnaryOperator 0x150941f70 <col:19, col:21> 'int' contains-errors prefix '++'           | `-DeclRefExpr 0x150941f50 <col:21> 'int' contains-errors lvalue Var 0x150941d88 'g' 'int'           `-CompoundStmt 0x1509420b8 <col:24, line:33:5> ","21159":"`-FunctionDecl 0x15b80ddf0  line:1:13 invalid release_log_entries 'void (int *)' static   |-ParmVarDecl 0x15b80dd28 <col:33, col:49> col:49 referenced invalid part_info 'int *'   `-CompoundStmt 0x15b1228e8 <line:2:1, line:9:1>     |-CallExpr 0x15b80e0b0 <line:3:3, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b80e000 <col:3> 'int ()' Function 0x15b80df48 'mysql_mutex_lock' 'int ()'     | `-UnaryOperator 0x15b80e098 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15b80e078 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b80e240 <line:4:3, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b80e1b8 <col:3> 'int ()' Function 0x15b80e100 'release_part_info_log_entries' 'int ()'     | `-CXXDependentScopeMemberExpr 0x15b80e1f8 <col:33, col:44> '<dependent type>' contains-errors lvalue ->first_log_entry     |   `-RecoveryExpr 0x15b80e1d8 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b80e2f0 <line:5:3, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b80e268 <col:3> 'int ()' Function 0x15b80e100 'release_part_info_log_entries' 'int ()'     | `-CXXDependentScopeMemberExpr 0x15b80e2a8 <col:33, col:44> '<dependent type>' contains-errors lvalue ->exec_log_entry     |   `-RecoveryExpr 0x15b80e288 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b1226b0 <line:6:3, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b122600 <col:3> 'int ()' Function 0x15b80e340 'mysql_mutex_unlock' 'int ()'     | `-UnaryOperator 0x15b122698 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15b122678 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15b1227c0 <line:7:3, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15b122720 <col:3, col:14> '<dependent type>' contains-errors lvalue ->first_log_entry     | | `-RecoveryExpr 0x15b1226f8 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b1226d8 <col:3> 'int *' lvalue ParmVar 0x15b80dd28 'part_info' 'int *'     | `-RecoveryExpr 0x15b1227a0 <col:31> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x15b1228c8 <line:8:3, col:30> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x15b122828 <col:3, col:14> '<dependent type>' contains-errors lvalue ->exec_log_entry       | `-RecoveryExpr 0x15b122800 <col:3> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x15b1227e0 <col:3> 'int *' lvalue ParmVar 0x15b80dd28 'part_info' 'int *'       `-RecoveryExpr 0x15b1228a8 <col:30> '<dependent type>' contains-errors lvalue ","20902":"`-FunctionDecl 0x157027438  line:1:1 referenced invalid ofputil_format_version_bitmap 'int (struct ds *, int)'   |-ParmVarDecl 0x15700e248 <col:31, col:42> col:42 used msg 'struct ds *'   |-ParmVarDecl 0x15700e2e0 <col:47, col:56> col:56 invalid bitmap 'int'   `-CompoundStmt 0x157027778 <line:2:1, line:4:1>     `-CallExpr 0x157027740 <line:3:5, col:72> '<dependent type>' contains-errors       |-DeclRefExpr 0x157027650 <col:5> 'int ()' Function 0x157027598 'ofputil_format_version_bitmap__' 'int ()'       |-DeclRefExpr 0x157027670 <col:37> 'struct ds *' lvalue ParmVar 0x15700e248 'msg' 'struct ds *'       |-RecoveryExpr 0x157027690 <col:42> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x157027720 <col:50> '<dependent type>' contains-errors lvalue ","20545":"`-FunctionDecl 0x12f0112f8  line:1:19 invalid tee_svc_cipher_update_helper 'int (unsigned long, int, const void *, int, void *, int *)' static   |-ParmVarDecl 0x12f010ef0 <col:48, col:62> col:62 used state 'unsigned long'   |-ParmVarDecl 0x12f010f70 <line:2:4, col:9> col:9 invalid last_block 'int'   |-ParmVarDecl 0x12f011028 <col:21, col:33> col:33 used src 'const void *'   |-ParmVarDecl 0x12f0110a8 <col:38, col:45> col:45 invalid src_len 'int'   |-ParmVarDecl 0x12f011128 <line:3:4, col:10> col:10 used dst 'void *'   |-ParmVarDecl 0x12f0111d8 <col:15, col:25> col:25 invalid dst_len 'int *'   `-CompoundStmt 0x1380a5ba0 <line:4:1, line:69:1>     |-DeclStmt 0x12f0115b8 <line:6:2, col:27>     | |-RecordDecl 0x12f0113d0 <col:2, col:9> col:9 struct tee_cryp_state     | `-VarDecl 0x12f011538 <col:2, col:25> col:25 used cs 'struct tee_cryp_state *'     |-DeclStmt 0x138862be8 <line:7:2, col:29>     | |-RecordDecl 0x138862a00 <col:2, col:9> col:9 struct tee_ta_session     | `-VarDecl 0x138862b68 <col:2, col:25> col:25 used sess 'struct tee_ta_session *'     |-IfStmt 0x138862f88 <line:11:2, line:12:10>     | |-BinaryOperator 0x138862f20 <line:11:6, col:13> 'int' contains-errors '!='     | | |-RecoveryExpr 0x138862ee0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x138862f00 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x138862f78 <line:12:3, col:10>     |   `-RecoveryExpr 0x138862f58 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138863438 <line:15:2, line:16:10>     | |-BinaryOperator 0x1388633d0 <line:15:6, col:13> 'int' contains-errors '!='     | | |-RecoveryExpr 0x138863390 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1388633b0 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x138863428 <line:16:3, col:10>     |   `-RecoveryExpr 0x138863408 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1380a5200 <line:25:2, line:39:2> has_else     | |-UnaryOperator 0x138863758 <line:25:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138863740 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x138863720 <col:7> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x138863790 <col:16, line:27:2>     | `-CompoundStmt 0x1388639c8 <col:9, line:39:2>     |-IfStmt 0x1380a52f0 <line:41:2, line:44:2>     | |-RecoveryExpr 0x1380a5250 <line:41:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x1380a52d8 <col:22, line:44:2>     |   `-GotoStmt 0x1380a52c0 <line:43:3, col:8> 'out' 0x1380a5270     |-IfStmt 0x1380a5678 <line:46:2, line:50:2>     | |-BinaryOperator 0x1380a5350 <line:46:6, col:16> 'int' contains-errors '>'     | | |-RecoveryExpr 0x1380a5310 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1380a5330 <col:16> 'int' 0     | `-CompoundStmt 0x1380a5668 <col:19, line:50:2>     |-IfStmt 0x1380a5900 <line:52:2, line:55:2>     | |-RecoveryExpr 0x1380a5718 <line:52:6, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x1380a58e8 <col:46, line:55:2>     |   `-CallExpr 0x1380a5858 <line:53:3, col:37> '<dependent type>' contains-errors     |     |-RecoveryExpr 0x1380a5770 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1380a5738 <col:3> 'struct tee_cryp_state *' lvalue Var 0x12f011538 'cs' 'struct tee_cryp_state *'     |     |-RecoveryExpr 0x1380a57d0 <col:20, col:24> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1380a5798 <col:20> 'struct tee_cryp_state *' lvalue Var 0x12f011538 'cs' 'struct tee_cryp_state *'     |     `-RecoveryExpr 0x1380a5830 <col:29, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1380a57f8 <col:29> 'struct tee_cryp_state *' lvalue Var 0x12f011538 'cs' 'struct tee_cryp_state *'     `-LabelStmt 0x1380a5b80 <line:57:1, line:66:2> 'out'       `-IfStmt 0x1380a5b60 <line:58:2, line:66:2>         |-RecoveryExpr 0x1380a5940 <line:58:6, line:59:17> '_Bool' contains-errors         `-CompoundStmt 0x1380a5b50 <col:23, line:66:2> ","20870":"`-FunctionDecl 0x144941548  line:1:1 get_endpoints 'int (struct usbtest_dev *, struct usb_interface *)'   |-ParmVarDecl 0x144929048 <col:15, col:35> col:35 used dev 'struct usbtest_dev *'   |-ParmVarDecl 0x144941428 <col:40, col:62> col:62 used intf 'struct usb_interface *'   `-CompoundStmt 0x145009508 <line:2:1, line:96:1>     |-DeclStmt 0x1449416c8 <line:3:2, col:12>     | `-VarDecl 0x144941660 <col:2, col:9> col:9 used tmp 'int'     |-DeclStmt 0x1449418c8 <line:4:2, col:32>     | |-RecordDecl 0x1449416e0 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x144941848 <col:2, col:29> col:29 used alt 'struct usb_host_interface *'     |-DeclStmt 0x144941b60 <line:5:2, col:36>     | |-RecordDecl 0x1449418e0 <col:2, col:9> col:9 struct usb_host_endpoint     | |-VarDecl 0x144941a48 <col:2, col:28> col:28 used in 'struct usb_host_endpoint *'     | `-VarDecl 0x144941ad8 <col:2, col:33> col:33 used out 'struct usb_host_endpoint *'     |-DeclStmt 0x144941d18 <line:6:2, col:44>     | |-VarDecl 0x144941c08 <col:2, col:28> col:28 used iso_in 'struct usb_host_endpoint *'     | `-VarDecl 0x144941c98 <col:2, col:37> col:37 used iso_out 'struct usb_host_endpoint *'     |-DeclStmt 0x144941e68 <line:7:2, col:44>     | |-VarDecl 0x144941d58 <col:2, col:28> col:28 used int_in 'struct usb_host_endpoint *'     | `-VarDecl 0x144941de8 <col:2, col:37> col:37 used int_out 'struct usb_host_endpoint *'     |-DeclStmt 0x144942068 <line:8:2, col:26>     | |-RecordDecl 0x144941e80 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x144941fe8 <col:2, col:22> col:22 used udev 'struct usb_device *'     |-ForStmt 0x144945348 <line:10:2, line:48:2>     | |-BinaryOperator 0x1449420c0 <line:10:7, col:13> 'int' '='     | | |-DeclRefExpr 0x144942080 <col:7> 'int' lvalue Var 0x144941660 'tmp' 'int'     | | `-IntegerLiteral 0x1449420a0 <col:13> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x144942160 <col:16, col:28> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1449420e0 <col:16> 'int' lvalue Var 0x144941660 'tmp' 'int'     | | `-RecoveryExpr 0x144942138 <col:22, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144942100 <col:22> 'struct usb_interface *' lvalue ParmVar 0x144941428 'intf' 'struct usb_interface *'     | |-UnaryOperator 0x1449421a0 <col:44, col:47> 'int' postfix '++'     | | `-DeclRefExpr 0x144942180 <col:44> 'int' lvalue Var 0x144941660 'tmp' 'int'     | `-CompoundStmt 0x1449452f8 <col:51, line:48:2>     |   |-DeclStmt 0x144942238 <line:11:3, col:14>     |   | `-VarDecl 0x1449421d0 <col:3, col:12> col:12 used ep 'unsigned int'     |   |-BinaryOperator 0x144942340 <line:13:3, col:14> 'struct usb_host_endpoint *' contains-errors '='     |   | |-DeclRefExpr 0x144942250 <col:3> 'struct usb_host_endpoint *' lvalue Var 0x144941a48 'in' 'struct usb_host_endpoint *'     |   | `-BinaryOperator 0x144942320 <col:8, col:14> 'struct usb_host_endpoint *' contains-errors '='     |   |   |-DeclRefExpr 0x144942270 <col:8> 'struct usb_host_endpoint *' lvalue Var 0x144941ad8 'out' 'struct usb_host_endpoint *'     |   |   `-RecoveryExpr 0x144942300 <col:14> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x144942440 <line:14:3, col:22> 'struct usb_host_endpoint *' contains-errors '='     |   | |-DeclRefExpr 0x144942360 <col:3> 'struct usb_host_endpoint *' lvalue Var 0x144941c08 'iso_in' 'struct usb_host_endpoint *'     |   | `-BinaryOperator 0x144942420 <col:12, col:22> 'struct usb_host_endpoint *' contains-errors '='     |   |   |-DeclRefExpr 0x144942380 <col:12> 'struct usb_host_endpoint *' lvalue Var 0x144941c98 'iso_out' 'struct usb_host_endpoint *'     |   |   `-RecoveryExpr 0x144942400 <col:22> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x144942538 <line:15:3, col:22> 'struct usb_host_endpoint *' contains-errors '='     |   | |-DeclRefExpr 0x144942460 <col:3> 'struct usb_host_endpoint *' lvalue Var 0x144941d58 'int_in' 'struct usb_host_endpoint *'     |   | `-BinaryOperator 0x144942518 <col:12, col:22> 'struct usb_host_endpoint *' contains-errors '='     |   |   |-DeclRefExpr 0x144942480 <col:12> 'struct usb_host_endpoint *' lvalue Var 0x144941de8 'int_out' 'struct usb_host_endpoint *'     |   |   `-RecoveryExpr 0x1449424f8 <col:22> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x144942618 <line:16:3, col:28> 'struct usb_host_interface *' contains-errors '='     |   | |-DeclRefExpr 0x144942558 <col:3> 'struct usb_host_interface *' lvalue Var 0x144941848 'alt' 'struct usb_host_interface *'     |   | `-BinaryOperator 0x1449425f8 <col:9, col:28> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x1449425b0 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x144942578 <col:9> 'struct usb_interface *' lvalue ParmVar 0x144941428 'intf' 'struct usb_interface *'     |   |   `-DeclRefExpr 0x1449425d8 <col:28> 'int' lvalue Var 0x144941660 'tmp' 'int'     |   |-IfStmt 0x144942838 <line:18:3, line:20:4>     |   | |-BinaryOperator 0x144942810 <line:18:7, line:19:31> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x1449427b0 <line:18:7, col:23> 'int' contains-errors '>='     |   | | | |-RecoveryExpr 0x144942790 <col:7> '<dependent type>' contains-errors lvalue     |   | | | `-IntegerLiteral 0x144942650 <col:23> 'int' 0     |   | | `-BinaryOperator 0x1449427f0 <line:19:5, col:31> 'int' contains-errors '!='     |   | |   |-RecoveryExpr 0x1449427d0 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-CXXDependentScopeMemberExpr 0x144942708 <col:21, col:31> '<dependent type>' contains-errors lvalue .bAlternateSetting     |   | |     `-RecoveryExpr 0x1449426e0 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x1449426a8 <col:21> 'struct usb_host_interface *' lvalue Var 0x144941848 'alt' 'struct usb_host_interface *'     |   | `-ContinueStmt 0x144942830 <line:20:4>     |   |-ForStmt 0x144945028 <line:23:3, line:45:3>     |   | |-BinaryOperator 0x1449428b0 <line:23:8, col:13> 'unsigned int' '='     |   | | |-DeclRefExpr 0x144942858 <col:8> 'unsigned int' lvalue Var 0x1449421d0 'ep' 'unsigned int'     |   | | `-ImplicitCastExpr 0x144942898 <col:13> 'unsigned int' <IntegralCast>     |   | |   `-IntegerLiteral 0x144942878 <col:13> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x144942998 <col:16, col:31> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x1449428d0 <col:16> 'unsigned int' lvalue Var 0x1449421d0 'ep' 'unsigned int'     |   | | `-CXXDependentScopeMemberExpr 0x144942950 <col:21, col:31> '<dependent type>' contains-errors lvalue .bNumEndpoints     |   | |   `-RecoveryExpr 0x144942928 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x1449428f0 <col:21> 'struct usb_host_interface *' lvalue Var 0x144941848 'alt' 'struct usb_host_interface *'     |   | |-UnaryOperator 0x1449429d8 <col:46, col:48> 'unsigned int' postfix '++'     |   | | `-DeclRefExpr 0x1449429b8 <col:46> 'unsigned int' lvalue Var 0x1449421d0 'ep' 'unsigned int'     |   | `-CompoundStmt 0x144944ff0 <col:52, line:45:3>     |   |   |-DeclStmt 0x144942a80 <line:24:4, col:31>     |   |   | `-VarDecl 0x144942a18 <col:4, col:30> col:30 used e 'struct usb_host_endpoint *'     |   |   |-DeclStmt 0x144942b18 <line:25:4, col:11>     |   |   | `-VarDecl 0x144942ab0 <col:4, col:8> col:8 used edi 'int'     |   |   |-BinaryOperator 0x144942bf0 <line:27:4, col:24> 'struct usb_host_endpoint *' contains-errors '='     |   |   | |-DeclRefExpr 0x144942b30 <col:4> 'struct usb_host_endpoint *' lvalue Var 0x144942a18 'e' 'struct usb_host_endpoint *'     |   |   | `-BinaryOperator 0x144942bd0 <col:8, col:24> '<dependent type>' contains-errors '+'     |   |   |   |-RecoveryExpr 0x144942b88 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   |   |   | `-DeclRefExpr 0x144942b50 <col:8> 'struct usb_host_interface *' lvalue Var 0x144941848 'alt' 'struct usb_host_interface *'     |   |   |   `-DeclRefExpr 0x144942bb0 <col:24> 'unsigned int' lvalue Var 0x1449421d0 'ep' 'unsigned int'     |   |   |-BinaryOperator 0x144942e00 <line:28:4, col:38> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x144942c10 <col:4> 'int' lvalue Var 0x144942ab0 'edi' 'int'     |   |   | `-CallExpr 0x144942dd8 <col:10, col:38> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x144942d40 <col:10> 'int ()' Function 0x144942c88 'usb_endpoint_dir_in' 'int ()'     |   |   |   `-UnaryOperator 0x144942dc0 <col:30, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x144942d98 <col:31, col:34> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x144942d60 <col:31> 'struct usb_host_endpoint *' lvalue Var 0x144942a18 'e' 'struct usb_host_endpoint *'     |   |   `-SwitchStmt 0x144942fc0 <line:30:4, line:44:4>     |   |     |-CallExpr 0x144942f98 <line:30:12, col:38> '<dependent type>' contains-errors     |   |     | |-DeclRefExpr 0x144942f00 <col:12> 'int ()' Function 0x144942e48 'usb_endpoint_type' 'int ()'     |   |     | `-UnaryOperator 0x144942f80 <col:30, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     |   `-RecoveryExpr 0x144942f58 <col:31, col:34> '<dependent type>' contains-errors lvalue     |   |     |     `-DeclRefExpr 0x144942f20 <col:31> 'struct usb_host_endpoint *' lvalue Var 0x144942a18 'e' 'struct usb_host_endpoint *'     |   |     `-CompoundStmt 0x144944fb0 <col:41, line:44:4>     |   |       |-CallExpr 0x144943258 <line:32:5, col:38> 'int'     |   |       | |-ImplicitCastExpr 0x144943240 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |       | | `-DeclRefExpr 0x1449430e0 <col:5> 'int ()' Function 0x144943028 'endpoint_update' 'int ()'     |   |       | |-ImplicitCastExpr 0x144943298 <col:21> 'int' <LValueToRValue>     |   |       | | `-DeclRefExpr 0x144943100 <col:21> 'int' lvalue Var 0x144942ab0 'edi' 'int'     |   |       | |-UnaryOperator 0x1449431a0 <col:26, col:27> 'struct usb_host_endpoint **' prefix '&' cannot overflow     |   |       | | `-DeclRefExpr 0x144943120 <col:27> 'struct usb_host_endpoint *' lvalue Var 0x144941a48 'in' 'struct usb_host_endpoint *'     |   |       | |-UnaryOperator 0x1449431d8 <col:31, col:32> 'struct usb_host_endpoint **' prefix '&' cannot overflow     |   |       | | `-DeclRefExpr 0x1449431b8 <col:32> 'struct usb_host_endpoint *' lvalue Var 0x144941ad8 'out' 'struct usb_host_endpoint *'     |   |       | `-ImplicitCastExpr 0x1449432b0 <col:37> 'struct usb_host_endpoint *' <LValueToRValue>     |   |       |   `-DeclRefExpr 0x1449431f0 <col:37> 'struct usb_host_endpoint *' lvalue Var 0x144942a18 'e' 'struct usb_host_endpoint *'     |   |       |-ContinueStmt 0x1449432c8 <line:33:5>     |   |       |-IfStmt 0x144944d28 <line:35:5, line:36:47>     |   |       | |-CXXDependentScopeMemberExpr 0x144943348 <line:35:9, col:20> '<dependent type>' contains-errors lvalue ->intr     |   |       | | `-RecoveryExpr 0x144943320 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |       | |   `-DeclRefExpr 0x1449432e8 <col:9> 'struct usbtest_dev *' lvalue ParmVar 0x144929048 'dev' 'struct usbtest_dev *'     |   |       | `-CallExpr 0x144944cb8 <line:36:6, col:47> 'int'     |   |       |   |-ImplicitCastExpr 0x144944ca0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | `-DeclRefExpr 0x144943390 <col:6> 'int ()' Function 0x144943028 'endpoint_update' 'int ()'     |   |       |   |-ImplicitCastExpr 0x144944cf8 <col:22> 'int' <LValueToRValue>     |   |       |   | `-DeclRefExpr 0x1449433b0 <col:22> 'int' lvalue Var 0x144942ab0 'edi' 'int'     |   |       |   |-UnaryOperator 0x144944c30 <col:27, col:28> 'struct usb_host_endpoint **' prefix '&' cannot overflow     |   |       |   | `-DeclRefExpr 0x1449433d0 <col:28> 'struct usb_host_endpoint *' lvalue Var 0x144941d58 'int_in' 'struct usb_host_endpoint *'     |   |       |   |-UnaryOperator 0x144944c68 <col:36, col:37> 'struct usb_host_endpoint **' prefix '&' cannot overflow     |   |       |   | `-DeclRefExpr 0x144944c48 <col:37> 'struct usb_host_endpoint *' lvalue Var 0x144941de8 'int_out' 'struct usb_host_endpoint *'     |   |       |   `-ImplicitCastExpr 0x144944d10 <col:46> 'struct usb_host_endpoint *' <LValueToRValue>     |   |       |     `-DeclRefExpr 0x144944c80 <col:46> 'struct usb_host_endpoint *' lvalue Var 0x144942a18 'e' 'struct usb_host_endpoint *'     |   |       |-ContinueStmt 0x144944d48 <line:37:5>     |   |       |-IfStmt 0x144944f68 <line:39:5, line:40:47>     |   |       | |-CXXDependentScopeMemberExpr 0x144944dc8 <line:39:9, col:20> '<dependent type>' contains-errors lvalue ->iso     |   |       | | `-RecoveryExpr 0x144944da0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |       | |   `-DeclRefExpr 0x144944d68 <col:9> 'struct usbtest_dev *' lvalue ParmVar 0x144929048 'dev' 'struct usbtest_dev *'     |   |       | `-CallExpr 0x144944ef8 <line:40:6, col:47> 'int'     |   |       |   |-ImplicitCastExpr 0x144944ee0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |       |   | `-DeclRefExpr 0x144944e10 <col:6> 'int ()' Function 0x144943028 'endpoint_update' 'int ()'     |   |       |   |-ImplicitCastExpr 0x144944f38 <col:22> 'int' <LValueToRValue>     |   |       |   | `-DeclRefExpr 0x144944e30 <col:22> 'int' lvalue Var 0x144942ab0 'edi' 'int'     |   |       |   |-UnaryOperator 0x144944e70 <col:27, col:28> 'struct usb_host_endpoint **' prefix '&' cannot overflow     |   |       |   | `-DeclRefExpr 0x144944e50 <col:28> 'struct usb_host_endpoint *' lvalue Var 0x144941c08 'iso_in' 'struct usb_host_endpoint *'     |   |       |   |-UnaryOperator 0x144944ea8 <col:36, col:37> 'struct usb_host_endpoint **' prefix '&' cannot overflow     |   |       |   | `-DeclRefExpr 0x144944e88 <col:37> 'struct usb_host_endpoint *' lvalue Var 0x144941c98 'iso_out' 'struct usb_host_endpoint *'     |   |       |   `-ImplicitCastExpr 0x144944f50 <col:46> 'struct usb_host_endpoint *' <LValueToRValue>     |   |       |     `-DeclRefExpr 0x144944ec0 <col:46> 'struct usb_host_endpoint *' lvalue Var 0x144942a18 'e' 'struct usb_host_endpoint *'     |   |       `-DefaultStmt 0x144944f90 <line:42:4, line:43:5>     |   |         `-ContinueStmt 0x144944f88 <col:5>     |   `-IfStmt 0x1449452d8 <line:46:3, line:47:9>     |     |-BinaryOperator 0x144945250 <line:46:7, col:55> 'int' '||'     |     | |-BinaryOperator 0x1449451f8 <col:7, col:45> 'int' '||'     |     | | |-BinaryOperator 0x1449451a0 <col:7, col:34> 'int' '||'     |     | | | |-BinaryOperator 0x144945148 <col:7, col:24> 'int' '||'     |     | | | | |-ParenExpr 0x1449450f0 <col:7, col:17> 'int'     |     | | | | | `-BinaryOperator 0x1449450d0 <col:8, col:14> 'int' '&&'     |     | | | | |   |-ImplicitCastExpr 0x1449450a0 <col:8> 'struct usb_host_endpoint *' <LValueToRValue>     |     | | | | |   | `-DeclRefExpr 0x144945060 <col:8> 'struct usb_host_endpoint *' lvalue Var 0x144941a48 'in' 'struct usb_host_endpoint *'     |     | | | | |   `-ImplicitCastExpr 0x1449450b8 <col:14> 'struct usb_host_endpoint *' <LValueToRValue>     |     | | | | |     `-DeclRefExpr 0x144945080 <col:14> 'struct usb_host_endpoint *' lvalue Var 0x144941ad8 'out' 'struct usb_host_endpoint *'     |     | | | | `-ImplicitCastExpr 0x144945130 <col:24> 'struct usb_host_endpoint *' <LValueToRValue>     |     | | | |   `-DeclRefExpr 0x144945110 <col:24> 'struct usb_host_endpoint *' lvalue Var 0x144941c08 'iso_in' 'struct usb_host_endpoint *'     |     | | | `-ImplicitCastExpr 0x144945188 <col:34> 'struct usb_host_endpoint *' <LValueToRValue>     |     | | |   `-DeclRefExpr 0x144945168 <col:34> 'struct usb_host_endpoint *' lvalue Var 0x144941c98 'iso_out' 'struct usb_host_endpoint *'     |     | | `-ImplicitCastExpr 0x1449451e0 <col:45> 'struct usb_host_endpoint *' <LValueToRValue>     |     | |   `-DeclRefExpr 0x1449451c0 <col:45> 'struct usb_host_endpoint *' lvalue Var 0x144941d58 'int_in' 'struct usb_host_endpoint *'     |     | `-ImplicitCastExpr 0x144945238 <col:55> 'struct usb_host_endpoint *' <LValueToRValue>     |     |   `-DeclRefExpr 0x144945218 <col:55> 'struct usb_host_endpoint *' lvalue Var 0x144941de8 'int_out' 'struct usb_host_endpoint *'     |     `-GotoStmt 0x1449452c0 <line:47:4, col:9> 'found' 0x144945270     |-LabelStmt 0x144945550 <line:51:1, line:52:30> 'found'     | `-BinaryOperator 0x144945530 <col:2, col:30> 'struct usb_device *' '='     |   |-DeclRefExpr 0x144945380 <col:2> 'struct usb_device *' lvalue Var 0x144941fe8 'udev' 'struct usb_device *'     |   `-ImplicitCastExpr 0x144945518 <col:9, col:30> 'struct usb_device *' <IntegralToPointer>     |     `-CallExpr 0x1449454d8 <col:9, col:30> 'int'     |       |-ImplicitCastExpr 0x1449454c0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x144945480 <col:9> 'int ()' Function 0x1449453c8 'testdev_to_usbdev' 'int ()'     |       `-ImplicitCastExpr 0x144945500 <col:27> 'struct usbtest_dev *' <LValueToRValue>     |         `-DeclRefExpr 0x1449454a0 <col:27> 'struct usbtest_dev *' lvalue ParmVar 0x144929048 'dev' 'struct usbtest_dev *'     |-BinaryOperator 0x1449456c0 <line:53:2, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1449455d0 <col:2, col:13> '<dependent type>' contains-errors lvalue ->alt     | | `-RecoveryExpr 0x1449455a8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x144945570 <col:2> 'struct usbtest_dev *' lvalue ParmVar 0x144929048 'dev' 'struct usbtest_dev *'     | `-CXXDependentScopeMemberExpr 0x144945678 <col:19, col:29> '<dependent type>' contains-errors lvalue .bAlternateSetting     |   `-RecoveryExpr 0x144945650 <col:19, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x144945618 <col:19> 'struct usb_host_interface *' lvalue Var 0x144941848 'alt' 'struct usb_host_interface *'     |-IfStmt 0x144945bb0 <line:54:2, line:60:2>     | |-BinaryOperator 0x1449457a8 <line:54:6, col:37> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x144945740 <col:6, col:16> '<dependent type>' contains-errors lvalue .bAlternateSetting     | | | `-RecoveryExpr 0x144945718 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1449456e0 <col:6> 'struct usb_host_interface *' lvalue Var 0x144941848 'alt' 'struct usb_host_interface *'     | | `-IntegerLiteral 0x144945788 <col:37> 'int' 0     | `-CompoundStmt 0x144945b90 <col:40, line:60:2>     |   |-BinaryOperator 0x144945a90 <line:55:3, line:57:32> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1449457c8 <line:55:3> 'int' lvalue Var 0x144941660 'tmp' 'int'     |   | `-CallExpr 0x144945a58 <col:9, line:57:32> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1449458c8 <line:55:9> 'int ()' Function 0x144945810 'usb_set_interface' 'int ()'     |   |   |-DeclRefExpr 0x1449458e8 <col:27> 'struct usb_device *' lvalue Var 0x144941fe8 'udev' 'struct usb_device *'     |   |   |-CXXDependentScopeMemberExpr 0x144945968 <line:56:5, col:15> '<dependent type>' contains-errors lvalue .bInterfaceNumber     |   |   | `-RecoveryExpr 0x144945940 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x144945908 <col:5> 'struct usb_host_interface *' lvalue Var 0x144941848 'alt' 'struct usb_host_interface *'     |   |   `-CXXDependentScopeMemberExpr 0x144945a10 <line:57:5, col:15> '<dependent type>' contains-errors lvalue .bAlternateSetting     |   |     `-RecoveryExpr 0x1449459e8 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1449459b0 <col:5> 'struct usb_host_interface *' lvalue Var 0x144941848 'alt' 'struct usb_host_interface *'     |   `-IfStmt 0x144945b70 <line:58:3, line:59:11>     |     |-BinaryOperator 0x144945b08 <line:58:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x144945af0 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x144945ab0 <col:7> 'int' lvalue Var 0x144941660 'tmp' 'int'     |     | `-IntegerLiteral 0x144945ad0 <col:13> 'int' 0     |     `-ReturnStmt 0x144945b60 <line:59:4, col:11>     |       `-ImplicitCastExpr 0x144945b48 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x144945b28 <col:11> 'int' lvalue Var 0x144941660 'tmp' 'int'     |-IfStmt 0x145008678 <line:62:2, line:67:2>     | |-ImplicitCastExpr 0x145008200 <line:62:6> 'struct usb_host_endpoint *' <LValueToRValue>     | | `-DeclRefExpr 0x144945bd0 <col:6> 'struct usb_host_endpoint *' lvalue Var 0x144941a48 'in' 'struct usb_host_endpoint *'     | `-CompoundStmt 0x145008668 <col:10, line:67:2>     |-IfStmt 0x145008a08 <line:68:2, line:73:2>     | |-ImplicitCastExpr 0x1450086b8 <line:68:6> 'struct usb_host_endpoint *' <LValueToRValue>     | | `-DeclRefExpr 0x145008698 <col:6> 'struct usb_host_endpoint *' lvalue Var 0x144941c08 'iso_in' 'struct usb_host_endpoint *'     | `-CompoundStmt 0x1450089f0 <col:14, line:73:2>     |   `-BinaryOperator 0x1450087a8 <line:69:3, col:26> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x145008708 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1450086d0 <col:3> 'struct usbtest_dev *' lvalue ParmVar 0x144929048 'dev' 'struct usbtest_dev *'     |     `-UnaryOperator 0x145008790 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x145008768 <col:18, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x145008730 <col:18> 'struct usb_host_endpoint *' lvalue Var 0x144941c08 'iso_in' 'struct usb_host_endpoint *'     |-IfStmt 0x145008d98 <line:75:2, line:80:2>     | |-ImplicitCastExpr 0x145008a48 <line:75:6> 'struct usb_host_endpoint *' <LValueToRValue>     | | `-DeclRefExpr 0x145008a28 <col:6> 'struct usb_host_endpoint *' lvalue Var 0x144941c98 'iso_out' 'struct usb_host_endpoint *'     | `-CompoundStmt 0x145008d80 <col:15, line:80:2>     |   `-BinaryOperator 0x145008b38 <line:76:3, col:28> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x145008a98 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x145008a60 <col:3> 'struct usbtest_dev *' lvalue ParmVar 0x144929048 'dev' 'struct usbtest_dev *'     |     `-UnaryOperator 0x145008b20 <col:18, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x145008af8 <col:19, col:28> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x145008ac0 <col:19> 'struct usb_host_endpoint *' lvalue Var 0x144941c98 'iso_out' 'struct usb_host_endpoint *'     |-IfStmt 0x145009128 <line:82:2, line:87:2>     | |-ImplicitCastExpr 0x145008dd8 <line:82:6> 'struct usb_host_endpoint *' <LValueToRValue>     | | `-DeclRefExpr 0x145008db8 <col:6> 'struct usb_host_endpoint *' lvalue Var 0x144941d58 'int_in' 'struct usb_host_endpoint *'     | `-CompoundStmt 0x145009110 <col:14, line:87:2>     |   `-BinaryOperator 0x145008ec8 <line:83:3, col:26> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x145008e28 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x145008df0 <col:3> 'struct usbtest_dev *' lvalue ParmVar 0x144929048 'dev' 'struct usbtest_dev *'     |     `-UnaryOperator 0x145008eb0 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x145008e88 <col:18, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x145008e50 <col:18> 'struct usb_host_endpoint *' lvalue Var 0x144941d58 'int_in' 'struct usb_host_endpoint *'     |-IfStmt 0x1450094b8 <line:89:2, line:94:2>     | |-ImplicitCastExpr 0x145009168 <line:89:6> 'struct usb_host_endpoint *' <LValueToRValue>     | | `-DeclRefExpr 0x145009148 <col:6> 'struct usb_host_endpoint *' lvalue Var 0x144941de8 'int_out' 'struct usb_host_endpoint *'     | `-CompoundStmt 0x1450094a0 <col:15, line:94:2>     |   `-BinaryOperator 0x145009258 <line:90:3, col:28> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x1450091b8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x145009180 <col:3> 'struct usbtest_dev *' lvalue ParmVar 0x144929048 'dev' 'struct usbtest_dev *'     |     `-UnaryOperator 0x145009240 <col:18, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x145009218 <col:19, col:28> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1450091e0 <col:19> 'struct usb_host_endpoint *' lvalue Var 0x144941de8 'int_out' 'struct usb_host_endpoint *'     `-ReturnStmt 0x1450094f8 <line:95:2, col:9>       `-IntegerLiteral 0x1450094d8 <col:9> 'int' 0 ","20733":"`-FunctionDecl 0x135829510  col:5 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x135829610 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x135829678 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x1358296e0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x1358295b8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x135829760 <col:5> Implicit printf 3 4 ","20201":"`-FunctionDecl 0x127913ad0  col:4 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x127913b78 <<invalid sloc>> Implicit 867 ","20841":"`-FunctionDecl 0x147008310  col:29 implicit used calloc 'void *(unsigned long, unsigned long)' extern   |-ParmVarDecl 0x147008410 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x147008478 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x1470083b8 <<invalid sloc>> Implicit 868   `-AllocSizeAttr 0x1470084f0 <col:29> Implicit 1 2 ","21224":"`-FunctionDecl 0x13a028a18  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13a028b18 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13a028ac0 <<invalid sloc>> Implicit 873 ","20604":"`-FunctionDecl 0x146128258  line:1:1 invalid get_word_rgb_row 'int (int, int)'   |-ParmVarDecl 0x1461280f0 <col:18, col:33> col:33 invalid cinfo 'int'   |-ParmVarDecl 0x146128170 <col:40, col:57> col:57 invalid sinfo 'int'   `-CompoundStmt 0x147809790 <line:3:1, line:34:1>     |-DeclStmt 0x146128390 <line:5:3, col:24>     | `-VarDecl 0x146128328 <col:3, col:21> col:21 referenced invalid ptr 'int' register     |-DeclStmt 0x146128460 <line:6:3, col:29>     | `-VarDecl 0x1461283f8 <col:3, col:20> col:20 referenced invalid bufferptr 'int *' register     |-DeclStmt 0x146128558 <line:7:3, col:46>     | `-VarDecl 0x146128490 <col:3, col:21> col:21 invalid rescale 'int *' register     |-DeclStmt 0x1461286b8 <line:9:3, col:39>     | `-VarDecl 0x146128588 <col:3, col:33> col:16 used maxval 'unsigned int' cinit     |   `-CXXDependentScopeMemberExpr 0x146128670 <col:25, col:33> '<dependent type>' contains-errors lvalue ->maxval     |     `-RecoveryExpr 0x146128650 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146809218 <line:11:3, line:12:34>     | |-UnaryOperator 0x146809048 <line:11:7, col:77> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x146809010 <col:8, col:77> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x146808cb8 <col:8> 'int ()' Function 0x146808c00 'ReadOK' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x146808ef8 <col:15, col:27> '<dependent type>' contains-errors lvalue .input_file     | |   | `-CXXDependentScopeMemberExpr 0x146808eb0 <col:15, col:23> '<dependent type>' contains-errors lvalue ->pub     | |   |   `-RecoveryExpr 0x146808e90 <col:15> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x146808f60 <col:39, col:47> '<dependent type>' contains-errors lvalue ->iobuffer     | |   | `-RecoveryExpr 0x146808f40 <col:39> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x146808fc8 <col:57, col:65> '<dependent type>' contains-errors lvalue ->buffer_width     | |     `-RecoveryExpr 0x146808fa8 <col:57> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1468091e8 <line:12:5, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146809140 <col:5> 'int ()' Function 0x146809088 'ERREXIT' 'int ()'     |   |-RecoveryExpr 0x146809160 <col:13> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1468091c8 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146809478 <line:14:3, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x146809368 <col:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x146809348 <col:3> 'int *' lvalue Var 0x1461283f8 'bufferptr' 'int *'     | `-CXXDependentScopeMemberExpr 0x146809430 <col:15, col:23> '<dependent type>' contains-errors lvalue ->iobuffer     |   `-RecoveryExpr 0x146809410 <col:15> '<dependent type>' contains-errors lvalue     |-ForStmt 0x147809728 <line:15:3, line:32:3>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x1468095b0 <line:15:34, col:40> 'int' contains-errors '>'     | | |-RecoveryExpr 0x146809590 <col:34> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x146809550 <col:40> 'int' 0     | |-<<<NULL>>>     | `-CompoundStmt 0x1478096c8 <col:50, line:32:3>     |   |-DeclStmt 0x146809650 <line:16:5, col:31>     |   | `-VarDecl 0x1468095e8 <col:5, col:27> col:27 used temp 'unsigned int' register     |   |-BinaryOperator 0x146809840 <line:17:5, col:34> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x146809668 <col:5> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     |   | `-BinaryOperator 0x146809820 <col:13, col:34> '<dependent type>' contains-errors '<<'     |   |   |-CallExpr 0x1468097d8 <col:13, col:29> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x146809768 <col:13> 'int ()' Function 0x1468096b0 'UCH' 'int ()'     |   |   | `-UnaryOperator 0x1468097c0 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   |   `-UnaryOperator 0x1468097a8 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |   |     `-RecoveryExpr 0x146809788 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x146809800 <col:34> 'int' 8     |   |-CompoundAssignOperator 0x146809918 <line:18:5, col:29> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x146809860 <col:5> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     |   | `-CallExpr 0x1468098f0 <col:13, col:29> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x146809880 <col:13> 'int ()' Function 0x1468096b0 'UCH' 'int ()'     |   |   `-UnaryOperator 0x1468098d8 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     `-UnaryOperator 0x1468098c0 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |       `-RecoveryExpr 0x1468098a0 <col:18> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x146809af8 <line:21:5, col:26> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x146809a50 <col:5, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-UnaryOperator 0x146809a38 <col:6, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | |   `-RecoveryExpr 0x146809a18 <col:6> '<dependent type>' contains-errors lvalue     |   | `-ArraySubscriptExpr 0x146809ad8 <col:14, col:26> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x146809aa8 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x146809a68 <col:14> '<dependent type>' contains-errors lvalue     |   |   `-ImplicitCastExpr 0x146809ac0 <col:22> 'unsigned int' <LValueToRValue>     |   |     `-DeclRefExpr 0x146809a88 <col:22> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     |   |-BinaryOperator 0x147809020 <line:22:5, col:34> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x146809b18 <col:5> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     |   | `-BinaryOperator 0x147809000 <col:13, col:34> '<dependent type>' contains-errors '<<'     |   |   |-CallExpr 0x146809ba8 <col:13, col:29> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x146809b38 <col:13> 'int ()' Function 0x1468096b0 'UCH' 'int ()'     |   |   | `-UnaryOperator 0x146809b90 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   |   `-UnaryOperator 0x146809b78 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |   |     `-RecoveryExpr 0x146809b58 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x146809bd0 <col:34> 'int' 8     |   |-CompoundAssignOperator 0x1478090f8 <line:23:5, col:29> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x147809040 <col:5> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     |   | `-CallExpr 0x1478090d0 <col:13, col:29> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x147809060 <col:13> 'int ()' Function 0x1468096b0 'UCH' 'int ()'     |   |   `-UnaryOperator 0x1478090b8 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     `-UnaryOperator 0x1478090a0 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |       `-RecoveryExpr 0x147809080 <col:18> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1478092d8 <line:26:5, col:26> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x147809230 <col:5, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-UnaryOperator 0x147809218 <col:6, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | |   `-RecoveryExpr 0x1478091f8 <col:6> '<dependent type>' contains-errors lvalue     |   | `-ArraySubscriptExpr 0x1478092b8 <col:14, col:26> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x147809288 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x147809248 <col:14> '<dependent type>' contains-errors lvalue     |   |   `-ImplicitCastExpr 0x1478092a0 <col:22> 'unsigned int' <LValueToRValue>     |   |     `-DeclRefExpr 0x147809268 <col:22> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     |   |-BinaryOperator 0x1478093f0 <line:27:5, col:34> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x1478092f8 <col:5> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     |   | `-BinaryOperator 0x1478093d0 <col:13, col:34> '<dependent type>' contains-errors '<<'     |   |   |-CallExpr 0x147809388 <col:13, col:29> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x147809318 <col:13> 'int ()' Function 0x1468096b0 'UCH' 'int ()'     |   |   | `-UnaryOperator 0x147809370 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   |   `-UnaryOperator 0x147809358 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |   |     `-RecoveryExpr 0x147809338 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x1478093b0 <col:34> 'int' 8     |   |-CompoundAssignOperator 0x1478094c8 <line:28:5, col:29> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x147809410 <col:5> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     |   | `-CallExpr 0x1478094a0 <col:13, col:29> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x147809430 <col:13> 'int ()' Function 0x1468096b0 'UCH' 'int ()'     |   |   `-UnaryOperator 0x147809488 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     `-UnaryOperator 0x147809470 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |       `-RecoveryExpr 0x147809450 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1478096a8 <line:31:5, col:26> '<dependent type>' contains-errors '='     |     |-UnaryOperator 0x147809600 <col:5, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-UnaryOperator 0x1478095e8 <col:6, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow     |     |   `-RecoveryExpr 0x1478095c8 <col:6> '<dependent type>' contains-errors lvalue     |     `-ArraySubscriptExpr 0x147809688 <col:14, col:26> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x147809658 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x147809618 <col:14> '<dependent type>' contains-errors lvalue     |       `-ImplicitCastExpr 0x147809670 <col:22> 'unsigned int' <LValueToRValue>     |         `-DeclRefExpr 0x147809638 <col:22> 'unsigned int' lvalue Var 0x1468095e8 'temp' 'unsigned int'     `-ReturnStmt 0x147809780 <line:33:3, col:10>       `-IntegerLiteral 0x147809760 <col:10> 'int' 1 ","21108":"`-FunctionDecl 0x14800dda8  line:1:1 evdns_search_add 'int (const char *)'   |-ParmVarDecl 0x14800dcd8 <col:18, col:30> col:30 used domain 'const char *'   `-CompoundStmt 0x14800e0a8 <col:38, line:3:1>     `-CallExpr 0x14800e078 <line:2:2, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x14800dfd0 <col:2> 'int ()' Function 0x14800df18 'evdns_base_search_add' 'int ()'       |-RecoveryExpr 0x14800e058 <col:24> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x14800e008 <col:38> 'const char *' lvalue ParmVar 0x14800dcd8 'domain' 'const char *' ","20620":"`-FunctionDecl 0x1499289f8  line:1:1 invalid zeqproc 'int (int *)'   |-ParmVarDecl 0x149928928 <col:9, col:18> col:18 invalid i_ctx_p 'int *'   `-CompoundStmt 0x149943510 <line:2:1, line:65:1>     |-IfStmt 0x149928ef0 <line:7:5, line:8:45>     | |-BinaryOperator 0x149928d48 <line:7:9, col:37> 'int' contains-errors '<'     | | |-CallExpr 0x149928d20 <col:9, col:33> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x149928c30 <col:9> 'int ()' Function 0x149928b78 'ref_stack_count' 'int ()'     | | | `-UnaryOperator 0x149928d08 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x149928ce8 <col:26> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x149928ca8 <col:37> 'int' 2     | `-CallExpr 0x149928ec8 <line:8:9, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149928e48 <col:9> 'int ()' Function 0x149928d90 'return_error' 'int ()'     |   `-RecoveryExpr 0x149928ea8 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149942310 <line:9:5, line:11:5>     | |-BinaryOperator 0x149942230 <line:9:9, col:46> 'int' contains-errors '||'     | | |-UnaryOperator 0x1499421b8 <col:9, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x149942190 <col:10, col:27> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x149942000 <col:10> 'int ()' Function 0x149928f38 'r_is_array' 'int ()'     | | |   `-BinaryOperator 0x149942170 <col:21, col:26> '<dependent type>' contains-errors '-'     | | |     |-RecoveryExpr 0x149942150 <col:21> '<dependent type>' contains-errors lvalue     | | |     `-IntegerLiteral 0x149942038 <col:26> 'int' 1     | | `-UnaryOperator 0x149942218 <col:32, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x1499421f0 <col:33, col:46> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x1499420b8 <col:33> 'int ()' Function 0x149928f38 'r_is_array' 'int ()'     | |     `-RecoveryExpr 0x1499421d0 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1499422f8 <col:49, line:11:5>     |   `-CallExpr 0x1499422d0 <line:10:9, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x149942250 <col:9> 'int ()' Function 0x149928d90 'return_error' 'int ()'     |     `-RecoveryExpr 0x1499422b0 <col:22> '<dependent type>' contains-errors lvalue     |-ForStmt 0x149943308 <line:15:5, line:60:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x1499432d0 <line:15:14, line:60:5>     |   |-DeclStmt 0x149942630 <line:16:9, col:15>     |   | `-VarDecl 0x1499425c8 <col:9, col:14> col:14 used i 'long'     |   |-IfStmt 0x149942af8 <line:18:9, line:28:9>     |   | |-RecoveryExpr 0x149942768 <line:18:13, col:36> '_Bool' contains-errors     |   | `-CompoundStmt 0x149942ad8 <col:39, line:28:9>     |   |   |-IfStmt 0x149942ab0 <line:20:13, line:25:13>     |   |   | |-RecoveryExpr 0x149942788 <line:20:17, col:24> '_Bool' contains-errors     |   |   | `-CompoundStmt 0x149942a90 <col:31, line:25:13>     |   |   |   |-CallExpr 0x149942a38 <line:23:17, col:22> 'int'     |   |   |   | |-ImplicitCastExpr 0x149942a20 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | | `-DeclRefExpr 0x1499429a8 <col:17> 'int ()' Function 0x1499428f0 'pop' 'int ()'     |   |   |   | `-IntegerLiteral 0x1499429c8 <col:21> 'int' 1     |   |   |   `-ReturnStmt 0x149942a80 <line:24:17, col:24>     |   |   |     `-IntegerLiteral 0x149942a60 <col:24> 'int' 0     |   |   `-ContinueStmt 0x149942ad0 <line:27:13>     |   |-IfStmt 0x1499431a8 <line:42:9, line:51:9>     |   | |-RecoveryExpr 0x149942f38 <line:42:13, col:53> '_Bool' contains-errors     |   | `-CompoundStmt 0x149943188 <col:56, line:51:9>     |   |   |-IfStmt 0x149943160 <line:44:13, line:48:17>     |   |   | |-RecoveryExpr 0x149943138 <line:44:17, line:46:47> '_Bool' contains-errors     |   |   | `-BreakStmt 0x149943158 <line:48:17>     |   |   `-ContinueStmt 0x149943180 <line:50:13>     |   |-IfStmt 0x1499432a8 <line:52:9, line:58:9>     |   | |-RecoveryExpr 0x149943268 <line:52:13, line:54:41> '_Bool' contains-errors     |   | `-CompoundStmt 0x149943290 <line:55:15, line:58:9>     |   |   `-ContinueStmt 0x149943288 <line:57:13>     |   `-BreakStmt 0x1499432c8 <line:59:9>     |-CallExpr 0x1499434b8 <line:63:5, col:10> 'int'     | |-ImplicitCastExpr 0x1499434a0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149943460 <col:5> 'int ()' Function 0x1499428f0 'pop' 'int ()'     | `-IntegerLiteral 0x149943480 <col:9> 'int' 1     `-ReturnStmt 0x149943500 <line:64:5, col:12>       `-IntegerLiteral 0x1499434e0 <col:12> 'int' 0 ","20540":"`-FunctionDecl 0x1379281c8  line:1:1 invalid keylen 'int (int)'   |-ParmVarDecl 0x1379280f0 <col:8, col:12> col:12 invalid s 'int'   `-CompoundStmt 0x137928540 <col:15, line:6:1>     |-RecoveryExpr 0x137928358 <line:2:3, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x137928338 <col:3, col:10> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x137928318 <col:10> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1379282b0 <col:16> 'int' 0     |-ForStmt 0x1379284c0 <line:3:3, line:4:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-UnaryOperator 0x1379283c0 <line:3:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1379283a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x137928388 <col:11> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x137928498 <col:14, col:22> '<dependent type>' contains-errors ','     | | |-UnaryOperator 0x1379283f8 <col:14, col:15> '<dependent type>' contains-errors postfix '++' cannot overflow     | | | `-RecoveryExpr 0x1379283d8 <col:14> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x137928480 <col:19, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   `-RecoveryExpr 0x137928460 <col:19> '<dependent type>' contains-errors lvalue     | `-NullStmt 0x1379284b8 <line:4:5>     `-ReturnStmt 0x137928530 <line:5:3, col:10>       `-RecoveryExpr 0x137928510 <col:10> '<dependent type>' contains-errors lvalue ","20239":"`-FunctionDecl 0x14f8b0df8  line:1:5 invalid credssp_skip_ts_credentials 'int (int *)'   |-ParmVarDecl 0x14f8b0d28 <col:33, col:45> col:45 invalid credssp 'int *'   `-CompoundStmt 0x14e037de0 <line:2:1, line:19:1>     |-DeclStmt 0x14f8b0f28 <line:3:2, col:12>     | `-VarDecl 0x14f8b0ec0 <col:2, col:6> col:6 used length 'int'     |-DeclStmt 0x14f8b0fc0 <line:4:2, col:30>     | `-VarDecl 0x14f8b0f58 <col:2, col:6> col:6 used ts_password_creds_length 'int'     |-DeclStmt 0x14f8b1078 <line:5:2, col:31>     | `-VarDecl 0x14f8b0ff0 <col:2, col:30> col:6 used ts_credentials_length 'int' cinit     |   `-IntegerLiteral 0x14f8b1058 <col:30> 'int' 0     |-BinaryOperator 0x14f8b12c0 <line:7:2, col:29> 'int' '='     | |-DeclRefExpr 0x14f8b1090 <col:2> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     | `-CallExpr 0x14f8b1298 <col:11, col:29> 'int'     |   |-ImplicitCastExpr 0x14f8b1280 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14f8b1210 <col:11> 'int ()' Function 0x14f8b1158 'ber_skip_integer' 'int ()'     |   `-IntegerLiteral 0x14f8b1230 <col:28> 'int' 0     |-CompoundAssignOperator 0x14e037678 <line:8:2, col:42> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x14f8b12e0 <col:2> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     | `-CallExpr 0x14e037638 <col:12, col:42> 'int'     |   |-ImplicitCastExpr 0x14e037620 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14f8b13e0 <col:12> 'int ()' Function 0x14f8b1328 'ber_skip_contextual_tag' 'int ()'     |   `-ImplicitCastExpr 0x14e037660 <col:36> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14e037600 <col:36> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     |-CompoundAssignOperator 0x14e037700 <line:9:2, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x14e0376a8 <col:2> 'int' lvalue Var 0x14f8b0ff0 'ts_credentials_length' 'int'     | `-ImplicitCastExpr 0x14e0376e8 <col:27> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x14e0376c8 <col:27> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     |-BinaryOperator 0x14e037898 <line:11:2, col:67> 'int' contains-errors '='     | |-DeclRefExpr 0x14e037730 <col:2> 'int' lvalue Var 0x14f8b0f58 'ts_password_creds_length' 'int'     | `-CallExpr 0x14e037870 <col:29, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14e037830 <col:29> 'int ()' Function 0x14e037778 'credssp_skip_ts_password_creds' 'int ()'     |   `-RecoveryExpr 0x14e037850 <col:60> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e037a50 <line:12:2, col:57> 'int' '='     | |-DeclRefExpr 0x14e0378b8 <col:2> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     | `-CallExpr 0x14e037a10 <col:11, col:57> 'int'     |   |-ImplicitCastExpr 0x14e0379f8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e0379b8 <col:11> 'int ()' Function 0x14e037900 'ber_skip_octet_string' 'int ()'     |   `-ImplicitCastExpr 0x14e037a38 <col:33> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14e0379d8 <col:33> 'int' lvalue Var 0x14f8b0f58 'ts_password_creds_length' 'int'     |-CompoundAssignOperator 0x14e037b28 <line:13:2, col:42> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x14e037a70 <col:2> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     | `-CallExpr 0x14e037ae8 <col:12, col:42> 'int'     |   |-ImplicitCastExpr 0x14e037ad0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e037a90 <col:12> 'int ()' Function 0x14f8b1328 'ber_skip_contextual_tag' 'int ()'     |   `-ImplicitCastExpr 0x14e037b10 <col:36> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14e037ab0 <col:36> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     |-CompoundAssignOperator 0x14e037bb0 <line:14:2, col:27> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x14e037b58 <col:2> 'int' lvalue Var 0x14f8b0ff0 'ts_credentials_length' 'int'     | `-ImplicitCastExpr 0x14e037b98 <col:27> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x14e037b78 <col:27> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     |-BinaryOperator 0x14e037d78 <line:16:2, col:50> 'int' '='     | |-DeclRefExpr 0x14e037be0 <col:2> 'int' lvalue Var 0x14f8b0ec0 'length' 'int'     | `-CallExpr 0x14e037d38 <col:11, col:50> 'int'     |   |-ImplicitCastExpr 0x14e037d20 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e037ce0 <col:11> 'int ()' Function 0x14e037c28 'ber_skip_sequence' 'int ()'     |   `-ImplicitCastExpr 0x14e037d60 <col:29> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14e037d00 <col:29> 'int' lvalue Var 0x14f8b0ff0 'ts_credentials_length' 'int'     `-ReturnStmt 0x14e037dd0 <line:18:2, col:9>       `-ImplicitCastExpr 0x14e037db8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14e037d98 <col:9> 'int' lvalue Var 0x14f8b0ec0 'length' 'int' ","21037":"`-FunctionDecl 0x126928208  line:1:8 invalid compareIconsByName 'int (const int)'   |-ParmVarDecl 0x1269280f0 <col:27, <invalid sloc>> col:37 invalid 'const int'   `-CompoundStmt 0x126928498 <line:2:3, line:4:3>     `-ReturnStmt 0x126928488 <line:3:4, col:23>       `-BinaryOperator 0x126928468 <col:11, col:23> 'int' contains-errors '<'         |-CXXDependentScopeMemberExpr 0x1269283b8 <col:11, col:13> '<dependent type>' contains-errors lvalue .Title         | `-RecoveryExpr 0x126928398 <col:11> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x126928420 <col:21, col:23> '<dependent type>' contains-errors lvalue .Title           `-RecoveryExpr 0x126928400 <col:21> '<dependent type>' contains-errors lvalue ","20226":"`-FunctionDecl 0x14f826d88  col:50 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x14f826e88 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x14f826e30 <<invalid sloc>> Implicit 901 ","20907":"`-FunctionDecl 0x1428f75c8  line:1:10 invalid load_face 'int (int)'   |-ParmVarDecl 0x1428f74f0 <col:20, <invalid sloc>> col:25 invalid 'int'   `-CompoundStmt 0x14300a1b8 <line:2:5, line:35:5>     |-RecoveryExpr 0x1428f76a8 <line:6:9> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14300a188 <line:14:9, line:34:13> has_else       |-RecoveryExpr 0x1428f7980 <line:14:13> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x14300a168 <line:15:9, line:32:9>       | `-IfStmt 0x14300a138 <line:16:13, line:31:17> has_else       |   |-BinaryOperator 0x14300a0a8 <line:16:17, col:64> 'int' contains-errors '||'       |   | |-UnaryOperator 0x1428f7b98 <col:17, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow       |   | | `-CallExpr 0x1428f7b78 <col:18, col:36> '<dependent type>' contains-errors       |   | |   `-CXXDependentScopeMemberExpr 0x1428f7b30 <col:18, col:23> '<dependent type>' contains-errors lvalue .readFeatures       |   | |     `-RecoveryExpr 0x1428f7b10 <col:18> '<dependent type>' contains-errors lvalue       |   | `-UnaryOperator 0x14300a090 <col:41, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow       |   |   `-CallExpr 0x14300a068 <col:42, col:64> '<dependent type>' contains-errors       |   |     |-CXXDependentScopeMemberExpr 0x14300a000 <col:42, col:47> '<dependent type>' contains-errors lvalue .readGraphite       |   |     | `-RecoveryExpr 0x1428f7bb0 <col:42> '<dependent type>' contains-errors lvalue       |   |     `-RecoveryExpr 0x14300a048 <col:60> '<dependent type>' contains-errors lvalue       |   |-CompoundStmt 0x14300a118 <line:17:13, line:29:13>       |   | `-IfStmt 0x14300a0f8 <line:19:17, line:26:17>       |   |   |-RecoveryExpr 0x14300a0c8 <line:19:21> '_Bool' contains-errors       |   |   `-CompoundStmt 0x14300a0e8 <line:20:17, line:26:17>       |   `-NullStmt 0x14300a130 <line:31:17>       `-NullStmt 0x14300a180 <line:34:13> ","20881":"`-FunctionDecl 0x13e940ab8  line:1:30 alloc_mnt_ns 'struct mnt_namespace *(struct user_namespace *)' static   |-ParmVarDecl 0x13e9286e8 <col:43, col:66> col:66 used user_ns 'struct user_namespace *'   `-CompoundStmt 0x13e948bc8 <line:2:1, line:34:1>     |-DeclStmt 0x13e940ca0 <line:3:2, col:30>     | `-VarDecl 0x13e940c38 <col:2, col:24> col:24 used new_ns 'struct mnt_namespace *'     |-DeclStmt 0x13e940ea8 <line:4:2, col:25>     | |-RecordDecl 0x13e940cb8 <col:2, col:9> col:9 struct ucounts     | `-VarDecl 0x13e940e28 <col:2, col:18> col:18 used ucounts 'struct ucounts *'     |-DeclStmt 0x13e940f40 <line:5:2, col:9>     | `-VarDecl 0x13e940ed8 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x13e941180 <line:7:2, col:38> 'struct ucounts *' '='     | |-DeclRefExpr 0x13e940f58 <col:2> 'struct ucounts *' lvalue Var 0x13e940e28 'ucounts' 'struct ucounts *'     | `-ImplicitCastExpr 0x13e941168 <col:12, col:38> 'struct ucounts *' <IntegralToPointer>     |   `-CallExpr 0x13e941128 <col:12, col:38> 'int'     |     |-ImplicitCastExpr 0x13e941110 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13e9410a0 <col:12> 'int ()' Function 0x13e940fe8 'inc_mnt_namespaces' 'int ()'     |     `-ImplicitCastExpr 0x13e941150 <col:31> 'struct user_namespace *' <LValueToRValue>     |       `-DeclRefExpr 0x13e9410c0 <col:31> 'struct user_namespace *' lvalue ParmVar 0x13e9286e8 'user_ns' 'struct user_namespace *'     |-IfStmt 0x13e9413e8 <line:8:2, line:9:25>     | |-UnaryOperator 0x13e9411d8 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e9411c0 <col:7> 'struct ucounts *' <LValueToRValue>     | |   `-DeclRefExpr 0x13e9411a0 <col:7> 'struct ucounts *' lvalue Var 0x13e940e28 'ucounts' 'struct ucounts *'     | `-ReturnStmt 0x13e9413d8 <line:9:3, col:25>     |   `-CallExpr 0x13e9413b0 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e9412d0 <col:10> 'int ()' Function 0x13e941218 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x13e941398 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x13e941380 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x13e941360 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e941860 <line:12:2, line:15:2>     | |-UnaryOperator 0x13e941598 <line:12:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e941580 <col:7> 'struct mnt_namespace *' <LValueToRValue>     | |   `-DeclRefExpr 0x13e941560 <col:7> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-CompoundStmt 0x13e941840 <col:15, line:15:2>     |   |-CallExpr 0x13e9416e8 <line:13:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x13e9416d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13e941690 <col:3> 'int ()' Function 0x13e9415d8 'dec_mnt_namespaces' 'int ()'     |   | `-ImplicitCastExpr 0x13e941710 <col:22> 'struct ucounts *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13e9416b0 <col:22> 'struct ucounts *' lvalue Var 0x13e940e28 'ucounts' 'struct ucounts *'     |   `-ReturnStmt 0x13e941830 <line:14:3, col:25>     |     `-CallExpr 0x13e941808 <col:10, col:25> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13e941728 <col:10> 'int ()' Function 0x13e941218 'ERR_PTR' 'int ()'     |       `-UnaryOperator 0x13e9417f0 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x13e9417d8 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x13e9417b8 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13e947a40 <line:16:2, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x13e941880 <col:2> 'int' lvalue Var 0x13e940ed8 'ret' 'int'     | `-CallExpr 0x13e947a18 <col:8, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13e941980 <col:8> 'int ()' Function 0x13e9418c8 'ns_alloc_inum' 'int ()'     |   `-UnaryOperator 0x13e947a00 <col:22, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13e9419d8 <col:23, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13e9419a0 <col:23> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     |-IfStmt 0x13e947d90 <line:17:2, line:21:2>     | |-ImplicitCastExpr 0x13e947a80 <line:17:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13e947a60 <col:6> 'int' lvalue Var 0x13e940ed8 'ret' 'int'     | `-CompoundStmt 0x13e947d68 <col:11, line:21:2>     |   |-CallExpr 0x13e947bd0 <line:18:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x13e947bb8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13e947b78 <col:3> 'int ()' Function 0x13e947ac0 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x13e947bf8 <col:9> 'struct mnt_namespace *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13e947b98 <col:9> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     |   |-CallExpr 0x13e947c68 <line:19:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x13e947c50 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13e947c10 <col:3> 'int ()' Function 0x13e9415d8 'dec_mnt_namespaces' 'int ()'     |   | `-ImplicitCastExpr 0x13e947c90 <col:22> 'struct ucounts *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13e947c30 <col:22> 'struct ucounts *' lvalue Var 0x13e940e28 'ucounts' 'struct ucounts *'     |   `-ReturnStmt 0x13e947d58 <line:20:3, col:21>     |     `-ImplicitCastExpr 0x13e947d40 <col:10, col:21> 'struct mnt_namespace *' <IntegralToPointer>     |       `-CallExpr 0x13e947d00 <col:10, col:21> 'int'     |         |-ImplicitCastExpr 0x13e947ce8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x13e947ca8 <col:10> 'int ()' Function 0x13e941218 'ERR_PTR' 'int ()'     |         `-ImplicitCastExpr 0x13e947d28 <col:18> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x13e947cc8 <col:18> 'int' lvalue Var 0x13e940ed8 'ret' 'int'     |-BinaryOperator 0x13e947ee0 <line:22:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13e947e10 <col:2, col:13> '<dependent type>' contains-errors lvalue .ops     | | `-RecoveryExpr 0x13e947de8 <col:2, col:10> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13e947db0 <col:2> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-UnaryOperator 0x13e947ec8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13e947ea8 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13e948168 <line:23:2, col:50> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e947f38 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e947f00 <col:2> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-CallExpr 0x13e948138 <col:16, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13e948040 <col:16> 'int ()' Function 0x13e947f88 'atomic64_add_return' 'int ()'     |   |-IntegerLiteral 0x13e948060 <col:36> 'int' 1     |   `-UnaryOperator 0x13e948120 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13e948100 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e948320 <line:24:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e948268 <col:2> 'int ()' Function 0x13e9481b0 'atomic_set' 'int ()'     | |-UnaryOperator 0x13e9482e8 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13e9482c0 <col:14, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13e948288 <col:14> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-IntegerLiteral 0x13e948300 <col:29> 'int' 1     |-CallExpr 0x13e948528 <line:26:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e948490 <col:2> 'int ()' Function 0x13e9483d8 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x13e948510 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13e9484e8 <col:18, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e9484b0 <col:18> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     |-CallExpr 0x13e9486c8 <line:27:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e948630 <col:2> 'int ()' Function 0x13e948578 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x13e9486b0 <col:22, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13e948688 <col:23, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e948650 <col:23> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     |-BinaryOperator 0x13e948770 <line:28:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e948728 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e9486f0 <col:2> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-IntegerLiteral 0x13e948750 <col:18> 'int' 0     |-BinaryOperator 0x13e948968 <line:29:2, col:39> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e9487c8 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e948790 <col:2> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-CallExpr 0x13e948928 <col:20, col:39> 'int'     |   |-ImplicitCastExpr 0x13e948910 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13e9488d0 <col:20> 'int ()' Function 0x13e948818 'get_user_ns' 'int ()'     |   `-ImplicitCastExpr 0x13e948950 <col:32> 'struct user_namespace *' <LValueToRValue>     |     `-DeclRefExpr 0x13e9488f0 <col:32> 'struct user_namespace *' lvalue ParmVar 0x13e9286e8 'user_ns' 'struct user_namespace *'     |-BinaryOperator 0x13e948a20 <line:30:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e9489c0 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e948988 <col:2> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-DeclRefExpr 0x13e948a00 <col:20> 'struct ucounts *' lvalue Var 0x13e940e28 'ucounts' 'struct ucounts *'     |-BinaryOperator 0x13e948ac0 <line:31:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e948a78 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e948a40 <col:2> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-IntegerLiteral 0x13e948aa0 <col:19> 'int' 0     |-BinaryOperator 0x13e948b60 <line:32:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e948b18 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e948ae0 <col:2> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *'     | `-IntegerLiteral 0x13e948b40 <col:27> 'int' 0     `-ReturnStmt 0x13e948bb8 <line:33:2, col:9>       `-ImplicitCastExpr 0x13e948ba0 <col:9> 'struct mnt_namespace *' <LValueToRValue>         `-DeclRefExpr 0x13e948b80 <col:9> 'struct mnt_namespace *' lvalue Var 0x13e940c38 'new_ns' 'struct mnt_namespace *' ","21030":"`-FunctionDecl 0x133827400  line:1:6 invalid ring_buffer_empty 'int (struct ring_buffer *)'   |-ParmVarDecl 0x13380e268 <col:24, col:44> col:44 used buffer 'struct ring_buffer *'   `-CompoundStmt 0x132041ab0 <line:2:1, line:23:1>     |-DeclStmt 0x133827698 <line:3:2, col:40>     | |-RecordDecl 0x1338274b0 <col:2, col:9> col:9 struct ring_buffer_per_cpu     | `-VarDecl 0x133827618 <col:2, col:30> col:30 used cpu_buffer 'struct ring_buffer_per_cpu *'     |-DeclStmt 0x133827730 <line:4:2, col:21>     | `-VarDecl 0x1338276c8 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x1338277c8 <line:6:2, col:9>     | `-VarDecl 0x133827760 <col:2, col:6> col:6 used cpu 'int'     |-DeclStmt 0x133827860 <line:7:2, col:9>     | `-VarDecl 0x1338277f8 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x133827a78 <line:10:2, col:33> 'int'     | |-ImplicitCastExpr 0x133827a60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1338279d0 <col:2> 'int ()' Function 0x133827918 'for_each_buffer_cpu' 'int ()'     | |-ImplicitCastExpr 0x133827aa8 <col:22> 'struct ring_buffer *' <LValueToRValue>     | | `-DeclRefExpr 0x1338279f0 <col:22> 'struct ring_buffer *' lvalue ParmVar 0x13380e268 'buffer' 'struct ring_buffer *'     | `-ImplicitCastExpr 0x133827ac0 <col:30> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x133827a10 <col:30> 'int' lvalue Var 0x133827760 'cpu' 'int'     |-CompoundStmt 0x132041a30 <col:35, line:20:2>     | |-BinaryOperator 0x133827bc8 <line:11:3, col:35> 'struct ring_buffer_per_cpu *' contains-errors '='     | | |-DeclRefExpr 0x133827ad8 <col:3> 'struct ring_buffer_per_cpu *' lvalue Var 0x133827618 'cpu_buffer' 'struct ring_buffer_per_cpu *'     | | `-ArraySubscriptExpr 0x133827ba8 <col:16, col:35> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x133827b78 <col:16, col:24> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x133827b30 <col:16, col:24> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x133827af8 <col:16> 'struct ring_buffer *' lvalue ParmVar 0x13380e268 'buffer' 'struct ring_buffer *'     | |   `-ImplicitCastExpr 0x133827b90 <col:32> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x133827b58 <col:32> 'int' lvalue Var 0x133827760 'cpu' 'int'     | |-CallExpr 0x133827d20 <line:12:3, col:23> 'int'     | | |-ImplicitCastExpr 0x133827d08 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x133827cc8 <col:3> 'int ()' Function 0x133827c10 'local_irq_save' 'int ()'     | | `-ImplicitCastExpr 0x133827d48 <col:18> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x133827ce8 <col:18> 'unsigned long' lvalue Var 0x1338276c8 'flags' 'unsigned long'     | |-BinaryOperator 0x133828070 <line:14:3, col:36> 'int' '='     | | |-DeclRefExpr 0x133827ed8 <col:3> 'int' lvalue Var 0x1338277f8 'ret' 'int'     | | `-CallExpr 0x133828030 <col:9, col:36> 'int'     | |   |-ImplicitCastExpr 0x133828018 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x133827fd8 <col:9> 'int ()' Function 0x133827f20 'rb_per_cpu_empty' 'int ()'     | |   `-ImplicitCastExpr 0x133828058 <col:26> 'struct ring_buffer_per_cpu *' <LValueToRValue>     | |     `-DeclRefExpr 0x133827ff8 <col:26> 'struct ring_buffer_per_cpu *' lvalue Var 0x133827618 'cpu_buffer' 'struct ring_buffer_per_cpu *'     | |-CallExpr 0x133828218 <line:15:3, col:38> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x133828170 <col:3> 'int ()' Function 0x1338280b8 'rb_reader_unlock' 'int ()'     | | |-DeclRefExpr 0x133828190 <col:20> 'struct ring_buffer_per_cpu *' lvalue Var 0x133827618 'cpu_buffer' 'struct ring_buffer_per_cpu *'     | | `-RecoveryExpr 0x1338281f8 <col:32> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x133828380 <line:16:3, col:26> 'int'     |   |-ImplicitCastExpr 0x133828368 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x133828328 <col:3> 'int ()' Function 0x133828270 'local_irq_restore' 'int ()'     |   `-ImplicitCastExpr 0x1338283a8 <col:21> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x133828348 <col:21> 'unsigned long' lvalue Var 0x1338276c8 'flags' 'unsigned long'     `-ReturnStmt 0x132041aa0 <line:22:2, col:9>       `-RecoveryExpr 0x132041a80 <col:9> '<dependent type>' contains-errors lvalue ","21031":"`-FunctionDecl 0x14b128ba8  line:1:5 tls1_alert_code 'int (int)'   |-ParmVarDecl 0x14b128ad8 <col:21, col:25> col:25 used code 'int'   `-CompoundStmt 0x14b129008 <line:2:2, line:41:2>     `-SwitchStmt 0x14b128cd8 <line:3:2, line:40:3>       |-ImplicitCastExpr 0x14b128cc0 <line:3:10> 'int' <LValueToRValue>       | `-DeclRefExpr 0x14b128ca0 <col:10> 'int' lvalue ParmVar 0x14b128ad8 'code' 'int'       `-CompoundStmt 0x14b128fe8 <line:4:3, line:40:3>         |-ReturnStmt 0x14b128ed8 <line:12:30, col:39>         | `-ParenExpr 0x14b128eb8 <col:36, col:39> 'int'         |   `-UnaryOperator 0x14b128ea0 <col:37, col:38> 'int' prefix '-'         |     `-IntegerLiteral 0x14b128e80 <col:38> 'int' 1         `-DefaultStmt 0x14b128fc8 <line:39:2, col:22>           `-ReturnStmt 0x14b128fb8 <col:13, col:22>             `-ParenExpr 0x14b128f98 <col:19, col:22> 'int'               `-UnaryOperator 0x14b128f80 <col:20, col:21> 'int' prefix '-'                 `-IntegerLiteral 0x14b128f60 <col:21> 'int' 1 ","20842":"`-FunctionDecl 0x13500e358  line:1:15 perf_instruction_pointer 'unsigned long (struct pt_regs *)'   |-ParmVarDecl 0x13500e248 <col:40, col:56> col:56 used regs 'struct pt_regs *'   `-CompoundStmt 0x1350271f8 <line:2:1, line:17:1>     |-DeclStmt 0x1350268a8 <line:4:2, col:39>     | `-VarDecl 0x135026680 <col:2, col:38> col:16 used siar 'unsigned long' cinit     |   `-CallExpr 0x135026880 <col:23, col:38> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x135026800 <col:23> 'int ()' Function 0x135026748 'mfspr' 'int ()'     |     `-RecoveryExpr 0x135026860 <col:29> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1350271c8 <line:6:2, line:16:16> has_else       |-BinaryOperator 0x1350269e0 <line:6:6, col:20> '<dependent type>' contains-errors '&'       | |-CXXDependentScopeMemberExpr 0x135026978 <col:6, col:12> '<dependent type>' contains-errors lvalue ->flags       | | `-RecoveryExpr 0x135026958 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1350269c0 <col:20> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x135026b20 <col:34, line:11:2>       | `-IfStmt 0x135026af0 <line:7:3, line:10:17> has_else       |   |-ImplicitCastExpr 0x135026a20 <line:7:7> 'unsigned long' contains-errors <LValueToRValue>       |   | `-DeclRefExpr 0x135026a00 <col:7> 'unsigned long' contains-errors lvalue Var 0x135026680 'siar' 'unsigned long'       |   |-ReturnStmt 0x135026a70 <line:8:4, col:11>       |   | `-ImplicitCastExpr 0x135026a58 <col:11> 'unsigned long' contains-errors <LValueToRValue>       |   |   `-DeclRefExpr 0x135026a38 <col:11> 'unsigned long' contains-errors lvalue Var 0x135026680 'siar' 'unsigned long'       |   `-ReturnStmt 0x135026ae0 <line:10:4, col:17>       |     `-RecoveryExpr 0x135026ab8 <col:11, col:17> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x135026a80 <col:11> 'struct pt_regs *' lvalue ParmVar 0x13500e248 'regs' 'struct pt_regs *'       `-IfStmt 0x135027198 <line:11:9, line:16:16> has_else         |-BinaryOperator 0x135026d90 <line:11:13, col:40> 'int' contains-errors '&&'         | |-RecoveryExpr 0x135026d18 <col:13> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x135026d50 <col:25, col:40> 'int'         |   |-ImplicitCastExpr 0x135026d38 <col:25> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x135026c30 <col:25> 'int ()' Function 0x135026b78 'siar_valid' 'int ()'         |   `-ImplicitCastExpr 0x135026d78 <col:36> 'struct pt_regs *' <LValueToRValue>         |     `-DeclRefExpr 0x135026c50 <col:36> 'struct pt_regs *' lvalue ParmVar 0x13500e248 'regs' 'struct pt_regs *'         |-ReturnStmt 0x135027068 <line:12:3, col:48>         | `-BinaryOperator 0x135027048 <col:10, col:48> '<dependent type>' contains-errors '+'         |   |-CallExpr 0x135026fc8 <col:10, col:25> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x135026db0 <col:10> 'int ()' Function 0x135026748 'mfspr' 'int ()'         |   | `-RecoveryExpr 0x135026fa8 <col:16> '<dependent type>' contains-errors lvalue         |   `-CallExpr 0x135027008 <col:29, col:48> 'int'         |     |-ImplicitCastExpr 0x135026ff0 <col:29> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x135026ef0 <col:29> 'int ()' Function 0x135026e38 'perf_ip_adjust' 'int ()'         |     `-ImplicitCastExpr 0x135027030 <col:44> 'struct pt_regs *' <LValueToRValue>         |       `-DeclRefExpr 0x135026f10 <col:44> 'struct pt_regs *' lvalue ParmVar 0x13500e248 'regs' 'struct pt_regs *'         `-IfStmt 0x135027168 <line:13:7, line:16:16> has_else           |-RecoveryExpr 0x135027090 <line:13:11> '<dependent type>' contains-errors lvalue           |-ReturnStmt 0x1350270e8 <line:14:3, col:10>           | `-ImplicitCastExpr 0x1350270d0 <col:10> 'unsigned long' <IntegralCast>           |   `-IntegerLiteral 0x1350270b0 <col:10> 'int' 0           `-ReturnStmt 0x135027158 <line:16:3, col:16>             `-RecoveryExpr 0x135027130 <col:10, col:16> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x1350270f8 <col:10> 'struct pt_regs *' lvalue ParmVar 0x13500e248 'regs' 'struct pt_regs *' ","20630":"`-FunctionDecl 0x156141e28  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x156141f28 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x156141ed0 <<invalid sloc>> Implicit 873 ","21065":"`-FunctionDecl 0x124942000  line:1:1 invalid int_ossl_asn1_decode0_cons 'int (unsigned char **, long, long, long *, int, int, int, int, int, long *)'   |-ParmVarDecl 0x124928940 <col:28, col:44> col:44 used pp 'unsigned char **'   |-ParmVarDecl 0x1249289c0 <col:48, col:53> col:53 used max_len 'long'   |-ParmVarDecl 0x124928a40 <col:62, col:67> col:67 used length 'long'   |-ParmVarDecl 0x124928af8 <line:2:7, col:13> col:13 used offset 'long *'   |-ParmVarDecl 0x124928b78 <col:21, col:25> col:25 used depth 'int'   |-ParmVarDecl 0x124928bf8 <col:32, col:36> col:36 used yield 'int'   |-ParmVarDecl 0x124928c78 <col:43, col:47> col:47 used j 'int'   |-ParmVarDecl 0x124928cf8 <line:3:7, col:11> col:11 used tag 'int'   |-ParmVarDecl 0x124928d90 <col:16, col:22> col:22 invalid tc 'int'   |-ParmVarDecl 0x124928e10 <col:26, col:32> col:32 used num_read 'long *'   `-CompoundStmt 0x1249451d0 <line:4:1, line:65:1>     |-DeclStmt 0x124942178 <line:6:5, col:17>     | `-VarDecl 0x124942110 <col:5, col:9> col:9 used infinite 'int'     |-DeclStmt 0x124942278 <line:7:5, col:23>     | `-VarDecl 0x1249421a8 <col:5, col:17> col:10 used off 'long' cinit     |   `-ImplicitCastExpr 0x124942260 <col:16, col:17> 'long' <LValueToRValue>     |     `-UnaryOperator 0x124942248 <col:16, col:17> 'long' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x124942230 <col:17> 'long *' <LValueToRValue>     |         `-DeclRefExpr 0x124942210 <col:17> 'long *' lvalue ParmVar 0x124928af8 'offset' 'long *'     |-BinaryOperator 0x124942348 <line:9:5, col:26> 'int' '='     | |-DeclRefExpr 0x124942290 <col:5> 'int' lvalue Var 0x124942110 'infinite' 'int'     | `-ParenExpr 0x124942328 <col:16, col:26> 'int'     |   `-BinaryOperator 0x124942308 <col:17, col:22> 'int' '=='     |     |-ImplicitCastExpr 0x1249422f0 <col:17> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x1249422b0 <col:17> 'int' lvalue ParmVar 0x124928c78 'j' 'int'     |     `-IntegerLiteral 0x1249422d0 <col:22> 'int' 33     |-WhileStmt 0x124943f28 <line:12:5, line:26:5>     | |-BinaryOperator 0x124942610 <line:12:12, col:26> 'int' '||'     | | |-BinaryOperator 0x1249425b8 <col:12, col:21> 'int' '>'     | | | |-ImplicitCastExpr 0x124942588 <col:12> 'long' <LValueToRValue>     | | | | `-DeclRefExpr 0x124942548 <col:12> 'long' lvalue ParmVar 0x124928a40 'length' 'long'     | | | `-ImplicitCastExpr 0x1249425a0 <col:21> 'long' <IntegralCast>     | | |   `-IntegerLiteral 0x124942568 <col:21> 'int' 0     | | `-ImplicitCastExpr 0x1249425f8 <col:26> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x1249425d8 <col:26> 'int' lvalue Var 0x124942110 'infinite' 'int'     | `-CompoundStmt 0x124943ee8 <col:36, line:26:5>     |   |-DeclStmt 0x1249426e8 <line:13:2, col:21>     |   | `-VarDecl 0x124942648 <col:2, col:20> col:7 used inner_read 'long' cinit     |   |   `-ImplicitCastExpr 0x1249426d0 <col:20> 'long' <IntegralCast>     |   |     `-IntegerLiteral 0x1249426b0 <col:20> 'int' 0     |   |-CompoundAssignOperator 0x124942a80 <line:15:2, col:15> 'long' '+=' ComputeLHSTy='long' ComputeResultTy='long'     |   | |-UnaryOperator 0x124942a30 <col:2, col:3> 'long' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x124942a18 <col:3> 'long *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1249429f8 <col:3> 'long *' lvalue ParmVar 0x124928e10 'num_read' 'long *'     |   | `-ImplicitCastExpr 0x124942a68 <col:15> 'long' <LValueToRValue>     |   |   `-DeclRefExpr 0x124942a48 <col:15> 'long' lvalue Var 0x124942648 'inner_read' 'long'     |   |-CompoundAssignOperator 0x124942b08 <line:16:2, col:13> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'     |   | |-DeclRefExpr 0x124942ab0 <col:2> 'long' lvalue ParmVar 0x1249289c0 'max_len' 'long'     |   | `-ImplicitCastExpr 0x124942af0 <col:13> 'long' <LValueToRValue>     |   |   `-DeclRefExpr 0x124942ad0 <col:13> 'long' lvalue Var 0x124942648 'inner_read' 'long'     |   |-CallExpr 0x124942cd8 <line:17:2, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124942c18 <col:2> 'int ()' Function 0x124942b60 'rb_ary_push' 'int ()'     |   | |-RecoveryExpr 0x124942c98 <col:14> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x124942cb8 <col:19> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x124942e20 <line:18:2, line:19:16>     |   | |-BinaryOperator 0x124942d78 <line:18:6, col:15> 'int' '>'     |   | | |-ImplicitCastExpr 0x124942d48 <col:6> 'long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x124942d08 <col:6> 'long' lvalue ParmVar 0x124928a40 'length' 'long'     |   | | `-ImplicitCastExpr 0x124942d60 <col:15> 'long' <IntegralCast>     |   | |   `-IntegerLiteral 0x124942d28 <col:15> 'int' 0     |   | `-CompoundAssignOperator 0x124942df0 <line:19:6, col:16> 'long' '-=' ComputeLHSTy='long' ComputeResultTy='long'     |   |   |-DeclRefExpr 0x124942d98 <col:6> 'long' lvalue ParmVar 0x124928a40 'length' 'long'     |   |   `-ImplicitCastExpr 0x124942dd8 <col:16> 'long' <LValueToRValue>     |   |     `-DeclRefExpr 0x124942db8 <col:16> 'long' lvalue Var 0x124942648 'inner_read' 'long'     |   `-IfStmt 0x124943ec8 <line:21:2, line:25:2>     |     |-BinaryOperator 0x124943e88 <line:21:6, line:23:40> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x124943de0 <line:21:6, line:22:43> 'int' contains-errors '&&'     |     | | |-DeclRefExpr 0x124942e40 <line:21:6> 'int' lvalue Var 0x124942110 'infinite' 'int'     |     | | `-BinaryOperator 0x124943dc0 <line:22:6, col:43> 'int' contains-errors '=='     |     | |   |-CallExpr 0x124943d78 <col:6, col:38> '<dependent type>' contains-errors     |     | |   | |-DeclRefExpr 0x124942f40 <col:6> 'int ()' Function 0x124942e88 'NUM2INT' 'int ()'     |     | |   | `-CallExpr 0x124943d50 <col:14, col:37> '<dependent type>' contains-errors     |     | |   |   |-DeclRefExpr 0x124943ab8 <col:14> 'int ()' Function 0x124943a00 'ossl_asn1_get_tag' 'int ()'     |     | |   |   `-RecoveryExpr 0x124943d30 <col:32> '<dependent type>' contains-errors lvalue     |     | |   `-RecoveryExpr 0x124943da0 <col:43> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x124943e68 <line:23:6, col:40> 'int' contains-errors '=='     |     |   |-CallExpr 0x124943e20 <col:6, col:35> '<dependent type>' contains-errors     |     |   | |-DeclRefExpr 0x124943c78 <col:6> 'int ()' Function 0x124943bc0 'ossl_asn1_get_tag_class' 'int ()'     |     |   | `-RecoveryExpr 0x124943e00 <col:30> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x124943e48 <col:40> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x124943eb0 <col:55, line:25:2>     |       `-BreakStmt 0x124943ea8 <line:24:6>     |-IfStmt 0x124944fa0 <line:28:5, line:56:5> has_else     | |-BinaryOperator 0x124943fc0 <line:28:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x124943f48 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x124943fa0 <col:15> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x124944920 <col:30, line:52:5>     | | |-DeclStmt 0x124944060 <line:30:2, col:25>     | | | `-VarDecl 0x124943ff8 <col:2, col:6> col:6 used not_sequence_or_set 'int'     | | |-BinaryOperator 0x124944228 <line:32:2, col:57> 'int' contains-errors '='     | | | |-DeclRefExpr 0x124944078 <col:2> 'int' lvalue Var 0x124943ff8 'not_sequence_or_set' 'int'     | | | `-BinaryOperator 0x124944208 <col:24, col:57> 'int' contains-errors '&&'     | | |   |-BinaryOperator 0x1249441a8 <col:24, col:31> 'int' contains-errors '!='     | | |   | |-DeclRefExpr 0x124944098 <col:24> 'int' lvalue ParmVar 0x124928cf8 'tag' 'int'     | | |   | `-RecoveryExpr 0x124944188 <col:31> '<dependent type>' contains-errors lvalue     | | |   `-BinaryOperator 0x1249441e8 <col:50, col:57> 'int' contains-errors '!='     | | |     |-DeclRefExpr 0x1249440f0 <col:50> 'int' lvalue ParmVar 0x124928cf8 'tag' 'int'     | | |     `-RecoveryExpr 0x1249441c8 <col:57> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x1249445b8 <line:34:2, line:46:2> has_else     | |   |-ImplicitCastExpr 0x124944268 <line:34:6> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x124944248 <col:6> 'int' lvalue Var 0x124943ff8 'not_sequence_or_set' 'int'     | |   |-CompoundStmt 0x124944570 <col:27, line:42:2>     | |   | `-IfStmt 0x124944540 <line:35:6, line:41:6> has_else     | |   |   |-ImplicitCastExpr 0x1249442a0 <line:35:10> 'int' <LValueToRValue>     | |   |   | `-DeclRefExpr 0x124944280 <col:10> 'int' lvalue Var 0x124942110 'infinite' 'int'     | |   |   |-CompoundStmt 0x1249443b8 <col:20, line:37:6>     | |   |   `-CompoundStmt 0x124944530 <line:38:11, line:41:6>     | |   `-CompoundStmt 0x1249445a8 <line:43:7, line:46:2>     | `-CompoundStmt 0x124944f90 <line:53:10, line:56:5>     `-BinaryOperator 0x1249451b0 <line:63:5, col:15> 'long' '='       |-UnaryOperator 0x124945160 <col:5, col:6> 'long' lvalue prefix '*' cannot overflow       | `-ImplicitCastExpr 0x124945148 <col:6> 'long *' <LValueToRValue>       |   `-DeclRefExpr 0x124945128 <col:6> 'long *' lvalue ParmVar 0x124928af8 'offset' 'long *'       `-ImplicitCastExpr 0x124945198 <col:15> 'long' <LValueToRValue>         `-DeclRefExpr 0x124945178 <col:15> 'long' lvalue Var 0x1249421a8 'off' 'long' ","21099":"`-FunctionDecl 0x125827400  line:1:20 invalid vm_exit_controls_setbit 'void (struct vcpu_vmx *, int)' static inline   |-ParmVarDecl 0x12580e248 <col:44, col:61> col:61 used vmx 'struct vcpu_vmx *'   |-ParmVarDecl 0x12580e2e0 <col:66, col:70> col:70 invalid val 'int'   `-CompoundStmt 0x125827868 <line:2:1, line:4:1>     `-CallExpr 0x125827838 <line:3:2, col:59> '<dependent type>' contains-errors       |-DeclRefExpr 0x125827610 <col:2> 'int ()' Function 0x125827558 'vm_exit_controls_set' 'int ()'       |-DeclRefExpr 0x125827630 <col:23> 'struct vcpu_vmx *' lvalue ParmVar 0x12580e248 'vmx' 'struct vcpu_vmx *'       `-BinaryOperator 0x125827818 <col:28, col:56> '<dependent type>' contains-errors '|'         |-CallExpr 0x1258277b8 <col:28, col:52> 'int'         | |-ImplicitCastExpr 0x1258277a0 <col:28> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x125827730 <col:28> 'int ()' Function 0x125827678 'vm_exit_controls_get' 'int ()'         | `-ImplicitCastExpr 0x1258277e0 <col:49> 'struct vcpu_vmx *' <LValueToRValue>         |   `-DeclRefExpr 0x125827750 <col:49> 'struct vcpu_vmx *' lvalue ParmVar 0x12580e248 'vmx' 'struct vcpu_vmx *'         `-RecoveryExpr 0x1258277f8 <col:56> '<dependent type>' contains-errors lvalue ","21235":"`-FunctionDecl 0x142141a10  col:12 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x142141b10 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x142141b78 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x142141be0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x142141ab8 <<invalid sloc>> Implicit 883 ","20848":"`-FunctionDecl 0x1508083f8  line:1:1 arch_get_unmapped_area_topdown 'int (struct file *, const unsigned long, const unsigned long, const unsigned long, const unsigned long)'   |-ParmVarDecl 0x14780e248 <col:32, col:45> col:45 used filp 'struct file *'   |-ParmVarDecl 0x14780e2c8 <col:51, col:71> col:71 used addr0 'const unsigned long'   |-ParmVarDecl 0x14780e348 <line:2:6, col:26> col:26 used len 'const unsigned long'   |-ParmVarDecl 0x150808200 <col:31, col:51> col:51 used pgoff 'const unsigned long'   |-ParmVarDecl 0x150808280 <line:3:6, col:26> col:26 used flags 'const unsigned long'   `-CompoundStmt 0x15080e2e8 <line:4:1, line:64:1>     |-DeclStmt 0x1508086f8 <line:5:2, col:28>     | |-RecordDecl 0x150808510 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x150808678 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-DeclStmt 0x1508089d8 <line:6:2, col:36>     | |-RecordDecl 0x150808710 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x150808878 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x150808978 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm     |     `-RecoveryExpr 0x150808958 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x150808aa8 <line:7:2, col:28>     | `-VarDecl 0x150808a08 <col:2, col:23> col:16 used addr 'unsigned long' cinit     |   `-ImplicitCastExpr 0x150808a90 <col:23> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x150808a70 <col:23> 'const unsigned long' lvalue ParmVar 0x14780e2c8 'addr0' 'const unsigned long'     |-DeclStmt 0x150808bd8 <line:8:2, col:31>     | |-VarDecl 0x150808ad8 <col:2, col:6> col:6 used do_color_align 'int'     | `-VarDecl 0x150808b58 <col:2, col:22> col:22 used last_mmap 'int'     |-DeclStmt 0x150808d68 <line:9:2, col:35>     | |-RecordDecl 0x150808bf0 <col:2, col:9> col:9 struct vm_unmapped_area_info     | `-VarDecl 0x150808ce8 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'     |-IfStmt 0x150808ec0 <line:17:2, line:18:11>     | |-BinaryOperator 0x150808df8 <line:17:6, col:12> 'int' contains-errors '>'     | | |-DeclRefExpr 0x150808d80 <col:6> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'     | | `-RecoveryExpr 0x150808dd8 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x150808eb0 <line:18:3, col:11>     |   `-UnaryOperator 0x150808e98 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x150808e80 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x150808e60 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x150808f20 <line:20:2, col:19> 'int' '='     | |-DeclRefExpr 0x150808ee0 <col:2> 'int' lvalue Var 0x150808ad8 'do_color_align' 'int'     | `-IntegerLiteral 0x150808f00 <col:19> 'int' 0     |-IfStmt 0x150809038 <line:21:2, line:22:20>     | |-RecoveryExpr 0x150808fb8 <line:21:6, col:33> '_Bool' contains-errors     | `-BinaryOperator 0x150809018 <line:22:3, col:20> 'int' '='     |   |-DeclRefExpr 0x150808fd8 <col:3> 'int' lvalue Var 0x150808ad8 'do_color_align' 'int'     |   `-IntegerLiteral 0x150808ff8 <col:20> 'int' 1     |-BinaryOperator 0x15080ac58 <line:23:2, col:32> 'int' '='     | |-DeclRefExpr 0x150809058 <col:2> 'int' lvalue Var 0x150808b58 'last_mmap' 'int'     | `-CallExpr 0x15080ac18 <col:14, col:32> 'int'     |   |-ImplicitCastExpr 0x15080ac00 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x150809190 <col:14> 'int ()' Function 0x1508090d8 'GET_LAST_MMAP' 'int ()'     |   `-ImplicitCastExpr 0x15080ac40 <col:28> 'struct file *' <LValueToRValue>     |     `-DeclRefExpr 0x1508091b0 <col:28> 'struct file *' lvalue ParmVar 0x14780e248 'filp' 'struct file *'     |-IfStmt 0x15080b198 <line:25:2, line:31:2>     | |-BinaryOperator 0x15080acf0 <line:25:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x15080ac78 <col:6> 'const unsigned long' lvalue ParmVar 0x150808280 'flags' 'const unsigned long'     | | `-RecoveryExpr 0x15080acd0 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15080b178 <col:25, line:31:2>     |   |-IfStmt 0x15080b0f0 <line:26:3, line:29:12>     |   | |-RecoveryExpr 0x15080b028 <line:26:7, line:28:21> '_Bool' contains-errors     |   | `-ReturnStmt 0x15080b0e0 <line:29:4, col:12>     |   |   `-UnaryOperator 0x15080b0c8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x15080b0b0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x15080b090 <col:12> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x15080b160 <line:30:3, col:8> 'found_addr' 0x15080b110     |-IfStmt 0x15080d3c0 <line:34:2, line:43:2>     | |-ImplicitCastExpr 0x15080b1d8 <line:34:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x15080b1b8 <col:6> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     | `-CompoundStmt 0x15080d398 <col:12, line:43:2>     |   |-IfStmt 0x15080b6a0 <line:35:3, line:38:26> has_else     |   | |-BinaryOperator 0x15080b260 <line:35:7, col:25> 'int' '&&'     |   | | |-ImplicitCastExpr 0x15080b230 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x15080b1f0 <col:7> 'int' lvalue Var 0x150808ad8 'do_color_align' 'int'     |   | | `-ImplicitCastExpr 0x15080b248 <col:25> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x15080b210 <col:25> 'int' lvalue Var 0x150808b58 'last_mmap' 'int'     |   | |-BinaryOperator 0x15080b4b0 <line:36:4, col:45> 'unsigned long' '='     |   | | |-DeclRefExpr 0x15080b280 <col:4> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     |   | | `-ImplicitCastExpr 0x15080b498 <col:11, col:45> 'unsigned long' <IntegralCast>     |   | |   `-CallExpr 0x15080b418 <col:11, col:45> 'int'     |   | |     |-ImplicitCastExpr 0x15080b400 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x15080b380 <col:11> 'int ()' Function 0x15080b2c8 'COLOR_ALIGN' 'int ()'     |   | |     |-ImplicitCastExpr 0x15080b450 <col:23> 'unsigned long' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x15080b3a0 <col:23> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     |   | |     |-ImplicitCastExpr 0x15080b468 <col:29> 'int' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x15080b3c0 <col:29> 'int' lvalue Var 0x150808b58 'last_mmap' 'int'     |   | |     `-ImplicitCastExpr 0x15080b480 <col:40> 'unsigned long' <LValueToRValue>     |   | |       `-DeclRefExpr 0x15080b3e0 <col:40> 'const unsigned long' lvalue ParmVar 0x150808200 'pgoff' 'const unsigned long'     |   | `-BinaryOperator 0x15080b680 <line:38:4, col:26> 'unsigned long' '='     |   |   |-DeclRefExpr 0x15080b4d0 <col:4> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     |   |   `-ImplicitCastExpr 0x15080b668 <col:11, col:26> 'unsigned long' <IntegralCast>     |   |     `-CallExpr 0x15080b628 <col:11, col:26> 'int'     |   |       |-ImplicitCastExpr 0x15080b610 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x15080b5d0 <col:11> 'int ()' Function 0x15080b518 'PAGE_ALIGN' 'int ()'     |   |       `-ImplicitCastExpr 0x15080b650 <col:22> 'unsigned long' <LValueToRValue>     |   |         `-DeclRefExpr 0x15080b5f0 <col:22> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     |   |-BinaryOperator 0x15080b8c0 <line:39:3, col:26> 'struct vm_area_struct *' contains-errors '='     |   | |-DeclRefExpr 0x15080b6d0 <col:3> 'struct vm_area_struct *' lvalue Var 0x150808678 'vma' 'struct vm_area_struct *'     |   | `-ImplicitCastExpr 0x15080b8a8 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x15080b848 <col:9, col:26> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x15080b830 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x15080b7d0 <col:9> 'int ()' Function 0x15080b718 'find_vma' 'int ()'     |   |     |-ImplicitCastExpr 0x15080b878 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x15080b7f0 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x150808878 'mm' 'struct mm_struct *'     |   |     `-ImplicitCastExpr 0x15080b890 <col:22> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x15080b810 <col:22> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     |   `-IfStmt 0x15080d378 <line:40:3, line:42:9>     |     |-BinaryOperator 0x15080d340 <line:40:7, line:41:43> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x15080d240 <line:40:7, col:26> 'int' contains-errors '>='     |     | | |-BinaryOperator 0x15080d220 <col:7, col:19> '<dependent type>' contains-errors '-'     |     | | | |-RecoveryExpr 0x15080d200 <col:7> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x15080b8f8 <col:19> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'     |     | | `-DeclRefExpr 0x15080b938 <col:26> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     |     | `-ParenExpr 0x15080d320 <line:41:7, col:43> 'int' contains-errors     |     |   `-BinaryOperator 0x15080d300 <col:8, col:35> 'int' contains-errors '||'     |     |     |-UnaryOperator 0x15080d278 <col:8, col:9> 'int' prefix '!' cannot overflow     |     |     | `-ImplicitCastExpr 0x15080d260 <col:9> 'struct vm_area_struct *' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x15080b978 <col:9> 'struct vm_area_struct *' lvalue Var 0x150808678 'vma' 'struct vm_area_struct *'     |     |     `-BinaryOperator 0x15080d2e0 <col:16, col:35> 'int' contains-errors '<='     |     |       |-BinaryOperator 0x15080d2c0 <col:16, col:23> 'unsigned long' '+'     |     |       | |-ImplicitCastExpr 0x15080d290 <col:16> 'unsigned long' <LValueToRValue>     |     |       | | `-DeclRefExpr 0x15080b9c8 <col:16> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     |     |       | `-ImplicitCastExpr 0x15080d2a8 <col:23> 'unsigned long' <LValueToRValue>     |     |       |   `-DeclRefExpr 0x15080b9e8 <col:23> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'     |     |       `-RecoveryExpr 0x15080ba90 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x15080ba58 <col:30> 'struct vm_area_struct *' lvalue Var 0x150808678 'vma' 'struct vm_area_struct *'     |     `-GotoStmt 0x15080d360 <line:42:4, col:9> 'found_addr' 0x15080b110     |-BinaryOperator 0x15080d4c8 <line:45:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15080d428 <col:2, col:7> '<dependent type>' contains-errors lvalue .flags     | | `-RecoveryExpr 0x15080d400 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15080d3e0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'     | `-RecoveryExpr 0x15080d4a8 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15080d598 <line:46:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15080d530 <col:2, col:7> '<dependent type>' contains-errors lvalue .length     | | `-RecoveryExpr 0x15080d508 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15080d4e8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'     | `-DeclRefExpr 0x15080d578 <col:16> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'     |-BinaryOperator 0x15080d6a0 <line:47:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15080d600 <col:2, col:7> '<dependent type>' contains-errors lvalue .low_limit     | | `-RecoveryExpr 0x15080d5d8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15080d5b8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'     | `-RecoveryExpr 0x15080d680 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15080d7b0 <line:48:2, col:24> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15080d708 <col:2, col:7> '<dependent type>' contains-errors lvalue .high_limit     | | `-RecoveryExpr 0x15080d6e0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15080d6c0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'     | `-RecoveryExpr 0x15080d788 <col:20, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15080d750 <col:20> 'struct mm_struct *' contains-errors lvalue Var 0x150808878 'mm' 'struct mm_struct *'     |-BinaryOperator 0x15080da28 <line:50:2, col:58> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15080d908 <col:2, col:7> '<dependent type>' contains-errors lvalue .align_offset     | | `-RecoveryExpr 0x15080d8e0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15080d8c0 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x150808ce8 'info' 'struct vm_unmapped_area_info'     | `-CallExpr 0x15080d9c8 <col:22, col:58> 'int'     |   |-ImplicitCastExpr 0x15080d9b0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15080d950 <col:22> 'int ()' Function 0x15080add0 'shared_align_offset' 'int ()'     |   |-ImplicitCastExpr 0x15080d9f8 <col:42> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x15080d970 <col:42> 'int' lvalue Var 0x150808b58 'last_mmap' 'int'     |   `-ImplicitCastExpr 0x15080da10 <col:53> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x15080d990 <col:53> 'const unsigned long' lvalue ParmVar 0x150808200 'pgoff' 'const unsigned long'     |-BinaryOperator 0x15080dbc8 <line:51:2, col:31> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x15080da48 <col:2> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long'     | `-CallExpr 0x15080dba0 <col:9, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15080db48 <col:9> 'int ()' Function 0x15080da90 'vm_unmapped_area' 'int ()'     |   `-UnaryOperator 0x15080db88 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15080db68 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15080dc40 <line:52:2, line:53:8>     | |-RecoveryExpr 0x15080dc08 <line:52:6, col:25> '_Bool' contains-errors     | `-GotoStmt 0x15080dc28 <line:53:3, col:8> 'found_addr' 0x15080b110     |-ReturnStmt 0x15080dff8 <line:57:2, col:62>     | `-CallExpr 0x15080df38 <col:9, col:62> 'int'     |   |-ImplicitCastExpr 0x15080df20 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15080de60 <col:9> 'int ()' Function 0x15080dda8 'arch_get_unmapped_area' 'int ()'     |   |-ImplicitCastExpr 0x15080df80 <col:32> 'struct file *' <LValueToRValue>     |   | `-DeclRefExpr 0x15080de80 <col:32> 'struct file *' lvalue ParmVar 0x14780e248 'filp' 'struct file *'     |   |-ImplicitCastExpr 0x15080df98 <col:38> 'unsigned long' <LValueToRValue>     |   | `-DeclRefExpr 0x15080dea0 <col:38> 'const unsigned long' lvalue ParmVar 0x14780e2c8 'addr0' 'const unsigned long'     |   |-ImplicitCastExpr 0x15080dfb0 <col:45> 'unsigned long' <LValueToRValue>     |   | `-DeclRefExpr 0x15080dec0 <col:45> 'const unsigned long' lvalue ParmVar 0x14780e348 'len' 'const unsigned long'     |   |-ImplicitCastExpr 0x15080dfc8 <col:50> 'unsigned long' <LValueToRValue>     |   | `-DeclRefExpr 0x15080dee0 <col:50> 'const unsigned long' lvalue ParmVar 0x150808200 'pgoff' 'const unsigned long'     |   `-ImplicitCastExpr 0x15080dfe0 <col:57> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x15080df00 <col:57> 'const unsigned long' lvalue ParmVar 0x150808280 'flags' 'const unsigned long'     |-LabelStmt 0x15080e268 <line:59:1, col:11> 'found_addr'     | `-NullStmt 0x15080e260 <col:11>     `-ReturnStmt 0x15080e2d8 <line:63:2, col:9>       `-ImplicitCastExpr 0x15080e2c0 <col:9> 'int' <IntegralCast>         `-ImplicitCastExpr 0x15080e2a8 <col:9> 'unsigned long' <LValueToRValue>           `-DeclRefExpr 0x15080e288 <col:9> 'unsigned long' lvalue Var 0x150808a08 'addr' 'unsigned long' ","20265":"`-FunctionDecl 0x141123610  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x141123710 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1411236b8 <<invalid sloc>> Implicit 873 ","20980":"`-FunctionDecl 0x149128750  line:1:6 sctp_data_ready 'void (struct sock *)'   |-ParmVarDecl 0x149128648 <col:22, col:35> col:35 used sk 'struct sock *'   `-CompoundStmt 0x1491417a0 <line:2:1, line:12:1>     |-DeclStmt 0x149140c38 <line:3:2, col:22>     | |-RecordDecl 0x149140a48 <col:2, col:9> col:9 struct socket_wq     | `-VarDecl 0x149140bb8 <col:2, col:20> col:20 used wq 'struct socket_wq *'     |-CallExpr 0x149140de8 <line:5:2, col:16> 'int'     | `-ImplicitCastExpr 0x149140dd0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x149140d80 <col:2> 'int ()' Function 0x149140cc8 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x149140fb0 <line:6:2, col:32> 'struct socket_wq *' contains-errors '='     | |-DeclRefExpr 0x149140e08 <col:2> 'struct socket_wq *' lvalue Var 0x149140bb8 'wq' 'struct socket_wq *'     | `-CallExpr 0x149140f88 <col:7, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149140f08 <col:7> 'int ()' Function 0x149140e50 'rcu_dereference' 'int ()'     |   `-RecoveryExpr 0x149140f60 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x149140f28 <col:23> 'struct sock *' lvalue ParmVar 0x149128648 'sk' 'struct sock *'     |-IfStmt 0x149141448 <line:7:2, line:9:30>     | |-CallExpr 0x149141108 <line:7:6, col:25> 'int'     | | |-ImplicitCastExpr 0x1491410f0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1491410b0 <col:6> 'int ()' Function 0x149140ff8 'skwq_has_sleeper' 'int ()'     | | `-ImplicitCastExpr 0x149141130 <col:23> 'struct socket_wq *' <LValueToRValue>     | |   `-DeclRefExpr 0x1491410d0 <col:23> 'struct socket_wq *' lvalue Var 0x149140bb8 'wq' 'struct socket_wq *'     | `-CallExpr 0x149141418 <line:8:3, line:9:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149141228 <line:8:3> 'int ()' Function 0x149141170 'wake_up_interruptible_sync_poll' 'int ()'     |   |-UnaryOperator 0x1491412a8 <col:35, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x149141280 <col:36, col:40> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149141248 <col:36> 'struct socket_wq *' lvalue Var 0x149140bb8 'wq' 'struct socket_wq *'     |   `-BinaryOperator 0x1491413f8 <col:46, line:9:20> '<dependent type>' contains-errors '|'     |     |-BinaryOperator 0x1491413b8 <line:8:46, line:9:7> '<dependent type>' contains-errors '|'     |     | |-RecoveryExpr 0x149141378 <line:8:46> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x149141398 <line:9:7> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1491413d8 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x149141630 <line:10:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x149141548 <col:2> 'int ()' Function 0x149141490 'sk_wake_async' 'int ()'     | |-DeclRefExpr 0x149141568 <col:16> 'struct sock *' lvalue ParmVar 0x149128648 'sk' 'struct sock *'     | |-RecoveryExpr 0x1491415f0 <col:20> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x149141610 <col:37> '<dependent type>' contains-errors lvalue     `-CallExpr 0x149141780 <line:11:2, col:18> 'int'       `-ImplicitCastExpr 0x149141768 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x149141748 <col:2> 'int ()' Function 0x149141690 'rcu_read_unlock' 'int ()' ","20940":"`-FunctionDecl 0x155008b00  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x155008c00 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x155008c68 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x155008cd0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x155008ba8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x155008d50 <col:2> Implicit printf 3 4 ","20879":"`-FunctionDecl 0x13b027768  col:19 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x13b027868 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13b027810 <<invalid sloc>> Implicit 902 ","21081":"`-FunctionDecl 0x14b0261e0  line:1:13 oz_usb_handle_ep_data 'void (struct oz_usb_ctx *, struct oz_usb_hdr *, int)' static   |-ParmVarDecl 0x14b010448 <col:35, col:54> col:54 used usb_ctx 'struct oz_usb_ctx *'   |-ParmVarDecl 0x14b026028 <line:2:2, col:21> col:21 used usb_hdr 'struct oz_usb_hdr *'   |-ParmVarDecl 0x14b0260a8 <col:30, col:34> col:34 used len 'int'   `-CompoundStmt 0x14b029b50 <line:3:1, line:44:1>     |-DeclStmt 0x14b0265c0 <line:4:2, col:54>     | |-RecordDecl 0x14b0262e8 <col:2, col:9> col:9 struct oz_data     | `-VarDecl 0x14b026458 <col:2, col:47> col:18 used data_hdr 'struct oz_data *' cinit     |   `-CStyleCastExpr 0x14b026580 <col:29, col:47> 'struct oz_data *' <BitCast>     |     `-ImplicitCastExpr 0x14b026568 <col:47> 'struct oz_usb_hdr *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x14b0264c0 <col:47> 'struct oz_usb_hdr *' lvalue ParmVar 0x14b026028 'usb_hdr' 'struct oz_usb_hdr *'     `-SwitchStmt 0x14b026650 <line:6:2, line:42:2>       |-ImplicitCastExpr 0x14b026638 <line:6:10, col:20> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x14b026610 <col:10, col:20> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14b0265d8 <col:10> 'struct oz_data *' lvalue Var 0x14b026458 'data_hdr' 'struct oz_data *'       `-CompoundStmt 0x14b029b20 <col:28, line:42:2>         |-CompoundStmt 0x14b029020 <line:7:33, line:21:3>         | |-DeclStmt 0x14b026980 <line:8:4, line:9:41>         | | |-RecordDecl 0x14b0266a8 <line:8:4, col:11> col:11 struct oz_multiple_fixed         | | `-VarDecl 0x14b026818 <col:4, line:9:33> line:8:30 used body 'struct oz_multiple_fixed *' cinit         | |   `-CStyleCastExpr 0x14b026940 <line:9:5, col:33> 'struct oz_multiple_fixed *' <BitCast>         | |     `-ImplicitCastExpr 0x14b026928 <col:33> 'struct oz_data *' <LValueToRValue> part_of_explicit_cast         | |       `-DeclRefExpr 0x14b026880 <col:33> 'struct oz_data *' lvalue Var 0x14b026458 'data_hdr' 'struct oz_data *'         | |-DeclStmt 0x14b026a90 <line:11:4, col:9>         | | `-VarDecl 0x14b026a28 <col:4, col:8> col:8 used n 'int'         | |-IfStmt 0x14b026b40 <line:12:4, line:13:5>         | | |-UnaryOperator 0x14b026b20 <line:12:8, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow         | | | `-ImplicitCastExpr 0x14b026b08 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>         | | |   `-RecoveryExpr 0x14b026ae0 <col:9, col:15> '<dependent type>' contains-errors lvalue         | | |     `-DeclRefExpr 0x14b026aa8 <col:9> 'struct oz_multiple_fixed *' lvalue Var 0x14b026818 'body' 'struct oz_multiple_fixed *'         | | `-BreakStmt 0x14b026b38 <line:13:5>         | `-WhileStmt 0x14b029000 <line:16:4, line:20:4>         |   |-UnaryOperator 0x14b026c60 <line:16:11, col:12> 'int' postfix '--'         |   | `-DeclRefExpr 0x14b026c40 <col:11> 'int' lvalue Var 0x14b026a28 'n' 'int'         |   `-CompoundStmt 0x14b026fe8 <col:16, line:20:4>         |     `-CallExpr 0x14b026f48 <line:17:5, line:18:27> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x14b026d90 <line:17:5> 'int ()' Function 0x14b026cd8 'oz_hcd_data_ind' 'int ()'         |       |-RecoveryExpr 0x14b026de8 <col:21, col:30> '<dependent type>' contains-errors lvalue         |       | `-DeclRefExpr 0x14b026db0 <col:21> 'struct oz_usb_ctx *' lvalue ParmVar 0x14b010448 'usb_ctx' 'struct oz_usb_ctx *'         |       |-RecoveryExpr 0x14b026e48 <col:37, col:43> '<dependent type>' contains-errors lvalue         |       | `-DeclRefExpr 0x14b026e10 <col:37> 'struct oz_multiple_fixed *' lvalue Var 0x14b026818 'body' 'struct oz_multiple_fixed *'         |       |-RecoveryExpr 0x14b026f28 <line:18:6> '<dependent type>' contains-errors lvalue         |       `-RecoveryExpr 0x14b026ec0 <col:12, col:18> '<dependent type>' contains-errors lvalue         |         `-DeclRefExpr 0x14b026e88 <col:12> 'struct oz_multiple_fixed *' lvalue Var 0x14b026818 'body' 'struct oz_multiple_fixed *'         |-BreakStmt 0x14b029050 <line:22:3>         |-CompoundStmt 0x14b029ac8 <line:23:29, line:40:3>         | |-DeclStmt 0x14b029340 <line:24:4, line:25:37>         | | |-RecordDecl 0x14b029070 <line:24:4, col:11> col:11 struct oz_isoc_fixed         | | `-VarDecl 0x14b0291d8 <col:4, line:25:29> line:24:26 used body 'struct oz_isoc_fixed *' cinit         | |   `-CStyleCastExpr 0x14b029300 <line:25:5, col:29> 'struct oz_isoc_fixed *' <BitCast>         | |     `-ImplicitCastExpr 0x14b0292e8 <col:29> 'struct oz_data *' <LValueToRValue> part_of_explicit_cast         | |       `-DeclRefExpr 0x14b029240 <col:29> 'struct oz_data *' lvalue Var 0x14b026458 'data_hdr' 'struct oz_data *'         | |-DeclStmt 0x14b029438 <line:26:4, col:53>         | | `-VarDecl 0x14b029370 <col:4, col:8> col:8 used data_len 'int'         | |-DeclStmt 0x14b029530 <line:27:4, col:35>         | | `-VarDecl 0x14b029468 <col:4, col:26> col:8 used unit_size 'int' cinit         | |   `-RecoveryExpr 0x14b029508 <col:20, col:26> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x14b0294d0 <col:20> 'struct oz_isoc_fixed *' lvalue Var 0x14b0291d8 'body' 'struct oz_isoc_fixed *'         | |-DeclStmt 0x14b029640 <line:29:4, col:13>         | | `-VarDecl 0x14b0295d8 <col:4, col:8> col:8 used count 'int'         | |-DeclStmt 0x14b0296d8 <line:30:4, col:9>         | | `-VarDecl 0x14b029670 <col:4, col:8> col:8 used i 'int'         | |-IfStmt 0x14b029748 <line:32:4, line:33:5>         | | |-UnaryOperator 0x14b029728 <line:32:8, col:9> 'int' contains-errors prefix '!' cannot overflow         | | | `-ImplicitCastExpr 0x14b029710 <col:9> 'int' contains-errors <LValueToRValue>         | | |   `-DeclRefExpr 0x14b0296f0 <col:9> 'int' contains-errors lvalue Var 0x14b029468 'unit_size' 'int'         | | `-BreakStmt 0x14b029740 <line:33:5>         | |-BinaryOperator 0x14b029818 <line:34:4, col:21> 'int' contains-errors '='         | | |-DeclRefExpr 0x14b029768 <col:4> 'int' lvalue Var 0x14b0295d8 'count' 'int'         | | `-BinaryOperator 0x14b0297f8 <col:12, col:21> 'int' contains-errors '\/'         | |   |-ImplicitCastExpr 0x14b0297c8 <col:12> 'int' <LValueToRValue>         | |   | `-DeclRefExpr 0x14b029788 <col:12> 'int' lvalue Var 0x14b029370 'data_len' 'int'         | |   `-ImplicitCastExpr 0x14b0297e0 <col:21> 'int' contains-errors <LValueToRValue>         | |     `-DeclRefExpr 0x14b0297a8 <col:21> 'int' contains-errors lvalue Var 0x14b029468 'unit_size' 'int'         | `-ForStmt 0x14b029a90 <line:35:4, line:39:4>         |   |-BinaryOperator 0x14b029878 <line:35:9, col:13> 'int' '='         |   | |-DeclRefExpr 0x14b029838 <col:9> 'int' lvalue Var 0x14b029670 'i' 'int'         |   | `-IntegerLiteral 0x14b029858 <col:13> 'int' 0         |   |-<<<NULL>>>         |   |-BinaryOperator 0x14b029908 <col:16, col:20> 'int' '<'         |   | |-ImplicitCastExpr 0x14b0298d8 <col:16> 'int' <LValueToRValue>         |   | | `-DeclRefExpr 0x14b029898 <col:16> 'int' lvalue Var 0x14b029670 'i' 'int'         |   | `-ImplicitCastExpr 0x14b0298f0 <col:20> 'int' <LValueToRValue>         |   |   `-DeclRefExpr 0x14b0298b8 <col:20> 'int' lvalue Var 0x14b0295d8 'count' 'int'         |   |-UnaryOperator 0x14b029948 <col:27, col:28> 'int' postfix '++'         |   | `-DeclRefExpr 0x14b029928 <col:27> 'int' lvalue Var 0x14b029670 'i' 'int'         |   `-CompoundStmt 0x14b029a80 <col:32, line:39:4>         `-BreakStmt 0x14b029b18 <line:41:3> ","20717":"`-FunctionDecl 0x148842320  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x148842420 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x148842488 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1488424f0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1488423c8 <<invalid sloc>> Implicit 900 ","21120":"`-FunctionDecl 0x122928758  line:1:5 ip_output 'int (struct sk_buff *)'   |-ParmVarDecl 0x122928648 <col:15, col:31> col:31 used skb 'struct sk_buff *'   `-CompoundStmt 0x1229413d0 <line:2:1, line:9:1>     |-CallExpr 0x122940c00 <line:3:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122940b80 <col:2> 'int ()' Function 0x122940ac8 'IP_INC_STATS' 'int ()'     | `-RecoveryExpr 0x122940be0 <col:15> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1229413a0 <line:5:2, line:8:30> has_else       |-BinaryOperator 0x122941030 <line:5:6, col:56> 'int' contains-errors '&&'       | |-BinaryOperator 0x122940e10 <col:6, col:33> 'int' contains-errors '>'       | | |-RecoveryExpr 0x122940c60 <col:6, col:11> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x122940c28 <col:6> 'struct sk_buff *' lvalue ParmVar 0x122928648 'skb' 'struct sk_buff *'       | | `-CallExpr 0x122940de8 <col:17, col:33> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x122940d68 <col:17> 'int ()' Function 0x122940cb0 'dst_mtu' 'int ()'       | |   `-RecoveryExpr 0x122940dc0 <col:25, col:30> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x122940d88 <col:25> 'struct sk_buff *' lvalue ParmVar 0x122928648 'skb' 'struct sk_buff *'       | `-UnaryOperator 0x122941018 <col:38, col:56> '<dependent type>' contains-errors prefix '!' cannot overflow       |   `-ImplicitCastExpr 0x122941000 <col:39, col:56> '<dependent type>' contains-errors <LValueToRValue>       |     `-RecoveryExpr 0x122940fd8 <col:39, col:56> '<dependent type>' contains-errors lvalue       |       `-CallExpr 0x122940f98 <col:39, col:53> 'int'       |         |-ImplicitCastExpr 0x122940f80 <col:39> 'int (*)()' <FunctionToPointerDecay>       |         | `-DeclRefExpr 0x122940f10 <col:39> 'int ()' Function 0x122940e58 'skb_shinfo' 'int ()'       |         `-ImplicitCastExpr 0x122940fc0 <col:50> 'struct sk_buff *' <LValueToRValue>       |           `-DeclRefExpr 0x122940f30 <col:50> 'struct sk_buff *' lvalue ParmVar 0x122928648 'skb' 'struct sk_buff *'       |-ReturnStmt 0x122941208 <line:6:3, col:43>       | `-CallExpr 0x1229411d8 <col:10, col:43> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x122941130 <col:10> 'int ()' Function 0x122941078 'ip_fragment' 'int ()'       |   |-DeclRefExpr 0x122941150 <col:22> 'struct sk_buff *' lvalue ParmVar 0x122928648 'skb' 'struct sk_buff *'       |   `-RecoveryExpr 0x1229411b8 <col:27> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x122941390 <line:8:3, col:30>         `-CallExpr 0x122941350 <col:10, col:30> 'int'           |-ImplicitCastExpr 0x122941338 <col:10> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x1229412f8 <col:10> 'int ()' Function 0x122941240 'ip_finish_output' 'int ()'           `-ImplicitCastExpr 0x122941378 <col:27> 'struct sk_buff *' <LValueToRValue>             `-DeclRefExpr 0x122941318 <col:27> 'struct sk_buff *' lvalue ParmVar 0x122928648 'skb' 'struct sk_buff *' ","20401":"`-FunctionDecl 0x14a827478  line:1:13 invalid _db_chain_eq 'int (const struct db_arg_chain_tree *, const struct db_arg_chain_tree *)' static   |-ParmVarDecl 0x14a80e268 <col:26, col:58> col:58 used a 'const struct db_arg_chain_tree *'   |-ParmVarDecl 0x14a80e358 <line:2:5, col:37> col:37 used b 'const struct db_arg_chain_tree *'   `-CompoundStmt 0x14a8279c0 <line:3:1, line:6:1>     `-ReturnStmt 0x14a8279b0 <line:4:2, line:5:49>       `-ParenExpr 0x14a827990 <line:4:9, line:5:49> 'int' contains-errors         `-BinaryOperator 0x14a827970 <line:4:10, line:5:48> 'int' contains-errors '&&'           |-BinaryOperator 0x14a827850 <line:4:10, line:5:24> 'int' contains-errors '&&'           | |-BinaryOperator 0x14a827730 <line:4:10, col:47> 'int' contains-errors '&&'           | | |-ParenExpr 0x14a827610 <col:10, col:27> 'int' contains-errors           | | | `-BinaryOperator 0x14a8275f0 <col:11, col:24> 'int' contains-errors '=='           | | |   |-RecoveryExpr 0x14a827568 <col:11, col:14> '<dependent type>' contains-errors lvalue           | | |   | `-DeclRefExpr 0x14a827530 <col:11> 'const struct db_arg_chain_tree *' lvalue ParmVar 0x14a80e268 'a' 'const struct db_arg_chain_tree *'           | | |   `-RecoveryExpr 0x14a8275c8 <col:21, col:24> '<dependent type>' contains-errors lvalue           | | |     `-DeclRefExpr 0x14a827590 <col:21> 'const struct db_arg_chain_tree *' lvalue ParmVar 0x14a80e358 'b' 'const struct db_arg_chain_tree *'           | | `-ParenExpr 0x14a827710 <col:32, col:47> 'int' contains-errors           | |   `-BinaryOperator 0x14a8276f0 <col:33, col:45> 'int' contains-errors '=='           | |     |-RecoveryExpr 0x14a827668 <col:33, col:36> '<dependent type>' contains-errors lvalue           | |     | `-DeclRefExpr 0x14a827630 <col:33> 'const struct db_arg_chain_tree *' lvalue ParmVar 0x14a80e268 'a' 'const struct db_arg_chain_tree *'           | |     `-RecoveryExpr 0x14a8276c8 <col:42, col:45> '<dependent type>' contains-errors lvalue           | |       `-DeclRefExpr 0x14a827690 <col:42> 'const struct db_arg_chain_tree *' lvalue ParmVar 0x14a80e358 'b' 'const struct db_arg_chain_tree *'           | `-ParenExpr 0x14a827830 <line:5:3, col:24> 'int' contains-errors           |   `-BinaryOperator 0x14a827810 <col:4, col:19> 'int' contains-errors '=='           |     |-RecoveryExpr 0x14a827788 <col:4, col:7> '<dependent type>' contains-errors lvalue           |     | `-DeclRefExpr 0x14a827750 <col:4> 'const struct db_arg_chain_tree *' lvalue ParmVar 0x14a80e268 'a' 'const struct db_arg_chain_tree *'           |     `-RecoveryExpr 0x14a8277e8 <col:16, col:19> '<dependent type>' contains-errors lvalue           |       `-DeclRefExpr 0x14a8277b0 <col:16> 'const struct db_arg_chain_tree *' lvalue ParmVar 0x14a80e358 'b' 'const struct db_arg_chain_tree *'           `-ParenExpr 0x14a827950 <col:29, col:48> 'int' contains-errors             `-BinaryOperator 0x14a827930 <col:30, col:44> 'int' contains-errors '=='               |-RecoveryExpr 0x14a8278a8 <col:30, col:33> '<dependent type>' contains-errors lvalue               | `-DeclRefExpr 0x14a827870 <col:30> 'const struct db_arg_chain_tree *' lvalue ParmVar 0x14a80e268 'a' 'const struct db_arg_chain_tree *'               `-RecoveryExpr 0x14a827908 <col:41, col:44> '<dependent type>' contains-errors lvalue                 `-DeclRefExpr 0x14a8278d0 <col:41> 'const struct db_arg_chain_tree *' lvalue ParmVar 0x14a80e358 'b' 'const struct db_arg_chain_tree *' ","20847":"`-FunctionDecl 0x12f0082d8  line:1:1 invalid ntlmssp_create_challenge 'int (int, const struct ntlmssp_request *, int *)'   |-ParmVarDecl 0x12e80dcf0 <col:26, col:33> col:33 referenced invalid pool 'int'   |-ParmVarDecl 0x12e80e2e8 <col:39, col:69> col:69 request 'const struct ntlmssp_request *'   |-ParmVarDecl 0x12e80e398 <line:2:5, col:13> col:13 invalid size 'int *'   `-CompoundStmt 0x13800a0f0 <line:3:1, line:31:1>     |-ImplicitCastExpr 0x12f0083f8 <line:6:2> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x12f0083d0 <col:2> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12f0083b0 <col:2> 'int' lvalue ParmVar 0x12e80dcf0 'pool' 'int'     |-DeclStmt 0x12f0085f8 <line:7:2, col:28>     | |-RecordDecl 0x12f008480 <col:2, col:9> col:9 struct ntlmssp_challenge     | `-VarDecl 0x12f008578 <col:2, col:27> col:27 invalid c 'struct ntlmssp_challenge'     |-CallExpr 0x12f008938 <line:11:2, col:11> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f0088e0 <col:2> 'int ()' Function 0x12f008828 'i_zero' 'int ()'     | `-UnaryOperator 0x12f008920 <col:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f008900 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f008b48 <line:12:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f008a40 <col:2> 'int ()' Function 0x12f008988 'write_le64' 'int ()'     | |-UnaryOperator 0x12f008ac8 <col:13, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12f008a80 <col:14, col:16> '<dependent type>' contains-errors lvalue .magic     | |   `-RecoveryExpr 0x12f008a60 <col:14> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12f008b28 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f008d60 <line:13:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f008c58 <col:2> 'int ()' Function 0x12f008ba0 'write_le32' 'int ()'     | |-UnaryOperator 0x12f008ce0 <col:13, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12f008c98 <col:14, col:16> '<dependent type>' contains-errors lvalue .type     | |   `-RecoveryExpr 0x12f008c78 <col:14> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12f008d40 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12f009040 <line:15:2, col:46> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f008f10 <col:2> 'int ()' Function 0x12f008e58 'random_fill' 'int ()'       |-CXXDependentScopeMemberExpr 0x12f008f50 <col:14, col:16> '<dependent type>' contains-errors lvalue .challenge       | `-RecoveryExpr 0x12f008f30 <col:14> '<dependent type>' contains-errors lvalue       `-UnaryExprOrTypeTraitExpr 0x12f009020 <col:27, col:45> 'unsigned long' contains-errors sizeof         `-ParenExpr 0x12f009000 <col:33, col:45> '<dependent type>' contains-errors lvalue           `-CXXDependentScopeMemberExpr 0x12f008fb8 <col:34, col:36> '<dependent type>' contains-errors lvalue .challenge             `-RecoveryExpr 0x12f008f98 <col:34> '<dependent type>' contains-errors lvalue ","20571":"`-FunctionDecl 0x14a00ddf8  line:1:12 invalid tls1_set_shared_sigalgs 'int (int *)' static   |-ParmVarDecl 0x14a00dd28 <col:36, col:41> col:41 invalid s 'int *'   `-CompoundStmt 0x14a028dd8 <line:2:1, line:43:1>     |-DeclStmt 0x14a00e080 <line:3:5, col:45>     | |-VarDecl 0x14a00def8 <col:5, col:26> col:26 used pref 'const unsigned char *'     | |-VarDecl 0x14a00df78 <col:5, col:33> col:33 used allow 'const unsigned char *'     | `-VarDecl 0x14a00dff8 <col:5, col:41> col:41 used conf 'const unsigned char *'     |-BinaryOperator 0x14a00e1e0 <line:4:5, col:31> '<dependent type>' contains-errors ','     | |-BinaryOperator 0x14a00e1a0 <col:5, col:21> '<dependent type>' contains-errors ','     | | |-UnaryExprOrTypeTraitExpr 0x14a00e160 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | | `-RecoveryExpr 0x14a00e140 <col:12> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14a00e180 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a00e1c0 <col:31> '<dependent type>' contains-errors lvalue     |-UnaryExprOrTypeTraitExpr 0x14a00e258 <line:5:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x14a00e238 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14a027578 <line:8:5, col:44>     | `-VarDecl 0x14a00e340 <col:5, col:43> col:18 used is_suiteb 'unsigned int' cinit     |   `-CallExpr 0x14a027550 <col:30, col:43> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a027510 <col:30> 'int ()' Function 0x14a027458 'tls1_suiteb' 'int ()'     |     `-RecoveryExpr 0x14a027530 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a0278a0 <line:9:5, line:12:5>     | |-CXXDependentScopeMemberExpr 0x14a027610 <line:9:9, col:12> '<dependent type>' contains-errors lvalue ->shared_sigalgs     | | `-RecoveryExpr 0x14a0275f0 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a027888 <col:28, line:12:5>     |   `-CallExpr 0x14a027848 <line:10:9, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a027738 <col:9> 'int ()' Function 0x14a027680 'OPENSSL_free' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14a027800 <col:22, col:25> '<dependent type>' contains-errors lvalue ->shared_sigalgs     |       `-RecoveryExpr 0x14a0277e0 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a027f50 <line:14:5, line:21:9> has_else     | |-BinaryOperator 0x14a027b60 <line:14:9, col:45> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14a027b10 <col:9, col:26> 'int' contains-errors '&&'     | | | |-UnaryOperator 0x14a027a90 <col:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x14a027a78 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-CXXDependentScopeMemberExpr 0x14a0278e0 <col:10, col:13> '<dependent type>' contains-errors lvalue ->server     | | | |     `-RecoveryExpr 0x14a0278c0 <col:10> '<dependent type>' contains-errors lvalue     | | | `-CXXDependentScopeMemberExpr 0x14a027ac8 <col:23, col:26> '<dependent type>' contains-errors lvalue ->client_sigalgs     | | |   `-RecoveryExpr 0x14a027aa8 <col:23> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14a027b48 <col:44, col:45> 'int' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x14a027b30 <col:45> 'unsigned int' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x14a0279d8 <col:45> 'unsigned int' contains-errors lvalue Var 0x14a00e340 'is_suiteb' 'unsigned int'     | |-CompoundStmt 0x14a027ca8 <col:56, line:17:5>     | | `-BinaryOperator 0x14a027c88 <line:15:9, col:19> 'const unsigned char *' contains-errors '='     | |   |-DeclRefExpr 0x14a027b80 <col:9> 'const unsigned char *' lvalue Var 0x14a00dff8 'conf' 'const unsigned char *'     | |   `-CXXDependentScopeMemberExpr 0x14a027c40 <col:16, col:19> '<dependent type>' contains-errors lvalue ->client_sigalgs     | |     `-RecoveryExpr 0x14a027c20 <col:16> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x14a027f20 <line:17:12, line:21:9> has_else     |   |-RecoveryExpr 0x14a027d10 <line:17:16, col:36> '_Bool' contains-errors     |   |-CompoundStmt 0x14a027d50 <col:47, line:20:5>     |   `-NullStmt 0x14a027f18 <line:21:9>     |-IfStmt 0x14a028188 <line:22:5, line:32:5> has_else     | |-RecoveryExpr 0x14a028008 <line:22:9, col:57> '_Bool' contains-errors     | |-CompoundStmt 0x14a0280c0 <col:68, line:27:5>     | | `-BinaryOperator 0x14a028080 <line:23:9, col:16> 'const unsigned char *' '='     | |   |-DeclRefExpr 0x14a028028 <col:9> 'const unsigned char *' lvalue Var 0x14a00def8 'pref' 'const unsigned char *'     | |   `-ImplicitCastExpr 0x14a028068 <col:16> 'const unsigned char *' <LValueToRValue>     | |     `-DeclRefExpr 0x14a028048 <col:16> 'const unsigned char *' lvalue Var 0x14a00dff8 'conf' 'const unsigned char *'     | `-CompoundStmt 0x14a028170 <line:27:12, line:32:5>     |   `-BinaryOperator 0x14a028130 <line:28:9, col:17> 'const unsigned char *' '='     |     |-DeclRefExpr 0x14a0280d8 <col:9> 'const unsigned char *' lvalue Var 0x14a00df78 'allow' 'const unsigned char *'     |     `-ImplicitCastExpr 0x14a028118 <col:17> 'const unsigned char *' <LValueToRValue>     |       `-DeclRefExpr 0x14a0280f8 <col:17> 'const unsigned char *' lvalue Var 0x14a00dff8 'conf' 'const unsigned char *'     |-IfStmt 0x14a028348 <line:34:5, line:35:16>     | |-RecoveryExpr 0x14a0282f8 <line:34:9, col:10> '_Bool' contains-errors     | `-ReturnStmt 0x14a028338 <line:35:9, col:16>     |   `-IntegerLiteral 0x14a028318 <col:16> 'int' 1     |-IfStmt 0x14a028d28 <line:37:5, line:38:16>     | |-RecoveryExpr 0x14a028cd8 <line:37:9, col:10> '_Bool' contains-errors     | `-ReturnStmt 0x14a028d18 <line:38:9, col:16>     |   `-IntegerLiteral 0x14a028cf8 <col:16> 'int' 0     `-ReturnStmt 0x14a028dc8 <line:42:5, col:12>       `-IntegerLiteral 0x14a028da8 <col:12> 'int' 1 ","21229":"`-FunctionDecl 0x151140be8  line:1:12 wanxl_ioctl 'int (struct net_device *, struct ifreq *, int)' static   |-ParmVarDecl 0x151128648 <col:24, col:43> col:43 used dev 'struct net_device *'   |-ParmVarDecl 0x151140a28 <col:48, col:62> col:62 used ifr 'struct ifreq *'   |-ParmVarDecl 0x151140aa8 <col:67, col:71> col:71 used cmd 'int'   `-CompoundStmt 0x151143430 <line:2:1, line:48:1>     |-DeclStmt 0x151140da0 <line:3:2, col:50>     | `-VarDecl 0x151140d20 <col:2, col:15> col:15 invalid size 'const int'     |-IfStmt 0x1511410d8 <line:7:2, line:8:34>     | |-BinaryOperator 0x151140e48 <line:7:6, col:13> 'int' contains-errors '!='     | | |-DeclRefExpr 0x151140dd0 <col:6> 'int' lvalue ParmVar 0x151140aa8 'cmd' 'int'     | | `-RecoveryExpr 0x151140e28 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1511410c8 <line:8:3, col:34>     |   `-CallExpr 0x151141048 <col:10, col:34> 'int'     |     |-ImplicitCastExpr 0x151141030 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x151140f80 <col:10> 'int ()' Function 0x151140ec8 'hdlc_ioctl' 'int ()'     |     |-ImplicitCastExpr 0x151141080 <col:21> 'struct net_device *' <LValueToRValue>     |     | `-DeclRefExpr 0x151140fa0 <col:21> 'struct net_device *' lvalue ParmVar 0x151128648 'dev' 'struct net_device *'     |     |-ImplicitCastExpr 0x151141098 <col:26> 'struct ifreq *' <LValueToRValue>     |     | `-DeclRefExpr 0x151140fc0 <col:26> 'struct ifreq *' lvalue ParmVar 0x151140a28 'ifr' 'struct ifreq *'     |     `-ImplicitCastExpr 0x1511410b0 <col:31> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x151140fe0 <col:31> 'int' lvalue ParmVar 0x151140aa8 'cmd' 'int'     `-SwitchStmt 0x1511411b8 <line:10:2, line:47:9>       |-CXXDependentScopeMemberExpr 0x151141158 <line:10:10, col:28> '<dependent type>' contains-errors lvalue .type       | `-RecoveryExpr 0x151141130 <col:10, col:15> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1511410f8 <col:10> 'struct ifreq *' lvalue ParmVar 0x151140a28 'ifr' 'struct ifreq *'       `-CompoundStmt 0x1511433f8 <col:34, line:47:9>         |-BinaryOperator 0x1511412f8 <line:12:3, col:28> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x151141258 <col:3, col:21> '<dependent type>' contains-errors lvalue .type         | | `-RecoveryExpr 0x151141230 <col:3, col:8> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x1511411f8 <col:3> 'struct ifreq *' lvalue ParmVar 0x151140a28 'ifr' 'struct ifreq *'         | `-RecoveryExpr 0x1511412d8 <col:28> '<dependent type>' contains-errors lvalue         |-IfStmt 0x1511415e0 <line:13:3, line:16:3>         | |-BinaryOperator 0x1511413e0 <line:13:7, col:32> 'int' contains-errors '<'         | | |-CXXDependentScopeMemberExpr 0x151141378 <col:7, col:25> '<dependent type>' contains-errors lvalue .size         | | | `-RecoveryExpr 0x151141350 <col:7, col:12> '<dependent type>' contains-errors lvalue         | | |   `-DeclRefExpr 0x151141318 <col:7> 'struct ifreq *' lvalue ParmVar 0x151140a28 'ifr' 'struct ifreq *'         | | `-RecoveryExpr 0x1511413c0 <col:32> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x1511415c0 <col:38, line:16:3>         |   |-BinaryOperator 0x1511414c8 <line:14:4, col:29> '<dependent type>' contains-errors '='         |   | |-CXXDependentScopeMemberExpr 0x151141460 <col:4, col:22> '<dependent type>' contains-errors lvalue .size         |   | | `-RecoveryExpr 0x151141438 <col:4, col:9> '<dependent type>' contains-errors lvalue         |   | |   `-DeclRefExpr 0x151141400 <col:4> 'struct ifreq *' lvalue ParmVar 0x151140a28 'ifr' 'struct ifreq *'         |   | `-RecoveryExpr 0x1511414a8 <col:29> '<dependent type>' contains-errors lvalue         |   `-ReturnStmt 0x1511415b0 <line:15:4, col:12>         |     `-UnaryOperator 0x151141598 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow         |       `-ImplicitCastExpr 0x151141580 <col:12> '<dependent type>' contains-errors <LValueToRValue>         |         `-RecoveryExpr 0x151141530 <col:12> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x151142e20 <line:23:3, col:10>         | `-IntegerLiteral 0x151142e00 <col:10> 'int' 0         |-ReturnStmt 0x1511432a0 <line:43:3, col:10>         | `-IntegerLiteral 0x151143280 <col:10> 'int' 0         `-DefaultStmt 0x1511433d8 <line:45:2, line:46:34>           `-ReturnStmt 0x1511433c8 <col:3, col:34>             `-CallExpr 0x151143348 <col:10, col:34> 'int'               |-ImplicitCastExpr 0x151143330 <col:10> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x1511432b0 <col:10> 'int ()' Function 0x151140ec8 'hdlc_ioctl' 'int ()'               |-ImplicitCastExpr 0x151143380 <col:21> 'struct net_device *' <LValueToRValue>               | `-DeclRefExpr 0x1511432d0 <col:21> 'struct net_device *' lvalue ParmVar 0x151128648 'dev' 'struct net_device *'               |-ImplicitCastExpr 0x151143398 <col:26> 'struct ifreq *' <LValueToRValue>               | `-DeclRefExpr 0x1511432f0 <col:26> 'struct ifreq *' lvalue ParmVar 0x151140a28 'ifr' 'struct ifreq *'               `-ImplicitCastExpr 0x1511433b0 <col:31> 'int' <LValueToRValue>                 `-DeclRefExpr 0x151143310 <col:31> 'int' lvalue ParmVar 0x151140aa8 'cmd' 'int' ","20930":"`-FunctionDecl 0x1249281a8  line:1:5 mingw_rmdir 'int (const char *)'   |-ParmVarDecl 0x1249280d8 <col:17, col:29> col:29 used pathname 'const char *'   `-CompoundStmt 0x12500ad88 <line:2:1, line:26:1>     |-DeclStmt 0x1249283d8 <line:3:2, col:20>     | |-VarDecl 0x1249282b8 <col:2, col:6> col:6 used ret 'int'     | `-VarDecl 0x124928338 <col:2, col:19> col:11 used tries 'int' cinit     |   `-IntegerLiteral 0x1249283a0 <col:19> 'int' 0     |-IfStmt 0x124928720 <line:5:2, line:6:11>     | |-BinaryOperator 0x1249286b8 <line:5:6, col:44> 'int' '<'     | | |-CallExpr 0x124928658 <col:6, col:40> 'int'     | | | |-ImplicitCastExpr 0x124928640 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x124928520 <col:6> 'int ()' Function 0x124928468 'xutftowcs_path' 'int ()'     | | | |-ImplicitCastExpr 0x124928688 <col:21> 'const char *' <LValueToRValue>     | | | | `-DeclRefExpr 0x1249285e8 <col:21> 'const char *' lvalue ParmVar 0x1249280d8 'pathname' 'const char *'     | | | `-ImplicitCastExpr 0x1249286a0 <col:32> 'const char *' <LValueToRValue>     | | |   `-DeclRefExpr 0x124928558 <col:32> 'const char *' lvalue ParmVar 0x1249280d8 'pathname' 'const char *'     | | `-IntegerLiteral 0x1249285a8 <col:44> 'int' 0     | `-ReturnStmt 0x124928710 <line:6:3, col:11>     |   `-UnaryOperator 0x1249286f8 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x1249286d8 <col:11> 'int' 1     |-WhileStmt 0x125009cb8 <line:8:2, line:20:2>     | |-BinaryOperator 0x1250093c0 <line:8:9, col:69> 'int' contains-errors '&&'     | | |-BinaryOperator 0x125009338 <col:9, col:40> 'int' '=='     | | | |-ParenExpr 0x125009318 <col:9, col:34> 'int'     | | | | `-BinaryOperator 0x1250092f8 <col:10, col:33> 'int' '='     | | | |   |-DeclRefExpr 0x124928740 <col:10> 'int' lvalue Var 0x1249282b8 'ret' 'int'     | | | |   `-CallExpr 0x1250092b8 <col:16, col:33> 'int'     | | | |     |-ImplicitCastExpr 0x1250092a0 <col:16> 'int (*)()' <FunctionToPointerDecay>     | | | |     | `-DeclRefExpr 0x125008eb8 <col:16> 'int ()' Function 0x125008e00 '_wrmdir' 'int ()'     | | | |     `-ImplicitCastExpr 0x1250092e0 <col:24> 'const char *' <LValueToRValue>     | | | |       `-DeclRefExpr 0x125008f38 <col:24> 'const char *' lvalue ParmVar 0x1249280d8 'pathname' 'const char *'     | | | `-UnaryOperator 0x125009010 <col:39, col:40> 'int' prefix '-'     | | |   `-IntegerLiteral 0x125008ff0 <col:40> 'int' 1     | | `-BinaryOperator 0x1250093a0 <col:45, col:69> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x125009048 <col:45> 'int' lvalue Var 0x124928338 'tries' 'int'     | |   `-CallExpr 0x125009378 <col:53, col:69> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x125009148 <col:53> 'int ()' Function 0x125009090 'ARRAY_SIZE' 'int ()'     | |     `-RecoveryExpr 0x125009358 <col:64> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x125009c90 <col:72, line:20:2>     |   |-IfStmt 0x1250098c0 <line:11:3, line:12:4>     |   | |-BinaryOperator 0x125009898 <line:11:7, col:16> 'int' contains-errors '!='     |   | | |-RecoveryExpr 0x125009858 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x125009878 <col:16> '<dependent type>' contains-errors lvalue     |   | `-BreakStmt 0x1250098b8 <line:12:4>     |   |-IfStmt 0x125009b00 <line:13:3, line:16:3>     |   | |-UnaryOperator 0x125009ab0 <line:13:7, col:30> 'int' prefix '!' cannot overflow     |   | | `-CallExpr 0x125009a70 <col:8, col:30> 'int'     |   | |   |-ImplicitCastExpr 0x125009a58 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x1250099c0 <col:8> 'int ()' Function 0x125009908 'is_dir_empty' 'int ()'     |   | |   `-ImplicitCastExpr 0x125009a98 <col:21> 'const char *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x125009a38 <col:21> 'const char *' lvalue ParmVar 0x1249280d8 'pathname' 'const char *'     |   | `-CompoundStmt 0x125009ae8 <col:33, line:16:3>     |   |   `-BreakStmt 0x125009ae0 <line:15:4>     |   `-UnaryOperator 0x125009c78 <line:19:3, col:8> 'int' postfix '++'     |     `-DeclRefExpr 0x125009c58 <col:3> 'int' lvalue Var 0x124928338 'tries' 'int'     `-ReturnStmt 0x12500ad78 <line:25:2, col:9>       `-ImplicitCastExpr 0x12500ad60 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12500ad40 <col:9> 'int' lvalue Var 0x1249282b8 'ret' 'int' ","20945":"`-FunctionDecl 0x12d128b78  line:1:1 invalid put_info 'int (const char *, int, int, const char *)'   |-ParmVarDecl 0x12d1288d8 <col:10, col:22> col:22 used str 'const char *'   |-ParmVarDecl 0x12d128970 <col:26, col:36> col:36 invalid info_type 'int'   |-ParmVarDecl 0x12d1289f0 <col:47, col:52> col:52 used error 'int'   |-ParmVarDecl 0x12d128a70 <col:59, col:71> col:71 used sqlstate 'const char *'   `-CompoundStmt 0x12d143228 <line:2:1, line:68:1>     |-DeclStmt 0x12d128cf8 <line:4:3, col:22>     | `-VarDecl 0x12d128c70 <col:3, col:21> col:14 used inited 'int' static cinit     |   `-IntegerLiteral 0x12d128cd8 <col:21> 'int' 0     |-IfStmt 0x12d142948 <line:6:3, line:35:3>     | |-CXXDependentScopeMemberExpr 0x12d128d90 <line:6:7, col:14> '<dependent type>' contains-errors lvalue .batch     | | `-RecoveryExpr 0x12d128d70 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d142930 <line:7:3, line:35:3>     |   `-IfStmt 0x12d142848 <line:8:5, line:30:10> has_else     |     |-BinaryOperator 0x12d128e50 <line:8:9, col:22> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x12d128dd8 <col:9> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x12d128e30 <col:22> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x12d142698 <line:9:5, line:29:5>     |     | |-IfStmt 0x12d142360 <line:12:7, line:18:7>     |     | | |-ImplicitCastExpr 0x12d1421f0 <line:12:11> 'int' <LValueToRValue>     |     | | | `-DeclRefExpr 0x12d1421d0 <col:11> 'int' lvalue ParmVar 0x12d1289f0 'error' 'int'     |     | | `-CompoundStmt 0x12d142350 <line:13:7, line:18:7>     |     | |-IfStmt 0x12d142588 <line:19:7, line:24:7>     |     | | |-BinaryOperator 0x12d1424a0 <line:19:11, col:38> 'int' contains-errors '&&'     |     | | | |-CXXDependentScopeMemberExpr 0x12d142438 <col:11, col:18> '<dependent type>' contains-errors lvalue .query_start_line     |     | | | | `-RecoveryExpr 0x12d142418 <col:11> '<dependent type>' contains-errors lvalue     |     | | | `-RecoveryExpr 0x12d142480 <col:38> '<dependent type>' contains-errors lvalue     |     | | `-CompoundStmt 0x12d142578 <line:20:7, line:24:7>     |     | `-IfStmt 0x12d142678 <line:27:7, line:28:9>     |     |   |-RecoveryExpr 0x12d142628 <line:27:11, col:12> '_Bool' contains-errors     |     |   `-ReturnStmt 0x12d142668 <line:28:2, col:9>     |     |     `-IntegerLiteral 0x12d142648 <col:9> 'int' 1     |     `-NullStmt 0x12d142840 <line:30:10>     `-IfStmt 0x12d143150 <line:36:3, line:64:3>       |-RecoveryExpr 0x12d142988 <line:36:7, col:35> '_Bool' contains-errors       `-CompoundStmt 0x12d143130 <line:37:3, line:64:3>         |-IfStmt 0x12d142a70 <line:38:5, line:44:5>         | |-UnaryOperator 0x12d1429e0 <line:38:9, col:10> 'int' prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x12d1429c8 <col:10> 'int' <LValueToRValue>         | |   `-DeclRefExpr 0x12d1429a8 <col:10> 'int' lvalue Var 0x12d128c70 'inited' 'int'         | `-CompoundStmt 0x12d142a58 <line:39:5, line:44:5>         |   `-BinaryOperator 0x12d142a38 <line:40:7, col:14> 'int' '='         |     |-DeclRefExpr 0x12d1429f8 <col:7> 'int' lvalue Var 0x12d128c70 'inited' 'int'         |     `-IntegerLiteral 0x12d142a18 <col:14> 'int' 1         `-IfStmt 0x12d1430a0 <line:45:5, line:61:7> has_else           |-RecoveryExpr 0x12d142ab0 <line:45:9, col:22> '_Bool' contains-errors           |-CompoundStmt 0x12d143058 <line:46:5, line:59:5>           | |-IfStmt 0x12d142c80 <line:47:7, line:48:21>           | | |-RecoveryExpr 0x12d142ad0 <line:47:11, col:12> '_Bool' contains-errors           | | `-CallExpr 0x12d142c58 <line:48:9, col:21> 'int'           | |   |-ImplicitCastExpr 0x12d142c40 <col:9> 'int (*)()' <FunctionToPointerDecay>           | |   | `-DeclRefExpr 0x12d142bd0 <col:9> 'int ()' Function 0x12d142b18 'putchar' 'int ()'           | |   `-CharacterLiteral 0x12d142bf0 <col:17> 'int' 7           | `-IfStmt 0x12d143028 <line:50:7, line:58:9> has_else           |   |-ImplicitCastExpr 0x12d142dc0 <line:50:11> 'int' <LValueToRValue>           |   | `-DeclRefExpr 0x12d142da0 <col:11> 'int' lvalue ParmVar 0x12d1289f0 'error' 'int'           |   |-CompoundStmt 0x12d142fd0 <line:51:7, line:56:7>           |   `-NullStmt 0x12d143020 <line:58:9>           `-NullStmt 0x12d143098 <line:61:7> ","20398":"`-FunctionDecl 0x14a10cb40  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14a10cc40 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a10cca8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14a10cd10 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a10cbe8 <<invalid sloc>> Implicit 882 ","21142":"`-FunctionDecl 0x14b1281f0  line:1:13 invalid encode_picture_start 'void (int *)' static   |-ParmVarDecl 0x14b128128 <col:34, col:49> col:49 invalid s 'int *'   `-CompoundStmt 0x14b141828 <line:2:1, line:7:1>     |-CallExpr 0x14b1284a0 <line:3:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b128400 <col:5> 'int ()' Function 0x14b128348 'avpriv_align_put_bits' 'int ()'     | `-UnaryOperator 0x14b128488 <col:27, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b128440 <col:28, col:31> '<dependent type>' contains-errors lvalue ->pb     |     `-RecoveryExpr 0x14b128420 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b1285e8 <line:4:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b1285a8 <col:5> 'int ()' Function 0x14b1284f0 'encode_picture_header' 'int ()'     | `-RecoveryExpr 0x14b1285c8 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b1286b0 <line:5:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b128610 <col:5> 'int ()' Function 0x14b128348 'avpriv_align_put_bits' 'int ()'     | `-UnaryOperator 0x14b128698 <col:27, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b128650 <col:28, col:31> '<dependent type>' contains-errors lvalue ->pb     |     `-RecoveryExpr 0x14b128630 <col:28> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14b141800 <line:6:5, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b1287b8 <col:5> 'int ()' Function 0x14b128700 'encode_wavelet_transform' 'int ()'       `-RecoveryExpr 0x14b1287d8 <col:30> '<dependent type>' contains-errors lvalue ","20268":"`-FunctionDecl 0x139140e30  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x139140f30 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x139140f98 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x139141000 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x139140ed8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x139141080 <col:2> Implicit printf 3 4 ","20981":"`-FunctionDecl 0x145928a88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x145928928 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x1459289a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x145943e08 <col:64, line:42:1>     |-CallExpr 0x145928e48 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145928ca0 <col:3> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x145928cc0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x145928e00 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145928dc0 <col:30> 'int ()' Function 0x145928d08 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x145928de0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x145928e28 <col:47> 'int' 3     |-CallExpr 0x145942048 <line:3:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145928e80 <col:3> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x145928ea0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x145942000 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145928fa0 <col:30> 'int ()' Function 0x145928ee8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x145928fc0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x145942028 <col:48> 'int' 2     |-DeclStmt 0x145942298 <line:5:3, col:58>     | `-VarDecl 0x145942098 <col:3, col:23> col:23 invalid lookup 'const int *'     |-CallExpr 0x145942458 <line:6:3, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1459422b0 <col:3> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1459422d0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x145942410 <col:30, col:50> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1459423d0 <col:30> 'int ()' Function 0x145942318 'NumDimensions' 'int ()'     | | `-RecoveryExpr 0x1459423f0 <col:44> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x145942438 <col:53> 'int' 1     |-CallExpr 0x1459425a8 <line:7:3, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145942490 <col:3> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1459424b0 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x1459424f0 <col:30, col:38> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x1459424d0 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x145942588 <col:44> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x145942718 <line:9:3, col:55>     | `-VarDecl 0x1459425f8 <col:3, col:23> col:23 invalid key 'const int *'     |-CallExpr 0x1459427f8 <line:10:3, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145942730 <col:3> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x145942750 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x1459427b0 <col:30, col:47> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145942770 <col:30> 'int ()' Function 0x145942318 'NumDimensions' 'int ()'     | | `-RecoveryExpr 0x145942790 <col:44> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1459427d8 <col:50> 'int' 1     |-CallExpr 0x145942948 <line:11:3, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145942830 <col:3> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x145942850 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x145942890 <col:30, col:35> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x145942870 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x145942928 <col:41> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x145942ab8 <line:13:3, col:57>     | `-VarDecl 0x145942998 <col:3, col:23> col:23 invalid value 'const int *'     |-CallExpr 0x145942c98 <line:14:3, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145942bb0 <col:3> 'int ()' Function 0x145942af8 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x145942bd0 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x145942c78 <col:27, col:51> 'int' contains-errors '>='     |   |-CallExpr 0x145942c30 <col:27, col:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x145942bf0 <col:27> 'int ()' Function 0x145942318 'NumDimensions' 'int ()'     |   | `-RecoveryExpr 0x145942c10 <col:41> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x145942c58 <col:51> 'int' 1     |-CallExpr 0x145942f08 <line:15:3, line:16:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145942cc8 <line:15:3> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x145942ce8 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x145942e48 <col:30, col:52> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145942de8 <col:30> 'int ()' Function 0x145942d30 'SizeOfDimension' 'int ()'     | | |-RecoveryExpr 0x145942e08 <col:46> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x145942e28 <col:51> 'int' 0     | `-CallExpr 0x145942ed8 <line:16:21, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x145942e78 <col:21> 'int ()' Function 0x145942d30 'SizeOfDimension' 'int ()'     |   |-RecoveryExpr 0x145942e98 <col:37> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x145942eb8 <col:44> 'int' 0     |-IfStmt 0x145943138 <line:17:3, line:19:3>     | |-BinaryOperator 0x145943000 <line:17:7, col:22> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x145942f60 <col:7, col:14> '<dependent type>' contains-errors lvalue ->type     | | | `-RecoveryExpr 0x145942f40 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x145942fe0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145943120 <col:37, line:19:3>     |   `-CallExpr 0x1459430e8 <line:18:5, col:55> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x145943020 <col:5> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     |     |-RecoveryExpr 0x145943040 <col:23> '<dependent type>' contains-errors lvalue     |     |-CallExpr 0x1459430a0 <col:32, col:51> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x145943060 <col:32> 'int ()' Function 0x145942318 'NumDimensions' 'int ()'     |     | `-RecoveryExpr 0x145943080 <col:46> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1459430c8 <col:54> 'int' 1     |-CallExpr 0x145943480 <line:22:3, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145943308 <col:3> 'int ()' Function 0x145928be8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x145943328 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x145943418 <col:30, col:36> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x1459433f8 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x145943460 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145943d10 <line:30:3, line:37:3>     | |-RecoveryExpr 0x145943860 <line:30:7, col:23> '_Bool' contains-errors     | `-CompoundStmt 0x145943cf8 <col:38, line:37:3>     |   `-ForStmt 0x145943c38 <line:33:5, line:35:5>     |     |-DeclStmt 0x145943a80 <line:33:10, col:19>     |     | `-VarDecl 0x1459439f8 <col:10, col:18> col:14 used i 'int' cinit     |     |   `-IntegerLiteral 0x145943a60 <col:18> 'int' 1     |     |-<<<NULL>>>     |     |-BinaryOperator 0x145943b20 <col:21, col:44> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x145943a98 <col:21> 'int' lvalue Var 0x1459439f8 'i' 'int'     |     | `-CallExpr 0x145943af8 <col:25, col:44> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x145943ab8 <col:25> 'int ()' Function 0x145942318 'NumDimensions' 'int ()'     |     |   `-RecoveryExpr 0x145943ad8 <col:39> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x145943b60 <col:47, col:48> 'int' postfix '++'     |     | `-DeclRefExpr 0x145943b40 <col:47> 'int' lvalue Var 0x1459439f8 'i' 'int'     |     `-CompoundStmt 0x145943c28 <col:52, line:35:5>     `-IfStmt 0x145943de8 <line:38:3, line:40:3>       |-RecoveryExpr 0x145943db8 <line:38:7, col:56> '_Bool' contains-errors       `-CompoundStmt 0x145943dd8 <col:67, line:40:3> ","20878":"`-FunctionDecl 0x124944c00  line:1:12 io_uring_flush 'int (struct file *, void *)' static   |-ParmVarDecl 0x124928648 <col:27, col:40> col:40 used file 'struct file *'   |-ParmVarDecl 0x1249286c8 <col:46, col:52> col:52 used data 'void *'   `-CompoundStmt 0x124945740 <line:2:1, line:11:1>     |-DeclStmt 0x124944f48 <line:3:2, col:46>     | |-RecordDecl 0x124944d00 <col:2, col:9> col:9 struct io_ring_ctx     | `-VarDecl 0x124944e68 <col:2, col:34> col:22 used ctx 'struct io_ring_ctx *' cinit     |   `-RecoveryExpr 0x124944f08 <col:28, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124944ed0 <col:28> 'struct file *' lvalue ParmVar 0x124928648 'file' 'struct file *'     |-CallExpr 0x124945138 <line:5:2, col:33> 'int' contains-errors     | |-ImplicitCastExpr 0x124945120 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124945090 <col:2> 'int ()' Function 0x124944fd8 'io_uring_cancel_files' 'int ()'     | |-ImplicitCastExpr 0x124945168 <col:24> 'struct io_ring_ctx *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x1249450b0 <col:24> 'struct io_ring_ctx *' contains-errors lvalue Var 0x124944e68 'ctx' 'struct io_ring_ctx *'     | `-ImplicitCastExpr 0x124945180 <col:29> 'void *' <LValueToRValue>     |   `-DeclRefExpr 0x1249450d0 <col:29> 'void *' lvalue ParmVar 0x1249286c8 'data' 'void *'     |-IfStmt 0x1249456f0 <line:6:2, line:9:2>     | |-RecoveryExpr 0x124945370 <line:6:6, col:67> '_Bool' contains-errors     | `-CompoundStmt 0x1249456d0 <col:70, line:9:2>     |   |-CallExpr 0x124945518 <line:7:3, col:37> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124945470 <col:3> 'int ()' Function 0x1249453b8 'io_cqring_overflow_flush' 'int ()'     |   | |-DeclRefExpr 0x124945490 <col:28> 'struct io_ring_ctx *' contains-errors lvalue Var 0x124944e68 'ctx' 'struct io_ring_ctx *'     |   | `-RecoveryExpr 0x1249454f8 <col:33> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1249456a8 <line:8:3, col:30> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x124945628 <col:3> 'int ()' Function 0x124945570 'io_wq_cancel_all' 'int ()'     |     `-RecoveryExpr 0x124945680 <col:20, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x124945648 <col:20> 'struct io_ring_ctx *' contains-errors lvalue Var 0x124944e68 'ctx' 'struct io_ring_ctx *'     `-ReturnStmt 0x124945730 <line:10:2, col:9>       `-IntegerLiteral 0x124945710 <col:9> 'int' 0 ","21188":"`-FunctionDecl 0x13e0c2c38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x13e0c2b58 <col:12> col:12 Array 'int'   |-ParmVarDecl 0x13e0c2ad8 <col:19> col:19 used count 'int'   `-CompoundStmt 0x13e0dc010 <line:2:1, line:13:1>     |-DeclStmt 0x13e0c31e0 <line:3:2, col:12>     | `-VarDecl 0x13e0c2d50 <col:2, col:7> col:7 invalid count 'long'     |-IfStmt 0x13e0dbcf8 <line:6:2, line:8:2>     | |-BinaryOperator 0x13e0dbcb0 <line:6:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x13e0dbc70 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x13e0dbc58 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x13e0dbb60 <col:6> 'int ()' Function 0x13e0dbaa8 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x13e0dbc90 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e0dbce0 <col:47, line:8:2>     |   `-ReturnStmt 0x13e0dbcd0 <line:7:3>     `-CallExpr 0x13e0dbfd0 <line:12:2, col:19> 'int'       |-ImplicitCastExpr 0x13e0dbfb8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13e0dbf78 <col:2> 'int ()' Function 0x13e0dbec0 'RETURN_LONG' 'int ()'       `-ImplicitCastExpr 0x13e0dbff8 <col:14> 'int' <LValueToRValue>         `-DeclRefExpr 0x13e0dbf98 <col:14> 'int' lvalue ParmVar 0x13e0c2ad8 'count' 'int' ","20590":"`-FunctionDecl 0x132919318  line:1:13 invalid check_log_path 'int (int *, int *, int *)' static   |-ParmVarDecl 0x132919128 <col:28, col:37> col:37 invalid self 'int *'   |-ParmVarDecl 0x1329191a8 <col:43, col:48> col:48 invalid thd 'int *'   |-ParmVarDecl 0x132919228 <col:53, col:62> col:62 invalid var 'int *'   `-CompoundStmt 0x1329340f8 <line:2:1, line:53:1>     |-IfStmt 0x132919628 <line:6:3, line:7:12>     | |-UnaryOperator 0x1329195c8 <line:6:7, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1329195b0 <col:8, col:38> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x132919538 <col:8, col:38> '<dependent type>' contains-errors lvalue .str     | |     `-CXXDependentScopeMemberExpr 0x1329194f0 <col:8, col:25> '<dependent type>' contains-errors lvalue .string_value     | |       `-CXXDependentScopeMemberExpr 0x1329194a8 <col:8, col:13> '<dependent type>' contains-errors lvalue ->save_result     | |         `-RecoveryExpr 0x132919488 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x132919618 <line:7:5, col:12>     |   `-RecoveryExpr 0x1329195f8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132932cc8 <line:9:3, line:13:3>     | |-BinaryOperator 0x132919798 <line:9:7, col:46> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x1329196f8 <col:7, col:37> '<dependent type>' contains-errors lvalue .length     | | | `-CXXDependentScopeMemberExpr 0x1329196b0 <col:7, col:24> '<dependent type>' contains-errors lvalue .string_value     | | |   `-CXXDependentScopeMemberExpr 0x132919668 <col:7, col:12> '<dependent type>' contains-errors lvalue ->save_result     | | |     `-RecoveryExpr 0x132919648 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x132919778 <col:46> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x132932ca8 <line:10:3, line:13:3>     |   |-CallExpr 0x132932c28 <line:11:5, col:52> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x132932910 <col:5> 'int ()' Function 0x132932858 'my_error' 'int ()'     |   | |-RecoveryExpr 0x132932bc8 <col:14> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x132932c00 <col:30, col:35> 'int'     |   | | |-ImplicitCastExpr 0x132932be8 <col:30> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x132932a28 <col:30> 'int ()' Function 0x132932970 'MYF' 'int ()'     |   | | `-IntegerLiteral 0x132932a48 <col:34> 'int' 0     |   | `-CXXDependentScopeMemberExpr 0x132932b48 <col:38, col:49> '<dependent type>' contains-errors lvalue .str     |   |   `-CXXDependentScopeMemberExpr 0x132932b00 <col:38, col:44> '<dependent type>' contains-errors lvalue ->name     |   |     `-RecoveryExpr 0x132932ae0 <col:38> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x132932c98 <line:12:5, col:12>     |     `-RecoveryExpr 0x132932c78 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132932d78 <line:15:3, col:23>     | `-VarDecl 0x132932d10 <col:3, col:8> col:8 invalid path 'char'     |-BinaryOperator 0x132933070 <line:16:3, col:78> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x132933050 <col:3, col:10> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x132933030 <col:10> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x132932fe0 <col:23, col:78> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x132932ea8 <col:23> 'int ()' Function 0x132932df0 'unpack_filename' 'int ()'     |   |-RecoveryExpr 0x132932ec8 <col:39> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x132932f98 <col:45, col:75> '<dependent type>' contains-errors lvalue .str     |     `-CXXDependentScopeMemberExpr 0x132932f50 <col:45, col:62> '<dependent type>' contains-errors lvalue .string_value     |       `-CXXDependentScopeMemberExpr 0x132932f08 <col:45, col:50> '<dependent type>' contains-errors lvalue ->save_result     |         `-RecoveryExpr 0x132932ee8 <col:45> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132933170 <line:18:3, line:19:12>     | |-UnaryOperator 0x132933110 <line:18:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1329330f8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1329330d8 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x132933160 <line:19:5, col:12>     |   `-RecoveryExpr 0x132933140 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x132933720 <line:21:3, line:27:3>     | |-UnaryOperator 0x1329334b0 <line:21:7, line:22:64> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x132933480 <line:21:8, line:22:64> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x132933270 <line:21:8> 'int ()' Function 0x1329331b8 'is_filename_allowed' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x132933340 <col:28, col:58> '<dependent type>' contains-errors lvalue .str     | |   | `-CXXDependentScopeMemberExpr 0x1329332f8 <col:28, col:45> '<dependent type>' contains-errors lvalue .string_value     | |   |   `-CXXDependentScopeMemberExpr 0x1329332b0 <col:28, col:33> '<dependent type>' contains-errors lvalue ->save_result     | |   |     `-RecoveryExpr 0x132933290 <col:28> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x132933438 <line:22:28, col:58> '<dependent type>' contains-errors lvalue .length     | |     `-CXXDependentScopeMemberExpr 0x1329333f0 <col:28, col:45> '<dependent type>' contains-errors lvalue .string_value     | |       `-CXXDependentScopeMemberExpr 0x1329333a8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->save_result     | |         `-RecoveryExpr 0x132933388 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x132933710 <line:23:3, line:27:3>     |-IfStmt 0x132933ac8 <line:31:3, line:36:3>     | |-RecoveryExpr 0x132933978 <line:31:7, col:36> '_Bool' contains-errors     | `-CompoundStmt 0x132933ab8 <line:32:3, line:36:3>     `-IfStmt 0x132933f78 <line:40:3, line:44:3>       |-RecoveryExpr 0x132933df8 <line:40:7, col:61> '_Bool' contains-errors       `-CompoundStmt 0x132933f68 <line:41:3, line:44:3> ","21131":"`-FunctionDecl 0x14e128288  line:1:12 invalid readContigStripsIntoBuffer 'int (int *, int *)' static   |-ParmVarDecl 0x14e128128 <col:40, col:46> col:46 invalid in 'int *'   |-ParmVarDecl 0x14e1281a8 <col:50, col:57> col:57 referenced invalid buf 'int *'   `-CompoundStmt 0x14e809658 <line:2:1, line:33:1>     |-IfStmt 0x14e1286e8 <line:11:9, line:14:9>     | |-BinaryOperator 0x14e128410 <line:11:13, col:30> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14e1283f0 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14e1283b0 <col:30> 'int' 0     | `-CompoundStmt 0x14e1286c8 <col:33, line:14:9>     |   |-CallExpr 0x14e128658 <line:12:17, col:32> 'int'     |   | |-ImplicitCastExpr 0x14e128640 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e128590 <col:17> 'int ()' Function 0x14e1284d8 'TIFFError' 'int ()'     |   | `-ImplicitCastExpr 0x14e128680 <col:27> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14e1285f0 <col:27> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14e1286b8 <line:13:17, col:24>     |     `-IntegerLiteral 0x14e128698 <col:24> 'int' 0     |-ForStmt 0x14e8095f0 <line:16:9, line:30:9>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x14e809200 <line:16:25, col:33> 'int' contains-errors '<'     | | |-RecoveryExpr 0x14e1287b0 <col:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14e1287d0 <col:33> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14e809270 <col:42, col:47> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x14e809250 <col:42> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e8095d8 <col:51, line:30:9>     |   `-IfStmt 0x14e8095b8 <line:24:17, line:28:17>     |     |-RecoveryExpr 0x14e809510 <line:24:21, col:40> '_Bool' contains-errors     |     `-CompoundStmt 0x14e8095a0 <col:48, line:28:17>     |       `-ReturnStmt 0x14e809590 <line:27:25, col:32>     |         `-IntegerLiteral 0x14e809570 <col:32> 'int' 0     `-ReturnStmt 0x14e809648 <line:32:9, col:16>       `-IntegerLiteral 0x14e809628 <col:16> 'int' 1 ","20766":"`-FunctionDecl 0x12e128750  line:1:13 set_media_not_present 'void (struct scsi_disk *)' static   |-ParmVarDecl 0x12e128648 <col:35, col:53> col:53 used sdkp 'struct scsi_disk *'   `-CompoundStmt 0x12e140dd8 <line:2:1, line:10:1>     |-IfStmt 0x12e140b90 <line:3:2, line:4:27>     | |-RecoveryExpr 0x12e140a80 <line:3:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e140a48 <col:6> 'struct scsi_disk *' lvalue ParmVar 0x12e128648 'sdkp' 'struct scsi_disk *'     | `-BinaryOperator 0x12e140b70 <line:4:3, col:27> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x12e140b08 <col:3, col:17> '<dependent type>' contains-errors lvalue ->changed     |   | `-RecoveryExpr 0x12e140ae0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12e140aa8 <col:3> 'struct scsi_disk *' lvalue ParmVar 0x12e128648 'sdkp' 'struct scsi_disk *'     |   `-IntegerLiteral 0x12e140b50 <col:27> 'int' 1     `-IfStmt 0x12e140db8 <line:6:2, line:9:2>       |-CXXDependentScopeMemberExpr 0x12e140c10 <line:6:6, col:20> '<dependent type>' contains-errors lvalue ->removable       | `-RecoveryExpr 0x12e140be8 <col:6, col:12> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x12e140bb0 <col:6> 'struct scsi_disk *' lvalue ParmVar 0x12e128648 'sdkp' 'struct scsi_disk *'       `-CompoundStmt 0x12e140d98 <col:31, line:9:2>         |-BinaryOperator 0x12e140cd8 <line:7:3, col:25> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x12e140c90 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x12e140c58 <col:3> 'struct scsi_disk *' lvalue ParmVar 0x12e128648 'sdkp' 'struct scsi_disk *'         | `-IntegerLiteral 0x12e140cb8 <col:25> 'int' 0         `-BinaryOperator 0x12e140d78 <line:8:3, col:20> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x12e140d30 <col:3, col:9> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x12e140cf8 <col:3> 'struct scsi_disk *' lvalue ParmVar 0x12e128648 'sdkp' 'struct scsi_disk *'           `-IntegerLiteral 0x12e140d58 <col:20> 'int' 0 ","20707":"`-FunctionDecl 0x143128358  line:1:27 invalid nl_pid_hash_zalloc 'struct hlist_head *(int)' static   |-ParmVarDecl 0x143128190 <col:46, col:53> col:53 invalid size 'int'   `-CompoundStmt 0x143141a70 <line:2:1, line:9:1>     `-IfStmt 0x143141a40 <line:3:2, line:6:3> has_else       |-BinaryOperator 0x143128480 <line:3:6, col:14> 'int' contains-errors '<='       | |-RecoveryExpr 0x143128408 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x143128460 <col:14> '<dependent type>' contains-errors lvalue       |-ReturnStmt 0x1431286d8 <line:4:3, col:34>       | `-CallExpr 0x1431286a8 <col:10, col:34> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x143128600 <col:10> 'int ()' Function 0x143128548 'kzalloc' 'int ()'       |   |-RecoveryExpr 0x143128620 <col:18> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x143128688 <col:24> '<dependent type>' contains-errors lvalue       `-NullStmt 0x143141a38 <line:6:3> ","20865":"`-FunctionDecl 0x12c9281f8  line:1:5 invalid pci_piix3_xen_ide_unplug 'int (int *)'   |-ParmVarDecl 0x12c928128 <col:30, col:43> col:43 invalid dev 'int *'   `-CompoundStmt 0x12c9427b0 <line:2:1, line:23:1>     |-DeclStmt 0x12c928358 <line:5:5, col:10>     | `-VarDecl 0x12c9282f0 <col:5, col:9> col:9 used i 'int'     |-ForStmt 0x12c9424d8 <line:9:5, line:20:5>     | |-BinaryOperator 0x12c928578 <line:9:10, col:14> 'int' '='     | | |-DeclRefExpr 0x12c928538 <col:10> 'int' lvalue Var 0x12c9282f0 'i' 'int'     | | `-IntegerLiteral 0x12c928558 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12c9285f0 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x12c9285d8 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12c928598 <col:17> 'int' lvalue Var 0x12c9282f0 'i' 'int'     | | `-IntegerLiteral 0x12c9285b8 <col:21> 'int' 4     | |-UnaryOperator 0x12c928630 <col:24, col:25> 'int' postfix '++'     | | `-DeclRefExpr 0x12c928610 <col:24> 'int' lvalue Var 0x12c9282f0 'i' 'int'     | `-CompoundStmt 0x12c9424c0 <col:29, line:20:5>     |   `-IfStmt 0x12c9424a0 <line:11:9, line:19:9>     |     |-BinaryOperator 0x12c941fa8 <line:11:13, col:32> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x12c941ef0 <col:13, col:19> 'int' contains-errors '!='     |     | | |-RecoveryExpr 0x12c941eb0 <col:13> '<dependent type>' contains-errors lvalue     |     | | `-RecoveryExpr 0x12c941ed0 <col:19> '<dependent type>' contains-errors lvalue     |     | `-UnaryOperator 0x12c941f90 <col:27, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     |     |   `-ImplicitCastExpr 0x12c941f78 <col:28, col:32> '<dependent type>' contains-errors <LValueToRValue>     |     |     `-CXXDependentScopeMemberExpr 0x12c941f30 <col:28, col:32> '<dependent type>' contains-errors lvalue ->media_cd     |     |       `-RecoveryExpr 0x12c941f10 <col:28> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12c942488 <col:42, line:19:9>     |       `-IfStmt 0x12c942368 <line:14:13, line:16:13>     |         |-RecoveryExpr 0x12c942238 <line:14:17> '_Bool' contains-errors     |         `-CompoundStmt 0x12c942358 <col:21, line:16:13>     |-CallExpr 0x12c942758 <line:21:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c9425f0 <col:5> 'int ()' Function 0x12c942538 'qdev_reset_all' 'int ()'     | `-CallExpr 0x12c942730 <col:20, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c9426f0 <col:20> 'int ()' Function 0x12c942638 'DEVICE' 'int ()'     |   `-RecoveryExpr 0x12c942710 <col:27> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c9427a0 <line:22:5, col:12>       `-IntegerLiteral 0x12c942780 <col:12> 'int' 0 ","20598":"`-FunctionDecl 0x123008fe8  line:1:12 invalid fuse_xattr_set 'int (const struct xattr_handler *, struct dentry *, struct inode *, const char *, const void *, int, int)' static   |-ParmVarDecl 0x122928648 <col:27, col:55> col:55 handler 'const struct xattr_handler *'   |-ParmVarDecl 0x123008a28 <line:2:6, col:21> col:21 dentry 'struct dentry *'   |-ParmVarDecl 0x123008bf8 <col:29, col:43> col:43 used inode 'struct inode *'   |-ParmVarDecl 0x123008c78 <line:3:6, col:18> col:18 used name 'const char *'   |-ParmVarDecl 0x123008d28 <col:24, col:36> col:36 used value 'const void *'   |-ParmVarDecl 0x123008dc0 <col:43, col:50> col:50 invalid size 'int'   |-ParmVarDecl 0x123008e40 <line:4:6, col:10> col:10 used flags 'int'   `-CompoundStmt 0x1230095a0 <line:5:1, line:10:1>     |-IfStmt 0x123009388 <line:6:2, line:7:38>     | |-UnaryOperator 0x123009100 <line:6:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1230090e8 <col:7> 'const void *' <LValueToRValue>     | |   `-DeclRefExpr 0x1230090c8 <col:7> 'const void *' lvalue ParmVar 0x123008d28 'value' 'const void *'     | `-ReturnStmt 0x123009378 <line:7:3, col:38>     |   `-CallExpr 0x123009318 <col:10, col:38> 'int'     |     |-ImplicitCastExpr 0x123009300 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x123009270 <col:10> 'int ()' Function 0x1230091b8 'fuse_removexattr' 'int ()'     |     |-ImplicitCastExpr 0x123009348 <col:27> 'struct inode *' <LValueToRValue>     |     | `-DeclRefExpr 0x123009290 <col:27> 'struct inode *' lvalue ParmVar 0x123008bf8 'inode' 'struct inode *'     |     `-ImplicitCastExpr 0x123009360 <col:34> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x1230092b0 <col:34> 'const char *' lvalue ParmVar 0x123008c78 'name' 'const char *'     `-ReturnStmt 0x123009590 <line:9:2, col:54>       `-CallExpr 0x123009548 <col:9, col:54> '<dependent type>' contains-errors         |-DeclRefExpr 0x123009488 <col:9> 'int ()' Function 0x1230093d0 'fuse_setxattr' 'int ()'         |-DeclRefExpr 0x1230094a8 <col:23> 'struct inode *' lvalue ParmVar 0x123008bf8 'inode' 'struct inode *'         |-DeclRefExpr 0x1230094c8 <col:30> 'const char *' lvalue ParmVar 0x123008c78 'name' 'const char *'         |-DeclRefExpr 0x1230094e8 <col:36> 'const void *' lvalue ParmVar 0x123008d28 'value' 'const void *'         |-RecoveryExpr 0x123009508 <col:43> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x123009528 <col:49> 'int' lvalue ParmVar 0x123008e40 'flags' 'int' ","20855":"`-FunctionDecl 0x148808a00  line:1:20 invalid xfrm_pol_hold_rcu 'int (struct xfrm_policy *)' static inline   |-ParmVarDecl 0x158928668 <col:38, col:58> col:58 used policy 'struct xfrm_policy *'   `-CompoundStmt 0x148808ce0 <line:2:1, line:4:1>     `-ReturnStmt 0x148808cd0 <line:3:2, col:46>       `-CallExpr 0x148808ca8 <col:9, col:46> '<dependent type>' contains-errors         |-DeclRefExpr 0x148808c10 <col:9> 'int ()' Function 0x148808b58 'refcount_inc_not_zero' 'int ()'         `-UnaryOperator 0x148808c90 <col:31, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x148808c68 <col:32, col:40> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x148808c30 <col:32> 'struct xfrm_policy *' lvalue ParmVar 0x158928668 'policy' 'struct xfrm_policy *' ","21123":"`-FunctionDecl 0x14b0f7a88  line:1:12 packet_notifier 'int (struct notifier_block *, unsigned long, void *)' static   |-ParmVarDecl 0x14b0df648 <col:28, col:51> col:51 this 'struct notifier_block *'   |-ParmVarDecl 0x14b0df6c8 <line:2:7, col:21> col:21 used msg 'unsigned long'   |-ParmVarDecl 0x14b0df748 <col:26, col:32> col:32 used ptr 'void *'   `-CompoundStmt 0x14b0fdd60 <line:3:1, line:50:1>     |-DeclStmt 0x14b0f7d78 <line:4:2, col:17>     | |-RecordDecl 0x14b0f7b90 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x14b0f7cf8 <col:2, col:15> col:15 used sk 'struct sock *'     |-DeclStmt 0x14b0f8188 <line:5:2, col:59>     | |-RecordDecl 0x14b0f7d90 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x14b0f7ef8 <col:2, col:58> col:21 used dev 'struct net_device *' cinit     |   `-ImplicitCastExpr 0x14b0f8158 <col:27, col:58> 'struct net_device *' <IntegralToPointer>     |     `-CallExpr 0x14b0f8118 <col:27, col:58> 'int'     |       |-ImplicitCastExpr 0x14b0f8100 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b0f8090 <col:27> 'int ()' Function 0x14b0f7fd8 'netdev_notifier_info_to_dev' 'int ()'     |       `-ImplicitCastExpr 0x14b0f8140 <col:55> 'void *' <LValueToRValue>     |         `-DeclRefExpr 0x14b0f80b0 <col:55> 'void *' lvalue ParmVar 0x14b0df748 'ptr' 'void *'     |-DeclStmt 0x14b0f8518 <line:6:2, col:32>     | |-RecordDecl 0x14b0f81a0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x14b0f8308 <col:2, col:31> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x14b0f84e8 <col:20, col:31> 'struct net *' <IntegralToPointer>     |     `-CallExpr 0x14b0f84a8 <col:20, col:31> 'int'     |       |-ImplicitCastExpr 0x14b0f8490 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b0f8450 <col:20> 'int ()' Function 0x14b0f8398 'dev_net' 'int ()'     |       `-ImplicitCastExpr 0x14b0f84d0 <col:28> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x14b0f8470 <col:28> 'struct net_device *' lvalue Var 0x14b0f7ef8 'dev' 'struct net_device *'     |-CallExpr 0x14b0f8648 <line:8:2, col:16> 'int'     | `-ImplicitCastExpr 0x14b0f8630 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14b0f8610 <col:2> 'int ()' Function 0x14b0f8558 'rcu_read_lock' 'int ()'     |-CallExpr 0x14b0f8848 <line:9:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b0f8748 <col:2> 'int ()' Function 0x14b0f8690 'sk_for_each_rcu' 'int ()'     | |-DeclRefExpr 0x14b0f8768 <col:18> 'struct sock *' lvalue Var 0x14b0f7cf8 'sk' 'struct sock *'     | `-UnaryOperator 0x14b0f8830 <col:22, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b0f87e8 <col:23, col:35> '<dependent type>' contains-errors lvalue .sklist     |     `-RecoveryExpr 0x14b0f87c0 <col:23, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14b0f8788 <col:23> 'struct net *' lvalue Var 0x14b0f8308 'net' 'struct net *'     |-CompoundStmt 0x14b0fdc08 <col:43, line:47:2>     | |-DeclStmt 0x15b041c10 <line:10:3, col:38>     | | |-RecordDecl 0x14b0f8878 <col:3, col:10> col:10 struct packet_sock     | | `-VarDecl 0x15b041a00 <col:3, col:37> col:23 used po 'struct packet_sock *' cinit     | |   `-ImplicitCastExpr 0x15b041be0 <col:28, col:37> 'struct packet_sock *' <IntegralToPointer>     | |     `-CallExpr 0x15b041ba0 <col:28, col:37> 'int'     | |       |-ImplicitCastExpr 0x15b041b88 <col:28> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x15b041b48 <col:28> 'int ()' Function 0x15b041a90 'pkt_sk' 'int ()'     | |       `-ImplicitCastExpr 0x15b041bc8 <col:35> 'struct sock *' <LValueToRValue>     | |         `-DeclRefExpr 0x15b041b68 <col:35> 'struct sock *' lvalue Var 0x14b0f7cf8 'sk' 'struct sock *'     | `-SwitchStmt 0x15b041c60 <line:12:3, line:46:3>     |   |-ImplicitCastExpr 0x15b041c48 <line:12:11> 'unsigned long' <LValueToRValue>     |   | `-DeclRefExpr 0x15b041c28 <col:11> 'unsigned long' lvalue ParmVar 0x14b0df6c8 'msg' 'unsigned long'     |   `-CompoundStmt 0x14b0fdbd0 <col:16, line:46:3>     |     |-IfStmt 0x15b041ec8 <line:14:4, line:15:46>     |     | |-RecoveryExpr 0x15b041cd8 <line:14:8, col:12> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x15b041ca0 <col:8> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     | `-CallExpr 0x15b041e98 <line:15:5, col:46> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x15b041de0 <col:5> 'int ()' Function 0x15b041d28 'packet_dev_mclist_delete' 'int ()'     |     |   |-DeclRefExpr 0x15b041e00 <col:30> 'struct net_device *' lvalue Var 0x14b0f7ef8 'dev' 'struct net_device *'     |     |   `-UnaryOperator 0x15b041e80 <col:35, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |     `-RecoveryExpr 0x15b041e58 <col:36, col:40> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x15b041e20 <col:36> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |-IfStmt 0x14b0fd700 <line:19:4, line:36:4>     |     | |-BinaryOperator 0x15b041fc0 <line:19:8, col:28> 'int' contains-errors '=='     |     | | |-RecoveryExpr 0x15b041f38 <col:8, col:13> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x15b041f00 <col:8> 'struct net_device *' lvalue Var 0x14b0f7ef8 'dev' 'struct net_device *'     |     | | `-RecoveryExpr 0x15b041f98 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x15b041f60 <col:24> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     | `-CompoundStmt 0x14b0fd6d0 <col:37, line:36:4>     |     |   |-CallExpr 0x15b042158 <line:20:5, col:29> '<dependent type>' contains-errors     |     |   | |-DeclRefExpr 0x15b0420c0 <col:5> 'int ()' Function 0x15b042008 'spin_lock' 'int ()'     |     |   | `-UnaryOperator 0x15b042140 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   |   `-RecoveryExpr 0x15b042118 <col:16, col:20> '<dependent type>' contains-errors lvalue     |     |   |     `-DeclRefExpr 0x15b0420e0 <col:16> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |   |-IfStmt 0x15b042580 <line:21:5, line:26:5>     |     |   | |-RecoveryExpr 0x15b0421b8 <line:21:9, col:13> '<dependent type>' contains-errors lvalue     |     |   | | `-DeclRefExpr 0x15b042180 <col:9> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |   | `-CompoundStmt 0x15b042568 <col:22, line:26:5>     |     |   |   `-IfStmt 0x15b042548 <line:24:6, line:25:29>     |     |   |     |-RecoveryExpr 0x15b042480 <line:24:10, col:34> '_Bool' contains-errors     |     |   |     `-CallExpr 0x15b042520 <line:25:7, col:29> '<dependent type>' contains-errors     |     |   |       |-RecoveryExpr 0x15b0424d8 <col:7, col:11> '<dependent type>' contains-errors lvalue     |     |   |       | `-DeclRefExpr 0x15b0424a0 <col:7> 'struct sock *' lvalue Var 0x14b0f7cf8 'sk' 'struct sock *'     |     |   |       `-DeclRefExpr 0x15b042500 <col:27> 'struct sock *' lvalue Var 0x14b0f7cf8 'sk' 'struct sock *'     |     |   |-IfStmt 0x14b0fd510 <line:27:5, line:34:5>     |     |   | |-RecoveryExpr 0x15b0425c0 <line:27:9, col:16> '_Bool' contains-errors     |     |   | `-CompoundStmt 0x14b0fd4e0 <col:35, line:34:5>     |     |   |   |-CallExpr 0x15b042718 <line:28:6, col:32> 'int'     |     |   |   | |-ImplicitCastExpr 0x15b042700 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     |   |   | | `-DeclRefExpr 0x15b0426c0 <col:6> 'int ()' Function 0x15b042608 'packet_cached_dev_reset' 'int ()'     |     |   |   | `-ImplicitCastExpr 0x15b042740 <col:30> 'struct packet_sock *' <LValueToRValue>     |     |   |   |   `-DeclRefExpr 0x15b0426e0 <col:30> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |   |   |-CallExpr 0x15b042890 <line:29:6, col:23> 'int'     |     |   |   | |-ImplicitCastExpr 0x15b042878 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     |   |   | | `-DeclRefExpr 0x15b042838 <col:6> 'int ()' Function 0x15b042780 'fanout_release' 'int ()'     |     |   |   | `-ImplicitCastExpr 0x15b0428b8 <col:21> 'struct sock *' <LValueToRValue>     |     |   |   |   `-DeclRefExpr 0x15b042858 <col:21> 'struct sock *' lvalue Var 0x14b0f7cf8 'sk' 'struct sock *'     |     |   |   |-BinaryOperator 0x15b042968 <line:30:6, col:21> '<dependent type>' contains-errors '='     |     |   |   | |-RecoveryExpr 0x15b042908 <col:6, col:10> '<dependent type>' contains-errors lvalue     |     |   |   | | `-DeclRefExpr 0x15b0428d0 <col:6> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |   |   | `-UnaryOperator 0x15b042950 <col:20, col:21> 'int' prefix '-'     |     |   |   |   `-IntegerLiteral 0x15b042930 <col:21> 'int' 1     |     |   |   `-IfStmt 0x14b0fd418 <line:31:6, line:32:32>     |     |   |     |-CXXDependentScopeMemberExpr 0x14b0fd200 <line:31:10, col:24> '<dependent type>' contains-errors lvalue .dev     |     |   |     | `-RecoveryExpr 0x15b0429c0 <col:10, col:14> '<dependent type>' contains-errors lvalue     |     |   |     |   `-DeclRefExpr 0x15b042988 <col:10> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |   |     `-CallExpr 0x14b0fd3f0 <line:32:7, col:32> '<dependent type>' contains-errors     |     |   |       |-DeclRefExpr 0x14b0fd328 <col:7> 'int ()' Function 0x14b0fd270 'dev_put' 'int ()'     |     |   |       `-CXXDependentScopeMemberExpr 0x14b0fd3a8 <col:15, col:29> '<dependent type>' contains-errors lvalue .dev     |     |   |         `-RecoveryExpr 0x14b0fd380 <col:15, col:19> '<dependent type>' contains-errors lvalue     |     |   |           `-DeclRefExpr 0x14b0fd348 <col:15> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |   `-CallExpr 0x14b0fd6a8 <line:35:5, col:31> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x14b0fd610 <col:5> 'int ()' Function 0x14b0fd558 'spin_unlock' 'int ()'     |     |     `-UnaryOperator 0x14b0fd690 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |       `-RecoveryExpr 0x14b0fd668 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x14b0fd630 <col:18> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |-BreakStmt 0x14b0fd720 <line:37:4>     |     |-IfStmt 0x14b0fdba8 <line:39:4, line:44:4>     |     | |-BinaryOperator 0x14b0fd7e8 <line:39:8, col:28> 'int' contains-errors '=='     |     | | |-RecoveryExpr 0x14b0fd760 <col:8, col:13> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x14b0fd728 <col:8> 'struct net_device *' lvalue Var 0x14b0f7ef8 'dev' 'struct net_device *'     |     | | `-RecoveryExpr 0x14b0fd7c0 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x14b0fd788 <col:24> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     | `-CompoundStmt 0x14b0fdb80 <col:37, line:44:4>     |     |   |-CallExpr 0x14b0fd8a0 <line:40:5, col:29> '<dependent type>' contains-errors     |     |   | |-DeclRefExpr 0x14b0fd808 <col:5> 'int ()' Function 0x15b042008 'spin_lock' 'int ()'     |     |   | `-UnaryOperator 0x14b0fd888 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   |   `-RecoveryExpr 0x14b0fd860 <col:16, col:20> '<dependent type>' contains-errors lvalue     |     |   |     `-DeclRefExpr 0x14b0fd828 <col:16> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |   |-IfStmt 0x14b0fdaa0 <line:41:5, line:42:27>     |     |   | |-RecoveryExpr 0x14b0fd900 <line:41:9, col:13> '<dependent type>' contains-errors lvalue     |     |   | | `-DeclRefExpr 0x14b0fd8c8 <col:9> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     |   | `-CallExpr 0x14b0fda60 <line:42:6, col:27> 'int'     |     |   |   |-ImplicitCastExpr 0x14b0fda48 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     |   |   | `-DeclRefExpr 0x14b0fda08 <col:6> 'int ()' Function 0x14b0fd950 'register_prot_hook' 'int ()'     |     |   |   `-ImplicitCastExpr 0x14b0fda88 <col:25> 'struct sock *' <LValueToRValue>     |     |   |     `-DeclRefExpr 0x14b0fda28 <col:25> 'struct sock *' lvalue Var 0x14b0f7cf8 'sk' 'struct sock *'     |     |   `-CallExpr 0x14b0fdb58 <line:43:5, col:31> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x14b0fdac0 <col:5> 'int ()' Function 0x14b0fd558 'spin_unlock' 'int ()'     |     |     `-UnaryOperator 0x14b0fdb40 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |       `-RecoveryExpr 0x14b0fdb18 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x14b0fdae0 <col:18> 'struct packet_sock *' lvalue Var 0x15b041a00 'po' 'struct packet_sock *'     |     `-BreakStmt 0x14b0fdbc8 <line:45:4>     `-CallExpr 0x14b0fdd40 <line:48:2, col:18> 'int'       `-ImplicitCastExpr 0x14b0fdd28 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x14b0fdd08 <col:2> 'int ()' Function 0x14b0fdc50 'rcu_read_unlock' 'int ()' ","20994":"`-FunctionDecl 0x159061000  col:30 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x159061100 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1590610a8 <<invalid sloc>> Implicit 902 ","20805":"`-FunctionDecl 0x1309283a8  line:1:1 invalid entityValueProcessor 'int (int, const char *, const char *, const char **)'   |-ParmVarDecl 0x1309280f0 <col:22, col:33> col:33 invalid parser 'int'   |-ParmVarDecl 0x130928170 <line:2:22, col:34> col:34 used s 'const char *'   |-ParmVarDecl 0x1309281f0 <line:3:22, col:34> col:34 used end 'const char *'   |-ParmVarDecl 0x1309282a8 <line:4:22, col:35> col:35 used nextPtr 'const char **'   `-CompoundStmt 0x1309421f0 <line:5:1, line:34:1>     |-DeclStmt 0x130928528 <line:6:3, col:24>     | `-VarDecl 0x130928488 <col:3, col:23> col:15 used start 'const char *' cinit     |   `-ImplicitCastExpr 0x130928510 <col:23> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x1309284f0 <col:23> 'const char *' lvalue ParmVar 0x130928170 's' 'const char *'     |-DeclStmt 0x1309285f8 <line:7:3, col:23>     | `-VarDecl 0x130928558 <col:3, col:22> col:15 used next 'const char *' cinit     |   `-ImplicitCastExpr 0x1309285e0 <col:22> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x1309285c0 <col:22> 'const char *' lvalue ParmVar 0x130928170 's' 'const char *'     |-DeclStmt 0x1309286a8 <line:8:3, col:33>     | `-VarDecl 0x130928628 <col:3, col:19> col:19 invalid enc 'const int *'     |-DeclStmt 0x130928740 <line:9:3, col:10>     | `-VarDecl 0x1309286d8 <col:3, col:7> col:7 used tok 'int'     `-ForStmt 0x1309421b8 <line:11:3, line:33:3>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       `-CompoundStmt 0x130942190 <line:11:12, line:33:3>         |-BinaryOperator 0x1309419d8 <line:12:5, col:46> 'int' contains-errors '='         | |-DeclRefExpr 0x130928758 <col:5> 'int' lvalue Var 0x1309286d8 'tok' 'int'         | `-CallExpr 0x130941998 <col:11, col:46> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1309418e0 <col:11> 'int ()' Function 0x130941828 'XmlPrologTok' 'int ()'         |   |-RecoveryExpr 0x130941900 <col:24> '<dependent type>' contains-errors lvalue         |   |-DeclRefExpr 0x130941920 <col:29> 'const char *' lvalue Var 0x130928488 'start' 'const char *'         |   |-DeclRefExpr 0x130941940 <col:36> 'const char *' lvalue ParmVar 0x1309281f0 'end' 'const char *'         |   `-UnaryOperator 0x130941980 <col:41, col:42> 'const char **' prefix '&' cannot overflow         |     `-DeclRefExpr 0x130941960 <col:42> 'const char *' lvalue Var 0x130928558 'next' 'const char *'         |-IfStmt 0x1309420f8 <line:13:5, line:31:5>         | |-BinaryOperator 0x130941a50 <line:13:9, col:16> 'int' '<='         | | |-ImplicitCastExpr 0x130941a38 <col:9> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x1309419f8 <col:9> 'int' lvalue Var 0x1309286d8 'tok' 'int'         | | `-IntegerLiteral 0x130941a18 <col:16> 'int' 0         | `-CompoundStmt 0x1309420d0 <col:19, line:31:5>         |   |-IfStmt 0x130941cf0 <line:14:7, line:17:7>         |   | |-BinaryOperator 0x130941bc0 <line:14:11, col:37> 'int' contains-errors '&&'         |   | | |-UnaryOperator 0x130941b68 <col:11, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow         |   | | | `-ImplicitCastExpr 0x130941b50 <col:12> '<dependent type>' contains-errors <LValueToRValue>         |   | | |   `-RecoveryExpr 0x130941b30 <col:12> '<dependent type>' contains-errors lvalue         |   | | `-BinaryOperator 0x130941ba0 <col:30, col:37> 'int' contains-errors '!='         |   | |   |-DeclRefExpr 0x130941ab8 <col:30> 'int' lvalue Var 0x1309286d8 'tok' 'int'         |   | |   `-RecoveryExpr 0x130941b80 <col:37> '<dependent type>' contains-errors lvalue         |   | `-CompoundStmt 0x130941cd0 <col:54, line:17:7>         |   |   |-BinaryOperator 0x130941c68 <line:15:9, col:20> 'const char *' '='         |   |   | |-UnaryOperator 0x130941c18 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow         |   |   | | `-ImplicitCastExpr 0x130941c00 <col:10> 'const char **' <LValueToRValue>         |   |   | |   `-DeclRefExpr 0x130941be0 <col:10> 'const char **' lvalue ParmVar 0x1309282a8 'nextPtr' 'const char **'         |   |   | `-ImplicitCastExpr 0x130941c50 <col:20> 'const char *' <LValueToRValue>         |   |   |   `-DeclRefExpr 0x130941c30 <col:20> 'const char *' lvalue ParmVar 0x130928170 's' 'const char *'         |   |   `-ReturnStmt 0x130941cc0 <line:16:9, col:16>         |   |     `-RecoveryExpr 0x130941ca0 <col:16> '<dependent type>' contains-errors lvalue         |   |-SwitchStmt 0x130941d48 <line:18:7, line:28:7>         |   | |-ImplicitCastExpr 0x130941d30 <line:18:15> 'int' <LValueToRValue>         |   | | `-DeclRefExpr 0x130941d10 <col:15> 'int' lvalue Var 0x1309286d8 'tok' 'int'         |   | `-CompoundStmt 0x130941ed0 <col:20, line:28:7>         |   |   |-ReturnStmt 0x130941dc0 <line:20:9, col:16>         |   |   | `-RecoveryExpr 0x130941da0 <col:16> '<dependent type>' contains-errors lvalue         |   |   |-ReturnStmt 0x130941e20 <line:22:9, col:16>         |   |   | `-RecoveryExpr 0x130941e00 <col:16> '<dependent type>' contains-errors lvalue         |   |   |-ReturnStmt 0x130941e80 <line:24:9, col:16>         |   |   | `-RecoveryExpr 0x130941e60 <col:16> '<dependent type>' contains-errors lvalue         |   |   `-DefaultStmt 0x130941eb0 <line:26:7, line:27:9>         |   |     `-BreakStmt 0x130941ea8 <col:9>         |   `-ReturnStmt 0x1309420c0 <line:30:7, col:50>         |     `-CallExpr 0x130942080 <col:14, col:50> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x130941fe0 <col:14> 'int ()' Function 0x130941f28 'storeEntityValue' 'int ()'         |       |-RecoveryExpr 0x130942000 <col:31> '<dependent type>' contains-errors lvalue         |       |-RecoveryExpr 0x130942020 <col:39> '<dependent type>' contains-errors lvalue         |       |-DeclRefExpr 0x130942040 <col:44> 'const char *' lvalue ParmVar 0x130928170 's' 'const char *'         |       `-DeclRefExpr 0x130942060 <col:47> 'const char *' lvalue ParmVar 0x1309281f0 'end' 'const char *'         `-BinaryOperator 0x130942170 <line:32:5, col:13> 'const char *' '='           |-DeclRefExpr 0x130942118 <col:5> 'const char *' lvalue Var 0x130928488 'start' 'const char *'           `-ImplicitCastExpr 0x130942158 <col:13> 'const char *' <LValueToRValue>             `-DeclRefExpr 0x130942138 <col:13> 'const char *' lvalue Var 0x130928558 'next' 'const char *' ","20597":"`-FunctionDecl 0x13f827e88  line:1:12 invalid tftp_send_oack 'int (struct tftp_session *, const char **, int *, int, struct tftp_t *)' static   |-ParmVarDecl 0x13f80e248 <col:27, col:48> col:48 used spt 'struct tftp_session *'   |-ParmVarDecl 0x13f80e370 <col:53, col:70> col:65 used keys 'const char **'   |-ParmVarDecl 0x13f827ac0 <line:2:27, col:43> col:36 invalid values 'int *'   |-ParmVarDecl 0x13f827b40 <col:46, col:50> col:50 used nb 'int'   |-ParmVarDecl 0x13f827d18 <col:54, col:69> col:69 used recv_tp 'struct tftp_t *'   `-CompoundStmt 0x13f829948 <line:3:1, line:25:1>     |-DeclStmt 0x13f828148 <line:4:5, col:19>     | |-RecordDecl 0x13f827f58 <col:5, col:12> col:12 struct mbuf     | `-VarDecl 0x13f8280c8 <col:5, col:18> col:18 used m 'struct mbuf *'     |-DeclStmt 0x13f828250 <line:5:5, col:22>     | `-VarDecl 0x13f8281e8 <col:5, col:20> col:20 used tp 'struct tftp_t *'     |-DeclStmt 0x13f8283a0 <line:6:5, col:17>     | |-VarDecl 0x13f828280 <col:5, col:9> col:9 used i 'int'     | `-VarDecl 0x13f828300 <col:5, col:16> col:12 used n 'int' cinit     |   `-IntegerLiteral 0x13f828368 <col:16> 'int' 0     |-BinaryOperator 0x13f8285d8 <line:8:5, col:25> 'struct mbuf *' contains-errors '='     | |-DeclRefExpr 0x13f8283b8 <col:5> 'struct mbuf *' lvalue Var 0x13f8280c8 'm' 'struct mbuf *'     | `-CallExpr 0x13f8285b0 <col:9, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f828530 <col:9> 'int ()' Function 0x13f828478 'm_get' 'int ()'     |   `-RecoveryExpr 0x13f828588 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f828550 <col:15> 'struct tftp_session *' lvalue ParmVar 0x13f80e248 'spt' 'struct tftp_session *'     |-IfStmt 0x13f828690 <line:10:5, line:11:17>     | |-UnaryOperator 0x13f828630 <line:10:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f828618 <col:10> 'struct mbuf *' <LValueToRValue>     | |   `-DeclRefExpr 0x13f8285f8 <col:10> 'struct mbuf *' lvalue Var 0x13f8280c8 'm' 'struct mbuf *'     | `-ReturnStmt 0x13f828680 <line:11:9, col:17>     |   `-UnaryOperator 0x13f828668 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x13f828648 <col:17> 'int' 1     |-BinaryOperator 0x13f8288d0 <line:13:5, col:36> 'struct tftp_t *' '='     | |-DeclRefExpr 0x13f8286b0 <col:5> 'struct tftp_t *' lvalue Var 0x13f8281e8 'tp' 'struct tftp_t *'     | `-ImplicitCastExpr 0x13f8288b8 <col:10, col:36> 'struct tftp_t *' <IntegralToPointer>     |   `-CallExpr 0x13f828858 <col:10, col:36> 'int'     |     |-ImplicitCastExpr 0x13f828840 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13f8287b0 <col:10> 'int ()' Function 0x13f8286f8 'tftp_prep_mbuf_data' 'int ()'     |     |-ImplicitCastExpr 0x13f828888 <col:30> 'struct tftp_session *' <LValueToRValue>     |     | `-DeclRefExpr 0x13f8287d0 <col:30> 'struct tftp_session *' lvalue ParmVar 0x13f80e248 'spt' 'struct tftp_session *'     |     `-ImplicitCastExpr 0x13f8288a0 <col:35> 'struct mbuf *' <LValueToRValue>     |       `-DeclRefExpr 0x13f8287f0 <col:35> 'struct mbuf *' lvalue Var 0x13f8280c8 'm' 'struct mbuf *'     |-BinaryOperator 0x13f828b80 <line:15:5, col:32> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f828928 <col:5, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f8288f0 <col:5> 'struct tftp_t *' lvalue Var 0x13f8281e8 'tp' 'struct tftp_t *'     | `-CallExpr 0x13f828b58 <col:17, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f828ab8 <col:17> 'int ()' Function 0x13f828a00 'htons' 'int ()'     |   `-RecoveryExpr 0x13f828b38 <col:23> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13f829550 <line:16:5, line:19:5>     | |-BinaryOperator 0x13f828be0 <line:16:10, col:14> 'int' '='     | | |-DeclRefExpr 0x13f828ba0 <col:10> 'int' lvalue Var 0x13f828280 'i' 'int'     | | `-IntegerLiteral 0x13f828bc0 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13f828c70 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x13f828c40 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13f828c00 <col:17> 'int' lvalue Var 0x13f828280 'i' 'int'     | | `-ImplicitCastExpr 0x13f828c58 <col:21> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13f828c20 <col:21> 'int' lvalue ParmVar 0x13f827b40 'nb' 'int'     | |-UnaryOperator 0x13f828cb0 <col:25, col:26> 'int' postfix '++'     | | `-DeclRefExpr 0x13f828c90 <col:25> 'int' lvalue Var 0x13f828280 'i' 'int'     | `-CompoundStmt 0x13f829530 <col:30, line:19:5>     |   |-CompoundAssignOperator 0x13f829160 <line:17:9, col:83> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x13f828cc8 <col:9> 'int' lvalue Var 0x13f828300 'n' 'int'     |   | `-CallExpr 0x13f829120 <col:14, col:83> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13f828dc8 <col:14> 'int ()' Function 0x13f828d10 'slirp_fmt0' 'int ()'     |   |   |-BinaryOperator 0x13f828eb0 <col:25, col:40> '<dependent type>' contains-errors '+'     |   |   | |-CXXDependentScopeMemberExpr 0x13f828e48 <col:25, col:31> '<dependent type>' contains-errors lvalue .tp_buf     |   |   | | `-RecoveryExpr 0x13f828e20 <col:25, col:29> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x13f828de8 <col:25> 'struct tftp_t *' lvalue Var 0x13f8281e8 'tp' 'struct tftp_t *'     |   |   | `-DeclRefExpr 0x13f828e90 <col:40> 'int' lvalue Var 0x13f828300 'n' 'int'     |   |   |-BinaryOperator 0x13f829008 <col:43, col:66> 'unsigned long' contains-errors '-'     |   |   | |-UnaryExprOrTypeTraitExpr 0x13f828f98 <col:43, col:62> 'unsigned long' contains-errors sizeof     |   |   | | `-ParenExpr 0x13f828f78 <col:49, col:62> '<dependent type>' contains-errors lvalue     |   |   | |   `-CXXDependentScopeMemberExpr 0x13f828f30 <col:50, col:56> '<dependent type>' contains-errors lvalue .tp_buf     |   |   | |     `-RecoveryExpr 0x13f828f08 <col:50, col:54> '<dependent type>' contains-errors lvalue     |   |   | |       `-DeclRefExpr 0x13f828ed0 <col:50> 'struct tftp_t *' lvalue Var 0x13f8281e8 'tp' 'struct tftp_t *' non_odr_use_unevaluated     |   |   | `-ImplicitCastExpr 0x13f828ff0 <col:66> 'unsigned long' <IntegralCast>     |   |   |   `-ImplicitCastExpr 0x13f828fd8 <col:66> 'int' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x13f828fb8 <col:66> 'int' lvalue Var 0x13f828300 'n' 'int'     |   |   |-StringLiteral 0x13f829070 <col:69> 'char[4]' lvalue \"STR\"     |   |   `-ArraySubscriptExpr 0x13f829100 <col:76, col:82> 'const char *' lvalue     |   |     |-ImplicitCastExpr 0x13f8290d0 <col:76> 'const char **' <LValueToRValue>     |   |     | `-DeclRefExpr 0x13f829090 <col:76> 'const char **' lvalue ParmVar 0x13f80e370 'keys' 'const char **'     |   |     `-ImplicitCastExpr 0x13f8290e8 <col:81> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x13f8290b0 <col:81> 'int' lvalue Var 0x13f828280 'i' 'int'     |   `-CompoundAssignOperator 0x13f829500 <line:18:9, col:85> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-DeclRefExpr 0x13f829190 <col:9> 'int' lvalue Var 0x13f828300 'n' 'int'     |     `-CallExpr 0x13f8294c0 <col:14, col:85> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13f8291b0 <col:14> 'int ()' Function 0x13f828d10 'slirp_fmt0' 'int ()'     |       |-BinaryOperator 0x13f829298 <col:25, col:40> '<dependent type>' contains-errors '+'     |       | |-CXXDependentScopeMemberExpr 0x13f829230 <col:25, col:31> '<dependent type>' contains-errors lvalue .tp_buf     |       | | `-RecoveryExpr 0x13f829208 <col:25, col:29> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x13f8291d0 <col:25> 'struct tftp_t *' lvalue Var 0x13f8281e8 'tp' 'struct tftp_t *'     |       | `-DeclRefExpr 0x13f829278 <col:40> 'int' lvalue Var 0x13f828300 'n' 'int'     |       |-BinaryOperator 0x13f8293f0 <col:43, col:66> 'unsigned long' contains-errors '-'     |       | |-UnaryExprOrTypeTraitExpr 0x13f829380 <col:43, col:62> 'unsigned long' contains-errors sizeof     |       | | `-ParenExpr 0x13f829360 <col:49, col:62> '<dependent type>' contains-errors lvalue     |       | |   `-CXXDependentScopeMemberExpr 0x13f829318 <col:50, col:56> '<dependent type>' contains-errors lvalue .tp_buf     |       | |     `-RecoveryExpr 0x13f8292f0 <col:50, col:54> '<dependent type>' contains-errors lvalue     |       | |       `-DeclRefExpr 0x13f8292b8 <col:50> 'struct tftp_t *' lvalue Var 0x13f8281e8 'tp' 'struct tftp_t *' non_odr_use_unevaluated     |       | `-ImplicitCastExpr 0x13f8293d8 <col:66> 'unsigned long' <IntegralCast>     |       |   `-ImplicitCastExpr 0x13f8293c0 <col:66> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x13f8293a0 <col:66> 'int' lvalue Var 0x13f828300 'n' 'int'     |       |-StringLiteral 0x13f829410 <col:69> 'char[4]' lvalue \"STR\"     |       `-ArraySubscriptExpr 0x13f8294a0 <col:76, col:84> '<dependent type>' contains-errors lvalue     |         |-ImplicitCastExpr 0x13f829470 <col:76> '<dependent type>' contains-errors <LValueToRValue>     |         | `-RecoveryExpr 0x13f829430 <col:76> '<dependent type>' contains-errors lvalue     |         `-ImplicitCastExpr 0x13f829488 <col:83> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x13f829450 <col:83> 'int' lvalue Var 0x13f828280 'i' 'int'     |-CallExpr 0x13f829898 <line:22:5, col:36> 'int'     | |-ImplicitCastExpr 0x13f829880 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13f829800 <col:5> 'int ()' Function 0x13f829748 'tftp_udp_output' 'int ()'     | |-ImplicitCastExpr 0x13f8298d0 <col:21> 'struct tftp_session *' <LValueToRValue>     | | `-DeclRefExpr 0x13f829820 <col:21> 'struct tftp_session *' lvalue ParmVar 0x13f80e248 'spt' 'struct tftp_session *'     | |-ImplicitCastExpr 0x13f8298e8 <col:26> 'struct mbuf *' <LValueToRValue>     | | `-DeclRefExpr 0x13f829840 <col:26> 'struct mbuf *' lvalue Var 0x13f8280c8 'm' 'struct mbuf *'     | `-ImplicitCastExpr 0x13f829900 <col:29> 'struct tftp_t *' <LValueToRValue>     |   `-DeclRefExpr 0x13f829860 <col:29> 'struct tftp_t *' lvalue ParmVar 0x13f827d18 'recv_tp' 'struct tftp_t *'     `-ReturnStmt 0x13f829938 <line:24:5, col:12>       `-IntegerLiteral 0x13f829918 <col:12> 'int' 0 ","20262":"`-FunctionDecl 0x145808328  line:1:12 dev_ifconf 'int (struct net *, struct compat_ifconf)' static   |-ParmVarDecl 0x14500e248 <col:23, col:35> col:35 used net 'struct net *'   |-ParmVarDecl 0x145808200 <col:40, col:61> col:61 invalid __user 'struct compat_ifconf'   `-CompoundStmt 0x14580ac80 <line:2:1, line:66:1>     |-DeclStmt 0x1458084e8 <line:3:2, col:28>     | `-VarDecl 0x145808480 <col:2, col:23> col:23 referenced invalid ifc32 'struct compat_ifconf'     |-DeclStmt 0x145808678 <line:4:2, col:19>     | |-RecordDecl 0x145808500 <col:2, col:9> col:9 struct ifconf     | `-VarDecl 0x1458085f8 <col:2, col:16> col:16 referenced invalid ifc 'struct ifconf'     |-DeclStmt 0x145808748 <line:5:2, col:23>     | `-VarDecl 0x1458086e0 <col:2, col:16> col:16 invalid __user 'struct ifconf'     |-DeclStmt 0x1458088d8 <line:6:2, col:29>     | |-RecordDecl 0x145808760 <col:2, col:9> col:9 struct compat_ifreq     | `-VarDecl 0x145808858 <col:2, col:22> col:22 invalid __user 'struct compat_ifreq'     |-DeclStmt 0x145808a68 <line:7:2, col:22>     | |-RecordDecl 0x1458088f0 <col:2, col:9> col:9 struct ifreq     | `-VarDecl 0x1458089e8 <col:2, col:15> col:15 invalid __user 'struct ifreq'     |-DeclStmt 0x145808b98 <line:8:2, col:19>     | |-VarDecl 0x145808a98 <col:2, col:15> col:15 used i 'unsigned int'     | `-VarDecl 0x145808b18 <col:2, col:18> col:18 used j 'unsigned int'     |-DeclStmt 0x145808c30 <line:9:2, col:9>     | `-VarDecl 0x145808bc8 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x145808ee8 <line:11:2, line:12:11>     | |-RecoveryExpr 0x145808e20 <line:11:6, col:65> '_Bool' contains-errors     | `-ReturnStmt 0x145808ed8 <line:12:3, col:11>     |   `-UnaryOperator 0x145808ec0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x145808ea8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x145808e88 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14680b338 <line:14:2, line:32:2> has_else     | |-BinaryOperator 0x145808f90 <line:14:6, col:22> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x145808f28 <col:6, col:12> '<dependent type>' contains-errors lvalue .ifcbuf     | | | `-RecoveryExpr 0x145808f08 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x145808f70 <col:22> 'int' 0     | |-CompoundStmt 0x14680abc8 <col:25, line:19:2>     | | |-BinaryOperator 0x145809060 <line:15:3, col:19> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x145808ff8 <col:3, col:9> '<dependent type>' contains-errors lvalue .ifc_len     | | | | `-RecoveryExpr 0x145808fd0 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x145808fb0 <col:3> 'struct compat_ifconf' lvalue Var 0x145808480 'ifc32' 'struct compat_ifconf'     | | | `-IntegerLiteral 0x145809040 <col:19> 'int' 0     | | |-BinaryOperator 0x145809130 <line:16:3, col:17> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x1458090c8 <col:3, col:7> '<dependent type>' contains-errors lvalue .ifc_len     | | | | `-RecoveryExpr 0x1458090a0 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x145809080 <col:3> 'struct ifconf' lvalue Var 0x1458085f8 'ifc' 'struct ifconf'     | | | `-IntegerLiteral 0x145809110 <col:17> 'int' 0     | | `-BinaryOperator 0x14680aa40 <line:17:3, col:17> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x145809198 <col:3, col:7> '<dependent type>' contains-errors lvalue .ifc_req     | |   | `-RecoveryExpr 0x145809170 <col:3> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x145809150 <col:3> 'struct ifconf' lvalue Var 0x1458085f8 'ifc' 'struct ifconf'     | |   `-RecoveryExpr 0x14680aa20 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14680b320 <line:19:9, line:32:2>     |   `-ForStmt 0x14680b2e8 <line:26:3, line:31:3>     |     |-BinaryOperator 0x14680b090 <line:26:8, col:12> 'unsigned int' '='     |     | |-DeclRefExpr 0x14680b038 <col:8> 'unsigned int' lvalue Var 0x145808a98 'i' 'unsigned int'     |     | `-ImplicitCastExpr 0x14680b078 <col:12> 'unsigned int' <IntegralCast>     |     |   `-IntegerLiteral 0x14680b058 <col:12> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x14680b138 <col:15, col:25> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x14680b0b0 <col:15> 'unsigned int' lvalue Var 0x145808a98 'i' 'unsigned int'     |     | `-CXXDependentScopeMemberExpr 0x14680b0f0 <col:19, col:25> '<dependent type>' contains-errors lvalue .ifc_len     |     |   `-RecoveryExpr 0x14680b0d0 <col:19> '<dependent type>' contains-errors lvalue     |     |-<<<NULL>>>     |     `-CompoundStmt 0x14680b2d8 <col:68, line:31:3>     |-IfStmt 0x14680b6a0 <line:37:2, line:38:10>     | |-ImplicitCastExpr 0x14680b640 <line:37:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14680b620 <col:6> 'int' lvalue Var 0x145808bc8 'err' 'int'     | `-ReturnStmt 0x14680b690 <line:38:3, col:10>     |   `-ImplicitCastExpr 0x14680b678 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14680b658 <col:10> 'int' lvalue Var 0x145808bc8 'err' 'int'     |-IfStmt 0x14580ab88 <line:54:2, line:61:2> has_else     | |-BinaryOperator 0x14580a868 <line:54:6, col:22> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14580a800 <col:6, col:12> '<dependent type>' contains-errors lvalue .ifcbuf     | | | `-RecoveryExpr 0x14580a7e0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14580a848 <col:22> 'int' 0     | |-CompoundStmt 0x14580aa80 <col:25, line:59:2>     | | |-BinaryOperator 0x14580a910 <line:56:3, col:11> 'unsigned int' contains-errors '='     | | | |-DeclRefExpr 0x14580a888 <col:3> 'unsigned int' lvalue Var 0x145808a98 'i' 'unsigned int'     | | | `-CXXDependentScopeMemberExpr 0x14580a8c8 <col:7, col:11> '<dependent type>' contains-errors lvalue .ifc_len     | | |   `-RecoveryExpr 0x14580a8a8 <col:7> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14580aa60 <line:58:3, col:19> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x14580a9f8 <col:3, col:9> '<dependent type>' contains-errors lvalue .ifc_len     | |   | `-RecoveryExpr 0x14580a9d0 <col:3> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14580a9b0 <col:3> 'struct compat_ifconf' lvalue Var 0x145808480 'ifc32' 'struct compat_ifconf'     | |   `-DeclRefExpr 0x14580aa40 <col:19> 'unsigned int' lvalue Var 0x145808a98 'i' 'unsigned int'     | `-CompoundStmt 0x14580ab70 <line:59:9, line:61:2>     |   `-BinaryOperator 0x14580ab50 <line:60:3, col:19> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14580aae8 <col:3, col:9> '<dependent type>' contains-errors lvalue .ifc_len     |     | `-RecoveryExpr 0x14580aac0 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14580aaa0 <col:3> 'struct compat_ifconf' lvalue Var 0x145808480 'ifc32' 'struct compat_ifconf'     |     `-DeclRefExpr 0x14580ab30 <col:19> 'unsigned int' lvalue Var 0x145808a98 'i' 'unsigned int'     `-ReturnStmt 0x14580ac70 <line:65:2, col:9>       `-IntegerLiteral 0x14580ac50 <col:9> 'int' 0 ","20772":"`-FunctionDecl 0x131928288  line:1:17 invalid r_bin_ne_new_buf 'int *(int *, int)'   |-ParmVarDecl 0x131928128 <col:34, col:43> col:43 invalid buf 'int *'   |-ParmVarDecl 0x1319281a8 <col:48, col:53> col:53 invalid verbose 'int'   `-CompoundStmt 0x131941830 <col:62, line:8:1>     |-IfStmt 0x131928608 <line:3:2, line:5:2>     | |-UnaryOperator 0x131928590 <line:3:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x131928578 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x131928558 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1319285f0 <col:12, line:5:2>     |   `-ReturnStmt 0x1319285e0 <line:4:3, col:10>     |     `-RecoveryExpr 0x1319285c0 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1319287b0 <line:6:2, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131928708 <col:2> 'int ()' Function 0x131928650 '__init' 'int ()'     | |-RecoveryExpr 0x131928728 <col:9> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x131928790 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x131941820 <line:7:2, col:9>       `-RecoveryExpr 0x131941800 <col:9> '<dependent type>' contains-errors lvalue ","20662":"`-FunctionDecl 0x12a8267e8  line:1:12 dummy_ipv6_recv_error 'int (struct sock *, struct msghdr *, int)' static   |-ParmVarDecl 0x12a80e248 <col:34, col:47> col:47 sk 'struct sock *'   |-ParmVarDecl 0x12a826628 <col:51, col:66> col:66 msg 'struct msghdr *'   |-ParmVarDecl 0x12a8266a8 <col:71, col:75> col:75 len 'int'   `-CompoundStmt 0x12a8269b0 <line:2:1, line:4:1>     `-ReturnStmt 0x12a8269a0 <line:3:2, col:10>       `-UnaryOperator 0x12a826988 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x12a826970 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x12a826950 <col:10> '<dependent type>' contains-errors lvalue ","20522":"`-FunctionDecl 0x14380dd18  col:9 pos 'int ()'   `-CompoundStmt 0x14380dee0 <col:15, col:37>     `-ReturnStmt 0x14380ded0 <col:17, col:30>       `-BinaryOperator 0x14380deb0 <col:24, col:30> '<dependent type>' contains-errors '-'         |-RecoveryExpr 0x14380de70 <col:24> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14380de90 <col:30> '<dependent type>' contains-errors lvalue ","20941":"`-FunctionDecl 0x136922768  line:1:1 invalid file_tryelf 'int (struct magic_set *, int, const unsigned char *, int)'   |-ParmVarDecl 0x13700e248 <col:13, col:31> col:31 used ms 'struct magic_set *'   |-ParmVarDecl 0x13700e2c8 <col:35, col:39> col:39 used fd 'int'   |-ParmVarDecl 0x13700e378 <col:43, col:64> col:64 used buf 'const unsigned char *'   |-ParmVarDecl 0x136922618 <line:2:5, col:12> col:12 invalid nbytes 'int'   `-CompoundStmt 0x137027de0 <line:3:1, line:59:1>     |-DeclStmt 0x136922a88 <line:4:2, line:7:5>     | |-RecordDecl 0x136922830 <line:4:2, line:7:2> line:4:2 invalid union definition     | | |-FieldDecl 0x1369228e8 <line:5:3, col:11> col:11 invalid l 'int'     | | `-FieldDecl 0x136922960 <line:6:3, col:8> col:8 invalid c 'char'     | `-VarDecl 0x136922a08 <line:4:2, line:7:4> col:4 u 'union (unnamed union at dataset_diviso_filec\/func1402_vuln.c:4:2)':'union (unnamed at dataset_diviso_filec\/func1402_vuln.c:4:2)'     |-DeclStmt 0x136922b20 <line:8:2, col:11>     | `-VarDecl 0x136922ab8 <col:2, col:6> col:6 used clazz 'int'     |-DeclStmt 0x136922bb8 <line:9:2, col:10>     | `-VarDecl 0x136922b50 <col:2, col:6> col:6 swap 'int'     |-DeclStmt 0x136922d48 <line:10:2, col:16>     | |-RecordDecl 0x136922bd0 <col:2, col:9> col:9 struct stat     | `-VarDecl 0x136922cc8 <col:2, col:14> col:14 invalid st 'struct stat'     |-DeclStmt 0x136922e00 <line:12:2, col:15>     | `-VarDecl 0x136922d78 <col:2, col:14> col:6 flags 'int' cinit     |   `-IntegerLiteral 0x136922de0 <col:14> 'int' 0     |-IfStmt 0x136922f18 <line:17:2, line:18:10>     | |-RecoveryExpr 0x136922ec8 <line:17:6, col:41> '_Bool' contains-errors     | `-ReturnStmt 0x136922f08 <line:18:3, col:10>     |   `-IntegerLiteral 0x136922ee8 <col:10> 'int' 0     |-IfStmt 0x1369230e8 <line:20:2, line:23:10>     | |-RecoveryExpr 0x136923098 <line:20:6, line:22:52> '_Bool' contains-errors     | `-ReturnStmt 0x1369230d8 <line:23:3, col:10>     |   `-IntegerLiteral 0x1369230b8 <col:10> 'int' 0     |-IfStmt 0x1369234e0 <line:26:2, line:27:42>     | |-RecoveryExpr 0x1369232c0 <line:26:5, col:69> '_Bool' contains-errors     | `-BinaryOperator 0x1369234c0 <line:27:3, col:42> 'int' contains-errors '='     |   |-DeclRefExpr 0x1369232e0 <col:3> 'int' lvalue ParmVar 0x13700e2c8 'fd' 'int'     |   `-CallExpr 0x136923480 <col:8, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1369233e0 <col:8> 'int ()' Function 0x136923328 'file_pipe2file' 'int ()'     |     |-DeclRefExpr 0x136923400 <col:23> 'struct magic_set *' lvalue ParmVar 0x13700e248 'ms' 'struct magic_set *'     |     |-DeclRefExpr 0x136923420 <col:27> 'int' lvalue ParmVar 0x13700e2c8 'fd' 'int'     |     |-DeclRefExpr 0x136923440 <col:31> 'const unsigned char *' lvalue ParmVar 0x13700e378 'buf' 'const unsigned char *'     |     `-RecoveryExpr 0x136923460 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1370276f0 <line:29:2, line:32:2>     | |-BinaryOperator 0x1370274c0 <line:29:6, col:25> 'int' contains-errors '=='     | | |-CallExpr 0x137027458 <col:6, col:19> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1369235e0 <col:6> 'int ()' Function 0x136923528 'fstat' 'int ()'     | | | |-DeclRefExpr 0x137027400 <col:12> 'int' lvalue ParmVar 0x13700e2c8 'fd' 'int'     | | | `-UnaryOperator 0x137027440 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x137027420 <col:17> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1370274a8 <col:24, col:25> 'int' prefix '-'     | |   `-IntegerLiteral 0x137027488 <col:25> 'int' 1     | `-CompoundStmt 0x1370276d0 <col:28, line:32:2>     |   |-CallExpr 0x137027648 <line:30:5, col:20> 'int'     |   | |-ImplicitCastExpr 0x137027630 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1370275c0 <col:5> 'int ()' Function 0x137027508 'file_badread' 'int ()'     |   | `-ImplicitCastExpr 0x137027670 <col:18> 'struct magic_set *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1370275e0 <col:18> 'struct magic_set *' lvalue ParmVar 0x13700e248 'ms' 'struct magic_set *'     |   `-ReturnStmt 0x1370276c0 <line:31:3, col:11>     |     `-UnaryOperator 0x1370276a8 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x137027688 <col:11> 'int' 1     |-SwitchStmt 0x137027a48 <line:40:2, line:57:2>     | |-ImplicitCastExpr 0x137027a30 <line:40:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x137027a10 <col:10> 'int' lvalue Var 0x136922ab8 'clazz' 'int'     | `-CompoundStmt 0x137027d90 <col:17, line:57:2>     |   |-DefaultStmt 0x137027d68 <line:53:2, line:55:15>     |   | `-IfStmt 0x137027d48 <line:54:6, line:55:15>     |   |   |-BinaryOperator 0x137027ce0 <line:54:10, col:44> 'int' '=='     |   |   | |-CallExpr 0x137027c28 <col:10, col:38> 'int'     |   |   | | |-ImplicitCastExpr 0x137027c10 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   | | | `-DeclRefExpr 0x137027b50 <col:10> 'int ()' Function 0x137027a98 'file_printf' 'int ()'     |   |   | | |-ImplicitCastExpr 0x137027c60 <col:22> 'struct magic_set *' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x137027b70 <col:22> 'struct magic_set *' lvalue ParmVar 0x13700e248 'ms' 'struct magic_set *'     |   |   | | |-ImplicitCastExpr 0x137027c78 <col:26> 'char *' <ArrayToPointerDecay>     |   |   | | | `-StringLiteral 0x137027bd0 <col:26> 'char[4]' lvalue \"STR\"     |   |   | | `-ImplicitCastExpr 0x137027c90 <col:33> 'int' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x137027bf0 <col:33> 'int' lvalue Var 0x136922ab8 'clazz' 'int'     |   |   | `-UnaryOperator 0x137027cc8 <col:43, col:44> 'int' prefix '-'     |   |   |   `-IntegerLiteral 0x137027ca8 <col:44> 'int' 1     |   |   `-ReturnStmt 0x137027d38 <line:55:7, col:15>     |   |     `-UnaryOperator 0x137027d20 <col:14, col:15> 'int' prefix '-'     |   |       `-IntegerLiteral 0x137027d00 <col:15> 'int' 1     |   `-BreakStmt 0x137027d88 <line:56:6>     `-ReturnStmt 0x137027dd0 <line:58:2, col:9>       `-IntegerLiteral 0x137027db0 <col:9> 'int' 0 ","21059":"`-FunctionDecl 0x12380dd38  col:21 invalid const_ptr_my_decimal 'const int *()' ","20417":"`-FunctionDecl 0x1491281a8  line:1:1 PHP_MINFO_FUNCTION 'int (int)'   |-ParmVarDecl 0x1491280d8 <col:20> col:20 exif 'int'   `-CompoundStmt 0x149141130 <line:2:1, line:18:1>     |-CallExpr 0x149128438 <line:3:2, col:29> 'int'     | `-ImplicitCastExpr 0x149128420 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1491283d0 <col:2> 'int ()' Function 0x149128318 'php_info_print_table_start' 'int ()'     |-CallExpr 0x1491285f8 <line:4:2, col:35> 'int'     | |-ImplicitCastExpr 0x1491285e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149128538 <col:2> 'int ()' Function 0x149128480 'php_info_print_table_row' 'int ()'     | |-IntegerLiteral 0x149128558 <col:27> 'int' 2     | `-ImplicitCastExpr 0x149128628 <col:30> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1491285c0 <col:30> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1491286b8 <line:5:2, col:35> 'int'     | |-ImplicitCastExpr 0x1491286a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149128640 <col:2> 'int ()' Function 0x149128480 'php_info_print_table_row' 'int ()'     | |-IntegerLiteral 0x149128660 <col:27> 'int' 2     | `-ImplicitCastExpr 0x1491286e8 <col:30> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x149128680 <col:30> 'char[4]' lvalue \"STR\"     |-CallExpr 0x149128778 <line:6:2, col:35> 'int'     | |-ImplicitCastExpr 0x149128760 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149128700 <col:2> 'int ()' Function 0x149128480 'php_info_print_table_row' 'int ()'     | |-IntegerLiteral 0x149128720 <col:27> 'int' 2     | `-ImplicitCastExpr 0x1491287a8 <col:30> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x149128740 <col:30> 'char[4]' lvalue \"STR\"     |-IfStmt 0x149140dd0 <line:8:2, line:12:2> has_else     | |-BinaryOperator 0x149140c00 <line:8:6, col:52> '<dependent type>' contains-errors '-'     | | |-CallExpr 0x149140bd0 <col:6, col:50> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x149140ab8 <col:6> 'int ()' Function 0x149140a00 'zend_hash_str_exists' 'int ()'     | | | |-UnaryOperator 0x149140bb8 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x149140b98 <col:28> '<dependent type>' contains-errors lvalue     | | | `-StringLiteral 0x149140b08 <col:45> 'char[4]' lvalue \"STR\"     | | `-IntegerLiteral 0x149140b58 <col:52> 'int' 1     | |-CompoundStmt 0x149140ce0 <col:56, line:10:2>     | | `-CallExpr 0x149140c98 <line:9:3, col:36> 'int'     | |   |-ImplicitCastExpr 0x149140c80 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x149140c20 <col:3> 'int ()' Function 0x149128480 'php_info_print_table_row' 'int ()'     | |   |-IntegerLiteral 0x149140c40 <col:28> 'int' 2     | |   `-ImplicitCastExpr 0x149140cc8 <col:31> 'char *' <ArrayToPointerDecay>     | |     `-StringLiteral 0x149140c60 <col:31> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x149140db8 <line:10:9, line:12:2>     |   `-CallExpr 0x149140d70 <line:11:3, col:36> 'int'     |     |-ImplicitCastExpr 0x149140d58 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x149140cf8 <col:3> 'int ()' Function 0x149128480 'php_info_print_table_row' 'int ()'     |     |-IntegerLiteral 0x149140d18 <col:28> 'int' 2     |     `-ImplicitCastExpr 0x149140da0 <col:31> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x149140d38 <col:31> 'char[4]' lvalue \"STR\"     |-CallExpr 0x149140e78 <line:14:2, col:35> 'int'     | |-ImplicitCastExpr 0x149140e60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x149140e00 <col:2> 'int ()' Function 0x149128480 'php_info_print_table_row' 'int ()'     | |-IntegerLiteral 0x149140e20 <col:27> 'int' 2     | `-ImplicitCastExpr 0x149140ea8 <col:30> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x149140e40 <col:30> 'char[4]' lvalue \"STR\"     |-CallExpr 0x149140fd8 <line:15:2, col:27> 'int'     | `-ImplicitCastExpr 0x149140fc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x149140fa0 <col:2> 'int ()' Function 0x149140ee8 'php_info_print_table_end' 'int ()'     `-CallExpr 0x149141110 <line:17:2, col:22> 'int'       `-ImplicitCastExpr 0x1491410f8 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x1491410d8 <col:2> 'int ()' Function 0x149141020 'DISPLAY_INI_ENTRIES' 'int ()' ","20355":"`-FunctionDecl 0x157140a88  line:1:12 bnep_sock_ioctl 'int (struct socket *, unsigned int, unsigned long)' static   |-ParmVarDecl 0x157128648 <col:28, col:43> col:43 sock 'struct socket *'   |-ParmVarDecl 0x1571286c8 <col:49, col:62> col:62 used cmd 'unsigned int'   |-ParmVarDecl 0x157128748 <col:67, col:81> col:81 used arg 'unsigned long'   `-CompoundStmt 0x157144098 <line:2:1, line:76:1>     |-DeclStmt 0x157140d08 <line:3:2, col:29>     | |-RecordDecl 0x157140b90 <col:2, col:9> col:9 struct bnep_connlist_req     | `-VarDecl 0x157140c88 <col:2, col:27> col:27 invalid cl 'struct bnep_connlist_req'     |-DeclStmt 0x157140e98 <line:4:2, col:29>     | |-RecordDecl 0x157140d20 <col:2, col:9> col:9 struct bnep_connadd_req     | `-VarDecl 0x157140e18 <col:2, col:27> col:27 invalid ca 'struct bnep_connadd_req'     |-DeclStmt 0x157141028 <line:5:2, col:29>     | |-RecordDecl 0x157140eb0 <col:2, col:9> col:9 struct bnep_conndel_req     | `-VarDecl 0x157140fa8 <col:2, col:27> col:27 invalid cd 'struct bnep_conndel_req'     |-DeclStmt 0x1571411b8 <line:6:2, col:25>     | |-RecordDecl 0x157141040 <col:2, col:9> col:9 struct bnep_conninfo     | `-VarDecl 0x157141138 <col:2, col:23> col:23 invalid ci 'struct bnep_conninfo'     |-DeclStmt 0x1571412c0 <line:7:2, col:22>     | `-VarDecl 0x157141258 <col:2, col:17> col:17 used nsock 'struct socket *'     |-DeclStmt 0x157141350 <line:8:2, col:14>     | `-VarDecl 0x1571412e8 <col:2, col:7> col:7 invalid __user 'void'     |-DeclStmt 0x1571413e8 <line:9:2, col:9>     | `-VarDecl 0x157141380 <col:2, col:6> col:6 used err 'int'     |-CallExpr 0x157141638 <line:11:2, col:24> 'int'     | |-ImplicitCastExpr 0x157141620 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157141530 <col:2> 'int ()' Function 0x157141478 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x157141670 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x157141590 <col:9> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x157141688 <col:16> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x1571415b0 <col:16> 'unsigned int' lvalue ParmVar 0x1571286c8 'cmd' 'unsigned int'     | `-ImplicitCastExpr 0x1571416a0 <col:21> 'unsigned long' <LValueToRValue>     |   `-DeclRefExpr 0x1571415d0 <col:21> 'unsigned long' lvalue ParmVar 0x157128748 'arg' 'unsigned long'     |-SwitchStmt 0x1571416f0 <line:13:2, line:73:2>     | |-ImplicitCastExpr 0x1571416d8 <line:13:10> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x1571416b8 <col:10> 'unsigned int' lvalue ParmVar 0x1571286c8 'cmd' 'unsigned int'     | `-CompoundStmt 0x157143fe8 <col:15, line:73:2>     |   |-IfStmt 0x157141990 <line:15:3, line:16:12>     |   | |-UnaryOperator 0x1571418d0 <line:15:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x1571418a8 <col:8, col:29> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x157141810 <col:8> 'int ()' Function 0x157141758 'capable' 'int ()'     |   | |   `-RecoveryExpr 0x157141888 <col:16> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x157141980 <line:16:4, col:12>     |   |   `-UnaryOperator 0x157141968 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x157141950 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x157141930 <col:12> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1571422c0 <line:18:3, line:19:12>     |   | |-CallExpr 0x1571421e0 <line:18:7, col:43> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1571420b8 <col:7> 'int ()' Function 0x157142000 'copy_from_user' 'int ()'     |   | | |-UnaryOperator 0x1571420f8 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | | `-RecoveryExpr 0x1571420d8 <col:23> '<dependent type>' contains-errors lvalue     |   | | |-DeclRefExpr 0x1571421c0 <col:27> 'unsigned long' lvalue ParmVar 0x157128748 'arg' 'unsigned long'     |   | | `-UnaryExprOrTypeTraitExpr 0x157142168 <col:33, col:42> 'unsigned long' contains-errors sizeof     |   | |   `-ParenExpr 0x157142148 <col:39, col:42> '<dependent type>' contains-errors lvalue     |   | |     `-RecoveryExpr 0x157142128 <col:40> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x1571422b0 <line:19:4, col:12>     |   |   `-UnaryOperator 0x157142298 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x157142280 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x157142260 <col:12> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x157142508 <line:21:3, col:38> 'struct socket *' contains-errors '='     |   | |-DeclRefExpr 0x1571422e0 <col:3> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'     |   | `-CallExpr 0x1571424d8 <col:11, col:38> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1571423e0 <col:11> 'int ()' Function 0x157142328 'sockfd_lookup' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x157142420 <col:25, col:28> '<dependent type>' contains-errors lvalue .sock     |   |   | `-RecoveryExpr 0x157142400 <col:25> '<dependent type>' contains-errors lvalue     |   |   `-UnaryOperator 0x1571424c0 <col:34, col:35> 'int *' prefix '&' cannot overflow     |   |     `-DeclRefExpr 0x157142468 <col:35> 'int' lvalue Var 0x157141380 'err' 'int'     |   |-IfStmt 0x1571425c0 <line:22:3, line:23:11>     |   | |-UnaryOperator 0x157142560 <line:22:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x157142548 <col:8> 'struct socket *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x157142528 <col:8> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'     |   | `-ReturnStmt 0x1571425b0 <line:23:4, col:11>     |   |   `-ImplicitCastExpr 0x157142598 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x157142578 <col:11> 'int' lvalue Var 0x157141380 'err' 'int'     |   |-IfStmt 0x157142940 <line:25:3, line:28:3>     |   | |-BinaryOperator 0x1571426e0 <line:25:7, col:30> 'int' contains-errors '!='     |   | | |-CXXDependentScopeMemberExpr 0x157142640 <col:7, col:18> '<dependent type>' contains-errors lvalue ->sk_state     |   | | | `-RecoveryExpr 0x157142618 <col:7, col:14> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x1571425e0 <col:7> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'     |   | | `-RecoveryExpr 0x1571426c0 <col:30> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x157142920 <col:44, line:28:3>     |   |   |-CallExpr 0x157142838 <line:26:4, col:20> 'int'     |   |   | |-ImplicitCastExpr 0x157142820 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x1571427e0 <col:4> 'int ()' Function 0x157142728 'sockfd_put' 'int ()'     |   |   | `-ImplicitCastExpr 0x157142860 <col:15> 'struct socket *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x157142800 <col:15> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'     |   |   `-ReturnStmt 0x157142910 <line:27:4, col:12>     |   |     `-UnaryOperator 0x1571428f8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x1571428e0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x1571428c0 <col:12> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x157142b08 <line:30:3, col:39> 'int' contains-errors '='     |   | |-DeclRefExpr 0x157142960 <col:3> 'int' lvalue Var 0x157141380 'err' 'int'     |   | `-CallExpr 0x157142ad8 <col:9, col:39> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x157142a60 <col:9> 'int ()' Function 0x1571429a8 'bnep_add_connection' 'int ()'     |   |   |-UnaryOperator 0x157142aa0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x157142a80 <col:30> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x157142ab8 <col:34> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'     |   |-IfStmt 0x157142df8 <line:31:3, line:35:20> has_else     |   | |-UnaryOperator 0x157142b60 <line:31:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x157142b48 <col:8> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x157142b28 <col:8> 'int' lvalue Var 0x157141380 'err' 'int'     |   | |-CompoundStmt 0x157142d50 <col:13, line:34:3>     |   | `-CallExpr 0x157142db8 <line:35:4, col:20> 'int'     |   |   |-ImplicitCastExpr 0x157142da0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x157142d60 <col:4> 'int ()' Function 0x157142728 'sockfd_put' 'int ()'     |   |   `-ImplicitCastExpr 0x157142de0 <col:15> 'struct socket *' <LValueToRValue>     |   |     `-DeclRefExpr 0x157142d80 <col:15> 'struct socket *' lvalue Var 0x157141258 'nsock' 'struct socket *'     |   |-ReturnStmt 0x157142e60 <line:37:3, col:10>     |   | `-ImplicitCastExpr 0x157142e48 <col:10> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x157142e28 <col:10> 'int' lvalue Var 0x157141380 'err' 'int'     |   |-ReturnStmt 0x157143738 <line:46:3, col:33>     |   | `-CallExpr 0x157143710 <col:10, col:33> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1571436b8 <col:10> 'int ()' Function 0x157143600 'bnep_del_connection' 'int ()'     |   |   `-UnaryOperator 0x1571436f8 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x1571436d8 <col:31> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x157143a48 <line:55:3, col:30> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1571438c8 <col:3> 'int' lvalue Var 0x157141380 'err' 'int'     |   | `-CallExpr 0x157143a20 <col:9, col:30> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1571439c8 <col:9> 'int ()' Function 0x157143910 'bnep_get_connlist' 'int ()'     |   |   `-UnaryOperator 0x157143a08 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x1571439e8 <col:28> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x157143bc8 <line:59:3, col:10>     |   | `-ImplicitCastExpr 0x157143bb0 <col:10> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x157143b90 <col:10> 'int' lvalue Var 0x157141380 'err' 'int'     |   |-BinaryOperator 0x157143e30 <line:65:3, col:30> 'int' contains-errors '='     |   | |-DeclRefExpr 0x157143cb0 <col:3> 'int' lvalue Var 0x157141380 'err' 'int'     |   | `-CallExpr 0x157143e08 <col:9, col:30> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x157143db0 <col:9> 'int ()' Function 0x157143cf8 'bnep_get_conninfo' 'int ()'     |   |   `-UnaryOperator 0x157143df0 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x157143dd0 <col:28> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x157143fb0 <line:69:3, col:10>     |   | `-ImplicitCastExpr 0x157143f98 <col:10> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x157143f78 <col:10> 'int' lvalue Var 0x157141380 'err' 'int'     |   `-DefaultStmt 0x157143fc8 <line:71:2, col:9>     |     `-NullStmt 0x157143fc0 <col:9>     `-ReturnStmt 0x157144088 <line:75:2, col:9>       `-IntegerLiteral 0x157144068 <col:9> 'int' 0 ","20320":"`-FunctionDecl 0x12800e008  line:1:1 invalid xmlValidCtxtNormalizeAttributeValue 'int (int, int, int, const int *, const int *)'   |-ParmVarDecl 0x12800dcf0 <col:37, col:53> col:53 referenced invalid ctxt 'int'   |-ParmVarDecl 0x12800dd70 <col:59, col:69> col:69 invalid doc 'int'   |-ParmVarDecl 0x12800ddf0 <line:2:7, col:18> col:18 invalid elem 'int'   |-ParmVarDecl 0x12800de70 <col:24, col:39> col:39 invalid name 'const int *'   |-ParmVarDecl 0x12800def0 <col:45, col:60> col:60 invalid value 'const int *'   `-CompoundStmt 0x128029070 <col:67, line:65:1>     |-DeclStmt 0x12800e1b8 <line:4:5, col:23>     | `-VarDecl 0x12800e150 <col:5, col:20> col:20 referenced invalid src 'const int *'     |-DeclStmt 0x12800e270 <line:6:5, col:22>     | `-VarDecl 0x12800e1e8 <col:5, col:21> col:9 used extsubset 'int' cinit     |   `-IntegerLiteral 0x12800e250 <col:21> 'int' 0     |-IfStmt 0x128027ed8 <line:13:5, line:28:5>     | |-RecoveryExpr 0x1280276b0 <line:13:9, col:56> '_Bool' contains-errors     | `-CompoundStmt 0x128027ec0 <col:59, line:28:5>     |   `-IfStmt 0x128027d18 <line:21:2, line:25:2>     |     |-RecoveryExpr 0x128027b98 <line:21:6, col:51> '_Bool' contains-errors     |     `-CompoundStmt 0x128027d00 <col:54, line:25:2>     |       `-IfStmt 0x128027ce0 <line:23:6, line:24:15>     |         |-RecoveryExpr 0x128027c60 <line:23:10, col:22> '_Bool' contains-errors     |         `-BinaryOperator 0x128027cc0 <line:24:3, col:15> 'int' '='     |           |-DeclRefExpr 0x128027c80 <col:3> 'int' lvalue Var 0x12800e1e8 'extsubset' 'int'     |           `-IntegerLiteral 0x128027ca0 <col:15> 'int' 1     |-IfStmt 0x128028350 <line:31:5, line:35:5>     | |-RecoveryExpr 0x128028130 <line:31:9, col:54> '_Bool' contains-errors     | `-CompoundStmt 0x128028338 <col:57, line:35:5>     |   `-IfStmt 0x128028318 <line:33:2, line:34:18>     |     |-RecoveryExpr 0x128028298 <line:33:6, col:18> '_Bool' contains-errors     |     `-BinaryOperator 0x1280282f8 <line:34:6, col:18> 'int' '='     |       |-DeclRefExpr 0x1280282b8 <col:6> 'int' lvalue Var 0x12800e1e8 'extsubset' 'int'     |       `-IntegerLiteral 0x1280282d8 <col:18> 'int' 1     |-BinaryOperator 0x1280285a8 <line:45:5, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x128028560 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x128028540 <col:5> 'const int *' lvalue Var 0x12800e150 'src' 'const int *'     | `-RecoveryExpr 0x128028588 <col:11> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x1280286b8 <line:47:5, col:29>     | |-BinaryOperator 0x128028638 <col:12, col:20> 'int' contains-errors '=='     | | |-UnaryOperator 0x128028600 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x1280285e8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x1280285c8 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x128028618 <col:20> 'int' 32     | `-UnaryOperator 0x1280286a0 <col:26, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow     |   `-RecoveryExpr 0x128028678 <col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x128028658 <col:26> 'const int *' lvalue Var 0x12800e150 'src' 'const int *'     |-WhileStmt 0x128028a78 <line:48:5, line:56:5>     | |-BinaryOperator 0x128028748 <line:48:12, col:20> 'int' contains-errors '!='     | | |-UnaryOperator 0x128028710 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x1280286f8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x1280286d8 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x128028728 <col:20> 'int' 0     | `-CompoundStmt 0x128028a60 <col:23, line:56:5>     |   `-IfStmt 0x128028a30 <line:49:2, line:55:2> has_else     |     |-BinaryOperator 0x1280287d8 <line:49:6, col:14> 'int' contains-errors '=='     |     | |-UnaryOperator 0x1280287a0 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | | `-ImplicitCastExpr 0x128028788 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x128028768 <col:7> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x1280287b8 <col:14> 'int' 32     |     |-CompoundStmt 0x1280289b8 <col:20, line:53:2>     |     | `-WhileStmt 0x1280288e8 <line:50:6, col:30>     |     |   |-BinaryOperator 0x128028868 <col:13, col:21> 'int' contains-errors '=='     |     |   | |-UnaryOperator 0x128028830 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   | | `-ImplicitCastExpr 0x128028818 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |     |   | |   `-RecoveryExpr 0x1280287f8 <col:14> '<dependent type>' contains-errors lvalue     |     |   | `-IntegerLiteral 0x128028848 <col:21> 'int' 32     |     |   `-UnaryOperator 0x1280288d0 <col:27, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow     |     |     `-RecoveryExpr 0x1280288a8 <col:27> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x128028888 <col:27> 'const int *' lvalue Var 0x12800e150 'src' 'const int *'     |     `-CompoundStmt 0x128028a20 <line:53:9, line:55:2>     `-IfStmt 0x128029050 <line:58:5, line:63:5>       |-RecoveryExpr 0x128028d18 <line:58:9, col:75> '_Bool' contains-errors       `-CompoundStmt 0x128029038 <col:78, line:63:5>         `-BinaryOperator 0x128029018 <line:62:2, col:16> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x128028fb0 <col:2, col:8> '<dependent type>' contains-errors lvalue ->valid           | `-RecoveryExpr 0x128028f88 <col:2> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x128028f68 <col:2> 'int' lvalue ParmVar 0x12800dcf0 'ctxt' 'int'           `-IntegerLiteral 0x128028ff8 <col:16> 'int' 0 ","20894":"`-FunctionDecl 0x14e1281c8  line:1:17 invalid pac_inv_sub 'int (int)' static   |-ParmVarDecl 0x14e1280f0 <col:29, col:38> col:38 invalid i 'int'   `-CompoundStmt 0x14e808738 <line:2:1, line:14:1>     |-DeclStmt 0x14e128690 <line:3:5, line:6:6>     | `-VarDecl 0x14e128368 <line:3:5, col:36> col:26 invalid inv_sub 'const int[16]' static     |-DeclStmt 0x14e128728 <line:8:5, col:10>     | `-VarDecl 0x14e1286c0 <col:5, col:9> col:9 used b 'int'     |-ForStmt 0x14e8086b8 <line:10:5, line:12:5>     | |-BinaryOperator 0x14e128780 <line:10:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14e128740 <col:10> 'int' lvalue Var 0x14e1286c0 'b' 'int'     | | `-IntegerLiteral 0x14e128760 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14e808600 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x14e1287e0 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e1287a0 <col:17> 'int' lvalue Var 0x14e1286c0 'b' 'int'     | | `-IntegerLiteral 0x14e1287c0 <col:21> 'int' 64     | |-CompoundAssignOperator 0x14e808660 <col:25, col:30> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | |-DeclRefExpr 0x14e808620 <col:25> 'int' lvalue Var 0x14e1286c0 'b' 'int'     | | `-IntegerLiteral 0x14e808640 <col:30> 'int' 16     | `-CompoundStmt 0x14e8086a8 <col:34, line:12:5>     `-ReturnStmt 0x14e808728 <line:13:5, col:12>       `-RecoveryExpr 0x14e808708 <col:12> '<dependent type>' contains-errors lvalue ","21082":"`-FunctionDecl 0x147928230  line:1:6 invalid mutt_free_alias 'void (int **)'   |-ParmVarDecl 0x147928160 <col:23, col:31> col:31 invalid p 'int **'   `-CompoundStmt 0x147941ca8 <line:2:1, line:14:1>     `-WhileStmt 0x147941c88 <line:5:3, line:13:3>       |-UnaryOperator 0x147928330 <line:5:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x147928318 <col:11> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x1479282f8 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x147941c50 <line:6:3, line:13:3>         |-BinaryOperator 0x1479284a0 <line:8:5, col:16> '<dependent type>' contains-errors '='         | |-UnaryOperator 0x1479283d0 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x1479283b8 <col:6> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x147928398 <col:6> '<dependent type>' contains-errors lvalue         | `-CXXDependentScopeMemberExpr 0x147928458 <col:10, col:16> '<dependent type>' contains-errors lvalue ->next         |   `-ParenExpr 0x147928438 <col:10, col:13> '<dependent type>' contains-errors         |     `-UnaryOperator 0x147928420 <col:11, col:12> '<dependent type>' contains-errors prefix '*' cannot overflow         |       `-ImplicitCastExpr 0x147928408 <col:12> '<dependent type>' contains-errors <LValueToRValue>         |         `-RecoveryExpr 0x1479283e8 <col:12> '<dependent type>' contains-errors lvalue         |-CallExpr 0x1479286a0 <line:9:5, col:33> '<dependent type>' contains-errors         | |-DeclRefExpr 0x147928620 <col:5> 'int ()' Function 0x147928568 'mutt_alias_delete_reverse' 'int ()'         | `-RecoveryExpr 0x147928680 <col:32> '<dependent type>' contains-errors lvalue         |-CallExpr 0x147941908 <line:10:5, col:19> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1479287a8 <col:5> 'int ()' Function 0x1479286f0 'FREE' 'int ()'         | `-UnaryOperator 0x1479418f0 <col:11, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x1479418a8 <col:12, col:15> '<dependent type>' contains-errors lvalue ->name         |     `-RecoveryExpr 0x147941888 <col:12> '<dependent type>' contains-errors lvalue         |-CallExpr 0x147941b50 <line:11:5, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x147941a10 <col:5> 'int ()' Function 0x147941958 'rfc822_free_address' 'int ()'         | `-UnaryOperator 0x147941b38 <col:26, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x147941af0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->addr         |     `-RecoveryExpr 0x147941ad0 <col:27> '<dependent type>' contains-errors lvalue         `-CallExpr 0x147941c28 <line:12:5, col:13> '<dependent type>' contains-errors           |-DeclRefExpr 0x147941b78 <col:5> 'int ()' Function 0x1479286f0 'FREE' 'int ()'           `-UnaryOperator 0x147941c10 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x147941bf0 <col:12> '<dependent type>' contains-errors lvalue ","20679":"`-FunctionDecl 0x11e1423c0  col:25 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x11e1424c0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x11e142468 <<invalid sloc>> Implicit 950 ","20891":"`-FunctionDecl 0x135140a00  col:14 implicit used fabs 'double (double)' extern   |-ParmVarDecl 0x135140b00 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x135140aa8 <<invalid sloc>> Implicit 1004   |-NoThrowAttr 0x135140b70 <col:14> Implicit   `-ConstAttr 0x135140b98 <col:14> Implicit ","21117":"`-FunctionDecl 0x140008b68  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x140008c68 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x140008c10 <<invalid sloc>> Implicit 873 ","20258":"`-FunctionDecl 0x14f0f5988  line:1:1 alarm_init_on_stack 'int (struct alarm *, enum alarmtimer_type, enum alarmtimer_restart (*)(struct alarm *, int))'   |-ParmVarDecl 0x14f0d8e48 <col:21, col:35> col:35 used alarm 'struct alarm *'   |-ParmVarDecl 0x14f0f5400 <col:42, col:63> col:63 invalid type 'enum alarmtimer_type'   |-ParmVarDecl 0x14f0f5840 <line:2:7, col:66> col:33 used function 'enum alarmtimer_restart (*)(struct alarm *, int)'   `-CompoundStmt 0x14f0f5e40 <line:3:1, line:7:1>     `-CallExpr 0x14f0f5e08 <line:6:2, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f0f5d88 <col:2> 'int ()' Function 0x14f0f5cd0 '__alarm_init' 'int ()'       |-DeclRefExpr 0x14f0f5da8 <col:15> 'struct alarm *' lvalue ParmVar 0x14f0d8e48 'alarm' 'struct alarm *'       |-RecoveryExpr 0x14f0f5dc8 <col:22> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x14f0f5de8 <col:28> 'enum alarmtimer_restart (*)(struct alarm *, int)' lvalue ParmVar 0x14f0f5840 'function' 'enum alarmtimer_restart (*)(struct alarm *, int)' ","21041":"`-FunctionDecl 0x1561281f8  line:1:13 invalid nla_client_init_cred_handle 'int (int *)' static   |-ParmVarDecl 0x156128128 <col:41, col:49> col:49 referenced invalid nla 'int *'   `-CompoundStmt 0x156141a00 <line:2:1, line:32:1>     |-CallExpr 0x156128460 <line:5:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x156128420 <col:2> 'int ()' Function 0x156128368 'WINPR_ASSERT' 'int ()'     | `-RecoveryExpr 0x156128440 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x156128570 <line:7:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1561284f0 <col:2> 'int ()' Function 0x156128368 'WINPR_ASSERT' 'int ()'     | `-RecoveryExpr 0x156128550 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x156128668 <line:8:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x156128598 <col:2> 'int ()' Function 0x156128368 'WINPR_ASSERT' 'int ()'     | `-CXXDependentScopeMemberExpr 0x156128620 <col:15, col:27> '<dependent type>' contains-errors lvalue ->SetCredentialsAttributes     |   `-CXXDependentScopeMemberExpr 0x1561285d8 <col:15, col:20> '<dependent type>' contains-errors lvalue ->table     |     `-RecoveryExpr 0x1561285b8 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x156141998 <line:10:2, line:29:2>     | |-CXXDependentScopeMemberExpr 0x156128710 <line:10:6, col:20> '<dependent type>' contains-errors lvalue ->kdcUrl     | | `-RecoveryExpr 0x1561286f0 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x156141988 <line:11:2, line:29:2>     `-ReturnStmt 0x1561419f0 <line:31:2, col:9>       `-RecoveryExpr 0x1561419d0 <col:9> '<dependent type>' contains-errors lvalue ","20333":"`-FunctionDecl 0x150941708  col:14 implicit used atan2 'double (double, double)' extern   |-ParmVarDecl 0x150941808 <<invalid sloc>> <invalid sloc> 'double'   |-ParmVarDecl 0x150941870 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x1509417b0 <<invalid sloc>> Implicit 995   |-ConstAttr 0x1509418e8 <col:14> Implicit   `-NoThrowAttr 0x150941910 <col:14> Implicit ","20453":"`-FunctionDecl 0x12980dfa0  line:1:13 invalid rng_egd_request_entropy 'void (int *, int, int *, void *)' static   |-ParmVarDecl 0x12980dd28 <col:37, col:49> col:49 invalid b 'int *'   |-ParmVarDecl 0x12980dda8 <col:52, col:59> col:59 referenced invalid size 'int'   |-ParmVarDecl 0x12980de28 <line:2:37, col:57> col:57 invalid receive_entropy 'int *'   |-ParmVarDecl 0x12980dea8 <line:3:37, col:43> col:43 used opaque 'void *'   `-CompoundStmt 0x129827820 <line:4:1, line:30:1>     `-WhileStmt 0x129827700 <line:16:5, line:27:5>       |-BinaryOperator 0x129827528 <line:16:12, col:19> 'int' contains-errors '>'       | |-RecoveryExpr 0x1298274e8 <col:12> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x129827508 <col:19> 'int' 0       `-CompoundStmt 0x1298276f0 <col:22, line:27:5> ","21008":"`-FunctionDecl 0x12993e548  line:1:12 __do_page_fault 'int (struct mm_struct *, unsigned long, unsigned int, unsigned long, struct task_struct *)' static   |-ParmVarDecl 0x12a00a848 <col:28, col:46> col:46 used mm 'struct mm_struct *'   |-ParmVarDecl 0x12a00a8c8 <col:50, col:64> col:64 used addr 'unsigned long'   |-ParmVarDecl 0x12a00a948 <line:2:7, col:20> col:20 used mm_flags 'unsigned int'   |-ParmVarDecl 0x12993e200 <col:30, col:44> col:44 used vm_flags 'unsigned long'   |-ParmVarDecl 0x12993e3d8 <line:3:7, col:27> col:27 tsk 'struct task_struct *'   `-CompoundStmt 0x129940698 <line:4:1, line:30:1>     |-DeclStmt 0x12993e848 <line:5:2, col:28>     | |-RecordDecl 0x12993e660 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x12993e7c8 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-DeclStmt 0x12993e8e0 <line:6:2, col:11>     | `-VarDecl 0x12993e878 <col:2, col:6> col:6 used fault 'int'     |-BinaryOperator 0x12993eb60 <line:8:2, col:25> 'struct vm_area_struct *' '='     | |-DeclRefExpr 0x12993e8f8 <col:2> 'struct vm_area_struct *' lvalue Var 0x12993e7c8 'vma' 'struct vm_area_struct *'     | `-ImplicitCastExpr 0x12993eb48 <col:8, col:25> 'struct vm_area_struct *' <IntegralToPointer>     |   `-CallExpr 0x12993eae8 <col:8, col:25> 'int'     |     |-ImplicitCastExpr 0x12993ead0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12993ea40 <col:8> 'int ()' Function 0x12993e988 'find_vma' 'int ()'     |     |-ImplicitCastExpr 0x12993eb18 <col:17> 'struct mm_struct *' <LValueToRValue>     |     | `-DeclRefExpr 0x12993ea60 <col:17> 'struct mm_struct *' lvalue ParmVar 0x12a00a848 'mm' 'struct mm_struct *'     |     `-ImplicitCastExpr 0x12993eb30 <col:21> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x12993ea80 <col:21> 'unsigned long' lvalue ParmVar 0x12a00a8c8 'addr' 'unsigned long'     |-BinaryOperator 0x12993ebf8 <line:9:2, col:10> 'int' contains-errors '='     | |-DeclRefExpr 0x12993eb80 <col:2> 'int' lvalue Var 0x12993e878 'fault' 'int'     | `-RecoveryExpr 0x12993ebd8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12993ee10 <line:10:2, line:11:8>     | |-CallExpr 0x12993ed80 <line:10:6, col:19> 'int'     | | |-ImplicitCastExpr 0x12993ed68 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12993ecf8 <col:6> 'int ()' Function 0x12993ec40 'unlikely' 'int ()'     | | `-UnaryOperator 0x12993ed50 <col:15, col:16> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12993ed38 <col:16> 'struct vm_area_struct *' <LValueToRValue>     | |     `-DeclRefExpr 0x12993ed18 <col:16> 'struct vm_area_struct *' lvalue Var 0x12993e7c8 'vma' 'struct vm_area_struct *'     | `-GotoStmt 0x12993edf8 <line:11:3, col:8> 'out' 0x12993eda8     |-IfStmt 0x12993ef80 <line:12:2, line:13:8>     | |-CallExpr 0x12993eef0 <line:12:6, col:35> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12993ee30 <col:6> 'int ()' Function 0x12993ec40 'unlikely' 'int ()'     | | `-BinaryOperator 0x12993eed0 <col:15, col:31> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x12993ee88 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12993ee50 <col:15> 'struct vm_area_struct *' lvalue Var 0x12993e7c8 'vma' 'struct vm_area_struct *'     | |   `-DeclRefExpr 0x12993eeb0 <col:31> 'unsigned long' lvalue ParmVar 0x12a00a8c8 'addr' 'unsigned long'     | `-GotoStmt 0x12993ef68 <line:13:3, col:8> 'check_stack' 0x12993ef18     |-LabelStmt 0x12993f1b8 <line:16:1, line:21:2> 'good_area'     | `-IfStmt 0x12993f148 <line:18:2, line:21:2>     |   |-UnaryOperator 0x12993f060 <line:18:6, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-ParenExpr 0x12993f040 <col:7, col:32> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x12993f020 <col:8, col:24> '<dependent type>' contains-errors '&'     |   |     |-RecoveryExpr 0x12993efd8 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x12993efa0 <col:8> 'struct vm_area_struct *' lvalue Var 0x12993e7c8 'vma' 'struct vm_area_struct *'     |   |     `-DeclRefExpr 0x12993f000 <col:24> 'unsigned long' lvalue ParmVar 0x12993e200 'vm_flags' 'unsigned long'     |   `-CompoundStmt 0x12993f128 <col:35, line:21:2>     |     |-BinaryOperator 0x12993f0f0 <line:19:3, col:11> 'int' contains-errors '='     |     | |-DeclRefExpr 0x12993f078 <col:3> 'int' lvalue Var 0x12993e878 'fault' 'int'     |     | `-RecoveryExpr 0x12993f0d0 <col:11> '<dependent type>' contains-errors lvalue     |     `-GotoStmt 0x12993f110 <line:20:3, col:8> 'out' 0x12993eda8     |-ReturnStmt 0x129940250 <line:23:2, col:60>     | `-CallExpr 0x129940210 <col:9, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1299400b8 <col:9> 'int ()' Function 0x129940000 'handle_mm_fault' 'int ()'     |   |-DeclRefExpr 0x1299400d8 <col:25> 'struct mm_struct *' lvalue ParmVar 0x12a00a848 'mm' 'struct mm_struct *'     |   |-DeclRefExpr 0x1299400f8 <col:29> 'struct vm_area_struct *' lvalue Var 0x12993e7c8 'vma' 'struct vm_area_struct *'     |   |-BinaryOperator 0x1299401f0 <col:34, col:41> '<dependent type>' contains-errors '&'     |   | |-DeclRefExpr 0x129940118 <col:34> 'unsigned long' lvalue ParmVar 0x12a00a8c8 'addr' 'unsigned long'     |   | `-RecoveryExpr 0x1299401d0 <col:41> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x129940170 <col:52> 'unsigned int' lvalue ParmVar 0x12a00a948 'mm_flags' 'unsigned int'     |-LabelStmt 0x129940610 <line:25:1, line:27:8> 'check_stack'     | `-IfStmt 0x1299405f0 <line:26:2, line:27:8>     |   |-BinaryOperator 0x1299405b8 <line:26:6, col:61> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x129940508 <col:6, col:22> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x129940298 <col:6, col:11> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x129940260 <col:6> 'struct vm_area_struct *' lvalue Var 0x12993e7c8 'vma' 'struct vm_area_struct *'     |   | | `-RecoveryExpr 0x1299404e8 <col:22> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1299405a0 <col:38, col:61> 'int' prefix '!' cannot overflow     |   |   `-CallExpr 0x129940540 <col:39, col:61> 'int'     |   |     |-ImplicitCastExpr 0x129940528 <col:39> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1299403d8 <col:39> 'int ()' Function 0x129940320 'expand_stack' 'int ()'     |   |     |-ImplicitCastExpr 0x129940570 <col:52> 'struct vm_area_struct *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1299403f8 <col:52> 'struct vm_area_struct *' lvalue Var 0x12993e7c8 'vma' 'struct vm_area_struct *'     |   |     `-ImplicitCastExpr 0x129940588 <col:57> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x129940418 <col:57> 'unsigned long' lvalue ParmVar 0x12a00a8c8 'addr' 'unsigned long'     |   `-GotoStmt 0x1299405d8 <line:27:3, col:8> 'good_area' 0x12993f168     `-LabelStmt 0x129940678 <line:28:1, line:29:9> 'out'       `-ReturnStmt 0x129940668 <col:2, col:9>         `-ImplicitCastExpr 0x129940650 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x129940630 <col:9> 'int' lvalue Var 0x12993e878 'fault' 'int' ","20443":"`-FunctionDecl 0x160015118  line:1:1 invalid njs_generate_for_update 'int (int *, int *, int *)'   |-ParmVarDecl 0x160014f28 <col:25, col:35> col:35 invalid vm 'int *'   |-ParmVarDecl 0x160014fa8 <col:39, col:56> col:56 invalid generator 'int *'   |-ParmVarDecl 0x160015028 <line:2:5, col:24> col:24 invalid node 'int *'   `-CompoundStmt 0x160809c50 <line:3:1, line:32:1>     |-IfStmt 0x1608094d0 <line:14:5, line:16:5>     | |-CallExpr 0x160809448 <line:14:9, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x160809350 <col:9> 'int ()' Function 0x160809298 'njs_slow_path' 'int ()'     | | `-BinaryOperator 0x160809428 <col:23, col:30> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x1608093e8 <col:23> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x160809408 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1608094b8 <col:39, line:16:5>     |   `-ReturnStmt 0x1608094a8 <line:15:9, col:16>     |     `-RecoveryExpr 0x160809488 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x160809a88 <line:20:5, line:29:5>     | |-RecoveryExpr 0x1608094f0 <line:20:9, col:22> '_Bool' contains-errors     | `-CompoundStmt 0x160809a78 <col:28, line:29:5>     `-ReturnStmt 0x160809c40 <line:31:5, col:52>       `-CallExpr 0x160809c08 <col:12, col:52> '<dependent type>' contains-errors         |-DeclRefExpr 0x160809b88 <col:12> 'int ()' Function 0x160809ad0 'njs_generate_for_end' 'int ()'         |-RecoveryExpr 0x160809ba8 <col:33> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x160809bc8 <col:37> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x160809be8 <col:48> '<dependent type>' contains-errors lvalue ","20562":"`-FunctionDecl 0x12500df58  line:1:1 invalid TPMS_CREATION_DATA_Marshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x12500dd28 <col:28, col:48> col:48 invalid source 'int *'   |-ParmVarDecl 0x12500dde0 <col:56, col:63> col:63 invalid buffer 'int **'   |-ParmVarDecl 0x12500de60 <col:71, col:78> col:78 invalid size 'int *'   `-CompoundStmt 0x124922fd0 <line:2:1, line:13:1>     `-ReturnStmt 0x124922fc0 <line:12:5, col:12>       `-RecoveryExpr 0x124922fa0 <col:12> '<dependent type>' contains-errors lvalue ","20290":"`-FunctionDecl 0x136927968  col:19 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x136927a68 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x136927ad0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x136927b38 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x136927a10 <<invalid sloc>> Implicit 888 ","21164":"`-FunctionDecl 0x134142de8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x134142ee8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x134142e90 <<invalid sloc>> Implicit 873 ","20414":"`-FunctionDecl 0x14b008688  line:1:12 invalid rose_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)' static   |-ParmVarDecl 0x14a928e48 <col:25, col:39> col:39 iocb 'struct kiocb *'   |-ParmVarDecl 0x14b008228 <col:45, col:60> col:60 used sock 'struct socket *'   |-ParmVarDecl 0x14b0083f8 <line:2:4, col:19> col:19 used msg 'struct msghdr *'   |-ParmVarDecl 0x14b008490 <col:24, col:31> col:31 invalid size 'int'   |-ParmVarDecl 0x14b008510 <col:37, col:41> col:41 used flags 'int'   `-CompoundStmt 0x14a944848 <line:3:1, line:61:1>     |-DeclStmt 0x14b0089a8 <line:4:2, col:28>     | |-RecordDecl 0x14b008758 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x14b0088c8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x14b008968 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b008930 <col:20> 'struct socket *' lvalue ParmVar 0x14b008228 'sock' 'struct socket *'     |-DeclStmt 0x14b008de8 <line:5:2, col:38>     | |-RecordDecl 0x14b0089c0 <col:2, col:9> col:9 struct rose_sock     | `-VarDecl 0x14b008b28 <col:2, col:37> col:20 used rose 'struct rose_sock *' cinit     |   `-ImplicitCastExpr 0x14b008db8 <col:27, col:37> 'struct rose_sock *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x14b008d78 <col:27, col:37> 'int' contains-errors     |       |-ImplicitCastExpr 0x14b008d60 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b008cf0 <col:27> 'int ()' Function 0x14b008c38 'rose_sk' 'int ()'     |       `-ImplicitCastExpr 0x14b008da0 <col:35> 'struct sock *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14b008d10 <col:35> 'struct sock *' contains-errors lvalue Var 0x14b0088c8 'sk' 'struct sock *'     |-DeclStmt 0x14b0090f8 <line:6:2, col:69>     | |-RecordDecl 0x14b008e00 <col:2, col:9> col:9 struct sockaddr_rose     | `-VarDecl 0x14b008f68 <col:2, col:61> col:24 used srose 'struct sockaddr_rose *' cinit     |   `-CStyleCastExpr 0x14b0090b8 <col:32, col:61> 'struct sockaddr_rose *' contains-errors <Dependent>     |     `-RecoveryExpr 0x14b009008 <col:56, col:61> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14b008fd0 <col:56> 'struct msghdr *' lvalue ParmVar 0x14b0083f8 'msg' 'struct msghdr *'     |-UnaryExprOrTypeTraitExpr 0x14b009180 <line:7:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x14b009160 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14a942268 <line:8:2, col:23>     | `-VarDecl 0x14a942200 <col:2, col:17> col:17 used asmptr 'unsigned char *'     |-DeclStmt 0x14a942468 <line:9:2, col:21>     | |-RecordDecl 0x14a942280 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x14a9423e8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x14a942620 <line:10:2, col:17>     | |-VarDecl 0x14a942498 <col:2, col:6> col:6 used n 'int'     | |-VarDecl 0x14a942518 <col:2, col:9> col:9 used er 'int'     | `-VarDecl 0x14a942598 <col:2, col:13> col:13 used qbit 'int'     |-IfStmt 0x14a9427e8 <line:13:2, line:14:11>     | |-BinaryOperator 0x14a9426f0 <line:13:6, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14a942670 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14a942638 <col:6> 'struct sock *' contains-errors lvalue Var 0x14b0088c8 'sk' 'struct sock *'     | | `-RecoveryExpr 0x14a9426d0 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14a9427d8 <line:14:3, col:11>     |   `-UnaryOperator 0x14a9427c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14a9427a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14a942758 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a942b78 <line:17:2, line:18:10>     | |-RecoveryExpr 0x14a942b10 <line:17:6, col:89> '_Bool' contains-errors     | `-ReturnStmt 0x14a942b68 <line:18:3, col:10>     |   `-ImplicitCastExpr 0x14a942b50 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14a942b30 <col:10> 'int' lvalue Var 0x14a942518 'er' 'int'     |-CallExpr 0x14a942e80 <line:22:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a942dd8 <col:2> 'int ()' Function 0x14a942d20 'skb_pull' 'int ()'     | |-DeclRefExpr 0x14a942df8 <col:11> 'struct sk_buff *' lvalue Var 0x14a9423e8 'skb' 'struct sk_buff *'     | `-RecoveryExpr 0x14a942e60 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a943200 <line:24:2, line:27:2>     | |-RecoveryExpr 0x14a942ee8 <line:24:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a942eb0 <col:6> 'struct rose_sock *' contains-errors lvalue Var 0x14b008b28 'rose' 'struct rose_sock *'     | `-CompoundStmt 0x14a9431c8 <col:22, line:27:2>     |   |-BinaryOperator 0x14a9430e8 <line:25:3, col:28> 'unsigned char *' '='     |   | |-DeclRefExpr 0x14a942f10 <col:3> 'unsigned char *' lvalue Var 0x14a942200 'asmptr' 'unsigned char *'     |   | `-ImplicitCastExpr 0x14a9430d0 <col:13, col:28> 'unsigned char *' <IntegralToPointer>     |   |   `-CallExpr 0x14a943088 <col:13, col:28> 'int'     |   |     |-ImplicitCastExpr 0x14a943070 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14a943010 <col:13> 'int ()' Function 0x14a942f58 'skb_push' 'int ()'     |   |     |-ImplicitCastExpr 0x14a9430b8 <col:22> 'struct sk_buff *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14a943030 <col:22> 'struct sk_buff *' lvalue Var 0x14a9423e8 'skb' 'struct sk_buff *'     |   |     `-IntegerLiteral 0x14a943050 <col:27> 'int' 1     |   `-BinaryOperator 0x14a9431a8 <line:26:3, col:13> 'unsigned char' '='     |     |-UnaryOperator 0x14a943140 <col:3, col:4> 'unsigned char' lvalue prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x14a943128 <col:4> 'unsigned char *' <LValueToRValue>     |     |   `-DeclRefExpr 0x14a943108 <col:4> 'unsigned char *' lvalue Var 0x14a942200 'asmptr' 'unsigned char *'     |     `-ImplicitCastExpr 0x14a943190 <col:13> 'unsigned char' <IntegralCast>     |       `-ImplicitCastExpr 0x14a943178 <col:13> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14a943158 <col:13> 'int' lvalue Var 0x14a942598 'qbit' 'int'     |-CallExpr 0x14a943358 <line:29:2, col:32> 'int'     | |-ImplicitCastExpr 0x14a943340 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a943300 <col:2> 'int ()' Function 0x14a943248 'skb_reset_transport_header' 'int ()'     | `-ImplicitCastExpr 0x14a943380 <col:29> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x14a943320 <col:29> 'struct sk_buff *' lvalue Var 0x14a9423e8 'skb' 'struct sk_buff *'     |-IfStmt 0x14a9434c8 <line:32:2, line:35:2>     | |-RecoveryExpr 0x14a943418 <line:32:6, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x14a9434b8 <col:21, line:35:2>     |-IfStmt 0x14a944670 <line:39:2, line:56:2>     | |-RecoveryExpr 0x14a9436a8 <line:39:6, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x14a944640 <col:21, line:56:2>     |   |-BinaryOperator 0x14a9437e8 <line:41:3, col:31> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14a943760 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14a943728 <col:3> 'struct sockaddr_rose *' contains-errors lvalue Var 0x14b008f68 'srose' 'struct sockaddr_rose *'     |   | `-RecoveryExpr 0x14a9437c0 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14a943788 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14b008b28 'rose' 'struct rose_sock *'     |   |-BinaryOperator 0x14a9438c8 <line:42:3, col:31> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14a943840 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14a943808 <col:3> 'struct sockaddr_rose *' contains-errors lvalue Var 0x14b008f68 'srose' 'struct sockaddr_rose *'     |   | `-RecoveryExpr 0x14a9438a0 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14a943868 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14b008b28 'rose' 'struct rose_sock *'     |   |-BinaryOperator 0x14a9439a8 <line:43:3, col:31> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14a943920 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14a9438e8 <col:3> 'struct sockaddr_rose *' contains-errors lvalue Var 0x14b008f68 'srose' 'struct sockaddr_rose *'     |   | `-RecoveryExpr 0x14a943980 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14a943948 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14b008b28 'rose' 'struct rose_sock *'     |   `-IfStmt 0x14a944610 <line:44:3, line:55:3> has_else     |     |-RecoveryExpr 0x14a943b28 <line:44:7, col:59> '_Bool' contains-errors     |     |-CompoundStmt 0x14a944248 <col:62, line:49:3>     |     | |-DeclStmt 0x14a943dc0 <line:45:4, col:86>     |     | | `-VarDecl 0x14a943c08 <col:4, col:78> col:31 used full_srose 'struct full_sockaddr_rose *' cinit     |     | |   `-CStyleCastExpr 0x14a943d98 <col:44, col:78> 'struct full_sockaddr_rose *' contains-errors <Dependent>     |     | |     `-RecoveryExpr 0x14a943ca8 <col:73, col:78> '<dependent type>' contains-errors lvalue     |     | |       `-DeclRefExpr 0x14a943c70 <col:73> 'struct msghdr *' lvalue ParmVar 0x14b0083f8 'msg' 'struct msghdr *'     |     | `-ForStmt 0x14a944190 <line:46:4, line:47:52>     |     |   |-BinaryOperator 0x14a943e18 <line:46:9, col:13> 'int' '='     |     |   | |-DeclRefExpr 0x14a943dd8 <col:9> 'int' lvalue Var 0x14a942498 'n' 'int'     |     |   | `-IntegerLiteral 0x14a943df8 <col:13> 'int' 0     |     |   |-<<<NULL>>>     |     |   |-BinaryOperator 0x14a943eb8 <col:17, col:27> 'int' contains-errors '<'     |     |   | |-DeclRefExpr 0x14a943e38 <col:17> 'int' lvalue Var 0x14a942498 'n' 'int'     |     |   | `-RecoveryExpr 0x14a943e90 <col:21, col:27> '<dependent type>' contains-errors lvalue     |     |   |   `-DeclRefExpr 0x14a943e58 <col:21> 'struct rose_sock *' contains-errors lvalue Var 0x14b008b28 'rose' 'struct rose_sock *'     |     |   |-UnaryOperator 0x14a943ef8 <col:41, col:42> 'int' postfix '++'     |     |   | `-DeclRefExpr 0x14a943ed8 <col:41> 'int' lvalue Var 0x14a942498 'n' 'int'     |     |   `-BinaryOperator 0x14a944170 <line:47:5, col:52> '<dependent type>' contains-errors '='     |     |     |-ArraySubscriptExpr 0x14a944100 <col:5, col:30> '<dependent type>' contains-errors lvalue     |     |     | |-ImplicitCastExpr 0x14a9440d0 <col:5, col:17> '<dependent type>' contains-errors <LValueToRValue>     |     |     | | `-RecoveryExpr 0x14a943f48 <col:5, col:17> '<dependent type>' contains-errors lvalue     |     |     | |   `-DeclRefExpr 0x14a943f10 <col:5> 'struct full_sockaddr_rose *' contains-errors lvalue Var 0x14a943c08 'full_srose' 'struct full_sockaddr_rose *'     |     |     | `-ImplicitCastExpr 0x14a9440e8 <col:29> 'int' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x14a943f70 <col:29> 'int' lvalue Var 0x14a942498 'n' 'int'     |     |     `-ArraySubscriptExpr 0x14a944150 <col:34, col:52> '<dependent type>' contains-errors lvalue     |     |       |-ImplicitCastExpr 0x14a944120 <col:34, col:40> '<dependent type>' contains-errors <LValueToRValue>     |     |       | `-RecoveryExpr 0x14a944018 <col:34, col:40> '<dependent type>' contains-errors lvalue     |     |       |   `-DeclRefExpr 0x14a943fe0 <col:34> 'struct rose_sock *' contains-errors lvalue Var 0x14b008b28 'rose' 'struct rose_sock *'     |     |       `-ImplicitCastExpr 0x14a944138 <col:51> 'int' <LValueToRValue>     |     |         `-DeclRefExpr 0x14a944040 <col:51> 'int' lvalue Var 0x14a942498 'n' 'int'     |     `-CompoundStmt 0x14a9445f8 <line:49:10, line:55:3>     |       `-IfStmt 0x14a944558 <line:50:4, line:53:4>     |         |-BinaryOperator 0x14a9442e8 <line:50:8, col:29> 'int' contains-errors '>='     |         | |-RecoveryExpr 0x14a9442a0 <col:8, col:14> '<dependent type>' contains-errors lvalue     |         | | `-DeclRefExpr 0x14a944268 <col:8> 'struct rose_sock *' contains-errors lvalue Var 0x14b008b28 'rose' 'struct rose_sock *'     |         | `-IntegerLiteral 0x14a9442c8 <col:29> 'int' 1     |         `-CompoundStmt 0x14a944538 <col:32, line:53:4>     |           |-BinaryOperator 0x14a944388 <line:51:5, col:27> '<dependent type>' contains-errors '='     |           | |-RecoveryExpr 0x14a944340 <col:5, col:12> '<dependent type>' contains-errors lvalue     |           | | `-DeclRefExpr 0x14a944308 <col:5> 'struct sockaddr_rose *' contains-errors lvalue Var 0x14b008f68 'srose' 'struct sockaddr_rose *'     |           | `-IntegerLiteral 0x14a944368 <col:27> 'int' 1     |           `-BinaryOperator 0x14a944518 <line:52:5, col:43> '<dependent type>' contains-errors '='     |             |-RecoveryExpr 0x14a9443e0 <col:5, col:12> '<dependent type>' contains-errors lvalue     |             | `-DeclRefExpr 0x14a9443a8 <col:5> 'struct sockaddr_rose *' contains-errors lvalue Var 0x14b008f68 'srose' 'struct sockaddr_rose *'     |             `-ArraySubscriptExpr 0x14a9444f8 <col:25, col:43> '<dependent type>' contains-errors lvalue     |               |-ImplicitCastExpr 0x14a9444e0 <col:25, col:31> '<dependent type>' contains-errors <LValueToRValue>     |               | `-RecoveryExpr 0x14a944440 <col:25, col:31> '<dependent type>' contains-errors lvalue     |               |   `-DeclRefExpr 0x14a944408 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14b008b28 'rose' 'struct rose_sock *'     |               `-IntegerLiteral 0x14a944468 <col:42> 'int' 0     `-CallExpr 0x14a9447e8 <line:58:2, col:27> 'int' contains-errors       |-ImplicitCastExpr 0x14a9447d0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14a944770 <col:2> 'int ()' Function 0x14a9446b8 'skb_free_datagram' 'int ()'       |-ImplicitCastExpr 0x14a944818 <col:20> 'struct sock *' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x14a944790 <col:20> 'struct sock *' contains-errors lvalue Var 0x14b0088c8 'sk' 'struct sock *'       `-ImplicitCastExpr 0x14a944830 <col:24> 'struct sk_buff *' <LValueToRValue>         `-DeclRefExpr 0x14a9447b0 <col:24> 'struct sk_buff *' lvalue Var 0x14a9423e8 'skb' 'struct sk_buff *' ","21060":"`-FunctionDecl 0x159928758  line:1:12 em_sysenter 'int (struct x86_emulate_ctxt *)' static   |-ParmVarDecl 0x159928648 <col:24, col:49> col:49 used ctxt 'struct x86_emulate_ctxt *'   `-CompoundStmt 0x159943f58 <line:2:1, line:59:1>     |-DeclStmt 0x159940c98 <line:3:2, col:47>     | |-RecordDecl 0x159940a50 <col:8, col:15> col:15 struct x86_emulate_ops     | `-VarDecl 0x159940bb8 <col:2, col:44> col:32 used ops 'const struct x86_emulate_ops *' cinit     |   `-RecoveryExpr 0x159940c58 <col:38, col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159940c20 <col:38> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     |-DeclStmt 0x159940eb8 <line:4:2, col:27>     | |-RecordDecl 0x159940cb0 <col:2, col:9> col:9 struct desc_struct     | |-VarDecl 0x159940da8 <col:2, col:21> col:21 referenced invalid cs 'struct desc_struct'     | `-VarDecl 0x159940e30 <col:2, col:25> col:25 invalid ss 'struct desc_struct'     |-CallExpr 0x159941040 <line:9:2, col:36> '<dependent type>' contains-errors     | |-RecoveryExpr 0x159940f20 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x159940ee8 <col:2> 'const struct x86_emulate_ops *' contains-errors lvalue Var 0x159940bb8 'ops' 'const struct x86_emulate_ops *'     | |-DeclRefExpr 0x159940f48 <col:15> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     | |-RecoveryExpr 0x159940fe8 <col:21> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x159941028 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x159941008 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159941360 <line:11:2, line:12:28>     | |-BinaryOperator 0x159941130 <line:11:6, col:20> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1599410b0 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x159941078 <col:6> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     | | `-RecoveryExpr 0x159941110 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x159941350 <line:12:3, col:28>     |   `-CallExpr 0x159941308 <col:10, col:28> 'int'     |     |-ImplicitCastExpr 0x1599412f0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x159941260 <col:10> 'int ()' Function 0x1599411a8 'emulate_gp' 'int ()'     |     |-ImplicitCastExpr 0x159941338 <col:21> 'struct x86_emulate_ctxt *' <LValueToRValue>     |     | `-DeclRefExpr 0x159941280 <col:21> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     |     `-IntegerLiteral 0x1599412a0 <col:27> 'int' 0     |-IfStmt 0x159941768 <line:15:2, line:17:25>     | |-RecoveryExpr 0x1599415c0 <line:15:6, line:16:27> '_Bool' contains-errors     | `-ReturnStmt 0x159941758 <line:17:3, col:25>     |   `-CallExpr 0x159941718 <col:10, col:25> 'int'     |     |-ImplicitCastExpr 0x159941700 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1599416c0 <col:10> 'int ()' Function 0x159941608 'emulate_ud' 'int ()'     |     `-ImplicitCastExpr 0x159941740 <col:21> 'struct x86_emulate_ctxt *' <LValueToRValue>     |       `-DeclRefExpr 0x1599416e0 <col:21> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     |-CallExpr 0x159943400 <line:23:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159941940 <col:2> 'int ()' Function 0x159941888 'setup_syscalls_segments' 'int ()'     | |-DeclRefExpr 0x159941960 <col:26> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     | |-UnaryOperator 0x1599419a0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x159941980 <col:33> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1599419d8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1599419b8 <col:38> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x159943530 <line:26:2, line:37:2>     | |-RecoveryExpr 0x1599434f0 <line:26:10, col:16> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1599434b8 <col:10> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     | `-CompoundStmt 0x159943810 <col:22, line:37:2>     |   |-IfStmt 0x159943688 <line:28:3, line:29:29>     |   | |-RecoveryExpr 0x159943598 <line:28:7, col:30> '_Bool' contains-errors     |   | `-ReturnStmt 0x159943678 <line:29:4, col:29>     |   |   `-CallExpr 0x159943630 <col:11, col:29> 'int'     |   |     |-ImplicitCastExpr 0x159943618 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1599435b8 <col:11> 'int ()' Function 0x1599411a8 'emulate_gp' 'int ()'     |   |     |-ImplicitCastExpr 0x159943660 <col:22> 'struct x86_emulate_ctxt *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1599435d8 <col:22> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     |   |     `-IntegerLiteral 0x1599435f8 <col:28> 'int' 0     |   |-BreakStmt 0x1599436a8 <line:30:3>     |   |-IfStmt 0x1599437c0 <line:32:3, line:33:29>     |   | |-RecoveryExpr 0x1599436d0 <line:32:7, col:19> '_Bool' contains-errors     |   | `-ReturnStmt 0x1599437b0 <line:33:4, col:29>     |   |   `-CallExpr 0x159943768 <col:11, col:29> 'int'     |   |     |-ImplicitCastExpr 0x159943750 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1599436f0 <col:11> 'int ()' Function 0x1599411a8 'emulate_gp' 'int ()'     |   |     |-ImplicitCastExpr 0x159943798 <col:22> 'struct x86_emulate_ctxt *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x159943710 <col:22> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x159928648 'ctxt' 'struct x86_emulate_ctxt *'     |   |     `-IntegerLiteral 0x159943730 <col:28> 'int' 0     |   |-BreakStmt 0x1599437e0 <line:34:3>     |   `-DefaultStmt 0x1599437f0 <line:35:2, line:36:3>     |     `-BreakStmt 0x1599437e8 <col:3>     `-IfStmt 0x159943b08 <line:44:2, line:47:2>       |-RecoveryExpr 0x159943928 <line:44:6, col:59> '_Bool' contains-errors       `-CompoundStmt 0x159943ae8 <col:62, line:47:2>         |-BinaryOperator 0x1599439f8 <line:45:3, col:10> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x159943990 <col:3, col:6> '<dependent type>' contains-errors lvalue .d         | | `-RecoveryExpr 0x159943968 <col:3> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x159943948 <col:3> 'struct desc_struct' lvalue Var 0x159940da8 'cs' 'struct desc_struct'         | `-IntegerLiteral 0x1599439d8 <col:10> 'int' 0         `-BinaryOperator 0x159943ac8 <line:46:3, col:10> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x159943a60 <col:3, col:6> '<dependent type>' contains-errors lvalue .l           | `-RecoveryExpr 0x159943a38 <col:3> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x159943a18 <col:3> 'struct desc_struct' lvalue Var 0x159940da8 'cs' 'struct desc_struct'           `-IntegerLiteral 0x159943aa8 <col:10> 'int' 1 ","21050":"`-FunctionDecl 0x14402a9f8  line:1:1 radix__hugetlb_get_unmapped_area 'int (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'   |-ParmVarDecl 0x14400e248 <col:34, col:47> col:47 used file 'struct file *'   |-ParmVarDecl 0x14400e2c8 <col:53, col:67> col:67 used addr 'unsigned long'   |-ParmVarDecl 0x14400e348 <line:2:5, col:19> col:19 used len 'unsigned long'   |-ParmVarDecl 0x14402a800 <col:24, col:38> col:38 pgoff 'unsigned long'   |-ParmVarDecl 0x14402a880 <line:3:5, col:19> col:19 used flags 'unsigned long'   `-CompoundStmt 0x143924680 <line:4:1, line:43:1>     |-DeclStmt 0x14402add8 <line:5:2, col:36>     | |-RecordDecl 0x14402ab10 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x14402ac78 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x14402ad78 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm     |     `-RecoveryExpr 0x14402ad58 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14402afd8 <line:6:2, col:28>     | |-RecordDecl 0x14402adf0 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x14402af58 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-DeclStmt 0x14402b3c8 <line:7:2, col:38>     | |-RecordDecl 0x14402aff0 <col:2, col:9> col:9 struct hstate     | `-VarDecl 0x14402b158 <col:2, col:37> col:17 used h 'struct hstate *' cinit     |   `-ImplicitCastExpr 0x14402b398 <col:21, col:37> 'struct hstate *' <IntegralToPointer>     |     `-CallExpr 0x14402b358 <col:21, col:37> 'int'     |       |-ImplicitCastExpr 0x14402b340 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14402b2d0 <col:21> 'int ()' Function 0x14402b218 'hstate_file' 'int ()'     |       `-ImplicitCastExpr 0x14402b380 <col:33> 'struct file *' <LValueToRValue>     |         `-DeclRefExpr 0x14402b2f0 <col:33> 'struct file *' lvalue ParmVar 0x14400e248 'file' 'struct file *'     |-DeclStmt 0x14402b558 <line:8:2, col:35>     | |-RecordDecl 0x14402b3e0 <col:2, col:9> col:9 struct vm_unmapped_area_info     | `-VarDecl 0x14402b4d8 <col:2, col:31> col:31 referenced invalid info 'struct vm_unmapped_area_info'     |-IfStmt 0x1450097a8 <line:10:2, line:11:28>     | |-CallExpr 0x145009660 <line:10:6, col:64> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14402b650 <col:6> 'int ()' Function 0x14402b598 'unlikely' 'int ()'     | | `-BinaryOperator 0x145009640 <col:15, col:55> 'int' contains-errors '&&'     | |   |-BinaryOperator 0x14402b738 <col:15, col:34> 'int' contains-errors '>'     | |   | |-DeclRefExpr 0x14402b670 <col:15> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     | |   | `-CXXDependentScopeMemberExpr 0x14402b6f0 <col:22, col:34> '<dependent type>' contains-errors lvalue .addr_limit     | |   |   `-RecoveryExpr 0x14402b6c8 <col:22, col:26> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x14402b690 <col:22> 'struct mm_struct *' contains-errors lvalue Var 0x14402ac78 'mm' 'struct mm_struct *'     | |   `-BinaryOperator 0x145009620 <col:48, col:55> 'int' contains-errors '<'     | |     |-DeclRefExpr 0x14402b758 <col:48> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     | |     `-RecoveryExpr 0x145009600 <col:55> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x145009788 <line:11:3, col:28> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x1450096e8 <col:3, col:15> '<dependent type>' contains-errors lvalue .addr_limit     |   | `-RecoveryExpr 0x1450096c0 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x145009688 <col:3> 'struct mm_struct *' contains-errors lvalue Var 0x14402ac78 'mm' 'struct mm_struct *'     |   `-RecoveryExpr 0x145009768 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145009a70 <line:13:2, line:14:11>     | |-BinaryOperator 0x1450099a8 <line:13:6, col:29> 'unsigned long' '&'     | | |-ImplicitCastExpr 0x145009978 <col:6> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x1450097c8 <col:6> 'unsigned long' lvalue ParmVar 0x14400e348 'len' 'unsigned long'     | | `-ImplicitCastExpr 0x145009990 <col:12, col:29> 'unsigned long' <IntegralCast>     | |   `-UnaryOperator 0x145009960 <col:12, col:29> 'int' prefix '~' cannot overflow     | |     `-CallExpr 0x145009920 <col:13, col:29> 'int'     | |       |-ImplicitCastExpr 0x145009908 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x1450098c8 <col:13> 'int ()' Function 0x145009810 'huge_page_mask' 'int ()'     | |       `-ImplicitCastExpr 0x145009948 <col:28> 'struct hstate *' <LValueToRValue>     | |         `-DeclRefExpr 0x1450098e8 <col:28> 'struct hstate *' lvalue Var 0x14402b158 'h' 'struct hstate *'     | `-ReturnStmt 0x145009a60 <line:14:3, col:11>     |   `-UnaryOperator 0x145009a48 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x145009a30 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x145009a10 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145009bd8 <line:15:2, line:16:11>     | |-BinaryOperator 0x145009b10 <line:15:6, col:16> 'int' contains-errors '>'     | | |-DeclRefExpr 0x145009a90 <col:6> 'unsigned long' lvalue ParmVar 0x14400e348 'len' 'unsigned long'     | | `-RecoveryExpr 0x145009ae8 <col:12, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x145009ab0 <col:12> 'struct mm_struct *' contains-errors lvalue Var 0x14402ac78 'mm' 'struct mm_struct *'     | `-ReturnStmt 0x145009bc8 <line:16:3, col:11>     |   `-UnaryOperator 0x145009bb0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x145009b98 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x145009b78 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145009fd0 <line:18:2, line:22:2>     | |-BinaryOperator 0x145009c70 <line:18:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x145009bf8 <col:6> 'unsigned long' lvalue ParmVar 0x14402a880 'flags' 'unsigned long'     | | `-RecoveryExpr 0x145009c50 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145009fb0 <col:25, line:22:2>     |   |-IfStmt 0x145009f30 <line:19:3, line:20:12>     |   | |-CallExpr 0x145009e08 <line:19:7, col:45> 'int'     |   | | |-ImplicitCastExpr 0x145009df0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x145009d70 <col:7> 'int ()' Function 0x145009cb8 'prepare_hugepage_range' 'int ()'     |   | | |-ImplicitCastExpr 0x145009e40 <col:30> 'struct file *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x145009d90 <col:30> 'struct file *' lvalue ParmVar 0x14400e248 'file' 'struct file *'     |   | | |-ImplicitCastExpr 0x145009e58 <col:36> 'unsigned long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x145009db0 <col:36> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     |   | | `-ImplicitCastExpr 0x145009e70 <col:42> 'unsigned long' <LValueToRValue>     |   | |   `-DeclRefExpr 0x145009dd0 <col:42> 'unsigned long' lvalue ParmVar 0x14400e348 'len' 'unsigned long'     |   | `-ReturnStmt 0x145009f20 <line:20:4, col:12>     |   |   `-UnaryOperator 0x145009f08 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x145009ef0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x145009ed0 <col:12> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x145009fa0 <line:21:3, col:10>     |     `-ImplicitCastExpr 0x145009f88 <col:10> 'int' <IntegralCast>     |       `-ImplicitCastExpr 0x145009f70 <col:10> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x145009f50 <col:10> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     |-IfStmt 0x143923ee8 <line:24:2, line:30:2>     | |-ImplicitCastExpr 0x14500a010 <line:24:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x145009ff0 <col:6> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     | `-CompoundStmt 0x143923ec0 <col:12, line:30:2>     |   |-BinaryOperator 0x14500a358 <line:25:3, col:39> 'unsigned long' '='     |   | |-DeclRefExpr 0x14500a028 <col:3> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     |   | `-ImplicitCastExpr 0x14500a340 <col:10, col:39> 'unsigned long' <IntegralCast>     |   |   `-CallExpr 0x14500a2f8 <col:10, col:39> 'int'     |   |     |-ImplicitCastExpr 0x14500a2e0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14500a128 <col:10> 'int ()' Function 0x14500a070 'ALIGN' 'int ()'     |   |     |-ImplicitCastExpr 0x14500a328 <col:16> 'unsigned long' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14500a148 <col:16> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     |   |     `-CallExpr 0x14500a2a0 <col:22, col:38> 'int'     |   |       |-ImplicitCastExpr 0x14500a288 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x14500a248 <col:22> 'int ()' Function 0x14500a190 'huge_page_size' 'int ()'     |   |       `-ImplicitCastExpr 0x14500a2c8 <col:37> 'struct hstate *' <LValueToRValue>     |   |         `-DeclRefExpr 0x14500a268 <col:37> 'struct hstate *' lvalue Var 0x14402b158 'h' 'struct hstate *'     |   |-BinaryOperator 0x14500a568 <line:26:3, col:26> 'struct vm_area_struct *' contains-errors '='     |   | |-DeclRefExpr 0x14500a378 <col:3> 'struct vm_area_struct *' lvalue Var 0x14402af58 'vma' 'struct vm_area_struct *'     |   | `-ImplicitCastExpr 0x14500a550 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x14500a4f0 <col:9, col:26> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x14500a4d8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14500a478 <col:9> 'int ()' Function 0x14500a3c0 'find_vma' 'int ()'     |   |     |-ImplicitCastExpr 0x14500a520 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x14500a498 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x14402ac78 'mm' 'struct mm_struct *'     |   |     `-ImplicitCastExpr 0x14500a538 <col:22> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x14500a4b8 <col:22> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     |   `-IfStmt 0x143923ea0 <line:27:3, line:29:11>     |     |-BinaryOperator 0x143923e20 <line:27:7, line:28:43> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x143923c60 <line:27:7, col:30> 'int' contains-errors '>='     |     | | |-BinaryOperator 0x143923c20 <col:7, col:23> '<dependent type>' contains-errors '-'     |     | | | |-RecoveryExpr 0x14500a5c0 <col:7, col:11> '<dependent type>' contains-errors lvalue     |     | | | | `-DeclRefExpr 0x14500a588 <col:7> 'struct mm_struct *' contains-errors lvalue Var 0x14402ac78 'mm' 'struct mm_struct *'     |     | | | `-DeclRefExpr 0x143923c00 <col:23> 'unsigned long' lvalue ParmVar 0x14400e348 'len' 'unsigned long'     |     | | `-DeclRefExpr 0x143923c40 <col:30> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     |     | `-ParenExpr 0x143923e00 <line:28:7, col:43> 'int' contains-errors     |     |   `-BinaryOperator 0x143923de0 <col:8, col:35> 'int' contains-errors '||'     |     |     |-UnaryOperator 0x143923cb8 <col:8, col:9> 'int' prefix '!' cannot overflow     |     |     | `-ImplicitCastExpr 0x143923ca0 <col:9> 'struct vm_area_struct *' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x143923c80 <col:9> 'struct vm_area_struct *' lvalue Var 0x14402af58 'vma' 'struct vm_area_struct *'     |     |     `-BinaryOperator 0x143923dc0 <col:16, col:35> 'int' contains-errors '<='     |     |       |-BinaryOperator 0x143923d40 <col:16, col:23> 'unsigned long' '+'     |     |       | |-ImplicitCastExpr 0x143923d10 <col:16> 'unsigned long' <LValueToRValue>     |     |       | | `-DeclRefExpr 0x143923cd0 <col:16> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     |     |       | `-ImplicitCastExpr 0x143923d28 <col:23> 'unsigned long' <LValueToRValue>     |     |       |   `-DeclRefExpr 0x143923cf0 <col:23> 'unsigned long' lvalue ParmVar 0x14400e348 'len' 'unsigned long'     |     |       `-RecoveryExpr 0x143923d98 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x143923d60 <col:30> 'struct vm_area_struct *' lvalue Var 0x14402af58 'vma' 'struct vm_area_struct *'     |     `-ReturnStmt 0x143923e90 <line:29:4, col:11>     |       `-ImplicitCastExpr 0x143923e78 <col:11> 'int' <IntegralCast>     |         `-ImplicitCastExpr 0x143923e60 <col:11> 'unsigned long' <LValueToRValue>     |           `-DeclRefExpr 0x143923e40 <col:11> 'unsigned long' lvalue ParmVar 0x14400e2c8 'addr' 'unsigned long'     |-BinaryOperator 0x143924048 <line:33:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143923fe0 <col:2, col:7> '<dependent type>' contains-errors lvalue .length     | | `-RecoveryExpr 0x143923fb8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x143923f98 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x14402b4d8 'info' 'struct vm_unmapped_area_info'     | `-DeclRefExpr 0x143924028 <col:16> 'unsigned long' lvalue ParmVar 0x14400e348 'len' 'unsigned long'     |-BinaryOperator 0x143924378 <line:37:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143924310 <col:2, col:7> '<dependent type>' contains-errors lvalue .align_offset     | | `-RecoveryExpr 0x1439242e8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1439242c8 <col:2> 'struct vm_unmapped_area_info' lvalue Var 0x14402b4d8 'info' 'struct vm_unmapped_area_info'     | `-IntegerLiteral 0x143924358 <col:22> 'int' 0     `-ReturnStmt 0x143924670 <line:42:2, col:31>       `-CallExpr 0x143924648 <col:9, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x1439245f0 <col:9> 'int ()' Function 0x143924538 'vm_unmapped_area' 'int ()'         `-UnaryOperator 0x143924630 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x143924610 <col:27> '<dependent type>' contains-errors lvalue ","20652":"`-FunctionDecl 0x149142918  col:29 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x149142a18 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1491429c0 <<invalid sloc>> Implicit 902 ","20767":"`-FunctionDecl 0x15100df18  line:1:13 invalid on_key_press_event_in_item_list 'int (int *, int *, int)' static   |-ParmVarDecl 0x15100dd28 <col:45, col:58> col:58 invalid treeview 'int *'   |-ParmVarDecl 0x15100dda8 <col:68, col:81> col:81 invalid key 'int *'   |-ParmVarDecl 0x15100de28 <col:86, col:95> col:95 invalid unused 'int'   `-CompoundStmt 0x1510266f8 <line:2:1, line:11:1>     |-DeclStmt 0x15100e0c0 <line:3:5, col:24>     | `-VarDecl 0x15100dff0 <col:5, col:18> col:9 used k 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x15100e078 <col:13, col:18> '<dependent type>' contains-errors lvalue ->keyval     |     `-RecoveryExpr 0x15100e058 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151026690 <line:5:5, line:9:5>     | |-BinaryOperator 0x15100e228 <line:5:9, col:37> 'int' contains-errors '||'     | | |-BinaryOperator 0x15100e1c8 <col:9, col:14> 'int' contains-errors '=='     | | | |-DeclRefExpr 0x15100e0d8 <col:9> 'int' contains-errors lvalue Var 0x15100dff0 'k' 'int'     | | | `-RecoveryExpr 0x15100e1a8 <col:14> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x15100e208 <col:32, col:37> 'int' contains-errors '=='     | |   |-DeclRefExpr 0x15100e130 <col:32> 'int' contains-errors lvalue Var 0x15100dff0 'k' 'int'     | |   `-RecoveryExpr 0x15100e1e8 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151026670 <line:6:5, line:9:5>     |   |-CallExpr 0x151026600 <line:7:9, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15100e3a0 <col:9> 'int ()' Function 0x15100e2e8 'delete_item' 'int ()'     |   | `-RecoveryExpr 0x15100e3c0 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x151026660 <line:8:9, col:16>     |     `-RecoveryExpr 0x151026640 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1510266e8 <line:10:5, col:12>       `-RecoveryExpr 0x1510266c8 <col:12> '<dependent type>' contains-errors lvalue ","20485":"`-FunctionDecl 0x131827600  line:1:13 invalid replmd_check_urgent_attribute 'int (const struct ldb_message_element *)' static   |-ParmVarDecl 0x13180ec68 <col:43, col:77> col:77 used el 'const struct ldb_message_element *'   `-CompoundStmt 0x1318279c0 <line:2:1, line:7:1>     `-IfStmt 0x131827988 <line:3:2, line:5:2>       |-CallExpr 0x1318278f8 <line:3:6, col:45> '<dependent type>' contains-errors       | |-DeclRefExpr 0x131827810 <col:6> 'int ()' Function 0x131827758 'ldb_attr_in_list' 'int ()'       | |-RecoveryExpr 0x1318278d8 <col:23> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x131827880 <col:37, col:41> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x131827848 <col:37> 'const struct ldb_message_element *' lvalue ParmVar 0x13180ec68 'el' 'const struct ldb_message_element *'       `-CompoundStmt 0x131827970 <col:48, line:5:2>         `-ReturnStmt 0x131827960 <line:4:3, col:10>           `-RecoveryExpr 0x131827940 <col:10> '<dependent type>' contains-errors lvalue ","21128":"`-FunctionDecl 0x1549281c8  line:1:1 invalid swiotlb_late_init_with_default_size 'int (int)'   |-ParmVarDecl 0x1549280f0 <col:37, col:44> col:44 invalid default_size 'int'   `-CompoundStmt 0x154943060 <line:2:1, line:39:1>     |-DeclStmt 0x1549285a0 <line:3:2, line:4:54>     | `-VarDecl 0x154928290 <line:3:2, line:4:53> line:3:16 used nslabs 'unsigned long' cinit     |   `-CallExpr 0x154928570 <line:4:3, col:53> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x154928450 <col:3> 'int ()' Function 0x154928398 'ALIGN' 'int ()'     |     |-BinaryOperator 0x154928530 <col:9, col:25> '<dependent type>' contains-errors '>>'     |     | |-RecoveryExpr 0x154928470 <col:9> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x154928510 <col:25> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x154928550 <col:39> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x154928638 <line:5:2, col:21>     | `-VarDecl 0x1549285d0 <col:2, col:16> col:16 used bytes 'unsigned long'     |-DeclStmt 0x154928738 <line:6:2, col:30>     | `-VarDecl 0x154928698 <col:2, col:26> col:17 used vstart 'unsigned char *' cinit     |   `-RecoveryExpr 0x154928718 <col:26> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1549287d0 <line:7:2, col:20>     | `-VarDecl 0x154928768 <col:2, col:15> col:15 used order 'unsigned int'     |-DeclStmt 0x154941888 <line:8:2, col:12>     | `-VarDecl 0x154941800 <col:2, col:11> col:6 used rc 'int' cinit     |   `-IntegerLiteral 0x154941868 <col:11> 'int' 0     |-IfStmt 0x154941980 <line:10:2, line:11:10>     | |-BinaryOperator 0x154941930 <line:10:6, col:23> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1549418f0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x154941910 <col:23> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x154941970 <line:11:3, col:10>     |   `-IntegerLiteral 0x154941950 <col:10> 'int' 0     |-BinaryOperator 0x154941bc8 <line:14:2, col:42> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x1549419a0 <col:2> 'unsigned int' lvalue Var 0x154928768 'order' 'unsigned int'     | `-CallExpr 0x154941ba0 <col:10, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154941aa0 <col:10> 'int ()' Function 0x1549419e8 'get_order' 'int ()'     |   `-BinaryOperator 0x154941b80 <col:20, col:30> '<dependent type>' contains-errors '<<'     |     |-DeclRefExpr 0x154941ac0 <col:20> 'unsigned long' contains-errors lvalue Var 0x154928290 'nslabs' 'unsigned long'     |     `-RecoveryExpr 0x154941b60 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154941cc0 <line:15:2, col:29> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x154941be8 <col:2> 'unsigned long' contains-errors lvalue Var 0x154928290 'nslabs' 'unsigned long'     | `-BinaryOperator 0x154941ca0 <col:11, col:29> '<dependent type>' contains-errors '<<'     |   |-RecoveryExpr 0x154941c80 <col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x154941c20 <col:29> 'unsigned int' lvalue Var 0x154928768 'order' 'unsigned int'     |-BinaryOperator 0x154941db8 <line:16:2, col:20> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x154941ce0 <col:2> 'unsigned long' lvalue Var 0x1549285d0 'bytes' 'unsigned long'     | `-BinaryOperator 0x154941d98 <col:10, col:20> '<dependent type>' contains-errors '<<'     |   |-DeclRefExpr 0x154941d00 <col:10> 'unsigned long' contains-errors lvalue Var 0x154928290 'nslabs' 'unsigned long'     |   `-RecoveryExpr 0x154941d78 <col:20> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x1549420f8 <line:18:2, line:24:2>     | |-RecoveryExpr 0x154941e48 <line:18:9, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x1549420d8 <col:55, line:24:2>     |   |-IfStmt 0x154942080 <line:21:3, line:22:4>     |   | |-ImplicitCastExpr 0x154942060 <line:21:7> 'unsigned char *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x154942040 <col:7> 'unsigned char *' contains-errors lvalue Var 0x154928698 'vstart' 'unsigned char *'     |   | `-BreakStmt 0x154942078 <line:22:4>     |   `-UnaryOperator 0x1549420c0 <line:23:3, col:8> 'unsigned int' postfix '--'     |     `-DeclRefExpr 0x1549420a0 <col:3> 'unsigned int' lvalue Var 0x154928768 'order' 'unsigned int'     |-IfStmt 0x154942210 <line:26:2, line:27:11>     | |-UnaryOperator 0x154942150 <line:26:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x154942138 <col:7> 'unsigned char *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x154942118 <col:7> 'unsigned char *' contains-errors lvalue Var 0x154928698 'vstart' 'unsigned char *'     | `-ReturnStmt 0x154942200 <line:27:3, col:11>     |   `-UnaryOperator 0x1549421e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1549421d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1549421b0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154942598 <line:29:2, line:33:2>     | |-BinaryOperator 0x154942348 <line:29:6, col:30> 'int' '!='     | | |-ImplicitCastExpr 0x154942318 <col:6> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x154942230 <col:6> 'unsigned int' lvalue Var 0x154928768 'order' 'unsigned int'     | | `-ImplicitCastExpr 0x154942330 <col:15, col:30> 'unsigned int' <IntegralCast>     | |   `-CallExpr 0x1549422d8 <col:15, col:30> 'int'     | |     |-ImplicitCastExpr 0x1549422c0 <col:15> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x154942250 <col:15> 'int ()' Function 0x1549419e8 'get_order' 'int ()'     | |     `-ImplicitCastExpr 0x154942300 <col:25> 'unsigned long' <LValueToRValue>     | |       `-DeclRefExpr 0x154942270 <col:25> 'unsigned long' lvalue Var 0x1549285d0 'bytes' 'unsigned long'     | `-CompoundStmt 0x154942588 <col:33, line:33:2>     |-BinaryOperator 0x154942790 <line:34:2, col:48> 'int' contains-errors '='     | |-DeclRefExpr 0x1549425b8 <col:2> 'int' lvalue Var 0x154941800 'rc' 'int'     | `-CallExpr 0x154942730 <col:7, col:48> 'int' contains-errors     |   |-ImplicitCastExpr 0x154942718 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1549426b8 <col:7> 'int ()' Function 0x154942600 'swiotlb_late_init_with_tbl' 'int ()'     |   |-ImplicitCastExpr 0x154942760 <col:34> 'unsigned char *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x1549426d8 <col:34> 'unsigned char *' contains-errors lvalue Var 0x154928698 'vstart' 'unsigned char *'     |   `-ImplicitCastExpr 0x154942778 <col:42> 'unsigned long' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x1549426f8 <col:42> 'unsigned long' contains-errors lvalue Var 0x154928290 'nslabs' 'unsigned long'     |-IfStmt 0x154942ff8 <line:35:2, line:36:42>     | |-ImplicitCastExpr 0x1549427d0 <line:35:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1549427b0 <col:6> 'int' lvalue Var 0x154941800 'rc' 'int'     | `-CallExpr 0x154942fb0 <line:36:3, col:42> 'int' contains-errors     |   |-ImplicitCastExpr 0x154942f98 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x154942ee0 <col:3> 'int ()' Function 0x154942e28 'free_pages' 'int ()'     |   |-CStyleCastExpr 0x154942f50 <col:14, col:29> 'unsigned long' contains-errors <PointerToIntegral>     |   | `-ImplicitCastExpr 0x154942f38 <col:29> 'unsigned char *' contains-errors <LValueToRValue> part_of_explicit_cast     |   |   `-DeclRefExpr 0x154942f00 <col:29> 'unsigned char *' contains-errors lvalue Var 0x154928698 'vstart' 'unsigned char *'     |   `-ImplicitCastExpr 0x154942fe0 <col:37> 'unsigned int' <LValueToRValue>     |     `-DeclRefExpr 0x154942f78 <col:37> 'unsigned int' lvalue Var 0x154928768 'order' 'unsigned int'     `-ReturnStmt 0x154943050 <line:38:2, col:9>       `-ImplicitCastExpr 0x154943038 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x154943018 <col:9> 'int' lvalue Var 0x154941800 'rc' 'int' ","20292":"`-FunctionDecl 0x1201282e8  line:1:25 invalid tjBufSize 'int (int, int, int)'   |-ParmVarDecl 0x1201280f0 <col:35, col:39> col:39 used width 'int'   |-ParmVarDecl 0x120128170 <col:46, col:50> col:50 used height 'int'   |-ParmVarDecl 0x1201281f0 <col:58, col:62> col:62 used jpegSubsamp 'int'   `-CompoundStmt 0x1201425c0 <line:2:1, line:17:1>     |-DeclStmt 0x120128460 <line:3:3, col:27>     | `-VarDecl 0x1201283c0 <col:3, col:26> col:17 used retval 'unsigned long' cinit     |   `-ImplicitCastExpr 0x120128448 <col:26> 'unsigned long' <IntegralCast>     |     `-IntegerLiteral 0x120128428 <col:26> 'int' 0     |-DeclStmt 0x120128618 <line:4:3, col:27>     | |-VarDecl 0x120128490 <col:3, col:7> col:7 used mcuw 'int'     | |-VarDecl 0x120128510 <col:3, col:13> col:13 used mcuh 'int'     | `-VarDecl 0x120128590 <col:3, col:19> col:19 used chromasf 'int'     |-IfStmt 0x120141ce8 <line:6:3, line:7:17>     | |-BinaryOperator 0x120141a68 <line:6:7, col:68> 'int' contains-errors '||'     | | |-BinaryOperator 0x120141a08 <col:7, col:48> 'int' '||'     | | | |-BinaryOperator 0x1201419b0 <col:7, col:29> 'int' '||'     | | | | |-BinaryOperator 0x120141958 <col:7, col:15> 'int' '<'     | | | | | |-ImplicitCastExpr 0x120141940 <col:7> 'int' <LValueToRValue>     | | | | | | `-DeclRefExpr 0x120128630 <col:7> 'int' lvalue ParmVar 0x1201280f0 'width' 'int'     | | | | | `-IntegerLiteral 0x120128650 <col:15> 'int' 1     | | | | `-BinaryOperator 0x120141990 <col:20, col:29> 'int' '<'     | | | |   |-ImplicitCastExpr 0x120141978 <col:20> 'int' <LValueToRValue>     | | | |   | `-DeclRefExpr 0x1201286a8 <col:20> 'int' lvalue ParmVar 0x120128170 'height' 'int'     | | | |   `-IntegerLiteral 0x1201286c8 <col:29> 'int' 1     | | | `-BinaryOperator 0x1201419e8 <col:34, col:48> 'int' '<'     | | |   |-ImplicitCastExpr 0x1201419d0 <col:34> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x120128740 <col:34> 'int' lvalue ParmVar 0x1201281f0 'jpegSubsamp' 'int'     | | |   `-IntegerLiteral 0x120128760 <col:48> 'int' 0     | | `-BinaryOperator 0x120141a48 <col:53, col:68> 'int' contains-errors '>='     | |   |-DeclRefExpr 0x1201287d8 <col:53> 'int' lvalue ParmVar 0x1201281f0 'jpegSubsamp' 'int'     | |   `-RecoveryExpr 0x120141a28 <col:68> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x120141ca8 <line:7:5, col:17> 'int'     |   |-ImplicitCastExpr 0x120141c90 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x120141be0 <col:5> 'int ()' Function 0x120141b28 'THROWG' 'int ()'     |   `-ImplicitCastExpr 0x120141cd0 <col:12> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x120141c40 <col:12> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x1201420d0 <line:12:3, col:68> 'int' contains-errors '='     | |-DeclRefExpr 0x120141db8 <col:3> 'int' lvalue Var 0x120128590 'chromasf' 'int'     | `-ConditionalOperator 0x1201420a0 <col:14, col:68> '<dependent type>' contains-errors     |   |-BinaryOperator 0x120141ff0 <col:14, col:29> 'int' contains-errors '=='     |   | |-DeclRefExpr 0x120141dd8 <col:14> 'int' lvalue ParmVar 0x1201281f0 'jpegSubsamp' 'int'     |   | `-RecoveryExpr 0x120141fd0 <col:29> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x120141e30 <col:43> 'int' 0     |   `-BinaryOperator 0x120142080 <col:47, col:68> 'int' '\/'     |     |-BinaryOperator 0x120141e90 <col:47, col:51> 'int' '*'     |     | |-IntegerLiteral 0x120141e50 <col:47> 'int' 4     |     | `-IntegerLiteral 0x120141e70 <col:51> 'int' 64     |     `-ParenExpr 0x120142060 <col:56, col:68> 'int'     |       `-BinaryOperator 0x120142040 <col:57, col:64> 'int' '*'     |         |-ImplicitCastExpr 0x120142010 <col:57> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x120141eb0 <col:57> 'int' lvalue Var 0x120128490 'mcuw' 'int'     |         `-ImplicitCastExpr 0x120142028 <col:64> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x120141ed0 <col:64> 'int' lvalue Var 0x120128510 'mcuh' 'int'     |-BinaryOperator 0x1201424d0 <line:13:3, col:68> 'unsigned long' '='     | |-DeclRefExpr 0x1201420f0 <col:3> 'unsigned long' lvalue Var 0x1201283c0 'retval' 'unsigned long'     | `-ImplicitCastExpr 0x1201424b8 <col:12, col:68> 'unsigned long' <IntegralCast>     |   `-BinaryOperator 0x120142498 <col:12, col:68> 'int' '+'     |     |-BinaryOperator 0x120142458 <col:12, col:64> 'int' '*'     |     | |-BinaryOperator 0x1201423a0 <col:12, col:47> 'int' '*'     |     | | |-CallExpr 0x120142268 <col:12, col:27> 'int'     |     | | | |-ImplicitCastExpr 0x120142250 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | | | | `-DeclRefExpr 0x1201421f0 <col:12> 'int ()' Function 0x120142138 'PAD' 'int ()'     |     | | | |-ImplicitCastExpr 0x120142298 <col:16> 'int' <LValueToRValue>     |     | | | | `-DeclRefExpr 0x120142210 <col:16> 'int' lvalue ParmVar 0x1201280f0 'width' 'int'     |     | | | `-ImplicitCastExpr 0x1201422b0 <col:23> 'int' <LValueToRValue>     |     | | |   `-DeclRefExpr 0x120142230 <col:23> 'int' lvalue Var 0x120128490 'mcuw' 'int'     |     | | `-CallExpr 0x120142340 <col:31, col:47> 'int'     |     | |   |-ImplicitCastExpr 0x120142328 <col:31> 'int (*)()' <FunctionToPointerDecay>     |     | |   | `-DeclRefExpr 0x1201422c8 <col:31> 'int ()' Function 0x120142138 'PAD' 'int ()'     |     | |   |-ImplicitCastExpr 0x120142370 <col:35> 'int' <LValueToRValue>     |     | |   | `-DeclRefExpr 0x1201422e8 <col:35> 'int' lvalue ParmVar 0x120128170 'height' 'int'     |     | |   `-ImplicitCastExpr 0x120142388 <col:43> 'int' <LValueToRValue>     |     | |     `-DeclRefExpr 0x120142308 <col:43> 'int' lvalue Var 0x120128510 'mcuh' 'int'     |     | `-ParenExpr 0x120142438 <col:51, col:64> 'int'     |     |   `-BinaryOperator 0x120142418 <col:52, col:56> 'int' '+'     |     |     |-IntegerLiteral 0x1201423c0 <col:52> 'int' 2     |     |     `-ImplicitCastExpr 0x120142400 <col:56> 'int' <LValueToRValue>     |     |       `-DeclRefExpr 0x1201423e0 <col:56> 'int' lvalue Var 0x120128590 'chromasf' 'int'     |     `-IntegerLiteral 0x120142478 <col:68> 'int' 2048     `-LabelStmt 0x1201425a0 <line:15:1, line:16:10> 'bailout'       `-ReturnStmt 0x120142540 <col:3, col:10>         `-ImplicitCastExpr 0x120142528 <col:10> 'int' <IntegralCast>           `-ImplicitCastExpr 0x120142510 <col:10> 'unsigned long' <LValueToRValue>             `-DeclRefExpr 0x1201424f0 <col:10> 'unsigned long' lvalue Var 0x1201283c0 'retval' 'unsigned long' ","20947":"`-FunctionDecl 0x13d00de58  line:1:1 invalid ecma_bigint_to_string 'int (int, int)'   |-ParmVarDecl 0x13d00dcf0 <col:24, col:37> col:37 invalid value 'int'   |-ParmVarDecl 0x13d00dd70 <line:2:24, col:44> col:44 invalid radix 'int'   `-CompoundStmt 0x13d0283b0 <line:3:1, line:33:1>     |-CallExpr 0x13d00e1d8 <line:4:3, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d00e070 <col:3> 'int ()' Function 0x13d00dfb8 'JERRY_ASSERT' 'int ()'     | `-CallExpr 0x13d00e1b0 <col:17, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d00e170 <col:17> 'int ()' Function 0x13d00e0b8 'ecma_is_value_bigint' 'int ()'     |   `-RecoveryExpr 0x13d00e190 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d027850 <line:6:3, line:9:3>     | |-BinaryOperator 0x13d00e278 <line:6:7, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13d00e200 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d00e258 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d027838 <line:7:3, line:9:3>     |   `-ReturnStmt 0x13d027828 <line:8:5, col:59>     |     `-CallExpr 0x13d027800 <col:12, col:59> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13d00e378 <col:12> 'int ()' Function 0x13d00e2c0 'ecma_new_ecma_string_from_code_unit' 'int ()'     |       `-RecoveryExpr 0x13d00e3d8 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d028100 <line:15:3, line:19:3>     | |-CallExpr 0x13d027d98 <line:15:7, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13d027ca0 <col:7> 'int ()' Function 0x13d027be8 'JERRY_UNLIKELY' 'int ()'     | | `-BinaryOperator 0x13d027d78 <col:23, col:42> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x13d027d38 <col:23> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13d027d58 <col:42> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d0280e8 <line:16:3, line:19:3>     |   `-CallExpr 0x13d0280c0 <line:17:5, col:49> 'int'     |     |-ImplicitCastExpr 0x13d0280a8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13d027ea0 <col:5> 'int ()' Function 0x13d027de8 'ecma_raise_range_error' 'int ()'     |     `-CallExpr 0x13d028068 <col:29, col:48> 'int'     |       |-ImplicitCastExpr 0x13d028050 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13d027fa0 <col:29> 'int ()' Function 0x13d027ee8 'ECMA_ERR_MSG' 'int ()'     |       `-ImplicitCastExpr 0x13d028090 <col:43> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x13d028000 <col:43> 'char[4]' lvalue \"STR\"     `-IfStmt 0x13d028190 <line:23:3, line:26:3>       |-RecoveryExpr 0x13d028160 <line:23:7, col:42> '_Bool' contains-errors       `-CompoundStmt 0x13d028180 <line:24:3, line:26:3> ","21048":"`-FunctionDecl 0x14682b778  line:1:6 invalid f2fs_init_extent_tree 'int (struct inode *, struct f2fs_extent *)'   |-ParmVarDecl 0x14680e268 <col:28, col:42> col:42 used inode 'struct inode *'   |-ParmVarDecl 0x14682b658 <col:49, col:69> col:69 used i_ext 'struct f2fs_extent *'   `-CompoundStmt 0x146122808 <line:2:1, line:37:1>     |-DeclStmt 0x14682bc58 <line:3:2, col:45>     | |-RecordDecl 0x14682b830 <col:2, col:9> col:9 struct f2fs_sb_info     | `-VarDecl 0x14682b998 <col:2, col:44> col:23 used sbi 'struct f2fs_sb_info *' cinit     |   `-ImplicitCastExpr 0x14682bc28 <col:29, col:44> 'struct f2fs_sb_info *' <IntegralToPointer>     |     `-CallExpr 0x14682bbe8 <col:29, col:44> 'int'     |       |-ImplicitCastExpr 0x14682bbd0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14682bb60 <col:29> 'int ()' Function 0x14682baa8 'F2FS_I_SB' 'int ()'     |       `-ImplicitCastExpr 0x14682bc10 <col:39> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x14682bb80 <col:39> 'struct inode *' lvalue ParmVar 0x14680e268 'inode' 'struct inode *'     |-DeclStmt 0x14682be58 <line:4:2, col:24>     | |-RecordDecl 0x14682bc70 <col:2, col:9> col:9 struct extent_tree     | `-VarDecl 0x14682bdd8 <col:2, col:22> col:22 used et 'struct extent_tree *'     |-DeclStmt 0x14682c058 <line:5:2, col:24>     | |-RecordDecl 0x14682be70 <col:2, col:9> col:9 struct extent_node     | `-VarDecl 0x14682bfd8 <col:2, col:22> col:22 used en 'struct extent_node *'     |-DeclStmt 0x14682c1e8 <line:6:2, col:23>     | |-RecordDecl 0x14682c070 <col:2, col:9> col:9 struct extent_info     | `-VarDecl 0x14682c168 <col:2, col:21> col:21 invalid ei 'struct extent_info'     |-IfStmt 0x14682c588 <line:8:2, line:15:2>     | |-UnaryOperator 0x14682c378 <line:8:6, col:33> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x14682c338 <col:7, col:33> 'int'     | |   |-ImplicitCastExpr 0x14682c320 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14682c2e0 <col:7> 'int ()' Function 0x14682c228 'f2fs_may_extent_tree' 'int ()'     | |   `-ImplicitCastExpr 0x14682c360 <col:28> 'struct inode *' <LValueToRValue>     | |     `-DeclRefExpr 0x14682c300 <col:28> 'struct inode *' lvalue ParmVar 0x14680e268 'inode' 'struct inode *'     | `-CompoundStmt 0x14682c570 <col:36, line:15:2>     |   `-IfStmt 0x14682c538 <line:10:3, line:13:3>     |     |-BinaryOperator 0x14682c410 <line:10:7, col:23> 'int' contains-errors '&&'     |     | |-DeclRefExpr 0x14682c390 <col:7> 'struct f2fs_extent *' lvalue ParmVar 0x14682b658 'i_ext' 'struct f2fs_extent *'     |     | `-RecoveryExpr 0x14682c3e8 <col:16, col:23> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14682c3b0 <col:16> 'struct f2fs_extent *' lvalue ParmVar 0x14682b658 'i_ext' 'struct f2fs_extent *'     |     `-CompoundStmt 0x14682c518 <col:28, line:13:3>     |       |-BinaryOperator 0x14682c4b0 <line:11:4, col:17> '<dependent type>' contains-errors '='     |       | |-RecoveryExpr 0x14682c468 <col:4, col:11> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x14682c430 <col:4> 'struct f2fs_extent *' lvalue ParmVar 0x14682b658 'i_ext' 'struct f2fs_extent *'     |       | `-IntegerLiteral 0x14682c490 <col:17> 'int' 0     |       `-ReturnStmt 0x14682c508 <line:12:4, col:11>     |         `-RecoveryExpr 0x14682c4e8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14682d168 <line:17:2, col:31> 'struct extent_tree *' '='     | |-DeclRefExpr 0x14682c5a8 <col:2> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *'     | `-ImplicitCastExpr 0x14682d150 <col:7, col:31> 'struct extent_tree *' <IntegralToPointer>     |   `-CallExpr 0x14682d110 <col:7, col:31> 'int'     |     |-ImplicitCastExpr 0x14682d0f8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14682d0b8 <col:7> 'int ()' Function 0x14682d000 '__grab_extent_tree' 'int ()'     |     `-ImplicitCastExpr 0x14682d138 <col:26> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x14682d0d8 <col:26> 'struct inode *' lvalue ParmVar 0x14680e268 'inode' 'struct inode *'     |-CallExpr 0x14682d478 <line:22:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14682d400 <col:2> 'int ()' Function 0x14682d348 'get_extent_info' 'int ()'     | |-UnaryOperator 0x14682d440 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14682d420 <col:19> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x14682d458 <col:23> 'struct f2fs_extent *' lvalue ParmVar 0x14682b658 'i_ext' 'struct f2fs_extent *'     |-CallExpr 0x14682d620 <line:24:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14682d588 <col:2> 'int ()' Function 0x14682d4d0 'write_lock' 'int ()'     | `-UnaryOperator 0x14682d608 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14682d5e0 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14682d5a8 <col:14> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *'     |-IfStmt 0x14682d850 <line:25:2, line:26:8>     | |-CallExpr 0x14682d7c0 <line:25:6, col:31> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14682d728 <col:6> 'int ()' Function 0x14682d670 'atomic_read' 'int ()'     | | `-UnaryOperator 0x14682d7a8 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x14682d780 <col:19, col:23> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14682d748 <col:19> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *'     | `-GotoStmt 0x14682d838 <line:26:3, col:8> 'out' 0x14682d7e8     |-BinaryOperator 0x14682da40 <line:28:2, col:38> 'struct extent_node *' contains-errors '='     | |-DeclRefExpr 0x14682d870 <col:2> 'struct extent_node *' lvalue Var 0x14682bfd8 'en' 'struct extent_node *'     | `-CallExpr 0x14682da08 <col:7, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14682d970 <col:7> 'int ()' Function 0x14682d8b8 '__init_extent_tree' 'int ()'     |   |-DeclRefExpr 0x14682d990 <col:26> 'struct f2fs_sb_info *' lvalue Var 0x14682b998 'sbi' 'struct f2fs_sb_info *'     |   |-DeclRefExpr 0x14682d9b0 <col:31> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *'     |   `-UnaryOperator 0x14682d9f0 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14682d9d0 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146122628 <line:29:2, line:33:2>     | |-ImplicitCastExpr 0x14682da80 <line:29:6> 'struct extent_node *' <LValueToRValue>     | | `-DeclRefExpr 0x14682da60 <col:6> 'struct extent_node *' lvalue Var 0x14682bfd8 'en' 'struct extent_node *'     | `-CompoundStmt 0x146122600 <col:10, line:33:2>     |   |-CallExpr 0x14682dc10 <line:30:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14682db78 <col:3> 'int ()' Function 0x14682dac0 'spin_lock' 'int ()'     |   | `-UnaryOperator 0x14682dbf8 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14682dbd0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14682db98 <col:14> 'struct f2fs_sb_info *' lvalue Var 0x14682b998 'sbi' 'struct f2fs_sb_info *'     |   |-CallExpr 0x14682de28 <line:31:3, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14682dd18 <col:3> 'int ()' Function 0x14682dc60 'list_add_tail' 'int ()'     |   | |-UnaryOperator 0x14682dd98 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x14682dd70 <col:18, col:22> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14682dd38 <col:18> 'struct extent_node *' lvalue Var 0x14682bfd8 'en' 'struct extent_node *'     |   | `-UnaryOperator 0x14682de10 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x14682dde8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14682ddb0 <col:29> 'struct f2fs_sb_info *' lvalue Var 0x14682b998 'sbi' 'struct f2fs_sb_info *'     |   `-CallExpr 0x14682dfd0 <line:32:3, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14682df38 <col:3> 'int ()' Function 0x14682de80 'spin_unlock' 'int ()'     |     `-UnaryOperator 0x14682dfb8 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14682df90 <col:16, col:21> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14682df58 <col:16> 'struct f2fs_sb_info *' lvalue Var 0x14682b998 'sbi' 'struct f2fs_sb_info *'     `-LabelStmt 0x1461227e8 <line:34:1, line:35:24> 'out'       `-CallExpr 0x1461227c0 <col:2, col:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x146122728 <col:2> 'int ()' Function 0x146122670 'write_unlock' 'int ()'         `-UnaryOperator 0x1461227a8 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x146122780 <col:16, col:20> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x146122748 <col:16> 'struct extent_tree *' lvalue Var 0x14682bdd8 'et' 'struct extent_tree *' ","21064":"`-FunctionDecl 0x14500e358  line:1:1 mii_set_media_pcs 'int (struct net_device *)'   |-ParmVarDecl 0x14500e248 <col:20, col:39> col:39 used dev 'struct net_device *'   `-CompoundStmt 0x146009a48 <line:2:1, line:50:1>     |-DeclStmt 0x1450266e8 <line:6:2, col:14>     | `-VarDecl 0x145026680 <col:2, col:6> col:6 used phy_addr 'int'     |-DeclStmt 0x1450268e8 <line:7:2, col:27>     | |-RecordDecl 0x145026700 <col:2, col:9> col:9 struct netdev_private     | `-VarDecl 0x145026868 <col:2, col:25> col:25 used np 'struct netdev_private *'     |-BinaryOperator 0x145026b10 <line:8:2, col:22> 'struct netdev_private *' '='     | |-DeclRefExpr 0x145026900 <col:2> 'struct netdev_private *' lvalue Var 0x145026868 'np' 'struct netdev_private *'     | `-ImplicitCastExpr 0x145026af8 <col:7, col:22> 'struct netdev_private *' <IntegralToPointer>     |   `-CallExpr 0x145026ab8 <col:7, col:22> 'int'     |     |-ImplicitCastExpr 0x145026aa0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x145026a30 <col:7> 'int ()' Function 0x145026978 'netdev_priv' 'int ()'     |     `-ImplicitCastExpr 0x145026ae0 <col:19> 'struct net_device *' <LValueToRValue>     |       `-DeclRefExpr 0x145026a50 <col:19> 'struct net_device *' lvalue ParmVar 0x14500e248 'dev' 'struct net_device *'     |-BinaryOperator 0x145026bb0 <line:9:2, col:17> 'int' contains-errors '='     | |-DeclRefExpr 0x145026b30 <col:2> 'int' lvalue Var 0x145026680 'phy_addr' 'int'     | `-RecoveryExpr 0x145026b88 <col:13, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x145026b50 <col:13> 'struct netdev_private *' lvalue Var 0x145026868 'np' 'struct netdev_private *'     |-IfStmt 0x1460099e8 <line:12:2, line:48:2> has_else     | |-RecoveryExpr 0x145026c08 <line:12:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x145026bd0 <col:6> 'struct netdev_private *' lvalue Var 0x145026868 'np' 'struct netdev_private *'     | |-CompoundStmt 0x145027360 <col:21, line:30:2>     | | `-CallExpr 0x145027338 <line:29:3, col:11> 'int'     | |   |-ImplicitCastExpr 0x145027320 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1450272e0 <col:3> 'int ()' Function 0x145027228 'mdelay' 'int ()'     | |   `-IntegerLiteral 0x145027300 <col:10> 'int' 1     | `-CompoundStmt 0x1460099c0 <line:30:9, line:48:2>     |   |-CallExpr 0x145027430 <line:35:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x145027418 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1450273d8 <col:3> 'int ()' Function 0x145027228 'mdelay' 'int ()'     |   | `-IntegerLiteral 0x1450273f8 <col:10> 'int' 10     |   |-IfStmt 0x146009830 <line:36:3, line:42:3> has_else     |   | |-RecoveryExpr 0x145027490 <line:36:7, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x145027458 <col:7> 'struct netdev_private *' lvalue Var 0x145026868 'np' 'struct netdev_private *'     |   | |-CompoundStmt 0x1450275b8 <col:24, line:39:3>     |   | `-CompoundStmt 0x146009820 <col:10, line:42:3>     |   `-CallExpr 0x146009918 <line:44:3, col:12> 'int'     |     |-ImplicitCastExpr 0x146009900 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1460098c0 <col:3> 'int ()' Function 0x145027228 'mdelay' 'int ()'     |     `-IntegerLiteral 0x1460098e0 <col:10> 'int' 10     `-ReturnStmt 0x146009a38 <line:49:2, col:9>       `-IntegerLiteral 0x146009a18 <col:9> 'int' 0 ","20757":"`-FunctionDecl 0x13011fe80  line:1:13 invalid dump_tokens 'void (int *, int *)' static   |-ParmVarDecl 0x13011fd28 <col:25, col:38> col:38 invalid r 'int *'   |-ParmVarDecl 0x13011fda8 <col:41, col:61> col:61 invalid tokens 'int *'   `-CompoundStmt 0x13013a5d8 <line:2:1, line:12:1>     `-ForStmt 0x13013a5a0 <line:5:5, line:11:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x130120050 <line:5:17, col:29> 'int' contains-errors '<'       | |-RecoveryExpr 0x130120030 <col:17> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x13011ffc8 <col:21, col:29> '<dependent type>' contains-errors lvalue ->nelts       |   `-RecoveryExpr 0x13011ffa8 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x1301200c0 <col:36, col:37> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x1301200a0 <col:36> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13013a588 <col:41, line:11:5>         `-CallExpr 0x13013a518 <line:7:9, line:10:46> '<dependent type>' contains-errors           |-DeclRefExpr 0x130120230 <line:7:9> 'int ()' Function 0x130120178 'ap_log_rerror' 'int ()'           |-RecoveryExpr 0x13013a2f0 <col:23> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x13013a310 <col:35> '<dependent type>' contains-errors lvalue           |-IntegerLiteral 0x130120280 <col:48> 'int' 0           |-RecoveryExpr 0x1301202a0 <col:51> '<dependent type>' contains-errors lvalue           |-StringLiteral 0x130120300 <line:8:23> 'char[4]' lvalue \"STR\"           |-RecoveryExpr 0x13013a330 <col:30> '<dependent type>' contains-errors lvalue           |-CallExpr 0x13013a3b8 <line:9:23, col:48> '<dependent type>' contains-errors           | |-DeclRefExpr 0x13013a0b8 <col:23> 'int ()' Function 0x13013a000 'token_type_str' 'int ()'           | `-CXXDependentScopeMemberExpr 0x13013a370 <col:38, col:44> '<dependent type>' contains-errors lvalue .type           |   `-RecoveryExpr 0x13013a350 <col:38> '<dependent type>' contains-errors lvalue           |-CXXDependentScopeMemberExpr 0x13013a400 <col:51, col:57> '<dependent type>' contains-errors lvalue .str           | `-RecoveryExpr 0x13013a3e0 <col:51> '<dependent type>' contains-errors lvalue           |-CXXDependentScopeMemberExpr 0x13013a468 <line:10:23, col:29> '<dependent type>' contains-errors lvalue .offset           | `-RecoveryExpr 0x13013a448 <col:23> '<dependent type>' contains-errors lvalue           `-CXXDependentScopeMemberExpr 0x13013a4d0 <col:37, col:43> '<dependent type>' contains-errors lvalue .len             `-RecoveryExpr 0x13013a4b0 <col:37> '<dependent type>' contains-errors lvalue ","20837":"`-FunctionDecl 0x11d141618  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x11d141718 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x11d141780 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x11d1416c0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x11d1417f8 <col:9> Implicit printf 2 3 ","21175":"`-FunctionDecl 0x150827ec8  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x150827fc8 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x150828030 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x150827f70 <<invalid sloc>> Implicit 906   `-FormatAttr 0x1508280a8 <col:9> Implicit printf 2 3 ","21013":"`-FunctionDecl 0x155026ca0  col:33 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x155026da0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x155026d48 <<invalid sloc>> Implicit 902 ","21210":"`-FunctionDecl 0x143928200  line:1:13 referenced invalid StridedSlice 'void (const int)' inline   |-ParmVarDecl 0x1439280f0 <col:26, <invalid sloc>> col:38 invalid 'const int'   `-CompoundStmt 0x143928638 <line:5:42, line:9:1> ","20704":"`-FunctionDecl 0x15a027278  line:1:12 skcipher_crypt_blkcipher 'int (struct skcipher_request *, int (*)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int))' static   |-ParmVarDecl 0x15a00e848 <col:37, col:62> col:62 used req 'struct skcipher_request *'   |-ParmVarDecl 0x15a027158 <line:2:9, line:5:20> line:2:15 used crypt 'int (*)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int)'   `-CompoundStmt 0x15a029548 <line:6:1, line:17:1>     |-DeclStmt 0x15a027778 <line:7:2, col:59>     | |-RecordDecl 0x15a027378 <col:2, col:9> col:9 struct crypto_skcipher     | `-VarDecl 0x15a0274e8 <col:2, col:58> col:26 used tfm 'struct crypto_skcipher *' cinit     |   `-ImplicitCastExpr 0x15a027748 <col:32, col:58> 'struct crypto_skcipher *' <IntegralToPointer>     |     `-CallExpr 0x15a027708 <col:32, col:58> 'int'     |       |-ImplicitCastExpr 0x15a0276f0 <col:32> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15a027680 <col:32> 'int ()' Function 0x15a0275c8 'crypto_skcipher_reqtfm' 'int ()'     |       `-ImplicitCastExpr 0x15a027730 <col:55> 'struct skcipher_request *' <LValueToRValue>     |         `-DeclRefExpr 0x15a0276a0 <col:55> 'struct skcipher_request *' lvalue ParmVar 0x15a00e848 'req' 'struct skcipher_request *'     |-DeclStmt 0x15a027b68 <line:8:2, col:58>     | |-RecordDecl 0x15a027790 <col:2, col:9> col:9 struct crypto_blkcipher     | `-VarDecl 0x15a027958 <col:2, col:57> col:28 used ctx 'struct crypto_blkcipher **' cinit     |   `-ImplicitCastExpr 0x15a027b38 <col:34, col:57> 'struct crypto_blkcipher **' <IntegralToPointer>     |     `-CallExpr 0x15a027af8 <col:34, col:57> 'int'     |       |-ImplicitCastExpr 0x15a027ae0 <col:34> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15a027aa0 <col:34> 'int ()' Function 0x15a0279e8 'crypto_skcipher_ctx' 'int ()'     |       `-ImplicitCastExpr 0x15a027b20 <col:54> 'struct crypto_skcipher *' <LValueToRValue>     |         `-DeclRefExpr 0x15a027ac0 <col:54> 'struct crypto_skcipher *' lvalue Var 0x15a0274e8 'tfm' 'struct crypto_skcipher *'     |-DeclStmt 0x15a029368 <line:9:2, line:13:3>     | |-RecordDecl 0x15a027b80 <line:9:2, col:9> col:9 struct blkcipher_desc     | `-VarDecl 0x15a029078 <col:2, col:24> col:24 invalid desc 'struct blkcipher_desc'     `-ReturnStmt 0x15a029538 <line:16:2, col:55>       `-CallExpr 0x15a0294f8 <col:9, col:55> '<dependent type>' contains-errors         |-DeclRefExpr 0x15a029380 <col:9> 'int (*)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int)' lvalue ParmVar 0x15a027158 'crypt' 'int (*)(struct blkcipher_desc *, struct scatterlist *, struct scatterlist *, unsigned int)'         |-UnaryOperator 0x15a0293c0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x15a0293a0 <col:16> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x15a029410 <col:22, col:27> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x15a0293d8 <col:22> 'struct skcipher_request *' lvalue ParmVar 0x15a00e848 'req' 'struct skcipher_request *'         |-RecoveryExpr 0x15a029470 <col:32, col:37> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x15a029438 <col:32> 'struct skcipher_request *' lvalue ParmVar 0x15a00e848 'req' 'struct skcipher_request *'         `-RecoveryExpr 0x15a0294d0 <col:42, col:47> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x15a029498 <col:42> 'struct skcipher_request *' lvalue ParmVar 0x15a00e848 'req' 'struct skcipher_request *' ","20425":"`-FunctionDecl 0x157140b48  line:1:22 mb2_cache_scan 'unsigned long (struct shrinker *, struct shrink_control *)' static   |-ParmVarDecl 0x157128648 <col:37, col:54> col:54 used shrink 'struct shrinker *'   |-ParmVarDecl 0x157140a28 <line:2:9, col:32> col:32 used sc 'struct shrink_control *'   `-CompoundStmt 0x16000a5d0 <line:3:1, line:34:1>     |-DeclStmt 0x157140d28 <line:4:2, col:33>     | `-VarDecl 0x157140c60 <col:2, col:23> col:6 used nr_to_scan 'int' cinit     |   `-RecoveryExpr 0x157140d00 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157140cc8 <col:19> 'struct shrink_control *' lvalue ParmVar 0x157140a28 'sc' 'struct shrink_control *'     |-DeclStmt 0x1571410d0 <line:5:2, line:6:21>     | |-RecordDecl 0x157140d40 <line:5:2, col:9> col:9 struct mb2_cache     | `-VarDecl 0x157140ea8 <col:2, col:20> col:20 used cache 'struct mb2_cache *'     |-DeclStmt 0x1571412d8 <line:7:2, col:31>     | |-RecordDecl 0x1571410e8 <col:2, col:9> col:9 struct mb2_cache_entry     | `-VarDecl 0x157141258 <col:2, col:26> col:26 used entry 'struct mb2_cache_entry *'     |-DeclStmt 0x1571414d8 <line:8:2, col:28>     | |-RecordDecl 0x1571412f0 <col:2, col:9> col:9 struct hlist_bl_head     | `-VarDecl 0x157141458 <col:2, col:24> col:24 used head 'struct hlist_bl_head *'     |-DeclStmt 0x1571415a8 <line:9:2, col:25>     | `-VarDecl 0x157141508 <col:2, col:24> col:15 used shrunk 'unsigned int' cinit     |   `-ImplicitCastExpr 0x157141590 <col:24> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x157141570 <col:24> 'int' 0     |-CallExpr 0x157141738 <line:11:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1571416a0 <col:2> 'int ()' Function 0x1571415e8 'spin_lock' 'int ()'     | `-UnaryOperator 0x157141720 <col:12, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1571416f8 <col:13, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1571416c0 <col:13> 'struct mb2_cache *' lvalue Var 0x157140ea8 'cache' 'struct mb2_cache *'     |-WhileStmt 0x16000a490 <line:12:2, line:30:2>     | |-BinaryOperator 0x157141950 <line:12:9, col:55> 'int' contains-errors '&&'     | | |-UnaryOperator 0x157141780 <col:9, col:19> 'int' contains-errors postfix '--'     | | | `-DeclRefExpr 0x157141760 <col:9> 'int' contains-errors lvalue Var 0x157140c60 'nr_to_scan' 'int'     | | `-UnaryOperator 0x157141938 <col:25, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x157141910 <col:26, col:55> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x157141878 <col:26> 'int ()' Function 0x1571417c0 'list_empty' 'int ()'     | |     `-UnaryOperator 0x1571418f8 <col:37, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     | |       `-RecoveryExpr 0x1571418d0 <col:38, col:45> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x157141898 <col:38> 'struct mb2_cache *' lvalue Var 0x157140ea8 'cache' 'struct mb2_cache *'     | `-CompoundStmt 0x16000a430 <col:58, line:30:2>     |   |-CallExpr 0x1600094e0 <line:15:3, col:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x160009448 <col:3> 'int ()' Function 0x160009390 'list_del_init' 'int ()'     |   | `-UnaryOperator 0x1600094c8 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1600094a0 <col:18, col:25> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x160009468 <col:18> 'struct mb2_cache_entry *' lvalue Var 0x157141258 'entry' 'struct mb2_cache_entry *'     |   |-UnaryOperator 0x160009568 <line:16:3, col:23> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-RecoveryExpr 0x160009540 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x160009508 <col:3> 'struct mb2_cache *' lvalue Var 0x157140ea8 'cache' 'struct mb2_cache *'     |   |-CallExpr 0x1600096f8 <line:18:3, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x160009660 <col:3> 'int ()' Function 0x1600095a8 'spin_unlock' 'int ()'     |   | `-UnaryOperator 0x1600096e0 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1600096b8 <col:16, col:23> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x160009680 <col:16> 'struct mb2_cache *' lvalue Var 0x157140ea8 'cache' 'struct mb2_cache *'     |   |-BinaryOperator 0x1600097a0 <line:19:3, col:17> 'struct hlist_bl_head *' contains-errors '='     |   | |-DeclRefExpr 0x160009720 <col:3> 'struct hlist_bl_head *' lvalue Var 0x157141458 'head' 'struct hlist_bl_head *'     |   | `-RecoveryExpr 0x160009778 <col:10, col:17> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x160009740 <col:10> 'struct mb2_cache_entry *' lvalue Var 0x157141258 'entry' 'struct mb2_cache_entry *'     |   |-CallExpr 0x160009928 <line:20:3, col:21> 'int'     |   | |-ImplicitCastExpr 0x160009910 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1600098a0 <col:3> 'int ()' Function 0x1600097e8 'hlist_bl_lock' 'int ()'     |   | `-ImplicitCastExpr 0x160009950 <col:17> 'struct hlist_bl_head *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1600098c0 <col:17> 'struct hlist_bl_head *' lvalue Var 0x157141458 'head' 'struct hlist_bl_head *'     |   |-IfStmt 0x160009e80 <line:21:3, line:24:3>     |   | |-UnaryOperator 0x160009b08 <line:21:7, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x160009ae0 <col:8, col:45> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x160009a48 <col:8> 'int ()' Function 0x160009990 'hlist_bl_unhashed' 'int ()'     |   | |   `-UnaryOperator 0x160009ac8 <col:26, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |     `-RecoveryExpr 0x160009aa0 <col:27, col:34> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x160009a68 <col:27> 'struct mb2_cache_entry *' lvalue Var 0x157141258 'entry' 'struct mb2_cache_entry *'     |   | `-CompoundStmt 0x160009e60 <col:48, line:24:3>     |   |   |-CallExpr 0x160009c98 <line:22:4, col:41> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x160009c00 <col:4> 'int ()' Function 0x160009b48 'hlist_bl_del_init' 'int ()'     |   |   | `-UnaryOperator 0x160009c80 <col:22, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x160009c58 <col:23, col:30> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x160009c20 <col:23> 'struct mb2_cache_entry *' lvalue Var 0x157141258 'entry' 'struct mb2_cache_entry *'     |   |   `-CallExpr 0x160009e38 <line:23:4, col:31> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x160009da0 <col:4> 'int ()' Function 0x160009ce8 'atomic_dec' 'int ()'     |   |     `-UnaryOperator 0x160009e20 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       `-RecoveryExpr 0x160009df8 <col:16, col:23> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x160009dc0 <col:16> 'struct mb2_cache_entry *' lvalue Var 0x157141258 'entry' 'struct mb2_cache_entry *'     |   |-CallExpr 0x160009fd8 <line:25:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x160009fc0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x160009f80 <col:3> 'int ()' Function 0x160009ec8 'hlist_bl_unlock' 'int ()'     |   | `-ImplicitCastExpr 0x16000a000 <col:19> 'struct hlist_bl_head *' <LValueToRValue>     |   |   `-DeclRefExpr 0x160009fa0 <col:19> 'struct hlist_bl_head *' lvalue Var 0x157141458 'head' 'struct hlist_bl_head *'     |   |-IfStmt 0x16000a218 <line:26:3, line:27:10>     |   | |-CallExpr 0x16000a170 <line:26:7, col:39> 'int'     |   | | |-ImplicitCastExpr 0x16000a158 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x16000a0f8 <col:7> 'int ()' Function 0x16000a040 'mb2_cache_entry_put' 'int ()'     |   | | |-ImplicitCastExpr 0x16000a1a0 <col:27> 'struct mb2_cache *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x16000a118 <col:27> 'struct mb2_cache *' lvalue Var 0x157140ea8 'cache' 'struct mb2_cache *'     |   | | `-ImplicitCastExpr 0x16000a1b8 <col:34> 'struct mb2_cache_entry *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x16000a138 <col:34> 'struct mb2_cache_entry *' lvalue Var 0x157141258 'entry' 'struct mb2_cache_entry *'     |   | `-UnaryOperator 0x16000a200 <line:27:4, col:10> 'unsigned int' postfix '++'     |   |   `-DeclRefExpr 0x16000a1d0 <col:4> 'unsigned int' lvalue Var 0x157141508 'shrunk' 'unsigned int'     |   |-CallExpr 0x16000a350 <line:28:3, col:16> 'int'     |   | `-ImplicitCastExpr 0x16000a338 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x16000a318 <col:3> 'int ()' Function 0x16000a260 'cond_resched' 'int ()'     |   `-CallExpr 0x16000a408 <line:29:3, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x16000a370 <col:3> 'int ()' Function 0x1571415e8 'spin_lock' 'int ()'     |     `-UnaryOperator 0x16000a3f0 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x16000a3c8 <col:14, col:21> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x16000a390 <col:14> 'struct mb2_cache *' lvalue Var 0x157140ea8 'cache' 'struct mb2_cache *'     |-CallExpr 0x16000a548 <line:31:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x16000a4b0 <col:2> 'int ()' Function 0x1600095a8 'spin_unlock' 'int ()'     | `-UnaryOperator 0x16000a530 <col:14, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x16000a508 <col:15, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x16000a4d0 <col:15> 'struct mb2_cache *' lvalue Var 0x157140ea8 'cache' 'struct mb2_cache *'     `-ReturnStmt 0x16000a5c0 <line:33:2, col:9>       `-ImplicitCastExpr 0x16000a5a8 <col:9> 'unsigned long' <IntegralCast>         `-ImplicitCastExpr 0x16000a590 <col:9> 'unsigned int' <LValueToRValue>           `-DeclRefExpr 0x16000a570 <col:9> 'unsigned int' lvalue Var 0x157141508 'shrunk' 'unsigned int' ","20391":"`-FunctionDecl 0x14800de80  line:1:10 invalid copyBytes 'void (int *, int)'   |-ParmVarDecl 0x14800dd28 <col:20, col:30> col:30 referenced invalid is 'int *'   |-ParmVarDecl 0x14800dda8 <col:34, col:38> col:38 used length 'int'   `-CompoundStmt 0x148027ed0 <col:46, line:8:5>     `-WhileStmt 0x148027eb0 <line:2:7, line:7:7>       |-BinaryOperator 0x14800df90 <line:2:14, col:23> 'int' '>'       | |-ImplicitCastExpr 0x14800df78 <col:14> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x14800df38 <col:14> 'int' lvalue ParmVar 0x14800dda8 'length' 'int'       | `-IntegerLiteral 0x14800df58 <col:23> 'int' 0       `-CompoundStmt 0x148027e88 <col:26, line:7:7>         |-DeclStmt 0x14800e280 <line:3:9, col:33>         | `-VarDecl 0x14800dfc8 <col:9, col:32> col:13 used n 'int' cinit         |   `-CallExpr 0x14800e238 <col:17, col:32> 'int'         |     |-ImplicitCastExpr 0x14800e220 <col:17> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x14800e190 <col:17> 'int ()' Function 0x14800e0d8 'check' 'int ()'         |     |-IntegerLiteral 0x14800e1b0 <col:23> 'int' 1         |     `-ImplicitCastExpr 0x14800e268 <col:26> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x14800e1d0 <col:26> 'int' lvalue ParmVar 0x14800dda8 'length' 'int'         |-CallExpr 0x14800e3b0 <line:4:9, col:29> '<dependent type>' contains-errors         | |-CXXDependentScopeMemberExpr 0x14800e2e0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->readBytes         | | `-RecoveryExpr 0x14800e2b8 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14800e298 <col:9> 'int *' lvalue ParmVar 0x14800dd28 'is' 'int *'         | |-RecoveryExpr 0x14800e390 <col:23> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x14800e340 <col:28> 'int' lvalue Var 0x14800dfc8 'n' 'int'         `-CompoundAssignOperator 0x148027e58 <line:6:9, col:19> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'           |-DeclRefExpr 0x148027e00 <col:9> 'int' lvalue ParmVar 0x14800dda8 'length' 'int'           `-ImplicitCastExpr 0x148027e40 <col:19> 'int' <LValueToRValue>             `-DeclRefExpr 0x148027e20 <col:19> 'int' lvalue Var 0x14800dfc8 'n' 'int' ","20472":"`-FunctionDecl 0x13200de88  line:1:1 invalid e1000e_intrmgr_delay_tx_causes 'int (int *, int *)'   |-ParmVarDecl 0x13200dd28 <col:32, col:44> col:44 referenced invalid core 'int *'   |-ParmVarDecl 0x13200dda8 <col:50, col:60> col:60 invalid causes 'int *'   `-CompoundStmt 0x133009018 <line:2:1, line:29:1>     |-DeclStmt 0x13200e080 <line:3:5, line:6:60>     | `-VarDecl 0x13200df58 <line:3:5, col:27> col:27 invalid delayable_causes 'const int' static     |-IfStmt 0x13200e2c8 <line:8:5, line:10:5>     | |-CallExpr 0x13200e278 <line:8:9, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13200e1f0 <col:9> 'int ()' Function 0x13200e138 'msix_enabled' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x13200e230 <col:22, col:28> '<dependent type>' contains-errors lvalue ->owner     | |   `-RecoveryExpr 0x13200e210 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13200e2b8 <col:36, line:10:5>     |-CompoundAssignOperator 0x1330088a0 <line:13:5, col:39> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x13200e330 <col:5, col:11> '<dependent type>' contains-errors lvalue ->delayed_causes     | | `-RecoveryExpr 0x13200e308 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13200e2e8 <col:5> 'int *' lvalue ParmVar 0x13200dd28 'core' 'int *'     | `-BinaryOperator 0x133008880 <col:29, col:39> '<dependent type>' contains-errors '&'     |   |-UnaryOperator 0x133008868 <col:29, col:30> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x133008850 <col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x13200e378 <col:30> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13200e3c8 <col:39> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x133008a00 <line:14:5, col:17> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-UnaryOperator 0x1330089b8 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1330089a0 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1330088d0 <col:6> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1330089e8 <col:16, col:17> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x1330089d0 <col:17> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x133008920 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133008b38 <line:17:5, line:19:5>     | |-BinaryOperator 0x133008af0 <line:17:9, col:20> 'int' contains-errors '!='     | | |-UnaryOperator 0x133008ad8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x133008ac0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x133008a30 <col:10> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x133008a80 <col:20> 'int' 0     | `-CompoundStmt 0x133008b28 <col:23, line:19:5>     |-CallExpr 0x133008cd8 <line:22:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133008c38 <col:5> 'int ()' Function 0x133008b80 'e1000e_intrmgr_rearm_timer' 'int ()'     | `-UnaryOperator 0x133008cc0 <col:32, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x133008c78 <col:33, col:39> '<dependent type>' contains-errors lvalue ->tidv     |     `-RecoveryExpr 0x133008c58 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133008fb0 <line:24:5, line:26:5>     | |-RecoveryExpr 0x133008eb0 <line:24:9, col:53> '_Bool' contains-errors     | `-CompoundStmt 0x133008f98 <col:56, line:26:5>     |   `-CallExpr 0x133008f70 <line:25:9, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x133008ed0 <col:9> 'int ()' Function 0x133008b80 'e1000e_intrmgr_rearm_timer' 'int ()'     |     `-UnaryOperator 0x133008f58 <col:36, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-CXXDependentScopeMemberExpr 0x133008f10 <col:37, col:43> '<dependent type>' contains-errors lvalue ->tadv     |         `-RecoveryExpr 0x133008ef0 <col:37> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x133009008 <line:28:5, col:12>       `-RecoveryExpr 0x133008fe8 <col:12> '<dependent type>' contains-errors lvalue ","20584":"`-FunctionDecl 0x121128b18  line:1:1 invalid rsvg_filter_primitive_light_source_set_atts 'int (int *, int *, int *)'   |-ParmVarDecl 0x121128928 <col:46, col:57> col:57 invalid self 'int *'   |-ParmVarDecl 0x1211289a8 <line:2:46, col:59> col:59 invalid ctx 'int *'   |-ParmVarDecl 0x121128a28 <col:64, col:82> col:82 invalid atts 'int *'   `-CompoundStmt 0x121142460 <line:3:1, line:31:1>     |-DeclStmt 0x121128c70 <line:5:5, col:22>     | `-VarDecl 0x121128c08 <col:5, col:17> col:17 used value 'const char *'     `-IfStmt 0x121142440 <line:9:5, line:30:5>       |-CallExpr 0x121128e40 <line:9:9, col:37> '<dependent type>' contains-errors       | |-DeclRefExpr 0x121128e00 <col:9> 'int ()' Function 0x121128d48 'rsvg_property_bag_size' 'int ()'       | `-RecoveryExpr 0x121128e20 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x121142430 <col:40, line:30:5> ","20304":"`-FunctionDecl 0x127008c08  col:18 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x127008d08 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x127008cb0 <<invalid sloc>> Implicit 950 ","21234":"`-FunctionDecl 0x15a1282e8  line:1:1 invalid xmlXPtrNewContext 'int (int, int, int)'   |-ParmVarDecl 0x15a1280f0 <col:19, col:29> col:29 invalid doc 'int'   |-ParmVarDecl 0x15a128170 <col:34, col:45> col:45 invalid here 'int'   |-ParmVarDecl 0x15a1281f0 <col:51, col:62> col:62 invalid origin 'int'   `-CompoundStmt 0x15a141ef0 <col:70, line:29:1> ","20672":"`-FunctionDecl 0x135831338  line:1:1 invalid gdImageScaleTwoPass 'int (const int, const unsigned int, const unsigned int)'   |-ParmVarDecl 0x1358310f0 <col:21, col:38> col:38 invalid src 'const int'   |-ParmVarDecl 0x135831170 <col:43, col:62> col:62 used new_width 'const unsigned int'   |-ParmVarDecl 0x1358311f0 <line:2:21, col:40> col:40 used new_height 'const unsigned int'   `-CompoundStmt 0x136100ce0 <line:3:1, line:50:1>     |-DeclStmt 0x1358314e0 <line:4:5, col:43>     | `-VarDecl 0x135831410 <col:5, col:41> col:24 used src_width 'const unsigned int' cinit     |   `-CXXDependentScopeMemberExpr 0x135831498 <col:36, col:41> '<dependent type>' contains-errors lvalue ->sx     |     `-RecoveryExpr 0x135831478 <col:36> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1358315e0 <line:5:5, col:44>     | `-VarDecl 0x135831510 <col:5, col:42> col:24 used src_height 'const unsigned int' cinit     |   `-CXXDependentScopeMemberExpr 0x135831598 <col:37, col:42> '<dependent type>' contains-errors lvalue ->sy     |     `-RecoveryExpr 0x135831578 <col:37> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13584a148 <line:10:5, line:12:5>     | |-BinaryOperator 0x135831718 <line:10:9, col:49> 'int' contains-errors '&&'     | | |-BinaryOperator 0x135831668 <col:9, col:22> 'int' contains-errors '=='     | | | |-ImplicitCastExpr 0x135831638 <col:9> 'unsigned int' contains-errors <LValueToRValue>     | | | | `-DeclRefExpr 0x1358315f8 <col:9> 'const unsigned int' contains-errors lvalue Var 0x135831410 'src_width' 'const unsigned int'     | | | `-ImplicitCastExpr 0x135831650 <col:22> 'unsigned int' <LValueToRValue>     | | |   `-DeclRefExpr 0x135831618 <col:22> 'const unsigned int' lvalue ParmVar 0x135831170 'new_width' 'const unsigned int'     | | `-BinaryOperator 0x1358316f8 <col:35, col:49> 'int' contains-errors '=='     | |   |-ImplicitCastExpr 0x1358316c8 <col:35> 'unsigned int' contains-errors <LValueToRValue>     | |   | `-DeclRefExpr 0x135831688 <col:35> 'const unsigned int' contains-errors lvalue Var 0x135831510 'src_height' 'const unsigned int'     | |   `-ImplicitCastExpr 0x1358316e0 <col:49> 'unsigned int' <LValueToRValue>     | |     `-DeclRefExpr 0x1358316a8 <col:49> 'const unsigned int' lvalue ParmVar 0x1358311f0 'new_height' 'const unsigned int'     | `-CompoundStmt 0x13584a130 <col:61, line:12:5>     |   `-ReturnStmt 0x13584a120 <line:11:9, col:32>     |     `-CallExpr 0x13584a0f8 <col:16, col:32> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13584a0b8 <col:16> 'int ()' Function 0x13584a000 'gdImageClone' 'int ()'     |       `-RecoveryExpr 0x13584a0d8 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13584a360 <line:15:2, line:17:2>     | |-UnaryOperator 0x13584a1e8 <line:15:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13584a1d0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13584a188 <col:7, col:12> '<dependent type>' contains-errors lvalue ->trueColor     | |     `-RecoveryExpr 0x13584a168 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13584a348 <col:23, line:17:2>     |   `-CallExpr 0x13584a320 <line:16:3, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13584a2e0 <col:3> 'int ()' Function 0x13584a228 'gdImagePaletteToTrueColor' 'int ()'     |     `-RecoveryExpr 0x13584a300 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13584ac10 <line:20:5, line:30:5> has_else     | |-BinaryOperator 0x13584a3f0 <line:20:9, col:22> 'int' contains-errors '=='     | | |-ImplicitCastExpr 0x13584a3c0 <col:9> 'unsigned int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x13584a380 <col:9> 'const unsigned int' contains-errors lvalue Var 0x135831410 'src_width' 'const unsigned int'     | | `-ImplicitCastExpr 0x13584a3d8 <col:22> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x13584a3a0 <col:22> 'const unsigned int' lvalue ParmVar 0x135831170 'new_width' 'const unsigned int'     | |-CompoundStmt 0x13584a430 <col:33, line:22:5>     | `-CompoundStmt 0x13584abe8 <col:12, line:30:5>     |   |-IfStmt 0x13584a738 <line:24:9, line:26:9>     |   | |-BinaryOperator 0x13584a6b8 <line:24:13, col:23> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x13584a678 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x13584a698 <col:23> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x13584a720 <col:29, line:26:9>     |   |   `-ReturnStmt 0x13584a710 <line:25:13, col:20>     |   |     `-RecoveryExpr 0x13584a6f0 <col:20> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13584a928 <line:27:9, col:68> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13584a838 <col:9> 'int ()' Function 0x13584a780 'gdImageSetInterpolationMethod' 'int ()'     |   | |-RecoveryExpr 0x13584a908 <col:39> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x13584a890 <col:47, col:52> '<dependent type>' contains-errors lvalue ->interpolation_id     |   |   `-RecoveryExpr 0x13584a870 <col:47> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x13584ab98 <line:29:9, col:79> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13584aa38 <col:9> 'int ()' Function 0x13584a980 '_gdScalePass' 'int ()'     |     |-RecoveryExpr 0x13584aa58 <col:22> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x13584aa78 <col:27> 'const unsigned int' contains-errors lvalue Var 0x135831410 'src_width' 'const unsigned int'     |     |-RecoveryExpr 0x13584ab58 <col:38> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x13584aab0 <col:46> 'const unsigned int' lvalue ParmVar 0x135831170 'new_width' 'const unsigned int'     |     |-DeclRefExpr 0x13584aad0 <col:57> 'const unsigned int' contains-errors lvalue Var 0x135831510 'src_height' 'const unsigned int'     |     `-RecoveryExpr 0x13584ab78 <col:69> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13584af20 <line:33:5, line:36:5>     | |-BinaryOperator 0x13584acb0 <line:33:9, col:23> 'int' contains-errors '=='     | | |-ImplicitCastExpr 0x13584ac80 <col:9> 'unsigned int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x13584ac40 <col:9> 'const unsigned int' contains-errors lvalue Var 0x135831510 'src_height' 'const unsigned int'     | | `-ImplicitCastExpr 0x13584ac98 <col:23> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x13584ac60 <col:23> 'const unsigned int' lvalue ParmVar 0x1358311f0 'new_height' 'const unsigned int'     | `-CompoundStmt 0x13584af00 <col:35, line:36:5>     |   |-CallExpr 0x13584ae90 <line:34:9, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13584adb0 <col:9> 'int ()' Function 0x13584acf8 'assert' 'int ()'     |   | `-BinaryOperator 0x13584ae70 <col:16, col:26> 'int' contains-errors '!='     |   |   |-RecoveryExpr 0x13584ae50 <col:16> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x13584ade8 <col:26> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13584aef0 <line:35:9, col:16>     |     `-RecoveryExpr 0x13584aed0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136100b50 <line:40:2, line:43:5>     | |-RecoveryExpr 0x136100a18 <line:40:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x136100b40 <col:19, line:43:5>     `-IfStmt 0x136100cc0 <line:45:5, line:47:5>       |-RecoveryExpr 0x136100b90 <line:45:9, col:16> '_Bool' contains-errors       `-CompoundStmt 0x136100cb0 <col:24, line:47:5> ","21005":"`-FunctionDecl 0x15d02d308  line:1:12 invalid merge_extent_mapping 'int (struct extent_map_tree *, struct extent_map *, struct extent_map *, int)' static   |-ParmVarDecl 0x15d017448 <col:33, col:57> col:57 used em_tree 'struct extent_map_tree *'   |-ParmVarDecl 0x15d02d028 <line:2:5, col:24> col:24 used existing 'struct extent_map *'   |-ParmVarDecl 0x15d02d118 <line:3:5, col:24> col:24 used em 'struct extent_map *'   |-ParmVarDecl 0x15d02d1b0 <line:4:5, col:9> col:9 invalid map_start 'int'   `-CompoundStmt 0x15d0308f8 <line:5:1, line:35:1>     |-DeclStmt 0x15d02d460 <line:6:2, col:25>     | `-VarDecl 0x15d02d3f8 <col:2, col:21> col:21 used prev 'struct extent_map *'     |-DeclStmt 0x15d02d508 <line:7:2, col:25>     | `-VarDecl 0x15d02d4a0 <col:2, col:21> col:21 used next 'struct extent_map *'     |-CallExpr 0x15d02d948 <line:12:2, col:65> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15d02d680 <col:2> 'int ()' Function 0x15d02d5c8 'BUG_ON' 'int ()'     | `-BinaryOperator 0x15d02d928 <col:9, col:64> 'int' contains-errors '||'     |   |-BinaryOperator 0x15d02d720 <col:9, col:25> 'int' contains-errors '<'     |   | |-RecoveryExpr 0x15d02d6a0 <col:9> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x15d02d6f8 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15d02d6c0 <col:21> 'struct extent_map *' lvalue ParmVar 0x15d02d118 'em' 'struct extent_map *'     |   `-BinaryOperator 0x15d02d908 <col:34, col:64> 'int' contains-errors '>='     |     |-RecoveryExpr 0x15d02d740 <col:34> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x15d02d8c8 <col:47, col:64> 'int'     |       |-ImplicitCastExpr 0x15d02d8b0 <col:47> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15d02d840 <col:47> 'int ()' Function 0x15d02d788 'extent_map_end' 'int ()'     |       `-ImplicitCastExpr 0x15d02d8f0 <col:62> 'struct extent_map *' <LValueToRValue>     |         `-DeclRefExpr 0x15d02d860 <col:62> 'struct extent_map *' lvalue ParmVar 0x15d02d118 'em' 'struct extent_map *'     |-IfStmt 0x15d02dee0 <line:14:2, line:20:2> has_else     | |-BinaryOperator 0x15d02d9f0 <line:14:6, col:24> 'int' contains-errors '>'     | | |-RecoveryExpr 0x15d02d9a8 <col:6, col:16> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15d02d970 <col:6> 'struct extent_map *' lvalue ParmVar 0x15d02d028 'existing' 'struct extent_map *'     | | `-RecoveryExpr 0x15d02d9d0 <col:24> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x15d02dc58 <col:35, line:17:2>     | | |-BinaryOperator 0x15d02da68 <line:15:3, col:10> 'struct extent_map *' '='     | | | |-DeclRefExpr 0x15d02da10 <col:3> 'struct extent_map *' lvalue Var 0x15d02d4a0 'next' 'struct extent_map *'     | | | `-ImplicitCastExpr 0x15d02da50 <col:10> 'struct extent_map *' <LValueToRValue>     | | |   `-DeclRefExpr 0x15d02da30 <col:10> 'struct extent_map *' lvalue ParmVar 0x15d02d028 'existing' 'struct extent_map *'     | | `-BinaryOperator 0x15d02dc38 <line:16:3, col:30> 'struct extent_map *' '='     | |   |-DeclRefExpr 0x15d02da88 <col:3> 'struct extent_map *' lvalue Var 0x15d02d3f8 'prev' 'struct extent_map *'     | |   `-ImplicitCastExpr 0x15d02dc20 <col:10, col:30> 'struct extent_map *' <IntegralToPointer>     | |     `-CallExpr 0x15d02dbe0 <col:10, col:30> 'int'     | |       |-ImplicitCastExpr 0x15d02dbc8 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x15d02db88 <col:10> 'int ()' Function 0x15d02dad0 'prev_extent_map' 'int ()'     | |       `-ImplicitCastExpr 0x15d02dc08 <col:26> 'struct extent_map *' <LValueToRValue>     | |         `-DeclRefExpr 0x15d02dba8 <col:26> 'struct extent_map *' lvalue Var 0x15d02d4a0 'next' 'struct extent_map *'     | `-CompoundStmt 0x15d02dec0 <line:17:9, line:20:2>     |   |-BinaryOperator 0x15d02dcd0 <line:18:3, col:10> 'struct extent_map *' '='     |   | |-DeclRefExpr 0x15d02dc78 <col:3> 'struct extent_map *' lvalue Var 0x15d02d3f8 'prev' 'struct extent_map *'     |   | `-ImplicitCastExpr 0x15d02dcb8 <col:10> 'struct extent_map *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15d02dc98 <col:10> 'struct extent_map *' lvalue ParmVar 0x15d02d028 'existing' 'struct extent_map *'     |   `-BinaryOperator 0x15d02dea0 <line:19:3, col:30> 'struct extent_map *' '='     |     |-DeclRefExpr 0x15d02dcf0 <col:3> 'struct extent_map *' lvalue Var 0x15d02d4a0 'next' 'struct extent_map *'     |     `-ImplicitCastExpr 0x15d02de88 <col:10, col:30> 'struct extent_map *' <IntegralToPointer>     |       `-CallExpr 0x15d02de48 <col:10, col:30> 'int'     |         |-ImplicitCastExpr 0x15d02de30 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x15d02ddf0 <col:10> 'int ()' Function 0x15d02dd38 'next_extent_map' 'int ()'     |         `-ImplicitCastExpr 0x15d02de70 <col:26> 'struct extent_map *' <LValueToRValue>     |           `-DeclRefExpr 0x15d02de10 <col:26> 'struct extent_map *' lvalue Var 0x15d02d3f8 'prev' 'struct extent_map *'     |-IfStmt 0x15d0306e8 <line:29:2, line:33:2>     | |-RecoveryExpr 0x15d0305f8 <line:29:6, line:30:50> '_Bool' contains-errors     | `-CompoundStmt 0x15d0306d8 <col:53, line:33:2>     `-ReturnStmt 0x15d0308e8 <line:34:2, col:42>       `-CallExpr 0x15d030880 <col:9, col:42> 'int'         |-ImplicitCastExpr 0x15d030868 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x15d0307e8 <col:9> 'int ()' Function 0x15d030730 'add_extent_mapping' 'int ()'         |-ImplicitCastExpr 0x15d0308b8 <col:28> 'struct extent_map_tree *' <LValueToRValue>         | `-DeclRefExpr 0x15d030808 <col:28> 'struct extent_map_tree *' lvalue ParmVar 0x15d017448 'em_tree' 'struct extent_map_tree *'         |-ImplicitCastExpr 0x15d0308d0 <col:37> 'struct extent_map *' <LValueToRValue>         | `-DeclRefExpr 0x15d030828 <col:37> 'struct extent_map *' lvalue ParmVar 0x15d02d118 'em' 'struct extent_map *'         `-IntegerLiteral 0x15d030848 <col:41> 'int' 0 ","20289":"`-FunctionDecl 0x14100e350  line:1:13 fastrpc_get_buff_overlaps 'void (struct fastrpc_invoke_ctx *)' static   |-ParmVarDecl 0x14100e248 <col:39, col:66> col:66 used ctx 'struct fastrpc_invoke_ctx *'   `-CompoundStmt 0x14102aee8 <line:2:1, line:35:1>     |-DeclStmt 0x1410266e0 <line:4:2, col:7>     | `-VarDecl 0x141026678 <col:2, col:6> col:6 used i 'int'     |-ForStmt 0x141026f88 <line:6:2, line:10:2>     | |-BinaryOperator 0x141026738 <line:6:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1410266f8 <col:7> 'int' lvalue Var 0x141026678 'i' 'int'     | | `-IntegerLiteral 0x141026718 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1410267d8 <col:14, col:23> 'int' contains-errors '<'     | | |-DeclRefExpr 0x141026758 <col:14> 'int' lvalue Var 0x141026678 'i' 'int'     | | `-RecoveryExpr 0x1410267b0 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x141026778 <col:18> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     | |-UnaryOperator 0x141026818 <col:30, col:32> 'int' prefix '++'     | | `-DeclRefExpr 0x1410267f8 <col:32> 'int' lvalue Var 0x141026678 'i' 'int'     | `-CompoundStmt 0x141026f60 <col:35, line:10:2>     |   |-BinaryOperator 0x141026a60 <line:7:3, col:38> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x141026900 <col:3, col:17> '<dependent type>' contains-errors lvalue .start     |   | | `-ArraySubscriptExpr 0x1410268e0 <col:3, col:15> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x1410268b0 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-RecoveryExpr 0x141026868 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x141026830 <col:3> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     |   | |   `-ImplicitCastExpr 0x1410268c8 <col:14> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x141026890 <col:14> 'int' lvalue Var 0x141026678 'i' 'int'     |   | `-CXXDependentScopeMemberExpr 0x141026a18 <col:25, col:38> '<dependent type>' contains-errors lvalue .ptr     |   |   `-ArraySubscriptExpr 0x1410269f8 <col:25, col:36> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x1410269c8 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x141026980 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x141026948 <col:25> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     |   |     `-ImplicitCastExpr 0x1410269e0 <col:35> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x1410269a8 <col:35> 'int' lvalue Var 0x141026678 'i' 'int'     |   |-BinaryOperator 0x141026de8 <line:8:3, col:58> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x141026b50 <col:3, col:17> '<dependent type>' contains-errors lvalue .end     |   | | `-ArraySubscriptExpr 0x141026b30 <col:3, col:15> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x141026b00 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-RecoveryExpr 0x141026ab8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x141026a80 <col:3> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     |   | |   `-ImplicitCastExpr 0x141026b18 <col:14> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x141026ae0 <col:14> 'int' lvalue Var 0x141026678 'i' 'int'     |   | `-BinaryOperator 0x141026dc8 <col:23, col:58> '<dependent type>' contains-errors '+'     |   |   |-CXXDependentScopeMemberExpr 0x141026c68 <col:23, col:37> '<dependent type>' contains-errors lvalue .start     |   |   | `-ArraySubscriptExpr 0x141026c48 <col:23, col:35> '<dependent type>' contains-errors lvalue     |   |   |   |-ImplicitCastExpr 0x141026c18 <col:23, col:28> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | `-RecoveryExpr 0x141026bd0 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |   |   |   `-DeclRefExpr 0x141026b98 <col:23> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     |   |   |   `-ImplicitCastExpr 0x141026c30 <col:34> 'int' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x141026bf8 <col:34> 'int' lvalue Var 0x141026678 'i' 'int'     |   |   `-CXXDependentScopeMemberExpr 0x141026d80 <col:45, col:58> '<dependent type>' contains-errors lvalue .length     |   |     `-ArraySubscriptExpr 0x141026d60 <col:45, col:56> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x141026d30 <col:45, col:50> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-RecoveryExpr 0x141026ce8 <col:45, col:50> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x141026cb0 <col:45> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     |   |       `-ImplicitCastExpr 0x141026d48 <col:55> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x141026d10 <col:55> 'int' lvalue Var 0x141026678 'i' 'int'     |   `-BinaryOperator 0x141026f40 <line:9:3, col:24> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x141026ed8 <col:3, col:17> '<dependent type>' contains-errors lvalue .raix     |     | `-ArraySubscriptExpr 0x141026eb8 <col:3, col:15> '<dependent type>' contains-errors lvalue     |     |   |-ImplicitCastExpr 0x141026e88 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |     |   | `-RecoveryExpr 0x141026e40 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     |   |   `-DeclRefExpr 0x141026e08 <col:3> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     |     |   `-ImplicitCastExpr 0x141026ea0 <col:14> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x141026e68 <col:14> 'int' lvalue Var 0x141026678 'i' 'int'     |     `-DeclRefExpr 0x141026f20 <col:24> 'int' lvalue Var 0x141026678 'i' 'int'     |-CallExpr 0x141027418 <line:12:2, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1410270d0 <col:2> 'int ()' Function 0x141027018 'sort' 'int ()'     | |-RecoveryExpr 0x141027128 <col:7, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1410270f0 <col:7> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     | |-RecoveryExpr 0x141027188 <col:19, col:24> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x141027150 <col:19> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'     | |-UnaryExprOrTypeTraitExpr 0x1410273b8 <col:31, col:49> 'unsigned long' contains-errors sizeof     | | `-ParenExpr 0x141027398 <col:37, col:49> '<dependent type>' contains-errors     | |   `-UnaryOperator 0x141027380 <col:38, col:44> '<dependent type>' contains-errors prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x141027368 <col:39, col:44> '<dependent type>' contains-errors <LValueToRValue>     | |       `-RecoveryExpr 0x1410271e8 <col:39, col:44> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x1410271b0 <col:39> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *' non_odr_use_unevaluated     | |-RecoveryExpr 0x1410273d8 <col:52> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1410273f8 <col:63> '<dependent type>' contains-errors lvalue     `-ForStmt 0x14102aeb0 <line:14:2, line:34:2>       |-BinaryOperator 0x1410274a0 <line:14:7, col:11> 'int' '='       | |-DeclRefExpr 0x141027460 <col:7> 'int' lvalue Var 0x141026678 'i' 'int'       | `-IntegerLiteral 0x141027480 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x141027540 <col:14, col:23> 'int' contains-errors '<'       | |-DeclRefExpr 0x1410274c0 <col:14> 'int' lvalue Var 0x141026678 'i' 'int'       | `-RecoveryExpr 0x141027518 <col:18, col:23> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1410274e0 <col:18> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'       |-UnaryOperator 0x141027580 <col:30, col:32> 'int' prefix '++'       | `-DeclRefExpr 0x141027560 <col:32> 'int' lvalue Var 0x141026678 'i' 'int'       `-CompoundStmt 0x14102ae98 <col:35, line:34:2>         `-IfStmt 0x14102ae68 <line:16:3, line:33:3> has_else           |-BinaryOperator 0x141029a40 <line:16:7, col:29> 'int' contains-errors '<'           | |-CXXDependentScopeMemberExpr 0x1410299d8 <col:7, col:21> '<dependent type>' contains-errors lvalue .start           | | `-ArraySubscriptExpr 0x1410299b8 <col:7, col:19> '<dependent type>' contains-errors lvalue           | |   |-ImplicitCastExpr 0x141029988 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>           | |   | `-RecoveryExpr 0x1410275d0 <col:7, col:12> '<dependent type>' contains-errors lvalue           | |   |   `-DeclRefExpr 0x141027598 <col:7> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'           | |   `-ImplicitCastExpr 0x1410299a0 <col:18> 'int' <LValueToRValue>           | |     `-DeclRefExpr 0x141029800 <col:18> 'int' lvalue Var 0x141026678 'i' 'int'           | `-RecoveryExpr 0x141029a20 <col:29> '<dependent type>' contains-errors lvalue           |-CompoundStmt 0x14102a700 <col:38, line:28:3>           | |-BinaryOperator 0x141029d00 <line:17:4, col:27> '<dependent type>' contains-errors '='           | | |-CXXDependentScopeMemberExpr 0x141029c98 <col:4, col:18> '<dependent type>' contains-errors lvalue .mstart           | | | `-ArraySubscriptExpr 0x141029c78 <col:4, col:16> '<dependent type>' contains-errors lvalue           | | |   |-ImplicitCastExpr 0x141029c48 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>           | | |   | `-RecoveryExpr 0x141029a98 <col:4, col:9> '<dependent type>' contains-errors lvalue           | | |   |   `-DeclRefExpr 0x141029a60 <col:4> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'           | | |   `-ImplicitCastExpr 0x141029c60 <col:15> 'int' <LValueToRValue>           | | |     `-DeclRefExpr 0x141029ac0 <col:15> 'int' lvalue Var 0x141026678 'i' 'int'           | | `-RecoveryExpr 0x141029ce0 <col:27> '<dependent type>' contains-errors lvalue           | |-BinaryOperator 0x141029f50 <line:18:4, col:39> '<dependent type>' contains-errors '='           | | |-CXXDependentScopeMemberExpr 0x141029df0 <col:4, col:18> '<dependent type>' contains-errors lvalue .mend           | | | `-ArraySubscriptExpr 0x141029dd0 <col:4, col:16> '<dependent type>' contains-errors lvalue           | | |   |-ImplicitCastExpr 0x141029da0 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>           | | |   | `-RecoveryExpr 0x141029d58 <col:4, col:9> '<dependent type>' contains-errors lvalue           | | |   |   `-DeclRefExpr 0x141029d20 <col:4> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'           | | |   `-ImplicitCastExpr 0x141029db8 <col:15> 'int' <LValueToRValue>           | | |     `-DeclRefExpr 0x141029d80 <col:15> 'int' lvalue Var 0x141026678 'i' 'int'           | | `-CXXDependentScopeMemberExpr 0x141029f08 <col:25, col:39> '<dependent type>' contains-errors lvalue .end           | |   `-ArraySubscriptExpr 0x141029ee8 <col:25, col:37> '<dependent type>' contains-errors lvalue           | |     |-ImplicitCastExpr 0x141029eb8 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>           | |     | `-RecoveryExpr 0x141029e70 <col:25, col:30> '<dependent type>' contains-errors lvalue           | |     |   `-DeclRefExpr 0x141029e38 <col:25> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'           | |     `-ImplicitCastExpr 0x141029ed0 <col:36> 'int' <LValueToRValue>           | |       `-DeclRefExpr 0x141029e98 <col:36> 'int' lvalue Var 0x141026678 'i' 'int'           | `-IfStmt 0x14102a6d0 <line:21:4, line:26:4> has_else           |   |-RecoveryExpr 0x14102a2b8 <line:21:8, col:28> '_Bool' contains-errors           |   |-CompoundStmt 0x14102a3f0 <col:37, line:23:4>           |   `-CompoundStmt 0x14102a6b0 <col:11, line:26:4>           |     |-BinaryOperator 0x14102a538 <line:24:5, col:26> '<dependent type>' contains-errors '='           |     | |-CXXDependentScopeMemberExpr 0x14102a4d0 <col:5, col:19> '<dependent type>' contains-errors lvalue .mend           |     | | `-ArraySubscriptExpr 0x14102a4b0 <col:5, col:17> '<dependent type>' contains-errors lvalue           |     | |   |-ImplicitCastExpr 0x14102a480 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>           |     | |   | `-RecoveryExpr 0x14102a438 <col:5, col:10> '<dependent type>' contains-errors lvalue           |     | |   |   `-DeclRefExpr 0x14102a400 <col:5> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'           |     | |   `-ImplicitCastExpr 0x14102a498 <col:16> 'int' <LValueToRValue>           |     | |     `-DeclRefExpr 0x14102a460 <col:16> 'int' lvalue Var 0x141026678 'i' 'int'           |     | `-IntegerLiteral 0x14102a518 <col:26> 'int' 0           |     `-BinaryOperator 0x14102a690 <line:25:5, col:28> '<dependent type>' contains-errors '='           |       |-CXXDependentScopeMemberExpr 0x14102a628 <col:5, col:19> '<dependent type>' contains-errors lvalue .mstart           |       | `-ArraySubscriptExpr 0x14102a608 <col:5, col:17> '<dependent type>' contains-errors lvalue           |       |   |-ImplicitCastExpr 0x14102a5d8 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>           |       |   | `-RecoveryExpr 0x14102a590 <col:5, col:10> '<dependent type>' contains-errors lvalue           |       |   |   `-DeclRefExpr 0x14102a558 <col:5> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'           |       |   `-ImplicitCastExpr 0x14102a5f0 <col:16> 'int' <LValueToRValue>           |       |     `-DeclRefExpr 0x14102a5b8 <col:16> 'int' lvalue Var 0x141026678 'i' 'int'           |       `-IntegerLiteral 0x14102a670 <col:28> 'int' 0           `-CompoundStmt 0x14102ae40 <line:28:11, line:33:3>             |-BinaryOperator 0x14102a960 <line:29:4, col:39> '<dependent type>' contains-errors '='             | |-CXXDependentScopeMemberExpr 0x14102a800 <col:4, col:18> '<dependent type>' contains-errors lvalue .mend             | | `-ArraySubscriptExpr 0x14102a7d8 <col:4, col:16> '<dependent type>' contains-errors lvalue             | |   |-ImplicitCastExpr 0x14102a7a8 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>             | |   | `-RecoveryExpr 0x14102a760 <col:4, col:9> '<dependent type>' contains-errors lvalue             | |   |   `-DeclRefExpr 0x14102a728 <col:4> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'             | |   `-ImplicitCastExpr 0x14102a7c0 <col:15> 'int' <LValueToRValue>             | |     `-DeclRefExpr 0x14102a788 <col:15> 'int' lvalue Var 0x141026678 'i' 'int'             | `-CXXDependentScopeMemberExpr 0x14102a918 <col:25, col:39> '<dependent type>' contains-errors lvalue .end             |   `-ArraySubscriptExpr 0x14102a8f8 <col:25, col:37> '<dependent type>' contains-errors lvalue             |     |-ImplicitCastExpr 0x14102a8c8 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>             |     | `-RecoveryExpr 0x14102a880 <col:25, col:30> '<dependent type>' contains-errors lvalue             |     |   `-DeclRefExpr 0x14102a848 <col:25> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'             |     `-ImplicitCastExpr 0x14102a8e0 <col:36> 'int' <LValueToRValue>             |       `-DeclRefExpr 0x14102a8a8 <col:36> 'int' lvalue Var 0x141026678 'i' 'int'             |-BinaryOperator 0x14102abb0 <line:30:4, col:41> '<dependent type>' contains-errors '='             | |-CXXDependentScopeMemberExpr 0x14102aa50 <col:4, col:18> '<dependent type>' contains-errors lvalue .mstart             | | `-ArraySubscriptExpr 0x14102aa30 <col:4, col:16> '<dependent type>' contains-errors lvalue             | |   |-ImplicitCastExpr 0x14102aa00 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>             | |   | `-RecoveryExpr 0x14102a9b8 <col:4, col:9> '<dependent type>' contains-errors lvalue             | |   |   `-DeclRefExpr 0x14102a980 <col:4> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'             | |   `-ImplicitCastExpr 0x14102aa18 <col:15> 'int' <LValueToRValue>             | |     `-DeclRefExpr 0x14102a9e0 <col:15> 'int' lvalue Var 0x141026678 'i' 'int'             | `-CXXDependentScopeMemberExpr 0x14102ab68 <col:27, col:41> '<dependent type>' contains-errors lvalue .start             |   `-ArraySubscriptExpr 0x14102ab48 <col:27, col:39> '<dependent type>' contains-errors lvalue             |     |-ImplicitCastExpr 0x14102ab18 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>             |     | `-RecoveryExpr 0x14102aad0 <col:27, col:32> '<dependent type>' contains-errors lvalue             |     |   `-DeclRefExpr 0x14102aa98 <col:27> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'             |     `-ImplicitCastExpr 0x14102ab30 <col:38> 'int' <LValueToRValue>             |       `-DeclRefExpr 0x14102aaf8 <col:38> 'int' lvalue Var 0x141026678 'i' 'int'             `-BinaryOperator 0x14102ad08 <line:31:4, col:27> '<dependent type>' contains-errors '='               |-CXXDependentScopeMemberExpr 0x14102aca0 <col:4, col:18> '<dependent type>' contains-errors lvalue .offset               | `-ArraySubscriptExpr 0x14102ac80 <col:4, col:16> '<dependent type>' contains-errors lvalue               |   |-ImplicitCastExpr 0x14102ac50 <col:4, col:9> '<dependent type>' contains-errors <LValueToRValue>               |   | `-RecoveryExpr 0x14102ac08 <col:4, col:9> '<dependent type>' contains-errors lvalue               |   |   `-DeclRefExpr 0x14102abd0 <col:4> 'struct fastrpc_invoke_ctx *' lvalue ParmVar 0x14100e248 'ctx' 'struct fastrpc_invoke_ctx *'               |   `-ImplicitCastExpr 0x14102ac68 <col:15> 'int' <LValueToRValue>               |     `-DeclRefExpr 0x14102ac30 <col:15> 'int' lvalue Var 0x141026678 'i' 'int'               `-IntegerLiteral 0x14102ace8 <col:27> 'int' 0 ","21076":"`-FunctionDecl 0x15282a9a8  col:7 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15282aaa8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15282ab10 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15282ab78 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15282aa50 <<invalid sloc>> Implicit 882 ","20850":"`-FunctionDecl 0x1559281f8  line:1:14 invalid jas_seq2d_copy 'int *(int *)'   |-ParmVarDecl 0x155928128 <col:29, col:42> col:42 invalid x 'int *'   `-CompoundStmt 0x1559423b0 <line:2:1, line:15:1>     |-DeclStmt 0x155928340 <line:4:2, col:7>     | `-VarDecl 0x1559282d8 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x1559283d8 <line:5:2, col:7>     | `-VarDecl 0x155928370 <col:2, col:6> col:6 used j 'int'     |-CallExpr 0x155941c30 <line:8:2, col:10> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155941bb0 <col:2> 'int ()' Function 0x155941af8 'assert' 'int ()'     | `-RecoveryExpr 0x155941c10 <col:9> '<dependent type>' contains-errors lvalue     |-ForStmt 0x155942330 <line:9:2, line:13:2>     | |-BinaryOperator 0x155941c98 <line:9:7, col:11> 'int' '='     | | |-DeclRefExpr 0x155941c58 <col:7> 'int' lvalue Var 0x1559282d8 'i' 'int'     | | `-IntegerLiteral 0x155941c78 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x155941d40 <col:14, col:21> 'int' contains-errors '<'     | | |-DeclRefExpr 0x155941cb8 <col:14> 'int' lvalue Var 0x1559282d8 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x155941cf8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->numrows_     | |   `-RecoveryExpr 0x155941cd8 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x155941d80 <col:31, col:33> 'int' prefix '++'     | | `-DeclRefExpr 0x155941d60 <col:33> 'int' lvalue Var 0x1559282d8 'i' 'int'     | `-CompoundStmt 0x155942318 <col:36, line:13:2>     |   `-ForStmt 0x1559422e0 <line:10:3, line:12:3>     |     |-BinaryOperator 0x155941dd8 <line:10:8, col:12> 'int' '='     |     | |-DeclRefExpr 0x155941d98 <col:8> 'int' lvalue Var 0x155928370 'j' 'int'     |     | `-IntegerLiteral 0x155941db8 <col:12> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x155941e80 <col:15, col:22> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x155941df8 <col:15> 'int' lvalue Var 0x155928370 'j' 'int'     |     | `-CXXDependentScopeMemberExpr 0x155941e38 <col:19, col:22> '<dependent type>' contains-errors lvalue ->numcols_     |     |   `-RecoveryExpr 0x155941e18 <col:19> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x155941ec0 <col:32, col:34> 'int' prefix '++'     |     | `-DeclRefExpr 0x155941ea0 <col:34> 'int' lvalue Var 0x155928370 'j' 'int'     |     `-CompoundStmt 0x1559422c8 <col:37, line:12:3>     |       `-BinaryOperator 0x1559422a8 <line:11:4, col:56> '<dependent type>' contains-errors '='     |         |-UnaryOperator 0x155942290 <col:4, col:30> '<dependent type>' contains-errors prefix '*' cannot overflow     |         | `-CallExpr 0x155942258 <col:5, col:30> '<dependent type>' contains-errors     |         |   |-DeclRefExpr 0x155941fb8 <col:5> 'int ()' Function 0x155941f00 'jas_matrix_getref' 'int ()'     |         |   |-RecoveryExpr 0x155942238 <col:23> '<dependent type>' contains-errors lvalue     |         |   |-DeclRefExpr 0x155941ff0 <col:26> 'int' lvalue Var 0x1559282d8 'i' 'int'     |         |   `-DeclRefExpr 0x155942010 <col:29> 'int' lvalue Var 0x155928370 'j' 'int'     |         `-CallExpr 0x1559421e0 <col:34, col:56> '<dependent type>' contains-errors     |           |-DeclRefExpr 0x155942160 <col:34> 'int ()' Function 0x1559420a8 'jas_matrix_get' 'int ()'     |           |-RecoveryExpr 0x155942180 <col:49> '<dependent type>' contains-errors lvalue     |           |-DeclRefExpr 0x1559421a0 <col:52> 'int' lvalue Var 0x1559282d8 'i' 'int'     |           `-DeclRefExpr 0x1559421c0 <col:55> 'int' lvalue Var 0x155928370 'j' 'int'     `-ReturnStmt 0x1559423a0 <line:14:2, col:9>       `-RecoveryExpr 0x155942380 <col:9> '<dependent type>' contains-errors lvalue ","21039":"`-FunctionDecl 0x149026998  line:1:12 xfrm_get_policy 'int (struct sk_buff *, struct nlmsghdr *, struct nlattr **)' static   |-ParmVarDecl 0x14900e248 <col:28, col:44> col:44 used skb 'struct sk_buff *'   |-ParmVarDecl 0x149026628 <col:49, col:66> col:66 used nlh 'struct nlmsghdr *'   |-ParmVarDecl 0x149026858 <line:2:3, col:19> col:19 used attrs 'struct nlattr **'   `-CompoundStmt 0x149031a40 <line:3:1, line:76:1>     |-DeclStmt 0x149026e60 <line:4:2, col:37>     | |-RecordDecl 0x149026aa0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x149026c08 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x149026e20 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x149026da0 <col:20> 'int ()' Function 0x149026ce8 'sock_net' 'int ()'     |     `-RecoveryExpr 0x149026df8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x149026dc0 <col:29> 'struct sk_buff *' lvalue ParmVar 0x14900e248 'skb' 'struct sk_buff *'     |-DeclStmt 0x149027068 <line:5:2, col:24>     | |-RecordDecl 0x149026e78 <col:2, col:9> col:9 struct xfrm_policy     | `-VarDecl 0x149026fe8 <col:2, col:22> col:22 used xp 'struct xfrm_policy *'     |-DeclStmt 0x149027268 <line:6:2, col:30>     | |-RecordDecl 0x149027080 <col:2, col:9> col:9 struct xfrm_userpolicy_id     | `-VarDecl 0x1490271e8 <col:2, col:29> col:29 used p 'struct xfrm_userpolicy_id *'     |-DeclStmt 0x149027300 <line:8:2, col:9>     | `-VarDecl 0x149027298 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x149027498 <line:9:2, col:19>     | |-RecordDecl 0x149027318 <col:2, col:9> col:9 struct km_event     | `-VarDecl 0x149027418 <col:2, col:18> col:18 referenced invalid c 'struct km_event'     |-DeclStmt 0x149027530 <line:10:2, col:12>     | `-VarDecl 0x1490274c8 <col:2, col:6> col:6 used delete 'int'     |-DeclStmt 0x14902ccd8 <line:11:2, col:20>     | |-RecordDecl 0x149027548 <col:2, col:9> col:9 struct xfrm_mark     | `-VarDecl 0x14902cc58 <col:2, col:19> col:19 invalid m 'struct xfrm_mark'     |-BinaryOperator 0x14902ced0 <line:14:2, col:20> 'struct xfrm_userpolicy_id *' '='     | |-DeclRefExpr 0x14902ccf0 <col:2> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | `-ImplicitCastExpr 0x14902ceb8 <col:6, col:20> 'struct xfrm_userpolicy_id *' <IntegralToPointer>     |   `-CallExpr 0x14902ce78 <col:6, col:20> 'int'     |     |-ImplicitCastExpr 0x14902ce60 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14902cdf0 <col:6> 'int ()' Function 0x14902cd38 'nlmsg_data' 'int ()'     |     `-ImplicitCastExpr 0x14902cea0 <col:17> 'struct nlmsghdr *' <LValueToRValue>     |       `-DeclRefExpr 0x14902ce10 <col:17> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |-BinaryOperator 0x14902d008 <line:15:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x14902cef0 <col:2> 'int' lvalue Var 0x1490274c8 'delete' 'int'     | `-BinaryOperator 0x14902cfe8 <col:11, col:30> 'int' contains-errors '=='     |   |-RecoveryExpr 0x14902cf48 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14902cf10 <col:11> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |   `-RecoveryExpr 0x14902cfc8 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14902d250 <line:17:2, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x14902d028 <col:2> 'int' lvalue Var 0x149027298 'err' 'int'     | `-CallExpr 0x14902d220 <col:8, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14902d128 <col:8> 'int ()' Function 0x14902d070 'copy_from_user_policy_type' 'int ()'     |   |-UnaryOperator 0x14902d208 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14902d1e8 <col:36> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14902d178 <col:42> 'struct nlattr **' lvalue ParmVar 0x149026858 'attrs' 'struct nlattr **'     |-IfStmt 0x14902d2f0 <line:18:2, line:19:10>     | |-ImplicitCastExpr 0x14902d290 <line:18:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14902d270 <col:6> 'int' lvalue Var 0x149027298 'err' 'int'     | `-ReturnStmt 0x14902d2e0 <line:19:3, col:10>     |   `-ImplicitCastExpr 0x14902d2c8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14902d2a8 <col:10> 'int' lvalue Var 0x149027298 'err' 'int'     |-BinaryOperator 0x14902d4b8 <line:21:2, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x14902d310 <col:2> 'int' lvalue Var 0x149027298 'err' 'int'     | `-CallExpr 0x14902d490 <col:8, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14902d410 <col:8> 'int ()' Function 0x14902d358 'verify_policy_dir' 'int ()'     |   `-RecoveryExpr 0x14902d468 <col:26, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14902d430 <col:26> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     |-IfStmt 0x14902d558 <line:22:2, line:23:10>     | |-ImplicitCastExpr 0x14902d4f8 <line:22:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14902d4d8 <col:6> 'int' lvalue Var 0x149027298 'err' 'int'     | `-ReturnStmt 0x14902d548 <line:23:3, col:10>     |   `-ImplicitCastExpr 0x14902d530 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14902d510 <col:10> 'int' lvalue Var 0x149027298 'err' 'int'     |-IfStmt 0x149030260 <line:25:2, line:46:2> has_else     | |-RecoveryExpr 0x14902d5b0 <line:25:6, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14902d578 <col:6> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | |-BinaryOperator 0x14902d9a8 <line:26:3, col:72> 'struct xfrm_policy *' contains-errors '='     | | |-DeclRefExpr 0x14902d5d8 <col:3> 'struct xfrm_policy *' lvalue Var 0x149026fe8 'xp' 'struct xfrm_policy *'     | | `-CallExpr 0x14902d950 <col:8, col:72> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14902d6d8 <col:8> 'int ()' Function 0x14902d620 'xfrm_policy_byid' 'int ()'     | |   |-DeclRefExpr 0x14902d6f8 <col:25> 'struct net *' contains-errors lvalue Var 0x149026c08 'net' 'struct net *'     | |   |-RecoveryExpr 0x14902d910 <col:30> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x14902d930 <col:36> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x14902d780 <col:42, col:45> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14902d748 <col:42> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | |   |-RecoveryExpr 0x14902d7e0 <col:50, col:53> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14902d7a8 <col:50> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | |   |-DeclRefExpr 0x14902d808 <col:60> 'int' lvalue Var 0x1490274c8 'delete' 'int'     | |   `-UnaryOperator 0x14902d880 <col:68, col:69> 'int *' prefix '&' cannot overflow     | |     `-DeclRefExpr 0x14902d828 <col:69> 'int' lvalue Var 0x149027298 'err' 'int'     | `-CompoundStmt 0x149030220 <line:27:7, line:46:2>     |   |-DeclStmt 0x14902dae0 <line:28:3, col:43>     |   | `-VarDecl 0x14902da58 <col:3, col:18> col:18 used rt 'struct nlattr *'     |   |-DeclStmt 0x14902f508 <line:29:3, col:27>     |   | |-RecordDecl 0x14902daf8 <col:3, col:10> col:10 struct xfrm_sec_ctx     |   | `-VarDecl 0x14902f488 <col:3, col:24> col:24 used ctx 'struct xfrm_sec_ctx *'     |   |-BinaryOperator 0x14902f6b8 <line:31:3, col:33> 'int' '='     |   | |-DeclRefExpr 0x14902f520 <col:3> 'int' lvalue Var 0x149027298 'err' 'int'     |   | `-CallExpr 0x14902f678 <col:9, col:33> 'int'     |   |   |-ImplicitCastExpr 0x14902f660 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14902f620 <col:9> 'int ()' Function 0x14902f568 'verify_sec_ctx_len' 'int ()'     |   |   `-ImplicitCastExpr 0x14902f6a0 <col:28> 'struct nlattr **' <LValueToRValue>     |   |     `-DeclRefExpr 0x14902f640 <col:28> 'struct nlattr **' lvalue ParmVar 0x149026858 'attrs' 'struct nlattr **'     |   |-IfStmt 0x14902f758 <line:32:3, line:33:11>     |   | |-ImplicitCastExpr 0x14902f6f8 <line:32:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x14902f6d8 <col:7> 'int' lvalue Var 0x149027298 'err' 'int'     |   | `-ReturnStmt 0x14902f748 <line:33:4, col:11>     |   |   `-ImplicitCastExpr 0x14902f730 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x14902f710 <col:11> 'int' lvalue Var 0x149027298 'err' 'int'     |   |-IfStmt 0x14902fdf8 <line:36:3, line:42:3>     |   | |-ImplicitCastExpr 0x14902f7b8 <line:36:7> 'struct nlattr *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14902f798 <col:7> 'struct nlattr *' lvalue Var 0x14902da58 'rt' 'struct nlattr *'     |   | `-CompoundStmt 0x14902fdd8 <col:11, line:42:3>     |   |   |-DeclStmt 0x14902fb48 <line:37:4, col:49>     |   |   | |-RecordDecl 0x14902f7d0 <col:4, col:11> col:11 struct xfrm_user_sec_ctx     |   |   | `-VarDecl 0x14902f938 <col:4, col:48> col:30 used uctx 'struct xfrm_user_sec_ctx *' cinit     |   |   |   `-ImplicitCastExpr 0x14902fb18 <col:37, col:48> 'struct xfrm_user_sec_ctx *' <IntegralToPointer>     |   |   |     `-CallExpr 0x14902fad8 <col:37, col:48> 'int'     |   |   |       |-ImplicitCastExpr 0x14902fac0 <col:37> 'int (*)()' <FunctionToPointerDecay>     |   |   |       | `-DeclRefExpr 0x14902fa80 <col:37> 'int ()' Function 0x14902f9c8 'nla_data' 'int ()'     |   |   |       `-ImplicitCastExpr 0x14902fb00 <col:46> 'struct nlattr *' <LValueToRValue>     |   |   |         `-DeclRefExpr 0x14902faa0 <col:46> 'struct nlattr *' lvalue Var 0x14902da58 'rt' 'struct nlattr *'     |   |   `-IfStmt 0x14902fdb8 <line:40:4, line:41:12>     |   |     |-ImplicitCastExpr 0x14902fd58 <line:40:8> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14902fd38 <col:8> 'int' lvalue Var 0x149027298 'err' 'int'     |   |     `-ReturnStmt 0x14902fda8 <line:41:5, col:12>     |   |       `-ImplicitCastExpr 0x14902fd90 <col:12> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x14902fd70 <col:12> 'int' lvalue Var 0x149027298 'err' 'int'     |   `-CallExpr 0x1490301e0 <line:45:3, col:32> 'int'     |     |-ImplicitCastExpr 0x1490301c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x149030188 <col:3> 'int ()' Function 0x1490300d0 'security_xfrm_policy_free' 'int ()'     |     `-ImplicitCastExpr 0x149030208 <col:29> 'struct xfrm_sec_ctx *' <LValueToRValue>     |       `-DeclRefExpr 0x1490301a8 <col:29> 'struct xfrm_sec_ctx *' lvalue Var 0x14902f488 'ctx' 'struct xfrm_sec_ctx *'     |-IfStmt 0x149031830 <line:50:2, line:71:2> has_else     | |-UnaryOperator 0x149030308 <line:50:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1490302f0 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x1490302d0 <col:7> 'int' lvalue Var 0x1490274c8 'delete' 'int'     | |-CompoundStmt 0x149030e70 <col:15, line:60:2>     | | |-DeclStmt 0x149030468 <line:51:3, col:27>     | | | `-VarDecl 0x149030400 <col:3, col:19> col:19 used resp_skb 'struct sk_buff *'     | | |-BinaryOperator 0x1490306e0 <line:53:3, col:65> 'struct sk_buff *' contains-errors '='     | | | |-DeclRefExpr 0x149030480 <col:3> 'struct sk_buff *' lvalue Var 0x149030400 'resp_skb' 'struct sk_buff *'     | | | `-CallExpr 0x1490306a0 <col:14, col:65> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x149030580 <col:14> 'int ()' Function 0x1490304c8 'xfrm_policy_netlink' 'int ()'     | | |   |-DeclRefExpr 0x1490305a0 <col:34> 'struct sk_buff *' lvalue ParmVar 0x14900e248 'skb' 'struct sk_buff *'     | | |   |-DeclRefExpr 0x1490305c0 <col:39> 'struct xfrm_policy *' lvalue Var 0x149026fe8 'xp' 'struct xfrm_policy *'     | | |   |-RecoveryExpr 0x149030618 <col:43, col:46> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x1490305e0 <col:43> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     | | |   `-RecoveryExpr 0x149030678 <col:51, col:56> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x149030640 <col:51> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     | | `-IfStmt 0x149030e40 <line:54:3, line:59:3> has_else     | |   |-CallExpr 0x149030838 <line:54:7, col:22> 'int'     | |   | |-ImplicitCastExpr 0x149030820 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x1490307e0 <col:7> 'int ()' Function 0x149030728 'IS_ERR' 'int ()'     | |   | `-ImplicitCastExpr 0x149030860 <col:14> 'struct sk_buff *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x149030800 <col:14> 'struct sk_buff *' lvalue Var 0x149030400 'resp_skb' 'struct sk_buff *'     | |   |-CompoundStmt 0x149030a30 <col:25, line:56:3>     | |   | `-BinaryOperator 0x149030a10 <line:55:4, col:26> 'int' '='     | |   |   |-DeclRefExpr 0x149030878 <col:4> 'int' lvalue Var 0x149027298 'err' 'int'     | |   |   `-CallExpr 0x1490309d0 <col:10, col:26> 'int'     | |   |     |-ImplicitCastExpr 0x1490309b8 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |   |     | `-DeclRefExpr 0x149030978 <col:10> 'int ()' Function 0x1490308c0 'PTR_ERR' 'int ()'     | |   |     `-ImplicitCastExpr 0x1490309f8 <col:18> 'struct sk_buff *' <LValueToRValue>     | |   |       `-DeclRefExpr 0x149030998 <col:18> 'struct sk_buff *' lvalue Var 0x149030400 'resp_skb' 'struct sk_buff *'     | |   `-CompoundStmt 0x149030e28 <line:56:10, line:59:3>     | |     `-BinaryOperator 0x149030e08 <line:57:4, line:58:32> 'int' contains-errors '='     | |       |-DeclRefExpr 0x149030a48 <line:57:4> 'int' lvalue Var 0x149027298 'err' 'int'     | |       `-CallExpr 0x149030dd0 <col:10, line:58:32> '<dependent type>' contains-errors     | |         |-DeclRefExpr 0x149030b48 <line:57:10> 'int ()' Function 0x149030a90 'nlmsg_unicast' 'int ()'     | |         |-CXXDependentScopeMemberExpr 0x149030bc8 <col:24, col:34> '<dependent type>' contains-errors lvalue .nlsk     | |         | `-RecoveryExpr 0x149030ba0 <col:24, col:29> '<dependent type>' contains-errors lvalue     | |         |   `-DeclRefExpr 0x149030b68 <col:24> 'struct net *' contains-errors lvalue Var 0x149026c08 'net' 'struct net *'     | |         |-DeclRefExpr 0x149030c10 <col:40> 'struct sk_buff *' lvalue Var 0x149030400 'resp_skb' 'struct sk_buff *'     | |         `-RecoveryExpr 0x149030da8 <line:58:10, col:26> '<dependent type>' contains-errors lvalue     | |           `-CallExpr 0x149030d68 <col:10, col:24> 'int'     | |             |-ImplicitCastExpr 0x149030d50 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |             | `-DeclRefExpr 0x149030d10 <col:10> 'int ()' Function 0x149030c58 'NETLINK_CB' 'int ()'     | |             `-ImplicitCastExpr 0x149030d90 <col:21> 'struct sk_buff *' <LValueToRValue>     | |               `-DeclRefExpr 0x149030d30 <col:21> 'struct sk_buff *' lvalue ParmVar 0x14900e248 'skb' 'struct sk_buff *'     | `-CompoundStmt 0x1490317f0 <line:60:9, line:71:2>     |   |-IfStmt 0x149031140 <line:63:3, line:64:9>     |   | |-BinaryOperator 0x1490310b8 <line:63:7, col:14> 'int' '!='     |   | | |-ImplicitCastExpr 0x1490310a0 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x149031060 <col:7> 'int' lvalue Var 0x149027298 'err' 'int'     |   | | `-IntegerLiteral 0x149031080 <col:14> 'int' 0     |   | `-GotoStmt 0x149031128 <line:64:4, col:9> 'out' 0x1490310d8     |   |-BinaryOperator 0x149031298 <line:66:3, col:20> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1490311f0 <col:3, col:10> '<dependent type>' contains-errors lvalue .byid     |   | | `-CXXDependentScopeMemberExpr 0x1490311a8 <col:3, col:5> '<dependent type>' contains-errors lvalue .data     |   | |   `-RecoveryExpr 0x149031180 <col:3> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x149031160 <col:3> 'struct km_event' lvalue Var 0x149027418 'c' 'struct km_event'     |   | `-RecoveryExpr 0x149031270 <col:17, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149031238 <col:17> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     |   |-BinaryOperator 0x1490313a8 <line:67:3, col:18> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149031300 <col:3, col:5> '<dependent type>' contains-errors lvalue .event     |   | | `-RecoveryExpr 0x1490312d8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1490312b8 <col:3> 'struct km_event' lvalue Var 0x149027418 'c' 'struct km_event'     |   | `-RecoveryExpr 0x149031380 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149031348 <col:13> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |   |-BinaryOperator 0x1490314d0 <line:68:3, col:16> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149031428 <col:3, col:5> '<dependent type>' contains-errors lvalue .seq     |   | | `-RecoveryExpr 0x149031400 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1490313c8 <col:3> 'struct km_event' lvalue Var 0x149027418 'c' 'struct km_event'     |   | `-RecoveryExpr 0x1490314a8 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149031470 <col:11> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |   |-BinaryOperator 0x1490315e0 <line:69:3, col:19> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x149031538 <col:3, col:5> '<dependent type>' contains-errors lvalue .portid     |   | | `-RecoveryExpr 0x149031510 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1490314f0 <col:3> 'struct km_event' lvalue Var 0x149027418 'c' 'struct km_event'     |   | `-RecoveryExpr 0x1490315b8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149031580 <col:14> 'struct nlmsghdr *' lvalue ParmVar 0x149026628 'nlh' 'struct nlmsghdr *'     |   `-CallExpr 0x1490317b8 <line:70:3, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1490316e0 <col:3> 'int ()' Function 0x149031628 'km_policy_notify' 'int ()'     |     |-DeclRefExpr 0x149031700 <col:20> 'struct xfrm_policy *' lvalue Var 0x149026fe8 'xp' 'struct xfrm_policy *'     |     |-RecoveryExpr 0x149031758 <col:24, col:27> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x149031720 <col:24> 'struct xfrm_userpolicy_id *' lvalue Var 0x1490271e8 'p' 'struct xfrm_userpolicy_id *'     |     `-UnaryOperator 0x1490317a0 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x149031780 <col:33> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x1490319d8 <line:73:1, line:74:17> 'out'     | `-CallExpr 0x149031998 <col:2, col:17> 'int'     |   |-ImplicitCastExpr 0x149031980 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x149031940 <col:2> 'int ()' Function 0x149031888 'xfrm_pol_put' 'int ()'     |   `-ImplicitCastExpr 0x1490319c0 <col:15> 'struct xfrm_policy *' <LValueToRValue>     |     `-DeclRefExpr 0x149031960 <col:15> 'struct xfrm_policy *' lvalue Var 0x149026fe8 'xp' 'struct xfrm_policy *'     `-ReturnStmt 0x149031a30 <line:75:2, col:9>       `-ImplicitCastExpr 0x149031a18 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1490319f8 <col:9> 'int' lvalue Var 0x149027298 'err' 'int' ","20979":"`-FunctionDecl 0x13000dd98  line:1:1 emacs_tags_incstack_free 'int (void)'   `-CompoundStmt 0x13000e238 <line:2:1, line:10:1>     `-WhileStmt 0x13000e218 <line:3:5, line:9:5>       |-RecoveryExpr 0x13000deb8 <line:3:12> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13000e200 <line:4:5, line:9:5>         `-UnaryOperator 0x13000df28 <line:5:2, col:4> '<dependent type>' contains-errors prefix '--' cannot overflow           `-RecoveryExpr 0x13000df08 <col:4> '<dependent type>' contains-errors lvalue ","20367":"`-FunctionDecl 0x15b08a9e8  line:1:1 allocate_trace_buffer 'int (struct trace_array *, struct trace_buffer *, int)'   |-ParmVarDecl 0x15b073c48 <col:23, col:43> col:43 used tr 'struct trace_array *'   |-ParmVarDecl 0x15b08a828 <col:47, col:68> col:68 used buf 'struct trace_buffer *'   |-ParmVarDecl 0x15b08a8a8 <col:73, col:77> col:77 used size 'int'   `-CompoundStmt 0x15c808ba8 <line:2:1, line:24:1>     |-DeclStmt 0x15b08ac88 <line:3:2, col:33>     | |-EnumDecl 0x15b08aaf0 <col:2, col:7> col:7 ring_buffer_flags     | `-VarDecl 0x15b08ac08 <col:2, col:25> col:25 referenced invalid rb_flags 'enum ring_buffer_flags'     |-BinaryOperator 0x15b08aeb0 <line:5:2, col:72> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b08acc0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b08aca0 <col:2> 'enum ring_buffer_flags' lvalue Var 0x15b08ac08 'rb_flags' 'enum ring_buffer_flags'     | `-ConditionalOperator 0x15b08ae80 <col:13, col:72> '<dependent type>' contains-errors     |   |-BinaryOperator 0x15b08ae40 <col:13, col:31> '<dependent type>' contains-errors '&'     |   | |-RecoveryExpr 0x15b08ad20 <col:13, col:17> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15b08ace8 <col:13> 'struct trace_array *' lvalue ParmVar 0x15b073c48 'tr' 'struct trace_array *'     |   | `-RecoveryExpr 0x15b08ae20 <col:31> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x15b08ae60 <col:54> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x15b08adb0 <col:72> 'int' 0     |-BinaryOperator 0x15b08af50 <line:7:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b08af08 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b08aed0 <col:2> 'struct trace_buffer *' lvalue ParmVar 0x15b08a828 'buf' 'struct trace_buffer *'     | `-DeclRefExpr 0x15b08af30 <col:12> 'struct trace_array *' lvalue ParmVar 0x15b073c48 'tr' 'struct trace_array *'     |-BinaryOperator 0x15b08b170 <line:9:2, col:48> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b08afa8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b08af70 <col:2> 'struct trace_buffer *' lvalue ParmVar 0x15b08a828 'buf' 'struct trace_buffer *'     | `-CallExpr 0x15b08b140 <col:16, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b08b0e0 <col:16> 'int ()' Function 0x15b08b028 'ring_buffer_alloc' 'int ()'     |   |-DeclRefExpr 0x15b08b100 <col:34> 'int' lvalue ParmVar 0x15b08a8a8 'size' 'int'     |   `-RecoveryExpr 0x15b08b120 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b08b2c8 <line:10:2, line:11:11>     | |-UnaryOperator 0x15b08b208 <line:10:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b08b1f0 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15b08b1c8 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15b08b190 <col:7> 'struct trace_buffer *' lvalue ParmVar 0x15b08a828 'buf' 'struct trace_buffer *'     | `-ReturnStmt 0x15b08b2b8 <line:11:3, col:11>     |   `-UnaryOperator 0x15b08b2a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15b08b288 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15b08b268 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b08b728 <line:14:2, line:17:2>     | |-UnaryOperator 0x15b08b4c0 <line:14:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b08b4a8 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15b08b480 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15b08b448 <col:7> 'struct trace_buffer *' lvalue ParmVar 0x15b08a828 'buf' 'struct trace_buffer *'     | `-CompoundStmt 0x15b08b708 <col:18, line:17:2>     |   |-CallExpr 0x15b08b638 <line:15:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15b08b5b8 <col:3> 'int ()' Function 0x15b08b500 'ring_buffer_free' 'int ()'     |   | `-RecoveryExpr 0x15b08b610 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15b08b5d8 <col:20> 'struct trace_buffer *' lvalue ParmVar 0x15b08a828 'buf' 'struct trace_buffer *'     |   `-ReturnStmt 0x15b08b6f8 <line:16:3, col:11>     |     `-UnaryOperator 0x15b08b6e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x15b08b6c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x15b08b6a8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15c808b48 <line:20:2, line:21:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c8088b8 <line:20:2> 'int ()' Function 0x15c808800 'set_buffer_entries' 'int ()'     | |-UnaryOperator 0x15c808938 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15c808910 <col:22, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15c8088d8 <col:22> 'struct trace_array *' lvalue ParmVar 0x15b073c48 'tr' 'struct trace_array *'     | `-CallExpr 0x15c808b18 <line:21:7, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15c808a30 <col:7> 'int ()' Function 0x15c808978 'ring_buffer_size' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x15c808ab0 <col:24, col:41> '<dependent type>' contains-errors lvalue .buffer     |   | `-RecoveryExpr 0x15c808a88 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15c808a50 <col:24> 'struct trace_array *' lvalue ParmVar 0x15b073c48 'tr' 'struct trace_array *'     |   `-IntegerLiteral 0x15c808af8 <col:49> 'int' 0     `-ReturnStmt 0x15c808b98 <line:23:2, col:9>       `-IntegerLiteral 0x15c808b78 <col:9> 'int' 0 ","20460":"`-FunctionDecl 0x13c922600  line:1:12 handle_to_path 'int (int, struct file_handle)' static   |-ParmVarDecl 0x13d00dcd8 <col:27, col:31> col:31 used mountdirfd 'int'   |-ParmVarDecl 0x13d00e258 <col:43, col:62> col:62 invalid __user 'struct file_handle'   `-CompoundStmt 0x13e008ec0 <line:3:1, line:42:1>     |-DeclStmt 0x13c9227a0 <line:4:2, col:16>     | `-VarDecl 0x13c922718 <col:2, col:15> col:6 used retval 'int' cinit     |   `-IntegerLiteral 0x13c922780 <col:15> 'int' 0     |-DeclStmt 0x13c922878 <line:5:2, col:29>     | `-VarDecl 0x13c922810 <col:2, col:21> col:21 invalid f_handle 'struct file_handle'     |-DeclStmt 0x13c9229d0 <line:6:2, col:35>     | `-VarDecl 0x13c922918 <col:2, col:31> col:22 used handle 'struct file_handle *' cinit     |   `-RecoveryExpr 0x13c9229b0 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c922d58 <line:9:2, line:12:2>     | |-UnaryOperator 0x13c922bc0 <line:9:6, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13c922b98 <col:7, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13c922b00 <col:7> 'int ()' Function 0x13c922a48 'capable' 'int ()'     | |   `-RecoveryExpr 0x13c922b78 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13c922d38 <col:37, line:12:2>     |   |-BinaryOperator 0x13c922cb0 <line:10:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13c922bd8 <col:3> 'int' lvalue Var 0x13c922718 'retval' 'int'     |   | `-UnaryOperator 0x13c922c98 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13c922c80 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13c922c60 <col:13> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13c922d20 <line:11:3, col:8> 'out_err' 0x13c922cd0     |-IfStmt 0x13c923038 <line:13:2, line:16:2>     | |-RecoveryExpr 0x13c922ee8 <line:13:6, col:63> '_Bool' contains-errors     | `-CompoundStmt 0x13c923018 <col:66, line:16:2>     |   |-BinaryOperator 0x13c922fe0 <line:14:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13c922f08 <col:3> 'int' lvalue Var 0x13c922718 'retval' 'int'     |   | `-UnaryOperator 0x13c922fc8 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13c922fb0 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13c922f90 <col:13> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13c923000 <line:15:3, col:8> 'out_err' 0x13c922cd0     |-IfStmt 0x13c923310 <line:17:2, line:21:2>     | |-RecoveryExpr 0x13c9231c0 <line:17:6, line:18:33> '_Bool' contains-errors     | `-CompoundStmt 0x13c9232f0 <col:36, line:21:2>     |   |-BinaryOperator 0x13c9232b8 <line:19:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13c9231e0 <col:3> 'int' lvalue Var 0x13c922718 'retval' 'int'     |   | `-UnaryOperator 0x13c9232a0 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13c923288 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13c923268 <col:13> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13c9232d8 <line:20:3, col:8> 'out_err' 0x13c922cd0     |-IfStmt 0x13e008870 <line:24:2, line:27:2>     | |-UnaryOperator 0x13c923528 <line:24:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13c923510 <col:7> 'struct file_handle *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x13c9234f0 <col:7> 'struct file_handle *' contains-errors lvalue Var 0x13c922918 'handle' 'struct file_handle *'     | `-CompoundStmt 0x13e008850 <col:15, line:27:2>     |   |-BinaryOperator 0x13e008818 <line:25:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13c923540 <col:3> 'int' lvalue Var 0x13c922718 'retval' 'int'     |   | `-UnaryOperator 0x13e008800 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13c9235e8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13c9235c8 <col:13> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13e008838 <line:26:3, col:8> 'out_err' 0x13c922cd0     |-IfStmt 0x13e008b10 <line:29:2, line:34:2>     | |-RecoveryExpr 0x13e008970 <line:29:6, line:31:28> '_Bool' contains-errors     | `-CompoundStmt 0x13e008af0 <col:31, line:34:2>     |   |-BinaryOperator 0x13e008a68 <line:32:3, col:13> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13e008990 <col:3> 'int' lvalue Var 0x13c922718 'retval' 'int'     |   | `-UnaryOperator 0x13e008a50 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13e008a38 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13e008a18 <col:13> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13e008ad8 <line:33:3, col:8> 'out_handle' 0x13e008a88     |-LabelStmt 0x13e008e38 <line:38:1, line:39:14> 'out_handle'     | `-CallExpr 0x13e008df8 <col:2, col:14> 'int' contains-errors     |   |-ImplicitCastExpr 0x13e008de0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13e008d70 <col:2> 'int ()' Function 0x13e008cb8 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x13e008e20 <col:8> 'struct file_handle *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x13e008d90 <col:8> 'struct file_handle *' contains-errors lvalue Var 0x13c922918 'handle' 'struct file_handle *'     `-LabelStmt 0x13e008ea0 <line:40:1, line:41:9> 'out_err'       `-ReturnStmt 0x13e008e90 <col:2, col:9>         `-ImplicitCastExpr 0x13e008e78 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x13e008e58 <col:9> 'int' lvalue Var 0x13c922718 'retval' 'int' ","21232":"`-FunctionDecl 0x15000dda8  line:1:1 PHP_MINIT_FUNCTION 'int (int)'   |-ParmVarDecl 0x15000dcd8 <col:20> col:20 wddx 'int'   `-CompoundStmt 0x15000e120 <line:2:1, line:12:1>     `-ReturnStmt 0x15000e110 <line:11:2, col:9>       `-RecoveryExpr 0x15000e0f0 <col:9> '<dependent type>' contains-errors lvalue ","20995":"`-FunctionDecl 0x12d928688  col:10 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x12d928788 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12d941800 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x12d941868 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12d928730 <<invalid sloc>> Implicit 900 ","20406":"`-FunctionDecl 0x1290dbcc8  line:1:1 invalid gdk_pixbuf_loader_close 'int (int *, int **)'   |-ParmVarDecl 0x1290dbb28 <col:26, col:43> col:43 invalid loader 'int *'   |-ParmVarDecl 0x1290dbbe0 <line:2:26, col:43> col:43 invalid error 'int **'   `-CompoundStmt 0x1290f5ab8 <line:3:1, line:27:1>     |-CallExpr 0x1290dc010 <line:7:3, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1290dbef0 <col:3> 'int ()' Function 0x1290dbe38 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x1290dbfd0 <col:25, col:35> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1290dbf10 <col:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1290dbfb0 <col:35> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1290dbff0 <col:41> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1290f5220 <line:8:3, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1290dc040 <col:3> 'int ()' Function 0x1290dbe38 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x1290dc180 <col:25, col:53> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1290dc140 <col:25> 'int ()' Function 0x1290dc088 'GDK_IS_PIXBUF_LOADER' 'int ()'     | | `-RecoveryExpr 0x1290dc160 <col:47> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1290f5200 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1290f5480 <line:13:3, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1290f52b8 <col:3> 'int ()' Function 0x1290dbe38 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x1290f5440 <col:25, col:41> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x1290f53d8 <col:25, col:31> '<dependent type>' contains-errors lvalue ->closed     | | | `-RecoveryExpr 0x1290f53b8 <col:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1290f5420 <col:41> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1290f5460 <col:48> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1290f57f0 <line:16:3, line:17:54>       |-BinaryOperator 0x1290f55d0 <line:16:7, col:29> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x1290f5568 <col:7, col:13> '<dependent type>' contains-errors lvalue ->image_module       | | `-RecoveryExpr 0x1290f5548 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1290f55b0 <col:29> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1290f57b8 <line:17:5, col:54> '<dependent type>' contains-errors         |-DeclRefExpr 0x1290f56d0 <col:5> 'int ()' Function 0x1290f5618 'gdk_pixbuf_loader_load_module' 'int ()'         |-RecoveryExpr 0x1290f56f0 <col:36> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1290f5778 <col:44> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x1290f5798 <col:50> '<dependent type>' contains-errors lvalue ","20735":"`-FunctionDecl 0x13e8274d8  line:1:5 invalid nfc_start_poll 'int (struct nfc_dev *, int, int)'   |-ParmVarDecl 0x13e80e248 <col:20, col:36> col:36 used dev 'struct nfc_dev *'   |-ParmVarDecl 0x13e80e2e0 <col:41, col:45> col:45 invalid im_protocols 'int'   |-ParmVarDecl 0x13e80e360 <col:59, col:63> col:63 invalid tm_protocols 'int'   `-CompoundStmt 0x13e829408 <line:2:1, line:37:1>     |-DeclStmt 0x13e827618 <line:3:2, col:8>     | `-VarDecl 0x13e8275b0 <col:2, col:6> col:6 used rc 'int'     |-CallExpr 0x13e8279f0 <line:5:2, line:6:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e827790 <line:5:2> 'int ()' Function 0x13e8276d8 'pr_debug' 'int ()'     | |-StringLiteral 0x13e8277f0 <col:11> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x13e827988 <line:6:4, col:22> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13e8278f0 <col:4> 'int ()' Function 0x13e827838 'dev_name' 'int ()'     | | `-UnaryOperator 0x13e827970 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x13e827948 <col:14, col:19> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13e827910 <col:14> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     | |-RecoveryExpr 0x13e8279b0 <col:25> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13e8279d0 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e827b98 <line:8:2, line:9:11>     | |-BinaryOperator 0x13e827ad0 <line:8:6, col:24> 'int' contains-errors '&&'     | | |-UnaryOperator 0x13e827a68 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x13e827a50 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x13e827a30 <col:7> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x13e827ab8 <col:23, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x13e827aa0 <col:24> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x13e827a80 <col:24> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13e827b88 <line:9:3, col:11>     |   `-UnaryOperator 0x13e827b70 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13e827b58 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13e827b38 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e827d30 <line:11:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e827c98 <col:2> 'int ()' Function 0x13e827be0 'device_lock' 'int ()'     | `-UnaryOperator 0x13e827d18 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13e827cf0 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e827cb8 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     |-IfStmt 0x13e828090 <line:13:2, line:16:2>     | |-UnaryOperator 0x13e827ef8 <line:13:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13e827ed0 <col:7, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13e827e38 <col:7> 'int ()' Function 0x13e827d80 'device_is_registered' 'int ()'     | |   `-UnaryOperator 0x13e827eb8 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x13e827e90 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x13e827e58 <col:29> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x13e828070 <col:40, line:16:2>     |   |-BinaryOperator 0x13e827fe8 <line:14:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13e827f10 <col:3> 'int' lvalue Var 0x13e8275b0 'rc' 'int'     |   | `-UnaryOperator 0x13e827fd0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13e827fb8 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13e827f98 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13e828058 <line:15:3, col:8> 'error' 0x13e828008     |-IfStmt 0x13e828270 <line:18:2, line:21:2>     | |-UnaryOperator 0x13e828128 <line:18:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e828110 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13e8280e8 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13e8280b0 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x13e828250 <col:20, line:21:2>     |   |-BinaryOperator 0x13e828218 <line:19:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13e828140 <col:3> 'int' lvalue Var 0x13e8275b0 'rc' 'int'     |   | `-UnaryOperator 0x13e828200 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13e8281e8 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13e8281c8 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13e828238 <line:20:3, col:8> 'error' 0x13e828008     |-IfStmt 0x13e828e20 <line:23:2, line:26:2>     | |-RecoveryExpr 0x13e8282c8 <line:23:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e828290 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x13e828e00 <col:20, line:26:2>     |   |-BinaryOperator 0x13e8283c8 <line:24:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13e8282f0 <col:3> 'int' lvalue Var 0x13e8275b0 'rc' 'int'     |   | `-UnaryOperator 0x13e8283b0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x13e828398 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x13e828378 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13e8283e8 <line:25:3, col:8> 'error' 0x13e828008     |-BinaryOperator 0x13e828fa0 <line:28:2, col:59> 'int' contains-errors '='     | |-DeclRefExpr 0x13e828e40 <col:2> 'int' lvalue Var 0x13e8275b0 'rc' 'int'     | `-CallExpr 0x13e828f68 <col:7, col:59> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x13e828ec0 <col:7, col:17> '<dependent type>' contains-errors lvalue ->start_poll     |   | `-RecoveryExpr 0x13e828e98 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13e828e60 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     |   |-DeclRefExpr 0x13e828f08 <col:28> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     |   |-RecoveryExpr 0x13e828f28 <col:33> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13e828f48 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e8291e0 <line:29:2, line:32:2>     | |-UnaryOperator 0x13e828ff8 <line:29:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e828fe0 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13e828fc0 <col:7> 'int' lvalue Var 0x13e8275b0 'rc' 'int'     | `-CompoundStmt 0x13e8291c0 <col:11, line:32:2>     |   |-BinaryOperator 0x13e8290c8 <line:30:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13e829048 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13e829010 <col:3> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     |   | `-RecoveryExpr 0x13e8290a8 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x13e8291a0 <line:31:3, col:18> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13e829120 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13e8290e8 <col:3> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     |     `-RecoveryExpr 0x13e829180 <col:18> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x13e8293a0 <line:34:1, line:35:25> 'error'     | `-CallExpr 0x13e829378 <col:2, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13e8292e0 <col:2> 'int ()' Function 0x13e829228 'device_unlock' 'int ()'     |   `-UnaryOperator 0x13e829360 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13e829338 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13e829300 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x13e80e248 'dev' 'struct nfc_dev *'     `-ReturnStmt 0x13e8293f8 <line:36:2, col:9>       `-ImplicitCastExpr 0x13e8293e0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13e8293c0 <col:9> 'int' lvalue Var 0x13e8275b0 'rc' 'int' ","20281":"`-FunctionDecl 0x14300dda8  line:1:1 copyFromFrameBuffer 'int (char *)'   |-ParmVarDecl 0x14300dcd8 <col:22, col:27> col:28 'char *'   `-CompoundStmt 0x143808e10 <line:7:1, line:99:1>     `-IfStmt 0x143808de0 <line:13:5, line:98:5> has_else       |-BinaryOperator 0x14300df48 <line:13:9, col:19> 'int' contains-errors '=='       | |-RecoveryExpr 0x14300df08 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14300df28 <col:19> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x14300e370 <line:14:5, line:53:5>       | `-SwitchStmt 0x14300dfb8 <line:19:9, line:52:9>       |   |-RecoveryExpr 0x14300df98 <line:19:17> '<dependent type>' contains-errors lvalue       |   `-CompoundStmt 0x14300e328 <line:20:9, line:52:9>       |     |-WhileStmt 0x14300e128 <line:23:13, line:28:13>       |     | |-BinaryOperator 0x14300e088 <line:23:20, col:31> 'int' contains-errors '<='       |     | | |-RecoveryExpr 0x14300e048 <col:20> '<dependent type>' contains-errors lvalue       |     | | `-RecoveryExpr 0x14300e068 <col:31> '<dependent type>' contains-errors lvalue       |     | `-CompoundStmt 0x14300e110 <line:24:13, line:28:13>       |     |   `-RecoveryExpr 0x14300e0d8 <line:25:17> '<dependent type>' contains-errors lvalue       |     |-BreakStmt 0x14300e148 <line:29:13>       |     |-WhileStmt 0x14300e280 <line:33:13, line:37:13>       |     | |-BinaryOperator 0x14300e1f8 <line:33:20, col:31> 'int' contains-errors '<='       |     | | |-RecoveryExpr 0x14300e1b8 <col:20> '<dependent type>' contains-errors lvalue       |     | | `-RecoveryExpr 0x14300e1d8 <col:31> '<dependent type>' contains-errors lvalue       |     | `-CompoundStmt 0x14300e268 <line:34:13, line:37:13>       |     |   `-RecoveryExpr 0x14300e248 <line:35:17> '<dependent type>' contains-errors lvalue       |     |-BreakStmt 0x14300e2a0 <line:38:13>       |     |-WhileStmt 0x14300e2d8 <line:42:13, line:46:13>       |     | |-RecoveryExpr 0x14300e2a8 <line:42:20, col:31> '_Bool' contains-errors       |     | `-CompoundStmt 0x14300e2c8 <line:43:13, line:46:13>       |     |-BreakStmt 0x14300e2f8 <line:47:13>       |     `-DefaultStmt 0x14300e308 <line:49:11, col:18>       |       `-NullStmt 0x14300e300 <col:18>       `-CompoundStmt 0x143808dc8 <line:55:5, line:98:5>         `-SwitchStmt 0x14300e3a8 <line:60:9, line:97:9>           |-RecoveryExpr 0x14300e388 <line:60:17> 'int' contains-errors           `-CompoundStmt 0x143808d80 <line:61:9, line:97:9>             |-WhileStmt 0x143808c48 <line:64:13, line:70:13>             | |-RecoveryExpr 0x14300e3d0 <line:64:20, col:31> '_Bool' contains-errors             | `-CompoundStmt 0x143808c38 <line:65:13, line:70:13>             |-BreakStmt 0x143808c68 <line:71:13>             |-WhileStmt 0x143808ca0 <line:75:13, line:80:13>             | |-RecoveryExpr 0x143808c70 <line:75:20, col:31> '_Bool' contains-errors             | `-CompoundStmt 0x143808c90 <line:76:13, line:80:13>             |-BreakStmt 0x143808cc0 <line:81:13>             |-WhileStmt 0x143808d30 <line:85:13, line:91:13>             | |-RecoveryExpr 0x143808cc8 <line:85:20, col:31> '_Bool' contains-errors             | `-CompoundStmt 0x143808d20 <line:86:13, line:91:13>             |-BreakStmt 0x143808d50 <line:92:13>             `-DefaultStmt 0x143808d60 <line:94:11, col:18>               `-NullStmt 0x143808d58 <col:18> ","20276":"`-FunctionDecl 0x12910bff8  line:1:21 invalid sc_html_read_line 'int (int *)' static   |-ParmVarDecl 0x12910bf28 <col:39, col:54> col:54 referenced invalid parser 'int *'   `-CompoundStmt 0x12881a4a0 <line:2:1, line:36:1>     |-DeclStmt 0x12910c138 <line:3:2, col:27>     | `-VarDecl 0x12910c0d0 <col:2, col:8> col:8 referenced invalid buf 'char'     |-DeclStmt 0x12910c1e0 <line:4:2, col:28>     | `-VarDecl 0x12910c178 <col:2, col:8> col:8 invalid buf2 'char'     |-DeclStmt 0x12910c278 <line:5:2, col:12>     | `-VarDecl 0x12910c210 <col:2, col:7> col:7 used index 'int'     |-DeclStmt 0x12910c310 <line:6:2, col:8>     | `-VarDecl 0x12910c2a8 <col:2, col:7> col:7 used n 'int'     |-IfStmt 0x12910c450 <line:8:2, line:9:10>     | |-BinaryOperator 0x12910c3e8 <line:8:6, col:20> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12910c348 <col:6, col:14> '<dependent type>' contains-errors lvalue ->fp     | | | `-RecoveryExpr 0x12910c328 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12910c3c8 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12910c440 <line:9:3, col:10>     |   `-RecoveryExpr 0x12910c420 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x129125768 <line:11:2, col:43> 'int' contains-errors '='     | |-DeclRefExpr 0x12910c470 <col:2> 'int' lvalue Var 0x12910c2a8 'n' 'int'     | `-CallExpr 0x129125728 <col:6, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129125600 <col:6> 'int ()' Function 0x12910c538 'fread' 'int ()'     |   |-RecoveryExpr 0x129125620 <col:12> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x129125640 <col:17> 'int' 1     |   |-UnaryExprOrTypeTraitExpr 0x1291256a0 <col:20, col:30> 'unsigned long' contains-errors sizeof     |   | `-ParenExpr 0x129125680 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x129125660 <col:27> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x1291256e0 <col:33, col:41> '<dependent type>' contains-errors lvalue ->fp     |     `-RecoveryExpr 0x1291256c0 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129125a60 <line:12:2, line:16:12> has_else     | |-BinaryOperator 0x1291257e0 <line:12:6, col:11> 'int' '=='     | | |-ImplicitCastExpr 0x1291257c8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x129125788 <col:6> 'int' lvalue Var 0x12910c2a8 'n' 'int'     | | `-IntegerLiteral 0x1291257a8 <col:11> 'int' 0     | |-CompoundStmt 0x129125950 <col:14, line:15:2>     | | |-BinaryOperator 0x1291258e8 <line:13:3, col:19> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x129125848 <col:3, col:11> '<dependent type>' contains-errors lvalue ->state     | | | | `-RecoveryExpr 0x129125820 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x129125800 <col:3> 'int *' lvalue ParmVar 0x12910bf28 'parser' 'int *'     | | | `-RecoveryExpr 0x1291258c8 <col:19> '<dependent type>' contains-errors lvalue     | | `-ReturnStmt 0x129125940 <line:14:3, col:10>     | |   `-RecoveryExpr 0x129125920 <col:10> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x129125a40 <line:16:3, col:12> '<dependent type>' contains-errors '='     |   |-ArraySubscriptExpr 0x129125a08 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x1291259d8 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x129125990 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x129125970 <col:3> 'char' lvalue Var 0x12910c0d0 'buf' 'char'     |   | `-ImplicitCastExpr 0x1291259f0 <col:7> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x1291259b8 <col:7> 'int' lvalue Var 0x12910c2a8 'n' 'int'     |   `-CharacterLiteral 0x129125a28 <col:12> 'int' 0     |-IfStmt 0x129126440 <line:18:2, line:27:2>     | |-BinaryOperator 0x129125cf8 <line:18:6, col:60> 'int' contains-errors '<'     | | |-CallExpr 0x129125c98 <col:6, col:56> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x129125b70 <col:6> 'int ()' Function 0x129125ab8 'conv_convert' 'int ()'     | | | |-CXXDependentScopeMemberExpr 0x129125bb0 <col:19, col:27> '<dependent type>' contains-errors lvalue ->conv     | | | | `-RecoveryExpr 0x129125b90 <col:19> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x129125bf8 <col:33> '<dependent type>' contains-errors lvalue     | | | |-UnaryExprOrTypeTraitExpr 0x129125c58 <col:39, col:50> 'unsigned long' contains-errors sizeof     | | | | `-ParenExpr 0x129125c38 <col:45, col:50> '<dependent type>' contains-errors lvalue     | | | |   `-RecoveryExpr 0x129125c18 <col:46> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x129125c78 <col:53> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x129125cd8 <col:60> 'int' 0     | `-CompoundStmt 0x129126408 <col:63, line:27:2>     |   |-BinaryOperator 0x129125e70 <line:19:3, col:39> 'int' contains-errors '='     |   | |-DeclRefExpr 0x129125d18 <col:3> 'int' lvalue Var 0x12910c210 'index' 'int'     |   | `-BinaryOperator 0x129125e50 <col:11, col:39> '<dependent type>' contains-errors '-'     |   |   |-CXXDependentScopeMemberExpr 0x129125d58 <col:11, col:19> '<dependent type>' contains-errors lvalue ->bufp     |   |   | `-RecoveryExpr 0x129125d38 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-CXXDependentScopeMemberExpr 0x129125e08 <col:26, col:39> '<dependent type>' contains-errors lvalue ->str     |   |     `-CXXDependentScopeMemberExpr 0x129125dc0 <col:26, col:34> '<dependent type>' contains-errors lvalue ->buf     |   |       `-RecoveryExpr 0x129125da0 <col:26> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x129126030 <line:21:3, col:42> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x129125f70 <col:3> 'int ()' Function 0x129125eb8 'conv_utf8todisp' 'int ()'     |   | |-RecoveryExpr 0x129125f90 <col:19> '<dependent type>' contains-errors lvalue     |   | |-UnaryExprOrTypeTraitExpr 0x129125ff0 <col:25, col:36> 'unsigned long' contains-errors sizeof     |   | | `-ParenExpr 0x129125fd0 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x129125fb0 <col:32> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x129126010 <col:39> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1291261f0 <line:22:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x129126148 <col:3> 'int ()' Function 0x129126090 'g_string_append' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x129126188 <col:19, col:27> '<dependent type>' contains-errors lvalue ->buf     |   | | `-RecoveryExpr 0x129126168 <col:19> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1291261d0 <col:32> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1291263a0 <line:24:3, col:37> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x129126268 <col:3, col:11> '<dependent type>' contains-errors lvalue ->bufp     |   | | `-RecoveryExpr 0x129126240 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x129126220 <col:3> 'int *' lvalue ParmVar 0x12910bf28 'parser' 'int *'     |   | `-BinaryOperator 0x129126380 <col:18, col:37> '<dependent type>' contains-errors '+'     |   |   |-CXXDependentScopeMemberExpr 0x129126318 <col:18, col:31> '<dependent type>' contains-errors lvalue ->str     |   |   | `-CXXDependentScopeMemberExpr 0x1291262d0 <col:18, col:26> '<dependent type>' contains-errors lvalue ->buf     |   |   |   `-RecoveryExpr 0x1291262b0 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x129126360 <col:37> 'int' lvalue Var 0x12910c210 'index' 'int'     |   `-ReturnStmt 0x1291263f8 <line:26:3, col:10>     |     `-RecoveryExpr 0x1291263d8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1291265b8 <line:29:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x129126460 <col:2> 'int' lvalue Var 0x12910c210 'index' 'int'     | `-BinaryOperator 0x129126598 <col:10, col:38> '<dependent type>' contains-errors '-'     |   |-CXXDependentScopeMemberExpr 0x1291264a0 <col:10, col:18> '<dependent type>' contains-errors lvalue ->bufp     |   | `-RecoveryExpr 0x129126480 <col:10> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x129126550 <col:25, col:38> '<dependent type>' contains-errors lvalue ->str     |     `-CXXDependentScopeMemberExpr 0x129126508 <col:25, col:33> '<dependent type>' contains-errors lvalue ->buf     |       `-RecoveryExpr 0x1291264e8 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12881a288 <line:31:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1291265d8 <col:2> 'int ()' Function 0x129126090 'g_string_append' 'int ()'     | |-CXXDependentScopeMemberExpr 0x12881a220 <col:18, col:26> '<dependent type>' contains-errors lvalue ->buf     | | `-RecoveryExpr 0x12881a200 <col:18> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12881a268 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12881a438 <line:33:2, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12881a300 <col:2, col:10> '<dependent type>' contains-errors lvalue ->bufp     | | `-RecoveryExpr 0x12881a2d8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12881a2b8 <col:2> 'int *' lvalue ParmVar 0x12910bf28 'parser' 'int *'     | `-BinaryOperator 0x12881a418 <col:17, col:36> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x12881a3b0 <col:17, col:30> '<dependent type>' contains-errors lvalue ->str     |   | `-CXXDependentScopeMemberExpr 0x12881a368 <col:17, col:25> '<dependent type>' contains-errors lvalue ->buf     |   |   `-RecoveryExpr 0x12881a348 <col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12881a3f8 <col:36> 'int' lvalue Var 0x12910c210 'index' 'int'     `-ReturnStmt 0x12881a490 <line:35:2, col:9>       `-RecoveryExpr 0x12881a470 <col:9> '<dependent type>' contains-errors lvalue ","21221":"`-FunctionDecl 0x147008da0  col:9 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x147008ea0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x147008f08 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x147008f70 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x147008e48 <<invalid sloc>> Implicit 905   `-FormatAttr 0x147008ff0 <col:9> Implicit printf 3 4 ","20985":"`-FunctionDecl 0x13a128750  line:1:13 kvm_arch_vcpu_guestdbg_update_apicv_inhibit 'void (struct kvm *)' static   |-ParmVarDecl 0x13a128648 <col:57, col:69> col:69 used kvm 'struct kvm *'   `-CompoundStmt 0x13a1458c8 <line:2:1, line:17:1>     |-DeclStmt 0x13a144e48 <line:4:2, col:23>     | |-RecordDecl 0x13a144c60 <col:2, col:9> col:9 struct kvm_vcpu     | `-VarDecl 0x13a144dc8 <col:2, col:19> col:19 used vcpu 'struct kvm_vcpu *'     |-DeclStmt 0x13a144ee0 <line:5:2, col:17>     | `-VarDecl 0x13a144e78 <col:2, col:16> col:16 used i 'unsigned long'     |-CallExpr 0x13a1450f0 <line:7:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a145010 <col:2> 'int ()' Function 0x13a144f58 'down_write' 'int ()'     | `-UnaryOperator 0x13a1450d8 <col:13, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13a145090 <col:14, col:24> '<dependent type>' contains-errors lvalue .apicv_update_lock     |     `-RecoveryExpr 0x13a145068 <col:14, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13a145030 <col:14> 'struct kvm *' lvalue ParmVar 0x13a128648 'kvm' 'struct kvm *'     |-CallExpr 0x13a1452c8 <line:9:2, col:32> 'int'     | |-ImplicitCastExpr 0x13a1452b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13a1451f8 <col:2> 'int ()' Function 0x13a145140 'kvm_for_each_vcpu' 'int ()'     | |-ImplicitCastExpr 0x13a145300 <col:20> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x13a145218 <col:20> 'unsigned long' lvalue Var 0x13a144e78 'i' 'unsigned long'     | |-ImplicitCastExpr 0x13a145318 <col:23> 'struct kvm_vcpu *' <LValueToRValue>     | | `-DeclRefExpr 0x13a145238 <col:23> 'struct kvm_vcpu *' lvalue Var 0x13a144dc8 'vcpu' 'struct kvm_vcpu *'     | `-ImplicitCastExpr 0x13a145330 <col:29> 'struct kvm *' <LValueToRValue>     |   `-DeclRefExpr 0x13a145258 <col:29> 'struct kvm *' lvalue ParmVar 0x13a128648 'kvm' 'struct kvm *'     |-CompoundStmt 0x13a145468 <col:34, line:14:2>     | `-IfStmt 0x13a145448 <line:10:3, line:13:3>     |   |-BinaryOperator 0x13a145400 <line:10:7, col:27> '<dependent type>' contains-errors '&'     |   | |-RecoveryExpr 0x13a145380 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13a145348 <col:7> 'struct kvm_vcpu *' lvalue Var 0x13a144dc8 'vcpu' 'struct kvm_vcpu *'     |   | `-RecoveryExpr 0x13a1453e0 <col:27> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x13a145438 <col:50, line:13:3>     |-CallExpr 0x13a1456a8 <line:15:2, col:73> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a145560 <col:2> 'int ()' Function 0x13a1454a8 '__kvm_request_apicv_update' 'int ()'     | |-DeclRefExpr 0x13a145580 <col:29> 'struct kvm *' lvalue ParmVar 0x13a128648 'kvm' 'struct kvm *'     | |-UnaryOperator 0x13a145670 <col:34, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13a145658 <col:35> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13a145638 <col:35> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13a145688 <col:44> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13a1458a0 <line:16:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x13a1457c0 <col:2> 'int ()' Function 0x13a145708 'up_write' 'int ()'       `-UnaryOperator 0x13a145888 <col:11, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x13a145840 <col:12, col:22> '<dependent type>' contains-errors lvalue .apicv_update_lock           `-RecoveryExpr 0x13a145818 <col:12, col:17> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x13a1457e0 <col:12> 'struct kvm *' lvalue ParmVar 0x13a128648 'kvm' 'struct kvm *' ","20435":"`-FunctionDecl 0x150142318  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x150142418 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150142480 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1501424e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1501423c0 <<invalid sloc>> Implicit 900 ","20542":"`-FunctionDecl 0x123829a78  col:13 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x123829b78 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x123829b20 <<invalid sloc>> Implicit 873 ","20764":"`-FunctionDecl 0x15900e038  line:1:1 invalid compile_lock_unlock 'int (int *, char *, int *, int, void *)'   |-ParmVarDecl 0x15900dd28 <line:2:5, col:14> col:14 invalid lvp 'int *'   |-ParmVarDecl 0x15900dda8 <line:3:5, col:14> col:14 used name_end 'char *'   |-ParmVarDecl 0x15900de28 <line:4:5, col:14> col:14 invalid eap 'int *'   |-ParmVarDecl 0x15900dea8 <line:5:5, col:13> col:13 used deep 'int'   |-ParmVarDecl 0x15900df28 <line:6:5, col:14> col:14 used coookie 'void *'   `-CompoundStmt 0x159029da8 <line:7:1, line:67:1>     |-DeclStmt 0x15900e240 <line:9:5, col:24>     | `-VarDecl 0x15900e158 <col:5, col:16> col:10 used cc 'int' cinit     |   `-ImplicitCastExpr 0x15900e228 <col:15, col:16> 'int' <IntegralCast>     |     `-ImplicitCastExpr 0x15900e210 <col:15, col:16> 'char' <LValueToRValue>     |       `-UnaryOperator 0x15900e1f8 <col:15, col:16> 'char' lvalue prefix '*' cannot overflow     |         `-ImplicitCastExpr 0x15900e1e0 <col:16> 'char *' <LValueToRValue>     |           `-DeclRefExpr 0x15900e1c0 <col:16> 'char *' lvalue ParmVar 0x15900dda8 'name_end' 'char *'     |-DeclStmt 0x15900e340 <line:10:5, col:29>     | `-VarDecl 0x15900e270 <col:5, col:22> col:13 used p 'char *' cinit     |   `-CXXDependentScopeMemberExpr 0x15900e2f8 <col:17, col:22> '<dependent type>' contains-errors lvalue ->ll_name     |     `-RecoveryExpr 0x15900e2d8 <col:17> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x159027e20 <line:11:5, col:18>     | `-VarDecl 0x15900e370 <col:5, col:16> col:10 used ret 'int' cinit     |   `-RecoveryExpr 0x159027e00 <col:16> '<dependent type>' contains-errors lvalue     |-UnaryExprOrTypeTraitExpr 0x159027e90 <line:12:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x159027e70 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x159027f30 <line:13:5, col:16>     | `-VarDecl 0x159027ec8 <col:5, col:13> col:13 used buf 'char *'     |-DeclStmt 0x1590280d0 <line:15:5, col:51>     | `-VarDecl 0x159027f60 <col:5, col:11> col:11 used cmd 'char *'     |-IfStmt 0x159028270 <line:17:5, line:18:9>     | |-BinaryOperator 0x159028208 <line:17:9, col:27> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x1590281a0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->ctx_skip     | | | `-RecoveryExpr 0x159028180 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1590281e8 <col:27> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x159028260 <line:18:2, col:9>     |   `-RecoveryExpr 0x159028240 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159028660 <line:20:5, line:24:5>     | |-BinaryOperator 0x159028398 <line:20:9, col:15> 'int' contains-errors '=='     | | |-UnaryOperator 0x159028360 <col:9, col:10> 'char' contains-errors lvalue prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x159028348 <col:10> 'char *' contains-errors <LValueToRValue>     | | |   `-DeclRefExpr 0x159028290 <col:10> 'char *' contains-errors lvalue Var 0x15900e270 'p' 'char *'     | | `-RecoveryExpr 0x159028378 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x159028650 <line:21:5, line:24:5>     |-IfStmt 0x159028d10 <line:27:5, line:47:5>     | |-BinaryOperator 0x159028740 <line:27:9, col:17> 'int' contains-errors '!='     | | |-ImplicitCastExpr 0x159028728 <col:9, col:12> 'int' contains-errors <IntegralCast>     | | | `-ImplicitCastExpr 0x159028710 <col:9, col:12> 'char' contains-errors <LValueToRValue>     | | |   `-ArraySubscriptExpr 0x1590286d8 <col:9, col:12> 'char' contains-errors lvalue     | | |     |-ImplicitCastExpr 0x1590286c0 <col:9> 'char *' contains-errors <LValueToRValue>     | | |     | `-DeclRefExpr 0x159028680 <col:9> 'char *' contains-errors lvalue Var 0x15900e270 'p' 'char *'     | | |     `-IntegerLiteral 0x1590286a0 <col:11> 'int' 1     | | `-CharacterLiteral 0x1590286f8 <col:17> 'int' 58     | `-CompoundStmt 0x159028cf8 <line:28:5, line:47:5>     |   `-IfStmt 0x159028cd8 <line:31:2, line:46:2>     |     |-RecoveryExpr 0x1590289c0 <line:31:6, col:46> '_Bool' contains-errors     |     `-CompoundStmt 0x159028cc0 <line:32:2, line:46:2>     |       `-IfStmt 0x159028b80 <line:35:6, line:39:6>     |         |-RecoveryExpr 0x159028a30 <line:35:10, col:33> '_Bool' contains-errors     |         `-CompoundStmt 0x159028b70 <line:36:6, line:39:6>     |-IfStmt 0x159029d30 <line:53:5, line:65:5> has_else     | |-RecoveryExpr 0x1590295b8 <line:53:9, col:16> '_Bool' contains-errors     | |-NullStmt 0x159029d28 <line:54:2>     | `-CompoundStmt 0x159029d08 <line:56:5, line:65:5>     |   |-CallExpr 0x159029c08 <line:63:2, col:14> 'int'     |   | |-ImplicitCastExpr 0x159029bf0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x159029b80 <col:2> 'int ()' Function 0x159029ac8 'vim_free' 'int ()'     |   | `-ImplicitCastExpr 0x159029c30 <col:11> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x159029ba0 <col:11> 'char *' lvalue Var 0x159027ec8 'buf' 'char *'     |   `-BinaryOperator 0x159029ce8 <line:64:2, col:14> 'char' '='     |     |-UnaryOperator 0x159029c80 <col:2, col:3> 'char' lvalue prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x159029c68 <col:3> 'char *' <LValueToRValue>     |     |   `-DeclRefExpr 0x159029c48 <col:3> 'char *' lvalue ParmVar 0x15900dda8 'name_end' 'char *'     |     `-ImplicitCastExpr 0x159029cd0 <col:14> 'char' <IntegralCast>     |       `-ImplicitCastExpr 0x159029cb8 <col:14> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x159029c98 <col:14> 'int' lvalue Var 0x15900e158 'cc' 'int'     `-ReturnStmt 0x159029d98 <line:66:5, col:12>       `-ImplicitCastExpr 0x159029d80 <col:12> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x159029d60 <col:12> 'int' contains-errors lvalue Var 0x15900e370 'ret' 'int' ","20428":"`-FunctionDecl 0x15991ddc8  line:1:1 invalid rfbProcessClientAuthType 'int (int)'   |-ParmVarDecl 0x15991dcf0 <col:26, col:39> col:39 referenced invalid cl 'int'   `-CompoundStmt 0x159937800 <line:2:1, line:48:1>     |-DeclStmt 0x15991df90 <line:4:5, col:13>     | |-VarDecl 0x15991de90 <col:5, col:9> col:9 used n 'int'     | `-VarDecl 0x15991df10 <col:5, col:12> col:12 used i 'int'     |-CallExpr 0x15991e1c8 <line:7:5, col:17> 'int'     | |-ImplicitCastExpr 0x15991e1b0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15991e100 <col:5> 'int ()' Function 0x15991e048 'rfbLog' 'int ()'     | `-ImplicitCastExpr 0x15991e1f0 <col:12> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x15991e160 <col:12> 'char[4]' lvalue \"STR\"     |-IfStmt 0x15991e2c8 <line:9:5, line:10:2>     | |-BinaryOperator 0x15991e298 <line:9:8, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15991e258 <col:8> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15991e278 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15991e2b8 <line:10:2>     |-IfStmt 0x14a008750 <line:14:5, line:21:5>     | |-BinaryOperator 0x14a0082f8 <line:14:9, col:14> 'int' '<='     | | |-ImplicitCastExpr 0x14a0082e0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14a0082a0 <col:9> 'int' lvalue Var 0x15991de90 'n' 'int'     | | `-IntegerLiteral 0x14a0082c0 <col:14> 'int' 0     | `-CompoundStmt 0x14a008728 <col:17, line:21:5>     |   |-IfStmt 0x14a0085a0 <line:15:2, line:18:24> has_else     |   | |-BinaryOperator 0x14a008370 <line:15:6, col:11> 'int' '=='     |   | | |-ImplicitCastExpr 0x14a008358 <col:6> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x14a008318 <col:6> 'int' lvalue Var 0x15991de90 'n' 'int'     |   | | `-IntegerLiteral 0x14a008338 <col:11> 'int' 0     |   | |-CallExpr 0x14a0083e8 <line:16:6, col:18> 'int'     |   | | |-ImplicitCastExpr 0x14a0083d0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14a008390 <col:6> 'int ()' Function 0x15991e048 'rfbLog' 'int ()'     |   | | `-ImplicitCastExpr 0x14a008410 <col:13> 'char *' <ArrayToPointerDecay>     |   | |   `-StringLiteral 0x14a0083b0 <col:13> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x14a008560 <line:18:6, col:24> 'int'     |   |   |-ImplicitCastExpr 0x14a008548 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14a008508 <col:6> 'int ()' Function 0x14a008450 'rfbLogPerror' 'int ()'     |   |   `-ImplicitCastExpr 0x14a008588 <col:19> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x14a008528 <col:19> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x14a0086f0 <line:19:2, col:19> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a0086b0 <col:2> 'int ()' Function 0x14a0085f8 'rfbCloseClient' 'int ()'     |   | `-RecoveryExpr 0x14a0086d0 <col:17> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14a008718 <line:20:2>     |-ForStmt 0x14a008b68 <line:25:5, line:28:5>     | |-BinaryOperator 0x14a0088f0 <line:25:10, col:14> 'int' '='     | | |-DeclRefExpr 0x14a0088b0 <col:10> 'int' lvalue Var 0x15991df10 'i' 'int'     | | `-IntegerLiteral 0x14a0088d0 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14a008a18 <col:17, col:27> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14a008910 <col:17> 'int' lvalue Var 0x15991df10 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x14a0089d0 <col:21, col:27> '<dependent type>' contains-errors lvalue ->nAuthCaps     | |   `-RecoveryExpr 0x14a0089b0 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14a008a58 <col:38, col:39> 'int' postfix '++'     | | `-DeclRefExpr 0x14a008a38 <col:38> 'int' lvalue Var 0x15991df10 'i' 'int'     | `-CompoundStmt 0x14a008b50 <col:43, line:28:5>     |   `-IfStmt 0x14a008b30 <line:26:2, line:27:6>     |     |-RecoveryExpr 0x14a008b08 <line:26:6, col:35> '_Bool' contains-errors     |     `-BreakStmt 0x14a008b28 <line:27:6>     |-IfStmt 0x14a008e50 <line:29:5, line:34:5>     | |-BinaryOperator 0x14a008ca8 <line:29:9, col:20> 'int' contains-errors '>='     | | |-DeclRefExpr 0x14a008ba0 <col:9> 'int' lvalue Var 0x15991df10 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x14a008c60 <col:14, col:20> '<dependent type>' contains-errors lvalue ->nAuthCaps     | |   `-RecoveryExpr 0x14a008c40 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a008e28 <col:31, line:34:5>     |   |-CallExpr 0x14a008d70 <line:30:2, line:31:14> 'int'     |   | |-ImplicitCastExpr 0x14a008d58 <line:30:2> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14a008cc8 <col:2> 'int ()' Function 0x15991e048 'rfbLog' 'int ()'     |   | `-ImplicitCastExpr 0x14a008d98 <col:9, line:31:9> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14a008d30 <line:30:9, line:31:9> 'char[7]' lvalue \"STRSTR\"     |   |-CallExpr 0x14a008df0 <line:32:2, col:19> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a008db0 <col:2> 'int ()' Function 0x14a0085f8 'rfbCloseClient' 'int ()'     |   | `-RecoveryExpr 0x14a008dd0 <col:17> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14a008e18 <line:33:2>     `-SwitchStmt 0x14a008e90 <line:36:5, line:47:5>       |-RecoveryExpr 0x14a008e70 <line:36:13> 'int' contains-errors       `-CompoundStmt 0x14a0091c0 <col:24, line:47:5>         |-BreakStmt 0x14a008f48 <line:40:2>         |-CallExpr 0x14a009070 <line:42:2, col:28> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a009030 <col:2> 'int ()' Function 0x14a008f78 'rfbVncAuthSendChallenge' 'int ()'         | `-RecoveryExpr 0x14a009050 <col:26> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x14a009098 <line:43:2>         |-DefaultStmt 0x14a009138 <line:44:5, line:45:14>         | `-CallExpr 0x14a0090f8 <col:2, col:14> 'int'         |   |-ImplicitCastExpr 0x14a0090e0 <col:2> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x14a0090a0 <col:2> 'int ()' Function 0x15991e048 'rfbLog' 'int ()'         |   `-ImplicitCastExpr 0x14a009120 <col:9> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x14a0090c0 <col:9> 'char[4]' lvalue \"STR\"         `-CallExpr 0x14a009198 <line:46:2, col:19> '<dependent type>' contains-errors           |-DeclRefExpr 0x14a009158 <col:2> 'int ()' Function 0x14a0085f8 'rfbCloseClient' 'int ()'           `-RecoveryExpr 0x14a009178 <col:17> '<dependent type>' contains-errors lvalue ","20199":"`-FunctionDecl 0x159928318  line:1:1 invalid deep_count_callback 'int (int *, int *, int)'   |-ParmVarDecl 0x159928128 <col:22, col:31> col:31 invalid source_object 'int *'   |-ParmVarDecl 0x1599281a8 <line:2:8, col:22> col:22 invalid res 'int *'   |-ParmVarDecl 0x159928228 <line:3:8, col:17> col:17 invalid user_data 'int'   `-CompoundStmt 0x159941dd0 <line:4:1, line:34:1>     |-IfStmt 0x1599287b8 <line:11:2, line:15:2>     | |-BinaryOperator 0x159928560 <line:11:6, col:26> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x1599284f8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->directory     | | | `-RecoveryExpr 0x1599284d8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x159928540 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x159928798 <col:32, line:15:2>     |   |-CallExpr 0x159928760 <line:13:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1599286e0 <col:3> 'int ()' Function 0x159928628 'deep_count_state_free' 'int ()'     |   | `-RecoveryExpr 0x159928740 <col:26> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x159928788 <line:14:3>     `-IfStmt 0x159941da0 <line:21:2, line:33:2> has_else       |-RecoveryExpr 0x159941b40 <line:21:6, col:20> '_Bool' contains-errors       |-CompoundStmt 0x159941c80 <col:26, line:25:2>       `-CompoundStmt 0x159941d90 <col:9, line:33:2> ","21214":"`-FunctionDecl 0x15800de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x15800dd58 <col:8> col:8 ExprMatchTest 'int'   |-ParmVarDecl 0x15800dcd8 <col:23> col:23 GteWithLHSFieldPathMatchesCorrectly 'int'   `-CompoundStmt 0x158027098 <col:60, line:8:1>     |-CallExpr 0x15800e280 <line:2:5, col:34> 'int'     | |-ImplicitCastExpr 0x15800e268 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15800e060 <col:5> 'int ()' Function 0x15800dfa8 'createMatcher' 'int ()'     | `-CallExpr 0x15800e228 <col:19, col:33> 'int'     |   |-ImplicitCastExpr 0x15800e210 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15800e160 <col:19> 'int ()' Function 0x15800e0a8 'fromjson' 'int ()'     |   `-ImplicitCastExpr 0x15800e250 <col:28> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x15800e1c0 <col:28> 'char[4]' lvalue \"STR\"     |-CallExpr 0x158026cd0 <line:4:5, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15800e388 <col:5> 'int ()' Function 0x15800e2d0 'ASSERT_TRUE' 'int ()'     | `-CallExpr 0x158026ca8 <col:17, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1580266b8 <col:17> 'int ()' Function 0x158026600 'matches' 'int ()'     |   `-CallExpr 0x158026c80 <col:25, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1580267b8 <col:25> 'int ()' Function 0x158026700 'BSON' 'int ()'     |     `-RecoveryExpr 0x158026c50 <col:30, col:39> '<dependent type>' contains-errors lvalue     |       |-StringLiteral 0x1580267d8 <col:30> 'char[4]' lvalue \"STR\"     |       `-IntegerLiteral 0x1580267f8 <col:39> 'int' 3     |-CallExpr 0x158026e30 <line:5:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158026cf8 <col:5> 'int ()' Function 0x15800e2d0 'ASSERT_TRUE' 'int ()'     | `-CallExpr 0x158026e08 <col:17, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x158026d18 <col:17> 'int ()' Function 0x158026600 'matches' 'int ()'     |   `-CallExpr 0x158026de0 <col:25, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x158026d38 <col:25> 'int ()' Function 0x158026700 'BSON' 'int ()'     |     `-RecoveryExpr 0x158026db0 <col:30, col:39> '<dependent type>' contains-errors lvalue     |       |-StringLiteral 0x158026d58 <col:30> 'char[4]' lvalue \"STR\"     |       `-IntegerLiteral 0x158026d78 <col:39> 'int' 10     `-CallExpr 0x158027070 <line:7:5, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x158026f38 <col:5> 'int ()' Function 0x158026e80 'ASSERT_FALSE' 'int ()'       `-CallExpr 0x158027048 <col:18, col:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x158026f58 <col:18> 'int ()' Function 0x158026600 'matches' 'int ()'         `-CallExpr 0x158027020 <col:26, col:41> '<dependent type>' contains-errors           |-DeclRefExpr 0x158026f78 <col:26> 'int ()' Function 0x158026700 'BSON' 'int ()'           `-RecoveryExpr 0x158026ff0 <col:31, col:40> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x158026f98 <col:31> 'char[4]' lvalue \"STR\"             `-IntegerLiteral 0x158026fb8 <col:40> 'int' 1 ","20235":"`-FunctionDecl 0x1289418d8  line:1:16 invalid rebind_store 'int (struct device_driver *, const char *, int)' static   |-ParmVarDecl 0x128928668 <col:29, col:51> col:51 dev 'struct device_driver *'   |-ParmVarDecl 0x1289286e8 <col:56, col:68> col:68 used buf 'const char *'   |-ParmVarDecl 0x128928768 <line:2:6, col:13> col:13 invalid count 'int'   `-CompoundStmt 0x128943fc0 <line:3:1, line:29:1>     |-DeclStmt 0x128941a18 <line:4:2, col:9>     | `-VarDecl 0x1289419b0 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x128941ab0 <line:5:2, col:9>     | `-VarDecl 0x128941a48 <col:2, col:6> col:6 used len 'int'     |-DeclStmt 0x128941cb8 <line:6:2, col:25>     | |-RecordDecl 0x128941ac8 <col:2, col:9> col:9 struct bus_id_priv     | `-VarDecl 0x128941c38 <col:2, col:22> col:22 used bid 'struct bus_id_priv *'     |-BinaryOperator 0x128941f48 <line:9:2, col:31> 'int' contains-errors '='     | |-DeclRefExpr 0x128941cd0 <col:2> 'int' lvalue Var 0x128941a48 'len' 'int'     | `-CallExpr 0x128941f18 <col:8, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128941e50 <col:8> 'int ()' Function 0x128941d98 'strnlen' 'int ()'     |   |-DeclRefExpr 0x128941e70 <col:16> 'const char *' lvalue ParmVar 0x1289286e8 'buf' 'const char *'     |   `-RecoveryExpr 0x128941ef8 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128942088 <line:11:2, line:12:11>     | |-RecoveryExpr 0x128941fc0 <line:11:6, col:24> '_Bool' contains-errors     | `-ReturnStmt 0x128942078 <line:12:3, col:11>     |   `-UnaryOperator 0x128942060 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x128942048 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x128942028 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x128942290 <line:14:2, col:26> 'struct bus_id_priv *' '='     | |-DeclRefExpr 0x1289420a8 <col:2> 'struct bus_id_priv *' lvalue Var 0x128941c38 'bid' 'struct bus_id_priv *'     | `-ImplicitCastExpr 0x128942278 <col:8, col:26> 'struct bus_id_priv *' <IntegralToPointer>     |   `-CallExpr 0x128942238 <col:8, col:26> 'int'     |     |-ImplicitCastExpr 0x128942220 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1289421a8 <col:8> 'int ()' Function 0x1289420f0 'get_busid_priv' 'int ()'     |     `-ImplicitCastExpr 0x128942260 <col:23> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x1289421c8 <col:23> 'const char *' lvalue ParmVar 0x1289286e8 'buf' 'const char *'     |-IfStmt 0x1289423a8 <line:15:2, line:16:11>     | |-UnaryOperator 0x1289422e8 <line:15:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1289422d0 <col:7> 'struct bus_id_priv *' <LValueToRValue>     | |   `-DeclRefExpr 0x1289422b0 <col:7> 'struct bus_id_priv *' lvalue Var 0x128941c38 'bid' 'struct bus_id_priv *'     | `-ReturnStmt 0x128942398 <line:16:3, col:11>     |   `-UnaryOperator 0x128942380 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x128942368 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x128942348 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x128942480 <line:19:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x128942400 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1289423c8 <col:2> 'struct bus_id_priv *' lvalue Var 0x128941c38 'bid' 'struct bus_id_priv *'     | `-RecoveryExpr 0x128942460 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1289426b8 <line:21:2, col:35> 'int' '='     | |-DeclRefExpr 0x1289424a0 <col:2> 'int' lvalue Var 0x1289419b0 'ret' 'int'     | `-CallExpr 0x128942670 <col:8, col:35> 'int'     |   |-ImplicitCastExpr 0x128942658 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1289425a0 <col:8> 'int ()' Function 0x1289424e8 'do_rebind' 'int ()'     |   |-CStyleCastExpr 0x128942610 <col:18, col:27> 'char *' <NoOp>     |   | `-ImplicitCastExpr 0x1289425f8 <col:27> 'const char *' <LValueToRValue> part_of_explicit_cast     |   |   `-DeclRefExpr 0x1289425c0 <col:27> 'const char *' lvalue ParmVar 0x1289286e8 'buf' 'const char *'     |   `-ImplicitCastExpr 0x1289426a0 <col:32> 'struct bus_id_priv *' <LValueToRValue>     |     `-DeclRefExpr 0x128942638 <col:32> 'struct bus_id_priv *' lvalue Var 0x128941c38 'bid' 'struct bus_id_priv *'     |-IfStmt 0x128942798 <line:22:2, line:23:10>     | |-BinaryOperator 0x128942730 <line:22:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x128942718 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1289426d8 <col:6> 'int' lvalue Var 0x1289419b0 'ret' 'int'     | | `-IntegerLiteral 0x1289426f8 <col:12> 'int' 0     | `-ReturnStmt 0x128942788 <line:23:3, col:10>     |   `-ImplicitCastExpr 0x128942770 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x128942750 <col:10> 'int' lvalue Var 0x1289419b0 'ret' 'int'     |-CallExpr 0x128943f68 <line:26:2, col:30> 'int'     | |-ImplicitCastExpr 0x128943f50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x128943eb8 <col:2> 'int ()' Function 0x128943e00 'del_match_busid' 'int ()'     | `-CStyleCastExpr 0x128943f28 <col:18, col:27> 'char *' <NoOp>     |   `-ImplicitCastExpr 0x128943f10 <col:27> 'const char *' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x128943ed8 <col:27> 'const char *' lvalue ParmVar 0x1289286e8 'buf' 'const char *'     `-ReturnStmt 0x128943fb0 <line:28:2, col:9>       `-RecoveryExpr 0x128943f90 <col:9> '<dependent type>' contains-errors lvalue ","20466":"`-FunctionDecl 0x12f928200  line:1:6 invalid RunOneAveragePoolTest 'void (const int)'   |-ParmVarDecl 0x12f9280f0 <col:28, <invalid sloc>> col:44 invalid 'const int'   `-CompoundStmt 0x12f941990 <line:4:62, line:20:1>     |-DeclStmt 0x12f928438 <line:5:3, col:50>     | `-VarDecl 0x12f9282c8 <col:3, col:49> col:13 used buffer_size 'const int' cinit     |   `-CallExpr 0x12f928418 <col:27, col:49> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x12f9283d0 <col:27, col:40> '<dependent type>' contains-errors lvalue .FlatSize     |       `-RecoveryExpr 0x12f9283b0 <col:27> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12f928480 <line:6:3> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12f9284d0 <line:7:3> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12f928520 <line:9:3> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12f928570 <line:12:3> '<dependent type>' contains-errors lvalue     `-ForStmt 0x12f941958 <line:16:3, line:19:3>       |-DeclStmt 0x12f928630 <line:16:8, col:17>       | `-VarDecl 0x12f9285a8 <col:8, col:16> col:12 used i 'int' cinit       |   `-IntegerLiteral 0x12f928610 <col:16> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x12f9286b8 <col:19, col:23> 'int' contains-errors '<'       | |-ImplicitCastExpr 0x12f928688 <col:19> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x12f928648 <col:19> 'int' lvalue Var 0x12f9285a8 'i' 'int'       | `-ImplicitCastExpr 0x12f9286a0 <col:23> 'int' contains-errors <LValueToRValue>       |   `-DeclRefExpr 0x12f928668 <col:23> 'const int' contains-errors lvalue Var 0x12f9282c8 'buffer_size' 'const int'       |-UnaryOperator 0x12f9286f8 <col:36, col:37> 'int' postfix '++'       | `-DeclRefExpr 0x12f9286d8 <col:36> 'int' lvalue Var 0x12f9285a8 'i' 'int'       `-CompoundStmt 0x12f941948 <col:41, line:19:3> ","20206":"`-FunctionDecl 0x1278267e8  line:1:12 wcd9335_codec_enable_rx_bias 'int (struct snd_soc_dapm_widget *, struct snd_kcontrol *, int)' static   |-ParmVarDecl 0x12780e248 <col:41, col:69> col:69 used w 'struct snd_soc_dapm_widget *'   |-ParmVarDecl 0x127826628 <line:2:3, col:24> col:24 kc 'struct snd_kcontrol *'   |-ParmVarDecl 0x1278266a8 <col:28, col:32> col:32 used event 'int'   `-CompoundStmt 0x127122950 <line:3:1, line:29:1>     |-DeclStmt 0x127826cb0 <line:4:2, col:69>     | |-RecordDecl 0x1278268f0 <col:2, col:9> col:9 struct snd_soc_component     | `-VarDecl 0x127826a58 <col:2, col:68> col:28 used comp 'struct snd_soc_component *' cinit     |   `-CallExpr 0x127826c70 <col:35, col:68> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x127826bf0 <col:35> 'int ()' Function 0x127826b38 'snd_soc_dapm_to_component' 'int ()'     |     `-RecoveryExpr 0x127826c48 <col:61, col:64> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x127826c10 <col:61> 'struct snd_soc_dapm_widget *' lvalue ParmVar 0x12780e248 'w' 'struct snd_soc_dapm_widget *'     |-DeclStmt 0x127827040 <line:5:2, col:56>     | |-RecordDecl 0x127826cc8 <col:2, col:9> col:9 struct wcd9335_codec     | `-VarDecl 0x127826e38 <col:2, col:55> col:24 used wcd 'struct wcd9335_codec *' cinit     |   `-CallExpr 0x127827000 <col:30, col:55> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x127826f80 <col:30> 'int ()' Function 0x127826ec8 'dev_get_drvdata' 'int ()'     |     `-RecoveryExpr 0x127826fd8 <col:46, col:52> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x127826fa0 <col:46> 'struct snd_soc_component *' contains-errors lvalue Var 0x127826a58 'comp' 'struct snd_soc_component *'     |-SwitchStmt 0x127827090 <line:7:2, line:26:2>     | |-ImplicitCastExpr 0x127827078 <line:7:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x127827058 <col:10> 'int' lvalue ParmVar 0x1278266a8 'event' 'int'     | `-CompoundStmt 0x1271228d8 <col:17, line:26:2>     |   |-UnaryOperator 0x127827130 <line:9:3, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | `-RecoveryExpr 0x127827108 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1278270d0 <col:3> 'struct wcd9335_codec *' contains-errors lvalue Var 0x127826e38 'wcd' 'struct wcd9335_codec *'     |   |-IfStmt 0x127122600 <line:10:3, line:16:3>     |   | |-BinaryOperator 0x1278271c8 <line:10:7, col:29> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x127827180 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x127827148 <col:7> 'struct wcd9335_codec *' contains-errors lvalue Var 0x127826e38 'wcd' 'struct wcd9335_codec *'     |   | | `-IntegerLiteral 0x1278271a8 <col:29> 'int' 1     |   | `-CompoundStmt 0x1278275e0 <col:32, line:16:3>     |   |   |-CallExpr 0x127827358 <line:11:4, col:35> 'int' contains-errors     |   |   | |-ImplicitCastExpr 0x127827340 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x1278272c8 <col:4> 'int ()' Function 0x127827210 'wcd9335_codec_init_flyback' 'int ()'     |   |   | `-ImplicitCastExpr 0x127827380 <col:31> 'struct snd_soc_component *' contains-errors <LValueToRValue>     |   |   |   `-DeclRefExpr 0x1278272e8 <col:31> 'struct snd_soc_component *' contains-errors lvalue Var 0x127826a58 'comp' 'struct snd_soc_component *'     |   |   `-CallExpr 0x1278275a0 <line:12:4, line:15:33> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x127827478 <line:12:4> 'int ()' Function 0x1278273c0 'snd_soc_component_update_bits' 'int ()'     |   |     |-DeclRefExpr 0x127827498 <col:34> 'struct snd_soc_component *' contains-errors lvalue Var 0x127826a58 'comp' 'struct snd_soc_component *'     |   |     |-RecoveryExpr 0x127827540 <line:13:7> '<dependent type>' contains-errors lvalue     |   |     |-RecoveryExpr 0x127827560 <line:14:7> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x127827580 <line:15:7> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x127122620 <line:17:3>     |   |-UnaryOperator 0x1271226a0 <line:19:3, col:21> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-RecoveryExpr 0x127122678 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x127122640 <col:3> 'struct wcd9335_codec *' contains-errors lvalue Var 0x127826e38 'wcd' 'struct wcd9335_codec *'     |   |-IfStmt 0x1271228b0 <line:20:3, line:24:33>     |   | |-UnaryOperator 0x127122730 <line:20:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x127122718 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x1271226f0 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x1271226b8 <col:8> 'struct wcd9335_codec *' contains-errors lvalue Var 0x127826e38 'wcd' 'struct wcd9335_codec *'     |   | `-CallExpr 0x127122870 <line:21:4, line:24:33> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x127122748 <line:21:4> 'int ()' Function 0x1278273c0 'snd_soc_component_update_bits' 'int ()'     |   |   |-DeclRefExpr 0x127122768 <col:34> 'struct snd_soc_component *' contains-errors lvalue Var 0x127826a58 'comp' 'struct snd_soc_component *'     |   |   |-RecoveryExpr 0x127122810 <line:22:6> '<dependent type>' contains-errors lvalue     |   |   |-RecoveryExpr 0x127122830 <line:23:6> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x127122850 <line:24:6> '<dependent type>' contains-errors lvalue     |   `-BreakStmt 0x1271228d0 <line:25:3>     |-NullStmt 0x127122918 <line:26:3>     `-ReturnStmt 0x127122940 <line:28:2, col:9>       `-IntegerLiteral 0x127122920 <col:9> 'int' 0 ","21251":"`-FunctionDecl 0x15013f070  line:1:13 scalar32_min_max_or 'void (struct bpf_reg_state *, struct bpf_reg_state *)' static   |-ParmVarDecl 0x150126c48 <col:33, col:55> col:55 used dst_reg 'struct bpf_reg_state *'   |-ParmVarDecl 0x150126d38 <line:2:5, col:27> col:27 src_reg 'struct bpf_reg_state *'   `-CompoundStmt 0x15013ff18 <line:3:1, line:26:1>     |-DeclStmt 0x15013f4c0 <line:6:2, col:55>     | |-RecordDecl 0x15013f188 <col:2, col:9> col:9 struct tnum     | `-VarDecl 0x15013f288 <col:2, col:14> col:14 invalid var32_off 'struct tnum'     |-IfStmt 0x15013f598 <line:11:2, line:12:3>     | |-BinaryOperator 0x15013f568 <line:11:6, col:19> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x15013f528 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15013f548 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15013f588 <line:12:3>     |-BinaryOperator 0x15013f830 <line:15:2, col:63> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15013f5f0 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15013f5b8 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'     | `-CallExpr 0x15013f800 <col:27, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15013f6f8 <col:27> 'int ()' Function 0x15013f640 'max' 'int ()'     |   |-RecoveryExpr 0x15013f750 <col:31, col:40> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15013f718 <col:31> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'     |   `-RecoveryExpr 0x15013f7e0 <col:55> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15013f9a0 <line:16:2, col:55> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15013f888 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15013f850 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'     | `-BinaryOperator 0x15013f980 <col:27, col:55> '<dependent type>' contains-errors '|'     |   |-CXXDependentScopeMemberExpr 0x15013f8d0 <col:27, col:37> '<dependent type>' contains-errors lvalue .value     |   | `-RecoveryExpr 0x15013f8b0 <col:27> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x15013f938 <col:45, col:55> '<dependent type>' contains-errors lvalue .mask     |     `-RecoveryExpr 0x15013f918 <col:45> '<dependent type>' contains-errors lvalue     `-IfStmt 0x15013fee8 <line:17:2, line:25:2> has_else       |-BinaryOperator 0x15013fb18 <line:17:6, col:47> 'int' contains-errors '||'       | |-BinaryOperator 0x15013fa40 <col:6, col:31> 'int' contains-errors '<'       | | |-RecoveryExpr 0x15013f9f8 <col:6, col:15> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x15013f9c0 <col:6> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'       | | `-IntegerLiteral 0x15013fa20 <col:31> 'int' 0       | `-BinaryOperator 0x15013faf8 <col:36, col:47> 'int' contains-errors '<'       |   |-RecoveryExpr 0x15013fad8 <col:36> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x15013fa78 <col:47> 'int' 0       |-CompoundStmt 0x15013fce8 <col:50, line:21:2>       | |-BinaryOperator 0x15013fbf0 <line:19:3, col:28> '<dependent type>' contains-errors '='       | | |-RecoveryExpr 0x15013fb70 <col:3, col:12> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x15013fb38 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'       | | `-RecoveryExpr 0x15013fbd0 <col:28> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x15013fcc8 <line:20:3, col:28> '<dependent type>' contains-errors '='       |   |-RecoveryExpr 0x15013fc48 <col:3, col:12> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x15013fc10 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'       |   `-RecoveryExpr 0x15013fca8 <col:28> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15013fec8 <line:21:9, line:25:2>         |-BinaryOperator 0x15013fdc8 <line:23:3, col:37> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x15013fd40 <col:3, col:12> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x15013fd08 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'         | `-RecoveryExpr 0x15013fda0 <col:28, col:37> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x15013fd68 <col:28> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'         `-BinaryOperator 0x15013fea8 <line:24:3, col:37> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x15013fe20 <col:3, col:12> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x15013fde8 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *'           `-RecoveryExpr 0x15013fe80 <col:28, col:37> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x15013fe48 <col:28> 'struct bpf_reg_state *' lvalue ParmVar 0x150126c48 'dst_reg' 'struct bpf_reg_state *' ","20832":"`-FunctionDecl 0x14401f518  line:1:1 invalid horAcc16 'int (int *, int *, int)'   |-ParmVarDecl 0x14401f328 <col:10, col:16> col:16 invalid tif 'int *'   |-ParmVarDecl 0x14401f3a8 <col:21, col:28> col:28 invalid cp0 'int *'   |-ParmVarDecl 0x14401f428 <col:33, col:42> col:42 invalid cc 'int'   `-CompoundStmt 0x14600cf30 <line:2:1, line:16:1>     `-IfStmt 0x14600cf10 <line:9:2, line:15:2>       |-BinaryOperator 0x14401f8a8 <line:9:6, col:11> 'int' contains-errors '>'       | |-RecoveryExpr 0x14401f868 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14401f888 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14600cef8 <col:19, line:15:2>         `-DoStmt 0x14600ced8 <line:11:3, line:14:18>           |-CompoundStmt 0x14600ce88 <line:11:6, line:14:3>           `-RecoveryExpr 0x14600ceb8 <col:12, col:17> '_Bool' contains-errors ","20644":"`-FunctionDecl 0x12a827438  line:1:13 invalid ipv4_rt_blackhole_cow_metrics 'int *(struct dst_entry *, unsigned long)' static   |-ParmVarDecl 0x12a80e268 <col:43, col:61> col:61 dst 'struct dst_entry *'   |-ParmVarDecl 0x12a80e2e8 <line:2:8, col:22> col:22 old 'unsigned long'   `-CompoundStmt 0x12a827538 <line:3:1, line:5:1>     `-ReturnStmt 0x12a827528 <line:4:2, col:9>       `-RecoveryExpr 0x12a827508 <col:9> '<dependent type>' contains-errors lvalue ","20670":"`-FunctionDecl 0x12b00e350  line:1:6 ipmi_irq_start_cleanup 'void (struct si_sm_io *)'   |-ParmVarDecl 0x12b00e248 <col:29, col:46> col:46 used io 'struct si_sm_io *'   `-CompoundStmt 0x12b0268a0 <line:2:1, line:6:1>     `-IfStmt 0x12b026880 <line:3:2, line:5:41>       |-BinaryOperator 0x12b026718 <line:3:6, col:21> 'int' contains-errors '=='       | |-RecoveryExpr 0x12b026680 <col:6, col:10> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x12b026648 <col:6> 'struct si_sm_io *' lvalue ParmVar 0x12b00e248 'io' 'struct si_sm_io *'       | `-RecoveryExpr 0x12b0266f8 <col:21> '<dependent type>' contains-errors lvalue       `-CallExpr 0x12b026848 <line:5:3, col:41> '<dependent type>' contains-errors         |-RecoveryExpr 0x12b026770 <col:3, col:7> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x12b026738 <col:3> 'struct si_sm_io *' lvalue ParmVar 0x12b00e248 'io' 'struct si_sm_io *'         |-DeclRefExpr 0x12b026798 <col:15> 'struct si_sm_io *' lvalue ParmVar 0x12b00e248 'io' 'struct si_sm_io *'         |-RecoveryExpr 0x12b026828 <col:19> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x12b0267d0 <col:40> 'int' 0 ","20843":"`-FunctionDecl 0x125128750  line:1:6 vcpu_load 'void (struct kvm_vcpu *)'   |-ParmVarDecl 0x125128648 <col:16, col:33> col:33 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x12580b308 <line:2:1, line:18:1>     |-DeclStmt 0x125140ac8 <line:3:2, col:9>     | `-VarDecl 0x125140a60 <col:2, col:6> col:6 used cpu 'int'     |-CallExpr 0x125140ca8 <line:5:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125140c10 <col:2> 'int ()' Function 0x125140b58 'mutex_lock' 'int ()'     | `-UnaryOperator 0x125140c90 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x125140c68 <col:14, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125140c30 <col:14> 'struct kvm_vcpu *' lvalue ParmVar 0x125128648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x1251418d8 <line:6:2, line:13:2>     | |-RecoveryExpr 0x125140ea8 <line:6:6, col:58> '_Bool' contains-errors     | `-CompoundStmt 0x1251418a0 <col:61, line:13:2>     |   |-DeclStmt 0x125141118 <line:8:3, col:33>     |   | |-RecordDecl 0x125140ec8 <col:3, col:10> col:10 struct pid     |   | `-VarDecl 0x125141038 <col:3, col:30> col:15 used oldpid 'struct pid *' cinit     |   |   `-RecoveryExpr 0x1251410d8 <col:24, col:30> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1251410a0 <col:24> 'struct kvm_vcpu *' lvalue ParmVar 0x125128648 'vcpu' 'struct kvm_vcpu *'     |   |-DeclStmt 0x1251413f0 <line:9:3, col:58>     |   | `-VarDecl 0x1251411b8 <col:3, col:57> col:15 used newpid 'struct pid *' cinit     |   |   `-CallExpr 0x1251413c0 <col:24, col:57> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x125141300 <col:24> 'int ()' Function 0x125141248 'get_task_pid' 'int ()'     |   |     |-RecoveryExpr 0x125141380 <col:37> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x1251413a0 <col:46> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x125141588 <line:10:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1251414e8 <col:3> 'int ()' Function 0x125141430 'rcu_assign_pointer' 'int ()'     |   | |-RecoveryExpr 0x125141540 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x125141508 <col:22> 'struct kvm_vcpu *' lvalue ParmVar 0x125128648 'vcpu' 'struct kvm_vcpu *'     |   | `-DeclRefExpr 0x125141568 <col:33> 'struct pid *' contains-errors lvalue Var 0x1251411b8 'newpid' 'struct pid *'     |   |-CallExpr 0x125141708 <line:11:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x1251416f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x125141698 <col:3> 'int ()' Function 0x1251415e0 'synchronize_rcu' 'int ()'     |   `-CallExpr 0x125141860 <line:12:3, col:17> 'int' contains-errors     |     |-ImplicitCastExpr 0x125141848 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x125141808 <col:3> 'int ()' Function 0x125141750 'put_pid' 'int ()'     |     `-ImplicitCastExpr 0x125141888 <col:11> 'struct pid *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x125141828 <col:11> 'struct pid *' contains-errors lvalue Var 0x125141038 'oldpid' 'struct pid *'     |-BinaryOperator 0x12580ae58 <line:14:2, col:16> 'int' '='     | |-DeclRefExpr 0x1251418f8 <col:2> 'int' lvalue Var 0x125140a60 'cpu' 'int'     | `-CallExpr 0x12580ae38 <col:8, col:16> 'int'     |   `-ImplicitCastExpr 0x12580ae20 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x12580ae00 <col:8> 'int ()' Function 0x125141940 'get_cpu' 'int ()'     |-CallExpr 0x12580aff0 <line:15:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12580af58 <col:2> 'int ()' Function 0x12580aea0 'preempt_notifier_register' 'int ()'     | `-UnaryOperator 0x12580afd8 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12580afb0 <col:29, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12580af78 <col:29> 'struct kvm_vcpu *' lvalue ParmVar 0x125128648 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x12580b170 <line:16:2, col:30> 'int'     | |-ImplicitCastExpr 0x12580b158 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12580b0f8 <col:2> 'int ()' Function 0x12580b040 'kvm_arch_vcpu_load' 'int ()'     | |-ImplicitCastExpr 0x12580b1a0 <col:21> 'struct kvm_vcpu *' <LValueToRValue>     | | `-DeclRefExpr 0x12580b118 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x125128648 'vcpu' 'struct kvm_vcpu *'     | `-ImplicitCastExpr 0x12580b1b8 <col:27> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12580b138 <col:27> 'int' lvalue Var 0x125140a60 'cpu' 'int'     `-CallExpr 0x12580b2e8 <line:17:2, col:10> 'int'       `-ImplicitCastExpr 0x12580b2d0 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12580b2b0 <col:2> 'int ()' Function 0x12580b1f8 'put_cpu' 'int ()' ","21203":"`-FunctionDecl 0x11f826808  line:1:21 ipv6_defrag 'unsigned int (void *, struct sk_buff *, const struct nf_hook_state *)' static   |-ParmVarDecl 0x11f80dcd8 <col:33, col:39> col:39 priv 'void *'   |-ParmVarDecl 0x11f80e2c8 <line:2:5, col:21> col:21 used skb 'struct sk_buff *'   |-ParmVarDecl 0x11f8266c8 <line:3:5, col:33> col:33 used state 'const struct nf_hook_state *'   `-CompoundStmt 0x11f826f40 <line:4:1, line:20:1>     |-DeclStmt 0x11f826990 <line:5:2, col:9>     | `-VarDecl 0x11f826928 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x11f826d78 <line:13:2, line:14:42> 'int' contains-errors '='     | |-DeclRefExpr 0x11f8269a8 <line:13:2> 'int' lvalue Var 0x11f826928 'err' 'int'     | `-CallExpr 0x11f826d40 <col:8, line:14:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f826af0 <line:13:8> 'int ()' Function 0x11f826a38 'nf_ct_frag6_gather' 'int ()'     |   |-RecoveryExpr 0x11f826b48 <col:27, col:34> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x11f826b10 <col:27> 'const struct nf_hook_state *' lvalue ParmVar 0x11f8266c8 'state' 'const struct nf_hook_state *'     |   |-DeclRefExpr 0x11f826b70 <col:39> 'struct sk_buff *' lvalue ParmVar 0x11f80e2c8 'skb' 'struct sk_buff *'     |   `-CallExpr 0x11f826d10 <line:14:6, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11f826c70 <col:6> 'int ()' Function 0x11f826bb8 'nf_ct6_defrag_user' 'int ()'     |     |-RecoveryExpr 0x11f826cc8 <col:25, col:32> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x11f826c90 <col:25> 'const struct nf_hook_state *' lvalue ParmVar 0x11f8266c8 'state' 'const struct nf_hook_state *'     |     `-DeclRefExpr 0x11f826cf0 <col:38> 'struct sk_buff *' lvalue ParmVar 0x11f80e2c8 'skb' 'struct sk_buff *'     |-IfStmt 0x11f826ed8 <line:16:2, line:17:10>     | |-BinaryOperator 0x11f826e70 <line:16:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x11f826d98 <col:6> 'int' lvalue Var 0x11f826928 'err' 'int'     | | `-UnaryOperator 0x11f826e58 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x11f826e40 <col:14> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x11f826e20 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11f826ec8 <line:17:3, col:10>     |   `-RecoveryExpr 0x11f826ea8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11f826f30 <line:19:2, col:9>       `-RecoveryExpr 0x11f826f10 <col:9> '<dependent type>' contains-errors lvalue ","20345":"`-FunctionDecl 0x13a830f50  line:1:6 usb_serial_console_disconnect 'void (struct usb_serial *)'   |-ParmVarDecl 0x13a830e48 <col:36, col:55> col:55 used serial 'struct usb_serial *'   `-CompoundStmt 0x13a8543e0 <line:2:1, line:7:1>     `-IfStmt 0x13a8543c0 <line:3:2, line:6:2>       |-BinaryOperator 0x13a854070 <line:3:6, col:38> 'int' contains-errors '=='       | |-ArraySubscriptExpr 0x13a853fe8 <col:6, col:20> '<dependent type>' contains-errors lvalue       | | |-ImplicitCastExpr 0x13a853fd0 <col:6, col:14> '<dependent type>' contains-errors <LValueToRValue>       | | | `-RecoveryExpr 0x13a853e80 <col:6, col:14> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x13a853e48 <col:6> 'struct usb_serial *' lvalue ParmVar 0x13a830e48 'serial' 'struct usb_serial *'       | | `-IntegerLiteral 0x13a853ea8 <col:19> 'int' 0       | `-CXXDependentScopeMemberExpr 0x13a854028 <col:25, col:38> '<dependent type>' contains-errors lvalue .port       |   `-RecoveryExpr 0x13a854008 <col:25> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13a8543a0 <col:44, line:6:2>         |-CallExpr 0x13a854208 <line:4:3, col:27> 'int'         | `-ImplicitCastExpr 0x13a8541f0 <col:3> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x13a8541a0 <col:3> 'int ()' Function 0x13a8540e8 'usb_serial_console_exit' 'int ()'         `-CallExpr 0x13a854360 <line:5:3, col:24> 'int'           |-ImplicitCastExpr 0x13a854348 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x13a854308 <col:3> 'int ()' Function 0x13a854250 'usb_serial_put' 'int ()'           `-ImplicitCastExpr 0x13a854388 <col:18> 'struct usb_serial *' <LValueToRValue>             `-DeclRefExpr 0x13a854328 <col:18> 'struct usb_serial *' lvalue ParmVar 0x13a830e48 'serial' 'struct usb_serial *' ","20351":"`-FunctionDecl 0x13400df58  line:1:1 invalid TPMT_TK_CREATION_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x13400dd28 <col:28, col:46> col:46 invalid target 'int *'   |-ParmVarDecl 0x13400dde0 <col:54, col:61> col:61 invalid buffer 'int **'   |-ParmVarDecl 0x13400de60 <col:69, col:76> col:76 invalid size 'int *'   `-CompoundStmt 0x134028550 <line:2:1, line:20:1>     |-IfStmt 0x13400e348 <line:5:5, line:7:5>     | |-BinaryOperator 0x13400e0a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13400e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13400e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13400e338 <col:31, line:7:5>     |-IfStmt 0x134027f60 <line:8:5, line:12:5>     | |-BinaryOperator 0x134027e00 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13400e3b8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13400e3d8 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x134027f48 <col:31, line:12:5>     |   `-IfStmt 0x134027f28 <line:9:2, line:11:2>     |     |-BinaryOperator 0x134027ee0 <line:9:6, col:21> 'int' contains-errors '!='     |     | |-CXXDependentScopeMemberExpr 0x134027e40 <col:6, col:14> '<dependent type>' contains-errors lvalue ->tag     |     | | `-RecoveryExpr 0x134027e20 <col:6> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x134027ec0 <col:21> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x134027f18 <col:38, line:11:2>     |-IfStmt 0x134028258 <line:13:5, line:15:5>     | |-BinaryOperator 0x134028010 <line:13:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x134027fd0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x134027ff0 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x134028248 <col:31, line:15:5>     `-IfStmt 0x134028530 <line:16:5, line:18:5>       |-BinaryOperator 0x134028308 <line:16:9, col:15> 'int' contains-errors '=='       | |-RecoveryExpr 0x1340282c8 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1340282e8 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x134028520 <col:31, line:18:5> ","20381":"`-FunctionDecl 0x123143e18  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x123143f18 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x123143f80 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x123143fe8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x123143ec0 <<invalid sloc>> Implicit 882 ","20926":"`-FunctionDecl 0x13a8094a8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13a8095a8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13a809610 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13a809678 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13a809550 <<invalid sloc>> Implicit 882 ","20761":"`-FunctionDecl 0x144008558  col:31 implicit used isdigit 'int (int)' extern   |-ParmVarDecl 0x144008658 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x144008600 <<invalid sloc>> Implicit 924   |-NoThrowAttr 0x1440086c8 <col:31> Implicit   `-PureAttr 0x1440086f0 <col:31> Implicit ","21051":"`-FunctionDecl 0x1538281c0  col:5 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x1538282c0 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x153828268 <<invalid sloc>> Implicit 869 ","20959":"`-FunctionDecl 0x15480c548  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15480c648 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15480c6b0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15480c718 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15480c5f0 <<invalid sloc>> Implicit 882 ","20284":"`-FunctionDecl 0x14e008200  line:1:22 invalid pgd_alloc 'int *(struct mm_struct *)' static inline   |-ParmVarDecl 0x14d00e268 <col:32, col:50> col:50 used mm 'struct mm_struct *'   `-CompoundStmt 0x14e008820 <line:2:1, line:7:1>     |-CallExpr 0x14e0084f0 <line:3:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e008410 <col:2> 'int ()' Function 0x14e008358 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x14e0084d8 <col:17, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14e008490 <col:18, col:30> '<dependent type>' contains-errors lvalue .list_lock     |     `-RecoveryExpr 0x14e008468 <col:18, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14e008430 <col:18> 'struct mm_struct *' lvalue ParmVar 0x14d00e268 'mm' 'struct mm_struct *'     |-CallExpr 0x14e0086d8 <line:4:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e0085f8 <col:2> 'int ()' Function 0x14e008540 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x14e0086c0 <col:17, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14e008678 <col:18, col:30> '<dependent type>' contains-errors lvalue .pgtable_list     |     `-RecoveryExpr 0x14e008650 <col:18, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14e008618 <col:18> 'struct mm_struct *' lvalue ParmVar 0x14d00e268 'mm' 'struct mm_struct *'     `-CallExpr 0x14e0087e0 <line:5:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x14e008700 <col:2> 'int ()' Function 0x14e008540 'INIT_LIST_HEAD' 'int ()'       `-UnaryOperator 0x14e0087c8 <col:17, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x14e008780 <col:18, col:30> '<dependent type>' contains-errors lvalue .gmap_list           `-RecoveryExpr 0x14e008758 <col:18, col:22> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14e008720 <col:18> 'struct mm_struct *' lvalue ParmVar 0x14d00e268 'mm' 'struct mm_struct *' ","20424":"`-FunctionDecl 0x13a00e358  line:1:12 map_lookup_and_delete_elem 'int (union bpf_attr *)' static   |-ParmVarDecl 0x13a00e248 <col:39, col:55> col:55 used attr 'union bpf_attr *'   `-CompoundStmt 0x13992b608 <line:2:1, line:88:1>     |-DeclStmt 0x13a0266c8 <line:3:2, col:14>     | `-VarDecl 0x13a026660 <col:2, col:7> col:7 invalid __user 'void'     |-DeclStmt 0x13a026758 <line:4:2, col:14>     | `-VarDecl 0x13a0266f0 <col:2, col:7> col:7 invalid __user 'void'     |-DeclStmt 0x13a026850 <line:5:2, col:24>     | `-VarDecl 0x13a026788 <col:2, col:18> col:6 used ufd 'int' cinit     |   `-RecoveryExpr 0x13a026828 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13a0267f0 <col:12> 'union bpf_attr *' lvalue ParmVar 0x13a00e248 'attr' 'union bpf_attr *'     |-DeclStmt 0x13a026a58 <line:6:2, col:21>     | |-RecordDecl 0x13a026868 <col:2, col:9> col:9 struct bpf_map     | `-VarDecl 0x13a0269d8 <col:2, col:18> col:18 used map 'struct bpf_map *'     |-DeclStmt 0x13a026b88 <line:7:2, col:19>     | |-VarDecl 0x13a026a88 <col:2, col:8> col:8 used key 'void *'     | `-VarDecl 0x13a026b08 <col:2, col:14> col:14 used value 'void *'     |-DeclStmt 0x13a026d38 <line:9:2, col:13>     | |-RecordDecl 0x13a026bb8 <col:2, col:9> col:9 struct fd     | `-VarDecl 0x13a026cb8 <col:2, col:12> col:12 referenced invalid f 'struct fd'     |-DeclStmt 0x13a026dd0 <line:10:2, col:9>     | `-VarDecl 0x13a026d68 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x13a027050 <line:12:2, line:13:11>     | |-CallExpr 0x13a026f80 <line:12:6, col:47> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13a026f00 <col:6> 'int ()' Function 0x13a026e48 'CHECK_ATTR' 'int ()'     | | `-RecoveryExpr 0x13a026f60 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13a027040 <line:13:3, col:11>     |   `-UnaryOperator 0x13a027028 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a027010 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a026ff0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13a027250 <line:15:2, line:16:11>     | |-BinaryOperator 0x13a027188 <line:15:6, col:21> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13a0270a8 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13a027070 <col:6> 'union bpf_attr *' lvalue ParmVar 0x13a00e248 'attr' 'union bpf_attr *'     | | `-UnaryOperator 0x13a027170 <col:20, col:21> '<dependent type>' contains-errors prefix '~' cannot overflow     | |   `-ImplicitCastExpr 0x13a027158 <col:21> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x13a027138 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13a027240 <line:16:3, col:11>     |   `-UnaryOperator 0x13a027228 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a027210 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a0271f0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a027468 <line:18:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a027290 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a027270 <col:2> 'struct fd' lvalue Var 0x13a026cb8 'f' 'struct fd'     | `-CallExpr 0x13a027428 <col:6, col:15> 'int' contains-errors     |   |-ImplicitCastExpr 0x13a027410 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13a027398 <col:6> 'int ()' Function 0x13a0272e0 'fdget' 'int ()'     |   `-ImplicitCastExpr 0x13a027450 <col:12> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x13a0273b8 <col:12> 'int' contains-errors lvalue Var 0x13a026788 'ufd' 'int'     |-BinaryOperator 0x139924c00 <line:19:2, col:23> 'struct bpf_map *' contains-errors '='     | |-DeclRefExpr 0x13a027488 <col:2> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'     | `-CallExpr 0x13a0275c8 <col:8, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a027588 <col:8> 'int ()' Function 0x13a0274d0 '__bpf_map_get' 'int ()'     |   `-RecoveryExpr 0x13a0275a8 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139924f20 <line:20:2, line:21:21>     | |-CallExpr 0x139924d58 <line:20:6, col:16> 'int'     | | |-ImplicitCastExpr 0x139924d40 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x139924d00 <col:6> 'int ()' Function 0x139924c48 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x139924d80 <col:13> 'struct bpf_map *' <LValueToRValue>     | |   `-DeclRefExpr 0x139924d20 <col:13> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'     | `-ReturnStmt 0x139924f10 <line:21:3, col:21>     |   `-CallExpr 0x139924ed0 <col:10, col:21> 'int'     |     |-ImplicitCastExpr 0x139924eb8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x139924e78 <col:10> 'int ()' Function 0x139924dc0 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x139924ef8 <col:18> 'struct bpf_map *' <LValueToRValue>     |       `-DeclRefExpr 0x139924e98 <col:18> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'     |-IfStmt 0x139925270 <line:22:2, line:26:2>     | |-RecoveryExpr 0x1399251b0 <line:22:6, line:23:51> '_Bool' contains-errors     | `-CompoundStmt 0x139925258 <col:54, line:26:2>     |   `-GotoStmt 0x139925240 <line:25:3, col:8> 'err_put' 0x1399251f0     |-IfStmt 0x139925420 <line:28:2, line:33:2>     | |-RecoveryExpr 0x1399253b0 <line:28:6, line:30:42> '_Bool' contains-errors     | `-CompoundStmt 0x139925408 <col:45, line:33:2>     |   `-GotoStmt 0x1399253f0 <line:32:3, col:8> 'err_put' 0x1399251f0     |-IfStmt 0x1399256a0 <line:35:2, line:39:2>     | |-RecoveryExpr 0x139925630 <line:35:6, line:36:34> '_Bool' contains-errors     | `-CompoundStmt 0x139925688 <col:37, line:39:2>     |   `-GotoStmt 0x139925670 <line:38:3, col:8> 'err_put' 0x1399251f0     |-IfStmt 0x1399259e8 <line:42:2, line:45:2>     | |-CallExpr 0x139925898 <line:42:6, col:16> 'int'     | | |-ImplicitCastExpr 0x139925880 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x139925840 <col:6> 'int ()' Function 0x139924c48 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x1399258c0 <col:13> 'void *' <LValueToRValue>     | |   `-DeclRefExpr 0x139925860 <col:13> 'void *' lvalue Var 0x13a026a88 'key' 'void *'     | `-CompoundStmt 0x1399259c8 <col:19, line:45:2>     |   |-BinaryOperator 0x139925990 <line:43:3, col:20> 'int' '='     |   | |-DeclRefExpr 0x1399258d8 <col:3> 'int' lvalue Var 0x13a026d68 'err' 'int'     |   | `-CallExpr 0x139925950 <col:9, col:20> 'int'     |   |   |-ImplicitCastExpr 0x139925938 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1399258f8 <col:9> 'int ()' Function 0x139924dc0 'PTR_ERR' 'int ()'     |   |   `-ImplicitCastExpr 0x139925978 <col:17> 'void *' <LValueToRValue>     |   |     `-DeclRefExpr 0x139925918 <col:17> 'void *' lvalue Var 0x13a026a88 'key' 'void *'     |   `-GotoStmt 0x1399259b0 <line:44:3, col:8> 'err_put' 0x1399251f0     |-IfStmt 0x139925d90 <line:51:2, line:52:8>     | |-UnaryOperator 0x139925d10 <line:51:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x139925cf8 <col:7> 'void *' <LValueToRValue>     | |   `-DeclRefExpr 0x139925cd8 <col:7> 'void *' lvalue Var 0x13a026b08 'value' 'void *'     | `-GotoStmt 0x139925d78 <line:52:3, col:8> 'free_key' 0x139925d28     |-IfStmt 0x139926aa8 <line:55:2, line:69:2> has_else     | |-RecoveryExpr 0x139925e90 <line:55:6, line:56:23> '_Bool' contains-errors     | |-CompoundStmt 0x139926008 <col:43, line:58:2>     | | `-BinaryOperator 0x139925fe8 <line:57:3, col:42> 'int' contains-errors '='     | |   |-DeclRefExpr 0x139925eb0 <col:3> 'int' lvalue Var 0x13a026d68 'err' 'int'     | |   `-CallExpr 0x139925fb8 <col:9, col:42> '<dependent type>' contains-errors     | |     |-CXXDependentScopeMemberExpr 0x139925f30 <col:9, col:19> '<dependent type>' contains-errors lvalue ->map_pop_elem     | |     | `-RecoveryExpr 0x139925f08 <col:9, col:14> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x139925ed0 <col:9> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'     | |     |-DeclRefExpr 0x139925f78 <col:32> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'     | |     `-DeclRefExpr 0x139925f98 <col:37> 'void *' lvalue Var 0x13a026b08 'value' 'void *'     | `-IfStmt 0x139926a88 <line:58:9, line:69:2>     |   |-RecoveryExpr 0x1399261a0 <line:58:13, line:61:23> '_Bool' contains-errors     |   `-CompoundStmt 0x139926a70 <col:53, line:69:2>     |     `-IfStmt 0x139926a50 <line:62:3, line:68:3>     |       |-UnaryOperator 0x139926338 <line:62:7, col:32> 'int' prefix '!' cannot overflow     |       | `-CallExpr 0x1399262f8 <col:8, col:32> 'int'     |       |   |-ImplicitCastExpr 0x1399262e0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x1399262a0 <col:8> 'int ()' Function 0x1399261e8 'bpf_map_is_dev_bound' 'int ()'     |       |   `-ImplicitCastExpr 0x139926320 <col:29> 'struct bpf_map *' <LValueToRValue>     |       |     `-DeclRefExpr 0x1399262c0 <col:29> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'     |       `-CompoundStmt 0x139926a18 <col:35, line:68:3>     |         |-CallExpr 0x139926468 <line:63:4, col:32> 'int'     |         | `-ImplicitCastExpr 0x139926450 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         |   `-DeclRefExpr 0x139926430 <col:4> 'int ()' Function 0x139926378 'bpf_disable_instrumentation' 'int ()'     |         |-CallExpr 0x1399265a0 <line:64:4, col:18> 'int'     |         | `-ImplicitCastExpr 0x139926588 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         |   `-DeclRefExpr 0x139926568 <col:4> 'int ()' Function 0x1399264b0 'rcu_read_lock' 'int ()'     |         |-BinaryOperator 0x139926788 <line:65:4, col:75> 'int' contains-errors '='     |         | |-DeclRefExpr 0x1399265c0 <col:4> 'int' lvalue Var 0x13a026d68 'err' 'int'     |         | `-CallExpr 0x139926748 <col:10, col:75> '<dependent type>' contains-errors     |         |   |-CXXDependentScopeMemberExpr 0x139926640 <col:10, col:20> '<dependent type>' contains-errors lvalue ->map_lookup_and_delete_elem     |         |   | `-RecoveryExpr 0x139926618 <col:10, col:15> '<dependent type>' contains-errors lvalue     |         |   |   `-DeclRefExpr 0x1399265e0 <col:10> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'     |         |   |-DeclRefExpr 0x139926688 <col:47> 'struct bpf_map *' lvalue Var 0x13a0269d8 'map' 'struct bpf_map *'     |         |   |-DeclRefExpr 0x1399266a8 <col:52> 'void *' lvalue Var 0x13a026a88 'key' 'void *'     |         |   |-DeclRefExpr 0x1399266c8 <col:57> 'void *' lvalue Var 0x13a026b08 'value' 'void *'     |         |   `-RecoveryExpr 0x139926720 <col:64, col:70> '<dependent type>' contains-errors lvalue     |         |     `-DeclRefExpr 0x1399266e8 <col:64> 'union bpf_attr *' lvalue ParmVar 0x13a00e248 'attr' 'union bpf_attr *'     |         |-CallExpr 0x1399268c0 <line:66:4, col:20> 'int'     |         | `-ImplicitCastExpr 0x1399268a8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         |   `-DeclRefExpr 0x139926888 <col:4> 'int ()' Function 0x1399267d0 'rcu_read_unlock' 'int ()'     |         `-CallExpr 0x1399269f8 <line:67:4, col:31> 'int'     |           `-ImplicitCastExpr 0x1399269e0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |             `-DeclRefExpr 0x1399269c0 <col:4> 'int ()' Function 0x139926908 'bpf_enable_instrumentation' 'int ()'     |-IfStmt 0x139926b78 <line:71:2, line:72:8>     | |-ImplicitCastExpr 0x139926af8 <line:71:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x139926ad8 <col:6> 'int' lvalue Var 0x13a026d68 'err' 'int'     | `-GotoStmt 0x139926b60 <line:72:3, col:8> 'free_value' 0x139926b10     |-IfStmt 0x13992b188 <line:74:2, line:77:2>     | |-RecoveryExpr 0x13992b118 <line:74:6, col:49> '_Bool' contains-errors     | `-CompoundStmt 0x13992b170 <col:52, line:77:2>     |   `-GotoStmt 0x13992b158 <line:76:3, col:8> 'free_value' 0x139926b10     |-BinaryOperator 0x13992b1e8 <line:79:2, col:8> 'int' '='     | |-DeclRefExpr 0x13992b1a8 <col:2> 'int' lvalue Var 0x13a026d68 'err' 'int'     | `-IntegerLiteral 0x13992b1c8 <col:8> 'int' 0     |-LabelStmt 0x13992b380 <line:81:1, line:82:14> 'free_value'     | `-CallExpr 0x13992b340 <col:2, col:14> 'int'     |   |-ImplicitCastExpr 0x13992b328 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13992b2e8 <col:2> 'int ()' Function 0x13992b230 'kvfree' 'int ()'     |   `-ImplicitCastExpr 0x13992b368 <col:9> 'void *' <LValueToRValue>     |     `-DeclRefExpr 0x13992b308 <col:9> 'void *' lvalue Var 0x13a026b08 'value' 'void *'     |-LabelStmt 0x13992b438 <line:83:1, line:84:12> 'free_key'     | `-CallExpr 0x13992b3f8 <col:2, col:12> 'int'     |   |-ImplicitCastExpr 0x13992b3e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13992b3a0 <col:2> 'int ()' Function 0x13992b230 'kvfree' 'int ()'     |   `-ImplicitCastExpr 0x13992b420 <col:9> 'void *' <LValueToRValue>     |     `-DeclRefExpr 0x13992b3c0 <col:9> 'void *' lvalue Var 0x13a026a88 'key' 'void *'     |-LabelStmt 0x13992b5a0 <line:85:1, line:86:9> 'err_put'     | `-CallExpr 0x13992b578 <col:2, col:9> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13992b538 <col:2> 'int ()' Function 0x13992b480 'fdput' 'int ()'     |   `-RecoveryExpr 0x13992b558 <col:8> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13992b5f8 <line:87:2, col:9>       `-ImplicitCastExpr 0x13992b5e0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13992b5c0 <col:9> 'int' lvalue Var 0x13a026d68 'err' 'int' ","20753":"`-FunctionDecl 0x14a8e0e38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x14a8e0d58 <col:12> col:12 DirectoryIterator 'int'   |-ParmVarDecl 0x14a8e0cd8 <col:31> col:31 getFilename 'int'   `-CompoundStmt 0x14c008a50 <line:2:1, line:10:1>     |-IfStmt 0x14a8e1228 <line:5:2, line:7:2>     | |-BinaryOperator 0x14a8e11e0 <line:5:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x14a8e11a0 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x14a8e1188 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x14a8e1090 <col:6> 'int ()' Function 0x14a8e0fd8 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x14a8e11c0 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a8e1210 <col:47, line:7:2>     |   `-ReturnStmt 0x14a8e1200 <line:6:3>     `-CallExpr 0x14c008a20 <line:9:2, col:45> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a8e1328 <col:2> 'int ()' Function 0x14a8e1270 'RETURN_STRING' 'int ()'       |-CXXDependentScopeMemberExpr 0x14c0089d8 <col:16, col:36> '<dependent type>' contains-errors lvalue .d_name       | `-CXXDependentScopeMemberExpr 0x14c008990 <col:16, col:30> '<dependent type>' contains-errors lvalue .entry       |   `-CXXDependentScopeMemberExpr 0x14c008948 <col:16, col:26> '<dependent type>' contains-errors lvalue .dir       |     `-CXXDependentScopeMemberExpr 0x14c008900 <col:16, col:24> '<dependent type>' contains-errors lvalue ->u       |       `-RecoveryExpr 0x14c0088e0 <col:16> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x14c008890 <col:44> 'int' 1 ","20660":"`-FunctionDecl 0x13980e038  line:1:1 invalid efi_thunk_set_variable_nonblocking 'int (int *, int *, int, unsigned long, void *)'   |-ParmVarDecl 0x13980dd28 <col:36, col:50> col:50 invalid name 'int *'   |-ParmVarDecl 0x13980dda8 <col:56, col:68> col:68 invalid vendor 'int *'   |-ParmVarDecl 0x13980de28 <line:2:8, col:12> col:12 invalid attr 'int'   |-ParmVarDecl 0x13980dea8 <col:18, col:32> col:32 used data_size 'unsigned long'   |-ParmVarDecl 0x13980df28 <line:3:8, col:14> col:14 used data 'void *'   `-CompoundStmt 0x1391244a8 <line:4:1, line:23:1>     |-DeclStmt 0x13980e188 <line:7:2, col:21>     | `-VarDecl 0x13980e120 <col:2, col:16> col:16 used flags 'unsigned long'     `-IfStmt 0x139123c90 <line:9:2, line:10:10>       |-UnaryOperator 0x139123c30 <line:9:6, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x139123c00 <col:7, col:52> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13980e300 <col:7> 'int ()' Function 0x13980e248 'spin_trylock_irqsave' 'int ()'       |   |-UnaryOperator 0x13980e3d8 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow       |   | `-RecoveryExpr 0x13980e3b8 <col:29> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13980e350 <col:47> 'unsigned long' lvalue Var 0x13980e120 'flags' 'unsigned long'       `-ReturnStmt 0x139123c80 <line:10:3, col:10>         `-RecoveryExpr 0x139123c60 <col:10> '<dependent type>' contains-errors lvalue ","20668":"`-FunctionDecl 0x11e128318  line:1:12 invalid signal_name_owner_changed 'int (int *, void *, int *)' static   |-ParmVarDecl 0x11e128128 <col:38, col:54> col:54 invalid message 'int *'   |-ParmVarDecl 0x11e1281a8 <col:63, col:69> col:69 used userdata 'void *'   |-ParmVarDecl 0x11e128228 <col:79, col:93> col:93 invalid error 'int *'   `-CompoundStmt 0x11e143bf8 <col:100, line:22:1>     |-DeclStmt 0x11e128578 <line:2:9, col:49>     | |-VarDecl 0x11e1283f0 <col:9, col:21> col:21 used name 'const char *'     | |-VarDecl 0x11e128470 <col:9, col:28> col:28 used old_owner 'const char *'     | `-VarDecl 0x11e1284f0 <col:9, col:40> col:40 used new_owner 'const char *'     |-DeclStmt 0x11e128648 <line:4:9, col:14>     | `-VarDecl 0x11e1285e0 <col:9, col:13> col:13 used r 'int'     |-CallExpr 0x11e141800 <line:6:9, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e1287c0 <col:9> 'int ()' Function 0x11e128708 'assert' 'int ()'     | `-RecoveryExpr 0x11e1287e0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11e1418a8 <line:7:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e141828 <col:9> 'int ()' Function 0x11e128708 'assert' 'int ()'     | `-RecoveryExpr 0x11e141888 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11e141b90 <line:9:9, col:78> 'int' contains-errors '='     | |-DeclRefExpr 0x11e1418d0 <col:9> 'int' lvalue Var 0x11e1285e0 'r' 'int'     | `-CallExpr 0x11e141b48 <col:13, col:78> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11e1419d0 <col:13> 'int ()' Function 0x11e141918 'sd_bus_message_read' 'int ()'     |   |-RecoveryExpr 0x11e1419f0 <col:33> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x11e141a50 <col:42> 'char[4]' lvalue \"STR\"     |   |-UnaryOperator 0x11e141ac0 <col:49, col:50> 'const char **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x11e141a70 <col:50> 'const char *' lvalue Var 0x11e1283f0 'name' 'const char *'     |   |-UnaryOperator 0x11e141af8 <col:56, col:57> 'const char **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x11e141ad8 <col:57> 'const char *' lvalue Var 0x11e128470 'old_owner' 'const char *'     |   `-UnaryOperator 0x11e141b30 <col:68, col:69> 'const char **' prefix '&' cannot overflow     |     `-DeclRefExpr 0x11e141b10 <col:69> 'const char *' lvalue Var 0x11e1284f0 'new_owner' 'const char *'     |-IfStmt 0x11e141e28 <line:10:9, line:13:9>     | |-BinaryOperator 0x11e141c08 <line:10:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x11e141bf0 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x11e141bb0 <col:13> 'int' lvalue Var 0x11e1285e0 'r' 'int'     | | `-IntegerLiteral 0x11e141bd0 <col:17> 'int' 0     | `-CompoundStmt 0x11e141e08 <col:20, line:13:9>     |   |-CallExpr 0x11e141d98 <line:11:17, col:38> 'int'     |   | |-ImplicitCastExpr 0x11e141d80 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11e141d08 <col:17> 'int ()' Function 0x11e141c50 'bus_log_parse_error' 'int ()'     |   | `-ImplicitCastExpr 0x11e141dc0 <col:37> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x11e141d28 <col:37> 'int' lvalue Var 0x11e1285e0 'r' 'int'     |   `-ReturnStmt 0x11e141df8 <line:12:17, col:24>     |     `-IntegerLiteral 0x11e141dd8 <col:24> 'int' 0     |-BinaryOperator 0x11e142420 <line:15:9, col:44> 'const char *' '='     | |-DeclRefExpr 0x11e141e48 <col:9> 'const char *' lvalue Var 0x11e128470 'old_owner' 'const char *'     | `-ImplicitCastExpr 0x11e141fe0 <col:21, col:44> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x11e141fa0 <col:21, col:44> 'int'     |     |-ImplicitCastExpr 0x11e141f88 <col:21> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11e141f48 <col:21> 'int ()' Function 0x11e141e90 'empty_to_null' 'int ()'     |     `-ImplicitCastExpr 0x11e141fc8 <col:35> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x11e141f68 <col:35> 'const char *' lvalue Var 0x11e128470 'old_owner' 'const char *'     |-BinaryOperator 0x11e142510 <line:16:9, col:44> 'const char *' '='     | |-DeclRefExpr 0x11e142440 <col:9> 'const char *' lvalue Var 0x11e1284f0 'new_owner' 'const char *'     | `-ImplicitCastExpr 0x11e1424f8 <col:21, col:44> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x11e1424b8 <col:21, col:44> 'int'     |     |-ImplicitCastExpr 0x11e1424a0 <col:21> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11e142460 <col:21> 'int ()' Function 0x11e141e90 'empty_to_null' 'int ()'     |     `-ImplicitCastExpr 0x11e1424e0 <col:35> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x11e142480 <col:35> 'const char *' lvalue Var 0x11e1284f0 'new_owner' 'const char *'     |-IfStmt 0x11e143ba8 <line:18:9, line:19:84>     | |-CXXDependentScopeMemberExpr 0x11e142700 <line:18:13, col:29> '<dependent type>' contains-errors lvalue ->bus_name_owner_change     | | `-CallExpr 0x11e1426d8 <col:13, col:26> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11e142610 <col:13> 'int ()' Function 0x11e142558 'UNIT_VTABLE' 'int ()'     | |   `-RecoveryExpr 0x11e1426b8 <col:25> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x11e143b68 <line:19:17, col:84> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x11e143b00 <col:17, col:33> '<dependent type>' contains-errors lvalue ->bus_name_owner_change     |   | `-CallExpr 0x11e143ad8 <col:17, col:30> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11e142748 <col:17> 'int ()' Function 0x11e142558 'UNIT_VTABLE' 'int ()'     |   |   `-RecoveryExpr 0x11e143ab8 <col:29> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x11e143b48 <col:55> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x11e143a18 <col:58> 'const char *' lvalue Var 0x11e1283f0 'name' 'const char *'     |   |-DeclRefExpr 0x11e143a38 <col:64> 'const char *' lvalue Var 0x11e128470 'old_owner' 'const char *'     |   `-DeclRefExpr 0x11e143a58 <col:75> 'const char *' lvalue Var 0x11e1284f0 'new_owner' 'const char *'     `-ReturnStmt 0x11e143be8 <line:21:9, col:16>       `-IntegerLiteral 0x11e143bc8 <col:16> 'int' 0 ","21125":"`-FunctionDecl 0x11e128438  line:1:1 invalid spnego_gss_verify_mic_iov 'int (int *, int, int *, int *, int)'   |-ParmVarDecl 0x11e128128 <col:27, col:38> col:38 invalid minor_status 'int *'   |-ParmVarDecl 0x11e1281a8 <col:52, col:65> col:65 invalid context_handle 'int'   |-ParmVarDecl 0x11e128228 <line:2:6, col:17> col:17 invalid qop_state 'int *'   |-ParmVarDecl 0x11e1282a8 <col:28, col:49> col:49 invalid iov 'int *'   |-ParmVarDecl 0x11e128328 <line:3:6, col:10> col:10 used iov_count 'int'   `-CompoundStmt 0x11e128778 <line:4:1, line:7:1>     `-ReturnStmt 0x11e128768 <line:5:5, line:6:19>       `-CallExpr 0x11e128720 <line:5:12, line:6:19> '<dependent type>' contains-errors         |-DeclRefExpr 0x11e128660 <line:5:12> 'int ()' Function 0x11e1285a8 'gss_verify_mic_iov' 'int ()'         |-RecoveryExpr 0x11e128680 <col:31> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e1286a0 <col:45> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e1286c0 <col:61> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e1286e0 <col:72> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x11e128700 <line:6:10> 'int' lvalue ParmVar 0x11e128328 'iov_count' 'int' ","20203":"`-FunctionDecl 0x131033438  line:1:12 invalid php_object_property_dump 'int (int **)' static   |-ParmVarDecl 0x131033360 <col:37, col:44> col:44 invalid zv 'int **'   `-CompoundStmt 0x131058280 <line:2:1, line:29:1>     |-DeclStmt 0x131033568 <line:3:2, col:11>     | `-VarDecl 0x131033500 <col:2, col:6> col:6 used level 'int'     |-DeclStmt 0x131033698 <line:4:2, col:36>     | |-VarDecl 0x131033598 <col:2, col:14> col:14 used prop_name 'const char *'     | `-VarDecl 0x131033618 <col:2, col:26> col:26 used class_name 'const char *'     |-IfStmt 0x131058088 <line:8:2, line:26:2> has_else     | |-BinaryOperator 0x131033970 <line:8:6, col:30> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x131033928 <col:6, col:16> '<dependent type>' contains-errors lvalue ->nKeyLength     | | | `-RecoveryExpr 0x131033908 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1310338c8 <col:30> 'int' 0     | |-CompoundStmt 0x1318f3788 <col:33, line:10:2>     | | `-CallExpr 0x1318f3748 <line:9:3, col:48> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1318f34b8 <col:3> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     | |   |-StringLiteral 0x1318f3520 <col:14> 'char[4]' lvalue \"STR\"     | |   |-BinaryOperator 0x1318f36c0 <col:21, col:29> 'int' '+'     | |   | |-ImplicitCastExpr 0x1318f36a8 <col:21> 'int' <LValueToRValue>     | |   | | `-DeclRefExpr 0x1318f3540 <col:21> 'int' lvalue Var 0x131033500 'level' 'int'     | |   | `-IntegerLiteral 0x1318f3560 <col:29> 'int' 1     | |   |-CharacterLiteral 0x1318f35b8 <col:32> 'int' 32     | |   `-CXXDependentScopeMemberExpr 0x1318f3700 <col:37, col:47> '<dependent type>' contains-errors lvalue ->h     | |     `-RecoveryExpr 0x1318f36e0 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x131058058 <line:10:9, line:26:2>     |   |-DeclStmt 0x1318f3c30 <line:11:3, col:113>     |   | `-VarDecl 0x1318f37b8 <col:3, col:112> col:7 used unmangle 'int' cinit     |   |   `-CallExpr 0x1318f3bf0 <col:18, col:112> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1318f3900 <col:18> 'int ()' Function 0x1318f3848 'zend_unmangle_property_name' 'int ()'     |   |     |-CXXDependentScopeMemberExpr 0x1318f3b20 <col:46, col:56> '<dependent type>' contains-errors lvalue ->arKey     |   |     | `-RecoveryExpr 0x1318f3b00 <col:46> '<dependent type>' contains-errors lvalue     |   |     |-BinaryOperator 0x1318f3bd0 <col:63, col:86> '<dependent type>' contains-errors '-'     |   |     | |-CXXDependentScopeMemberExpr 0x1318f3b88 <col:63, col:73> '<dependent type>' contains-errors lvalue ->nKeyLength     |   |     | | `-RecoveryExpr 0x1318f3b68 <col:63> '<dependent type>' contains-errors lvalue     |   |     | `-IntegerLiteral 0x1318f39e0 <col:86> 'int' 1     |   |     |-UnaryOperator 0x1318f3a70 <col:89, col:90> 'const char **' prefix '&' cannot overflow     |   |     | `-DeclRefExpr 0x1318f3a20 <col:90> 'const char *' lvalue Var 0x131033618 'class_name' 'const char *'     |   |     `-UnaryOperator 0x1318f3aa8 <col:102, col:103> 'const char **' prefix '&' cannot overflow     |   |       `-DeclRefExpr 0x1318f3a88 <col:103> 'const char *' lvalue Var 0x131033598 'prop_name' 'const char *'     |   |-CallExpr 0x1318f3d68 <line:12:3, col:35> 'int'     |   | |-ImplicitCastExpr 0x1318f3d50 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1318f3c48 <col:3> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   | |-ImplicitCastExpr 0x1318f3da0 <col:14> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x1318f3c68 <col:14> 'char[4]' lvalue \"STR\"     |   | |-BinaryOperator 0x1318f3ce0 <col:21, col:29> 'int' '+'     |   | | |-ImplicitCastExpr 0x1318f3cc8 <col:21> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1318f3c88 <col:21> 'int' lvalue Var 0x131033500 'level' 'int'     |   | | `-IntegerLiteral 0x1318f3ca8 <col:29> 'int' 1     |   | `-CharacterLiteral 0x1318f3d00 <col:32> 'int' 32     |   |-IfStmt 0x131057eb0 <line:14:3, line:24:3> has_else     |   | |-BinaryOperator 0x1318f3e90 <line:14:7, col:33> 'int' contains-errors '&&'     |   | | |-DeclRefExpr 0x1318f3db8 <col:7> 'const char *' lvalue Var 0x131033618 'class_name' 'const char *'     |   | | `-BinaryOperator 0x1318f3e70 <col:21, col:33> 'int' contains-errors '=='     |   | |   |-DeclRefExpr 0x1318f3dd8 <col:21> 'int' contains-errors lvalue Var 0x1318f37b8 'unmangle' 'int'     |   | |   `-RecoveryExpr 0x1318f3e50 <col:33> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x1318f41e0 <col:42, line:20:3>     |   | | `-IfStmt 0x1318f41b0 <line:15:4, line:19:4> has_else     |   | |   |-BinaryOperator 0x1318f3f70 <line:15:8, col:25> 'int' '=='     |   | |   | |-ImplicitCastExpr 0x1318f3f58 <col:8, col:20> 'int' <IntegralCast>     |   | |   | | `-ImplicitCastExpr 0x1318f3f40 <col:8, col:20> 'char' <LValueToRValue>     |   | |   | |   `-ArraySubscriptExpr 0x1318f3f08 <col:8, col:20> 'const char' lvalue     |   | |   | |     |-ImplicitCastExpr 0x1318f3ef0 <col:8> 'const char *' <LValueToRValue>     |   | |   | |     | `-DeclRefExpr 0x1318f3eb0 <col:8> 'const char *' lvalue Var 0x131033618 'class_name' 'const char *'     |   | |   | |     `-IntegerLiteral 0x1318f3ed0 <col:19> 'int' 0     |   | |   | `-CharacterLiteral 0x1318f3f28 <col:25> 'int' 42     |   | |   |-CompoundStmt 0x1318f4068 <col:30, line:17:4>     |   | |   | `-CallExpr 0x1318f4008 <line:16:5, col:32> 'int'     |   | |   |   |-ImplicitCastExpr 0x1318f3ff0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | |   |   | `-DeclRefExpr 0x1318f3f90 <col:5> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   | |   |   |-ImplicitCastExpr 0x1318f4038 <col:16> 'char *' <ArrayToPointerDecay>     |   | |   |   | `-StringLiteral 0x1318f3fb0 <col:16> 'char[4]' lvalue \"STR\"     |   | |   |   `-ImplicitCastExpr 0x1318f4050 <col:23> 'const char *' <LValueToRValue>     |   | |   |     `-DeclRefExpr 0x1318f3fd0 <col:23> 'const char *' lvalue Var 0x131033598 'prop_name' 'const char *'     |   | |   `-CompoundStmt 0x1318f4198 <line:17:11, line:19:4>     |   | |     `-CallExpr 0x1318f4118 <line:18:5, col:44> 'int'     |   | |       |-ImplicitCastExpr 0x1318f4100 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | |       | `-DeclRefExpr 0x1318f4080 <col:5> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   | |       |-ImplicitCastExpr 0x1318f4150 <col:16> 'char *' <ArrayToPointerDecay>     |   | |       | `-StringLiteral 0x1318f40a0 <col:16> 'char[4]' lvalue \"STR\"     |   | |       |-ImplicitCastExpr 0x1318f4168 <col:23> 'const char *' <LValueToRValue>     |   | |       | `-DeclRefExpr 0x1318f40c0 <col:23> 'const char *' lvalue Var 0x131033598 'prop_name' 'const char *'     |   | |       `-ImplicitCastExpr 0x1318f4180 <col:34> 'const char *' <LValueToRValue>     |   | |         `-DeclRefExpr 0x1318f40e0 <col:34> 'const char *' lvalue Var 0x131033618 'class_name' 'const char *'     |   | `-CompoundStmt 0x131057e88 <line:20:10, line:24:3>     |   |   |-CallExpr 0x1318f4250 <line:21:4, col:20> 'int'     |   |   | |-ImplicitCastExpr 0x1318f4238 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x1318f41f8 <col:4> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   |   | `-ImplicitCastExpr 0x1318f4278 <col:15> 'char *' <ArrayToPointerDecay>     |   |   |   `-StringLiteral 0x1318f4218 <col:15> 'char[4]' lvalue \"STR\"     |   |   |-CallExpr 0x131057dc0 <line:22:4, col:54> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1318f4370 <col:4> 'int ()' Function 0x1318f42b8 'PHPWRITE' 'int ()'     |   |   | |-CXXDependentScopeMemberExpr 0x131057cf0 <col:13, col:23> '<dependent type>' contains-errors lvalue ->arKey     |   |   | | `-RecoveryExpr 0x131057cd0 <col:13> '<dependent type>' contains-errors lvalue     |   |   | `-BinaryOperator 0x131057da0 <col:30, col:53> '<dependent type>' contains-errors '-'     |   |   |   |-CXXDependentScopeMemberExpr 0x131057d58 <col:30, col:40> '<dependent type>' contains-errors lvalue ->nKeyLength     |   |   |   | `-RecoveryExpr 0x131057d38 <col:30> '<dependent type>' contains-errors lvalue     |   |   |   `-IntegerLiteral 0x131057c60 <col:53> 'int' 1     |   |   `-CallExpr 0x131057e48 <line:23:4, col:20> 'int'     |   |     |-ImplicitCastExpr 0x131057e30 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x131057df0 <col:4> 'int ()' Function 0x1318f3400 'php_printf' 'int ()'     |   |     `-ImplicitCastExpr 0x131057e70 <col:15> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x131057e10 <col:15> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x131058018 <line:25:3, col:18> 'int'     |     |-ImplicitCastExpr 0x131058000 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x131057fc0 <col:3> 'int ()' Function 0x131057f08 'ZEND_PUTS' 'int ()'     |     `-ImplicitCastExpr 0x131058040 <col:13> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x131057fe0 <col:13> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x131058270 <line:28:2, col:9>       `-IntegerLiteral 0x131058250 <col:9> 'int' 0 ","20603":"`-FunctionDecl 0x158123fe8  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1581240e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x158124150 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1581241b8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x158124090 <<invalid sloc>> Implicit 882 ","20635":"`-FunctionDecl 0x13300e350  line:1:6 setup_new_exec 'void (struct linux_binprm *)'   |-ParmVarDecl 0x13300e248 <col:21, col:43> col:43 used bprm 'struct linux_binprm *'   `-CompoundStmt 0x133029808 <line:2:1, line:37:1>     |-CompoundAssignOperator 0x133026708 <line:4:2, col:28> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x133026680 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x133026648 <col:2> 'struct linux_binprm *' lvalue ParmVar 0x13300e248 'bprm' 'struct linux_binprm *'     | `-RecoveryExpr 0x1330266e0 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1330266a8 <col:22> 'struct linux_binprm *' lvalue ParmVar 0x13300e248 'bprm' 'struct linux_binprm *'     |-IfStmt 0x133026a48 <line:6:2, line:13:2>     | |-RecoveryExpr 0x133026770 <line:6:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x133026738 <col:6> 'struct linux_binprm *' lvalue ParmVar 0x13300e248 'bprm' 'struct linux_binprm *'     | `-CompoundStmt 0x133026a30 <col:24, line:13:2>     |   `-IfStmt 0x133026a10 <line:11:3, line:12:32>     |     |-BinaryOperator 0x1330268d0 <line:11:7, col:35> 'int' contains-errors '>'     |     | |-CXXDependentScopeMemberExpr 0x133026830 <col:7, col:24> '<dependent type>' contains-errors lvalue .rlim_cur     |     | | `-RecoveryExpr 0x133026808 <col:7, col:13> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x1330267d0 <col:7> 'struct linux_binprm *' lvalue ParmVar 0x13300e248 'bprm' 'struct linux_binprm *'     |     | `-RecoveryExpr 0x1330268b0 <col:35> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x1330269f0 <line:12:4, col:32> '<dependent type>' contains-errors '='     |       |-CXXDependentScopeMemberExpr 0x133026950 <col:4, col:21> '<dependent type>' contains-errors lvalue .rlim_cur     |       | `-RecoveryExpr 0x133026928 <col:4, col:10> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1330268f0 <col:4> 'struct linux_binprm *' lvalue ParmVar 0x13300e248 'bprm' 'struct linux_binprm *'     |       `-RecoveryExpr 0x1330269d0 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133026d10 <line:15:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133026b80 <col:2> 'int ()' Function 0x133026ac8 'arch_pick_mmap_layout' 'int ()'     | |-CXXDependentScopeMemberExpr 0x133026cc8 <col:24, col:33> '<dependent type>' contains-errors lvalue ->mm     | | `-RecoveryExpr 0x133026ca8 <col:24> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x133026c60 <col:37, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x133026c38 <col:38, col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133026c00 <col:38> 'struct linux_binprm *' lvalue ParmVar 0x13300e248 'bprm' 'struct linux_binprm *'     |-CallExpr 0x133029308 <line:27:2, col:22> 'int'     | `-ImplicitCastExpr 0x1330292f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1330292d0 <col:2> 'int ()' Function 0x133029218 'arch_setup_new_exec' 'int ()'     `-CallExpr 0x133029440 <line:28:2, col:18> 'int'       `-ImplicitCastExpr 0x133029428 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x133029408 <col:2> 'int ()' Function 0x133029350 'perf_event_exec' 'int ()' ","20536":"`-FunctionDecl 0x146128438  line:1:1 invalid gx_default_1_add_decode_color 'int (int *, int, int *)'   |-ParmVarDecl 0x146128128 <line:2:5, col:21> col:21 invalid dev 'int *'   |-ParmVarDecl 0x1461281a8 <line:3:5, col:21> col:21 invalid color 'int'   |-ParmVarDecl 0x1461282f0 <line:4:5, col:25> col:21 referenced invalid cv 'int *'   `-CompoundStmt 0x1461419e0 <line:5:1, line:11:1>     |-DeclStmt 0x1461418a8 <line:7:5, col:73>     | `-VarDecl 0x146128510 <col:5, col:72> col:21 used code 'int' cinit     |   `-CallExpr 0x146141870 <col:28, col:72> '<dependent type>' contains-errors     |     |-CallExpr 0x146141820 <col:28, col:55> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x1461286d0 <col:28> 'int ()' Function 0x146128618 'dev_proc' 'int ()'     |     | |-RecoveryExpr 0x1461286f0 <col:37> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x146141800 <col:42> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x146128758 <col:57> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x146128778 <col:62> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x146141850 <col:69> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1461419d0 <line:10:5, col:12>       `-ImplicitCastExpr 0x1461419b8 <col:12> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x146141998 <col:12> 'int' contains-errors lvalue Var 0x146128510 'code' 'int' ","20323":"`-FunctionDecl 0x139144c00  line:1:1 add_cfs_task_weight 'int (struct cfs_rq *, unsigned long)'   |-ParmVarDecl 0x139128648 <col:21, col:36> col:36 used cfs_rq 'struct cfs_rq *'   |-ParmVarDecl 0x1391286c8 <col:44, col:58> col:58 used weight 'unsigned long'   `-CompoundStmt 0x139144db0 <line:2:1, line:4:1>     `-CompoundAssignOperator 0x139144d80 <line:3:2, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-RecoveryExpr 0x139144d38 <col:2, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x139144d00 <col:2> 'struct cfs_rq *' lvalue ParmVar 0x139128648 'cfs_rq' 'struct cfs_rq *'       `-DeclRefExpr 0x139144d60 <col:25> 'unsigned long' lvalue ParmVar 0x1391286c8 'weight' 'unsigned long' ","20814":"`-FunctionDecl 0x142128750  line:1:13 scrub_submit 'void (struct scrub_ctx *)' static   |-ParmVarDecl 0x142128648 <col:26, col:44> col:44 used sctx 'struct scrub_ctx *'   `-CompoundStmt 0x1421412c0 <line:2:1, line:12:1>     |-DeclStmt 0x142140c38 <line:3:2, col:24>     | |-RecordDecl 0x142140a48 <col:2, col:9> col:9 struct scrub_bio     | `-VarDecl 0x142140bb8 <col:2, col:20> col:20 used sbio 'struct scrub_bio *'     |-IfStmt 0x142140d18 <line:5:2, line:6:3>     | |-BinaryOperator 0x142140ce8 <line:5:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x142140c88 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x142140c50 <col:6> 'struct scrub_ctx *' lvalue ParmVar 0x142128648 'sctx' 'struct scrub_ctx *'     | | `-UnaryOperator 0x142140cd0 <col:20, col:21> 'int' prefix '-'     | |   `-IntegerLiteral 0x142140cb0 <col:21> 'int' 1     | `-ReturnStmt 0x142140d08 <line:6:3>     |-BinaryOperator 0x142140e68 <line:8:2, col:30> 'struct scrub_bio *' contains-errors '='     | |-DeclRefExpr 0x142140d38 <col:2> 'struct scrub_bio *' lvalue Var 0x142140bb8 'sbio' 'struct scrub_bio *'     | `-ArraySubscriptExpr 0x142140e48 <col:9, col:30> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x142140e18 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x142140d90 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x142140d58 <col:9> 'struct scrub_ctx *' lvalue ParmVar 0x142128648 'sctx' 'struct scrub_ctx *'     |   `-ImplicitCastExpr 0x142140e30 <col:20, col:26> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x142140df0 <col:20, col:26> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x142140db8 <col:20> 'struct scrub_ctx *' lvalue ParmVar 0x142128648 'sctx' 'struct scrub_ctx *'     |-BinaryOperator 0x142140f20 <line:9:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142140ec0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142140e88 <col:2> 'struct scrub_ctx *' lvalue ParmVar 0x142128648 'sctx' 'struct scrub_ctx *'     | `-UnaryOperator 0x142140f08 <col:15, col:16> 'int' prefix '-'     |   `-IntegerLiteral 0x142140ee8 <col:16> 'int' 1     |-CallExpr 0x1421410f8 <line:10:2, col:28> 'int'     | |-ImplicitCastExpr 0x1421410e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x142141070 <col:2> 'int ()' Function 0x142140fb8 'scrub_pending_bio_inc' 'int ()'     | `-ImplicitCastExpr 0x142141120 <col:24> 'struct scrub_ctx *' <LValueToRValue>     |   `-DeclRefExpr 0x142141090 <col:24> 'struct scrub_ctx *' lvalue ParmVar 0x142128648 'sctx' 'struct scrub_ctx *'     `-CallExpr 0x142141298 <line:11:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x142141218 <col:2> 'int ()' Function 0x142141160 'btrfsic_submit_bio' 'int ()'       `-RecoveryExpr 0x142141270 <col:21, col:27> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x142141238 <col:21> 'struct scrub_bio *' lvalue Var 0x142140bb8 'sbio' 'struct scrub_bio *' ","20741":"`-FunctionDecl 0x14b826600  line:1:6 auth_client_request_abort 'void (struct auth_client_request **)'   |-ParmVarDecl 0x14b80e2a8 <col:32, col:61> col:61 used _request 'struct auth_client_request **'   `-CompoundStmt 0x14b827000 <line:2:1, line:10:1>     |-DeclStmt 0x14b826858 <line:3:2, col:49>     | `-VarDecl 0x14b826788 <col:2, col:41> col:30 used request 'struct auth_client_request *' cinit     |   `-ImplicitCastExpr 0x14b826840 <col:40, col:41> 'struct auth_client_request *' <LValueToRValue>     |     `-UnaryOperator 0x14b826828 <col:40, col:41> 'struct auth_client_request *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x14b826810 <col:41> 'struct auth_client_request **' <LValueToRValue>     |         `-DeclRefExpr 0x14b8267f0 <col:41> 'struct auth_client_request **' lvalue ParmVar 0x14b80e2a8 '_request' 'struct auth_client_request **'     |-BinaryOperator 0x14b826990 <line:5:2, col:14> 'struct auth_client_request *' contains-errors '='     | |-UnaryOperator 0x14b826958 <col:2, col:3> 'struct auth_client_request *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14b826940 <col:3> 'struct auth_client_request **' <LValueToRValue>     | |   `-DeclRefExpr 0x14b826870 <col:3> 'struct auth_client_request **' lvalue ParmVar 0x14b80e2a8 '_request' 'struct auth_client_request **'     | `-RecoveryExpr 0x14b826970 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b826be8 <line:7:2, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b826ac0 <col:2> 'int ()' Function 0x14b826a08 'auth_client_send_cancel' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14b826b40 <col:26, col:41> '<dependent type>' contains-errors lvalue ->client     | | `-RecoveryExpr 0x14b826b18 <col:26, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b826ae0 <col:26> 'struct auth_client_request *' lvalue Var 0x14b826788 'request' 'struct auth_client_request *'     | `-RecoveryExpr 0x14b826bc0 <col:49, col:58> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14b826b88 <col:49> 'struct auth_client_request *' lvalue Var 0x14b826788 'request' 'struct auth_client_request *'     |-CallExpr 0x14b826e20 <line:8:2, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b826cf8 <col:2> 'int ()' Function 0x14b826c40 'call_callback' 'int ()'     | |-DeclRefExpr 0x14b826d18 <col:16> 'struct auth_client_request *' lvalue Var 0x14b826788 'request' 'struct auth_client_request *'     | |-RecoveryExpr 0x14b826dc0 <col:25> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14b826de0 <col:52> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b826e00 <col:58> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14b826fd8 <line:9:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b826f40 <col:2> 'int ()' Function 0x14b826e88 'pool_unref' 'int ()'       `-UnaryOperator 0x14b826fc0 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14b826f98 <col:14, col:23> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14b826f60 <col:14> 'struct auth_client_request *' lvalue Var 0x14b826788 'request' 'struct auth_client_request *' ","20718":"`-FunctionDecl 0x1451493a8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1451494a8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x145149450 <<invalid sloc>> Implicit 873 ","20699":"`-FunctionDecl 0x128905e38  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x128905f38 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x128905fa0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x128906008 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x128905ee0 <<invalid sloc>> Implicit 882 ","20958":"`-FunctionDecl 0x12f928c88  line:1:12 invalid gf_media_vvc_read_pps_bs_internal 'int (int *, int *)' static   |-ParmVarDecl 0x12f928b28 <col:46, col:60> col:60 invalid bs 'int *'   |-ParmVarDecl 0x12f928ba8 <col:64, col:74> col:74 referenced invalid vvc 'int *'   `-CompoundStmt 0x12f9440b0 <line:2:1, line:74:1>     |-IfStmt 0x12f942860 <line:10:2, line:13:2>     | |-RecoveryExpr 0x12f929058 <line:10:6, col:35> '_Bool' contains-errors     | `-CompoundStmt 0x12f942848 <col:38, line:13:2>     |   `-ReturnStmt 0x12f942838 <line:12:3, col:11>     |     `-UnaryOperator 0x12f942820 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12f942800 <col:11> 'int' 1     |-IfStmt 0x12f942a70 <line:16:2, line:19:2>     | |-UnaryOperator 0x12f942a10 <line:16:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f9429f8 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12f9429b0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->state     | |     `-RecoveryExpr 0x12f942990 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f942a60 <col:19, line:19:2>     |-IfStmt 0x12f942c48 <line:21:2, line:25:2>     | |-RecoveryExpr 0x12f942b68 <line:21:6, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x12f942c30 <col:25, line:25:2>     |   `-ReturnStmt 0x12f942c20 <line:24:3, col:11>     |     `-UnaryOperator 0x12f942c08 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x12f942be8 <col:11> 'int' 1     |-IfStmt 0x12f9432d8 <line:31:2, line:36:2>     | |-RecoveryExpr 0x12f943068 <line:31:6, col:11> '_Bool' contains-errors     | `-CompoundStmt 0x12f9432c8 <col:24, line:36:2>     |-IfStmt 0x12f943700 <line:38:2, line:43:2>     | |-CallExpr 0x12f943378 <line:38:6, col:37> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12f9432f8 <col:6> 'int ()' Function 0x12f928df8 'gf_bs_read_int_log' 'int ()'     | | |-RecoveryExpr 0x12f943318 <col:25> '<dependent type>' contains-errors lvalue     | | |-IntegerLiteral 0x12f943338 <col:29> 'int' 1     | | `-StringLiteral 0x12f943358 <col:32> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x12f9436d0 <col:40, line:43:2>     |   |-CallExpr 0x12f9434f0 <line:39:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12f943490 <col:3> 'int ()' Function 0x12f9433d8 'gf_bs_read_se_log' 'int ()'     |   | |-RecoveryExpr 0x12f9434b0 <col:21> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12f9434d0 <col:25> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x12f943580 <line:40:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12f943520 <col:3> 'int ()' Function 0x12f9433d8 'gf_bs_read_se_log' 'int ()'     |   | |-RecoveryExpr 0x12f943540 <col:21> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12f943560 <col:25> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x12f943610 <line:41:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12f9435b0 <col:3> 'int ()' Function 0x12f9433d8 'gf_bs_read_se_log' 'int ()'     |   | |-RecoveryExpr 0x12f9435d0 <col:21> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12f9435f0 <col:25> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x12f9436a0 <line:42:3, col:30> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12f943640 <col:3> 'int ()' Function 0x12f9433d8 'gf_bs_read_se_log' 'int ()'     |     |-RecoveryExpr 0x12f943660 <col:21> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x12f943680 <col:25> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12f943da0 <line:47:2, line:56:2>     | |-RecoveryExpr 0x12f943950 <line:47:6, col:11> '_Bool' contains-errors     | `-CompoundStmt 0x12f943d88 <col:43, line:56:2>     |   `-IfStmt 0x12f943a70 <line:49:3, line:51:3>     |     |-RecoveryExpr 0x12f943970 <line:49:7, col:13> '_Bool' contains-errors     |     `-CompoundStmt 0x12f943a60 <col:36, line:51:3>     `-IfStmt 0x12f944090 <line:57:2, line:68:2>       |-RecoveryExpr 0x12f943dc0 <line:57:6, col:12> '_Bool' contains-errors       `-CompoundStmt 0x12f944078 <col:35, line:68:2>         `-CallExpr 0x12f943e60 <line:58:3, col:34> '<dependent type>' contains-errors           |-DeclRefExpr 0x12f943de0 <col:3> 'int ()' Function 0x12f928df8 'gf_bs_read_int_log' 'int ()'           |-RecoveryExpr 0x12f943e00 <col:22> '<dependent type>' contains-errors lvalue           |-IntegerLiteral 0x12f943e20 <col:26> 'int' 2           `-StringLiteral 0x12f943e40 <col:29> 'char[4]' lvalue \"STR\" ","20912":"`-FunctionDecl 0x13c80de80  line:1:6 invalid ax25_disconnect 'void (int *, int)'   |-ParmVarDecl 0x13c80dd28 <col:22, col:31> col:31 referenced invalid ax25 'int *'   |-ParmVarDecl 0x13c80dda8 <col:37, col:41> col:41 used reason 'int'   `-CompoundStmt 0x13c829aa0 <line:2:1, line:37:1>     |-CallExpr 0x13c80e0d0 <line:3:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c80e090 <col:2> 'int ()' Function 0x13c80dfd8 'ax25_clear_queues' 'int ()'     | `-RecoveryExpr 0x13c80e0b0 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c8284b8 <line:5:2, line:18:2> has_else     | |-BinaryOperator 0x13c80e170 <line:5:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x13c80e0f8 <col:6> 'int' lvalue ParmVar 0x13c80dda8 'reason' 'int'     | | `-RecoveryExpr 0x13c80e150 <col:16> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x13c827a58 <col:29, line:11:2>     | | |-CallExpr 0x13c80e310 <line:6:3, col:30> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13c80e270 <col:3> 'int ()' Function 0x13c80e1b8 'del_timer_sync' 'int ()'     | | | `-UnaryOperator 0x13c80e2f8 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x13c80e2b0 <col:19, col:25> '<dependent type>' contains-errors lvalue ->timer     | | |     `-RecoveryExpr 0x13c80e290 <col:19> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x13c80e3d8 <line:7:3, col:32> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13c80e338 <col:3> 'int ()' Function 0x13c80e1b8 'del_timer_sync' 'int ()'     | | | `-UnaryOperator 0x13c80e3c0 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x13c80e378 <col:19, col:25> '<dependent type>' contains-errors lvalue ->t1timer     | | |     `-RecoveryExpr 0x13c80e358 <col:19> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x13c8278a0 <line:8:3, col:32> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13c827800 <col:3> 'int ()' Function 0x13c80e1b8 'del_timer_sync' 'int ()'     | | | `-UnaryOperator 0x13c827888 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x13c827840 <col:19, col:25> '<dependent type>' contains-errors lvalue ->t2timer     | | |     `-RecoveryExpr 0x13c827820 <col:19> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x13c827968 <line:9:3, col:32> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x13c8278c8 <col:3> 'int ()' Function 0x13c80e1b8 'del_timer_sync' 'int ()'     | | | `-UnaryOperator 0x13c827950 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x13c827908 <col:19, col:25> '<dependent type>' contains-errors lvalue ->t3timer     | | |     `-RecoveryExpr 0x13c8278e8 <col:19> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x13c827a30 <line:10:3, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13c827990 <col:3> 'int ()' Function 0x13c80e1b8 'del_timer_sync' 'int ()'     | |   `-UnaryOperator 0x13c827a18 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x13c8279d0 <col:19, col:25> '<dependent type>' contains-errors lvalue ->idletimer     | |       `-RecoveryExpr 0x13c8279b0 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13c828480 <line:11:9, line:18:2>     |   |-IfStmt 0x13c827f40 <line:12:3, line:13:28>     |   | |-BinaryOperator 0x13c827dd8 <line:12:7, col:53> 'int' contains-errors '||'     |   | | |-UnaryOperator 0x13c827d58 <col:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | | `-ImplicitCastExpr 0x13c827d40 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   `-CXXDependentScopeMemberExpr 0x13c827ab0 <col:8, col:14> '<dependent type>' contains-errors lvalue ->sk     |   | | |     `-RecoveryExpr 0x13c827a90 <col:8> '<dependent type>' contains-errors lvalue     |   | | `-UnaryOperator 0x13c827dc0 <col:20, col:53> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | |   `-CallExpr 0x13c827d90 <col:21, col:53> '<dependent type>' contains-errors     |   | |     |-DeclRefExpr 0x13c827c08 <col:21> 'int ()' Function 0x13c827b50 'sock_flag' 'int ()'     |   | |     |-CXXDependentScopeMemberExpr 0x13c827c48 <col:31, col:37> '<dependent type>' contains-errors lvalue ->sk     |   | |     | `-RecoveryExpr 0x13c827c28 <col:31> '<dependent type>' contains-errors lvalue     |   | |     `-RecoveryExpr 0x13c827d70 <col:41> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x13c827f18 <line:13:4, col:28> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13c827ed8 <col:4> 'int ()' Function 0x13c827e20 'ax25_stop_heartbeat' 'int ()'     |   |   `-RecoveryExpr 0x13c827ef8 <col:24> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13c828080 <line:14:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13c828040 <col:3> 'int ()' Function 0x13c827f88 'ax25_stop_t1timer' 'int ()'     |   | `-RecoveryExpr 0x13c828060 <col:21> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13c8281c8 <line:15:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13c828188 <col:3> 'int ()' Function 0x13c8280d0 'ax25_stop_t2timer' 'int ()'     |   | `-RecoveryExpr 0x13c8281a8 <col:21> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13c828310 <line:16:3, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13c8282d0 <col:3> 'int ()' Function 0x13c828218 'ax25_stop_t3timer' 'int ()'     |   | `-RecoveryExpr 0x13c8282f0 <col:21> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x13c828458 <line:17:3, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13c828418 <col:3> 'int ()' Function 0x13c828360 'ax25_stop_idletimer' 'int ()'     |     `-RecoveryExpr 0x13c828438 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c8285d0 <line:20:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c828530 <col:2, col:8> '<dependent type>' contains-errors lvalue ->state     | | `-RecoveryExpr 0x13c828508 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13c8284e8 <col:2> 'int *' lvalue ParmVar 0x13c80dd28 'ax25' 'int *'     | `-RecoveryExpr 0x13c8285b0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c828730 <line:22:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c8286d0 <col:2> 'int ()' Function 0x13c828618 'ax25_link_failed' 'int ()'     | |-RecoveryExpr 0x13c8286f0 <col:19> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x13c828710 <col:25> 'int' lvalue ParmVar 0x13c80dda8 'reason' 'int'     `-IfStmt 0x13c829a80 <line:24:2, line:36:2>       |-BinaryOperator 0x13c828c20 <line:24:6, col:18> 'int' contains-errors '!='       | |-CXXDependentScopeMemberExpr 0x13c828780 <col:6, col:12> '<dependent type>' contains-errors lvalue ->sk       | | `-RecoveryExpr 0x13c828760 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13c828c00 <col:18> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13c829a30 <col:24, line:36:2>         |-CallExpr 0x13c828d88 <line:25:3, col:20> 'int'         | `-ImplicitCastExpr 0x13c828d70 <col:3> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x13c828d20 <col:3> 'int ()' Function 0x13c828c68 'local_bh_disable' 'int ()'         |-CallExpr 0x13c828f10 <line:26:3, col:24> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13c828e88 <col:3> 'int ()' Function 0x13c828dd0 'bh_lock_sock' 'int ()'         | `-CXXDependentScopeMemberExpr 0x13c828ec8 <col:16, col:22> '<dependent type>' contains-errors lvalue ->sk         |   `-RecoveryExpr 0x13c828ea8 <col:16> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x13c829068 <line:27:3, col:28> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x13c828fc8 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sk_state         | | `-CXXDependentScopeMemberExpr 0x13c828f80 <col:3, col:9> '<dependent type>' contains-errors lvalue ->sk         | |   `-RecoveryExpr 0x13c828f58 <col:3> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x13c828f38 <col:3> 'int *' lvalue ParmVar 0x13c80dd28 'ax25' 'int *'         | `-RecoveryExpr 0x13c829048 <col:28> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x13c829180 <line:28:3, col:28> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x13c829118 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sk_err         | | `-CXXDependentScopeMemberExpr 0x13c8290d0 <col:3, col:9> '<dependent type>' contains-errors lvalue ->sk         | |   `-RecoveryExpr 0x13c8290a8 <col:3> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x13c829088 <col:3> 'int *' lvalue ParmVar 0x13c80dd28 'ax25' 'int *'         | `-DeclRefExpr 0x13c829160 <col:28> 'int' lvalue ParmVar 0x13c80dda8 'reason' 'int'         |-CompoundAssignOperator 0x13c8292e0 <line:29:3, col:28> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-CXXDependentScopeMemberExpr 0x13c829230 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sk_shutdown         | | `-CXXDependentScopeMemberExpr 0x13c8291e8 <col:3, col:9> '<dependent type>' contains-errors lvalue ->sk         | |   `-RecoveryExpr 0x13c8291c0 <col:3> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x13c8291a0 <col:3> 'int *' lvalue ParmVar 0x13c80dd28 'ax25' 'int *'         | `-RecoveryExpr 0x13c8292c0 <col:28> '<dependent type>' contains-errors lvalue         |-IfStmt 0x13c829748 <line:30:3, line:33:3>         | |-UnaryOperator 0x13c829448 <line:30:7, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow         | | `-CallExpr 0x13c829418 <col:8, col:37> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x13c829310 <col:8> 'int ()' Function 0x13c827b50 'sock_flag' 'int ()'         | |   |-CXXDependentScopeMemberExpr 0x13c829350 <col:18, col:24> '<dependent type>' contains-errors lvalue ->sk         | |   | `-RecoveryExpr 0x13c829330 <col:18> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x13c8293f8 <col:28> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x13c829730 <col:40, line:33:3>         |   `-CallExpr 0x13c8295a0 <line:31:4, col:38> '<dependent type>' contains-errors         |     |-CXXDependentScopeMemberExpr 0x13c8294f0 <col:4, col:14> '<dependent type>' contains-errors lvalue ->sk_state_change         |     | `-CXXDependentScopeMemberExpr 0x13c8294a8 <col:4, col:10> '<dependent type>' contains-errors lvalue ->sk         |     |   `-RecoveryExpr 0x13c829480 <col:4> '<dependent type>' contains-errors lvalue         |     |     `-DeclRefExpr 0x13c829460 <col:4> 'int *' lvalue ParmVar 0x13c80dd28 'ax25' 'int *'         |     `-CXXDependentScopeMemberExpr 0x13c829558 <col:30, col:36> '<dependent type>' contains-errors lvalue ->sk         |       `-RecoveryExpr 0x13c829538 <col:30> '<dependent type>' contains-errors lvalue         |-CallExpr 0x13c8298d0 <line:34:3, col:26> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13c829848 <col:3> 'int ()' Function 0x13c829790 'bh_unlock_sock' 'int ()'         | `-CXXDependentScopeMemberExpr 0x13c829888 <col:18, col:24> '<dependent type>' contains-errors lvalue ->sk         |   `-RecoveryExpr 0x13c829868 <col:18> '<dependent type>' contains-errors lvalue         `-CallExpr 0x13c829a10 <line:35:3, col:19> 'int'           `-ImplicitCastExpr 0x13c8299f8 <col:3> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x13c8299d8 <col:3> 'int ()' Function 0x13c829920 'local_bh_enable' 'int ()' ","21167":"`-FunctionDecl 0x13d80dda0  line:1:6 tmx_pretran_unlink_safe 'void (int)'   |-ParmVarDecl 0x13d80dcd8 <col:30, col:34> col:34 used slotid 'int'   `-CompoundStmt 0x13d123c98 <line:2:1, line:24:1>     |-IfStmt 0x13d80df70 <line:3:2, line:4:3>     | |-BinaryOperator 0x13d80df40 <line:3:5, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13d80df00 <col:5> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d80df20 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13d80df60 <line:4:3>     |-IfStmt 0x13d80e0c8 <line:5:2, line:6:3>     | |-BinaryOperator 0x13d80e098 <line:5:5, col:32> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13d80e050 <col:5, col:22> '<dependent type>' contains-errors lvalue ->linked     | | | `-RecoveryExpr 0x13d80e030 <col:5> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13d80dff0 <col:32> 'int' 0     | `-ReturnStmt 0x13d80e0b8 <line:6:3>     |-IfStmt 0x13d80e238 <line:7:2, line:11:2>     | |-RecoveryExpr 0x13d80e138 <line:7:5, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x13d80e220 <col:43, line:11:2>     |   `-ReturnStmt 0x13d80e210 <line:10:3>     |-IfStmt 0x13d123c38 <line:12:2, line:20:2> has_else     | |-BinaryOperator 0x13d80e378 <line:12:5, col:28> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13d80e310 <col:5, col:22> '<dependent type>' contains-errors lvalue ->prev     | | | `-RecoveryExpr 0x13d80e2f0 <col:5> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d80e358 <col:28> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x13d123af0 <col:34, line:16:2>     | `-CompoundStmt 0x13d123c28 <col:9, line:20:2>     `-ReturnStmt 0x13d123c88 <line:23:2> ","20352":"`-FunctionDecl 0x129128758  line:1:12 sd_isoc_init 'int (struct gspca_dev *)' static   |-ParmVarDecl 0x129128648 <col:25, col:43> col:43 used gspca_dev 'struct gspca_dev *'   `-CompoundStmt 0x1291457c8 <line:2:1, line:23:1>     |-DeclStmt 0x129144e38 <line:3:2, col:32>     | |-RecordDecl 0x129144c50 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x129144db8 <col:2, col:29> col:29 used alt 'struct usb_host_interface *'     |-DeclStmt 0x129144ed0 <line:4:2, col:21>     | `-VarDecl 0x129144e68 <col:2, col:6> col:6 used max_packet_size 'int'     |-SwitchStmt 0x129144fa8 <line:6:2, line:16:2>     | |-ImplicitCastExpr 0x129144f90 <line:6:10, col:28> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x129144f48 <col:10, col:28> '<dependent type>' contains-errors lvalue .width     | |   `-RecoveryExpr 0x129144f20 <col:10, col:21> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x129144ee8 <col:10> 'struct gspca_dev *' lvalue ParmVar 0x129128648 'gspca_dev' 'struct gspca_dev *'     | `-CompoundStmt 0x1291451b8 <col:35, line:16:2>     |   |-CaseStmt 0x129144ff0 <line:7:2, line:8:21>     |   | |-IntegerLiteral 0x129144fd0 <line:7:7> 'int' 160     |   | `-BinaryOperator 0x129145058 <line:8:3, col:21> 'int' '='     |   |   |-DeclRefExpr 0x129145018 <col:3> 'int' lvalue Var 0x129144e68 'max_packet_size' 'int'     |   |   `-IntegerLiteral 0x129145038 <col:21> 'int' 450     |   |-BreakStmt 0x129145078 <line:9:3>     |   |-CaseStmt 0x1291450a0 <line:10:2, line:11:21>     |   | |-IntegerLiteral 0x129145080 <line:10:7> 'int' 176     |   | `-BinaryOperator 0x129145108 <line:11:3, col:21> 'int' '='     |   |   |-DeclRefExpr 0x1291450c8 <col:3> 'int' lvalue Var 0x129144e68 'max_packet_size' 'int'     |   |   `-IntegerLiteral 0x1291450e8 <col:21> 'int' 600     |   |-BreakStmt 0x129145128 <line:12:3>     |   |-DefaultStmt 0x129145190 <line:13:2, line:14:21>     |   | `-BinaryOperator 0x129145170 <col:3, col:21> 'int' '='     |   |   |-DeclRefExpr 0x129145130 <col:3> 'int' lvalue Var 0x129144e68 'max_packet_size' 'int'     |   |   `-IntegerLiteral 0x129145150 <col:21> 'int' 1022     |   `-BreakStmt 0x1291451b0 <line:15:3>     |-BinaryOperator 0x129145418 <line:19:2, col:63> 'struct usb_host_interface *' contains-errors '='     | |-DeclRefExpr 0x1291451f8 <col:2> 'struct usb_host_interface *' lvalue Var 0x129144db8 'alt' 'struct usb_host_interface *'     | `-UnaryOperator 0x129145400 <col:8, col:63> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x1291453e0 <col:9, col:63> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x1291453c8 <col:9, col:51> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x129145360 <col:9, col:51> '<dependent type>' contains-errors lvalue ->altsetting     |     |   `-ArraySubscriptExpr 0x129145340 <col:9, col:48> '<dependent type>' contains-errors lvalue     |     |     |-ImplicitCastExpr 0x129145328 <col:9, col:36> '<dependent type>' contains-errors <LValueToRValue>     |     |     | `-CXXDependentScopeMemberExpr 0x1291452c0 <col:9, col:36> '<dependent type>' contains-errors lvalue ->intf_cache     |     |     |   `-CXXDependentScopeMemberExpr 0x129145278 <col:9, col:25> '<dependent type>' contains-errors lvalue ->actconfig     |     |     |     `-RecoveryExpr 0x129145250 <col:9, col:20> '<dependent type>' contains-errors lvalue     |     |     |       `-DeclRefExpr 0x129145218 <col:9> 'struct gspca_dev *' lvalue ParmVar 0x129128648 'gspca_dev' 'struct gspca_dev *'     |     |     `-IntegerLiteral 0x129145308 <col:47> 'int' 0     |     `-IntegerLiteral 0x1291453a8 <col:62> 'int' 1     |-BinaryOperator 0x129145778 <line:20:2, col:68> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x129145538 <col:2, col:24> '<dependent type>' contains-errors lvalue .wMaxPacketSize     | | `-CXXDependentScopeMemberExpr 0x1291454f0 <col:2, col:19> '<dependent type>' contains-errors lvalue .desc     | |   `-ArraySubscriptExpr 0x1291454d0 <col:2, col:17> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x1291454b8 <col:2, col:7> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x129145470 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x129145438 <col:2> 'struct usb_host_interface *' lvalue Var 0x129144db8 'alt' 'struct usb_host_interface *'     | |     `-IntegerLiteral 0x129145498 <col:16> 'int' 0     | `-CallExpr 0x129145738 <col:41, col:68> 'int'     |   |-ImplicitCastExpr 0x129145720 <col:41> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1291456b0 <col:41> 'int ()' Function 0x1291455f8 'cpu_to_le16' 'int ()'     |   `-ImplicitCastExpr 0x129145760 <col:53> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1291456d0 <col:53> 'int' lvalue Var 0x129144e68 'max_packet_size' 'int'     `-ReturnStmt 0x1291457b8 <line:22:2, col:9>       `-IntegerLiteral 0x129145798 <col:9> 'int' 0 ","21012":"`-FunctionDecl 0x138928288  line:1:1 invalid f_py3eval 'int (int *, int *)'   |-ParmVarDecl 0x138928128 <col:11, col:21> col:21 invalid argvars 'int *'   |-ParmVarDecl 0x1389281a8 <col:30, col:40> col:40 invalid rettv 'int *'   `-CompoundStmt 0x138941948 <line:2:1, line:11:1>     |-DeclStmt 0x1389283c0 <line:3:5, col:16>     | `-VarDecl 0x138928358 <col:5, col:13> col:13 used str 'char *'     |-DeclStmt 0x138928468 <line:4:5, col:26>     | `-VarDecl 0x138928400 <col:5, col:12> col:12 invalid buf 'char'     |-BinaryOperator 0x1389287b0 <line:9:5, col:45> 'char *' contains-errors '='     | |-DeclRefExpr 0x138928538 <col:5> 'char *' lvalue Var 0x138928358 'str' 'char *'     | `-CallExpr 0x138928780 <col:11, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1389286b0 <col:11> 'int ()' Function 0x1389285f8 'tv_get_string_buf' 'int ()'     |   |-UnaryOperator 0x138928748 <col:29, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-ArraySubscriptExpr 0x138928728 <col:30, col:39> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x138928710 <col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x1389286d0 <col:30> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x1389286f0 <col:38> 'int' 0     |   `-RecoveryExpr 0x138928760 <col:42> '<dependent type>' contains-errors lvalue     `-CallExpr 0x138941918 <line:10:5, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x1389418b8 <col:5> 'int ()' Function 0x138941800 'do_py3eval' 'int ()'       |-DeclRefExpr 0x1389418d8 <col:16> 'char *' lvalue Var 0x138928358 'str' 'char *'       `-RecoveryExpr 0x1389418f8 <col:21> '<dependent type>' contains-errors lvalue ","20471":"`-FunctionDecl 0x12e80e358  line:1:12 bond_kobj_init 'int (struct slave *)' static   |-ParmVarDecl 0x12e80e248 <col:27, col:41> col:41 used slave 'struct slave *'   `-CompoundStmt 0x12e82afb8 <line:2:1, line:11:1>     |-DeclStmt 0x12e82a8d0 <line:3:2, col:9>     | `-VarDecl 0x12e82a868 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x12e82ad58 <line:5:2, line:6:38> 'int' contains-errors '='     | |-DeclRefExpr 0x12e82a8e8 <line:5:2> 'int' lvalue Var 0x12e82a868 'err' 'int'     | `-CallExpr 0x12e82ad18 <col:8, line:6:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e82aa30 <line:5:8> 'int ()' Function 0x12e82a978 'kobject_init_and_add' 'int ()'     |   |-UnaryOperator 0x12e82aab0 <col:29, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12e82aa88 <col:30, col:37> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12e82aa50 <col:30> 'struct slave *' lvalue ParmVar 0x12e80e248 'slave' 'struct slave *'     |   |-UnaryOperator 0x12e82ad00 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12e82ace0 <col:44> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x12e82ac08 <line:6:8, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-ParenExpr 0x12e82abe8 <col:9, col:30> '<dependent type>' contains-errors lvalue     |   |   `-CXXDependentScopeMemberExpr 0x12e82aba0 <col:10, col:26> '<dependent type>' contains-errors lvalue .kobj     |   |     `-CXXDependentScopeMemberExpr 0x12e82ab58 <col:10, col:22> '<dependent type>' contains-errors lvalue ->dev     |   |       `-RecoveryExpr 0x12e82ab30 <col:10, col:17> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x12e82aaf8 <col:10> 'struct slave *' lvalue ParmVar 0x12e80e248 'slave' 'struct slave *'     |   `-StringLiteral 0x12e82ac60 <col:33> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12e82af50 <line:7:2, line:8:27>     | |-ImplicitCastExpr 0x12e82ad98 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12e82ad78 <col:6> 'int' lvalue Var 0x12e82a868 'err' 'int'     | `-CallExpr 0x12e82af28 <line:8:3, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e82ae90 <col:3> 'int ()' Function 0x12e82add8 'kobject_put' 'int ()'     |   `-UnaryOperator 0x12e82af10 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e82aee8 <col:16, col:23> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12e82aeb0 <col:16> 'struct slave *' lvalue ParmVar 0x12e80e248 'slave' 'struct slave *'     `-ReturnStmt 0x12e82afa8 <line:10:2, col:9>       `-ImplicitCastExpr 0x12e82af90 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12e82af70 <col:9> 'int' lvalue Var 0x12e82a868 'err' 'int' ","20533":"`-FunctionDecl 0x147812888  line:1:1 invalid callbacks_bugs_activate 'int (int *, int)'   |-ParmVarDecl 0x147812728 <col:26, col:43> col:43 invalid menuitem 'int *'   |-ParmVarDecl 0x1478127a8 <line:2:30, col:47> col:47 invalid user_data 'int'   `-CompoundStmt 0x148069078 <line:3:1, line:44:1>     |-DeclStmt 0x1478129c0 <line:4:5, col:10>     | `-VarDecl 0x147812958 <col:5, col:9> col:9 used i 'int'     |-CallExpr 0x136008b80 <line:13:5, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136008988 <col:5> 'int ()' Function 0x1360088d0 'gtk_container_set_border_width' 'int ()'     | |-CallExpr 0x136008b58 <col:37, col:63> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x136008a88 <col:37> 'int ()' Function 0x1360089d0 'GTK_CONTAINER' 'int ()'     | | `-RecoveryExpr 0x136008b38 <col:52> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x136008ae8 <col:66> 'int' 5     `-CallExpr 0x136008ea0 <line:14:5, line:15:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x136008c90 <line:14:5> 'int ()' Function 0x136008bd8 'gtk_dialog_set_default_response' 'int ()'       |-CallExpr 0x136008e58 <col:38, col:60> '<dependent type>' contains-errors       | |-DeclRefExpr 0x136008d90 <col:38> 'int ()' Function 0x136008cd8 'GTK_DIALOG' 'int ()'       | `-RecoveryExpr 0x136008e38 <col:49> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x136008e80 <line:15:10> '<dependent type>' contains-errors lvalue ","20974":"`-FunctionDecl 0x142009708  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x142009808 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x142009870 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1420098d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1420097b0 <<invalid sloc>> Implicit 882 ","20336":"`-FunctionDecl 0x13e80de38  line:1:21 invalid VP_DuplicateConfig 'int *(const int *const)' static   |-ParmVarDecl 0x13e80dcf0 <col:40, col:66> col:66 invalid cfg 'const int *const'   `-CompoundStmt 0x13c80f0e0 <line:2:1, line:16:1>     |-IfStmt 0x13c80f078 <line:4:2, line:13:2>     | |-RecoveryExpr 0x13e80e100 <line:4:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13c80f068 <col:11, line:13:2>     `-ReturnStmt 0x13c80f0d0 <line:15:2, col:9>       `-RecoveryExpr 0x13c80f0b0 <col:9> '<dependent type>' contains-errors lvalue ","20783":"`-FunctionDecl 0x14b810950  line:1:6 pde_users_dec 'void (struct proc_dir_entry *)'   |-ParmVarDecl 0x14b810848 <col:20, col:43> col:43 used pde 'struct proc_dir_entry *'   `-CompoundStmt 0x14b810f78 <line:2:1, line:6:1>     |-CallExpr 0x14b810c08 <line:3:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b810b70 <col:2> 'int ()' Function 0x14b810ab8 'spin_lock' 'int ()'     | `-UnaryOperator 0x14b810bf0 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b810bc8 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b810b90 <col:13> 'struct proc_dir_entry *' lvalue ParmVar 0x14b810848 'pde' 'struct proc_dir_entry *'     |-CallExpr 0x14b810d98 <line:4:2, col:21> 'int'     | |-ImplicitCastExpr 0x14b810d80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b810d10 <col:2> 'int ()' Function 0x14b810c58 '__pde_users_dec' 'int ()'     | `-ImplicitCastExpr 0x14b810dc0 <col:18> 'struct proc_dir_entry *' <LValueToRValue>     |   `-DeclRefExpr 0x14b810d30 <col:18> 'struct proc_dir_entry *' lvalue ParmVar 0x14b810848 'pde' 'struct proc_dir_entry *'     `-CallExpr 0x14b810f50 <line:5:2, col:35> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b810eb8 <col:2> 'int ()' Function 0x14b810e00 'spin_unlock' 'int ()'       `-UnaryOperator 0x14b810f38 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14b810f10 <col:15, col:20> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14b810ed8 <col:15> 'struct proc_dir_entry *' lvalue ParmVar 0x14b810848 'pde' 'struct proc_dir_entry *' ","20925":"`-FunctionDecl 0x1369281f8  line:1:20 invalid get_set_object 'int *(int *)' static   |-ParmVarDecl 0x136928128 <col:35, col:44> col:44 invalid buffer 'int *'   `-CompoundStmt 0x1369419c8 <col:52, line:18:1>     |-IfStmt 0x136928650 <line:5:2, line:8:2>     | |-BinaryOperator 0x136928368 <line:5:6, col:10> 'int' contains-errors '>'     | | |-RecoveryExpr 0x136928328 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x136928348 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136928630 <col:20, line:8:2>     |   |-CallExpr 0x1369285a8 <line:6:3, col:17> 'int'     |   | |-ImplicitCastExpr 0x136928590 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1369284e0 <col:3> 'int ()' Function 0x136928428 'eprintf' 'int ()'     |   | `-ImplicitCastExpr 0x1369285d0 <col:12> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x136928540 <col:12> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x136928620 <line:7:3, col:10>     |     `-RecoveryExpr 0x136928600 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136928708 <line:9:2, line:11:2>     | |-RecoveryExpr 0x136928688 <line:9:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1369286f0 <col:13, line:11:2>     |   `-ReturnStmt 0x1369286e0 <line:10:3, col:10>     |     `-RecoveryExpr 0x1369286c0 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x136941990 <line:13:2, line:15:2>       |-UnaryOperator 0x136941918 <line:13:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x136941900 <col:7> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x1369418e0 <col:7> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x136941978 <col:12, line:15:2>         `-ReturnStmt 0x136941968 <line:14:3, col:10>           `-RecoveryExpr 0x136941948 <col:10> '<dependent type>' contains-errors lvalue ","20344":"`-FunctionDecl 0x12700e350  line:1:13 cli_session_setup_done_guest 'void (struct tevent_req *)' static   |-ParmVarDecl 0x12700e248 <col:42, col:61> col:61 used subreq 'struct tevent_req *'   `-CompoundStmt 0x127027128 <line:2:1, line:14:1>     |-DeclStmt 0x1270268b0 <line:3:2, line:4:29>     | `-VarDecl 0x1270266d8 <line:3:2, col:21> col:21 used req 'struct tevent_req *'     |-CallExpr 0x127026bb0 <line:8:2, col:20> 'int'     | |-ImplicitCastExpr 0x127026b98 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127026b58 <col:2> 'int ()' Function 0x127026aa0 'TALLOC_FREE' 'int ()'     | `-ImplicitCastExpr 0x127026bd8 <col:14> 'struct tevent_req *' <LValueToRValue>     |   `-DeclRefExpr 0x127026b78 <col:14> 'struct tevent_req *' lvalue ParmVar 0x12700e248 'subreq' 'struct tevent_req *'     |-IfStmt 0x127026f90 <line:9:2, line:12:2>     | |-UnaryOperator 0x127026d90 <line:9:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x127026d68 <col:7, col:29> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x127026cd0 <col:7> 'int ()' Function 0x127026c18 'NT_STATUS_IS_OK' 'int ()'     | |   `-RecoveryExpr 0x127026d48 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127026f70 <col:32, line:12:2>     |   |-CallExpr 0x127026f30 <line:10:3, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127026e88 <col:3> 'int ()' Function 0x127026dd0 'tevent_req_nterror' 'int ()'     |   | |-DeclRefExpr 0x127026ea8 <col:22> 'struct tevent_req *' lvalue Var 0x1270266d8 'req' 'struct tevent_req *'     |   | `-RecoveryExpr 0x127026f10 <col:27> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x127026f60 <line:11:3>     `-CallExpr 0x1270270e8 <line:13:2, col:21> 'int'       |-ImplicitCastExpr 0x1270270d0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x127027090 <col:2> 'int ()' Function 0x127026fd8 'tevent_req_done' 'int ()'       `-ImplicitCastExpr 0x127027110 <col:18> 'struct tevent_req *' <LValueToRValue>         `-DeclRefExpr 0x1270270b0 <col:18> 'struct tevent_req *' lvalue Var 0x1270266d8 'req' 'struct tevent_req *' ","20782":"`-FunctionDecl 0x149940bf8  line:1:5 auth_request_password_verify 'int (struct auth_request *, const char *, const char *, const char *, const char *)'   |-ParmVarDecl 0x149928648 <col:34, col:55> col:55 used request 'struct auth_request *'   |-ParmVarDecl 0x1499286c8 <line:2:6, col:18> col:18 used plain_password 'const char *'   |-ParmVarDecl 0x149928748 <line:3:6, col:18> col:18 used crypted_password 'const char *'   |-ParmVarDecl 0x149940a00 <line:4:6, col:18> col:18 used scheme 'const char *'   |-ParmVarDecl 0x149940a80 <col:26, col:38> col:38 used subsystem 'const char *'   `-CompoundStmt 0x149940fe8 <line:5:1, line:8:1>     `-ReturnStmt 0x149940fd8 <line:6:2, line:7:45>       `-CallExpr 0x149940f88 <line:6:9, line:7:45> '<dependent type>' contains-errors         |-DeclRefExpr 0x149940e40 <line:6:9> 'int ()' Function 0x149940d88 'auth_request_password_verify_log' 'int ()'         |-DeclRefExpr 0x149940e60 <col:42> 'struct auth_request *' lvalue ParmVar 0x149928648 'request' 'struct auth_request *'         |-DeclRefExpr 0x149940e80 <col:51> 'const char *' lvalue ParmVar 0x1499286c8 'plain_password' 'const char *'         |-DeclRefExpr 0x149940ea0 <line:7:4> 'const char *' lvalue ParmVar 0x149928748 'crypted_password' 'const char *'         |-DeclRefExpr 0x149940ec0 <col:22> 'const char *' lvalue ParmVar 0x149940a00 'scheme' 'const char *'         |-DeclRefExpr 0x149940ee0 <col:30> 'const char *' lvalue ParmVar 0x149940a80 'subsystem' 'const char *'         `-RecoveryExpr 0x149940f68 <col:41> '<dependent type>' contains-errors lvalue ","21197":"`-FunctionDecl 0x1541281e8  line:1:1 dxf_encode_alias 'int (char *restrict)'   |-ParmVarDecl 0x1541280d8 <col:19, col:34> col:34 used name 'char *restrict'   `-CompoundStmt 0x154142b48 <line:2:1, line:31:1>     `-IfStmt 0x154142b18 <line:3:3, line:30:12> has_else       |-CallExpr 0x1541284f8 <line:3:7, col:26> 'int'       | |-ImplicitCastExpr 0x1541284e0 <col:7> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x154128410 <col:7> 'int ()' Function 0x154128358 'strEQc' 'int ()'       | |-ImplicitCastExpr 0x154128528 <col:15> 'char *' <LValueToRValue>       | | `-DeclRefExpr 0x154128430 <col:15> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'       | `-ImplicitCastExpr 0x154128540 <col:21> 'char *' <ArrayToPointerDecay>       |   `-StringLiteral 0x154128490 <col:21> 'char[4]' lvalue \"STR\"       |-ReturnStmt 0x154140be0 <line:4:5, col:12>       | `-ImplicitCastExpr 0x154128590 <col:12> 'int' <PointerToIntegral>       |   `-ImplicitCastExpr 0x154128578 <col:12> 'char *' <ArrayToPointerDecay>       |     `-StringLiteral 0x154128558 <col:12> 'char[4]' lvalue \"STR\"       `-IfStmt 0x154142ae8 <line:5:8, line:30:12> has_else         |-CallExpr 0x154140c68 <line:5:12, col:31> 'int'         | |-ImplicitCastExpr 0x154140c50 <col:12> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x154140bf0 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'         | |-ImplicitCastExpr 0x154140c98 <col:20> 'char *' <LValueToRValue>         | | `-DeclRefExpr 0x154140c10 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'         | `-ImplicitCastExpr 0x154140cb0 <col:26> 'char *' <ArrayToPointerDecay>         |   `-StringLiteral 0x154140c30 <col:26> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x154140d18 <line:6:5, col:12>         | `-ImplicitCastExpr 0x154140d00 <col:12> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x154140ce8 <col:12> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x154140cc8 <col:12> 'char[4]' lvalue \"STR\"         `-IfStmt 0x154142ab8 <line:7:8, line:30:12> has_else           |-CallExpr 0x154140da0 <line:7:12, col:31> 'int'           | |-ImplicitCastExpr 0x154140d88 <col:12> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x154140d28 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'           | |-ImplicitCastExpr 0x154140dd0 <col:20> 'char *' <LValueToRValue>           | | `-DeclRefExpr 0x154140d48 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'           | `-ImplicitCastExpr 0x154140de8 <col:26> 'char *' <ArrayToPointerDecay>           |   `-StringLiteral 0x154140d68 <col:26> 'char[4]' lvalue \"STR\"           |-ReturnStmt 0x154140e50 <line:8:5, col:12>           | `-ImplicitCastExpr 0x154140e38 <col:12> 'int' <PointerToIntegral>           |   `-ImplicitCastExpr 0x154140e20 <col:12> 'char *' <ArrayToPointerDecay>           |     `-StringLiteral 0x154140e00 <col:12> 'char[4]' lvalue \"STR\"           `-IfStmt 0x154142a88 <line:9:8, line:30:12> has_else             |-CallExpr 0x154140ed8 <line:9:12, col:31> 'int'             | |-ImplicitCastExpr 0x154140ec0 <col:12> 'int (*)()' <FunctionToPointerDecay>             | | `-DeclRefExpr 0x154140e60 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'             | |-ImplicitCastExpr 0x154140f08 <col:20> 'char *' <LValueToRValue>             | | `-DeclRefExpr 0x154140e80 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'             | `-ImplicitCastExpr 0x154140f20 <col:26> 'char *' <ArrayToPointerDecay>             |   `-StringLiteral 0x154140ea0 <col:26> 'char[4]' lvalue \"STR\"             |-ReturnStmt 0x154140f88 <line:10:5, col:12>             | `-ImplicitCastExpr 0x154140f70 <col:12> 'int' <PointerToIntegral>             |   `-ImplicitCastExpr 0x154140f58 <col:12> 'char *' <ArrayToPointerDecay>             |     `-StringLiteral 0x154140f38 <col:12> 'char[4]' lvalue \"STR\"             `-IfStmt 0x154142a58 <line:11:8, line:30:12> has_else               |-CallExpr 0x154141010 <line:11:12, col:31> 'int'               | |-ImplicitCastExpr 0x154140ff8 <col:12> 'int (*)()' <FunctionToPointerDecay>               | | `-DeclRefExpr 0x154140f98 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'               | |-ImplicitCastExpr 0x154141040 <col:20> 'char *' <LValueToRValue>               | | `-DeclRefExpr 0x154140fb8 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'               | `-ImplicitCastExpr 0x154141058 <col:26> 'char *' <ArrayToPointerDecay>               |   `-StringLiteral 0x154140fd8 <col:26> 'char[4]' lvalue \"STR\"               |-ReturnStmt 0x1541410c0 <line:12:5, col:12>               | `-ImplicitCastExpr 0x1541410a8 <col:12> 'int' <PointerToIntegral>               |   `-ImplicitCastExpr 0x154141090 <col:12> 'char *' <ArrayToPointerDecay>               |     `-StringLiteral 0x154141070 <col:12> 'char[4]' lvalue \"STR\"               `-IfStmt 0x154142a28 <line:13:8, line:30:12> has_else                 |-CallExpr 0x154141148 <line:13:12, col:31> 'int'                 | |-ImplicitCastExpr 0x154141130 <col:12> 'int (*)()' <FunctionToPointerDecay>                 | | `-DeclRefExpr 0x1541410d0 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'                 | |-ImplicitCastExpr 0x154141178 <col:20> 'char *' <LValueToRValue>                 | | `-DeclRefExpr 0x1541410f0 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'                 | `-ImplicitCastExpr 0x154141190 <col:26> 'char *' <ArrayToPointerDecay>                 |   `-StringLiteral 0x154141110 <col:26> 'char[4]' lvalue \"STR\"                 |-ReturnStmt 0x1541411f8 <line:14:5, col:12>                 | `-ImplicitCastExpr 0x1541411e0 <col:12> 'int' <PointerToIntegral>                 |   `-ImplicitCastExpr 0x1541411c8 <col:12> 'char *' <ArrayToPointerDecay>                 |     `-StringLiteral 0x1541411a8 <col:12> 'char[4]' lvalue \"STR\"                 `-IfStmt 0x1541429f8 <line:15:8, line:30:12> has_else                   |-CallExpr 0x154141280 <line:15:12, col:31> 'int'                   | |-ImplicitCastExpr 0x154141268 <col:12> 'int (*)()' <FunctionToPointerDecay>                   | | `-DeclRefExpr 0x154141208 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'                   | |-ImplicitCastExpr 0x1541412b0 <col:20> 'char *' <LValueToRValue>                   | | `-DeclRefExpr 0x154141228 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'                   | `-ImplicitCastExpr 0x1541412c8 <col:26> 'char *' <ArrayToPointerDecay>                   |   `-StringLiteral 0x154141248 <col:26> 'char[4]' lvalue \"STR\"                   |-ReturnStmt 0x154141330 <line:16:5, col:12>                   | `-ImplicitCastExpr 0x154141318 <col:12> 'int' <PointerToIntegral>                   |   `-ImplicitCastExpr 0x154141300 <col:12> 'char *' <ArrayToPointerDecay>                   |     `-StringLiteral 0x1541412e0 <col:12> 'char[4]' lvalue \"STR\"                   `-IfStmt 0x1541429c8 <line:17:8, line:30:12> has_else                     |-CallExpr 0x1541413b8 <line:17:12, col:31> 'int'                     | |-ImplicitCastExpr 0x1541413a0 <col:12> 'int (*)()' <FunctionToPointerDecay>                     | | `-DeclRefExpr 0x154141340 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'                     | |-ImplicitCastExpr 0x1541413e8 <col:20> 'char *' <LValueToRValue>                     | | `-DeclRefExpr 0x154141360 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'                     | `-ImplicitCastExpr 0x154141400 <col:26> 'char *' <ArrayToPointerDecay>                     |   `-StringLiteral 0x154141380 <col:26> 'char[4]' lvalue \"STR\"                     |-ReturnStmt 0x154141468 <line:18:5, col:12>                     | `-ImplicitCastExpr 0x154141450 <col:12> 'int' <PointerToIntegral>                     |   `-ImplicitCastExpr 0x154141438 <col:12> 'char *' <ArrayToPointerDecay>                     |     `-StringLiteral 0x154141418 <col:12> 'char[4]' lvalue \"STR\"                     `-IfStmt 0x154142998 <line:19:8, line:30:12> has_else                       |-CallExpr 0x1541414f0 <line:19:12, col:31> 'int'                       | |-ImplicitCastExpr 0x1541414d8 <col:12> 'int (*)()' <FunctionToPointerDecay>                       | | `-DeclRefExpr 0x154141478 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'                       | |-ImplicitCastExpr 0x154141520 <col:20> 'char *' <LValueToRValue>                       | | `-DeclRefExpr 0x154141498 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'                       | `-ImplicitCastExpr 0x154141538 <col:26> 'char *' <ArrayToPointerDecay>                       |   `-StringLiteral 0x1541414b8 <col:26> 'char[4]' lvalue \"STR\"                       |-ReturnStmt 0x1541415a0 <line:20:5, col:12>                       | `-ImplicitCastExpr 0x154141588 <col:12> 'int' <PointerToIntegral>                       |   `-ImplicitCastExpr 0x154141570 <col:12> 'char *' <ArrayToPointerDecay>                       |     `-StringLiteral 0x154141550 <col:12> 'char[4]' lvalue \"STR\"                       `-IfStmt 0x154142968 <line:21:8, line:30:12> has_else                         |-CallExpr 0x154141628 <line:21:12, col:31> 'int'                         | |-ImplicitCastExpr 0x154141610 <col:12> 'int (*)()' <FunctionToPointerDecay>                         | | `-DeclRefExpr 0x1541415b0 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'                         | |-ImplicitCastExpr 0x154141658 <col:20> 'char *' <LValueToRValue>                         | | `-DeclRefExpr 0x1541415d0 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'                         | `-ImplicitCastExpr 0x154141670 <col:26> 'char *' <ArrayToPointerDecay>                         |   `-StringLiteral 0x1541415f0 <col:26> 'char[4]' lvalue \"STR\"                         |-ReturnStmt 0x1541416d8 <line:22:5, col:12>                         | `-ImplicitCastExpr 0x1541416c0 <col:12> 'int' <PointerToIntegral>                         |   `-ImplicitCastExpr 0x1541416a8 <col:12> 'char *' <ArrayToPointerDecay>                         |     `-StringLiteral 0x154141688 <col:12> 'char[4]' lvalue \"STR\"                         `-IfStmt 0x154142938 <line:23:8, line:30:12> has_else                           |-CallExpr 0x154141760 <line:23:12, col:31> 'int'                           | |-ImplicitCastExpr 0x154141748 <col:12> 'int (*)()' <FunctionToPointerDecay>                           | | `-DeclRefExpr 0x1541416e8 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'                           | |-ImplicitCastExpr 0x154141790 <col:20> 'char *' <LValueToRValue>                           | | `-DeclRefExpr 0x154141708 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'                           | `-ImplicitCastExpr 0x1541417a8 <col:26> 'char *' <ArrayToPointerDecay>                           |   `-StringLiteral 0x154141728 <col:26> 'char[4]' lvalue \"STR\"                           |-ReturnStmt 0x154141810 <line:24:5, col:12>                           | `-ImplicitCastExpr 0x1541417f8 <col:12> 'int' <PointerToIntegral>                           |   `-ImplicitCastExpr 0x1541417e0 <col:12> 'char *' <ArrayToPointerDecay>                           |     `-StringLiteral 0x1541417c0 <col:12> 'char[4]' lvalue \"STR\"                           `-IfStmt 0x154142908 <line:25:8, line:30:12> has_else                             |-CallExpr 0x154141898 <line:25:12, col:31> 'int'                             | |-ImplicitCastExpr 0x154141880 <col:12> 'int (*)()' <FunctionToPointerDecay>                             | | `-DeclRefExpr 0x154141820 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'                             | |-ImplicitCastExpr 0x1541418c8 <col:20> 'char *' <LValueToRValue>                             | | `-DeclRefExpr 0x154141840 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'                             | `-ImplicitCastExpr 0x1541418e0 <col:26> 'char *' <ArrayToPointerDecay>                             |   `-StringLiteral 0x154141860 <col:26> 'char[4]' lvalue \"STR\"                             |-ReturnStmt 0x154141948 <line:26:5, col:12>                             | `-ImplicitCastExpr 0x154141930 <col:12> 'int' <PointerToIntegral>                             |   `-ImplicitCastExpr 0x154141918 <col:12> 'char *' <ArrayToPointerDecay>                             |     `-StringLiteral 0x1541418f8 <col:12> 'char[4]' lvalue \"STR\"                             `-IfStmt 0x1541428d8 <line:27:8, line:30:12> has_else                               |-CallExpr 0x1541419d0 <line:27:12, col:31> 'int'                               | |-ImplicitCastExpr 0x1541419b8 <col:12> 'int (*)()' <FunctionToPointerDecay>                               | | `-DeclRefExpr 0x154141958 <col:12> 'int ()' Function 0x154128358 'strEQc' 'int ()'                               | |-ImplicitCastExpr 0x154142800 <col:20> 'char *' <LValueToRValue>                               | | `-DeclRefExpr 0x154141978 <col:20> 'char *restrict' lvalue ParmVar 0x1541280d8 'name' 'char *restrict'                               | `-ImplicitCastExpr 0x154142818 <col:26> 'char *' <ArrayToPointerDecay>                               |   `-StringLiteral 0x154141998 <col:26> 'char[4]' lvalue \"STR\"                               |-ReturnStmt 0x154142880 <line:28:5, col:12>                               | `-ImplicitCastExpr 0x154142868 <col:12> 'int' <PointerToIntegral>                               |   `-ImplicitCastExpr 0x154142850 <col:12> 'char *' <ArrayToPointerDecay>                               |     `-StringLiteral 0x154142830 <col:12> 'char[4]' lvalue \"STR\"                               `-ReturnStmt 0x1541428c8 <line:30:5, col:12>                                 `-RecoveryExpr 0x1541428a8 <col:12> '<dependent type>' contains-errors lvalue ","20307":"`-FunctionDecl 0x13c141f68  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x13c142068 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x13c1420d0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x13c142010 <<invalid sloc>> Implicit 906   `-FormatAttr 0x13c142148 <col:9> Implicit printf 2 3 ","21119":"`-FunctionDecl 0x12d941bc0  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12d941cc0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12d941d28 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12d941d90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12d941c68 <<invalid sloc>> Implicit 882 ","21019":"`-FunctionDecl 0x14a00de88  line:1:12 invalid am_handle_logout_response 'int (int *, int *)' static   |-ParmVarDecl 0x14a00dd28 <col:38, col:51> col:51 invalid r 'int *'   |-ParmVarDecl 0x14a00dda8 <col:54, col:67> col:67 invalid logout 'int *'   `-CompoundStmt 0x14a02a9d0 <line:2:1, line:71:1>     |-DeclStmt 0x14a00dfc0 <line:3:5, col:13>     | `-VarDecl 0x14a00df58 <col:5, col:10> col:10 used res 'int'     |-DeclStmt 0x14a00e058 <line:4:5, col:11>     | `-VarDecl 0x14a00dff0 <col:5, col:9> col:9 used rc 'int'     |-DeclStmt 0x14a00e108 <line:6:5, col:20>     | `-VarDecl 0x14a00e0a0 <col:5, col:11> col:11 used return_to 'char *'     |-BinaryOperator 0x14a0278d8 <line:9:5, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x14a00e2f8 <col:5> 'int' lvalue Var 0x14a00df58 'res' 'int'     | `-CallExpr 0x14a0278a8 <col:11, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a027800 <col:11> 'int ()' Function 0x14a00e340 'lasso_logout_process_response_msg' 'int ()'     |   |-RecoveryExpr 0x14a027820 <col:45> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x14a027860 <col:53, col:56> '<dependent type>' contains-errors lvalue ->args     |     `-RecoveryExpr 0x14a027840 <col:53> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a028018 <line:21:5, line:28:5>     | |-BinaryOperator 0x14a027950 <line:21:8, col:15> 'int' '!='     | | |-ImplicitCastExpr 0x14a027938 <col:8> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14a0278f8 <col:8> 'int' lvalue Var 0x14a00df58 'res' 'int'     | | `-IntegerLiteral 0x14a027918 <col:15> 'int' 0     | `-CompoundStmt 0x14a027ff0 <col:18, line:28:5>     |   |-CallExpr 0x14a027e08 <line:22:9, line:24:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a027a50 <line:22:9> 'int ()' Function 0x14a027998 'ap_log_rerror' 'int ()'     |   | |-RecoveryExpr 0x14a027d70 <col:23> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14a027d90 <col:35> '<dependent type>' contains-errors lvalue     |   | |-IntegerLiteral 0x14a027aa0 <col:46> 'int' 0     |   | |-RecoveryExpr 0x14a027ac0 <col:49> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14a027b20 <line:23:23, line:24:23> 'char[7]' lvalue \"STRSTR\"     |   | |-DeclRefExpr 0x14a027b48 <col:30> 'int' lvalue Var 0x14a00df58 'res' 'int'     |   | `-CallExpr 0x14a027dc8 <col:35, col:53> 'int'     |   |   |-ImplicitCastExpr 0x14a027db0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14a027c48 <col:35> 'int ()' Function 0x14a027b90 'lasso_strerror' 'int ()'     |   |   `-ImplicitCastExpr 0x14a027df0 <col:50> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x14a027c68 <col:50> 'int' lvalue Var 0x14a00df58 'res' 'int'     |   |-CallExpr 0x14a027f80 <line:26:9, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a027f40 <col:9> 'int ()' Function 0x14a027e88 'lasso_logout_destroy' 'int ()'     |   | `-RecoveryExpr 0x14a027f60 <col:30> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14a027fe0 <line:27:9, col:16>     |     `-RecoveryExpr 0x14a027fc0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a028078 <line:30:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a028038 <col:5> 'int ()' Function 0x14a027e88 'lasso_logout_destroy' 'int ()'     | `-RecoveryExpr 0x14a028058 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a0283c8 <line:34:5, line:36:5>     | |-BinaryOperator 0x14a028278 <line:34:8, col:19> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14a028238 <col:8> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14a028258 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a0283b8 <col:25, line:36:5>     |-BinaryOperator 0x14a028678 <line:38:5, col:67> 'char *' contains-errors '='     | |-DeclRefExpr 0x14a0283e8 <col:5> 'char *' lvalue Var 0x14a00e0a0 'return_to' 'char *'     | `-CallExpr 0x14a028640 <col:17, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a0284e8 <col:17> 'int ()' Function 0x14a028430 'am_extract_query_parameter' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x14a028528 <col:44, col:47> '<dependent type>' contains-errors lvalue ->pool     |   | `-RecoveryExpr 0x14a028508 <col:44> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x14a028590 <col:53, col:56> '<dependent type>' contains-errors lvalue ->args     |   | `-RecoveryExpr 0x14a028570 <col:53> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x14a028620 <col:62> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14a0287c0 <line:39:5, line:45:5>     | |-RecoveryExpr 0x14a0286b8 <line:39:8, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x14a0287b0 <col:27, line:45:5>     |-BinaryOperator 0x14a02a178 <line:47:5, col:32> 'int' '='     | |-DeclRefExpr 0x14a0287e0 <col:5> 'int' lvalue Var 0x14a00dff0 'rc' 'int'     | `-CallExpr 0x14a02a138 <col:10, col:32> 'int'     |   |-ImplicitCastExpr 0x14a02a120 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a02a0e0 <col:10> 'int ()' Function 0x14a02a028 'am_urldecode' 'int ()'     |   `-ImplicitCastExpr 0x14a02a160 <col:23> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x14a02a100 <col:23> 'char *' lvalue Var 0x14a00e0a0 'return_to' 'char *'     |-IfStmt 0x14a02a270 <line:48:5, line:53:5>     | |-RecoveryExpr 0x14a02a1b8 <line:48:8, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14a02a260 <col:18, line:53:5>     |-BinaryOperator 0x14a02a420 <line:56:5, col:35> 'int' contains-errors '='     | |-DeclRefExpr 0x14a02a290 <col:5> 'int' lvalue Var 0x14a00dff0 'rc' 'int'     | `-CallExpr 0x14a02a3f0 <col:10, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a02a390 <col:10> 'int ()' Function 0x14a02a2d8 'am_check_url' 'int ()'     |   |-RecoveryExpr 0x14a02a3b0 <col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a02a3d0 <col:26> 'char *' lvalue Var 0x14a00e0a0 'return_to' 'char *'     |-IfStmt 0x14a02a4e0 <line:57:5, line:59:5>     | |-RecoveryExpr 0x14a02a460 <line:57:9, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x14a02a4c8 <col:19, line:59:5>     |   `-ReturnStmt 0x14a02a4b8 <line:58:9, col:16>     |     `-ImplicitCastExpr 0x14a02a4a0 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14a02a480 <col:16> 'int' lvalue Var 0x14a00dff0 'rc' 'int'     |-BinaryOperator 0x14a02a690 <line:62:5, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x14a02a500 <col:5> 'int' lvalue Var 0x14a00dff0 'rc' 'int'     | `-CallExpr 0x14a02a660 <col:10, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a02a600 <col:10> 'int ()' Function 0x14a02a548 'am_validate_redirect_url' 'int ()'     |   |-RecoveryExpr 0x14a02a620 <col:35> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a02a640 <col:38> 'char *' lvalue Var 0x14a00e0a0 'return_to' 'char *'     |-IfStmt 0x14a02a7d0 <line:63:5, line:67:5>     | |-RecoveryExpr 0x14a02a6d0 <line:63:9, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x14a02a7b8 <col:19, line:67:5>     |   `-ReturnStmt 0x14a02a7a8 <line:66:9, col:16>     |     `-ImplicitCastExpr 0x14a02a790 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14a02a770 <col:16> 'int' lvalue Var 0x14a00dff0 'rc' 'int'     `-CallExpr 0x14a02a998 <line:69:5, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a02a8d0 <col:5> 'int ()' Function 0x14a02a818 'apr_table_setn' 'int ()'       |-CXXDependentScopeMemberExpr 0x14a02a910 <col:20, col:23> '<dependent type>' contains-errors lvalue ->headers_out       | `-RecoveryExpr 0x14a02a8f0 <col:20> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x14a02a958 <col:36> 'char[4]' lvalue \"STR\"       `-DeclRefExpr 0x14a02a978 <col:43> 'char *' lvalue Var 0x14a00e0a0 'return_to' 'char *' ","20394":"`-FunctionDecl 0x145827480  line:1:6 invalid MACH0_ 'int ((int))(struct MACH0_)'   |-ParmVarDecl 0x14580e2b8 <col:13> col:13 get_baddr 'int'   `-CompoundStmt 0x145827e18 <col:51, line:11:1>     |-DeclStmt 0x1458275b0 <line:2:2, col:7>     | `-VarDecl 0x145827548 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x145827a00 <line:4:2, line:5:10>     | |-BinaryOperator 0x145827988 <line:4:6, col:62> 'int' contains-errors '&&'     | | |-BinaryOperator 0x145827878 <col:6, col:27> 'int' contains-errors '!='     | | | |-CXXDependentScopeMemberExpr 0x145827810 <col:6, col:15> '<dependent type>' contains-errors lvalue .filetype     | | | | `-CXXDependentScopeMemberExpr 0x1458277c8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->hdr     | | | |   `-RecoveryExpr 0x1458277a8 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x145827858 <col:27> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x145827968 <col:41, col:62> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x145827900 <col:41, col:50> '<dependent type>' contains-errors lvalue .filetype     | |   | `-CXXDependentScopeMemberExpr 0x1458278b8 <col:41, col:46> '<dependent type>' contains-errors lvalue ->hdr     | |   |   `-RecoveryExpr 0x145827898 <col:41> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x145827948 <col:62> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1458279f0 <line:5:3, col:10>     |   `-RecoveryExpr 0x1458279c8 <col:10> 'int (struct MACH0_)' contains-errors     |     `-IntegerLiteral 0x1458279a8 <col:10> 'int' 0     `-ReturnStmt 0x145827e08 <line:10:2, col:9>       `-RecoveryExpr 0x145827de0 <col:9> 'int (struct MACH0_)' contains-errors         `-IntegerLiteral 0x145827dc0 <col:9> 'int' 0 ","20956":"`-FunctionDecl 0x13b940b48  line:1:5 btrfs_end_transaction_throttle 'int (struct btrfs_trans_handle *, struct btrfs_root *)'   |-ParmVarDecl 0x13b928648 <col:36, col:63> col:63 used trans 'struct btrfs_trans_handle *'   |-ParmVarDecl 0x13b940a28 <line:2:8, col:27> col:27 used root 'struct btrfs_root *'   `-CompoundStmt 0x13b941050 <line:3:1, line:10:1>     |-DeclStmt 0x13b940cc8 <line:4:2, col:9>     | `-VarDecl 0x13b940c60 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x13b940f60 <line:6:2, col:46> 'int' '='     | |-DeclRefExpr 0x13b940ce0 <col:2> 'int' lvalue Var 0x13b940c60 'ret' 'int'     | `-CallExpr 0x13b940ef8 <col:8, col:46> 'int'     |   |-ImplicitCastExpr 0x13b940ee0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13b940e30 <col:8> 'int ()' Function 0x13b940d78 '__btrfs_end_transaction' 'int ()'     |   |-ImplicitCastExpr 0x13b940f30 <col:32> 'struct btrfs_trans_handle *' <LValueToRValue>     |   | `-DeclRefExpr 0x13b940e50 <col:32> 'struct btrfs_trans_handle *' lvalue ParmVar 0x13b928648 'trans' 'struct btrfs_trans_handle *'     |   |-ImplicitCastExpr 0x13b940f48 <col:39> 'struct btrfs_root *' <LValueToRValue>     |   | `-DeclRefExpr 0x13b940e70 <col:39> 'struct btrfs_root *' lvalue ParmVar 0x13b940a28 'root' 'struct btrfs_root *'     |   `-IntegerLiteral 0x13b940e90 <col:45> 'int' 1     |-IfStmt 0x13b941000 <line:7:2, line:8:10>     | |-ImplicitCastExpr 0x13b940fa0 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13b940f80 <col:6> 'int' lvalue Var 0x13b940c60 'ret' 'int'     | `-ReturnStmt 0x13b940ff0 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x13b940fd8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13b940fb8 <col:10> 'int' lvalue Var 0x13b940c60 'ret' 'int'     `-ReturnStmt 0x13b941040 <line:9:2, col:9>       `-IntegerLiteral 0x13b941020 <col:9> 'int' 0 ","21259":"`-FunctionDecl 0x14800ddf0  line:1:13 invalid parse_data_for_row_pseudocolor 'void (int *)' static   |-ParmVarDecl 0x14800dd28 <col:44, col:56> col:56 invalid ctx 'int *'   `-CompoundStmt 0x148027fb0 <line:2:1, line:14:1>     |-DeclStmt 0x14800dfd0 <line:3:2, col:27>     | `-VarDecl 0x14800deb8 <col:2, col:23> col:10 used s 'char *' cinit     |   `-CXXDependentScopeMemberExpr 0x14800df88 <col:14, col:23> '<dependent type>' contains-errors lvalue ->data     |     `-CXXDependentScopeMemberExpr 0x14800df40 <col:14, col:19> '<dependent type>' contains-errors lvalue ->in     |       `-RecoveryExpr 0x14800df20 <col:14> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14800e0d0 <line:5:2, col:23>     | `-VarDecl 0x14800e000 <col:2, col:19> col:10 used p 'char *' cinit     |   `-CXXDependentScopeMemberExpr 0x14800e088 <col:14, col:19> '<dependent type>' contains-errors lvalue ->pptr     |     `-RecoveryExpr 0x14800e068 <col:14> '<dependent type>' contains-errors lvalue     `-ForStmt 0x148027f78 <line:7:2, line:13:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-RecoveryExpr 0x14800e100 <line:7:9> '<dependent type>' contains-errors lvalue       |-BinaryOperator 0x14800e1e0 <col:22, col:38> 'char *' contains-errors ','       | |-UnaryOperator 0x14800e1c8 <col:22, col:33> '<dependent type>' contains-errors postfix '--' cannot overflow       | | `-RecoveryExpr 0x14800e1a8 <col:22> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x14800e170 <col:37, col:38> 'char *' contains-errors postfix '++'       |   `-DeclRefExpr 0x14800e150 <col:37> 'char *' contains-errors lvalue Var 0x14800deb8 's' 'char *'       `-CompoundStmt 0x148027f48 <col:42, line:13:2>         |-BinaryOperator 0x148027800 <line:8:3, col:30> 'char' contains-errors '='         | |-UnaryOperator 0x14800e238 <col:3, col:5> 'char' contains-errors lvalue prefix '*' cannot overflow         | | `-UnaryOperator 0x14800e220 <col:4, col:5> 'char *' contains-errors postfix '++'         | |   `-DeclRefExpr 0x14800e200 <col:4> 'char *' contains-errors lvalue Var 0x14800e000 'p' 'char *'         | `-CXXDependentScopeMemberExpr 0x14800e3a0 <col:10, col:30> '<dependent type>' contains-errors lvalue .r         |   `-ArraySubscriptExpr 0x14800e380 <col:10, col:28> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x14800e350 <col:10, col:21> '<dependent type>' contains-errors <LValueToRValue>         |     | `-CXXDependentScopeMemberExpr 0x14800e2b8 <col:10, col:21> '<dependent type>' contains-errors lvalue ->cols         |     |   `-CXXDependentScopeMemberExpr 0x14800e270 <col:10, col:15> '<dependent type>' contains-errors lvalue ->cmap         |     |     `-RecoveryExpr 0x14800e250 <col:10> '<dependent type>' contains-errors lvalue         |     `-ImplicitCastExpr 0x14800e368 <col:26, col:27> 'char' contains-errors <LValueToRValue>         |       `-UnaryOperator 0x14800e338 <col:26, col:27> 'char' contains-errors lvalue prefix '*' cannot overflow         |         `-ImplicitCastExpr 0x14800e320 <col:27> 'char *' contains-errors <LValueToRValue>         |           `-DeclRefExpr 0x14800e300 <col:27> 'char *' contains-errors lvalue Var 0x14800deb8 's' 'char *'         |-BinaryOperator 0x148027a08 <line:9:3, col:30> 'char' contains-errors '='         | |-UnaryOperator 0x148027858 <col:3, col:5> 'char' contains-errors lvalue prefix '*' cannot overflow         | | `-UnaryOperator 0x148027840 <col:4, col:5> 'char *' contains-errors postfix '++'         | |   `-DeclRefExpr 0x148027820 <col:4> 'char *' contains-errors lvalue Var 0x14800e000 'p' 'char *'         | `-CXXDependentScopeMemberExpr 0x1480279c0 <col:10, col:30> '<dependent type>' contains-errors lvalue .g         |   `-ArraySubscriptExpr 0x1480279a0 <col:10, col:28> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x148027970 <col:10, col:21> '<dependent type>' contains-errors <LValueToRValue>         |     | `-CXXDependentScopeMemberExpr 0x1480278d8 <col:10, col:21> '<dependent type>' contains-errors lvalue ->cols         |     |   `-CXXDependentScopeMemberExpr 0x148027890 <col:10, col:15> '<dependent type>' contains-errors lvalue ->cmap         |     |     `-RecoveryExpr 0x148027870 <col:10> '<dependent type>' contains-errors lvalue         |     `-ImplicitCastExpr 0x148027988 <col:26, col:27> 'char' contains-errors <LValueToRValue>         |       `-UnaryOperator 0x148027958 <col:26, col:27> 'char' contains-errors lvalue prefix '*' cannot overflow         |         `-ImplicitCastExpr 0x148027940 <col:27> 'char *' contains-errors <LValueToRValue>         |           `-DeclRefExpr 0x148027920 <col:27> 'char *' contains-errors lvalue Var 0x14800deb8 's' 'char *'         |-BinaryOperator 0x148027c10 <line:10:3, col:30> 'char' contains-errors '='         | |-UnaryOperator 0x148027a60 <col:3, col:5> 'char' contains-errors lvalue prefix '*' cannot overflow         | | `-UnaryOperator 0x148027a48 <col:4, col:5> 'char *' contains-errors postfix '++'         | |   `-DeclRefExpr 0x148027a28 <col:4> 'char *' contains-errors lvalue Var 0x14800e000 'p' 'char *'         | `-CXXDependentScopeMemberExpr 0x148027bc8 <col:10, col:30> '<dependent type>' contains-errors lvalue .b         |   `-ArraySubscriptExpr 0x148027ba8 <col:10, col:28> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x148027b78 <col:10, col:21> '<dependent type>' contains-errors <LValueToRValue>         |     | `-CXXDependentScopeMemberExpr 0x148027ae0 <col:10, col:21> '<dependent type>' contains-errors lvalue ->cols         |     |   `-CXXDependentScopeMemberExpr 0x148027a98 <col:10, col:15> '<dependent type>' contains-errors lvalue ->cmap         |     |     `-RecoveryExpr 0x148027a78 <col:10> '<dependent type>' contains-errors lvalue         |     `-ImplicitCastExpr 0x148027b90 <col:26, col:27> 'char' contains-errors <LValueToRValue>         |       `-UnaryOperator 0x148027b60 <col:26, col:27> 'char' contains-errors lvalue prefix '*' cannot overflow         |         `-ImplicitCastExpr 0x148027b48 <col:27> 'char *' contains-errors <LValueToRValue>         |           `-DeclRefExpr 0x148027b28 <col:27> 'char *' contains-errors lvalue Var 0x14800deb8 's' 'char *'         `-IfStmt 0x148027f28 <line:11:3, line:12:31>           |-BinaryOperator 0x148027d00 <line:11:7, col:29> 'int' contains-errors '=='           | |-CXXDependentScopeMemberExpr 0x148027c98 <col:7, col:17> '<dependent type>' contains-errors lvalue ->cmap_bpp           | | `-CXXDependentScopeMemberExpr 0x148027c50 <col:7, col:12> '<dependent type>' contains-errors lvalue ->hdr           | |   `-RecoveryExpr 0x148027c30 <col:7> '<dependent type>' contains-errors lvalue           | `-IntegerLiteral 0x148027ce0 <col:29> 'int' 32           `-BinaryOperator 0x148027f08 <line:12:4, col:31> 'char' contains-errors '='             |-UnaryOperator 0x148027d58 <col:4, col:6> 'char' contains-errors lvalue prefix '*' cannot overflow             | `-UnaryOperator 0x148027d40 <col:5, col:6> 'char *' contains-errors postfix '++'             |   `-DeclRefExpr 0x148027d20 <col:5> 'char *' contains-errors lvalue Var 0x14800e000 'p' 'char *'             `-CXXDependentScopeMemberExpr 0x148027ec0 <col:11, col:31> '<dependent type>' contains-errors lvalue .a               `-ArraySubscriptExpr 0x148027ea0 <col:11, col:29> '<dependent type>' contains-errors lvalue                 |-ImplicitCastExpr 0x148027e70 <col:11, col:22> '<dependent type>' contains-errors <LValueToRValue>                 | `-CXXDependentScopeMemberExpr 0x148027dd8 <col:11, col:22> '<dependent type>' contains-errors lvalue ->cols                 |   `-CXXDependentScopeMemberExpr 0x148027d90 <col:11, col:16> '<dependent type>' contains-errors lvalue ->cmap                 |     `-RecoveryExpr 0x148027d70 <col:11> '<dependent type>' contains-errors lvalue                 `-ImplicitCastExpr 0x148027e88 <col:27, col:28> 'char' contains-errors <LValueToRValue>                   `-UnaryOperator 0x148027e58 <col:27, col:28> 'char' contains-errors lvalue prefix '*' cannot overflow                     `-ImplicitCastExpr 0x148027e40 <col:28> 'char *' contains-errors <LValueToRValue>                       `-DeclRefExpr 0x148027e20 <col:28> 'char *' contains-errors lvalue Var 0x14800deb8 's' 'char *' ","20796":"`-FunctionDecl 0x15881ee88  col:9 implicit used llroundl 'long long (long double)' extern   |-ParmVarDecl 0x15881ef88 <<invalid sloc>> <invalid sloc> 'long double'   |-BuiltinAttr 0x15881ef30 <<invalid sloc>> Implicit 1105   |-ConstAttr 0x15881eff8 <col:9> Implicit   `-NoThrowAttr 0x15881f020 <col:9> Implicit ","20693":"`-FunctionDecl 0x1070284b8  col:4 implicit used _exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x1070285b8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x107028560 <<invalid sloc>> Implicit 959 ","20649":"`-FunctionDecl 0x15680dda8  line:1:12 test_x509_time 'int (int)' static   |-ParmVarDecl 0x15680dcd8 <col:27, col:31> col:31 used idx 'int'   `-CompoundStmt 0x156828f18 <line:2:1, line:47:1>     |-DeclStmt 0x15680e020 <line:4:5, col:23>     | |-VarDecl 0x15680df00 <col:5, col:9> col:9 used result 'int'     | `-VarDecl 0x15680df80 <col:5, col:22> col:17 used rv 'int' cinit     |   `-IntegerLiteral 0x15680dfe8 <col:22> 'int' 0     |-IfStmt 0x156828380 <line:6:5, line:13:5>     | |-RecoveryExpr 0x15680e070 <line:6:9, col:32> '_Bool' contains-errors     | `-CompoundStmt 0x156828368 <col:44, line:13:5>     |   `-IfStmt 0x156828348 <line:9:9, line:12:9>     |     |-BinaryOperator 0x15680e2b8 <line:9:13, col:18> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x15680e278 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x15680e298 <col:18> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x156828328 <col:24, line:12:9>     |       |-CallExpr 0x156828298 <line:10:13, col:33> 'int'     |       | |-ImplicitCastExpr 0x156828280 <col:13> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x15680e3b8 <col:13> 'int ()' Function 0x15680e300 'TEST_info' 'int ()'     |       | |-ImplicitCastExpr 0x1568282c8 <col:23> 'char *' <ArrayToPointerDecay>     |       | | `-StringLiteral 0x156828240 <col:23> 'char[4]' lvalue \"STR\"     |       | `-ImplicitCastExpr 0x1568282e0 <col:30> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x156828260 <col:30> 'int' lvalue ParmVar 0x15680dcd8 'idx' 'int'     |       `-ReturnStmt 0x156828318 <line:11:13, col:20>     |         `-IntegerLiteral 0x1568282f8 <col:20> 'int' 0     |-IfStmt 0x1568287c0 <line:17:5, line:21:5>     | |-RecoveryExpr 0x156828668 <line:17:9, col:61> '_Bool' contains-errors     | `-CompoundStmt 0x1568287a8 <col:64, line:21:5>     |   `-GotoStmt 0x156828790 <line:20:9, col:14> 'out' 0x156828740     |-IfStmt 0x156828a80 <line:24:5, line:30:5>     | |-RecoveryExpr 0x1568288a0 <line:24:9, col:63> '_Bool' contains-errors     | `-CompoundStmt 0x156828a68 <col:66, line:30:5>     |   `-IfStmt 0x156828a48 <line:25:9, line:29:9>     |     |-RecoveryExpr 0x156828978 <line:25:13, col:71> '_Bool' contains-errors     |     `-CompoundStmt 0x156828a30 <col:74, line:29:9>     |       `-GotoStmt 0x156828a18 <line:28:13, col:18> 'out' 0x156828740     |-IfStmt 0x156828d08 <line:33:5, line:40:5>     | |-RecoveryExpr 0x156828ac0 <line:33:9, col:45> '_Bool' contains-errors     | `-CompoundStmt 0x156828cf0 <col:62, line:40:5>     |   `-IfStmt 0x156828cd0 <line:34:9, line:39:9>     |     |-RecoveryExpr 0x156828c00 <line:34:13, line:35:59> '_Bool' contains-errors     |     `-CompoundStmt 0x156828cb8 <col:62, line:39:9>     |       `-GotoStmt 0x156828ca0 <line:38:13, col:18> 'out' 0x156828740     |-BinaryOperator 0x156828d68 <line:42:5, col:10> 'int' '='     | |-DeclRefExpr 0x156828d28 <col:5> 'int' lvalue Var 0x15680df80 'rv' 'int'     | `-IntegerLiteral 0x156828d48 <col:10> 'int' 1     |-LabelStmt 0x156828eb0 <line:43:1, col:4> 'out'     | `-NullStmt 0x156828ea8 <col:4>     `-ReturnStmt 0x156828f08 <line:46:5, col:12>       `-ImplicitCastExpr 0x156828ef0 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x156828ed0 <col:12> 'int' lvalue Var 0x15680df80 'rv' 'int' ","20869":"`-FunctionDecl 0x12500dec8  line:1:3 invalid AES128GCM_OnWireTxHandler 'int (int *const, const int)'   |-ParmVarDecl 0x12500dd28 <col:29, col:48> col:48 referenced invalid cct 'int *const'   |-ParmVarDecl 0x12500dda8 <line:2:8, <invalid sloc>> col:19 invalid 'const int'   `-CompoundStmt 0x124922fa8 <line:6:20, line:19:3>     |-CallExpr 0x12500e180 <line:7:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12500e0e0 <col:5> 'int ()' Function 0x12500e028 'ceph_assert_always' 'int ()'     | `-RecoveryExpr 0x12500e160 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12500e3d0 <line:8:5, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12500e1a8 <col:5> 'int ()' Function 0x12500e028 'ceph_assert_always' 'int ()'     | `-BinaryOperator 0x12500e3b0 <col:24, col:49> 'int' contains-errors '=='     |   |-BinaryOperator 0x12500e390 <col:24, col:37> '<dependent type>' contains-errors '*'     |   | |-CallExpr 0x12500e350 <col:24, col:33> '<dependent type>' contains-errors     |   | | `-CXXDependentScopeMemberExpr 0x12500e308 <col:24, col:28> '<dependent type>' contains-errors lvalue .size     |   | |   `-RecoveryExpr 0x12500e2e8 <col:24> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x12500e370 <col:37> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12500e280 <col:49> 'int' 128     |-IfStmt 0x124922b70 <line:10:5, line:13:5>     | |-BinaryOperator 0x124922b40 <line:10:9, line:11:37> 'int' contains-errors '!='     | | |-IntegerLiteral 0x124922600 <line:10:9> 'int' 1     | | `-CallExpr 0x124922af8 <col:14, line:11:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x124922700 <line:10:14> 'int ()' Function 0x124922648 'EVP_EncryptInit_ex' 'int ()'     | |   |-CallExpr 0x124922a40 <col:33, col:42> '<dependent type>' contains-errors     | |   | `-CXXDependentScopeMemberExpr 0x1249229f8 <col:33, col:38> '<dependent type>' contains-errors lvalue .get     | |   |   `-RecoveryExpr 0x1249229d8 <col:33> '<dependent type>' contains-errors lvalue     | |   |-CallExpr 0x124922a78 <col:45, col:61> 'int'     | |   | `-ImplicitCastExpr 0x124922a60 <col:45> 'int (*)()' <FunctionToPointerDecay>     | |   |   `-DeclRefExpr 0x124922880 <col:45> 'int ()' Function 0x1249227c8 'EVP_aes_128_gcm' 'int ()'     | |   |-RecoveryExpr 0x124922a98 <line:11:12> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x124922ab8 <col:21> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x124922ad8 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x124922b60 <col:40, line:13:5>     `-IfStmt 0x124922f88 <line:15:5, line:18:5>       |-BinaryOperator 0x124922f58 <line:15:8, line:16:30> 'int' contains-errors '!='       | |-IntegerLiteral 0x124922b90 <line:15:8> 'int' 1       | `-CallExpr 0x124922f10 <col:13, line:16:30> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x124922bb0 <line:15:13> 'int ()' Function 0x124922648 'EVP_EncryptInit_ex' 'int ()'       |   |-CallExpr 0x124922e08 <col:32, col:41> '<dependent type>' contains-errors       |   | `-CXXDependentScopeMemberExpr 0x124922dc0 <col:32, col:37> '<dependent type>' contains-errors lvalue .get       |   |   `-RecoveryExpr 0x124922da0 <col:32> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x124922e28 <col:44> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x124922e48 <col:53> '<dependent type>' contains-errors lvalue       |   |-CallExpr 0x124922ed0 <line:16:11, col:20> '<dependent type>' contains-errors       |   | `-CXXDependentScopeMemberExpr 0x124922e88 <col:11, col:15> '<dependent type>' contains-errors lvalue .data       |   |   `-RecoveryExpr 0x124922e68 <col:11> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x124922ef0 <col:23> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x124922f78 <col:33, line:18:5> ","20194":"`-FunctionDecl 0x153826808  line:1:5 kill_pid_info 'int (int, struct kernel_siginfo *, struct pid *)'   |-ParmVarDecl 0x15380dcd8 <col:19, col:23> col:23 used sig 'int'   |-ParmVarDecl 0x15380e2c8 <col:28, col:51> col:51 used info 'struct kernel_siginfo *'   |-ParmVarDecl 0x1538266c8 <col:57, col:69> col:69 used pid 'struct pid *'   `-CompoundStmt 0x153122838 <line:2:1, line:17:1>     |-DeclStmt 0x153826a40 <line:3:2, col:20>     | `-VarDecl 0x153826928 <col:2, col:15> col:6 used error 'int' cinit     |   `-UnaryOperator 0x153826a28 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x153826a10 <col:15> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1538269f0 <col:15> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x153826c48 <line:4:2, col:23>     | |-RecordDecl 0x153826a58 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x153826bc8 <col:2, col:22> col:22 used p 'struct task_struct *'     `-ForStmt 0x153122800 <line:6:2, line:16:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       `-CompoundStmt 0x1531227c8 <line:6:11, line:16:2>         |-CallExpr 0x153826dd8 <line:7:3, col:17> 'int'         | `-ImplicitCastExpr 0x153826dc0 <col:3> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x153826d70 <col:3> 'int ()' Function 0x153826cb8 'rcu_read_lock' 'int ()'         |-BinaryOperator 0x153826ff0 <line:8:3, col:32> 'struct task_struct *' contains-errors '='         | |-DeclRefExpr 0x153826df8 <col:3> 'struct task_struct *' lvalue Var 0x153826bc8 'p' 'struct task_struct *'         | `-CallExpr 0x153826fc0 <col:7, col:32> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x153826ef8 <col:7> 'int ()' Function 0x153826e40 'pid_task' 'int ()'         |   |-DeclRefExpr 0x153826f18 <col:16> 'struct pid *' lvalue ParmVar 0x1538266c8 'pid' 'struct pid *'         |   `-RecoveryExpr 0x153826fa0 <col:21> '<dependent type>' contains-errors lvalue         |-IfStmt 0x1538272c0 <line:9:3, line:10:58>         | |-ImplicitCastExpr 0x153827030 <line:9:7> 'struct task_struct *' <LValueToRValue>         | | `-DeclRefExpr 0x153827010 <col:7> 'struct task_struct *' lvalue Var 0x153826bc8 'p' 'struct task_struct *'         | `-BinaryOperator 0x1538272a0 <line:10:4, col:58> 'int' contains-errors '='         |   |-DeclRefExpr 0x153827048 <col:4> 'int' contains-errors lvalue Var 0x153826928 'error' 'int'         |   `-CallExpr 0x153827260 <col:12, col:58> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x153827148 <col:12> 'int ()' Function 0x153827090 'group_send_sig_info' 'int ()'         |     |-DeclRefExpr 0x153827168 <col:32> 'int' lvalue ParmVar 0x15380dcd8 'sig' 'int'         |     |-DeclRefExpr 0x153827188 <col:37> 'struct kernel_siginfo *' lvalue ParmVar 0x15380e2c8 'info' 'struct kernel_siginfo *'         |     |-DeclRefExpr 0x1538271a8 <col:43> 'struct task_struct *' lvalue Var 0x153826bc8 'p' 'struct task_struct *'         |     `-RecoveryExpr 0x153827240 <col:46> '<dependent type>' contains-errors lvalue         |-CallExpr 0x1538273f8 <line:11:3, col:19> 'int'         | `-ImplicitCastExpr 0x1538273e0 <col:3> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x1538273c0 <col:3> 'int ()' Function 0x153827308 'rcu_read_unlock' 'int ()'         `-IfStmt 0x1531227a8 <line:12:3, line:13:11>           |-CallExpr 0x153122738 <line:12:7, col:35> '<dependent type>' contains-errors           | |-DeclRefExpr 0x1538274f8 <col:7> 'int ()' Function 0x153827440 'likely' 'int ()'           | `-BinaryOperator 0x153122718 <col:14, col:30> 'int' contains-errors '||'           |   |-UnaryOperator 0x153122690 <col:14, col:15> 'int' prefix '!' cannot overflow           |   | `-ImplicitCastExpr 0x153122678 <col:15> 'struct task_struct *' <LValueToRValue>           |   |   `-DeclRefExpr 0x153827518 <col:15> 'struct task_struct *' lvalue Var 0x153826bc8 'p' 'struct task_struct *'           |   `-BinaryOperator 0x1531226f8 <col:20, col:30> 'int' contains-errors '!='           |     |-DeclRefExpr 0x153827568 <col:20> 'int' contains-errors lvalue Var 0x153826928 'error' 'int'           |     `-UnaryOperator 0x1531226e0 <col:29, col:30> '<dependent type>' contains-errors prefix '-' cannot overflow           |       `-ImplicitCastExpr 0x1531226c8 <col:30> '<dependent type>' contains-errors <LValueToRValue>           |         `-RecoveryExpr 0x1531226a8 <col:30> '<dependent type>' contains-errors lvalue           `-ReturnStmt 0x153122798 <line:13:4, col:11>             `-ImplicitCastExpr 0x153122780 <col:11> 'int' contains-errors <LValueToRValue>               `-DeclRefExpr 0x153122760 <col:11> 'int' contains-errors lvalue Var 0x153826928 'error' 'int' ","20885":"`-FunctionDecl 0x13c128750  line:1:13 rose_remove_neigh 'void (struct rose_neigh *)' static   |-ParmVarDecl 0x13c128648 <col:31, col:50> col:50 used rose_neigh 'struct rose_neigh *'   `-CompoundStmt 0x13c1477b0 <line:2:1, line:31:1>     |-DeclStmt 0x13c144d40 <line:3:2, col:22>     | `-VarDecl 0x13c144cd8 <col:2, col:21> col:21 used s 'struct rose_neigh *'     |-CallExpr 0x13c144f08 <line:5:2, col:29> 'int'     | |-ImplicitCastExpr 0x13c144ef0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c144e80 <col:2> 'int ()' Function 0x13c144dc8 'rose_stop_ftimer' 'int ()'     | `-ImplicitCastExpr 0x13c144f30 <col:19> 'struct rose_neigh *' <LValueToRValue>     |   `-DeclRefExpr 0x13c144ea0 <col:19> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |-CallExpr 0x13c145080 <line:6:2, col:30> 'int'     | |-ImplicitCastExpr 0x13c145068 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c145028 <col:2> 'int ()' Function 0x13c144f70 'rose_stop_t0timer' 'int ()'     | `-ImplicitCastExpr 0x13c1450a8 <col:20> 'struct rose_neigh *' <LValueToRValue>     |   `-DeclRefExpr 0x13c145048 <col:20> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |-CallExpr 0x13c145238 <line:8:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c1451a0 <col:2> 'int ()' Function 0x13c1450e8 'skb_queue_purge' 'int ()'     | `-UnaryOperator 0x13c145220 <col:18, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13c1451f8 <col:19, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c1451c0 <col:19> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |-IfStmt 0x13c145898 <line:10:2, line:17:2>     | |-BinaryOperator 0x13c145368 <line:10:6, col:31> 'int' '=='     | | |-ParenExpr 0x13c145310 <col:6, col:26> 'struct rose_neigh *'     | | | `-BinaryOperator 0x13c1452f0 <col:7, col:11> 'struct rose_neigh *' '='     | | |   |-DeclRefExpr 0x13c145260 <col:7> 'struct rose_neigh *' lvalue Var 0x13c144cd8 's' 'struct rose_neigh *'     | | |   `-ImplicitCastExpr 0x13c1452d8 <col:11> 'struct rose_neigh *' <LValueToRValue>     | | |     `-DeclRefExpr 0x13c1452b8 <col:11> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     | | `-ImplicitCastExpr 0x13c145350 <col:31> 'struct rose_neigh *' <LValueToRValue>     | |   `-DeclRefExpr 0x13c145330 <col:31> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     | `-CompoundStmt 0x13c145860 <col:43, line:17:2>     |   |-BinaryOperator 0x13c145408 <line:11:3, col:33> 'struct rose_neigh *' contains-errors '='     |   | |-DeclRefExpr 0x13c145388 <col:3> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |   | `-RecoveryExpr 0x13c1453e0 <col:21, col:33> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13c1453a8 <col:21> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |   |-IfStmt 0x13c145610 <line:12:3, line:13:32>     |   | |-RecoveryExpr 0x13c145460 <line:12:7, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13c145428 <col:7> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |   | `-CallExpr 0x13c1455e8 <line:13:4, col:32> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13c145568 <col:4> 'int ()' Function 0x13c1454b0 'ax25_cb_put' 'int ()'     |   |   `-RecoveryExpr 0x13c1455c0 <col:16, col:28> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13c145588 <col:16> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |   |-CallExpr 0x13c145790 <line:14:3, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13c145710 <col:3> 'int ()' Function 0x13c145658 'kfree' 'int ()'     |   | `-RecoveryExpr 0x13c145768 <col:9, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13c145730 <col:9> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |   |-CallExpr 0x13c145810 <line:15:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x13c1457f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13c1457b8 <col:3> 'int ()' Function 0x13c145658 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x13c145838 <col:9> 'struct rose_neigh *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13c1457d8 <col:9> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'     |   `-ReturnStmt 0x13c145850 <line:16:3>     `-WhileStmt 0x13c147790 <line:19:2, line:30:2>       |-BinaryOperator 0x13c145a48 <line:19:9, col:33> 'int' contains-errors '&&'       | |-BinaryOperator 0x13c1459e8 <col:9, col:14> 'int' contains-errors '!='       | | |-DeclRefExpr 0x13c1458b8 <col:9> 'struct rose_neigh *' lvalue Var 0x13c144cd8 's' 'struct rose_neigh *'       | | `-RecoveryExpr 0x13c1459c8 <col:14> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x13c145a28 <col:22, col:33> 'int' contains-errors '!='       |   |-RecoveryExpr 0x13c145948 <col:22, col:25> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x13c145910 <col:22> 'struct rose_neigh *' lvalue Var 0x13c144cd8 's' 'struct rose_neigh *'       |   `-RecoveryExpr 0x13c145a08 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13c147770 <col:39, line:30:2>         |-IfStmt 0x13c1476b0 <line:20:3, line:27:3>         | |-BinaryOperator 0x13c145ae8 <line:20:7, col:18> 'int' contains-errors '=='         | | |-RecoveryExpr 0x13c145aa0 <col:7, col:10> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x13c145a68 <col:7> 'struct rose_neigh *' lvalue Var 0x13c144cd8 's' 'struct rose_neigh *'         | | `-DeclRefExpr 0x13c145ac8 <col:18> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'         | `-CompoundStmt 0x13c147678 <col:30, line:27:3>         |   |-BinaryOperator 0x13c145bc8 <line:21:4, col:26> '<dependent type>' contains-errors '='         |   | |-RecoveryExpr 0x13c145b40 <col:4, col:7> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x13c145b08 <col:4> 'struct rose_neigh *' lvalue Var 0x13c144cd8 's' 'struct rose_neigh *'         |   | `-RecoveryExpr 0x13c145ba0 <col:14, col:26> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x13c145b68 <col:14> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'         |   |-IfStmt 0x13c147508 <line:22:4, line:23:33>         |   | |-RecoveryExpr 0x13c147438 <line:22:8, col:20> '<dependent type>' contains-errors lvalue         |   | | `-DeclRefExpr 0x13c147400 <col:8> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'         |   | `-CallExpr 0x13c1474e0 <line:23:5, col:33> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x13c147460 <col:5> 'int ()' Function 0x13c1454b0 'ax25_cb_put' 'int ()'         |   |   `-RecoveryExpr 0x13c1474b8 <col:17, col:29> '<dependent type>' contains-errors lvalue         |   |     `-DeclRefExpr 0x13c147480 <col:17> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'         |   |-CallExpr 0x13c1475a8 <line:24:4, col:30> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x13c147528 <col:4> 'int ()' Function 0x13c145658 'kfree' 'int ()'         |   | `-RecoveryExpr 0x13c147580 <col:10, col:22> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x13c147548 <col:10> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'         |   |-CallExpr 0x13c147628 <line:25:4, col:20> 'int'         |   | |-ImplicitCastExpr 0x13c147610 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   | | `-DeclRefExpr 0x13c1475d0 <col:4> 'int ()' Function 0x13c145658 'kfree' 'int ()'         |   | `-ImplicitCastExpr 0x13c147650 <col:10> 'struct rose_neigh *' <LValueToRValue>         |   |   `-DeclRefExpr 0x13c1475f0 <col:10> 'struct rose_neigh *' lvalue ParmVar 0x13c128648 'rose_neigh' 'struct rose_neigh *'         |   `-ReturnStmt 0x13c147668 <line:26:4>         `-BinaryOperator 0x13c147750 <line:29:3, col:10> 'struct rose_neigh *' contains-errors '='           |-DeclRefExpr 0x13c1476d0 <col:3> 'struct rose_neigh *' lvalue Var 0x13c144cd8 's' 'struct rose_neigh *'           `-RecoveryExpr 0x13c147728 <col:7, col:10> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x13c1476f0 <col:7> 'struct rose_neigh *' lvalue Var 0x13c144cd8 's' 'struct rose_neigh *' ","21074":"`-FunctionDecl 0x14c80e350  line:1:13 __vmx_load_host_state 'void (struct vcpu_vmx *)' static   |-ParmVarDecl 0x14c80e248 <col:35, col:52> col:52 used vmx 'struct vcpu_vmx *'   `-CompoundStmt 0x14c8289a0 <line:2:1, line:32:1>     |-DeclStmt 0x14c8266c8 <line:3:2, col:21>     | `-VarDecl 0x14c826660 <col:2, col:16> col:16 used flags 'unsigned long'     |-IfStmt 0x14c8267c8 <line:5:2, line:6:3>     | |-UnaryOperator 0x14c8267a0 <line:5:6, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c826788 <col:7, col:23> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x14c826740 <col:7, col:23> '<dependent type>' contains-errors lvalue .loaded     | |     `-RecoveryExpr 0x14c826718 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14c8266e0 <col:7> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     | `-ReturnStmt 0x14c8267b8 <line:6:3>     |-UnaryOperator 0x14c8268d8 <line:8:2, col:19> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-CXXDependentScopeMemberExpr 0x14c826890 <col:4, col:19> '<dependent type>' contains-errors lvalue .host_state_reload     |   `-CXXDependentScopeMemberExpr 0x14c826848 <col:4, col:14> '<dependent type>' contains-errors lvalue .stat     |     `-RecoveryExpr 0x14c826820 <col:4, col:9> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c8267e8 <col:4> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     |-BinaryOperator 0x14c8269b8 <line:9:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c826950 <col:2, col:18> '<dependent type>' contains-errors lvalue .loaded     | | `-RecoveryExpr 0x14c826928 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c8268f0 <col:2> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     | `-IntegerLiteral 0x14c826998 <col:27> 'int' 0     |-IfStmt 0x14c826ca0 <line:10:2, line:11:37>     | |-CXXDependentScopeMemberExpr 0x14c826a38 <line:10:6, col:22> '<dependent type>' contains-errors lvalue .fs_reload_needed     | | `-RecoveryExpr 0x14c826a10 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c8269d8 <col:6> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     | `-CallExpr 0x14c826c78 <line:11:3, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c826bb0 <col:3> 'int ()' Function 0x14c826af8 'kvm_load_fs' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14c826c30 <col:15, col:31> '<dependent type>' contains-errors lvalue .fs_sel     |     `-RecoveryExpr 0x14c826c08 <col:15, col:20> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c826bd0 <col:15> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     |-IfStmt 0x14c827460 <line:12:2, line:21:2>     | |-CXXDependentScopeMemberExpr 0x14c826d20 <line:12:6, col:22> '<dependent type>' contains-errors lvalue .gs_ldt_reload_needed     | | `-RecoveryExpr 0x14c826cf8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c826cc0 <col:6> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     | `-CompoundStmt 0x14c827430 <col:44, line:21:2>     |   |-CallExpr 0x14c826f10 <line:13:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c826e48 <col:3> 'int ()' Function 0x14c826d90 'kvm_load_ldt' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x14c826ec8 <col:16, col:32> '<dependent type>' contains-errors lvalue .ldt_sel     |   |   `-RecoveryExpr 0x14c826ea0 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c826e68 <col:16> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     |   |-CallExpr 0x14c8270a8 <line:15:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x14c827090 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c827018 <col:3> 'int ()' Function 0x14c826f60 'local_irq_save' 'int ()'     |   | `-ImplicitCastExpr 0x14c8270d0 <col:18> 'unsigned long' <LValueToRValue>     |   |   `-DeclRefExpr 0x14c827038 <col:18> 'unsigned long' lvalue Var 0x14c826660 'flags' 'unsigned long'     |   |-CallExpr 0x14c827290 <line:16:3, col:37> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c8271c8 <col:3> 'int ()' Function 0x14c827110 'kvm_load_gs' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x14c827248 <col:15, col:31> '<dependent type>' contains-errors lvalue .gs_sel     |   |   `-RecoveryExpr 0x14c827220 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c8271e8 <col:15> 'struct vcpu_vmx *' lvalue ParmVar 0x14c80e248 'vmx' 'struct vcpu_vmx *'     |   `-CallExpr 0x14c8273f0 <line:20:3, col:26> 'int'     |     |-ImplicitCastExpr 0x14c8273d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14c827398 <col:3> 'int ()' Function 0x14c8272e0 'local_irq_restore' 'int ()'     |     `-ImplicitCastExpr 0x14c827418 <col:21> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x14c8273b8 <col:21> 'unsigned long' lvalue Var 0x14c826660 'flags' 'unsigned long'     |-CallExpr 0x14c827598 <line:22:2, col:13> 'int'     | `-ImplicitCastExpr 0x14c827580 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14c827560 <col:2> 'int ()' Function 0x14c8274a8 'reload_tss' 'int ()'     `-IfStmt 0x14c828780 <line:29:2, line:30:8>       |-BinaryOperator 0x14c828628 <line:29:6, col:38> '<dependent type>' contains-errors '&'       | |-RecoveryExpr 0x14c8285e0 <col:6, col:29> '<dependent type>' contains-errors lvalue       | | `-CallExpr 0x14c8285c0 <col:6, col:26> 'int'       | |   `-ImplicitCastExpr 0x14c8285a8 <col:6> 'int (*)()' <FunctionToPointerDecay>       | |     `-DeclRefExpr 0x14c8284b8 <col:6> 'int ()' Function 0x14c828400 'current_thread_info' 'int ()'       | `-RecoveryExpr 0x14c828608 <col:38> '<dependent type>' contains-errors lvalue       `-CallExpr 0x14c828760 <line:30:3, col:8> 'int'         `-ImplicitCastExpr 0x14c828748 <col:3> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x14c828728 <col:3> 'int ()' Function 0x14c828670 'clts' 'int ()' ","20730":"`-FunctionDecl 0x127945c48  line:1:13 invalid __putback_lru_fast_prepare 'int (struct page *, struct pagevec *, int *)' static   |-ParmVarDecl 0x127928668 <col:40, col:53> col:53 used page 'struct page *'   |-ParmVarDecl 0x127945a58 <col:59, col:75> col:75 used pvec 'struct pagevec *'   |-ParmVarDecl 0x127945b08 <line:2:3, col:8> col:8 used pgrescued 'int *'   `-CompoundStmt 0x127947228 <line:3:1, line:16:1>     |-CallExpr 0x127946060 <line:4:2, col:36> 'int'     | |-ImplicitCastExpr 0x127946048 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127945e60 <col:2> 'int ()' Function 0x127945da8 'VM_BUG_ON_PAGE' 'int ()'     | |-CallExpr 0x127945fe8 <col:17, col:29> 'int'     | | |-ImplicitCastExpr 0x127945fd0 <col:17> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x127945f60 <col:17> 'int ()' Function 0x127945ea8 'PageLRU' 'int ()'     | | `-ImplicitCastExpr 0x127946010 <col:25> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x127945f80 <col:25> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'     | `-ImplicitCastExpr 0x127946090 <col:32> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x127946028 <col:32> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'     |-CallExpr 0x127946290 <line:5:2, col:40> 'int'     | |-ImplicitCastExpr 0x127946278 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1279460a8 <col:2> 'int ()' Function 0x127945da8 'VM_BUG_ON_PAGE' 'int ()'     | |-UnaryOperator 0x127946240 <col:17, col:33> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x127946200 <col:18, col:33> 'int'     | |   |-ImplicitCastExpr 0x1279461e8 <col:18> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1279461a8 <col:18> 'int ()' Function 0x1279460f0 'PageLocked' 'int ()'     | |   `-ImplicitCastExpr 0x127946228 <col:29> 'struct page *' <LValueToRValue>     | |     `-DeclRefExpr 0x1279461c8 <col:29> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'     | `-ImplicitCastExpr 0x1279462c0 <col:36> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x127946258 <col:36> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'     `-IfStmt 0x1279471f0 <line:7:2, line:13:2>       |-BinaryOperator 0x127946608 <line:7:6, col:53> 'int' '&&'       | |-BinaryOperator 0x127946470 <col:6, col:29> 'int' '<='       | | |-CallExpr 0x127946410 <col:6, col:24> 'int'       | | | |-ImplicitCastExpr 0x1279463f8 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | | | `-DeclRefExpr 0x1279463b8 <col:6> 'int ()' Function 0x127946300 'page_mapcount' 'int ()'       | | | `-ImplicitCastExpr 0x127946438 <col:20> 'struct page *' <LValueToRValue>       | | |   `-DeclRefExpr 0x1279463d8 <col:20> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'       | | `-IntegerLiteral 0x127946450 <col:29> 'int' 1       | `-CallExpr 0x1279465c8 <col:34, col:53> 'int'       |   |-ImplicitCastExpr 0x1279465b0 <col:34> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x127946570 <col:34> 'int ()' Function 0x1279464b8 'page_evictable' 'int ()'       |   `-ImplicitCastExpr 0x1279465f0 <col:49> 'struct page *' <LValueToRValue>       |     `-DeclRefExpr 0x127946590 <col:49> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'       `-CompoundStmt 0x1279471c0 <col:56, line:13:2>         |-CallExpr 0x127946780 <line:8:3, col:25> 'int'         | |-ImplicitCastExpr 0x127946768 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x127946708 <col:3> 'int ()' Function 0x127946650 'pagevec_add' 'int ()'         | |-ImplicitCastExpr 0x1279467b0 <col:15> 'struct pagevec *' <LValueToRValue>         | | `-DeclRefExpr 0x127946728 <col:15> 'struct pagevec *' lvalue ParmVar 0x127945a58 'pvec' 'struct pagevec *'         | `-ImplicitCastExpr 0x1279467c8 <col:21> 'struct page *' <LValueToRValue>         |   `-DeclRefExpr 0x127946748 <col:21> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'         |-IfStmt 0x1279469e0 <line:9:3, line:10:16>         | |-CallExpr 0x127946918 <line:9:7, col:36> 'int'         | | |-ImplicitCastExpr 0x127946900 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x1279468c0 <col:7> 'int ()' Function 0x127946808 'TestClearPageUnevictable' 'int ()'         | | `-ImplicitCastExpr 0x127946940 <col:32> 'struct page *' <LValueToRValue>         | |   `-DeclRefExpr 0x1279468e0 <col:32> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'         | `-UnaryOperator 0x1279469c8 <line:10:4, col:16> 'int' postfix '++'         |   `-ParenExpr 0x1279469a8 <col:4, col:15> 'int' lvalue         |     `-UnaryOperator 0x127946990 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow         |       `-ImplicitCastExpr 0x127946978 <col:6> 'int *' <LValueToRValue>         |         `-DeclRefExpr 0x127946958 <col:6> 'int *' lvalue ParmVar 0x127945b08 'pgrescued' 'int *'         |-CallExpr 0x127947138 <line:11:3, col:19> 'int'         | |-ImplicitCastExpr 0x127947120 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x1279470e0 <col:3> 'int ()' Function 0x127947028 'unlock_page' 'int ()'         | `-ImplicitCastExpr 0x127947160 <col:15> 'struct page *' <LValueToRValue>         |   `-DeclRefExpr 0x127947100 <col:15> 'struct page *' lvalue ParmVar 0x127928668 'page' 'struct page *'         `-ReturnStmt 0x1279471b0 <line:12:3, col:10>           `-RecoveryExpr 0x127947190 <col:10> '<dependent type>' contains-errors lvalue ","20593":"`-FunctionDecl 0x140827438  line:1:19 invalid xsave_state 'int (struct xsave_struct *, int)' static inline   |-ParmVarDecl 0x14080e248 <col:31, col:52> col:52 fx 'struct xsave_struct *'   |-ParmVarDecl 0x14080e2e0 <col:56, col:60> col:60 invalid mask 'int'   `-CompoundStmt 0x1408277e8 <line:2:1, line:22:1>     |-DeclStmt 0x140827590 <line:5:2, col:13>     | `-VarDecl 0x140827508 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x140827570 <col:12> 'int' 0     `-ReturnStmt 0x1408277d8 <line:21:2, col:9>       `-ImplicitCastExpr 0x1408277c0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1408277a0 <col:9> 'int' lvalue Var 0x140827508 'err' 'int' ","20274":"`-FunctionDecl 0x12e027c60  col:8 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12e027d60 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12e027d08 <<invalid sloc>> Implicit 902 ","20372":"`-FunctionDecl 0x13d00de88  line:1:8 invalid audio_sample_entry_Write 'int (int *, int *)'   |-ParmVarDecl 0x13d00dd28 <col:33, col:41> col:41 invalid s 'int *'   |-ParmVarDecl 0x13d00dda8 <col:44, col:58> col:58 invalid bs 'int *'   `-CompoundStmt 0x13e009228 <line:2:1, line:21:1>     |-IfStmt 0x13d00e1e0 <line:6:2, col:16>     | |-RecoveryExpr 0x13d00e178 <col:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13d00e1d0 <col:9, col:16>     |   `-RecoveryExpr 0x13d00e1b0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e008f68 <line:8:2, line:11:2>     | |-CXXDependentScopeMemberExpr 0x13d00e3b8 <line:8:6, col:11> '<dependent type>' contains-errors lvalue ->esd     | | `-RecoveryExpr 0x13d00e398 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e008f58 <col:16, line:11:2>     |-IfStmt 0x13e009018 <line:12:2, line:15:2>     | |-RecoveryExpr 0x13e008f88 <line:12:6, col:11> '_Bool' contains-errors     | `-CompoundStmt 0x13e009008 <col:21, line:15:2>     `-IfStmt 0x13e0090c8 <line:16:2, line:19:2>       |-RecoveryExpr 0x13e009038 <line:16:6, col:11> '_Bool' contains-errors       `-CompoundStmt 0x13e0090b8 <col:20, line:19:2> ","20619":"`-FunctionDecl 0x13b80de88  line:1:1 invalid pgp_enumerate_blob 'int (int *, int *)'   |-ParmVarDecl 0x13b80dd28 <col:20, col:31> col:31 invalid card 'int *'   |-ParmVarDecl 0x13b80dda8 <col:37, col:49> col:49 invalid blob 'int *'   `-CompoundStmt 0x13a0fe978 <line:2:1, line:54:1>     |-DeclStmt 0x13b80dfc0 <line:3:2, col:14>     | `-VarDecl 0x13b80df58 <col:2, col:12> col:12 referenced invalid in 'const int *'     |-DeclStmt 0x13b80e058 <line:4:2, col:8>     | `-VarDecl 0x13b80dff0 <col:2, col:7> col:7 used r 'int'     |-IfStmt 0x13b80e198 <line:6:2, line:7:10>     | |-BinaryOperator 0x13b80e130 <line:6:6, col:21> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x13b80e090 <col:6, col:12> '<dependent type>' contains-errors lvalue ->files     | | | `-RecoveryExpr 0x13b80e070 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b80e110 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13b80e188 <line:7:3, col:10>     |   `-RecoveryExpr 0x13b80e168 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b827888 <line:9:2, line:10:10>     | |-BinaryOperator 0x13b827820 <line:9:6, col:40> 'int' contains-errors '<'     | | |-ParenExpr 0x13b80e3e0 <col:6, col:36> 'int' contains-errors     | | | `-BinaryOperator 0x13b80e3c0 <col:7, col:35> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x13b80e1b8 <col:7> 'int' lvalue Var 0x13b80dff0 'r' 'int'     | | |   `-CallExpr 0x13b80e390 <col:11, col:35> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x13b80e330 <col:11> 'int ()' Function 0x13b80e278 'pgp_read_blob' 'int ()'     | | |     |-RecoveryExpr 0x13b80e350 <col:25> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x13b80e370 <col:31> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13b827800 <col:40> 'int' 0     | `-ReturnStmt 0x13b827878 <line:10:3, col:10>     |   `-ImplicitCastExpr 0x13b827860 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13b827840 <col:10> 'int' lvalue Var 0x13b80dff0 'r' 'int'     |-BinaryOperator 0x13b827958 <line:12:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13b8278c8 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13b8278a8 <col:2> 'const int *' lvalue Var 0x13b80df58 'in' 'const int *'     | `-CXXDependentScopeMemberExpr 0x13b827910 <col:7, col:13> '<dependent type>' contains-errors lvalue ->data     |   `-RecoveryExpr 0x13b8278f0 <col:7> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x13a0fe958 <line:14:2, line:51:2>       |-BinaryOperator 0x13b827ae8 <line:14:9, col:43> 'int' contains-errors '>'       | |-CStyleCastExpr 0x13b8279f8 <col:9, col:21> 'int' contains-errors <Dependent>       | | `-CXXDependentScopeMemberExpr 0x13b827998 <col:15, col:21> '<dependent type>' contains-errors lvalue ->len       | |   `-RecoveryExpr 0x13b827978 <col:15> '<dependent type>' contains-errors lvalue       | `-ParenExpr 0x13b827ac8 <col:27, col:43> '<dependent type>' contains-errors       |   `-BinaryOperator 0x13b827aa8 <col:28, col:39> '<dependent type>' contains-errors '-'       |     |-RecoveryExpr 0x13b827a20 <col:28> '<dependent type>' contains-errors lvalue       |     `-CXXDependentScopeMemberExpr 0x13b827a60 <col:33, col:39> '<dependent type>' contains-errors lvalue ->data       |       `-RecoveryExpr 0x13b827a40 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13a0fe900 <col:46, line:51:2>         |-DeclStmt 0x13b827ca8 <line:15:3, col:32>         | |-VarDecl 0x13b827b20 <col:3, col:16> col:16 used cla 'unsigned int'         | |-VarDecl 0x13b827ba0 <col:3, col:21> col:21 used tag 'unsigned int'         | `-VarDecl 0x13b827c20 <col:3, col:26> col:26 used tmptag 'unsigned int'         |-UnaryExprOrTypeTraitExpr 0x13b827d18 <line:16:3, col:11> 'unsigned long' contains-errors sizeof         | `-RecoveryExpr 0x13b827cf8 <col:11> '<dependent type>' contains-errors lvalue         |-DeclStmt 0x13b827dd8 <line:17:3, col:22>         | `-VarDecl 0x13b827d50 <col:3, col:13> col:13 invalid data 'const int *'         |-IfStmt 0x13b827ea0 <line:20:3, line:21:11>         | |-UnaryOperator 0x13b827e40 <line:20:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow         | | `-ImplicitCastExpr 0x13b827e28 <col:8> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x13b827e08 <col:8> '<dependent type>' contains-errors lvalue         | `-ReturnStmt 0x13b827e90 <line:21:4, col:11>         |   `-RecoveryExpr 0x13b827e70 <col:11> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x13b828328 <line:23:3, line:24:22> 'int' contains-errors '='         | |-DeclRefExpr 0x13b827ec0 <line:23:3> 'int' lvalue Var 0x13b80dff0 'r' 'int'         | `-CallExpr 0x13b8282e0 <col:7, line:24:22> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x13b827fc0 <line:23:7> 'int ()' Function 0x13b827f08 'sc_asn1_read_tag' 'int ()'         |   |-UnaryOperator 0x13b828000 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-RecoveryExpr 0x13b827fe0 <col:25> '<dependent type>' contains-errors lvalue         |   |-BinaryOperator 0x13b828148 <col:31, col:59> '<dependent type>' contains-errors '-'         |   | |-CXXDependentScopeMemberExpr 0x13b828038 <col:31, col:37> '<dependent type>' contains-errors lvalue ->len         |   | | `-RecoveryExpr 0x13b828018 <col:31> '<dependent type>' contains-errors lvalue         |   | `-ParenExpr 0x13b828128 <col:43, col:59> '<dependent type>' contains-errors         |   |   `-BinaryOperator 0x13b828108 <col:44, col:55> '<dependent type>' contains-errors '-'         |   |     |-RecoveryExpr 0x13b828080 <col:44> '<dependent type>' contains-errors lvalue         |   |     `-CXXDependentScopeMemberExpr 0x13b8280c0 <col:49, col:55> '<dependent type>' contains-errors lvalue ->data         |   |       `-RecoveryExpr 0x13b8280a0 <col:49> '<dependent type>' contains-errors lvalue         |   |-UnaryOperator 0x13b8281c0 <line:24:6, col:7> 'unsigned int *' prefix '&' cannot overflow         |   | `-DeclRefExpr 0x13b828168 <col:7> 'unsigned int' lvalue Var 0x13b827b20 'cla' 'unsigned int'         |   |-UnaryOperator 0x13b8281f8 <col:12, col:13> 'unsigned int *' prefix '&' cannot overflow         |   | `-DeclRefExpr 0x13b8281d8 <col:13> 'unsigned int' lvalue Var 0x13b827ba0 'tag' 'unsigned int'         |   `-UnaryOperator 0x13b8282c8 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-RecoveryExpr 0x13b8282a8 <col:19> '<dependent type>' contains-errors lvalue         |-IfStmt 0x13a0fde00 <line:25:3, line:29:3>         | |-BinaryOperator 0x13b8284e8 <line:25:7, col:24> 'int' contains-errors '||'         | | |-BinaryOperator 0x13b828488 <col:7, col:11> 'int' '<'         | | | |-ImplicitCastExpr 0x13b828470 <col:7> 'int' <LValueToRValue>         | | | | `-DeclRefExpr 0x13b828348 <col:7> 'int' lvalue Var 0x13b80dff0 'r' 'int'         | | | `-IntegerLiteral 0x13b828368 <col:11> 'int' 0         | | `-BinaryOperator 0x13b8284c8 <col:16, col:24> 'int' contains-errors '=='         | |   |-RecoveryExpr 0x13b8283c0 <col:16> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x13b8284a8 <col:24> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x13b8287c8 <col:30, line:29:3>         |   |-CallExpr 0x13b828748 <line:26:4, line:27:11> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x13b8285e8 <line:26:4> 'int ()' Function 0x13b828530 'sc_debug' 'int ()'         |   | |-CXXDependentScopeMemberExpr 0x13b828628 <col:13, col:19> '<dependent type>' contains-errors lvalue ->ctx         |   | | `-RecoveryExpr 0x13b828608 <col:13> '<dependent type>' contains-errors lvalue         |   | |-RecoveryExpr 0x13b828728 <col:24> '<dependent type>' contains-errors lvalue         |   | `-StringLiteral 0x13b8286d0 <line:27:6> 'char[4]' lvalue \"STR\"         |   `-ReturnStmt 0x13b8287b8 <line:28:4, col:11>         |     `-RecoveryExpr 0x13b828798 <col:11> '<dependent type>' contains-errors lvalue         |-ForStmt 0x13a0fe218 <line:35:3, line:37:3>         | |-BinaryOperator 0x13a0fe040 <line:35:8, col:17> 'unsigned int' '='         | | |-DeclRefExpr 0x13a0fdfe8 <col:8> 'unsigned int' lvalue Var 0x13b827c20 'tmptag' 'unsigned int'         | | `-ImplicitCastExpr 0x13a0fe028 <col:17> 'unsigned int' <LValueToRValue>         | |   `-DeclRefExpr 0x13a0fe008 <col:17> 'unsigned int' lvalue Var 0x13b827ba0 'tag' 'unsigned int'         | |-<<<NULL>>>         | |-BinaryOperator 0x13a0fe0d0 <col:22, col:31> 'int' '>'         | | |-ImplicitCastExpr 0x13a0fe0a0 <col:22> 'unsigned int' <LValueToRValue>         | | | `-DeclRefExpr 0x13a0fe060 <col:22> 'unsigned int' lvalue Var 0x13b827c20 'tmptag' 'unsigned int'         | | `-ImplicitCastExpr 0x13a0fe0b8 <col:31> 'unsigned int' <IntegralCast>         | |   `-IntegerLiteral 0x13a0fe080 <col:31> 'int' 255         | |-CompoundAssignOperator 0x13a0fe148 <col:38, col:49> 'unsigned int' '>>=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'         | | |-DeclRefExpr 0x13a0fe0f0 <col:38> 'unsigned int' lvalue Var 0x13b827c20 'tmptag' 'unsigned int'         | | `-IntegerLiteral 0x13a0fe110 <col:49> 'int' 8         | `-CompoundStmt 0x13a0fe200 <col:52, line:37:3>         |   `-CompoundAssignOperator 0x13a0fe1d0 <line:36:4, col:12> 'unsigned int' '<<=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'         |     |-DeclRefExpr 0x13a0fe178 <col:4> 'unsigned int' lvalue Var 0x13b827b20 'cla' 'unsigned int'         |     `-IntegerLiteral 0x13a0fe198 <col:12> 'int' 8         |-CompoundAssignOperator 0x13a0fe2a8 <line:38:3, col:10> 'unsigned int' '|=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'         | |-DeclRefExpr 0x13a0fe250 <col:3> 'unsigned int' lvalue Var 0x13b827ba0 'tag' 'unsigned int'         | `-ImplicitCastExpr 0x13a0fe290 <col:10> 'unsigned int' <LValueToRValue>         |   `-DeclRefExpr 0x13a0fe270 <col:10> 'unsigned int' lvalue Var 0x13b827b20 'cla' 'unsigned int'         `-IfStmt 0x13a0fe430 <line:41:3, line:44:3>           |-BinaryOperator 0x13a0fe360 <line:41:7, col:20> 'int' contains-errors '=='           | |-DeclRefExpr 0x13a0fe2d8 <col:7> 'unsigned int' lvalue Var 0x13b827ba0 'tag' 'unsigned int'           | `-CXXDependentScopeMemberExpr 0x13a0fe318 <col:14, col:20> '<dependent type>' contains-errors lvalue ->id           |   `-RecoveryExpr 0x13a0fe2f8 <col:14> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x13a0fe410 <col:24, line:44:3>             |-BinaryOperator 0x13a0fe3e8 <line:42:4, col:9> '<dependent type>' contains-errors '='             | |-RecoveryExpr 0x13a0fe3a0 <col:4> '<dependent type>' contains-errors lvalue             | | `-DeclRefExpr 0x13a0fe380 <col:4> 'const int *' lvalue Var 0x13b80df58 'in' 'const int *'             | `-RecoveryExpr 0x13a0fe3c8 <col:9> '<dependent type>' contains-errors lvalue             `-ContinueStmt 0x13a0fe408 <line:43:4> ","20299":"`-FunctionDecl 0x1398422d0  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1398423d0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x139842438 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1398424a0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x139842378 <<invalid sloc>> Implicit 900 ","20901":"`-FunctionDecl 0x135928318  line:1:1 referenced invalid rsvg_cairo_render_new 'int (int *, double, double)'   |-ParmVarDecl 0x135928128 <col:24, col:34> col:34 invalid cr 'int *'   |-ParmVarDecl 0x1359281a8 <col:38, col:45> col:45 used width 'double'   |-ParmVarDecl 0x135928228 <col:52, col:59> col:59 used height 'double'   `-CompoundStmt 0x1359287a0 <line:2:1, line:26:1> ","20793":"`-FunctionDecl 0x1271281f8  line:1:13 invalid r_cmd_parsed_args_execstr 'int *(int *)'   |-ParmVarDecl 0x127128128 <col:39, col:55> col:55 invalid a 'int *'   `-CompoundStmt 0x127141fb8 <col:58, line:9:1>     |-CallExpr 0x1271286c0 <line:2:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127128400 <col:2> 'int ()' Function 0x127128348 'r_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x127128680 <col:24, col:49> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1271284a8 <col:24, col:32> 'int' contains-errors '&&'     | | | |-RecoveryExpr 0x127128420 <col:24> '<dependent type>' contains-errors lvalue     | | | `-CXXDependentScopeMemberExpr 0x127128460 <col:29, col:32> '<dependent type>' contains-errors lvalue ->argv     | | |   `-RecoveryExpr 0x127128440 <col:29> '<dependent type>' contains-errors lvalue     | | `-ArraySubscriptExpr 0x127128660 <col:40, col:49> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x127128648 <col:40, col:43> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-CXXDependentScopeMemberExpr 0x1271284e8 <col:40, col:43> '<dependent type>' contains-errors lvalue ->argv     | |   |   `-RecoveryExpr 0x1271284c8 <col:40> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x127128530 <col:48> 'int' 0     | `-RecoveryExpr 0x1271286a0 <col:52> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127141c48 <line:4:2, line:6:2>     | |-BinaryOperator 0x127141a18 <line:4:6, col:24> 'int' contains-errors '&&'     | | |-BinaryOperator 0x127141990 <col:6, col:16> 'int' contains-errors '>'     | | | |-CXXDependentScopeMemberExpr 0x127141928 <col:6, col:9> '<dependent type>' contains-errors lvalue ->argc     | | | | `-RecoveryExpr 0x127141908 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x127141970 <col:16> 'int' 1     | | `-CXXDependentScopeMemberExpr 0x1271419d0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->has_space_after_cmd     | |   `-RecoveryExpr 0x1271419b0 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127141c30 <col:45, line:6:2>     |   `-CallExpr 0x127141c00 <line:5:3, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x127141b18 <col:3> 'int ()' Function 0x127141a60 'r_strbuf_append' 'int ()'     |     |-RecoveryExpr 0x127141be0 <col:20> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x127141b90 <col:24> 'char[4]' lvalue \"STR\"     |-CallExpr 0x127141df0 <line:7:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127141d48 <col:2> 'int ()' Function 0x127141c90 'parsed_args_iterateargs' 'int ()'     | |-RecoveryExpr 0x127141d68 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x127141dd0 <col:30> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x127141fa8 <line:8:2, col:27>       `-CallExpr 0x127141f80 <col:9, col:27> '<dependent type>' contains-errors         |-DeclRefExpr 0x127141f00 <col:9> 'int ()' Function 0x127141e48 'r_strbuf_drain' 'int ()'         `-RecoveryExpr 0x127141f60 <col:25> '<dependent type>' contains-errors lvalue ","20374":"`-FunctionDecl 0x14980dd18  line:2:24 stros 'const char *()' inline   `-CompoundStmt 0x14980df80 <col:32, line:24:18>     |-DeclStmt 0x14980df20 <line:12:7, col:43>     | `-VarDecl 0x14980de20 <col:7, col:38> col:32 used str 'const char *const' static cinit     |   `-ImplicitCastExpr 0x14980df08 <col:38> 'const char *' <NoOp>     |     `-ImplicitCastExpr 0x14980def0 <col:38> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x14980ded0 <col:38> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x14980df70 <line:24:7, col:14>       `-ImplicitCastExpr 0x14980df58 <col:14> 'const char *' <LValueToRValue>         `-DeclRefExpr 0x14980df38 <col:14> 'const char *const' lvalue Var 0x14980de20 'str' 'const char *const' ","20325":"`-FunctionDecl 0x140942160  col:13 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x140942260 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1409422c8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x140942208 <<invalid sloc>> Implicit 887 ","20712":"`-FunctionDecl 0x14200a9c8  line:1:1 invalid ProcPanoramiXShmPutImage 'int (int)'   |-ParmVarDecl 0x14200a8f0 <col:26, col:45> col:45 invalid client 'int' register   `-CompoundStmt 0x142819c98 <line:2:1, line:36:1>     |-DeclStmt 0x14200acc0 <line:3:5, col:41>     | |-VarDecl 0x14200aa90 <col:5, col:12> col:12 used j 'int'     | |-VarDecl 0x14200ab10 <col:5, col:24> col:15 used result 'int' cinit     | | `-IntegerLiteral 0x14200ab78 <col:24> 'int' 0     | |-VarDecl 0x14200abb0 <col:5, col:27> col:27 used orig_x 'int'     | `-VarDecl 0x14200ac30 <col:5, col:35> col:35 used orig_y 'int'     |-DeclStmt 0x14200ae40 <line:5:5, col:29>     | |-VarDecl 0x14200ad48 <col:5, col:12> col:12 used sendEvent '_Bool'     | `-VarDecl 0x14200adc0 <col:5, col:23> col:23 used isRoot '_Bool'     |-CallExpr 0x142819248 <line:7:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14200afb0 <col:5> 'int ()' Function 0x14200aef8 'REQUEST' 'int ()'     | `-RecoveryExpr 0x142819228 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1428193d0 <line:8:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142819350 <col:5> 'int ()' Function 0x142819298 'REQUEST_SIZE_MATCH' 'int ()'     | `-RecoveryExpr 0x1428193b0 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x142819490 <line:10:5, line:12:16>     | |-RecoveryExpr 0x142819428 <line:10:8, line:11:71> '_Bool' contains-errors     | `-ReturnStmt 0x142819480 <line:12:9, col:16>     |   `-RecoveryExpr 0x142819460 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x142819548 <line:14:5, line:16:16>     | |-RecoveryExpr 0x1428194e0 <line:14:8, line:15:58> '_Bool' contains-errors     | `-ReturnStmt 0x142819538 <line:16:9, col:16>     |   `-RecoveryExpr 0x142819518 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142819808 <line:24:5, col:19> 'int'     | |-ImplicitCastExpr 0x1428197f0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x142819780 <col:5> 'int ()' Function 0x1428196c8 'FOR_NSCREENS' 'int ()'     | `-ImplicitCastExpr 0x142819830 <col:18> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x1428197a0 <col:18> 'int' lvalue Var 0x14200aa90 'j' 'int'     |-CompoundStmt 0x142819c10 <col:21, line:34:5>     | |-IfStmt 0x1428199c0 <line:28:2, line:31:2>     | | |-ImplicitCastExpr 0x142819918 <line:28:6> '_Bool' <LValueToRValue>     | | | `-DeclRefExpr 0x1428198f8 <col:6> '_Bool' lvalue Var 0x14200adc0 'isRoot' '_Bool'     | | `-CompoundStmt 0x1428199b0 <col:14, line:31:2>     | `-BinaryOperator 0x142819b48 <line:32:2, col:33> 'int' contains-errors '='     |   |-DeclRefExpr 0x1428199e0 <col:2> 'int' lvalue Var 0x14200ab10 'result' 'int'     |   `-CallExpr 0x142819b20 <col:11, col:33> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x142819ae0 <col:11> 'int ()' Function 0x142819a28 'ProcShmPutImage' 'int ()'     |     `-RecoveryExpr 0x142819b00 <col:27> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x142819c88 <line:35:5, col:18>       `-ImplicitCastExpr 0x142819c70 <col:11, col:18> 'int' <LValueToRValue>         `-ParenExpr 0x142819c50 <col:11, col:18> 'int' lvalue           `-DeclRefExpr 0x142819c30 <col:12> 'int' lvalue Var 0x14200ab10 'result' 'int' ","20501":"`-FunctionDecl 0x15100e358  line:1:5 nfc_stop_poll 'int (struct nfc_dev *)'   |-ParmVarDecl 0x15100e248 <col:19, col:35> col:35 used dev 'struct nfc_dev *'   `-CompoundStmt 0x151027448 <line:2:1, line:26:1>     |-DeclStmt 0x1510266f0 <line:3:2, col:12>     | `-VarDecl 0x151026668 <col:2, col:11> col:6 used rc 'int' cinit     |   `-IntegerLiteral 0x1510266d0 <col:11> 'int' 0     |-CallExpr 0x151026a50 <line:5:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151026830 <col:2> 'int ()' Function 0x151026778 'pr_debug' 'int ()'     | |-StringLiteral 0x151026890 <col:11> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x151026a28 <col:18, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151026990 <col:18> 'int ()' Function 0x1510268d8 'dev_name' 'int ()'     |   `-UnaryOperator 0x151026a10 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1510269e8 <col:28, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1510269b0 <col:28> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'     |-CallExpr 0x151026bf8 <line:7:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151026b60 <col:2> 'int ()' Function 0x151026aa8 'device_lock' 'int ()'     | `-UnaryOperator 0x151026be0 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x151026bb8 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x151026b80 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'     |-IfStmt 0x151026e00 <line:9:2, line:12:2>     | |-RecoveryExpr 0x151026c58 <line:9:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151026c20 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x151026de0 <col:26, line:12:2>     |   |-BinaryOperator 0x151026d58 <line:10:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x151026c80 <col:3> 'int' lvalue Var 0x151026668 'rc' 'int'     |   | `-UnaryOperator 0x151026d40 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x151026d28 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x151026d08 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x151026dc8 <line:11:3, col:8> 'error' 0x151026d78     |-IfStmt 0x151026fe0 <line:14:2, line:17:2>     | |-UnaryOperator 0x151026e98 <line:14:6, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x151026e80 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x151026e58 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x151026e20 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x151026fc0 <col:21, line:17:2>     |   |-BinaryOperator 0x151026f88 <line:15:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x151026eb0 <col:3> 'int' lvalue Var 0x151026668 'rc' 'int'     |   | `-UnaryOperator 0x151026f70 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x151026f58 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x151026f38 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x151026fa8 <line:16:3, col:8> 'error' 0x151026d78     |-CallExpr 0x1510270c8 <line:19:2, col:25> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x151027060 <col:2, col:12> '<dependent type>' contains-errors lvalue ->stop_poll     | | `-RecoveryExpr 0x151027038 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x151027000 <col:2> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'     | `-DeclRefExpr 0x1510270a8 <col:22> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'     |-BinaryOperator 0x151027220 <line:21:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1510271a0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151027168 <col:2> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'     | `-RecoveryExpr 0x151027200 <col:17> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x1510273e0 <line:23:1, line:24:25> 'error'     | `-CallExpr 0x1510273b8 <col:2, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151027320 <col:2> 'int ()' Function 0x151027268 'device_unlock' 'int ()'     |   `-UnaryOperator 0x1510273a0 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x151027378 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x151027340 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x15100e248 'dev' 'struct nfc_dev *'     `-ReturnStmt 0x151027438 <line:25:2, col:9>       `-ImplicitCastExpr 0x151027420 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x151027400 <col:9> 'int' lvalue Var 0x151026668 'rc' 'int' ","20379":"`-FunctionDecl 0x14e80df18  line:1:1 invalid dav_uri_match 'int (int *, int *, int)'   |-ParmVarDecl 0x14e80dd28 <col:16, col:25> col:25 invalid a 'int *'   |-ParmVarDecl 0x14e80dda8 <col:28, col:37> col:37 invalid b 'int *'   |-ParmVarDecl 0x14e80de28 <col:40, col:49> col:49 invalid relax 'int'   `-CompoundStmt 0x14e827ac8 <line:2:1, line:12:1>     `-ReturnStmt 0x14e827ab8 <line:11:3, col:11>       `-UnaryOperator 0x14e827aa0 <col:10, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow         `-ImplicitCastExpr 0x14e827a88 <col:11> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x14e827a68 <col:11> '<dependent type>' contains-errors lvalue ","20849":"`-FunctionDecl 0x12803ce80  line:1:6 invalid gf_isom_cenc_has_saiz_saio_traf '_Bool (int *, int)'   |-ParmVarDecl 0x12803cd28 <col:38, col:59> col:59 invalid traf 'int *'   |-ParmVarDecl 0x12803cda8 <col:65, col:69> col:69 invalid scheme_type 'int'   `-CompoundStmt 0x12803d1a8 <line:2:1, line:4:1>     `-ReturnStmt 0x12803d198 <line:3:2, col:64>       `-CallExpr 0x12803d160 <col:9, col:64> '<dependent type>' contains-errors         |-DeclRefExpr 0x12803d090 <col:9> 'int ()' Function 0x12803cfd8 'gf_isom_cenc_has_saiz_saio_full' 'int ()'         |-RecoveryExpr 0x12803d140 <col:41> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12803d0c8 <col:47> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12803d0e8 <col:53> '<dependent type>' contains-errors lvalue ","21146":"`-FunctionDecl 0x12980de88  line:1:12 invalid do_send_NPRect 'int (int *, void *)' static   |-ParmVarDecl 0x12980dd28 <col:27, col:42> col:42 invalid message 'int *'   |-ParmVarDecl 0x12980dda8 <col:51, col:57> col:57 p_value 'void *'   `-CompoundStmt 0x1298282b0 <line:2:1, line:16:1>     |-DeclStmt 0x12980dff0 <line:4:3, col:12>     | `-VarDecl 0x12980df88 <col:3, col:7> col:7 used error 'int'     |-IfStmt 0x12980e2f8 <line:6:3, line:7:9>     | |-RecoveryExpr 0x12980e290 <line:6:7, col:63> '_Bool' contains-errors     | `-ReturnStmt 0x12980e2e8 <line:7:2, col:9>     |   `-ImplicitCastExpr 0x12980e2d0 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12980e2b0 <col:9> 'int' lvalue Var 0x12980df88 'error' 'int'     |-IfStmt 0x129827ed8 <line:8:3, line:9:9>     | |-RecoveryExpr 0x129827e70 <line:8:7, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x129827ec8 <line:9:2, col:9>     |   `-ImplicitCastExpr 0x129827eb0 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x129827e90 <col:9> 'int' lvalue Var 0x12980df88 'error' 'int'     |-IfStmt 0x129828090 <line:10:3, line:11:9>     | |-RecoveryExpr 0x129828028 <line:10:7, col:66> '_Bool' contains-errors     | `-ReturnStmt 0x129828080 <line:11:2, col:9>     |   `-ImplicitCastExpr 0x129828068 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x129828048 <col:9> 'int' lvalue Var 0x12980df88 'error' 'int'     |-IfStmt 0x129828248 <line:12:3, line:13:9>     | |-RecoveryExpr 0x1298281e0 <line:12:7, col:65> '_Bool' contains-errors     | `-ReturnStmt 0x129828238 <line:13:2, col:9>     |   `-ImplicitCastExpr 0x129828220 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x129828200 <col:9> 'int' lvalue Var 0x12980df88 'error' 'int'     `-ReturnStmt 0x1298282a0 <line:15:3, col:10>       `-RecoveryExpr 0x129828280 <col:10> '<dependent type>' contains-errors lvalue ","20220":"`-FunctionDecl 0x14a940e88  line:1:1 invalid vhost_scsi_send_evt 'int (struct vhost_scsi *, struct vhost_scsi_tpg *, struct se_lun *, int, int)'   |-ParmVarDecl 0x14a928648 <col:21, col:40> col:40 used vs 'struct vhost_scsi *'   |-ParmVarDecl 0x14a940a28 <line:2:6, col:29> col:29 used tpg 'struct vhost_scsi_tpg *'   |-ParmVarDecl 0x14a940bf8 <line:3:6, col:21> col:21 used lun 'struct se_lun *'   |-ParmVarDecl 0x14a940c90 <line:4:6, col:10> col:10 invalid event 'int'   |-ParmVarDecl 0x14a940d10 <line:5:6, col:10> col:10 invalid reason 'int'   `-CompoundStmt 0x14b0088f0 <line:6:1, line:25:1>     |-DeclStmt 0x14a941148 <line:7:2, col:28>     | |-RecordDecl 0x14a940f58 <col:2, col:9> col:9 struct vhost_scsi_evt     | `-VarDecl 0x14a9410c8 <col:2, col:25> col:25 used evt 'struct vhost_scsi_evt *'     |-BinaryOperator 0x14a941398 <line:9:2, col:49> 'struct vhost_scsi_evt *' contains-errors '='     | |-DeclRefExpr 0x14a941160 <col:2> 'struct vhost_scsi_evt *' lvalue Var 0x14a9410c8 'evt' 'struct vhost_scsi_evt *'     | `-CallExpr 0x14a941360 <col:8, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a9412e0 <col:8> 'int ()' Function 0x14a941228 'vhost_scsi_allocate_evt' 'int ()'     |   |-DeclRefExpr 0x14a941300 <col:32> 'struct vhost_scsi *' lvalue ParmVar 0x14a928648 'vs' 'struct vhost_scsi *'     |   |-RecoveryExpr 0x14a941320 <col:36> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14a941340 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a941418 <line:10:2, line:11:3>     | |-UnaryOperator 0x14a9413f0 <line:10:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a9413d8 <col:7> 'struct vhost_scsi_evt *' <LValueToRValue>     | |   `-DeclRefExpr 0x14a9413b8 <col:7> 'struct vhost_scsi_evt *' lvalue Var 0x14a9410c8 'evt' 'struct vhost_scsi_evt *'     | `-ReturnStmt 0x14a941408 <line:11:3>     |-IfStmt 0x14b008490 <line:13:2, line:21:2>     | |-BinaryOperator 0x14a9414a8 <line:13:6, col:13> 'int' '&&'     | | |-ImplicitCastExpr 0x14a941478 <col:6> 'struct vhost_scsi_tpg *' <LValueToRValue>     | | | `-DeclRefExpr 0x14a941438 <col:6> 'struct vhost_scsi_tpg *' lvalue ParmVar 0x14a940a28 'tpg' 'struct vhost_scsi_tpg *'     | | `-ImplicitCastExpr 0x14a941490 <col:13> 'struct se_lun *' <LValueToRValue>     | |   `-DeclRefExpr 0x14a941458 <col:13> 'struct se_lun *' lvalue ParmVar 0x14a940bf8 'lun' 'struct se_lun *'     | `-CompoundStmt 0x14b008460 <col:18, line:21:2>     |   |-BinaryOperator 0x14a9415e8 <line:16:3, col:23> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x14a9415a8 <col:3, col:19> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x14a941590 <col:3, col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-CXXDependentScopeMemberExpr 0x14a941528 <col:3, col:14> '<dependent type>' contains-errors lvalue .lun     |   | | |   `-RecoveryExpr 0x14a941500 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x14a9414c8 <col:3> 'struct vhost_scsi_evt *' lvalue Var 0x14a9410c8 'evt' 'struct vhost_scsi_evt *'     |   | | `-IntegerLiteral 0x14a941570 <col:18> 'int' 0     |   | `-IntegerLiteral 0x14a9415c8 <col:23> 'int' 1     |   |-BinaryOperator 0x14a9417a8 <line:17:3, col:41> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x14a9416e8 <col:3, col:19> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x14a9416d0 <col:3, col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-CXXDependentScopeMemberExpr 0x14a941668 <col:3, col:14> '<dependent type>' contains-errors lvalue .lun     |   | | |   `-RecoveryExpr 0x14a941640 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x14a941608 <col:3> 'struct vhost_scsi_evt *' lvalue Var 0x14a9410c8 'evt' 'struct vhost_scsi_evt *'     |   | | `-IntegerLiteral 0x14a9416b0 <col:18> 'int' 1     |   | `-BinaryOperator 0x14a941788 <col:23, col:41> '<dependent type>' contains-errors '&'     |   |   |-RecoveryExpr 0x14a941740 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14a941708 <col:23> 'struct vhost_scsi_tpg *' lvalue ParmVar 0x14a940a28 'tpg' 'struct vhost_scsi_tpg *'     |   |   `-IntegerLiteral 0x14a941768 <col:41> 'int' 255     |   |-IfStmt 0x14b008280 <line:18:3, line:19:49>     |   | |-BinaryOperator 0x14a941848 <line:18:7, col:28> 'int' contains-errors '>='     |   | | |-RecoveryExpr 0x14a941800 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x14a9417c8 <col:7> 'struct se_lun *' lvalue ParmVar 0x14a940bf8 'lun' 'struct se_lun *'     |   | | `-IntegerLiteral 0x14a941828 <col:28> 'int' 256     |   | `-BinaryOperator 0x14b008260 <line:19:4, col:49> '<dependent type>' contains-errors '='     |   |   |-ArraySubscriptExpr 0x14a941948 <col:4, col:20> '<dependent type>' contains-errors lvalue     |   |   | |-ImplicitCastExpr 0x14a941930 <col:4, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | `-CXXDependentScopeMemberExpr 0x14a9418c8 <col:4, col:15> '<dependent type>' contains-errors lvalue .lun     |   |   | |   `-RecoveryExpr 0x14a9418a0 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | |     `-DeclRefExpr 0x14a941868 <col:4> 'struct vhost_scsi_evt *' lvalue Var 0x14a9410c8 'evt' 'struct vhost_scsi_evt *'     |   |   | `-IntegerLiteral 0x14a941910 <col:19> 'int' 2     |   |   `-BinaryOperator 0x14b008240 <col:24, col:49> '<dependent type>' contains-errors '|'     |   |     |-BinaryOperator 0x14b008200 <col:24, col:45> '<dependent type>' contains-errors '>>'     |   |     | |-RecoveryExpr 0x14a9419a0 <col:24, col:29> '<dependent type>' contains-errors lvalue     |   |     | | `-DeclRefExpr 0x14a941968 <col:24> 'struct se_lun *' lvalue ParmVar 0x14a940bf8 'lun' 'struct se_lun *'     |   |     | `-IntegerLiteral 0x14a9419c8 <col:45> 'int' 8     |   |     `-IntegerLiteral 0x14b008220 <col:49> 'int' 64     |   `-BinaryOperator 0x14b008440 <line:20:3, col:43> '<dependent type>' contains-errors '='     |     |-ArraySubscriptExpr 0x14b008380 <col:3, col:19> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x14b008368 <col:3, col:14> '<dependent type>' contains-errors <LValueToRValue>     |     | | `-CXXDependentScopeMemberExpr 0x14b008300 <col:3, col:14> '<dependent type>' contains-errors lvalue .lun     |     | |   `-RecoveryExpr 0x14b0082d8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x14b0082a0 <col:3> 'struct vhost_scsi_evt *' lvalue Var 0x14a9410c8 'evt' 'struct vhost_scsi_evt *'     |     | `-IntegerLiteral 0x14b008348 <col:18> 'int' 3     |     `-BinaryOperator 0x14b008420 <col:23, col:43> '<dependent type>' contains-errors '&'     |       |-RecoveryExpr 0x14b0083d8 <col:23, col:28> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x14b0083a0 <col:23> 'struct se_lun *' lvalue ParmVar 0x14a940bf8 'lun' 'struct se_lun *'     |       `-IntegerLiteral 0x14b008400 <col:43> 'int' 255     |-CallExpr 0x14b0086a0 <line:23:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008590 <col:2> 'int ()' Function 0x14b0084d8 'llist_add' 'int ()'     | |-UnaryOperator 0x14b008610 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14b0085e8 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b0085b0 <col:13> 'struct vhost_scsi_evt *' lvalue Var 0x14a9410c8 'evt' 'struct vhost_scsi_evt *'     | `-UnaryOperator 0x14b008688 <col:24, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b008660 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b008628 <col:25> 'struct vhost_scsi *' lvalue ParmVar 0x14a928648 'vs' 'struct vhost_scsi *'     `-CallExpr 0x14b0088c0 <line:24:2, col:47> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b0087b0 <col:2> 'int ()' Function 0x14b0086f8 'vhost_work_queue' 'int ()'       |-UnaryOperator 0x14b008830 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x14b008808 <col:20, col:24> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14b0087d0 <col:20> 'struct vhost_scsi *' lvalue ParmVar 0x14a928648 'vs' 'struct vhost_scsi *'       `-UnaryOperator 0x14b0088a8 <col:29, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14b008880 <col:30, col:34> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14b008848 <col:30> 'struct vhost_scsi *' lvalue ParmVar 0x14a928648 'vs' 'struct vhost_scsi *' ","20872":"`-FunctionDecl 0x1290f0238  line:1:1 invalid gs_heap_resize_string 'int (int *, int *, int, int, int)'   |-ParmVarDecl 0x1290eff28 <col:23, col:37> col:37 invalid mem 'int *'   |-ParmVarDecl 0x1290effa8 <col:42, col:49> col:49 invalid data 'int *'   |-ParmVarDecl 0x1290f0028 <col:55, col:60> col:60 old_num 'int'   |-ParmVarDecl 0x1290f00a8 <col:69, col:74> col:74 used new_num 'int'   |-ParmVarDecl 0x1290f0128 <line:2:23, col:37> col:37 invalid cname 'int'   `-CompoundStmt 0x129109ad0 <line:3:1, line:8:1>     `-ReturnStmt 0x129109ac0 <line:7:5, col:59>       `-CallExpr 0x129109a80 <col:12, col:59> '<dependent type>' contains-errors         |-DeclRefExpr 0x1291099e0 <col:12> 'int ()' Function 0x129109928 'gs_heap_resize_object' 'int ()'         |-RecoveryExpr 0x129109a00 <col:34> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x129109a20 <col:39> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x129109a40 <col:45> 'int' lvalue ParmVar 0x1290f00a8 'new_num' 'int'         `-RecoveryExpr 0x129109a60 <col:54> '<dependent type>' contains-errors lvalue ","20809":"`-FunctionDecl 0x12500de88  line:1:1 invalid xdr_krb5_string_attr 'int (int *, int *)'   |-ParmVarDecl 0x12500dd28 <col:22, col:27> col:27 invalid xdrs 'int *'   |-ParmVarDecl 0x12500dda8 <col:33, col:51> col:51 invalid objp 'int *'   `-CompoundStmt 0x125027650 <line:2:1, line:11:1>     |-IfStmt 0x12500e1f0 <line:3:2, line:4:10>     | |-UnaryOperator 0x12500e190 <line:3:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12500e160 <col:7, col:38> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12500e0a0 <col:7> 'int ()' Function 0x12500dfe8 'xdr_nullstring' 'int ()'     | |   |-RecoveryExpr 0x12500e0c0 <col:22> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x12500e148 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x12500e100 <col:29, col:35> '<dependent type>' contains-errors lvalue ->key     | |       `-RecoveryExpr 0x12500e0e0 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12500e1e0 <line:4:3, col:10>     |   `-RecoveryExpr 0x12500e1c0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12500e360 <line:5:2, line:6:10>     | |-UnaryOperator 0x12500e300 <line:5:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12500e2d0 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12500e210 <col:7> 'int ()' Function 0x12500dfe8 'xdr_nullstring' 'int ()'     | |   |-RecoveryExpr 0x12500e230 <col:22> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x12500e2b8 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x12500e270 <col:29, col:35> '<dependent type>' contains-errors lvalue ->value     | |       `-RecoveryExpr 0x12500e250 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12500e350 <line:6:3, col:10>     |   `-RecoveryExpr 0x12500e330 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1250275e8 <line:7:2, line:9:10>     | |-RecoveryExpr 0x125027580 <line:7:6, line:8:47> '_Bool' contains-errors     | `-ReturnStmt 0x1250275d8 <line:9:3, col:10>     |   `-RecoveryExpr 0x1250275b8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x125027640 <line:10:2, col:9>       `-RecoveryExpr 0x125027620 <col:9> '<dependent type>' contains-errors lvalue ","20444":"`-FunctionDecl 0x14d928348  line:1:1 invalid p11_rpc_buffer_get_byte 'int (int *, int *, unsigned char *)'   |-ParmVarDecl 0x14d928128 <col:26, col:38> col:38 invalid buf 'int *'   |-ParmVarDecl 0x14d9281a8 <line:2:26, col:34> col:34 invalid offset 'int *'   |-ParmVarDecl 0x14d928258 <line:3:26, col:41> col:41 used val 'unsigned char *'   `-CompoundStmt 0x14d941cd0 <line:4:1, line:15:1>     |-DeclStmt 0x14d928488 <line:5:2, col:20>     | `-VarDecl 0x14d928420 <col:2, col:17> col:17 used ptr 'unsigned char *'     |-IfStmt 0x14d941898 <line:6:2, line:9:2>     | |-BinaryOperator 0x14d928660 <line:6:6, col:43> 'int' contains-errors '||'     | | |-BinaryOperator 0x14d928528 <col:6, col:17> 'int' contains-errors '<'     | | | |-CXXDependentScopeMemberExpr 0x14d9284c0 <col:6, col:11> '<dependent type>' contains-errors lvalue ->len     | | | | `-RecoveryExpr 0x14d9284a0 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x14d928508 <col:17> 'int' 1     | | `-BinaryOperator 0x14d928640 <col:22, col:43> 'int' contains-errors '>'     | |   |-UnaryOperator 0x14d928580 <col:22, col:23> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x14d928568 <col:23> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x14d928548 <col:23> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x14d928620 <col:32, col:43> '<dependent type>' contains-errors '-'     | |     |-CXXDependentScopeMemberExpr 0x14d9285b8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->len     | |     | `-RecoveryExpr 0x14d928598 <col:32> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x14d928600 <col:43> 'int' 1     | `-CompoundStmt 0x14d941878 <col:46, line:9:2>     |   |-CallExpr 0x14d941820 <line:7:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d9287e0 <col:3> 'int ()' Function 0x14d928728 'p11_buffer_fail' 'int ()'     |   | `-RecoveryExpr 0x14d941800 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14d941868 <line:8:3, col:10>     |     `-IntegerLiteral 0x14d941848 <col:10> 'int' 0     |-BinaryOperator 0x14d9419f0 <line:10:2, col:38> 'unsigned char *' contains-errors '='     | |-DeclRefExpr 0x14d9418b8 <col:2> 'unsigned char *' lvalue Var 0x14d928420 'ptr' 'unsigned char *'     | `-BinaryOperator 0x14d9419d0 <col:8, col:38> '<dependent type>' contains-errors '+'     |   |-CStyleCastExpr 0x14d941958 <col:8, col:30> 'unsigned char *' contains-errors <Dependent>     |   | `-CXXDependentScopeMemberExpr 0x14d9418f8 <col:25, col:30> '<dependent type>' contains-errors lvalue ->data     |   |   `-RecoveryExpr 0x14d9418d8 <col:25> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x14d9419b8 <col:37, col:38> '<dependent type>' contains-errors prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x14d9419a0 <col:38> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14d941980 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d941b80 <line:11:2, line:12:11>     | |-BinaryOperator 0x14d941a88 <line:11:6, col:13> 'int' contains-errors '!='     | | |-DeclRefExpr 0x14d941a10 <col:6> 'unsigned char *' lvalue ParmVar 0x14d928258 'val' 'unsigned char *'     | | `-RecoveryExpr 0x14d941a68 <col:13> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x14d941b60 <line:12:3, col:11> 'unsigned char' '='     |   |-UnaryOperator 0x14d941ae0 <col:3, col:4> 'unsigned char' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x14d941ac8 <col:4> 'unsigned char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14d941aa8 <col:4> 'unsigned char *' lvalue ParmVar 0x14d928258 'val' 'unsigned char *'     |   `-ImplicitCastExpr 0x14d941b48 <col:10, col:11> 'unsigned char' <LValueToRValue>     |     `-UnaryOperator 0x14d941b30 <col:10, col:11> 'unsigned char' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x14d941b18 <col:11> 'unsigned char *' <LValueToRValue>     |         `-DeclRefExpr 0x14d941af8 <col:11> 'unsigned char *' lvalue Var 0x14d928420 'ptr' 'unsigned char *'     |-BinaryOperator 0x14d941c80 <line:13:2, col:22> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x14d941bd8 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14d941bc0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14d941ba0 <col:3> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x14d941c60 <col:12, col:22> '<dependent type>' contains-errors '+'     |   |-UnaryOperator 0x14d941c28 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x14d941c10 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x14d941bf0 <col:13> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14d941c40 <col:22> 'int' 1     `-ReturnStmt 0x14d941cc0 <line:14:2, col:9>       `-IntegerLiteral 0x14d941ca0 <col:9> 'int' 1 ","21217":"`-FunctionDecl 0x14c941a08  line:1:17 invalid read_data 'int (struct connectdata *, int, struct krb5buffer *)' static   |-ParmVarDecl 0x14c928668 <col:27, col:47> col:47 used conn 'struct connectdata *'   |-ParmVarDecl 0x14c9286e8 <line:2:27, col:41> col:41 invalid fd 'int'   |-ParmVarDecl 0x14c9418c8 <line:3:27, col:46> col:46 used buf 'struct krb5buffer *'   `-CompoundStmt 0x14d0089a8 <line:4:1, line:27:1>     |-DeclStmt 0x14c941b48 <line:5:3, col:10>     | `-VarDecl 0x14c941ae0 <col:3, col:7> col:7 used len 'int'     |-IfStmt 0x14c941e80 <line:9:3, line:10:12>     | |-RecoveryExpr 0x14c941e18 <line:9:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c941e70 <line:10:5, col:12>     |   `-RecoveryExpr 0x14c941e50 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c942318 <line:12:3, line:16:3>     | |-ImplicitCastExpr 0x14c941ec0 <line:12:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c941ea0 <col:6> 'int' lvalue Var 0x14c941ae0 'len' 'int'     | `-CompoundStmt 0x14c9422f8 <col:11, line:16:3>     |   |-BinaryOperator 0x14c9420a8 <line:14:5, col:20> 'int' '='     |   | |-DeclRefExpr 0x14c941ed8 <col:5> 'int' lvalue Var 0x14c941ae0 'len' 'int'     |   | `-CallExpr 0x14c942068 <col:11, col:20> 'int'     |   |   |-ImplicitCastExpr 0x14c942050 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14c941fd8 <col:11> 'int ()' Function 0x14c941f20 'ntohl' 'int ()'     |   |   `-ImplicitCastExpr 0x14c942090 <col:17> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x14c941ff8 <col:17> 'int' lvalue Var 0x14c941ae0 'len' 'int'     |   `-BinaryOperator 0x14c9422d8 <line:15:5, col:48> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x14c942100 <col:5, col:10> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14c9420c8 <col:5> 'struct krb5buffer *' lvalue ParmVar 0x14c9418c8 'buf' 'struct krb5buffer *'     |     `-CallExpr 0x14c9422a8 <col:17, col:48> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14c942208 <col:17> 'int ()' Function 0x14c942150 'Curl_saferealloc' 'int ()'     |       |-RecoveryExpr 0x14c942260 <col:34, col:39> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x14c942228 <col:34> 'struct krb5buffer *' lvalue ParmVar 0x14c9418c8 'buf' 'struct krb5buffer *'     |       `-DeclRefExpr 0x14c942288 <col:45> 'int' lvalue Var 0x14c941ae0 'len' 'int'     |-IfStmt 0x14c942480 <line:17:3, line:18:12>     | |-BinaryOperator 0x14c942418 <line:17:6, col:20> 'int' contains-errors '||'     | | |-UnaryOperator 0x14c942370 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x14c942358 <col:7> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x14c942338 <col:7> 'int' lvalue Var 0x14c941ae0 'len' 'int'     | | `-UnaryOperator 0x14c942400 <col:14, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x14c9423e8 <col:15, col:20> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x14c9423c0 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14c942388 <col:15> 'struct krb5buffer *' lvalue ParmVar 0x14c9418c8 'buf' 'struct krb5buffer *'     | `-ReturnStmt 0x14c942470 <line:18:5, col:12>     |   `-RecoveryExpr 0x14c942450 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c942618 <line:21:3, line:22:12>     | |-RecoveryExpr 0x14c9425b0 <line:21:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c942608 <line:22:5, col:12>     |   `-RecoveryExpr 0x14c9425e8 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d0088e8 <line:23:3, line:24:55> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c942670 <line:23:3, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c942638 <col:3> 'struct krb5buffer *' lvalue ParmVar 0x14c9418c8 'buf' 'struct krb5buffer *'     | `-CallExpr 0x14d0088a0 <col:15, line:24:55> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x14c9426f8 <line:23:15, col:27> '<dependent type>' contains-errors lvalue ->decode     |   | `-RecoveryExpr 0x14c9426d0 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c942698 <col:15> 'struct connectdata *' lvalue ParmVar 0x14c928668 'conn' 'struct connectdata *'     |   |-RecoveryExpr 0x14c942778 <col:34, col:40> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c942740 <col:34> 'struct connectdata *' lvalue ParmVar 0x14c928668 'conn' 'struct connectdata *'     |   |-RecoveryExpr 0x14c9427d8 <col:50, col:55> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c9427a0 <col:50> 'struct krb5buffer *' lvalue ParmVar 0x14c9418c8 'buf' 'struct krb5buffer *'     |   |-DeclRefExpr 0x14d008800 <col:61> 'int' lvalue Var 0x14c941ae0 'len' 'int'     |   |-RecoveryExpr 0x14d008858 <line:24:34, col:40> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14d008820 <col:34> 'struct connectdata *' lvalue ParmVar 0x14c928668 'conn' 'struct connectdata *'     |   `-DeclRefExpr 0x14d008880 <col:51> 'struct connectdata *' lvalue ParmVar 0x14c928668 'conn' 'struct connectdata *'     `-BinaryOperator 0x14d008988 <line:25:3, col:16> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x14d008940 <col:3, col:8> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14d008908 <col:3> 'struct krb5buffer *' lvalue ParmVar 0x14c9418c8 'buf' 'struct krb5buffer *'       `-IntegerLiteral 0x14d008968 <col:16> 'int' 0 ","20617":"`-FunctionDecl 0x122140a00  line:1:5 usb_driver_set_configuration 'int (struct usb_device *, int)'   |-ParmVarDecl 0x122128648 <col:34, col:53> col:53 used udev 'struct usb_device *'   |-ParmVarDecl 0x1221286c8 <col:59, col:63> col:63 used config 'int'   `-CompoundStmt 0x122142a98 <line:2:1, line:19:1>     |-DeclStmt 0x122140ce8 <line:3:2, col:32>     | |-RecordDecl 0x122140b00 <col:2, col:9> col:9 struct set_config_request     | `-VarDecl 0x122140c68 <col:2, col:29> col:29 used req 'struct set_config_request *'     |-IfStmt 0x122140ff0 <line:6:2, line:7:11>     | |-UnaryOperator 0x122140f30 <line:6:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x122140f18 <col:7> 'struct set_config_request *' <LValueToRValue>     | |   `-DeclRefExpr 0x122140ef8 <col:7> 'struct set_config_request *' lvalue Var 0x122140c68 'req' 'struct set_config_request *'     | `-ReturnStmt 0x122140fe0 <line:7:3, col:11>     |   `-UnaryOperator 0x122140fc8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x122140fb0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x122140f90 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x122141090 <line:8:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x122141048 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122141010 <col:2> 'struct set_config_request *' lvalue Var 0x122140c68 'req' 'struct set_config_request *'     | `-DeclRefExpr 0x122141070 <col:14> 'struct usb_device *' lvalue ParmVar 0x122128648 'udev' 'struct usb_device *'     |-BinaryOperator 0x122141130 <line:9:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1221410e8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1221410b0 <col:2> 'struct set_config_request *' lvalue Var 0x122140c68 'req' 'struct set_config_request *'     | `-DeclRefExpr 0x122141110 <col:16> 'int' lvalue ParmVar 0x1221286c8 'config' 'int'     |-CallExpr 0x122141330 <line:10:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122141230 <col:2> 'int ()' Function 0x122141178 'INIT_WORK' 'int ()'     | |-UnaryOperator 0x1221412b0 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x122141288 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x122141250 <col:13> 'struct set_config_request *' lvalue Var 0x122140c68 'req' 'struct set_config_request *'     | `-RecoveryExpr 0x122141310 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1221414f0 <line:12:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122141440 <col:2> 'int ()' Function 0x122141388 'spin_lock' 'int ()'     | `-UnaryOperator 0x1221414d8 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1221414b8 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122141728 <line:13:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1221415f8 <col:2> 'int ()' Function 0x122141540 'list_add' 'int ()'     | |-UnaryOperator 0x122141678 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x122141650 <col:12, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x122141618 <col:12> 'struct set_config_request *' lvalue Var 0x122140c68 'req' 'struct set_config_request *'     | `-UnaryOperator 0x122141710 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1221416f0 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1221418e8 <line:14:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122141838 <col:2> 'int ()' Function 0x122141780 'spin_unlock' 'int ()'     | `-UnaryOperator 0x1221418d0 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1221418b0 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122142888 <line:16:2, col:18> 'int'     | |-ImplicitCastExpr 0x122142870 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122142800 <col:2> 'int ()' Function 0x122141938 'usb_get_dev' 'int ()'     | `-ImplicitCastExpr 0x1221428b0 <col:14> 'struct usb_device *' <LValueToRValue>     |   `-DeclRefExpr 0x122142820 <col:14> 'struct usb_device *' lvalue ParmVar 0x122128648 'udev' 'struct usb_device *'     |-CallExpr 0x122142a40 <line:17:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1221429a8 <col:2> 'int ()' Function 0x1221428f0 'schedule_work' 'int ()'     | `-UnaryOperator 0x122142a28 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x122142a00 <col:17, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1221429c8 <col:17> 'struct set_config_request *' lvalue Var 0x122140c68 'req' 'struct set_config_request *'     `-ReturnStmt 0x122142a88 <line:18:2, col:9>       `-IntegerLiteral 0x122142a68 <col:9> 'int' 0 ","20366":"`-FunctionDecl 0x13780df18  line:1:1 invalid elg_sign 'int (int *, int, int)'   |-ParmVarDecl 0x13780dd28 <col:11, col:24> col:24 invalid r_sig 'int *'   |-ParmVarDecl 0x13780dda8 <col:31, col:43> col:43 invalid s_data 'int'   |-ParmVarDecl 0x13780de28 <col:51, col:63> col:63 invalid keyparms 'int'   `-CompoundStmt 0x14780ba98 <line:2:1, line:61:1>     |-DeclStmt 0x148121db8 <line:4:3, col:29>     | |-RecordDecl 0x13780dfd8 <col:3, col:10> col:10 struct pk_encoding_ctx     | `-VarDecl 0x13780e0d8 <col:3, col:26> col:26 invalid ctx 'struct pk_encoding_ctx'     |-CallExpr 0x148122140 <line:10:3, line:11:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148121f30 <line:10:3> 'int ()' Function 0x148121e78 '_gcry_pk_util_init_encoding_ctx' 'int ()'     | |-UnaryOperator 0x148121f70 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x148121f50 <col:37> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x148122120 <col:42> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1481220c0 <line:11:36, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148122080 <col:36> 'int ()' Function 0x148121fc8 'elg_get_nbits' 'int ()'     |   `-RecoveryExpr 0x1481220a0 <col:51> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1481223d8 <line:15:3, line:16:10>     | |-RecoveryExpr 0x148122350 <line:15:7> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1481223c0 <line:16:5, col:10> 'leave' 0x148122370     |-IfStmt 0x148122628 <line:17:3, line:18:29>     | |-RecoveryExpr 0x148122410 <line:17:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1481225f8 <line:18:5, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148122510 <col:5> 'int ()' Function 0x148122458 'log_mpidump' 'int ()'     |   |-StringLiteral 0x148122570 <col:18> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x1481225d8 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148122798 <line:19:3, line:23:5>     | |-RecoveryExpr 0x148122748 <line:19:7, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x148122780 <line:20:5, line:23:5>     |   `-GotoStmt 0x148122768 <line:22:7, col:12> 'leave' 0x148122370     |-IfStmt 0x148122930 <line:28:3, line:29:10>     | |-RecoveryExpr 0x1481228f8 <line:28:7> '_Bool' contains-errors     | `-GotoStmt 0x148122918 <line:29:5, col:10> 'leave' 0x148122370     |-IfStmt 0x14780b000 <line:30:3, line:37:5>     | |-RecoveryExpr 0x148122950 <line:30:7> '_Bool' contains-errors     | `-CompoundStmt 0x148122bf0 <line:31:5, line:37:5>     |-IfStmt 0x14780b3b0 <line:42:3, line:46:5>     | |-RecoveryExpr 0x14780b300 <line:42:7> '_Bool' contains-errors     | `-CompoundStmt 0x14780b3a0 <line:43:5, line:46:5>     |-LabelStmt 0x14780b618 <line:49:2, col:7> 'leave'     | `-NullStmt 0x14780b610 <col:7>     `-CallExpr 0x14780b830 <line:57:3, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x14780b7d8 <col:3> 'int ()' Function 0x14780b720 '_gcry_pk_util_free_encoding_ctx' 'int ()'       `-UnaryOperator 0x14780b818 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14780b7f8 <col:37> '<dependent type>' contains-errors lvalue ","21250":"`-FunctionDecl 0x14f01f5a8  line:1:1 invalid log2vis_unicode 'int (int *, int, int, int)'   |-ParmVarDecl 0x14f01f328 <col:18, col:29> col:29 invalid unicode 'int *'   |-ParmVarDecl 0x14f01f3a8 <col:38, col:53> col:53 invalid base_direction 'int'   |-ParmVarDecl 0x14f01f428 <col:69, col:73> col:73 used clean 'int'   |-ParmVarDecl 0x14f01f4a8 <col:80, col:84> col:84 used reordernsm 'int'   `-CompoundStmt 0x159008b38 <line:2:1, line:25:1>     |-DeclStmt 0x14f01f948 <line:7:2, col:43>     | `-VarDecl 0x14f01f718 <col:2, col:42> col:6 used length 'int' cinit     |   `-CallExpr 0x14f01f920 <col:15, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14f01f8e0 <col:15> 'int ()' Function 0x14f01f828 'PyUnicode_GET_SIZE' 'int ()'     |     `-RecoveryExpr 0x14f01f900 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159008438 <line:10:2, line:11:8>     | |-BinaryOperator 0x1590083b0 <line:10:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x159008370 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x159008390 <col:17> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x159008420 <line:11:3, col:8> 'cleanup' 0x1590083d0     |-IfStmt 0x159008670 <line:14:2, line:15:8>     | |-RecoveryExpr 0x159008638 <line:14:6, col:16> '_Bool' contains-errors     | `-GotoStmt 0x159008658 <line:15:3, col:8> 'cleanup' 0x1590083d0     `-LabelStmt 0x159008af8 <line:20:7, col:14> 'cleanup'       `-NullStmt 0x159008af0 <col:14> ","20531":"`-FunctionDecl 0x128008238  line:1:7 invalid skb_get_hash_perturb 'int (const struct sk_buff *, int)'   |-ParmVarDecl 0x11f128068 <col:28, col:50> col:50 used skb 'const struct sk_buff *'   |-ParmVarDecl 0x11f1280e8 <col:55, col:59> col:59 invalid perturb 'int'   `-CompoundStmt 0x1280086c0 <line:2:1, line:6:1>     |-DeclStmt 0x128008468 <line:3:2, col:23>     | |-RecordDecl 0x1280082f0 <col:2, col:9> col:9 struct flow_keys     | `-VarDecl 0x1280083e8 <col:2, col:19> col:19 invalid keys 'struct flow_keys'     `-ReturnStmt 0x1280086b0 <line:5:2, col:44>       `-CallExpr 0x128008678 <col:9, col:44> '<dependent type>' contains-errors         |-DeclRefExpr 0x1280085e0 <col:9> 'int ()' Function 0x128008528 '___skb_get_hash' 'int ()'         |-DeclRefExpr 0x128008600 <col:25> 'const struct sk_buff *' lvalue ParmVar 0x11f128068 'skb' 'const struct sk_buff *'         |-UnaryOperator 0x128008640 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x128008620 <col:31> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x128008658 <col:37> '<dependent type>' contains-errors lvalue ","20655":"`-FunctionDecl 0x12c827948  line:1:5 invalid wc_SignatureGenerate 'int (enum wc_HashType, enum wc_SignatureType, const int *, int, int *, int *, const void *, int, int *)'   |-ParmVarDecl 0x12c80e1f8 <line:2:5, col:22> col:22 invalid hash_type 'enum wc_HashType'   |-ParmVarDecl 0x12c80e378 <col:33, col:55> col:55 invalid sig_type 'enum wc_SignatureType'   |-ParmVarDecl 0x12c827418 <line:3:5, col:17> col:17 invalid data 'const int *'   |-ParmVarDecl 0x12c827498 <col:23, col:30> col:30 invalid data_len 'int'   |-ParmVarDecl 0x12c827548 <line:4:5, col:11> col:11 invalid sig 'int *'   |-ParmVarDecl 0x12c8275c8 <col:16, col:24> col:24 invalid sig_len 'int *'   |-ParmVarDecl 0x12c827678 <line:5:5, col:17> col:17 used key 'const void *'   |-ParmVarDecl 0x12c8276f8 <col:22, col:29> col:29 invalid key_len 'int'   |-ParmVarDecl 0x12c827778 <col:38, col:46> col:46 invalid rng 'int *'   `-CompoundStmt 0x12d80c2d8 <line:6:1, line:77:1>     |-DeclStmt 0x12c827ab8 <line:7:5, col:12>     | `-VarDecl 0x12c827a50 <col:5, col:9> col:9 used ret 'int'     |-IfStmt 0x12c8280b0 <line:16:5, line:20:5>     | |-BinaryOperator 0x12c828030 <line:16:9, line:18:35> 'int' contains-errors '||'     | | |-BinaryOperator 0x12c828010 <line:16:9, line:18:16> 'int' contains-errors '||'     | | | |-BinaryOperator 0x12c827fb0 <line:16:9, line:17:55> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x12c827f40 <line:16:9, line:17:35> 'int' contains-errors '||'     | | | | | |-BinaryOperator 0x12c827ee0 <line:16:9, line:17:16> 'int' contains-errors '||'     | | | | | | |-BinaryOperator 0x12c827e80 <line:16:9, col:37> 'int' contains-errors '||'     | | | | | | | |-BinaryOperator 0x12c827e60 <col:9, col:17> 'int' contains-errors '=='     | | | | | | | | |-RecoveryExpr 0x12c827ad0 <col:9> '<dependent type>' contains-errors lvalue     | | | | | | | | `-RecoveryExpr 0x12c827e40 <col:17> '<dependent type>' contains-errors lvalue     | | | | | | | `-BinaryOperator 0x12c827b68 <col:25, col:37> 'int' contains-errors '<='     | | | | | | |   |-RecoveryExpr 0x12c827b28 <col:25> '<dependent type>' contains-errors lvalue     | | | | | | |   `-IntegerLiteral 0x12c827b48 <col:37> 'int' 0     | | | | | | `-BinaryOperator 0x12c827ec0 <line:17:9, col:16> 'int' contains-errors '=='     | | | | | |   |-RecoveryExpr 0x12c827ba8 <col:9> '<dependent type>' contains-errors lvalue     | | | | | |   `-RecoveryExpr 0x12c827ea0 <col:16> '<dependent type>' contains-errors lvalue     | | | | | `-BinaryOperator 0x12c827f20 <col:24, col:35> 'int' contains-errors '=='     | | | | |   |-RecoveryExpr 0x12c827c20 <col:24> '<dependent type>' contains-errors lvalue     | | | | |   `-RecoveryExpr 0x12c827f00 <col:35> '<dependent type>' contains-errors lvalue     | | | | `-BinaryOperator 0x12c827f90 <col:43, col:55> 'int' contains-errors '<='     | | | |   |-UnaryOperator 0x12c827f78 <col:43, col:44> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | |   | `-ImplicitCastExpr 0x12c827f60 <col:44> '<dependent type>' contains-errors <LValueToRValue>     | | | |   |   `-RecoveryExpr 0x12c827c98 <col:44> '<dependent type>' contains-errors lvalue     | | | |   `-IntegerLiteral 0x12c827ce8 <col:55> 'int' 0     | | | `-BinaryOperator 0x12c827ff0 <line:18:9, col:16> 'int' contains-errors '=='     | | |   |-DeclRefExpr 0x12c827d48 <col:9> 'const void *' lvalue ParmVar 0x12c827678 'key' 'const void *'     | | |   `-RecoveryExpr 0x12c827fd0 <col:16> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12c827e00 <col:24, col:35> 'int' contains-errors '<='     | |   |-RecoveryExpr 0x12c827dc0 <col:24> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x12c827de0 <col:35> 'int' 0     | `-CompoundStmt 0x12c828098 <col:38, line:20:5>     |   `-ReturnStmt 0x12c828088 <line:19:9, col:16>     |     `-RecoveryExpr 0x12c828068 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d80b830 <line:23:5, line:26:5>     | |-BinaryOperator 0x12c828378 <line:23:9, col:67> 'int' contains-errors '<'     | | |-CStyleCastExpr 0x12c828138 <col:9, col:15> 'int' contains-errors <Dependent>     | | | `-UnaryOperator 0x12c828108 <col:14, col:15> '<dependent type>' contains-errors prefix '*' cannot overflow     | | |   `-ImplicitCastExpr 0x12c8280f0 <col:15> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x12c8280d0 <col:15> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12c828340 <col:25, col:67> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c8282c0 <col:25> 'int ()' Function 0x12c828208 'wc_SignatureGetSize' 'int ()'     | |   |-RecoveryExpr 0x12c8282e0 <col:45> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x12c828300 <col:55> 'const void *' lvalue ParmVar 0x12c827678 'key' 'const void *'     | |   `-RecoveryExpr 0x12c828320 <col:60> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d80b810 <col:70, line:26:5>     |   |-CallExpr 0x12d80b788 <line:24:9, col:26> 'int'     |   | |-ImplicitCastExpr 0x12d80b770 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d80b6b8 <col:9> 'int ()' Function 0x12d80b600 'WOLFSSL_MSG' 'int ()'     |   | `-ImplicitCastExpr 0x12d80b7b0 <col:21> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12d80b720 <col:21> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12d80b800 <line:25:9, col:16>     |     `-RecoveryExpr 0x12d80b7e0 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d80b9b8 <line:29:5, col:41> 'int' contains-errors '='     | |-DeclRefExpr 0x12d80b850 <col:5> 'int' lvalue Var 0x12c827a50 'ret' 'int'     | `-CallExpr 0x12d80b990 <col:11, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d80b950 <col:11> 'int ()' Function 0x12d80b898 'wc_HashGetDigestSize' 'int ()'     |   `-RecoveryExpr 0x12d80b970 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d80bb50 <line:30:5, line:33:5>     | |-BinaryOperator 0x12d80ba30 <line:30:9, col:15> 'int' '<'     | | |-ImplicitCastExpr 0x12d80ba18 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12d80b9d8 <col:9> 'int' lvalue Var 0x12c827a50 'ret' 'int'     | | `-IntegerLiteral 0x12d80b9f8 <col:15> 'int' 0     | `-CompoundStmt 0x12d80bb30 <col:18, line:33:5>     |   |-CallExpr 0x12d80baa8 <line:31:9, col:26> 'int'     |   | |-ImplicitCastExpr 0x12d80ba90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d80ba50 <col:9> 'int ()' Function 0x12d80b600 'WOLFSSL_MSG' 'int ()'     |   | `-ImplicitCastExpr 0x12d80bad0 <col:21> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12d80ba70 <col:21> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12d80bb20 <line:32:9, col:16>     |     `-ImplicitCastExpr 0x12d80bb08 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12d80bae8 <col:16> 'int' lvalue Var 0x12c827a50 'ret' 'int'     |-IfStmt 0x12d80bbe0 <line:37:5, line:40:5>     | |-RecoveryExpr 0x12d80bbb0 <line:37:9, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x12d80bbd0 <col:50, line:40:5>     |-IfStmt 0x12d80c270 <line:53:5, line:70:5>     | |-BinaryOperator 0x12d80bdd8 <line:53:9, col:16> 'int' '=='     | | |-ImplicitCastExpr 0x12d80bdc0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12d80bd80 <col:9> 'int' lvalue Var 0x12c827a50 'ret' 'int'     | | `-IntegerLiteral 0x12d80bda0 <col:16> 'int' 0     | `-CompoundStmt 0x12d80c250 <col:19, line:70:5>     |   |-IfStmt 0x12d80bf88 <line:55:9, line:63:9>     |   | |-RecoveryExpr 0x12d80be18 <line:55:13, col:25> '_Bool' contains-errors     |   | `-CompoundStmt 0x12d80bf78 <col:54, line:63:9>     |   `-IfStmt 0x12d80c230 <line:65:9, line:69:9>     |     |-BinaryOperator 0x12d80c000 <line:65:13, col:20> 'int' '=='     |     | |-ImplicitCastExpr 0x12d80bfe8 <col:13> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x12d80bfa8 <col:13> 'int' lvalue Var 0x12c827a50 'ret' 'int'     |     | `-IntegerLiteral 0x12d80bfc8 <col:20> 'int' 0     |     `-CompoundStmt 0x12d80c220 <col:23, line:69:9>     `-ReturnStmt 0x12d80c2c8 <line:76:5, col:12>       `-ImplicitCastExpr 0x12d80c2b0 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x12d80c290 <col:12> 'int' lvalue Var 0x12c827a50 'ret' 'int' ","20627":"`-FunctionDecl 0x14f02b538  col:8 implicit used isalnum 'int (int)' extern   |-ParmVarDecl 0x14f02b638 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x14f02b5e0 <<invalid sloc>> Implicit 920   |-NoThrowAttr 0x14f02b6a8 <col:8> Implicit   `-PureAttr 0x14f02b6d0 <col:8> Implicit ","20952":"`-FunctionDecl 0x13e928c38  line:1:1 invalid TIFFReadRawStrip1 'int (int *, int, void *, int, const char *)'   |-ParmVarDecl 0x13e928928 <col:19, col:25> col:25 invalid tif 'int *'   |-ParmVarDecl 0x13e9289a8 <col:30, col:37> col:37 invalid strip 'int'   |-ParmVarDecl 0x13e928a28 <col:44, col:50> col:50 used buf 'void *'   |-ParmVarDecl 0x13e928aa8 <col:55, col:64> col:64 invalid size 'int'   |-ParmVarDecl 0x13e928b28 <line:2:5, col:17> col:17 used module 'const char *'   `-CompoundStmt 0x13e944810 <line:3:1, line:69:1>     |-IfStmt 0x13e944790 <line:10:2, line:67:2> has_else     | |-UnaryOperator 0x13e9422e0 <line:10:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13e9422b8 <col:7, col:19> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13e942278 <col:7> 'int ()' Function 0x13e9421c0 'isMapped' 'int ()'     | |   `-RecoveryExpr 0x13e942298 <col:16> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x13e942ce0 <col:22, line:36:2>     | | |-IfStmt 0x13e942858 <line:13:3, line:18:3>     | | | |-RecoveryExpr 0x13e942498 <line:13:7, col:45> '_Bool' contains-errors     | | | `-CompoundStmt 0x13e942840 <col:48, line:18:3>     | | |   `-CallExpr 0x13e9427a8 <line:14:4, line:16:59> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x13e942598 <line:14:4> 'int ()' Function 0x13e9424e0 'TIFFErrorExt' 'int ()'     | | |     |-CXXDependentScopeMemberExpr 0x13e9425d8 <col:17, col:22> '<dependent type>' contains-errors lvalue ->tif_clientdata     | | |     | `-RecoveryExpr 0x13e9425b8 <col:17> '<dependent type>' contains-errors lvalue     | | |     |-DeclRefExpr 0x13e942620 <col:38> 'const char *' lvalue ParmVar 0x13e928b28 'module' 'const char *'     | | |     |-StringLiteral 0x13e942680 <line:15:8> 'char[4]' lvalue \"STR\"     | | |     |-CStyleCastExpr 0x13e942720 <line:16:8, col:29> 'unsigned long' contains-errors <Dependent>     | | |     | `-CXXDependentScopeMemberExpr 0x13e9426c0 <col:24, col:29> '<dependent type>' contains-errors lvalue ->tif_row     | | |     |   `-RecoveryExpr 0x13e9426a0 <col:24> '<dependent type>' contains-errors lvalue     | | |     `-CStyleCastExpr 0x13e942780 <col:38, col:54> 'unsigned long' contains-errors <Dependent>     | | |       `-RecoveryExpr 0x13e942748 <col:54> '<dependent type>' contains-errors lvalue     | | `-IfStmt 0x13e942cc0 <line:20:3, line:35:3>     | |   |-BinaryOperator 0x13e942a88 <line:20:7, col:13> 'int' contains-errors '!='     | |   | |-RecoveryExpr 0x13e942a68 <col:7> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x13e942a28 <col:13> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x13e942cb0 <col:19, line:35:3>     | `-CompoundStmt 0x13e944778 <line:36:9, line:67:2>     |   `-IfStmt 0x13e9445b0 <line:47:3, line:64:3>     |     |-RecoveryExpr 0x13e942f18 <line:47:7, col:10> '_Bool' contains-errors     |     `-CompoundStmt 0x13e9445a0 <col:16, line:64:3>     `-ReturnStmt 0x13e944800 <line:68:2, col:14>       `-ParenExpr 0x13e9447e0 <col:9, col:14> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13e9447c0 <col:10> '<dependent type>' contains-errors lvalue ","21244":"`-FunctionDecl 0x15780aa18  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x15780ab18 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15780ab80 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x15780abe8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15780aac0 <<invalid sloc>> Implicit 900 ","20464":"`-FunctionDecl 0x15b9281a0  line:1:13 nfs_commit_release 'void (void *)' static   |-ParmVarDecl 0x15b9280d8 <col:32, col:38> col:38 used calldata 'void *'   `-CompoundStmt 0x15b940e48 <line:2:1, line:7:1>     |-DeclStmt 0x15b9284d8 <line:3:2, col:41>     | |-RecordDecl 0x15b928298 <col:2, col:9> col:9 struct nfs_commit_data     | `-VarDecl 0x15b928408 <col:2, col:33> col:26 used data 'struct nfs_commit_data *' cinit     |   `-ImplicitCastExpr 0x15b9284a8 <col:33> 'struct nfs_commit_data *' <BitCast>     |     `-ImplicitCastExpr 0x15b928490 <col:33> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x15b928470 <col:33> 'void *' lvalue ParmVar 0x15b9280d8 'calldata' 'void *'     |-CallExpr 0x15b940c30 <line:5:2, col:39> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x15b940bc8 <col:2, col:24> '<dependent type>' contains-errors lvalue ->completion     | | `-RecoveryExpr 0x15b940ba0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b9284f0 <col:2> 'struct nfs_commit_data *' lvalue Var 0x15b928408 'data' 'struct nfs_commit_data *'     | `-DeclRefExpr 0x15b940c10 <col:35> 'struct nfs_commit_data *' lvalue Var 0x15b928408 'data' 'struct nfs_commit_data *'     `-CallExpr 0x15b940e08 <line:6:2, col:33> 'int'       |-ImplicitCastExpr 0x15b940df0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x15b940d80 <col:2> 'int ()' Function 0x15b940cc8 'nfs_commitdata_release' 'int ()'       `-ImplicitCastExpr 0x15b940e30 <col:25> 'void *' <LValueToRValue>         `-DeclRefExpr 0x15b940da0 <col:25> 'void *' lvalue ParmVar 0x15b9280d8 'calldata' 'void *' ","20583":"`-FunctionDecl 0x1319418b8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x131942800 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x131941960 <<invalid sloc>> Implicit 873 ","20302":"`-FunctionDecl 0x11f80de80  line:1:13 invalid initialize_pointer_field 'void (void *, int *)' static   |-ParmVarDecl 0x11f80dcd8 <col:38, col:44> col:44 used pItem 'void *'   |-ParmVarDecl 0x11f80dda8 <col:51, col:72> col:72 invalid iter 'int *'   `-CompoundStmt 0x11e01eed0 <line:2:1, line:12:1>     `-IfStmt 0x11e01eea0 <line:3:5, line:11:5> has_else       |-BinaryOperator 0x11f80e390 <line:3:9, line:4:38> 'int' contains-errors '||'       | |-BinaryOperator 0x11f80e330 <line:3:9, col:38> 'int' contains-errors '=='       | | |-CallExpr 0x11f80e160 <col:9, col:33> '<dependent type>' contains-errors       | | | |-DeclRefExpr 0x11f80e090 <col:9> 'int ()' Function 0x11f80dfd8 'PB_LTYPE' 'int ()'       | | | `-CXXDependentScopeMemberExpr 0x11f80e118 <col:18, col:29> '<dependent type>' contains-errors lvalue ->type       | | |   `-CXXDependentScopeMemberExpr 0x11f80e0d0 <col:18, col:24> '<dependent type>' contains-errors lvalue ->pos       | | |     `-RecoveryExpr 0x11f80e0b0 <col:18> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x11f80e310 <col:38> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x11f80e370 <line:4:9, col:38> 'int' contains-errors '=='       |   |-CallExpr 0x11f80e290 <col:9, col:33> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x11f80e1c0 <col:9> 'int ()' Function 0x11f80dfd8 'PB_LTYPE' 'int ()'       |   | `-CXXDependentScopeMemberExpr 0x11f80e248 <col:18, col:29> '<dependent type>' contains-errors lvalue ->type       |   |   `-CXXDependentScopeMemberExpr 0x11f80e200 <col:18, col:24> '<dependent type>' contains-errors lvalue ->pos       |   |     `-RecoveryExpr 0x11f80e1e0 <col:18> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x11f80e350 <col:38> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x11e01ebc8 <line:5:5, line:7:5>       | `-BinaryOperator 0x11e01eba8 <line:6:9, col:26> 'void *' contains-errors '='       |   |-UnaryOperator 0x11e01eb70 <col:9, col:18> 'void *' lvalue prefix '*' cannot overflow       |   | `-CStyleCastExpr 0x11e01eb48 <col:10, col:18> 'void **' <BitCast>       |   |   `-ImplicitCastExpr 0x11e01eb30 <col:18> 'void *' <LValueToRValue> part_of_explicit_cast       |   |     `-DeclRefExpr 0x11f80e3b0 <col:18> 'void *' lvalue ParmVar 0x11f80dcd8 'pItem' 'void *'       |   `-RecoveryExpr 0x11e01eb88 <col:26> '<dependent type>' contains-errors lvalue       `-IfStmt 0x11e01ee80 <line:8:10, line:11:5>         |-BinaryOperator 0x11e01ed30 <line:8:14, col:43> 'int' contains-errors '=='         | |-CallExpr 0x11e01ecb0 <col:14, col:38> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x11e01ebe0 <col:14> 'int ()' Function 0x11f80dfd8 'PB_LTYPE' 'int ()'         | | `-CXXDependentScopeMemberExpr 0x11e01ec68 <col:23, col:34> '<dependent type>' contains-errors lvalue ->type         | |   `-CXXDependentScopeMemberExpr 0x11e01ec20 <col:23, col:29> '<dependent type>' contains-errors lvalue ->pos         | |     `-RecoveryExpr 0x11e01ec00 <col:23> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x11e01ed10 <col:43> '<dependent type>' contains-errors lvalue         `-CompoundStmt 0x11e01ee70 <line:9:5, line:11:5> ","20285":"`-FunctionDecl 0x141857780  line:1:13 invalid report_filter_result 'void (enum logcode, const char *, const int *, int, const char *)' static   |-ParmVarDecl 0x1418337f8 <col:34, col:47> col:47 invalid code 'enum logcode'   |-ParmVarDecl 0x141833878 <col:53, col:65> col:65 used name 'const char *'   |-ParmVarDecl 0x141833910 <line:2:6, col:25> col:25 invalid ent 'const int *'   |-ParmVarDecl 0x141833990 <line:3:6, col:10> col:10 used name_flags 'int'   |-ParmVarDecl 0x141857618 <col:22, col:34> col:34 used type 'const char *'   `-CompoundStmt 0x1418596a0 <line:4:1, line:19:1>     `-IfStmt 0x141859680 <line:7:2, line:18:2>       |-CallExpr 0x141857a58 <line:7:6, col:25> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1418579b0 <col:6> 'int ()' Function 0x1418578f8 'DEBUG_GTE' 'int ()'       | |-RecoveryExpr 0x141857a38 <col:16> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x1418579e8 <col:24> 'int' 1       `-CompoundStmt 0x141859658 <col:28, line:18:2>         |-DeclStmt 0x141857e08 <line:8:3, line:9:20>         | `-VarDecl 0x141857bc8 <line:8:3, line:9:19> line:8:16 used actions 'char *[2][2]' static cinit         |   `-InitListExpr 0x141857d30 <line:9:9, col:19> 'char *[2][2]'         |     |-array_filler: ImplicitValueInitExpr 0x141857df8 <<invalid sloc>> 'char *[2]'         |     `-InitListExpr 0x141857d80 <col:11, col:17> 'char *[2]'         |       |-array_filler: ImplicitValueInitExpr 0x141857de0 <<invalid sloc>> 'char *'         |       `-ImplicitCastExpr 0x141857dc0 <col:12> 'char *' <ArrayToPointerDecay>         |         `-StringLiteral 0x141857c70 <col:12> 'char[4]' lvalue \"STR\"         |-DeclStmt 0x141858020 <line:10:3, col:29>         | `-VarDecl 0x141857e38 <col:3, col:28> col:15 used w 'const char *' cinit         |   `-ImplicitCastExpr 0x141858008 <col:19, col:28> 'const char *' <IntegralToPointer>         |     `-CallExpr 0x141857fe8 <col:19, col:28> 'int'         |       `-ImplicitCastExpr 0x141857fd0 <col:19> 'int (*)()' <FunctionToPointerDecay>         |         `-DeclRefExpr 0x141857f80 <col:19> 'int ()' Function 0x141857ec8 'who_am_i' 'int ()'         `-DeclStmt 0x141858308 <line:11:3, line:13:17>           `-VarDecl 0x141858050 <line:11:3, line:13:12> line:11:15 used t 'const char *' cinit             `-ConditionalOperator 0x1418582d8 <col:19, line:13:12> '<dependent type>' contains-errors               |-BinaryOperator 0x141858248 <line:11:19, col:32> '<dependent type>' contains-errors '&'               | |-DeclRefExpr 0x1418580b8 <col:19> 'int' lvalue ParmVar 0x141833990 'name_flags' 'int'               | `-RecoveryExpr 0x141858228 <col:32> '<dependent type>' contains-errors lvalue               |-StringLiteral 0x141858110 <col:48> 'char[4]' lvalue \"STR\"               `-ConditionalOperator 0x1418582a8 <line:12:12, line:13:12> '<dependent type>' contains-errors                 |-BinaryOperator 0x141858288 <line:12:12, col:25> '<dependent type>' contains-errors '&'                 | |-DeclRefExpr 0x141858130 <col:12> 'int' lvalue ParmVar 0x141833990 'name_flags' 'int'                 | `-RecoveryExpr 0x141858268 <col:25> '<dependent type>' contains-errors lvalue                 |-StringLiteral 0x141858188 <col:39> 'char[4]' lvalue \"STR\"                 `-StringLiteral 0x1418581a8 <line:13:12> 'char[4]' lvalue \"STR\" ","20645":"`-FunctionDecl 0x15200df18  line:1:12 invalid opsgdt 'int (int *, int *, const int *)' static   |-ParmVarDecl 0x15200dd28 <col:19, col:25> col:25 invalid a 'int *'   |-ParmVarDecl 0x15200dda8 <col:28, col:33> col:33 referenced invalid data 'int *'   |-ParmVarDecl 0x15200de28 <col:39, col:53> col:53 invalid op 'const int *'   `-CompoundStmt 0x152027a00 <col:57, line:17:1>     |-DeclStmt 0x15200e078 <line:2:2, col:11>     | `-VarDecl 0x15200dff0 <col:2, col:10> col:6 used l 'int' cinit     |   `-IntegerLiteral 0x15200e058 <col:10> 'int' 0     |-SwitchStmt 0x15200e110 <line:3:2, line:15:2>     | |-ImplicitCastExpr 0x15200e0f8 <line:3:10, col:14> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x15200e0b0 <col:10, col:14> '<dependent type>' contains-errors lvalue ->operands_count     | |   `-RecoveryExpr 0x15200e090 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152027990 <col:30, line:15:2>     |   |-CaseStmt 0x15200e158 <line:4:2, line:11:3>     |   | |-IntegerLiteral 0x15200e138 <line:4:7> 'int' 1     |   | `-IfStmt 0x1520278f0 <line:5:3, line:11:3> has_else     |   |   |-BinaryOperator 0x15200e3e0 <line:5:8, col:31> '<dependent type>' contains-errors '&'     |   |   | |-CXXDependentScopeMemberExpr 0x15200e378 <col:8, col:24> '<dependent type>' contains-errors lvalue .type     |   |   | | `-ArraySubscriptExpr 0x15200e358 <col:8, col:22> '<dependent type>' contains-errors lvalue     |   |   | |   |-ImplicitCastExpr 0x15200e340 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |   | |   | `-CXXDependentScopeMemberExpr 0x15200e1a0 <col:8, col:12> '<dependent type>' contains-errors lvalue ->operands     |   |   | |   |   `-RecoveryExpr 0x15200e180 <col:8> '<dependent type>' contains-errors lvalue     |   |   | |   `-IntegerLiteral 0x15200e1e8 <col:21> 'int' 0     |   |   | `-RecoveryExpr 0x15200e3c0 <col:31> '<dependent type>' contains-errors lvalue     |   |   |-CompoundStmt 0x152027868 <col:43, line:9:3>     |   |   | |-BinaryOperator 0x1520274d8 <line:6:4, col:16> '<dependent type>' contains-errors '='     |   |   | | |-ArraySubscriptExpr 0x152027498 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |   | | | |-ImplicitCastExpr 0x152027480 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | | | `-RecoveryExpr 0x152027420 <col:4> '<dependent type>' contains-errors lvalue     |   |   | | | |   `-DeclRefExpr 0x152027400 <col:4> 'int *' lvalue ParmVar 0x15200dda8 'data' 'int *'     |   |   | | | `-UnaryOperator 0x152027468 <col:9, col:10> 'int' postfix '++'     |   |   | | |   `-DeclRefExpr 0x152027448 <col:9> 'int' lvalue Var 0x15200dff0 'l' 'int'     |   |   | | `-IntegerLiteral 0x1520274b8 <col:16> 'int' 15     |   |   | |-BinaryOperator 0x1520275d0 <line:7:4, col:16> '<dependent type>' contains-errors '='     |   |   | | |-ArraySubscriptExpr 0x152027590 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |   | | | |-ImplicitCastExpr 0x152027578 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | | | `-RecoveryExpr 0x152027518 <col:4> '<dependent type>' contains-errors lvalue     |   |   | | | |   `-DeclRefExpr 0x1520274f8 <col:4> 'int *' lvalue ParmVar 0x15200dda8 'data' 'int *'     |   |   | | | `-UnaryOperator 0x152027560 <col:9, col:10> 'int' postfix '++'     |   |   | | |   `-DeclRefExpr 0x152027540 <col:9> 'int' lvalue Var 0x15200dff0 'l' 'int'     |   |   | | `-IntegerLiteral 0x1520275b0 <col:16> 'int' 1     |   |   | `-BinaryOperator 0x152027848 <line:8:4, col:45> '<dependent type>' contains-errors '='     |   |   |   |-ArraySubscriptExpr 0x152027688 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |   |   | |-ImplicitCastExpr 0x152027670 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | | `-RecoveryExpr 0x152027610 <col:4> '<dependent type>' contains-errors lvalue     |   |   |   | |   `-DeclRefExpr 0x1520275f0 <col:4> 'int *' lvalue ParmVar 0x15200dda8 'data' 'int *'     |   |   |   | `-UnaryOperator 0x152027658 <col:9, col:10> 'int' postfix '++'     |   |   |   |   `-DeclRefExpr 0x152027638 <col:9> 'int' lvalue Var 0x15200dff0 'l' 'int'     |   |   |   `-BinaryOperator 0x152027828 <col:16, col:45> '<dependent type>' contains-errors '|'     |   |   |     |-IntegerLiteral 0x1520276a8 <col:16> 'int' 0     |   |   |     `-ArraySubscriptExpr 0x152027808 <col:23, col:45> '<dependent type>' contains-errors lvalue     |   |   |       |-ImplicitCastExpr 0x1520277f0 <col:23, col:39> '<dependent type>' contains-errors <LValueToRValue>     |   |   |       | `-CXXDependentScopeMemberExpr 0x152027788 <col:23, col:39> '<dependent type>' contains-errors lvalue .regs     |   |   |       |   `-ArraySubscriptExpr 0x152027768 <col:23, col:37> '<dependent type>' contains-errors lvalue     |   |   |       |     |-ImplicitCastExpr 0x152027750 <col:23, col:27> '<dependent type>' contains-errors <LValueToRValue>     |   |   |       |     | `-CXXDependentScopeMemberExpr 0x1520276e8 <col:23, col:27> '<dependent type>' contains-errors lvalue ->operands     |   |   |       |     |   `-RecoveryExpr 0x1520276c8 <col:23> '<dependent type>' contains-errors lvalue     |   |   |       |     `-IntegerLiteral 0x152027730 <col:36> 'int' 0     |   |   |       `-IntegerLiteral 0x1520277d0 <col:44> 'int' 0     |   |   `-CompoundStmt 0x1520278d8 <line:9:10, line:11:3>     |   |     `-ReturnStmt 0x1520278c8 <line:10:4, col:12>     |   |       `-UnaryOperator 0x1520278b0 <col:11, col:12> 'int' prefix '-'     |   |         `-IntegerLiteral 0x152027890 <col:12> 'int' 1     |   |-BreakStmt 0x152027920 <line:12:3>     |   `-DefaultStmt 0x152027970 <line:13:2, line:14:11>     |     `-ReturnStmt 0x152027960 <col:3, col:11>     |       `-UnaryOperator 0x152027948 <col:10, col:11> 'int' prefix '-'     |         `-IntegerLiteral 0x152027928 <col:11> 'int' 1     `-ReturnStmt 0x1520279f0 <line:16:2, col:9>       `-ImplicitCastExpr 0x1520279d8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1520279b8 <col:9> 'int' lvalue Var 0x15200dff0 'l' 'int' ","20677":"`-FunctionDecl 0x15400de00  line:1:8 invalid set_type 'void (const int)'   |-ParmVarDecl 0x15400dcf0 <col:17, <invalid sloc>> col:41 invalid 'const int'   `-CompoundStmt 0x1548092a8 <line:2:3, line:16:3>     `-CallExpr 0x15400e160 <line:3:5, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x15400e010 <col:5> 'int ()' Function 0x15400df58 'set_handler' 'int ()'       `-CallExpr 0x15400e140 <col:17, col:36> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x15400e0f8 <col:17, col:23> '<dependent type>' contains-errors lvalue .type_handler           `-RecoveryExpr 0x15400e0d8 <col:17> '<dependent type>' contains-errors lvalue ","20296":"`-FunctionDecl 0x11e80dee8  line:1:1 event_raise 'int (char *, const char *, char *)'   |-ParmVarDecl 0x11e80dcf0 <col:13, col:22> col:22 used action 'char *'   |-ParmVarDecl 0x11e80dd70 <col:30, col:45> col:45 used event 'const char *'   |-ParmVarDecl 0x11e80ddf0 <col:52, col:61> col:61 used ev_data 'char *'   `-CompoundStmt 0x11e829358 <line:2:1, line:30:1>     |-DeclStmt 0x11e80e070 <line:3:1, col:11>     | `-VarDecl 0x11e80e008 <col:1, col:10> col:10 used s 'char *'     `-IfStmt 0x11e829338 <line:4:1, line:28:3>       |-ImplicitCastExpr 0x11e80e0a8 <line:4:5> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x11e80e088 <col:5> 'char *' lvalue ParmVar 0x11e80dcf0 'action' 'char *'       `-CompoundStmt 0x11e829300 <line:5:3, line:28:3>         |-CallExpr 0x11e80e250 <line:6:3, col:18> '<dependent type>' contains-errors         | |-DeclRefExpr 0x11e80e1d0 <col:3> 'int ()' Function 0x11e80e118 'DEBUG' 'int ()'         | `-RecoveryExpr 0x11e80e230 <col:9> '<dependent type>' contains-errors lvalue         |-CallExpr 0x11e828498 <line:7:5, line:9:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x11e80e358 <line:7:5> 'int ()' Function 0x11e80e2a0 'debug_printf' 'int ()'         | |-StringLiteral 0x11e80e3c0 <col:18> 'char[4]' lvalue \"STR\"         | |-DeclRefExpr 0x11e80e3e0 <line:8:7> 'const char *' lvalue ParmVar 0x11e80dd70 'event' 'const char *'         | |-DeclRefExpr 0x11e828400 <line:9:7> 'char *' lvalue ParmVar 0x11e80dcf0 'action' 'char *'         | `-RecoveryExpr 0x11e828478 <col:15> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x11e828550 <line:12:3, col:16> 'char *' '='         | |-DeclRefExpr 0x11e8284f8 <col:3> 'char *' lvalue ParmVar 0x11e80ddf0 'ev_data' 'char *'         | `-ImplicitCastExpr 0x11e828538 <col:16> 'char *' <LValueToRValue>         |   `-DeclRefExpr 0x11e828518 <col:16> 'char *' lvalue ParmVar 0x11e80ddf0 'ev_data' 'char *'         |-IfStmt 0x11e829150 <line:14:3, line:17:51>         | |-BinaryOperator 0x11e828e10 <line:14:7, col:40> 'int' contains-errors '&&'         | | |-UnaryOperator 0x11e828da8 <col:7, col:34> 'int' prefix '!' cannot overflow         | | | `-ParenExpr 0x11e828d88 <col:8, col:34> 'char *'         | | |   `-BinaryOperator 0x11e828d68 <col:9, col:33> 'char *' '='         | | |     |-DeclRefExpr 0x11e828570 <col:9> 'char *' lvalue Var 0x11e80e008 's' 'char *'         | | |     `-ImplicitCastExpr 0x11e828d50 <col:13, col:33> 'char *' <IntegralToPointer>         | | |       `-CallExpr 0x11e828d10 <col:13, col:33> 'int'         | | |         |-ImplicitCastExpr 0x11e828cf8 <col:13> 'int (*)()' <FunctionToPointerDecay>         | | |         | `-DeclRefExpr 0x11e828670 <col:13> 'int ()' Function 0x11e8285b8 'expand_string' 'int ()'         | | |         `-ImplicitCastExpr 0x11e828d38 <col:27> 'char *' <LValueToRValue>         | | |           `-DeclRefExpr 0x11e828690 <col:27> 'char *' lvalue ParmVar 0x11e80dcf0 'action' 'char *'         | | `-UnaryOperator 0x11e828df8 <col:39, col:40> '<dependent type>' contains-errors prefix '*' cannot overflow         | |   `-ImplicitCastExpr 0x11e828de0 <col:40> '<dependent type>' contains-errors <LValueToRValue>         | |     `-RecoveryExpr 0x11e828dc0 <col:40> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x11e829100 <line:15:5, line:17:51> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x11e828f10 <line:15:5> 'int ()' Function 0x11e828e58 'log_write' 'int ()'         |   |-IntegerLiteral 0x11e828f30 <col:15> 'int' 0         |   |-BinaryOperator 0x11e8290a0 <col:18, col:27> '<dependent type>' contains-errors '|'         |   | |-RecoveryExpr 0x11e829060 <col:18> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x11e829080 <col:27> '<dependent type>' contains-errors lvalue         |   |-StringLiteral 0x11e828fa0 <line:16:7> 'char[4]' lvalue \"STR\"         |   |-DeclRefExpr 0x11e828fc0 <line:17:7> 'const char *' lvalue ParmVar 0x11e80dd70 'event' 'const char *'         |   |-RecoveryExpr 0x11e8290c0 <col:14> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x11e8290e0 <col:30> '<dependent type>' contains-errors lvalue         `-IfStmt 0x11e8292e0 <line:22:3, line:27:5>           |-BinaryOperator 0x11e829228 <line:22:7, col:13> 'int' '&&'           | |-ImplicitCastExpr 0x11e8291e0 <col:7> 'char *' <LValueToRValue>           | | `-DeclRefExpr 0x11e829170 <col:7> 'char *' lvalue Var 0x11e80e008 's' 'char *'           | `-ImplicitCastExpr 0x11e829210 <col:12, col:13> 'int' <IntegralCast>           |   `-ImplicitCastExpr 0x11e8291f8 <col:12, col:13> 'char' <LValueToRValue>           |     `-UnaryOperator 0x11e8291c8 <col:12, col:13> 'char' lvalue prefix '*' cannot overflow           |       `-ImplicitCastExpr 0x11e8291b0 <col:13> 'char *' <LValueToRValue>           |         `-DeclRefExpr 0x11e829190 <col:13> 'char *' lvalue Var 0x11e80e008 's' 'char *'           `-CompoundStmt 0x11e8292c8 <line:23:5, line:27:5>             `-ReturnStmt 0x11e8292b8 <line:26:5, col:12>               `-ImplicitCastExpr 0x11e8292a0 <col:12> 'int' <PointerToIntegral>                 `-ImplicitCastExpr 0x11e829288 <col:12> 'char *' <LValueToRValue>                   `-DeclRefExpr 0x11e829268 <col:12> 'char *' lvalue Var 0x11e80e008 's' 'char *' ","20568":"`-FunctionDecl 0x15200df18  line:1:1 invalid read_subpkt 'int (int, int *, int *)'   |-ParmVarDecl 0x15200dcf0 <col:13, col:26> col:26 invalid inp 'int'   |-ParmVarDecl 0x15200dda8 <col:31, col:46> col:46 invalid r_ctx 'int *'   |-ParmVarDecl 0x15200de28 <col:53, col:62> col:62 invalid r_nbytes 'int *'   `-CompoundStmt 0x152028258 <line:2:1, line:54:1>     |-BinaryOperator 0x15200e120 <line:4:2, col:22> '<dependent type>' contains-errors ','     | |-BinaryOperator 0x15200e0e0 <col:2, col:15> '<dependent type>' contains-errors ','     | | |-UnaryExprOrTypeTraitExpr 0x15200e0a0 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | | `-RecoveryExpr 0x15200e080 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15200e0c0 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15200e100 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15200e248 <line:8:2, line:9:10>     | |-BinaryOperator 0x15200e1e0 <line:8:6, col:15> 'int' contains-errors '||'     | | |-UnaryOperator 0x15200e178 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x15200e160 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x15200e140 <col:7> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x15200e1c8 <col:14, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x15200e1b0 <col:15> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x15200e190 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15200e238 <line:9:3, col:10>     |   `-RecoveryExpr 0x15200e218 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152027508 <line:11:2, line:12:26>     | |-RecoveryExpr 0x15200e280 <line:11:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1520274c8 <line:12:3, col:26> 'int'     |   |-ImplicitCastExpr 0x1520274b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x152027400 <col:3> 'int ()' Function 0x15200e348 '_gnutls_write_log' 'int ()'     |   `-ImplicitCastExpr 0x1520274f0 <col:21> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x152027460 <col:21> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x1520275b8 <line:15:2, col:14> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x152027580 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x152027568 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x152027548 <col:3> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x152027598 <col:14> 'int' 0     |-IfStmt 0x152027b78 <line:18:2, line:27:9> has_else     | |-BinaryOperator 0x152027798 <line:18:6, col:11> 'int' contains-errors '=='     | | |-RecoveryExpr 0x152027778 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x152027738 <col:11> 'int' 255     | |-CompoundStmt 0x152027920 <col:16, line:21:2>     | `-IfStmt 0x152027b48 <col:9, line:27:9> has_else     |   |-RecoveryExpr 0x152027970 <line:21:13, col:29> '_Bool' contains-errors     |   |-CompoundStmt 0x152027ae8 <col:34, line:27:2>     |   | `-IfStmt 0x152027a68 <line:24:3, line:25:11>     |   |   |-RecoveryExpr 0x152027a18 <line:24:7, col:13> '_Bool' contains-errors     |   |   `-ReturnStmt 0x152027a58 <line:25:4, col:11>     |   |     `-IntegerLiteral 0x152027a38 <col:11> 'int' 0     |   `-NullStmt 0x152027b40 <line:27:9>     `-IfStmt 0x152027fe0 <line:44:2, line:47:2>       |-RecoveryExpr 0x152027eb0 <line:44:6> '_Bool' contains-errors       `-CompoundStmt 0x152027fd0 <col:10, line:47:2> ","20692":"`-FunctionDecl 0x1281281f8  line:1:1 invalid pgp_erase_card 'int (int *)'   |-ParmVarDecl 0x128128128 <col:16, col:27> col:27 invalid card 'int *'   `-CompoundStmt 0x107009c00 <line:2:1, line:70:1>     |-DeclStmt 0x1281284e8 <line:4:2, line:18:3>     | `-VarDecl 0x128128308 <line:4:2, col:23> col:14 used apdu_hex 'const char *[]'     |-DeclStmt 0x128128580 <line:20:2, col:7>     | `-VarDecl 0x128128518 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x128128650 <line:21:2, col:20>     | `-VarDecl 0x1281285b0 <col:2, col:10> col:6 used r 'int' cinit     |   `-RecoveryExpr 0x128128630 <col:10> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x128141a40 <line:22:2, col:44>     | |-RecordDecl 0x128128668 <col:2, col:9> col:9 struct pgp_priv_data     | `-VarDecl 0x128141800 <col:2, col:43> col:24 used priv 'struct pgp_priv_data *' cinit     |   `-CallExpr 0x128141a00 <col:31, col:43> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1281419c0 <col:31> 'int ()' Function 0x128141908 'DRVDATA' 'int ()'     |     `-RecoveryExpr 0x1281419e0 <col:39> '<dependent type>' contains-errors lvalue     |-CallExpr 0x128141bc0 <line:24:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128141b38 <col:2> 'int ()' Function 0x128141a80 'LOG_FUNC_CALLED' 'int ()'     | `-CXXDependentScopeMemberExpr 0x128141b78 <col:18, col:24> '<dependent type>' contains-errors lvalue ->ctx     |   `-RecoveryExpr 0x128141b58 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128142328 <line:26:2, line:29:2>     | |-RecoveryExpr 0x1281420c0 <line:26:6, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x128142310 <col:43, line:29:2>     |   `-CallExpr 0x1281422d8 <line:27:3, line:28:10> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1281421c0 <line:27:3> 'int ()' Function 0x128142108 'LOG_TEST_RET' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x128142200 <col:16, col:22> '<dependent type>' contains-errors lvalue ->ctx     |     | `-RecoveryExpr 0x1281421e0 <col:16> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x1281422b8 <col:27> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x128142260 <line:28:5> 'char[4]' lvalue \"STR\"     |-SwitchStmt 0x1281423c0 <line:31:2, line:67:2>     | |-ImplicitCastExpr 0x1281423a8 <line:31:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x128142380 <col:10, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x128142348 <col:10> 'struct pgp_priv_data *' contains-errors lvalue Var 0x128141800 'priv' 'struct pgp_priv_data *'     | `-CompoundStmt 0x107009ac0 <col:23, line:67:2>     |   |-ForStmt 0x1070096d0 <line:34:4, line:57:4>     |   | |-BinaryOperator 0x128142440 <line:34:9, col:13> 'int' '='     |   | | |-DeclRefExpr 0x128142400 <col:9> 'int' lvalue Var 0x128128518 'i' 'int'     |   | | `-IntegerLiteral 0x128142420 <col:13> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x128142618 <col:16, col:31> 'int' contains-errors '!='     |   | | |-ArraySubscriptExpr 0x1281425d8 <col:16, col:26> 'const char *' lvalue     |   | | | |-ImplicitCastExpr 0x1281425a8 <col:16> 'const char **' <ArrayToPointerDecay>     |   | | | | `-DeclRefExpr 0x128142460 <col:16> 'const char *[]' lvalue Var 0x128128308 'apdu_hex' 'const char *[]'     |   | | | `-ImplicitCastExpr 0x1281425c0 <col:25> 'int' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x128142480 <col:25> 'int' lvalue Var 0x128128518 'i' 'int'     |   | | `-RecoveryExpr 0x1281425f8 <col:31> '<dependent type>' contains-errors lvalue     |   | |-UnaryOperator 0x128142658 <col:37, col:38> 'int' postfix '++'     |   | | `-DeclRefExpr 0x128142638 <col:37> 'int' lvalue Var 0x128128518 'i' 'int'     |   | `-CompoundStmt 0x1070096a0 <col:42, line:57:4>     |   |   |-CallExpr 0x107008d78 <line:41:5, col:37> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x107008cb0 <col:5> 'int ()' Function 0x128142108 'LOG_TEST_RET' 'int ()'     |   |   | |-CXXDependentScopeMemberExpr 0x107008cf0 <col:18, col:24> '<dependent type>' contains-errors lvalue ->ctx     |   |   | | `-RecoveryExpr 0x107008cd0 <col:18> '<dependent type>' contains-errors lvalue     |   |   | |-DeclRefExpr 0x107008d38 <col:29> 'int' contains-errors lvalue Var 0x1281285b0 'r' 'int'     |   |   | `-StringLiteral 0x107008d58 <col:32> 'char[4]' lvalue \"STR\"     |   |   |-IfStmt 0x1070092a8 <line:45:5, line:48:5>     |   |   | |-ImplicitCastExpr 0x107008f58 <line:45:9> 'int' contains-errors <LValueToRValue>     |   |   | | `-DeclRefExpr 0x107008f38 <col:9> 'int' contains-errors lvalue Var 0x1281285b0 'r' 'int'     |   |   | `-CompoundStmt 0x107009290 <col:12, line:48:5>     |   |   |   `-CallExpr 0x1070090f8 <line:46:6, col:29> '<dependent type>' contains-errors     |   |   |     |-DeclRefExpr 0x107009050 <col:6> 'int ()' Function 0x107008f98 'sc_log' 'int ()'     |   |   |     |-CXXDependentScopeMemberExpr 0x107009090 <col:13, col:19> '<dependent type>' contains-errors lvalue ->ctx     |   |   |     | `-RecoveryExpr 0x107009070 <col:13> '<dependent type>' contains-errors lvalue     |   |   |     `-StringLiteral 0x1070090d8 <col:24> 'char[4]' lvalue \"STR\"     |   |   |-CallExpr 0x107009420 <line:54:5, col:44> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1070092c8 <col:5> 'int ()' Function 0x107008f98 'sc_log' 'int ()'     |   |   | |-CXXDependentScopeMemberExpr 0x107009308 <col:12, col:18> '<dependent type>' contains-errors lvalue ->ctx     |   |   | | `-RecoveryExpr 0x1070092e8 <col:12> '<dependent type>' contains-errors lvalue     |   |   | |-StringLiteral 0x107009350 <col:23> 'char[4]' lvalue \"STR\"     |   |   | |-DeclRefExpr 0x107009370 <col:30> 'int' lvalue Var 0x128128518 'i' 'int'     |   |   | `-ArraySubscriptExpr 0x107009400 <col:33, col:43> 'const char *' lvalue     |   |   |   |-ImplicitCastExpr 0x1070093d0 <col:33> 'const char **' <ArrayToPointerDecay>     |   |   |   | `-DeclRefExpr 0x107009390 <col:33> 'const char *[]' lvalue Var 0x128128308 'apdu_hex' 'const char *[]'     |   |   |   `-ImplicitCastExpr 0x1070093e8 <col:42> 'int' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x1070093b0 <col:42> 'int' lvalue Var 0x128128518 'i' 'int'     |   |   `-CallExpr 0x107009668 <line:56:5, col:37> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1070095a0 <col:5> 'int ()' Function 0x128142108 'LOG_TEST_RET' 'int ()'     |   |     |-CXXDependentScopeMemberExpr 0x1070095e0 <col:18, col:24> '<dependent type>' contains-errors lvalue ->ctx     |   |     | `-RecoveryExpr 0x1070095c0 <col:18> '<dependent type>' contains-errors lvalue     |   |     |-DeclRefExpr 0x107009628 <col:29> 'int' contains-errors lvalue Var 0x1281285b0 'r' 'int'     |   |     `-StringLiteral 0x107009648 <col:32> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x1070099b0 <line:62:4, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1070098e8 <col:4> 'int ()' Function 0x128142108 'LOG_TEST_RET' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x107009928 <col:17, col:23> '<dependent type>' contains-errors lvalue ->ctx     |   | | `-RecoveryExpr 0x107009908 <col:17> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x107009970 <col:28> 'int' contains-errors lvalue Var 0x1281285b0 'r' 'int'     |   | `-StringLiteral 0x107009990 <col:31> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x1070099e8 <line:63:4>     |   `-DefaultStmt 0x107009aa0 <line:64:3, col:10>     |     `-NullStmt 0x107009a98 <col:10>     `-CallExpr 0x107009b98 <line:69:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x107009af0 <col:2> 'int ()' Function 0x107009150 'LOG_FUNC_RETURN' 'int ()'       |-CXXDependentScopeMemberExpr 0x107009b30 <col:18, col:24> '<dependent type>' contains-errors lvalue ->ctx       | `-RecoveryExpr 0x107009b10 <col:18> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x107009b78 <col:29> 'int' contains-errors lvalue Var 0x1281285b0 'r' 'int' ","20838":"`-FunctionDecl 0x1248309f8  line:1:1 invalid ex_write 'int (int *)'   |-ParmVarDecl 0x124830928 <col:10, col:19> col:19 invalid eap 'int *'   `-CompoundStmt 0x124830fb8 <line:2:1, line:7:1>     `-IfStmt 0x124830f88 <line:3:5, line:6:20> has_else       |-CXXDependentScopeMemberExpr 0x124830ac8 <line:3:9, col:14> '<dependent type>' contains-errors lvalue ->usefilter       | `-RecoveryExpr 0x124830aa8 <col:9> '<dependent type>' contains-errors lvalue       |-CallExpr 0x124830dc0 <line:4:2, col:36> '<dependent type>' contains-errors       | |-DeclRefExpr 0x124830c70 <col:2> 'int ()' Function 0x124830bb8 'do_bang' 'int ()'       | |-IntegerLiteral 0x124830c90 <col:10> 'int' 1       | |-RecoveryExpr 0x124830cb0 <col:13> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x124830d60 <col:18> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x124830d80 <col:25> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x124830da0 <col:31> '<dependent type>' contains-errors lvalue       `-CStyleCastExpr 0x124830f60 <line:6:2, col:20> 'void' contains-errors <ToVoid>         `-CallExpr 0x124830f28 <col:8, col:20> '<dependent type>' contains-errors           |-DeclRefExpr 0x124830ee8 <col:8> 'int ()' Function 0x124830e30 'do_write' 'int ()'           `-RecoveryExpr 0x124830f08 <col:17> '<dependent type>' contains-errors lvalue ","20828":"`-FunctionDecl 0x138027438  line:1:1 invalid xfs_ioc_space 'int (struct file *, int *)'   |-ParmVarDecl 0x13800e248 <line:2:2, col:16> col:16 used filp 'struct file *'   |-ParmVarDecl 0x13800e318 <line:3:2, col:18> col:18 referenced invalid bf 'int *'   `-CompoundStmt 0x12f925918 <line:4:1, line:78:1>     |-DeclStmt 0x138027918 <line:5:2, col:41>     | |-RecordDecl 0x1380274f0 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x138027658 <col:2, col:40> col:17 used inode 'struct inode *' cinit     |   `-ImplicitCastExpr 0x1380278e8 <col:25, col:40> 'struct inode *' <IntegralToPointer>     |     `-CallExpr 0x1380278a8 <col:25, col:40> 'int'     |       |-ImplicitCastExpr 0x138027890 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x138027820 <col:25> 'int ()' Function 0x138027768 'file_inode' 'int ()'     |       `-ImplicitCastExpr 0x1380278d0 <col:36> 'struct file *' <LValueToRValue>     |         `-DeclRefExpr 0x138027840 <col:36> 'struct file *' lvalue ParmVar 0x13800e248 'filp' 'struct file *'     |-DeclStmt 0x138027ca8 <line:6:2, col:37>     | |-RecordDecl 0x138027930 <col:2, col:9> col:9 struct xfs_inode     | `-VarDecl 0x138027a98 <col:2, col:36> col:20 used ip 'struct xfs_inode *' cinit     |   `-ImplicitCastExpr 0x138027c78 <col:25, col:36> 'struct xfs_inode *' <IntegralToPointer>     |     `-CallExpr 0x138027c38 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x138027c20 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x138027be0 <col:25> 'int ()' Function 0x138027b28 'XFS_I' 'int ()'     |       `-ImplicitCastExpr 0x138027c60 <col:31> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x138027c00 <col:31> 'struct inode *' lvalue Var 0x138027658 'inode' 'struct inode *'     |-DeclStmt 0x138027e38 <line:7:2, col:21>     | |-RecordDecl 0x138027cc0 <col:2, col:9> col:9 struct iattr     | `-VarDecl 0x138027db8 <col:2, col:16> col:16 referenced invalid iattr 'struct iattr'     |-DeclStmt 0x138028000 <line:8:2, col:52>     | |-EnumDecl 0x138027e50 <col:2, col:7> col:7 xfs_prealloc_flags     | `-VarDecl 0x138027f68 <col:2, col:26> col:26 referenced invalid flags 'enum xfs_prealloc_flags'     |-DeclStmt 0x138028148 <line:9:2, col:53>     | `-VarDecl 0x138028030 <col:2, col:36> col:9 used iolock 'int' cinit     |   `-BinaryOperator 0x138028128 <col:18, col:36> '<dependent type>' contains-errors '|'     |     |-RecoveryExpr 0x1380280e8 <col:18> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x138028108 <col:36> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1380281e0 <line:10:2, col:13>     | `-VarDecl 0x138028178 <col:2, col:8> col:8 used error 'int'     |-IfStmt 0x1380283a0 <line:12:2, line:13:11>     | |-RecoveryExpr 0x1380282a8 <line:12:6, col:44> '_Bool' contains-errors     | `-ReturnStmt 0x138028390 <line:13:3, col:11>     |   `-UnaryOperator 0x138028378 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x138028360 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x138028310 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f922f58 <line:15:2, line:16:11>     | |-RecoveryExpr 0x12f922e60 <line:15:6, col:34> '_Bool' contains-errors     | `-ReturnStmt 0x12f922f48 <line:16:3, col:11>     |   `-UnaryOperator 0x12f922f30 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12f922f18 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12f922ec8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f9235b8 <line:29:2, col:34> 'int' '='     | |-DeclRefExpr 0x12f923420 <col:2> 'int' lvalue Var 0x138028178 'error' 'int'     | `-CallExpr 0x12f923578 <col:10, col:34> 'int'     |   |-ImplicitCastExpr 0x12f923560 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f923520 <col:10> 'int ()' Function 0x12f923468 'mnt_want_write_file' 'int ()'     |   `-ImplicitCastExpr 0x12f9235a0 <col:30> 'struct file *' <LValueToRValue>     |     `-DeclRefExpr 0x12f923540 <col:30> 'struct file *' lvalue ParmVar 0x13800e248 'filp' 'struct file *'     |-IfStmt 0x12f923658 <line:30:2, line:31:10>     | |-ImplicitCastExpr 0x12f9235f8 <line:30:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12f9235d8 <col:6> 'int' lvalue Var 0x138028178 'error' 'int'     | `-ReturnStmt 0x12f923648 <line:31:3, col:10>     |   `-ImplicitCastExpr 0x12f923630 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12f923610 <col:10> 'int' lvalue Var 0x138028178 'error' 'int'     |-CallExpr 0x12f9237d0 <line:33:2, col:22> 'int' contains-errors     | |-ImplicitCastExpr 0x12f9237b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f923758 <col:2> 'int ()' Function 0x12f9236a0 'xfs_ilock' 'int ()'     | |-ImplicitCastExpr 0x12f923800 <col:12> 'struct xfs_inode *' <LValueToRValue>     | | `-DeclRefExpr 0x12f923778 <col:12> 'struct xfs_inode *' lvalue Var 0x138027a98 'ip' 'struct xfs_inode *'     | `-ImplicitCastExpr 0x12f923818 <col:16> 'int' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12f923798 <col:16> 'int' contains-errors lvalue Var 0x138028030 'iolock' 'int'     |-IfStmt 0x12f923a48 <line:35:2, line:36:8>     | |-ImplicitCastExpr 0x12f9239c8 <line:35:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12f9239a8 <col:6> 'int' lvalue Var 0x138028178 'error' 'int'     | `-GotoStmt 0x12f923a30 <line:36:3, col:8> 'out_unlock' 0x12f9239e0     |-CallExpr 0x12f923ba0 <line:37:2, col:22> 'int'     | |-ImplicitCastExpr 0x12f923b88 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f923b48 <col:2> 'int ()' Function 0x12f923a90 'inode_dio_wait' 'int ()'     | `-ImplicitCastExpr 0x12f923bc8 <col:17> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x12f923b68 <col:17> 'struct inode *' lvalue Var 0x138027658 'inode' 'struct inode *'     |-SwitchStmt 0x12f923c60 <line:39:2, line:51:2>     | |-CXXDependentScopeMemberExpr 0x12f923c00 <line:39:10, col:14> '<dependent type>' contains-errors lvalue ->l_whence     | | `-RecoveryExpr 0x12f923be0 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f9241d0 <col:24, line:51:2>     |   |-CaseStmt 0x12f923ca8 <line:40:2, line:41:3>     |   | |-IntegerLiteral 0x12f923c88 <line:40:7> 'int' 0     |   | `-BreakStmt 0x12f923cd0 <line:41:3>     |   |-CaseStmt 0x12f923cf8 <line:42:2, line:43:24>     |   | |-IntegerLiteral 0x12f923cd8 <line:42:7> 'int' 1     |   | `-CompoundAssignOperator 0x12f923e28 <line:43:3, col:24> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-CXXDependentScopeMemberExpr 0x12f923d68 <col:3, col:7> '<dependent type>' contains-errors lvalue ->l_start     |   |   | `-RecoveryExpr 0x12f923d40 <col:3> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x12f923d20 <col:3> 'int *' lvalue ParmVar 0x13800e318 'bf' 'int *'     |   |   `-RecoveryExpr 0x12f923e00 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12f923db0 <col:18> 'struct file *' lvalue ParmVar 0x13800e248 'filp' 'struct file *'     |   |-BreakStmt 0x12f923e58 <line:44:3>     |   |-CaseStmt 0x12f923e80 <line:45:2, line:46:30>     |   | |-IntegerLiteral 0x12f923e60 <line:45:7> 'int' 2     |   | `-CompoundAssignOperator 0x12f924138 <line:46:3, col:30> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-CXXDependentScopeMemberExpr 0x12f923ef0 <col:3, col:7> '<dependent type>' contains-errors lvalue ->l_start     |   |   | `-RecoveryExpr 0x12f923ec8 <col:3> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x12f923ea8 <col:3> 'int *' lvalue ParmVar 0x13800e318 'bf' 'int *'     |   |   `-CallExpr 0x12f9240f8 <col:18, col:30> 'int'     |   |     |-ImplicitCastExpr 0x12f9240e0 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x12f924018 <col:18> 'int ()' Function 0x12f923f60 'XFS_ISIZE' 'int ()'     |   |     `-ImplicitCastExpr 0x12f924120 <col:28> 'struct xfs_inode *' <LValueToRValue>     |   |       `-DeclRefExpr 0x12f924038 <col:28> 'struct xfs_inode *' lvalue Var 0x138027a98 'ip' 'struct xfs_inode *'     |   |-BreakStmt 0x12f924168 <line:47:3>     |   |-DefaultStmt 0x12f924198 <line:48:2, col:9>     |   | `-NullStmt 0x12f924190 <col:9>     |   `-GotoStmt 0x12f9241b8 <line:50:3, col:8> 'out_unlock' 0x12f9239e0     |-IfStmt 0x12f924460 <line:53:2, line:56:2>     | |-BinaryOperator 0x12f9243f0 <line:53:6, col:52> 'int' contains-errors '||'     | | |-BinaryOperator 0x12f9242a0 <col:6, col:20> 'int' contains-errors '<'     | | | |-CXXDependentScopeMemberExpr 0x12f924238 <col:6, col:10> '<dependent type>' contains-errors lvalue ->l_start     | | | | `-RecoveryExpr 0x12f924218 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x12f924280 <col:20> 'int' 0     | | `-BinaryOperator 0x12f9243d0 <col:25, col:52> 'int' contains-errors '>'     | |   |-CXXDependentScopeMemberExpr 0x12f9242e0 <col:25, col:29> '<dependent type>' contains-errors lvalue ->l_start     | |   | `-RecoveryExpr 0x12f9242c0 <col:25> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x12f924388 <col:39, col:52> '<dependent type>' contains-errors lvalue ->s_maxbytes     | |     `-RecoveryExpr 0x12f924360 <col:39, col:46> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12f924328 <col:39> 'struct inode *' lvalue Var 0x138027658 'inode' 'struct inode *'     | `-CompoundStmt 0x12f924448 <col:64, line:56:2>     |   `-GotoStmt 0x12f924430 <line:55:3, col:8> 'out_unlock' 0x12f9239e0     |-IfStmt 0x12f924b50 <line:58:2, line:63:2>     | |-BinaryOperator 0x12f9245f8 <line:58:6, col:32> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x12f9244a0 <col:6, col:10> '<dependent type>' contains-errors lvalue ->l_start     | | | `-RecoveryExpr 0x12f924480 <col:6> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12f9245b8 <col:20, col:32> 'int'     | |   |-ImplicitCastExpr 0x12f9245a0 <col:20> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x12f9244e8 <col:20> 'int ()' Function 0x12f923f60 'XFS_ISIZE' 'int ()'     | |   `-ImplicitCastExpr 0x12f9245e0 <col:30> 'struct xfs_inode *' <LValueToRValue>     | |     `-DeclRefExpr 0x12f924508 <col:30> 'struct xfs_inode *' lvalue Var 0x138027a98 'ip' 'struct xfs_inode *'     | `-CompoundStmt 0x12f924b30 <col:35, line:63:2>     |   |-BinaryOperator 0x12f924aa0 <line:59:3, line:60:35> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12f924618 <line:59:3> 'int' lvalue Var 0x138028178 'error' 'int'     |   | `-CallExpr 0x12f924a60 <col:11, line:60:35> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12f924718 <line:59:11> 'int ()' Function 0x12f924660 'xfs_alloc_file_space' 'int ()'     |   |   |-DeclRefExpr 0x12f924738 <col:32> 'struct xfs_inode *' lvalue Var 0x138027a98 'ip' 'struct xfs_inode *'     |   |   |-CallExpr 0x12f9249a8 <col:36, col:48> 'int'     |   |   | |-ImplicitCastExpr 0x12f924990 <col:36> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x12f924758 <col:36> 'int ()' Function 0x12f923f60 'XFS_ISIZE' 'int ()'     |   |   | `-ImplicitCastExpr 0x12f9249d0 <col:46> 'struct xfs_inode *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x12f924778 <col:46> 'struct xfs_inode *' lvalue Var 0x138027a98 'ip' 'struct xfs_inode *'     |   |   |-BinaryOperator 0x12f924a40 <line:60:5, col:31> '<dependent type>' contains-errors '-'     |   |   | |-CXXDependentScopeMemberExpr 0x12f924810 <col:5, col:9> '<dependent type>' contains-errors lvalue ->l_start     |   |   | | `-RecoveryExpr 0x12f9247f0 <col:5> '<dependent type>' contains-errors lvalue     |   |   | `-CallExpr 0x12f924a00 <col:19, col:31> 'int'     |   |   |   |-ImplicitCastExpr 0x12f9249e8 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x12f924858 <col:19> 'int ()' Function 0x12f923f60 'XFS_ISIZE' 'int ()'     |   |   |   `-ImplicitCastExpr 0x12f924a28 <col:29> 'struct xfs_inode *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x12f924878 <col:29> 'struct xfs_inode *' lvalue Var 0x138027a98 'ip' 'struct xfs_inode *'     |   |   `-IntegerLiteral 0x12f924910 <col:34> 'int' 0     |   `-IfStmt 0x12f924b10 <line:61:3, line:62:9>     |     |-ImplicitCastExpr 0x12f924ae0 <line:61:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x12f924ac0 <col:7> 'int' lvalue Var 0x138028178 'error' 'int'     |     `-GotoStmt 0x12f924af8 <line:62:4, col:9> 'out_unlock' 0x12f9239e0     |-BinaryOperator 0x12f924cf8 <line:66:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f924c48 <col:2, col:8> '<dependent type>' contains-errors lvalue .ia_size     | | `-RecoveryExpr 0x12f924c20 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f924c00 <col:2> 'struct iattr' lvalue Var 0x138027db8 'iattr' 'struct iattr'     | `-CXXDependentScopeMemberExpr 0x12f924cb0 <col:18, col:22> '<dependent type>' contains-errors lvalue ->l_start     |   `-RecoveryExpr 0x12f924c90 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f925340 <line:67:2, line:68:15> 'int' contains-errors '='     | |-DeclRefExpr 0x12f924d18 <line:67:2> 'int' lvalue Var 0x138028178 'error' 'int'     | `-CallExpr 0x12f925308 <col:10, line:68:15> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f924eb8 <line:67:10> 'int ()' Function 0x12f924e00 'xfs_vn_setattr_size' 'int ()'     |   |-CallExpr 0x12f925270 <col:30, col:51> 'int'     |   | |-ImplicitCastExpr 0x12f925258 <col:30> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12f924fb8 <col:30> 'int ()' Function 0x12f924f00 'file_mnt_user_ns' 'int ()'     |   | `-ImplicitCastExpr 0x12f925298 <col:47> 'struct file *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12f924fd8 <col:47> 'struct file *' lvalue ParmVar 0x13800e248 'filp' 'struct file *'     |   |-CallExpr 0x12f9252c8 <col:54, col:70> 'int'     |   | |-ImplicitCastExpr 0x12f9252b0 <col:54> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12f925130 <col:54> 'int ()' Function 0x12f925078 'file_dentry' 'int ()'     |   | `-ImplicitCastExpr 0x12f9252f0 <col:66> 'struct file *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12f925150 <col:66> 'struct file *' lvalue ParmVar 0x13800e248 'filp' 'struct file *'     |   `-UnaryOperator 0x12f9251e8 <line:68:9, col:10> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12f9251c8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f9253b0 <line:69:2, line:70:8>     | |-ImplicitCastExpr 0x12f925380 <line:69:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12f925360 <col:6> 'int' lvalue Var 0x138028178 'error' 'int'     | `-GotoStmt 0x12f925398 <line:70:3, col:8> 'out_unlock' 0x12f9239e0     |-BinaryOperator 0x12f925560 <line:72:2, col:45> 'int' contains-errors '='     | |-DeclRefExpr 0x12f9253d0 <col:2> 'int' lvalue Var 0x138028178 'error' 'int'     | `-CallExpr 0x12f925530 <col:10, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f9254d0 <col:10> 'int ()' Function 0x12f925418 'xfs_update_prealloc_flags' 'int ()'     |   |-DeclRefExpr 0x12f9254f0 <col:36> 'struct xfs_inode *' lvalue Var 0x138027a98 'ip' 'struct xfs_inode *'     |   `-RecoveryExpr 0x12f925510 <col:40> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x12f925738 <line:74:1, line:75:24> 'out_unlock'     | `-CallExpr 0x12f9256d8 <col:2, col:24> 'int' contains-errors     |   |-ImplicitCastExpr 0x12f9256c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f925660 <col:2> 'int ()' Function 0x12f9255a8 'xfs_iunlock' 'int ()'     |   |-ImplicitCastExpr 0x12f925708 <col:14> 'struct xfs_inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x12f925680 <col:14> 'struct xfs_inode *' lvalue Var 0x138027a98 'ip' 'struct xfs_inode *'     |   `-ImplicitCastExpr 0x12f925720 <col:18> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x12f9256a0 <col:18> 'int' contains-errors lvalue Var 0x138028030 'iolock' 'int'     |-CallExpr 0x12f925890 <line:76:2, col:26> 'int'     | |-ImplicitCastExpr 0x12f925878 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f925838 <col:2> 'int ()' Function 0x12f925780 'mnt_drop_write_file' 'int ()'     | `-ImplicitCastExpr 0x12f9258b8 <col:22> 'struct file *' <LValueToRValue>     |   `-DeclRefExpr 0x12f925858 <col:22> 'struct file *' lvalue ParmVar 0x13800e248 'filp' 'struct file *'     `-ReturnStmt 0x12f925908 <line:77:2, col:9>       `-ImplicitCastExpr 0x12f9258f0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12f9258d0 <col:9> 'int' lvalue Var 0x138028178 'error' 'int' ","20514":"`-FunctionDecl 0x12c928468  line:1:12 invalid io_channel_send_full 'int (int *, const void *, int, int *, int)' static   |-ParmVarDecl 0x12c928128 <col:33, col:45> col:45 invalid ioc 'int *'   |-ParmVarDecl 0x12c9281d8 <line:2:33, col:45> col:45 used buf 'const void *'   |-ParmVarDecl 0x12c928258 <col:50, col:57> col:57 invalid len 'int'   |-ParmVarDecl 0x12c9282d8 <line:3:33, col:38> col:38 used fds 'int *'   |-ParmVarDecl 0x12c928358 <col:43, col:50> col:50 invalid nfds 'int'   `-CompoundStmt 0x12d009858 <line:4:1, line:31:1>     |-RecoveryExpr 0x12c928618 <line:5:5, col:21> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x12c9285f8 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x12c9285d8 <col:12> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12c928570 <col:21> 'int' 0     `-WhileStmt 0x12d009838 <line:7:5, line:28:5>       |-BinaryOperator 0x12c9286c0 <line:7:12, col:21> 'int' contains-errors '<'       | |-RecoveryExpr 0x12c9286a0 <col:12> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12c928660 <col:21> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d009818 <col:26, line:28:5>         |-DeclStmt 0x12d009288 <line:9:9, line:10:55>         | |-RecordDecl 0x12c9286e0 <line:9:9, col:16> col:16 struct iovec         | `-VarDecl 0x12d008c00 <col:9, col:22> col:22 invalid iov 'struct iovec'         `-IfStmt 0x12d0097e8 <line:15:9, line:25:9> has_else           |-BinaryOperator 0x12d0095d0 <line:15:13, col:20> 'int' contains-errors '=='           | |-RecoveryExpr 0x12d009590 <col:13> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x12d0095b0 <col:20> '<dependent type>' contains-errors lvalue           |-CompoundStmt 0x12d009708 <col:43, line:22:9>           | |-IfStmt 0x12d009688 <line:16:13, line:18:13>           | | |-RecoveryExpr 0x12d009608 <line:16:17> '<dependent type>' contains-errors lvalue           | | `-CompoundStmt 0x12d009670 <col:25, line:18:13>           | |   `-ReturnStmt 0x12d009660 <line:17:17, col:24>           | |     `-RecoveryExpr 0x12d009640 <col:24> '<dependent type>' contains-errors lvalue           | `-ReturnStmt 0x12d0096f8 <line:21:13, col:21>           |   `-UnaryOperator 0x12d0096e0 <col:20, col:21> 'int' prefix '-'           |     `-IntegerLiteral 0x12d0096c0 <col:21> 'int' 1           `-IfStmt 0x12d0097c8 <line:22:16, line:25:9>             |-RecoveryExpr 0x12d009748 <line:22:20, col:26> '_Bool' contains-errors             `-CompoundStmt 0x12d0097b0 <col:29, line:25:9>               `-ReturnStmt 0x12d0097a0 <line:24:13, col:21>                 `-UnaryOperator 0x12d009788 <col:20, col:21> 'int' prefix '-'                   `-IntegerLiteral 0x12d009768 <col:21> 'int' 1 ","20490":"`-FunctionDecl 0x15782de70  line:1:13 unix_dgram_disconnected 'void (struct sock *, struct sock *)' static   |-ParmVarDecl 0x157815a48 <col:37, col:50> col:50 used sk 'struct sock *'   |-ParmVarDecl 0x157815b38 <col:54, col:67> col:67 used other 'struct sock *'   `-CompoundStmt 0x15782ecf0 <line:2:1, line:13:1>     `-IfStmt 0x15782ecd0 <line:3:2, line:12:2>       |-UnaryOperator 0x15782e160 <line:3:6, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x15782e138 <col:7, col:44> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x15782e0a0 <col:7> 'int ()' Function 0x15782dfe8 'skb_queue_empty' 'int ()'       |   `-UnaryOperator 0x15782e120 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x15782e0f8 <col:24, col:28> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x15782e0c0 <col:24> 'struct sock *' lvalue ParmVar 0x157815a48 'sk' 'struct sock *'       `-CompoundStmt 0x15782eca8 <col:47, line:12:2>         |-CallExpr 0x15782e2f0 <line:4:3, col:40> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15782e258 <col:3> 'int ()' Function 0x15782e1a0 'skb_queue_purge' 'int ()'         | `-UnaryOperator 0x15782e2d8 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x15782e2b0 <col:20, col:24> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x15782e278 <col:20> 'struct sock *' lvalue ParmVar 0x157815a48 'sk' 'struct sock *'         |-CallExpr 0x15782e608 <line:5:3, col:52> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15782e3f8 <col:3> 'int ()' Function 0x15782e340 'wake_up_interruptible_all' 'int ()'         | `-UnaryOperator 0x15782e5f0 <col:29, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x15782e5c8 <col:30, col:43> '<dependent type>' contains-errors lvalue         |     `-CallExpr 0x15782e588 <col:30, col:40> 'int'         |       |-ImplicitCastExpr 0x15782e570 <col:30> 'int (*)()' <FunctionToPointerDecay>         |       | `-DeclRefExpr 0x15782e4f8 <col:30> 'int ()' Function 0x15782e440 'unix_sk' 'int ()'         |       `-ImplicitCastExpr 0x15782e5b0 <col:38> 'struct sock *' <LValueToRValue>         |         `-DeclRefExpr 0x15782e518 <col:38> 'struct sock *' lvalue ParmVar 0x157815a48 'sk' 'struct sock *'         `-IfStmt 0x15782ec88 <line:8:3, line:11:3>           |-BinaryOperator 0x15782eac8 <line:8:7, col:59> 'int' contains-errors '&&'           | |-UnaryOperator 0x15782ea08 <col:7, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow           | | `-CallExpr 0x15782e9d8 <col:8, col:34> '<dependent type>' contains-errors           | |   |-DeclRefExpr 0x15782e710 <col:8> 'int ()' Function 0x15782e658 'sock_flag' 'int ()'           | |   |-DeclRefExpr 0x15782e730 <col:18> 'struct sock *' lvalue ParmVar 0x157815b38 'other' 'struct sock *'           | |   `-RecoveryExpr 0x15782e9b8 <col:25> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x15782eaa8 <col:39, col:59> 'int' '=='           |   |-ImplicitCastExpr 0x15782ea90 <col:39, col:54> 'struct sock *' <IntegralToPointer>           |   | `-CallExpr 0x15782ea38 <col:39, col:54> 'int'           |   |   |-ImplicitCastExpr 0x15782ea20 <col:39> 'int (*)()' <FunctionToPointerDecay>           |   |   | `-DeclRefExpr 0x15782e890 <col:39> 'int ()' Function 0x15782e7d8 'unix_peer' 'int ()'           |   |   `-ImplicitCastExpr 0x15782ea60 <col:49> 'struct sock *' <LValueToRValue>           |   |     `-DeclRefExpr 0x15782e8b0 <col:49> 'struct sock *' lvalue ParmVar 0x157815b38 'other' 'struct sock *'           |   `-ImplicitCastExpr 0x15782ea78 <col:59> 'struct sock *' <LValueToRValue>           |     `-DeclRefExpr 0x15782e928 <col:59> 'struct sock *' lvalue ParmVar 0x157815a48 'sk' 'struct sock *'           `-CompoundStmt 0x15782ec68 <col:63, line:11:3>             |-BinaryOperator 0x15782eba0 <line:9:4, col:20> '<dependent type>' contains-errors '='             | |-RecoveryExpr 0x15782eb20 <col:4, col:11> '<dependent type>' contains-errors lvalue             | | `-DeclRefExpr 0x15782eae8 <col:4> 'struct sock *' lvalue ParmVar 0x157815b38 'other' 'struct sock *'             | `-RecoveryExpr 0x15782eb80 <col:20> '<dependent type>' contains-errors lvalue             `-CallExpr 0x15782ec40 <line:10:4, col:32> '<dependent type>' contains-errors               |-RecoveryExpr 0x15782ebf8 <col:4, col:11> '<dependent type>' contains-errors lvalue               | `-DeclRefExpr 0x15782ebc0 <col:4> 'struct sock *' lvalue ParmVar 0x157815b38 'other' 'struct sock *'               `-DeclRefExpr 0x15782ec20 <col:27> 'struct sock *' lvalue ParmVar 0x157815b38 'other' 'struct sock *' ","20510":"`-FunctionDecl 0x13d8277f0  col:18 implicit used lrint 'long (double)' extern   |-ParmVarDecl 0x13d8278f0 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x13d827898 <<invalid sloc>> Implicit 1121   |-ConstAttr 0x13d827960 <col:18> Implicit   `-NoThrowAttr 0x13d827988 <col:18> Implicit ","21162":"`-FunctionDecl 0x15b128b18  line:1:13 invalid rdp_read_order_capability_set 'int (int *, int, int *)' static   |-ParmVarDecl 0x15b128928 <col:43, col:52> col:52 invalid s 'int *'   |-ParmVarDecl 0x15b1289a8 <col:55, col:62> col:62 invalid length 'int'   |-ParmVarDecl 0x15b128a28 <col:70, col:83> col:83 referenced invalid settings 'int *'   `-CompoundStmt 0x15b143748 <line:2:1, line:55:1>     |-DeclStmt 0x15b128c58 <line:3:2, col:7>     | `-VarDecl 0x15b128bf0 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x15b128d18 <line:10:2, line:11:10>     | |-BinaryOperator 0x15b128cb0 <line:10:6, col:15> 'int' contains-errors '<'     | | |-RecoveryExpr 0x15b128c70 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x15b128c90 <col:15> 'int' 88     | `-ReturnStmt 0x15b128d08 <line:11:3, col:10>     |   `-RecoveryExpr 0x15b128ce8 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b128ef0 <line:13:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b128e90 <col:2> 'int ()' Function 0x15b128dd8 'Stream_Seek' 'int ()'     | |-RecoveryExpr 0x15b128eb0 <col:14> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15b128ed0 <col:17> 'int' 16     |-CallExpr 0x15b142040 <line:14:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142000 <col:2> 'int ()' Function 0x15b128f48 'Stream_Seek_UINT32' 'int ()'     | `-RecoveryExpr 0x15b142020 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b142188 <line:15:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142148 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b142168 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b1421f0 <line:16:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b1421b0 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b1421d0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b142258 <line:17:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142218 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b142238 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b1422c0 <line:18:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142280 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b1422a0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b142328 <line:19:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b1422e8 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b142308 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b1424d8 <line:20:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142430 <col:2> 'int ()' Function 0x15b142378 'Stream_Read_UINT16' 'int ()'     | |-RecoveryExpr 0x15b142450 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15b1424b8 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b1426b8 <line:21:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b1425e8 <col:2> 'int ()' Function 0x15b142530 'Stream_Read' 'int ()'     | |-RecoveryExpr 0x15b142608 <col:14> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x15b142698 <col:17> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15b142640 <col:31> 'int' 32     |-CallExpr 0x15b142730 <line:22:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b1426f0 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b142710 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b142800 <line:23:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142758 <col:2> 'int ()' Function 0x15b142378 'Stream_Read_UINT16' 'int ()'     | |-RecoveryExpr 0x15b142778 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15b1427e0 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b142870 <line:24:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142830 <col:2> 'int ()' Function 0x15b128f48 'Stream_Seek_UINT32' 'int ()'     | `-RecoveryExpr 0x15b142850 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b1428d8 <line:25:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142898 <col:2> 'int ()' Function 0x15b128f48 'Stream_Seek_UINT32' 'int ()'     | `-RecoveryExpr 0x15b1428b8 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b142940 <line:26:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142900 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b142920 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b1429a8 <line:27:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142968 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b142988 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b142a10 <line:28:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b1429d0 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b1429f0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15b142a78 <line:29:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b142a38 <col:2> 'int ()' Function 0x15b142090 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x15b142a58 <col:21> '<dependent type>' contains-errors lvalue     |-ForStmt 0x15b142d30 <line:31:2, line:35:2>     | |-BinaryOperator 0x15b142ae0 <line:31:7, col:11> 'int' '='     | | |-DeclRefExpr 0x15b142aa0 <col:7> 'int' lvalue Var 0x15b128bf0 'i' 'int'     | | `-IntegerLiteral 0x15b142ac0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x15b142b58 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x15b142b40 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15b142b00 <col:14> 'int' lvalue Var 0x15b128bf0 'i' 'int'     | | `-IntegerLiteral 0x15b142b20 <col:18> 'int' 32     | |-UnaryOperator 0x15b142b98 <col:22, col:23> 'int' postfix '++'     | | `-DeclRefExpr 0x15b142b78 <col:22> 'int' lvalue Var 0x15b128bf0 'i' 'int'     | `-CompoundStmt 0x15b142d20 <line:32:2, line:35:2>     |-IfStmt 0x15b142dd8 <line:37:2, line:44:2>     | |-RecoveryExpr 0x15b142d68 <line:37:6, col:19> '_Bool' contains-errors     | `-CompoundStmt 0x15b142dc8 <line:38:2, line:44:2>     `-IfStmt 0x15b143600 <line:46:2, line:49:3> has_else       |-RecoveryExpr 0x15b142e60 <line:46:6, col:40> '_Bool' contains-errors       |-BinaryOperator 0x15b142f30 <line:47:3, col:34> '<dependent type>' contains-errors '='       | |-CXXDependentScopeMemberExpr 0x15b142ec8 <col:3, col:13> '<dependent type>' contains-errors lvalue ->BitmapCacheVersion       | | `-RecoveryExpr 0x15b142ea0 <col:3> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x15b142e80 <col:3> 'int *' lvalue ParmVar 0x15b128a28 'settings' 'int *'       | `-IntegerLiteral 0x15b142f10 <col:34> 'int' 3       `-NullStmt 0x15b142fe0 <line:49:3> ","21103":"`-FunctionDecl 0x120129038  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x120128f58 <col:8> col:8 ConnectionHandlerTest 'int'   |-ParmVarDecl 0x120128ed8 <col:31> col:31 FallbackToWildcardListener 'int'   `-CompoundStmt 0x120144a30 <col:59, line:61:1>     |-RecoveryExpr 0x1201293c0 <line:3:3> '<dependent type>' contains-errors lvalue     `-RecoveryExpr 0x120129410 <line:4:3> '<dependent type>' contains-errors lvalue ","21032":"`-FunctionDecl 0x1579283e0  line:1:13 invalid fts3SqlExec 'void (int *, int *, int, int **)' static   |-ParmVarDecl 0x157928108 <line:2:3, col:8> col:8 used pRC 'int *'   |-ParmVarDecl 0x1579281a0 <line:3:3, col:14> col:14 invalid p 'int *'   |-ParmVarDecl 0x157928220 <line:4:3, col:7> col:7 used eStmt 'int'   |-ParmVarDecl 0x1579282e0 <line:5:3, col:19> col:19 invalid apVal 'int **'   `-CompoundStmt 0x157941ec8 <line:6:2, line:16:1>     |-DeclStmt 0x157928560 <line:8:3, col:9>     | `-VarDecl 0x1579284f8 <col:3, col:7> col:7 used rc 'int'     |-IfStmt 0x1579285f0 <line:9:3, col:14>     | |-ImplicitCastExpr 0x1579285c8 <col:7, col:8> 'int' <LValueToRValue>     | | `-UnaryOperator 0x1579285b0 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x157928598 <col:8> 'int *' <LValueToRValue>     | |     `-DeclRefExpr 0x157928578 <col:8> 'int *' lvalue ParmVar 0x157928108 'pRC' 'int *'     | `-ReturnStmt 0x1579285e0 <col:14>     |-BinaryOperator 0x157941928 <line:10:3, col:43> 'int' contains-errors '='     | |-DeclRefExpr 0x157928610 <col:3> 'int' lvalue Var 0x1579284f8 'rc' 'int'     | `-CallExpr 0x1579418e8 <col:8, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157928790 <col:8> 'int ()' Function 0x1579286d8 'fts3SqlStmt' 'int ()'     |   |-RecoveryExpr 0x1579287b0 <col:20> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x1579287d0 <col:23> 'int' lvalue ParmVar 0x157928220 'eStmt' 'int'     |   |-UnaryOperator 0x1579418d0 <col:30, col:31> 'int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x1579418b0 <col:31> 'int' lvalue ParmVar 0x157928220 'eStmt' 'int'     |   `-RecoveryExpr 0x157941830 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157941e00 <line:11:3, line:14:3>     | |-BinaryOperator 0x1579419c0 <line:11:7, col:11> 'int' contains-errors '=='     | | |-DeclRefExpr 0x157941948 <col:7> 'int' lvalue Var 0x1579284f8 'rc' 'int'     | | `-RecoveryExpr 0x1579419a0 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x157941de0 <col:22, line:14:3>     |   |-CallExpr 0x157941b88 <line:12:5, col:23> 'int'     |   | |-ImplicitCastExpr 0x157941b70 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x157941ac0 <col:5> 'int ()' Function 0x157941a08 'sqlite3_step' 'int ()'     |   | `-ImplicitCastExpr 0x157941bb0 <col:18> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x157941b20 <col:18> 'int' lvalue ParmVar 0x157928220 'eStmt' 'int'     |   `-BinaryOperator 0x157941dc0 <line:13:5, col:29> 'int' '='     |     |-DeclRefExpr 0x157941bc8 <col:5> 'int' lvalue Var 0x1579284f8 'rc' 'int'     |     `-CallExpr 0x157941d80 <col:10, col:29> 'int'     |       |-ImplicitCastExpr 0x157941d68 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x157941cc8 <col:10> 'int ()' Function 0x157941c10 'sqlite3_reset' 'int ()'     |       `-ImplicitCastExpr 0x157941da8 <col:24> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x157941d48 <col:24> 'int' lvalue ParmVar 0x157928220 'eStmt' 'int'     `-BinaryOperator 0x157941ea8 <line:15:3, col:10> 'int' '='       |-UnaryOperator 0x157941e58 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow       | `-ImplicitCastExpr 0x157941e40 <col:4> 'int *' <LValueToRValue>       |   `-DeclRefExpr 0x157941e20 <col:4> 'int *' lvalue ParmVar 0x157928108 'pRC' 'int *'       `-ImplicitCastExpr 0x157941e90 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x157941e70 <col:10> 'int' lvalue Var 0x1579284f8 'rc' 'int' ","20844":"`-FunctionDecl 0x135122958  line:1:6 invalid move_huge_pmd 'int (struct vm_area_struct *, unsigned long, unsigned long, unsigned long, int *, int *, int *)'   |-ParmVarDecl 0x13580e268 <col:20, col:43> col:43 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x13580e2e8 <col:48, col:62> col:62 used old_addr 'unsigned long'   |-ParmVarDecl 0x13580e368 <line:2:5, col:19> col:19 used new_addr 'unsigned long'   |-ParmVarDecl 0x135122600 <col:29, col:43> col:43 used old_end 'unsigned long'   |-ParmVarDecl 0x1351226b8 <line:3:5, col:12> col:12 referenced invalid old_pmd 'int *'   |-ParmVarDecl 0x135122738 <col:21, col:28> col:28 referenced invalid new_pmd 'int *'   |-ParmVarDecl 0x1351227b8 <col:37, col:43> col:43 invalid need_flush 'int *'   `-CompoundStmt 0x135125ab8 <line:4:1, line:49:1>     |-DeclStmt 0x135122d48 <line:7:2, col:35>     | |-RecordDecl 0x135122af8 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x135122c68 <col:2, col:30> col:20 used mm 'struct mm_struct *' cinit     |   `-RecoveryExpr 0x135122d08 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x135122cd0 <col:25> 'struct vm_area_struct *' lvalue ParmVar 0x13580e268 'vma' 'struct vm_area_struct *'     |-IfStmt 0x135124700 <line:16:2, line:19:2>     | |-CallExpr 0x135123368 <line:16:6, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x135123120 <col:6> 'int ()' Function 0x135123068 'WARN_ON' 'int ()'     | | `-UnaryOperator 0x135123350 <col:14, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x135123328 <col:15, col:32> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x135123220 <col:15> 'int ()' Function 0x135123168 'pmd_none' 'int ()'     | |     `-UnaryOperator 0x135123310 <col:24, col:25> '<dependent type>' contains-errors prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x1351232f8 <col:25> '<dependent type>' contains-errors <LValueToRValue>     | |         `-RecoveryExpr 0x135123240 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1351246e8 <col:36, line:19:2>     |   `-CallExpr 0x1351246a8 <line:17:3, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x135123470 <col:3> 'int ()' Function 0x1351233b8 'VM_BUG_ON' 'int ()'     |     `-CallExpr 0x135124680 <col:13, col:36> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x135123570 <col:13> 'int ()' Function 0x1351234b8 'pmd_trans_huge' 'int ()'     |       `-UnaryOperator 0x135124668 <col:28, col:29> '<dependent type>' contains-errors prefix '*' cannot overflow     |         `-ImplicitCastExpr 0x135124650 <col:29> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x135123590 <col:29> '<dependent type>' contains-errors lvalue     `-IfStmt 0x135125a98 <line:23:2, line:47:2>       |-RecoveryExpr 0x135124890 <line:23:6> '_Bool' contains-errors       `-CompoundStmt 0x135125a78 <col:15, line:47:2>         |-CallExpr 0x135125060 <line:30:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x135124ef8 <col:3> 'int ()' Function 0x1351233b8 'VM_BUG_ON' 'int ()'         | `-UnaryOperator 0x135125048 <col:13, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow         |   `-CallExpr 0x135125020 <col:14, col:31> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x135124f18 <col:14> 'int ()' Function 0x135123168 'pmd_none' 'int ()'         |     `-UnaryOperator 0x135125008 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow         |       `-ImplicitCastExpr 0x135124ff0 <col:24> '<dependent type>' contains-errors <LValueToRValue>         |         `-RecoveryExpr 0x135124f38 <col:24> '<dependent type>' contains-errors lvalue         `-IfStmt 0x135125488 <line:32:3, line:36:3>           |-RecoveryExpr 0x1351251a8 <line:32:7, col:51> '_Bool' contains-errors           `-CompoundStmt 0x135125478 <col:54, line:36:3> ","20528":"`-FunctionDecl 0x14c928118  line:1:1 SYSCALL_DEFINE3 'int ()'   `-CompoundStmt 0x14c941608 <line:2:1, line:18:1>     |-DeclStmt 0x14c9287a8 <line:3:2, col:18>     | |-RecordDecl 0x14c928208 <col:2, col:9> col:9 struct path     | `-VarDecl 0x14c928308 <col:2, col:14> col:14 invalid path 'struct path'     |-DeclStmt 0x14c940a68 <line:4:2, col:11>     | `-VarDecl 0x14c940a00 <col:2, col:6> col:6 used error 'int'     |-BinaryOperator 0x14c940ca8 <line:6:2, col:35> 'int' contains-errors '='     | |-DeclRefExpr 0x14c940a80 <col:2> 'int' lvalue Var 0x14c940a00 'error' 'int'     | `-CallExpr 0x14c940c78 <col:10, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c940b98 <col:10> 'int ()' Function 0x14c940ae0 'user_path' 'int ()'     |   |-RecoveryExpr 0x14c940c58 <col:20> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x14c940bf0 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14c940bd0 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c940d68 <line:7:2, line:8:8>     | |-ImplicitCastExpr 0x14c940ce8 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c940cc8 <col:6> 'int' lvalue Var 0x14c940a00 'error' 'int'     | `-GotoStmt 0x14c940d50 <line:8:3, col:8> 'out' 0x14c940d00     |-BinaryOperator 0x14c940f38 <line:9:2, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x14c940d88 <col:2> 'int' lvalue Var 0x14c940a00 'error' 'int'     | `-CallExpr 0x14c940f10 <col:10, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c940e88 <col:10> 'int ()' Function 0x14c940dd0 'mnt_want_write' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14c940ec8 <col:25, col:30> '<dependent type>' contains-errors lvalue .mnt     |     `-RecoveryExpr 0x14c940ea8 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c940ff8 <line:10:2, line:11:8>     | |-ImplicitCastExpr 0x14c940f78 <line:10:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c940f58 <col:6> 'int' lvalue Var 0x14c940a00 'error' 'int'     | `-GotoStmt 0x14c940fe0 <line:11:3, col:8> 'out_release' 0x14c940f90     |-BinaryOperator 0x14c941270 <line:12:2, col:41> 'int' contains-errors '='     | |-DeclRefExpr 0x14c941018 <col:2> 'int' lvalue Var 0x14c940a00 'error' 'int'     | `-CallExpr 0x14c941238 <col:10, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c941118 <col:10> 'int ()' Function 0x14c941060 'chown_common' 'int ()'     |   |-UnaryOperator 0x14c941158 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c941138 <col:24> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14c9411f8 <col:30> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c941218 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c9413f8 <line:13:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c941370 <col:2> 'int ()' Function 0x14c9412b8 'mnt_drop_write' 'int ()'     | `-CXXDependentScopeMemberExpr 0x14c9413b0 <col:17, col:22> '<dependent type>' contains-errors lvalue .mnt     |   `-RecoveryExpr 0x14c941390 <col:17> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x14c941580 <line:14:1, line:15:16> 'out_release'     | `-CallExpr 0x14c941558 <col:2, col:16> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c941500 <col:2> 'int ()' Function 0x14c941448 'path_put' 'int ()'     |   `-UnaryOperator 0x14c941540 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14c941520 <col:12> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x14c9415e8 <line:16:1, line:17:9> 'out'       `-ReturnStmt 0x14c9415d8 <col:2, col:9>         `-ImplicitCastExpr 0x14c9415c0 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x14c9415a0 <col:9> 'int' lvalue Var 0x14c940a00 'error' 'int' ","20408":"`-FunctionDecl 0x158128288  line:1:1 invalid nma_gconf_connection_new 'int (int *, const char *)'   |-ParmVarDecl 0x158128128 <col:27, col:40> col:40 invalid client 'int *'   |-ParmVarDecl 0x1581281a8 <col:48, col:60> col:60 used conf_dir 'const char *'   `-CompoundStmt 0x158142380 <line:2:1, line:20:1>     |-CallExpr 0x1581286a0 <line:6:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1581284d0 <col:2> 'int ()' Function 0x158128418 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x158128610 <col:24, col:47> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1581285d0 <col:24> 'int ()' Function 0x158128518 'GCONF_IS_CLIENT' 'int ()'     | | `-RecoveryExpr 0x1581285f0 <col:41> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x158128680 <col:50> '<dependent type>' contains-errors lvalue     |-CallExpr 0x158141c00 <line:7:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1581286d0 <col:2> 'int ()' Function 0x158128418 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x1581287b0 <col:24, col:36> 'int' contains-errors '!='     | | |-DeclRefExpr 0x1581286f0 <col:24> 'const char *' lvalue ParmVar 0x1581281a8 'conf_dir' 'const char *'     | | `-RecoveryExpr 0x158128790 <col:36> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1581287d0 <col:42> '<dependent type>' contains-errors lvalue     `-IfStmt 0x158142350 <line:11:2, line:17:2> has_else       |-RecoveryExpr 0x158141db8 <line:11:6> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x1581420f0 <col:18, line:14:2>       | `-CallExpr 0x1581420c8 <line:13:3, col:29> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x158142048 <col:3> 'int ()' Function 0x158141f90 'g_object_unref' 'int ()'       |   `-RecoveryExpr 0x1581420a8 <col:19> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x158142338 <line:14:9, line:17:2>         `-CallExpr 0x1581422d8 <line:15:3, col:30> 'int'           |-ImplicitCastExpr 0x1581422c0 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x1581421e8 <col:3> 'int ()' Function 0x158142130 'nm_warning' 'int ()'           |-ImplicitCastExpr 0x158142308 <col:15> 'char *' <ArrayToPointerDecay>           | `-StringLiteral 0x158142250 <col:15> 'char[4]' lvalue \"STR\"           `-ImplicitCastExpr 0x158142320 <col:22> 'const char *' <LValueToRValue>             `-DeclRefExpr 0x158142270 <col:22> 'const char *' lvalue ParmVar 0x1581281a8 'conf_dir' 'const char *' ","20551":"`-FunctionDecl 0x15c8275a0  col:3 implicit used bzero 'void (void *, unsigned long)' extern   |-ParmVarDecl 0x15c8276a0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15c827708 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15c827648 <<invalid sloc>> Implicit 954 ","21150":"`-FunctionDecl 0x15800e358  line:1:5 create_flush_cmd_control 'int (struct f2fs_sb_info *)'   |-ParmVarDecl 0x15800e248 <col:30, col:51> col:51 used sbi 'struct f2fs_sb_info *'   `-CompoundStmt 0x15802ad48 <line:2:1, line:31:1>     |-DeclStmt 0x158026858 <line:4:2, col:31>     | |-RecordDecl 0x158026668 <col:2, col:9> col:9 struct flush_cmd_control     | `-VarDecl 0x1580267d8 <col:2, col:28> col:28 used fcc 'struct flush_cmd_control *'     |-DeclStmt 0x158026910 <line:5:2, col:13>     | `-VarDecl 0x158026888 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x1580268f0 <col:12> 'int' 0     |-IfStmt 0x158026cb8 <line:7:2, line:10:2>     | |-RecoveryExpr 0x158026b08 <line:7:6, col:17> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x158026ac8 <col:6, col:14> 'int'     | |   |-ImplicitCastExpr 0x158026ab0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x158026a40 <col:6> 'int ()' Function 0x158026988 'SM_I' 'int ()'     | |   `-ImplicitCastExpr 0x158026af0 <col:11> 'struct f2fs_sb_info *' <LValueToRValue>     | |     `-DeclRefExpr 0x158026a60 <col:11> 'struct f2fs_sb_info *' lvalue ParmVar 0x15800e248 'sbi' 'struct f2fs_sb_info *'     | `-CompoundStmt 0x158026c98 <col:27, line:10:2>     |   |-BinaryOperator 0x158026c10 <line:8:3, col:20> 'struct flush_cmd_control *' contains-errors '='     |   | |-DeclRefExpr 0x158026b30 <col:3> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     |   | `-RecoveryExpr 0x158026be8 <col:9, col:20> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x158026ba8 <col:9, col:17> 'int'     |   |     |-ImplicitCastExpr 0x158026b90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x158026b50 <col:9> 'int ()' Function 0x158026988 'SM_I' 'int ()'     |   |     `-ImplicitCastExpr 0x158026bd0 <col:14> 'struct f2fs_sb_info *' <LValueToRValue>     |   |       `-DeclRefExpr 0x158026b70 <col:14> 'struct f2fs_sb_info *' lvalue ParmVar 0x15800e248 'sbi' 'struct f2fs_sb_info *'     |   `-GotoStmt 0x158026c80 <line:9:3, col:8> 'init_thread' 0x158026c30     |-IfStmt 0x158026f60 <line:13:2, line:14:11>     | |-UnaryOperator 0x158026ea0 <line:13:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x158026e88 <col:7> 'struct flush_cmd_control *' <LValueToRValue>     | |   `-DeclRefExpr 0x158026e68 <col:7> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     | `-ReturnStmt 0x158026f50 <line:14:3, col:11>     |   `-UnaryOperator 0x158026f38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x158026f20 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x158026f00 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x158027118 <line:15:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158027060 <col:2> 'int ()' Function 0x158026fa8 'atomic_set' 'int ()'     | |-UnaryOperator 0x1580270e0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1580270b8 <col:14, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158027080 <col:14> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     | `-IntegerLiteral 0x1580270f8 <col:33> 'int' 0     |-CallExpr 0x158027200 <line:16:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158027148 <col:2> 'int ()' Function 0x158026fa8 'atomic_set' 'int ()'     | |-UnaryOperator 0x1580271c8 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1580271a0 <col:14, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158027168 <col:14> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     | `-IntegerLiteral 0x1580271e0 <col:33> 'int' 0     |-CallExpr 0x1580273a8 <line:17:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158027310 <col:2> 'int ()' Function 0x158027258 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x158027390 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x158027368 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158027330 <col:23> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     |-CallExpr 0x158027548 <line:18:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1580274b0 <col:2> 'int ()' Function 0x1580273f8 'init_llist_head' 'int ()'     | `-UnaryOperator 0x158027530 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x158027508 <col:19, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1580274d0 <col:19> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     |-BinaryOperator 0x15802a260 <line:19:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15802a218 <col:2, col:13> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1580275c8 <col:2, col:10> 'int'     | |   |-ImplicitCastExpr 0x1580275b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x158027570 <col:2> 'int ()' Function 0x158026988 'SM_I' 'int ()'     | |   `-ImplicitCastExpr 0x15802a200 <col:7> 'struct f2fs_sb_info *' <LValueToRValue>     | |     `-DeclRefExpr 0x158027590 <col:7> 'struct f2fs_sb_info *' lvalue ParmVar 0x15800e248 'sbi' 'struct f2fs_sb_info *'     | `-DeclRefExpr 0x15802a240 <col:24> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     |-LabelStmt 0x15802a6c8 <line:20:1, col:12> 'init_thread'     | `-NullStmt 0x15802a6c0 <col:12>     |-IfStmt 0x15802ace0 <line:23:2, line:28:2>     | |-CallExpr 0x15802a848 <line:23:6, col:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15802a7c8 <col:6> 'int ()' Function 0x15802a710 'IS_ERR' 'int ()'     | | `-RecoveryExpr 0x15802a820 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15802a7e8 <col:13> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     | `-CompoundStmt 0x15802acb8 <col:37, line:28:2>     |   |-BinaryOperator 0x15802aa18 <line:24:3, col:38> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15802a870 <col:3> 'int' lvalue Var 0x158026888 'err' 'int'     |   | `-CallExpr 0x15802a9f0 <col:9, col:38> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15802a970 <col:9> 'int ()' Function 0x15802a8b8 'PTR_ERR' 'int ()'     |   |   `-RecoveryExpr 0x15802a9c8 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15802a990 <col:17> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     |   |-CallExpr 0x15802ab70 <line:25:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x15802ab58 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15802ab18 <col:3> 'int ()' Function 0x15802aa60 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x15802ab98 <col:9> 'struct flush_cmd_control *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15802ab38 <col:9> 'struct flush_cmd_control *' lvalue Var 0x1580267d8 'fcc' 'struct flush_cmd_control *'     |   `-ReturnStmt 0x15802aca8 <line:27:3, col:10>     |     `-ImplicitCastExpr 0x15802ac90 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x15802ac70 <col:10> 'int' lvalue Var 0x158026888 'err' 'int'     `-ReturnStmt 0x15802ad38 <line:30:2, col:9>       `-ImplicitCastExpr 0x15802ad20 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15802ad00 <col:9> 'int' lvalue Var 0x158026888 'err' 'int' ","20797":"`-FunctionDecl 0x11e80df18  line:1:1 invalid new_files_callback 'int (int *, int *, int)'   |-ParmVarDecl 0x11e80dd28 <col:21, col:30> col:30 invalid source_object 'int *'   |-ParmVarDecl 0x11e80dda8 <line:2:7, col:21> col:21 invalid res 'int *'   |-ParmVarDecl 0x11e80de28 <line:3:7, col:16> col:16 invalid user_data 'int'   `-CompoundStmt 0x11e122d38 <line:4:1, line:29:1>     |-IfStmt 0x11e80e3b8 <line:11:2, line:15:2>     | |-BinaryOperator 0x11e80e160 <line:11:6, col:26> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x11e80e0f8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->directory     | | | `-RecoveryExpr 0x11e80e0d8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x11e80e140 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11e80e398 <col:32, line:15:2>     |   |-CallExpr 0x11e80e360 <line:13:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11e80e2e0 <col:3> 'int ()' Function 0x11e80e228 'new_files_state_unref' 'int ()'     |   | `-RecoveryExpr 0x11e80e340 <col:26> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x11e80e388 <line:14:3>     `-IfStmt 0x11e122bf8 <line:21:2, line:24:2>       |-RecoveryExpr 0x11e1229c8 <line:21:6, col:14> '_Bool' contains-errors       `-CompoundStmt 0x11e122be8 <col:20, line:24:2> ","20301":"`-FunctionDecl 0x148140e80  line:1:13 uas_log_cmd_state 'void (struct scsi_cmnd *, const char *, int)' static   |-ParmVarDecl 0x148128a48 <col:31, col:49> col:49 used cmnd 'struct scsi_cmnd *'   |-ParmVarDecl 0x148128ac8 <col:55, col:67> col:67 used prefix 'const char *'   |-ParmVarDecl 0x148128b48 <line:2:10, col:14> col:14 used status 'int'   `-CompoundStmt 0x140009a28 <line:3:1, line:23:1>     |-DeclStmt 0x148141248 <line:4:2, col:46>     | |-RecordDecl 0x148140f88 <col:2, col:9> col:9 struct uas_cmd_info     | `-VarDecl 0x1481410f8 <col:2, col:43> col:23 used ci 'struct uas_cmd_info *' cinit     |   `-ImplicitCastExpr 0x148141218 <col:28, col:43> 'struct uas_cmd_info *' contains-errors <BitCast>     |     `-CStyleCastExpr 0x1481411f0 <col:28, col:43> 'void *' contains-errors <Dependent>     |       `-UnaryOperator 0x1481411c0 <col:36, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x148141198 <col:37, col:43> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x148141160 <col:37> 'struct scsi_cmnd *' lvalue ParmVar 0x148128a48 'cmnd' 'struct scsi_cmnd *'     |-DeclStmt 0x148141420 <line:5:2, col:51>     | `-VarDecl 0x1481412e8 <col:2, col:48> col:23 used cmdinfo 'struct uas_cmd_info *' cinit     |   `-ImplicitCastExpr 0x148141408 <col:33, col:48> 'struct uas_cmd_info *' contains-errors <BitCast>     |     `-CStyleCastExpr 0x1481413e0 <col:33, col:48> 'void *' contains-errors <Dependent>     |       `-UnaryOperator 0x1481413b0 <col:41, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x148141388 <col:42, col:48> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x148141350 <col:42> 'struct scsi_cmnd *' lvalue ParmVar 0x148128a48 'cmnd' 'struct scsi_cmnd *'     `-CallExpr 0x1400099e8 <line:22:2, col:25> 'int'       |-ImplicitCastExpr 0x1400099d0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x140009960 <col:2> 'int ()' Function 0x1400098a8 'scsi_print_command' 'int ()'       `-ImplicitCastExpr 0x140009a10 <col:21> 'struct scsi_cmnd *' <LValueToRValue>         `-DeclRefExpr 0x140009980 <col:21> 'struct scsi_cmnd *' lvalue ParmVar 0x148128a48 'cmnd' 'struct scsi_cmnd *' ","20880":"`-FunctionDecl 0x13092eb40  line:1:13 nfs4_proc_rename_setup 'void (struct rpc_message *, struct inode *)' static   |-ParmVarDecl 0x130916648 <col:36, col:56> col:56 used msg 'struct rpc_message *'   |-ParmVarDecl 0x13092ea28 <col:61, col:75> col:75 used dir 'struct inode *'   `-CompoundStmt 0x13092f720 <line:2:1, line:10:1>     |-DeclStmt 0x13092f038 <line:3:2, col:45>     | |-RecordDecl 0x13092ec40 <col:2, col:9> col:9 struct nfs_server     | `-VarDecl 0x13092eda8 <col:2, col:44> col:21 used server 'struct nfs_server *' cinit     |   `-ImplicitCastExpr 0x13092f008 <col:30, col:44> 'struct nfs_server *' <IntegralToPointer>     |     `-CallExpr 0x13092efc8 <col:30, col:44> 'int'     |       |-ImplicitCastExpr 0x13092efb0 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13092ef40 <col:30> 'int ()' Function 0x13092ee88 'NFS_SERVER' 'int ()'     |       `-ImplicitCastExpr 0x13092eff0 <col:41> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x13092ef60 <col:41> 'struct inode *' lvalue ParmVar 0x13092ea28 'dir' 'struct inode *'     |-DeclStmt 0x13092f298 <line:4:2, col:44>     | |-RecordDecl 0x13092f050 <col:2, col:9> col:9 struct nfs_renameargs     | `-VarDecl 0x13092f1b8 <col:2, col:36> col:25 used arg 'struct nfs_renameargs *' cinit     |   `-RecoveryExpr 0x13092f258 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13092f220 <col:31> 'struct rpc_message *' lvalue ParmVar 0x130916648 'msg' 'struct rpc_message *'     |-DeclStmt 0x13092f4f8 <line:5:2, col:43>     | |-RecordDecl 0x13092f2b0 <col:2, col:9> col:9 struct nfs_renameres     | `-VarDecl 0x13092f418 <col:2, col:35> col:24 used res 'struct nfs_renameres *' cinit     |   `-RecoveryExpr 0x13092f4b8 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13092f480 <col:30> 'struct rpc_message *' lvalue ParmVar 0x130916648 'msg' 'struct rpc_message *'     |-BinaryOperator 0x13092f660 <line:8:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13092f5d8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13092f5a0 <col:2> 'struct nfs_renameargs *' contains-errors lvalue Var 0x13092f1b8 'arg' 'struct nfs_renameargs *'     | `-RecoveryExpr 0x13092f638 <col:17, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13092f600 <col:17> 'struct nfs_server *' lvalue Var 0x13092eda8 'server' 'struct nfs_server *'     `-BinaryOperator 0x13092f700 <line:9:2, col:16> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x13092f6b8 <col:2, col:7> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13092f680 <col:2> 'struct nfs_renameres *' contains-errors lvalue Var 0x13092f418 'res' 'struct nfs_renameres *'       `-DeclRefExpr 0x13092f6e0 <col:16> 'struct nfs_server *' lvalue Var 0x13092eda8 'server' 'struct nfs_server *' ","21206":"`-FunctionDecl 0x14f80de88  line:1:1 invalid _dbus_create_directory 'int (const int *, int *)'   |-ParmVarDecl 0x14f80dcf0 <col:25, col:43> col:43 invalid filename 'const int *'   |-ParmVarDecl 0x14f80dda8 <line:2:25, col:43> col:43 invalid error 'int *'   `-CompoundStmt 0x14f827e08 <line:3:1, line:19:1>     |-DeclStmt 0x14f80dfc0 <line:4:3, col:25>     | `-VarDecl 0x14f80df58 <col:3, col:15> col:15 used filename_c 'const char *'     |-CallExpr 0x14f80e170 <line:6:3, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f80e130 <col:3> 'int ()' Function 0x14f80e078 '_DBUS_ASSERT_ERROR_IS_CLEAR' 'int ()'     | `-RecoveryExpr 0x14f80e150 <col:32> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f80e300 <line:8:3, col:53> 'const char *' contains-errors '='     | |-DeclRefExpr 0x14f80e198 <col:3> 'const char *' lvalue Var 0x14f80df58 'filename_c' 'const char *'     | `-CallExpr 0x14f80e2d8 <col:16, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f80e298 <col:16> 'int ()' Function 0x14f80e1e0 '_dbus_string_get_const_data' 'int ()'     |   `-RecoveryExpr 0x14f80e2b8 <col:45> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14f827dd8 <line:10:3, line:18:12> has_else       |-BinaryOperator 0x14f827910 <line:10:7, col:34> 'int' '<'       | |-CallExpr 0x14f8278a8 <col:7, col:30> 'int'       | | |-ImplicitCastExpr 0x14f827890 <col:7> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x14f827800 <col:7> 'int ()' Function 0x14f80e348 'mkdir' 'int ()'       | | |-ImplicitCastExpr 0x14f8278d8 <col:14> 'const char *' <LValueToRValue>       | | | `-DeclRefExpr 0x14f827820 <col:14> 'const char *' lvalue Var 0x14f80df58 'filename_c' 'const char *'       | | `-IntegerLiteral 0x14f827840 <col:26> 'int' 448       | `-IntegerLiteral 0x14f8278f0 <col:34> 'int' 0       |-CompoundStmt 0x14f827d70 <line:11:5, line:16:5>       | |-CallExpr 0x14f827ce0 <line:12:7, line:14:57> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x14f827a10 <line:12:7> 'int ()' Function 0x14f827958 'dbus_set_error' 'int ()'       | | |-RecoveryExpr 0x14f827a30 <col:23> '<dependent type>' contains-errors lvalue       | | |-RecoveryExpr 0x14f827c78 <col:30> '<dependent type>' contains-errors lvalue       | | |-StringLiteral 0x14f827ab0 <line:13:23> 'char[4]' lvalue \"STR\"       | | |-DeclRefExpr 0x14f827ad0 <line:14:23> 'const char *' lvalue Var 0x14f80df58 'filename_c' 'const char *'       | | `-CallExpr 0x14f827cb8 <col:35, col:56> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x14f827bd0 <col:35> 'int ()' Function 0x14f827b18 '_dbus_strerror' 'int ()'       | |   `-RecoveryExpr 0x14f827c98 <col:51> '<dependent type>' contains-errors lvalue       | `-ReturnStmt 0x14f827d60 <line:15:7, col:14>       |   `-RecoveryExpr 0x14f827d40 <col:14> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x14f827dc8 <line:18:5, col:12>         `-RecoveryExpr 0x14f827da8 <col:12> '<dependent type>' contains-errors lvalue ","20993":"`-FunctionDecl 0x15a8baba8  line:1:12 invalid dxtory_decode_v1_420 'int (int *, int *, const int *, int)' static   |-ParmVarDecl 0x15a8ba928 <col:33, col:49> col:49 referenced invalid avctx 'int *'   |-ParmVarDecl 0x15a8ba9a8 <col:56, col:65> col:65 invalid pic 'int *'   |-ParmVarDecl 0x15a8baa28 <line:2:33, col:48> col:48 referenced invalid src 'const int *'   |-ParmVarDecl 0x15a8baaa8 <col:53, col:57> col:57 used src_size 'int'   `-CompoundStmt 0x15a8d67b0 <line:3:1, line:36:1>     |-DeclStmt 0x15a8bad88 <line:4:5, col:13>     | |-VarDecl 0x15a8bac88 <col:5, col:9> col:9 used h 'int'     | `-VarDecl 0x15a8bad08 <col:5, col:12> col:12 used w 'int'     |-DeclStmt 0x15a8baf10 <line:6:5, col:12>     | `-VarDecl 0x15a8baea8 <col:5, col:9> col:9 used ret 'int'     |-IfStmt 0x15a8d4818 <line:8:5, line:11:5>     | |-BinaryOperator 0x15a8d44e8 <line:8:9, col:55> 'int' contains-errors '<'     | | |-DeclRefExpr 0x15a8baf28 <col:9> 'int' lvalue ParmVar 0x15a8baaa8 'src_size' 'int'     | | `-BinaryOperator 0x15a8d44c8 <col:20, col:55> '<dependent type>' contains-errors '\/'     | |   |-BinaryOperator 0x15a8d4488 <col:20, col:51> '<dependent type>' contains-errors '*'     | |   | |-BinaryOperator 0x15a8d4448 <col:20, col:42> '<dependent type>' contains-errors '*'     | |   | | |-CXXDependentScopeMemberExpr 0x15a8baf68 <col:20, col:27> '<dependent type>' contains-errors lvalue ->width     | |   | | | `-RecoveryExpr 0x15a8baf48 <col:20> '<dependent type>' contains-errors lvalue     | |   | | `-CXXDependentScopeMemberExpr 0x15a8d4400 <col:35, col:42> '<dependent type>' contains-errors lvalue ->height     | |   | |   `-RecoveryExpr 0x15a8bafb0 <col:35> '<dependent type>' contains-errors lvalue     | |   | `-IntegerLiteral 0x15a8d4468 <col:51> 'int' 3     | |   `-IntegerLiteral 0x15a8d44a8 <col:55> 'int' 2     | `-CompoundStmt 0x15a8d47f8 <col:58, line:11:5>     |   |-CallExpr 0x15a8d4778 <line:9:9, col:42> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a8d4660 <col:9> 'int ()' Function 0x15a8d45a8 'av_log' 'int ()'     |   | |-RecoveryExpr 0x15a8d4680 <col:16> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x15a8d4758 <col:23> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x15a8d4700 <col:37> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x15a8d47e8 <line:10:9, col:16>     |     `-RecoveryExpr 0x15a8d47c8 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15a8d4920 <line:13:5, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a8d4880 <col:5, col:12> '<dependent type>' contains-errors lvalue ->pix_fmt     | | `-RecoveryExpr 0x15a8d4858 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a8d4838 <col:5> 'int *' lvalue ParmVar 0x15a8ba928 'avctx' 'int *'     | `-RecoveryExpr 0x15a8d4900 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a8d4bc0 <line:14:5, line:15:16>     | |-BinaryOperator 0x15a8d4b58 <line:14:9, col:48> 'int' contains-errors '<'     | | |-ParenExpr 0x15a8d4b18 <col:9, col:44> 'int' contains-errors     | | | `-BinaryOperator 0x15a8d4af8 <col:10, col:43> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x15a8d4940 <col:10> 'int' lvalue Var 0x15a8baea8 'ret' 'int'     | | |   `-CallExpr 0x15a8d4ac0 <col:16, col:43> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x15a8d4a40 <col:16> 'int ()' Function 0x15a8d4988 'ff_get_buffer' 'int ()'     | | |     |-RecoveryExpr 0x15a8d4a60 <col:30> '<dependent type>' contains-errors lvalue     | | |     |-RecoveryExpr 0x15a8d4a80 <col:37> '<dependent type>' contains-errors lvalue     | | |     `-IntegerLiteral 0x15a8d4aa0 <col:42> 'int' 0     | | `-IntegerLiteral 0x15a8d4b38 <col:48> 'int' 0     | `-ReturnStmt 0x15a8d4bb0 <line:15:9, col:16>     |   `-ImplicitCastExpr 0x15a8d4b98 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15a8d4b78 <col:16> 'int' lvalue Var 0x15a8baea8 'ret' 'int'     |-ForStmt 0x15a8d6748 <line:21:5, line:33:5>     | |-BinaryOperator 0x15a8d5000 <line:21:10, col:14> 'int' '='     | | |-DeclRefExpr 0x15a8d4fc0 <col:10> 'int' lvalue Var 0x15a8bac88 'h' 'int'     | | `-IntegerLiteral 0x15a8d4fe0 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x15a8d50a8 <col:17, col:28> 'int' contains-errors '<'     | | |-DeclRefExpr 0x15a8d5020 <col:17> 'int' lvalue Var 0x15a8bac88 'h' 'int'     | | `-CXXDependentScopeMemberExpr 0x15a8d5060 <col:21, col:28> '<dependent type>' contains-errors lvalue ->height     | |   `-RecoveryExpr 0x15a8d5040 <col:21> '<dependent type>' contains-errors lvalue     | |-CompoundAssignOperator 0x15a8d5108 <col:36, col:41> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | |-DeclRefExpr 0x15a8d50c8 <col:36> 'int' lvalue Var 0x15a8bac88 'h' 'int'     | | `-IntegerLiteral 0x15a8d50e8 <col:41> 'int' 2     | `-CompoundStmt 0x15a8d6730 <col:44, line:33:5>     |   `-ForStmt 0x15a8d6378 <line:22:9, line:28:9>     |     |-BinaryOperator 0x15a8d5178 <line:22:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x15a8d5138 <col:14> 'int' lvalue Var 0x15a8bad08 'w' 'int'     |     | `-IntegerLiteral 0x15a8d5158 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x15a8d5220 <col:21, col:32> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x15a8d5198 <col:21> 'int' lvalue Var 0x15a8bad08 'w' 'int'     |     | `-CXXDependentScopeMemberExpr 0x15a8d51d8 <col:25, col:32> '<dependent type>' contains-errors lvalue ->width     |     |   `-RecoveryExpr 0x15a8d51b8 <col:25> '<dependent type>' contains-errors lvalue     |     |-CompoundAssignOperator 0x15a8d5280 <col:39, col:44> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     | |-DeclRefExpr 0x15a8d5240 <col:39> 'int' lvalue Var 0x15a8bad08 'w' 'int'     |     | `-IntegerLiteral 0x15a8d5260 <col:44> 'int' 2     |     `-CompoundStmt 0x15a8d6350 <col:47, line:28:9>     |       |-CallExpr 0x15a8d5eb0 <line:23:13, col:34> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x15a8d5390 <col:13> 'int ()' Function 0x15a8d52d8 'AV_COPY16' 'int ()'     |       | |-BinaryOperator 0x15a8d5e90 <col:23, col:28> '<dependent type>' contains-errors '+'     |       | | |-RecoveryExpr 0x15a8d5e70 <col:23> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x15a8d53c8 <col:28> 'int' lvalue Var 0x15a8bad08 'w' 'int'     |       | `-RecoveryExpr 0x15a8d5e20 <col:31> '<dependent type>' contains-errors lvalue     |       |-CallExpr 0x15a8d6028 <line:24:13, col:38> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x15a8d5ee0 <col:13> 'int ()' Function 0x15a8d52d8 'AV_COPY16' 'int ()'     |       | |-BinaryOperator 0x15a8d6008 <col:23, col:28> '<dependent type>' contains-errors '+'     |       | | |-RecoveryExpr 0x15a8d5fe8 <col:23> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x15a8d5f18 <col:28> 'int' lvalue Var 0x15a8bad08 'w' 'int'     |       | `-BinaryOperator 0x15a8d5f98 <col:31, col:37> '<dependent type>' contains-errors '+'     |       |   |-RecoveryExpr 0x15a8d5f58 <col:31> '<dependent type>' contains-errors lvalue     |       |   `-IntegerLiteral 0x15a8d5f78 <col:37> 'int' 2     |       `-CompoundAssignOperator 0x15a8d6320 <line:27:13, col:20> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |         |-RecoveryExpr 0x15a8d62d8 <col:13> '<dependent type>' contains-errors lvalue     |         | `-DeclRefExpr 0x15a8d62b8 <col:13> 'const int *' lvalue ParmVar 0x15a8baa28 'src' 'const int *'     |         `-IntegerLiteral 0x15a8d6300 <col:20> 'int' 6     `-ReturnStmt 0x15a8d67a0 <line:35:5, col:12>       `-IntegerLiteral 0x15a8d6780 <col:12> 'int' 0 ","21057":"`-FunctionDecl 0x1359281c8  line:1:1 referenced invalid SProcRecordCreateContext 'int (int)'   |-ParmVarDecl 0x1359280f0 <col:26, col:36> col:36 invalid client 'int'   `-CompoundStmt 0x135941cc8 <line:2:1, line:11:1>     |-CallExpr 0x135928470 <line:3:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359283d0 <col:5> 'int ()' Function 0x135928318 'REQUEST' 'int ()'     | `-RecoveryExpr 0x135928450 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x135928518 <line:4:5, col:15>     | `-VarDecl 0x1359284b0 <col:5, col:9> col:9 used status 'int'     |-CallExpr 0x135928750 <line:6:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135928610 <col:5> 'int ()' Function 0x135928558 'swaps' 'int ()'     | `-UnaryOperator 0x135928738 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1359286f0 <col:12, col:19> '<dependent type>' contains-errors lvalue ->length     |     `-RecoveryExpr 0x1359286d0 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135941958 <line:7:5, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1359418b8 <col:5> 'int ()' Function 0x135941800 'REQUEST_AT_LEAST_SIZE' 'int ()'     | `-RecoveryExpr 0x135941938 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x135941b50 <line:8:5, line:9:16>     | |-RecoveryExpr 0x135941ae8 <line:8:9, col:58> '_Bool' contains-errors     | `-ReturnStmt 0x135941b40 <line:9:9, col:16>     |   `-ImplicitCastExpr 0x135941b28 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x135941b08 <col:16> 'int' lvalue Var 0x1359284b0 'status' 'int'     `-ReturnStmt 0x135941cb8 <line:10:5, col:42>       `-CallExpr 0x135941c90 <col:12, col:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x135941c50 <col:12> 'int ()' Function 0x135941b98 'ProcRecordCreateContext' 'int ()'         `-RecoveryExpr 0x135941c70 <col:36> '<dependent type>' contains-errors lvalue ","21143":"`-FunctionDecl 0x14e927f50  line:1:13 invalid phar_do_404 'void (int *, char *, int, char *, int, char *, int)' static   |-ParmVarDecl 0x14e927b28 <col:25, col:44> col:44 invalid phar 'int *'   |-ParmVarDecl 0x14e927ba8 <col:50, col:56> col:56 used fname 'char *'   |-ParmVarDecl 0x14e927c28 <col:63, col:67> col:67 fname_len 'int'   |-ParmVarDecl 0x14e927ca8 <col:78, col:84> col:84 used f404 'char *'   |-ParmVarDecl 0x14e927d28 <col:90, col:94> col:94 used f404_len 'int'   |-ParmVarDecl 0x14e927da8 <col:104, col:110> col:110 used entry 'char *'   |-ParmVarDecl 0x14e927e28 <col:117, col:121> col:121 used entry_len 'int'   `-CompoundStmt 0x14e941cb8 <line:2:1, line:23:1>     |-IfStmt 0x14e9415b8 <line:6:2, line:13:2>     | |-BinaryOperator 0x14e928088 <line:6:6, col:14> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x14e928048 <col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14e928068 <col:14> 'int' lvalue ParmVar 0x14e927d28 'f404_len' 'int'     | `-CompoundStmt 0x14e9415a0 <col:24, line:13:2>     |   `-IfStmt 0x14e941580 <line:9:3, line:12:3>     |     |-RecoveryExpr 0x14e9412d0 <line:9:7> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x14e941568 <col:13, line:12:3>     |       `-ReturnStmt 0x14e941558 <line:11:4>     |-BinaryOperator 0x14e941ae8 <line:20:2, col:20> 'int' '-'     | |-CallExpr 0x14e941a88 <col:2, col:16> 'int'     | | |-ImplicitCastExpr 0x14e941a70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14e9419f8 <col:2> 'int ()' Function 0x14e941940 'PHPWRITE' 'int ()'     | | `-ImplicitCastExpr 0x14e941ab0 <col:11> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x14e941a18 <col:11> 'char[4]' lvalue \"STR\"     | `-IntegerLiteral 0x14e941ac8 <col:20> 'int' 1     |-CallExpr 0x14e941b80 <line:21:2, col:27> 'int'     | |-ImplicitCastExpr 0x14e941b68 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14e941b08 <col:2> 'int ()' Function 0x14e941940 'PHPWRITE' 'int ()'     | |-ImplicitCastExpr 0x14e941bb0 <col:11> 'char *' <LValueToRValue>     | | `-DeclRefExpr 0x14e941b28 <col:11> 'char *' lvalue ParmVar 0x14e927da8 'entry' 'char *'     | `-ImplicitCastExpr 0x14e941bc8 <col:18> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x14e941b48 <col:18> 'int' lvalue ParmVar 0x14e927e28 'entry_len' 'int'     `-BinaryOperator 0x14e941c98 <line:22:2, col:20> 'int' '-'       |-CallExpr 0x14e941c38 <col:2, col:16> 'int'       | |-ImplicitCastExpr 0x14e941c20 <col:2> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x14e941be0 <col:2> 'int ()' Function 0x14e941940 'PHPWRITE' 'int ()'       | `-ImplicitCastExpr 0x14e941c60 <col:11> 'char *' <ArrayToPointerDecay>       |   `-StringLiteral 0x14e941c00 <col:11> 'char[4]' lvalue \"STR\"       `-IntegerLiteral 0x14e941c78 <col:20> 'int' 1 ","20864":"`-FunctionDecl 0x142128288  line:1:8 invalid tfrf_box_read 'int (int *, int *)'   |-ParmVarDecl 0x142128128 <col:22, col:30> col:30 invalid s 'int *'   |-ParmVarDecl 0x1421281a8 <col:33, col:47> col:47 invalid bs 'int *'   `-CompoundStmt 0x1428093f8 <line:2:1, line:24:1>     `-CallExpr 0x142128578 <line:5:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x1421284d0 <col:2> 'int ()' Function 0x142128418 'ISOM_DECREASE_SIZE' 'int ()'       |-RecoveryExpr 0x142128558 <col:21> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x142128508 <col:26> 'int' 5 ","20946":"`-FunctionDecl 0x152008418  line:1:9 invalid sssctl_logs_fetch 'int (struct sss_cmdline *, struct sss_tool_ctx *, void *)'   |-ParmVarDecl 0x151928668 <col:27, col:47> col:47 used cmdline 'struct sss_cmdline *'   |-ParmVarDecl 0x152008258 <line:2:27, col:48> col:48 used tool_ctx 'struct sss_tool_ctx *'   |-ParmVarDecl 0x1520082d8 <line:3:27, col:33> col:33 pvt 'void *'   `-CompoundStmt 0x15200af40 <line:4:1, line:30:1>     |-DeclStmt 0x152008558 <line:5:5, col:21>     | `-VarDecl 0x1520084f0 <col:5, col:17> col:17 used file 'const char *'     |-DeclStmt 0x1520085f0 <line:6:5, col:20>     | `-VarDecl 0x152008588 <col:5, col:17> col:17 used cmd 'const char *'     |-IfStmt 0x152008c10 <line:12:5, line:15:5>     | |-BinaryOperator 0x1520089d0 <line:12:9, col:16> 'int' contains-errors '!='     | | |-RecoveryExpr 0x152008990 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1520089b0 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152008bf0 <col:21, line:15:5>     |   |-CallExpr 0x152008b78 <line:13:9, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152008ad0 <col:9> 'int ()' Function 0x152008a18 'DEBUG' 'int ()'     |   | |-RecoveryExpr 0x152008b58 <col:15> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x152008b08 <col:36> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x152008be0 <line:14:9, col:16>     |     `-RecoveryExpr 0x152008bc0 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152008e88 <line:17:5, col:59> 'const char *' contains-errors '='     | |-DeclRefExpr 0x152008c30 <col:5> 'const char *' lvalue Var 0x152008588 'cmd' 'const char *'     | `-CallExpr 0x152008e48 <col:11, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152008d30 <col:11> 'int ()' Function 0x152008c78 'talloc_asprintf' 'int ()'     |   |-DeclRefExpr 0x152008d50 <col:27> 'struct sss_tool_ctx *' lvalue ParmVar 0x152008258 'tool_ctx' 'struct sss_tool_ctx *'     |   |-StringLiteral 0x152008d70 <col:37> 'char[4]' lvalue \"STR\"     |   |-DeclRefExpr 0x152008d90 <col:44> 'const char *' lvalue Var 0x1520084f0 'file' 'const char *'     |   `-RecoveryExpr 0x152008e28 <col:50> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152009100 <line:18:5, line:20:5>     | |-BinaryOperator 0x152008f20 <line:18:9, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x152008ea8 <col:9> 'const char *' lvalue Var 0x152008588 'cmd' 'const char *'     | | `-RecoveryExpr 0x152008f00 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1520090e8 <col:22, line:20:5>     |   `-CallExpr 0x1520090a8 <line:19:9, col:20> 'int'     |     |-ImplicitCastExpr 0x152009090 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x152009020 <col:9> 'int ()' Function 0x152008f68 'ERROR' 'int ()'     |     `-ImplicitCastExpr 0x1520090d0 <col:15> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x152009040 <col:15> 'char[4]' lvalue \"STR\"     |-CallExpr 0x15200ac78 <line:22:5, col:22> 'int'     | |-ImplicitCastExpr 0x15200ac60 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15200ac00 <col:5> 'int ()' Function 0x152009148 'PRINT' 'int ()'     | |-ImplicitCastExpr 0x15200aca8 <col:11> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x15200ac20 <col:11> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x15200acc0 <col:18> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x15200ac40 <col:18> 'const char *' lvalue Var 0x1520084f0 'file' 'const char *'     `-IfStmt 0x15200af20 <line:24:5, line:27:5>       |-RecoveryExpr 0x15200ae50 <line:24:9, col:16> '_Bool' contains-errors       `-CompoundStmt 0x15200af08 <col:21, line:27:5>         `-CallExpr 0x15200aec8 <line:25:9, col:20> 'int'           |-ImplicitCastExpr 0x15200aeb0 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x15200ae70 <col:9> 'int ()' Function 0x152008f68 'ERROR' 'int ()'           `-ImplicitCastExpr 0x15200aef0 <col:15> 'char *' <ArrayToPointerDecay>             `-StringLiteral 0x15200ae90 <col:15> 'char[4]' lvalue \"STR\" ","20777":"`-FunctionDecl 0x150027670  col:30 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x150027770 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x150027718 <<invalid sloc>> Implicit 902 ","20605":"`-FunctionDecl 0x154128318  line:1:1 invalid alt_merge_opt_exact 'int (int *, int *, int *)'   |-ParmVarDecl 0x154128128 <col:21, col:31> col:31 referenced invalid to 'int *'   |-ParmVarDecl 0x1541281a8 <col:35, col:45> col:45 invalid add 'int *'   |-ParmVarDecl 0x154128228 <col:50, col:58> col:58 invalid env 'int *'   `-CompoundStmt 0x1541431c8 <line:2:1, line:34:1>     |-DeclStmt 0x154128578 <line:3:3, col:16>     | |-VarDecl 0x1541283f0 <col:3, col:7> col:7 used i 'int'     | |-VarDecl 0x154128470 <col:3, col:10> col:10 used j 'int'     | `-VarDecl 0x1541284f0 <col:3, col:13> col:13 used len 'int'     |-IfStmt 0x154141950 <line:5:3, line:8:3>     | |-BinaryOperator 0x1541286e0 <line:5:7, col:35> 'int' contains-errors '||'     | | |-BinaryOperator 0x154128618 <col:7, col:19> 'int' contains-errors '=='     | | | |-CXXDependentScopeMemberExpr 0x1541285b0 <col:7, col:12> '<dependent type>' contains-errors lvalue ->len     | | | | `-RecoveryExpr 0x154128590 <col:7> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x1541285f8 <col:19> 'int' 0     | | `-BinaryOperator 0x1541286c0 <col:24, col:35> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x154128658 <col:24, col:28> '<dependent type>' contains-errors lvalue ->len     | |   | `-RecoveryExpr 0x154128638 <col:24> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1541286a0 <col:35> 'int' 0     | `-CompoundStmt 0x154141930 <col:38, line:8:3>     |   |-CallExpr 0x1541418f8 <line:6:5, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1541418b8 <col:5> 'int ()' Function 0x154141800 'clear_opt_exact' 'int ()'     |   | `-RecoveryExpr 0x1541418d8 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x154141920 <line:7:5>     |-IfStmt 0x154141c50 <line:10:3, line:13:3>     | |-UnaryOperator 0x154141ba0 <line:10:7, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x154141b70 <col:9, col:41> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x154141a50 <col:9> 'int ()' Function 0x154141998 'is_equal_mml' 'int ()'     | |   |-UnaryOperator 0x154141ad8 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-CXXDependentScopeMemberExpr 0x154141a90 <col:23, col:27> '<dependent type>' contains-errors lvalue ->mmd     | |   |   `-RecoveryExpr 0x154141a70 <col:23> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x154141b58 <col:32, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x154141b10 <col:33, col:38> '<dependent type>' contains-errors lvalue ->mmd     | |       `-RecoveryExpr 0x154141af0 <col:33> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x154141c30 <col:44, line:13:3>     |   |-CallExpr 0x154141bf8 <line:11:5, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x154141bb8 <col:5> 'int ()' Function 0x154141800 'clear_opt_exact' 'int ()'     |   | `-RecoveryExpr 0x154141bd8 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x154141c20 <line:12:5>     |-ForStmt 0x154142868 <line:15:3, line:24:3>     | |-BinaryOperator 0x154141cb0 <line:15:8, col:12> 'int' '='     | | |-DeclRefExpr 0x154141c70 <col:8> 'int' lvalue Var 0x1541283f0 'i' 'int'     | | `-IntegerLiteral 0x154141c90 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x154141e20 <col:15, col:39> 'int' contains-errors '&&'     | | |-BinaryOperator 0x154141d58 <col:15, col:23> 'int' contains-errors '<'     | | | |-DeclRefExpr 0x154141cd0 <col:15> 'int' lvalue Var 0x1541283f0 'i' 'int'     | | | `-CXXDependentScopeMemberExpr 0x154141d10 <col:19, col:23> '<dependent type>' contains-errors lvalue ->len     | | |   `-RecoveryExpr 0x154141cf0 <col:19> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x154141e00 <col:30, col:39> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x154141d78 <col:30> 'int' lvalue Var 0x1541283f0 'i' 'int'     | |   `-CXXDependentScopeMemberExpr 0x154141db8 <col:34, col:39> '<dependent type>' contains-errors lvalue ->len     | |     `-RecoveryExpr 0x154141d98 <col:34> '<dependent type>' contains-errors lvalue     | |-<<<NULL>>>     | `-CompoundStmt 0x154142830 <col:46, line:24:3>     |   |-IfStmt 0x154142018 <line:16:5, col:32>     |   | |-BinaryOperator 0x154141ff0 <col:9, col:29> 'int' contains-errors '!='     |   | | |-ArraySubscriptExpr 0x154141ef8 <col:9, col:16> '<dependent type>' contains-errors lvalue     |   | | | |-ImplicitCastExpr 0x154141ec8 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | `-CXXDependentScopeMemberExpr 0x154141e60 <col:9, col:13> '<dependent type>' contains-errors lvalue ->s     |   | | | |   `-RecoveryExpr 0x154141e40 <col:9> '<dependent type>' contains-errors lvalue     |   | | | `-ImplicitCastExpr 0x154141ee0 <col:15> 'int' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x154141ea8 <col:15> 'int' lvalue Var 0x1541283f0 'i' 'int'     |   | | `-ArraySubscriptExpr 0x154141fd0 <col:21, col:29> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x154141fa0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-CXXDependentScopeMemberExpr 0x154141f38 <col:21, col:26> '<dependent type>' contains-errors lvalue ->s     |   | |   |   `-RecoveryExpr 0x154141f18 <col:21> '<dependent type>' contains-errors lvalue     |   | |   `-ImplicitCastExpr 0x154141fb8 <col:28> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x154141f80 <col:28> 'int' lvalue Var 0x1541283f0 'i' 'int'     |   | `-BreakStmt 0x154142010 <col:32>     |   |-BinaryOperator 0x154142298 <line:17:5, col:37> 'int' contains-errors '='     |   | |-DeclRefExpr 0x154142038 <col:5> 'int' lvalue Var 0x1541284f0 'len' 'int'     |   | `-CallExpr 0x154142268 <col:11, col:37> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x154142138 <col:11> 'int ()' Function 0x154142080 'enclen' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x154142178 <col:18, col:23> '<dependent type>' contains-errors lvalue ->enc     |   |   | `-RecoveryExpr 0x154142158 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-BinaryOperator 0x154142248 <col:28, col:36> '<dependent type>' contains-errors '+'     |   |     |-CXXDependentScopeMemberExpr 0x1541421e0 <col:28, col:32> '<dependent type>' contains-errors lvalue ->s     |   |     | `-RecoveryExpr 0x1541421c0 <col:28> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x154142228 <col:36> 'int' lvalue Var 0x1541283f0 'i' 'int'     |   |-ForStmt 0x1541426a0 <line:19:5, line:21:5>     |   | |-BinaryOperator 0x1541422f8 <line:19:10, col:14> 'int' '='     |   | | |-DeclRefExpr 0x1541422b8 <col:10> 'int' lvalue Var 0x154128470 'j' 'int'     |   | | `-IntegerLiteral 0x1541422d8 <col:14> 'int' 1     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x154142388 <col:17, col:21> 'int' '<'     |   | | |-ImplicitCastExpr 0x154142358 <col:17> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x154142318 <col:17> 'int' lvalue Var 0x154128470 'j' 'int'     |   | | `-ImplicitCastExpr 0x154142370 <col:21> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x154142338 <col:21> 'int' lvalue Var 0x1541284f0 'len' 'int'     |   | |-UnaryOperator 0x1541423c8 <col:26, col:27> 'int' postfix '++'     |   | | `-DeclRefExpr 0x1541423a8 <col:26> 'int' lvalue Var 0x154128470 'j' 'int'     |   | `-CompoundStmt 0x154142688 <col:31, line:21:5>     |   |   `-IfStmt 0x154142668 <line:20:7, col:38>     |   |     |-BinaryOperator 0x154142640 <col:11, col:35> 'int' contains-errors '!='     |   |     | |-ArraySubscriptExpr 0x1541424f0 <col:11, col:20> '<dependent type>' contains-errors lvalue     |   |     | | |-ImplicitCastExpr 0x1541424d8 <col:11, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   |     | | | `-CXXDependentScopeMemberExpr 0x154142400 <col:11, col:15> '<dependent type>' contains-errors lvalue ->s     |   |     | | |   `-RecoveryExpr 0x1541423e0 <col:11> '<dependent type>' contains-errors lvalue     |   |     | | `-BinaryOperator 0x1541424b8 <col:17, col:19> 'int' '+'     |   |     | |   |-ImplicitCastExpr 0x154142488 <col:17> 'int' <LValueToRValue>     |   |     | |   | `-DeclRefExpr 0x154142448 <col:17> 'int' lvalue Var 0x1541283f0 'i' 'int'     |   |     | |   `-ImplicitCastExpr 0x1541424a0 <col:19> 'int' <LValueToRValue>     |   |     | |     `-DeclRefExpr 0x154142468 <col:19> 'int' lvalue Var 0x154128470 'j' 'int'     |   |     | `-ArraySubscriptExpr 0x154142620 <col:25, col:35> '<dependent type>' contains-errors lvalue     |   |     |   |-ImplicitCastExpr 0x154142608 <col:25, col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   | `-CXXDependentScopeMemberExpr 0x154142530 <col:25, col:30> '<dependent type>' contains-errors lvalue ->s     |   |     |   |   `-RecoveryExpr 0x154142510 <col:25> '<dependent type>' contains-errors lvalue     |   |     |   `-BinaryOperator 0x1541425e8 <col:32, col:34> 'int' '+'     |   |     |     |-ImplicitCastExpr 0x1541425b8 <col:32> 'int' <LValueToRValue>     |   |     |     | `-DeclRefExpr 0x154142578 <col:32> 'int' lvalue Var 0x1541283f0 'i' 'int'     |   |     |     `-ImplicitCastExpr 0x1541425d0 <col:34> 'int' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x154142598 <col:34> 'int' lvalue Var 0x154128470 'j' 'int'     |   |     `-BreakStmt 0x154142660 <col:38>     |   |-IfStmt 0x154142770 <line:22:5, col:18>     |   | |-BinaryOperator 0x154142748 <col:9, col:13> 'int' '<'     |   | | |-ImplicitCastExpr 0x154142718 <col:9> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1541426d8 <col:9> 'int' lvalue Var 0x154128470 'j' 'int'     |   | | `-ImplicitCastExpr 0x154142730 <col:13> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1541426f8 <col:13> 'int' lvalue Var 0x1541284f0 'len' 'int'     |   | `-BreakStmt 0x154142768 <col:18>     |   `-CompoundAssignOperator 0x154142800 <line:23:5, col:10> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     |-DeclRefExpr 0x154142790 <col:5> 'int' lvalue Var 0x1541283f0 'i' 'int'     |     `-ImplicitCastExpr 0x1541427d0 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1541427b0 <col:10> 'int' lvalue Var 0x1541284f0 'len' 'int'     |-IfStmt 0x154142bb0 <line:26:3, line:28:3>     | |-BinaryOperator 0x154142aa8 <line:26:7, col:51> 'int' contains-errors '||'     | | |-BinaryOperator 0x1541429e0 <col:7, col:36> 'int' contains-errors '||'     | | | |-UnaryOperator 0x154142920 <col:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x154142908 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-CXXDependentScopeMemberExpr 0x1541428c0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->reach_end     | | | |     `-RecoveryExpr 0x1541428a0 <col:9> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x1541429c0 <col:27, col:36> 'int' contains-errors '<'     | | |   |-DeclRefExpr 0x154142938 <col:27> 'int' lvalue Var 0x1541283f0 'i' 'int'     | | |   `-CXXDependentScopeMemberExpr 0x154142978 <col:31, col:36> '<dependent type>' contains-errors lvalue ->len     | | |     `-RecoveryExpr 0x154142958 <col:31> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x154142a88 <col:43, col:51> 'int' contains-errors '<'     | |   |-DeclRefExpr 0x154142a00 <col:43> 'int' lvalue Var 0x1541283f0 'i' 'int'     | |   `-CXXDependentScopeMemberExpr 0x154142a40 <col:47, col:51> '<dependent type>' contains-errors lvalue ->len     | |     `-RecoveryExpr 0x154142a20 <col:47> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x154142b98 <col:56, line:28:3>     |   `-BinaryOperator 0x154142b78 <line:27:5, col:21> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x154142b10 <col:5, col:9> '<dependent type>' contains-errors lvalue ->reach_end     |     | `-RecoveryExpr 0x154142ae8 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x154142ac8 <col:5> 'int *' lvalue ParmVar 0x154128128 'to' 'int *'     |     `-IntegerLiteral 0x154142b58 <col:21> 'int' 0     |-BinaryOperator 0x154142c80 <line:29:3, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x154142c18 <col:3, col:7> '<dependent type>' contains-errors lvalue ->len     | | `-RecoveryExpr 0x154142bf0 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x154142bd0 <col:3> 'int *' lvalue ParmVar 0x154128128 'to' 'int *'     | `-DeclRefExpr 0x154142c60 <col:13> 'int' lvalue Var 0x1541283f0 'i' 'int'     |-CompoundAssignOperator 0x154142d98 <line:30:3, col:27> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x154142ce8 <col:3, col:7> '<dependent type>' contains-errors lvalue ->ignore_case     | | `-RecoveryExpr 0x154142cc0 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x154142ca0 <col:3> 'int *' lvalue ParmVar 0x154128128 'to' 'int *'     | `-CXXDependentScopeMemberExpr 0x154142d50 <col:22, col:27> '<dependent type>' contains-errors lvalue ->ignore_case     |   `-RecoveryExpr 0x154142d30 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x154142fc8 <line:32:3, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154142ea8 <col:3> 'int ()' Function 0x154142df0 'alt_merge_opt_anc_info' 'int ()'     | |-UnaryOperator 0x154142f30 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x154142ee8 <col:27, col:31> '<dependent type>' contains-errors lvalue ->anc     | |   `-RecoveryExpr 0x154142ec8 <col:27> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x154142fb0 <col:36, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x154142f68 <col:37, col:42> '<dependent type>' contains-errors lvalue ->anc     |     `-RecoveryExpr 0x154142f48 <col:37> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1541431a8 <line:33:3, col:40>       |-UnaryOperator 0x154143078 <col:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x154143060 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x154143018 <col:9, col:13> '<dependent type>' contains-errors lvalue ->reach_end       |     `-RecoveryExpr 0x154142ff8 <col:9> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x154143188 <col:24, col:40> '<dependent type>' contains-errors '='         |-CXXDependentScopeMemberExpr 0x154143120 <col:24, col:32> '<dependent type>' contains-errors lvalue .right         | `-CXXDependentScopeMemberExpr 0x1541430d8 <col:24, col:28> '<dependent type>' contains-errors lvalue ->anc         |   `-RecoveryExpr 0x1541430b0 <col:24> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x154143090 <col:24> 'int *' lvalue ParmVar 0x154128128 'to' 'int *'         `-IntegerLiteral 0x154143168 <col:40> 'int' 0 ","21044":"`-FunctionDecl 0x14700dda8  line:1:19 invalid RegisterStaticModules 'int (void)'   `-CompoundStmt 0x14700e398 <line:2:1, line:21:1>     `-UnaryExprOrTypeTraitExpr 0x14700dea8 <line:3:3, line:4:5> 'unsigned long' contains-errors sizeof       `-RecoveryExpr 0x14700de88 <col:5> '<dependent type>' contains-errors lvalue ","21070":"`-FunctionDecl 0x15000de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x15000dd58 <col:6> col:6 OverflowArithmetic 'int'   |-ParmVarDecl 0x15000dcd8 <col:26> col:26 HeterogeneousArguments 'int'   `-CompoundStmt 0x158123f08 <col:50, line:11:1>     |-CompoundStmt 0x15000e310 <line:2:5, line:6:5>     | |-DeclStmt 0x15000dfb8 <line:3:9, col:14>     | | `-VarDecl 0x15000df50 <col:9, col:13> col:13 used r 'int'     | `-CallExpr 0x15000e2c8 <line:5:9, col:23> 'int'     |   |-ImplicitCastExpr 0x15000e2b0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15000e218 <col:9> 'int ()' Function 0x15000e160 'ASSERT_EQ' 'int ()'     |   |-ImplicitCastExpr 0x15000e2f8 <col:19> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x15000e238 <col:19> 'int' lvalue Var 0x15000df50 'r' 'int'     |   `-IntegerLiteral 0x15000e258 <col:22> 'int' 2     `-CompoundStmt 0x158123ef0 <line:7:5, line:10:5>       `-DeclStmt 0x15000e3b0 <line:8:9, col:29>         `-VarDecl 0x15000e348 <col:9, col:28> col:28 r 'unsigned long long' ","20341":"`-FunctionDecl 0x133128258  line:1:8 invalid headerReload 'int (int, int)'   |-ParmVarDecl 0x1331280f0 <col:21, col:28> col:28 referenced invalid h 'int'   |-ParmVarDecl 0x133128170 <col:31, col:41> col:41 invalid tag 'int'   `-CompoundStmt 0x1331426a0 <line:2:1, line:20:1>     |-DeclStmt 0x1331283c8 <line:4:5, col:24>     | `-VarDecl 0x133128328 <col:5, col:23> col:18 used uc 'unsigned int' cinit     |   `-ImplicitCastExpr 0x1331283b0 <col:23> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x133128390 <col:23> 'int' 0     |-DeclStmt 0x133128698 <line:5:5, col:37>     | `-VarDecl 0x1331283f8 <col:5, col:36> col:12 used uh 'void *' cinit     |   `-CallExpr 0x133128668 <col:17, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1331285c0 <col:17> 'int ()' Function 0x133128508 'headerExport' 'int ()'     |     |-RecoveryExpr 0x1331285e0 <col:30> '<dependent type>' contains-errors lvalue     |     `-UnaryOperator 0x133128650 <col:33, col:34> 'unsigned int *' prefix '&' cannot overflow     |       `-DeclRefExpr 0x133128600 <col:34> 'unsigned int' lvalue Var 0x133128328 'uc' 'unsigned int'     |-BinaryOperator 0x133141848 <line:7:5, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1331286d0 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1331286b0 <col:5> 'int' lvalue ParmVar 0x1331280f0 'h' 'int'     | `-CallExpr 0x133141820 <col:9, col:21> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1331287d8 <col:9> 'int ()' Function 0x133128720 'headerFree' 'int ()'     |   `-RecoveryExpr 0x133141800 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133141948 <line:8:5, line:9:9>     | |-BinaryOperator 0x1331418e0 <line:8:9, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x133141868 <col:9> 'void *' contains-errors lvalue Var 0x1331283f8 'uh' 'void *'     | | `-RecoveryExpr 0x1331418c0 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x133141938 <line:9:2, col:9>     |   `-RecoveryExpr 0x133141918 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133142288 <line:11:5, line:14:5>     | |-BinaryOperator 0x133141c10 <line:11:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x133141bd0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x133141bf0 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133142268 <col:21, line:14:5>     |   |-BinaryOperator 0x133142200 <line:12:2, col:15> 'void *' contains-errors '='     |   | |-DeclRefExpr 0x133141c30 <col:2> 'void *' contains-errors lvalue Var 0x1331283f8 'uh' 'void *'     |   | `-ImplicitCastExpr 0x133141dc8 <col:7, col:15> 'void *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x133141d88 <col:7, col:15> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x133141d70 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x133141d30 <col:7> 'int ()' Function 0x133141c78 '_free' 'int ()'     |   |     `-ImplicitCastExpr 0x133141db0 <col:13> 'void *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x133141d50 <col:13> 'void *' contains-errors lvalue Var 0x1331283f8 'uh' 'void *'     |   `-ReturnStmt 0x133142258 <line:13:2, col:9>     |     `-RecoveryExpr 0x133142238 <col:9> '<dependent type>' contains-errors lvalue     `-IfStmt 0x133142680 <line:15:5, line:18:5>       |-CallExpr 0x133142498 <line:15:9, col:34> '<dependent type>' contains-errors       | |-DeclRefExpr 0x133142388 <col:9> 'int ()' Function 0x1331422d0 'ENTRY_IS_REGION' 'int ()'       | `-CXXDependentScopeMemberExpr 0x133142450 <col:25, col:29> '<dependent type>' contains-errors lvalue ->index       |   `-RecoveryExpr 0x133142430 <col:25> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x133142670 <col:37, line:18:5> ","21101":"`-FunctionDecl 0x156817940  line:1:13 invalid kvmgt_page_track_write 'void (struct kvm_vcpu *, int, const int *, int, struct kvm_page_track_notifier_node *)' static   |-ParmVarDecl 0x15680e248 <col:36, col:53> col:53 vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x15680e2e0 <col:59, col:65> col:65 invalid gpa 'int'   |-ParmVarDecl 0x15680e360 <line:2:3, col:13> col:13 invalid val 'const int *'   |-ParmVarDecl 0x156817600 <col:18, col:22> col:22 used len 'int'   |-ParmVarDecl 0x1568177d8 <line:3:3, col:40> col:40 used node 'struct kvm_page_track_notifier_node *'   `-CompoundStmt 0x156818160 <line:4:1, line:11:1>     `-DeclStmt 0x156817db0 <line:5:2, line:6:42>       |-RecordDecl 0x156817a10 <line:5:2, col:9> col:9 struct kvmgt_guest_info       `-VarDecl 0x156817b78 <col:2, col:27> col:27 used info 'struct kvmgt_guest_info *' ","21248":"`-FunctionDecl 0x12a1283a8  line:1:14 invalid ResizeOutputTensor 'int (int *, const int *, const int *, int *)'   |-ParmVarDecl 0x12a128128 <col:33, col:48> col:48 invalid context 'int *'   |-ParmVarDecl 0x12a1281a8 <line:2:33, col:53> col:53 invalid data 'const int *'   |-ParmVarDecl 0x12a128228 <line:3:33, col:53> col:53 invalid segment_ids 'const int *'   |-ParmVarDecl 0x12a1282a8 <line:4:33, col:47> col:47 invalid output 'int *'   `-CompoundStmt 0x12a142258 <col:55, line:17:1>     |-DeclStmt 0x12a128528 <line:5:3, col:21>     | `-VarDecl 0x12a128488 <col:3, col:20> col:7 used max_index 'int' cinit     |   `-UnaryOperator 0x12a128510 <col:19, col:20> 'int' prefix '-'     |     `-IntegerLiteral 0x12a1284f0 <col:20> 'int' 1     |-DeclStmt 0x12a1286c8 <line:6:3, col:57>     | `-VarDecl 0x12a128558 <col:3, col:56> col:13 used segment_id_size 'const int' cinit     |   `-ArraySubscriptExpr 0x12a1286a8 <col:31, col:56> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x12a128690 <col:31, col:50> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x12a128628 <col:31, col:50> '<dependent type>' contains-errors lvalue ->data     |     |   `-CXXDependentScopeMemberExpr 0x12a1285e0 <col:31, col:44> '<dependent type>' contains-errors lvalue ->dims     |     |     `-RecoveryExpr 0x12a1285c0 <col:31> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x12a128670 <col:55> 'int' 0     |-IfStmt 0x12a141930 <line:7:3, line:9:3>     | |-BinaryOperator 0x12a128738 <line:7:7, col:25> 'int' contains-errors '>'     | | |-ImplicitCastExpr 0x12a128720 <col:7> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x12a1286e0 <col:7> 'const int' contains-errors lvalue Var 0x12a128558 'segment_id_size' 'const int'     | | `-IntegerLiteral 0x12a128700 <col:25> 'int' 0     | `-CompoundStmt 0x12a141918 <col:28, line:9:3>     |   `-BinaryOperator 0x12a1418f8 <line:8:5, col:58> 'int' contains-errors '='     |     |-DeclRefExpr 0x12a128758 <col:5> 'int' lvalue Var 0x12a128488 'max_index' 'int'     |     `-ArraySubscriptExpr 0x12a1418d8 <col:17, col:58> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x12a1418c0 <col:17, col:35> '<dependent type>' contains-errors <LValueToRValue>     |       | `-CXXDependentScopeMemberExpr 0x12a141800 <col:17, col:35> '<dependent type>' contains-errors lvalue .i32     |       |   `-CXXDependentScopeMemberExpr 0x12a128798 <col:17, col:30> '<dependent type>' contains-errors lvalue ->data     |       |     `-RecoveryExpr 0x12a128778 <col:17> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x12a1418a0 <col:39, col:57> 'int' contains-errors '-'     |         |-ImplicitCastExpr 0x12a141888 <col:39> 'int' contains-errors <LValueToRValue>     |         | `-DeclRefExpr 0x12a141848 <col:39> 'const int' contains-errors lvalue Var 0x12a128558 'segment_id_size' 'const int'     |         `-IntegerLiteral 0x12a141868 <col:57> 'int' 1     |-DeclStmt 0x12a141b98 <line:10:3, col:44>     | `-VarDecl 0x12a141968 <col:3, col:43> col:13 used data_rank 'const int' cinit     |   `-CallExpr 0x12a141b70 <col:25, col:43> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12a141b30 <col:25> 'int ()' Function 0x12a141a78 'NumDimensions' 'int ()'     |     `-RecoveryExpr 0x12a141b50 <col:39> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12a1420c0 <line:13:3, line:15:3>     | |-DeclStmt 0x12a141e90 <line:13:8, col:17>     | | `-VarDecl 0x12a141e08 <col:8, col:16> col:12 used i 'int' cinit     | |   `-IntegerLiteral 0x12a141e70 <col:16> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x12a141f18 <col:19, col:23> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x12a141ee8 <col:19> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12a141ea8 <col:19> 'int' lvalue Var 0x12a141e08 'i' 'int'     | | `-ImplicitCastExpr 0x12a141f00 <col:23> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12a141ec8 <col:23> 'const int' contains-errors lvalue Var 0x12a141968 'data_rank' 'const int'     | |-UnaryOperator 0x12a141f58 <col:34, col:36> 'int' prefix '++'     | | `-DeclRefExpr 0x12a141f38 <col:36> 'int' lvalue Var 0x12a141e08 'i' 'int'     | `-CompoundStmt 0x12a1420b0 <col:39, line:15:3>     `-ReturnStmt 0x12a142248 <line:16:3, col:61>       `-CallExpr 0x12a142210 <col:10, col:61> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x12a142118 <col:10, col:19> '<dependent type>' contains-errors lvalue ->ResizeTensor         | `-RecoveryExpr 0x12a1420f8 <col:10> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12a142160 <col:32> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12a142180 <col:41> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12a1421f0 <col:49> '<dependent type>' contains-errors lvalue ","20776":"`-FunctionDecl 0x1439281d8  line:1:19 verify_sec_ctx_len 'int (const void *)' static inline   |-ParmVarDecl 0x143928108 <col:38, col:50> col:50 used p 'const void *'   `-CompoundStmt 0x143941180 <line:2:1, line:15:1>     |-DeclStmt 0x143928508 <line:3:2, col:42>     | |-RecordDecl 0x1439282d0 <col:8, col:15> col:15 struct sadb_x_sec_ctx     | `-VarDecl 0x143928438 <col:2, col:41> col:31 used sec_ctx 'const struct sadb_x_sec_ctx *' cinit     |   `-ImplicitCastExpr 0x1439284d8 <col:41> 'const struct sadb_x_sec_ctx *' <BitCast>     |     `-ImplicitCastExpr 0x1439284c0 <col:41> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x1439284a0 <col:41> 'const void *' lvalue ParmVar 0x143928108 'p' 'const void *'     |-DeclStmt 0x143940c38 <line:4:2, col:35>     | `-VarDecl 0x143928538 <col:2, col:21> col:6 used len 'int' cinit     |   `-RecoveryExpr 0x143940c10 <col:12, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1439285a0 <col:12> 'const struct sadb_x_sec_ctx *' lvalue Var 0x143928438 'sec_ctx' 'const struct sadb_x_sec_ctx *'     |-IfStmt 0x143940da8 <line:6:2, line:7:11>     | |-BinaryOperator 0x143940ce0 <line:6:6, col:12> 'int' contains-errors '>'     | | |-DeclRefExpr 0x143940c50 <col:6> 'int' contains-errors lvalue Var 0x143928538 'len' 'int'     | | `-RecoveryExpr 0x143940cc0 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x143940d98 <line:7:3, col:11>     |   `-UnaryOperator 0x143940d80 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x143940d68 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x143940d48 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143940fc8 <line:9:2, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x143940dc8 <col:2> 'int' contains-errors lvalue Var 0x143928538 'len' 'int'     | `-CallExpr 0x143940f88 <col:8, col:33> 'int'     |   |-ImplicitCastExpr 0x143940f70 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x143940f00 <col:8> 'int ()' Function 0x143940e48 'pfkey_sec_ctx_len' 'int ()'     |   `-ImplicitCastExpr 0x143940fb0 <col:26> 'const struct sadb_x_sec_ctx *' <LValueToRValue>     |     `-DeclRefExpr 0x143940f20 <col:26> 'const struct sadb_x_sec_ctx *' lvalue Var 0x143928438 'sec_ctx' 'const struct sadb_x_sec_ctx *'     |-IfStmt 0x143941130 <line:11:2, line:12:11>     | |-BinaryOperator 0x143941068 <line:11:6, col:33> 'int' contains-errors '!='     | | |-RecoveryExpr 0x143941020 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x143940fe8 <col:6> 'const struct sadb_x_sec_ctx *' lvalue Var 0x143928438 'sec_ctx' 'const struct sadb_x_sec_ctx *'     | | `-DeclRefExpr 0x143941048 <col:33> 'int' contains-errors lvalue Var 0x143928538 'len' 'int'     | `-ReturnStmt 0x143941120 <line:12:3, col:11>     |   `-UnaryOperator 0x143941108 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1439410f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1439410d0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x143941170 <line:14:2, col:9>       `-IntegerLiteral 0x143941150 <col:9> 'int' 0 ","20263":"`-FunctionDecl 0x139826670  line:1:28 invalid k90_backlight_get 'enum led_brightness (struct led_classdev *)' static   |-ParmVarDecl 0x13980e308 <col:46, col:67> col:67 used led_cdev 'struct led_classdev *'   `-CompoundStmt 0x139123cd8 <line:2:1, line:29:1>     |-DeclStmt 0x1398267e8 <line:3:2, col:9>     | `-VarDecl 0x139826780 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x139826b70 <line:4:2, col:68>     | |-RecordDecl 0x139826800 <col:2, col:9> col:9 struct k90_led     | `-VarDecl 0x139826968 <col:2, col:18> col:18 used led 'struct k90_led *'     |-DeclStmt 0x139826e68 <line:5:2, col:44>     | |-RecordDecl 0x139826b88 <col:2, col:9> col:9 struct device     | `-VarDecl 0x139826cf8 <col:2, col:38> col:17 used dev 'struct device *' cinit     |   `-CXXDependentScopeMemberExpr 0x139826e08 <col:23, col:38> '<dependent type>' contains-errors lvalue ->parent     |     `-CXXDependentScopeMemberExpr 0x139826dc0 <col:23, col:33> '<dependent type>' contains-errors lvalue .dev     |       `-RecoveryExpr 0x139826d98 <col:23, col:28> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x139826d60 <col:23> 'struct k90_led *' lvalue Var 0x139826968 'led' 'struct k90_led *'     |-DeclStmt 0x1398271f0 <line:6:2, col:61>     | |-RecordDecl 0x139826e80 <col:2, col:9> col:9 struct usb_interface     | `-VarDecl 0x139826fe8 <col:2, col:60> col:24 used usbif 'struct usb_interface *' cinit     |   `-CallExpr 0x1398271b0 <col:32, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x139827130 <col:32> 'int ()' Function 0x139827078 'to_usb_interface' 'int ()'     |     `-RecoveryExpr 0x139827188 <col:49, col:54> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x139827150 <col:49> 'struct device *' contains-errors lvalue Var 0x139826cf8 'dev' 'struct device *'     |-DeclStmt 0x1398275b8 <line:7:2, col:56>     | |-RecordDecl 0x139827208 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x139827378 <col:2, col:55> col:21 used usbdev 'struct usb_device *' cinit     |   `-ImplicitCastExpr 0x139827588 <col:30, col:55> 'struct usb_device *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x139827548 <col:30, col:55> 'int' contains-errors     |       |-ImplicitCastExpr 0x139827530 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1398274c0 <col:30> 'int ()' Function 0x139827408 'interface_to_usbdev' 'int ()'     |       `-ImplicitCastExpr 0x139827570 <col:50> 'struct usb_interface *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x1398274e0 <col:50> 'struct usb_interface *' contains-errors lvalue Var 0x139826fe8 'usbif' 'struct usb_interface *'     |-DeclStmt 0x139122668 <line:8:2, col:16>     | `-VarDecl 0x139122600 <col:2, col:6> col:6 used brightness 'int'     |-DeclStmt 0x139122788 <line:9:2, col:14>     | `-VarDecl 0x139122720 <col:2, col:13> col:7 used data 'char[8]'     |-BinaryOperator 0x139122e48 <line:11:2, line:15:30> 'int' contains-errors '='     | |-DeclRefExpr 0x1391227a0 <line:11:2> 'int' lvalue Var 0x139826780 'ret' 'int'     | `-CallExpr 0x139122de0 <col:8, line:15:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1391228a0 <line:11:8> 'int ()' Function 0x1391227e8 'usb_control_msg' 'int ()'     |   |-DeclRefExpr 0x1391228c0 <col:24> 'struct usb_device *' contains-errors lvalue Var 0x139827378 'usbdev' 'struct usb_device *'     |   |-CallExpr 0x139122cb8 <col:32, col:57> 'int' contains-errors     |   | |-ImplicitCastExpr 0x139122ca0 <col:32> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1391229c0 <col:32> 'int ()' Function 0x139122908 'usb_rcvctrlpipe' 'int ()'     |   | |-ImplicitCastExpr 0x139122ce8 <col:48> 'struct usb_device *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x1391229e0 <col:48> 'struct usb_device *' contains-errors lvalue Var 0x139827378 'usbdev' 'struct usb_device *'     |   | `-IntegerLiteral 0x139122a00 <col:56> 'int' 0     |   |-RecoveryExpr 0x139122d00 <line:12:10> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x139122da0 <line:13:10, line:14:10> '<dependent type>' contains-errors '|'     |   | |-BinaryOperator 0x139122d60 <line:13:10, col:23> '<dependent type>' contains-errors '|'     |   | | |-RecoveryExpr 0x139122d20 <col:10> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x139122d40 <col:23> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x139122d80 <line:14:10> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x139122b20 <col:28> 'int' 0     |   |-IntegerLiteral 0x139122b40 <col:31> 'int' 0     |   |-DeclRefExpr 0x139122b60 <col:34> 'char[8]' lvalue Var 0x139122720 'data' 'char[8]'     |   |-IntegerLiteral 0x139122b80 <col:40> 'int' 8     |   `-RecoveryExpr 0x139122dc0 <line:15:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1391231e0 <line:16:2, line:20:2>     | |-BinaryOperator 0x139122ec0 <line:16:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x139122ea8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x139122e68 <col:6> 'int' lvalue Var 0x139826780 'ret' 'int'     | | `-IntegerLiteral 0x139122e88 <col:12> 'int' 0     | `-CompoundStmt 0x1391231c0 <col:15, line:20:2>     |   |-CallExpr 0x139123098 <line:17:3, line:18:8> 'int' contains-errors     |   | |-ImplicitCastExpr 0x139123080 <line:17:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x139122fc0 <col:3> 'int ()' Function 0x139122f08 'dev_warn' 'int ()'     |   | |-ImplicitCastExpr 0x1391230d0 <col:12> 'struct device *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x139122fe0 <col:12> 'struct device *' contains-errors lvalue Var 0x139826cf8 'dev' 'struct device *'     |   | |-ImplicitCastExpr 0x1391230e8 <col:17> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x139123040 <col:17> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x139123100 <line:18:5> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x139123060 <col:5> 'int' lvalue Var 0x139826780 'ret' 'int'     |   `-ReturnStmt 0x1391231b0 <line:19:3, col:11>     |     `-UnaryOperator 0x139123198 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x139123180 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x139123160 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1391232c8 <line:21:2, col:21> 'int' '='     | |-DeclRefExpr 0x139123200 <col:2> 'int' lvalue Var 0x139122600 'brightness' 'int'     | `-ImplicitCastExpr 0x1391232b0 <col:15, col:21> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x139123298 <col:15, col:21> 'char' <LValueToRValue>     |     `-ArraySubscriptExpr 0x139123278 <col:15, col:21> 'char' lvalue     |       |-ImplicitCastExpr 0x139123260 <col:15> 'char *' <ArrayToPointerDecay>     |       | `-DeclRefExpr 0x139123220 <col:15> 'char[8]' lvalue Var 0x139122720 'data' 'char[8]'     |       `-IntegerLiteral 0x139123240 <col:20> 'int' 4     |-IfStmt 0x139123c48 <line:22:2, line:27:2>     | |-BinaryOperator 0x1391233d8 <line:22:6, col:37> 'int' '||'     | | |-BinaryOperator 0x139123340 <col:6, col:19> 'int' '<'     | | | |-ImplicitCastExpr 0x139123328 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x1391232e8 <col:6> 'int' lvalue Var 0x139122600 'brightness' 'int'     | | | `-IntegerLiteral 0x139123308 <col:19> 'int' 0     | | `-BinaryOperator 0x1391233b8 <col:24, col:37> 'int' '>'     | |   |-ImplicitCastExpr 0x1391233a0 <col:24> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x139123360 <col:24> 'int' lvalue Var 0x139122600 'brightness' 'int'     | |   `-IntegerLiteral 0x139123380 <col:37> 'int' 3     | `-CompoundStmt 0x139123c28 <col:40, line:27:2>     |   |-CallExpr 0x1391234e8 <line:23:3, line:25:12> 'int' contains-errors     |   | |-ImplicitCastExpr 0x1391234d0 <line:23:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1391233f8 <col:3> 'int ()' Function 0x139122f08 'dev_warn' 'int ()'     |   | |-ImplicitCastExpr 0x139123520 <col:12> 'struct device *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x139123418 <col:12> 'struct device *' contains-errors lvalue Var 0x139826cf8 'dev' 'struct device *'     |   | |-ImplicitCastExpr 0x139123538 <line:24:5> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x139123438 <col:5> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x139123568 <line:25:5, col:11> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x139123550 <col:5, col:11> 'char' <LValueToRValue>     |   |     `-ArraySubscriptExpr 0x1391234b0 <col:5, col:11> 'char' lvalue     |   |       |-ImplicitCastExpr 0x139123498 <col:5> 'char *' <ArrayToPointerDecay>     |   |       | `-DeclRefExpr 0x139123458 <col:5> 'char[8]' lvalue Var 0x139122720 'data' 'char[8]'     |   |       `-IntegerLiteral 0x139123478 <col:10> 'int' 4     |   `-ReturnStmt 0x139123c18 <line:26:3, col:11>     |     `-UnaryOperator 0x139123c00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1391235e8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1391235c8 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x139123cc8 <line:28:2, col:9>       `-RecoveryExpr 0x139123ca0 <col:9> 'enum led_brightness' contains-errors         `-DeclRefExpr 0x139123c68 <col:9> 'int' lvalue Var 0x139122600 'brightness' 'int' ","20329":"`-FunctionDecl 0x14e030748  line:1:12 io_sq_offload_start 'int (struct io_ring_ctx *, struct io_uring_params *)' static   |-ParmVarDecl 0x14e013c48 <col:32, col:52> col:52 used ctx 'struct io_ring_ctx *'   |-ParmVarDecl 0x14e030628 <line:2:11, col:35> col:35 used p 'struct io_uring_params *'   `-CompoundStmt 0x14e033d00 <line:3:1, line:51:1>     |-DeclStmt 0x14e0308c8 <line:4:2, col:9>     | `-VarDecl 0x14e030860 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x14e033840 <line:6:2, line:41:2> has_else     | |-BinaryOperator 0x14e0309b0 <line:6:6, col:19> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14e030918 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14e0308e0 <col:6> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | | `-RecoveryExpr 0x14e030990 <col:19> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x14e033708 <col:40, line:37:2>     | | |-BinaryOperator 0x14e030aa8 <line:7:3, col:10> 'int' contains-errors '='     | | | |-DeclRefExpr 0x14e0309d0 <col:3> 'int' lvalue Var 0x14e030860 'ret' 'int'     | | | `-UnaryOperator 0x14e030a90 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |   `-ImplicitCastExpr 0x14e030a78 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x14e030a58 <col:10> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x14e030d20 <line:8:3, line:9:9>     | | | |-UnaryOperator 0x14e030ca0 <line:8:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-CallExpr 0x14e030c78 <col:8, col:29> '<dependent type>' contains-errors     | | | |   |-DeclRefExpr 0x14e030be0 <col:8> 'int ()' Function 0x14e030b28 'capable' 'int ()'     | | | |   `-RecoveryExpr 0x14e030c58 <col:16> '<dependent type>' contains-errors lvalue     | | | `-GotoStmt 0x14e030d08 <line:9:4, col:9> 'err' 0x14e030cb8     | | |-BinaryOperator 0x14e030f28 <line:11:3, col:59> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x14e030d78 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14e030d40 <col:3> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | | | `-CallExpr 0x14e030f00 <col:25, col:59> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x14e030e80 <col:25> 'int ()' Function 0x14e030dc8 'msecs_to_jiffies' 'int ()'     | | |   `-RecoveryExpr 0x14e030ed8 <col:42, col:45> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x14e030ea0 <col:42> 'struct io_uring_params *' lvalue ParmVar 0x14e030628 'p' 'struct io_uring_params *'     | | |-IfStmt 0x14e0310b0 <line:12:3, line:13:26>     | | | |-UnaryOperator 0x14e030fc0 <line:12:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x14e030fa8 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x14e030f80 <col:8, col:13> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x14e030f48 <col:8> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | | | `-BinaryOperator 0x14e031090 <line:13:4, col:26> '<dependent type>' contains-errors '='     | | |   |-RecoveryExpr 0x14e031010 <col:4, col:9> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x14e030fd8 <col:4> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | | |   `-RecoveryExpr 0x14e031070 <col:26> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x14e033148 <line:15:3, line:30:3> has_else     | | | |-BinaryOperator 0x14e031188 <line:15:7, col:18> '<dependent type>' contains-errors '&'     | | | | |-RecoveryExpr 0x14e031108 <col:7, col:10> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x14e0310d0 <col:7> 'struct io_uring_params *' lvalue ParmVar 0x14e030628 'p' 'struct io_uring_params *'     | | | | `-RecoveryExpr 0x14e031168 <col:18> '<dependent type>' contains-errors lvalue     | | | |-CompoundStmt 0x14e032f60 <col:39, line:27:3>     | | | | |-DeclStmt 0x14e031288 <line:16:4, col:30>     | | | | | `-VarDecl 0x14e0311c0 <col:4, col:17> col:8 used cpu 'int' cinit     | | | | |   `-RecoveryExpr 0x14e031260 <col:14, col:17> '<dependent type>' contains-errors lvalue     | | | | |     `-DeclRefExpr 0x14e031228 <col:14> 'struct io_uring_params *' lvalue ParmVar 0x14e030628 'p' 'struct io_uring_params *'     | | | | |-BinaryOperator 0x14e031378 <line:18:4, col:11> 'int' contains-errors '='     | | | | | |-DeclRefExpr 0x14e0312a0 <col:4> 'int' lvalue Var 0x14e030860 'ret' 'int'     | | | | | `-UnaryOperator 0x14e031360 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     | | | | |   `-ImplicitCastExpr 0x14e031348 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | | | | |     `-RecoveryExpr 0x14e031328 <col:11> '<dependent type>' contains-errors lvalue     | | | | |-IfStmt 0x14e031448 <line:19:4, line:20:10>     | | | | | |-BinaryOperator 0x14e031410 <line:19:8, col:15> 'int' contains-errors '>='     | | | | | | |-DeclRefExpr 0x14e031398 <col:8> 'int' contains-errors lvalue Var 0x14e0311c0 'cpu' 'int'     | | | | | | `-RecoveryExpr 0x14e0313f0 <col:15> '<dependent type>' contains-errors lvalue     | | | | | `-GotoStmt 0x14e031430 <line:20:5, col:10> 'err' 0x14e030cb8     | | | | |-IfStmt 0x14e032c48 <line:21:4, line:22:10>     | | | | | |-UnaryOperator 0x14e032c18 <line:21:8, col:23> 'int' contains-errors prefix '!' cannot overflow     | | | | | | `-CallExpr 0x14e0315d8 <col:9, col:23> 'int' contains-errors     | | | | | |   |-ImplicitCastExpr 0x14e0315c0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | | | | |   | `-DeclRefExpr 0x14e031548 <col:9> 'int ()' Function 0x14e031490 'cpu_online' 'int ()'     | | | | | |   `-ImplicitCastExpr 0x14e032c00 <col:20> 'int' contains-errors <LValueToRValue>     | | | | | |     `-DeclRefExpr 0x14e031568 <col:20> 'int' contains-errors lvalue Var 0x14e0311c0 'cpu' 'int'     | | | | | `-GotoStmt 0x14e032c30 <line:22:5, col:10> 'err' 0x14e030cb8     | | | | `-BinaryOperator 0x14e032f40 <line:24:4, line:26:13> '<dependent type>' contains-errors '='     | | | |   |-RecoveryExpr 0x14e032ca0 <line:24:4, col:9> '<dependent type>' contains-errors lvalue     | | | |   | `-DeclRefExpr 0x14e032c68 <col:4> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | | | |   `-CallExpr 0x14e032f00 <col:22, line:26:13> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x14e032da8 <line:24:22> 'int ()' Function 0x14e032cf0 'kthread_create_on_cpu' 'int ()'     | | | |     |-RecoveryExpr 0x14e032ee0 <col:44> '<dependent type>' contains-errors lvalue     | | | |     |-DeclRefExpr 0x14e032de0 <line:25:8> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | | | |     |-DeclRefExpr 0x14e032e00 <col:13> 'int' contains-errors lvalue Var 0x14e0311c0 'cpu' 'int'     | | | |     `-StringLiteral 0x14e032e60 <line:26:8> 'char[4]' lvalue \"STR\"     | | | `-CompoundStmt 0x14e033138 <line:27:10, line:30:3>     | | |-IfStmt 0x14e033560 <line:31:3, line:35:3>     | | | |-CallExpr 0x14e0332d8 <line:31:7, col:29> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x14e033258 <col:7> 'int ()' Function 0x14e0331a0 'IS_ERR' 'int ()'     | | | | `-RecoveryExpr 0x14e0332b0 <col:14, col:19> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x14e033278 <col:14> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | | | `-CompoundStmt 0x14e033540 <col:32, line:35:3>     | | |   |-BinaryOperator 0x14e0334a8 <line:32:4, col:33> 'int' contains-errors '='     | | |   | |-DeclRefExpr 0x14e033300 <col:4> 'int' lvalue Var 0x14e030860 'ret' 'int'     | | |   | `-CallExpr 0x14e033480 <col:10, col:33> '<dependent type>' contains-errors     | | |   |   |-DeclRefExpr 0x14e033400 <col:10> 'int ()' Function 0x14e033348 'PTR_ERR' 'int ()'     | | |   |   `-RecoveryExpr 0x14e033458 <col:18, col:23> '<dependent type>' contains-errors lvalue     | | |   |     `-DeclRefExpr 0x14e033420 <col:18> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | | |   `-GotoStmt 0x14e033528 <line:34:4, col:9> 'err' 0x14e030cb8     | | `-CallExpr 0x14e0336e0 <line:36:3, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14e033660 <col:3> 'int ()' Function 0x14e0335a8 'wake_up_process' 'int ()'     | |   `-RecoveryExpr 0x14e0336b8 <col:19, col:24> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e033680 <col:19> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     | `-IfStmt 0x14e033820 <line:37:9, line:41:2>     |   |-RecoveryExpr 0x14e0337b0 <line:37:13, col:24> '_Bool' contains-errors     |   `-CompoundStmt 0x14e033808 <col:45, line:41:2>     |     `-GotoStmt 0x14e0337f0 <line:40:3, col:8> 'err' 0x14e030cb8     |-BinaryOperator 0x14e033a48 <line:43:2, col:33> 'int' '='     | |-DeclRefExpr 0x14e033870 <col:2> 'int' lvalue Var 0x14e030860 'ret' 'int'     | `-CallExpr 0x14e0339e8 <col:8, col:33> 'int'     |   |-ImplicitCastExpr 0x14e0339d0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e033970 <col:8> 'int ()' Function 0x14e0338b8 'io_init_wq_offload' 'int ()'     |   |-ImplicitCastExpr 0x14e033a18 <col:27> 'struct io_ring_ctx *' <LValueToRValue>     |   | `-DeclRefExpr 0x14e033990 <col:27> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     |   `-ImplicitCastExpr 0x14e033a30 <col:32> 'struct io_uring_params *' <LValueToRValue>     |     `-DeclRefExpr 0x14e0339b0 <col:32> 'struct io_uring_params *' lvalue ParmVar 0x14e030628 'p' 'struct io_uring_params *'     |-IfStmt 0x14e033ab8 <line:44:2, line:45:8>     | |-ImplicitCastExpr 0x14e033a88 <line:44:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14e033a68 <col:6> 'int' lvalue Var 0x14e030860 'ret' 'int'     | `-GotoStmt 0x14e033aa0 <line:45:3, col:8> 'err' 0x14e030cb8     |-ReturnStmt 0x14e033af8 <line:47:2, col:9>     | `-IntegerLiteral 0x14e033ad8 <col:9> 'int' 0     |-LabelStmt 0x14e033c98 <line:48:1, line:49:21> 'err'     | `-CallExpr 0x14e033c58 <col:2, col:21> 'int'     |   |-ImplicitCastExpr 0x14e033c40 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e033c00 <col:2> 'int ()' Function 0x14e033b30 'io_finish_async' 'int ()'     |   `-ImplicitCastExpr 0x14e033c80 <col:18> 'struct io_ring_ctx *' <LValueToRValue>     |     `-DeclRefExpr 0x14e033c20 <col:18> 'struct io_ring_ctx *' lvalue ParmVar 0x14e013c48 'ctx' 'struct io_ring_ctx *'     `-ReturnStmt 0x14e033cf0 <line:50:2, col:9>       `-ImplicitCastExpr 0x14e033cd8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14e033cb8 <col:9> 'int' lvalue Var 0x14e030860 'ret' 'int' ","20348":"`-FunctionDecl 0x149906608  line:1:25 invalid cut 'int (const double)' static   |-ParmVarDecl 0x1499064f0 <col:29, col:42> col:42 used val 'const double'   `-CompoundStmt 0x149906bc8 <col:47, line:3:7> ","21000":"`-FunctionDecl 0x134940a88  line:1:12 selinux_sb_kern_mount 'int (struct super_block *, int, void *)' static   |-ParmVarDecl 0x134928648 <col:34, col:54> col:54 used sb 'struct super_block *'   |-ParmVarDecl 0x1349286c8 <col:58, col:62> col:62 used flags 'int'   |-ParmVarDecl 0x134928748 <col:69, col:75> col:75 used data 'void *'   `-CompoundStmt 0x134947350 <line:2:1, line:20:1>     |-DeclStmt 0x134940f48 <line:3:2, col:42>     | |-RecordDecl 0x134940b90 <col:8, col:15> col:15 struct cred     | `-VarDecl 0x134940cf8 <col:2, col:41> col:21 used cred 'const struct cred *' cinit     |   `-ImplicitCastExpr 0x134940f18 <col:28, col:41> 'const struct cred *' <IntegralToPointer>     |     `-CallExpr 0x134940ef8 <col:28, col:41> 'int'     |       `-ImplicitCastExpr 0x134940ee0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x134940e90 <col:28> 'int ()' Function 0x134940dd8 'current_cred' 'int ()'     |-DeclStmt 0x1349410d8 <line:4:2, col:29>     | |-RecordDecl 0x134940f60 <col:2, col:9> col:9 struct common_audit_data     | `-VarDecl 0x134941058 <col:2, col:27> col:27 referenced invalid ad 'struct common_audit_data'     |-DeclStmt 0x1349412d0 <line:5:2, col:38>     | |-RecordDecl 0x1349410f0 <col:2, col:9> col:9 struct selinux_audit_data     | `-VarDecl 0x1349411e8 <col:2, col:28> col:28 invalid sad 'struct selinux_audit_data'     |-DeclStmt 0x134941368 <line:6:2, col:8>     | `-VarDecl 0x134941300 <col:2, col:6> col:6 used rc 'int'     |-BinaryOperator 0x134941558 <line:8:2, col:33> 'int' '='     | |-DeclRefExpr 0x134941380 <col:2> 'int' lvalue Var 0x134941300 'rc' 'int'     | `-CallExpr 0x1349414f8 <col:7, col:33> 'int'     |   |-ImplicitCastExpr 0x1349414e0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x134941480 <col:7> 'int ()' Function 0x1349413c8 'superblock_doinit' 'int ()'     |   |-ImplicitCastExpr 0x134941528 <col:25> 'struct super_block *' <LValueToRValue>     |   | `-DeclRefExpr 0x1349414a0 <col:25> 'struct super_block *' lvalue ParmVar 0x134928648 'sb' 'struct super_block *'     |   `-ImplicitCastExpr 0x134941540 <col:29> 'void *' <LValueToRValue>     |     `-DeclRefExpr 0x1349414c0 <col:29> 'void *' lvalue ParmVar 0x134928748 'data' 'void *'     |-IfStmt 0x1349415f8 <line:9:2, line:10:10>     | |-ImplicitCastExpr 0x134941598 <line:9:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x134941578 <col:6> 'int' lvalue Var 0x134941300 'rc' 'int'     | `-ReturnStmt 0x1349415e8 <line:10:3, col:10>     |   `-ImplicitCastExpr 0x1349415d0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1349415b0 <col:10> 'int' lvalue Var 0x134941300 'rc' 'int'     |-IfStmt 0x1349416e0 <line:13:2, line:14:10>     | |-BinaryOperator 0x134941690 <line:13:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x134941618 <col:6> 'int' lvalue ParmVar 0x1349286c8 'flags' 'int'     | | `-RecoveryExpr 0x134941670 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1349416d0 <line:14:3, col:10>     |   `-IntegerLiteral 0x1349416b0 <col:10> 'int' 0     |-CallExpr 0x1349418a0 <line:16:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1349417e0 <col:2> 'int ()' Function 0x134941728 'COMMON_AUDIT_DATA_INIT' 'int ()'     | |-UnaryOperator 0x134941820 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x134941800 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x134941880 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x134941998 <line:17:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x134941918 <col:2, col:5> '<dependent type>' contains-errors lvalue .selinux_audit_data     | | `-RecoveryExpr 0x1349418f0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1349418d0 <col:2> 'struct common_audit_data' lvalue Var 0x134941058 'ad' 'struct common_audit_data'     | `-UnaryOperator 0x134941980 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134941960 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1349470f0 <line:18:2, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x134947048 <col:2, col:7> '<dependent type>' contains-errors lvalue .dentry     | | `-CXXDependentScopeMemberExpr 0x134947000 <col:2, col:5> '<dependent type>' contains-errors lvalue .u     | |   `-RecoveryExpr 0x1349419d8 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1349419b8 <col:2> 'struct common_audit_data' lvalue Var 0x134941058 'ad' 'struct common_audit_data'     | `-RecoveryExpr 0x1349470c8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x134947090 <col:16> 'struct super_block *' lvalue ParmVar 0x134928648 'sb' 'struct super_block *'     `-ReturnStmt 0x134947340 <line:19:2, col:61>       `-CallExpr 0x134947300 <col:9, col:61> '<dependent type>' contains-errors         |-DeclRefExpr 0x1349471f0 <col:9> 'int ()' Function 0x134947138 'superblock_has_perm' 'int ()'         |-DeclRefExpr 0x134947210 <col:29> 'const struct cred *' lvalue Var 0x134940cf8 'cred' 'const struct cred *'         |-DeclRefExpr 0x134947230 <col:35> 'struct super_block *' lvalue ParmVar 0x134928648 'sb' 'struct super_block *'         |-RecoveryExpr 0x1349472e0 <col:39> '<dependent type>' contains-errors lvalue         `-UnaryOperator 0x134947288 <col:58, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x134947268 <col:59> '<dependent type>' contains-errors lvalue ","21047":"`-FunctionDecl 0x11e944de8  line:1:5 hfsplus_set_posix_acl 'int (struct inode *, struct posix_acl *, int)'   |-ParmVarDecl 0x11e928648 <col:27, col:41> col:41 used inode 'struct inode *'   |-ParmVarDecl 0x11e944c28 <col:48, col:66> col:66 used acl 'struct posix_acl *'   |-ParmVarDecl 0x11e944ca8 <line:2:3, col:7> col:7 used type 'int'   `-CompoundStmt 0x12880b340 <line:3:1, line:53:1>     |-DeclStmt 0x11e944f70 <line:4:2, col:9>     | `-VarDecl 0x11e944f08 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x11e945008 <line:5:2, col:18>     | `-VarDecl 0x11e944fa0 <col:2, col:8> col:8 used xattr_name 'char *'     |-RecoveryExpr 0x11e945118 <line:6:2, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x11e9450f8 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x11e9450d8 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x11e945070 <col:16> 'int' 0     |-DeclStmt 0x11e945200 <line:7:2, col:20>     | `-VarDecl 0x11e945160 <col:2, col:16> col:8 used value 'char *' cinit     |   `-RecoveryExpr 0x11e9451e0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11e945558 <line:9:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e945330 <col:2> 'int ()' Function 0x11e945278 'hfs_dbg' 'int ()'     | |-RecoveryExpr 0x11e945538 <col:10> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x11e9453b0 <col:19> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x11e945480 <col:26> 'const char[22]' lvalue __func__     | | `-StringLiteral 0x11e945450 <col:26> 'const char[22]' lvalue \"hfsplus_set_posix_acl\"     | `-RecoveryExpr 0x11e9454d0 <col:36, col:43> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11e945498 <col:36> 'struct inode *' lvalue ParmVar 0x11e928648 'inode' 'struct inode *'     |-SwitchStmt 0x11e9455d0 <line:11:2, line:30:2>     | |-ImplicitCastExpr 0x11e9455b8 <line:11:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x11e945598 <col:10> 'int' lvalue ParmVar 0x11e944ca8 'type' 'int'     | `-CompoundStmt 0x1288094f8 <col:16, line:30:2>     |   |-BinaryOperator 0x11e945688 <line:13:3, col:16> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x11e945610 <col:3> 'char *' lvalue Var 0x11e944fa0 'xattr_name' 'char *'     |   | `-RecoveryExpr 0x11e945668 <col:16> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x11e9459e8 <line:14:3, line:18:3>     |   | |-ImplicitCastExpr 0x11e9456c8 <line:14:7> 'struct posix_acl *' <LValueToRValue>     |   | | `-DeclRefExpr 0x11e9456a8 <col:7> 'struct posix_acl *' lvalue ParmVar 0x11e944c28 'acl' 'struct posix_acl *'     |   | `-CompoundStmt 0x11e9459c8 <col:12, line:18:3>     |   |   |-BinaryOperator 0x11e9458c8 <line:15:4, col:50> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x11e9456e0 <col:4> 'int' lvalue Var 0x11e944f08 'err' 'int'     |   |   | `-CallExpr 0x11e945898 <col:10, col:50> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x11e9457e0 <col:10> 'int ()' Function 0x11e945728 'posix_acl_equiv_mode' 'int ()'     |   |   |   |-DeclRefExpr 0x11e945800 <col:31> 'struct posix_acl *' lvalue ParmVar 0x11e944c28 'acl' 'struct posix_acl *'     |   |   |   `-UnaryOperator 0x11e945880 <col:36, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x11e945858 <col:37, col:44> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x11e945820 <col:37> 'struct inode *' lvalue ParmVar 0x11e928648 'inode' 'struct inode *'     |   |   `-IfStmt 0x11e9459a8 <line:16:4, line:17:12>     |   |     |-BinaryOperator 0x11e945940 <line:16:8, col:14> 'int' '<'     |   |     | |-ImplicitCastExpr 0x11e945928 <col:8> 'int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x11e9458e8 <col:8> 'int' lvalue Var 0x11e944f08 'err' 'int'     |   |     | `-IntegerLiteral 0x11e945908 <col:14> 'int' 0     |   |     `-ReturnStmt 0x11e945998 <line:17:5, col:12>     |   |       `-ImplicitCastExpr 0x11e945980 <col:12> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x11e945960 <col:12> 'int' lvalue Var 0x11e944f08 'err' 'int'     |   |-BinaryOperator 0x11e945a48 <line:19:3, col:9> 'int' '='     |   | |-DeclRefExpr 0x11e945a08 <col:3> 'int' lvalue Var 0x11e944f08 'err' 'int'     |   | `-IntegerLiteral 0x11e945a28 <col:9> 'int' 0     |   |-BreakStmt 0x11e945a68 <line:20:3>     |   |-BinaryOperator 0x11e945b00 <line:23:3, col:16> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x11e945a88 <col:3> 'char *' lvalue Var 0x11e944fa0 'xattr_name' 'char *'     |   | `-RecoveryExpr 0x11e945ae0 <col:16> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x128809408 <line:24:3, line:25:27>     |   | |-UnaryOperator 0x1288092a8 <line:24:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x128809280 <col:8, col:29> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x128809200 <col:8> 'int ()' Function 0x11e945b48 'S_ISDIR' 'int ()'     |   | |   `-RecoveryExpr 0x128809258 <col:16, col:23> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x128809220 <col:16> 'struct inode *' lvalue ParmVar 0x11e928648 'inode' 'struct inode *'     |   | `-ReturnStmt 0x1288093f8 <line:25:4, col:27>     |   |   `-ConditionalOperator 0x1288093c8 <col:11, col:27> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1288092c0 <col:11> 'struct posix_acl *' lvalue ParmVar 0x11e944c28 'acl' 'struct posix_acl *'     |   |     |-UnaryOperator 0x1288093b0 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     | `-ImplicitCastExpr 0x128809398 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x128809378 <col:18> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x128809328 <col:27> 'int' 0     |   |-BreakStmt 0x128809428 <line:26:3>     |   `-DefaultStmt 0x1288094d8 <line:28:2, line:29:11>     |     `-ReturnStmt 0x1288094c8 <col:3, col:11>     |       `-UnaryOperator 0x1288094b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x128809498 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x128809478 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128809da8 <line:32:2, line:42:2>     | |-ImplicitCastExpr 0x128809568 <line:32:6> 'struct posix_acl *' <LValueToRValue>     | | `-DeclRefExpr 0x128809548 <col:6> 'struct posix_acl *' lvalue ParmVar 0x11e944c28 'acl' 'struct posix_acl *'     | `-CompoundStmt 0x128809d88 <col:11, line:42:2>     |   |-BinaryOperator 0x1288099f8 <line:36:3, col:44> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x128809828 <col:3> 'char *' contains-errors lvalue Var 0x11e945160 'value' 'char *'     |   | `-CStyleCastExpr 0x1288099d0 <col:11, col:44> 'char *' <IntegralToPointer>     |   |   `-CallExpr 0x128809998 <col:19, col:44> 'int'     |   |     `-ImplicitCastExpr 0x128809980 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   |       `-DeclRefExpr 0x128809928 <col:19> 'int ()' Function 0x128809870 'hfsplus_alloc_attr_entry' 'int ()'     |   `-IfStmt 0x128809d68 <line:40:3, line:41:9>     |     |-CallExpr 0x128809cd8 <line:40:7, col:23> 'int'     |     | |-ImplicitCastExpr 0x128809cc0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x128809c28 <col:7> 'int ()' Function 0x128809730 'unlikely' 'int ()'     |     | `-BinaryOperator 0x128809ca0 <col:16, col:22> 'int' '<'     |     |   |-ImplicitCastExpr 0x128809c88 <col:16> 'int' <LValueToRValue>     |     |   | `-DeclRefExpr 0x128809c48 <col:16> 'int' lvalue Var 0x11e944f08 'err' 'int'     |     |   `-IntegerLiteral 0x128809c68 <col:22> 'int' 0     |     `-GotoStmt 0x128809d50 <line:41:4, col:9> 'end_set_acl' 0x128809d00     |-LabelStmt 0x12880a070 <line:46:1, col:12> 'end_set_acl'     | `-NullStmt 0x12880a068 <col:12>     |-IfStmt 0x12880b2d8 <line:49:2, line:50:34>     | |-UnaryOperator 0x12880a0c8 <line:49:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12880a0b0 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x12880a090 <col:7> 'int' lvalue Var 0x11e944f08 'err' 'int'     | `-CallExpr 0x12880b258 <line:50:3, col:34> 'int'     |   |-ImplicitCastExpr 0x12880b240 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12880a1c0 <col:3> 'int ()' Function 0x12880a108 'set_cached_acl' 'int ()'     |   |-ImplicitCastExpr 0x12880b290 <col:18> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x12880a1e0 <col:18> 'struct inode *' lvalue ParmVar 0x11e928648 'inode' 'struct inode *'     |   |-ImplicitCastExpr 0x12880b2a8 <col:25> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x12880b200 <col:25> 'int' lvalue ParmVar 0x11e944ca8 'type' 'int'     |   `-ImplicitCastExpr 0x12880b2c0 <col:31> 'struct posix_acl *' <LValueToRValue>     |     `-DeclRefExpr 0x12880b220 <col:31> 'struct posix_acl *' lvalue ParmVar 0x11e944c28 'acl' 'struct posix_acl *'     `-ReturnStmt 0x12880b330 <line:52:2, col:9>       `-ImplicitCastExpr 0x12880b318 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12880b2f8 <col:9> 'int' lvalue Var 0x11e944f08 'err' 'int' ","20853":"`-FunctionDecl 0x123026740  line:2:13 kvm_mmu_notifier_invalidate_range_end 'void (struct mmu_notifier *, const struct mmu_notifier_range *)' static   |-ParmVarDecl 0x12300e248 <col:51, col:72> col:72 used mn 'struct mmu_notifier *'   |-ParmVarDecl 0x123026628 <line:3:6, col:39> col:39 used range 'const struct mmu_notifier_range *'   `-CompoundStmt 0x12302d138 <line:4:1, line:28:38>     |-DeclStmt 0x123026c38 <line:5:2, col:43>     | |-RecordDecl 0x123026840 <col:2, col:9> col:9 struct kvm     | `-VarDecl 0x1230269a8 <col:2, col:42> col:14 used kvm 'struct kvm *' cinit     |   `-ImplicitCastExpr 0x123026c08 <col:20, col:42> 'struct kvm *' <IntegralToPointer>     |     `-CallExpr 0x123026bc8 <col:20, col:42> 'int'     |       |-ImplicitCastExpr 0x123026bb0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x123026b40 <col:20> 'int ()' Function 0x123026a88 'mmu_notifier_to_kvm' 'int ()'     |       `-ImplicitCastExpr 0x123026bf0 <col:40> 'struct mmu_notifier *' <LValueToRValue>     |         `-DeclRefExpr 0x123026b60 <col:40> 'struct mmu_notifier *' lvalue ParmVar 0x12300e248 'mn' 'struct mmu_notifier *'     |-DeclStmt 0x123027148 <line:6:2, line:14:3>     | |-RecordDecl 0x123026c50 <line:6:8, col:15> col:15 struct kvm_hva_range     | `-VarDecl 0x123026d48 <col:2, col:29> col:29 invalid hva_range 'const struct kvm_hva_range'     |-CallExpr 0x1230272b8 <line:17:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123027240 <col:2> 'int ()' Function 0x123027188 '__kvm_handle_hva_range' 'int ()'     | |-DeclRefExpr 0x123027260 <col:25> 'struct kvm *' lvalue Var 0x1230269a8 'kvm' 'struct kvm *'     | `-UnaryOperator 0x1230272a0 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x123027280 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x123027460 <line:20:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1230273c8 <col:2> 'int ()' Function 0x123027310 'spin_lock' 'int ()'     | `-UnaryOperator 0x123027448 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x123027420 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1230273e8 <col:13> 'struct kvm *' lvalue Var 0x1230269a8 'kvm' 'struct kvm *'     |-CallExpr 0x12302cd50 <line:22:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12302ccb8 <col:2> 'int ()' Function 0x12302cc00 'spin_unlock' 'int ()'     | `-UnaryOperator 0x12302cd38 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12302cd10 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12302ccd8 <col:15> 'struct kvm *' lvalue Var 0x1230269a8 'kvm' 'struct kvm *'     |-IfStmt 0x12302cf50 <line:25:2, line:26:51>     | |-RecoveryExpr 0x12302cd90 <line:25:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12302cf28 <line:26:3, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12302ce90 <col:3> 'int ()' Function 0x12302cdd8 'rcuwait_wake_up' 'int ()'     |   `-UnaryOperator 0x12302cf10 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12302cee8 <col:20, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12302ceb0 <col:20> 'struct kvm *' lvalue Var 0x1230269a8 'kvm' 'struct kvm *'     `-CallExpr 0x12302d110 <line:28:2, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x12302d050 <col:2> 'int ()' Function 0x12302cf98 'BUG_ON' 'int ()'       `-BinaryOperator 0x12302d0f0 <col:9, col:35> 'int' contains-errors '<'         |-RecoveryExpr 0x12302d0a8 <col:9, col:14> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x12302d070 <col:9> 'struct kvm *' lvalue Var 0x1230269a8 'kvm' 'struct kvm *'         `-IntegerLiteral 0x12302d0d0 <col:35> 'int' 0 ","21243":"`-FunctionDecl 0x14e943020  col:14 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x14e943120 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14e943188 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x14e9431f0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x14e9430c8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x14e943270 <col:14> Implicit printf 3 4 ","21084":"`-FunctionDecl 0x1519281f8  line:1:1 invalid zsetdevice 'int (int *)'   |-ParmVarDecl 0x151928128 <col:12, col:21> col:21 invalid i_ctx_p 'int *'   `-CompoundStmt 0x151942590 <line:2:1, line:25:1>     |-DeclStmt 0x151928520 <line:5:5, col:17>     | `-VarDecl 0x151928498 <col:5, col:16> col:9 used code 'int' cinit     |   `-IntegerLiteral 0x151928500 <col:16> 'int' 0     |-CallExpr 0x151928738 <line:7:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151928618 <col:5> 'int ()' Function 0x151928560 'check_write_type' 'int ()'     | |-UnaryOperator 0x151928700 <col:22, col:23> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1519286e8 <col:23> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1519286c8 <col:23> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x151928718 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151941bd8 <line:8:5, line:11:5>     | |-CXXDependentScopeMemberExpr 0x151941800 <line:8:9, col:14> '<dependent type>' contains-errors lvalue ->LockSafetyParams     | | `-RecoveryExpr 0x1519287c8 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151941bc0 <col:32, line:11:5>     |   `-IfStmt 0x151941ba0 <line:9:9, line:10:48>     |     |-BinaryOperator 0x1519419f8 <line:9:12, col:33> 'int' contains-errors '!='     |     | |-CXXDependentScopeMemberExpr 0x151941990 <col:12, col:22> '<dependent type>' contains-errors lvalue .pdevice     |     | | `-CXXDependentScopeMemberExpr 0x151941948 <col:12, col:16> '<dependent type>' contains-errors lvalue ->value     |     | |   `-RecoveryExpr 0x151941928 <col:12> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x1519419d8 <col:33> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x151941b78 <line:10:13, col:48> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x151941af8 <col:13> 'int ()' Function 0x151941a40 'return_error' 'int ()'     |       `-RecoveryExpr 0x151941b58 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151941f68 <line:14:5, line:15:48>     | |-BinaryOperator 0x151941db0 <line:14:9, col:30> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x151941d68 <col:9, col:19> '<dependent type>' contains-errors lvalue .pdevice     | | | `-CXXDependentScopeMemberExpr 0x151941d20 <col:9, col:13> '<dependent type>' contains-errors lvalue ->value     | | |   `-RecoveryExpr 0x151941d00 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x151941cc0 <col:30> 'int' 0     | `-ReturnStmt 0x151941f58 <line:15:9, col:48>     |   `-CallExpr 0x151941f30 <col:16, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x151941eb0 <col:16> 'int ()' Function 0x151941df8 'gs_note_error' 'int ()'     |     `-RecoveryExpr 0x151941f10 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151942168 <line:18:5, line:19:16>     | |-BinaryOperator 0x151942100 <line:18:9, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x1519420e8 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1519420a8 <col:9> 'int' lvalue Var 0x151928498 'code' 'int'     | | `-IntegerLiteral 0x1519420c8 <col:16> 'int' 0     | `-ReturnStmt 0x151942158 <line:19:9, col:16>     |   `-ImplicitCastExpr 0x151942140 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x151942120 <col:16> 'int' lvalue Var 0x151928498 'code' 'int'     |-CallExpr 0x151942420 <line:22:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1519423e0 <col:5> 'int ()' Function 0x151942328 'invalidate_stack_devices' 'int ()'     | `-RecoveryExpr 0x151942400 <col:30> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x151942580 <line:24:5, col:12>       `-ImplicitCastExpr 0x151942568 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x151942548 <col:12> 'int' lvalue Var 0x151928498 'code' 'int' ","20451":"`-FunctionDecl 0x13f827c80  col:50 implicit used calloc 'void *(unsigned long, unsigned long)' extern   |-ParmVarDecl 0x13f827d80 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x13f827de8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x13f827d28 <<invalid sloc>> Implicit 868   `-AllocSizeAttr 0x13f827e60 <col:50> Implicit 1 2 ","20475":"`-FunctionDecl 0x14e1289f0  line:1:13 invalid xml_parser_dtor 'void (int *)' static   |-ParmVarDecl 0x14e128928 <col:29, col:51> col:51 invalid rsrc 'int *'   `-CompoundStmt 0x14e142d98 <line:2:1, line:55:1>     |-IfStmt 0x14e128e40 <line:5:2, line:7:2>     | |-CXXDependentScopeMemberExpr 0x14e128b50 <line:5:6, col:14> '<dependent type>' contains-errors lvalue ->parser     | | `-RecoveryExpr 0x14e128b30 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e128e28 <col:22, line:7:2>     |   `-CallExpr 0x14e128e00 <line:6:3, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14e128cf0 <col:3> 'int ()' Function 0x14e128c38 'XML_ParserFree' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14e128db8 <col:18, col:26> '<dependent type>' contains-errors lvalue ->parser     |       `-RecoveryExpr 0x14e128d98 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e142428 <line:8:2, line:13:2>     | |-CXXDependentScopeMemberExpr 0x14e128ee0 <line:8:6, col:14> '<dependent type>' contains-errors lvalue ->ltags     | | `-RecoveryExpr 0x14e128ec0 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e142408 <col:21, line:13:2>     |   |-DeclStmt 0x14e128fa8 <line:9:3, col:10>     |   | `-VarDecl 0x14e128f40 <col:3, col:7> col:7 used inx 'int'     |   `-CallExpr 0x14e1423e0 <line:12:3, col:22> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14e1422d0 <col:3> 'int ()' Function 0x14e142178 'efree' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14e142398 <col:9, col:17> '<dependent type>' contains-errors lvalue ->ltags     |       `-RecoveryExpr 0x14e142378 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e142770 <line:14:2, line:16:2>     | |-CXXDependentScopeMemberExpr 0x14e1424c8 <line:14:6, col:14> '<dependent type>' contains-errors lvalue ->startElementHandler     | | `-RecoveryExpr 0x14e1424a8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e142758 <col:35, line:16:2>     |   `-CallExpr 0x14e142730 <line:15:3, col:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14e1425f0 <col:3> 'int ()' Function 0x14e142538 'zval_ptr_dtor' 'int ()'     |     `-UnaryOperator 0x14e142718 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-CXXDependentScopeMemberExpr 0x14e1426d0 <col:18, col:26> '<dependent type>' contains-errors lvalue ->startElementHandler     |         `-RecoveryExpr 0x14e1426b0 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e142888 <line:17:2, line:19:2>     | |-CXXDependentScopeMemberExpr 0x14e142810 <line:17:6, col:14> '<dependent type>' contains-errors lvalue ->endElementHandler     | | `-RecoveryExpr 0x14e1427f0 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e142878 <col:33, line:19:2>     |-IfStmt 0x14e1428f8 <line:20:2, line:22:2>     | |-RecoveryExpr 0x14e1428a8 <line:20:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e1428e8 <col:36, line:22:2>     |-IfStmt 0x14e142968 <line:23:2, line:25:2>     | |-RecoveryExpr 0x14e142918 <line:23:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e142958 <col:44, line:25:2>     |-IfStmt 0x14e1429d8 <line:26:2, line:28:2>     | |-RecoveryExpr 0x14e142988 <line:26:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e1429c8 <col:30, line:28:2>     |-IfStmt 0x14e142a48 <line:29:2, line:31:2>     | |-RecoveryExpr 0x14e1429f8 <line:29:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e142a38 <col:41, line:31:2>     |-IfStmt 0x14e142ab8 <line:32:2, line:34:2>     | |-RecoveryExpr 0x14e142a68 <line:32:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e142aa8 <col:35, line:34:2>     |-IfStmt 0x14e142b28 <line:35:2, line:37:2>     | |-RecoveryExpr 0x14e142ad8 <line:35:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e142b18 <col:40, line:37:2>     |-IfStmt 0x14e142b98 <line:38:2, line:40:2>     | |-RecoveryExpr 0x14e142b48 <line:38:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e142b88 <col:38, line:40:2>     |-IfStmt 0x14e142c08 <line:41:2, line:43:2>     | |-RecoveryExpr 0x14e142bb8 <line:41:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e142bf8 <col:41, line:43:2>     |-IfStmt 0x14e142c78 <line:44:2, line:46:2>     | |-RecoveryExpr 0x14e142c28 <line:44:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e142c68 <col:39, line:46:2>     |-IfStmt 0x14e142ce8 <line:47:2, line:49:2>     | |-RecoveryExpr 0x14e142c98 <line:47:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x14e142cd8 <col:23, line:49:2>     `-IfStmt 0x14e142d58 <line:50:2, line:52:2>       |-RecoveryExpr 0x14e142d08 <line:50:6, col:14> '_Bool' contains-errors       `-CompoundStmt 0x14e142d48 <col:22, line:52:2> ","20422":"`-FunctionDecl 0x1241289a0  line:1:13 v9fs_getattr 'void (void *)' static   |-ParmVarDecl 0x1241288d8 <col:26, col:32> col:32 used opaque 'void *'   `-CompoundStmt 0x124142350 <line:2:1, line:59:1>     |-RecoveryExpr 0x124128b90 <line:4:5, col:21> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x124128b70 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x124128b50 <col:12> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x124128ae8 <col:21> 'int' 7     |-DeclStmt 0x124808958 <line:6:5, col:22>     | |-RecordDecl 0x124128bc0 <col:5, col:12> col:12 struct stat     | `-VarDecl 0x124128cb8 <col:5, col:17> col:17 invalid stbuf 'struct stat'     |-IfStmt 0x124808d68 <line:14:5, line:16:5>     | |-RecoveryExpr 0x124808cc8 <line:14:9, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x124808d50 <col:21, line:16:5>     |   `-GotoStmt 0x124808d38 <line:15:9, col:14> 'out_nofid' 0x124808ce8     |-IfStmt 0x124808fd8 <line:20:5, line:23:5>     | |-RecoveryExpr 0x124808f88 <line:20:9, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x124808fc0 <col:23, line:23:5>     |   `-GotoStmt 0x124808fa8 <line:22:9, col:14> 'out_nofid' 0x124808ce8     |-IfStmt 0x1248091f0 <line:26:5, line:28:5>     | |-RecoveryExpr 0x124809150 <line:26:9, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x1248091d8 <col:21, line:28:5>     |   `-GotoStmt 0x1248091c0 <line:27:9, col:14> 'out' 0x124809170     |-IfStmt 0x124809610 <line:32:5, line:46:5>     | |-RecoveryExpr 0x124809348 <line:32:9, col:24> '_Bool' contains-errors     | `-CompoundStmt 0x1248095f8 <col:38, line:46:5>     |   `-SwitchStmt 0x1248094f0 <line:34:9, line:45:9>     |     |-RecoveryExpr 0x1248094d0 <line:34:17> 'int' contains-errors     |     `-CompoundStmt 0x1248095c8 <col:25, line:45:9>     |       |-CaseStmt 0x124809550 <line:35:9, <invalid sloc>>     |       | |-ConstantExpr 0x124809538 <col:14> 'int'     |       | | `-IntegerLiteral 0x124809518 <col:14> 'int' 0     |       | `-NullStmt 0x124809578 <<invalid sloc>>     |       |-BreakStmt 0x124809580 <line:38:13>     |       |-GotoStmt 0x124809588 <line:41:13, col:18> 'out' 0x124809170     |       `-DefaultStmt 0x1248095a8 <line:42:9, line:44:13>     |         `-BreakStmt 0x1248095a0 <col:13>     |-IfStmt 0x1248097c0 <line:48:5, line:50:5>     | |-RecoveryExpr 0x124809770 <line:48:9, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x1248097a8 <col:21, line:50:5>     |   `-GotoStmt 0x124809790 <line:49:9, col:14> 'out' 0x124809170     |-LabelStmt 0x124142208 <line:55:1, col:4> 'out'     | `-NullStmt 0x124142200 <col:4>     `-LabelStmt 0x124142330 <line:57:1, col:10> 'out_nofid'       `-NullStmt 0x124142328 <col:10> ","21113":"`-FunctionDecl 0x1581281f8  line:1:5 invalid ssl_parse_certificate 'int (int *)'   |-ParmVarDecl 0x158128128 <col:28, col:41> col:41 referenced invalid ssl 'int *'   `-CompoundStmt 0x158141cd8 <line:2:1, line:18:1>     |-DeclStmt 0x1581283d8 <line:3:5, col:91>     | `-VarDecl 0x1581282c0 <col:5, col:30> col:30 invalid ciphersuite_info 'const int *'     |-CallExpr 0x158128658 <line:5:5, col:33> 'int'     | |-ImplicitCastExpr 0x158128640 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x158128550 <col:5> 'int ()' Function 0x158128498 'SSL_DEBUG_MSG' 'int ()'     | |-IntegerLiteral 0x158128570 <col:20> 'int' 2     | `-ImplicitCastExpr 0x158128688 <col:23, col:31> 'char *' <ArrayToPointerDecay>     |   `-ParenExpr 0x1581285f0 <col:23, col:31> 'char[4]' lvalue     |     `-StringLiteral 0x1581285d0 <col:25> 'char[4]' lvalue \"STR\"     |-IfStmt 0x158141bc0 <line:7:5, line:14:5>     | |-BinaryOperator 0x1581419a0 <line:7:9, line:9:43> 'int' contains-errors '||'     | | |-BinaryOperator 0x158141940 <line:7:9, line:8:43> 'int' contains-errors '||'     | | | |-BinaryOperator 0x1581418e0 <line:7:9, col:43> 'int' contains-errors '=='     | | | | |-CXXDependentScopeMemberExpr 0x1581286c0 <col:9, col:27> '<dependent type>' contains-errors lvalue ->key_exchange     | | | | | `-RecoveryExpr 0x1581286a0 <col:9> '<dependent type>' contains-errors lvalue     | | | | `-RecoveryExpr 0x1581418c0 <col:43> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x158141920 <line:8:9, col:43> 'int' contains-errors '=='     | | |   |-CXXDependentScopeMemberExpr 0x158128760 <col:9, col:27> '<dependent type>' contains-errors lvalue ->key_exchange     | | |   | `-RecoveryExpr 0x158128740 <col:9> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x158141900 <col:43> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x158141980 <line:9:9, col:43> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x158141820 <col:9, col:27> '<dependent type>' contains-errors lvalue ->key_exchange     | |   | `-RecoveryExpr 0x158141800 <col:9> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x158141960 <col:43> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x158141b98 <line:10:5, line:14:5>     |   |-CallExpr 0x158141a58 <line:11:9, col:37> 'int'     |   | |-ImplicitCastExpr 0x158141a40 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1581419c0 <col:9> 'int ()' Function 0x158128498 'SSL_DEBUG_MSG' 'int ()'     |   | |-IntegerLiteral 0x1581419e0 <col:24> 'int' 2     |   | `-ImplicitCastExpr 0x158141a88 <col:27, col:35> 'char *' <ArrayToPointerDecay>     |   |   `-ParenExpr 0x158141a20 <col:27, col:35> 'char[4]' lvalue     |   |     `-StringLiteral 0x158141a00 <col:29> 'char[4]' lvalue \"STR\"     |   |-UnaryOperator 0x158141b30 <line:12:9, col:19> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x158141ae8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->state     |   |   `-RecoveryExpr 0x158141ac0 <col:9> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x158141aa0 <col:9> 'int *' lvalue ParmVar 0x158128128 'ssl' 'int *'     |   `-ReturnStmt 0x158141b88 <line:13:9, col:19>     |     `-ParenExpr 0x158141b68 <col:15, col:19> 'int'     |       `-IntegerLiteral 0x158141b48 <col:17> 'int' 0     `-CallExpr 0x158141c78 <line:16:5, col:33> 'int'       |-ImplicitCastExpr 0x158141c60 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x158141be0 <col:5> 'int ()' Function 0x158128498 'SSL_DEBUG_MSG' 'int ()'       |-IntegerLiteral 0x158141c00 <col:20> 'int' 1       `-ImplicitCastExpr 0x158141ca8 <col:23, col:31> 'char *' <ArrayToPointerDecay>         `-ParenExpr 0x158141c40 <col:23, col:31> 'char[4]' lvalue           `-StringLiteral 0x158141c20 <col:25> 'char[4]' lvalue \"STR\" ","20785":"`-FunctionDecl 0x11d808358  line:1:1 invalid rsock_s_recvfrom 'int (int, int, int *, enum sock_recv_type)'   |-ParmVarDecl 0x11d00dcf0 <col:18, col:24> col:24 invalid sock 'int'   |-ParmVarDecl 0x11d00dd70 <col:30, col:34> col:34 used argc 'int'   |-ParmVarDecl 0x11d00de28 <col:40, col:47> col:47 invalid argv 'int *'   |-ParmVarDecl 0x11d808200 <col:53, col:73> col:73 invalid from 'enum sock_recv_type'   `-CompoundStmt 0x11d029ed8 <line:2:1, line:60:1>     |-DeclStmt 0x11d8085b8 <line:5:5, col:28>     | |-RecordDecl 0x11d808438 <col:5, col:12> col:12 struct recvfrom_arg     | `-VarDecl 0x11d808538 <col:5, col:25> col:25 referenced invalid arg 'struct recvfrom_arg'     |-DeclStmt 0x11d808650 <line:7:5, col:16>     | `-VarDecl 0x11d8085e8 <col:5, col:10> col:10 used buflen 'long'     |-DeclStmt 0x11d8086e8 <line:8:5, col:14>     | `-VarDecl 0x11d808680 <col:5, col:10> col:10 used slen 'long'     |-CallExpr 0x11d808b10 <line:10:5, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d808860 <col:5> 'int ()' Function 0x11d8087a8 'rb_scan_args' 'int ()'     | |-DeclRefExpr 0x11d808880 <col:18> 'int' lvalue ParmVar 0x11d00dd70 'argc' 'int'     | |-RecoveryExpr 0x11d8088a0 <col:24> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x11d808900 <col:30> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x11d808a88 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x11d808a68 <col:38> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x11d808ac0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x11d808aa0 <col:44> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x11d808af8 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11d808ad8 <col:50> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d808f38 <line:12:5, line:13:45> has_else     | |-BinaryOperator 0x11d808bf0 <line:12:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x11d808bb0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x11d808bd0 <col:16> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x11d808cc0 <col:22, col:34> '<dependent type>' contains-errors '='     | | |-CXXDependentScopeMemberExpr 0x11d808c58 <col:22, col:26> '<dependent type>' contains-errors lvalue .flags     | | | `-RecoveryExpr 0x11d808c30 <col:22> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x11d808c10 <col:22> 'struct recvfrom_arg' lvalue Var 0x11d808538 'arg' 'struct recvfrom_arg'     | | `-IntegerLiteral 0x11d808ca0 <col:34> 'int' 0     | `-BinaryOperator 0x11d808f18 <line:13:22, col:45> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x11d808d28 <col:22, col:26> '<dependent type>' contains-errors lvalue .flags     |   | `-RecoveryExpr 0x11d808d00 <col:22> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x11d808ce0 <col:22> 'struct recvfrom_arg' lvalue Var 0x11d808538 'arg' 'struct recvfrom_arg'     |   `-CallExpr 0x11d808ef0 <col:34, col:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11d808e50 <col:34> 'int ()' Function 0x11d808d98 'NUM2INT' 'int ()'     |     `-RecoveryExpr 0x11d808ed0 <col:42> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11d8090d0 <line:14:5, col:25> 'long' '='     | |-DeclRefExpr 0x11d808f68 <col:5> 'long' lvalue Var 0x11d8085e8 'buflen' 'long'     | `-ImplicitCastExpr 0x11d8090b8 <col:14, col:25> 'long' <IntegralCast>     |   `-CallExpr 0x11d809078 <col:14, col:25> 'int'     |     |-ImplicitCastExpr 0x11d809060 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x11d808f88 <col:14> 'int ()' Function 0x11d808d98 'NUM2INT' 'int ()'     |     `-ImplicitCastExpr 0x11d8090a0 <col:22> 'long' <LValueToRValue>     |       `-DeclRefExpr 0x11d809008 <col:22> 'long' lvalue Var 0x11d808680 'slen' 'long'     |-IfStmt 0x11d028590 <line:18:5, line:20:5>     | |-RecoveryExpr 0x11d028440 <line:18:9, col:32> '_Bool' contains-errors     | `-CompoundStmt 0x11d028580 <col:35, line:20:5>     |-WhileStmt 0x11d028e58 <line:25:5, line:32:5>     | |-RecoveryExpr 0x11d028b50 <line:25:12, line:28:57> '_Bool' contains-errors     | `-CompoundStmt 0x11d028e40 <col:60, line:32:5>     |   `-IfStmt 0x11d028e20 <line:29:9, line:31:9>     |     |-RecoveryExpr 0x11d028c70 <line:29:13, col:42> '_Bool' contains-errors     |     `-CompoundStmt 0x11d028e08 <col:45, line:31:9>     |       `-CallExpr 0x11d028dc8 <line:30:13, col:30> 'int'     |         |-ImplicitCastExpr 0x11d028db0 <col:13> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x11d028d70 <col:13> 'int ()' Function 0x11d028cb8 'rb_sys_fail' 'int ()'     |         `-ImplicitCastExpr 0x11d028df0 <col:25> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x11d028d90 <col:25> 'char[4]' lvalue \"STR\"     |-IfStmt 0x11d0290e8 <line:34:5, line:36:5>     | |-RecoveryExpr 0x11d028f98 <line:34:9, col:32> '_Bool' contains-errors     | `-CompoundStmt 0x11d0290d8 <col:35, line:36:5>     `-SwitchStmt 0x11d029140 <line:37:5, line:59:5>       |-RecoveryExpr 0x11d029108 <line:37:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x11d029ec0 <col:19, line:59:5>         `-DefaultStmt 0x11d029ea0 <line:57:7, line:58:14>           `-CallExpr 0x11d029e60 <col:2, col:14> 'int'             |-ImplicitCastExpr 0x11d029e48 <col:2> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x11d029e08 <col:2> 'int ()' Function 0x11d029d50 'rb_bug' 'int ()'             `-ImplicitCastExpr 0x11d029e88 <col:9> 'char *' <ArrayToPointerDecay>               `-StringLiteral 0x11d029e28 <col:9> 'char[4]' lvalue \"STR\" ","20360":"`-FunctionDecl 0x1390b6560  line:1:13 invalid vnc_write_pixels_copy 'void (int *, struct PixelFormat *, void *, int)' static   |-ParmVarDecl 0x13887d528 <col:35, col:45> col:45 invalid vs 'int *'   |-ParmVarDecl 0x13887db18 <col:49, col:69> col:69 pf 'struct PixelFormat *'   |-ParmVarDecl 0x13887db98 <line:2:35, col:41> col:41 used pixels 'void *'   |-ParmVarDecl 0x1390b6418 <col:49, col:53> col:53 used size 'int'   `-CompoundStmt 0x1390b6838 <line:3:1, line:5:1>     `-CallExpr 0x1390b6800 <line:4:5, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x1390b6780 <col:5> 'int ()' Function 0x1390b66c8 'vnc_write' 'int ()'       |-RecoveryExpr 0x1390b67a0 <col:15> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x1390b67c0 <col:19> 'void *' lvalue ParmVar 0x13887db98 'pixels' 'void *'       `-DeclRefExpr 0x1390b67e0 <col:27> 'int' lvalue ParmVar 0x1390b6418 'size' 'int' ","20682":"`-FunctionDecl 0x1448269c8  line:1:1 new_conn 'int (struct conntrack_bucket *, struct dp_packet *, struct conn_key *, long long)'   |-ParmVarDecl 0x14480e248 <col:10, col:35> col:35 used ctb 'struct conntrack_bucket *'   |-ParmVarDecl 0x144826628 <col:40, col:58> col:58 used pkt 'struct dp_packet *'   |-ParmVarDecl 0x1448267f8 <line:2:10, col:27> col:27 used key 'struct conn_key *'   |-ParmVarDecl 0x144826878 <col:32, col:42> col:42 used now 'long long'   `-CompoundStmt 0x144826bc8 <line:3:1, line:5:1> ","20516":"`-FunctionDecl 0x13c80ddc8  line:1:16 invalid dummy_apc 'int (int)' static   |-ParmVarDecl 0x13c80dcf0 <col:27, col:36> col:36 invalid param 'int'   `-CompoundStmt 0x13c80dea8 <line:2:1, line:4:1>     `-ReturnStmt 0x13c80de98 <line:3:2, col:9>       `-IntegerLiteral 0x13c80de78 <col:9> 'int' 0 ","20245":"`-FunctionDecl 0x14e940ca8  line:1:12 rose_getname 'int (struct socket *, struct sockaddr *, int *, int)' static   |-ParmVarDecl 0x14e928648 <col:25, col:40> col:40 used sock 'struct socket *'   |-ParmVarDecl 0x14e940a28 <col:46, col:63> col:63 used uaddr 'struct sockaddr *'   |-ParmVarDecl 0x14e940ad8 <line:2:2, col:7> col:7 used uaddr_len 'int *'   |-ParmVarDecl 0x14e940b58 <col:18, col:22> col:22 used peer 'int'   `-CompoundStmt 0x14e948e78 <line:3:1, line:29:1>     |-DeclStmt 0x14e941090 <line:4:2, col:71>     | |-RecordDecl 0x14e940db8 <col:2, col:9> col:9 struct full_sockaddr_rose     | `-VarDecl 0x14e940f28 <col:2, col:66> col:29 used srose 'struct full_sockaddr_rose *' cinit     |   `-CStyleCastExpr 0x14e941050 <col:37, col:66> 'struct full_sockaddr_rose *' <BitCast>     |     `-ImplicitCastExpr 0x14e941038 <col:66> 'struct sockaddr *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x14e940f90 <col:66> 'struct sockaddr *' lvalue ParmVar 0x14e940a28 'uaddr' 'struct sockaddr *'     |-DeclStmt 0x14e9412f8 <line:5:2, col:28>     | |-RecordDecl 0x14e9410a8 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x14e941218 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x14e9412b8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14e941280 <col:20> 'struct socket *' lvalue ParmVar 0x14e928648 'sock' 'struct socket *'     |-DeclStmt 0x14e941708 <line:6:2, col:38>     | |-RecordDecl 0x14e941310 <col:2, col:9> col:9 struct rose_sock     | `-VarDecl 0x14e941478 <col:2, col:37> col:20 used rose 'struct rose_sock *' cinit     |   `-ImplicitCastExpr 0x14e9416d8 <col:27, col:37> 'struct rose_sock *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x14e941698 <col:27, col:37> 'int' contains-errors     |       |-ImplicitCastExpr 0x14e941680 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14e941610 <col:27> 'int ()' Function 0x14e941558 'rose_sk' 'int ()'     |       `-ImplicitCastExpr 0x14e9416c0 <col:35> 'struct sock *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14e941630 <col:35> 'struct sock *' contains-errors lvalue Var 0x14e941218 'sk' 'struct sock *'     |-DeclStmt 0x14e9417a0 <line:7:2, col:7>     | `-VarDecl 0x14e941738 <col:2, col:6> col:6 used n 'int'     |-IfStmt 0x14e948da8 <line:9:2, line:25:2> has_else     | |-BinaryOperator 0x14e941810 <line:9:6, col:14> 'int' '!='     | | |-ImplicitCastExpr 0x14e9417f8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e9417b8 <col:6> 'int' lvalue ParmVar 0x14e940b58 'peer' 'int'     | | `-IntegerLiteral 0x14e9417d8 <col:14> 'int' 0     | |-CompoundStmt 0x14e948688 <col:17, line:18:2>     | | |-IfStmt 0x14e9419b0 <line:10:3, line:11:12>     | | | |-BinaryOperator 0x14e9418e8 <line:10:7, col:23> 'int' contains-errors '!='     | | | | |-RecoveryExpr 0x14e941868 <col:7, col:11> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x14e941830 <col:7> 'struct sock *' contains-errors lvalue Var 0x14e941218 'sk' 'struct sock *'     | | | | `-RecoveryExpr 0x14e9418c8 <col:23> '<dependent type>' contains-errors lvalue     | | | `-ReturnStmt 0x14e9419a0 <line:11:4, col:12>     | | |   `-UnaryOperator 0x14e941988 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |     `-ImplicitCastExpr 0x14e941970 <col:12> '<dependent type>' contains-errors <LValueToRValue>     | | |       `-RecoveryExpr 0x14e941950 <col:12> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x14e948098 <line:12:3, col:25> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x14e948018 <col:3, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14e9419d0 <col:3> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     | | | `-RecoveryExpr 0x14e948078 <col:25> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x14e948178 <line:13:3, col:31> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x14e9480f0 <col:3, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14e9480b8 <col:3> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     | | | `-RecoveryExpr 0x14e948150 <col:25, col:31> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14e948118 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     | | |-BinaryOperator 0x14e948258 <line:14:3, col:31> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x14e9481d0 <col:3, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14e948198 <col:3> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     | | | `-RecoveryExpr 0x14e948230 <col:25, col:31> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14e9481f8 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     | | |-BinaryOperator 0x14e948338 <line:15:3, col:31> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x14e9482b0 <col:3, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14e948278 <col:3> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     | | | `-RecoveryExpr 0x14e948310 <col:25, col:31> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14e9482d8 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     | | `-ForStmt 0x14e948650 <line:16:3, line:17:46>     | |   |-BinaryOperator 0x14e948398 <line:16:8, col:12> 'int' '='     | |   | |-DeclRefExpr 0x14e948358 <col:8> 'int' lvalue Var 0x14e941738 'n' 'int'     | |   | `-IntegerLiteral 0x14e948378 <col:12> 'int' 0     | |   |-<<<NULL>>>     | |   |-BinaryOperator 0x14e948438 <col:15, col:25> 'int' contains-errors '<'     | |   | |-DeclRefExpr 0x14e9483b8 <col:15> 'int' lvalue Var 0x14e941738 'n' 'int'     | |   | `-RecoveryExpr 0x14e948410 <col:19, col:25> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14e9483d8 <col:19> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     | |   |-UnaryOperator 0x14e948478 <col:38, col:39> 'int' postfix '++'     | |   | `-DeclRefExpr 0x14e948458 <col:38> 'int' lvalue Var 0x14e941738 'n' 'int'     | |   `-BinaryOperator 0x14e948630 <line:17:4, col:46> '<dependent type>' contains-errors '='     | |     |-ArraySubscriptExpr 0x14e948540 <col:4, col:24> '<dependent type>' contains-errors lvalue     | |     | |-ImplicitCastExpr 0x14e948510 <col:4, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |     | | `-RecoveryExpr 0x14e9484c8 <col:4, col:11> '<dependent type>' contains-errors lvalue     | |     | |   `-DeclRefExpr 0x14e948490 <col:4> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     | |     | `-ImplicitCastExpr 0x14e948528 <col:23> 'int' <LValueToRValue>     | |     |   `-DeclRefExpr 0x14e9484f0 <col:23> 'int' lvalue Var 0x14e941738 'n' 'int'     | |     `-ArraySubscriptExpr 0x14e948610 <col:28, col:46> '<dependent type>' contains-errors lvalue     | |       |-ImplicitCastExpr 0x14e9485e0 <col:28, col:34> '<dependent type>' contains-errors <LValueToRValue>     | |       | `-RecoveryExpr 0x14e948598 <col:28, col:34> '<dependent type>' contains-errors lvalue     | |       |   `-DeclRefExpr 0x14e948560 <col:28> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     | |       `-ImplicitCastExpr 0x14e9485f8 <col:45> 'int' <LValueToRValue>     | |         `-DeclRefExpr 0x14e9485c0 <col:45> 'int' lvalue Var 0x14e941738 'n' 'int'     | `-CompoundStmt 0x14e948d70 <line:18:9, line:25:2>     |   |-BinaryOperator 0x14e948780 <line:19:3, col:25> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14e948700 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e9486c8 <col:3> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     |   | `-RecoveryExpr 0x14e948760 <col:25> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14e948860 <line:20:3, col:31> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14e9487d8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e9487a0 <col:3> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     |   | `-RecoveryExpr 0x14e948838 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14e948800 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     |   |-BinaryOperator 0x14e948940 <line:21:3, col:31> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14e9488b8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e948880 <col:3> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     |   | `-RecoveryExpr 0x14e948918 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14e9488e0 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     |   |-BinaryOperator 0x14e948a20 <line:22:3, col:31> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14e948998 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e948960 <col:3> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     |   | `-RecoveryExpr 0x14e9489f8 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14e9489c0 <col:25> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     |   `-ForStmt 0x14e948d38 <line:23:3, line:24:48>     |     |-BinaryOperator 0x14e948a80 <line:23:8, col:12> 'int' '='     |     | |-DeclRefExpr 0x14e948a40 <col:8> 'int' lvalue Var 0x14e941738 'n' 'int'     |     | `-IntegerLiteral 0x14e948a60 <col:12> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x14e948b20 <col:15, col:25> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x14e948aa0 <col:15> 'int' lvalue Var 0x14e941738 'n' 'int'     |     | `-RecoveryExpr 0x14e948af8 <col:19, col:25> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14e948ac0 <col:19> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     |     |-UnaryOperator 0x14e948b60 <col:40, col:41> 'int' postfix '++'     |     | `-DeclRefExpr 0x14e948b40 <col:40> 'int' lvalue Var 0x14e941738 'n' 'int'     |     `-BinaryOperator 0x14e948d18 <line:24:4, col:48> '<dependent type>' contains-errors '='     |       |-ArraySubscriptExpr 0x14e948c28 <col:4, col:24> '<dependent type>' contains-errors lvalue     |       | |-ImplicitCastExpr 0x14e948bf8 <col:4, col:11> '<dependent type>' contains-errors <LValueToRValue>     |       | | `-RecoveryExpr 0x14e948bb0 <col:4, col:11> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x14e948b78 <col:4> 'struct full_sockaddr_rose *' lvalue Var 0x14e940f28 'srose' 'struct full_sockaddr_rose *'     |       | `-ImplicitCastExpr 0x14e948c10 <col:23> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x14e948bd8 <col:23> 'int' lvalue Var 0x14e941738 'n' 'int'     |       `-ArraySubscriptExpr 0x14e948cf8 <col:28, col:48> '<dependent type>' contains-errors lvalue     |         |-ImplicitCastExpr 0x14e948cc8 <col:28, col:34> '<dependent type>' contains-errors <LValueToRValue>     |         | `-RecoveryExpr 0x14e948c80 <col:28, col:34> '<dependent type>' contains-errors lvalue     |         |   `-DeclRefExpr 0x14e948c48 <col:28> 'struct rose_sock *' contains-errors lvalue Var 0x14e941478 'rose' 'struct rose_sock *'     |         `-ImplicitCastExpr 0x14e948ce0 <col:47> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x14e948ca8 <col:47> 'int' lvalue Var 0x14e941738 'n' 'int'     `-ReturnStmt 0x14e948e68 <line:28:2, col:9>       `-IntegerLiteral 0x14e948e48 <col:9> 'int' 0 ","21075":"`-FunctionDecl 0x121123a58  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x121123b58 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x121123b00 <<invalid sloc>> Implicit 873 ","20589":"`-FunctionDecl 0x14e80ddf8  line:1:1 invalid snmpDecodePacket 'int (int *)'   |-ParmVarDecl 0x14e80dd28 <col:18, col:32> col:32 referenced invalid rq 'int *'   `-CompoundStmt 0x14e124320 <line:2:1, line:39:1>     |-DeclStmt 0x14e80e098 <line:3:5, col:25>     | |-RecordDecl 0x14e80dea8 <col:5, col:12> col:12 struct snmp_pdu     | `-VarDecl 0x14e80e018 <col:5, col:22> col:22 used PDU 'struct snmp_pdu *'     |-DeclStmt 0x14e80e130 <line:4:5, col:22>     | `-VarDecl 0x14e80e0c8 <col:5, col:13> col:13 used Community 'char *'     |-DeclStmt 0x14e80e230 <line:5:5, col:26>     | `-VarDecl 0x14e80e160 <col:5, col:23> col:13 used buf 'char *' cinit     |   `-CXXDependentScopeMemberExpr 0x14e80e1e8 <col:19, col:23> '<dependent type>' contains-errors lvalue ->buf     |     `-RecoveryExpr 0x14e80e1c8 <col:19> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14e80e330 <line:6:5, col:22>     | `-VarDecl 0x14e80e260 <col:5, col:19> col:9 used len 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x14e80e2e8 <col:15, col:19> '<dependent type>' contains-errors lvalue ->len     |     `-RecoveryExpr 0x14e80e2c8 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e827878 <line:8:5, line:11:5>     | |-UnaryOperator 0x14e8274f8 <line:8:9, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14e8274e0 <col:10, col:28> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x14e827498 <col:10, col:28> '<dependent type>' contains-errors lvalue .snmp     | |     `-CXXDependentScopeMemberExpr 0x14e827450 <col:10, col:17> '<dependent type>' contains-errors lvalue .accessList     | |       `-RecoveryExpr 0x14e827430 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e827858 <col:34, line:11:5>     |   |-CallExpr 0x14e827810 <line:9:9, col:52> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e827670 <col:9> 'int ()' Function 0x14e8275b8 'debugs' 'int ()'     |   | |-IntegerLiteral 0x14e827690 <col:16> 'int' 49     |   | |-RecoveryExpr 0x14e8277f0 <col:20> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x14e827798 <col:35, col:48> '<dependent type>' contains-errors '<<'     |   |   |-StringLiteral 0x14e827710 <col:35> 'char[4]' lvalue \"STR\"     |   |   `-CXXDependentScopeMemberExpr 0x14e827750 <col:44, col:48> '<dependent type>' contains-errors lvalue ->from     |   |     `-RecoveryExpr 0x14e827730 <col:44> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14e827848 <line:10:9>     |-CallExpr 0x14e8279c8 <line:13:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e827898 <col:5> 'int ()' Function 0x14e8275b8 'debugs' 'int ()'     | |-IntegerLiteral 0x14e8278b8 <col:12> 'int' 49     | |-IntegerLiteral 0x14e8278d8 <col:16> 'int' 5     | `-BinaryOperator 0x14e8279a8 <col:19, col:27> '<dependent type>' contains-errors '<<'     |   |-RecoveryExpr 0x14e827988 <col:19> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x14e827910 <col:27> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x14e827ff0 <line:14:5, col:28> 'struct snmp_pdu *' '='     | |-DeclRefExpr 0x14e827a00 <col:5> 'struct snmp_pdu *' lvalue Var 0x14e80e018 'PDU' 'struct snmp_pdu *'     | `-ImplicitCastExpr 0x14e827bb0 <col:11, col:28> 'struct snmp_pdu *' <IntegralToPointer>     |   `-CallExpr 0x14e827b88 <col:11, col:28> 'int'     |     |-ImplicitCastExpr 0x14e827b70 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14e827b00 <col:11> 'int ()' Function 0x14e827a48 'snmp_pdu_create' 'int ()'     |     `-IntegerLiteral 0x14e827b20 <col:27> 'int' 0     |-BinaryOperator 0x14e828140 <line:16:5, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e8280a0 <col:5, col:17> '<dependent type>' contains-errors lvalue .Version     | | `-CXXDependentScopeMemberExpr 0x14e828058 <col:5, col:9> '<dependent type>' contains-errors lvalue ->session     | |   `-RecoveryExpr 0x14e828030 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e828010 <col:5> 'int *' lvalue ParmVar 0x14e80dd28 'rq' 'int *'     | `-RecoveryExpr 0x14e828120 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e8283a0 <line:17:5, col:55> 'char *' contains-errors '='     | |-DeclRefExpr 0x14e828160 <col:5> 'char *' lvalue Var 0x14e80e0c8 'Community' 'char *'     | `-CallExpr 0x14e828360 <col:17, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14e828260 <col:17> 'int ()' Function 0x14e8281a8 'snmp_parse' 'int ()'     |   |-UnaryOperator 0x14e8282e8 <col:28, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x14e8282a0 <col:29, col:33> '<dependent type>' contains-errors lvalue ->session     |   |   `-RecoveryExpr 0x14e828280 <col:29> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x14e828300 <col:42> 'struct snmp_pdu *' lvalue Var 0x14e80e018 'PDU' 'struct snmp_pdu *'     |   |-DeclRefExpr 0x14e828320 <col:47> 'char *' contains-errors lvalue Var 0x14e80e160 'buf' 'char *'     |   `-DeclRefExpr 0x14e828340 <col:52> 'int' contains-errors lvalue Var 0x14e80e260 'len' 'int'     `-IfStmt 0x14e1242f0 <line:20:5, line:38:5> has_else       |-ImplicitCastExpr 0x14e8283e0 <line:20:9> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x14e8283c0 <col:9> 'char *' lvalue Var 0x14e80e0c8 'Community' 'char *'       |-CompoundStmt 0x14e124058 <col:20, line:35:5>       | |-IfStmt 0x14e123eb0 <line:25:9, line:32:9> has_else       | | |-BinaryOperator 0x14e1238e8 <line:25:13, col:73> 'int' contains-errors '&&'       | | | |-CallExpr 0x14e123850 <col:13, col:43> '<dependent type>' contains-errors       | | | | `-CXXDependentScopeMemberExpr 0x14e123808 <col:13, col:35> '<dependent type>' contains-errors lvalue .allowed       | | | |   `-CallExpr 0x14e1237e8 <col:13, col:33> '<dependent type>' contains-errors       | | | |     `-CXXDependentScopeMemberExpr 0x14e1237a0 <col:13, col:23> '<dependent type>' contains-errors lvalue .fastCheck       | | | |       `-RecoveryExpr 0x14e123780 <col:13> '<dependent type>' contains-errors lvalue       | | | `-ParenExpr 0x14e1238c8 <col:48, col:73> 'int'       | | |   `-CallExpr 0x14e123888 <col:49, col:72> 'int'       | | |     |-ImplicitCastExpr 0x14e123870 <col:49> 'int (*)()' <FunctionToPointerDecay>       | | |     | `-DeclRefExpr 0x14e1236a8 <col:49> 'int ()' Function 0x14e1235f0 'snmp_coexist_V2toV1' 'int ()'       | | |     `-ImplicitCastExpr 0x14e1238b0 <col:69> 'struct snmp_pdu *' <LValueToRValue>       | | |       `-DeclRefExpr 0x14e1236c8 <col:69> 'struct snmp_pdu *' lvalue Var 0x14e80e018 'PDU' 'struct snmp_pdu *'       | | |-CompoundStmt 0x14e123cd8 <col:76, line:30:9>       | | | |-BinaryOperator 0x14e1239b8 <line:26:13, col:29> '<dependent type>' contains-errors '='       | | | | |-CXXDependentScopeMemberExpr 0x14e123950 <col:13, col:17> '<dependent type>' contains-errors lvalue ->community       | | | | | `-RecoveryExpr 0x14e123928 <col:13> '<dependent type>' contains-errors lvalue       | | | | |   `-DeclRefExpr 0x14e123908 <col:13> 'int *' lvalue ParmVar 0x14e80dd28 'rq' 'int *'       | | | | `-DeclRefExpr 0x14e123998 <col:29> 'char *' lvalue Var 0x14e80e0c8 'Community' 'char *'       | | | |-BinaryOperator 0x14e123a88 <line:27:13, col:23> '<dependent type>' contains-errors '='       | | | | |-CXXDependentScopeMemberExpr 0x14e123a20 <col:13, col:17> '<dependent type>' contains-errors lvalue ->PDU       | | | | | `-RecoveryExpr 0x14e1239f8 <col:13> '<dependent type>' contains-errors lvalue       | | | | |   `-DeclRefExpr 0x14e1239d8 <col:13> 'int *' lvalue ParmVar 0x14e80dd28 'rq' 'int *'       | | | | `-DeclRefExpr 0x14e123a68 <col:23> 'struct snmp_pdu *' lvalue Var 0x14e80e018 'PDU' 'struct snmp_pdu *'       | | | |-CallExpr 0x14e123b40 <line:28:13, col:32> 'int'       | | | | |-ImplicitCastExpr 0x14e123b28 <col:13> 'int (*)()' <FunctionToPointerDecay>       | | | | | `-DeclRefExpr 0x14e123aa8 <col:13> 'int ()' Function 0x14e8275b8 'debugs' 'int ()'       | | | | |-IntegerLiteral 0x14e123ac8 <col:20> 'int' 49       | | | | |-IntegerLiteral 0x14e123ae8 <col:24> 'int' 5       | | | | `-ImplicitCastExpr 0x14e123b78 <col:27> 'char *' <ArrayToPointerDecay>       | | | |   `-StringLiteral 0x14e123b08 <col:27> 'char[4]' lvalue \"STR\"       | | | `-CallExpr 0x14e123cb0 <line:29:13, col:36> '<dependent type>' contains-errors       | | |   |-DeclRefExpr 0x14e123c70 <col:13> 'int ()' Function 0x14e123bb8 'snmpConstructReponse' 'int ()'       | | |   `-RecoveryExpr 0x14e123c90 <col:34> '<dependent type>' contains-errors lvalue       | | `-CompoundStmt 0x14e123e98 <line:30:16, line:32:9>       | |   `-CallExpr 0x14e123e60 <line:31:13, col:56> '<dependent type>' contains-errors       | |     |-DeclRefExpr 0x14e123d08 <col:13> 'int ()' Function 0x14e8275b8 'debugs' 'int ()'       | |     |-IntegerLiteral 0x14e123d28 <col:20> 'int' 49       | |     |-RecoveryExpr 0x14e123e40 <col:24> '<dependent type>' contains-errors lvalue       | |     `-BinaryOperator 0x14e123de8 <col:39, col:52> '<dependent type>' contains-errors '<<'       | |       |-StringLiteral 0x14e123d60 <col:39> 'char[4]' lvalue \"STR\"       | |       `-CXXDependentScopeMemberExpr 0x14e123da0 <col:48, col:52> '<dependent type>' contains-errors lvalue ->from       | |         `-RecoveryExpr 0x14e123d80 <col:48> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x14e124018 <line:33:9, col:24> 'int'       |   |-ImplicitCastExpr 0x14e124000 <col:9> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x14e123fc0 <col:9> 'int ()' Function 0x14e123f08 'xfree' 'int ()'       |   `-ImplicitCastExpr 0x14e124040 <col:15> 'char *' <LValueToRValue>       |     `-DeclRefExpr 0x14e123fe0 <col:15> 'char *' lvalue Var 0x14e80e0c8 'Community' 'char *'       `-CompoundStmt 0x14e1242d8 <line:35:12, line:38:5>         `-CallExpr 0x14e124298 <line:37:9, col:26> 'int'           |-ImplicitCastExpr 0x14e124280 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14e124240 <col:9> 'int ()' Function 0x14e124188 'snmp_free_pdu' 'int ()'           `-ImplicitCastExpr 0x14e1242c0 <col:23> 'struct snmp_pdu *' <LValueToRValue>             `-DeclRefExpr 0x14e124260 <col:23> 'struct snmp_pdu *' lvalue Var 0x14e80e018 'PDU' 'struct snmp_pdu *' ","20898":"`-FunctionDecl 0x15a144630  col:5 implicit used strcat 'char *(char *, const char *)' extern   |-ParmVarDecl 0x15a144730 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x15a144798 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x15a1446d8 <<invalid sloc>> Implicit 889 ","20968":"`-FunctionDecl 0x15000ddc8  line:1:1 invalid build_model 'int (int)'   |-ParmVarDecl 0x15000dcf0 <col:13, col:24> col:24 invalid parser 'int'   `-CompoundStmt 0x1581227e0 <col:32, line:33:1>     |-IfStmt 0x15000e098 <line:9:3, line:11:3>     | |-RecoveryExpr 0x15000e018 <line:9:7, col:58> '_Bool' contains-errors     | `-CompoundStmt 0x15000e080 <col:61, line:11:3>     |   `-ReturnStmt 0x15000e070 <line:10:5, col:12>     |     `-RecoveryExpr 0x15000e050 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15000e290 <line:12:3, line:14:3>     | |-RecoveryExpr 0x15000e210 <line:12:7, col:61> '_Bool' contains-errors     | `-CompoundStmt 0x15000e278 <col:64, line:14:3>     |   `-ReturnStmt 0x15000e268 <line:13:5, col:12>     |     `-RecoveryExpr 0x15000e248 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15000e318 <line:16:3, line:19:3>     | |-RecoveryExpr 0x15000e2e8 <line:16:7, line:17:63> '_Bool' contains-errors     | `-CompoundStmt 0x15000e308 <col:66, line:19:3>     `-DeclStmt 0x15000e3b8 <line:21:3, line:22:74>       `-VarDecl 0x15000e350 <line:21:3, col:16> col:16 invalid allocsize 'const int' ","20350":"`-FunctionDecl 0x140125060  col:7 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x140125160 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1401251c8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x140125230 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x140125108 <<invalid sloc>> Implicit 883 ","20752":"`-FunctionDecl 0x133008348  line:1:12 dn_fib_rtm_delroute 'int (struct sk_buff *, struct nlmsghdr *)' static   |-ParmVarDecl 0x132928648 <col:32, col:48> col:48 used skb 'struct sk_buff *'   |-ParmVarDecl 0x133008228 <col:53, col:70> col:70 used nlh 'struct nlmsghdr *'   `-CompoundStmt 0x133010858 <line:2:1, line:24:1>     |-DeclStmt 0x133008810 <line:3:2, col:37>     | |-RecordDecl 0x133008448 <col:2, col:9> col:9 struct net     | `-VarDecl 0x1330085b8 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x1330087d0 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x133008750 <col:20> 'int ()' Function 0x133008698 'sock_net' 'int ()'     |     `-RecoveryExpr 0x1330087a8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x133008770 <col:29> 'struct sk_buff *' lvalue ParmVar 0x132928648 'skb' 'struct sk_buff *'     |-DeclStmt 0x133008a18 <line:4:2, col:25>     | |-RecordDecl 0x133008828 <col:2, col:9> col:9 struct dn_fib_table     | `-VarDecl 0x133008998 <col:2, col:23> col:23 used tb 'struct dn_fib_table *'     |-DeclStmt 0x133008dd8 <line:5:2, col:35>     | |-RecordDecl 0x133008a30 <col:2, col:9> col:9 struct rtmsg     | `-VarDecl 0x133008b98 <col:2, col:34> col:16 used r 'struct rtmsg *' cinit     |   `-ImplicitCastExpr 0x133008da8 <col:20, col:34> 'struct rtmsg *' <IntegralToPointer>     |     `-CallExpr 0x133008d68 <col:20, col:34> 'int'     |       |-ImplicitCastExpr 0x133008d50 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x133008ce0 <col:20> 'int ()' Function 0x133008c28 'nlmsg_data' 'int ()'     |       `-ImplicitCastExpr 0x133008d90 <col:31> 'struct nlmsghdr *' <LValueToRValue>     |         `-DeclRefExpr 0x133008d00 <col:31> 'struct nlmsghdr *' lvalue ParmVar 0x133008228 'nlh' 'struct nlmsghdr *'     |-DeclStmt 0x133009038 <line:6:2, col:33>     | |-RecordDecl 0x133008df0 <col:2, col:9> col:9 struct nlattr     | `-VarDecl 0x133008fb8 <col:2, col:17> col:17 invalid attrs 'struct nlattr *'     |-DeclStmt 0x1330090d0 <line:7:2, col:9>     | `-VarDecl 0x133009068 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x13300fb48 <line:9:2, line:10:11>     | |-UnaryOperator 0x13300fa88 <line:9:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13300fa60 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1330091c8 <col:7> 'int ()' Function 0x133009110 'capable' 'int ()'     | |   `-RecoveryExpr 0x13300fa40 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13300fb38 <line:10:3, col:11>     |   `-UnaryOperator 0x13300fb20 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13300fb08 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13300fae8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13300fe28 <line:12:2, line:13:11>     | |-UnaryOperator 0x13300fd68 <line:12:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13300fd38 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13300fc48 <col:7> 'int ()' Function 0x13300fb90 'net_eq' 'int ()'     | |   |-DeclRefExpr 0x13300fc68 <col:14> 'struct net *' contains-errors lvalue Var 0x1330085b8 'net' 'struct net *'     | |   `-UnaryOperator 0x13300fd20 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x13300fd00 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13300fe18 <line:13:3, col:11>     |   `-UnaryOperator 0x13300fe00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13300fde8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13300fdc8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133010108 <line:16:2, line:17:10>     | |-BinaryOperator 0x1330100a0 <line:16:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x133010088 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x133010048 <col:6> 'int' lvalue Var 0x133009068 'err' 'int'     | | `-IntegerLiteral 0x133010068 <col:12> 'int' 0     | `-ReturnStmt 0x1330100f8 <line:17:3, col:10>     |   `-ImplicitCastExpr 0x1330100e0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1330100c0 <col:10> 'int' lvalue Var 0x133009068 'err' 'int'     |-BinaryOperator 0x133010448 <line:19:2, col:61> 'struct dn_fib_table *' contains-errors '='     | |-DeclRefExpr 0x133010128 <col:2> 'struct dn_fib_table *' lvalue Var 0x133008998 'tb' 'struct dn_fib_table *'     | `-CallExpr 0x133010418 <col:7, col:61> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133010228 <col:7> 'int ()' Function 0x133010170 'dn_fib_get_table' 'int ()'     |   |-CallExpr 0x1330103c8 <col:24, col:57> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x133010328 <col:24> 'int ()' Function 0x133010270 'rtm_get_table' 'int ()'     |   | |-RecoveryExpr 0x133010348 <col:38> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1330103a0 <col:45, col:48> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x133010368 <col:45> 'struct rtmsg *' lvalue Var 0x133008b98 'r' 'struct rtmsg *'     |   `-IntegerLiteral 0x1330103f8 <col:60> 'int' 0     |-IfStmt 0x133010560 <line:20:2, line:21:11>     | |-UnaryOperator 0x1330104a0 <line:20:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x133010488 <col:7> 'struct dn_fib_table *' <LValueToRValue>     | |   `-DeclRefExpr 0x133010468 <col:7> 'struct dn_fib_table *' lvalue Var 0x133008998 'tb' 'struct dn_fib_table *'     | `-ReturnStmt 0x133010550 <line:21:3, col:11>     |   `-UnaryOperator 0x133010538 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x133010520 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x133010500 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x133010848 <line:23:2, col:55>       `-CallExpr 0x133010800 <col:9, col:55> '<dependent type>' contains-errors         |-RecoveryExpr 0x1330105b8 <col:9, col:13> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x133010580 <col:9> 'struct dn_fib_table *' lvalue Var 0x133008998 'tb' 'struct dn_fib_table *'         |-DeclRefExpr 0x1330105e0 <col:20> 'struct dn_fib_table *' lvalue Var 0x133008998 'tb' 'struct dn_fib_table *'         |-DeclRefExpr 0x133010600 <col:24> 'struct rtmsg *' lvalue Var 0x133008b98 'r' 'struct rtmsg *'         |-RecoveryExpr 0x133010620 <col:27> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x133010640 <col:34> 'struct nlmsghdr *' lvalue ParmVar 0x133008228 'nlh' 'struct nlmsghdr *'         `-RecoveryExpr 0x1330107d8 <col:55, col:54> '<dependent type>' contains-errors lvalue           `-CallExpr 0x133010798 <col:40, col:54> 'int'             |-ImplicitCastExpr 0x133010780 <col:40> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x133010740 <col:40> 'int ()' Function 0x133010688 'NETLINK_CB' 'int ()'             `-ImplicitCastExpr 0x1330107c0 <col:51> 'struct sk_buff *' <LValueToRValue>               `-DeclRefExpr 0x133010760 <col:51> 'struct sk_buff *' lvalue ParmVar 0x132928648 'skb' 'struct sk_buff *' ","20264":"`-FunctionDecl 0x12a142408  line:1:1 invalid handle_keywordonly_args 'int (struct compiling *, const int *, int, int *, int *)'   |-ParmVarDecl 0x12a129048 <col:25, col:43> col:43 used c 'struct compiling *'   |-ParmVarDecl 0x12a1290e0 <col:46, col:58> col:58 invalid n 'const int *'   |-ParmVarDecl 0x12a129160 <col:61, col:65> col:65 used start 'int'   |-ParmVarDecl 0x12a142218 <line:2:25, col:35> col:35 invalid kwonlyargs 'int *'   |-ParmVarDecl 0x12a142298 <col:47, col:57> col:57 invalid kwdefaults 'int *'   `-CompoundStmt 0x12a144400 <line:3:1, line:64:1>     |-DeclStmt 0x12a1425c0 <line:8:5, col:18>     | `-VarDecl 0x12a142520 <col:5, col:13> col:9 used i 'int' cinit     |   `-ImplicitCastExpr 0x12a1425a8 <col:13> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12a142588 <col:13> 'int' lvalue ParmVar 0x12a129160 'start' 'int'     |-DeclStmt 0x12a142678 <line:9:5, col:14>     | `-VarDecl 0x12a1425f0 <col:5, col:13> col:9 used j 'int' cinit     |   `-IntegerLiteral 0x12a142658 <col:13> 'int' 0     |-IfStmt 0x12a142b30 <line:11:5, line:14:5>     | |-BinaryOperator 0x12a142708 <line:11:9, col:23> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12a142690 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12a1426e8 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a142b10 <col:29, line:14:5>     |   |-CallExpr 0x12a142a90 <line:12:9, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a142880 <col:9> 'int ()' Function 0x12a1427c8 'ast_error' 'int ()'     |   | |-DeclRefExpr 0x12a1428a0 <col:19> 'struct compiling *' lvalue ParmVar 0x12a129048 'c' 'struct compiling *'     |   | |-CallExpr 0x12a142a00 <col:22, col:36> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12a1429a0 <col:22> 'int ()' Function 0x12a1428e8 'CHILD' 'int ()'     |   | | |-RecoveryExpr 0x12a1429c0 <col:28> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12a1429e0 <col:31> 'int' lvalue ParmVar 0x12a129160 'start' 'int'     |   | `-StringLiteral 0x12a142a70 <col:39> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a142b00 <line:13:9, col:17>     |     `-UnaryOperator 0x12a142ae8 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x12a142ac8 <col:17> 'int' 1     |-CallExpr 0x12a142d10 <line:15:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a142c30 <col:5> 'int ()' Function 0x12a142b78 'assert' 'int ()'     | `-BinaryOperator 0x12a142cf0 <col:12, col:26> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12a142c50 <col:12> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a142cd0 <col:26> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x12a144330 <line:16:5, line:60:5>     | |-BinaryOperator 0x12a142ea0 <line:16:12, col:21> 'int' contains-errors '<'     | | |-DeclRefExpr 0x12a142d38 <col:12> 'int' lvalue Var 0x12a142520 'i' 'int'     | | `-CallExpr 0x12a142e78 <col:16, col:21> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12a142e38 <col:16> 'int ()' Function 0x12a142d80 'NCH' 'int ()'     | |   `-RecoveryExpr 0x12a142e58 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a144318 <col:24, line:60:5>     |   `-SwitchStmt 0x12a1430d8 <line:18:9, line:59:9>     |     |-CallExpr 0x12a1430b0 <line:18:17, col:24> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x12a143030 <col:17> 'int ()' Function 0x12a142f78 'TYPE' 'int ()'     |     | `-RecoveryExpr 0x12a143090 <col:22> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12a1442b0 <col:27, line:59:9>     |       |-IfStmt 0x12a143870 <line:21:17, line:30:17> has_else     |       | |-RecoveryExpr 0x12a143330 <line:21:21, col:64> '_Bool' contains-errors     |       | |-CompoundStmt 0x12a1437e0 <col:71, line:27:17>     |       | | |-IfStmt 0x12a143610 <line:23:21, line:24:30>     |       | | | |-RecoveryExpr 0x12a143588 <line:23:25, col:26> '_Bool' contains-errors     |       | | | `-GotoStmt 0x12a1435f8 <line:24:25, col:30> 'error' 0x12a1435a8     |       | | `-CompoundAssignOperator 0x12a1437b0 <line:26:21, col:26> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |       | |   |-DeclRefExpr 0x12a143770 <col:21> 'int' lvalue Var 0x12a142520 'i' 'int'     |       | |   `-IntegerLiteral 0x12a143790 <col:26> 'int' 2     |       | `-CompoundStmt 0x12a143860 <line:28:22, line:30:17>     |       |-IfStmt 0x12a143a00 <line:31:17, line:39:17> has_else     |       | |-RecoveryExpr 0x12a1438e0 <line:31:21, col:32> '_Bool' contains-errors     |       | |-CompoundStmt 0x12a1439d8 <col:35, line:36:17>     |       | | `-IfStmt 0x12a1439b8 <line:34:21, line:35:30>     |       | |   |-RecoveryExpr 0x12a143980 <line:34:25, col:26> '_Bool' contains-errors     |       | |   `-GotoStmt 0x12a1439a0 <line:35:25, col:30> 'error' 0x12a1435a8     |       | `-CompoundStmt 0x12a1439f0 <line:37:22, line:39:17>     |       |-IfStmt 0x12a143ba8 <line:42:17, line:43:26>     |       | |-RecoveryExpr 0x12a143b70 <line:42:21, col:22> '_Bool' contains-errors     |       | `-GotoStmt 0x12a143b90 <line:43:21, col:26> 'error' 0x12a1435a8     |       |-IfStmt 0x12a143d40 <line:44:17, line:45:26>     |       | |-RecoveryExpr 0x12a143d08 <line:44:21, col:53> '_Bool' contains-errors     |       | `-GotoStmt 0x12a143d28 <line:45:21, col:26> 'error' 0x12a1435a8     |       |-IfStmt 0x12a144058 <line:49:17, line:50:26>     |       | |-UnaryOperator 0x12a144028 <line:49:21, col:22> 'int' prefix '!' cannot overflow     |       | | `-ImplicitCastExpr 0x12a144010 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | |   `-DeclRefExpr 0x12a143fc0 <col:22> 'int ()' Function 0x12a143d88 'arg' 'int ()'     |       | `-GotoStmt 0x12a144040 <line:50:21, col:26> 'error' 0x12a1435a8     |       |-CallExpr 0x12a144110 <line:51:17, col:50> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x12a144078 <col:17> 'int ()' Function 0x12a143658 'asdl_seq_SET' 'int ()'     |       | |-RecoveryExpr 0x12a144098 <col:30> '<dependent type>' contains-errors lvalue     |       | |-UnaryOperator 0x12a1440d8 <col:42, col:43> 'int' postfix '++'     |       | | `-DeclRefExpr 0x12a1440b8 <col:42> 'int' lvalue Var 0x12a1425f0 'j' 'int'     |       | `-DeclRefExpr 0x12a1440f0 <col:47> 'int ()' Function 0x12a143d88 'arg' 'int ()'     |       |-CompoundAssignOperator 0x12a144188 <line:52:17, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |       | |-DeclRefExpr 0x12a144148 <col:17> 'int' lvalue Var 0x12a142520 'i' 'int'     |       | `-IntegerLiteral 0x12a144168 <col:22> 'int' 2     |       |-BreakStmt 0x12a1441b8 <line:53:17>     |       |-ReturnStmt 0x12a144200 <line:55:17, col:24>     |       | `-ImplicitCastExpr 0x12a1441e0 <col:24> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x12a1441c0 <col:24> 'int' lvalue Var 0x12a142520 'i' 'int'     |       |-DefaultStmt 0x12a144278 <line:56:13, col:20>     |       | `-NullStmt 0x12a144270 <col:20>     |       `-GotoStmt 0x12a144298 <line:58:17, col:22> 'error' 0x12a1435a8     |-ReturnStmt 0x12a144388 <line:61:5, col:12>     | `-ImplicitCastExpr 0x12a144370 <col:12> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12a144350 <col:12> 'int' lvalue Var 0x12a142520 'i' 'int'     `-LabelStmt 0x12a1443e0 <line:62:2, line:63:13> 'error'       `-ReturnStmt 0x12a1443d0 <col:5, col:13>         `-UnaryOperator 0x12a1443b8 <col:12, col:13> 'int' prefix '-'           `-IntegerLiteral 0x12a144398 <col:13> 'int' 1 ","21130":"`-FunctionDecl 0x142141800  line:1:16 invalid check_packet_type 'int (struct dhcp_packet *)' static   |-ParmVarDecl 0x142128668 <col:34, col:54> col:54 used packet 'struct dhcp_packet *'   `-CompoundStmt 0x142142148 <line:2:1, line:23:1>     |-IfStmt 0x1421419d0 <line:5:2, line:6:10>     | |-BinaryOperator 0x142141980 <line:5:6, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x142141900 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1421418c8 <col:6> 'struct dhcp_packet *' lvalue ParmVar 0x142128668 'packet' 'struct dhcp_packet *'     | | `-RecoveryExpr 0x142141960 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1421419c0 <line:6:3, col:10>     |   `-IntegerLiteral 0x1421419a0 <col:10> 'int' 0     |-IfStmt 0x142141af8 <line:8:2, line:9:10>     | |-BinaryOperator 0x142141aa8 <line:8:6, col:20> 'int' contains-errors '!='     | | |-RecoveryExpr 0x142141a28 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1421419f0 <col:6> 'struct dhcp_packet *' lvalue ParmVar 0x142128668 'packet' 'struct dhcp_packet *'     | | `-RecoveryExpr 0x142141a88 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142141ae8 <line:9:3, col:10>     |   `-IntegerLiteral 0x142141ac8 <col:10> 'int' 0     |-IfStmt 0x142141dc0 <line:13:2, line:14:10>     | |-UnaryOperator 0x142141d78 <line:13:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142141d60 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x142141d40 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142141db0 <line:14:3, col:10>     |   `-IntegerLiteral 0x142141d90 <col:10> 'int' 0     |-IfStmt 0x142141f20 <line:16:2, line:17:10>     | |-BinaryOperator 0x142141ed0 <line:16:6, col:14> 'int' contains-errors '<'     | | |-UnaryOperator 0x142141e98 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x142141e80 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x142141e60 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x142141eb0 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142141f10 <line:17:3, col:10>     |   `-IntegerLiteral 0x142141ef0 <col:10> 'int' 0     |-IfStmt 0x142142080 <line:19:2, line:20:10>     | |-BinaryOperator 0x142142030 <line:19:6, col:14> 'int' contains-errors '>'     | | |-UnaryOperator 0x142141ff8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x142141fe0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x142141fc0 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x142142010 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142142070 <line:20:3, col:10>     |   `-IntegerLiteral 0x142142050 <col:10> 'int' 0     `-ReturnStmt 0x142142138 <line:22:2, col:10>       `-UnaryOperator 0x142142120 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow         `-ImplicitCastExpr 0x142142108 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x1421420e8 <col:10> '<dependent type>' contains-errors lvalue ","20622":"`-FunctionDecl 0x14000dec0  line:1:13 opl3_setup_voice 'void (int, int, int)' static   |-ParmVarDecl 0x14000dcd8 <col:30, col:34> col:34 used dev 'int'   |-ParmVarDecl 0x14000dd58 <col:39, col:43> col:43 used voice 'int'   |-ParmVarDecl 0x14000ddd8 <col:50, col:54> col:54 used chn 'int'   `-CompoundStmt 0x1400282d0 <line:2:1, line:12:1>     |-DeclStmt 0x14000e228 <line:3:2, line:4:33>     | |-RecordDecl 0x14000dfc8 <line:3:2, col:9> col:9 struct channel_info     | `-VarDecl 0x14000e138 <col:2, col:23> col:23 used info 'struct channel_info *'     |-CallExpr 0x140027c48 <line:6:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14000e350 <col:2> 'int ()' Function 0x14000e298 'opl3_set_instr' 'int ()'     | |-DeclRefExpr 0x14000e370 <col:17> 'int' lvalue ParmVar 0x14000dcd8 'dev' 'int'     | |-DeclRefExpr 0x14000e390 <col:22> 'int' lvalue ParmVar 0x14000dd58 'voice' 'int'     | `-RecoveryExpr 0x140027c20 <col:29, col:35> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14000e3b0 <col:29> 'struct channel_info *' lvalue Var 0x14000e138 'info' 'struct channel_info *'     |-BinaryOperator 0x140027db8 <line:8:2, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x140027d50 <col:2, col:19> '<dependent type>' contains-errors lvalue .bender     | | `-ArraySubscriptExpr 0x140027d30 <col:2, col:17> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x140027d00 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x140027cb8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x140027c80 <col:2> 'int' lvalue ParmVar 0x14000dcd8 'dev' 'int'     | |   `-ImplicitCastExpr 0x140027d18 <col:12> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x140027ce0 <col:12> 'int' lvalue ParmVar 0x14000dd58 'voice' 'int'     | `-IntegerLiteral 0x140027d98 <col:28> 'int' 0     `-BinaryOperator 0x140027f50 <line:9:2, col:40> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x140027ea8 <col:2, col:19> '<dependent type>' contains-errors lvalue .bender_range       | `-ArraySubscriptExpr 0x140027e88 <col:2, col:17> '<dependent type>' contains-errors lvalue       |   |-ImplicitCastExpr 0x140027e58 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>       |   | `-RecoveryExpr 0x140027e10 <col:2, col:8> '<dependent type>' contains-errors lvalue       |   |   `-DeclRefExpr 0x140027dd8 <col:2> 'int' lvalue ParmVar 0x14000dcd8 'dev' 'int'       |   `-ImplicitCastExpr 0x140027e70 <col:12> 'int' <LValueToRValue>       |     `-DeclRefExpr 0x140027e38 <col:12> 'int' lvalue ParmVar 0x14000dd58 'voice' 'int'       `-RecoveryExpr 0x140027f28 <col:34, col:40> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x140027ef0 <col:34> 'struct channel_info *' lvalue Var 0x14000e138 'info' 'struct channel_info *' ","20923":"`-FunctionDecl 0x12580ddf8  line:1:13 invalid mysql_drop_partitions 'int (int *)' static   |-ParmVarDecl 0x12580dd28 <col:35, col:63> col:63 referenced invalid lpt 'int *'   `-CompoundStmt 0x1260082f0 <line:2:1, line:33:1>     |-DeclStmt 0x12580df78 <line:3:3, col:25>     | `-VarDecl 0x12580df10 <col:3, col:8> col:8 invalid path 'char'     |-DeclStmt 0x12580e318 <line:6:3, col:12>     | `-VarDecl 0x12580e290 <col:3, col:11> col:8 used i 'int' cinit     |   `-IntegerLiteral 0x12580e2f8 <col:11> 'int' 0     |-DeclStmt 0x12580e3d0 <line:7:3, col:23>     | `-VarDecl 0x12580e348 <col:3, col:22> col:8 used remove_count 'int' cinit     |   `-IntegerLiteral 0x12580e3b0 <col:22> 'int' 0     |-DeclStmt 0x125827468 <line:8:3, col:12>     | `-VarDecl 0x125827400 <col:3, col:7> col:7 used error 'int'     |-CallExpr 0x125827628 <line:9:3, col:19> 'int'     | |-ImplicitCastExpr 0x125827610 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x125827560 <col:3> 'int ()' Function 0x1258274a8 'DBUG_ENTER' 'int ()'     | `-ImplicitCastExpr 0x125827650 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1258275c0 <col:14> 'char[4]' lvalue \"STR\"     |-CallExpr 0x125827c28 <line:16:3, col:87> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125827958 <col:3> 'int ()' Function 0x1258278a0 'build_table_filename' 'int ()'     | |-RecoveryExpr 0x125827978 <col:24> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x125827a30 <col:30, col:45> 'unsigned long' contains-errors '-'     | | |-UnaryExprOrTypeTraitExpr 0x1258279d8 <col:30, col:41> 'unsigned long' contains-errors sizeof     | | | `-ParenExpr 0x1258279b8 <col:36, col:41> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x125827998 <col:37> '<dependent type>' contains-errors lvalue     | | `-ImplicitCastExpr 0x125827a18 <col:45> 'unsigned long' <IntegralCast>     | |   `-IntegerLiteral 0x1258279f8 <col:45> 'int' 1     | |-CXXDependentScopeMemberExpr 0x125827ab8 <col:48, col:56> '<dependent type>' contains-errors lvalue .str     | | `-CXXDependentScopeMemberExpr 0x125827a70 <col:48, col:53> '<dependent type>' contains-errors lvalue ->db     | |   `-RecoveryExpr 0x125827a50 <col:48> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x125827b68 <col:61, col:77> '<dependent type>' contains-errors lvalue .str     | | `-CXXDependentScopeMemberExpr 0x125827b20 <col:61, col:66> '<dependent type>' contains-errors lvalue ->table_name     | |   `-RecoveryExpr 0x125827b00 <col:61> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x125827bf0 <col:82> 'char[1]' lvalue \"\"     | `-IntegerLiteral 0x125827c08 <col:86> 'int' 0     |-IfStmt 0x125828290 <line:17:3, line:21:3>     | |-ParenExpr 0x125827df8 <line:17:7, col:57> 'int' contains-errors     | | `-BinaryOperator 0x125827dd8 <col:8, col:56> 'int' contains-errors '='     | |   |-DeclRefExpr 0x125827c78 <col:8> 'int' lvalue Var 0x125827400 'error' 'int'     | |   `-CallExpr 0x125827db0 <col:15, col:56> '<dependent type>' contains-errors     | |     |-CXXDependentScopeMemberExpr 0x125827d48 <col:15, col:33> '<dependent type>' contains-errors lvalue ->ha_drop_partitions     | |     | `-CXXDependentScopeMemberExpr 0x125827d00 <col:15, col:27> '<dependent type>' contains-errors lvalue ->file     | |     |   `-CXXDependentScopeMemberExpr 0x125827cb8 <col:15, col:20> '<dependent type>' contains-errors lvalue ->table     | |     |     `-RecoveryExpr 0x125827c98 <col:15> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x125827d90 <col:52> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x125828270 <line:18:3, line:21:3>     |   |-CallExpr 0x1258280b8 <line:19:5, col:48> '<dependent type>' contains-errors     |   | |-CXXDependentScopeMemberExpr 0x125827ef0 <col:5, col:23> '<dependent type>' contains-errors lvalue ->print_error     |   | | `-CXXDependentScopeMemberExpr 0x125827ea8 <col:5, col:17> '<dependent type>' contains-errors lvalue ->file     |   | |   `-CXXDependentScopeMemberExpr 0x125827e60 <col:5, col:10> '<dependent type>' contains-errors lvalue ->table     |   | |     `-RecoveryExpr 0x125827e38 <col:5> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x125827e18 <col:5> 'int *' lvalue ParmVar 0x12580dd28 'lpt' 'int *'     |   | |-DeclRefExpr 0x125827f38 <col:35> 'int' lvalue Var 0x125827400 'error' 'int'     |   | `-CallExpr 0x125828090 <col:42, col:47> 'int'     |   |   |-ImplicitCastExpr 0x125828078 <col:42> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x125828038 <col:42> 'int ()' Function 0x125827f80 'MYF' 'int ()'     |   |   `-IntegerLiteral 0x125828058 <col:46> 'int' 0     |   `-CallExpr 0x125828248 <line:20:5, col:21> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1258281c8 <col:5> 'int ()' Function 0x125828110 'DBUG_RETURN' 'int ()'     |     `-RecoveryExpr 0x125828228 <col:17> '<dependent type>' contains-errors lvalue     `-DoStmt 0x126008290 <line:22:3, line:30:38>       |-CompoundStmt 0x126008220 <line:23:3, line:30:3>       | `-IfStmt 0x126008200 <line:25:5, line:29:5>       |   |-RecoveryExpr 0x125828310 <line:25:9, col:34> '_Bool' contains-errors       |   `-CompoundStmt 0x1258283d0 <line:26:5, line:29:5>       |     |-CallExpr 0x125828378 <line:27:7, col:22> '<dependent type>' contains-errors       |     | `-RecoveryExpr 0x125828350 <col:7, col:15> '<dependent type>' contains-errors lvalue       |     |   `-DeclRefExpr 0x125828330 <col:7> 'int ()' Function 0x12580e118 'part_it' 'int ()'       |     `-UnaryOperator 0x1258283b8 <line:28:7, col:19> 'int' postfix '++'       |       `-DeclRefExpr 0x125828398 <col:7> 'int' lvalue Var 0x12580e348 'remove_count' 'int'       `-RecoveryExpr 0x126008270 <line:30:12, col:29> '_Bool' contains-errors ","21193":"`-FunctionDecl 0x13280de30  line:1:13 kvm_flush_icache 'void (unsigned long, unsigned long)' static   |-ParmVarDecl 0x13280dcd8 <col:30, col:44> col:44 used start 'unsigned long'   |-ParmVarDecl 0x13280dd58 <col:51, col:65> col:65 used len 'unsigned long'   `-CompoundStmt 0x132828d48 <line:2:1, line:10:1>     |-DeclStmt 0x13280dfb0 <line:3:2, col:7>     | `-VarDecl 0x13280df48 <col:2, col:6> col:6 used l 'int'     |-ForStmt 0x132828aa0 <line:5:2, line:6:30>     | |-BinaryOperator 0x13280e008 <line:5:7, col:11> 'int' '='     | | |-DeclRefExpr 0x13280dfc8 <col:7> 'int' lvalue Var 0x13280df48 'l' 'int'     | | `-IntegerLiteral 0x13280dfe8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13280e128 <col:14, col:27> 'int' '<'     | | |-ImplicitCastExpr 0x13280e110 <col:14> 'unsigned long' <IntegralCast>     | | | `-ImplicitCastExpr 0x13280e0f8 <col:14> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x13280e028 <col:14> 'int' lvalue Var 0x13280df48 'l' 'int'     | | `-ParenExpr 0x13280e0d8 <col:18, col:27> 'unsigned long'     | |   `-BinaryOperator 0x13280e0b8 <col:19, col:25> 'unsigned long' '+'     | |     |-ImplicitCastExpr 0x13280e088 <col:19> 'unsigned long' <LValueToRValue>     | |     | `-DeclRefExpr 0x13280e048 <col:19> 'unsigned long' lvalue ParmVar 0x13280dd58 'len' 'unsigned long'     | |     `-ImplicitCastExpr 0x13280e0a0 <col:25> 'unsigned long' <IntegralCast>     | |       `-IntegerLiteral 0x13280e068 <col:25> 'int' 32     | |-CompoundAssignOperator 0x13280e188 <col:30, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | |-DeclRefExpr 0x13280e148 <col:30> 'int' lvalue Var 0x13280df48 'l' 'int'     | | `-IntegerLiteral 0x13280e168 <col:35> 'int' 32     | `-CallExpr 0x132828a78 <line:6:3, col:30> 'int'     |   |-ImplicitCastExpr 0x132828a60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13280e2e0 <col:3> 'int ()' Function 0x13280e228 'ia64_fc' 'int ()'     |   `-CStyleCastExpr 0x132828a00 <col:11, col:29> 'void *' <IntegralToPointer>     |     `-ParenExpr 0x13280e3e0 <col:19, col:29> 'unsigned long'     |       `-BinaryOperator 0x13280e388 <col:20, col:28> 'unsigned long' '+'     |         |-ImplicitCastExpr 0x13280e340 <col:20> 'unsigned long' <LValueToRValue>     |         | `-DeclRefExpr 0x13280e300 <col:20> 'unsigned long' lvalue ParmVar 0x13280dcd8 'start' 'unsigned long'     |         `-ImplicitCastExpr 0x13280e370 <col:28> 'unsigned long' <IntegralCast>     |           `-ImplicitCastExpr 0x13280e358 <col:28> 'int' <LValueToRValue>     |             `-DeclRefExpr 0x13280e320 <col:28> 'int' lvalue Var 0x13280df48 'l' 'int'     |-CallExpr 0x132828bf0 <line:8:2, col:14> 'int'     | `-ImplicitCastExpr 0x132828bd8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x132828bb8 <col:2> 'int ()' Function 0x132828b00 'ia64_sync_i' 'int ()'     `-CallExpr 0x132828d28 <line:9:2, col:14> 'int'       `-ImplicitCastExpr 0x132828d10 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x132828cf0 <col:2> 'int ()' Function 0x132828c38 'ia64_srlz_i' 'int ()' ","20972":"`-FunctionDecl 0x13a009508  col:9 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13a009608 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13a009670 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13a0096d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13a0095b0 <<invalid sloc>> Implicit 883 ","20537":"`-FunctionDecl 0x146027628  line:1:17 invalid dcesrv_lsa_GetUserName 'int (struct dcesrv_call_state *, int *, struct lsa_GetUserName *)' static   |-ParmVarDecl 0x14600e268 <col:40, col:66> col:66 used dce_call 'struct dcesrv_call_state *'   |-ParmVarDecl 0x14600e318 <col:76, col:88> col:88 invalid mem_ctx 'int *'   |-ParmVarDecl 0x1460274e8 <line:2:5, col:29> col:29 used r 'struct lsa_GetUserName *'   `-CompoundStmt 0x1459253f8 <line:3:1, line:55:1>     |-DeclStmt 0x146027b20 <line:4:2, line:5:73>     | |-EnumDecl 0x1460276e8 <line:4:2, col:7> col:7 dcerpc_transport_t     | `-VarDecl 0x146027808 <col:2, col:26> col:26 invalid transport 'enum dcerpc_transport_t'     |-DeclStmt 0x146027ee8 <line:6:2, line:7:37>     | |-RecordDecl 0x146027b38 <line:6:2, col:9> col:9 struct auth_session_info     | `-VarDecl 0x146027ca8 <col:2, line:7:36> line:6:28 used session_info 'struct auth_session_info *' cinit     |   `-ImplicitCastExpr 0x146027eb8 <line:7:3, col:36> 'struct auth_session_info *' <IntegralToPointer>     |     `-CallExpr 0x146027e78 <col:3, col:36> 'int'     |       |-ImplicitCastExpr 0x146027e60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x146027df0 <col:3> 'int ()' Function 0x146027d38 'dcesrv_call_session_info' 'int ()'     |       `-ImplicitCastExpr 0x146027ea0 <col:28> 'struct dcesrv_call_state *' <LValueToRValue>     |         `-DeclRefExpr 0x146027e10 <col:28> 'struct dcesrv_call_state *' lvalue ParmVar 0x14600e268 'dce_call' 'struct dcesrv_call_state *'     |-DeclStmt 0x146027f80 <line:9:2, col:26>     | `-VarDecl 0x146027f18 <col:2, col:14> col:14 used account_name 'const char *'     |-DeclStmt 0x146028018 <line:10:2, col:28>     | `-VarDecl 0x146027fb0 <col:2, col:14> col:14 used authority_name 'const char *'     |-DeclStmt 0x146028218 <line:11:2, col:34>     | |-RecordDecl 0x146028030 <col:2, col:9> col:9 struct lsa_String     | `-VarDecl 0x146028198 <col:2, col:21> col:21 used _account_name 'struct lsa_String *'     |-DeclStmt 0x146028358 <line:12:2, col:43>     | `-VarDecl 0x1460282b8 <col:2, col:39> col:21 used _authority_name 'struct lsa_String *' cinit     |   `-RecoveryExpr 0x146028338 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145923c80 <line:14:2, line:16:2>     | |-BinaryOperator 0x145923ac0 <line:14:6, col:44> 'int' contains-errors '&&'     | | |-BinaryOperator 0x145923a60 <col:6, col:19> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x146028370 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x145923a40 <col:19> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x145923aa0 <col:31, col:44> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x1460283c8 <col:31> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x145923a80 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145923c68 <col:53, line:16:2>     |   `-CallExpr 0x145923c40 <line:15:3, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x145923bc0 <col:3> 'int ()' Function 0x145923b08 'DCESRV_FAULT' 'int ()'     |     `-RecoveryExpr 0x145923c20 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x145923df0 <line:19:2, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x145923d00 <col:2, col:9> '<dependent type>' contains-errors lvalue .account_name     | | `-RecoveryExpr 0x145923cd8 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x145923ca0 <col:2> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     | `-CXXDependentScopeMemberExpr 0x145923da8 <col:24, col:30> '<dependent type>' contains-errors lvalue .account_name     |   `-RecoveryExpr 0x145923d80 <col:24, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x145923d48 <col:24> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     |-BinaryOperator 0x145923f60 <line:20:2, col:32> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x145923e70 <col:2, col:9> '<dependent type>' contains-errors lvalue .authority_name     | | `-RecoveryExpr 0x145923e48 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x145923e10 <col:2> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     | `-CXXDependentScopeMemberExpr 0x145923f18 <col:26, col:32> '<dependent type>' contains-errors lvalue .authority_name     |   `-RecoveryExpr 0x145923ef0 <col:26, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x145923eb8 <col:26> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     |-IfStmt 0x145924180 <line:22:2, line:27:2>     | |-BinaryOperator 0x145924100 <line:22:6, line:23:16> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x145923fe0 <line:22:6, col:12> '<dependent type>' contains-errors lvalue .account_name     | | | `-RecoveryExpr 0x145923fb8 <col:6, col:9> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x145923f80 <col:6> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     | | `-UnaryOperator 0x1459240e8 <line:23:9, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x1459240d0 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x145924088 <col:10, col:16> '<dependent type>' contains-errors lvalue .account_name     | |       `-RecoveryExpr 0x145924060 <col:10, col:13> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x145924028 <col:10> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     | `-CompoundStmt 0x145924168 <line:25:8, line:27:2>     |   `-ReturnStmt 0x145924158 <line:26:3, col:10>     |     `-RecoveryExpr 0x145924138 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145924350 <line:29:2, line:34:2>     | |-BinaryOperator 0x145924320 <line:29:6, line:30:16> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x145924200 <line:29:6, col:12> '<dependent type>' contains-errors lvalue .authority_name     | | | `-RecoveryExpr 0x1459241d8 <col:6, col:9> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1459241a0 <col:6> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     | | `-UnaryOperator 0x145924308 <line:30:9, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x1459242f0 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x1459242a8 <col:10, col:16> '<dependent type>' contains-errors lvalue .authority_name     | |       `-RecoveryExpr 0x145924280 <col:10, col:13> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x145924248 <col:10> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     | `-CompoundStmt 0x145924340 <line:32:8, line:34:2>     |-BinaryOperator 0x145924588 <line:36:2, col:75> 'const char *' contains-errors '='     | |-DeclRefExpr 0x145924370 <col:2> 'const char *' lvalue Var 0x146027f18 'account_name' 'const char *'     | `-CallExpr 0x145924558 <col:17, col:75> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x145924470 <col:17> 'int ()' Function 0x1459243b8 'talloc_reference' 'int ()'     |   |-RecoveryExpr 0x145924490 <col:34> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x145924510 <col:43, col:63> '<dependent type>' contains-errors lvalue ->account_name     |     `-RecoveryExpr 0x1459244e8 <col:43, col:57> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1459244b0 <col:43> 'struct auth_session_info *' lvalue Var 0x146027ca8 'session_info' 'struct auth_session_info *'     |-BinaryOperator 0x1459246e0 <line:37:2, col:76> 'const char *' contains-errors '='     | |-DeclRefExpr 0x1459245a8 <col:2> 'const char *' lvalue Var 0x146027fb0 'authority_name' 'const char *'     | `-CallExpr 0x1459246b0 <col:19, col:76> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1459245c8 <col:19> 'int ()' Function 0x1459243b8 'talloc_reference' 'int ()'     |   |-RecoveryExpr 0x1459245e8 <col:36> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x145924668 <col:45, col:65> '<dependent type>' contains-errors lvalue ->domain_name     |     `-RecoveryExpr 0x145924640 <col:45, col:59> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x145924608 <col:45> 'struct auth_session_info *' lvalue Var 0x146027ca8 'session_info' 'struct auth_session_info *'     |-CallExpr 0x145924978 <line:40:2, col:40> 'int'     | |-ImplicitCastExpr 0x145924960 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x145924920 <col:2> 'int ()' Function 0x145924868 'NT_STATUS_HAVE_NO_MEMORY' 'int ()'     | `-ImplicitCastExpr 0x1459249a0 <col:27> 'struct lsa_String *' <LValueToRValue>     |   `-DeclRefExpr 0x145924940 <col:27> 'struct lsa_String *' lvalue Var 0x146028198 '_account_name' 'struct lsa_String *'     |-BinaryOperator 0x145924e48 <line:41:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x145924e00 <col:2, col:17> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1459249b8 <col:2> 'struct lsa_String *' lvalue Var 0x146028198 '_account_name' 'struct lsa_String *'     | `-DeclRefExpr 0x145924e28 <col:26> 'const char *' lvalue Var 0x146027f18 'account_name' 'const char *'     |-IfStmt 0x1459250c8 <line:43:2, line:47:2>     | |-CXXDependentScopeMemberExpr 0x145924ec8 <line:43:6, col:12> '<dependent type>' contains-errors lvalue .authority_name     | | `-RecoveryExpr 0x145924ea0 <col:6, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x145924e68 <col:6> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     | `-CompoundStmt 0x1459250a8 <col:28, line:47:2>     |   |-CallExpr 0x145924fc8 <line:45:3, col:43> 'int' contains-errors     |   | |-ImplicitCastExpr 0x145924fb0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x145924f70 <col:3> 'int ()' Function 0x145924868 'NT_STATUS_HAVE_NO_MEMORY' 'int ()'     |   | `-ImplicitCastExpr 0x145924ff0 <col:28> 'struct lsa_String *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x145924f90 <col:28> 'struct lsa_String *' contains-errors lvalue Var 0x1460282b8 '_authority_name' 'struct lsa_String *'     |   `-BinaryOperator 0x145925088 <line:46:3, col:29> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x145925040 <col:3, col:20> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x145925008 <col:3> 'struct lsa_String *' contains-errors lvalue Var 0x1460282b8 '_authority_name' 'struct lsa_String *'     |     `-DeclRefExpr 0x145925068 <col:29> 'const char *' lvalue Var 0x146027fb0 'authority_name' 'const char *'     |-BinaryOperator 0x1459251e0 <line:49:2, col:25> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x1459251a8 <col:2, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x145925190 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x145925148 <col:3, col:10> '<dependent type>' contains-errors lvalue .account_name     | |     `-RecoveryExpr 0x145925120 <col:3, col:6> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1459250e8 <col:3> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'     | `-DeclRefExpr 0x1459251c0 <col:25> 'struct lsa_String *' lvalue Var 0x146028198 '_account_name' 'struct lsa_String *'     `-IfStmt 0x1459253d8 <line:50:2, line:52:2>       |-CXXDependentScopeMemberExpr 0x145925260 <line:50:6, col:13> '<dependent type>' contains-errors lvalue .authority_name       | `-RecoveryExpr 0x145925238 <col:6, col:9> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x145925200 <col:6> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'       `-CompoundStmt 0x1459253c0 <col:29, line:52:2>         `-BinaryOperator 0x1459253a0 <line:51:3, col:28> '<dependent type>' contains-errors '='           |-UnaryOperator 0x145925368 <col:3, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow           | `-ImplicitCastExpr 0x145925350 <col:4, col:11> '<dependent type>' contains-errors <LValueToRValue>           |   `-CXXDependentScopeMemberExpr 0x145925308 <col:4, col:11> '<dependent type>' contains-errors lvalue .authority_name           |     `-RecoveryExpr 0x1459252e0 <col:4, col:7> '<dependent type>' contains-errors lvalue           |       `-DeclRefExpr 0x1459252a8 <col:4> 'struct lsa_GetUserName *' lvalue ParmVar 0x1460274e8 'r' 'struct lsa_GetUserName *'           `-DeclRefExpr 0x145925380 <col:28> 'struct lsa_String *' contains-errors lvalue Var 0x1460282b8 '_authority_name' 'struct lsa_String *' ","20496":"`-FunctionDecl 0x1250f9d58  line:1:12 mbochs_probe 'int (struct mdev_device *)' static   |-ParmVarDecl 0x1250f9c48 <col:25, col:45> col:45 used mdev 'struct mdev_device *'   `-CompoundStmt 0x12511a980 <line:2:1, line:57:1>     |-DeclStmt 0x125112440 <line:3:2, line:4:46>     | |-RecordDecl 0x125112050 <line:3:8, col:15> col:15 struct mbochs_type     | `-VarDecl 0x1251121b8 <col:2, col:28> col:28 used type 'const struct mbochs_type *'     |-DeclStmt 0x1251127d8 <line:5:2, col:37>     | |-RecordDecl 0x125112458 <col:2, col:9> col:9 struct device     | `-VarDecl 0x1251125c8 <col:2, col:36> col:17 used dev 'struct device *' cinit     |   `-ImplicitCastExpr 0x1251127a8 <col:23, col:36> 'struct device *' <IntegralToPointer>     |     `-CallExpr 0x125112768 <col:23, col:36> 'int'     |       |-ImplicitCastExpr 0x125112750 <col:23> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x125112710 <col:23> 'int ()' Function 0x125112658 'mdev_dev' 'int ()'     |       `-ImplicitCastExpr 0x125112790 <col:32> 'struct mdev_device *' <LValueToRValue>     |         `-DeclRefExpr 0x125112730 <col:32> 'struct mdev_device *' lvalue ParmVar 0x1250f9c48 'mdev' 'struct mdev_device *'     |-DeclStmt 0x1251129d8 <line:6:2, col:31>     | |-RecordDecl 0x1251127f0 <col:2, col:9> col:9 struct mdev_state     | `-VarDecl 0x125112958 <col:2, col:21> col:21 used mdev_state 'struct mdev_state *'     |-DeclStmt 0x125112b08 <line:7:2, col:19>     | `-VarDecl 0x125112a08 <col:2, col:13> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x125112af0 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x125112ad8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x125112ab8 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125112d18 <line:9:2, line:10:11>     | |-BinaryOperator 0x125112c50 <line:9:6, col:42> 'int' contains-errors '>'     | | |-BinaryOperator 0x125112c10 <col:6, col:21> '<dependent type>' contains-errors '+'     | | | |-RecoveryExpr 0x125112b58 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x125112b20 <col:6> 'const struct mbochs_type *' lvalue Var 0x1251121b8 'type' 'const struct mbochs_type *'     | | | `-RecoveryExpr 0x125112bf0 <col:21> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x125112c30 <col:42> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x125112d08 <line:10:3, col:11>     |   `-UnaryOperator 0x125112cf0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x125112cd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x125112cb8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125118610 <line:13:2, line:14:11>     | |-BinaryOperator 0x125112f40 <line:13:6, col:20> 'int' contains-errors '=='     | | |-DeclRefExpr 0x125112ec8 <col:6> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | | `-RecoveryExpr 0x125112f20 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x125118600 <line:14:3, col:11>     |   `-UnaryOperator 0x125112fe0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x125112fc8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x125112fa8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1251188c0 <line:15:2, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125118710 <col:2> 'int ()' Function 0x125118658 'vfio_init_group_dev' 'int ()'     | |-UnaryOperator 0x125118790 <col:22, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x125118768 <col:23, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x125118730 <col:23> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | |-UnaryOperator 0x125118808 <col:41, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1251187e0 <col:42, col:48> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1251187a8 <col:42> 'struct mdev_device *' lvalue ParmVar 0x1250f9c48 'mdev' 'struct mdev_device *'     | `-UnaryOperator 0x1251188a8 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x125118888 <col:54> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x125118a68 <line:17:2, col:68> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x125118930 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1251188f8 <col:2> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-CallExpr 0x125118a38 <col:24, col:68> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125118958 <col:24> 'int ()' Function 0x125112d80 'kzalloc' 'int ()'     |   |-RecoveryExpr 0x1251189f8 <col:32> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x125118a18 <col:58> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125118b70 <line:18:2, line:19:8>     | |-RecoveryExpr 0x125118ae8 <line:18:6, col:29> '_Bool' contains-errors     | `-GotoStmt 0x125118b58 <line:19:3, col:8> 'err_mem' 0x125118b08     |-BinaryOperator 0x125118cd0 <line:21:2, col:46> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x125118bc8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x125118b90 <col:2> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-BinaryOperator 0x125118cb0 <col:24, col:46> '<dependent type>' contains-errors '*'     |   |-BinaryOperator 0x125118c70 <col:24, col:39> '<dependent type>' contains-errors '*'     |   | |-RecoveryExpr 0x125118c28 <col:24, col:30> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x125118bf0 <col:24> 'const struct mbochs_type *' lvalue Var 0x1251121b8 'type' 'const struct mbochs_type *'     |   | `-IntegerLiteral 0x125118c50 <col:39> 'int' 1024     |   `-IntegerLiteral 0x125118c90 <col:46> 'int' 1024     |-IfStmt 0x1251191a0 <line:26:2, line:27:8>     | |-UnaryOperator 0x125119170 <line:26:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x125119158 <col:7, col:19> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x125119130 <col:7, col:19> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1251190f8 <col:7> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-GotoStmt 0x125119188 <line:27:3, col:8> 'err_mem' 0x125118b08     |-CallExpr 0x125119520 <line:29:2, line:30:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1251192a0 <line:29:2> 'int ()' Function 0x1251191e8 'dev_info' 'int ()'     | |-DeclRefExpr 0x1251192c0 <col:11> 'struct device *' lvalue Var 0x1251125c8 'dev' 'struct device *'     | |-StringLiteral 0x125119320 <col:16> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x1251193e8 <col:23> 'const char[13]' lvalue __func__     | | `-StringLiteral 0x1251193c0 <col:23> 'const char[13]' lvalue \"mbochs_probe\"     | |-RecoveryExpr 0x125119438 <line:30:4, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x125119400 <col:4> 'const struct mbochs_type *' lvalue Var 0x1251121b8 'type' 'const struct mbochs_type *'     | |-RecoveryExpr 0x125119498 <col:16, col:22> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x125119460 <col:16> 'const struct mbochs_type *' lvalue Var 0x1251121b8 'type' 'const struct mbochs_type *'     | `-RecoveryExpr 0x1251194f8 <col:30, col:42> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1251194c0 <col:30> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     |-CallExpr 0x125119750 <line:32:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1251196b8 <col:2> 'int ()' Function 0x125119600 'mutex_init' 'int ()'     | `-UnaryOperator 0x125119738 <col:13, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x125119710 <col:14, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1251196d8 <col:14> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     |-BinaryOperator 0x1251197f8 <line:33:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1251197b0 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x125119778 <col:2> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-DeclRefExpr 0x1251197d8 <col:21> 'struct mdev_device *' lvalue ParmVar 0x1250f9c48 'mdev' 'struct mdev_device *'     |-CallExpr 0x125119990 <line:34:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1251198f8 <col:2> 'int ()' Function 0x125119840 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x125119978 <col:17, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x125119950 <col:18, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125119918 <col:18> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     |-BinaryOperator 0x125119a38 <line:35:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1251199f0 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1251199b8 <col:2> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-IntegerLiteral 0x125119a18 <col:24> 'int' 1     |-BinaryOperator 0x125119ad8 <line:37:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x125119a90 <col:2, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x125119a58 <col:2> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-DeclRefExpr 0x125119ab8 <col:21> 'const struct mbochs_type *' lvalue Var 0x1251121b8 'type' 'const struct mbochs_type *'     |-BinaryOperator 0x125119c00 <line:38:2, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x125119b58 <col:2, col:24> '<dependent type>' contains-errors lvalue .max_xres     | | `-RecoveryExpr 0x125119b30 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x125119af8 <col:2> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-RecoveryExpr 0x125119bd8 <col:35, col:41> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x125119ba0 <col:35> 'const struct mbochs_type *' lvalue Var 0x1251121b8 'type' 'const struct mbochs_type *'     |-BinaryOperator 0x125119d28 <line:39:2, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x125119c80 <col:2, col:24> '<dependent type>' contains-errors lvalue .max_yres     | | `-RecoveryExpr 0x125119c58 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x125119c20 <col:2> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-RecoveryExpr 0x125119d00 <col:35, col:41> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x125119cc8 <col:35> 'const struct mbochs_type *' lvalue Var 0x1251121b8 'type' 'const struct mbochs_type *'     |-BinaryOperator 0x125119f38 <line:41:2, col:68> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x125119e50 <col:2, col:24> '<dependent type>' contains-errors lvalue .edid_max_size     | | `-RecoveryExpr 0x125119e28 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x125119df0 <col:2> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     | `-UnaryExprOrTypeTraitExpr 0x125119f18 <col:40, col:68> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x125119ef8 <col:46, col:68> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x125119ed0 <col:47, col:59> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x125119e98 <col:47> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *' non_odr_use_unevaluated     |-CallExpr 0x12511a090 <line:42:2, col:39> 'int'     | |-ImplicitCastExpr 0x12511a078 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12511a038 <col:2> 'int ()' Function 0x125119f80 'mbochs_create_config_space' 'int ()'     | `-ImplicitCastExpr 0x12511a0b8 <col:29> 'struct mdev_state *' <LValueToRValue>     |   `-DeclRefExpr 0x12511a058 <col:29> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     |-CallExpr 0x12511a208 <line:43:2, col:25> 'int'     | |-ImplicitCastExpr 0x12511a1f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12511a1b0 <col:2> 'int ()' Function 0x12511a0f8 'mbochs_reset' 'int ()'     | `-ImplicitCastExpr 0x12511a230 <col:15> 'struct mdev_state *' <LValueToRValue>     |   `-DeclRefExpr 0x12511a1d0 <col:15> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     |-BinaryOperator 0x12511a468 <line:47:2, col:49> 'int' contains-errors '='     | |-DeclRefExpr 0x12511a2a8 <col:2> 'int' contains-errors lvalue Var 0x125112a08 'ret' 'int'     | `-CallExpr 0x12511a440 <col:8, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12511a3a8 <col:8> 'int ()' Function 0x12511a2f0 'vfio_register_group_dev' 'int ()'     |   `-UnaryOperator 0x12511a428 <col:32, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12511a400 <col:33, col:45> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12511a3c8 <col:33> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     |-IfStmt 0x12511a4d8 <line:48:2, line:49:8>     | |-ImplicitCastExpr 0x12511a4a8 <line:48:6> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x12511a488 <col:6> 'int' contains-errors lvalue Var 0x125112a08 'ret' 'int'     | `-GotoStmt 0x12511a4c0 <line:49:3, col:8> 'err_mem' 0x125118b08     |-CallExpr 0x12511a698 <line:50:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12511a5d8 <col:2> 'int ()' Function 0x12511a520 'dev_set_drvdata' 'int ()'     | |-UnaryOperator 0x12511a660 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12511a638 <col:19, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12511a600 <col:19> 'struct mdev_device *' lvalue ParmVar 0x1250f9c48 'mdev' 'struct mdev_device *'     | `-DeclRefExpr 0x12511a678 <col:30> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     |-ReturnStmt 0x12511a6e8 <line:51:2, col:9>     | `-IntegerLiteral 0x12511a6c8 <col:9> 'int' 0     |-LabelStmt 0x12511a880 <line:53:1, line:54:27> 'err_mem'     | `-CallExpr 0x12511a858 <col:2, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12511a7d8 <col:2> 'int ()' Function 0x12511a720 'kfree' 'int ()'     |   `-RecoveryExpr 0x12511a830 <col:8, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12511a7f8 <col:8> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     |-CallExpr 0x12511a8f8 <line:55:2, col:18> 'int'     | |-ImplicitCastExpr 0x12511a8e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12511a8a0 <col:2> 'int ()' Function 0x12511a720 'kfree' 'int ()'     | `-ImplicitCastExpr 0x12511a920 <col:8> 'struct mdev_state *' <LValueToRValue>     |   `-DeclRefExpr 0x12511a8c0 <col:8> 'struct mdev_state *' lvalue Var 0x125112958 'mdev_state' 'struct mdev_state *'     `-ReturnStmt 0x12511a970 <line:56:2, col:9>       `-ImplicitCastExpr 0x12511a958 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x12511a938 <col:9> 'int' contains-errors lvalue Var 0x125112a08 'ret' 'int' ","21132":"`-FunctionDecl 0x12a82b918  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12a82ba18 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12a82ba80 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12a82bae8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12a82b9c0 <<invalid sloc>> Implicit 882 ","20740":"`-FunctionDecl 0x14e141838  line:1:20 invalid do_stack_segment 'int (struct pt_regs *, long)'   |-ParmVarDecl 0x14e128668 <col:37, col:53> col:53 used regs 'struct pt_regs *'   |-ParmVarDecl 0x14e1286e8 <col:59, col:64> col:64 used error_code 'long'   `-CompoundStmt 0x14e142770 <line:2:1, line:13:1>     |-DeclStmt 0x14e141a88 <line:3:2, col:27>     | |-EnumDecl 0x14e1418f0 <col:2, col:7> col:7 ctx_state     | `-VarDecl 0x14e141a08 <col:2, col:17> col:17 referenced invalid prev_state 'enum ctx_state'     |-BinaryOperator 0x14e141cc8 <line:5:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14e141ac0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14e141aa0 <col:2> 'enum ctx_state' lvalue Var 0x14e141a08 'prev_state' 'enum ctx_state'     | `-CallExpr 0x14e141ca8 <col:15, col:31> 'int'     |   `-ImplicitCastExpr 0x14e141c90 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14e141c40 <col:15> 'int ()' Function 0x14e141b88 'exception_enter' 'int ()'     |-IfStmt 0x14e142608 <line:6:2, line:11:2>     | |-BinaryOperator 0x14e142028 <line:6:6, line:7:34> 'int' contains-errors '!='     | | |-CallExpr 0x14e141fb8 <line:6:6, line:7:29> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14e141dc8 <line:6:6> 'int ()' Function 0x14e141d10 'notify_die' 'int ()'     | | | |-RecoveryExpr 0x14e141f58 <col:17> '<dependent type>' contains-errors lvalue     | | | |-StringLiteral 0x14e141e40 <col:27> 'char[4]' lvalue \"STR\"     | | | |-DeclRefExpr 0x14e141e60 <col:34> 'struct pt_regs *' lvalue ParmVar 0x14e128668 'regs' 'struct pt_regs *'     | | | |-DeclRefExpr 0x14e141e80 <col:40> 'long' lvalue ParmVar 0x14e1286e8 'error_code' 'long'     | | | |-RecoveryExpr 0x14e141f78 <line:7:10> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x14e141f98 <col:23> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14e142008 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e1425e0 <col:47, line:11:2>     |   |-CallExpr 0x14e142180 <line:8:3, col:31> 'int'     |   | |-ImplicitCastExpr 0x14e142168 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e142128 <col:3> 'int ()' Function 0x14e142070 'preempt_conditional_sti' 'int ()'     |   | `-ImplicitCastExpr 0x14e1421a8 <col:27> 'struct pt_regs *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e142148 <col:27> 'struct pt_regs *' lvalue ParmVar 0x14e128668 'regs' 'struct pt_regs *'     |   |-CallExpr 0x14e142418 <line:9:3, col:61> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e1422a0 <col:3> 'int ()' Function 0x14e1421e8 'do_trap' 'int ()'     |   | |-RecoveryExpr 0x14e1423b8 <col:11> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14e1423d8 <col:24> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14e1422f0 <col:32> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x14e142310 <col:39> 'struct pt_regs *' lvalue ParmVar 0x14e128668 'regs' 'struct pt_regs *'     |   | |-DeclRefExpr 0x14e142330 <col:45> 'long' lvalue ParmVar 0x14e1286e8 'error_code' 'long'     |   | `-RecoveryExpr 0x14e1423f8 <col:57> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14e1425a0 <line:10:3, col:31> 'int'     |     |-ImplicitCastExpr 0x14e142588 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14e142548 <col:3> 'int ()' Function 0x14e142490 'preempt_conditional_cli' 'int ()'     |     `-ImplicitCastExpr 0x14e1425c8 <col:27> 'struct pt_regs *' <LValueToRValue>     |       `-DeclRefExpr 0x14e142568 <col:27> 'struct pt_regs *' lvalue ParmVar 0x14e128668 'regs' 'struct pt_regs *'     `-CallExpr 0x14e142748 <line:12:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x14e142708 <col:2> 'int ()' Function 0x14e142650 'exception_exit' 'int ()'       `-RecoveryExpr 0x14e142728 <col:17> '<dependent type>' contains-errors lvalue ","20743":"`-FunctionDecl 0x12c80df18  line:1:12 invalid output_frame 'int (int *, int *, int *)' static   |-ParmVarDecl 0x12c80dd28 <col:25, col:38> col:38 invalid h 'int *'   |-ParmVarDecl 0x12c80dda8 <col:41, col:50> col:50 referenced invalid dst 'int *'   |-ParmVarDecl 0x12c80de28 <col:55, col:64> col:64 referenced invalid srcp 'int *'   `-CompoundStmt 0x12c122630 <line:2:1, line:22:1>     |-DeclStmt 0x12c80e110 <line:4:5, col:10>     | `-VarDecl 0x12c80e0a8 <col:5, col:9> col:9 used i 'int'     |-DeclStmt 0x12d809200 <line:5:5, col:37>     | `-VarDecl 0x12c80e140 <col:5, col:36> col:9 used ret 'int' cinit     |   `-CallExpr 0x12c80e3c8 <col:15, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c80e300 <col:15> 'int ()' Function 0x12c80e248 'av_frame_ref' 'int ()'     |     |-RecoveryExpr 0x12c80e320 <col:28> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x12c80e3a8 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d8092d8 <line:6:5, line:7:16>     | |-BinaryOperator 0x12d809270 <line:6:9, col:15> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x12d809258 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x12d809218 <col:9> 'int' contains-errors lvalue Var 0x12c80e140 'ret' 'int'     | | `-IntegerLiteral 0x12d809238 <col:15> 'int' 0     | `-ReturnStmt 0x12d8092c8 <line:7:9, col:16>     |   `-ImplicitCastExpr 0x12d8092b0 <col:16> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x12d809290 <col:16> 'int' contains-errors lvalue Var 0x12c80e140 'ret' 'int'     |-CallExpr 0x12d809648 <line:9:5, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d8093d8 <col:5> 'int ()' Function 0x12d809320 'av_dict_set' 'int ()'     | |-UnaryOperator 0x12d809460 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12d809418 <col:18, col:23> '<dependent type>' contains-errors lvalue ->metadata     | |   `-RecoveryExpr 0x12d8093f8 <col:18> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12d8094c0 <col:33> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x12d809600 <col:40, col:65> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12d8095c0 <col:40> 'int ()' Function 0x12d809508 'ff_h264_sei_stereo_mode' 'int ()'     | | `-RecoveryExpr 0x12d8095e0 <col:64> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12d809628 <col:68> 'int' 0     |-IfStmt 0x12d809750 <line:11:5, line:12:16>     | |-UnaryOperator 0x12d809708 <line:11:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12d8096f0 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12d8096a8 <col:10, col:16> '<dependent type>' contains-errors lvalue ->crop     | |     `-RecoveryExpr 0x12d809688 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d809740 <line:12:9, col:16>     |   `-IntegerLiteral 0x12d809720 <col:16> 'int' 0     |-ForStmt 0x12d80a1b8 <line:14:5, line:20:5>     | |-BinaryOperator 0x12d8097b0 <line:14:10, col:14> 'int' '='     | | |-DeclRefExpr 0x12d809770 <col:10> 'int' lvalue Var 0x12c80e0a8 'i' 'int'     | | `-IntegerLiteral 0x12d809790 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12d809828 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x12d809810 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12d8097d0 <col:17> 'int' lvalue Var 0x12c80e0a8 'i' 'int'     | | `-IntegerLiteral 0x12d8097f0 <col:21> 'int' 3     | |-UnaryOperator 0x12d809868 <col:24, col:25> 'int' postfix '++'     | | `-DeclRefExpr 0x12d809848 <col:24> 'int' lvalue Var 0x12c80e0a8 'i' 'int'     | `-CompoundStmt 0x12d80a188 <col:29, line:20:5>     |   |-DeclStmt 0x12d809a50 <line:15:9, col:53>     |   | `-VarDecl 0x12d809898 <col:9, col:52> col:13 used hshift 'int' cinit     |   |   `-ConditionalOperator 0x12d809a20 <col:22, col:52> '<dependent type>' contains-errors     |   |     |-ParenExpr 0x12d809978 <col:22, col:28> 'int'     |   |     | `-BinaryOperator 0x12d809958 <col:23, col:27> 'int' '>'     |   |     |   |-ImplicitCastExpr 0x12d809940 <col:23> 'int' <LValueToRValue>     |   |     |   | `-DeclRefExpr 0x12d809900 <col:23> 'int' lvalue Var 0x12c80e0a8 'i' 'int'     |   |     |   `-IntegerLiteral 0x12d809920 <col:27> 'int' 0     |   |     |-CXXDependentScopeMemberExpr 0x12d8099b8 <col:32, col:35> '<dependent type>' contains-errors lvalue ->chroma_x_shift     |   |     | `-RecoveryExpr 0x12d809998 <col:32> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x12d809a00 <col:52> 'int' 0     |   |-DeclStmt 0x12d809c38 <line:16:9, col:53>     |   | `-VarDecl 0x12d809a80 <col:9, col:52> col:13 used vshift 'int' cinit     |   |   `-ConditionalOperator 0x12d809c08 <col:22, col:52> '<dependent type>' contains-errors     |   |     |-ParenExpr 0x12d809b60 <col:22, col:28> 'int'     |   |     | `-BinaryOperator 0x12d809b40 <col:23, col:27> 'int' '>'     |   |     |   |-ImplicitCastExpr 0x12d809b28 <col:23> 'int' <LValueToRValue>     |   |     |   | `-DeclRefExpr 0x12d809ae8 <col:23> 'int' lvalue Var 0x12c80e0a8 'i' 'int'     |   |     |   `-IntegerLiteral 0x12d809b08 <col:27> 'int' 0     |   |     |-CXXDependentScopeMemberExpr 0x12d809ba0 <col:32, col:35> '<dependent type>' contains-errors lvalue ->chroma_y_shift     |   |     | `-RecoveryExpr 0x12d809b80 <col:32> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x12d809be8 <col:52> 'int' 0     |   |-DeclStmt 0x12d80a020 <line:17:9, line:18:69>     |   | `-VarDecl 0x12d809c68 <line:17:9, line:18:68> line:17:13 used off 'int' cinit     |   |   `-BinaryOperator 0x12d80a000 <col:22, line:18:68> '<dependent type>' contains-errors '+'     |   |     |-ParenExpr 0x12d809e20 <line:17:22, col:68> '<dependent type>' contains-errors     |   |     | `-BinaryOperator 0x12d809e00 <col:23, col:57> '<dependent type>' contains-errors '<<'     |   |     |   |-ParenExpr 0x12d809d78 <col:23, col:49> '<dependent type>' contains-errors     |   |     |   | `-BinaryOperator 0x12d809d58 <col:24, col:43> '<dependent type>' contains-errors '>>'     |   |     |   |   |-CXXDependentScopeMemberExpr 0x12d809cf0 <col:24, col:30> '<dependent type>' contains-errors lvalue ->crop_left     |   |     |   |   | `-RecoveryExpr 0x12d809cd0 <col:24> '<dependent type>' contains-errors lvalue     |   |     |   |   `-DeclRefExpr 0x12d809d38 <col:43> 'int' contains-errors lvalue Var 0x12d809898 'hshift' 'int'     |   |     |   `-CXXDependentScopeMemberExpr 0x12d809db8 <col:54, col:57> '<dependent type>' contains-errors lvalue ->pixel_shift     |   |     |     `-RecoveryExpr 0x12d809d98 <col:54> '<dependent type>' contains-errors lvalue     |   |     `-BinaryOperator 0x12d809fe0 <line:18:23, col:68> '<dependent type>' contains-errors '*'     |   |       |-ParenExpr 0x12d809ee8 <col:23, col:49> '<dependent type>' contains-errors     |   |       | `-BinaryOperator 0x12d809ec8 <col:24, col:43> '<dependent type>' contains-errors '>>'     |   |       |   |-CXXDependentScopeMemberExpr 0x12d809e60 <col:24, col:30> '<dependent type>' contains-errors lvalue ->crop_top     |   |       |   | `-RecoveryExpr 0x12d809e40 <col:24> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x12d809ea8 <col:43> 'int' contains-errors lvalue Var 0x12d809a80 'vshift' 'int'     |   |       `-ArraySubscriptExpr 0x12d809fc0 <col:53, col:68> '<dependent type>' contains-errors lvalue     |   |         |-ImplicitCastExpr 0x12d809f90 <col:53, col:58> '<dependent type>' contains-errors <LValueToRValue>     |   |         | `-CXXDependentScopeMemberExpr 0x12d809f28 <col:53, col:58> '<dependent type>' contains-errors lvalue ->linesize     |   |         |   `-RecoveryExpr 0x12d809f08 <col:53> '<dependent type>' contains-errors lvalue     |   |         `-ImplicitCastExpr 0x12d809fa8 <col:67> 'int' <LValueToRValue>     |   |           `-DeclRefExpr 0x12d809f70 <col:67> 'int' lvalue Var 0x12c80e0a8 'i' 'int'     |   `-CompoundAssignOperator 0x12d80a158 <line:19:9, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-ArraySubscriptExpr 0x12d80a118 <col:9, col:20> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x12d80a0e8 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>     |     | | `-CXXDependentScopeMemberExpr 0x12d80a080 <col:9, col:14> '<dependent type>' contains-errors lvalue ->data     |     | |   `-RecoveryExpr 0x12d80a058 <col:9> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x12d80a038 <col:9> 'int *' lvalue ParmVar 0x12c80dda8 'dst' 'int *'     |     | `-ImplicitCastExpr 0x12d80a100 <col:19> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x12d80a0c8 <col:19> 'int' lvalue Var 0x12c80e0a8 'i' 'int'     |     `-DeclRefExpr 0x12d80a138 <col:25> 'int' contains-errors lvalue Var 0x12d809c68 'off' 'int'     `-ReturnStmt 0x12c122620 <line:21:5, col:12>       `-IntegerLiteral 0x12c122600 <col:12> 'int' 0 ","21252":"`-FunctionDecl 0x143928238  line:1:1 flatpak_proxy_new 'int (const char *, const char *)'   |-ParmVarDecl 0x1439280d8 <col:20, col:32> col:32 dbus_address 'const char *'   |-ParmVarDecl 0x143928158 <line:2:20, col:32> col:32 used socket_path 'const char *'   `-CompoundStmt 0x1439285e0 <line:3:1, line:8:1>     `-ReturnStmt 0x1439285d0 <line:7:3, col:10>       `-RecoveryExpr 0x1439285b0 <col:10> '<dependent type>' contains-errors lvalue ","21139":"`-FunctionDecl 0x128008fd8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1280090d8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x128009140 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1280091a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x128009080 <<invalid sloc>> Implicit 900 ","20364":"`-FunctionDecl 0x132027540  line:1:20 invalid mcryptd_check_internal 'void (struct rtattr **, int *, int *)' static inline   |-ParmVarDecl 0x13200e2a8 <col:43, col:59> col:59 used tb 'struct rtattr **'   |-ParmVarDecl 0x13200e378 <col:63, col:68> col:68 invalid type 'int *'   |-ParmVarDecl 0x132027400 <line:2:8, col:13> col:13 invalid mask 'int *'   `-CompoundStmt 0x132028068 <line:3:1, line:13:1>     |-DeclStmt 0x1320277e8 <line:4:2, col:31>     | |-RecordDecl 0x132027600 <col:2, col:9> col:9 struct crypto_attr_type     | `-VarDecl 0x132027768 <col:2, col:27> col:27 used algt 'struct crypto_attr_type *'     |-BinaryOperator 0x132027a60 <line:6:2, col:32> 'struct crypto_attr_type *' '='     | |-DeclRefExpr 0x132027800 <col:2> 'struct crypto_attr_type *' lvalue Var 0x132027768 'algt' 'struct crypto_attr_type *'     | `-ImplicitCastExpr 0x132027a48 <col:9, col:32> 'struct crypto_attr_type *' <IntegralToPointer>     |   `-CallExpr 0x132027a08 <col:9, col:32> 'int'     |     |-ImplicitCastExpr 0x1320279f0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x132027980 <col:9> 'int ()' Function 0x1320278c8 'crypto_get_attr_type' 'int ()'     |     `-ImplicitCastExpr 0x132027a30 <col:30> 'struct rtattr **' <LValueToRValue>     |       `-DeclRefExpr 0x1320279a0 <col:30> 'struct rtattr **' lvalue ParmVar 0x13200e2a8 'tb' 'struct rtattr **'     |-IfStmt 0x132027c08 <line:7:2, line:8:3>     | |-CallExpr 0x132027bb8 <line:7:6, col:17> 'int'     | | |-ImplicitCastExpr 0x132027ba0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x132027b60 <col:6> 'int ()' Function 0x132027aa8 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x132027be0 <col:13> 'struct crypto_attr_type *' <LValueToRValue>     | |   `-DeclRefExpr 0x132027b80 <col:13> 'struct crypto_attr_type *' lvalue Var 0x132027768 'algt' 'struct crypto_attr_type *'     | `-ReturnStmt 0x132027bf8 <line:8:3>     |-IfStmt 0x132027e28 <line:9:2, line:10:12>     | |-RecoveryExpr 0x132027cc0 <line:9:6, col:39> '_Bool' contains-errors     | `-CompoundAssignOperator 0x132027df8 <line:10:3, col:12> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-UnaryOperator 0x132027dc0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x132027da8 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x132027ce0 <col:4> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x132027dd8 <col:12> '<dependent type>' contains-errors lvalue     `-IfStmt 0x132028048 <line:11:2, line:12:12>       |-RecoveryExpr 0x132027ee0 <line:11:6, col:39> '_Bool' contains-errors       `-CompoundAssignOperator 0x132028018 <line:12:3, col:12> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |-UnaryOperator 0x132027fe0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow         | `-ImplicitCastExpr 0x132027fc8 <col:4> '<dependent type>' contains-errors <LValueToRValue>         |   `-RecoveryExpr 0x132027f00 <col:4> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x132027ff8 <col:12> '<dependent type>' contains-errors lvalue ","21245":"`-FunctionDecl 0x15004a988  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15004aa88 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15004aaf0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15004ab58 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15004aa30 <<invalid sloc>> Implicit 882 ","20287":"`-FunctionDecl 0x12b145a00  line:1:10 invalid ext4_get_reserved_space 'int *(struct inode *)'   |-ParmVarDecl 0x12b128668 <col:34, col:48> col:48 used inode 'struct inode *'   `-CompoundStmt 0x12b145d28 <line:2:1, line:4:1>     `-ReturnStmt 0x12b145d18 <line:3:2, col:25>       `-UnaryOperator 0x12b145d00 <col:9, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x12b145cd8 <col:10, col:25> '<dependent type>' contains-errors lvalue           `-CallExpr 0x12b145c98 <col:10, col:22> 'int'             |-ImplicitCastExpr 0x12b145c80 <col:10> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x12b145c10 <col:10> 'int ()' Function 0x12b145b58 'EXT4_I' 'int ()'             `-ImplicitCastExpr 0x12b145cc0 <col:17> 'struct inode *' <LValueToRValue>               `-DeclRefExpr 0x12b145c30 <col:17> 'struct inode *' lvalue ParmVar 0x12b128668 'inode' 'struct inode *' ","21104":"`-FunctionDecl 0x1489284c0  line:1:13 invalid huffman_decode_row 'void (int *, int *, int, int, int, int *)' static   |-ParmVarDecl 0x148928128 <col:32, col:44> col:44 invalid I 'int *'   |-ParmVarDecl 0x1489281a8 <col:47, col:70> col:70 referenced invalid DE 'int *'   |-ParmVarDecl 0x148928228 <line:2:32, col:36> col:36 bits 'int'   |-ParmVarDecl 0x1489282a8 <col:42, col:46> col:46 used row 'int'   |-ParmVarDecl 0x148928328 <col:51, col:55> col:55 offset 'int'   |-ParmVarDecl 0x1489283a8 <col:63, col:68> col:68 used minimum 'int *'   `-CompoundStmt 0x148942318 <line:3:1, line:50:1>     |-DeclStmt 0x148941868 <line:9:3, col:10>     | `-VarDecl 0x148941800 <col:3, col:7> col:7 used col 'int'     `-ForStmt 0x1489422e0 <line:14:3, line:49:3>       |-BinaryOperator 0x148941a88 <line:14:8, col:14> 'int' '='       | |-DeclRefExpr 0x148941a48 <col:8> 'int' lvalue Var 0x148941800 'col' 'int'       | `-IntegerLiteral 0x148941a68 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x148941bb0 <col:17, col:27> 'int' contains-errors '<'       | |-DeclRefExpr 0x148941aa8 <col:17> 'int' lvalue Var 0x148941800 'col' 'int'       | `-CXXDependentScopeMemberExpr 0x148941b68 <col:23, col:27> '<dependent type>' contains-errors lvalue ->columns       |   `-RecoveryExpr 0x148941b48 <col:23> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x148941bf0 <col:36, col:39> 'int' postfix '++'       | `-DeclRefExpr 0x148941bd0 <col:36> 'int' lvalue Var 0x148941800 'col' 'int'       `-CompoundStmt 0x1489422c0 <line:15:3, line:49:3>         |-DeclStmt 0x148941c88 <line:16:5, col:14>         | `-VarDecl 0x148941c20 <col:5, col:9> col:9 used color 'int'         `-ForStmt 0x148942288 <line:18:5, line:48:5>           |-BinaryOperator 0x148941ce0 <line:18:10, col:18> 'int' '='           | |-DeclRefExpr 0x148941ca0 <col:10> 'int' lvalue Var 0x148941c20 'color' 'int'           | `-IntegerLiteral 0x148941cc0 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x148941d58 <col:21, col:29> 'int' '<'           | |-ImplicitCastExpr 0x148941d40 <col:21> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x148941d00 <col:21> 'int' lvalue Var 0x148941c20 'color' 'int'           | `-IntegerLiteral 0x148941d20 <col:29> 'int' 3           |-UnaryOperator 0x148941d98 <col:32, col:37> 'int' postfix '++'           | `-DeclRefExpr 0x148941d78 <col:32> 'int' lvalue Var 0x148941c20 'color' 'int'           `-CompoundStmt 0x148942268 <line:19:5, line:48:5>             |-IfStmt 0x148942090 <line:23:7, line:32:7> has_else             | |-RecoveryExpr 0x148941f10 <line:23:11, col:22> '_Bool' contains-errors             | |-CompoundStmt 0x148942050 <line:24:7, line:28:7>             | `-CompoundStmt 0x148942080 <line:30:7, line:32:7>             `-SwitchStmt 0x1489420e0 <line:34:7, line:47:7>               |-RecoveryExpr 0x1489420c0 <line:34:15, col:19> 'int' contains-errors               `-CompoundStmt 0x148942240 <line:35:7, line:47:7>                 |-BreakStmt 0x148942188 <line:40:9>                 |-BreakStmt 0x148942210 <line:43:9>                 `-DefaultStmt 0x148942220 <line:44:7, col:14>                   `-NullStmt 0x148942218 <col:14> ","20806":"`-FunctionDecl 0x14f1281c8  line:1:1 invalid version_bitmap_from_version 'int (int)'   |-ParmVarDecl 0x14f1280f0 <col:29, col:37> col:37 invalid ofp_version 'int'   `-CompoundStmt 0x14f128458 <line:2:1, line:4:1>     `-ReturnStmt 0x14f128448 <line:3:5, col:64>       `-BinaryOperator 0x14f128428 <col:12, col:64> '<dependent type>' contains-errors '<<'         |-ParenExpr 0x14f1283e8 <col:12, col:59> '<dependent type>' contains-errors         | `-BinaryOperator 0x14f1283c8 <col:13, col:58> '<dependent type>' contains-errors '-'         |   |-ParenExpr 0x14f128388 <col:13, col:54> '<dependent type>' contains-errors         |   | `-ConditionalOperator 0x14f128358 <col:14, col:53> '<dependent type>' contains-errors         |   |   |-BinaryOperator 0x14f1282b8 <col:14, col:28> 'int' contains-errors '<'         |   |   | |-RecoveryExpr 0x14f128278 <col:14> '<dependent type>' contains-errors lvalue         |   |   | `-IntegerLiteral 0x14f128298 <col:28> 'int' 32         |   |   |-BinaryOperator 0x14f128318 <col:33, col:39> '<dependent type>' contains-errors '<<'         |   |   | |-IntegerLiteral 0x14f1282d8 <col:33> 'unsigned int' 1         |   |   | `-RecoveryExpr 0x14f1282f8 <col:39> '<dependent type>' contains-errors lvalue         |   |   `-IntegerLiteral 0x14f128338 <col:53> 'int' 0         |   `-IntegerLiteral 0x14f1283a8 <col:58> 'int' 1         `-IntegerLiteral 0x14f128408 <col:64> 'int' 1 ","20420":"`-FunctionDecl 0x151941b68  line:1:13 invalid trap_bcr 'int (struct kvm_vcpu *, struct sys_reg_params *, const struct sys_reg_desc *)' static   |-ParmVarDecl 0x151928668 <col:22, col:39> col:39 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x151941858 <line:2:8, col:31> col:31 used p 'struct sys_reg_params *'   |-ParmVarDecl 0x151941a28 <line:3:8, col:35> col:35 used rd 'const struct sys_reg_desc *'   `-CompoundStmt 0x1519426a8 <line:4:1, line:15:1>     |-IfStmt 0x1519422a0 <line:7:2, line:10:30> has_else     | |-RecoveryExpr 0x151941e30 <line:7:6, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151941df8 <col:6> 'struct sys_reg_params *' lvalue ParmVar 0x151941858 'p' 'struct sys_reg_params *'     | |-CallExpr 0x151942080 <line:8:3, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x151941fb0 <col:3> 'int ()' Function 0x151941ef8 'reg_to_dbg' 'int ()'     | | |-DeclRefExpr 0x151941fd0 <col:14> 'struct kvm_vcpu *' lvalue ParmVar 0x151928668 'vcpu' 'struct kvm_vcpu *'     | | |-DeclRefExpr 0x151941ff0 <col:20> 'struct sys_reg_params *' lvalue ParmVar 0x151941858 'p' 'struct sys_reg_params *'     | | `-RecoveryExpr 0x151942060 <col:23> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x151942268 <line:10:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151942198 <col:3> 'int ()' Function 0x1519420e0 'dbg_to_reg' 'int ()'     |   |-DeclRefExpr 0x1519421b8 <col:14> 'struct kvm_vcpu *' lvalue ParmVar 0x151928668 'vcpu' 'struct kvm_vcpu *'     |   |-DeclRefExpr 0x1519421d8 <col:20> 'struct sys_reg_params *' lvalue ParmVar 0x151941858 'p' 'struct sys_reg_params *'     |   `-RecoveryExpr 0x151942248 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x151942620 <line:12:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1519423b0 <col:2> 'int ()' Function 0x1519422f8 'trace_trap_reg' 'int ()'     | |-PredefinedExpr 0x151942470 <col:17> 'const char[9]' lvalue __func__     | | `-StringLiteral 0x151942450 <col:17> 'const char[9]' lvalue \"trap_bcr\"     | |-RecoveryExpr 0x1519424c0 <col:27, col:31> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151942488 <col:27> 'const struct sys_reg_desc *' lvalue ParmVar 0x151941a28 'rd' 'const struct sys_reg_desc *'     | |-RecoveryExpr 0x151942520 <col:36, col:39> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1519424e8 <col:36> 'struct sys_reg_params *' lvalue ParmVar 0x151941858 'p' 'struct sys_reg_params *'     | `-UnaryOperator 0x151942608 <col:49, col:50> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x1519425f0 <col:50> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x1519425d0 <col:50> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x151942698 <line:14:2, col:9>       `-RecoveryExpr 0x151942678 <col:9> '<dependent type>' contains-errors lvalue ","20492":"`-FunctionDecl 0x12700df18  line:1:17 invalid opj_j2k_destroy_header_memory 'int (int *, int *, int *)' static   |-ParmVarDecl 0x12700dd28 <col:47, col:59> col:59 referenced invalid p_j2k 'int *'   |-ParmVarDecl 0x12700dda8 <line:2:9, col:31> col:31 invalid p_stream 'int *'   |-ParmVarDecl 0x12700de28 <line:3:9, col:27> col:27 invalid p_manager 'int *'   `-CompoundStmt 0x127027b40 <line:5:1, line:22:1>     |-CallExpr 0x12700e1b0 <line:7:5, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12700e130 <col:5> 'int ()' Function 0x12700e078 'assert' 'int ()'     | `-BinaryOperator 0x12700e190 <col:12, col:21> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12700e150 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12700e170 <col:21> 'int' 0     |-CallExpr 0x12700e258 <line:8:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12700e1d8 <col:5> 'int ()' Function 0x12700e078 'assert' 'int ()'     | `-BinaryOperator 0x12700e238 <col:12, col:24> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12700e1f8 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12700e218 <col:24> 'int' 0     |-CallExpr 0x12700e300 <line:9:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12700e280 <col:5> 'int ()' Function 0x12700e078 'assert' 'int ()'     | `-BinaryOperator 0x12700e2e0 <col:12, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12700e2a0 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12700e2c0 <col:25> 'int' 0     |-CallExpr 0x127027450 <line:11:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127027410 <col:5> 'int ()' Function 0x12700e350 'OPJ_UNUSED' 'int ()'     | `-RecoveryExpr 0x127027430 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1270274b8 <line:12:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127027478 <col:5> 'int ()' Function 0x12700e350 'OPJ_UNUSED' 'int ()'     | `-RecoveryExpr 0x127027498 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127027978 <line:14:5, line:17:5>     | |-CXXDependentScopeMemberExpr 0x127027590 <line:14:9, col:43> '<dependent type>' contains-errors lvalue .m_header_tile_data     | | `-CXXDependentScopeMemberExpr 0x127027548 <col:9, col:33> '<dependent type>' contains-errors lvalue .m_encoder     | |   `-CXXDependentScopeMemberExpr 0x127027500 <col:9, col:16> '<dependent type>' contains-errors lvalue ->m_specific_param     | |     `-RecoveryExpr 0x1270274e0 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127027958 <col:63, line:17:5>     |   |-CallExpr 0x1270277d0 <line:15:9, col:70> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1270276b8 <col:9> 'int ()' Function 0x127027600 'opj_free' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x127027788 <col:18, col:52> '<dependent type>' contains-errors lvalue .m_header_tile_data     |   |   `-CXXDependentScopeMemberExpr 0x127027740 <col:18, col:42> '<dependent type>' contains-errors lvalue .m_encoder     |   |     `-CXXDependentScopeMemberExpr 0x1270276f8 <col:18, col:25> '<dependent type>' contains-errors lvalue ->m_specific_param     |   |       `-RecoveryExpr 0x1270276d8 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x127027938 <line:16:9, col:64> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x1270278d0 <col:9, col:43> '<dependent type>' contains-errors lvalue .m_header_tile_data     |     | `-CXXDependentScopeMemberExpr 0x127027888 <col:9, col:33> '<dependent type>' contains-errors lvalue .m_encoder     |     |   `-CXXDependentScopeMemberExpr 0x127027840 <col:9, col:16> '<dependent type>' contains-errors lvalue ->m_specific_param     |     |     `-RecoveryExpr 0x127027818 <col:9> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x1270277f8 <col:9> 'int *' lvalue ParmVar 0x12700dd28 'p_j2k' 'int *'     |     `-IntegerLiteral 0x127027918 <col:64> 'int' 0     |-BinaryOperator 0x127027ad8 <line:19:5, col:65> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127027a70 <col:5, col:39> '<dependent type>' contains-errors lvalue .m_header_tile_data_size     | | `-CXXDependentScopeMemberExpr 0x127027a28 <col:5, col:29> '<dependent type>' contains-errors lvalue .m_encoder     | |   `-CXXDependentScopeMemberExpr 0x1270279e0 <col:5, col:12> '<dependent type>' contains-errors lvalue ->m_specific_param     | |     `-RecoveryExpr 0x1270279b8 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x127027998 <col:5> 'int *' lvalue ParmVar 0x12700dd28 'p_j2k' 'int *'     | `-IntegerLiteral 0x127027ab8 <col:65> 'int' 0     `-ReturnStmt 0x127027b30 <line:21:5, col:12>       `-RecoveryExpr 0x127027b10 <col:12> '<dependent type>' contains-errors lvalue ","21246":"`-FunctionDecl 0x1491157f0  line:1:13 invalid push_output_configuration 'void (int *)' static   |-ParmVarDecl 0x149115728 <col:39, col:51> col:51 referenced invalid ac 'int *'   `-CompoundStmt 0x14912efe0 <col:55, line:6:1>     |-IfStmt 0x149115d00 <line:2:5, line:4:5>     | |-BinaryOperator 0x149115b00 <line:2:9, col:29> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x149115a98 <col:9, col:19> '<dependent type>' contains-errors lvalue .status     | | | `-ArraySubscriptExpr 0x149115a78 <col:9, col:17> '<dependent type>' contains-errors lvalue     | | |   |-ImplicitCastExpr 0x149115a60 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | |   | `-CXXDependentScopeMemberExpr 0x1491158c0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->oc     | | |   |   `-RecoveryExpr 0x1491158a0 <col:9> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x149115908 <col:16> 'int' 1     | | `-RecoveryExpr 0x149115ae0 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x149115ce8 <col:40, line:4:5>     |   `-BinaryOperator 0x149115cc8 <line:3:9, col:29> '<dependent type>' contains-errors '='     |     |-ArraySubscriptExpr 0x149115be8 <col:9, col:17> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x149115bd0 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |     | | `-CXXDependentScopeMemberExpr 0x149115b68 <col:9, col:13> '<dependent type>' contains-errors lvalue ->oc     |     | |   `-RecoveryExpr 0x149115b40 <col:9> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x149115b20 <col:9> 'int *' lvalue ParmVar 0x149115728 'ac' 'int *'     |     | `-IntegerLiteral 0x149115bb0 <col:16> 'int' 0     |     `-ArraySubscriptExpr 0x149115ca8 <col:21, col:29> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x149115c90 <col:21, col:25> '<dependent type>' contains-errors <LValueToRValue>     |       | `-CXXDependentScopeMemberExpr 0x149115c28 <col:21, col:25> '<dependent type>' contains-errors lvalue ->oc     |       |   `-RecoveryExpr 0x149115c08 <col:21> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x149115c70 <col:28> 'int' 1     `-BinaryOperator 0x14912efc0 <line:5:5, col:24> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x14912ef58 <col:5, col:15> '<dependent type>' contains-errors lvalue .status       | `-ArraySubscriptExpr 0x14912ef38 <col:5, col:13> '<dependent type>' contains-errors lvalue       |   |-ImplicitCastExpr 0x14912ef20 <col:5, col:9> '<dependent type>' contains-errors <LValueToRValue>       |   | `-CXXDependentScopeMemberExpr 0x149115d68 <col:5, col:9> '<dependent type>' contains-errors lvalue ->oc       |   |   `-RecoveryExpr 0x149115d40 <col:5> '<dependent type>' contains-errors lvalue       |   |     `-DeclRefExpr 0x149115d20 <col:5> 'int *' lvalue ParmVar 0x149115728 'ac' 'int *'       |   `-IntegerLiteral 0x149115db0 <col:12> 'int' 1       `-RecoveryExpr 0x14912efa0 <col:24> '<dependent type>' contains-errors lvalue ","21253":"`-FunctionDecl 0x12580de88  line:1:8 invalid moof_box_dump 'int (int *, int *)'   |-ParmVarDecl 0x12580dd28 <col:22, col:30> col:30 invalid a 'int *'   |-ParmVarDecl 0x12580dda8 <col:33, col:40> col:40 invalid trace 'int *'   `-CompoundStmt 0x125122e18 <line:2:1, line:12:1>     |-CallExpr 0x12580e190 <line:5:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12580e0d0 <col:2> 'int ()' Function 0x12580e018 'gf_isom_box_dump_start' 'int ()'     | |-RecoveryExpr 0x12580e0f0 <col:25> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12580e150 <col:28> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x12580e170 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x125122770 <line:6:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12580e2a8 <col:2> 'int ()' Function 0x12580e1f0 'gf_fprintf' 'int ()'     | |-RecoveryExpr 0x12580e2c8 <col:13> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12580e2e8 <col:20> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x125122748 <col:27, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125122600 <col:27> 'int ()' Function 0x12580e330 'gf_list_count' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x125122700 <col:41, col:44> '<dependent type>' contains-errors lvalue ->TrackList     |     `-RecoveryExpr 0x1251226e0 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125122b88 <line:7:2, line:8:56>     | |-BinaryOperator 0x1251228c8 <line:7:6, col:26> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x125122860 <col:6, col:9> '<dependent type>' contains-errors lvalue ->internal_flags     | | | `-RecoveryExpr 0x125122840 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1251228a8 <col:26> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x125122b50 <line:8:3, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1251228e8 <col:3> 'int ()' Function 0x12580e1f0 'gf_fprintf' 'int ()'     |   |-RecoveryExpr 0x125122908 <col:14> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x125122928 <col:21> 'char[4]' lvalue \"STR\"     |   `-BinaryOperator 0x125122b30 <col:28, col:41> '<dependent type>' contains-errors '-'     |     |-CXXDependentScopeMemberExpr 0x125122a80 <col:28, col:31> '<dependent type>' contains-errors lvalue ->size     |     | `-RecoveryExpr 0x125122a60 <col:28> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x125122ae8 <col:38, col:41> '<dependent type>' contains-errors lvalue ->compressed_diff     |       `-RecoveryExpr 0x125122ac8 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x125122c08 <line:9:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125122ba8 <col:2> 'int ()' Function 0x12580e1f0 'gf_fprintf' 'int ()'     | |-RecoveryExpr 0x125122bc8 <col:13> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x125122be8 <col:20> 'char[4]' lvalue \"STR\"     |-CallExpr 0x125122d98 <line:10:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125122d18 <col:2> 'int ()' Function 0x125122c60 'gf_isom_box_dump_done' 'int ()'     | |-StringLiteral 0x125122d38 <col:24> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x125122d58 <col:31> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x125122d78 <col:34> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x125122e08 <line:11:2, col:9>       `-RecoveryExpr 0x125122de8 <col:9> '<dependent type>' contains-errors lvalue ","20673":"`-FunctionDecl 0x13a8e6bc8  line:2:13 invalid nl80211_valid_akm_suite 'int (int)' static   |-ParmVarDecl 0x13a8e6af0 <col:37, col:41> col:41 invalid akm 'int'   `-CompoundStmt 0x13a8e6df8 <line:3:1, line:5:29>     `-ReturnStmt 0x13a8e6de8 <line:4:2, line:5:10>       `-BinaryOperator 0x13a8e6dc8 <line:4:9, line:5:10> 'int' contains-errors '||'         |-BinaryOperator 0x13a8e6d68 <line:4:9, col:16> 'int' contains-errors '=='         | |-RecoveryExpr 0x13a8e6c78 <col:9> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x13a8e6d48 <col:16> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x13a8e6da8 <line:5:3, col:10> 'int' contains-errors '=='           |-RecoveryExpr 0x13a8e6cd0 <col:3> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x13a8e6d88 <col:10> '<dependent type>' contains-errors lvalue ","20701":"`-FunctionDecl 0x156809178  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x156809278 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1568092e0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x156809348 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x156809220 <<invalid sloc>> Implicit 882 ","21157":"`-FunctionDecl 0x13680dfa8  line:1:17 invalid luaL_traceback 'int (int *, int *, const char *, int)'   |-ParmVarDecl 0x13680dd28 <col:33, col:44> col:44 invalid L 'int *'   |-ParmVarDecl 0x13680dda8 <col:47, col:58> col:58 referenced invalid L1 'int *'   |-ParmVarDecl 0x13680de28 <col:62, col:74> col:74 used msg 'const char *'   |-ParmVarDecl 0x13680dea8 <line:2:5, col:9> col:9 used level 'int'   `-CompoundStmt 0x13682b518 <line:3:1, line:46:1>     |-DeclStmt 0x13680e260 <line:4:3, col:36>     | `-VarDecl 0x13680e088 <col:3, col:35> col:7 used top 'int' cinit     |   `-CStyleCastExpr 0x13680e238 <col:13, col:35> 'int' contains-errors <Dependent>     |     `-ParenExpr 0x13680e218 <col:18, col:35> '<dependent type>' contains-errors     |       `-BinaryOperator 0x13680e1c0 <col:19, col:31> '<dependent type>' contains-errors '-'     |         |-CXXDependentScopeMemberExpr 0x13680e110 <col:19, col:22> '<dependent type>' contains-errors lvalue ->top     |         | `-RecoveryExpr 0x13680e0f0 <col:19> '<dependent type>' contains-errors lvalue     |         `-CXXDependentScopeMemberExpr 0x13680e178 <col:28, col:31> '<dependent type>' contains-errors lvalue ->base     |           `-RecoveryExpr 0x13680e158 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13680e330 <line:5:3, col:30>     | `-VarDecl 0x13680e290 <col:3, col:13> col:7 used lim 'int' cinit     |   `-RecoveryExpr 0x13680e310 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1368289d8 <line:7:3, col:41>     | |-ImplicitCastExpr 0x13680e368 <col:7> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x13680e348 <col:7> 'const char *' lvalue ParmVar 0x13680de28 'msg' 'const char *'     | `-CallExpr 0x1368289a0 <col:12, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1368288e0 <col:12> 'int ()' Function 0x136828828 'lua_pushfstring' 'int ()'     |   |-RecoveryExpr 0x136828900 <col:28> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x136828960 <col:31> 'char[4]' lvalue \"STR\"     |   `-DeclRefExpr 0x136828980 <col:38> 'const char *' lvalue ParmVar 0x13680de28 'msg' 'const char *'     |-CallExpr 0x136828b38 <line:8:3, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136828ad8 <col:3> 'int ()' Function 0x136828a20 'lua_pushliteral' 'int ()'     | |-RecoveryExpr 0x136828af8 <col:19> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x136828b18 <col:22> 'char[4]' lvalue \"STR\"     |-WhileStmt 0x13682b2c0 <line:9:3, line:44:3>     | |-CallExpr 0x136828d60 <line:9:10, col:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x136828c48 <col:10> 'int ()' Function 0x136828b90 'lua_getstack' 'int ()'     | | |-RecoveryExpr 0x136828c68 <col:23> '<dependent type>' contains-errors lvalue     | | |-UnaryOperator 0x136828ca8 <col:27, col:32> 'int' postfix '++'     | | | `-DeclRefExpr 0x136828c88 <col:27> 'int' lvalue ParmVar 0x13680dea8 'level' 'int'     | | `-UnaryOperator 0x136828d48 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x136828d28 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13682b288 <col:42, line:44:3>     |   |-IfStmt 0x1368294d8 <line:11:5, line:21:5>     |   | |-BinaryOperator 0x136828e20 <line:11:9, col:17> 'int' contains-errors '>'     |   | | |-ImplicitCastExpr 0x136828df0 <col:9> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x136828db0 <col:9> 'int' lvalue ParmVar 0x13680dea8 'level' 'int'     |   | | `-ImplicitCastExpr 0x136828e08 <col:17> 'int' contains-errors <LValueToRValue>     |   | |   `-DeclRefExpr 0x136828dd0 <col:17> 'int' contains-errors lvalue Var 0x13680e290 'lim' 'int'     |   | `-CompoundStmt 0x1368294b0 <col:22, line:21:5>     |   |   |-IfStmt 0x136829418 <line:12:7, line:18:7> has_else     |   |   | |-UnaryOperator 0x136829008 <line:12:11, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   | | `-CallExpr 0x136828fd0 <col:12, col:59> '<dependent type>' contains-errors     |   |   | |   |-DeclRefExpr 0x136828e40 <col:12> 'int ()' Function 0x136828b90 'lua_getstack' 'int ()'     |   |   | |   |-RecoveryExpr 0x136828e60 <col:25> '<dependent type>' contains-errors lvalue     |   |   | |   |-BinaryOperator 0x136828f78 <col:29, col:37> '<dependent type>' contains-errors '+'     |   |   | |   | |-DeclRefExpr 0x136828e80 <col:29> 'int' lvalue ParmVar 0x13680dea8 'level' 'int'     |   |   | |   | `-RecoveryExpr 0x136828f58 <col:37> '<dependent type>' contains-errors lvalue     |   |   | |   `-UnaryOperator 0x136828fb8 <col:56, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | |     `-RecoveryExpr 0x136828f98 <col:57> '<dependent type>' contains-errors lvalue     |   |   | |-CompoundStmt 0x136829058 <col:62, line:14:7>     |   |   | | `-UnaryOperator 0x136829040 <line:13:2, col:7> 'int' postfix '--'     |   |   | |   `-DeclRefExpr 0x136829020 <col:2> 'int' lvalue ParmVar 0x13680dea8 'level' 'int'     |   |   | `-CompoundStmt 0x1368293f0 <line:14:14, line:18:7>     |   |   |   |-CallExpr 0x1368290d0 <line:15:2, col:26> '<dependent type>' contains-errors     |   |   |   | |-DeclRefExpr 0x136829070 <col:2> 'int ()' Function 0x136828a20 'lua_pushliteral' 'int ()'     |   |   |   | |-RecoveryExpr 0x136829090 <col:18> '<dependent type>' contains-errors lvalue     |   |   |   | `-StringLiteral 0x1368290b0 <col:21> 'char[4]' lvalue \"STR\"     |   |   |   |-CallExpr 0x136829218 <line:16:2, col:27> '<dependent type>' contains-errors     |   |   |   | |-DeclRefExpr 0x136829100 <col:2> 'int ()' Function 0x136828b90 'lua_getstack' 'int ()'     |   |   |   | |-RecoveryExpr 0x136829120 <col:15> '<dependent type>' contains-errors lvalue     |   |   |   | |-UnaryOperator 0x136829160 <col:19, col:20> 'int' prefix '-'     |   |   |   | | `-IntegerLiteral 0x136829140 <col:20> 'int' 10     |   |   |   | `-UnaryOperator 0x136829200 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   |   `-RecoveryExpr 0x1368291e0 <col:25> '<dependent type>' contains-errors lvalue     |   |   |   `-BinaryOperator 0x1368293d0 <line:17:2, col:20> 'int' contains-errors '='     |   |   |     |-DeclRefExpr 0x136829250 <col:2> 'int' lvalue ParmVar 0x13680dea8 'level' 'int'     |   |   |     `-BinaryOperator 0x1368293b0 <col:10, col:20> '<dependent type>' contains-errors '-'     |   |   |       |-CXXDependentScopeMemberExpr 0x136829348 <col:10, col:13> '<dependent type>' contains-errors lvalue .i_ci     |   |   |       | `-RecoveryExpr 0x136829328 <col:10> '<dependent type>' contains-errors lvalue     |   |   |       `-RecoveryExpr 0x136829390 <col:20> '<dependent type>' contains-errors lvalue     |   |   |-BinaryOperator 0x136829488 <line:19:7, col:13> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x136829448 <col:7> 'int' contains-errors lvalue Var 0x13680e290 'lim' 'int'     |   |   | `-IntegerLiteral 0x136829468 <col:13> 'int' 2147483647     |   |   `-ContinueStmt 0x1368294a8 <line:20:7>     |   |-CallExpr 0x1368296d8 <line:22:5, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1368295d8 <col:5> 'int ()' Function 0x136829520 'lua_getinfo' 'int ()'     |   | |-RecoveryExpr 0x1368295f8 <col:17> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x136829618 <col:21> 'char[4]' lvalue \"STR\"     |   | `-UnaryOperator 0x1368296c0 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1368296a0 <col:29> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x13682a780 <line:23:28, col:35> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x13682a738 <col:28, col:32> '<dependent type>' contains-errors lvalue ->top     |   |   `-RecoveryExpr 0x13682a710 <col:28> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13682a6f0 <col:28> 'int *' lvalue ParmVar 0x13680dda8 'L1' 'int *'     |   |-IfStmt 0x13682ad18 <line:30:5, line:41:5> has_else     |   | |-RecoveryExpr 0x13682aa18 <line:30:9, col:13> '_Bool' contains-errors     |   | |-CompoundStmt 0x13682aa98 <col:23, line:32:5>     |   | `-CompoundStmt 0x13682ad00 <col:12, line:41:5>     |   |   `-IfStmt 0x13682acd0 <line:33:7, line:40:7> has_else     |   |     |-RecoveryExpr 0x13682aac0 <line:33:11, col:23> '_Bool' contains-errors     |   |     |-CompoundStmt 0x13682ab70 <col:28, line:35:7>     |   |     | `-CallExpr 0x13682ab40 <line:34:2, col:26> '<dependent type>' contains-errors     |   |     |   |-DeclRefExpr 0x13682aae0 <col:2> 'int ()' Function 0x136828a20 'lua_pushliteral' 'int ()'     |   |     |   |-RecoveryExpr 0x13682ab00 <col:18> '<dependent type>' contains-errors lvalue     |   |     |   `-StringLiteral 0x13682ab20 <col:21> 'char[4]' lvalue \"STR\"     |   |     `-IfStmt 0x13682aca0 <line:35:14, line:40:7> has_else     |   |       |-RecoveryExpr 0x13682aba0 <line:35:18, col:30> '_Bool' contains-errors     |   |       |-CompoundStmt 0x13682ac20 <col:35, line:37:7>     |   |       `-CompoundStmt 0x13682ac90 <col:14, line:40:7>     |   `-IfStmt 0x13682b268 <line:42:5, line:43:50>     |     |-BinaryOperator 0x13682af30 <line:42:9, col:42> 'int' contains-errors '>='     |     | |-BinaryOperator 0x13682aef0 <col:9, col:35> 'int' contains-errors '-'     |     | | |-CStyleCastExpr 0x13682ae90 <col:9, col:31> 'int' contains-errors <Dependent>     |     | | | `-ParenExpr 0x13682ae70 <col:14, col:31> '<dependent type>' contains-errors     |     | | |   `-BinaryOperator 0x13682ae18 <col:15, col:27> '<dependent type>' contains-errors '-'     |     | | |     |-CXXDependentScopeMemberExpr 0x13682ad68 <col:15, col:18> '<dependent type>' contains-errors lvalue ->top     |     | | |     | `-RecoveryExpr 0x13682ad48 <col:15> '<dependent type>' contains-errors lvalue     |     | | |     `-CXXDependentScopeMemberExpr 0x13682add0 <col:24, col:27> '<dependent type>' contains-errors lvalue ->base     |     | | |       `-RecoveryExpr 0x13682adb0 <col:24> '<dependent type>' contains-errors lvalue     |     | | `-ImplicitCastExpr 0x13682aed8 <col:35> 'int' contains-errors <LValueToRValue>     |     | |   `-DeclRefExpr 0x13682aeb8 <col:35> 'int' contains-errors lvalue Var 0x13680e088 'top' 'int'     |     | `-IntegerLiteral 0x13682af10 <col:42> 'int' 15     |     `-CallExpr 0x13682b238 <line:43:7, col:50> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13682b030 <col:7> 'int ()' Function 0x13682af78 'lua_concat' 'int ()'     |       |-RecoveryExpr 0x13682b050 <col:18> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x13682b218 <col:21, col:47> 'int' contains-errors '-'     |         |-CStyleCastExpr 0x13682b1b8 <col:21, col:43> 'int' contains-errors <Dependent>     |         | `-ParenExpr 0x13682b198 <col:26, col:43> '<dependent type>' contains-errors     |         |   `-BinaryOperator 0x13682b140 <col:27, col:39> '<dependent type>' contains-errors '-'     |         |     |-CXXDependentScopeMemberExpr 0x13682b090 <col:27, col:30> '<dependent type>' contains-errors lvalue ->top     |         |     | `-RecoveryExpr 0x13682b070 <col:27> '<dependent type>' contains-errors lvalue     |         |     `-CXXDependentScopeMemberExpr 0x13682b0f8 <col:36, col:39> '<dependent type>' contains-errors lvalue ->base     |         |       `-RecoveryExpr 0x13682b0d8 <col:36> '<dependent type>' contains-errors lvalue     |         `-ImplicitCastExpr 0x13682b200 <col:47> 'int' contains-errors <LValueToRValue>     |           `-DeclRefExpr 0x13682b1e0 <col:47> 'int' contains-errors lvalue Var 0x13680e088 'top' 'int'     `-CallExpr 0x13682b4e8 <line:45:3, col:46> '<dependent type>' contains-errors       |-DeclRefExpr 0x13682b2e0 <col:3> 'int ()' Function 0x13682af78 'lua_concat' 'int ()'       |-RecoveryExpr 0x13682b300 <col:14> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x13682b4c8 <col:17, col:43> 'int' contains-errors '-'         |-CStyleCastExpr 0x13682b468 <col:17, col:39> 'int' contains-errors <Dependent>         | `-ParenExpr 0x13682b448 <col:22, col:39> '<dependent type>' contains-errors         |   `-BinaryOperator 0x13682b3f0 <col:23, col:35> '<dependent type>' contains-errors '-'         |     |-CXXDependentScopeMemberExpr 0x13682b340 <col:23, col:26> '<dependent type>' contains-errors lvalue ->top         |     | `-RecoveryExpr 0x13682b320 <col:23> '<dependent type>' contains-errors lvalue         |     `-CXXDependentScopeMemberExpr 0x13682b3a8 <col:32, col:35> '<dependent type>' contains-errors lvalue ->base         |       `-RecoveryExpr 0x13682b388 <col:32> '<dependent type>' contains-errors lvalue         `-ImplicitCastExpr 0x13682b4b0 <col:43> 'int' contains-errors <LValueToRValue>           `-DeclRefExpr 0x13682b490 <col:43> 'int' contains-errors lvalue Var 0x13680e088 'top' 'int' ","21179":"`-FunctionDecl 0x13f80e038  line:1:5 invalid ASN1_item_verify 'int (const int *, int *, int *, void *, int *)'   |-ParmVarDecl 0x13f80dcf0 <col:22, col:39> col:39 invalid it 'const int *'   |-ParmVarDecl 0x13f80dda8 <col:43, col:55> col:55 invalid a 'int *'   |-ParmVarDecl 0x13f80de28 <col:58, col:75> col:75 invalid signature 'int *'   |-ParmVarDecl 0x13f80dea8 <line:2:7, col:13> col:13 used asn 'void *'   |-ParmVarDecl 0x13f80df28 <col:18, col:28> col:28 invalid pkey 'int *'   `-CompoundStmt 0x13f82a450 <line:3:2, line:57:2>     |-DeclStmt 0x13f80e188 <line:5:2, col:20>     | `-VarDecl 0x13f80e120 <col:2, col:16> col:16 referenced invalid type 'const int *'     |-DeclStmt 0x13f80e288 <line:6:2, col:28>     | `-VarDecl 0x13f80e1e8 <col:2, col:24> col:17 used buf_in 'unsigned char *' cinit     |   `-RecoveryExpr 0x13f80e268 <col:24> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13f827488 <line:7:2, col:19>     | |-VarDecl 0x13f80e2b8 <col:2, col:12> col:6 used ret 'int' cinit     | | `-UnaryOperator 0x13f80e340 <col:11, col:12> 'int' prefix '-'     | |   `-IntegerLiteral 0x13f80e320 <col:12> 'int' 1     | |-VarDecl 0x13f80e370 <col:2, col:14> col:14 used i 'int'     | `-VarDecl 0x13f827400 <col:2, col:16> col:16 used inl 'int'     |-IfStmt 0x13f8277a8 <line:9:2, line:13:3>     | |-UnaryOperator 0x13f8274d8 <line:9:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f8274c0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13f8274a0 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f827788 <line:10:3, line:13:3>     |   |-CallExpr 0x13f827710 <line:11:3, col:63> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13f827650 <col:3> 'int ()' Function 0x13f827598 'ASN1err' 'int ()'     |   | |-RecoveryExpr 0x13f8276d0 <col:11> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x13f8276f0 <col:36> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13f827778 <line:12:3, col:11>     |     `-UnaryOperator 0x13f827760 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x13f827740 <col:11> 'int' 1     |-CallExpr 0x13f827958 <line:15:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f8278a8 <col:2> 'int ()' Function 0x13f8277f0 'EVP_MD_CTX_init' 'int ()'     | `-UnaryOperator 0x13f827940 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f827920 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f827b30 <line:16:2, col:28> 'int' contains-errors '='     | |-DeclRefExpr 0x13f827980 <col:2> 'int' lvalue Var 0x13f80e370 'i' 'int'     | `-CallExpr 0x13f827b08 <col:4, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f827a80 <col:4> 'int ()' Function 0x13f8279c8 'OBJ_obj2nid' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x13f827ac0 <col:16, col:19> '<dependent type>' contains-errors lvalue ->algorithm     |     `-RecoveryExpr 0x13f827aa0 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f827e88 <line:17:2, col:41> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13f827b70 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13f827b50 <col:2> 'const int *' lvalue Var 0x13f80e120 'type' 'const int *'     | `-CallExpr 0x13f827e60 <col:7, col:41> 'int'     |   |-ImplicitCastExpr 0x13f827e48 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13f827c78 <col:7> 'int ()' Function 0x13f827bc0 'EVP_get_digestbyname' 'int ()'     |   `-CallExpr 0x13f827e08 <col:28, col:40> 'int'     |     |-ImplicitCastExpr 0x13f827df0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13f827d78 <col:28> 'int ()' Function 0x13f827cc0 'OBJ_nid2sn' 'int ()'     |     `-ImplicitCastExpr 0x13f827e30 <col:39> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x13f827d98 <col:39> 'int' lvalue Var 0x13f80e370 'i' 'int'     |-IfStmt 0x13f8280b8 <line:18:2, line:22:3>     | |-BinaryOperator 0x13f827f20 <line:18:6, col:14> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13f827ea8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13f827f00 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f828098 <line:19:3, line:22:3>     |   |-CallExpr 0x13f828000 <line:20:3, col:74> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13f827f40 <col:3> 'int ()' Function 0x13f827598 'ASN1err' 'int ()'     |   | |-RecoveryExpr 0x13f827fc0 <col:11> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x13f827fe0 <col:35> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x13f828080 <line:21:3, col:8> 'err' 0x13f828030     |-IfStmt 0x13f8282d0 <line:24:2, line:29:3>     | |-RecoveryExpr 0x13f8281f8 <line:24:6, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x13f8282b0 <line:25:3, line:29:3>     |   |-BinaryOperator 0x13f828278 <line:27:3, col:7> 'int' '='     |   | |-DeclRefExpr 0x13f828238 <col:3> 'int' lvalue Var 0x13f80e2b8 'ret' 'int'     |   | `-IntegerLiteral 0x13f828258 <col:7> 'int' 0     |   `-GotoStmt 0x13f828298 <line:28:3, col:8> 'err' 0x13f828030     |-BinaryOperator 0x13f829900 <line:31:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x13f8282f0 <col:2> 'int' lvalue Var 0x13f827400 'inl' 'int'     | `-CallExpr 0x13f8298c8 <col:8, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f829800 <col:8> 'int ()' Function 0x13f828338 'ASN1_item_i2d' 'int ()'     |   |-DeclRefExpr 0x13f829820 <col:22> 'void *' lvalue ParmVar 0x13f80dea8 'asn' 'void *'     |   |-UnaryOperator 0x13f829890 <col:27, col:28> 'unsigned char **' contains-errors prefix '&' cannot overflow     |   | `-DeclRefExpr 0x13f829840 <col:28> 'unsigned char *' contains-errors lvalue Var 0x13f80e1e8 'buf_in' 'unsigned char *'     |   `-RecoveryExpr 0x13f8298a8 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f8299b0 <line:33:2, line:37:3>     | |-RecoveryExpr 0x13f829940 <line:33:6, col:16> '_Bool' contains-errors     | `-CompoundStmt 0x13f829998 <line:34:3, line:37:3>     |   `-GotoStmt 0x13f829980 <line:36:3, col:8> 'err' 0x13f828030     |-CallExpr 0x13f829d18 <line:41:2, col:42> 'int' contains-errors     | |-ImplicitCastExpr 0x13f829d00 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13f829c48 <col:2> 'int ()' Function 0x13f829b90 'OPENSSL_cleanse' 'int ()'     | |-ImplicitCastExpr 0x13f829d48 <col:18> 'unsigned char *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x13f829c68 <col:18> 'unsigned char *' contains-errors lvalue Var 0x13f80e1e8 'buf_in' 'unsigned char *'     | `-CStyleCastExpr 0x13f829cd8 <col:25, col:39> 'unsigned int' <IntegralCast>     |   `-ImplicitCastExpr 0x13f829cc0 <col:39> 'int' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x13f829c88 <col:39> 'int' lvalue Var 0x13f827400 'inl' 'int'     |-CallExpr 0x13f829e98 <line:42:2, col:21> 'int' contains-errors     | |-ImplicitCastExpr 0x13f829e80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13f829e40 <col:2> 'int ()' Function 0x13f829d88 'OPENSSL_free' 'int ()'     | `-ImplicitCastExpr 0x13f829ec0 <col:15> 'unsigned char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13f829e60 <col:15> 'unsigned char *' contains-errors lvalue Var 0x13f80e1e8 'buf_in' 'unsigned char *'     |-IfStmt 0x13f82a240 <line:44:2, line:50:3>     | |-RecoveryExpr 0x13f82a168 <line:44:6, line:45:45> '_Bool' contains-errors     | `-CompoundStmt 0x13f82a220 <line:46:3, line:50:3>     |   |-BinaryOperator 0x13f82a1e8 <line:48:3, col:7> 'int' '='     |   | |-DeclRefExpr 0x13f82a1a8 <col:3> 'int' lvalue Var 0x13f80e2b8 'ret' 'int'     |   | `-IntegerLiteral 0x13f82a1c8 <col:7> 'int' 0     |   `-GotoStmt 0x13f82a208 <line:49:3, col:8> 'err' 0x13f828030     |-BinaryOperator 0x13f82a2a0 <line:53:2, col:6> 'int' '='     | |-DeclRefExpr 0x13f82a260 <col:2> 'int' lvalue Var 0x13f80e2b8 'ret' 'int'     | `-IntegerLiteral 0x13f82a280 <col:6> 'int' 1     |-LabelStmt 0x13f82a3c8 <line:54:1, col:4> 'err'     | `-NullStmt 0x13f82a3c0 <col:4>     `-ReturnStmt 0x13f82a440 <line:56:2, col:12>       `-ImplicitCastExpr 0x13f82a428 <col:8, col:12> 'int' <LValueToRValue>         `-ParenExpr 0x13f82a408 <col:8, col:12> 'int' lvalue           `-DeclRefExpr 0x13f82a3e8 <col:9> 'int' lvalue Var 0x13f80e2b8 'ret' 'int' ","20580":"`-FunctionDecl 0x137027ea8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x137027fa8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x137028010 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x137028078 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x137027f50 <<invalid sloc>> Implicit 882 ","21257":"`-FunctionDecl 0x14580df18  line:1:12 invalid jpc_ppm_getparms 'int (int *, int *, int *)' static   |-ParmVarDecl 0x14580dd28 <col:29, col:39> col:39 invalid ms 'int *'   |-ParmVarDecl 0x14580dda8 <col:43, col:57> col:57 referenced invalid cstate 'int *'   |-ParmVarDecl 0x14580de28 <col:65, col:79> col:79 invalid in 'int *'   `-CompoundStmt 0x1458282f8 <line:2:1, line:33:1>     |-BinaryOperator 0x14580e120 <line:6:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14580e0d8 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14580e0b8 <col:2> 'int *' lvalue ParmVar 0x14580dda8 'cstate' 'int *'     | `-IntegerLiteral 0x14580e100 <col:11> 'int' 0     |-IfStmt 0x14580e288 <line:10:2, line:12:2>     | |-BinaryOperator 0x14580e1e8 <line:10:6, col:16> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x14580e180 <col:6, col:10> '<dependent type>' contains-errors lvalue ->len     | | | `-RecoveryExpr 0x14580e160 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14580e1c8 <col:16> 'int' 1     | `-CompoundStmt 0x14580e270 <col:19, line:12:2>     |   `-GotoStmt 0x14580e258 <line:11:3, col:8> 'error' 0x14580e208     |-IfStmt 0x1458275c8 <line:13:2, line:15:2>     | |-CallExpr 0x145827568 <line:13:6, col:32> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145827400 <col:6> 'int ()' Function 0x14580e348 'jpc_getuint8' 'int ()'     | | |-RecoveryExpr 0x145827420 <col:19> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x145827550 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x145827508 <col:24, col:29> '<dependent type>' contains-errors lvalue ->ind     | |     `-RecoveryExpr 0x1458274e8 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1458275b0 <col:35, line:15:2>     |   `-GotoStmt 0x145827598 <line:14:3, col:8> 'error' 0x14580e208     |-IfStmt 0x1458280e8 <line:18:2, line:27:2> has_else     | |-BinaryOperator 0x145827798 <line:18:6, col:17> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x145827750 <col:6, col:11> '<dependent type>' contains-errors lvalue ->len     | | | `-RecoveryExpr 0x145827730 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1458276f0 <col:17> 'int' 0     | |-CompoundStmt 0x145828098 <col:20, line:25:2>     | | |-IfStmt 0x145827a68 <line:19:3, line:21:3>     | | | |-RecoveryExpr 0x145827a18 <line:19:7, col:65> '_Bool' contains-errors     | | | `-CompoundStmt 0x145827a50 <col:68, line:21:3>     | | |   `-GotoStmt 0x145827a38 <line:20:4, col:9> 'error' 0x14580e208     | | `-IfStmt 0x145828078 <line:22:3, line:24:3>     | |   |-BinaryOperator 0x145828028 <line:22:7, col:72> 'int' contains-errors '!='     | |   | |-CallExpr 0x145827f90 <col:7, col:62> '<dependent type>' contains-errors     | |   | | |-DeclRefExpr 0x145827b68 <col:7> 'int ()' Function 0x145827ab0 'JAS_CAST' 'int ()'     | |   | | |-RecoveryExpr 0x145827e68 <col:16> '<dependent type>' contains-errors lvalue     | |   | | `-CallExpr 0x145827f58 <col:22, col:61> '<dependent type>' contains-errors     | |   | |   |-DeclRefExpr 0x145827c80 <col:22> 'int ()' Function 0x145827bc8 'jas_stream_read' 'int ()'     | |   | |   |-RecoveryExpr 0x145827ca0 <col:38> '<dependent type>' contains-errors lvalue     | |   | |   |-CXXDependentScopeMemberExpr 0x145827ea8 <col:42, col:47> '<dependent type>' contains-errors lvalue ->data     | |   | |   | `-RecoveryExpr 0x145827e88 <col:42> '<dependent type>' contains-errors lvalue     | |   | |   `-CXXDependentScopeMemberExpr 0x145827f10 <col:53, col:58> '<dependent type>' contains-errors lvalue ->len     | |   | |     `-RecoveryExpr 0x145827ef0 <col:53> '<dependent type>' contains-errors lvalue     | |   | `-CXXDependentScopeMemberExpr 0x145827fe0 <col:67, col:72> '<dependent type>' contains-errors lvalue ->len     | |   |   `-RecoveryExpr 0x145827fc0 <col:67> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x145828060 <col:77, line:24:3>     | |     `-GotoStmt 0x145828048 <line:23:4, col:9> 'error' 0x14580e208     | `-CompoundStmt 0x1458280d8 <line:25:9, line:27:2>     |-ReturnStmt 0x145828138 <line:28:2, col:9>     | `-IntegerLiteral 0x145828118 <col:9> 'int' 0     |-LabelStmt 0x145828290 <line:30:1, line:31:25> 'error'     | `-CallExpr 0x145828268 <col:2, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x145828228 <col:2> 'int ()' Function 0x145828170 'jpc_ppm_destroyparms' 'int ()'     |   `-RecoveryExpr 0x145828248 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1458282e8 <line:32:2, col:10>       `-UnaryOperator 0x1458282d0 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x1458282b0 <col:10> 'int' 1 ","20755":"`-FunctionDecl 0x13282a788  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13282a888 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13282a830 <<invalid sloc>> Implicit 873 ","20222":"`-FunctionDecl 0x12b1392d8  line:1:10 invalid dhcp_get_option 'int *(struct dhcp_packet *, int, int)'   |-ParmVarDecl 0x12b120068 <col:26, col:46> col:46 used packet 'struct dhcp_packet *'   |-ParmVarDecl 0x12b1200e8 <col:54, col:63> col:63 invalid packet_len 'int'   |-ParmVarDecl 0x12b120168 <col:75, col:79> col:79 used code 'int'   `-CompoundStmt 0x12b13ac20 <line:2:1, line:73:1>     |-DeclStmt 0x12b1394b0 <line:3:2, col:14>     | |-VarDecl 0x12b1393b0 <col:2, col:6> col:6 used len 'int'     | `-VarDecl 0x12b139430 <col:2, col:11> col:11 used rem 'int'     |-UnaryExprOrTypeTraitExpr 0x12b139580 <line:5:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x12b139560 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b1396d8 <line:10:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x12b139600 <col:2> 'int' lvalue Var 0x12b139430 'rem' 'int'     | `-ImplicitCastExpr 0x12b1396c0 <col:8, col:30> 'int' contains-errors <IntegralCast>     |   `-UnaryExprOrTypeTraitExpr 0x12b1396a0 <col:8, col:30> 'unsigned long' contains-errors sizeof     |     `-ParenExpr 0x12b139680 <col:14, col:30> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x12b139658 <col:15, col:23> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12b139620 <col:15> 'struct dhcp_packet *' lvalue ParmVar 0x12b120068 'packet' 'struct dhcp_packet *' non_odr_use_unevaluated     `-WhileStmt 0x12b13ac00 <line:14:2, line:70:2>       |-IntegerLiteral 0x12b1398b8 <line:14:9> 'int' 1       `-CompoundStmt 0x12b13a1b0 <col:12, line:70:2>         |-IfStmt 0x12b139a98 <line:19:3, line:24:3>         | |-RecoveryExpr 0x12b139a18 <line:19:7, col:30> '_Bool' contains-errors         | `-CompoundStmt 0x12b139a78 <col:44, line:24:3>         |   |-UnaryOperator 0x12b139a58 <line:20:4, col:7> 'int' postfix '--'         |   | `-DeclRefExpr 0x12b139a38 <col:4> 'int' lvalue Var 0x12b139430 'rem' 'int'         |   `-ContinueStmt 0x12b139a70 <line:23:4>         |-IfStmt 0x12b139e90 <line:26:3, line:44:3>         | |-RecoveryExpr 0x12b139ab8 <line:26:7, col:30> '_Bool' contains-errors         | `-CompoundStmt 0x12b139e70 <col:40, line:44:3>         |   |-IfStmt 0x12b139e38 <line:27:4, line:41:4> has_else         |   | |-RecoveryExpr 0x12b139ad8 <line:27:8, col:19> '_Bool' contains-errors         |   | |-CompoundStmt 0x12b139c58 <col:31, line:34:4>         |   | | |-BinaryOperator 0x12b139c30 <line:31:5, col:30> 'int' contains-errors '='         |   | | | |-DeclRefExpr 0x12b139b58 <col:5> 'int' lvalue Var 0x12b139430 'rem' 'int'         |   | | | `-ImplicitCastExpr 0x12b139c18 <col:11, col:30> 'int' contains-errors <IntegralCast>         |   | | |   `-UnaryExprOrTypeTraitExpr 0x12b139bf8 <col:11, col:30> 'unsigned long' contains-errors sizeof         |   | | |     `-ParenExpr 0x12b139bd8 <col:17, col:30> '<dependent type>' contains-errors lvalue         |   | | |       `-RecoveryExpr 0x12b139bb0 <col:18, col:26> '<dependent type>' contains-errors lvalue         |   | | |         `-DeclRefExpr 0x12b139b78 <col:18> 'struct dhcp_packet *' lvalue ParmVar 0x12b120068 'packet' 'struct dhcp_packet *' non_odr_use_unevaluated         |   | | `-ContinueStmt 0x12b139c50 <line:33:5>         |   | `-IfStmt 0x12b139e18 <line:34:11, line:41:4>         |   |   |-RecoveryExpr 0x12b139c78 <line:34:15, col:26> '_Bool' contains-errors         |   |   `-CompoundStmt 0x12b139df8 <col:39, line:41:4>         |   |     |-BinaryOperator 0x12b139dd0 <line:38:5, col:31> 'int' contains-errors '='         |   |     | |-DeclRefExpr 0x12b139cf8 <col:5> 'int' lvalue Var 0x12b139430 'rem' 'int'         |   |     | `-ImplicitCastExpr 0x12b139db8 <col:11, col:31> 'int' contains-errors <IntegralCast>         |   |     |   `-UnaryExprOrTypeTraitExpr 0x12b139d98 <col:11, col:31> 'unsigned long' contains-errors sizeof         |   |     |     `-ParenExpr 0x12b139d78 <col:17, col:31> '<dependent type>' contains-errors lvalue         |   |     |       `-RecoveryExpr 0x12b139d50 <col:18, col:26> '<dependent type>' contains-errors lvalue         |   |     |         `-DeclRefExpr 0x12b139d18 <col:18> 'struct dhcp_packet *' lvalue ParmVar 0x12b120068 'packet' 'struct dhcp_packet *' non_odr_use_unevaluated         |   |     `-ContinueStmt 0x12b139df0 <line:40:5>         |   `-BreakStmt 0x12b139e68 <line:43:4>         |-IfStmt 0x12b139ee0 <line:46:3, line:49:3>         | |-RecoveryExpr 0x12b139eb0 <line:46:7, col:29> '_Bool' contains-errors         | `-CompoundStmt 0x12b139ed0 <col:42, line:49:3>         |-CompoundAssignOperator 0x12b139f98 <line:53:3, col:10> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'         | |-DeclRefExpr 0x12b139f40 <col:3> 'int' lvalue Var 0x12b139430 'rem' 'int'         | `-ImplicitCastExpr 0x12b139f80 <col:10> 'int' <LValueToRValue>         |   `-DeclRefExpr 0x12b139f60 <col:10> 'int' lvalue Var 0x12b1393b0 'len' 'int'         |-IfStmt 0x12b13a048 <line:54:3, line:55:4>         | |-BinaryOperator 0x12b13a020 <line:54:7, col:13> 'int' '<'         | | |-ImplicitCastExpr 0x12b13a008 <col:7> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x12b139fc8 <col:7> 'int' lvalue Var 0x12b139430 'rem' 'int'         | | `-IntegerLiteral 0x12b139fe8 <col:13> 'int' 0         | `-ContinueStmt 0x12b13a040 <line:55:4>         `-IfStmt 0x12b13a150 <line:57:3, line:64:3>           |-RecoveryExpr 0x12b13a088 <line:57:7, col:30> '_Bool' contains-errors           `-CompoundStmt 0x12b13a138 <col:36, line:64:3>             `-IfStmt 0x12b13a108 <line:58:4, line:63:4> has_else               |-RecoveryExpr 0x12b13a0c8 <line:58:8, col:26> '_Bool' contains-errors               |-CompoundStmt 0x12b13a0e8 <col:39, line:61:4>               `-CompoundStmt 0x12b13a0f8 <col:11, line:63:4> ","21233":"`-FunctionDecl 0x153928318  line:1:12 invalid oplea 'int (int *, int *, const int *)' static   |-ParmVarDecl 0x153928128 <col:18, col:24> col:24 invalid a 'int *'   |-ParmVarDecl 0x1539281a8 <col:27, col:32> col:32 referenced invalid data 'int *'   |-ParmVarDecl 0x153928228 <col:38, col:52> col:52 invalid op 'const int *'   `-CompoundStmt 0x15400a590 <col:55, line:51:1>     |-DeclStmt 0x153928478 <line:2:2, col:11>     | `-VarDecl 0x1539283f0 <col:2, col:10> col:6 used l 'int' cinit     |   `-IntegerLiteral 0x153928458 <col:10> 'int' 0     |-DeclStmt 0x153928530 <line:3:2, col:13>     | `-VarDecl 0x1539284a8 <col:2, col:12> col:6 used mod 'int' cinit     |   `-IntegerLiteral 0x153928510 <col:12> 'int' 0     |-DeclStmt 0x1539285e8 <line:5:2, col:13>     | `-VarDecl 0x153928560 <col:2, col:12> col:6 used reg 'int' cinit     |   `-IntegerLiteral 0x1539285c8 <col:12> 'int' 0     |-DeclStmt 0x1539286a0 <line:6:2, col:12>     | `-VarDecl 0x153928618 <col:2, col:11> col:6 used rm 'int' cinit     |   `-IntegerLiteral 0x153928680 <col:11> 'int' 0     |-IfStmt 0x15400a528 <line:7:2, line:49:2>     | |-RecoveryExpr 0x153941a58 <line:7:6, line:8:53> '_Bool' contains-errors     | `-CompoundStmt 0x15400a500 <col:56, line:49:2>     |   |-IfStmt 0x153941c30 <line:9:3, line:11:3>     |   | |-BinaryOperator 0x153941b00 <line:9:7, col:18> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x153941a98 <col:7, col:10> '<dependent type>' contains-errors lvalue ->bits     |   | | | `-RecoveryExpr 0x153941a78 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x153941ae0 <col:18> 'int' 64     |   | `-CompoundStmt 0x153941c18 <col:22, line:11:3>     |   |   `-BinaryOperator 0x153941bf8 <line:10:4, col:16> '<dependent type>' contains-errors '='     |   |     |-ArraySubscriptExpr 0x153941bb8 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |     | |-ImplicitCastExpr 0x153941ba0 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   |     | | `-RecoveryExpr 0x153941b40 <col:4> '<dependent type>' contains-errors lvalue     |   |     | |   `-DeclRefExpr 0x153941b20 <col:4> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |   |     | `-UnaryOperator 0x153941b88 <col:9, col:10> 'int' postfix '++'     |   |     |   `-DeclRefExpr 0x153941b68 <col:9> 'int' lvalue Var 0x1539283f0 'l' 'int'     |   |     `-IntegerLiteral 0x153941bd8 <col:16> 'int' 72     |   |-BinaryOperator 0x153941d28 <line:12:3, col:15> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x153941ce8 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x153941cd0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x153941c70 <col:3> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x153941c50 <col:3> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |   | | `-UnaryOperator 0x153941cb8 <col:8, col:9> 'int' postfix '++'     |   | |   `-DeclRefExpr 0x153941c98 <col:8> 'int' lvalue Var 0x1539283f0 'l' 'int'     |   | `-IntegerLiteral 0x153941d08 <col:15> 'int' 141     |   `-IfStmt 0x15400a4d0 <line:13:3, line:48:3> has_else     |     |-BinaryOperator 0x153942070 <line:13:7, col:34> 'int' contains-errors '=='     |     | |-ArraySubscriptExpr 0x153942030 <col:7, col:29> '<dependent type>' contains-errors lvalue     |     | | |-ImplicitCastExpr 0x153942018 <col:7, col:23> '<dependent type>' contains-errors <LValueToRValue>     |     | | | `-CXXDependentScopeMemberExpr 0x153941fd0 <col:7, col:23> '<dependent type>' contains-errors lvalue .regs     |     | | |   `-ArraySubscriptExpr 0x153941fb0 <col:7, col:21> '<dependent type>' contains-errors lvalue     |     | | |     |-ImplicitCastExpr 0x153941f98 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     |     | | |     | `-CXXDependentScopeMemberExpr 0x153941d68 <col:7, col:11> '<dependent type>' contains-errors lvalue ->operands     |     | | |     |   `-RecoveryExpr 0x153941d48 <col:7> '<dependent type>' contains-errors lvalue     |     | | |     `-IntegerLiteral 0x153941db0 <col:20> 'int' 1     |     | | `-IntegerLiteral 0x153941e50 <col:28> 'int' 0     |     | `-RecoveryExpr 0x153942050 <col:34> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x153943888 <col:50, line:21:3>     |     | |-DeclStmt 0x153942258 <line:14:4, col:46>     |     | | `-VarDecl 0x1539420a8 <col:4, col:40> col:8 used high 'int' cinit     |     | |   `-BinaryOperator 0x153942238 <col:15, col:40> '<dependent type>' contains-errors '&'     |     | |     |-IntegerLiteral 0x153942110 <col:15> 'int' 65280     |     | |     `-CXXDependentScopeMemberExpr 0x1539421f0 <col:24, col:40> '<dependent type>' contains-errors lvalue .offset     |     | |       `-ArraySubscriptExpr 0x1539421d0 <col:24, col:38> '<dependent type>' contains-errors lvalue     |     | |         |-ImplicitCastExpr 0x1539421b8 <col:24, col:28> '<dependent type>' contains-errors <LValueToRValue>     |     | |         | `-CXXDependentScopeMemberExpr 0x153942150 <col:24, col:28> '<dependent type>' contains-errors lvalue ->operands     |     | |         |   `-RecoveryExpr 0x153942130 <col:24> '<dependent type>' contains-errors lvalue     |     | |         `-IntegerLiteral 0x153942198 <col:37> 'int' 1     |     | |-BinaryOperator 0x1539424b0 <line:15:4, col:43> '<dependent type>' contains-errors '='     |     | | |-ArraySubscriptExpr 0x153942308 <col:4, col:12> '<dependent type>' contains-errors lvalue     |     | | | |-ImplicitCastExpr 0x1539422f0 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | | `-RecoveryExpr 0x153942290 <col:4> '<dependent type>' contains-errors lvalue     |     | | | |   `-DeclRefExpr 0x153942270 <col:4> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |     | | | `-UnaryOperator 0x1539422d8 <col:9, col:10> 'int' postfix '++'     |     | | |   `-DeclRefExpr 0x1539422b8 <col:9> 'int' lvalue Var 0x1539283f0 'l' 'int'     |     | | `-BinaryOperator 0x153942490 <col:16, col:43> '<dependent type>' contains-errors '|'     |     | |   |-BinaryOperator 0x153942450 <col:16, col:39> '<dependent type>' contains-errors '<<'     |     | |   | |-CXXDependentScopeMemberExpr 0x1539423e8 <col:16, col:32> '<dependent type>' contains-errors lvalue .reg     |     | |   | | `-ArraySubscriptExpr 0x1539423c8 <col:16, col:30> '<dependent type>' contains-errors lvalue     |     | |   | |   |-ImplicitCastExpr 0x1539423b0 <col:16, col:20> '<dependent type>' contains-errors <LValueToRValue>     |     | |   | |   | `-CXXDependentScopeMemberExpr 0x153942348 <col:16, col:20> '<dependent type>' contains-errors lvalue ->operands     |     | |   | |   |   `-RecoveryExpr 0x153942328 <col:16> '<dependent type>' contains-errors lvalue     |     | |   | |   `-IntegerLiteral 0x153942390 <col:29> 'int' 0     |     | |   | `-IntegerLiteral 0x153942430 <col:39> 'int' 3     |     | |   `-IntegerLiteral 0x153942470 <col:43> 'int' 5     |     | |-BinaryOperator 0x153942690 <line:16:4, col:32> '<dependent type>' contains-errors '='     |     | | |-ArraySubscriptExpr 0x153942568 <col:4, col:12> '<dependent type>' contains-errors lvalue     |     | | | |-ImplicitCastExpr 0x153942550 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | | `-RecoveryExpr 0x1539424f0 <col:4> '<dependent type>' contains-errors lvalue     |     | | | |   `-DeclRefExpr 0x1539424d0 <col:4> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |     | | | `-UnaryOperator 0x153942538 <col:9, col:10> 'int' postfix '++'     |     | | |   `-DeclRefExpr 0x153942518 <col:9> 'int' lvalue Var 0x1539283f0 'l' 'int'     |     | | `-CXXDependentScopeMemberExpr 0x153942648 <col:16, col:32> '<dependent type>' contains-errors lvalue .offset     |     | |   `-ArraySubscriptExpr 0x153942628 <col:16, col:30> '<dependent type>' contains-errors lvalue     |     | |     |-ImplicitCastExpr 0x153942610 <col:16, col:20> '<dependent type>' contains-errors <LValueToRValue>     |     | |     | `-CXXDependentScopeMemberExpr 0x1539425a8 <col:16, col:20> '<dependent type>' contains-errors lvalue ->operands     |     | |     |   `-RecoveryExpr 0x153942588 <col:16> '<dependent type>' contains-errors lvalue     |     | |     `-IntegerLiteral 0x1539425f0 <col:29> 'int' 1     |     | |-BinaryOperator 0x1539427e0 <line:17:4, col:24> '<dependent type>' contains-errors '='     |     | | |-ArraySubscriptExpr 0x153942748 <col:4, col:12> '<dependent type>' contains-errors lvalue     |     | | | |-ImplicitCastExpr 0x153942730 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | | `-RecoveryExpr 0x1539426d0 <col:4> '<dependent type>' contains-errors lvalue     |     | | | |   `-DeclRefExpr 0x1539426b0 <col:4> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |     | | | `-UnaryOperator 0x153942718 <col:9, col:10> 'int' postfix '++'     |     | | |   `-DeclRefExpr 0x1539426f8 <col:9> 'int' lvalue Var 0x1539283f0 'l' 'int'     |     | | `-BinaryOperator 0x1539427c0 <col:16, col:24> 'int' contains-errors '>>'     |     | |   |-ImplicitCastExpr 0x1539427a8 <col:16> 'int' contains-errors <LValueToRValue>     |     | |   | `-DeclRefExpr 0x153942768 <col:16> 'int' contains-errors lvalue Var 0x1539420a8 'high' 'int'     |     | |   `-IntegerLiteral 0x153942788 <col:24> 'int' 8     |     | |-BinaryOperator 0x153943600 <line:18:4, col:42> '<dependent type>' contains-errors '='     |     | | |-ArraySubscriptExpr 0x153943498 <col:4, col:12> '<dependent type>' contains-errors lvalue     |     | | | |-ImplicitCastExpr 0x153943480 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | | `-RecoveryExpr 0x153943420 <col:4> '<dependent type>' contains-errors lvalue     |     | | | |   `-DeclRefExpr 0x153943400 <col:4> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |     | | | `-UnaryOperator 0x153943468 <col:9, col:10> 'int' postfix '++'     |     | | |   `-DeclRefExpr 0x153943448 <col:9> 'int' lvalue Var 0x1539283f0 'l' 'int'     |     | | `-BinaryOperator 0x1539435e0 <col:16, col:42> '<dependent type>' contains-errors '>>'     |     | |   |-CXXDependentScopeMemberExpr 0x153943578 <col:16, col:32> '<dependent type>' contains-errors lvalue .offset     |     | |   | `-ArraySubscriptExpr 0x153943558 <col:16, col:30> '<dependent type>' contains-errors lvalue     |     | |   |   |-ImplicitCastExpr 0x153943540 <col:16, col:20> '<dependent type>' contains-errors <LValueToRValue>     |     | |   |   | `-CXXDependentScopeMemberExpr 0x1539434d8 <col:16, col:20> '<dependent type>' contains-errors lvalue ->operands     |     | |   |   |   `-RecoveryExpr 0x1539434b8 <col:16> '<dependent type>' contains-errors lvalue     |     | |   |   `-IntegerLiteral 0x153943520 <col:29> 'int' 1     |     | |   `-IntegerLiteral 0x1539435c0 <col:42> 'int' 16     |     | |-BinaryOperator 0x153943820 <line:19:4, col:42> '<dependent type>' contains-errors '='     |     | | |-ArraySubscriptExpr 0x1539436b8 <col:4, col:12> '<dependent type>' contains-errors lvalue     |     | | | |-ImplicitCastExpr 0x1539436a0 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     | | | | `-RecoveryExpr 0x153943640 <col:4> '<dependent type>' contains-errors lvalue     |     | | | |   `-DeclRefExpr 0x153943620 <col:4> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |     | | | `-UnaryOperator 0x153943688 <col:9, col:10> 'int' postfix '++'     |     | | |   `-DeclRefExpr 0x153943668 <col:9> 'int' lvalue Var 0x1539283f0 'l' 'int'     |     | | `-BinaryOperator 0x153943800 <col:16, col:42> '<dependent type>' contains-errors '>>'     |     | |   |-CXXDependentScopeMemberExpr 0x153943798 <col:16, col:32> '<dependent type>' contains-errors lvalue .offset     |     | |   | `-ArraySubscriptExpr 0x153943778 <col:16, col:30> '<dependent type>' contains-errors lvalue     |     | |   |   |-ImplicitCastExpr 0x153943760 <col:16, col:20> '<dependent type>' contains-errors <LValueToRValue>     |     | |   |   | `-CXXDependentScopeMemberExpr 0x1539436f8 <col:16, col:20> '<dependent type>' contains-errors lvalue ->operands     |     | |   |   |   `-RecoveryExpr 0x1539436d8 <col:16> '<dependent type>' contains-errors lvalue     |     | |   |   `-IntegerLiteral 0x153943740 <col:29> 'int' 1     |     | |   `-IntegerLiteral 0x1539437e0 <col:42> 'int' 24     |     | `-ReturnStmt 0x153943878 <line:20:4, col:11>     |     |   `-ImplicitCastExpr 0x153943860 <col:11> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x153943840 <col:11> 'int' lvalue Var 0x1539283f0 'l' 'int'     |     `-CompoundStmt 0x15400a4a8 <line:21:10, line:48:3>     |       |-BinaryOperator 0x1539439f8 <line:22:4, col:26> 'int' contains-errors '='     |       | |-DeclRefExpr 0x1539438d0 <col:4> 'int' lvalue Var 0x153928560 'reg' 'int'     |       | `-CXXDependentScopeMemberExpr 0x1539439b0 <col:10, col:26> '<dependent type>' contains-errors lvalue .reg     |       |   `-ArraySubscriptExpr 0x153943990 <col:10, col:24> '<dependent type>' contains-errors lvalue     |       |     |-ImplicitCastExpr 0x153943978 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>     |       |     | `-CXXDependentScopeMemberExpr 0x153943910 <col:10, col:14> '<dependent type>' contains-errors lvalue ->operands     |       |     |   `-RecoveryExpr 0x1539438f0 <col:10> '<dependent type>' contains-errors lvalue     |       |     `-IntegerLiteral 0x153943958 <col:23> 'int' 0     |       |-BinaryOperator 0x153943b98 <line:23:4, col:31> 'int' contains-errors '='     |       | |-DeclRefExpr 0x153943a18 <col:4> 'int' lvalue Var 0x153928618 'rm' 'int'     |       | `-ArraySubscriptExpr 0x153943b78 <col:9, col:31> '<dependent type>' contains-errors lvalue     |       |   |-ImplicitCastExpr 0x153943b60 <col:9, col:25> '<dependent type>' contains-errors <LValueToRValue>     |       |   | `-CXXDependentScopeMemberExpr 0x153943af8 <col:9, col:25> '<dependent type>' contains-errors lvalue .regs     |       |   |   `-ArraySubscriptExpr 0x153943ad8 <col:9, col:23> '<dependent type>' contains-errors lvalue     |       |   |     |-ImplicitCastExpr 0x153943ac0 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |       |   |     | `-CXXDependentScopeMemberExpr 0x153943a58 <col:9, col:13> '<dependent type>' contains-errors lvalue ->operands     |       |   |     |   `-RecoveryExpr 0x153943a38 <col:9> '<dependent type>' contains-errors lvalue     |       |   |     `-IntegerLiteral 0x153943aa0 <col:22> 'int' 1     |       |   `-IntegerLiteral 0x153943b40 <col:30> 'int' 0     |       `-IfStmt 0x15400a478 <line:26:4, line:46:4> has_else     |         |-BinaryOperator 0x153944230 <line:26:8, col:50> 'int' contains-errors '||'     |         | |-BinaryOperator 0x153944118 <col:8, col:18> 'int' contains-errors '!='     |         | | |-RecoveryExpr 0x1539440f8 <col:8> '<dependent type>' contains-errors lvalue     |         | | `-IntegerLiteral 0x153943e00 <col:18> 'int' 0     |         | `-BinaryOperator 0x153944210 <col:23, col:50> 'int' contains-errors '=='     |         |   |-ArraySubscriptExpr 0x1539441d0 <col:23, col:45> '<dependent type>' contains-errors lvalue     |         |   | |-ImplicitCastExpr 0x1539441b8 <col:23, col:39> '<dependent type>' contains-errors <LValueToRValue>     |         |   | | `-CXXDependentScopeMemberExpr 0x153944170 <col:23, col:39> '<dependent type>' contains-errors lvalue .regs     |         |   | |   `-ArraySubscriptExpr 0x153944150 <col:23, col:37> '<dependent type>' contains-errors lvalue     |         |   | |     |-ImplicitCastExpr 0x153944138 <col:23, col:27> '<dependent type>' contains-errors <LValueToRValue>     |         |   | |     | `-CXXDependentScopeMemberExpr 0x153943e60 <col:23, col:27> '<dependent type>' contains-errors lvalue ->operands     |         |   | |     |   `-RecoveryExpr 0x153943e40 <col:23> '<dependent type>' contains-errors lvalue     |         |   | |     `-IntegerLiteral 0x153943ea8 <col:36> 'int' 1     |         |   | `-IntegerLiteral 0x153943f48 <col:44> 'int' 0     |         |   `-RecoveryExpr 0x1539441f0 <col:50> '<dependent type>' contains-errors lvalue     |         |-CompoundStmt 0x154009c00 <col:60, line:41:4>     |         | |-BinaryOperator 0x153944290 <line:27:5, col:11> 'int' '='     |         | | |-DeclRefExpr 0x153944250 <col:5> 'int' lvalue Var 0x1539284a8 'mod' 'int'     |         | | `-IntegerLiteral 0x153944270 <col:11> 'int' 1     |         | |-IfStmt 0x1540086b8 <line:28:5, line:30:5>     |         | | |-BinaryOperator 0x154008620 <line:28:9, col:36> 'int' contains-errors '||'     |         | | | |-BinaryOperator 0x1539443b8 <col:9, col:19> 'int' contains-errors '>='     |         | | | | |-RecoveryExpr 0x153944398 <col:9> '<dependent type>' contains-errors lvalue     |         | | | | `-IntegerLiteral 0x1539442c8 <col:19> 'int' 128     |         | | | `-BinaryOperator 0x154008600 <col:26, col:36> 'int' contains-errors '<'     |         | | |   |-RecoveryExpr 0x1539443d8 <col:26> '<dependent type>' contains-errors lvalue     |         | | |   `-UnaryOperator 0x153944340 <col:35, col:36> 'int' prefix '-'     |         | | |     `-IntegerLiteral 0x153944320 <col:36> 'int' 128     |         | | `-CompoundStmt 0x1540086a0 <col:41, line:30:5>     |         | |   `-BinaryOperator 0x154008680 <line:29:6, col:12> 'int' '='     |         | |     |-DeclRefExpr 0x154008640 <col:6> 'int' lvalue Var 0x1539284a8 'mod' 'int'     |         | |     `-IntegerLiteral 0x154008660 <col:12> 'int' 2     |         | |-BinaryOperator 0x1540088f8 <line:31:5, col:39> '<dependent type>' contains-errors '='     |         | | |-ArraySubscriptExpr 0x154008770 <col:5, col:13> '<dependent type>' contains-errors lvalue     |         | | | |-ImplicitCastExpr 0x154008758 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |         | | | | `-RecoveryExpr 0x1540086f8 <col:5> '<dependent type>' contains-errors lvalue     |         | | | |   `-DeclRefExpr 0x1540086d8 <col:5> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |         | | | `-UnaryOperator 0x154008740 <col:10, col:11> 'int' postfix '++'     |         | | |   `-DeclRefExpr 0x154008720 <col:10> 'int' lvalue Var 0x1539283f0 'l' 'int'     |         | | `-BinaryOperator 0x1540088d8 <col:17, col:39> 'int' '|'     |         | |   |-BinaryOperator 0x154008880 <col:17, col:35> 'int' '|'     |         | |   | |-BinaryOperator 0x1540087e8 <col:17, col:24> 'int' '<<'     |         | |   | | |-ImplicitCastExpr 0x1540087d0 <col:17> 'int' <LValueToRValue>     |         | |   | | | `-DeclRefExpr 0x154008790 <col:17> 'int' lvalue Var 0x1539284a8 'mod' 'int'     |         | |   | | `-IntegerLiteral 0x1540087b0 <col:24> 'int' 6     |         | |   | `-BinaryOperator 0x154008860 <col:28, col:35> 'int' '<<'     |         | |   |   |-ImplicitCastExpr 0x154008848 <col:28> 'int' <LValueToRValue>     |         | |   |   | `-DeclRefExpr 0x154008808 <col:28> 'int' lvalue Var 0x153928560 'reg' 'int'     |         | |   |   `-IntegerLiteral 0x154008828 <col:35> 'int' 3     |         | |   `-ImplicitCastExpr 0x1540088c0 <col:39> 'int' <LValueToRValue>     |         | |     `-DeclRefExpr 0x1540088a0 <col:39> 'int' lvalue Var 0x153928618 'rm' 'int'     |         | |-IfStmt 0x154008d70 <line:32:5, line:34:5>     |         | | |-BinaryOperator 0x154008c40 <line:32:9, col:36> 'int' contains-errors '=='     |         | | | |-ArraySubscriptExpr 0x154008c00 <col:9, col:31> '<dependent type>' contains-errors lvalue     |         | | | | |-ImplicitCastExpr 0x154008be8 <col:9, col:25> '<dependent type>' contains-errors <LValueToRValue>     |         | | | | | `-CXXDependentScopeMemberExpr 0x154008ba0 <col:9, col:25> '<dependent type>' contains-errors lvalue .regs     |         | | | | |   `-ArraySubscriptExpr 0x154008b80 <col:9, col:23> '<dependent type>' contains-errors lvalue     |         | | | | |     |-ImplicitCastExpr 0x154008b68 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |         | | | | |     | `-CXXDependentScopeMemberExpr 0x154008938 <col:9, col:13> '<dependent type>' contains-errors lvalue ->operands     |         | | | | |     |   `-RecoveryExpr 0x154008918 <col:9> '<dependent type>' contains-errors lvalue     |         | | | | |     `-IntegerLiteral 0x154008980 <col:22> 'int' 1     |         | | | | `-IntegerLiteral 0x154008a20 <col:30> 'int' 0     |         | | | `-RecoveryExpr 0x154008c20 <col:36> '<dependent type>' contains-errors lvalue     |         | | `-CompoundStmt 0x154008d58 <col:46, line:34:5>     |         | |   `-BinaryOperator 0x154008d38 <line:33:6, col:18> '<dependent type>' contains-errors '='     |         | |     |-ArraySubscriptExpr 0x154008cf8 <col:6, col:14> '<dependent type>' contains-errors lvalue     |         | |     | |-ImplicitCastExpr 0x154008ce0 <col:6> '<dependent type>' contains-errors <LValueToRValue>     |         | |     | | `-RecoveryExpr 0x154008c80 <col:6> '<dependent type>' contains-errors lvalue     |         | |     | |   `-DeclRefExpr 0x154008c60 <col:6> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |         | |     | `-UnaryOperator 0x154008cc8 <col:11, col:12> 'int' postfix '++'     |         | |     |   `-DeclRefExpr 0x154008ca8 <col:11> 'int' lvalue Var 0x1539283f0 'l' 'int'     |         | |     `-IntegerLiteral 0x154008d18 <col:18> 'int' 36     |         | |-BinaryOperator 0x154008f10 <line:35:5, col:17> '<dependent type>' contains-errors '='     |         | | |-ArraySubscriptExpr 0x154008ed0 <col:5, col:13> '<dependent type>' contains-errors lvalue     |         | | | |-ImplicitCastExpr 0x154008eb8 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |         | | | | `-RecoveryExpr 0x154008db0 <col:5> '<dependent type>' contains-errors lvalue     |         | | | |   `-DeclRefExpr 0x154008d90 <col:5> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |         | | | `-UnaryOperator 0x154008df8 <col:10, col:11> 'int' postfix '++'     |         | | |   `-DeclRefExpr 0x154008dd8 <col:10> 'int' lvalue Var 0x1539283f0 'l' 'int'     |         | | `-RecoveryExpr 0x154008ef0 <col:17> '<dependent type>' contains-errors lvalue     |         | `-IfStmt 0x1540095d0 <line:36:5, line:40:5>     |         |   |-BinaryOperator 0x154008f88 <line:36:9, col:16> 'int' '=='     |         |   | |-ImplicitCastExpr 0x154008f70 <col:9> 'int' <LValueToRValue>     |         |   | | `-DeclRefExpr 0x154008f30 <col:9> 'int' lvalue Var 0x1539284a8 'mod' 'int'     |         |   | `-IntegerLiteral 0x154008f50 <col:16> 'int' 2     |         |   `-CompoundStmt 0x1540095a8 <col:19, line:40:5>     |         |     |-BinaryOperator 0x154009188 <line:37:6, col:28> '<dependent type>' contains-errors '='     |         |     | |-ArraySubscriptExpr 0x154009128 <col:6, col:14> '<dependent type>' contains-errors lvalue     |         |     | | |-ImplicitCastExpr 0x154009110 <col:6> '<dependent type>' contains-errors <LValueToRValue>     |         |     | | | `-RecoveryExpr 0x154008fc8 <col:6> '<dependent type>' contains-errors lvalue     |         |     | | |   `-DeclRefExpr 0x154008fa8 <col:6> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |         |     | | `-UnaryOperator 0x154009010 <col:11, col:12> 'int' postfix '++'     |         |     | |   `-DeclRefExpr 0x154008ff0 <col:11> 'int' lvalue Var 0x1539283f0 'l' 'int'     |         |     | `-BinaryOperator 0x154009168 <col:18, col:28> '<dependent type>' contains-errors '>>'     |         |     |   |-RecoveryExpr 0x154009148 <col:18> '<dependent type>' contains-errors lvalue     |         |     |   `-IntegerLiteral 0x154009078 <col:28> 'int' 8     |         |     |-BinaryOperator 0x154009388 <line:38:6, col:28> '<dependent type>' contains-errors '='     |         |     | |-ArraySubscriptExpr 0x154009328 <col:6, col:14> '<dependent type>' contains-errors lvalue     |         |     | | |-ImplicitCastExpr 0x154009310 <col:6> '<dependent type>' contains-errors <LValueToRValue>     |         |     | | | `-RecoveryExpr 0x1540091c8 <col:6> '<dependent type>' contains-errors lvalue     |         |     | | |   `-DeclRefExpr 0x1540091a8 <col:6> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |         |     | | `-UnaryOperator 0x154009210 <col:11, col:12> 'int' postfix '++'     |         |     | |   `-DeclRefExpr 0x1540091f0 <col:11> 'int' lvalue Var 0x1539283f0 'l' 'int'     |         |     | `-BinaryOperator 0x154009368 <col:18, col:28> '<dependent type>' contains-errors '>>'     |         |     |   |-RecoveryExpr 0x154009348 <col:18> '<dependent type>' contains-errors lvalue     |         |     |   `-IntegerLiteral 0x154009278 <col:28> 'int' 16     |         |     `-BinaryOperator 0x154009588 <line:39:6, col:28> '<dependent type>' contains-errors '='     |         |       |-ArraySubscriptExpr 0x154009528 <col:6, col:14> '<dependent type>' contains-errors lvalue     |         |       | |-ImplicitCastExpr 0x154009510 <col:6> '<dependent type>' contains-errors <LValueToRValue>     |         |       | | `-RecoveryExpr 0x1540093c8 <col:6> '<dependent type>' contains-errors lvalue     |         |       | |   `-DeclRefExpr 0x1540093a8 <col:6> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |         |       | `-UnaryOperator 0x154009410 <col:11, col:12> 'int' postfix '++'     |         |       |   `-DeclRefExpr 0x1540093f0 <col:11> 'int' lvalue Var 0x1539283f0 'l' 'int'     |         |       `-BinaryOperator 0x154009568 <col:18, col:28> '<dependent type>' contains-errors '>>'     |         |         |-RecoveryExpr 0x154009548 <col:18> '<dependent type>' contains-errors lvalue     |         |         `-IntegerLiteral 0x154009478 <col:28> 'int' 24     |         `-CompoundStmt 0x15400a458 <line:41:11, line:46:4>     |           |-BinaryOperator 0x154009fc0 <line:42:5, col:66> '<dependent type>' contains-errors '='     |           | |-ArraySubscriptExpr 0x154009cd8 <col:5, col:13> '<dependent type>' contains-errors lvalue     |           | | |-ImplicitCastExpr 0x154009cc0 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |           | | | `-RecoveryExpr 0x154009c60 <col:5> '<dependent type>' contains-errors lvalue     |           | | |   `-DeclRefExpr 0x154009c40 <col:5> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |           | | `-UnaryOperator 0x154009ca8 <col:10, col:11> 'int' postfix '++'     |           | |   `-DeclRefExpr 0x154009c88 <col:10> 'int' lvalue Var 0x1539283f0 'l' 'int'     |           | `-BinaryOperator 0x154009fa0 <col:17, col:66> '<dependent type>' contains-errors '|'     |           |   |-BinaryOperator 0x154009e20 <col:17, col:40> '<dependent type>' contains-errors '<<'     |           |   | |-CXXDependentScopeMemberExpr 0x154009db8 <col:17, col:33> '<dependent type>' contains-errors lvalue .reg     |           |   | | `-ArraySubscriptExpr 0x154009d98 <col:17, col:31> '<dependent type>' contains-errors lvalue     |           |   | |   |-ImplicitCastExpr 0x154009d80 <col:17, col:21> '<dependent type>' contains-errors <LValueToRValue>     |           |   | |   | `-CXXDependentScopeMemberExpr 0x154009d18 <col:17, col:21> '<dependent type>' contains-errors lvalue ->operands     |           |   | |   |   `-RecoveryExpr 0x154009cf8 <col:17> '<dependent type>' contains-errors lvalue     |           |   | |   `-IntegerLiteral 0x154009d60 <col:30> 'int' 0     |           |   | `-IntegerLiteral 0x154009e00 <col:40> 'int' 3     |           |   `-ArraySubscriptExpr 0x154009f80 <col:44, col:66> '<dependent type>' contains-errors lvalue     |           |     |-ImplicitCastExpr 0x154009f68 <col:44, col:60> '<dependent type>' contains-errors <LValueToRValue>     |           |     | `-CXXDependentScopeMemberExpr 0x154009f00 <col:44, col:60> '<dependent type>' contains-errors lvalue .regs     |           |     |   `-ArraySubscriptExpr 0x154009ee0 <col:44, col:58> '<dependent type>' contains-errors lvalue     |           |     |     |-ImplicitCastExpr 0x154009ec8 <col:44, col:48> '<dependent type>' contains-errors <LValueToRValue>     |           |     |     | `-CXXDependentScopeMemberExpr 0x154009e60 <col:44, col:48> '<dependent type>' contains-errors lvalue ->operands     |           |     |     |   `-RecoveryExpr 0x154009e40 <col:44> '<dependent type>' contains-errors lvalue     |           |     |     `-IntegerLiteral 0x154009ea8 <col:57> 'int' 1     |           |     `-IntegerLiteral 0x154009f48 <col:65> 'int' 0     |           `-IfStmt 0x15400a438 <line:43:5, line:45:5>     |             |-BinaryOperator 0x15400a308 <line:43:9, col:36> 'int' contains-errors '=='     |             | |-ArraySubscriptExpr 0x15400a2c8 <col:9, col:31> '<dependent type>' contains-errors lvalue     |             | | |-ImplicitCastExpr 0x15400a2b0 <col:9, col:25> '<dependent type>' contains-errors <LValueToRValue>     |             | | | `-CXXDependentScopeMemberExpr 0x15400a268 <col:9, col:25> '<dependent type>' contains-errors lvalue .regs     |             | | |   `-ArraySubscriptExpr 0x15400a248 <col:9, col:23> '<dependent type>' contains-errors lvalue     |             | | |     |-ImplicitCastExpr 0x15400a230 <col:9, col:13> '<dependent type>' contains-errors <LValueToRValue>     |             | | |     | `-CXXDependentScopeMemberExpr 0x15400a000 <col:9, col:13> '<dependent type>' contains-errors lvalue ->operands     |             | | |     |   `-RecoveryExpr 0x154009fe0 <col:9> '<dependent type>' contains-errors lvalue     |             | | |     `-IntegerLiteral 0x15400a048 <col:22> 'int' 1     |             | | `-IntegerLiteral 0x15400a0e8 <col:30> 'int' 0     |             | `-RecoveryExpr 0x15400a2e8 <col:36> '<dependent type>' contains-errors lvalue     |             `-CompoundStmt 0x15400a420 <col:46, line:45:5>     |               `-BinaryOperator 0x15400a400 <line:44:6, col:18> '<dependent type>' contains-errors '='     |                 |-ArraySubscriptExpr 0x15400a3c0 <col:6, col:14> '<dependent type>' contains-errors lvalue     |                 | |-ImplicitCastExpr 0x15400a3a8 <col:6> '<dependent type>' contains-errors <LValueToRValue>     |                 | | `-RecoveryExpr 0x15400a348 <col:6> '<dependent type>' contains-errors lvalue     |                 | |   `-DeclRefExpr 0x15400a328 <col:6> 'int *' lvalue ParmVar 0x1539281a8 'data' 'int *'     |                 | `-UnaryOperator 0x15400a390 <col:11, col:12> 'int' postfix '++'     |                 |   `-DeclRefExpr 0x15400a370 <col:11> 'int' lvalue Var 0x1539283f0 'l' 'int'     |                 `-IntegerLiteral 0x15400a3e0 <col:18> 'int' 36     `-ReturnStmt 0x15400a580 <line:50:2, col:9>       `-ImplicitCastExpr 0x15400a568 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15400a548 <col:9> 'int' lvalue Var 0x1539283f0 'l' 'int' ","20961":"`-FunctionDecl 0x1410429f8  line:1:21 invalid new_slab 'struct page *(struct kmem_cache *, int, int)' static   |-ParmVarDecl 0x1418aeee8 <col:30, col:49> col:49 used s 'struct kmem_cache *'   |-ParmVarDecl 0x1418aef80 <col:52, col:58> col:58 referenced invalid flags 'int'   |-ParmVarDecl 0x141042800 <col:65, col:69> col:69 used node 'int'   `-CompoundStmt 0x1410434b0 <line:2:1, line:13:1>     `-IfStmt 0x1410432e0 <line:3:2, line:9:2>       |-CallExpr 0x141042cf0 <line:3:6, col:40> '<dependent type>' contains-errors       | |-DeclRefExpr 0x141042c10 <col:6> 'int ()' Function 0x141042b58 'unlikely' 'int ()'       | `-BinaryOperator 0x141042cd0 <col:15, col:23> '<dependent type>' contains-errors '&'       |   |-RecoveryExpr 0x141042c30 <col:15> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x141042cb0 <col:23> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1410432b8 <col:43, line:9:2>         |-CompoundAssignOperator 0x141042e28 <line:5:3, col:13> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | |-RecoveryExpr 0x141042d38 <col:3> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x141042d18 <col:3> 'int' lvalue ParmVar 0x1418aef80 'flags' 'int'         | `-UnaryOperator 0x141042e10 <col:12, col:13> '<dependent type>' contains-errors prefix '~' cannot overflow         |   `-ImplicitCastExpr 0x141042df8 <col:13> '<dependent type>' contains-errors <LValueToRValue>         |     `-RecoveryExpr 0x141042dd8 <col:13> '<dependent type>' contains-errors lvalue         |-CallExpr 0x141043100 <line:6:3, line:7:47> '<dependent type>' contains-errors         | |-DeclRefExpr 0x141042f38 <line:6:3> 'int ()' Function 0x141042e80 'pr_warn' 'int ()'         | |-StringLiteral 0x141042fa0 <col:11> 'char[4]' lvalue \"STR\"         | |-RecoveryExpr 0x1410430a8 <line:7:5> '<dependent type>' contains-errors lvalue         | |-UnaryOperator 0x1410430e8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x1410430c8 <col:20> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x141043008 <col:34> '<dependent type>' contains-errors lvalue         | `-UnaryOperator 0x141043048 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x141043028 <col:42> '<dependent type>' contains-errors lvalue         `-CallExpr 0x141043298 <line:8:3, col:14> 'int'           `-ImplicitCastExpr 0x141043280 <col:3> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x141043228 <col:3> 'int ()' Function 0x141043170 'dump_stack' 'int ()' ","20922":"`-FunctionDecl 0x12d00dda8  line:1:1 php_apache_sapi_read_cookies 'int (int)'   |-ParmVarDecl 0x12d00dcd8 <col:30> col:30 TSRMLS_D 'int'   `-CompoundStmt 0x12d028910 <line:2:1, line:10:1>     |-DeclStmt 0x12d00e0c0 <line:4:2, col:25>     | `-VarDecl 0x12d00e058 <col:2, col:14> col:14 used http_cookie 'const char *'     |-BinaryOperator 0x12d028430 <line:6:2, col:55> 'const char *' contains-errors '='     | |-DeclRefExpr 0x12d00e0d8 <col:2> 'const char *' lvalue Var 0x12d00e058 'http_cookie' 'const char *'     | `-CallExpr 0x12d028400 <col:16, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d00e1d8 <col:16> 'int ()' Function 0x12d00e120 'apr_table_get' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12d00e3b8 <col:30, col:38> '<dependent type>' contains-errors lvalue ->headers_in     |   | `-CXXDependentScopeMemberExpr 0x12d00e370 <col:30, col:35> '<dependent type>' contains-errors lvalue ->r     |   |   `-RecoveryExpr 0x12d00e350 <col:30> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x12d00e2e0 <col:50> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x12d028900 <line:9:2, col:18>       `-ImplicitCastExpr 0x12d0284c8 <col:9, col:18> 'int' <PointerToIntegral>         `-CStyleCastExpr 0x12d0284a0 <col:9, col:18> 'char *' <NoOp>           `-ImplicitCastExpr 0x12d028488 <col:18> 'const char *' <LValueToRValue> part_of_explicit_cast             `-DeclRefExpr 0x12d028450 <col:18> 'const char *' lvalue Var 0x12d00e058 'http_cookie' 'const char *' ","21043":"`-FunctionDecl 0x11c928f58  line:1:1 xfs_da3_join 'int (struct xfs_da_state *)'   |-ParmVarDecl 0x11c928e48 <line:2:2, col:23> col:23 used state 'struct xfs_da_state *'   `-CompoundStmt 0x11c9469e8 <line:3:1, line:66:1>     |-DeclStmt 0x11c941438 <line:4:2, col:35>     | |-RecordDecl 0x11c941250 <col:2, col:9> col:9 struct xfs_da_state_blk     | `-VarDecl 0x11c9413b8 <col:2, col:27> col:27 used drop_blk 'struct xfs_da_state_blk *'     |-DeclStmt 0x11c941540 <line:5:2, col:35>     | `-VarDecl 0x11c9414d8 <col:2, col:27> col:27 used save_blk 'struct xfs_da_state_blk *'     |-DeclStmt 0x11c9415f8 <line:6:2, col:18>     | `-VarDecl 0x11c941570 <col:2, col:17> col:8 used action 'int' cinit     |   `-IntegerLiteral 0x11c9415d8 <col:17> 'int' 0     |-DeclStmt 0x11c941690 <line:7:2, col:13>     | `-VarDecl 0x11c941628 <col:2, col:8> col:8 used error 'int'     |-CallExpr 0x11c941850 <line:9:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11c9417d0 <col:2> 'int ()' Function 0x11c941718 'trace_xfs_da_join' 'int ()'     | `-RecoveryExpr 0x11c941828 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11c9417f0 <col:20> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |-BinaryOperator 0x11c941a78 <line:11:2, col:52> 'struct xfs_da_state_blk *' contains-errors '='     | |-DeclRefExpr 0x11c941878 <col:2> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     | `-UnaryOperator 0x11c941a60 <col:13, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x11c941a40 <col:14, col:52> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x11c941a28 <col:14, col:26> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x11c9418f8 <col:14, col:26> '<dependent type>' contains-errors lvalue .blk     |     |   `-RecoveryExpr 0x11c9418d0 <col:14, col:21> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x11c941898 <col:14> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |     `-BinaryOperator 0x11c941a08 <col:31, col:50> '<dependent type>' contains-errors '-'     |       |-CXXDependentScopeMemberExpr 0x11c9419a0 <col:31, col:43> '<dependent type>' contains-errors lvalue .active     |       | `-RecoveryExpr 0x11c941978 <col:31, col:38> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x11c941940 <col:31> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |       `-IntegerLiteral 0x11c9419e8 <col:50> 'int' 1     |-BinaryOperator 0x11c941c98 <line:12:2, col:55> 'struct xfs_da_state_blk *' contains-errors '='     | |-DeclRefExpr 0x11c941a98 <col:2> 'struct xfs_da_state_blk *' lvalue Var 0x11c9414d8 'save_blk' 'struct xfs_da_state_blk *'     | `-UnaryOperator 0x11c941c80 <col:13, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x11c941c60 <col:14, col:55> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x11c941c48 <col:14, col:29> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x11c941b18 <col:14, col:29> '<dependent type>' contains-errors lvalue .blk     |     |   `-RecoveryExpr 0x11c941af0 <col:14, col:21> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x11c941ab8 <col:14> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |     `-BinaryOperator 0x11c941c28 <col:34, col:53> '<dependent type>' contains-errors '-'     |       |-CXXDependentScopeMemberExpr 0x11c941bc0 <col:34, col:46> '<dependent type>' contains-errors lvalue .active     |       | `-RecoveryExpr 0x11c941b98 <col:34, col:41> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x11c941b60 <col:34> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |       `-IntegerLiteral 0x11c941c08 <col:53> 'int' 1     |-CallExpr 0x11c9420a0 <line:13:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11c941d98 <col:2> 'int ()' Function 0x11c941ce0 'ASSERT' 'int ()'     | `-BinaryOperator 0x11c942080 <col:9, col:37> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x11c942018 <col:9, col:28> '<dependent type>' contains-errors lvalue .magic     |   | `-ArraySubscriptExpr 0x11c941ff8 <col:9, col:26> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x11c941fe0 <col:9, col:21> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x11c941e18 <col:9, col:21> '<dependent type>' contains-errors lvalue .blk     |   |   |   `-RecoveryExpr 0x11c941df0 <col:9, col:16> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x11c941db8 <col:9> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   `-IntegerLiteral 0x11c941e60 <col:25> 'int' 0     |   `-RecoveryExpr 0x11c942060 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11c943708 <line:14:2, line:15:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11c9420c8 <line:14:2> 'int ()' Function 0x11c941ce0 'ASSERT' 'int ()'     | `-BinaryOperator 0x11c9436e8 <col:9, line:15:28> 'int' contains-errors '||'     |   |-BinaryOperator 0x11c943688 <line:14:9, col:28> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x11c942120 <col:9, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x11c9420e8 <col:9> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   | `-RecoveryExpr 0x11c943668 <col:28> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x11c9436c8 <line:15:9, col:28> 'int' contains-errors '=='     |     |-RecoveryExpr 0x11c9421b8 <col:9, col:19> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x11c942180 <col:9> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |     `-RecoveryExpr 0x11c9436a8 <col:28> '<dependent type>' contains-errors lvalue     |-ForStmt 0x11c9464e0 <line:18:2, line:60:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x11c9437f8 <line:18:11, col:33> 'int' contains-errors '>='     | | |-CXXDependentScopeMemberExpr 0x11c943790 <col:11, col:23> '<dependent type>' contains-errors lvalue .active     | | | `-RecoveryExpr 0x11c943768 <col:11, col:18> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x11c943730 <col:11> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     | | `-IntegerLiteral 0x11c9437d8 <col:33> 'int' 2     | |-BinaryOperator 0x11c943988 <col:36, line:19:22> '<dependent type>' contains-errors ','     | | |-BinaryOperator 0x11c9438a8 <line:18:36, col:56> '<dependent type>' contains-errors ','     | | | |-RecoveryExpr 0x11c943838 <col:36, col:44> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x11c943818 <col:36> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     | | | `-RecoveryExpr 0x11c943880 <col:48, col:56> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x11c943860 <col:48> 'struct xfs_da_state_blk *' lvalue Var 0x11c9414d8 'save_blk' 'struct xfs_da_state_blk *'     | | `-UnaryOperator 0x11c943970 <line:19:4, col:22> '<dependent type>' contains-errors postfix '--' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x11c943928 <col:4, col:16> '<dependent type>' contains-errors lvalue .active     | |     `-RecoveryExpr 0x11c943900 <col:4, col:11> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11c9438c8 <col:4> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     | `-CompoundStmt 0x11c946498 <col:26, line:60:2>     |   |-SwitchStmt 0x11c943a20 <line:21:3, line:49:3>     |   | |-ImplicitCastExpr 0x11c943a08 <line:21:11, col:21> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x11c9439e0 <col:11, col:21> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x11c9439a8 <col:11> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   | `-CompoundStmt 0x11c945ad8 <col:28, line:49:3>     |   |   |-BinaryOperator 0x11c943ca0 <line:23:4, col:50> 'int' '='     |   |   | |-DeclRefExpr 0x11c943a60 <col:4> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   | `-CallExpr 0x11c943c58 <col:12, col:50> 'int'     |   |   |   |-ImplicitCastExpr 0x11c943c40 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x11c943b60 <col:12> 'int ()' Function 0x11c943aa8 'xfs_attr3_leaf_toosmall' 'int ()'     |   |   |   |-ImplicitCastExpr 0x11c943c88 <col:36> 'struct xfs_da_state *' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x11c943b80 <col:36> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   |   `-UnaryOperator 0x11c943bf0 <col:43, col:44> 'int *' prefix '&' cannot overflow     |   |   |     `-DeclRefExpr 0x11c943ba0 <col:44> 'int' lvalue Var 0x11c941570 'action' 'int'     |   |   |-IfStmt 0x11c943d60 <line:24:4, line:25:17>     |   |   | |-ImplicitCastExpr 0x11c943ce0 <line:24:8> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c943cc0 <col:8> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   | `-ReturnStmt 0x11c943d50 <line:25:5, col:17>     |   |   |   `-ImplicitCastExpr 0x11c943d38 <col:11, col:17> 'int' <LValueToRValue>     |   |   |     `-ParenExpr 0x11c943d18 <col:11, col:17> 'int' lvalue     |   |   |       `-DeclRefExpr 0x11c943cf8 <col:12> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   |-IfStmt 0x11c943e48 <line:26:4, line:27:13>     |   |   | |-BinaryOperator 0x11c943dd8 <line:26:8, col:18> 'int' '=='     |   |   | | |-ImplicitCastExpr 0x11c943dc0 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x11c943d80 <col:8> 'int' lvalue Var 0x11c941570 'action' 'int'     |   |   | | `-IntegerLiteral 0x11c943da0 <col:18> 'int' 0     |   |   | `-ReturnStmt 0x11c943e38 <line:27:5, col:13>     |   |   |   `-ParenExpr 0x11c943e18 <col:11, col:13> 'int'     |   |   |     `-IntegerLiteral 0x11c943df8 <col:12> 'int' 0     |   |   |-CallExpr 0x11c943fe0 <line:28:4, col:54> 'int'     |   |   | |-ImplicitCastExpr 0x11c943fc8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x11c943f48 <col:4> 'int ()' Function 0x11c943e90 'xfs_attr3_leaf_unbalance' 'int ()'     |   |   | |-ImplicitCastExpr 0x11c944018 <col:29> 'struct xfs_da_state *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c943f68 <col:29> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   | |-ImplicitCastExpr 0x11c944030 <col:36> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c943f88 <col:36> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   |   | `-ImplicitCastExpr 0x11c944048 <col:46> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x11c943fa8 <col:46> 'struct xfs_da_state_blk *' lvalue Var 0x11c9414d8 'save_blk' 'struct xfs_da_state_blk *'     |   |   |-BreakStmt 0x11c944060 <line:29:4>     |   |   |-BinaryOperator 0x11c944240 <line:31:4, col:50> 'int' '='     |   |   | |-DeclRefExpr 0x11c944068 <col:4> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   | `-CallExpr 0x11c9441f8 <col:12, col:50> 'int'     |   |   |   |-ImplicitCastExpr 0x11c9441e0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x11c944168 <col:12> 'int ()' Function 0x11c9440b0 'xfs_dir2_leafn_toosmall' 'int ()'     |   |   |   |-ImplicitCastExpr 0x11c944228 <col:36> 'struct xfs_da_state *' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x11c944188 <col:36> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   |   `-UnaryOperator 0x11c9441c8 <col:43, col:44> 'int *' prefix '&' cannot overflow     |   |   |     `-DeclRefExpr 0x11c9441a8 <col:44> 'int' lvalue Var 0x11c941570 'action' 'int'     |   |   |-IfStmt 0x11c9442e0 <line:32:4, line:33:12>     |   |   | |-ImplicitCastExpr 0x11c944280 <line:32:8> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c944260 <col:8> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   | `-ReturnStmt 0x11c9442d0 <line:33:5, col:12>     |   |   |   `-ImplicitCastExpr 0x11c9442b8 <col:12> 'int' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x11c944298 <col:12> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   |-IfStmt 0x11c9443a8 <line:34:4, line:35:12>     |   |   | |-BinaryOperator 0x11c944358 <line:34:8, col:18> 'int' '=='     |   |   | | |-ImplicitCastExpr 0x11c944340 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x11c944300 <col:8> 'int' lvalue Var 0x11c941570 'action' 'int'     |   |   | | `-IntegerLiteral 0x11c944320 <col:18> 'int' 0     |   |   | `-ReturnStmt 0x11c944398 <line:35:5, col:12>     |   |   |   `-IntegerLiteral 0x11c944378 <col:12> 'int' 0     |   |   |-CallExpr 0x11c944540 <line:36:4, col:54> 'int'     |   |   | |-ImplicitCastExpr 0x11c944528 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x11c9444a8 <col:4> 'int ()' Function 0x11c9443f0 'xfs_dir2_leafn_unbalance' 'int ()'     |   |   | |-ImplicitCastExpr 0x11c944578 <col:29> 'struct xfs_da_state *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c9444c8 <col:29> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   | |-ImplicitCastExpr 0x11c944590 <col:36> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c9444e8 <col:36> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   |   | `-ImplicitCastExpr 0x11c9445a8 <col:46> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x11c944508 <col:46> 'struct xfs_da_state_blk *' lvalue Var 0x11c9414d8 'save_blk' 'struct xfs_da_state_blk *'     |   |   |-BreakStmt 0x11c9445c0 <line:37:4>     |   |   |-CallExpr 0x11c945330 <line:40:4, col:39> 'int'     |   |   | |-ImplicitCastExpr 0x11c945318 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x11c9452b8 <col:4> 'int ()' Function 0x11c945200 'xfs_da3_node_remove' 'int ()'     |   |   | |-ImplicitCastExpr 0x11c945360 <col:24> 'struct xfs_da_state *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c9452d8 <col:24> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   | `-ImplicitCastExpr 0x11c945378 <col:31> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x11c9452f8 <col:31> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   |   |-CallExpr 0x11c945528 <line:41:4, col:43> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x11c945470 <col:4> 'int ()' Function 0x11c9453b8 'xfs_da3_fixhashpath' 'int ()'     |   |   | |-DeclRefExpr 0x11c945490 <col:24> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   | `-UnaryOperator 0x11c945510 <col:31, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x11c9454e8 <col:32, col:39> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x11c9454b0 <col:32> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   |-BinaryOperator 0x11c945730 <line:42:4, col:48> 'int' '='     |   |   | |-DeclRefExpr 0x11c945558 <col:4> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   | `-CallExpr 0x11c9456e8 <col:12, col:48> 'int'     |   |   |   |-ImplicitCastExpr 0x11c9456d0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x11c945658 <col:12> 'int ()' Function 0x11c9455a0 'xfs_da3_node_toosmall' 'int ()'     |   |   |   |-ImplicitCastExpr 0x11c945718 <col:34> 'struct xfs_da_state *' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x11c945678 <col:34> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   |   `-UnaryOperator 0x11c9456b8 <col:41, col:42> 'int *' prefix '&' cannot overflow     |   |   |     `-DeclRefExpr 0x11c945698 <col:42> 'int' lvalue Var 0x11c941570 'action' 'int'     |   |   |-IfStmt 0x11c9457f0 <line:43:4, line:44:17>     |   |   | |-ImplicitCastExpr 0x11c945770 <line:43:8> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c945750 <col:8> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   | `-ReturnStmt 0x11c9457e0 <line:44:5, col:17>     |   |   |   `-ImplicitCastExpr 0x11c9457c8 <col:11, col:17> 'int' <LValueToRValue>     |   |   |     `-ParenExpr 0x11c9457a8 <col:11, col:17> 'int' lvalue     |   |   |       `-DeclRefExpr 0x11c945788 <col:12> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |   |-IfStmt 0x11c9458b8 <line:45:4, line:46:12>     |   |   | |-BinaryOperator 0x11c945868 <line:45:8, col:18> 'int' '=='     |   |   | | |-ImplicitCastExpr 0x11c945850 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x11c945810 <col:8> 'int' lvalue Var 0x11c941570 'action' 'int'     |   |   | | `-IntegerLiteral 0x11c945830 <col:18> 'int' 0     |   |   | `-ReturnStmt 0x11c9458a8 <line:46:5, col:12>     |   |   |   `-IntegerLiteral 0x11c945888 <col:12> 'int' 0     |   |   |-CallExpr 0x11c945a50 <line:47:4, col:52> 'int'     |   |   | |-ImplicitCastExpr 0x11c945a38 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x11c9459b8 <col:4> 'int ()' Function 0x11c945900 'xfs_da3_node_unbalance' 'int ()'     |   |   | |-ImplicitCastExpr 0x11c945a88 <col:27> 'struct xfs_da_state *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c9459d8 <col:27> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   | |-ImplicitCastExpr 0x11c945aa0 <col:34> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x11c9459f8 <col:34> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   |   | `-ImplicitCastExpr 0x11c945ab8 <col:44> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x11c945a18 <col:44> 'struct xfs_da_state_blk *' lvalue Var 0x11c9414d8 'save_blk' 'struct xfs_da_state_blk *'     |   |   `-BreakStmt 0x11c945ad0 <line:48:4>     |   |-CallExpr 0x11c945c28 <line:50:3, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11c945b70 <col:3> 'int ()' Function 0x11c9453b8 'xfs_da3_fixhashpath' 'int ()'     |   | |-DeclRefExpr 0x11c945b90 <col:23> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   | `-UnaryOperator 0x11c945c10 <col:30, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x11c945be8 <col:31, col:38> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x11c945bb0 <col:31> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |-BinaryOperator 0x11c945e70 <line:51:3, col:55> 'int' '='     |   | |-DeclRefExpr 0x11c945c58 <col:3> 'int' lvalue Var 0x11c941628 'error' 'int'     |   | `-CallExpr 0x11c945df0 <col:11, col:55> 'int'     |   |   |-ImplicitCastExpr 0x11c945dd8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x11c945d58 <col:11> 'int ()' Function 0x11c945ca0 'xfs_da3_blk_unlink' 'int ()'     |   |   |-ImplicitCastExpr 0x11c945e28 <col:30> 'struct xfs_da_state *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x11c945d78 <col:30> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   |-ImplicitCastExpr 0x11c945e40 <col:37> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x11c945d98 <col:37> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   |   `-ImplicitCastExpr 0x11c945e58 <col:47> 'struct xfs_da_state_blk *' <LValueToRValue>     |   |     `-DeclRefExpr 0x11c945db8 <col:47> 'struct xfs_da_state_blk *' lvalue Var 0x11c9414d8 'save_blk' 'struct xfs_da_state_blk *'     |   |-CallExpr 0x11c945fc8 <line:52:3, col:34> 'int'     |   | |-ImplicitCastExpr 0x11c945fb0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x11c945f70 <col:3> 'int ()' Function 0x11c945eb8 'xfs_da_state_kill_altpath' 'int ()'     |   | `-ImplicitCastExpr 0x11c945ff0 <col:29> 'struct xfs_da_state *' <LValueToRValue>     |   |   `-DeclRefExpr 0x11c945f90 <col:29> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |-IfStmt 0x11c9460a8 <line:53:3, line:54:16>     |   | |-ImplicitCastExpr 0x11c946028 <line:53:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x11c946008 <col:7> 'int' lvalue Var 0x11c941628 'error' 'int'     |   | `-ReturnStmt 0x11c946098 <line:54:4, col:16>     |   |   `-ImplicitCastExpr 0x11c946080 <col:10, col:16> 'int' <LValueToRValue>     |   |     `-ParenExpr 0x11c946060 <col:10, col:16> 'int' lvalue     |   |       `-DeclRefExpr 0x11c946040 <col:11> 'int' lvalue Var 0x11c941628 'error' 'int'     |   |-BinaryOperator 0x11c946358 <line:55:3, line:56:21> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11c9460c8 <line:55:3> 'int' lvalue Var 0x11c941628 'error' 'int'     |   | `-CallExpr 0x11c946320 <col:11, line:56:21> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11c9461c8 <line:55:11> 'int ()' Function 0x11c946110 'xfs_da_shrink_inode' 'int ()'     |   |   |-RecoveryExpr 0x11c946238 <col:31, col:38> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x11c946200 <col:31> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   |   |-RecoveryExpr 0x11c946298 <col:44, col:54> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x11c946260 <col:44> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   |   `-RecoveryExpr 0x11c9462f8 <line:56:9, col:19> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x11c9462c0 <col:9> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |   `-IfStmt 0x11c946478 <line:58:3, line:59:16>     |     |-ImplicitCastExpr 0x11c9463f8 <line:58:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x11c9463d8 <col:7> 'int' lvalue Var 0x11c941628 'error' 'int'     |     `-ReturnStmt 0x11c946468 <line:59:4, col:16>     |       `-ImplicitCastExpr 0x11c946450 <col:10, col:16> 'int' <LValueToRValue>     |         `-ParenExpr 0x11c946430 <col:10, col:16> 'int' lvalue     |           `-DeclRefExpr 0x11c946410 <col:11> 'int' lvalue Var 0x11c941628 'error' 'int'     |-CallExpr 0x11c946590 <line:62:2, col:37> 'int'     | |-ImplicitCastExpr 0x11c946578 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11c946518 <col:2> 'int ()' Function 0x11c945200 'xfs_da3_node_remove' 'int ()'     | |-ImplicitCastExpr 0x11c9465c0 <col:22> 'struct xfs_da_state *' <LValueToRValue>     | | `-DeclRefExpr 0x11c946538 <col:22> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     | `-ImplicitCastExpr 0x11c9465d8 <col:29> 'struct xfs_da_state_blk *' <LValueToRValue>     |   `-DeclRefExpr 0x11c946558 <col:29> 'struct xfs_da_state_blk *' lvalue Var 0x11c9413b8 'drop_blk' 'struct xfs_da_state_blk *'     |-CallExpr 0x11c9466a8 <line:63:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11c9465f0 <col:2> 'int ()' Function 0x11c9453b8 'xfs_da3_fixhashpath' 'int ()'     | |-DeclRefExpr 0x11c946610 <col:22> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     | `-UnaryOperator 0x11c946690 <col:29, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11c946668 <col:30, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11c946630 <col:30> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |-BinaryOperator 0x11c946960 <line:64:2, col:54> 'int' contains-errors '='     | |-DeclRefExpr 0x11c9466d8 <col:2> 'int' lvalue Var 0x11c941628 'error' 'int'     | `-CallExpr 0x11c946930 <col:10, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11c9467d8 <col:10> 'int ()' Function 0x11c946720 'xfs_da3_root_join' 'int ()'     |   |-DeclRefExpr 0x11c9467f8 <col:28> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |   `-UnaryOperator 0x11c946918 <col:35, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x11c9468f8 <col:36, col:53> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x11c9468e0 <col:36, col:48> '<dependent type>' contains-errors <LValueToRValue>     |       | `-CXXDependentScopeMemberExpr 0x11c946878 <col:36, col:48> '<dependent type>' contains-errors lvalue .blk     |       |   `-RecoveryExpr 0x11c946850 <col:36, col:43> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x11c946818 <col:36> 'struct xfs_da_state *' lvalue ParmVar 0x11c928e48 'state' 'struct xfs_da_state *'     |       `-IntegerLiteral 0x11c9468c0 <col:52> 'int' 0     `-ReturnStmt 0x11c9469d8 <line:65:2, col:14>       `-ImplicitCastExpr 0x11c9469c0 <col:8, col:14> 'int' <LValueToRValue>         `-ParenExpr 0x11c9469a0 <col:8, col:14> 'int' lvalue           `-DeclRefExpr 0x11c946980 <col:9> 'int' lvalue Var 0x11c941628 'error' 'int' ","20334":"`-FunctionDecl 0x142027628  line:1:10 invalid opj_j2k_write_mco 'int (int *, struct opj_stream_private *, struct opj_event_mgr *)'   |-ParmVarDecl 0x14200dd28 <col:33, col:44> col:44 referenced invalid p_j2k 'int *'   |-ParmVarDecl 0x14200e318 <line:2:49, col:76> col:76 used p_stream 'struct opj_stream_private *'   |-ParmVarDecl 0x1420274e8 <line:3:49, col:72> col:72 used p_manager 'struct opj_event_mgr *'   `-CompoundStmt 0x142029470 <line:5:1, line:57:1>     |-CallExpr 0x142027950 <line:13:9, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1420278d0 <col:9> 'int ()' Function 0x142027818 'assert' 'int ()'     | `-BinaryOperator 0x142027930 <col:16, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x1420278f0 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x142027910 <col:25> 'int' 0     |-CallExpr 0x142027a78 <line:14:9, col:31> 'int'     | |-ImplicitCastExpr 0x142027a60 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x142027978 <col:9> 'int ()' Function 0x142027818 'assert' 'int ()'     | `-BinaryOperator 0x142027a08 <col:16, col:29> 'int' '!='     |   |-ImplicitCastExpr 0x1420279d8 <col:16> 'struct opj_event_mgr *' <LValueToRValue>     |   | `-DeclRefExpr 0x142027998 <col:16> 'struct opj_event_mgr *' lvalue ParmVar 0x1420274e8 'p_manager' 'struct opj_event_mgr *'     |   `-ImplicitCastExpr 0x1420279f0 <col:29> 'struct opj_event_mgr *' <NullToPointer>     |     `-IntegerLiteral 0x1420279b8 <col:29> 'int' 0     |-CallExpr 0x142027b68 <line:15:9, col:30> 'int'     | |-ImplicitCastExpr 0x142027b50 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x142027aa0 <col:9> 'int ()' Function 0x142027818 'assert' 'int ()'     | `-BinaryOperator 0x142027b30 <col:16, col:28> 'int' '!='     |   |-ImplicitCastExpr 0x142027b00 <col:16> 'struct opj_stream_private *' <LValueToRValue>     |   | `-DeclRefExpr 0x142027ac0 <col:16> 'struct opj_stream_private *' lvalue ParmVar 0x14200e318 'p_stream' 'struct opj_stream_private *'     |   `-ImplicitCastExpr 0x142027b18 <col:28> 'struct opj_stream_private *' <NullToPointer>     |     `-IntegerLiteral 0x142027ae0 <col:28> 'int' 0     |-IfStmt 0x142028f58 <line:21:9, line:33:9>     | |-BinaryOperator 0x142028018 <line:21:13, col:60> 'int' contains-errors '>'     | | |-RecoveryExpr 0x142027ff8 <col:13> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x142027f90 <col:26, col:60> '<dependent type>' contains-errors lvalue .m_header_tile_data_size     | |   `-CXXDependentScopeMemberExpr 0x142027f48 <col:26, col:50> '<dependent type>' contains-errors lvalue .m_encoder     | |     `-CXXDependentScopeMemberExpr 0x142027f00 <col:26, col:33> '<dependent type>' contains-errors lvalue ->m_specific_param     | |       `-RecoveryExpr 0x142027ee0 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x142028f40 <col:85, line:33:9>     |   `-IfStmt 0x142028ce0 <line:24:17, line:30:17>     |     |-RecoveryExpr 0x142028068 <line:24:21, col:23> '_Bool' contains-errors     |     `-CompoundStmt 0x142028cc0 <col:45, line:30:17>     |       |-CallExpr 0x142028280 <line:25:25, col:86> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x142028168 <col:25> 'int ()' Function 0x1420280b0 'opj_free' 'int ()'     |       | `-CXXDependentScopeMemberExpr 0x142028238 <col:34, col:68> '<dependent type>' contains-errors lvalue .m_header_tile_data     |       |   `-CXXDependentScopeMemberExpr 0x1420281f0 <col:34, col:58> '<dependent type>' contains-errors lvalue .m_encoder     |       |     `-CXXDependentScopeMemberExpr 0x1420281a8 <col:34, col:41> '<dependent type>' contains-errors lvalue ->m_specific_param     |       |       `-RecoveryExpr 0x142028188 <col:34> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x142028b20 <line:27:25, col:85> '<dependent type>' contains-errors '='     |         |-CXXDependentScopeMemberExpr 0x142028ab8 <col:25, col:59> '<dependent type>' contains-errors lvalue .m_header_tile_data_size     |         | `-CXXDependentScopeMemberExpr 0x142028a70 <col:25, col:49> '<dependent type>' contains-errors lvalue .m_encoder     |         |   `-CXXDependentScopeMemberExpr 0x142028a28 <col:25, col:32> '<dependent type>' contains-errors lvalue ->m_specific_param     |         |     `-RecoveryExpr 0x142028a00 <col:25> '<dependent type>' contains-errors lvalue     |         |       `-DeclRefExpr 0x1420283c8 <col:25> 'int *' lvalue ParmVar 0x14200dd28 'p_j2k' 'int *'     |         `-IntegerLiteral 0x142028b00 <col:85> 'int' 0     `-IfStmt 0x142029450 <line:52:9, line:54:9>       |-RecoveryExpr 0x142029420 <line:52:13, col:122> '_Bool' contains-errors       `-CompoundStmt 0x142029440 <col:134, line:54:9> ","20817":"`-FunctionDecl 0x135026600  line:1:22 emulator_get_cached_segment_base 'unsigned long (struct x86_emulate_ctxt *, int)' static   |-ParmVarDecl 0x13500e248 <line:2:2, col:27> col:27 used ctxt 'struct x86_emulate_ctxt *'   |-ParmVarDecl 0x13500e2c8 <col:33, col:37> col:37 used seg 'int'   `-CompoundStmt 0x135026aa0 <line:3:1, line:5:1>     `-ReturnStmt 0x135026a90 <line:4:2, col:49>       `-ImplicitCastExpr 0x135026a78 <col:9, col:49> 'unsigned long' <IntegralCast>         `-CallExpr 0x135026a30 <col:9, col:49> 'int'           |-ImplicitCastExpr 0x135026a18 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x135026830 <col:9> 'int ()' Function 0x135026778 'get_segment_base' 'int ()'           |-CallExpr 0x1350269b8 <col:26, col:43> 'int'           | |-ImplicitCastExpr 0x1350269a0 <col:26> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x135026930 <col:26> 'int ()' Function 0x135026878 'emul_to_vcpu' 'int ()'           | `-ImplicitCastExpr 0x1350269e0 <col:39> 'struct x86_emulate_ctxt *' <LValueToRValue>           |   `-DeclRefExpr 0x135026950 <col:39> 'struct x86_emulate_ctxt *' lvalue ParmVar 0x13500e248 'ctxt' 'struct x86_emulate_ctxt *'           `-ImplicitCastExpr 0x135026a60 <col:46> 'int' <LValueToRValue>             `-DeclRefExpr 0x1350269f8 <col:46> 'int' lvalue ParmVar 0x13500e2c8 'seg' 'int' ","20403":"`-FunctionDecl 0x15100ddf8  line:2:8 invalid trak_box_size 'int (int *)'   |-ParmVarDecl 0x15100dd28 <col:22, col:30> col:30 invalid s 'int *'   `-CompoundStmt 0x150922e20 <line:3:1, line:20:15>     `-IfStmt 0x15100e1f0 <line:7:2, line:10:2>       |-BinaryOperator 0x15100e118 <line:7:6, col:56> 'int' contains-errors '&&'       | |-CXXDependentScopeMemberExpr 0x15100e020 <col:6, col:11> '<dependent type>' contains-errors lvalue ->sample_encryption       | | `-RecoveryExpr 0x15100e000 <col:6> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x15100e0d0 <col:32, col:56> '<dependent type>' contains-errors lvalue ->load_needed       |   `-CXXDependentScopeMemberExpr 0x15100e088 <col:32, col:37> '<dependent type>' contains-errors lvalue ->sample_encryption       |     `-RecoveryExpr 0x15100e068 <col:32> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15100e1d8 <col:69, line:10:2>         `-IfStmt 0x15100e1b8 <line:9:3, col:17>           |-RecoveryExpr 0x15100e150 <col:7> '<dependent type>' contains-errors lvalue           `-ReturnStmt 0x15100e1a8 <col:10, col:17>             `-RecoveryExpr 0x15100e188 <col:17> '<dependent type>' contains-errors lvalue ","20696":"`-FunctionDecl 0x138826600  line:1:5 platform_get_irq_byname_optional 'int (struct platform_device *, const char *)'   |-ParmVarDecl 0x13880e248 <col:38, col:62> col:62 used dev 'struct platform_device *'   |-ParmVarDecl 0x13880e2c8 <line:2:10, col:22> col:22 used name 'const char *'   `-CompoundStmt 0x138826948 <line:3:1, line:5:1>     `-ReturnStmt 0x138826938 <line:4:2, col:44>       `-CallExpr 0x1388268d8 <col:9, col:44> 'int'         |-ImplicitCastExpr 0x1388268c0 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x138826830 <col:9> 'int ()' Function 0x138826778 '__platform_get_irq_byname' 'int ()'         |-ImplicitCastExpr 0x138826908 <col:35> 'struct platform_device *' <LValueToRValue>         | `-DeclRefExpr 0x138826850 <col:35> 'struct platform_device *' lvalue ParmVar 0x13880e248 'dev' 'struct platform_device *'         `-ImplicitCastExpr 0x138826920 <col:40> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x138826870 <col:40> 'const char *' lvalue ParmVar 0x13880e2c8 'name' 'const char *' ","20331":"`-FunctionDecl 0x10500ddc8  line:2:21 invalid mp_ceil 'double (int)' static   |-ParmVarDecl 0x10500dcf0 <col:29, <invalid sloc>> col:46 invalid 'int'   `-CompoundStmt 0x10500dec8 <col:52, line:3:38>     |-ReturnStmt 0x10500deb0 <col:9, col:16>     | `-RecoveryExpr 0x10500de90 <col:16> '<dependent type>' contains-errors lvalue     `-NullStmt 0x10500dec0 <col:37> ","21010":"`-FunctionDecl 0x134928288  line:1:14 invalid Eval 'int (int *, int *)'   |-ParmVarDecl 0x134928128 <col:19, col:34> col:34 referenced invalid context 'int *'   |-ParmVarDecl 0x1349281a8 <col:43, col:55> col:55 invalid node 'int *'   `-CompoundStmt 0x1349436c8 <col:61, line:30:1>     |-DeclStmt 0x1349285d0 <line:2:3, col:68>     | `-VarDecl 0x134928358 <col:3, col:23> col:23 invalid input 'const int *'     |-DeclStmt 0x134928718 <line:3:3, col:77>     | `-VarDecl 0x134928600 <col:3, col:23> col:23 invalid fft_length 'const int *'     |-DeclStmt 0x134941e60 <line:4:3, col:70>     | `-VarDecl 0x134928748 <col:3, col:18> col:18 invalid fft_length_data 'const int *'     |-IfStmt 0x134942560 <line:7:3, line:12:3>     | |-BinaryOperator 0x134942140 <line:7:7, col:23> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x1349420d8 <col:7, col:15> '<dependent type>' contains-errors lvalue ->type     | | | `-RecoveryExpr 0x1349420b8 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x134942120 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x134942540 <col:41, line:12:3>     |   |-CallExpr 0x1349424c0 <line:8:5, line:10:57> '<dependent type>' contains-errors     |   | |-CXXDependentScopeMemberExpr 0x1349421a8 <line:8:5, col:14> '<dependent type>' contains-errors lvalue ->ReportError     |   | | `-RecoveryExpr 0x134942180 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x134942160 <col:5> 'int *' lvalue ParmVar 0x134928128 'context' 'int *'     |   | |-RecoveryExpr 0x1349421f0 <col:26> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x134942250 <line:9:26> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x134942498 <line:10:26, col:56> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x134942350 <col:26> 'int ()' Function 0x134942298 'TfLiteTypeGetName' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x134942450 <col:44, col:52> '<dependent type>' contains-errors lvalue ->type     |   |     `-RecoveryExpr 0x134942430 <col:44> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x134942530 <line:11:5, col:12>     |     `-RecoveryExpr 0x134942510 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x134943518 <line:16:3, line:27:3> has_else     | |-UnaryOperator 0x1349426c8 <line:16:7, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1349426a0 <col:8, col:35> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x134942660 <col:8> 'int ()' Function 0x1349425a8 'IsConstantTensor' 'int ()'     | |   `-RecoveryExpr 0x134942680 <col:25> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x134942978 <col:38, line:18:3>     | | `-CallExpr 0x134942950 <line:17:5, col:73> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1349427c0 <col:5> 'int ()' Function 0x134942708 'TF_LITE_ENSURE_STATUS' 'int ()'     | |   `-CallExpr 0x134942920 <col:27, col:72> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x1349428c0 <col:27> 'int ()' Function 0x134942808 'ResizeOutputandTemporaryTensors' 'int ()'     | |     |-RecoveryExpr 0x1349428e0 <col:59> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x134942900 <col:68> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1349434d8 <line:18:10, line:27:3>     |   |-DeclStmt 0x134942b10 <line:19:5, col:48>     |   | `-VarDecl 0x1349429a8 <col:5, col:9> col:9 used num_dims_output 'int'     |   |-DeclStmt 0x134942ca8 <line:20:5, col:61>     |   | `-VarDecl 0x134942b40 <col:5, col:24> col:24 invalid output_shape 'const int'     |   |-CallExpr 0x134942e68 <line:21:5, col:69> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x134942da0 <col:5> 'int ()' Function 0x134942ce8 'TF_LITE_ENSURE_EQ' 'int ()'     |   | |-RecoveryExpr 0x134942dc0 <col:23> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x134942de0 <col:32> 'int' lvalue Var 0x1349429a8 'num_dims_output' 'int'     |   | `-CallExpr 0x134942e40 <col:49, col:68> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x134942e00 <col:49> 'int ()' Function 0x134942a38 'NumDimensions' 'int ()'     |   |   `-RecoveryExpr 0x134942e20 <col:63> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x134943038 <line:22:5, col:49> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x134942f80 <col:5> 'int ()' Function 0x134942ec8 'TF_LITE_ENSURE' 'int ()'     |   | |-RecoveryExpr 0x134942fa0 <col:20> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x134943018 <col:29, col:48> 'int' '>='     |   |   |-ImplicitCastExpr 0x134943000 <col:29> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x134942fc0 <col:29> 'int' lvalue Var 0x1349429a8 'num_dims_output' 'int'     |   |   `-IntegerLiteral 0x134942fe0 <col:48> 'int' 2     |   |-CallExpr 0x134943228 <line:23:5, line:24:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x134943068 <line:23:5> 'int ()' Function 0x134942ce8 'TF_LITE_ENSURE_EQ' 'int ()'     |   | |-RecoveryExpr 0x134943088 <col:23> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x134943188 <col:32, col:69> '<dependent type>' contains-errors     |   | | |-CXXDependentScopeMemberExpr 0x1349430c8 <col:32, col:45> '<dependent type>' contains-errors lvalue .Dims     |   | | | `-RecoveryExpr 0x1349430a8 <col:32> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x134943168 <col:50, col:68> 'int' '-'     |   | |   |-ImplicitCastExpr 0x134943150 <col:50> 'int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x134943110 <col:50> 'int' lvalue Var 0x1349429a8 'num_dims_output' 'int'     |   | |   `-IntegerLiteral 0x134943130 <col:68> 'int' 2     |   | `-ArraySubscriptExpr 0x134943208 <line:24:23, col:40> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x1349431f0 <col:23> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x1349431b0 <col:23> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x1349431d0 <col:39> 'int' 0     |   `-CallExpr 0x1349434a0 <line:25:5, line:26:49> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x134943260 <line:25:5> 'int ()' Function 0x134942ce8 'TF_LITE_ENSURE_EQ' 'int ()'     |     |-RecoveryExpr 0x134943280 <col:23> '<dependent type>' contains-errors lvalue     |     |-CallExpr 0x134943380 <col:32, col:69> '<dependent type>' contains-errors     |     | |-CXXDependentScopeMemberExpr 0x1349432c0 <col:32, col:45> '<dependent type>' contains-errors lvalue .Dims     |     | | `-RecoveryExpr 0x1349432a0 <col:32> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x134943360 <col:50, col:68> 'int' '-'     |     |   |-ImplicitCastExpr 0x134943348 <col:50> 'int' <LValueToRValue>     |     |   | `-DeclRefExpr 0x134943308 <col:50> 'int' lvalue Var 0x1349429a8 'num_dims_output' 'int'     |     |   `-IntegerLiteral 0x134943328 <col:68> 'int' 1     |     `-BinaryOperator 0x134943480 <line:26:23, col:48> '<dependent type>' contains-errors '+'     |       |-BinaryOperator 0x134943440 <col:23, col:44> '<dependent type>' contains-errors '\/'     |       | |-ArraySubscriptExpr 0x134943400 <col:23, col:40> '<dependent type>' contains-errors lvalue     |       | | |-ImplicitCastExpr 0x1349433e8 <col:23> '<dependent type>' contains-errors <LValueToRValue>     |       | | | `-RecoveryExpr 0x1349433a8 <col:23> '<dependent type>' contains-errors lvalue     |       | | `-IntegerLiteral 0x1349433c8 <col:39> 'int' 1     |       | `-IntegerLiteral 0x134943420 <col:44> 'int' 2     |       `-IntegerLiteral 0x134943460 <col:48> 'int' 1     `-ReturnStmt 0x1349436b8 <line:29:3, col:36>       `-CallExpr 0x134943688 <col:10, col:36> '<dependent type>' contains-errors         |-DeclRefExpr 0x134943628 <col:10> 'int ()' Function 0x134943570 'Rfft2dHelper' 'int ()'         |-RecoveryExpr 0x134943648 <col:23> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x134943668 <col:32> '<dependent type>' contains-errors lvalue ","20687":"`-FunctionDecl 0x15b928238  line:1:1 slhc_init 'int (int, int)'   |-ParmVarDecl 0x15b9280d8 <col:11, col:15> col:15 used rslots 'int'   |-ParmVarDecl 0x15b928158 <col:23, col:27> col:27 used tslots 'int'   `-CompoundStmt 0x14b808fd0 <line:2:1, line:50:1>     |-DeclStmt 0x15b9283b8 <line:3:2, col:18>     | `-VarDecl 0x15b928350 <col:2, col:17> col:17 used i 'short' register     |-DeclStmt 0x15b9285b8 <line:4:2, col:28>     | |-RecordDecl 0x15b9283d0 <col:11, col:18> col:18 struct cstate     | `-VarDecl 0x15b928538 <col:2, col:26> col:26 used ts 'struct cstate *' register     |-DeclStmt 0x15b9287b8 <line:5:2, col:25>     | |-RecordDecl 0x15b9285d0 <col:2, col:9> col:9 struct slcompress     | `-VarDecl 0x15b928738 <col:2, col:21> col:21 used comp 'struct slcompress *'     |-IfStmt 0x15b941090 <line:8:2, line:9:8>     | |-UnaryOperator 0x15b941010 <line:8:6, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b940ff8 <col:8> 'struct slcompress *' <LValueToRValue>     | |   `-DeclRefExpr 0x15b940fd8 <col:8> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     | `-GotoStmt 0x15b941078 <line:9:3, col:8> 'out_fail' 0x15b941028     |-IfStmt 0x15b941638 <line:11:2, line:17:2>     | |-BinaryOperator 0x15b9411a0 <line:11:7, col:32> 'int' '&&'     | | |-BinaryOperator 0x15b941108 <col:7, col:16> 'int' '>'     | | | |-ImplicitCastExpr 0x15b9410f0 <col:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x15b9410b0 <col:7> 'int' lvalue ParmVar 0x15b9280d8 'rslots' 'int'     | | | `-IntegerLiteral 0x15b9410d0 <col:16> 'int' 0     | | `-BinaryOperator 0x15b941180 <col:23, col:32> 'int' '<'     | |   |-ImplicitCastExpr 0x15b941168 <col:23> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x15b941128 <col:23> 'int' lvalue ParmVar 0x15b9280d8 'rslots' 'int'     | |   `-IntegerLiteral 0x15b941148 <col:32> 'int' 256     | `-CompoundStmt 0x15b941610 <col:38, line:17:2>     |   |-BinaryOperator 0x15b9413e0 <line:13:3, col:43> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x15b9412a8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15b941270 <col:3> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |   | `-CallExpr 0x15b9413b0 <col:18, col:43> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15b9412d0 <col:18> 'int ()' Function 0x15b940a78 'kzalloc' 'int ()'     |   |   |-RecoveryExpr 0x15b941370 <col:26> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x15b941390 <col:33> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x15b9414f8 <line:14:3, line:15:9>     |   | |-UnaryOperator 0x15b941478 <line:14:7, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x15b941460 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x15b941438 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x15b941400 <col:9> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |   | `-GotoStmt 0x15b9414e0 <line:15:4, col:9> 'out_free' 0x15b941490     |   `-BinaryOperator 0x15b9415f0 <line:16:3, col:32> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x15b941550 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15b941518 <col:3> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |     `-BinaryOperator 0x15b9415d0 <col:23, col:32> 'int' '-'     |       |-ImplicitCastExpr 0x15b9415b8 <col:23> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x15b941578 <col:23> 'int' lvalue ParmVar 0x15b9280d8 'rslots' 'int'     |       `-IntegerLiteral 0x15b941598 <col:32> 'int' 1     |-IfStmt 0x14b8083a8 <line:19:2, line:25:2>     | |-BinaryOperator 0x15b941748 <line:19:7, col:32> 'int' '&&'     | | |-BinaryOperator 0x15b9416b0 <col:7, col:16> 'int' '>'     | | | |-ImplicitCastExpr 0x15b941698 <col:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x15b941658 <col:7> 'int' lvalue ParmVar 0x15b928158 'tslots' 'int'     | | | `-IntegerLiteral 0x15b941678 <col:16> 'int' 0     | | `-BinaryOperator 0x15b941728 <col:23, col:32> 'int' '<'     | |   |-ImplicitCastExpr 0x15b941710 <col:23> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x15b9416d0 <col:23> 'int' lvalue ParmVar 0x15b928158 'tslots' 'int'     | |   `-IntegerLiteral 0x15b9416f0 <col:32> 'int' 256     | `-CompoundStmt 0x14b808380 <col:38, line:25:2>     |   |-BinaryOperator 0x15b941950 <line:21:3, col:43> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x15b941818 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15b9417e0 <col:3> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |   | `-CallExpr 0x15b941920 <col:18, col:43> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15b941840 <col:18> 'int ()' Function 0x15b940a78 'kzalloc' 'int ()'     |   |   |-RecoveryExpr 0x15b9418e0 <col:26> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x15b941900 <col:33> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x14b808268 <line:22:3, line:23:9>     |   | |-UnaryOperator 0x15b9419e8 <line:22:7, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x15b9419d0 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x15b9419a8 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x15b941970 <col:9> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |   | `-GotoStmt 0x14b808250 <line:23:4, col:9> 'out_free2' 0x14b808200     |   `-BinaryOperator 0x14b808360 <line:24:3, col:32> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x14b8082c0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14b808288 <col:3> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |     `-BinaryOperator 0x14b808340 <col:23, col:32> 'int' '-'     |       |-ImplicitCastExpr 0x14b808328 <col:23> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x14b8082e8 <col:23> 'int' lvalue ParmVar 0x15b928158 'tslots' 'int'     |       `-IntegerLiteral 0x14b808308 <col:32> 'int' 1     |-BinaryOperator 0x14b808448 <line:27:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14b808400 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b8083c8 <col:2> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     | `-IntegerLiteral 0x14b808428 <col:22> 'int' 0     |-BinaryOperator 0x14b8084e8 <line:28:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14b8084a0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b808468 <col:2> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     | `-IntegerLiteral 0x14b8084c8 <col:23> 'int' 255     |-BinaryOperator 0x14b808588 <line:29:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14b808540 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14b808508 <col:2> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     | `-IntegerLiteral 0x14b808568 <col:23> 'int' 255     |-IfStmt 0x14b808c90 <line:33:2, line:41:2>     | |-BinaryOperator 0x14b808660 <line:33:7, col:16> 'int' '>'     | | |-ImplicitCastExpr 0x14b808648 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14b808608 <col:7> 'int' lvalue ParmVar 0x15b928158 'tslots' 'int'     | | `-IntegerLiteral 0x14b808628 <col:16> 'int' 0     | `-CompoundStmt 0x14b808c70 <col:20, line:41:2>     |   |-BinaryOperator 0x14b808700 <line:34:3, col:14> 'struct cstate *' contains-errors '='     |   | |-DeclRefExpr 0x14b808680 <col:3> 'struct cstate *' lvalue Var 0x15b928538 'ts' 'struct cstate *'     |   | `-RecoveryExpr 0x14b8086d8 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14b8086a0 <col:8> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |   `-ForStmt 0x14b808a60 <line:35:3, line:38:3>     |     |-BinaryOperator 0x14b8087a0 <line:35:7, col:17> 'short' contains-errors '='     |     | |-DeclRefExpr 0x14b808720 <col:7> 'short' lvalue Var 0x15b928350 'i' 'short'     |     | `-RecoveryExpr 0x14b808778 <col:11, col:17> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14b808740 <col:11> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |     |-<<<NULL>>>     |     |-BinaryOperator 0x14b808830 <col:30, col:34> 'int' '>'     |     | |-ImplicitCastExpr 0x14b808818 <col:30> 'int' <IntegralCast>     |     | | `-ImplicitCastExpr 0x14b808800 <col:30> 'short' <LValueToRValue>     |     | |   `-DeclRefExpr 0x14b8087c0 <col:30> 'short' lvalue Var 0x15b928350 'i' 'short'     |     | `-IntegerLiteral 0x14b8087e0 <col:34> 'int' 0     |     |-UnaryOperator 0x14b808870 <col:37, col:39> 'short' prefix '--' cannot overflow     |     | `-DeclRefExpr 0x14b808850 <col:39> 'short' lvalue Var 0x15b928350 'i' 'short'     |     `-CompoundStmt 0x14b808a50 <col:41, line:38:3>     |-ReturnStmt 0x14b808d00 <line:42:2, col:9>     | `-ImplicitCastExpr 0x14b808ce8 <col:9> 'int' <PointerToIntegral>     |   `-ImplicitCastExpr 0x14b808cd0 <col:9> 'struct slcompress *' <LValueToRValue>     |     `-DeclRefExpr 0x14b808cb0 <col:9> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |-LabelStmt 0x14b808e98 <line:44:1, line:45:20> 'out_free2'     | `-CallExpr 0x14b808e70 <col:2, col:20> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b808df0 <col:2> 'int ()' Function 0x14b808d38 'kfree' 'int ()'     |   `-RecoveryExpr 0x14b808e48 <col:8, col:14> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b808e10 <col:8> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     |-LabelStmt 0x14b808f88 <line:46:1, line:47:12> 'out_free'     | `-CallExpr 0x14b808f48 <col:2, col:12> 'int'     |   |-ImplicitCastExpr 0x14b808f30 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b808eb8 <col:2> 'int ()' Function 0x14b808d38 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x14b808f70 <col:8> 'struct slcompress *' <LValueToRValue>     |     `-DeclRefExpr 0x14b808ed8 <col:8> 'struct slcompress *' lvalue Var 0x15b928738 'comp' 'struct slcompress *'     `-LabelStmt 0x14b808fb0 <line:48:1, col:9> 'out_fail'       `-NullStmt 0x14b808fa8 <col:9> ","20857":"`-FunctionDecl 0x13c00dda8  line:1:1 has_database_privilege_name_id 'int (int)'   |-ParmVarDecl 0x13c00dcd8 <col:32> col:32 PG_FUNCTION_ARGS 'int'   `-CompoundStmt 0x13c028b18 <line:2:1, line:19:1>     `-IfStmt 0x13c0288f8 <line:13:2, line:14:18>       |-UnaryOperator 0x13c0287a8 <line:13:6, col:71> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x13c028778 <col:7, col:71> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13c028550 <col:7> 'int ()' Function 0x13c028498 'SearchSysCacheExists1' 'int ()'       |   |-RecoveryExpr 0x13c028710 <col:29> '<dependent type>' contains-errors lvalue       |   `-CallExpr 0x13c028750 <col:42, col:70> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x13c028668 <col:42> 'int ()' Function 0x13c0285b0 'ObjectIdGetDatum' 'int ()'       |     `-RecoveryExpr 0x13c028730 <col:59> '<dependent type>' contains-errors lvalue       `-CallExpr 0x13c0288d8 <line:14:3, col:18> 'int'         `-ImplicitCastExpr 0x13c0288c0 <col:3> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x13c0288a0 <col:3> 'int ()' Function 0x13c0287e8 'PG_RETURN_NULL' 'int ()' ","21212":"`-FunctionDecl 0x15a928f58  line:1:5 snd_timer_close 'int (struct snd_timer_instance *)'   |-ParmVarDecl 0x15a928e48 <col:21, col:48> col:48 used timeri 'struct snd_timer_instance *'   `-CompoundStmt 0x15b0093f0 <line:2:1, line:61:1>     |-DeclStmt 0x15a941488 <line:3:2, col:32>     | |-RecordDecl 0x15a941250 <col:2, col:9> col:9 struct snd_timer     | `-VarDecl 0x15a9413b8 <col:2, col:28> col:20 used timer 'struct snd_timer *' cinit     |   `-RecoveryExpr 0x15a941450 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a941638 <line:4:2, col:40>     | |-VarDecl 0x15a941528 <col:2, col:29> col:29 used slave 'struct snd_timer_instance *'     | `-VarDecl 0x15a9415b8 <col:2, col:37> col:37 used tmp 'struct snd_timer_instance *'     |-IfStmt 0x15a9418e8 <line:6:2, line:7:11>     | |-CallExpr 0x15a941818 <line:6:6, col:24> 'int'     | | |-ImplicitCastExpr 0x15a941800 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15a941760 <col:6> 'int ()' Function 0x15a9416a8 'snd_BUG_ON' 'int ()'     | | `-UnaryOperator 0x15a9417b8 <col:17, col:18> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x15a9417a0 <col:18> 'struct snd_timer_instance *' <LValueToRValue>     | |     `-DeclRefExpr 0x15a941780 <col:18> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     | `-ReturnStmt 0x15a9418d8 <line:7:3, col:11>     |   `-UnaryOperator 0x15a9418c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15a9418a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15a941888 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a941a40 <line:10:2, col:23> 'int'     | |-ImplicitCastExpr 0x15a941a28 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15a9419e8 <col:2> 'int ()' Function 0x15a941930 'snd_timer_stop' 'int ()'     | `-ImplicitCastExpr 0x15a941a68 <col:17> 'struct snd_timer_instance *' <LValueToRValue>     |   `-DeclRefExpr 0x15a941a08 <col:17> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     |-IfStmt 0x15b008e48 <line:12:2, line:52:2> has_else     | |-BinaryOperator 0x15a941b38 <line:12:6, col:22> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x15a941ab8 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15a941a80 <col:6> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     | | `-RecoveryExpr 0x15a941b18 <col:22> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x15a943550 <col:46, line:24:2>     | | |-CallExpr 0x15a941ce8 <line:14:3, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15a941c38 <col:3> 'int ()' Function 0x15a941b80 'spin_lock_irq' 'int ()'     | | | `-UnaryOperator 0x15a941cd0 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x15a941cb0 <col:18> '<dependent type>' contains-errors lvalue     | | |-WhileStmt 0x15a943000 <line:15:3, line:19:3>     | | | |-BinaryOperator 0x15a941dc8 <line:15:10, col:26> '<dependent type>' contains-errors '&'     | | | | |-RecoveryExpr 0x15a941d48 <col:10, col:18> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x15a941d10 <col:10> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     | | | | `-RecoveryExpr 0x15a941da8 <col:26> '<dependent type>' contains-errors lvalue     | | | `-CompoundStmt 0x15a9421d8 <col:53, line:19:3>     | | |   |-CallExpr 0x15a941f78 <line:16:4, col:38> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x15a941ec8 <col:4> 'int ()' Function 0x15a941e10 'spin_unlock_irq' 'int ()'     | | |   | `-UnaryOperator 0x15a941f60 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   |   `-RecoveryExpr 0x15a941f40 <col:21> '<dependent type>' contains-errors lvalue     | | |   |-CallExpr 0x15a9420d8 <line:17:4, col:13> 'int'     | | |   | |-ImplicitCastExpr 0x15a9420c0 <col:4> 'int (*)()' <FunctionToPointerDecay>     | | |   | | `-DeclRefExpr 0x15a942080 <col:4> 'int ()' Function 0x15a941fc8 'udelay' 'int ()'     | | |   | `-IntegerLiteral 0x15a9420a0 <col:11> 'int' 10     | | |   `-CallExpr 0x15a9421b0 <line:18:4, col:36> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x15a942100 <col:4> 'int ()' Function 0x15a941b80 'spin_lock_irq' 'int ()'     | | |     `-UnaryOperator 0x15a942198 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |       `-RecoveryExpr 0x15a942178 <col:19> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x15a9430d0 <line:20:3, col:37> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15a943020 <col:3> 'int ()' Function 0x15a941e10 'spin_unlock_irq' 'int ()'     | | | `-UnaryOperator 0x15a9430b8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x15a943098 <col:20> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x15a943288 <line:21:3, col:29> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15a9431d8 <col:3> 'int ()' Function 0x15a943120 'mutex_lock' 'int ()'     | | | `-UnaryOperator 0x15a943270 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x15a943250 <col:15> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x15a943428 <line:22:3, col:30> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15a943390 <col:3> 'int ()' Function 0x15a9432d8 'list_del' 'int ()'     | |   `-UnaryOperator 0x15a943410 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x15a9433e8 <col:13, col:21> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a9433b0 <col:13> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     | `-CompoundStmt 0x15b008e00 <line:24:9, line:52:2>     |   |-BinaryOperator 0x15a943608 <line:25:3, col:19> 'struct snd_timer *' contains-errors '='     |   | |-DeclRefExpr 0x15a943588 <col:3> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |   | `-RecoveryExpr 0x15a9435e0 <col:11, col:19> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15a9435a8 <col:11> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     |   |-IfStmt 0x15a943740 <line:26:3, line:27:9>     |   | |-CallExpr 0x15a9436b0 <line:26:7, col:24> 'int' contains-errors     |   | | |-ImplicitCastExpr 0x15a943698 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x15a943628 <col:7> 'int ()' Function 0x15a9416a8 'snd_BUG_ON' 'int ()'     |   | | `-UnaryOperator 0x15a943680 <col:18, col:19> 'int' contains-errors prefix '!' cannot overflow     |   | |   `-ImplicitCastExpr 0x15a943668 <col:19> 'struct snd_timer *' contains-errors <LValueToRValue>     |   | |     `-DeclRefExpr 0x15a943648 <col:19> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |   | `-GotoStmt 0x15a943728 <line:27:4, col:9> 'out' 0x15a9436d8     |   |-CallExpr 0x15a9437f8 <line:29:3, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a943760 <col:3> 'int ()' Function 0x15a941b80 'spin_lock_irq' 'int ()'     |   | `-UnaryOperator 0x15a9437e0 <col:17, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15a9437b8 <col:18, col:25> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15a943780 <col:18> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |   |-WhileStmt 0x15a943ac8 <line:30:3, line:34:3>     |   | |-RecoveryExpr 0x15a943880 <line:30:10, col:26> '_Bool' contains-errors     |   | `-CompoundStmt 0x15a943aa0 <col:53, line:34:3>     |   |   |-CallExpr 0x15a943938 <line:31:4, col:32> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x15a9438a0 <col:4> 'int ()' Function 0x15a941e10 'spin_unlock_irq' 'int ()'     |   |   | `-UnaryOperator 0x15a943920 <col:20, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   `-RecoveryExpr 0x15a9438f8 <col:21, col:28> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x15a9438c0 <col:21> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |   |   |-CallExpr 0x15a9439b8 <line:32:4, col:13> 'int'     |   |   | |-ImplicitCastExpr 0x15a9439a0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x15a943960 <col:4> 'int ()' Function 0x15a941fc8 'udelay' 'int ()'     |   |   | `-IntegerLiteral 0x15a943980 <col:11> 'int' 10     |   |   `-CallExpr 0x15a943a78 <line:33:4, col:30> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x15a9439e0 <col:4> 'int ()' Function 0x15a941b80 'spin_lock_irq' 'int ()'     |   |     `-UnaryOperator 0x15a943a60 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       `-RecoveryExpr 0x15a943a38 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x15a943a00 <col:19> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |   |-CallExpr 0x15a943b80 <line:35:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a943ae8 <col:3> 'int ()' Function 0x15a941e10 'spin_unlock_irq' 'int ()'     |   | `-UnaryOperator 0x15a943b68 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15a943b40 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15a943b08 <col:20> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |   |-CallExpr 0x15a943c60 <line:37:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a943bc8 <col:3> 'int ()' Function 0x15a9432d8 'list_del' 'int ()'     |   | `-UnaryOperator 0x15a943c48 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15a943c20 <col:13, col:21> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15a943be8 <col:13> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     |   `-IfStmt 0x15b008c28 <line:38:3, line:40:25>     |     |-BinaryOperator 0x15a943f10 <line:38:7, line:39:17> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x15a943e48 <line:38:7, col:49> 'int' contains-errors '&&'     |     | | |-DeclRefExpr 0x15a943c88 <col:7> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |     | | `-CallExpr 0x15a943e20 <col:16, col:49> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x15a943d88 <col:16> 'int ()' Function 0x15a943cd0 'list_empty' 'int ()'     |     | |   `-UnaryOperator 0x15a943e08 <col:27, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | |     `-RecoveryExpr 0x15a943de0 <col:28, col:35> '<dependent type>' contains-errors lvalue     |     | |       `-DeclRefExpr 0x15a943da8 <col:28> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |     | `-CXXDependentScopeMemberExpr 0x15a943ec8 <line:39:7, col:17> '<dependent type>' contains-errors lvalue .close     |     |   `-RecoveryExpr 0x15a943ea0 <col:7, col:14> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x15a943e68 <col:7> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |     `-CallExpr 0x15b008c00 <line:40:4, col:25> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x15a943f90 <col:4, col:14> '<dependent type>' contains-errors lvalue .close     |       | `-RecoveryExpr 0x15a943f68 <col:4, col:11> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x15a943f30 <col:4> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |       `-DeclRefExpr 0x15a943fd8 <col:20> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     |-LabelStmt 0x15b008fa0 <line:53:2, line:55:30> 'out'     | `-IfStmt 0x15b008f80 <line:54:2, line:55:30>     |   |-RecoveryExpr 0x15b008eb0 <line:54:6, col:14> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15b008e78 <col:6> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     |   `-CallExpr 0x15b008f58 <line:55:3, col:30> '<dependent type>' contains-errors     |     |-RecoveryExpr 0x15b008f10 <col:3, col:11> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15b008ed8 <col:3> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     |     `-DeclRefExpr 0x15b008f38 <col:24> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     |-CallExpr 0x15b009120 <line:56:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b0090a0 <col:2> 'int ()' Function 0x15b008fe8 'kfree' 'int ()'     | `-RecoveryExpr 0x15b0090f8 <col:8, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15b0090c0 <col:8> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     |-CallExpr 0x15b0091a0 <line:57:2, col:14> 'int'     | |-ImplicitCastExpr 0x15b009188 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15b009148 <col:2> 'int ()' Function 0x15b008fe8 'kfree' 'int ()'     | `-ImplicitCastExpr 0x15b0091c8 <col:8> 'struct snd_timer_instance *' <LValueToRValue>     |   `-DeclRefExpr 0x15b009168 <col:8> 'struct snd_timer_instance *' lvalue ParmVar 0x15a928e48 'timeri' 'struct snd_timer_instance *'     |-IfStmt 0x15b0093a0 <line:58:2, line:59:27>     | |-ImplicitCastExpr 0x15b009200 <line:58:6> 'struct snd_timer *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x15b0091e0 <col:6> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     | `-CallExpr 0x15b009378 <line:59:3, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b0092f8 <col:3> 'int ()' Function 0x15b009240 'module_put' 'int ()'     |   `-RecoveryExpr 0x15b009350 <col:14, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b009318 <col:14> 'struct snd_timer *' contains-errors lvalue Var 0x15a9413b8 'timer' 'struct snd_timer *'     `-ReturnStmt 0x15b0093e0 <line:60:2, col:9>       `-IntegerLiteral 0x15b0093c0 <col:9> 'int' 0 ","21024":"`-FunctionDecl 0x124945a00  line:1:12 referenced invalid gen_reqid 'int (struct net *)' static   |-ParmVarDecl 0x124928668 <col:22, col:34> col:34 used net 'struct net *'   `-CompoundStmt 0x124946910 <line:2:1, line:20:1>     |-DeclStmt 0x124945c28 <line:3:2, col:30>     | |-RecordDecl 0x124945ab0 <col:2, col:9> col:9 struct xfrm_policy_walk     | `-VarDecl 0x124945ba8 <col:2, col:26> col:26 invalid walk 'struct xfrm_policy_walk'     |-DeclStmt 0x124945cc0 <line:5:2, col:8>     | `-VarDecl 0x124945c58 <col:2, col:6> col:6 used rc 'int'     |-DeclStmt 0x124945d70 <line:6:2, col:43>     | `-VarDecl 0x124945cf0 <col:2, col:13> col:13 referenced invalid reqid 'int' static     |-DoStmt 0x1249468c0 <line:9:2, line:18:25>     | |-CompoundStmt 0x1249467e8 <line:9:5, line:18:2>     | | |-UnaryOperator 0x124945dc8 <line:10:3, col:5> '<dependent type>' contains-errors prefix '++' cannot overflow     | | | `-RecoveryExpr 0x124945da8 <col:5> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x124945f60 <line:11:3, line:12:35>     | | | |-BinaryOperator 0x124945e20 <line:11:7, col:16> 'int' contains-errors '=='     | | | | |-RecoveryExpr 0x124945de0 <col:7> '<dependent type>' contains-errors lvalue     | | | | `-IntegerLiteral 0x124945e00 <col:16> 'int' 0     | | | `-BinaryOperator 0x124945f40 <line:12:4, col:35> '<dependent type>' contains-errors '='     | | |   |-RecoveryExpr 0x124945e60 <col:4> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x124945e40 <col:4> 'int' lvalue Var 0x124945cf0 'reqid' 'int'     | | |   `-BinaryOperator 0x124945f20 <col:12, col:35> '<dependent type>' contains-errors '+'     | | |     |-RecoveryExpr 0x124945f00 <col:12> '<dependent type>' contains-errors lvalue     | | |     `-IntegerLiteral 0x124945ea0 <col:35> 'int' 1     | | |-CallExpr 0x1249461a0 <line:13:3, col:53> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1249460e0 <col:3> 'int ()' Function 0x124946028 'xfrm_policy_walk_init' 'int ()'     | | | |-UnaryOperator 0x124946120 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x124946100 <col:26> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x124946180 <col:32> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x1249464f8 <line:14:3, col:63> 'int' contains-errors '='     | | | |-DeclRefExpr 0x1249461d0 <col:3> 'int' lvalue Var 0x124945c58 'rc' 'int'     | | | `-CallExpr 0x1249464b8 <col:8, col:63> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1249462d0 <col:8> 'int ()' Function 0x124946218 'xfrm_policy_walk' 'int ()'     | | |   |-DeclRefExpr 0x1249462f0 <col:25> 'struct net *' lvalue ParmVar 0x124928668 'net' 'struct net *'     | | |   |-UnaryOperator 0x124946330 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   | `-RecoveryExpr 0x124946310 <col:31> '<dependent type>' contains-errors lvalue     | | |   |-RecoveryExpr 0x124946458 <col:37> '<dependent type>' contains-errors lvalue     | | |   `-CStyleCastExpr 0x124946490 <col:50, col:58> 'void *' contains-errors <Dependent>     | | |     `-UnaryOperator 0x124946380 <col:57, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |       `-RecoveryExpr 0x124946360 <col:58> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x124946670 <line:15:3, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1249465f8 <col:3> 'int ()' Function 0x124946540 'xfrm_policy_walk_done' 'int ()'     | | | |-UnaryOperator 0x124946638 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x124946618 <col:26> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x124946650 <col:32> 'struct net *' lvalue ParmVar 0x124928668 'net' 'struct net *'     | | `-IfStmt 0x1249467c8 <line:16:3, line:17:11>     | |   |-BinaryOperator 0x124946778 <line:16:7, col:14> 'int' contains-errors '!='     | |   | |-DeclRefExpr 0x1249466a0 <col:7> 'int' lvalue Var 0x124945c58 'rc' 'int'     | |   | `-UnaryOperator 0x124946760 <col:13, col:14> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   |   `-ImplicitCastExpr 0x124946748 <col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   |     `-RecoveryExpr 0x124946728 <col:14> '<dependent type>' contains-errors lvalue     | |   `-ReturnStmt 0x1249467b8 <line:17:4, col:11>     | |     `-RecoveryExpr 0x124946798 <col:11> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1249468a0 <line:18:11, col:20> 'int' contains-errors '!='     |   |-RecoveryExpr 0x124946828 <col:11> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x124946880 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x124946900 <line:19:2, col:9>       `-IntegerLiteral 0x1249468e0 <col:9> 'int' 0 ","20775":"`-FunctionDecl 0x12400bf18  col:60 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12400c018 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12400bfc0 <<invalid sloc>> Implicit 902 ","20893":"`-FunctionDecl 0x154120b48  line:1:1 printer_close 'int (struct inode *, struct file *)'   |-ParmVarDecl 0x154104448 <col:15, col:29> col:29 inode 'struct inode *'   |-ParmVarDecl 0x154120a28 <col:36, col:49> col:49 used fd 'struct file *'   `-CompoundStmt 0x154121848 <line:2:1, line:16:1>     |-DeclStmt 0x154120e98 <line:3:2, col:44>     | |-RecordDecl 0x154120c48 <col:2, col:9> col:9 struct printer_dev     | `-VarDecl 0x154120db8 <col:2, col:32> col:22 used dev 'struct printer_dev *' cinit     |   `-RecoveryExpr 0x154120e58 <col:28, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x154120e20 <col:28> 'struct file *' lvalue ParmVar 0x154120a28 'fd' 'struct file *'     |-DeclStmt 0x154120f30 <line:4:2, col:22>     | `-VarDecl 0x154120ec8 <col:2, col:17> col:17 used flags 'unsigned long'     |-CallExpr 0x154121128 <line:6:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154121070 <col:2> 'int ()' Function 0x154120fb8 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x1541210f0 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1541210c8 <col:21, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x154121090 <col:21> 'struct printer_dev *' contains-errors lvalue Var 0x154120db8 'dev' 'struct printer_dev *'     | `-DeclRefExpr 0x154121108 <col:32> 'unsigned long' lvalue Var 0x154120ec8 'flags' 'unsigned long'     |-BinaryOperator 0x1541211d8 <line:7:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x154121190 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x154121158 <col:2> 'struct printer_dev *' contains-errors lvalue Var 0x154120db8 'dev' 'struct printer_dev *'     | `-IntegerLiteral 0x1541211b8 <col:27> 'int' 0     |-BinaryOperator 0x1541212b0 <line:8:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x154121230 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1541211f8 <col:2> 'struct file *' lvalue ParmVar 0x154120a28 'fd' 'struct file *'     | `-RecoveryExpr 0x154121290 <col:21> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x1541213f8 <line:10:2, col:26> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x154121308 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1541212d0 <col:2> 'struct printer_dev *' contains-errors lvalue Var 0x154120db8 'dev' 'struct printer_dev *'     | `-UnaryOperator 0x1541213e0 <col:25, col:26> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x1541213c8 <col:26> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x1541213a8 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1541215c0 <line:11:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154121508 <col:2> 'int ()' Function 0x154121450 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x154121588 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x154121560 <col:26, col:31> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x154121528 <col:26> 'struct printer_dev *' contains-errors lvalue Var 0x154120db8 'dev' 'struct printer_dev *'     | `-DeclRefExpr 0x1541215a0 <col:37> 'unsigned long' lvalue Var 0x154120ec8 'flags' 'unsigned long'     |-CallExpr 0x1541217b8 <line:13:2, col:16> 'int' contains-errors     | |-ImplicitCastExpr 0x1541217a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1541216d0 <col:2> 'int ()' Function 0x154121618 'DBG' 'int ()'     | |-ImplicitCastExpr 0x1541217e8 <col:6> 'struct printer_dev *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x1541216f0 <col:6> 'struct printer_dev *' contains-errors lvalue Var 0x154120db8 'dev' 'struct printer_dev *'     | `-ImplicitCastExpr 0x154121800 <col:11> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x154121750 <col:11> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x154121838 <line:15:2, col:9>       `-IntegerLiteral 0x154121818 <col:9> 'int' 0 ","20780":"`-FunctionDecl 0x15b128558  line:1:1 invalid With 'int (int *, int *, int, int, int, int, int *)'   |-ParmVarDecl 0x15b128128 <col:6, col:17> col:17 invalid items 'int *'   |-ParmVarDecl 0x15b1281a8 <col:24, col:35> col:35 invalid body 'int *'   |-ParmVarDecl 0x15b128228 <col:41, col:45> col:45 used lineno 'int'   |-ParmVarDecl 0x15b1282a8 <col:53, col:57> col:57 used col_offset 'int'   |-ParmVarDecl 0x15b128328 <col:69, line:2:6> col:6 used end_lineno 'int'   |-ParmVarDecl 0x15b1283a8 <col:18, col:22> col:22 used end_col_offset 'int'   |-ParmVarDecl 0x15b128428 <col:38, col:47> col:47 invalid arena 'int *'   `-CompoundStmt 0x14b009e88 <line:3:1, line:16:1>     |-IfStmt 0x15b128730 <line:6:5, line:7:16>     | |-UnaryOperator 0x15b1286d0 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15b1286b8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15b128698 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15b128720 <line:7:9, col:16>     |   `-RecoveryExpr 0x15b128700 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14b009e78 <line:15:5, col:12>       `-RecoveryExpr 0x14b009e58 <col:12> '<dependent type>' contains-errors lvalue ","21053":"`-FunctionDecl 0x129144d48  line:1:12 aspeed_lpc_ctrl_mmap 'int (struct file *, struct vm_area_struct *)' static   |-ParmVarDecl 0x129128648 <col:33, col:46> col:46 used file 'struct file *'   |-ParmVarDecl 0x129144c28 <col:52, col:75> col:75 used vma 'struct vm_area_struct *'   `-CompoundStmt 0x129145b48 <line:2:1, line:19:1>     |-DeclStmt 0x129145248 <line:3:2, col:63>     | |-RecordDecl 0x129144e48 <col:2, col:9> col:9 struct aspeed_lpc_ctrl     | `-VarDecl 0x129144fb8 <col:2, col:62> col:26 used lpc_ctrl 'struct aspeed_lpc_ctrl *' cinit     |   `-ImplicitCastExpr 0x129145218 <col:37, col:62> 'struct aspeed_lpc_ctrl *' <IntegralToPointer>     |     `-CallExpr 0x1291451d8 <col:37, col:62> 'int'     |       |-ImplicitCastExpr 0x1291451c0 <col:37> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129145150 <col:37> 'int ()' Function 0x129145098 'file_aspeed_lpc_ctrl' 'int ()'     |       `-ImplicitCastExpr 0x129145200 <col:58> 'struct file *' <LValueToRValue>     |         `-DeclRefExpr 0x129145170 <col:58> 'struct file *' lvalue ParmVar 0x129128648 'file' 'struct file *'     |-DeclStmt 0x1291453c0 <line:4:2, col:51>     | `-VarDecl 0x129145278 <col:2, col:43> col:16 used vsize 'unsigned long' cinit     |   `-BinaryOperator 0x1291453a0 <col:24, col:43> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x129145318 <col:24, col:29> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1291452e0 <col:24> 'struct vm_area_struct *' lvalue ParmVar 0x129144c28 'vma' 'struct vm_area_struct *'     |     `-RecoveryExpr 0x129145378 <col:38, col:43> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x129145340 <col:38> 'struct vm_area_struct *' lvalue ParmVar 0x129144c28 'vma' 'struct vm_area_struct *'     |-IfStmt 0x129145620 <line:7:2, line:8:11>     | |-BinaryOperator 0x129145558 <line:7:6, col:61> 'int' contains-errors '>'     | | |-BinaryOperator 0x129145458 <col:6, col:22> '<dependent type>' contains-errors '+'     | | | |-RecoveryExpr 0x129145410 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1291453d8 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x129144c28 'vma' 'struct vm_area_struct *'     | | | `-DeclRefExpr 0x129145438 <col:22> 'unsigned long' contains-errors lvalue Var 0x129145278 'vsize' 'unsigned long'     | | `-BinaryOperator 0x129145538 <col:30, col:61> '<dependent type>' contains-errors '+'     | |   |-RecoveryExpr 0x1291454b0 <col:30, col:40> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x129145478 <col:30> 'struct aspeed_lpc_ctrl *' lvalue Var 0x129144fb8 'lpc_ctrl' 'struct aspeed_lpc_ctrl *'     | |   `-RecoveryExpr 0x129145510 <col:51, col:61> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1291454d8 <col:51> 'struct aspeed_lpc_ctrl *' lvalue Var 0x129144fb8 'lpc_ctrl' 'struct aspeed_lpc_ctrl *'     | `-ReturnStmt 0x129145610 <line:8:3, col:11>     |   `-UnaryOperator 0x1291455f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1291455e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1291455c0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129145af8 <line:13:2, line:16:11>     | |-RecoveryExpr 0x129145a30 <line:13:6, line:15:14> '_Bool' contains-errors     | `-ReturnStmt 0x129145ae8 <line:16:3, col:11>     |   `-UnaryOperator 0x129145ad0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x129145ab8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x129145a98 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x129145b38 <line:18:2, col:9>       `-IntegerLiteral 0x129145b18 <col:9> 'int' 0 ","21110":"`-FunctionDecl 0x11e00dd98  line:1:5 setup_tests 'int (void)'   `-CompoundStmt 0x11e00e220 <line:2:1, line:5:1>     |-CallExpr 0x11e00e1c0 <line:3:5, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e00dfb0 <col:5> 'int ()' Function 0x11e00def8 'ADD_ALL_TESTS' 'int ()'     | |-RecoveryExpr 0x11e00e158 <col:19> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x11e00e198 <col:34, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11e00e0c8 <col:34> 'int ()' Function 0x11e00e010 'OSSL_NELEM' 'int ()'     |   `-RecoveryExpr 0x11e00e178 <col:45> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11e00e210 <line:4:5, col:12>       `-IntegerLiteral 0x11e00e1f0 <col:12> 'int' 1 ","20618":"`-FunctionDecl 0x12e829f28  col:17 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12e82a028 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12e82a090 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12e82a0f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12e829fd0 <<invalid sloc>> Implicit 884 ","21256":"`-FunctionDecl 0x153808708  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x153808808 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x153808870 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1538088d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1538087b0 <<invalid sloc>> Implicit 882 ","21079":"`-FunctionDecl 0x12880daa8  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12880dba8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12880dc10 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12880dc78 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12880db50 <<invalid sloc>> Implicit 882 ","20389":"`-FunctionDecl 0x13000de88  line:1:5 invalid cdk_pk_get_keyid 'int (int, int *)'   |-ParmVarDecl 0x13000dcf0 <col:22, col:35> col:35 referenced invalid pk 'int'   |-ParmVarDecl 0x13000dda8 <col:39, col:45> col:45 referenced invalid keyid 'int *'   `-CompoundStmt 0x127922f60 <line:2:1, line:34:1>     |-IfStmt 0x130028270 <line:6:2, line:26:2>     | |-BinaryOperator 0x13000e180 <line:6:6, col:43> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x13000df40 <col:6> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x13000e160 <col:12, col:43> 'int' contains-errors     | |   `-BinaryOperator 0x13000e140 <col:13, col:42> 'int' contains-errors '||'     | |     |-UnaryOperator 0x13000e038 <col:13, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     | `-ImplicitCastExpr 0x13000e020 <col:14, col:25> '<dependent type>' contains-errors <LValueToRValue>     | |     |   `-ArraySubscriptExpr 0x13000e000 <col:14, col:25> '<dependent type>' contains-errors lvalue     | |     |     |-ImplicitCastExpr 0x13000dfe8 <col:14, col:18> '<dependent type>' contains-errors <LValueToRValue>     | |     |     | `-CXXDependentScopeMemberExpr 0x13000df80 <col:14, col:18> '<dependent type>' contains-errors lvalue ->keyid     | |     |     |   `-RecoveryExpr 0x13000df60 <col:14> '<dependent type>' contains-errors lvalue     | |     |     `-IntegerLiteral 0x13000dfc8 <col:24> 'int' 0     | |     `-UnaryOperator 0x13000e128 <col:30, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow     | |       `-ImplicitCastExpr 0x13000e110 <col:31, col:42> '<dependent type>' contains-errors <LValueToRValue>     | |         `-ArraySubscriptExpr 0x13000e0f0 <col:31, col:42> '<dependent type>' contains-errors lvalue     | |           |-ImplicitCastExpr 0x13000e0d8 <col:31, col:35> '<dependent type>' contains-errors <LValueToRValue>     | |           | `-CXXDependentScopeMemberExpr 0x13000e070 <col:31, col:35> '<dependent type>' contains-errors lvalue ->keyid     | |           |   `-RecoveryExpr 0x13000e050 <col:31> '<dependent type>' contains-errors lvalue     | |           `-IntegerLiteral 0x13000e0b8 <col:41> 'int' 1     | `-CompoundStmt 0x130028258 <col:46, line:26:2>     |   `-IfStmt 0x130028228 <line:7:3, line:25:3> has_else     |     |-BinaryOperator 0x130027470 <line:7:7, col:48> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x13000e228 <col:7, col:21> 'int' contains-errors '<'     |     | | |-CXXDependentScopeMemberExpr 0x13000e1c0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->version     |     | | | `-RecoveryExpr 0x13000e1a0 <col:7> '<dependent type>' contains-errors lvalue     |     | | `-IntegerLiteral 0x13000e208 <col:21> 'int' 4     |     | `-CallExpr 0x130027448 <col:26, col:48> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x13000e3a0 <col:26> 'int ()' Function 0x13000e2e8 'is_RSA' 'int ()'     |     |   `-CXXDependentScopeMemberExpr 0x130027400 <col:33, col:37> '<dependent type>' contains-errors lvalue ->pubkey_algo     |     |     `-RecoveryExpr 0x13000e3c0 <col:33> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x130027ce0 <col:51, line:21:3>     |     | |-UnaryExprOrTypeTraitExpr 0x1300274e8 <line:9:4, col:11> 'unsigned long' contains-errors sizeof     |     | | `-RecoveryExpr 0x1300274c8 <col:11> '<dependent type>' contains-errors lvalue     |     | `-CallExpr 0x130027828 <line:12:4, col:39> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x130027600 <col:4> 'int ()' Function 0x130027548 '_gnutls_mpi_print' 'int ()'     |     |   |-ArraySubscriptExpr 0x1300277b0 <col:22, col:31> '<dependent type>' contains-errors lvalue     |     |   | |-ImplicitCastExpr 0x130027798 <col:22, col:26> '<dependent type>' contains-errors <LValueToRValue>     |     |   | | `-CXXDependentScopeMemberExpr 0x130027640 <col:22, col:26> '<dependent type>' contains-errors lvalue ->mpi     |     |   | |   `-RecoveryExpr 0x130027620 <col:22> '<dependent type>' contains-errors lvalue     |     |   | `-IntegerLiteral 0x130027688 <col:30> 'int' 0     |     |   |-RecoveryExpr 0x1300277d0 <col:34> '<dependent type>' contains-errors lvalue     |     |   `-UnaryOperator 0x130027810 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |     `-RecoveryExpr 0x1300277f0 <col:38> '<dependent type>' contains-errors lvalue     |     `-IfStmt 0x130028208 <line:21:10, line:25:3>     |       |-BinaryOperator 0x130027d88 <line:21:14, col:29> 'int' contains-errors '=='     |       | |-CXXDependentScopeMemberExpr 0x130027d20 <col:14, col:18> '<dependent type>' contains-errors lvalue ->version     |       | | `-RecoveryExpr 0x130027d00 <col:14> '<dependent type>' contains-errors lvalue     |       | `-IntegerLiteral 0x130027d68 <col:29> 'int' 4     |       `-CompoundStmt 0x1300281f8 <col:32, line:25:3>     `-IfStmt 0x127922f40 <line:28:2, line:31:2>       |-BinaryOperator 0x127922c00 <line:28:6, col:15> 'int' contains-errors '&&'       | |-RecoveryExpr 0x1300283c0 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1300283e0 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x127922f20 <col:19, line:31:2>         |-BinaryOperator 0x127922d80 <line:29:3, col:25> '<dependent type>' contains-errors '='         | |-ArraySubscriptExpr 0x127922ca0 <col:3, col:10> '<dependent type>' contains-errors lvalue         | | |-ImplicitCastExpr 0x127922c88 <col:3> '<dependent type>' contains-errors <LValueToRValue>         | | | `-RecoveryExpr 0x127922c40 <col:3> '<dependent type>' contains-errors lvalue         | | |   `-DeclRefExpr 0x127922c20 <col:3> 'int *' lvalue ParmVar 0x13000dda8 'keyid' 'int *'         | | `-IntegerLiteral 0x127922c68 <col:9> 'int' 0         | `-ArraySubscriptExpr 0x127922d60 <col:14, col:25> '<dependent type>' contains-errors lvalue         |   |-ImplicitCastExpr 0x127922d48 <col:14, col:18> '<dependent type>' contains-errors <LValueToRValue>         |   | `-CXXDependentScopeMemberExpr 0x127922ce0 <col:14, col:18> '<dependent type>' contains-errors lvalue ->keyid         |   |   `-RecoveryExpr 0x127922cc0 <col:14> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x127922d28 <col:24> 'int' 0         `-BinaryOperator 0x127922f00 <line:30:3, col:25> '<dependent type>' contains-errors '='           |-ArraySubscriptExpr 0x127922e20 <col:3, col:10> '<dependent type>' contains-errors lvalue           | |-ImplicitCastExpr 0x127922e08 <col:3> '<dependent type>' contains-errors <LValueToRValue>           | | `-RecoveryExpr 0x127922dc0 <col:3> '<dependent type>' contains-errors lvalue           | |   `-DeclRefExpr 0x127922da0 <col:3> 'int *' lvalue ParmVar 0x13000dda8 'keyid' 'int *'           | `-IntegerLiteral 0x127922de8 <col:9> 'int' 1           `-ArraySubscriptExpr 0x127922ee0 <col:14, col:25> '<dependent type>' contains-errors lvalue             |-ImplicitCastExpr 0x127922ec8 <col:14, col:18> '<dependent type>' contains-errors <LValueToRValue>             | `-CXXDependentScopeMemberExpr 0x127922e60 <col:14, col:18> '<dependent type>' contains-errors lvalue ->keyid             |   `-RecoveryExpr 0x127922e40 <col:14> '<dependent type>' contains-errors lvalue             `-IntegerLiteral 0x127922ea8 <col:24> 'int' 1 ","20758":"`-FunctionDecl 0x1398274d8  line:1:1 invalid b64enc_start 'int (struct b64state *, int *, const char *)'   |-ParmVarDecl 0x13980e248 <col:15, col:32> col:32 used state 'struct b64state *'   |-ParmVarDecl 0x13980e318 <col:39, col:45> col:45 invalid fp 'int *'   |-ParmVarDecl 0x13980e398 <col:49, col:61> col:61 used title 'const char *'   `-CompoundStmt 0x139827838 <line:2:1, line:4:1>     `-ReturnStmt 0x139827828 <line:3:3, col:43>       `-CallExpr 0x1398277e8 <col:10, col:43> '<dependent type>' contains-errors         |-DeclRefExpr 0x1398276f0 <col:10> 'int ()' Function 0x139827638 'enc_start' 'int ()'         |-DeclRefExpr 0x139827710 <col:21> 'struct b64state *' lvalue ParmVar 0x13980e248 'state' 'struct b64state *'         |-RecoveryExpr 0x139827730 <col:28> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1398277c8 <col:32> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x139827768 <col:38> 'const char *' lvalue ParmVar 0x13980e398 'title' 'const char *' ","20773":"`-FunctionDecl 0x1539421b0  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1539422b0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x153942318 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x153942380 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x153942258 <<invalid sloc>> Implicit 882 ","21014":"`-FunctionDecl 0x15500df18  line:1:1 invalid goto_tabpage_tp 'int (int *, int, int)'   |-ParmVarDecl 0x15500dd28 <line:2:5, col:16> col:16 invalid tp 'int *'   |-ParmVarDecl 0x15500dda8 <line:3:5, col:10> col:10 used trigger_enter_autocmds 'int'   |-ParmVarDecl 0x15500de28 <line:4:5, col:10> col:10 used trigger_leave_autocmds 'int'   `-CompoundStmt 0x1550280a8 <line:5:1, line:19:1>     |-CallExpr 0x15500e1d8 <line:7:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15500e130 <col:5> 'int ()' Function 0x15500e078 'set_keep_msg' 'int ()'     | |-RecoveryExpr 0x15500e1b8 <col:18> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15500e168 <col:24> 'int' 0     `-IfStmt 0x155028088 <line:9:5, line:18:5>       |-BinaryOperator 0x155027b70 <line:9:9, line:10:33> 'int' contains-errors '&&'       | |-BinaryOperator 0x155027b10 <line:9:9, col:15> 'int' contains-errors '!='       | | |-RecoveryExpr 0x15500e208 <col:9> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x155027af0 <col:15> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x155027b50 <col:25, line:10:33> 'int' contains-errors '=='       |   |-CallExpr 0x155027a68 <line:9:25, line:10:28> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x15500e340 <line:9:25> 'int ()' Function 0x15500e288 'leave_tabpage' 'int ()'       |   | |-CXXDependentScopeMemberExpr 0x155027a00 <col:39, col:54> '<dependent type>' contains-errors lvalue ->w_buffer       |   | | `-CXXDependentScopeMemberExpr 0x15500e380 <col:39, col:43> '<dependent type>' contains-errors lvalue ->tp_curwin       |   | |   `-RecoveryExpr 0x15500e360 <col:39> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x155027a48 <line:10:6> 'int' lvalue ParmVar 0x15500de28 'trigger_leave_autocmds' 'int'       |   `-RecoveryExpr 0x155027b30 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x155028070 <line:11:5, line:18:5>         `-IfStmt 0x155028040 <line:12:2, line:17:29> has_else           |-CallExpr 0x155027cb0 <line:12:6, col:22> '<dependent type>' contains-errors           | |-DeclRefExpr 0x155027c70 <col:6> 'int ()' Function 0x155027bb8 'valid_tabpage' 'int ()'           | `-RecoveryExpr 0x155027c90 <col:20> '<dependent type>' contains-errors lvalue           |-CallExpr 0x155027eb0 <line:13:6, line:14:29> '<dependent type>' contains-errors           | |-DeclRefExpr 0x155027db8 <line:13:6> 'int ()' Function 0x155027d00 'enter_tabpage' 'int ()'           | |-RecoveryExpr 0x155027dd8 <col:20> '<dependent type>' contains-errors lvalue           | |-RecoveryExpr 0x155027e90 <col:24> '<dependent type>' contains-errors lvalue           | |-DeclRefExpr 0x155027e10 <col:32> 'int' lvalue ParmVar 0x15500dda8 'trigger_enter_autocmds' 'int'           | `-DeclRefExpr 0x155027e30 <line:14:7> 'int' lvalue ParmVar 0x15500de28 'trigger_leave_autocmds' 'int'           `-CallExpr 0x155028000 <line:16:6, line:17:29> '<dependent type>' contains-errors             |-DeclRefExpr 0x155027ef0 <line:16:6> 'int ()' Function 0x155027d00 'enter_tabpage' 'int ()'             |-RecoveryExpr 0x155027fc0 <col:20> '<dependent type>' contains-errors lvalue             |-RecoveryExpr 0x155027fe0 <col:28> '<dependent type>' contains-errors lvalue             |-DeclRefExpr 0x155027f40 <col:36> 'int' lvalue ParmVar 0x15500dda8 'trigger_enter_autocmds' 'int'             `-DeclRefExpr 0x155027f60 <line:17:7> 'int' lvalue ParmVar 0x15500de28 'trigger_leave_autocmds' 'int' ","20615":"`-FunctionDecl 0x151940a00  line:1:13 verify_event 'void (struct ring_buffer_per_cpu *, void *)' static   |-ParmVarDecl 0x151928648 <col:26, col:54> col:54 used cpu_buffer 'struct ring_buffer_per_cpu *'   |-ParmVarDecl 0x1519286c8 <line:2:5, col:11> col:11 used event 'void *'   `-CompoundStmt 0x152008bd0 <line:3:1, line:26:1>     |-DeclStmt 0x151940d48 <line:4:2, col:52>     | |-RecordDecl 0x151940b00 <col:2, col:9> col:9 struct buffer_page     | `-VarDecl 0x151940c68 <col:2, col:41> col:22 used page 'struct buffer_page *' cinit     |   `-RecoveryExpr 0x151940d08 <col:29, col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x151940cd0 <col:29> 'struct ring_buffer_per_cpu *' lvalue ParmVar 0x151928648 'cpu_buffer' 'struct ring_buffer_per_cpu *'     |-DeclStmt 0x151941028 <line:5:2, col:66>     | `-VarDecl 0x151940de8 <col:2, col:65> col:22 used tail_page 'struct buffer_page *' cinit     |   `-CallExpr 0x151941000 <col:34, col:65> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x151940f80 <col:34> 'int ()' Function 0x151940ec8 'READ_ONCE' 'int ()'     |     `-RecoveryExpr 0x151940fd8 <col:44, col:56> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x151940fa0 <col:44> 'struct ring_buffer_per_cpu *' lvalue ParmVar 0x151928648 'cpu_buffer' 'struct ring_buffer_per_cpu *'     |-DeclStmt 0x151941228 <line:6:2, col:24>     | |-RecordDecl 0x151941040 <col:2, col:9> col:9 struct list_head     | `-VarDecl 0x1519411a8 <col:2, col:20> col:20 used next 'struct list_head *'     |-DeclStmt 0x151941358 <line:7:2, col:20>     | |-VarDecl 0x151941258 <col:2, col:7> col:7 used commit 'long'     | `-VarDecl 0x1519412d8 <col:2, col:15> col:15 used write 'long'     |-DeclStmt 0x151941468 <line:8:2, col:43>     | `-VarDecl 0x151941388 <col:2, col:38> col:16 used addr 'unsigned long' cinit     |   `-CStyleCastExpr 0x151941440 <col:23, col:38> 'unsigned long' <PointerToIntegral>     |     `-ImplicitCastExpr 0x151941428 <col:38> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x1519413f0 <col:38> 'void *' lvalue ParmVar 0x1519286c8 'event' 'void *'     |-DeclStmt 0x151941520 <line:10:2, col:14>     | `-VarDecl 0x151941498 <col:2, col:13> col:6 used stop 'int' cinit     |   `-IntegerLiteral 0x151941500 <col:13> 'int' 0     |-DoStmt 0x152008b30 <line:13:2, line:24:16>     | |-CompoundStmt 0x152008a68 <line:13:5, line:24:2>     | | |-BinaryOperator 0x152008200 <line:16:3, col:42> 'long' contains-errors '='     | | | |-DeclRefExpr 0x1519417e8 <col:3> 'long' lvalue Var 0x151941258 'commit' 'long'     | | | `-CallExpr 0x1519419c8 <col:12, col:42> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1519418e8 <col:12> 'int ()' Function 0x151941830 'local_read' 'int ()'     | | |   `-UnaryOperator 0x1519419b0 <col:23, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-CXXDependentScopeMemberExpr 0x151941968 <col:24, col:36> '<dependent type>' contains-errors lvalue ->commit     | | |       `-RecoveryExpr 0x151941940 <col:24, col:30> '<dependent type>' contains-errors lvalue     | | |         `-DeclRefExpr 0x151941908 <col:24> 'struct buffer_page *' contains-errors lvalue Var 0x151940c68 'page' 'struct buffer_page *'     | | |-BinaryOperator 0x152008300 <line:17:3, col:34> 'long' contains-errors '='     | | | |-DeclRefExpr 0x152008220 <col:3> 'long' lvalue Var 0x1519412d8 'write' 'long'     | | | `-CallExpr 0x1520082d8 <col:11, col:34> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x152008240 <col:11> 'int ()' Function 0x151941830 'local_read' 'int ()'     | | |   `-UnaryOperator 0x1520082c0 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x152008298 <col:23, col:29> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x152008260 <col:23> 'struct buffer_page *' contains-errors lvalue Var 0x151940c68 'page' 'struct buffer_page *'     | | |-IfStmt 0x1520086e0 <line:18:3, line:20:4>     | | | |-BinaryOperator 0x1520086b0 <line:18:7, line:19:52> 'int' contains-errors '&&'     | | | | |-BinaryOperator 0x1520084c8 <line:18:7, col:54> 'int' contains-errors '>='     | | | | | |-ImplicitCastExpr 0x1520084b0 <col:7> 'unsigned long' <LValueToRValue>     | | | | | | `-DeclRefExpr 0x152008320 <col:7> 'unsigned long' lvalue Var 0x151941388 'addr' 'unsigned long'     | | | | | `-CStyleCastExpr 0x152008488 <col:15, col:54> 'unsigned long' contains-errors <Dependent>     | | | | |   `-UnaryOperator 0x152008458 <col:30, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | |     `-ArraySubscriptExpr 0x152008438 <col:31, col:54> '<dependent type>' contains-errors lvalue     | | | | |       |-ImplicitCastExpr 0x152008408 <col:31, col:43> '<dependent type>' contains-errors <LValueToRValue>     | | | | |       | `-CXXDependentScopeMemberExpr 0x1520083a0 <col:31, col:43> '<dependent type>' contains-errors lvalue ->data     | | | | |       |   `-RecoveryExpr 0x152008378 <col:31, col:37> '<dependent type>' contains-errors lvalue     | | | | |       |     `-DeclRefExpr 0x152008340 <col:31> 'struct buffer_page *' contains-errors lvalue Var 0x151940c68 'page' 'struct buffer_page *'     | | | | |       `-ImplicitCastExpr 0x152008420 <col:48> 'long' <LValueToRValue>     | | | | |         `-DeclRefExpr 0x1520083e8 <col:48> 'long' lvalue Var 0x151941258 'commit' 'long'     | | | | `-BinaryOperator 0x152008690 <line:19:7, col:52> 'int' contains-errors '<'     | | | |   |-ImplicitCastExpr 0x152008678 <col:7> 'unsigned long' <LValueToRValue>     | | | |   | `-DeclRefExpr 0x1520084e8 <col:7> 'unsigned long' lvalue Var 0x151941388 'addr' 'unsigned long'     | | | |   `-CStyleCastExpr 0x152008650 <col:14, col:52> 'unsigned long' contains-errors <Dependent>     | | | |     `-UnaryOperator 0x152008620 <col:29, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | |       `-ArraySubscriptExpr 0x152008600 <col:30, col:52> '<dependent type>' contains-errors lvalue     | | | |         |-ImplicitCastExpr 0x1520085d0 <col:30, col:42> '<dependent type>' contains-errors <LValueToRValue>     | | | |         | `-CXXDependentScopeMemberExpr 0x152008568 <col:30, col:42> '<dependent type>' contains-errors lvalue ->data     | | | |         |   `-RecoveryExpr 0x152008540 <col:30, col:36> '<dependent type>' contains-errors lvalue     | | | |         |     `-DeclRefExpr 0x152008508 <col:30> 'struct buffer_page *' contains-errors lvalue Var 0x151940c68 'page' 'struct buffer_page *'     | | | |         `-ImplicitCastExpr 0x1520085e8 <col:47> 'long' <LValueToRValue>     | | | |           `-DeclRefExpr 0x1520085b0 <col:47> 'long' lvalue Var 0x1519412d8 'write' 'long'     | | | `-ReturnStmt 0x1520086d0 <line:20:4>     | | `-BinaryOperator 0x1520088f0 <line:22:3, col:38> 'struct list_head *' contains-errors '='     | |   |-DeclRefExpr 0x152008700 <col:3> 'struct list_head *' lvalue Var 0x1519411a8 'next' 'struct list_head *'     | |   `-CallExpr 0x1520088c8 <col:10, col:38> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x152008800 <col:10> 'int ()' Function 0x152008748 'rb_list_head' 'int ()'     | |     `-CXXDependentScopeMemberExpr 0x152008880 <col:23, col:34> '<dependent type>' contains-errors lvalue .next     | |       `-RecoveryExpr 0x152008858 <col:23, col:29> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x152008820 <col:23> 'struct buffer_page *' contains-errors lvalue Var 0x151940c68 'page' 'struct buffer_page *'     | `-UnaryOperator 0x152008b18 <line:24:11, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-ImplicitCastExpr 0x152008b00 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x152008ae0 <col:12> '<dependent type>' contains-errors lvalue     `-CallExpr 0x152008ba8 <line:25:2, col:16> 'int'       |-ImplicitCastExpr 0x152008b90 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x152008b50 <col:2> 'int ()' Function 0x1519415f0 'WARN_ON_ONCE' 'int ()'       `-IntegerLiteral 0x152008b70 <col:15> 'int' 1 ","20944":"`-FunctionDecl 0x12f940b40  line:1:13 __fanout_link 'void (struct sock *, struct packet_sock *)' static   |-ParmVarDecl 0x12f928648 <col:27, col:40> col:40 used sk 'struct sock *'   |-ParmVarDecl 0x12f940a28 <col:44, col:64> col:64 used po 'struct packet_sock *'   `-CompoundStmt 0x12f941560 <line:2:1, line:10:1>     |-DeclStmt 0x12f940e88 <line:3:2, col:38>     | |-RecordDecl 0x12f940c40 <col:2, col:9> col:9 struct packet_fanout     | `-VarDecl 0x12f940da8 <col:2, col:32> col:24 used f 'struct packet_fanout *' cinit     |   `-RecoveryExpr 0x12f940e48 <col:28, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f940e10 <col:28> 'struct packet_sock *' lvalue ParmVar 0x12f940a28 'po' 'struct packet_sock *'     |-CallExpr 0x12f941068 <line:5:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f940fd0 <col:2> 'int ()' Function 0x12f940f18 'spin_lock' 'int ()'     | `-UnaryOperator 0x12f941050 <col:12, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f941028 <col:13, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f940ff0 <col:13> 'struct packet_fanout *' contains-errors lvalue Var 0x12f940da8 'f' 'struct packet_fanout *'     |-BinaryOperator 0x12f9411c0 <line:6:2, col:27> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x12f941180 <col:2, col:23> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x12f941150 <col:2, col:5> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x12f9410c8 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x12f941090 <col:2> 'struct packet_fanout *' contains-errors lvalue Var 0x12f940da8 'f' 'struct packet_fanout *'     | | `-ImplicitCastExpr 0x12f941168 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12f941128 <col:9, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12f9410f0 <col:9> 'struct packet_fanout *' contains-errors lvalue Var 0x12f940da8 'f' 'struct packet_fanout *'     | `-DeclRefExpr 0x12f9411a0 <col:27> 'struct sock *' lvalue ParmVar 0x12f928648 'sk' 'struct sock *'     |-CallExpr 0x12f941328 <line:7:2, col:10> 'int'     | `-ImplicitCastExpr 0x12f941310 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12f9412c0 <col:2> 'int ()' Function 0x12f941208 'smp_wmb' 'int ()'     |-UnaryOperator 0x12f9413a8 <line:8:2, col:16> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x12f941380 <col:2, col:5> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12f941348 <col:2> 'struct packet_fanout *' contains-errors lvalue Var 0x12f940da8 'f' 'struct packet_fanout *'     `-CallExpr 0x12f941538 <line:9:2, col:22> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f9414a0 <col:2> 'int ()' Function 0x12f9413e8 'spin_unlock' 'int ()'       `-UnaryOperator 0x12f941520 <col:14, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x12f9414f8 <col:15, col:18> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x12f9414c0 <col:15> 'struct packet_fanout *' contains-errors lvalue Var 0x12f940da8 'f' 'struct packet_fanout *' ","21027":"`-FunctionDecl 0x13100df18  line:1:16 invalid trace_exit_cp 'int *(int *, int, void *)' static   |-ParmVarDecl 0x13100dd28 <col:30, col:41> col:41 invalid L 'int *'   |-ParmVarDecl 0x13100dda8 <col:44, col:58> col:58 invalid dummy 'int'   |-ParmVarDecl 0x13100de28 <col:65, col:71> col:71 ud 'void *'   `-CompoundStmt 0x131027c08 <line:2:1, line:8:1>     |-BinaryOperator 0x13100e248 <line:4:3, col:32> '<dependent type>' contains-errors '='     | |-CallExpr 0x13100e1e8 <col:3, col:27> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13100e160 <col:3> 'int ()' Function 0x13100e0a8 'cframe_errfunc' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x13100e1a0 <col:18, col:21> '<dependent type>' contains-errors lvalue ->cframe     | |   `-RecoveryExpr 0x13100e180 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13100e230 <col:31, col:32> 'int' prefix '-'     |   `-IntegerLiteral 0x13100e210 <col:32> 'int' 1     |-CallExpr 0x131027b98 <line:6:3, col:15> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131027b58 <col:3> 'int ()' Function 0x131027aa0 'UNUSED' 'int ()'     | `-RecoveryExpr 0x131027b78 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x131027bf8 <line:7:3, col:10>       `-RecoveryExpr 0x131027bd8 <col:10> '<dependent type>' contains-errors lvalue ","20340":"`-FunctionDecl 0x154128238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x154128158 <col:12> col:12 RecursiveDirectoryIterator 'int'   |-ParmVarDecl 0x1541280d8 <col:40> col:40 getSubPathname 'int'   `-CompoundStmt 0x154140a00 <line:2:1, line:18:1>     |-DeclStmt 0x154128400 <line:4:2, col:16>     | `-VarDecl 0x154128398 <col:2, col:8> col:8 used sub_name 'char *'     |-DeclStmt 0x154128498 <line:5:2, col:9>     | `-VarDecl 0x154128430 <col:2, col:6> col:6 used len 'int'     |-DeclStmt 0x154808680 <line:6:2, col:88>     | `-VarDecl 0x1541284c0 <col:2, col:75> col:7 used slash 'char' cinit     |   `-ConditionalOperator 0x154808650 <col:15, col:75> '<dependent type>' contains-errors     |     |-CallExpr 0x154808600 <col:15, col:65> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x154128640 <col:15> 'int ()' Function 0x154128588 'SPL_HAS_FLAG' 'int ()'     |     | |-CXXDependentScopeMemberExpr 0x154128788 <col:28, col:36> '<dependent type>' contains-errors lvalue ->flags     |     | | `-RecoveryExpr 0x154128768 <col:28> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x1541287d0 <col:43> '<dependent type>' contains-errors lvalue     |     |-CharacterLiteral 0x154128708 <col:69> 'int' 47     |     `-RecoveryExpr 0x154808630 <col:75> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154808918 <line:8:2, line:10:2>     | |-BinaryOperator 0x1548088d0 <line:8:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x154808890 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x154808878 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x154808778 <col:6> 'int ()' Function 0x1548086c0 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x1548088b0 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x154808900 <col:47, line:10:2>     |   `-ReturnStmt 0x1548088f0 <line:9:3>     `-IfStmt 0x1548095c0 <line:12:2, line:17:2> has_else       |-CXXDependentScopeMemberExpr 0x154808ad8 <line:12:6, col:20> '<dependent type>' contains-errors lvalue .sub_path       | `-CXXDependentScopeMemberExpr 0x154808a90 <col:6, col:16> '<dependent type>' contains-errors lvalue .dir       |   `-CXXDependentScopeMemberExpr 0x154808a48 <col:6, col:14> '<dependent type>' contains-errors lvalue ->u       |     `-RecoveryExpr 0x154808a28 <col:6> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x154809470 <col:30, line:15:2>       | |-BinaryOperator 0x154809270 <line:13:3, col:96> 'int' contains-errors '='       | | |-DeclRefExpr 0x154808b20 <col:3> 'int' lvalue Var 0x154128430 'len' 'int'       | | `-CallExpr 0x154809220 <col:9, col:96> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x154808c20 <col:9> 'int ()' Function 0x154808b68 'spprintf' 'int ()'       | |   |-UnaryOperator 0x154808c90 <col:18, col:19> 'char **' prefix '&' cannot overflow       | |   | `-DeclRefExpr 0x154808c40 <col:19> 'char *' lvalue Var 0x154128398 'sub_name' 'char *'       | |   |-IntegerLiteral 0x154808ca8 <col:29> 'int' 0       | |   |-StringLiteral 0x154808d10 <col:32> 'char[4]' lvalue \"STR\"       | |   |-CXXDependentScopeMemberExpr 0x154809098 <col:39, col:53> '<dependent type>' contains-errors lvalue .sub_path       | |   | `-CXXDependentScopeMemberExpr 0x154809050 <col:39, col:49> '<dependent type>' contains-errors lvalue .dir       | |   |   `-CXXDependentScopeMemberExpr 0x154809008 <col:39, col:47> '<dependent type>' contains-errors lvalue ->u       | |   |     `-RecoveryExpr 0x154808fe8 <col:39> '<dependent type>' contains-errors lvalue       | |   |-DeclRefExpr 0x154808e20 <col:63> 'char' contains-errors lvalue Var 0x1541284c0 'slash' 'char'       | |   `-CXXDependentScopeMemberExpr 0x1548091d8 <col:70, col:90> '<dependent type>' contains-errors lvalue .d_name       | |     `-CXXDependentScopeMemberExpr 0x154809190 <col:70, col:84> '<dependent type>' contains-errors lvalue .entry       | |       `-CXXDependentScopeMemberExpr 0x154809148 <col:70, col:80> '<dependent type>' contains-errors lvalue .dir       | |         `-CXXDependentScopeMemberExpr 0x154809100 <col:70, col:78> '<dependent type>' contains-errors lvalue ->u       | |           `-RecoveryExpr 0x1548090e0 <col:70> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x154809408 <line:14:3, col:34> 'int'       |   |-ImplicitCastExpr 0x1548093f0 <col:3> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x154809370 <col:3> 'int ()' Function 0x1548092b8 'RETURN_STRINGL' 'int ()'       |   |-ImplicitCastExpr 0x154809440 <col:18> 'char *' <LValueToRValue>       |   | `-DeclRefExpr 0x154809390 <col:18> 'char *' lvalue Var 0x154128398 'sub_name' 'char *'       |   |-ImplicitCastExpr 0x154809458 <col:28> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x1548093b0 <col:28> 'int' lvalue Var 0x154128430 'len' 'int'       |   `-IntegerLiteral 0x1548093d0 <col:33> 'int' 0       `-CompoundStmt 0x1548095b0 <line:15:9, line:17:2> ","21022":"`-FunctionDecl 0x14e928750  line:1:6 neigh_sysctl_unregister 'void (struct neigh_parms *)'   |-ParmVarDecl 0x14e928648 <col:30, col:50> col:50 used p 'struct neigh_parms *'   `-CompoundStmt 0x14e941300 <line:2:1, line:10:1>     `-IfStmt 0x14e9412e0 <line:3:2, line:9:2>       |-RecoveryExpr 0x14e940a80 <line:3:6, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14e940a48 <col:6> 'struct neigh_parms *' lvalue ParmVar 0x14e928648 'p' 'struct neigh_parms *'       `-CompoundStmt 0x14e9412a8 <col:23, line:9:2>         |-DeclStmt 0x14e940cf8 <line:4:3, col:49>         | |-RecordDecl 0x14e940aa8 <col:3, col:10> col:10 struct neigh_sysctl_table         | `-VarDecl 0x14e940c18 <col:3, col:37> col:30 used t 'struct neigh_sysctl_table *' cinit         |   `-RecoveryExpr 0x14e940cb8 <col:34, col:37> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14e940c80 <col:34> 'struct neigh_parms *' lvalue ParmVar 0x14e928648 'p' 'struct neigh_parms *'         |-BinaryOperator 0x14e940de0 <line:5:3, col:21> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x14e940d48 <col:3, col:6> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x14e940d10 <col:3> 'struct neigh_parms *' lvalue ParmVar 0x14e928648 'p' 'struct neigh_parms *'         | `-RecoveryExpr 0x14e940dc0 <col:21> '<dependent type>' contains-errors lvalue         |-CallExpr 0x14e940f90 <line:6:3, col:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14e940f10 <col:3> 'int ()' Function 0x14e940e58 'unregister_sysctl_table' 'int ()'         | `-RecoveryExpr 0x14e940f68 <col:27, col:30> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14e940f30 <col:27> 'struct neigh_sysctl_table *' contains-errors lvalue Var 0x14e940c18 't' 'struct neigh_sysctl_table *'         |-CallExpr 0x14e9411b8 <line:7:3, col:33> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14e941098 <col:3> 'int ()' Function 0x14e940fe0 'kfree' 'int ()'         | `-CXXDependentScopeMemberExpr 0x14e941170 <col:9, col:25> '<dependent type>' contains-errors lvalue .procname         |   `-ArraySubscriptExpr 0x14e941150 <col:9, col:23> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x14e941138 <col:9, col:12> '<dependent type>' contains-errors <LValueToRValue>         |     | `-RecoveryExpr 0x14e9410f0 <col:9, col:12> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x14e9410b8 <col:9> 'struct neigh_sysctl_table *' contains-errors lvalue Var 0x14e940c18 't' 'struct neigh_sysctl_table *'         |     `-IntegerLiteral 0x14e941118 <col:22> 'int' 0         `-CallExpr 0x14e941268 <line:8:3, col:10> 'int' contains-errors           |-ImplicitCastExpr 0x14e941250 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14e9411e0 <col:3> 'int ()' Function 0x14e940fe0 'kfree' 'int ()'           `-ImplicitCastExpr 0x14e941290 <col:9> 'struct neigh_sysctl_table *' contains-errors <LValueToRValue>             `-DeclRefExpr 0x14e941200 <col:9> 'struct neigh_sysctl_table *' contains-errors lvalue Var 0x14e940c18 't' 'struct neigh_sysctl_table *' ","20573":"`-FunctionDecl 0x14c00dfa8  line:1:1 invalid mp_fast_close_print 'int (int *, const char *, int, char)'   |-ParmVarDecl 0x14c00dd28 <col:21, col:41> col:41 invalid ndo 'int *'   |-ParmVarDecl 0x14c00dda8 <line:2:21, col:35> col:35 opt 'const char *'   |-ParmVarDecl 0x14c00de28 <col:40, col:46> col:46 invalid opt_len 'int'   |-ParmVarDecl 0x14c00dea0 <col:55, col:62> col:62 flags 'char'   `-CompoundStmt 0x14c00e398 <line:3:1, line:9:1>     |-IfStmt 0x14c00e100 <line:4:9, line:5:24>     | |-BinaryOperator 0x14c00e0b0 <line:4:13, col:24> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14c00e070 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14c00e090 <col:24> 'int' 12     | `-ReturnStmt 0x14c00e0f0 <line:5:17, col:24>     |   `-IntegerLiteral 0x14c00e0d0 <col:24> 'int' 0     |-CallExpr 0x14c00e340 <line:7:9, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c00e280 <col:9> 'int ()' Function 0x14c00e1c8 'ND_PRINT' 'int ()'     | `-BinaryOperator 0x14c00e320 <col:19, col:24> 'char[4]' contains-errors ','     |   |-RecoveryExpr 0x14c00e2a0 <col:19> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x14c00e300 <col:24> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x14c00e388 <line:8:9, col:16>       `-IntegerLiteral 0x14c00e368 <col:16> 'int' 1 ","20494":"`-FunctionDecl 0x14b00df68  line:1:20 invalid ResizeQuantumMemory 'int *(void *, const int, const int)'   |-ParmVarDecl 0x14b00dcf0 <col:40, col:46> col:46 used memory 'void *'   |-ParmVarDecl 0x14b00dd70 <col:53, col:66> col:66 invalid count 'const int'   |-ParmVarDecl 0x14b00ddf0 <line:2:3, col:16> col:16 invalid quantum 'const int'   `-CompoundStmt 0x14b027e98 <line:3:1, line:15:1>     |-UnaryExprOrTypeTraitExpr 0x14b00e080 <line:4:3, line:5:5> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x14b00e060 <col:5> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14b027d10 <line:8:3, line:13:5>       |-RecoveryExpr 0x14b00e1f8 <line:8:7, col:47> '_Bool' contains-errors       `-CompoundStmt 0x14b027cf8 <line:9:5, line:13:5>         `-BinaryOperator 0x14b027c90 <line:10:7, col:43> 'void *' '='           |-DeclRefExpr 0x14b00e218 <col:7> 'void *' lvalue ParmVar 0x14b00dcf0 'memory' 'void *'           `-ImplicitCastExpr 0x14b027858 <col:14, col:43> 'void *' <IntegralToPointer>             `-CallExpr 0x14b027818 <col:14, col:43> 'int'               |-ImplicitCastExpr 0x14b027800 <col:14> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x14b00e390 <col:14> 'int ()' Function 0x14b00e2d8 'RelinquishMagickMemory' 'int ()'               `-ImplicitCastExpr 0x14b027840 <col:37> 'void *' <LValueToRValue>                 `-DeclRefExpr 0x14b00e3b0 <col:37> 'void *' lvalue ParmVar 0x14b00dcf0 'memory' 'void *' ","20328":"`-FunctionDecl 0x13c928da8  line:1:1 PHP_MINIT_FUNCTION 'int (int)'   |-ParmVarDecl 0x13c928cd8 <col:20> col:20 xml 'int'   `-CompoundStmt 0x13c943ec0 <line:2:1, line:46:1>     |-CallExpr 0x13c929318 <line:5:2, col:73> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c9291b8 <col:2> 'int ()' Function 0x13c929100 'REGISTER_LONG_CONSTANT' 'int ()'     | |-StringLiteral 0x13c9291d8 <col:25> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x13c929298 <col:32> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13c9292f8 <col:48, col:57> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x13c9292b8 <col:48> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13c9292d8 <col:57> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c9434b8 <line:6:2, col:78> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c929350 <col:2> 'int ()' Function 0x13c929100 'REGISTER_LONG_CONSTANT' 'int ()'     | |-StringLiteral 0x13c929370 <col:25> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x13c943438 <col:32> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13c943498 <col:53, col:62> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x13c943458 <col:53> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13c943478 <col:62> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c943650 <line:7:2, col:75> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c9434f0 <col:2> 'int ()' Function 0x13c929100 'REGISTER_LONG_CONSTANT' 'int ()'     | |-StringLiteral 0x13c943510 <col:25> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x13c9435d0 <col:32> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13c943630 <col:50, col:59> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x13c9435f0 <col:50> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13c943610 <col:59> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13c9437e8 <line:8:2, col:80> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c943688 <col:2> 'int ()' Function 0x13c929100 'REGISTER_LONG_CONSTANT' 'int ()'       |-StringLiteral 0x13c9436a8 <col:25> 'char[4]' lvalue \"STR\"       |-RecoveryExpr 0x13c943768 <col:32> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x13c9437c8 <col:55, col:64> '<dependent type>' contains-errors '|'         |-RecoveryExpr 0x13c943788 <col:55> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13c9437a8 <col:64> '<dependent type>' contains-errors lvalue ","21021":"`-FunctionDecl 0x12d0c6510  col:13 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x12d0c6610 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12d0c6678 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x12d0c65b8 <<invalid sloc>> Implicit 893 ","20297":"`-FunctionDecl 0x145026748  line:1:12 vmx_set_msr 'int (struct kvm_vcpu *, struct msr_data *)' static   |-ParmVarDecl 0x14500e248 <col:24, col:41> col:41 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x145026628 <col:47, col:64> col:64 used msr_info 'struct msr_data *'   `-CompoundStmt 0x145026fb0 <line:2:1, line:91:1>     |-DeclStmt 0x145026c48 <line:3:2, col:37>     | |-RecordDecl 0x145026848 <col:2, col:9> col:9 struct vcpu_vmx     | `-VarDecl 0x1450269b8 <col:2, col:36> col:19 vmx 'struct vcpu_vmx *' cinit     |   `-ImplicitCastExpr 0x145026c18 <col:25, col:36> 'struct vcpu_vmx *' <IntegralToPointer>     |     `-CallExpr 0x145026bd8 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x145026bc0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x145026b50 <col:25> 'int ()' Function 0x145026a98 'to_vmx' 'int ()'     |       `-ImplicitCastExpr 0x145026c00 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x145026b70 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x14500e248 'vcpu' 'struct kvm_vcpu *'     |-DeclStmt 0x145026e48 <line:4:2, col:30>     | |-RecordDecl 0x145026c60 <col:2, col:9> col:9 struct shared_msr_entry     | `-VarDecl 0x145026dc8 <col:2, col:27> col:27 msr 'struct shared_msr_entry *'     |-DeclStmt 0x145026f00 <line:5:2, col:13>     | `-VarDecl 0x145026e78 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x145026ee0 <col:12> 'int' 0     `-ReturnStmt 0x145026fa0 <line:90:2, col:9>       `-ImplicitCastExpr 0x145026f88 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x145026f68 <col:9> 'int' lvalue Var 0x145026e78 'ret' 'int' ","20480":"`-FunctionDecl 0x1490267c8  line:1:34 ifb_stats64 'struct rtnl_link_stats64 *(struct net_device *, struct rtnl_link_stats64 *)' static   |-ParmVarDecl 0x14900e2e8 <col:46, col:65> col:65 used dev 'struct net_device *'   |-ParmVarDecl 0x149026628 <line:2:11, col:37> col:37 used stats 'struct rtnl_link_stats64 *'   `-CompoundStmt 0x1490291c8 <line:3:1, line:25:1>     |-DeclStmt 0x149026cc8 <line:4:2, col:43>     | |-RecordDecl 0x1490268c8 <col:2, col:9> col:9 struct ifb_private     | `-VarDecl 0x149026a38 <col:2, col:42> col:22 used dp 'struct ifb_private *' cinit     |   `-ImplicitCastExpr 0x149026c98 <col:27, col:42> 'struct ifb_private *' <IntegralToPointer>     |     `-CallExpr 0x149026c58 <col:27, col:42> 'int'     |       |-ImplicitCastExpr 0x149026c40 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x149026bd0 <col:27> 'int ()' Function 0x149026b18 'netdev_priv' 'int ()'     |       `-ImplicitCastExpr 0x149026c80 <col:39> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x149026bf0 <col:39> 'struct net_device *' lvalue ParmVar 0x14900e2e8 'dev' 'struct net_device *'     |-DeclStmt 0x149026d60 <line:5:2, col:20>     | `-VarDecl 0x149026cf8 <col:2, col:15> col:15 used start 'unsigned int'     |-DoStmt 0x149027308 <line:7:2, line:11:54>     | |-CompoundStmt 0x149027118 <line:7:5, line:11:2>     | | |-BinaryOperator 0x149026f38 <line:8:3, col:46> 'unsigned int' contains-errors '='     | | | |-DeclRefExpr 0x149026d78 <col:3> 'unsigned int' lvalue Var 0x149026cf8 'start' 'unsigned int'     | | | `-CallExpr 0x149026f10 <col:11, col:46> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x149026e78 <col:11> 'int ()' Function 0x149026dc0 'u64_stats_fetch_begin_bh' 'int ()'     | | |   `-UnaryOperator 0x149026ef8 <col:36, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x149026ed0 <col:37, col:41> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x149026e98 <col:37> 'struct ifb_private *' lvalue Var 0x149026a38 'dp' 'struct ifb_private *'     | | |-BinaryOperator 0x149027018 <line:9:3, col:27> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x149026f90 <col:3, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x149026f58 <col:3> 'struct rtnl_link_stats64 *' lvalue ParmVar 0x149026628 'stats' 'struct rtnl_link_stats64 *'     | | | `-RecoveryExpr 0x149026ff0 <col:23, col:27> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x149026fb8 <col:23> 'struct ifb_private *' lvalue Var 0x149026a38 'dp' 'struct ifb_private *'     | | `-BinaryOperator 0x1490270f8 <line:10:3, col:25> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x149027070 <col:3, col:10> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x149027038 <col:3> 'struct rtnl_link_stats64 *' lvalue ParmVar 0x149026628 'stats' 'struct rtnl_link_stats64 *'     | |   `-RecoveryExpr 0x1490270d0 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x149027098 <col:21> 'struct ifb_private *' lvalue Var 0x149026a38 'dp' 'struct ifb_private *'     | `-CallExpr 0x1490272d8 <line:11:11, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149027220 <col:11> 'int ()' Function 0x149027168 'u64_stats_fetch_retry_bh' 'int ()'     |   |-UnaryOperator 0x1490272a0 <col:36, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x149027278 <col:37, col:41> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149027240 <col:37> 'struct ifb_private *' lvalue Var 0x149026a38 'dp' 'struct ifb_private *'     |   `-DeclRefExpr 0x1490272b8 <col:48> 'unsigned int' lvalue Var 0x149026cf8 'start' 'unsigned int'     |-DoStmt 0x149028f10 <line:13:2, line:19:54>     | |-CompoundStmt 0x149028e00 <line:13:5, line:19:2>     | | |-BinaryOperator 0x149027408 <line:14:3, col:46> 'unsigned int' contains-errors '='     | | | |-DeclRefExpr 0x149027328 <col:3> 'unsigned int' lvalue Var 0x149026cf8 'start' 'unsigned int'     | | | `-CallExpr 0x1490273e0 <col:11, col:46> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x149027348 <col:11> 'int ()' Function 0x149026dc0 'u64_stats_fetch_begin_bh' 'int ()'     | | |   `-UnaryOperator 0x1490273c8 <col:36, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x1490273a0 <col:37, col:41> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x149027368 <col:37> 'struct ifb_private *' lvalue Var 0x149026a38 'dp' 'struct ifb_private *'     | | |-BinaryOperator 0x1490274e8 <line:16:3, col:27> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x149027460 <col:3, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x149027428 <col:3> 'struct rtnl_link_stats64 *' lvalue ParmVar 0x149026628 'stats' 'struct rtnl_link_stats64 *'     | | | `-RecoveryExpr 0x1490274c0 <col:23, col:27> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x149027488 <col:23> 'struct ifb_private *' lvalue Var 0x149026a38 'dp' 'struct ifb_private *'     | | `-BinaryOperator 0x1490275c8 <line:17:3, col:25> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x149027540 <col:3, col:10> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x149027508 <col:3> 'struct rtnl_link_stats64 *' lvalue ParmVar 0x149026628 'stats' 'struct rtnl_link_stats64 *'     | |   `-RecoveryExpr 0x1490275a0 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x149027568 <col:21> 'struct ifb_private *' lvalue Var 0x149026a38 'dp' 'struct ifb_private *'     | `-CallExpr 0x149028ee0 <line:19:11, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149028e28 <col:11> 'int ()' Function 0x149027168 'u64_stats_fetch_retry_bh' 'int ()'     |   |-UnaryOperator 0x149028ea8 <col:36, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x149028e80 <col:37, col:41> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x149028e48 <col:37> 'struct ifb_private *' lvalue Var 0x149026a38 'dp' 'struct ifb_private *'     |   `-DeclRefExpr 0x149028ec0 <col:48> 'unsigned int' lvalue Var 0x149026cf8 'start' 'unsigned int'     |-BinaryOperator 0x149029038 <line:21:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x149028f68 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149028f30 <col:2> 'struct rtnl_link_stats64 *' lvalue ParmVar 0x149026628 'stats' 'struct rtnl_link_stats64 *'     | `-CXXDependentScopeMemberExpr 0x149028ff0 <col:22, col:33> '<dependent type>' contains-errors lvalue .rx_dropped     |   `-RecoveryExpr 0x149028fc8 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x149028f90 <col:22> 'struct net_device *' lvalue ParmVar 0x14900e2e8 'dev' 'struct net_device *'     |-BinaryOperator 0x149029160 <line:22:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x149029090 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149029058 <col:2> 'struct rtnl_link_stats64 *' lvalue ParmVar 0x149026628 'stats' 'struct rtnl_link_stats64 *'     | `-CXXDependentScopeMemberExpr 0x149029118 <col:22, col:33> '<dependent type>' contains-errors lvalue .tx_dropped     |   `-RecoveryExpr 0x1490290f0 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1490290b8 <col:22> 'struct net_device *' lvalue ParmVar 0x14900e2e8 'dev' 'struct net_device *'     `-ReturnStmt 0x1490291b8 <line:24:2, col:9>       `-ImplicitCastExpr 0x1490291a0 <col:9> 'struct rtnl_link_stats64 *' <LValueToRValue>         `-DeclRefExpr 0x149029180 <col:9> 'struct rtnl_link_stats64 *' lvalue ParmVar 0x149026628 'stats' 'struct rtnl_link_stats64 *' ","20977":"`-FunctionDecl 0x14c928358  line:1:1 invalid book_backend_ldap_refresh_sync 'int (int *, int *, int **)'   |-ParmVarDecl 0x14c928128 <col:33, col:47> col:47 invalid backend 'int *'   |-ParmVarDecl 0x14c9281a8 <line:2:5, col:19> col:19 invalid cancellable 'int *'   |-ParmVarDecl 0x14c928260 <line:3:5, col:14> col:14 invalid error 'int **'   `-CompoundStmt 0x14c942408 <line:4:1, line:18:1>     |-CallExpr 0x14c941820 <line:7:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c9286d8 <col:2> 'int ()' Function 0x14c928620 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x14c9287d0 <col:24, col:40> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14c928790 <col:24> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14c9287b0 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c941800 <col:46> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c941a18 <line:8:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c941850 <col:2> 'int ()' Function 0x14c928620 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x14c9419d8 <col:24, col:46> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x14c941970 <col:24, col:38> '<dependent type>' contains-errors lvalue ->priv     | | | `-RecoveryExpr 0x14c941950 <col:24> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14c9419b8 <col:46> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c9419f8 <col:52> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c941fd8 <line:10:2, line:12:10>     | |-BinaryOperator 0x14c941f70 <line:10:6, line:11:26> 'int' contains-errors '||'     | | |-BinaryOperator 0x14c941ea0 <line:10:6, col:57> 'int' contains-errors '||'     | | | |-UnaryOperator 0x14c941da8 <col:6, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x14c941d90 <col:7, col:27> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-CXXDependentScopeMemberExpr 0x14c941d48 <col:7, col:27> '<dependent type>' contains-errors lvalue ->cache     | | | |     `-CXXDependentScopeMemberExpr 0x14c941d00 <col:7, col:21> '<dependent type>' contains-errors lvalue ->priv     | | | |       `-RecoveryExpr 0x14c941ce0 <col:7> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x14c941e88 <col:36, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x14c941e70 <col:37, col:57> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-CXXDependentScopeMemberExpr 0x14c941e28 <col:37, col:57> '<dependent type>' contains-errors lvalue ->marked_for_offline     | | |       `-CXXDependentScopeMemberExpr 0x14c941de0 <col:37, col:51> '<dependent type>' contains-errors lvalue ->priv     | | |         `-RecoveryExpr 0x14c941dc0 <col:37> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x14c941f28 <line:11:6, col:26> '<dependent type>' contains-errors lvalue ->generate_cache_in_progress     | |   `-CXXDependentScopeMemberExpr 0x14c941ee0 <col:6, col:20> '<dependent type>' contains-errors lvalue ->priv     | |     `-RecoveryExpr 0x14c941ec0 <col:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c941fc8 <line:12:3, col:10>     |   `-RecoveryExpr 0x14c941fa8 <col:10> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14c9422d8 <line:14:2, col:62> '<dependent type>' contains-errors       |-DeclRefExpr 0x14c9420d8 <col:2> 'int ()' Function 0x14c942020 'e_book_backend_cache_set_time' 'int ()'       |-CXXDependentScopeMemberExpr 0x14c942290 <col:33, col:53> '<dependent type>' contains-errors lvalue ->cache       | `-CXXDependentScopeMemberExpr 0x14c942248 <col:33, col:47> '<dependent type>' contains-errors lvalue ->priv       |   `-RecoveryExpr 0x14c942228 <col:33> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x14c9421e0 <col:60> 'char[1]' lvalue \"\" ","21249":"`-FunctionDecl 0x14880dda8  line:1:8 PHP_RINIT_FUNCTION 'int (int)' static   |-ParmVarDecl 0x14880dcd8 <col:27> col:27 libxml 'int'   `-CompoundStmt 0x149808890 <line:2:1, line:10:1>     |-IfStmt 0x149808828 <line:3:2, line:8:2>     | |-RecoveryExpr 0x14880ded0 <line:3:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x149808800 <col:46, line:8:2>     |   |-CallExpr 0x14880e0c0 <line:5:3, col:56> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14880e000 <col:3> 'int ()' Function 0x14880df48 'xmlSetGenericErrorFunc' 'int ()'     |   | |-RecoveryExpr 0x14880e080 <col:26> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14880e0a0 <col:32> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14880e250 <line:6:3, col:84> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14880e1d0 <col:3> 'int ()' Function 0x14880e118 'xmlParserInputBufferCreateFilenameDefault' 'int ()'     |   | `-RecoveryExpr 0x14880e230 <col:45> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14880e3d8 <line:7:3, col:80> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14880e358 <col:3> 'int ()' Function 0x14880e2a0 'xmlOutputBufferCreateFilenameDefault' 'int ()'     |     `-RecoveryExpr 0x14880e3b8 <col:40> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x149808880 <line:9:2, col:9>       `-RecoveryExpr 0x149808860 <col:9> '<dependent type>' contains-errors lvalue ","20495":"`-FunctionDecl 0x147826748  line:1:12 io_sq_offload_start 'int (struct io_ring_ctx *, struct io_uring_params *)' static   |-ParmVarDecl 0x14780e248 <col:32, col:52> col:52 used ctx 'struct io_ring_ctx *'   |-ParmVarDecl 0x147826628 <line:2:11, col:35> col:35 used p 'struct io_uring_params *'   `-CompoundStmt 0x147124c88 <line:3:1, line:69:1>     |-DeclStmt 0x1478269c8 <line:4:2, col:24>     | |-RecordDecl 0x147826848 <col:2, col:9> col:9 struct io_wq_data     | `-VarDecl 0x147826948 <col:2, col:20> col:20 referenced invalid data 'struct io_wq_data'     |-DeclStmt 0x147826a60 <line:5:2, col:22>     | `-VarDecl 0x1478269f8 <col:2, col:11> col:11 used concurrency 'unsigned int'     |-DeclStmt 0x147826af8 <line:6:2, col:9>     | `-VarDecl 0x147826a90 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x147826cd8 <line:8:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147826c40 <col:2> 'int ()' Function 0x147826b88 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x147826cc0 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x147826c98 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x147826c60 <col:23> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     |-CallExpr 0x147826ef0 <line:9:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147826de0 <col:2> 'int ()' Function 0x147826d28 'mmgrab' 'int ()'     | `-CXXDependentScopeMemberExpr 0x147826ea8 <col:9, col:18> '<dependent type>' contains-errors lvalue ->mm     |   `-RecoveryExpr 0x147826e88 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x147827060 <line:10:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x147826f50 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147826f18 <col:2> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | `-CXXDependentScopeMemberExpr 0x147827018 <col:16, col:25> '<dependent type>' contains-errors lvalue ->mm     |   `-RecoveryExpr 0x147826ff8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147123d88 <line:12:2, line:47:2> has_else     | |-BinaryOperator 0x147827138 <line:12:6, col:19> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x1478270b8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x147827080 <col:6> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | | `-RecoveryExpr 0x147827118 <col:19> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x147123c50 <col:40, line:43:2>     | | |-BinaryOperator 0x147827230 <line:13:3, col:10> 'int' contains-errors '='     | | | |-DeclRefExpr 0x147827158 <col:3> 'int' lvalue Var 0x147826a90 'ret' 'int'     | | | `-UnaryOperator 0x147827218 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |   `-ImplicitCastExpr 0x147827200 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x1478271e0 <col:10> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x147827470 <line:14:3, line:15:9>     | | | |-UnaryOperator 0x1478273f0 <line:14:7, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-CallExpr 0x1478273c8 <col:8, col:29> '<dependent type>' contains-errors     | | | |   |-DeclRefExpr 0x147827330 <col:8> 'int ()' Function 0x147827278 'capable' 'int ()'     | | | |   `-RecoveryExpr 0x1478273a8 <col:16> '<dependent type>' contains-errors lvalue     | | | `-GotoStmt 0x147827458 <line:15:4, col:9> 'err' 0x147827408     | | |-BinaryOperator 0x147122c88 <line:17:3, col:59> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x1478274c8 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x147827490 <col:3> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | | | `-CallExpr 0x147122c60 <col:25, col:59> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x1478275d0 <col:25> 'int ()' Function 0x147827518 'msecs_to_jiffies' 'int ()'     | | |   `-RecoveryExpr 0x147122c38 <col:42, col:45> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x147122c00 <col:42> 'struct io_uring_params *' lvalue ParmVar 0x147826628 'p' 'struct io_uring_params *'     | | |-IfStmt 0x147122e10 <line:18:3, line:19:26>     | | | |-UnaryOperator 0x147122d20 <line:18:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x147122d08 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-RecoveryExpr 0x147122ce0 <col:8, col:13> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x147122ca8 <col:8> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | | | `-BinaryOperator 0x147122df0 <line:19:4, col:26> '<dependent type>' contains-errors '='     | | |   |-RecoveryExpr 0x147122d70 <col:4, col:9> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x147122d38 <col:4> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | | |   `-RecoveryExpr 0x147122dd0 <col:26> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x147123678 <line:21:3, line:36:3> has_else     | | | |-BinaryOperator 0x147122ee8 <line:21:7, col:18> '<dependent type>' contains-errors '&'     | | | | |-RecoveryExpr 0x147122e68 <col:7, col:10> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x147122e30 <col:7> 'struct io_uring_params *' lvalue ParmVar 0x147826628 'p' 'struct io_uring_params *'     | | | | `-RecoveryExpr 0x147122ec8 <col:18> '<dependent type>' contains-errors lvalue     | | | |-CompoundStmt 0x1471234a0 <col:39, line:33:3>     | | | | |-DeclStmt 0x147122fe8 <line:22:4, col:30>     | | | | | `-VarDecl 0x147122f20 <col:4, col:17> col:8 used cpu 'int' cinit     | | | | |   `-RecoveryExpr 0x147122fc0 <col:14, col:17> '<dependent type>' contains-errors lvalue     | | | | |     `-DeclRefExpr 0x147122f88 <col:14> 'struct io_uring_params *' lvalue ParmVar 0x147826628 'p' 'struct io_uring_params *'     | | | | |-IfStmt 0x147123078 <line:25:4, line:26:10>     | | | | | |-RecoveryExpr 0x147123040 <line:25:8, col:15> '_Bool' contains-errors     | | | | | `-GotoStmt 0x147123060 <line:26:5, col:10> 'err' 0x147827408     | | | | `-IfStmt 0x147123278 <line:27:4, line:28:10>     | | | |   |-UnaryOperator 0x147123248 <line:27:8, col:23> 'int' contains-errors prefix '!' cannot overflow     | | | |   | `-CallExpr 0x147123208 <col:9, col:23> 'int' contains-errors     | | | |   |   |-ImplicitCastExpr 0x1471231f0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | | |   |   | `-DeclRefExpr 0x147123178 <col:9> 'int ()' Function 0x1471230c0 'cpu_online' 'int ()'     | | | |   |   `-ImplicitCastExpr 0x147123230 <col:20> 'int' contains-errors <LValueToRValue>     | | | |   |     `-DeclRefExpr 0x147123198 <col:20> 'int' contains-errors lvalue Var 0x147122f20 'cpu' 'int'     | | | |   `-GotoStmt 0x147123260 <line:28:5, col:10> 'err' 0x147827408     | | | `-CompoundStmt 0x147123668 <line:33:10, line:36:3>     | | |-IfStmt 0x147123a90 <line:37:3, line:41:3>     | | | |-CallExpr 0x147123808 <line:37:7, col:29> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x147123788 <col:7> 'int ()' Function 0x1471236d0 'IS_ERR' 'int ()'     | | | | `-RecoveryExpr 0x1471237e0 <col:14, col:19> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x1471237a8 <col:14> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | | | `-CompoundStmt 0x147123a70 <col:32, line:41:3>     | | |   |-BinaryOperator 0x1471239d8 <line:38:4, col:33> 'int' contains-errors '='     | | |   | |-DeclRefExpr 0x147123830 <col:4> 'int' lvalue Var 0x147826a90 'ret' 'int'     | | |   | `-CallExpr 0x1471239b0 <col:10, col:33> '<dependent type>' contains-errors     | | |   |   |-DeclRefExpr 0x147123930 <col:10> 'int ()' Function 0x147123878 'PTR_ERR' 'int ()'     | | |   |   `-RecoveryExpr 0x147123988 <col:18, col:23> '<dependent type>' contains-errors lvalue     | | |   |     `-DeclRefExpr 0x147123950 <col:18> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | | |   `-GotoStmt 0x147123a58 <line:40:4, col:9> 'err' 0x147827408     | | `-CallExpr 0x147123c28 <line:42:3, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x147123b90 <col:3> 'int ()' Function 0x147123ad8 'wake_up_process' 'int ()'     | |   `-RecoveryExpr 0x147123c00 <col:19, col:24> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x147123bb0 <col:19> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | `-IfStmt 0x147123d68 <line:43:9, line:47:2>     |   |-RecoveryExpr 0x147123cf8 <line:43:13, col:24> '_Bool' contains-errors     |   `-CompoundStmt 0x147123d50 <col:45, line:47:2>     |     `-GotoStmt 0x147123d38 <line:46:3, col:8> 'err' 0x147827408     |-BinaryOperator 0x147123ea8 <line:49:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x147123e00 <col:2, col:7> '<dependent type>' contains-errors lvalue .mm     | | `-RecoveryExpr 0x147123dd8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x147123db8 <col:2> 'struct io_wq_data' lvalue Var 0x147826948 'data' 'struct io_wq_data'     | `-RecoveryExpr 0x147123e80 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x147123e48 <col:12> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     |-BinaryOperator 0x147123fb8 <line:50:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x147123f10 <col:2, col:7> '<dependent type>' contains-errors lvalue .user     | | `-RecoveryExpr 0x147123ee8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x147123ec8 <col:2> 'struct io_wq_data' lvalue Var 0x147826948 'data' 'struct io_wq_data'     | `-RecoveryExpr 0x147123f90 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x147123f58 <col:14> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     |-BinaryOperator 0x147124420 <line:55:2, col:58> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x1471240f8 <col:2> 'unsigned int' lvalue Var 0x1478269f8 'concurrency' 'unsigned int'     | `-CallExpr 0x1471243f0 <col:16, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1471241f8 <col:16> 'int ()' Function 0x147124140 'min' 'int ()'     |   |-RecoveryExpr 0x147124250 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x147124218 <col:20> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     |   `-BinaryOperator 0x1471243d0 <col:37, col:57> 'int' '*'     |     |-IntegerLiteral 0x147124278 <col:37> 'int' 4     |     `-CallExpr 0x1471243b0 <col:41, col:57> 'int'     |       `-ImplicitCastExpr 0x147124398 <col:41> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x147124378 <col:41> 'int ()' Function 0x1471242c0 'num_online_cpus' 'int ()'     |-BinaryOperator 0x147124628 <line:56:2, col:46> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x147124478 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147124440 <col:2> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | `-CallExpr 0x1471245f8 <col:15, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x147124580 <col:15> 'int ()' Function 0x1471244c8 'io_wq_create' 'int ()'     |   |-DeclRefExpr 0x1471245a0 <col:28> 'unsigned int' lvalue Var 0x1478269f8 'concurrency' 'unsigned int'     |   `-UnaryOperator 0x1471245e0 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1471245c0 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147124870 <line:57:2, line:61:2>     | |-CallExpr 0x1471246c8 <line:57:6, col:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x147124648 <col:6> 'int ()' Function 0x1471236d0 'IS_ERR' 'int ()'     | | `-RecoveryExpr 0x1471246a0 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x147124668 <col:13> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     | `-CompoundStmt 0x147124850 <col:26, line:61:2>     |   |-BinaryOperator 0x1471247b8 <line:58:3, col:27> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1471246f0 <col:3> 'int' lvalue Var 0x147826a90 'ret' 'int'     |   | `-CallExpr 0x147124790 <col:9, col:27> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x147124710 <col:9> 'int ()' Function 0x147123878 'PTR_ERR' 'int ()'     |   |   `-RecoveryExpr 0x147124768 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x147124730 <col:17> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     |   `-GotoStmt 0x147124838 <line:60:3, col:8> 'err' 0x147827408     |-ReturnStmt 0x1471248b0 <line:63:2, col:9>     | `-IntegerLiteral 0x147124890 <col:9> 'int' 0     |-LabelStmt 0x147124a38 <line:64:1, line:65:21> 'err'     | `-CallExpr 0x1471249f8 <col:2, col:21> 'int'     |   |-ImplicitCastExpr 0x1471249e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1471249a0 <col:2> 'int ()' Function 0x1471248e8 'io_finish_async' 'int ()'     |   `-ImplicitCastExpr 0x147124a20 <col:18> 'struct io_ring_ctx *' <LValueToRValue>     |     `-DeclRefExpr 0x1471249c0 <col:18> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     |-CallExpr 0x147124bb8 <line:66:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147124b38 <col:2> 'int ()' Function 0x147124a80 'mmdrop' 'int ()'     | `-RecoveryExpr 0x147124b90 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x147124b58 <col:9> 'struct io_ring_ctx *' lvalue ParmVar 0x14780e248 'ctx' 'struct io_ring_ctx *'     `-ReturnStmt 0x147124c78 <line:68:2, col:9>       `-ImplicitCastExpr 0x147124c60 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x147124c40 <col:9> 'int' lvalue Var 0x147826a90 'ret' 'int' ","20569":"`-FunctionDecl 0x159140e88  line:1:12 attach_recursive_mnt 'int (struct mount *, struct mount *, struct mountpoint *, struct path *)' static   |-ParmVarDecl 0x159128648 <col:33, col:47> col:47 used source_mnt 'struct mount *'   |-ParmVarDecl 0x159128738 <line:2:4, col:18> col:18 used dest_mnt 'struct mount *'   |-ParmVarDecl 0x159140b68 <line:3:4, col:23> col:23 used dest_mp 'struct mountpoint *'   |-ParmVarDecl 0x159140d38 <line:4:4, col:17> col:17 used parent_path 'struct path *'   `-CompoundStmt 0x1591449b8 <line:5:1, line:53:1>     |-CallExpr 0x159141140 <line:6:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1591410c0 <col:2> 'int ()' Function 0x159141008 'HLIST_HEAD' 'int ()'     | `-RecoveryExpr 0x159141120 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1591412a0 <line:7:2, col:25>     | |-VarDecl 0x159141190 <col:2, col:16> col:16 used child 'struct mount *'     | `-VarDecl 0x159141220 <col:2, col:24> col:24 used p 'struct mount *'     |-DeclStmt 0x1591414a8 <line:8:2, col:22>     | |-RecordDecl 0x1591412b8 <col:2, col:9> col:9 struct hlist_node     | `-VarDecl 0x159141428 <col:2, col:21> col:21 used n 'struct hlist_node *'     |-DeclStmt 0x159141540 <line:9:2, col:9>     | `-VarDecl 0x1591414d8 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x1591437a0 <line:11:2, line:23:2> has_else     | |-CallExpr 0x1591416c8 <line:11:6, col:28> 'int'     | | |-ImplicitCastExpr 0x1591416b0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x159141638 <col:6> 'int ()' Function 0x159141580 'IS_MNT_SHARED' 'int ()'     | | `-ImplicitCastExpr 0x1591416f0 <col:20> 'struct mount *' <LValueToRValue>     | |   `-DeclRefExpr 0x159141658 <col:20> 'struct mount *' lvalue ParmVar 0x159128738 'dest_mnt' 'struct mount *'     | |-CompoundStmt 0x1591436f0 <col:31, line:21:2>     | | |-BinaryOperator 0x159141900 <line:12:3, col:42> 'int' contains-errors '='     | | | |-DeclRefExpr 0x159141708 <col:3> 'int' lvalue Var 0x1591414d8 'err' 'int'     | | | `-CallExpr 0x1591418d0 <col:9, col:42> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x159141808 <col:9> 'int ()' Function 0x159141750 'invent_group_ids' 'int ()'     | | |   |-DeclRefExpr 0x159141828 <col:26> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     | | |   `-RecoveryExpr 0x1591418b0 <col:38> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x1591419c0 <line:13:3, line:14:9>     | | | |-ImplicitCastExpr 0x159141940 <line:13:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x159141920 <col:7> 'int' lvalue Var 0x1591414d8 'err' 'int'     | | | `-GotoStmt 0x1591419a8 <line:14:4, col:9> 'out' 0x159141958     | | |-BinaryOperator 0x159143068 <line:15:3, col:64> 'int' contains-errors '='     | | | |-DeclRefExpr 0x1591419e0 <col:3> 'int' lvalue Var 0x1591414d8 'err' 'int'     | | | `-CallExpr 0x159143028 <col:9, col:64> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x159142ee0 <col:9> 'int ()' Function 0x159142e28 'propagate_mnt' 'int ()'     | | |   |-DeclRefExpr 0x159142f00 <col:23> 'struct mount *' lvalue ParmVar 0x159128738 'dest_mnt' 'struct mount *'     | | |   |-DeclRefExpr 0x159142f20 <col:33> 'struct mountpoint *' lvalue ParmVar 0x159140b68 'dest_mp' 'struct mountpoint *'     | | |   |-DeclRefExpr 0x159142f40 <col:42> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     | | |   `-UnaryOperator 0x159143010 <col:54, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x159142ff0 <col:55> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x1591431a0 <line:16:3, col:19> 'int'     | | | `-ImplicitCastExpr 0x159143188 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x159143168 <col:3> 'int ()' Function 0x1591430b0 'lock_mount_hash' 'int ()'     | | |-IfStmt 0x159143260 <line:17:3, line:18:9>     | | | |-ImplicitCastExpr 0x1591431e0 <line:17:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x1591431c0 <col:7> 'int' lvalue Var 0x1591414d8 'err' 'int'     | | | `-GotoStmt 0x159143248 <line:18:4, col:9> 'out_cleanup_ids' 0x1591431f8     | | `-ForStmt 0x1591436b8 <line:19:3, line:20:20>     | |   |-BinaryOperator 0x1591432d8 <line:19:8, col:12> 'struct mount *' '='     | |   | |-DeclRefExpr 0x159143280 <col:8> 'struct mount *' lvalue Var 0x159141220 'p' 'struct mount *'     | |   | `-ImplicitCastExpr 0x1591432c0 <col:12> 'struct mount *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x1591432a0 <col:12> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     | |   |-<<<NULL>>>     | |   |-ImplicitCastExpr 0x159143318 <col:24> 'struct mount *' <LValueToRValue>     | |   | `-DeclRefExpr 0x1591432f8 <col:24> 'struct mount *' lvalue Var 0x159141220 'p' 'struct mount *'     | |   |-BinaryOperator 0x159143520 <col:27, col:53> 'struct mount *' '='     | |   | |-DeclRefExpr 0x159143330 <col:27> 'struct mount *' lvalue Var 0x159141220 'p' 'struct mount *'     | |   | `-ImplicitCastExpr 0x159143508 <col:31, col:53> 'struct mount *' <IntegralToPointer>     | |   |   `-CallExpr 0x1591434a8 <col:31, col:53> 'int'     | |   |     |-ImplicitCastExpr 0x159143490 <col:31> 'int (*)()' <FunctionToPointerDecay>     | |   |     | `-DeclRefExpr 0x159143430 <col:31> 'int ()' Function 0x159143378 'next_mnt' 'int ()'     | |   |     |-ImplicitCastExpr 0x1591434d8 <col:40> 'struct mount *' <LValueToRValue>     | |   |     | `-DeclRefExpr 0x159143450 <col:40> 'struct mount *' lvalue Var 0x159141220 'p' 'struct mount *'     | |   |     `-ImplicitCastExpr 0x1591434f0 <col:43> 'struct mount *' <LValueToRValue>     | |   |       `-DeclRefExpr 0x159143470 <col:43> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     | |   `-CallExpr 0x159143678 <line:20:4, col:20> 'int'     | |     |-ImplicitCastExpr 0x159143660 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x159143620 <col:4> 'int ()' Function 0x159143568 'set_mnt_shared' 'int ()'     | |     `-ImplicitCastExpr 0x1591436a0 <col:19> 'struct mount *' <LValueToRValue>     | |       `-DeclRefExpr 0x159143640 <col:19> 'struct mount *' lvalue Var 0x159141220 'p' 'struct mount *'     | `-CompoundStmt 0x159143788 <line:21:9, line:23:2>     |   `-CallExpr 0x159143768 <line:22:3, col:19> 'int'     |     `-ImplicitCastExpr 0x159143750 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x159143730 <col:3> 'int ()' Function 0x1591430b0 'lock_mount_hash' 'int ()'     |-IfStmt 0x1591441a8 <line:24:2, line:31:2> has_else     | |-ImplicitCastExpr 0x1591437f0 <line:24:6> 'struct path *' <LValueToRValue>     | | `-DeclRefExpr 0x1591437d0 <col:6> 'struct path *' lvalue ParmVar 0x159140d38 'parent_path' 'struct path *'     | |-CompoundStmt 0x159143d40 <col:19, line:28:2>     | | |-CallExpr 0x159143960 <line:25:3, col:37> 'int'     | | | |-ImplicitCastExpr 0x159143948 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x1591438e8 <col:3> 'int ()' Function 0x159143830 'detach_mnt' 'int ()'     | | | |-ImplicitCastExpr 0x159143990 <col:14> 'struct mount *' <LValueToRValue>     | | | | `-DeclRefExpr 0x159143908 <col:14> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     | | | `-ImplicitCastExpr 0x1591439a8 <col:26> 'struct path *' <LValueToRValue>     | | |   `-DeclRefExpr 0x159143928 <col:26> 'struct path *' lvalue ParmVar 0x159140d38 'parent_path' 'struct path *'     | | |-CallExpr 0x159143b38 <line:26:3, col:43> 'int'     | | | |-ImplicitCastExpr 0x159143b20 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x159143aa0 <col:3> 'int ()' Function 0x1591439e8 'attach_mnt' 'int ()'     | | | |-ImplicitCastExpr 0x159143b70 <col:14> 'struct mount *' <LValueToRValue>     | | | | `-DeclRefExpr 0x159143ac0 <col:14> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     | | | |-ImplicitCastExpr 0x159143b88 <col:26> 'struct mount *' <LValueToRValue>     | | | | `-DeclRefExpr 0x159143ae0 <col:26> 'struct mount *' lvalue ParmVar 0x159128738 'dest_mnt' 'struct mount *'     | | | `-ImplicitCastExpr 0x159143ba0 <col:36> 'struct mountpoint *' <LValueToRValue>     | | |   `-DeclRefExpr 0x159143b00 <col:36> 'struct mountpoint *' lvalue ParmVar 0x159140b68 'dest_mp' 'struct mountpoint *'     | | `-CallExpr 0x159143d18 <line:27:3, col:41> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x159143c98 <col:3> 'int ()' Function 0x159143be0 'touch_mnt_namespace' 'int ()'     | |   `-RecoveryExpr 0x159143cf0 <col:23, col:35> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x159143cb8 <col:23> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     | `-CompoundStmt 0x159144188 <line:28:9, line:31:2>     |   |-CallExpr 0x159143f50 <line:29:3, col:51> 'int'     |   | |-ImplicitCastExpr 0x159143f38 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x159143eb8 <col:3> 'int ()' Function 0x159143e00 'mnt_set_mountpoint' 'int ()'     |   | |-ImplicitCastExpr 0x159143f88 <col:22> 'struct mount *' <LValueToRValue>     |   | | `-DeclRefExpr 0x159143ed8 <col:22> 'struct mount *' lvalue ParmVar 0x159128738 'dest_mnt' 'struct mount *'     |   | |-ImplicitCastExpr 0x159143fa0 <col:32> 'struct mountpoint *' <LValueToRValue>     |   | | `-DeclRefExpr 0x159143ef8 <col:32> 'struct mountpoint *' lvalue ParmVar 0x159140b68 'dest_mp' 'struct mountpoint *'     |   | `-ImplicitCastExpr 0x159143fb8 <col:41> 'struct mount *' <LValueToRValue>     |   |   `-DeclRefExpr 0x159143f18 <col:41> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     |   `-CallExpr 0x159144158 <line:30:3, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1591440b0 <col:3> 'int ()' Function 0x159143ff8 'commit_tree' 'int ()'     |     |-DeclRefExpr 0x1591440d0 <col:15> 'struct mount *' lvalue ParmVar 0x159128648 'source_mnt' 'struct mount *'     |     `-RecoveryExpr 0x159144138 <col:27> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x159144338 <line:42:2, col:9>     | `-IntegerLiteral 0x159144318 <col:9> 'int' 0     |-LabelStmt 0x1591446d8 <line:44:2, line:48:2> 'out_cleanup_ids'     | `-WhileStmt 0x1591446b8 <line:45:2, line:48:2>     |   |-RecoveryExpr 0x159144448 <line:45:9, col:32> '_Bool' contains-errors     |   `-CompoundStmt 0x1591446a8 <col:35, line:48:2>     |-CallExpr 0x159144810 <line:49:2, col:20> 'int'     | `-ImplicitCastExpr 0x1591447f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1591447d8 <col:2> 'int ()' Function 0x159144720 'unlock_mount_hash' 'int ()'     `-LabelStmt 0x159144998 <line:51:2, line:52:9> 'out'       `-ReturnStmt 0x159144988 <col:2, col:9>         `-ImplicitCastExpr 0x159144970 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x159144950 <col:9> 'int' lvalue Var 0x1591414d8 'err' 'int' ","21151":"`-FunctionDecl 0x125923558  col:19 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x125923658 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x125923600 <<invalid sloc>> Implicit 902 ","20960":"`-FunctionDecl 0x11e128238  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x11e128158 <col:6> col:6 WriterTest 'int'   |-ParmVarDecl 0x11e1280d8 <col:18> col:18 PadString 'int'   `-CompoundStmt 0x11e128670 <col:29, line:4:1>     |-CallExpr 0x11e128548 <line:2:3, col:21> 'int'     | |-ImplicitCastExpr 0x11e128530 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e128460 <col:3> 'int ()' Function 0x11e1283a8 'EXPECT_EQ' 'int ()'     | |-ImplicitCastExpr 0x11e128578 <col:13> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x11e1284c0 <col:13> 'char[4]' lvalue \"STR\"     | `-IntegerLiteral 0x11e1284e0 <col:20> 'int' 8     `-CallExpr 0x11e128620 <line:3:3, col:27> 'int'       |-ImplicitCastExpr 0x11e128608 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x11e128590 <col:3> 'int ()' Function 0x11e1283a8 'EXPECT_EQ' 'int ()'       |-ImplicitCastExpr 0x11e128658 <col:13> 'char *' <ArrayToPointerDecay>       | `-StringLiteral 0x11e1285b0 <col:13> 'char[4]' lvalue \"STR\"       |-IntegerLiteral 0x11e1285d0 <col:20> 'int' 10       `-CharacterLiteral 0x11e1285f0 <col:24> 'int' 42 ","21200":"`-FunctionDecl 0x14e941830  line:1:13 invalid smack_task_getsecid_obj 'void (struct task_struct *, int *)' static   |-ParmVarDecl 0x14e928648 <col:37, col:57> col:57 used p 'struct task_struct *'   |-ParmVarDecl 0x14e928718 <col:60, col:65> col:65 invalid secid 'int *'   `-CompoundStmt 0x14e941e00 <line:2:1, line:6:1>     |-DeclStmt 0x14e941d18 <line:3:2, col:53>     | |-RecordDecl 0x14e9418e8 <col:2, col:9> col:9 struct smack_known     | `-VarDecl 0x14e941a58 <col:2, col:52> col:22 used skp 'struct smack_known *' cinit     |   `-ImplicitCastExpr 0x14e941ce8 <col:28, col:52> 'struct smack_known *' <IntegralToPointer>     |     `-CallExpr 0x14e941ca8 <col:28, col:52> 'int'     |       |-ImplicitCastExpr 0x14e941c90 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14e941c20 <col:28> 'int ()' Function 0x14e941b68 'smk_of_task_struct_obj' 'int ()'     |       `-ImplicitCastExpr 0x14e941cd0 <col:51> 'struct task_struct *' <LValueToRValue>     |         `-DeclRefExpr 0x14e941c40 <col:51> 'struct task_struct *' lvalue ParmVar 0x14e928648 'p' 'struct task_struct *'     `-BinaryOperator 0x14e941de0 <line:5:2, col:16> '<dependent type>' contains-errors '='       |-UnaryOperator 0x14e941d68 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x14e941d50 <col:3> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x14e941d30 <col:3> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14e941db8 <col:11, col:16> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14e941d80 <col:11> 'struct smack_known *' lvalue Var 0x14e941a58 'skp' 'struct smack_known *' ","20621":"`-FunctionDecl 0x13f928250  line:1:6 invalid qpdf_set_content_normalization 'void (int, int)'   |-ParmVarDecl 0x13f9280f0 <col:37, col:47> col:47 referenced invalid qpdf 'int'   |-ParmVarDecl 0x13f928170 <col:53, col:63> col:63 invalid value 'int'   `-CompoundStmt 0x13f928478 <line:2:1, line:5:1>     |-RecoveryExpr 0x13f928338 <line:3:5> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13f928450 <line:4:5, col:53> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x13f9283e8 <col:5, col:24> '<dependent type>' contains-errors lvalue ->setContentNormalization       | `-CXXDependentScopeMemberExpr 0x13f9283a0 <col:5, col:11> '<dependent type>' contains-errors lvalue ->qpdf_writer       |   `-RecoveryExpr 0x13f928378 <col:5> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x13f928358 <col:5> 'int' lvalue ParmVar 0x13f9280f0 'qpdf' 'int'       `-RecoveryExpr 0x13f928430 <col:48> '<dependent type>' contains-errors lvalue ","20273":"`-FunctionDecl 0x1489281f8  line:1:5 invalid h2_mplx_awaits_data 'int (int *)'   |-ParmVarDecl 0x148928128 <col:25, col:34> col:34 invalid m 'int *'   `-CompoundStmt 0x148941da8 <line:2:1, line:17:1>     |-DeclStmt 0x148928348 <line:3:5, col:20>     | `-VarDecl 0x1489282c0 <col:5, col:19> col:9 used waiting 'int' cinit     |   `-IntegerLiteral 0x148928328 <col:19> 'int' 1     |-CallExpr 0x148928500 <line:5:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1489284c0 <col:5> 'int ()' Function 0x148928408 'H2_MPLX_ENTER_ALWAYS' 'int ()'     | `-RecoveryExpr 0x1489284e0 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148941be8 <line:7:5, line:13:5> has_else     | |-CallExpr 0x148928690 <line:7:9, col:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x148928608 <col:9> 'int ()' Function 0x148928550 'h2_ihash_empty' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x148928648 <col:24, col:27> '<dependent type>' contains-errors lvalue ->streams     | |   `-RecoveryExpr 0x148928628 <col:24> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x148928718 <col:37, line:9:5>     | | `-BinaryOperator 0x1489286f8 <line:8:9, col:19> 'int' '='     | |   |-DeclRefExpr 0x1489286b8 <col:9> 'int' lvalue Var 0x1489282c0 'waiting' 'int'     | |   `-IntegerLiteral 0x1489286d8 <col:19> 'int' 0     | `-IfStmt 0x148941bc8 <line:10:10, line:13:5>     |   |-BinaryOperator 0x148941b30 <line:10:14, line:11:33> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x148941980 <line:10:14, col:59> 'int' contains-errors '&&'     |   | | |-UnaryOperator 0x1489287b0 <col:14, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | | `-ImplicitCastExpr 0x148928798 <col:15, col:18> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   `-CXXDependentScopeMemberExpr 0x148928750 <col:15, col:18> '<dependent type>' contains-errors lvalue ->tasks_active     |   | | |     `-RecoveryExpr 0x148928730 <col:15> '<dependent type>' contains-errors lvalue     |   | | `-UnaryOperator 0x148941968 <col:34, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | |   `-CallExpr 0x148941940 <col:35, col:59> '<dependent type>' contains-errors     |   | |     |-DeclRefExpr 0x1489418b8 <col:35> 'int ()' Function 0x148941800 'h2_ififo_count' 'int ()'     |   | |     `-CXXDependentScopeMemberExpr 0x1489418f8 <col:50, col:53> '<dependent type>' contains-errors lvalue ->readyq     |   | |       `-RecoveryExpr 0x1489418d8 <col:50> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x148941b08 <line:11:17, col:33> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x148941a80 <col:17> 'int ()' Function 0x1489419c8 'h2_iq_empty' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x148941ac0 <col:29, col:32> '<dependent type>' contains-errors lvalue ->q     |   |     `-RecoveryExpr 0x148941aa0 <col:29> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x148941bb0 <col:36, line:13:5>     |     `-BinaryOperator 0x148941b90 <line:12:9, col:19> 'int' '='     |       |-DeclRefExpr 0x148941b50 <col:9> 'int' lvalue Var 0x1489282c0 'waiting' 'int'     |       `-IntegerLiteral 0x148941b70 <col:19> 'int' 0     |-CallExpr 0x148941d38 <line:15:5, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148941cf8 <col:5> 'int ()' Function 0x148941c40 'H2_MPLX_LEAVE' 'int ()'     | `-RecoveryExpr 0x148941d18 <col:19> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x148941d98 <line:16:5, col:12>       `-ImplicitCastExpr 0x148941d80 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x148941d60 <col:12> 'int' lvalue Var 0x1489282c0 'waiting' 'int' ","20592":"`-FunctionDecl 0x13002a188  col:42 implicit used floor 'double (double)' extern   |-ParmVarDecl 0x13002a288 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x13002a230 <<invalid sloc>> Implicit 1079   |-NoThrowAttr 0x13002a2f8 <col:42> Implicit   `-ConstAttr 0x13002a320 <col:42> Implicit ","21181":"`-FunctionDecl 0x14b80ddf8  line:1:5 invalid ff_h264_check_intra4x4_pred_mode 'int (int *)'   |-ParmVarDecl 0x14b80dd28 <col:38, col:51> col:51 referenced invalid h 'int *'   `-CompoundStmt 0x14b8297a8 <line:2:1, line:42:1>     |-DeclStmt 0x14b80e1a8 <line:3:5, line:5:6>     | `-VarDecl 0x14b80df98 <line:3:5, col:31> col:25 invalid top 'const int[12]' static     |-DeclStmt 0x14b827a50 <line:6:5, line:8:6>     | `-VarDecl 0x14b80e228 <line:6:5, col:32> col:25 invalid left 'const int[12]' static     |-DeclStmt 0x14b827ae8 <line:9:5, col:10>     | `-VarDecl 0x14b827a80 <col:5, col:9> col:9 used i 'int'     |-IfStmt 0x14b828568 <line:11:5, line:23:5>     | |-UnaryOperator 0x14b827bc8 <line:11:9, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ParenExpr 0x14b827ba8 <col:10, col:44> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x14b827b88 <col:11, col:38> '<dependent type>' contains-errors '&'     | |     |-CXXDependentScopeMemberExpr 0x14b827b20 <col:11, col:14> '<dependent type>' contains-errors lvalue ->top_samples_available     | |     | `-RecoveryExpr 0x14b827b00 <col:11> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x14b827b68 <col:38> 'int' 32768     | `-CompoundStmt 0x14b828550 <col:47, line:23:5>     |   `-ForStmt 0x14b828518 <line:12:9, line:22:9>     |     |-BinaryOperator 0x14b827c20 <line:12:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x14b827be0 <col:14> 'int' lvalue Var 0x14b827a80 'i' 'int'     |     | `-IntegerLiteral 0x14b827c00 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x14b827c98 <col:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x14b827c80 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x14b827c40 <col:21> 'int' lvalue Var 0x14b827a80 'i' 'int'     |     | `-IntegerLiteral 0x14b827c60 <col:25> 'int' 4     |     |-UnaryOperator 0x14b827cd8 <col:28, col:29> 'int' postfix '++'     |     | `-DeclRefExpr 0x14b827cb8 <col:28> 'int' lvalue Var 0x14b827a80 'i' 'int'     |     `-CompoundStmt 0x14b8284f8 <col:33, line:22:9>     |       |-DeclStmt 0x14b827e50 <line:13:13, col:72>     |       | `-VarDecl 0x14b827d08 <col:13, col:17> col:17 used status 'int'     |       `-IfStmt 0x14b8284c8 <line:14:13, line:21:13> has_else     |         |-BinaryOperator 0x14b827ec0 <line:14:17, col:26> 'int' '<'     |         | |-ImplicitCastExpr 0x14b827ea8 <col:17> 'int' <LValueToRValue>     |         | | `-DeclRefExpr 0x14b827e68 <col:17> 'int' lvalue Var 0x14b827d08 'status' 'int'     |         | `-IntegerLiteral 0x14b827e88 <col:26> 'int' 0     |         |-CompoundStmt 0x14b828338 <col:29, line:19:13>     |         | |-CallExpr 0x14b8282a0 <line:15:17, line:17:48> '<dependent type>' contains-errors     |         | | |-DeclRefExpr 0x14b828040 <line:15:17> 'int ()' Function 0x14b827f88 'av_log' 'int ()'     |         | | |-CXXDependentScopeMemberExpr 0x14b828080 <col:24, col:27> '<dependent type>' contains-errors lvalue ->avctx     |         | | | `-RecoveryExpr 0x14b828060 <col:24> '<dependent type>' contains-errors lvalue     |         | | |-RecoveryExpr 0x14b828280 <col:34> '<dependent type>' contains-errors lvalue     |         | | |-StringLiteral 0x14b828120 <line:16:24> 'char[4]' lvalue \"STR\"     |         | | |-DeclRefExpr 0x14b828140 <line:17:24> 'int' lvalue Var 0x14b827d08 'status' 'int'     |         | | |-CXXDependentScopeMemberExpr 0x14b828180 <col:32, col:35> '<dependent type>' contains-errors lvalue ->mb_x     |         | | | `-RecoveryExpr 0x14b828160 <col:32> '<dependent type>' contains-errors lvalue     |         | | `-CXXDependentScopeMemberExpr 0x14b8281e8 <col:41, col:44> '<dependent type>' contains-errors lvalue ->mb_y     |         | |   `-RecoveryExpr 0x14b8281c8 <col:41> '<dependent type>' contains-errors lvalue     |         | `-ReturnStmt 0x14b828328 <line:18:17, col:24>     |         |   `-RecoveryExpr 0x14b828308 <col:24> '<dependent type>' contains-errors lvalue     |         `-IfStmt 0x14b8284a8 <line:19:20, line:21:13>     |           |-ImplicitCastExpr 0x14b828378 <line:19:24> 'int' <LValueToRValue>     |           | `-DeclRefExpr 0x14b828358 <col:24> 'int' lvalue Var 0x14b827d08 'status' 'int'     |           `-CompoundStmt 0x14b828498 <col:32, line:21:13>     |-IfStmt 0x14b829758 <line:25:5, line:39:5>     | |-BinaryOperator 0x14b828670 <line:25:9, col:49> 'int' contains-errors '!='     | | |-ParenExpr 0x14b828630 <col:9, col:44> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x14b828610 <col:10, col:38> '<dependent type>' contains-errors '&'     | | |   |-CXXDependentScopeMemberExpr 0x14b8285a8 <col:10, col:13> '<dependent type>' contains-errors lvalue ->left_samples_available     | | |   | `-RecoveryExpr 0x14b828588 <col:10> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x14b8285f0 <col:38> 'int' 34952     | | `-IntegerLiteral 0x14b828650 <col:49> 'int' 34952     | `-CompoundStmt 0x14b829738 <col:57, line:39:5>     |   |-DeclStmt 0x14b828930 <line:26:9, col:66>     |   | `-VarDecl 0x14b828778 <col:9, col:65> col:26 used mask 'const int[4]' static cinit     |   |   `-InitListExpr 0x14b8288d0 <col:36, col:65> 'const int[4]'     |   |     |-IntegerLiteral 0x14b8287e0 <col:38> 'int' 32768     |   |     |-IntegerLiteral 0x14b828800 <col:46> 'int' 8192     |   |     |-IntegerLiteral 0x14b828820 <col:54> 'int' 128     |   |     `-IntegerLiteral 0x14b828840 <col:60> 'int' 32     |   `-ForStmt 0x14b829700 <line:27:9, line:38:13>     |     |-BinaryOperator 0x14b828988 <line:27:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x14b828948 <col:14> 'int' lvalue Var 0x14b827a80 'i' 'int'     |     | `-IntegerLiteral 0x14b828968 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x14b828e00 <col:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x14b8289e8 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x14b8289a8 <col:21> 'int' lvalue Var 0x14b827a80 'i' 'int'     |     | `-IntegerLiteral 0x14b8289c8 <col:25> 'int' 4     |     |-UnaryOperator 0x14b828e40 <col:28, col:29> 'int' postfix '++'     |     | `-DeclRefExpr 0x14b828e20 <col:28> 'int' lvalue Var 0x14b827a80 'i' 'int'     |     `-IfStmt 0x14b8296e0 <line:28:13, line:38:13>     |       |-UnaryOperator 0x14b828f90 <line:28:17, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow     |       | `-ParenExpr 0x14b828f70 <col:18, col:54> '<dependent type>' contains-errors     |       |   `-BinaryOperator 0x14b828f50 <col:19, col:53> '<dependent type>' contains-errors '&'     |       |     |-CXXDependentScopeMemberExpr 0x14b828e78 <col:19, col:22> '<dependent type>' contains-errors lvalue ->left_samples_available     |       |     | `-RecoveryExpr 0x14b828e58 <col:19> '<dependent type>' contains-errors lvalue     |       |     `-ArraySubscriptExpr 0x14b828f30 <col:47, col:53> 'const int' lvalue     |       |       |-ImplicitCastExpr 0x14b828f00 <col:47> 'const int *' <ArrayToPointerDecay>     |       |       | `-DeclRefExpr 0x14b828ec0 <col:47> 'const int[4]' lvalue Var 0x14b828778 'mask' 'const int[4]'     |       |       `-ImplicitCastExpr 0x14b828f18 <col:52> 'int' <LValueToRValue>     |       |         `-DeclRefExpr 0x14b828ee0 <col:52> 'int' lvalue Var 0x14b827a80 'i' 'int'     |       `-CompoundStmt 0x14b8296c0 <col:57, line:38:13>     |         |-DeclStmt 0x14b829160 <line:29:17, col:81>     |         | `-VarDecl 0x14b828fc0 <col:17, col:21> col:21 used status 'int'     |         `-IfStmt 0x14b829690 <line:30:17, line:37:17> has_else     |           |-BinaryOperator 0x14b8291d0 <line:30:21, col:30> 'int' '<'     |           | |-ImplicitCastExpr 0x14b8291b8 <col:21> 'int' <LValueToRValue>     |           | | `-DeclRefExpr 0x14b829178 <col:21> 'int' lvalue Var 0x14b828fc0 'status' 'int'     |           | `-IntegerLiteral 0x14b829198 <col:30> 'int' 0     |           |-CompoundStmt 0x14b8294a8 <col:33, line:35:17>     |           | |-CallExpr 0x14b829410 <line:31:21, line:33:52> '<dependent type>' contains-errors     |           | | |-DeclRefExpr 0x14b8291f0 <line:31:21> 'int ()' Function 0x14b827f88 'av_log' 'int ()'     |           | | |-CXXDependentScopeMemberExpr 0x14b829230 <col:28, col:31> '<dependent type>' contains-errors lvalue ->avctx     |           | | | `-RecoveryExpr 0x14b829210 <col:28> '<dependent type>' contains-errors lvalue     |           | | |-RecoveryExpr 0x14b8293f0 <col:38> '<dependent type>' contains-errors lvalue     |           | | |-StringLiteral 0x14b829290 <line:32:28> 'char[4]' lvalue \"STR\"     |           | | |-DeclRefExpr 0x14b8292b0 <line:33:28> 'int' lvalue Var 0x14b828fc0 'status' 'int'     |           | | |-CXXDependentScopeMemberExpr 0x14b8292f0 <col:36, col:39> '<dependent type>' contains-errors lvalue ->mb_x     |           | | | `-RecoveryExpr 0x14b8292d0 <col:36> '<dependent type>' contains-errors lvalue     |           | | `-CXXDependentScopeMemberExpr 0x14b829358 <col:45, col:48> '<dependent type>' contains-errors lvalue ->mb_y     |           | |   `-RecoveryExpr 0x14b829338 <col:45> '<dependent type>' contains-errors lvalue     |           | `-ReturnStmt 0x14b829498 <line:34:21, col:28>     |           |   `-RecoveryExpr 0x14b829478 <col:28> '<dependent type>' contains-errors lvalue     |           `-IfStmt 0x14b829670 <line:35:24, line:37:17>     |             |-ImplicitCastExpr 0x14b8294e8 <line:35:28> 'int' <LValueToRValue>     |             | `-DeclRefExpr 0x14b8294c8 <col:28> 'int' lvalue Var 0x14b828fc0 'status' 'int'     |             `-CompoundStmt 0x14b829660 <col:36, line:37:17>     `-ReturnStmt 0x14b829798 <line:41:5, col:12>       `-IntegerLiteral 0x14b829778 <col:12> 'int' 0 ","20532":"`-FunctionDecl 0x133928238  line:1:1 SYSCALL_DEFINE1 'int (int, int)'   |-ParmVarDecl 0x133928158 <col:17> col:17 sigpending 'int'   |-ParmVarDecl 0x1339280d8 <col:29> col:29 referenced old_sigset_t 'int'   `-CompoundStmt 0x1339284f8 <line:2:1, line:4:1> ","20714":"`-FunctionDecl 0x1479281c8  line:1:1 invalid get_mgr_hdl 'int (int)'   |-ParmVarDecl 0x1479280f0 <line:3:2, col:10> col:10 invalid p_fm_config_conx_hdlt 'int'   `-CompoundStmt 0x1479286a0 <line:6:1, line:21:1>     |-SwitchStmt 0x1479282c8 <line:7:2, line:17:2>     | |-RecoveryExpr 0x1479282a8 <line:7:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x147928628 <line:8:2, line:17:2>     |   |-ReturnStmt 0x1479283d0 <line:10:4, col:16>     |   | `-CXXDependentScopeMemberExpr 0x147928388 <col:11, col:16> '<dependent type>' contains-errors lvalue ->sm_hdl     |   |   `-RecoveryExpr 0x147928368 <col:11> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x1479284c0 <line:12:4, col:16>     |   | `-CXXDependentScopeMemberExpr 0x147928478 <col:11, col:16> '<dependent type>' contains-errors lvalue ->pm_hdl     |   |   `-RecoveryExpr 0x147928458 <col:11> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x1479285b0 <line:14:4, col:16>     |   | `-CXXDependentScopeMemberExpr 0x147928568 <col:11, col:16> '<dependent type>' contains-errors lvalue ->fe_hdl     |   |   `-RecoveryExpr 0x147928548 <col:11> '<dependent type>' contains-errors lvalue     |   `-DefaultStmt 0x147928608 <line:15:3, line:16:11>     |     `-ReturnStmt 0x1479285f8 <col:4, col:11>     |       `-RecoveryExpr 0x1479285d8 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x147928690 <line:19:2, col:9>       `-RecoveryExpr 0x147928670 <col:9> '<dependent type>' contains-errors lvalue ","20254":"`-FunctionDecl 0x11e026960  col:32 implicit used fmod 'double (double, double)' extern   |-ParmVarDecl 0x11e026a60 <<invalid sloc>> <invalid sloc> 'double'   |-ParmVarDecl 0x11e026ac8 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x11e026a08 <<invalid sloc>> Implicit 1013   |-ConstAttr 0x11e026b40 <col:32> Implicit   `-NoThrowAttr 0x11e026b68 <col:32> Implicit ","20674":"`-FunctionDecl 0x1548296e8  col:43 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x1548297e8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x154829790 <<invalid sloc>> Implicit 901 ","20789":"`-FunctionDecl 0x140826eb8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x140826fb8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x140826f60 <<invalid sloc>> Implicit 873 ","20315":"`-FunctionDecl 0x14d144de8  line:1:5 orangefs_set_acl 'int (struct inode *, struct posix_acl *, int)'   |-ParmVarDecl 0x14d128648 <col:22, col:36> col:36 used inode 'struct inode *'   |-ParmVarDecl 0x14d144c28 <col:43, col:61> col:61 used acl 'struct posix_acl *'   |-ParmVarDecl 0x14d144ca8 <col:66, col:70> col:70 used type 'int'   `-CompoundStmt 0x14d149088 <line:2:1, line:67:1>     |-DeclStmt 0x14d1452e8 <line:3:2, col:61>     | |-RecordDecl 0x14d144ef0 <col:2, col:9> col:9 struct orangefs_inode_s     | `-VarDecl 0x14d145058 <col:2, col:60> col:27 used orangefs_inode 'struct orangefs_inode_s *' cinit     |   `-ImplicitCastExpr 0x14d1452b8 <col:44, col:60> 'struct orangefs_inode_s *' <IntegralToPointer>     |     `-CallExpr 0x14d145278 <col:44, col:60> 'int'     |       |-ImplicitCastExpr 0x14d145260 <col:44> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14d1451f0 <col:44> 'int ()' Function 0x14d145138 'ORANGEFS_I' 'int ()'     |       `-ImplicitCastExpr 0x14d1452a0 <col:55> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x14d145210 <col:55> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'     |-DeclStmt 0x14d1453a0 <line:4:2, col:15>     | `-VarDecl 0x14d145318 <col:2, col:14> col:6 used error 'int' cinit     |   `-IntegerLiteral 0x14d145380 <col:14> 'int' 0     |-DeclStmt 0x14d145470 <line:5:2, col:20>     | `-VarDecl 0x14d1453d0 <col:2, col:16> col:8 used value 'void *' cinit     |   `-RecoveryExpr 0x14d145450 <col:16> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x14d145568 <line:6:2, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x14d145548 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x14d145528 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14d1454c0 <col:16> 'int' 0     |-DeclStmt 0x14d145650 <line:7:2, col:25>     | `-VarDecl 0x14d1455b0 <col:2, col:21> col:14 used name 'const char *' cinit     |   `-RecoveryExpr 0x14d145630 <col:21> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x14d1456a0 <line:9:2, line:37:2>     | |-ImplicitCastExpr 0x14d145688 <line:9:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14d145668 <col:10> 'int' lvalue ParmVar 0x14d144ca8 'type' 'int'     | `-CompoundStmt 0x14d148038 <col:16, line:37:2>     |   |-BinaryOperator 0x14d145758 <line:11:3, col:10> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x14d1456e0 <col:3> 'const char *' contains-errors lvalue Var 0x14d1455b0 'name' 'const char *'     |   | `-RecoveryExpr 0x14d145738 <col:10> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x14d147e90 <line:12:3, line:29:3>     |   | |-ImplicitCastExpr 0x14d145798 <line:12:7> 'struct posix_acl *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14d145778 <col:7> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'     |   | `-CompoundStmt 0x14d147e50 <col:12, line:29:3>     |   |   |-BinaryOperator 0x14d145a68 <line:15:4, col:43> 'int' '='     |   |   | |-DeclRefExpr 0x14d1457b0 <col:4> 'int' lvalue Var 0x14d145318 'error' 'int'     |   |   | `-CallExpr 0x14d145a20 <col:12, col:43> 'int'     |   |   |   |-ImplicitCastExpr 0x14d145a08 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x14d1458b0 <col:12> 'int ()' Function 0x14d1457f8 'posix_acl_equiv_mode' 'int ()'     |   |   |   |-ImplicitCastExpr 0x14d145a50 <col:33> 'struct posix_acl *' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x14d1458d0 <col:33> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'     |   |   |   `-UnaryOperator 0x14d1459f0 <col:38, col:39> 'struct inode **' prefix '&' cannot overflow     |   |   |     `-DeclRefExpr 0x14d145970 <col:39> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'     |   |   |-IfStmt 0x14d147840 <line:16:4, line:21:4>     |   |   | |-BinaryOperator 0x14d145ae0 <line:16:8, col:16> 'int' '<'     |   |   | | |-ImplicitCastExpr 0x14d145ac8 <col:8> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x14d145a88 <col:8> 'int' lvalue Var 0x14d145318 'error' 'int'     |   |   | | `-IntegerLiteral 0x14d145aa8 <col:16> 'int' 0     |   |   | `-CompoundStmt 0x14d147820 <col:19, line:21:4>     |   |   |   |-CallExpr 0x14d147758 <line:17:5, line:19:14> 'int'     |   |   |   | |-ImplicitCastExpr 0x14d147740 <line:17:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | | `-DeclRefExpr 0x14d145be0 <col:5> 'int ()' Function 0x14d145b28 'gossip_err' 'int ()'     |   |   |   | |-ImplicitCastExpr 0x14d147790 <col:16> 'char *' <ArrayToPointerDecay>     |   |   |   | | `-StringLiteral 0x14d147640 <col:16> 'char[4]' lvalue \"STR\"     |   |   |   | |-ImplicitCastExpr 0x14d1477a8 <line:18:9> 'const char *' <ArrayToPointerDecay>     |   |   |   | | `-PredefinedExpr 0x14d147708 <col:9> 'const char[17]' lvalue __func__     |   |   |   | |   `-StringLiteral 0x14d1476e0 <col:9> 'const char[17]' lvalue \"orangefs_set_acl\"     |   |   |   | `-ImplicitCastExpr 0x14d1477c0 <line:19:9> 'int' <LValueToRValue>     |   |   |   |   `-DeclRefExpr 0x14d147720 <col:9> 'int' lvalue Var 0x14d145318 'error' 'int'     |   |   |   `-ReturnStmt 0x14d147810 <line:20:5, col:12>     |   |   |     `-ImplicitCastExpr 0x14d1477f8 <col:12> 'int' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x14d1477d8 <col:12> 'int' lvalue Var 0x14d145318 'error' 'int'     |   |   |-IfStmt 0x14d147ab0 <line:23:4, line:24:31>     |   |   | |-BinaryOperator 0x14d147918 <line:23:8, col:25> 'int' contains-errors '!='     |   |   | | |-RecoveryExpr 0x14d147898 <col:8, col:15> '<dependent type>' contains-errors lvalue     |   |   | | | `-DeclRefExpr 0x14d147860 <col:8> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'     |   |   | | `-DeclRefExpr 0x14d1478f8 <col:25> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'     |   |   | `-CallExpr 0x14d147a70 <line:24:5, col:31> 'int'     |   |   |   |-ImplicitCastExpr 0x14d147a58 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x14d147a18 <col:5> 'int ()' Function 0x14d147960 'SetModeFlag' 'int ()'     |   |   |   `-ImplicitCastExpr 0x14d147a98 <col:17> 'struct orangefs_inode_s *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x14d147a38 <col:17> 'struct orangefs_inode_s *' lvalue Var 0x14d145058 'orangefs_inode' 'struct orangefs_inode_s *'     |   |   |-BinaryOperator 0x14d147b88 <line:25:4, col:20> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x14d147b08 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x14d147ad0 <col:4> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'     |   |   | `-DeclRefExpr 0x14d147b68 <col:20> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'     |   |   |-CallExpr 0x14d147ce0 <line:26:4, col:31> 'int'     |   |   | |-ImplicitCastExpr 0x14d147cc8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x14d147c88 <col:4> 'int ()' Function 0x14d147bd0 'mark_inode_dirty_sync' 'int ()'     |   |   | `-ImplicitCastExpr 0x14d147d08 <col:26> 'struct inode *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x14d147ca8 <col:26> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'     |   |   `-IfStmt 0x14d147e30 <line:27:4, line:28:11>     |   |     |-BinaryOperator 0x14d147d78 <line:27:8, col:17> 'int' '=='     |   |     | |-ImplicitCastExpr 0x14d147d60 <col:8> 'int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x14d147d20 <col:8> 'int' lvalue Var 0x14d145318 'error' 'int'     |   |     | `-IntegerLiteral 0x14d147d40 <col:17> 'int' 0     |   |     `-BinaryOperator 0x14d147e10 <line:28:5, col:11> 'struct posix_acl *' contains-errors '='     |   |       |-DeclRefExpr 0x14d147d98 <col:5> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'     |   |       `-RecoveryExpr 0x14d147df0 <col:11> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x14d147eb0 <line:30:3>     |   |-BreakStmt 0x14d147ed8 <line:33:3>     |   `-DefaultStmt 0x14d148018 <line:34:2, line:35:35>     |     `-CallExpr 0x14d147f98 <col:3, col:35> 'int'     |       |-ImplicitCastExpr 0x14d147f80 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14d147ee0 <col:3> 'int ()' Function 0x14d145b28 'gossip_err' 'int ()'     |       |-ImplicitCastExpr 0x14d147fd0 <col:14> 'char *' <ArrayToPointerDecay>     |       | `-StringLiteral 0x14d147f00 <col:14> 'char[4]' lvalue \"STR\"     |       |-ImplicitCastExpr 0x14d147fe8 <col:21> 'const char *' <ArrayToPointerDecay>     |       | `-PredefinedExpr 0x14d147f48 <col:21> 'const char[17]' lvalue __func__     |       |   `-StringLiteral 0x14d147f20 <col:21> 'const char[17]' lvalue \"orangefs_set_acl\"     |       `-ImplicitCastExpr 0x14d148000 <col:31> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14d147f60 <col:31> 'int' lvalue ParmVar 0x14d144ca8 'type' 'int'     |-IfStmt 0x14d1489a0 <line:45:2, line:54:2>     | |-ImplicitCastExpr 0x14d1483a8 <line:45:6> 'struct posix_acl *' <LValueToRValue>     | | `-DeclRefExpr 0x14d148388 <col:6> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'     | `-CompoundStmt 0x14d148988 <col:11, line:54:2>     |   `-IfStmt 0x14d148968 <line:52:3, line:53:9>     |     |-BinaryOperator 0x14d1488e0 <line:52:7, col:15> 'int' '<'     |     | |-ImplicitCastExpr 0x14d1488c8 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x14d148888 <col:7> 'int' lvalue Var 0x14d145318 'error' 'int'     |     | `-IntegerLiteral 0x14d1488a8 <col:15> 'int' 0     |     `-GotoStmt 0x14d148950 <line:53:4, col:9> 'out' 0x14d148900     |-LabelStmt 0x14d148db8 <line:62:1, line:63:13> 'out'     | `-CallExpr 0x14d148d78 <col:2, col:13> 'int' contains-errors     |   |-ImplicitCastExpr 0x14d148d60 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d148d20 <col:2> 'int ()' Function 0x14d148c68 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x14d148da0 <col:8> 'void *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14d148d40 <col:8> 'void *' contains-errors lvalue Var 0x14d1453d0 'value' 'void *'     |-IfStmt 0x14d149020 <line:64:2, line:65:34>     | |-UnaryOperator 0x14d148e10 <line:64:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14d148df8 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14d148dd8 <col:7> 'int' lvalue Var 0x14d145318 'error' 'int'     | `-CallExpr 0x14d148fa0 <line:65:3, col:34> 'int'     |   |-ImplicitCastExpr 0x14d148f88 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d148f08 <col:3> 'int ()' Function 0x14d148e50 'set_cached_acl' 'int ()'     |   |-ImplicitCastExpr 0x14d148fd8 <col:18> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x14d148f28 <col:18> 'struct inode *' lvalue ParmVar 0x14d128648 'inode' 'struct inode *'     |   |-ImplicitCastExpr 0x14d148ff0 <col:25> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x14d148f48 <col:25> 'int' lvalue ParmVar 0x14d144ca8 'type' 'int'     |   `-ImplicitCastExpr 0x14d149008 <col:31> 'struct posix_acl *' <LValueToRValue>     |     `-DeclRefExpr 0x14d148f68 <col:31> 'struct posix_acl *' lvalue ParmVar 0x14d144c28 'acl' 'struct posix_acl *'     `-ReturnStmt 0x14d149078 <line:66:2, col:9>       `-ImplicitCastExpr 0x14d149060 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14d149040 <col:9> 'int' lvalue Var 0x14d145318 'error' 'int' ","20500":"`-FunctionDecl 0x149026b88  line:1:24 referenced _gen_bpf_chain_lvl_res 'struct bpf_blk *(struct bpf_state *, const struct db_sys_list *, struct bpf_blk *, const struct bpf_jump *)' static   |-ParmVarDecl 0x14900e2e8 <col:47, col:65> col:65 used state 'struct bpf_state *'   |-ParmVarDecl 0x1490266c8 <line:2:12, col:38> col:38 used sys 'const struct db_sys_list *'   |-ParmVarDecl 0x1490267e8 <line:3:12, col:28> col:28 used blk 'struct bpf_blk *'   |-ParmVarDecl 0x1490269b8 <line:4:12, col:35> col:35 used nxt_jump 'const struct bpf_jump *'   `-CompoundStmt 0x14902ac18 <line:5:1, line:88:1>     |-DeclStmt 0x149026d18 <line:6:2, col:8>     | `-VarDecl 0x149026cb0 <col:2, col:6> col:6 used rc 'int'     |-DeclStmt 0x149026db0 <line:7:2, col:19>     | `-VarDecl 0x149026d48 <col:2, col:15> col:15 used iter 'unsigned int'     |-DeclStmt 0x149026e58 <line:8:2, col:23>     | `-VarDecl 0x149026df0 <col:2, col:18> col:18 used b_new 'struct bpf_blk *'     |-DeclStmt 0x149027058 <line:9:2, col:26>     | |-RecordDecl 0x149026e70 <col:2, col:9> col:9 struct bpf_instr     | `-VarDecl 0x149026fd8 <col:2, col:20> col:20 used i_iter 'struct bpf_instr *'     |-DeclStmt 0x149027258 <line:10:2, col:32>     | |-RecordDecl 0x149027070 <col:2, col:9> col:9 struct db_arg_chain_tree     | `-VarDecl 0x1490271d8 <col:2, col:28> col:28 used node 'struct db_arg_chain_tree *'     |-IfStmt 0x149027318 <line:12:2, line:13:10>     | |-RecoveryExpr 0x1490272a8 <line:12:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149027270 <col:6> 'struct bpf_blk *' lvalue ParmVar 0x1490267e8 'blk' 'struct bpf_blk *'     | `-ReturnStmt 0x149027308 <line:13:3, col:10>     |   `-ImplicitCastExpr 0x1490272f0 <col:10> 'struct bpf_blk *' <LValueToRValue>     |     `-DeclRefExpr 0x1490272d0 <col:10> 'struct bpf_blk *' lvalue ParmVar 0x1490267e8 'blk' 'struct bpf_blk *'     |-ForStmt 0x14902a868 <line:16:2, line:80:2>     | |-BinaryOperator 0x149027390 <line:16:7, col:14> 'unsigned int' '='     | | |-DeclRefExpr 0x149027338 <col:7> 'unsigned int' lvalue Var 0x149026d48 'iter' 'unsigned int'     | | `-ImplicitCastExpr 0x149027378 <col:14> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x149027358 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x149027430 <col:17, col:29> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1490273b0 <col:17> 'unsigned int' lvalue Var 0x149026d48 'iter' 'unsigned int'     | | `-RecoveryExpr 0x149027408 <col:24, col:29> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1490273d0 <col:24> 'struct bpf_blk *' lvalue ParmVar 0x1490267e8 'blk' 'struct bpf_blk *'     | |-UnaryOperator 0x149027470 <col:38, col:42> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x149027450 <col:38> 'unsigned int' lvalue Var 0x149026d48 'iter' 'unsigned int'     | `-CompoundStmt 0x14902a838 <col:46, line:80:2>     |   |-BinaryOperator 0x149027590 <line:17:3, col:27> 'struct bpf_instr *' contains-errors '='     |   | |-DeclRefExpr 0x149027488 <col:3> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   | `-UnaryOperator 0x149027578 <col:12, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x149027558 <col:13, col:27> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x149027528 <col:13, col:18> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x1490274e0 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x1490274a8 <col:13> 'struct bpf_blk *' lvalue ParmVar 0x1490267e8 'blk' 'struct bpf_blk *'     |   |     `-ImplicitCastExpr 0x149027540 <col:23> 'unsigned int' <LValueToRValue>     |   |       `-DeclRefExpr 0x149027508 <col:23> 'unsigned int' lvalue Var 0x149026d48 'iter' 'unsigned int'     |   |-SwitchStmt 0x148922e88 <line:18:3, line:43:3>     |   | |-ImplicitCastExpr 0x148922e70 <line:18:11, col:22> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-CXXDependentScopeMemberExpr 0x148922e28 <col:11, col:22> '<dependent type>' contains-errors lvalue .type     |   | |   `-RecoveryExpr 0x148922e00 <col:11, col:19> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x1490275b0 <col:11> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   | `-CompoundStmt 0x148923b38 <col:28, line:43:3>     |   |   |-BreakStmt 0x148922f10 <line:23:4>     |   |   |-BinaryOperator 0x148923100 <line:25:4, line:27:22> 'struct bpf_blk *' contains-errors '='     |   |   | |-DeclRefExpr 0x148922f30 <line:25:4> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   | `-CallExpr 0x1489230c0 <col:12, line:27:22> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x148922f50 <line:25:12> 'struct bpf_blk *(struct bpf_state *, const struct db_sys_list *, struct bpf_blk *, const struct bpf_jump *)' Function 0x149026b88 '_gen_bpf_chain_lvl_res' 'struct bpf_blk *(struct bpf_state *, const struct db_sys_list *, struct bpf_blk *, const struct bpf_jump *)'     |   |   |   |-DeclRefExpr 0x148922f70 <col:35> 'struct bpf_state *' lvalue ParmVar 0x14900e2e8 'state' 'struct bpf_state *'     |   |   |   |-DeclRefExpr 0x148922f90 <col:42> 'const struct db_sys_list *' lvalue ParmVar 0x1490266c8 'sys' 'const struct db_sys_list *'     |   |   |   |-CXXDependentScopeMemberExpr 0x148923058 <line:26:14, col:29> '<dependent type>' contains-errors lvalue .blk     |   |   |   | `-CXXDependentScopeMemberExpr 0x148923010 <col:14, col:25> '<dependent type>' contains-errors lvalue .tgt     |   |   |   |   `-RecoveryExpr 0x148922fe8 <col:14, col:22> '<dependent type>' contains-errors lvalue     |   |   |   |     `-DeclRefExpr 0x148922fb0 <col:14> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   |   |   `-DeclRefExpr 0x1489230a0 <line:27:14> 'const struct bpf_jump *' lvalue ParmVar 0x1490269b8 'nxt_jump' 'const struct bpf_jump *'     |   |   |-IfStmt 0x148923200 <line:28:4, line:29:12>     |   |   | |-BinaryOperator 0x148923198 <line:28:8, col:17> 'int' contains-errors '=='     |   |   | | |-DeclRefExpr 0x148923120 <col:8> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   | | `-RecoveryExpr 0x148923178 <col:17> '<dependent type>' contains-errors lvalue     |   |   | `-ReturnStmt 0x1489231f0 <line:29:5, col:12>     |   |   |   `-RecoveryExpr 0x1489231d0 <col:12> '<dependent type>' contains-errors lvalue     |   |   |-BinaryOperator 0x148923438 <line:30:4, col:41> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x148923258 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x148923220 <col:4> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   |   | `-CallExpr 0x148923410 <col:17, col:41> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x148923390 <col:17> 'int ()' Function 0x1489232d8 '_BPF_JMP_HSH' 'int ()'     |   |   |   `-RecoveryExpr 0x1489233e8 <col:30, col:37> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x1489233b0 <col:30> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   |-BreakStmt 0x148923458 <line:31:4>     |   |   |-BinaryOperator 0x148923640 <line:33:4, col:54> 'struct db_arg_chain_tree *' contains-errors '='     |   |   | |-DeclRefExpr 0x148923478 <col:4> 'struct db_arg_chain_tree *' lvalue Var 0x1490271d8 'node' 'struct db_arg_chain_tree *'     |   |   | `-CStyleCastExpr 0x148923618 <col:11, col:54> 'struct db_arg_chain_tree *' contains-errors <Dependent>     |   |   |   `-CXXDependentScopeMemberExpr 0x148923540 <col:39, col:54> '<dependent type>' contains-errors lvalue .db     |   |   |     `-CXXDependentScopeMemberExpr 0x1489234f8 <col:39, col:50> '<dependent type>' contains-errors lvalue .tgt     |   |   |       `-RecoveryExpr 0x1489234d0 <col:39, col:47> '<dependent type>' contains-errors lvalue     |   |   |         `-DeclRefExpr 0x148923498 <col:39> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   |   |-BinaryOperator 0x1489238c0 <line:34:4, line:35:38> 'struct bpf_blk *' contains-errors '='     |   |   | |-DeclRefExpr 0x148923660 <line:34:4> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   | `-CallExpr 0x148923878 <col:12, line:35:38> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x148923760 <line:34:12> 'int ()' Function 0x1489236a8 '_gen_bpf_chain' 'int ()'     |   |   |   |-DeclRefExpr 0x148923780 <col:27> 'struct bpf_state *' lvalue ParmVar 0x14900e2e8 'state' 'struct bpf_state *'     |   |   |   |-DeclRefExpr 0x1489237a0 <col:34> 'const struct db_sys_list *' lvalue ParmVar 0x1490266c8 'sys' 'const struct db_sys_list *'     |   |   |   |-DeclRefExpr 0x1489237c0 <col:39> 'struct db_arg_chain_tree *' lvalue Var 0x1490271d8 'node' 'struct db_arg_chain_tree *'     |   |   |   |-DeclRefExpr 0x1489237e0 <line:35:13> 'const struct bpf_jump *' lvalue ParmVar 0x1490269b8 'nxt_jump' 'const struct bpf_jump *'     |   |   |   `-UnaryOperator 0x148923860 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x148923838 <col:24, col:29> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x148923800 <col:24> 'struct bpf_blk *' lvalue ParmVar 0x1490267e8 'blk' 'struct bpf_blk *'     |   |   |-IfStmt 0x1489239c0 <line:36:4, line:37:12>     |   |   | |-BinaryOperator 0x148923958 <line:36:8, col:17> 'int' contains-errors '=='     |   |   | | |-DeclRefExpr 0x1489238e0 <col:8> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   | | `-RecoveryExpr 0x148923938 <col:17> '<dependent type>' contains-errors lvalue     |   |   | `-ReturnStmt 0x1489239b0 <line:37:5, col:12>     |   |   |   `-RecoveryExpr 0x148923990 <col:12> '<dependent type>' contains-errors lvalue     |   |   |-BinaryOperator 0x148923ae8 <line:38:4, col:41> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x148923a18 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x1489239e0 <col:4> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   |   | `-CallExpr 0x148923ac0 <col:17, col:41> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x148923a40 <col:17> 'int ()' Function 0x1489232d8 '_BPF_JMP_HSH' 'int ()'     |   |   |   `-RecoveryExpr 0x148923a98 <col:30, col:37> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x148923a60 <col:30> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   |-BreakStmt 0x148923b08 <line:39:4>     |   |   `-DefaultStmt 0x148923b18 <line:40:3, col:10>     |   |     `-NullStmt 0x148923b10 <col:10>     |   |-SwitchStmt 0x148923c60 <line:44:3, line:69:3>     |   | |-ImplicitCastExpr 0x148923c48 <line:44:11, col:22> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-CXXDependentScopeMemberExpr 0x148923c00 <col:11, col:22> '<dependent type>' contains-errors lvalue .type     |   | |   `-RecoveryExpr 0x148923bd8 <col:11, col:19> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x148923ba0 <col:11> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   | `-CompoundStmt 0x14902a6a8 <col:28, line:69:3>     |   |   |-BreakStmt 0x148923c88 <line:49:4>     |   |   |-BinaryOperator 0x14902a060 <line:51:4, line:53:22> 'struct bpf_blk *' contains-errors '='     |   |   | |-DeclRefExpr 0x148923c90 <line:51:4> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   | `-CallExpr 0x14902a020 <col:12, line:53:22> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x148923cb0 <line:51:12> 'struct bpf_blk *(struct bpf_state *, const struct db_sys_list *, struct bpf_blk *, const struct bpf_jump *)' Function 0x149026b88 '_gen_bpf_chain_lvl_res' 'struct bpf_blk *(struct bpf_state *, const struct db_sys_list *, struct bpf_blk *, const struct bpf_jump *)'     |   |   |   |-DeclRefExpr 0x148923cd0 <col:35> 'struct bpf_state *' lvalue ParmVar 0x14900e2e8 'state' 'struct bpf_state *'     |   |   |   |-DeclRefExpr 0x148923cf0 <col:42> 'const struct db_sys_list *' lvalue ParmVar 0x1490266c8 'sys' 'const struct db_sys_list *'     |   |   |   |-CXXDependentScopeMemberExpr 0x148923db8 <line:52:14, col:29> '<dependent type>' contains-errors lvalue .blk     |   |   |   | `-CXXDependentScopeMemberExpr 0x148923d70 <col:14, col:25> '<dependent type>' contains-errors lvalue .tgt     |   |   |   |   `-RecoveryExpr 0x148923d48 <col:14, col:22> '<dependent type>' contains-errors lvalue     |   |   |   |     `-DeclRefExpr 0x148923d10 <col:14> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   |   |   `-DeclRefExpr 0x14902a000 <line:53:14> 'const struct bpf_jump *' lvalue ParmVar 0x1490269b8 'nxt_jump' 'const struct bpf_jump *'     |   |   |-BinaryOperator 0x14902a1c8 <line:56:4, col:41> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x14902a0f8 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x14902a0c0 <col:4> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   |   | `-CallExpr 0x14902a1a0 <col:17, col:41> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x14902a120 <col:17> 'int ()' Function 0x1489232d8 '_BPF_JMP_HSH' 'int ()'     |   |   |   `-RecoveryExpr 0x14902a178 <col:30, col:37> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x14902a140 <col:30> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   |-BreakStmt 0x14902a1e8 <line:57:4>     |   |   |-BinaryOperator 0x14902a350 <line:59:4, col:54> 'struct db_arg_chain_tree *' contains-errors '='     |   |   | |-DeclRefExpr 0x14902a1f0 <col:4> 'struct db_arg_chain_tree *' lvalue Var 0x1490271d8 'node' 'struct db_arg_chain_tree *'     |   |   | `-CStyleCastExpr 0x14902a328 <col:11, col:54> 'struct db_arg_chain_tree *' contains-errors <Dependent>     |   |   |   `-CXXDependentScopeMemberExpr 0x14902a2b8 <col:39, col:54> '<dependent type>' contains-errors lvalue .db     |   |   |     `-CXXDependentScopeMemberExpr 0x14902a270 <col:39, col:50> '<dependent type>' contains-errors lvalue .tgt     |   |   |       `-RecoveryExpr 0x14902a248 <col:39, col:47> '<dependent type>' contains-errors lvalue     |   |   |         `-DeclRefExpr 0x14902a210 <col:39> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   |   |-BinaryOperator 0x14902a4f0 <line:60:4, line:61:38> 'struct bpf_blk *' contains-errors '='     |   |   | |-DeclRefExpr 0x14902a370 <line:60:4> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   | `-CallExpr 0x14902a4a8 <col:12, line:61:38> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x14902a390 <line:60:12> 'int ()' Function 0x1489236a8 '_gen_bpf_chain' 'int ()'     |   |   |   |-DeclRefExpr 0x14902a3b0 <col:27> 'struct bpf_state *' lvalue ParmVar 0x14900e2e8 'state' 'struct bpf_state *'     |   |   |   |-DeclRefExpr 0x14902a3d0 <col:34> 'const struct db_sys_list *' lvalue ParmVar 0x1490266c8 'sys' 'const struct db_sys_list *'     |   |   |   |-DeclRefExpr 0x14902a3f0 <col:39> 'struct db_arg_chain_tree *' lvalue Var 0x1490271d8 'node' 'struct db_arg_chain_tree *'     |   |   |   |-DeclRefExpr 0x14902a410 <line:61:13> 'const struct bpf_jump *' lvalue ParmVar 0x1490269b8 'nxt_jump' 'const struct bpf_jump *'     |   |   |   `-UnaryOperator 0x14902a490 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x14902a468 <col:24, col:29> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x14902a430 <col:24> 'struct bpf_blk *' lvalue ParmVar 0x1490267e8 'blk' 'struct bpf_blk *'     |   |   |-BinaryOperator 0x14902a658 <line:64:4, col:41> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x14902a588 <col:4, col:12> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x14902a550 <col:4> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |   |   | `-CallExpr 0x14902a630 <col:17, col:41> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x14902a5b0 <col:17> 'int ()' Function 0x1489232d8 '_BPF_JMP_HSH' 'int ()'     |   |   |   `-RecoveryExpr 0x14902a608 <col:30, col:37> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x14902a5d0 <col:30> 'struct bpf_blk *' lvalue Var 0x149026df0 'b_new' 'struct bpf_blk *'     |   |   |-BreakStmt 0x14902a678 <line:65:4>     |   |   `-DefaultStmt 0x14902a688 <line:66:3, col:10>     |   |     `-NullStmt 0x14902a680 <col:10>     |   `-SwitchStmt 0x14902a7c0 <line:70:3, line:79:3>     |     |-ImplicitCastExpr 0x14902a7a8 <line:70:11, col:21> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x14902a760 <col:11, col:21> '<dependent type>' contains-errors lvalue .type     |     |   `-RecoveryExpr 0x14902a738 <col:11, col:19> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14902a700 <col:11> 'struct bpf_instr *' lvalue Var 0x149026fd8 'i_iter' 'struct bpf_instr *'     |     `-CompoundStmt 0x14902a818 <col:27, line:79:3>     |       |-BreakStmt 0x14902a7e8 <line:75:4>     |       `-DefaultStmt 0x14902a7f8 <line:76:3, col:10>     |         `-NullStmt 0x14902a7f0 <col:10>     |-BinaryOperator 0x14902ab38 <line:83:2, col:30> 'int' '='     | |-DeclRefExpr 0x14902a8a0 <col:2> 'int' lvalue Var 0x149026cb0 'rc' 'int'     | `-CallExpr 0x14902aae8 <col:7, col:30> 'int'     |   |-ImplicitCastExpr 0x14902aad0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14902a9a0 <col:7> 'int ()' Function 0x14902a8e8 '_hsh_add' 'int ()'     |   |-ImplicitCastExpr 0x14902ab20 <col:16> 'struct bpf_state *' <LValueToRValue>     |   | `-DeclRefExpr 0x14902a9c0 <col:16> 'struct bpf_state *' lvalue ParmVar 0x14900e2e8 'state' 'struct bpf_state *'     |   |-UnaryOperator 0x14902aa60 <col:23, col:24> 'struct bpf_blk **' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x14902a9e0 <col:24> 'struct bpf_blk *' lvalue ParmVar 0x1490267e8 'blk' 'struct bpf_blk *'     |   `-IntegerLiteral 0x14902aa78 <col:29> 'int' 0     `-ReturnStmt 0x14902ac08 <line:87:2, col:9>       `-ImplicitCastExpr 0x14902abf0 <col:9> 'struct bpf_blk *' <LValueToRValue>         `-DeclRefExpr 0x14902abd0 <col:9> 'struct bpf_blk *' lvalue ParmVar 0x1490267e8 'blk' 'struct bpf_blk *' ","21138":"`-FunctionDecl 0x11e80aa78  col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x11e80ab78 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11e80abe0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x11e80ac48 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11e80ab20 <<invalid sloc>> Implicit 884 ","20237":"`-FunctionDecl 0x12400ddf8  line:1:12 invalid init_ssl_connection 'int (int *)' static   |-ParmVarDecl 0x12400dd28 <col:32, col:37> col:37 invalid con 'int *'   `-CompoundStmt 0x12402a270 <line:2:2, line:61:2>     |-DeclStmt 0x12400df28 <line:3:2, col:7>     | `-VarDecl 0x12400dec0 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x12400dfc0 <line:4:2, col:17>     | `-VarDecl 0x12400df58 <col:2, col:14> col:14 used str 'const char *'     |-DeclStmt 0x12400e070 <line:6:2, col:19>     | `-VarDecl 0x12400e008 <col:2, col:7> col:7 used verify_error 'long'     |-IfStmt 0x124028338 <line:9:2, line:27:3>     | |-BinaryOperator 0x12400e2c8 <line:9:6, col:29> 'int' contains-errors '<='     | | |-ParenExpr 0x12400e288 <col:6, col:24> 'int' contains-errors     | | | `-BinaryOperator 0x12400e268 <col:7, col:23> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x12400e088 <col:7> 'int' lvalue Var 0x12400dec0 'i' 'int'     | | |   `-CallExpr 0x12400e240 <col:9, col:23> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x12400e200 <col:9> 'int ()' Function 0x12400e148 'SSL_accept' 'int ()'     | | |     `-RecoveryExpr 0x12400e220 <col:20> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12400e2a8 <col:29> 'int' 0     | `-CompoundStmt 0x124028300 <line:10:3, line:27:3>     |   |-IfStmt 0x124027b10 <line:11:3, line:15:4>     |   | |-CallExpr 0x124027868 <line:11:7, col:30> 'int'     |   | | |-ImplicitCastExpr 0x124027850 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x12400e3c8 <col:7> 'int ()' Function 0x12400e310 'BIO_sock_should_retry' 'int ()'     |   | | `-ImplicitCastExpr 0x124027890 <col:29> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x124027800 <col:29> 'int' lvalue Var 0x12400dec0 'i' 'int'     |   | `-CompoundStmt 0x124027af0 <line:12:4, line:15:4>     |   |   |-CallExpr 0x124027a70 <line:13:4, col:30> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x124027988 <col:4> 'int ()' Function 0x1240278d0 'BIO_printf' 'int ()'     |   |   | |-RecoveryExpr 0x124027a50 <col:15> '<dependent type>' contains-errors lvalue     |   |   | `-StringLiteral 0x124027a00 <col:25> 'char[4]' lvalue \"STR\"     |   |   `-ReturnStmt 0x124027ae0 <line:14:4, col:12>     |   |     `-ParenExpr 0x124027ac0 <col:10, col:12> 'int'     |   |       `-IntegerLiteral 0x124027aa0 <col:11> 'int' 1     |   |-CallExpr 0x124027bd8 <line:17:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x124027b30 <col:3> 'int ()' Function 0x1240278d0 'BIO_printf' 'int ()'     |   | |-RecoveryExpr 0x124027bb8 <col:14> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x124027b68 <col:22> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x124027d70 <line:18:3, col:41> 'long' contains-errors '='     |   | |-DeclRefExpr 0x124027c08 <col:3> 'long' lvalue Var 0x12400e008 'verify_error' 'long'     |   | `-CallExpr 0x124027d48 <col:16, col:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x124027d08 <col:16> 'int ()' Function 0x124027c50 'SSL_get_verify_result' 'int ()'     |   |   `-RecoveryExpr 0x124027d28 <col:38> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x124028280 <line:19:3, line:25:28> has_else     |   | |-BinaryOperator 0x124027e08 <line:19:7, col:23> 'int' contains-errors '!='     |   | | |-DeclRefExpr 0x124027d90 <col:7> 'long' lvalue Var 0x12400e008 'verify_error' 'long'     |   | | `-RecoveryExpr 0x124027de8 <col:23> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x1240280e0 <line:20:4, line:23:4>     |   | | `-CallExpr 0x1240280a8 <line:21:4, line:22:48> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x124027e28 <line:21:4> 'int ()' Function 0x1240278d0 'BIO_printf' 'int ()'     |   | |   |-RecoveryExpr 0x124028030 <col:15> '<dependent type>' contains-errors lvalue     |   | |   |-StringLiteral 0x124027e60 <col:23> 'char[4]' lvalue \"STR\"     |   | |   `-CallExpr 0x124028068 <line:22:5, col:47> 'int'     |   | |     |-ImplicitCastExpr 0x124028050 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x124027f60 <col:5> 'int ()' Function 0x124027ea8 'X509_verify_cert_error_string' 'int ()'     |   | |     `-ImplicitCastExpr 0x124028090 <col:35> 'long' <LValueToRValue>     |   | |       `-DeclRefExpr 0x124027f80 <col:35> 'long' lvalue Var 0x12400e008 'verify_error' 'long'     |   | `-CallExpr 0x124028258 <line:25:4, col:28> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1240281d8 <col:4> 'int ()' Function 0x124028120 'ERR_print_errors' 'int ()'     |   |   `-RecoveryExpr 0x124028238 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1240282f0 <line:26:3, col:11>     |     `-ParenExpr 0x1240282d0 <col:9, col:11> 'int'     |       `-IntegerLiteral 0x1240282b0 <col:10> 'int' 0     |-CallExpr 0x124028608 <line:29:2, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124028438 <col:2> 'int ()' Function 0x124028380 'PEM_write_bio_SSL_SESSION' 'int ()'     | |-RecoveryExpr 0x1240285e8 <col:28> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x124028590 <col:38, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124028550 <col:38> 'int ()' Function 0x124028498 'SSL_get_session' 'int ()'     |   `-RecoveryExpr 0x124028570 <col:54> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1240297b0 <line:32:2, line:41:3>     | |-RecoveryExpr 0x124028780 <line:32:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x1240297a0 <line:33:3, line:41:3>     |-BinaryOperator 0x124029be0 <line:45:2, col:53> 'const char *' contains-errors '='     | |-DeclRefExpr 0x124029950 <col:2> 'const char *' lvalue Var 0x12400df58 'str' 'const char *'     | `-CallExpr 0x124029bb8 <col:6, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124029a50 <col:6> 'int ()' Function 0x124029998 'SSL_CIPHER_get_name' 'int ()'     |   `-CallExpr 0x124029b90 <col:26, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x124029b50 <col:26> 'int ()' Function 0x124029a98 'SSL_get_current_cipher' 'int ()'     |     `-RecoveryExpr 0x124029b70 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12402a058 <line:52:2, line:56:3>     | |-RecoveryExpr 0x124029f38 <line:52:6, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x12402a048 <line:53:3, line:56:3>     `-ReturnStmt 0x12402a260 <line:60:2, col:10>       `-ParenExpr 0x12402a240 <col:8, col:10> 'int'         `-IntegerLiteral 0x12402a220 <col:9> 'int' 1 ","20868":"`-FunctionDecl 0x1581259c8  col:7 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x158125ac8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x158125a70 <<invalid sloc>> Implicit 873 ","20294":"`-FunctionDecl 0x158940e88  line:1:12 set_sample_rate_v1 'int (struct snd_usb_audio *, int, struct usb_host_interface *, struct audioformat *, int)' static   |-ParmVarDecl 0x158928648 <col:31, col:53> col:53 used chip 'struct snd_usb_audio *'   |-ParmVarDecl 0x1589286c8 <col:59, col:63> col:63 used iface 'int'   |-ParmVarDecl 0x158940ac8 <line:2:10, col:37> col:37 used alts 'struct usb_host_interface *'   |-ParmVarDecl 0x158940c98 <line:3:10, col:30> col:30 used fmt 'struct audioformat *'   |-ParmVarDecl 0x158940d18 <col:35, col:39> col:39 used rate 'int'   `-CompoundStmt 0x1589469f8 <line:4:1, line:48:1>     |-DeclStmt 0x1589411e8 <line:5:2, col:36>     | |-RecordDecl 0x158940fa0 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x158941108 <col:2, col:33> col:21 used dev 'struct usb_device *' cinit     |   `-RecoveryExpr 0x1589411a8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158941170 <col:27> 'struct snd_usb_audio *' lvalue ParmVar 0x158928648 'chip' 'struct snd_usb_audio *'     |-DeclStmt 0x158941280 <line:6:2, col:17>     | `-VarDecl 0x158941218 <col:2, col:15> col:15 used ep 'unsigned int'     |-DeclStmt 0x1589413b0 <line:7:2, col:23>     | `-VarDecl 0x158941348 <col:2, col:22> col:16 used data 'unsigned char[3]'     |-DeclStmt 0x1589414e0 <line:8:2, col:16>     | |-VarDecl 0x1589413e0 <col:2, col:6> col:6 used err 'int'     | `-VarDecl 0x158941460 <col:2, col:11> col:11 used crate 'int'     |-BinaryOperator 0x158941758 <line:10:2, col:30> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x1589414f8 <col:2> 'unsigned int' lvalue Var 0x158941218 'ep' 'unsigned int'     | `-RecoveryExpr 0x158941730 <col:7, col:30> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1589416e8 <col:7, col:27> 'int'     |     |-ImplicitCastExpr 0x1589416d0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x158941640 <col:7> 'int ()' Function 0x158941588 'get_endpoint' 'int ()'     |     |-ImplicitCastExpr 0x158941718 <col:20> 'struct usb_host_interface *' <LValueToRValue>     |     | `-DeclRefExpr 0x158941660 <col:20> 'struct usb_host_interface *' lvalue ParmVar 0x158940ac8 'alts' 'struct usb_host_interface *'     |     `-IntegerLiteral 0x158941680 <col:26> 'int' 0     |-IfStmt 0x158941860 <line:13:2, line:14:10>     | |-RecoveryExpr 0x158941810 <line:13:6, col:52> '_Bool' contains-errors     | `-ReturnStmt 0x158941850 <line:14:3, col:10>     |   `-IntegerLiteral 0x158941830 <col:10> 'int' 0     |-BinaryOperator 0x158941978 <line:16:2, col:12> 'unsigned char' '='     | |-ArraySubscriptExpr 0x158941908 <col:2, col:8> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x1589418f0 <col:2> 'unsigned char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x158941880 <col:2> 'unsigned char[3]' lvalue Var 0x158941348 'data' 'unsigned char[3]'     | | `-IntegerLiteral 0x1589418a0 <col:7> 'int' 0     | `-ImplicitCastExpr 0x158941960 <col:12> 'unsigned char' <IntegralCast>     |   `-ImplicitCastExpr 0x158941948 <col:12> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x158941928 <col:12> 'int' lvalue ParmVar 0x158940d18 'rate' 'int'     |-BinaryOperator 0x1589434b0 <line:17:2, col:20> 'unsigned char' '='     | |-ArraySubscriptExpr 0x158943400 <col:2, col:8> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x1589419d8 <col:2> 'unsigned char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x158941998 <col:2> 'unsigned char[3]' lvalue Var 0x158941348 'data' 'unsigned char[3]'     | | `-IntegerLiteral 0x1589419b8 <col:7> 'int' 1     | `-ImplicitCastExpr 0x158943498 <col:12, col:20> 'unsigned char' <IntegralCast>     |   `-BinaryOperator 0x158943478 <col:12, col:20> 'int' '>>'     |     |-ImplicitCastExpr 0x158943460 <col:12> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x158943420 <col:12> 'int' lvalue ParmVar 0x158940d18 'rate' 'int'     |     `-IntegerLiteral 0x158943440 <col:20> 'int' 8     |-BinaryOperator 0x1589435d8 <line:18:2, col:20> 'unsigned char' '='     | |-ArraySubscriptExpr 0x158943528 <col:2, col:8> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x158943510 <col:2> 'unsigned char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x1589434d0 <col:2> 'unsigned char[3]' lvalue Var 0x158941348 'data' 'unsigned char[3]'     | | `-IntegerLiteral 0x1589434f0 <col:7> 'int' 2     | `-ImplicitCastExpr 0x1589435c0 <col:12, col:20> 'unsigned char' <IntegralCast>     |   `-BinaryOperator 0x1589435a0 <col:12, col:20> 'int' '>>'     |     |-ImplicitCastExpr 0x158943588 <col:12> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x158943548 <col:12> 'int' lvalue ParmVar 0x158940d18 'rate' 'int'     |     `-IntegerLiteral 0x158943568 <col:20> 'int' 16     |-IfStmt 0x158943ee8 <line:19:2, line:26:2>     | |-RecoveryExpr 0x158943b70 <line:19:6, line:22:31> '_Bool' contains-errors     | `-CompoundStmt 0x158943ec8 <col:34, line:26:2>     |   |-CallExpr 0x158943e30 <line:23:3, line:24:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x158943c70 <line:23:3> 'int ()' Function 0x158943bb8 'dev_err' 'int ()'     |   | |-UnaryOperator 0x158943cf0 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x158943cc8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x158943c90 <col:12> 'struct usb_device *' contains-errors lvalue Var 0x158941108 'dev' 'struct usb_device *'     |   | |-StringLiteral 0x158943d50 <col:22> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x158943d70 <line:24:4> 'int' lvalue ParmVar 0x1589286c8 'iface' 'int'     |   | |-RecoveryExpr 0x158943dc8 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x158943d90 <col:11> 'struct audioformat *' lvalue ParmVar 0x158940c98 'fmt' 'struct audioformat *'     |   | |-DeclRefExpr 0x158943df0 <col:28> 'int' lvalue ParmVar 0x158940d18 'rate' 'int'     |   | `-DeclRefExpr 0x158943e10 <col:34> 'unsigned int' lvalue Var 0x158941218 'ep' 'unsigned int'     |   `-ReturnStmt 0x158943eb8 <line:25:3, col:10>     |     `-ImplicitCastExpr 0x158943ea0 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x158943e80 <col:10> 'int' lvalue Var 0x1589413e0 'err' 'int'     |-IfStmt 0x1589440b0 <line:29:2, line:30:10>     | |-CallExpr 0x158944040 <line:29:6, col:40> 'int'     | | |-ImplicitCastExpr 0x158944028 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x158943fe8 <col:6> 'int ()' Function 0x158943f30 'snd_usb_get_sample_rate_quirk' 'int ()'     | | `-ImplicitCastExpr 0x158944068 <col:36> 'struct snd_usb_audio *' <LValueToRValue>     | |   `-DeclRefExpr 0x158944008 <col:36> 'struct snd_usb_audio *' lvalue ParmVar 0x158928648 'chip' 'struct snd_usb_audio *'     | `-ReturnStmt 0x1589440a0 <line:30:3, col:10>     |   `-IntegerLiteral 0x158944080 <col:10> 'int' 0     |-IfStmt 0x158946390 <line:32:2, line:39:2>     | |-RecoveryExpr 0x158946180 <line:32:6, line:35:31> '_Bool' contains-errors     | `-CompoundStmt 0x158946370 <col:34, line:39:2>     |   |-CallExpr 0x1589462f8 <line:36:3, line:37:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1589461a0 <line:36:3> 'int ()' Function 0x158943bb8 'dev_err' 'int ()'     |   | |-UnaryOperator 0x158946220 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x1589461f8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1589461c0 <col:12> 'struct usb_device *' contains-errors lvalue Var 0x158941108 'dev' 'struct usb_device *'     |   | |-StringLiteral 0x158946238 <col:22> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x158946258 <line:37:4> 'int' lvalue ParmVar 0x1589286c8 'iface' 'int'     |   | |-RecoveryExpr 0x1589462b0 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x158946278 <col:11> 'struct audioformat *' lvalue ParmVar 0x158940c98 'fmt' 'struct audioformat *'     |   | `-DeclRefExpr 0x1589462d8 <col:28> 'unsigned int' lvalue Var 0x158941218 'ep' 'unsigned int'     |   `-ReturnStmt 0x158946360 <line:38:3, col:10>     |     `-IntegerLiteral 0x158946340 <col:10> 'int' 0     |-BinaryOperator 0x1589466c8 <line:41:2, col:51> 'int' '='     | |-DeclRefExpr 0x1589463b0 <col:2> 'int' lvalue Var 0x158941460 'crate' 'int'     | `-BinaryOperator 0x1589466a8 <col:10, col:51> 'int' '|'     |   |-BinaryOperator 0x158946580 <col:10, col:33> 'int' '|'     |   | |-ImplicitCastExpr 0x158946568 <col:10, col:16> 'int' <IntegralCast>     |   | | `-ImplicitCastExpr 0x158946550 <col:10, col:16> 'unsigned char' <LValueToRValue>     |   | |   `-ArraySubscriptExpr 0x158946428 <col:10, col:16> 'unsigned char' lvalue     |   | |     |-ImplicitCastExpr 0x158946410 <col:10> 'unsigned char *' <ArrayToPointerDecay>     |   | |     | `-DeclRefExpr 0x1589463d0 <col:10> 'unsigned char[3]' lvalue Var 0x158941348 'data' 'unsigned char[3]'     |   | |     `-IntegerLiteral 0x1589463f0 <col:15> 'int' 0     |   | `-ParenExpr 0x158946530 <col:20, col:33> 'int'     |   |   `-BinaryOperator 0x158946510 <col:21, col:32> 'int' '<<'     |   |     |-ImplicitCastExpr 0x1589464f8 <col:21, col:27> 'int' <IntegralCast>     |   |     | `-ImplicitCastExpr 0x1589464e0 <col:21, col:27> 'unsigned char' <LValueToRValue>     |   |     |   `-ArraySubscriptExpr 0x1589464a0 <col:21, col:27> 'unsigned char' lvalue     |   |     |     |-ImplicitCastExpr 0x158946488 <col:21> 'unsigned char *' <ArrayToPointerDecay>     |   |     |     | `-DeclRefExpr 0x158946448 <col:21> 'unsigned char[3]' lvalue Var 0x158941348 'data' 'unsigned char[3]'     |   |     |     `-IntegerLiteral 0x158946468 <col:26> 'int' 1     |   |     `-IntegerLiteral 0x1589464c0 <col:32> 'int' 8     |   `-ParenExpr 0x158946688 <col:37, col:51> 'int'     |     `-BinaryOperator 0x158946668 <col:38, col:49> 'int' '<<'     |       |-ImplicitCastExpr 0x158946650 <col:38, col:44> 'int' <IntegralCast>     |       | `-ImplicitCastExpr 0x158946638 <col:38, col:44> 'unsigned char' <LValueToRValue>     |       |   `-ArraySubscriptExpr 0x1589465f8 <col:38, col:44> 'unsigned char' lvalue     |       |     |-ImplicitCastExpr 0x1589465e0 <col:38> 'unsigned char *' <ArrayToPointerDecay>     |       |     | `-DeclRefExpr 0x1589465a0 <col:38> 'unsigned char[3]' lvalue Var 0x158941348 'data' 'unsigned char[3]'     |       |     `-IntegerLiteral 0x1589465c0 <col:43> 'int' 2     |       `-IntegerLiteral 0x158946618 <col:49> 'int' 16     |-IfStmt 0x1589469a8 <line:42:2, line:45:2>     | |-BinaryOperator 0x158946758 <line:42:6, col:15> 'int' '!='     | | |-ImplicitCastExpr 0x158946728 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1589466e8 <col:6> 'int' lvalue Var 0x158941460 'crate' 'int'     | | `-ImplicitCastExpr 0x158946740 <col:15> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x158946708 <col:15> 'int' lvalue ParmVar 0x158940d18 'rate' 'int'     | `-CompoundStmt 0x158946990 <col:21, line:45:2>     |   `-CallExpr 0x158946950 <line:43:3, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x158946858 <col:3> 'int ()' Function 0x1589467a0 'dev_warn' 'int ()'     |     |-UnaryOperator 0x1589468d8 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x1589468b0 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x158946878 <col:13> 'struct usb_device *' contains-errors lvalue Var 0x158941108 'dev' 'struct usb_device *'     |     |-StringLiteral 0x1589468f0 <col:23> 'char[4]' lvalue \"STR\"     |     |-DeclRefExpr 0x158946910 <col:30> 'int' lvalue Var 0x158941460 'crate' 'int'     |     `-DeclRefExpr 0x158946930 <col:37> 'int' lvalue ParmVar 0x158940d18 'rate' 'int'     `-ReturnStmt 0x1589469e8 <line:47:2, col:9>       `-IntegerLiteral 0x1589469c8 <col:9> 'int' 0 ","20708":"`-FunctionDecl 0x14f928288  line:1:12 invalid php_zip_ops_close 'int (int *, int)' static   |-ParmVarDecl 0x14f928128 <col:30, col:42> col:42 referenced invalid stream 'int *'   |-ParmVarDecl 0x14f9281a8 <col:50, col:54> col:54 used close_handle 'int'   `-CompoundStmt 0x14f941f08 <line:2:1, line:18:1>     |-CallExpr 0x14f928508 <line:3:2, col:26> 'int'     | `-ImplicitCastExpr 0x14f9284f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f9284a0 <col:2> 'int ()' Function 0x14f9283e8 'STREAM_DATA_FROM_STREAM' 'int ()'     |-IfStmt 0x14f941c10 <line:4:2, line:14:2>     | |-ImplicitCastExpr 0x14f928548 <line:4:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14f928528 <col:6> 'int' lvalue ParmVar 0x14f9281a8 'close_handle' 'int'     | `-CompoundStmt 0x14f941bf0 <col:20, line:14:2>     |   |-IfStmt 0x14f9418a0 <line:5:3, line:8:3>     |   | |-CXXDependentScopeMemberExpr 0x14f9285e0 <line:5:7, col:13> '<dependent type>' contains-errors lvalue ->zf     |   | | `-RecoveryExpr 0x14f9285c0 <col:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x14f941888 <col:17, line:8:3>     |   |   `-CallExpr 0x14f941848 <line:6:4, col:23> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x14f928708 <col:4> 'int ()' Function 0x14f928650 'zip_fclose' 'int ()'     |   |     `-CXXDependentScopeMemberExpr 0x14f941800 <col:15, col:21> '<dependent type>' contains-errors lvalue ->zf     |   |       `-RecoveryExpr 0x14f9287b0 <col:15> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x14f941bd0 <line:10:3, line:13:3>     |     |-CXXDependentScopeMemberExpr 0x14f941940 <line:10:7, col:13> '<dependent type>' contains-errors lvalue ->za     |     | `-RecoveryExpr 0x14f941920 <col:7> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x14f941bb8 <col:17, line:13:3>     |       `-CallExpr 0x14f941b78 <line:11:4, col:22> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x14f941a68 <col:4> 'int ()' Function 0x14f9419b0 'zip_close' 'int ()'     |         `-CXXDependentScopeMemberExpr 0x14f941b30 <col:14, col:20> '<dependent type>' contains-errors lvalue ->za     |           `-RecoveryExpr 0x14f941b10 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14f941d90 <line:15:2, col:12> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f941d10 <col:2> 'int ()' Function 0x14f941c58 'efree' 'int ()'     | `-RecoveryExpr 0x14f941d70 <col:8> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f941ea0 <line:16:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14f941e00 <col:2, col:10> '<dependent type>' contains-errors lvalue ->abstract     | | `-RecoveryExpr 0x14f941dd8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14f941db8 <col:2> 'int *' lvalue ParmVar 0x14f928128 'stream' 'int *'     | `-RecoveryExpr 0x14f941e80 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14f941ef8 <line:17:2, col:9>       `-RecoveryExpr 0x14f941ed8 <col:9> '<dependent type>' contains-errors lvalue ","20241":"`-FunctionDecl 0x1311115a8  line:1:6 invalid dtls1_ctrl 'long (int *, int, long, void *)'   |-ParmVarDecl 0x131111328 <col:17, col:22> col:22 invalid s 'int *'   |-ParmVarDecl 0x1311113a8 <col:25, col:29> col:29 used cmd 'int'   |-ParmVarDecl 0x131111428 <col:34, col:39> col:39 used larg 'long'   |-ParmVarDecl 0x1311114a8 <col:45, col:51> col:51 used parg 'void *'   `-CompoundStmt 0x13112b3f0 <line:2:2, line:25:2>     |-DeclStmt 0x131111710 <line:3:2, col:11>     | `-VarDecl 0x131111688 <col:2, col:10> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x1311116f0 <col:10> 'int' 0     |-SwitchStmt 0x131111760 <line:5:2, line:23:3>     | |-ImplicitCastExpr 0x131111748 <line:5:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x131111728 <col:10> 'int' lvalue ParmVar 0x1311113a8 'cmd' 'int'     | `-CompoundStmt 0x13112b320 <line:6:3, line:23:3>     |   |-IfStmt 0x13112ad58 <line:8:3, line:11:4>     |   | |-BinaryOperator 0x13112acc0 <line:8:7, col:55> 'int' contains-errors '!='     |   | | |-CallExpr 0x13112ac70 <col:7, col:50> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x131111900 <col:7> 'int ()' Function 0x131111848 'dtls1_get_timeout' 'int ()'     |   | | | |-RecoveryExpr 0x131111920 <col:25> '<dependent type>' contains-errors lvalue     |   | | | `-CStyleCastExpr 0x13112ac48 <col:28, col:46> 'struct timeval *' <BitCast>     |   | | |   `-ImplicitCastExpr 0x13112ac30 <col:46> 'void *' <LValueToRValue> part_of_explicit_cast     |   | | |     `-DeclRefExpr 0x1311119e0 <col:46> 'void *' lvalue ParmVar 0x1311114a8 'parg' 'void *'     |   | | `-RecoveryExpr 0x13112aca0 <col:55> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x13112ad40 <line:9:4, line:11:4>     |   |   `-BinaryOperator 0x13112ad20 <line:10:4, col:10> 'int' '='     |   |     |-DeclRefExpr 0x13112ace0 <col:4> 'int' lvalue Var 0x131111688 'ret' 'int'     |   |     `-IntegerLiteral 0x13112ad00 <col:10> 'int' 1     |   |-BreakStmt 0x13112ad78 <line:12:3>     |   |-BinaryOperator 0x13112af00 <line:14:3, col:31> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13112ad98 <col:3> 'int' lvalue Var 0x131111688 'ret' 'int'     |   | `-CallExpr 0x13112aed8 <col:9, col:31> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13112ae98 <col:9> 'int ()' Function 0x13112ade0 'dtls1_handle_timeout' 'int ()'     |   |   `-RecoveryExpr 0x13112aeb8 <col:30> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x13112af20 <line:15:3>     |   |-BinaryOperator 0x13112b0d0 <line:17:3, col:29> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13112af40 <col:3> 'int' lvalue Var 0x131111688 'ret' 'int'     |   | `-CallExpr 0x13112b0a0 <col:9, col:29> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13112b040 <col:9> 'int ()' Function 0x13112af88 'dtls1_listen' 'int ()'     |   |   |-RecoveryExpr 0x13112b060 <col:22> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13112b080 <col:25> 'void *' lvalue ParmVar 0x1311114a8 'parg' 'void *'     |   |-BreakStmt 0x13112b0f0 <line:18:3>     |   |-DefaultStmt 0x13112b2f8 <line:20:2, line:21:37>     |   | `-BinaryOperator 0x13112b2d8 <col:3, col:37> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x13112b0f8 <col:3> 'int' lvalue Var 0x131111688 'ret' 'int'     |   |   `-CallExpr 0x13112b298 <col:9, col:37> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x13112b1f8 <col:9> 'int ()' Function 0x13112b140 'ssl3_ctrl' 'int ()'     |   |     |-RecoveryExpr 0x13112b218 <col:19> '<dependent type>' contains-errors lvalue     |   |     |-DeclRefExpr 0x13112b238 <col:22> 'int' lvalue ParmVar 0x1311113a8 'cmd' 'int'     |   |     |-DeclRefExpr 0x13112b258 <col:27> 'long' lvalue ParmVar 0x131111428 'larg' 'long'     |   |     `-DeclRefExpr 0x13112b278 <col:33> 'void *' lvalue ParmVar 0x1311114a8 'parg' 'void *'     |   `-BreakStmt 0x13112b318 <line:22:3>     `-ReturnStmt 0x13112b3e0 <line:24:2, col:12>       `-ImplicitCastExpr 0x13112b3c8 <col:8, col:12> 'long' <IntegralCast>         `-ImplicitCastExpr 0x13112b3b0 <col:8, col:12> 'int' <LValueToRValue>           `-ParenExpr 0x13112b390 <col:8, col:12> 'int' lvalue             `-DeclRefExpr 0x13112b370 <col:9> 'int' lvalue Var 0x131111688 'ret' 'int' ","21078":"`-FunctionDecl 0x13100c8c8  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13100c9c8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13100c970 <<invalid sloc>> Implicit 873 ","21149":"`-FunctionDecl 0x120929150  line:1:13 ext4_put_super 'void (struct super_block *)' static   |-ParmVarDecl 0x120929048 <col:28, col:48> col:48 used sb 'struct super_block *'   `-CompoundStmt 0x120947598 <line:2:1, line:76:1>     |-DeclStmt 0x120941848 <line:3:2, col:40>     | |-RecordDecl 0x120941448 <col:2, col:9> col:9 struct ext4_sb_info     | `-VarDecl 0x1209415b8 <col:2, col:39> col:23 used sbi 'struct ext4_sb_info *' cinit     |   `-ImplicitCastExpr 0x120941818 <col:29, col:39> 'struct ext4_sb_info *' <IntegralToPointer>     |     `-CallExpr 0x1209417d8 <col:29, col:39> 'int'     |       |-ImplicitCastExpr 0x1209417c0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x120941750 <col:29> 'int ()' Function 0x120941698 'EXT4_SB' 'int ()'     |       `-ImplicitCastExpr 0x120941800 <col:37> 'struct super_block *' <LValueToRValue>     |         `-DeclRefExpr 0x120941770 <col:37> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-DeclStmt 0x120941aa8 <line:4:2, col:41>     | |-RecordDecl 0x120941860 <col:2, col:9> col:9 struct ext4_super_block     | `-VarDecl 0x1209419c8 <col:2, col:37> col:27 used es 'struct ext4_super_block *' cinit     |   `-RecoveryExpr 0x120941a68 <col:32, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120941a30 <col:32> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-DeclStmt 0x120941bd8 <line:5:2, col:12>     | |-VarDecl 0x120941ad8 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x120941b58 <col:2, col:9> col:9 used err 'int'     |-CallExpr 0x120941d28 <line:7:2, col:31> 'int'     | |-ImplicitCastExpr 0x120941d10 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120941cd0 <col:2> 'int ()' Function 0x120941c18 'ext4_unregister_li_request' 'int ()'     | `-ImplicitCastExpr 0x120941d50 <col:29> 'struct super_block *' <LValueToRValue>     |   `-DeclRefExpr 0x120941cf0 <col:29> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-CallExpr 0x120941fa8 <line:8:2, col:66> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120941e48 <col:2> 'int ()' Function 0x120941d90 'dquot_disable' 'int ()'     | |-DeclRefExpr 0x120941e68 <col:16> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     | |-UnaryOperator 0x120941ea8 <col:20, col:21> 'int' prefix '-'     | | `-IntegerLiteral 0x120941e88 <col:21> 'int' 1     | `-BinaryOperator 0x120941f88 <col:24, col:46> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x120941f48 <col:24> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x120941f68 <col:46> '<dependent type>' contains-errors lvalue     |-CallExpr 0x120942140 <line:10:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1209420c0 <col:2> 'int ()' Function 0x120942008 'flush_workqueue' 'int ()'     | `-RecoveryExpr 0x120942118 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1209420e0 <col:18> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x1209422c8 <line:11:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120942248 <col:2> 'int ()' Function 0x120942190 'destroy_workqueue' 'int ()'     | `-RecoveryExpr 0x1209422a0 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x120942268 <col:20> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-IfStmt 0x120944110 <line:13:2, line:18:2>     | |-RecoveryExpr 0x120942328 <line:13:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1209422f0 <col:6> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     | `-CompoundStmt 0x1209440e8 <col:22, line:18:2>     |   |-BinaryOperator 0x120943d60 <line:14:3, col:44> 'int' contains-errors '='     |   | |-DeclRefExpr 0x120942350 <col:3> 'int' lvalue Var 0x120941b58 'err' 'int'     |   | `-CallExpr 0x120943d38 <col:9, col:44> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x120943cb8 <col:9> 'int ()' Function 0x120943c00 'jbd2_journal_destroy' 'int ()'     |   |   `-RecoveryExpr 0x120943d10 <col:30, col:35> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x120943cd8 <col:30> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |   |-BinaryOperator 0x120943e38 <line:15:3, col:20> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x120943db8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x120943d80 <col:3> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |   | `-RecoveryExpr 0x120943e18 <col:20> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1209440c8 <line:16:3, line:17:24>     |     |-BinaryOperator 0x120943eb0 <line:16:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x120943e98 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x120943e58 <col:7> 'int' lvalue Var 0x120941b58 'err' 'int'     |     | `-IntegerLiteral 0x120943e78 <col:13> 'int' 0     |     `-CallExpr 0x120944068 <line:17:4, col:24> 'int'     |       |-ImplicitCastExpr 0x120944050 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x120943fb0 <col:4> 'int ()' Function 0x120943ef8 'ext4_abort' 'int ()'     |       |-ImplicitCastExpr 0x120944098 <col:15> 'struct super_block *' <LValueToRValue>     |       | `-DeclRefExpr 0x120943fd0 <col:15> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |       `-ImplicitCastExpr 0x1209440b0 <col:19> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x120944030 <col:19> 'char[4]' lvalue \"STR\"     |-CallExpr 0x120944268 <line:20:2, col:26> 'int'     | |-ImplicitCastExpr 0x120944250 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120944210 <col:2> 'int ()' Function 0x120944158 'ext4_unregister_sysfs' 'int ()'     | `-ImplicitCastExpr 0x120944290 <col:24> 'struct super_block *' <LValueToRValue>     |   `-DeclRefExpr 0x120944230 <col:24> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-CallExpr 0x1209443e0 <line:21:2, col:33> 'int'     | |-ImplicitCastExpr 0x1209443c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120944388 <col:2> 'int ()' Function 0x1209442d0 'ext4_es_unregister_shrinker' 'int ()'     | `-ImplicitCastExpr 0x120944408 <col:30> 'struct ext4_sb_info *' <LValueToRValue>     |   `-DeclRefExpr 0x1209443a8 <col:30> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120944598 <line:22:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120944500 <col:2> 'int ()' Function 0x120944448 'del_timer_sync' 'int ()'     | `-UnaryOperator 0x120944580 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x120944558 <col:18, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120944520 <col:18> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x1209446f8 <line:23:2, col:29> 'int'     | |-ImplicitCastExpr 0x1209446e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1209446a0 <col:2> 'int ()' Function 0x1209445e8 'ext4_release_system_zone' 'int ()'     | `-ImplicitCastExpr 0x120944720 <col:27> 'struct super_block *' <LValueToRValue>     |   `-DeclRefExpr 0x1209446c0 <col:27> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-CallExpr 0x120944870 <line:24:2, col:20> 'int'     | |-ImplicitCastExpr 0x120944858 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120944818 <col:2> 'int ()' Function 0x120944760 'ext4_mb_release' 'int ()'     | `-ImplicitCastExpr 0x120944898 <col:18> 'struct super_block *' <LValueToRValue>     |   `-DeclRefExpr 0x120944838 <col:18> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-CallExpr 0x1209449e8 <line:25:2, col:21> 'int'     | |-ImplicitCastExpr 0x1209449d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120944990 <col:2> 'int ()' Function 0x1209448d8 'ext4_ext_release' 'int ()'     | `-ImplicitCastExpr 0x120944a10 <col:19> 'struct super_block *' <LValueToRValue>     |   `-DeclRefExpr 0x1209449b0 <col:19> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-CallExpr 0x120944b60 <line:26:2, col:25> 'int'     | |-ImplicitCastExpr 0x120944b48 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x120944b08 <col:2> 'int ()' Function 0x120944a50 'ext4_xattr_put_super' 'int ()'     | `-ImplicitCastExpr 0x120944b88 <col:23> 'struct super_block *' <LValueToRValue>     |   `-DeclRefExpr 0x120944b28 <col:23> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-IfStmt 0x120944fc0 <line:28:2, line:31:2>     | |-RecoveryExpr 0x120944c00 <line:28:6, col:31> '_Bool' contains-errors     | `-CompoundStmt 0x120944fa0 <col:34, line:31:2>     |   |-CallExpr 0x120944d58 <line:29:3, col:47> 'int'     |   | |-ImplicitCastExpr 0x120944d40 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x120944d00 <col:3> 'int ()' Function 0x120944c48 'ext4_clear_feature_journal_needs_recovery' 'int ()'     |   | `-ImplicitCastExpr 0x120944d80 <col:45> 'struct super_block *' <LValueToRValue>     |   |   `-DeclRefExpr 0x120944d20 <col:45> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |   `-BinaryOperator 0x120944f80 <line:30:3, col:47> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x120944dd0 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x120944d98 <col:3> 'struct ext4_super_block *' contains-errors lvalue Var 0x1209419c8 'es' 'struct ext4_super_block *'     |     `-CallExpr 0x120944f58 <col:17, col:47> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x120944ed8 <col:17> 'int ()' Function 0x120944e20 'cpu_to_le16' 'int ()'     |       `-RecoveryExpr 0x120944f30 <col:29, col:34> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x120944ef8 <col:29> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-IfStmt 0x120945200 <line:32:2, line:33:26>     | |-RecoveryExpr 0x120945040 <line:32:6, col:31> '_Bool' contains-errors     | `-CallExpr 0x1209451b8 <line:33:3, col:26> 'int'     |   |-ImplicitCastExpr 0x1209451a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x120945140 <col:3> 'int ()' Function 0x120945088 'ext4_commit_super' 'int ()'     |   |-ImplicitCastExpr 0x1209451e8 <col:21> 'struct super_block *' <LValueToRValue>     |   | `-DeclRefExpr 0x120945160 <col:21> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |   `-IntegerLiteral 0x120945180 <col:25> 'int' 1     |-ForStmt 0x120945550 <line:35:2, line:36:30>     | |-BinaryOperator 0x120945260 <line:35:7, col:11> 'int' '='     | | |-DeclRefExpr 0x120945220 <col:7> 'int' lvalue Var 0x120941ad8 'i' 'int'     | | `-IntegerLiteral 0x120945240 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x120945300 <col:14, col:23> 'int' contains-errors '<'     | | |-DeclRefExpr 0x120945280 <col:14> 'int' lvalue Var 0x120941ad8 'i' 'int'     | | `-RecoveryExpr 0x1209452d8 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1209452a0 <col:18> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     | |-UnaryOperator 0x120945340 <col:36, col:37> 'int' postfix '++'     | | `-DeclRefExpr 0x120945320 <col:36> 'int' lvalue Var 0x120941ad8 'i' 'int'     | `-CallExpr 0x120945528 <line:36:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120945438 <col:3> 'int ()' Function 0x120945380 'brelse' 'int ()'     |   `-ArraySubscriptExpr 0x120945508 <col:10, col:29> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x1209454d8 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x120945490 <col:10, col:15> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x120945458 <col:10> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |     `-ImplicitCastExpr 0x1209454f0 <col:28> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1209454b8 <col:28> 'int' lvalue Var 0x120941ad8 'i' 'int'     |-CallExpr 0x1209456e8 <line:37:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120945668 <col:2> 'int ()' Function 0x1209455b0 'kvfree' 'int ()'     | `-RecoveryExpr 0x1209456c0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x120945688 <col:9> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120945790 <line:38:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120945710 <col:2> 'int ()' Function 0x1209455b0 'kvfree' 'int ()'     | `-RecoveryExpr 0x120945768 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x120945730 <col:9> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120945930 <line:39:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120945898 <col:2> 'int ()' Function 0x1209457e0 'percpu_counter_destroy' 'int ()'     | `-UnaryOperator 0x120945918 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1209458f0 <col:26, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1209458b8 <col:26> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x1209459f0 <line:40:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120945958 <col:2> 'int ()' Function 0x1209457e0 'percpu_counter_destroy' 'int ()'     | `-UnaryOperator 0x1209459d8 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1209459b0 <col:26, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120945978 <col:26> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120945ab0 <line:41:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120945a18 <col:2> 'int ()' Function 0x1209457e0 'percpu_counter_destroy' 'int ()'     | `-UnaryOperator 0x120945a98 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x120945a70 <col:26, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120945a38 <col:26> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120945b70 <line:42:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120945ad8 <col:2> 'int ()' Function 0x1209457e0 'percpu_counter_destroy' 'int ()'     | `-UnaryOperator 0x120945b58 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x120945b30 <col:26, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120945af8 <col:26> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120945c28 <line:43:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120945b98 <col:2> 'int ()' Function 0x120945380 'brelse' 'int ()'     | `-RecoveryExpr 0x120945c00 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x120945bb8 <col:9> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-IfStmt 0x120945fc0 <line:50:2, line:51:27>     | |-UnaryOperator 0x120945df0 <line:50:6, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x120945dc8 <col:7, col:32> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x120945d30 <col:7> 'int ()' Function 0x120945c78 'list_empty' 'int ()'     | |   `-UnaryOperator 0x120945db0 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x120945d88 <col:19, col:24> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x120945d50 <col:19> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     | `-CallExpr 0x120945f60 <line:51:3, col:27> 'int'     |   |-ImplicitCastExpr 0x120945f48 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x120945ee8 <col:3> 'int ()' Function 0x120945e30 'dump_orphan_list' 'int ()'     |   |-ImplicitCastExpr 0x120945f90 <col:20> 'struct super_block *' <LValueToRValue>     |   | `-DeclRefExpr 0x120945f08 <col:20> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |   `-ImplicitCastExpr 0x120945fa8 <col:24> 'struct ext4_sb_info *' <LValueToRValue>     |     `-DeclRefExpr 0x120945f28 <col:24> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x1209461a0 <line:52:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1209460c0 <col:2> 'int ()' Function 0x120946008 'J_ASSERT' 'int ()'     | `-CallExpr 0x120946178 <col:11, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1209460e0 <col:11> 'int ()' Function 0x120945c78 'list_empty' 'int ()'     |   `-UnaryOperator 0x120946160 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x120946138 <col:23, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x120946100 <col:23> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120946328 <line:54:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1209462a8 <col:2> 'int ()' Function 0x1209461f0 'sync_blockdev' 'int ()'     | `-RecoveryExpr 0x120946300 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1209462c8 <col:16> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-CallExpr 0x1209464b0 <line:55:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120946430 <col:2> 'int ()' Function 0x120946378 'invalidate_bdev' 'int ()'     | `-RecoveryExpr 0x120946488 <col:18, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x120946450 <col:18> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     |-IfStmt 0x120946928 <line:56:2, line:61:2>     | |-BinaryOperator 0x120946618 <line:56:6, col:52> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x120946510 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1209464d8 <col:6> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     | | `-BinaryOperator 0x1209465f8 <col:27, col:52> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x120946570 <col:27, col:32> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x120946538 <col:27> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     | |   `-RecoveryExpr 0x1209465d0 <col:48, col:52> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x120946598 <col:48> 'struct super_block *' lvalue ParmVar 0x120929048 'sb' 'struct super_block *'     | `-CompoundStmt 0x120946900 <col:60, line:61:2>     |   |-CallExpr 0x1209466b8 <line:58:3, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x120946638 <col:3> 'int ()' Function 0x1209461f0 'sync_blockdev' 'int ()'     |   | `-RecoveryExpr 0x120946690 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x120946658 <col:17> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |   |-CallExpr 0x120946760 <line:59:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1209466e0 <col:3> 'int ()' Function 0x120946378 'invalidate_bdev' 'int ()'     |   | `-RecoveryExpr 0x120946738 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x120946700 <col:19> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |   `-CallExpr 0x1209468c0 <line:60:3, col:25> 'int'     |     |-ImplicitCastExpr 0x1209468a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x120946868 <col:3> 'int ()' Function 0x1209467b0 'ext4_blkdev_remove' 'int ()'     |     `-ImplicitCastExpr 0x1209468e8 <col:22> 'struct ext4_sb_info *' <LValueToRValue>     |       `-DeclRefExpr 0x120946888 <col:22> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-IfStmt 0x120946ba8 <line:62:2, line:65:2>     | |-RecoveryExpr 0x120946980 <line:62:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120946948 <col:6> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     | `-CompoundStmt 0x120946b90 <col:23, line:65:2>     |   `-CallExpr 0x120946b08 <line:63:3, col:43> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x120946a88 <col:3> 'int ()' Function 0x1209469d0 'ext4_xattr_destroy_cache' 'int ()'     |     `-RecoveryExpr 0x120946ae0 <col:28, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x120946aa8 <col:28> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-IfStmt 0x120946db0 <line:66:2, line:67:30>     | |-RecoveryExpr 0x120946c00 <line:66:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120946bc8 <col:6> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     | `-CallExpr 0x120946d88 <line:67:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120946d08 <col:3> 'int ()' Function 0x120946c50 'kthread_stop' 'int ()'     |   `-RecoveryExpr 0x120946d60 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120946d28 <col:16> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120946fa8 <line:70:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120946f10 <col:2> 'int ()' Function 0x120946e58 'kobject_put' 'int ()'     | `-UnaryOperator 0x120946f90 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x120946f68 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x120946f30 <col:15> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x120947148 <line:71:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1209470b0 <col:2> 'int ()' Function 0x120946ff8 'wait_for_completion' 'int ()'     | `-UnaryOperator 0x120947130 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x120947108 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1209470d0 <col:23> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-IfStmt 0x120947358 <line:72:2, line:73:41>     | |-RecoveryExpr 0x1209471a8 <line:72:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120947170 <col:6> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     | `-CallExpr 0x120947330 <line:73:3, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1209472b0 <col:3> 'int ()' Function 0x1209471f8 'crypto_free_shash' 'int ()'     |   `-RecoveryExpr 0x120947308 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1209472d0 <col:21> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     |-CallExpr 0x1209474d8 <line:74:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x120947458 <col:2> 'int ()' Function 0x1209473a0 'kfree' 'int ()'     | `-RecoveryExpr 0x1209474b0 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x120947478 <col:8> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *'     `-CallExpr 0x120947558 <line:75:2, col:11> 'int'       |-ImplicitCastExpr 0x120947540 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x120947500 <col:2> 'int ()' Function 0x1209473a0 'kfree' 'int ()'       `-ImplicitCastExpr 0x120947580 <col:8> 'struct ext4_sb_info *' <LValueToRValue>         `-DeclRefExpr 0x120947520 <col:8> 'struct ext4_sb_info *' lvalue Var 0x1209415b8 'sbi' 'struct ext4_sb_info *' ","20223":"`-FunctionDecl 0x1421289a0  line:1:16 Ins_IP 'void (int)' static   |-ParmVarDecl 0x1421288d8 <col:24> col:24 INS_ARG 'int'   `-CompoundStmt 0x142141d80 <line:2:3, line:69:3>     |-DeclStmt 0x142128b30 <line:6:5, col:22>     | `-VarDecl 0x142128ac8 <col:5, col:17> col:17 used point 'int'     |-IfStmt 0x142128e10 <line:9:5, line:13:5>     | |-BinaryOperator 0x142128db0 <line:9:10, col:27> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x142128cb8 <col:10, col:14> '<dependent type>' contains-errors lvalue .top     | | | `-RecoveryExpr 0x142128c98 <col:10> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x142128d68 <col:20, col:27> '<dependent type>' contains-errors lvalue .loop     | |   `-CXXDependentScopeMemberExpr 0x142128d20 <col:20, col:24> '<dependent type>' contains-errors lvalue .GS     | |     `-RecoveryExpr 0x142128d00 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x142128df8 <line:10:5, line:13:5>     |   `-ReturnStmt 0x142128de8 <line:12:7>     `-WhileStmt 0x142141d40 <line:27:5, line:65:5>       |-RecoveryExpr 0x142141840 <line:27:13, col:27> '_Bool' contains-errors       `-CompoundStmt 0x142141d28 <line:28:5, line:65:5>         `-IfStmt 0x1421419e8 <line:32:7, line:36:7>           |-RecoveryExpr 0x1421419a0 <line:32:12, col:44> '_Bool' contains-errors           `-CompoundStmt 0x1421419d0 <line:33:7, line:36:7>             `-ReturnStmt 0x1421419c0 <line:35:9> ","20928":"`-FunctionDecl 0x15c826740  line:1:13 hns_nic_rx_up_pro 'void (struct hns_nic_ring_data *, struct sk_buff *)' static   |-ParmVarDecl 0x15c80e248 <col:31, col:57> col:57 used ring_data 'struct hns_nic_ring_data *'   |-ParmVarDecl 0x15c826628 <line:2:10, col:26> col:26 used skb 'struct sk_buff *'   `-CompoundStmt 0x15c826f98 <line:3:1, line:8:1>     |-DeclStmt 0x15c826ad0 <line:4:2, col:47>     | |-RecordDecl 0x15c826840 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x15c8269a8 <col:2, col:44> col:21 used ndev 'struct net_device *' cinit     |   `-CXXDependentScopeMemberExpr 0x15c826a70 <col:28, col:44> '<dependent type>' contains-errors lvalue .dev     |     `-RecoveryExpr 0x15c826a48 <col:28, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15c826a10 <col:28> 'struct hns_nic_ring_data *' lvalue ParmVar 0x15c80e248 'ring_data' 'struct hns_nic_ring_data *'     |-BinaryOperator 0x15c826d78 <line:6:2, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15c826b20 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15c826ae8 <col:2> 'struct sk_buff *' lvalue ParmVar 0x15c826628 'skb' 'struct sk_buff *'     | `-CallExpr 0x15c826d18 <col:18, col:42> 'int' contains-errors     |   |-ImplicitCastExpr 0x15c826d00 <col:18> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15c826c70 <col:18> 'int ()' Function 0x15c826bb8 'eth_type_trans' 'int ()'     |   |-ImplicitCastExpr 0x15c826d48 <col:33> 'struct sk_buff *' <LValueToRValue>     |   | `-DeclRefExpr 0x15c826c90 <col:33> 'struct sk_buff *' lvalue ParmVar 0x15c826628 'skb' 'struct sk_buff *'     |   `-ImplicitCastExpr 0x15c826d60 <col:38> 'struct net_device *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15c826cb0 <col:38> 'struct net_device *' contains-errors lvalue Var 0x15c8269a8 'ndev' 'struct net_device *'     `-CStyleCastExpr 0x15c826f70 <line:7:2, col:46> 'void' contains-errors <ToVoid>       `-CallExpr 0x15c826f30 <col:8, col:46> '<dependent type>' contains-errors         |-DeclRefExpr 0x15c826e78 <col:8> 'int ()' Function 0x15c826dc0 'napi_gro_receive' 'int ()'         |-UnaryOperator 0x15c826ef8 <col:25, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x15c826ed0 <col:26, col:37> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x15c826e98 <col:26> 'struct hns_nic_ring_data *' lvalue ParmVar 0x15c80e248 'ring_data' 'struct hns_nic_ring_data *'         `-DeclRefExpr 0x15c826f10 <col:43> 'struct sk_buff *' lvalue ParmVar 0x15c826628 'skb' 'struct sk_buff *' ","20215":"`-FunctionDecl 0x13300dda8  line:1:1 _gcry_mpi_point_new 'int (unsigned int)'   |-ParmVarDecl 0x13300dcd8 <col:22, col:35> col:35 used nbits 'unsigned int'   `-CompoundStmt 0x13300e310 <line:2:1, line:10:1>     |-CStyleCastExpr 0x13300df00 <line:5:3, col:9> 'void' <ToVoid>     | `-ImplicitCastExpr 0x13300dee8 <col:9> 'unsigned int' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x13300deb8 <col:9> 'unsigned int' lvalue ParmVar 0x13300dcd8 'nbits' 'unsigned int'     |-CallExpr 0x13300e2a0 <line:8:3, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13300e220 <col:3> 'int ()' Function 0x13300e168 '_gcry_mpi_point_init' 'int ()'     | `-RecoveryExpr 0x13300e280 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13300e300 <line:9:3, col:10>       `-RecoveryExpr 0x13300e2e0 <col:10> '<dependent type>' contains-errors lvalue ","20459":"`-FunctionDecl 0x14f00dda8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x14f00dcd8 <col:14> col:14 locale_get_display_region 'int'   `-CompoundStmt 0x14f00e0c0 <line:2:1, line:4:1>     `-CallExpr 0x14f00e090 <line:3:5, col:83> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f00dfd0 <col:5> 'int ()' Function 0x14f00df18 'get_icu_disp_value_src_php' 'int ()'       |-RecoveryExpr 0x14f00e050 <col:33> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14f00e070 <col:50> '<dependent type>' contains-errors lvalue ","20204":"`-FunctionDecl 0x133941408  line:1:1 invalid ecc_j_to_a 'int (const struct ecc_curve *, int, int *, const int *, int *)'   |-ParmVarDecl 0x133928048 <col:13, col:37> col:37 used ecc 'const struct ecc_curve *'   |-ParmVarDecl 0x1339280c8 <line:2:6, col:10> col:10 used op 'int'   |-ParmVarDecl 0x133928198 <line:3:6, col:17> col:17 invalid r 'int *'   |-ParmVarDecl 0x133941218 <col:20, col:37> col:37 invalid p 'const int *'   |-ParmVarDecl 0x133941298 <line:4:6, col:17> col:17 invalid scratch 'int *'   `-CompoundStmt 0x133942ca0 <line:5:1, line:42:1>     |-CallExpr 0x1339418b8 <line:11:3, col:66> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x133941538 <col:3, col:10> '<dependent type>' contains-errors lvalue .invert     | | `-RecoveryExpr 0x133941510 <col:3, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1339414d8 <col:3> 'const struct ecc_curve *' lvalue ParmVar 0x133928048 'ecc' 'const struct ecc_curve *'     | |-UnaryOperator 0x1339415e0 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1339415b8 <col:19, col:24> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133941580 <col:19> 'const struct ecc_curve *' lvalue ParmVar 0x133928048 'ecc' 'const struct ecc_curve *'     | |-RecoveryExpr 0x133941858 <col:27> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x133941718 <col:32, col:43> '<dependent type>' contains-errors '+'     | | |-RecoveryExpr 0x133941610 <col:32> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1339416f8 <col:34, col:43> '<dependent type>' contains-errors '*'     | |   |-IntegerLiteral 0x133941630 <col:34> 'int' 2     | |   `-CXXDependentScopeMemberExpr 0x1339416b0 <col:36, col:43> '<dependent type>' contains-errors lvalue .size     | |     `-RecoveryExpr 0x133941688 <col:36, col:41> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x133941650 <col:36> 'const struct ecc_curve *' lvalue ParmVar 0x133928048 'ecc' 'const struct ecc_curve *'     | `-BinaryOperator 0x133941898 <col:49, col:62> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x133941878 <col:49> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x1339417b0 <col:55, col:62> '<dependent type>' contains-errors lvalue .size     |     `-RecoveryExpr 0x133941788 <col:55, col:60> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x133941750 <col:55> 'const struct ecc_curve *' lvalue ParmVar 0x133928048 'ecc' 'const struct ecc_curve *'     |-CallExpr 0x133941bd0 <line:12:3, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133941a50 <col:3> 'int ()' Function 0x133941998 'ecc_mod_sqr' 'int ()'     | |-UnaryOperator 0x133941ad0 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x133941aa8 <col:17, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133941a70 <col:17> 'const struct ecc_curve *' lvalue ParmVar 0x133928048 'ecc' 'const struct ecc_curve *'     | |-RecoveryExpr 0x133941b70 <col:25> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x133941b90 <col:31> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x133941bb0 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1339420d0 <line:14:3, line:19:5>     | |-RecoveryExpr 0x133941c48 <line:14:7, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x133941c10 <col:7> 'const struct ecc_curve *' lvalue ParmVar 0x133928048 'ecc' 'const struct ecc_curve *'     | `-CompoundStmt 0x1339420b8 <line:15:5, line:19:5>     |   `-CallExpr 0x133941f68 <line:17:7, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x133941d50 <col:7> 'int ()' Function 0x133941c98 'mpn_zero' 'int ()'     |     |-BinaryOperator 0x133941f48 <col:17, col:31> '<dependent type>' contains-errors '+'     |     | |-RecoveryExpr 0x133941f28 <col:17> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x133941de8 <col:24, col:31> '<dependent type>' contains-errors lvalue .size     |     |   `-RecoveryExpr 0x133941dc0 <col:24, col:29> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x133941d88 <col:24> 'const struct ecc_curve *' lvalue ParmVar 0x133928048 'ecc' 'const struct ecc_curve *'     |     `-CXXDependentScopeMemberExpr 0x133941eb0 <col:37, col:44> '<dependent type>' contains-errors lvalue .size     |       `-RecoveryExpr 0x133941e88 <col:37, col:42> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x133941e50 <col:37> 'const struct ecc_curve *' lvalue ParmVar 0x133928048 'ecc' 'const struct ecc_curve *'     `-IfStmt 0x1339428a0 <line:23:3, line:34:5>       |-ImplicitCastExpr 0x1339422d8 <line:23:7> 'int' <LValueToRValue>       | `-DeclRefExpr 0x1339422b8 <col:7> 'int' lvalue ParmVar 0x1339280c8 'op' 'int'       `-CompoundStmt 0x133942880 <line:24:5, line:34:5>         |-IfStmt 0x133942850 <line:26:7, line:32:2>         | |-BinaryOperator 0x133942348 <line:26:11, col:16> 'int' '>'         | | |-ImplicitCastExpr 0x133942330 <col:11> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x1339422f0 <col:11> 'int' lvalue ParmVar 0x1339280c8 'op' 'int'         | | `-IntegerLiteral 0x133942310 <col:16> 'int' 1         | `-CompoundStmt 0x133942840 <line:27:2, line:32:2>         `-ReturnStmt 0x133942870 <line:33:7> ","20822":"`-FunctionDecl 0x145008968  line:1:5 invalid mlx4_register_vlan 'int (struct mlx4_dev *, int, int, int *)'   |-ParmVarDecl 0x14301a448 <col:24, col:41> col:41 used dev 'struct mlx4_dev *'   |-ParmVarDecl 0x14301a4e0 <col:46, col:49> col:49 invalid port 'int'   |-ParmVarDecl 0x14301a560 <col:55, col:59> col:59 invalid vlan 'int'   |-ParmVarDecl 0x145008818 <col:65, col:70> col:70 used index 'int *'   `-CompoundStmt 0x146808700 <line:2:1, line:47:1>     |-DeclStmt 0x145008f38 <line:3:2, col:72>     | |-RecordDecl 0x145008a30 <col:2, col:9> col:9 struct mlx4_vlan_table     | `-VarDecl 0x145008b98 <col:2, col:62> col:26 used table 'struct mlx4_vlan_table *' cinit     |   `-UnaryOperator 0x145008f08 <col:34, col:62> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x145008ec0 <col:35, col:62> '<dependent type>' contains-errors lvalue .vlan_table     |       `-ArraySubscriptExpr 0x145008ea0 <col:35, col:60> '<dependent type>' contains-errors lvalue     |         |-ImplicitCastExpr 0x145008e70 <col:35, col:51> '<dependent type>' contains-errors <LValueToRValue>     |         | `-RecoveryExpr 0x145008e28 <col:35, col:51> '<dependent type>' contains-errors lvalue     |         |   `-CallExpr 0x145008de8 <col:35, col:48> 'int'     |         |     |-ImplicitCastExpr 0x145008dd0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |         |     | `-DeclRefExpr 0x145008d60 <col:35> 'int ()' Function 0x145008ca8 'mlx4_priv' 'int ()'     |         |     `-ImplicitCastExpr 0x145008e10 <col:45> 'struct mlx4_dev *' <LValueToRValue>     |         |       `-DeclRefExpr 0x145008d80 <col:45> 'struct mlx4_dev *' lvalue ParmVar 0x14301a448 'dev' 'struct mlx4_dev *'     |         `-ImplicitCastExpr 0x145008e88 <col:56> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x145008e50 <col:56> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x145009088 <line:4:2, col:16>     | |-VarDecl 0x145008f68 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x145008fe8 <col:2, col:15> col:9 used err 'int' cinit     |   `-IntegerLiteral 0x145009050 <col:15> 'int' 0     |-DeclStmt 0x145009158 <line:5:2, col:15>     | `-VarDecl 0x1450090b8 <col:2, col:14> col:6 used free 'int' cinit     |   `-UnaryOperator 0x145009140 <col:13, col:14> 'int' prefix '-'     |     `-IntegerLiteral 0x145009120 <col:14> 'int' 1     |-CallExpr 0x1450092e8 <line:7:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145009250 <col:2> 'int ()' Function 0x145009198 'mutex_lock' 'int ()'     | `-UnaryOperator 0x1450092d0 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1450092a8 <col:14, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x145009270 <col:14> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     |-ForStmt 0x145808c70 <line:8:2, line:22:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x1450093e0 <line:8:30, col:34> 'int' contains-errors '<'     | | |-DeclRefExpr 0x145009368 <col:30> 'int' lvalue Var 0x145008f68 'i' 'int'     | | `-RecoveryExpr 0x1450093c0 <col:34> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x145009420 <col:53, col:54> 'int' postfix '++'     | | `-DeclRefExpr 0x145009400 <col:53> 'int' lvalue Var 0x145008f68 'i' 'int'     | `-CompoundStmt 0x145808c50 <col:58, line:22:2>     |   |-IfStmt 0x1450096a0 <line:9:3, line:12:3>     |   | |-BinaryOperator 0x1450095e0 <line:9:7, col:39> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x145009490 <col:7, col:14> 'int' '<'     |   | | | |-ImplicitCastExpr 0x145009478 <col:7> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x145009438 <col:7> 'int' lvalue Var 0x1450090b8 'free' 'int'     |   | | | `-IntegerLiteral 0x145009458 <col:14> 'int' 0     |   | | `-ParenExpr 0x1450095c0 <col:19, col:39> 'int' contains-errors     |   | |   `-BinaryOperator 0x1450095a0 <col:20, col:38> 'int' contains-errors '=='     |   | |     |-ArraySubscriptExpr 0x145009560 <col:20, col:33> '<dependent type>' contains-errors lvalue     |   | |     | |-ImplicitCastExpr 0x145009530 <col:20, col:27> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | | `-RecoveryExpr 0x1450094e8 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   | |     | |   `-DeclRefExpr 0x1450094b0 <col:20> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     |   | |     | `-ImplicitCastExpr 0x145009548 <col:32> 'int' <LValueToRValue>     |   | |     |   `-DeclRefExpr 0x145009510 <col:32> 'int' lvalue Var 0x145008f68 'i' 'int'     |   | |     `-IntegerLiteral 0x145009580 <col:38> 'int' 0     |   | `-CompoundStmt 0x145009680 <col:42, line:12:3>     |   |   |-BinaryOperator 0x145009658 <line:10:4, col:11> 'int' '='     |   |   | |-DeclRefExpr 0x145009600 <col:4> 'int' lvalue Var 0x1450090b8 'free' 'int'     |   |   | `-ImplicitCastExpr 0x145009640 <col:11> 'int' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x145009620 <col:11> 'int' lvalue Var 0x145008f68 'i' 'int'     |   |   `-ContinueStmt 0x145009678 <line:11:4>     |   `-IfStmt 0x145808c30 <line:14:3, line:21:3>     |     |-RecoveryExpr 0x1458089f0 <line:14:7, line:16:41> '_Bool' contains-errors     |     `-CompoundStmt 0x145808c08 <col:44, line:21:3>     |       |-BinaryOperator 0x145808a98 <line:18:4, col:13> 'int' '='     |       | |-UnaryOperator 0x145808a48 <col:4, col:5> 'int' lvalue prefix '*' cannot overflow     |       | | `-ImplicitCastExpr 0x145808a30 <col:5> 'int *' <LValueToRValue>     |       | |   `-DeclRefExpr 0x145808a10 <col:5> 'int *' lvalue ParmVar 0x145008818 'index' 'int *'     |       | `-ImplicitCastExpr 0x145808a80 <col:13> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x145808a60 <col:13> 'int' lvalue Var 0x145008f68 'i' 'int'     |       |-UnaryOperator 0x145808b88 <line:19:4, col:19> '<dependent type>' contains-errors prefix '++' cannot overflow     |       | `-ArraySubscriptExpr 0x145808b68 <col:6, col:19> '<dependent type>' contains-errors lvalue     |       |   |-ImplicitCastExpr 0x145808b38 <col:6, col:13> '<dependent type>' contains-errors <LValueToRValue>     |       |   | `-RecoveryExpr 0x145808af0 <col:6, col:13> '<dependent type>' contains-errors lvalue     |       |   |   `-DeclRefExpr 0x145808ab8 <col:6> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     |       |   `-ImplicitCastExpr 0x145808b50 <col:18> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x145808b18 <col:18> 'int' lvalue Var 0x145008f68 'i' 'int'     |       `-GotoStmt 0x145808bf0 <line:20:4, col:9> 'out' 0x145808ba0     |-IfStmt 0x145808eb8 <line:24:2, line:28:2>     | |-BinaryOperator 0x145808d68 <line:24:6, col:29> 'int' contains-errors '=='     | | |-RecoveryExpr 0x145808ce0 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x145808ca8 <col:6> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     | | `-RecoveryExpr 0x145808d40 <col:22, col:29> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x145808d08 <col:22> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     | `-CompoundStmt 0x145808e98 <col:34, line:28:2>     |   |-BinaryOperator 0x145808e60 <line:26:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x145808d88 <col:3> 'int' lvalue Var 0x145008fe8 'err' 'int'     |   | `-UnaryOperator 0x145808e48 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x145808e30 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x145808e10 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x145808e80 <line:27:3, col:8> 'out' 0x145808ba0     |-BinaryOperator 0x145808fc8 <line:31:2, col:22> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x145808f88 <col:2, col:18> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x145808f58 <col:2, col:9> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x145808f10 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x145808ed8 <col:2> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     | | `-ImplicitCastExpr 0x145808f70 <col:14> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x145808f38 <col:14> 'int' lvalue Var 0x1450090b8 'free' 'int'     | `-IntegerLiteral 0x145808fa8 <col:22> 'int' 1     |-BinaryOperator 0x1458093d0 <line:34:2, col:58> 'int' contains-errors '='     | |-DeclRefExpr 0x1458091d8 <col:2> 'int' lvalue Var 0x145008fe8 'err' 'int'     | `-CallExpr 0x145809398 <col:8, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1458092d8 <col:8> 'int ()' Function 0x145809220 'mlx4_set_port_vlan_table' 'int ()'     |   |-DeclRefExpr 0x1458092f8 <col:33> 'struct mlx4_dev *' lvalue ParmVar 0x14301a448 'dev' 'struct mlx4_dev *'     |   |-RecoveryExpr 0x145809318 <col:38> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x145809370 <col:44, col:51> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x145809338 <col:44> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     |-IfStmt 0x1468083b8 <line:35:2, line:40:2>     | |-CallExpr 0x145809528 <line:35:6, col:18> 'int'     | | |-ImplicitCastExpr 0x145809510 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1458094d0 <col:6> 'int ()' Function 0x145809418 'unlikely' 'int ()'     | | `-ImplicitCastExpr 0x145809550 <col:15> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x1458094f0 <col:15> 'int' lvalue Var 0x145008fe8 'err' 'int'     | `-CompoundStmt 0x146808388 <col:21, line:40:2>     |   |-CallExpr 0x145809710 <line:36:3, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x145809648 <col:3> 'int ()' Function 0x145809590 'mlx4_warn' 'int ()'     |   | |-DeclRefExpr 0x145809668 <col:13> 'struct mlx4_dev *' lvalue ParmVar 0x14301a448 'dev' 'struct mlx4_dev *'     |   | |-StringLiteral 0x1458096d0 <col:18> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x1458096f0 <col:25> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x146808240 <line:37:3, col:23> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x146808200 <col:3, col:19> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x1458097c8 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x145809780 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x145809748 <col:3> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     |   | | `-ImplicitCastExpr 0x1458097e0 <col:15> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1458097a8 <col:15> 'int' lvalue Var 0x1450090b8 'free' 'int'     |   | `-IntegerLiteral 0x146808220 <col:23> 'int' 0     |   |-BinaryOperator 0x146808350 <line:38:3, col:26> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x146808310 <col:3, col:22> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x1468082e0 <col:3, col:10> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x146808298 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x146808260 <col:3> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     |   | | `-ImplicitCastExpr 0x1468082f8 <col:18> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1468082c0 <col:18> 'int' lvalue Var 0x1450090b8 'free' 'int'     |   | `-IntegerLiteral 0x146808330 <col:26> 'int' 0     |   `-GotoStmt 0x146808370 <line:39:3, col:8> 'out' 0x145808ba0     |-BinaryOperator 0x146808460 <line:42:2, col:11> 'int' '='     | |-UnaryOperator 0x146808410 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1468083f8 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x1468083d8 <col:3> 'int *' lvalue ParmVar 0x145008818 'index' 'int *'     | `-ImplicitCastExpr 0x146808448 <col:11> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x146808428 <col:11> 'int' lvalue Var 0x1450090b8 'free' 'int'     |-UnaryOperator 0x1468084e0 <line:43:2, col:11> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-RecoveryExpr 0x1468084b8 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x146808480 <col:4> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     |-LabelStmt 0x146808698 <line:44:1, line:45:28> 'out'     | `-CallExpr 0x146808670 <col:2, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1468085d8 <col:2> 'int ()' Function 0x146808520 'mutex_unlock' 'int ()'     |   `-UnaryOperator 0x146808658 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x146808630 <col:16, col:23> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1468085f8 <col:16> 'struct mlx4_vlan_table *' contains-errors lvalue Var 0x145008b98 'table' 'struct mlx4_vlan_table *'     `-ReturnStmt 0x1468086f0 <line:46:2, col:9>       `-ImplicitCastExpr 0x1468086d8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1468086b8 <col:9> 'int' lvalue Var 0x145008fe8 'err' 'int' ","20359":"`-FunctionDecl 0x15100de88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x15100dd28 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x15100dda8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x151027c28 <col:64, line:14:1>     |-CallExpr 0x15100e1b0 <line:2:3, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15100e0a0 <col:3> 'int ()' Function 0x15100dfe8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x15100e0c0 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x15100e148 <col:30, col:44> '<dependent type>' contains-errors lvalue ->size     | | `-CXXDependentScopeMemberExpr 0x15100e100 <col:30, col:36> '<dependent type>' contains-errors lvalue ->inputs     | |   `-RecoveryExpr 0x15100e0e0 <col:30> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15100e190 <col:50> 'int' 1     |-CallExpr 0x15100e2f8 <line:3:3, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15100e1e8 <col:3> 'int ()' Function 0x15100dfe8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x15100e208 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x15100e290 <col:30, col:45> '<dependent type>' contains-errors lvalue ->size     | | `-CXXDependentScopeMemberExpr 0x15100e248 <col:30, col:36> '<dependent type>' contains-errors lvalue ->outputs     | |   `-RecoveryExpr 0x15100e228 <col:30> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x15100e2d8 <col:51> 'int' 1     |-DeclStmt 0x151027568 <line:5:3, line:6:48>     | `-VarDecl 0x15100e348 <line:5:3, col:23> col:23 invalid input_resource_id_tensor 'const int *'     |-CallExpr 0x151027698 <line:7:3, col:74> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151027580 <col:3> 'int ()' Function 0x15100dfe8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1510275a0 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x1510275e0 <col:30, col:56> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x1510275c0 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x151027678 <col:62> '<dependent type>' contains-errors lvalue     |-CallExpr 0x151027878 <line:8:3, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1510276d0 <col:3> 'int ()' Function 0x15100dfe8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1510276f0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x151027830 <col:30, col:66> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1510277f0 <col:30> 'int ()' Function 0x151027738 'NumElements' 'int ()'     | | `-RecoveryExpr 0x151027810 <col:42> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x151027858 <col:69> 'int' 1     |-CallExpr 0x151027bb8 <line:11:3, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151027b38 <col:3> 'int ()' Function 0x151027a80 'SetTensorToDynamic' 'int ()'     | `-RecoveryExpr 0x151027b98 <col:22> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x151027c18 <line:13:3, col:10>       `-RecoveryExpr 0x151027bf8 <col:10> '<dependent type>' contains-errors lvalue ","20676":"`-FunctionDecl 0x12a0a0758  line:1:1 wl_list_length 'int (const struct wl_list *)'   |-ParmVarDecl 0x12a0a0648 <col:16, col:38> col:38 used list 'const struct wl_list *'   `-CompoundStmt 0x12a0b8728 <line:2:1, line:14:1>     |-DeclStmt 0x12a0b8370 <line:3:2, col:19>     | `-VarDecl 0x12a0b8308 <col:2, col:18> col:18 used e 'struct wl_list *'     |-DeclStmt 0x12a0b8408 <line:4:2, col:11>     | `-VarDecl 0x12a0b83a0 <col:2, col:6> col:6 used count 'int'     |-BinaryOperator 0x12a0b8460 <line:6:2, col:10> 'int' '='     | |-DeclRefExpr 0x12a0b8420 <col:2> 'int' lvalue Var 0x12a0b83a0 'count' 'int'     | `-IntegerLiteral 0x12a0b8440 <col:10> 'int' 0     |-BinaryOperator 0x12a0b8500 <line:7:2, col:12> 'struct wl_list *' contains-errors '='     | |-DeclRefExpr 0x12a0b8480 <col:2> 'struct wl_list *' lvalue Var 0x12a0b8308 'e' 'struct wl_list *'     | `-RecoveryExpr 0x12a0b84d8 <col:6, col:12> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12a0b84a0 <col:6> 'const struct wl_list *' lvalue ParmVar 0x12a0a0648 'list' 'const struct wl_list *'     |-WhileStmt 0x12a0b86c0 <line:8:2, line:11:2>     | |-BinaryOperator 0x12a0b85a8 <line:8:9, col:14> 'int' '!='     | | |-ImplicitCastExpr 0x12a0b8560 <col:9> 'struct wl_list *' <LValueToRValue>     | | | `-DeclRefExpr 0x12a0b8520 <col:9> 'struct wl_list *' lvalue Var 0x12a0b8308 'e' 'struct wl_list *'     | | `-ImplicitCastExpr 0x12a0b8590 <col:14> 'struct wl_list *' <BitCast>     | |   `-ImplicitCastExpr 0x12a0b8578 <col:14> 'const struct wl_list *' <LValueToRValue>     | |     `-DeclRefExpr 0x12a0b8540 <col:14> 'const struct wl_list *' lvalue ParmVar 0x12a0a0648 'list' 'const struct wl_list *'     | `-CompoundStmt 0x12a0b86a0 <col:20, line:11:2>     |   |-BinaryOperator 0x12a0b8648 <line:9:3, col:10> 'struct wl_list *' contains-errors '='     |   | |-DeclRefExpr 0x12a0b85c8 <col:3> 'struct wl_list *' lvalue Var 0x12a0b8308 'e' 'struct wl_list *'     |   | `-RecoveryExpr 0x12a0b8620 <col:7, col:10> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12a0b85e8 <col:7> 'struct wl_list *' lvalue Var 0x12a0b8308 'e' 'struct wl_list *'     |   `-UnaryOperator 0x12a0b8688 <line:10:3, col:8> 'int' postfix '++'     |     `-DeclRefExpr 0x12a0b8668 <col:3> 'int' lvalue Var 0x12a0b83a0 'count' 'int'     `-ReturnStmt 0x12a0b8718 <line:13:2, col:9>       `-ImplicitCastExpr 0x12a0b8700 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12a0b86e0 <col:9> 'int' lvalue Var 0x12a0b83a0 'count' 'int' ","20737":"`-FunctionDecl 0x12c923c80  col:13 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x12c923d80 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12c923d28 <<invalid sloc>> Implicit 903   `-FormatAttr 0x12c923df0 <col:13> Implicit printf 1 2 ","21095":"`-FunctionDecl 0x129827568  line:1:9 invalid qemu_sendv_packet_async 'int (int *, const struct iovec *, int, int *)'   |-ParmVarDecl 0x12980dd28 <col:33, col:49> col:49 invalid sender 'int *'   |-ParmVarDecl 0x12980e318 <line:2:33, col:53> col:53 used iov 'const struct iovec *'   |-ParmVarDecl 0x12980e398 <col:58, col:62> col:62 used iovcnt 'int'   |-ParmVarDecl 0x129827418 <line:3:33, col:48> col:48 invalid sent_cb 'int *'   `-CompoundStmt 0x12982a330 <line:4:1, line:30:1>     |-DeclStmt 0x1298276c8 <line:6:5, col:12>     | `-VarDecl 0x129827660 <col:5, col:9> col:9 used ret 'int'     |-IfStmt 0x129827a90 <line:8:5, line:10:5>     | |-BinaryOperator 0x1298277e0 <line:8:9, col:39> 'int' contains-errors '||'     | | |-CXXDependentScopeMemberExpr 0x129827700 <col:9, col:17> '<dependent type>' contains-errors lvalue ->link_down     | | | `-RecoveryExpr 0x1298276e0 <col:9> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1298277c8 <col:30, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x1298277b0 <col:31, col:39> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x129827768 <col:31, col:39> '<dependent type>' contains-errors lvalue ->peer     | |       `-RecoveryExpr 0x129827748 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129827a78 <col:45, line:10:5>     |   `-ReturnStmt 0x129827a68 <line:9:9, col:36>     |     `-CallExpr 0x129827a08 <col:16, col:36> 'int'     |       |-ImplicitCastExpr 0x1298279f0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129827960 <col:16> 'int ()' Function 0x1298278a8 'iov_size' 'int ()'     |       |-ImplicitCastExpr 0x129827a38 <col:25> 'const struct iovec *' <LValueToRValue>     |       | `-DeclRefExpr 0x129827980 <col:25> 'const struct iovec *' lvalue ParmVar 0x12980e318 'iov' 'const struct iovec *'     |       `-ImplicitCastExpr 0x129827a50 <col:30> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x1298279a0 <col:30> 'int' lvalue ParmVar 0x12980e398 'iovcnt' 'int'     |-BinaryOperator 0x129827db0 <line:13:5, line:14:77> 'int' contains-errors '='     | |-DeclRefExpr 0x129827ab0 <line:13:5> 'int' lvalue Var 0x129827660 'ret' 'int'     | `-CallExpr 0x129827d58 <col:11, line:14:77> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129827bb0 <line:13:11> 'int ()' Function 0x129827af8 'filter_receive_iov' 'int ()'     |   |-RecoveryExpr 0x129827bd0 <col:30> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x129827d18 <col:38> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x129827c08 <col:63> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x129827d38 <line:14:30> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x129827c40 <col:57> 'const struct iovec *' lvalue ParmVar 0x12980e318 'iov' 'const struct iovec *'     |   |-DeclRefExpr 0x129827c60 <col:62> 'int' lvalue ParmVar 0x12980e398 'iovcnt' 'int'     |   `-RecoveryExpr 0x129827c80 <col:70> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129827e68 <line:15:5, line:17:5>     | |-ImplicitCastExpr 0x129827df0 <line:15:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x129827dd0 <col:9> 'int' lvalue Var 0x129827660 'ret' 'int'     | `-CompoundStmt 0x129827e50 <col:14, line:17:5>     |   `-ReturnStmt 0x129827e40 <line:16:9, col:16>     |     `-ImplicitCastExpr 0x129827e28 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x129827e08 <col:16> 'int' lvalue Var 0x129827660 'ret' 'int'     |-BinaryOperator 0x1298280f0 <line:19:5, line:20:77> 'int' contains-errors '='     | |-DeclRefExpr 0x129827e88 <line:19:5> 'int' lvalue Var 0x129827660 'ret' 'int'     | `-CallExpr 0x129828098 <col:11, line:20:77> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129827ea8 <line:19:11> 'int ()' Function 0x129827af8 'filter_receive_iov' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x129827ee8 <col:30, col:38> '<dependent type>' contains-errors lvalue ->peer     |   | `-RecoveryExpr 0x129827ec8 <col:30> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x129828058 <col:44> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x129827f48 <col:69> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x129828078 <line:20:30> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x129827f80 <col:57> 'const struct iovec *' lvalue ParmVar 0x12980e318 'iov' 'const struct iovec *'     |   |-DeclRefExpr 0x129827fa0 <col:62> 'int' lvalue ParmVar 0x12980e398 'iovcnt' 'int'     |   `-RecoveryExpr 0x129827fc0 <col:70> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1298281a8 <line:21:5, line:23:5>     | |-ImplicitCastExpr 0x129828130 <line:21:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x129828110 <col:9> 'int' lvalue Var 0x129827660 'ret' 'int'     | `-CompoundStmt 0x129828190 <col:14, line:23:5>     |   `-ReturnStmt 0x129828180 <line:22:9, col:16>     |     `-ImplicitCastExpr 0x129828168 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x129828148 <col:16> 'int' lvalue Var 0x129827660 'ret' 'int'     `-ReturnStmt 0x12982a320 <line:27:5, line:29:56>       `-CallExpr 0x12982a2d0 <line:27:12, line:29:56> '<dependent type>' contains-errors         |-DeclRefExpr 0x129828358 <line:27:12> 'int ()' Function 0x1298282a0 'qemu_net_queue_send_iov' 'int ()'         |-RecoveryExpr 0x12982a290 <col:36> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x129828390 <col:43> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12982a2b0 <line:28:36> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x1298283c8 <line:29:36> 'const struct iovec *' lvalue ParmVar 0x12980e318 'iov' 'const struct iovec *'         |-DeclRefExpr 0x12982a200 <col:41> 'int' lvalue ParmVar 0x12980e398 'iovcnt' 'int'         `-RecoveryExpr 0x12982a220 <col:49> '<dependent type>' contains-errors lvalue ","20698":"`-FunctionDecl 0x1560277e0  line:1:13 invalid perf_swevent_overflow 'void (struct perf_event *, int, struct perf_sample_data *, struct pt_regs *)' static   |-ParmVarDecl 0x15600e248 <col:35, col:54> col:54 used event 'struct perf_event *'   |-ParmVarDecl 0x15600e2e0 <col:61, col:65> col:65 referenced invalid overflow 'int'   |-ParmVarDecl 0x1560274c8 <line:2:9, col:34> col:34 used data 'struct perf_sample_data *'   |-ParmVarDecl 0x156027698 <line:3:9, col:25> col:25 used regs 'struct pt_regs *'   `-CompoundStmt 0x156028368 <line:4:1, line:22:1>     |-DeclStmt 0x156027b10 <line:5:2, col:40>     | |-RecordDecl 0x1560278a8 <col:2, col:9> col:9 struct hw_perf_event     | `-VarDecl 0x156027a18 <col:2, col:38> col:24 used hwc 'struct hw_perf_event *' cinit     |   `-UnaryOperator 0x156027ae0 <col:30, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x156027ab8 <col:31, col:38> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x156027a80 <col:31> 'struct perf_event *' lvalue ParmVar 0x15600e248 'event' 'struct perf_event *'     |-DeclStmt 0x156027bc8 <line:6:2, col:18>     | `-VarDecl 0x156027b40 <col:2, col:17> col:6 used throttle 'int' cinit     |   `-IntegerLiteral 0x156027ba8 <col:17> 'int' 0     |-IfStmt 0x156027eb8 <line:8:2, line:9:43>     | |-UnaryOperator 0x156027c18 <line:8:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x156027c00 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x156027be0 <col:7> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x156027e98 <line:9:3, col:43> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x156027c50 <col:3> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x156027c30 <col:3> 'int' lvalue ParmVar 0x15600e2e0 'overflow' 'int'     |   `-CallExpr 0x156027e58 <col:14, col:43> 'int'     |     |-ImplicitCastExpr 0x156027e40 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x156027dd0 <col:14> 'int ()' Function 0x156027d18 'perf_swevent_set_period' 'int ()'     |     `-ImplicitCastExpr 0x156027e80 <col:38> 'struct perf_event *' <LValueToRValue>     |       `-DeclRefExpr 0x156027df0 <col:38> 'struct perf_event *' lvalue ParmVar 0x15600e248 'event' 'struct perf_event *'     |-IfStmt 0x156027fc0 <line:11:2, line:12:3>     | |-BinaryOperator 0x156027f90 <line:11:6, col:25> 'int' contains-errors '=='     | | |-RecoveryExpr 0x156027f10 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x156027ed8 <col:6> 'struct hw_perf_event *' contains-errors lvalue Var 0x156027a18 'hwc' 'struct hw_perf_event *'     | | `-RecoveryExpr 0x156027f70 <col:25> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x156027fb0 <line:12:3>     `-ForStmt 0x156028330 <line:14:2, line:21:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-RecoveryExpr 0x156027fe0 <line:14:9> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x156028020 <col:19, col:27> '<dependent type>' contains-errors postfix '--' cannot overflow       | `-RecoveryExpr 0x156028000 <col:19> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x156028310 <col:31, line:21:2>         |-IfStmt 0x156028290 <line:15:3, line:19:3>         | |-CallExpr 0x1560281d0 <line:15:7, line:16:20> 'int'         | | |-ImplicitCastExpr 0x1560281b8 <line:15:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x156028118 <col:7> 'int ()' Function 0x156028060 '__perf_event_overflow' 'int ()'         | | |-ImplicitCastExpr 0x156028210 <col:29> 'struct perf_event *' <LValueToRValue>         | | | `-DeclRefExpr 0x156028138 <col:29> 'struct perf_event *' lvalue ParmVar 0x15600e248 'event' 'struct perf_event *'         | | |-ImplicitCastExpr 0x156028228 <col:36> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x156028158 <col:36> 'int' lvalue Var 0x156027b40 'throttle' 'int'         | | |-ImplicitCastExpr 0x156028240 <line:16:10> 'struct perf_sample_data *' <LValueToRValue>         | | | `-DeclRefExpr 0x156028178 <col:10> 'struct perf_sample_data *' lvalue ParmVar 0x1560274c8 'data' 'struct perf_sample_data *'         | | `-ImplicitCastExpr 0x156028258 <col:16> 'struct pt_regs *' <LValueToRValue>         | |   `-DeclRefExpr 0x156028198 <col:16> 'struct pt_regs *' lvalue ParmVar 0x156027698 'regs' 'struct pt_regs *'         | `-CompoundStmt 0x156028278 <col:23, line:19:3>         |   `-BreakStmt 0x156028270 <line:18:4>         `-BinaryOperator 0x1560282f0 <line:20:3, col:14> 'int' '='           |-DeclRefExpr 0x1560282b0 <col:3> 'int' lvalue Var 0x156027b40 'throttle' 'int'           `-IntegerLiteral 0x1560282d0 <col:14> 'int' 1 ","21029":"`-FunctionDecl 0x15101dff8  line:1:17 invalid opj_tcd_code_block_enc_allocate_data 'int (int *)' static   |-ParmVarDecl 0x15101df28 <col:54, line:2:9> col:9 invalid p_code_block 'int *'   `-CompoundStmt 0x15101e2f0 <line:3:1, line:8:9>     `-CallExpr 0x15101e2c8 <line:7:13, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x15101e200 <col:13> 'int ()' Function 0x15101e148 'opj_free' 'int ()'       `-BinaryOperator 0x15101e2a8 <col:22, col:43> '<dependent type>' contains-errors '-'         |-CXXDependentScopeMemberExpr 0x15101e240 <col:22, col:36> '<dependent type>' contains-errors lvalue ->data         | `-RecoveryExpr 0x15101e220 <col:22> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x15101e288 <col:43> 'int' 1 ","21026":"`-FunctionDecl 0x14500ddf8  line:1:1 invalid get_user_commands 'int (int *)'   |-ParmVarDecl 0x14500dd28 <col:19, col:29> col:29 invalid xp 'int *'   `-CompoundStmt 0x14600a6f0 <line:2:1, line:16:1>     |-IfStmt 0x14600a258 <line:10:5, line:11:42>     | |-BinaryOperator 0x14500e088 <line:10:9, col:28> 'int' contains-errors '<'     | | |-RecoveryExpr 0x14500dfb8 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x14500e040 <col:15, col:28> '<dependent type>' contains-errors lvalue .ga_len     | |   `-CXXDependentScopeMemberExpr 0x14500dff8 <col:15, col:20> '<dependent type>' contains-errors lvalue ->b_ucmds     | |     `-RecoveryExpr 0x14500dfd8 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14600a248 <line:11:2, col:42>     |   `-CXXDependentScopeMemberExpr 0x14600a200 <col:9, col:42> '<dependent type>' contains-errors lvalue ->uc_name     |     `-CallExpr 0x14500e3c8 <col:9, col:39> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14500e200 <col:9> 'int ()' Function 0x14500e148 'USER_CMD_GA' 'int ()'     |       |-UnaryOperator 0x14500e390 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-CXXDependentScopeMemberExpr 0x14500e348 <col:22, col:27> '<dependent type>' contains-errors lvalue ->b_ucmds     |       |   `-RecoveryExpr 0x14500e328 <col:22> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x14500e3a8 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14600a688 <line:13:5, line:14:24>     | |-BinaryOperator 0x14600a440 <line:13:9, col:21> 'int' contains-errors '<'     | | |-RecoveryExpr 0x14600a3b8 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x14600a3f8 <col:15, col:21> '<dependent type>' contains-errors lvalue .ga_len     | |   `-RecoveryExpr 0x14600a3d8 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14600a678 <line:14:2, col:24>     |   `-CXXDependentScopeMemberExpr 0x14600a630 <col:9, col:24> '<dependent type>' contains-errors lvalue ->uc_name     |     `-CallExpr 0x14600a608 <col:9, col:21> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14600a540 <col:9> 'int ()' Function 0x14600a488 'USER_CMD' 'int ()'     |       `-RecoveryExpr 0x14600a5e8 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14600a6e0 <line:15:5, col:12>       `-RecoveryExpr 0x14600a6c0 <col:12> '<dependent type>' contains-errors lvalue ","20861":"`-FunctionDecl 0x1580311c8  line:1:1 invalid flow_tun_flag_to_string 'int (int)'   |-ParmVarDecl 0x1580310f0 <col:25, col:34> col:34 invalid flags 'int'   `-CompoundStmt 0x15804a1b8 <line:2:1, line:15:1>     `-SwitchStmt 0x1580312b0 <line:3:5, line:14:5>       |-ImplicitCastExpr 0x158031298 <line:3:13> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x158031278 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15804a180 <col:20, line:14:5>         |-ReturnStmt 0x1580317a0 <line:5:9, col:16>         | `-ImplicitCastExpr 0x158031368 <col:16> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x158031350 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x158031330 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15804a018 <line:7:9, col:16>         | `-ImplicitCastExpr 0x15804a000 <col:16> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x1580317e8 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x1580317c8 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15804a090 <line:9:9, col:16>         | `-ImplicitCastExpr 0x15804a078 <col:16> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x15804a060 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15804a040 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x15804a108 <line:11:9, col:16>         | `-ImplicitCastExpr 0x15804a0f0 <col:16> 'int' <PointerToIntegral>         |   `-ImplicitCastExpr 0x15804a0d8 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x15804a0b8 <col:16> 'char[4]' lvalue \"STR\"         `-DefaultStmt 0x15804a160 <line:12:5, line:13:16>           `-ReturnStmt 0x15804a150 <col:9, col:16>             `-RecoveryExpr 0x15804a130 <col:16> '<dependent type>' contains-errors lvalue ","20405":"`-FunctionDecl 0x140927950  line:1:13 svm_disable_lbrv 'void (struct kvm_vcpu *)' static   |-ParmVarDecl 0x140927848 <col:30, col:47> col:47 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x14100a030 <line:2:1, line:14:1>     |-DeclStmt 0x140940048 <line:3:2, col:37>     | |-RecordDecl 0x14093fc48 <col:2, col:9> col:9 struct vcpu_svm     | `-VarDecl 0x14093fdb8 <col:2, col:36> col:19 used svm 'struct vcpu_svm *' cinit     |   `-ImplicitCastExpr 0x140940018 <col:25, col:36> 'struct vcpu_svm *' <IntegralToPointer>     |     `-CallExpr 0x14093ffd8 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x14093ffc0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14093ff50 <col:25> 'int ()' Function 0x14093fe98 'to_svm' 'int ()'     |       `-ImplicitCastExpr 0x140940000 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x14093ff70 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x140927848 'vcpu' 'struct kvm_vcpu *'     |-CompoundAssignOperator 0x140940218 <line:5:2, col:34> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x140940108 <col:2, col:21> '<dependent type>' contains-errors lvalue .virt_ext     | | `-CXXDependentScopeMemberExpr 0x1409400c0 <col:2, col:13> '<dependent type>' contains-errors lvalue ->control     | |   `-RecoveryExpr 0x140940098 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x140940060 <col:2> 'struct vcpu_svm *' lvalue Var 0x14093fdb8 'svm' 'struct vcpu_svm *'     | `-UnaryOperator 0x140940200 <col:33, col:34> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x1409401e8 <col:34> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x1409401c8 <col:34> '<dependent type>' contains-errors lvalue     |-CallExpr 0x140940488 <line:6:2, col:72> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140940328 <col:2> 'int ()' Function 0x140940270 'set_msr_interception' 'int ()'     | |-DeclRefExpr 0x140940348 <col:23> 'struct kvm_vcpu *' lvalue ParmVar 0x140927848 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x1409403a0 <col:29, col:34> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140940368 <col:29> 'struct vcpu_svm *' lvalue Var 0x14093fdb8 'svm' 'struct vcpu_svm *'     | |-RecoveryExpr 0x140940468 <col:41> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x1409403e0 <col:68> 'int' 0     | `-IntegerLiteral 0x140940400 <col:71> 'int' 0     |-CallExpr 0x140940630 <line:7:2, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1409404d0 <col:2> 'int ()' Function 0x140940270 'set_msr_interception' 'int ()'     | |-DeclRefExpr 0x1409404f0 <col:23> 'struct kvm_vcpu *' lvalue ParmVar 0x140927848 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x140940548 <col:29, col:34> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140940510 <col:29> 'struct vcpu_svm *' lvalue Var 0x14093fdb8 'svm' 'struct vcpu_svm *'     | |-RecoveryExpr 0x140940610 <col:41> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x140940588 <col:66> 'int' 0     | `-IntegerLiteral 0x1409405a8 <col:69> 'int' 0     |-CallExpr 0x1409407d8 <line:8:2, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140940678 <col:2> 'int ()' Function 0x140940270 'set_msr_interception' 'int ()'     | |-DeclRefExpr 0x140940698 <col:23> 'struct kvm_vcpu *' lvalue ParmVar 0x140927848 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x1409406f0 <col:29, col:34> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1409406b8 <col:29> 'struct vcpu_svm *' lvalue Var 0x14093fdb8 'svm' 'struct vcpu_svm *'     | |-RecoveryExpr 0x1409407b8 <col:41> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x140940730 <col:65> 'int' 0     | `-IntegerLiteral 0x140940750 <col:68> 'int' 0     |-CallExpr 0x140940980 <line:9:2, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140940820 <col:2> 'int ()' Function 0x140940270 'set_msr_interception' 'int ()'     | |-DeclRefExpr 0x140940840 <col:23> 'struct kvm_vcpu *' lvalue ParmVar 0x140927848 'vcpu' 'struct kvm_vcpu *'     | |-RecoveryExpr 0x140940898 <col:29, col:34> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140940860 <col:29> 'struct vcpu_svm *' lvalue Var 0x14093fdb8 'svm' 'struct vcpu_svm *'     | |-RecoveryExpr 0x140940960 <col:41> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x1409408d8 <col:63> 'int' 0     | `-IntegerLiteral 0x1409408f8 <col:66> 'int' 0     `-IfStmt 0x14100a010 <line:12:2, line:13:43>       |-CallExpr 0x140940b00 <line:12:6, col:24> 'int'       | |-ImplicitCastExpr 0x140940ae8 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x140940aa8 <col:6> 'int ()' Function 0x1409409f0 'is_guest_mode' 'int ()'       | `-ImplicitCastExpr 0x140940b28 <col:20> 'struct kvm_vcpu *' <LValueToRValue>       |   `-DeclRefExpr 0x140940ac8 <col:20> 'struct kvm_vcpu *' lvalue ParmVar 0x140927848 'vcpu' 'struct kvm_vcpu *'       `-CallExpr 0x141009fe0 <line:13:3, col:43> '<dependent type>' contains-errors         |-DeclRefExpr 0x141009eb8 <col:3> 'int ()' Function 0x141009e00 'svm_copy_lbrs' 'int ()'         |-CXXDependentScopeMemberExpr 0x141009f38 <col:17, col:29> '<dependent type>' contains-errors lvalue .ptr         | `-RecoveryExpr 0x141009f10 <col:17, col:22> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x141009ed8 <col:17> 'struct vcpu_svm *' lvalue Var 0x14093fdb8 'svm' 'struct vcpu_svm *'         `-RecoveryExpr 0x141009fb8 <col:34, col:39> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x141009f80 <col:34> 'struct vcpu_svm *' lvalue Var 0x14093fdb8 'svm' 'struct vcpu_svm *' ","21189":"`-FunctionDecl 0x11f00dda8  line:1:1 referenced zzip_mem_disk_fdopen 'int (int)'   |-ParmVarDecl 0x11f00dcd8 <col:22, col:26> col:26 used fd 'int'   `-CompoundStmt 0x11e9227f0 <line:2:1, line:8:1>     |-IfStmt 0x11f00e360 <line:4:5, col:72>     | |-UnaryOperator 0x11f00e128 <col:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x11f00e110 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x11f00e0f0 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f00e348 <col:17, col:72>     |   `-ReturnStmt 0x11f00e338 <col:62, col:69>     |     `-IntegerLiteral 0x11f00e318 <col:69> 'int' 0     |-CallExpr 0x11e922778 <line:6:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e9226b8 <col:5> 'int ()' Function 0x11e922600 'zzip_mem_disk_load' 'int ()'     | |-RecoveryExpr 0x11e922738 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x11e922758 <col:29> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11e9227e0 <line:7:5, col:12>       `-RecoveryExpr 0x11e9227c0 <col:12> '<dependent type>' contains-errors lvalue ","20721":"`-FunctionDecl 0x137826600  line:1:1 do_unimap_ioctl 'int (int, struct unimapdesc)'   |-ParmVarDecl 0x13780dcd8 <col:17, col:21> col:21 used cmd 'int'   |-ParmVarDecl 0x13780e258 <col:26, col:44> col:44 invalid __user 'struct unimapdesc'   `-CompoundStmt 0x137827500 <line:2:1, line:18:1>     |-DeclStmt 0x1378267b8 <line:3:2, col:23>     | `-VarDecl 0x137826750 <col:2, col:20> col:20 invalid tmp 'struct unimapdesc'     |-IfStmt 0x137826ae8 <line:5:2, line:6:11>     | |-CallExpr 0x137826a08 <line:5:6, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x137826900 <col:6> 'int ()' Function 0x137826848 'copy_from_user' 'int ()'     | | |-UnaryOperator 0x137826940 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x137826920 <col:22> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x1378269e8 <col:27> '<dependent type>' contains-errors lvalue     | | `-UnaryExprOrTypeTraitExpr 0x137826990 <col:36, col:43> 'unsigned long' contains-errors sizeof     | |   `-RecoveryExpr 0x137826970 <col:43> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x137826ad8 <line:6:3, col:11>     |   `-UnaryOperator 0x137826ac0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x137826aa8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x137826a88 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x137826b40 <line:7:2, line:16:2>     | |-ImplicitCastExpr 0x137826b28 <line:7:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x137826b08 <col:10> 'int' lvalue ParmVar 0x13780dcd8 'cmd' 'int'     | `-CompoundStmt 0x1378274a8 <col:15, line:16:2>     |   |-IfStmt 0x137826cc0 <line:9:3, line:10:12>     |   | |-UnaryOperator 0x137826c00 <line:9:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x137826be8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x137826bc8 <col:8> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x137826cb0 <line:10:4, col:12>     |   |   `-UnaryOperator 0x137826c98 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x137826c80 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x137826c60 <col:12> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x137826f58 <line:11:3, col:54>     |   | `-CallExpr 0x137826f20 <col:10, col:54> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x137826dc0 <col:10> 'int ()' Function 0x137826d08 'con_set_unimap' 'int ()'     |   |   |-RecoveryExpr 0x137826f00 <col:25> '<dependent type>' contains-errors lvalue     |   |   |-CXXDependentScopeMemberExpr 0x137826e18 <col:29, col:33> '<dependent type>' contains-errors lvalue .entry_ct     |   |   | `-RecoveryExpr 0x137826df8 <col:29> '<dependent type>' contains-errors lvalue     |   |   `-CXXDependentScopeMemberExpr 0x137826e80 <col:43, col:47> '<dependent type>' contains-errors lvalue .entries     |   |     `-RecoveryExpr 0x137826e60 <col:43> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x137827240 <line:13:3, line:14:12>     |     |-BinaryOperator 0x137827178 <line:13:7, col:34> 'int' contains-errors '&&'     |     | |-UnaryOperator 0x1378270b8 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | | `-ImplicitCastExpr 0x1378270a0 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x137827080 <col:8> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x137827158 <col:16, col:34> 'int' contains-errors '!='     |     |   |-RecoveryExpr 0x1378270d0 <col:16> '<dependent type>' contains-errors lvalue     |     |   `-CXXDependentScopeMemberExpr 0x137827110 <col:30, col:34> '<dependent type>' contains-errors lvalue ->vc_num     |     |     `-RecoveryExpr 0x1378270f0 <col:30> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x137827230 <line:14:4, col:12>     |       `-UnaryOperator 0x137827218 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x137827200 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x1378271e0 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1378274f0 <line:17:2, col:9>       `-IntegerLiteral 0x1378274d0 <col:9> 'int' 0 ","20678":"`-FunctionDecl 0x135013178  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x135013278 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x135013220 <<invalid sloc>> Implicit 873 ","20353":"`-FunctionDecl 0x12d145c28  line:1:5 invalid ext4_handle_dirty_dirent_node 'int (int *, struct inode *, struct buffer_head *)'   |-ParmVarDecl 0x12d128128 <col:35, col:45> col:45 invalid handle 'int *'   |-ParmVarDecl 0x12d128718 <line:2:7, col:21> col:21 used inode 'struct inode *'   |-ParmVarDecl 0x12d145ae8 <line:3:7, col:27> col:27 used bh 'struct buffer_head *'   `-CompoundStmt 0x12d1462a8 <line:4:1, line:7:1>     |-CallExpr 0x12d1460b8 <line:5:2, col:65> 'int' contains-errors     | |-ImplicitCastExpr 0x12d1460a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d145e40 <col:2> 'int ()' Function 0x12d145d88 'ext4_dirent_csum_set' 'int ()'     | |-ImplicitCastExpr 0x12d1460e8 <col:23> 'struct inode *' <LValueToRValue>     | | `-DeclRefExpr 0x12d145e60 <col:23> 'struct inode *' lvalue ParmVar 0x12d128718 'inode' 'struct inode *'     | `-CStyleCastExpr 0x12d146048 <col:30, col:59> 'struct ext4_dir_entry *' contains-errors <Dependent>     |   `-RecoveryExpr 0x12d145f58 <col:55, col:59> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d145f20 <col:55> 'struct buffer_head *' lvalue ParmVar 0x12d145ae8 'bh' 'struct buffer_head *'     `-ReturnStmt 0x12d146298 <line:6:2, col:53>       `-CallExpr 0x12d146260 <col:9, col:53> '<dependent type>' contains-errors         |-DeclRefExpr 0x12d1461e0 <col:9> 'int ()' Function 0x12d146128 'ext4_handle_dirty_metadata' 'int ()'         |-RecoveryExpr 0x12d146200 <col:36> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x12d146220 <col:44> 'struct inode *' lvalue ParmVar 0x12d128718 'inode' 'struct inode *'         `-DeclRefExpr 0x12d146240 <col:51> 'struct buffer_head *' lvalue ParmVar 0x12d145ae8 'bh' 'struct buffer_head *' ","20962":"`-FunctionDecl 0x148140a00  line:2:30 skb_tail_pointer 'unsigned char *(const struct sk_buff *)' static inline   |-ParmVarDecl 0x148128648 <col:47, col:69> col:69 used skb 'const struct sk_buff *'   `-CompoundStmt 0x148140b68 <line:3:1, line:4:19>     `-ReturnStmt 0x148140b58 <col:2, col:14>       `-RecoveryExpr 0x148140b30 <col:9, col:14> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x148140af8 <col:9> 'const struct sk_buff *' lvalue ParmVar 0x148128648 'skb' 'const struct sk_buff *' ","20916":"`-FunctionDecl 0x159128318  line:1:12 invalid tls1_check_sig_alg 'int (int *, int *, int)' static   |-ParmVarDecl 0x159128128 <col:31, col:36> col:36 invalid s 'int *'   |-ParmVarDecl 0x1591281a8 <col:39, col:45> col:45 invalid x 'int *'   |-ParmVarDecl 0x159128228 <col:48, col:52> col:52 used default_nid 'int'   `-CompoundStmt 0x159141c48 <line:2:1, line:14:1>     |-DeclStmt 0x159128458 <line:3:5, col:16>     | `-VarDecl 0x1591283f0 <col:5, col:9> col:9 used sig_nid 'int'     |-UnaryExprOrTypeTraitExpr 0x1591284c8 <line:4:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x1591284a8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1591285a8 <line:5:5, line:6:16>     | |-BinaryOperator 0x159128558 <line:5:9, col:25> 'int' '=='     | | |-ImplicitCastExpr 0x159128540 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1591284e8 <col:9> 'int' lvalue ParmVar 0x159128228 'default_nid' 'int'     | | `-UnaryOperator 0x159128528 <col:24, col:25> 'int' prefix '-'     | |   `-IntegerLiteral 0x159128508 <col:25> 'int' 1     | `-ReturnStmt 0x159128598 <line:6:9, col:16>     |   `-IntegerLiteral 0x159128578 <col:16> 'int' 1     |-BinaryOperator 0x1591287a8 <line:7:5, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x1591285c8 <col:5> 'int' lvalue Var 0x1591283f0 'sig_nid' 'int'     | `-CallExpr 0x159128780 <col:15, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159128740 <col:15> 'int ()' Function 0x159128688 'X509_get_signature_nid' 'int ()'     |   `-RecoveryExpr 0x159128760 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159141910 <line:8:5, line:9:45>     | |-ImplicitCastExpr 0x1591287e8 <line:8:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1591287c8 <col:9> 'int' lvalue ParmVar 0x159128228 'default_nid' 'int'     | `-ReturnStmt 0x159141900 <line:9:9, col:45>     |   `-ConditionalOperator 0x1591418d0 <col:16, col:45> 'int'     |     |-BinaryOperator 0x159141870 <col:16, col:27> 'int' '=='     |     | |-ImplicitCastExpr 0x159141840 <col:16> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x159141800 <col:16> 'int' lvalue Var 0x1591283f0 'sig_nid' 'int'     |     | `-ImplicitCastExpr 0x159141858 <col:27> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x159141820 <col:27> 'int' lvalue ParmVar 0x159128228 'default_nid' 'int'     |     |-IntegerLiteral 0x159141890 <col:41> 'int' 1     |     `-IntegerLiteral 0x1591418b0 <col:45> 'int' 0     |-ForStmt 0x159141be0 <line:10:5, line:12:20>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x159141a48 <line:10:17, col:24> 'int' contains-errors '<'     | | |-RecoveryExpr 0x159141a28 <col:17> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1591419c0 <col:21, col:24> '<dependent type>' contains-errors lvalue ->shared_sigalgslen     | |   `-RecoveryExpr 0x1591419a0 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x159141ab8 <col:43, col:44> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x159141a98 <col:43> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x159141bc0 <line:11:9, line:12:20>     |   |-RecoveryExpr 0x159141b70 <line:11:13, col:46> '_Bool' contains-errors     |   `-ReturnStmt 0x159141bb0 <line:12:13, col:20>     |     `-IntegerLiteral 0x159141b90 <col:20> 'int' 1     `-ReturnStmt 0x159141c38 <line:13:5, col:12>       `-IntegerLiteral 0x159141c18 <col:12> 'int' 0 ","20266":"`-FunctionDecl 0x14b82c418  col:7 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14b82c518 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14b82c580 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14b82c5e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14b82c4c0 <<invalid sloc>> Implicit 883 ","20900":"`-FunctionDecl 0x13b928ac8  line:1:1 qemuProcessRefreshLegacyBlockjob 'int (void *, const char *, void *)'   |-ParmVarDecl 0x13b9288d8 <col:34, col:40> col:40 payload 'void *'   |-ParmVarDecl 0x13b928958 <line:2:34, col:46> col:46 used name 'const char *'   |-ParmVarDecl 0x13b9289d8 <line:3:34, col:40> col:40 opaque 'void *'   `-CompoundStmt 0x13b942198 <line:4:1, line:54:1>     |-DeclStmt 0x13b928c88 <line:5:5, col:31>     | `-VarDecl 0x13b928be8 <col:5, col:27> col:17 used jobname 'const char *' cinit     |   `-ImplicitCastExpr 0x13b928c70 <col:27> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x13b928c50 <col:27> 'const char *' lvalue ParmVar 0x13b928958 'name' 'const char *'     |-IfStmt 0x13b941378 <line:13:5, line:16:5>     | |-RecoveryExpr 0x13b928eb0 <line:13:9, col:77> '_Bool' contains-errors     | `-CompoundStmt 0x13b941358 <col:80, line:16:5>     |   |-CallExpr 0x13b9412c8 <line:14:9, col:33> 'int'     |   | |-ImplicitCastExpr 0x13b9412b0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13b928fb0 <col:9> 'int ()' Function 0x13b928ef8 'VIR_DEBUG' 'int ()'     |   | |-ImplicitCastExpr 0x13b9412f8 <col:19> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x13b941240 <col:19> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x13b941310 <col:26> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13b941260 <col:26> 'const char *' lvalue Var 0x13b928be8 'jobname' 'const char *'     |   `-ReturnStmt 0x13b941348 <line:15:9, col:16>     |     `-IntegerLiteral 0x13b941328 <col:16> 'int' 0     |-IfStmt 0x13b941890 <line:22:5, line:23:17>     | |-RecoveryExpr 0x13b941828 <line:22:9, col:64> '_Bool' contains-errors     | `-ReturnStmt 0x13b941880 <line:23:9, col:17>     |   `-UnaryOperator 0x13b941868 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x13b941848 <col:17> 'int' 1     |-IfStmt 0x13b941f20 <line:25:5, line:46:5>     | |-RecoveryExpr 0x13b9418b0 <line:25:9, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x13b941f00 <col:23, line:46:5>     |   |-IfStmt 0x13b941900 <line:26:9, line:30:9>     |   | |-RecoveryExpr 0x13b9418d0 <line:26:13, line:27:19> '_Bool' contains-errors     |   | `-CompoundStmt 0x13b9418f0 <col:26, line:30:9>     |   `-IfStmt 0x13b941ee0 <line:33:9, line:45:9>     |     |-RecoveryExpr 0x13b941920 <line:33:13, col:32> '_Bool' contains-errors     |     `-CompoundStmt 0x13b941ec0 <col:64, line:45:9>     |       |-IfStmt 0x13b941ae8 <line:34:13, line:36:22>     |       | |-RecoveryExpr 0x13b941a60 <line:34:17, line:35:68> '_Bool' contains-errors     |       | `-GotoStmt 0x13b941ad0 <line:36:17, col:22> 'cleanup' 0x13b941a80     |       `-IfStmt 0x13b941ea0 <line:38:13, line:44:22>     |         |-RecoveryExpr 0x13b941e68 <line:38:17, line:43:59> '_Bool' contains-errors     |         `-GotoStmt 0x13b941e88 <line:44:17, col:22> 'cleanup' 0x13b941a80     |-LabelStmt 0x13b942148 <line:50:2, col:9> 'cleanup'     | `-NullStmt 0x13b942140 <col:9>     `-ReturnStmt 0x13b942188 <line:53:5, col:12>       `-IntegerLiteral 0x13b942168 <col:12> 'int' 0 ","20439":"`-FunctionDecl 0x14680df18  line:1:13 invalid fix_and_check_vcol_expr 'int (int *, int *, int *)' static   |-ParmVarDecl 0x14680dd28 <col:37, col:42> col:42 invalid thd 'int *'   |-ParmVarDecl 0x14680dda8 <col:47, col:54> col:54 referenced invalid table 'int *'   |-ParmVarDecl 0x14680de28 <line:2:37, col:58> col:58 referenced invalid vcol 'int *'   `-CompoundStmt 0x1468294f0 <line:3:1, line:55:1>     |-CallExpr 0x14680e278 <line:5:3, col:19> 'int'     | |-ImplicitCastExpr 0x14680e260 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14680e1b0 <col:3> 'int ()' Function 0x14680e0f8 'DBUG_ENTER' 'int ()'     | `-ImplicitCastExpr 0x14680e2a0 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14680e210 <col:14> 'char[4]' lvalue \"STR\"     |-CallExpr 0x146827400 <line:6:3, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14680e398 <col:3> 'int ()' Function 0x14680e2e0 'DBUG_PRINT' 'int ()'     | |-StringLiteral 0x14680e3b8 <col:14> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x14680e3d8 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x146827590 <line:7:3, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146827510 <col:3> 'int ()' Function 0x146827458 'DBUG_ASSERT' 'int ()'     | `-RecoveryExpr 0x146827570 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1468277e0 <line:9:3, line:10:18>     | |-CXXDependentScopeMemberExpr 0x146827638 <line:9:7, col:18> '<dependent type>' contains-errors lvalue ->fixed     | | `-RecoveryExpr 0x146827618 <col:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1468277b8 <line:10:5, col:18> 'int'     |   |-ImplicitCastExpr 0x1468277a0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x146827760 <col:5> 'int ()' Function 0x1468276a8 'DBUG_RETURN' 'int ()'     |   `-IntegerLiteral 0x146827780 <col:17> 'int' 0     |-IfStmt 0x1468279f0 <line:12:3, line:13:18>     | |-CallExpr 0x146827940 <line:12:7, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1468278e0 <col:7> 'int ()' Function 0x146827828 'fix_vcol_expr' 'int ()'     | | |-RecoveryExpr 0x146827900 <col:21> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x146827920 <col:26> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1468279c8 <line:13:5, col:18> 'int'     |   |-ImplicitCastExpr 0x1468279b0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x146827970 <col:5> 'int ()' Function 0x1468276a8 'DBUG_RETURN' 'int ()'     |   `-IntegerLiteral 0x146827990 <col:17> 'int' 1     |-IfStmt 0x146827af8 <line:15:3, line:16:18>     | |-CXXDependentScopeMemberExpr 0x146827a30 <line:15:7, col:13> '<dependent type>' contains-errors lvalue ->flags     | | `-RecoveryExpr 0x146827a10 <col:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x146827ad0 <line:16:5, col:18> 'int'     |   |-ImplicitCastExpr 0x146827ab8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x146827a78 <col:5> 'int ()' Function 0x1468276a8 'DBUG_RETURN' 'int ()'     |   `-IntegerLiteral 0x146827a98 <col:17> 'int' 0     |-IfStmt 0x146828258 <line:22:3, line:26:3>     | |-CallExpr 0x146827e28 <line:22:7, col:54> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x146827c60 <col:7> 'int ()' Function 0x146827ba8 'unlikely' 'int ()'     | | `-BinaryOperator 0x146827e08 <col:16, col:44> 'int' contains-errors '=='     | |   |-CallExpr 0x146827dc8 <col:16, col:39> '<dependent type>' contains-errors     | |   | `-CXXDependentScopeMemberExpr 0x146827d80 <col:16, col:27> '<dependent type>' contains-errors lvalue ->result_type     | |   |   `-RecoveryExpr 0x146827d60 <col:16> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x146827de8 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x146828238 <line:23:3, line:26:3>     |   |-CallExpr 0x146828180 <line:24:5, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x146827f30 <col:5> 'int ()' Function 0x146827e78 'my_error' 'int ()'     |   | |-RecoveryExpr 0x146828120 <col:14> '<dependent type>' contains-errors lvalue     |   | |-CallExpr 0x146828158 <col:34, col:39> 'int'     |   | | |-ImplicitCastExpr 0x146828140 <col:34> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x146828048 <col:34> 'int ()' Function 0x146827f90 'MYF' 'int ()'     |   | | `-IntegerLiteral 0x146828068 <col:38> 'int' 0     |   | `-IntegerLiteral 0x1468280c8 <col:42> 'int' 1     |   `-CallExpr 0x146828210 <line:25:5, col:18> 'int'     |     |-ImplicitCastExpr 0x1468281f8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1468281b8 <col:5> 'int ()' Function 0x1468276a8 'DBUG_RETURN' 'int ()'     |     `-IntegerLiteral 0x1468281d8 <col:17> 'int' 1     |-DeclStmt 0x146828338 <line:32:3, col:72>     | `-VarDecl 0x1468282b0 <col:3, col:7> col:7 used error 'int'     |-IfStmt 0x146829250 <line:33:3, line:48:3> has_else     | |-RecoveryExpr 0x146828390 <line:33:7, col:55> '_Bool' contains-errors     | |-CompoundStmt 0x146829018 <line:34:3, line:39:3>     | | `-CallExpr 0x146828ff0 <line:38:5, col:18> 'int'     | |   |-ImplicitCastExpr 0x146828fd8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x146828f98 <col:5> 'int ()' Function 0x1468276a8 'DBUG_RETURN' 'int ()'     | |   `-IntegerLiteral 0x146828fb8 <col:17> 'int' 1     | `-IfStmt 0x146829230 <line:40:8, line:48:3>     |   |-RecoveryExpr 0x146829050 <line:40:12, col:47> '_Bool' contains-errors     |   `-CompoundStmt 0x146829218 <line:41:3, line:48:3>     |     `-IfStmt 0x1468291f8 <line:46:5, line:47:20>     |       |-RecoveryExpr 0x146829158 <line:46:9, col:10> '_Bool' contains-errors     |       `-CallExpr 0x1468291d0 <line:47:7, col:20> 'int'     |         |-ImplicitCastExpr 0x1468291b8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x146829178 <col:7> 'int ()' Function 0x1468276a8 'DBUG_RETURN' 'int ()'     |         `-IntegerLiteral 0x146829198 <col:19> 'int' 1     `-CallExpr 0x1468294c8 <line:54:3, col:16> 'int'       |-ImplicitCastExpr 0x1468294b0 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x146829470 <col:3> 'int ()' Function 0x1468276a8 'DBUG_RETURN' 'int ()'       `-IntegerLiteral 0x146829490 <col:15> 'int' 0 ","21186":"`-FunctionDecl 0x150941128  col:8 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x150941228 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x150941290 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1509412f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1509411d0 <<invalid sloc>> Implicit 883 ","20602":"`-FunctionDecl 0x13182b3c8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13182b4c8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13182b470 <<invalid sloc>> Implicit 873 ","20978":"`-FunctionDecl 0x140941670  col:13 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x140941770 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1409417d8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x140941718 <<invalid sloc>> Implicit 887 ","20308":"`-FunctionDecl 0x13c0082d8  line:1:1 invalid update_shadow_used_ring_split 'int (struct vhost_virtqueue *, int, int)'   |-ParmVarDecl 0x13a80e248 <col:31, col:55> col:55 used vq 'struct vhost_virtqueue *'   |-ParmVarDecl 0x13a80e2e0 <line:2:5, col:14> col:14 invalid desc_idx 'int'   |-ParmVarDecl 0x13a80e360 <col:24, col:33> col:33 invalid len 'int'   `-CompoundStmt 0x13c0084c8 <line:3:1, line:8:1> ","20976":"`-FunctionDecl 0x12f80dec0  line:1:13 gic_set_irq 'void (void *, int, int)' static   |-ParmVarDecl 0x12f80dcd8 <col:25, col:31> col:31 opaque 'void *'   |-ParmVarDecl 0x12f80dd58 <col:39, col:43> col:43 used irq 'int'   |-ParmVarDecl 0x12f80ddd8 <col:48, col:52> col:52 used level 'int'   `-CompoundStmt 0x12f829968 <line:2:1, line:34:1>     |-DeclStmt 0x12f80e128 <line:5:5, col:19>     | |-VarDecl 0x12f80e028 <col:5, col:9> col:9 used cm 'int'     | `-VarDecl 0x12f80e0a8 <col:5, col:13> col:13 used target 'int'     |-IfStmt 0x12f828838 <line:6:5, line:18:5> has_else     | |-RecoveryExpr 0x12f80e1f8 <line:6:9, col:41> '_Bool' contains-errors     | |-CompoundStmt 0x12f8283a8 <col:44, line:11:5>     | | |-BinaryOperator 0x12f80e290 <line:8:9, col:14> 'int' contains-errors '='     | | | |-DeclRefExpr 0x12f80e218 <col:9> 'int' lvalue Var 0x12f80e028 'cm' 'int'     | | | `-RecoveryExpr 0x12f80e270 <col:14> '<dependent type>' contains-errors lvalue     | | |-CompoundAssignOperator 0x12f80e338 <line:9:9, col:16> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | | |-DeclRefExpr 0x12f80e2b0 <col:9> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'     | | | `-RecoveryExpr 0x12f80e318 <col:16> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12f828388 <line:10:9, col:37> 'int' '='     | |   |-DeclRefExpr 0x12f80e368 <col:9> 'int' lvalue Var 0x12f80e0a8 'target' 'int'     | |   `-CallExpr 0x12f828348 <col:18, col:37> 'int'     | |     |-ImplicitCastExpr 0x12f828330 <col:18> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x12f8282b8 <col:18> 'int ()' Function 0x12f828200 'GIC_DIST_TARGET' 'int ()'     | |     `-ImplicitCastExpr 0x12f828370 <col:34> 'int' <LValueToRValue>     | |       `-DeclRefExpr 0x12f8282d8 <col:34> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'     | `-CompoundStmt 0x12f828800 <line:11:12, line:18:5>     |   |-DeclStmt 0x12f828450 <line:12:9, col:16>     |   | `-VarDecl 0x12f8283e8 <col:9, col:13> col:13 used cpu 'int'     |   |-BinaryOperator 0x12f8285f8 <line:14:9, col:21> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12f828520 <col:9> 'int' lvalue Var 0x12f8283e8 'cpu' 'int'     |   | `-BinaryOperator 0x12f8285d8 <col:15, col:21> '<dependent type>' contains-errors '\/'     |   |   |-DeclRefExpr 0x12f828540 <col:15> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'     |   |   `-RecoveryExpr 0x12f8285b8 <col:21> '<dependent type>' contains-errors lvalue     |   |-CompoundAssignOperator 0x12f8286a0 <line:15:9, col:16> 'int' contains-errors '%=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x12f828618 <col:9> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'     |   | `-RecoveryExpr 0x12f828680 <col:16> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x12f828768 <line:16:9, col:19> 'int' '='     |   | |-DeclRefExpr 0x12f8286d0 <col:9> 'int' lvalue Var 0x12f80e028 'cm' 'int'     |   | `-BinaryOperator 0x12f828748 <col:14, col:19> 'int' '<<'     |   |   |-IntegerLiteral 0x12f8286f0 <col:14> 'int' 1     |   |   `-ImplicitCastExpr 0x12f828730 <col:19> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x12f828710 <col:19> 'int' lvalue Var 0x12f8283e8 'cpu' 'int'     |   `-BinaryOperator 0x12f8287e0 <line:17:9, col:18> 'int' '='     |     |-DeclRefExpr 0x12f828788 <col:9> 'int' lvalue Var 0x12f80e0a8 'target' 'int'     |     `-ImplicitCastExpr 0x12f8287c8 <col:18> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12f8287a8 <col:18> 'int' lvalue Var 0x12f80e028 'cm' 'int'     |-CallExpr 0x12f828a28 <line:20:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f828948 <col:5> 'int ()' Function 0x12f828890 'assert' 'int ()'     | `-BinaryOperator 0x12f828a08 <col:12, col:19> 'int' contains-errors '>='     |   |-DeclRefExpr 0x12f828968 <col:12> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'     |   `-RecoveryExpr 0x12f8289e8 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f828c88 <line:22:5, line:24:5>     | |-BinaryOperator 0x12f828c40 <line:22:9, col:45> 'int' '=='     | | |-ImplicitCastExpr 0x12f828c28 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12f828a50 <col:9> 'int' lvalue ParmVar 0x12f80ddd8 'level' 'int'     | | `-CallExpr 0x12f828bc8 <col:18, col:45> 'int'     | |   |-ImplicitCastExpr 0x12f828bb0 <col:18> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x12f828b50 <col:18> 'int ()' Function 0x12f828a98 'GIC_DIST_TEST_LEVEL' 'int ()'     | |   |-ImplicitCastExpr 0x12f828bf8 <col:38> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x12f828b70 <col:38> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'     | |   `-ImplicitCastExpr 0x12f828c10 <col:43> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x12f828b90 <col:43> 'int' lvalue Var 0x12f80e028 'cm' 'int'     | `-CompoundStmt 0x12f828c70 <col:48, line:24:5>     |   `-ReturnStmt 0x12f828c60 <line:23:9>     |-IfStmt 0x12f829600 <line:26:5, line:30:5> has_else     | |-BinaryOperator 0x12f828dc8 <line:26:9, col:24> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12f828d60 <col:9, col:12> '<dependent type>' contains-errors lvalue ->revision     | | | `-RecoveryExpr 0x12f828d40 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12f828da8 <col:24> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12f829030 <col:38, line:28:5>     | | `-CallExpr 0x12f828fe8 <line:27:9, col:55> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12f828ec8 <col:9> 'int ()' Function 0x12f828e10 'gic_set_irq_11mpcore' 'int ()'     | |   |-RecoveryExpr 0x12f828fc8 <col:30> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x12f828f00 <col:33> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'     | |   |-DeclRefExpr 0x12f828f20 <col:38> 'int' lvalue ParmVar 0x12f80ddd8 'level' 'int'     | |   |-DeclRefExpr 0x12f828f40 <col:45> 'int' lvalue Var 0x12f80e028 'cm' 'int'     | |   `-DeclRefExpr 0x12f828f60 <col:49> 'int' lvalue Var 0x12f80e0a8 'target' 'int'     | `-CompoundStmt 0x12f8291c8 <line:28:12, line:30:5>     `-CallExpr 0x12f8297c8 <line:31:5, col:45> 'int'       |-ImplicitCastExpr 0x12f8297b0 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12f829710 <col:5> 'int ()' Function 0x12f829658 'trace_gic_set_irq' 'int ()'       |-ImplicitCastExpr 0x12f829808 <col:23> 'int' <LValueToRValue>       | `-DeclRefExpr 0x12f829730 <col:23> 'int' lvalue ParmVar 0x12f80dd58 'irq' 'int'       |-ImplicitCastExpr 0x12f829820 <col:28> 'int' <LValueToRValue>       | `-DeclRefExpr 0x12f829750 <col:28> 'int' lvalue ParmVar 0x12f80ddd8 'level' 'int'       |-ImplicitCastExpr 0x12f829838 <col:35> 'int' <LValueToRValue>       | `-DeclRefExpr 0x12f829770 <col:35> 'int' lvalue Var 0x12f80e028 'cm' 'int'       `-ImplicitCastExpr 0x12f829850 <col:39> 'int' <LValueToRValue>         `-DeclRefExpr 0x12f829790 <col:39> 'int' lvalue Var 0x12f80e0a8 'target' 'int' ","21145":"`-FunctionDecl 0x14a00dd90  line:1:6 killRDBChild 'void (void)'   `-CompoundStmt 0x15a122880 <col:25, line:6:1>     |-CallExpr 0x14a00e100 <line:2:5, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00dfb0 <col:5> 'int ()' Function 0x14a00def8 'kill' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14a00e098 <col:10, col:17> '<dependent type>' contains-errors lvalue .rdb_child_pid     | | `-RecoveryExpr 0x14a00e078 <col:10> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a00e0e0 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a00e348 <line:3:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00e210 <col:5> 'int ()' Function 0x14a00e158 'rdbRemoveTempFile' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14a00e300 <col:23, col:30> '<dependent type>' contains-errors lvalue .rdb_child_pid     | | `-RecoveryExpr 0x14a00e2e0 <col:23> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14a00e290 <col:45> 'int' 0     |-CallExpr 0x15a122728 <line:4:5, col:24> 'int'     | `-ImplicitCastExpr 0x15a122710 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15a1226b8 <col:5> 'int ()' Function 0x15a122600 'closeChildInfoPipe' 'int ()'     `-CallExpr 0x15a122860 <line:5:5, col:28> 'int'       `-ImplicitCastExpr 0x15a122848 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x15a122828 <col:5> 'int ()' Function 0x15a122770 'updateDictResizePolicy' 'int ()' ","20929":"`-FunctionDecl 0x14d122878  line:1:12 n_hdlc_tty_ioctl 'int (struct tty_struct *, struct file *, unsigned int, unsigned long)' static   |-ParmVarDecl 0x14d80e248 <col:29, col:48> col:48 used tty 'struct tty_struct *'   |-ParmVarDecl 0x14d122628 <col:53, col:66> col:66 used file 'struct file *'   |-ParmVarDecl 0x14d1226a8 <line:2:8, col:21> col:21 used cmd 'unsigned int'   |-ParmVarDecl 0x14d122728 <col:26, col:40> col:40 used arg 'unsigned long'   `-CompoundStmt 0x14e008808 <line:3:1, line:55:1>     |-DeclStmt 0x14d122d88 <line:4:2, col:42>     | |-RecordDecl 0x14d122988 <col:2, col:9> col:9 struct n_hdlc     | `-VarDecl 0x14d122af8 <col:2, col:41> col:17 used n_hdlc 'struct n_hdlc *' cinit     |   `-ImplicitCastExpr 0x14d122d58 <col:26, col:41> 'struct n_hdlc *' <IntegralToPointer>     |     `-CallExpr 0x14d122d18 <col:26, col:41> 'int'     |       |-ImplicitCastExpr 0x14d122d00 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14d122c90 <col:26> 'int ()' Function 0x14d122bd8 'tty2n_hdlc' 'int ()'     |       `-ImplicitCastExpr 0x14d122d40 <col:38> 'struct tty_struct *' <LValueToRValue>     |         `-DeclRefExpr 0x14d122cb0 <col:38> 'struct tty_struct *' lvalue ParmVar 0x14d80e248 'tty' 'struct tty_struct *'     |-DeclStmt 0x14d122e40 <line:5:2, col:15>     | `-VarDecl 0x14d122db8 <col:2, col:14> col:6 used error 'int' cinit     |   `-IntegerLiteral 0x14d122e20 <col:14> 'int' 0     |-DeclStmt 0x14d122ed8 <line:6:2, col:11>     | `-VarDecl 0x14d122e70 <col:2, col:6> col:6 used count 'int'     |-DeclStmt 0x14d122f70 <line:7:2, col:21>     | `-VarDecl 0x14d122f08 <col:2, col:16> col:16 used flags 'unsigned long'     |-IfStmt 0x14d123300 <line:9:2, line:11:25>     | |-BinaryOperator 0x14d123018 <line:9:6, col:20> 'int' contains-errors '>='     | | |-RecoveryExpr 0x14d122fd8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14d122ff8 <col:20> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14d123278 <line:10:3, line:11:25> 'int'     |   |-ImplicitCastExpr 0x14d123260 <line:10:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d123118 <col:3> 'int ()' Function 0x14d123060 'printk' 'int ()'     |   |-ImplicitCastExpr 0x14d1232b8 <col:10> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x14d123180 <col:10> 'char[4]' lvalue \"STR\"     |   |-ImplicitCastExpr 0x14d1232d0 <<scratch space>:2:1> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x14d1231e0 <col:1> 'char[37]' lvalue \"dataset_diviso_filec\/func4514_vuln.c\"     |   |-IntegerLiteral 0x14d123220 <line:3:1> 'int' 11     |   `-ImplicitCastExpr 0x14d1232e8 <dataset_diviso_filec\/func4514_vuln.c:11:22> 'unsigned int' <LValueToRValue>     |     `-DeclRefExpr 0x14d123240 <col:22> 'unsigned int' lvalue ParmVar 0x14d1226a8 'cmd' 'unsigned int'     |-IfStmt 0x14d123590 <line:14:2, line:15:11>     | |-BinaryOperator 0x14d1234c8 <line:14:6, col:34> 'int' contains-errors '||'     | | |-UnaryOperator 0x14d123470 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x14d123458 <col:7> 'struct n_hdlc *' <LValueToRValue>     | | |   `-DeclRefExpr 0x14d123320 <col:7> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     | | `-BinaryOperator 0x14d1234a8 <col:17, col:34> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x14d1233a8 <col:17, col:25> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14d123370 <col:17> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     | |   `-RecoveryExpr 0x14d123488 <col:34> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14d123580 <line:15:3, col:11>     |   `-UnaryOperator 0x14d123568 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14d123550 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14d123530 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x14d12ae00 <line:17:2, line:52:2>     | |-ImplicitCastExpr 0x14d1235d0 <line:17:10> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x14d1235b0 <col:10> 'unsigned int' lvalue ParmVar 0x14d1226a8 'cmd' 'unsigned int'     | `-CompoundStmt 0x14e008740 <col:15, line:52:2>     |   |-CallExpr 0x14d12b020 <line:21:3, col:56> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d12af20 <col:3> 'int ()' Function 0x14d12ae68 'spin_lock_irqsave' 'int ()'     |   | |-UnaryOperator 0x14d12afe8 <col:21, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x14d12afa0 <col:22, col:42> '<dependent type>' contains-errors lvalue .spinlock     |   | |   `-RecoveryExpr 0x14d12af78 <col:22, col:30> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14d12af40 <col:22> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     |   | `-DeclRefExpr 0x14d12b000 <col:51> 'unsigned long' lvalue Var 0x14d122f08 'flags' 'unsigned long'     |   |-IfStmt 0x14d12b288 <line:22:3, line:25:12> has_else     |   | |-CXXDependentScopeMemberExpr 0x14d12b0b0 <line:22:7, col:27> '<dependent type>' contains-errors lvalue .head     |   | | `-RecoveryExpr 0x14d12b088 <col:7, col:15> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14d12b050 <col:7> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     |   | |-BinaryOperator 0x14d12b208 <line:23:4, col:38> 'int' contains-errors '='     |   | | |-DeclRefExpr 0x14d12b0f8 <col:4> 'int' lvalue Var 0x14d122e70 'count' 'int'     |   | | `-CXXDependentScopeMemberExpr 0x14d12b1c0 <col:12, col:38> '<dependent type>' contains-errors lvalue ->count     |   | |   `-CXXDependentScopeMemberExpr 0x14d12b178 <col:12, col:32> '<dependent type>' contains-errors lvalue .head     |   | |     `-RecoveryExpr 0x14d12b150 <col:12, col:20> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x14d12b118 <col:12> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     |   | `-BinaryOperator 0x14d12b268 <line:25:4, col:12> 'int' '='     |   |   |-DeclRefExpr 0x14d12b228 <col:4> 'int' lvalue Var 0x14d122e70 'count' 'int'     |   |   `-IntegerLiteral 0x14d12b248 <col:12> 'int' 0     |   |-CallExpr 0x14d12b498 <line:26:3, col:61> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d12b398 <col:3> 'int ()' Function 0x14d12b2e0 'spin_unlock_irqrestore' 'int ()'     |   | |-UnaryOperator 0x14d12b460 <col:26, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x14d12b418 <col:27, col:47> '<dependent type>' contains-errors lvalue .spinlock     |   | |   `-RecoveryExpr 0x14d12b3f0 <col:27, col:35> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14d12b3b8 <col:27> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     |   | `-DeclRefExpr 0x14d12b478 <col:56> 'unsigned long' lvalue Var 0x14d122f08 'flags' 'unsigned long'     |   |-BinaryOperator 0x14d12b6e0 <line:27:3, col:44> 'int' '='     |   | |-DeclRefExpr 0x14d12b4c8 <col:3> 'int' lvalue Var 0x14d122db8 'error' 'int'     |   | `-CallExpr 0x14d12b698 <col:11, col:44> 'int'     |   |   |-ImplicitCastExpr 0x14d12b680 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14d12b5c8 <col:11> 'int ()' Function 0x14d12b510 'put_user' 'int ()'     |   |   |-ImplicitCastExpr 0x14d12b6c8 <col:20> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14d12b5e8 <col:20> 'int' lvalue Var 0x14d122e70 'count' 'int'     |   |   `-CStyleCastExpr 0x14d12b658 <col:27, col:41> 'int' <IntegralCast>     |   |     `-ImplicitCastExpr 0x14d12b640 <col:41> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |   |       `-DeclRefExpr 0x14d12b608 <col:41> 'unsigned long' lvalue ParmVar 0x14d122728 'arg' 'unsigned long'     |   |-BreakStmt 0x14d12b700 <line:28:3>     |   |-BinaryOperator 0x14d12b8b8 <line:32:3, col:34> 'int' '='     |   | |-DeclRefExpr 0x14d12b720 <col:3> 'int' lvalue Var 0x14d122e70 'count' 'int'     |   | `-CallExpr 0x14d12b878 <col:11, col:34> 'int'     |   |   |-ImplicitCastExpr 0x14d12b860 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14d12b820 <col:11> 'int ()' Function 0x14d12b768 'tty_chars_in_buffer' 'int ()'     |   |   `-ImplicitCastExpr 0x14d12b8a0 <col:31> 'struct tty_struct *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14d12b840 <col:31> 'struct tty_struct *' lvalue ParmVar 0x14d80e248 'tty' 'struct tty_struct *'     |   |-CallExpr 0x14d12b9d8 <line:34:3, col:56> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d12b8d8 <col:3> 'int ()' Function 0x14d12ae68 'spin_lock_irqsave' 'int ()'     |   | |-UnaryOperator 0x14d12b9a0 <col:21, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x14d12b958 <col:22, col:42> '<dependent type>' contains-errors lvalue .spinlock     |   | |   `-RecoveryExpr 0x14d12b930 <col:22, col:30> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14d12b8f8 <col:22> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     |   | `-DeclRefExpr 0x14d12b9b8 <col:51> 'unsigned long' lvalue Var 0x14d122f08 'flags' 'unsigned long'     |   |-IfStmt 0x14d12bbf0 <line:35:3, line:36:39>     |   | |-CXXDependentScopeMemberExpr 0x14d12ba68 <line:35:7, col:27> '<dependent type>' contains-errors lvalue .head     |   | | `-RecoveryExpr 0x14d12ba40 <col:7, col:15> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14d12ba08 <col:7> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     |   | `-CompoundAssignOperator 0x14d12bbc0 <line:36:4, col:39> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-DeclRefExpr 0x14d12bab0 <col:4> 'int' lvalue Var 0x14d122e70 'count' 'int'     |   |   `-CXXDependentScopeMemberExpr 0x14d12bb78 <col:13, col:39> '<dependent type>' contains-errors lvalue ->count     |   |     `-CXXDependentScopeMemberExpr 0x14d12bb30 <col:13, col:33> '<dependent type>' contains-errors lvalue .head     |   |       `-RecoveryExpr 0x14d12bb08 <col:13, col:21> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x14d12bad0 <col:13> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     |   |-CallExpr 0x14d12bd10 <line:37:3, col:61> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d12bc10 <col:3> 'int ()' Function 0x14d12b2e0 'spin_unlock_irqrestore' 'int ()'     |   | |-UnaryOperator 0x14d12bcd8 <col:26, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x14d12bc90 <col:27, col:47> '<dependent type>' contains-errors lvalue .spinlock     |   | |   `-RecoveryExpr 0x14d12bc68 <col:27, col:35> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14d12bc30 <col:27> 'struct n_hdlc *' lvalue Var 0x14d122af8 'n_hdlc' 'struct n_hdlc *'     |   | `-DeclRefExpr 0x14d12bcf0 <col:56> 'unsigned long' lvalue Var 0x14d122f08 'flags' 'unsigned long'     |   |-BinaryOperator 0x14e008288 <line:38:3, col:44> 'int' '='     |   | |-DeclRefExpr 0x14d12bd40 <col:3> 'int' lvalue Var 0x14d122db8 'error' 'int'     |   | `-CallExpr 0x14e008240 <col:11, col:44> 'int'     |   |   |-ImplicitCastExpr 0x14e008228 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14d12bd60 <col:11> 'int ()' Function 0x14d12b510 'put_user' 'int ()'     |   |   |-ImplicitCastExpr 0x14e008270 <col:20> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14d12bd80 <col:20> 'int' lvalue Var 0x14d122e70 'count' 'int'     |   |   `-CStyleCastExpr 0x14e008200 <col:27, col:41> 'int' <IntegralCast>     |   |     `-ImplicitCastExpr 0x14d12bdd8 <col:41> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |   |       `-DeclRefExpr 0x14d12bda0 <col:41> 'unsigned long' lvalue ParmVar 0x14d122728 'arg' 'unsigned long'     |   |-BreakStmt 0x14e0082a8 <line:39:3>     |   |-SwitchStmt 0x14e0082e8 <line:42:3, line:46:3>     |   | |-ImplicitCastExpr 0x14e0082d0 <line:42:11> 'unsigned long' <LValueToRValue>     |   | | `-DeclRefExpr 0x14e0082b0 <col:11> 'unsigned long' lvalue ParmVar 0x14d122728 'arg' 'unsigned long'     |   | `-CompoundStmt 0x14e008488 <col:16, line:46:3>     |   |   `-CallExpr 0x14e008448 <line:45:4, col:22> 'int'     |   |     |-ImplicitCastExpr 0x14e008430 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14e0083f0 <col:4> 'int ()' Function 0x14e008338 'flush_tx_queue' 'int ()'     |   |     `-ImplicitCastExpr 0x14e008470 <col:19> 'struct tty_struct *' <LValueToRValue>     |   |       `-DeclRefExpr 0x14e008410 <col:19> 'struct tty_struct *' lvalue ParmVar 0x14d80e248 'tty' 'struct tty_struct *'     |   |-DefaultStmt 0x14e008718 <line:49:2, line:50:49>     |   | `-BinaryOperator 0x14e0086f8 <col:3, col:49> 'int' '='     |   |   |-DeclRefExpr 0x14e0084a0 <col:3> 'int' lvalue Var 0x14d122db8 'error' 'int'     |   |   `-CallExpr 0x14e008658 <col:11, col:49> 'int'     |   |     |-ImplicitCastExpr 0x14e008640 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14e0085a0 <col:11> 'int ()' Function 0x14e0084e8 'n_tty_ioctl_helper' 'int ()'     |   |     |-ImplicitCastExpr 0x14e008698 <col:30> 'struct tty_struct *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e0085c0 <col:30> 'struct tty_struct *' lvalue ParmVar 0x14d80e248 'tty' 'struct tty_struct *'     |   |     |-ImplicitCastExpr 0x14e0086b0 <col:35> 'struct file *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e0085e0 <col:35> 'struct file *' lvalue ParmVar 0x14d122628 'file' 'struct file *'     |   |     |-ImplicitCastExpr 0x14e0086c8 <col:41> 'unsigned int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14e008600 <col:41> 'unsigned int' lvalue ParmVar 0x14d1226a8 'cmd' 'unsigned int'     |   |     `-ImplicitCastExpr 0x14e0086e0 <col:46> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x14e008620 <col:46> 'unsigned long' lvalue ParmVar 0x14d122728 'arg' 'unsigned long'     |   `-BreakStmt 0x14e008738 <line:51:3>     `-ReturnStmt 0x14e0087f8 <line:53:2, col:9>       `-ImplicitCastExpr 0x14e0087e0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14e0087c0 <col:9> 'int' lvalue Var 0x14d122db8 'error' 'int' ","20567":"`-FunctionDecl 0x13f064b20  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x13f07dc30 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x13f064bc8 <<invalid sloc>> Implicit 903   `-FormatAttr 0x13f07dca0 <col:3> Implicit printf 1 2 ","20442":"`-FunctionDecl 0x14d80ddc8  line:1:13 invalid oidc_util_hdr_in_x_forwarded_port_get 'const char *(const int *)'   |-ParmVarDecl 0x14d80dcf0 <col:51, col:70> col:70 invalid r 'const int *'   `-CompoundStmt 0x14d80e040 <col:73, line:4:1> ","20434":"`-FunctionDecl 0x13b00e098  line:1:13 invalid ResolveAxis 'int (const int, const int *, const int, int *, int *)' inline   |-ParmVarDecl 0x13b00dcf0 <col:25, col:35> col:35 used num_dims 'const int'   |-ParmVarDecl 0x13b00dd70 <col:45, col:56> col:56 used axis 'const int *'   |-ParmVarDecl 0x13b00ddf0 <line:2:25, col:39> col:39 invalid num_axis 'const int'   |-ParmVarDecl 0x13b00dea8 <col:49, col:54> col:54 used out_axis 'int *'   |-ParmVarDecl 0x13b00df28 <line:3:25, col:30> col:30 used out_num_axis 'int *'   `-CompoundStmt 0x13b028948 <col:44, line:29:1>     |-BinaryOperator 0x13b00e1d8 <line:4:3, col:19> 'int' '='     | |-UnaryOperator 0x13b00e1a0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13b00e188 <col:4> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x13b00e168 <col:4> 'int *' lvalue ParmVar 0x13b00df28 'out_num_axis' 'int *'     | `-IntegerLiteral 0x13b00e1b8 <col:19> 'int' 0     |-IfStmt 0x13b00e2d0 <line:6:3, line:8:3>     | |-BinaryOperator 0x13b00e250 <line:6:7, col:19> 'int' '=='     | | |-ImplicitCastExpr 0x13b00e238 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13b00e1f8 <col:7> 'const int' lvalue ParmVar 0x13b00dcf0 'num_dims' 'const int'     | | `-IntegerLiteral 0x13b00e218 <col:19> 'int' 0     | `-CompoundStmt 0x13b00e2b8 <col:22, line:8:3>     |   `-ReturnStmt 0x13b00e2a8 <line:7:5, col:12>     |     `-RecoveryExpr 0x13b00e288 <col:12> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13b0288c8 <line:10:3, line:27:3>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13b00e380 <line:10:25, col:31> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13b00e360 <col:25> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13b00e320 <col:31> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x13b027e00 <col:41, col:43> '<dependent type>' contains-errors prefix '++' cannot overflow     | | `-RecoveryExpr 0x13b00e3d0 <col:43> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b028898 <col:48, line:27:3>     |   |-DeclStmt 0x13b027f80 <line:14:5, col:69>     |   | `-VarDecl 0x13b027e30 <col:5, col:9> col:9 used current 'int'     |   |-CallExpr 0x13b028288 <line:15:5, col:53> 'int'     |   | |-ImplicitCastExpr 0x13b028270 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13b0280f0 <col:5> 'int ()' Function 0x13b028038 'TFLITE_DCHECK' 'int ()'     |   | `-BinaryOperator 0x13b028218 <col:19, col:45> 'int' '&&'     |   |   |-BinaryOperator 0x13b028168 <col:19, col:30> 'int' '>='     |   |   | |-ImplicitCastExpr 0x13b028150 <col:19> 'int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x13b028110 <col:19> 'int' lvalue Var 0x13b027e30 'current' 'int'     |   |   | `-IntegerLiteral 0x13b028130 <col:30> 'int' 0     |   |   `-BinaryOperator 0x13b0281f8 <col:35, col:45> 'int' '<'     |   |     |-ImplicitCastExpr 0x13b0281c8 <col:35> 'int' <LValueToRValue>     |   |     | `-DeclRefExpr 0x13b028188 <col:35> 'int' lvalue Var 0x13b027e30 'current' 'int'     |   |     `-ImplicitCastExpr 0x13b0281e0 <col:45> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x13b0281a8 <col:45> 'const int' lvalue ParmVar 0x13b00dcf0 'num_dims' 'const int'     |   |-ForStmt 0x13b0285d0 <line:17:5, line:22:5>     |   | |-DeclStmt 0x13b028350 <line:17:10, col:19>     |   | | `-VarDecl 0x13b0282c8 <col:10, col:18> col:14 used j 'int' cinit     |   | |   `-IntegerLiteral 0x13b028330 <col:18> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x13b028408 <col:21, col:26> 'int' '<'     |   | | |-ImplicitCastExpr 0x13b0283d8 <col:21> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13b028368 <col:21> 'int' lvalue Var 0x13b0282c8 'j' 'int'     |   | | `-ImplicitCastExpr 0x13b0283f0 <col:25, col:26> 'int' <LValueToRValue>     |   | |   `-UnaryOperator 0x13b0283c0 <col:25, col:26> 'int' lvalue prefix '*' cannot overflow     |   | |     `-ImplicitCastExpr 0x13b0283a8 <col:26> 'int *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x13b028388 <col:26> 'int *' lvalue ParmVar 0x13b00df28 'out_num_axis' 'int *'     |   | |-UnaryOperator 0x13b028448 <col:40, col:42> 'int' prefix '++'     |   | | `-DeclRefExpr 0x13b028428 <col:42> 'int' lvalue Var 0x13b0282c8 'j' 'int'     |   | `-CompoundStmt 0x13b0285b8 <col:45, line:22:5>     |   |   `-IfStmt 0x13b028598 <line:18:7, line:21:7>     |   |     |-BinaryOperator 0x13b028540 <line:18:11, col:26> 'int' '=='     |   |     | |-ImplicitCastExpr 0x13b028510 <col:11, col:21> 'int' <LValueToRValue>     |   |     | | `-ArraySubscriptExpr 0x13b0284d0 <col:11, col:21> 'int' lvalue     |   |     | |   |-ImplicitCastExpr 0x13b0284a0 <col:11> 'int *' <LValueToRValue>     |   |     | |   | `-DeclRefExpr 0x13b028460 <col:11> 'int *' lvalue ParmVar 0x13b00dea8 'out_axis' 'int *'     |   |     | |   `-ImplicitCastExpr 0x13b0284b8 <col:20> 'int' <LValueToRValue>     |   |     | |     `-DeclRefExpr 0x13b028480 <col:20> 'int' lvalue Var 0x13b0282c8 'j' 'int'     |   |     | `-ImplicitCastExpr 0x13b028528 <col:26> 'int' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x13b0284f0 <col:26> 'int' lvalue Var 0x13b027e30 'current' 'int'     |   |     `-CompoundStmt 0x13b028580 <col:35, line:21:7>     |   |       `-BreakStmt 0x13b028578 <line:20:9>     |   `-IfStmt 0x13b028878 <line:23:5, line:26:5>     |     |-UnaryOperator 0x13b028688 <line:23:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x13b028670 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x13b028650 <col:10> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13b028858 <col:18, line:26:5>     |       |-BinaryOperator 0x13b028798 <line:24:7, col:33> 'int' '='     |       | |-ArraySubscriptExpr 0x13b028740 <col:7, col:29> 'int' lvalue     |       | | |-ImplicitCastExpr 0x13b028710 <col:7> 'int *' <LValueToRValue>     |       | | | `-DeclRefExpr 0x13b0286a0 <col:7> 'int *' lvalue ParmVar 0x13b00dea8 'out_axis' 'int *'     |       | | `-ImplicitCastExpr 0x13b028728 <col:16, col:17> 'int' <LValueToRValue>     |       | |   `-UnaryOperator 0x13b0286f8 <col:16, col:17> 'int' lvalue prefix '*' cannot overflow     |       | |     `-ImplicitCastExpr 0x13b0286e0 <col:17> 'int *' <LValueToRValue>     |       | |       `-DeclRefExpr 0x13b0286c0 <col:17> 'int *' lvalue ParmVar 0x13b00df28 'out_num_axis' 'int *'     |       | `-ImplicitCastExpr 0x13b028780 <col:33> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x13b028760 <col:33> 'int' lvalue Var 0x13b027e30 'current' 'int'     |       `-CompoundAssignOperator 0x13b028828 <line:25:7, col:24> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |         |-UnaryOperator 0x13b0287f0 <col:7, col:8> 'int' lvalue prefix '*' cannot overflow     |         | `-ImplicitCastExpr 0x13b0287d8 <col:8> 'int *' <LValueToRValue>     |         |   `-DeclRefExpr 0x13b0287b8 <col:8> 'int *' lvalue ParmVar 0x13b00df28 'out_num_axis' 'int *'     |         `-IntegerLiteral 0x13b028808 <col:24> 'int' 1     `-ReturnStmt 0x13b028938 <line:28:3, col:10>       `-RecoveryExpr 0x13b028918 <col:10> '<dependent type>' contains-errors lvalue ","21086":"`-FunctionDecl 0x14b914388  line:1:28 invalid alloc_slab_page 'struct page *(int, int, struct kmem_cache_order_objects)' static inline   |-ParmVarDecl 0x14b8fab90 <col:44, col:50> col:50 invalid flags 'int'   |-ParmVarDecl 0x14b8fac10 <col:57, col:61> col:61 used node 'int'   |-ParmVarDecl 0x14b8fb198 <line:2:6, col:38> col:38 invalid oo 'struct kmem_cache_order_objects'   `-CompoundStmt 0x14b914a88 <line:3:1, line:10:1>     |-DeclStmt 0x14b914688 <line:4:2, col:26>     | `-VarDecl 0x14b914460 <col:2, col:25> col:6 used order 'int' cinit     |   `-CallExpr 0x14b914660 <col:14, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14b914620 <col:14> 'int ()' Function 0x14b914568 'oo_order' 'int ()'     |     `-RecoveryExpr 0x14b914640 <col:23> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14b914a58 <line:6:2, line:9:45> has_else       |-BinaryOperator 0x14b914710 <line:6:6, col:15> 'int' '=='       | |-ImplicitCastExpr 0x14b9146f8 <col:6> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x14b9146a0 <col:6> 'int' lvalue ParmVar 0x14b8fac10 'node' 'int'       | `-UnaryOperator 0x14b9146e0 <col:14, col:15> 'int' prefix '-'       |   `-IntegerLiteral 0x14b9146c0 <col:15> 'int' 1       |-ReturnStmt 0x14b9148a0 <line:7:3, col:34>       | `-CallExpr 0x14b914870 <col:10, col:34> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14b914810 <col:10> 'int ()' Function 0x14b914758 'alloc_pages' 'int ()'       |   |-RecoveryExpr 0x14b914830 <col:22> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14b914850 <col:29> 'int' contains-errors lvalue Var 0x14b914460 'order' 'int'       `-ReturnStmt 0x14b914a48 <line:9:3, col:45>         `-CallExpr 0x14b914a10 <col:10, col:45> '<dependent type>' contains-errors           |-DeclRefExpr 0x14b914990 <col:10> 'int ()' Function 0x14b9148d8 'alloc_pages_node' 'int ()'           |-DeclRefExpr 0x14b9149b0 <col:27> 'int' lvalue ParmVar 0x14b8fac10 'node' 'int'           |-RecoveryExpr 0x14b9149d0 <col:33> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14b9149f0 <col:40> 'int' contains-errors lvalue Var 0x14b914460 'order' 'int' ","20335":"`-FunctionDecl 0x138809990  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x138809a90 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x138809a38 <<invalid sloc>> Implicit 873 ","20933":"`-FunctionDecl 0x12700df10  line:1:6 invalid virtio_config_writeb 'void (int *, int, int)'   |-ParmVarDecl 0x12700dd28 <col:27, col:41> col:41 invalid vdev 'int *'   |-ParmVarDecl 0x12700dda8 <col:47, col:56> col:56 invalid addr 'int'   |-ParmVarDecl 0x12700de28 <col:62, col:71> col:71 invalid data 'int'   `-CompoundStmt 0x127027658 <line:2:1, line:14:1>     |-IfStmt 0x12700e278 <line:6:5, line:7:9>     | |-RecoveryExpr 0x12700e248 <line:6:9, col:47> '_Bool' contains-errors     | `-ReturnStmt 0x12700e268 <line:7:9>     |-CallExpr 0x1270274a8 <line:9:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12700e378 <col:5> 'int ()' Function 0x12700e2c0 'stb_p' 'int ()'     | |-BinaryOperator 0x127027420 <col:11, col:26> '<dependent type>' contains-errors '+'     | | |-CXXDependentScopeMemberExpr 0x12700e3b8 <col:11, col:17> '<dependent type>' contains-errors lvalue ->config     | | | `-RecoveryExpr 0x12700e398 <col:11> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x127027400 <col:26> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x127027488 <col:32> '<dependent type>' contains-errors lvalue     `-IfStmt 0x127027638 <line:11:5, line:13:5>       |-CXXDependentScopeMemberExpr 0x127027558 <line:11:9, col:12> '<dependent type>' contains-errors lvalue ->set_config       | `-RecoveryExpr 0x127027538 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x127027628 <col:24, line:13:5> ","20877":"`-FunctionDecl 0x15b140ff8  col:6 implicit used isxdigit 'int (int)' extern   |-ParmVarDecl 0x15b1410f8 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x15b1410a0 <<invalid sloc>> Implicit 931   |-NoThrowAttr 0x15b141168 <col:6> Implicit   `-PureAttr 0x15b141190 <col:6> Implicit ","20283":"`-FunctionDecl 0x153026f30  line:1:13 mem_cgroup_usage_unregister_event 'void (struct cgroup *, struct cftype *, struct eventfd_ctx *)' static   |-ParmVarDecl 0x15300e848 <col:47, col:62> col:62 used cgrp 'struct cgroup *'   |-ParmVarDecl 0x153026c28 <line:2:2, col:17> col:17 used cft 'struct cftype *'   |-ParmVarDecl 0x153026df8 <col:22, col:42> col:42 used eventfd 'struct eventfd_ctx *'   `-CompoundStmt 0x1539248b0 <line:3:1, line:68:1>     |-DeclStmt 0x153027438 <line:4:2, col:55>     | |-RecordDecl 0x153027038 <col:2, col:9> col:9 struct mem_cgroup     | `-VarDecl 0x1530271a8 <col:2, col:54> col:21 used memcg 'struct mem_cgroup *' cinit     |   `-ImplicitCastExpr 0x153027408 <col:29, col:54> 'struct mem_cgroup *' <IntegralToPointer>     |     `-CallExpr 0x1530273c8 <col:29, col:54> 'int'     |       |-ImplicitCastExpr 0x1530273b0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x153027340 <col:29> 'int ()' Function 0x153027288 'mem_cgroup_from_cont' 'int ()'     |       `-ImplicitCastExpr 0x1530273f0 <col:50> 'struct cgroup *' <LValueToRValue>     |         `-DeclRefExpr 0x153027360 <col:50> 'struct cgroup *' lvalue ParmVar 0x15300e848 'cgrp' 'struct cgroup *'     |-DeclStmt 0x153027638 <line:5:2, col:42>     | |-RecordDecl 0x153027450 <col:2, col:9> col:9 struct mem_cgroup_thresholds     | `-VarDecl 0x1530275b8 <col:2, col:32> col:32 used thresholds 'struct mem_cgroup_thresholds *'     |-DeclStmt 0x153027838 <line:6:2, col:38>     | |-RecordDecl 0x153027650 <col:2, col:9> col:9 struct mem_cgroup_threshold_ary     | `-VarDecl 0x1530277b8 <col:2, col:35> col:35 used new 'struct mem_cgroup_threshold_ary *'     |-DeclStmt 0x153027a58 <line:7:2, col:39>     | `-VarDecl 0x153027868 <col:2, col:38> col:6 used type 'int' cinit     |   `-CallExpr 0x153027a30 <col:13, col:38> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1530279b0 <col:13> 'int ()' Function 0x1530278f8 'MEMFILE_TYPE' 'int ()'     |     `-RecoveryExpr 0x153027a08 <col:26, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1530279d0 <col:26> 'struct cftype *' lvalue ParmVar 0x153026c28 'cft' 'struct cftype *'     |-DeclStmt 0x153922620 <line:9:2, col:16>     | |-VarDecl 0x153027a88 <col:2, col:6> col:6 used i 'int'     | |-VarDecl 0x153027b08 <col:2, col:9> col:9 used j 'int'     | `-VarDecl 0x153027b88 <col:2, col:12> col:12 used size 'int'     |-CallExpr 0x1539227b0 <line:11:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153922718 <col:2> 'int ()' Function 0x153922660 'mutex_lock' 'int ()'     | `-UnaryOperator 0x153922798 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x153922770 <col:14, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x153922738 <col:14> 'struct mem_cgroup *' lvalue Var 0x1530271a8 'memcg' 'struct mem_cgroup *'     |-IfStmt 0x153922be0 <line:12:2, line:17:7> has_else     | |-BinaryOperator 0x153922850 <line:12:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1539227d8 <col:6> 'int' contains-errors lvalue Var 0x153027868 'type' 'int'     | | `-RecoveryExpr 0x153922830 <col:14> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x153922908 <line:13:3, col:24> 'struct mem_cgroup_thresholds *' contains-errors '='     | | |-DeclRefExpr 0x153922870 <col:3> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     | | `-UnaryOperator 0x1539228f0 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1539228c8 <col:17, col:24> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x153922890 <col:17> 'struct mem_cgroup *' lvalue Var 0x1530271a8 'memcg' 'struct mem_cgroup *'     | `-IfStmt 0x153922bb0 <line:14:7, line:17:7> has_else     |   |-BinaryOperator 0x1539229a0 <line:14:11, col:19> 'int' contains-errors '=='     |   | |-DeclRefExpr 0x153922928 <col:11> 'int' contains-errors lvalue Var 0x153027868 'type' 'int'     |   | `-RecoveryExpr 0x153922980 <col:19> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x153922a58 <line:15:3, col:24> 'struct mem_cgroup_thresholds *' contains-errors '='     |   | |-DeclRefExpr 0x1539229c0 <col:3> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     |   | `-UnaryOperator 0x153922a40 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x153922a18 <col:17, col:24> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1539229e0 <col:17> 'struct mem_cgroup *' lvalue Var 0x1530271a8 'memcg' 'struct mem_cgroup *'     |   `-CallExpr 0x153922b90 <line:17:3, col:7> 'int'     |     `-ImplicitCastExpr 0x153922b78 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x153922b58 <col:3> 'int ()' Function 0x153922aa0 'BUG' 'int ()'     |-CallExpr 0x153922d78 <line:20:2, col:20> 'int'     | |-ImplicitCastExpr 0x153922d60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x153922cf0 <col:2> 'int ()' Function 0x153922c38 'BUG_ON' 'int ()'     | `-UnaryOperator 0x153922d48 <col:9, col:10> 'int' prefix '!' cannot overflow     |   `-ImplicitCastExpr 0x153922d30 <col:10> 'struct mem_cgroup_thresholds *' <LValueToRValue>     |     `-DeclRefExpr 0x153922d10 <col:10> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     |-CallExpr 0x153923130 <line:25:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153923028 <col:2> 'int ()' Function 0x153922f70 '__mem_cgroup_threshold' 'int ()'     | |-DeclRefExpr 0x153923048 <col:25> 'struct mem_cgroup *' lvalue Var 0x1530271a8 'memcg' 'struct mem_cgroup *'     | `-BinaryOperator 0x153923110 <col:32, col:40> 'int' contains-errors '=='     |   |-DeclRefExpr 0x153923068 <col:32> 'int' contains-errors lvalue Var 0x153027868 'type' 'int'     |   `-RecoveryExpr 0x1539230f0 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1539231a0 <line:28:2, col:9> 'int' '='     | |-DeclRefExpr 0x153923160 <col:2> 'int' lvalue Var 0x153027b88 'size' 'int'     | `-IntegerLiteral 0x153923180 <col:9> 'int' 0     |-ForStmt 0x153923550 <line:29:2, line:32:2>     | |-BinaryOperator 0x153923200 <line:29:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1539231c0 <col:7> 'int' lvalue Var 0x153027a88 'i' 'int'     | | `-IntegerLiteral 0x1539231e0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1539232e8 <col:14, col:39> 'int' contains-errors '<'     | | |-DeclRefExpr 0x153923220 <col:14> 'int' lvalue Var 0x153027a88 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x1539232a0 <col:18, col:39> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x153923278 <col:18, col:30> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x153923240 <col:18> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     | |-UnaryOperator 0x153923328 <col:45, col:46> 'int' postfix '++'     | | `-DeclRefExpr 0x153923308 <col:45> 'int' lvalue Var 0x153027a88 'i' 'int'     | `-CompoundStmt 0x153923538 <col:50, line:32:2>     |   `-IfStmt 0x153923518 <line:30:3, line:31:8>     |     |-BinaryOperator 0x1539234c0 <line:30:7, col:50> 'int' contains-errors '!='     |     | |-CXXDependentScopeMemberExpr 0x153923458 <col:7, col:39> '<dependent type>' contains-errors lvalue .eventfd     |     | | `-ArraySubscriptExpr 0x153923438 <col:7, col:37> '<dependent type>' contains-errors lvalue     |     | |   |-ImplicitCastExpr 0x153923408 <col:7, col:28> '<dependent type>' contains-errors <LValueToRValue>     |     | |   | `-CXXDependentScopeMemberExpr 0x1539233a0 <col:7, col:28> '<dependent type>' contains-errors lvalue ->entries     |     | |   |   `-RecoveryExpr 0x153923378 <col:7, col:19> '<dependent type>' contains-errors lvalue     |     | |   |     `-DeclRefExpr 0x153923340 <col:7> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     |     | |   `-ImplicitCastExpr 0x153923420 <col:36> 'int' <LValueToRValue>     |     | |     `-DeclRefExpr 0x1539233e8 <col:36> 'int' lvalue Var 0x153027a88 'i' 'int'     |     | `-DeclRefExpr 0x1539234a0 <col:50> 'struct eventfd_ctx *' lvalue ParmVar 0x153026df8 'eventfd' 'struct eventfd_ctx *'     |     `-UnaryOperator 0x153923500 <line:31:4, col:8> 'int' postfix '++'     |       `-DeclRefExpr 0x1539234e0 <col:4> 'int' lvalue Var 0x153027b88 'size' 'int'     |-BinaryOperator 0x153923628 <line:34:2, col:20> 'struct mem_cgroup_threshold_ary *' contains-errors '='     | |-DeclRefExpr 0x153923588 <col:2> 'struct mem_cgroup_threshold_ary *' lvalue Var 0x1530277b8 'new' 'struct mem_cgroup_threshold_ary *'     | `-RecoveryExpr 0x153923600 <col:8, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1539235a8 <col:8> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     |-IfStmt 0x1539238b8 <line:37:2, line:41:2>     | |-UnaryOperator 0x153923680 <line:37:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x153923668 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x153923648 <col:7> 'int' lvalue Var 0x153027b88 'size' 'int'     | `-CompoundStmt 0x153923898 <col:13, line:41:2>     |   |-CallExpr 0x1539237d0 <line:38:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x1539237b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x153923778 <col:3> 'int ()' Function 0x1539236c0 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x1539237f8 <col:9> 'struct mem_cgroup_threshold_ary *' <LValueToRValue>     |   |   `-DeclRefExpr 0x153923798 <col:9> 'struct mem_cgroup_threshold_ary *' lvalue Var 0x1530277b8 'new' 'struct mem_cgroup_threshold_ary *'     |   `-GotoStmt 0x153923880 <line:40:3, col:8> 'swap_buffers' 0x153923830     |-BinaryOperator 0x153923958 <line:43:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x153923910 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1539238d8 <col:2> 'struct mem_cgroup_threshold_ary *' lvalue Var 0x1530277b8 'new' 'struct mem_cgroup_threshold_ary *'     | `-DeclRefExpr 0x153923938 <col:14> 'int' lvalue Var 0x153027b88 'size' 'int'     |-BinaryOperator 0x153923a10 <line:46:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1539239b0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153923978 <col:2> 'struct mem_cgroup_threshold_ary *' lvalue Var 0x1530277b8 'new' 'struct mem_cgroup_threshold_ary *'     | `-UnaryOperator 0x1539239f8 <col:27, col:28> 'int' prefix '-'     |   `-IntegerLiteral 0x1539239d8 <col:28> 'int' 1     |-ForStmt 0x153924250 <line:47:2, line:57:2>     | |-BinaryOperator 0x153923af0 <line:47:7, col:18> 'int' ','     | | |-BinaryOperator 0x153923a70 <col:7, col:11> 'int' '='     | | | |-DeclRefExpr 0x153923a30 <col:7> 'int' lvalue Var 0x153027a88 'i' 'int'     | | | `-IntegerLiteral 0x153923a50 <col:11> 'int' 0     | | `-BinaryOperator 0x153923ad0 <col:14, col:18> 'int' '='     | |   |-DeclRefExpr 0x153923a90 <col:14> 'int' lvalue Var 0x153027b08 'j' 'int'     | |   `-IntegerLiteral 0x153923ab0 <col:18> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x153923bd8 <col:21, col:46> 'int' contains-errors '<'     | | |-DeclRefExpr 0x153923b10 <col:21> 'int' lvalue Var 0x153027a88 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x153923b90 <col:25, col:46> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x153923b68 <col:25, col:37> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x153923b30 <col:25> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     | |-UnaryOperator 0x153923c18 <col:52, col:53> 'int' postfix '++'     | | `-DeclRefExpr 0x153923bf8 <col:52> 'int' lvalue Var 0x153027a88 'i' 'int'     | `-CompoundStmt 0x153924220 <col:57, line:57:2>     |   |-IfStmt 0x153923dd8 <line:48:3, line:49:4>     |   | |-BinaryOperator 0x153923db0 <line:48:7, col:50> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x153923d48 <col:7, col:39> '<dependent type>' contains-errors lvalue .eventfd     |   | | | `-ArraySubscriptExpr 0x153923d28 <col:7, col:37> '<dependent type>' contains-errors lvalue     |   | | |   |-ImplicitCastExpr 0x153923cf8 <col:7, col:28> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   | `-CXXDependentScopeMemberExpr 0x153923c90 <col:7, col:28> '<dependent type>' contains-errors lvalue ->entries     |   | | |   |   `-RecoveryExpr 0x153923c68 <col:7, col:19> '<dependent type>' contains-errors lvalue     |   | | |   |     `-DeclRefExpr 0x153923c30 <col:7> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     |   | | |   `-ImplicitCastExpr 0x153923d10 <col:36> 'int' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x153923cd8 <col:36> 'int' lvalue Var 0x153027a88 'i' 'int'     |   | | `-DeclRefExpr 0x153923d90 <col:50> 'struct eventfd_ctx *' lvalue ParmVar 0x153026df8 'eventfd' 'struct eventfd_ctx *'     |   | `-ContinueStmt 0x153923dd0 <line:49:4>     |   |-BinaryOperator 0x153923fe0 <line:51:3, col:51> '<dependent type>' contains-errors '='     |   | |-ArraySubscriptExpr 0x153923ea8 <col:3, col:17> '<dependent type>' contains-errors lvalue     |   | | |-ImplicitCastExpr 0x153923e78 <col:3, col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x153923e30 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x153923df8 <col:3> 'struct mem_cgroup_threshold_ary *' lvalue Var 0x1530277b8 'new' 'struct mem_cgroup_threshold_ary *'     |   | | `-ImplicitCastExpr 0x153923e90 <col:16> 'int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x153923e58 <col:16> 'int' lvalue Var 0x153027b08 'j' 'int'     |   | `-ArraySubscriptExpr 0x153923fc0 <col:21, col:51> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x153923f90 <col:21, col:42> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x153923f28 <col:21, col:42> '<dependent type>' contains-errors lvalue ->entries     |   |   |   `-RecoveryExpr 0x153923f00 <col:21, col:33> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x153923ec8 <col:21> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     |   |   `-ImplicitCastExpr 0x153923fa8 <col:50> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x153923f70 <col:50> 'int' lvalue Var 0x153027a88 'i' 'int'     |   |-IfStmt 0x1539241c8 <line:52:3, line:55:3>     |   | |-RecoveryExpr 0x153924118 <line:52:7, col:35> '_Bool' contains-errors     |   | `-CompoundStmt 0x1539241b0 <col:42, line:55:3>     |   |   `-UnaryOperator 0x153924198 <line:54:4, col:11> '<dependent type>' contains-errors prefix '++' cannot overflow     |   |     `-RecoveryExpr 0x153924170 <col:6, col:11> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x153924138 <col:6> 'struct mem_cgroup_threshold_ary *' lvalue Var 0x1530277b8 'new' 'struct mem_cgroup_threshold_ary *'     |   `-UnaryOperator 0x153924208 <line:56:3, col:4> 'int' postfix '++'     |     `-DeclRefExpr 0x1539241e8 <col:3> 'int' lvalue Var 0x153027b08 'j' 'int'     |-LabelStmt 0x153924368 <line:59:1, line:61:34> 'swap_buffers'     | `-BinaryOperator 0x153924348 <col:2, col:34> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x1539242c0 <col:2, col:14> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x153924288 <col:2> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     |   `-RecoveryExpr 0x153924320 <col:22, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1539242e8 <col:22> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     |-CallExpr 0x153924508 <line:62:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153924468 <col:2> 'int ()' Function 0x1539243b0 'rcu_assign_pointer' 'int ()'     | |-RecoveryExpr 0x1539244c0 <col:21, col:33> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153924488 <col:21> 'struct mem_cgroup_thresholds *' lvalue Var 0x1530275b8 'thresholds' 'struct mem_cgroup_thresholds *'     | `-DeclRefExpr 0x1539244e8 <col:42> 'struct mem_cgroup_threshold_ary *' lvalue Var 0x1530277b8 'new' 'struct mem_cgroup_threshold_ary *'     |-CallExpr 0x1539246f0 <line:65:2, col:18> 'int'     | `-ImplicitCastExpr 0x1539246d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1539246b8 <col:2> 'int ()' Function 0x153924600 'synchronize_rcu' 'int ()'     `-CallExpr 0x153924888 <line:67:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x1539247f0 <col:2> 'int ()' Function 0x153924738 'mutex_unlock' 'int ()'       `-UnaryOperator 0x153924870 <col:15, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x153924848 <col:16, col:23> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x153924810 <col:16> 'struct mem_cgroup *' lvalue Var 0x1530271a8 'memcg' 'struct mem_cgroup *' ","20971":"`-FunctionDecl 0x147927d18  line:1:1 invalid handle_get_x11_display_name 'int (int *, int *, int *)'   |-ParmVarDecl 0x147927b28 <col:30, col:53> col:53 invalid skeleton 'int *'   |-ParmVarDecl 0x147927ba8 <line:2:30, col:53> col:53 invalid invocation 'int *'   |-ParmVarDecl 0x147927c28 <line:3:30, col:53> col:53 invalid self 'int *'   `-CompoundStmt 0x1479414b0 <line:4:1, line:13:1>     |-DeclStmt 0x147927e58 <line:5:9, col:19>     | `-VarDecl 0x147927df0 <col:9, col:15> col:15 used name 'char *'     |-CallExpr 0x1479280e8 <line:7:9, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147927fd0 <col:9> 'int ()' Function 0x147927f18 'gdm_display_get_x11_display_name' 'int ()'     | |-RecoveryExpr 0x147927ff0 <col:43> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x147928060 <col:49, col:50> 'char **' prefix '&' cannot overflow     | | `-DeclRefExpr 0x147928010 <col:50> 'char *' lvalue Var 0x147927df0 'name' 'char *'     | `-RecoveryExpr 0x1479280c8 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x147941280 <line:9:9, col:83> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147941200 <col:9> 'int ()' Function 0x147928148 'gdm_dbus_display_complete_get_x11_display_name' 'int ()'     | |-RecoveryExpr 0x147941220 <col:57> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x147941240 <col:67> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x147941260 <col:79> 'char *' lvalue Var 0x147927df0 'name' 'char *'     |-CallExpr 0x147941428 <line:11:9, col:21> 'int'     | |-ImplicitCastExpr 0x147941410 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x147941398 <col:9> 'int ()' Function 0x1479412e0 'g_free' 'int ()'     | `-ImplicitCastExpr 0x147941450 <col:17> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x1479413b8 <col:17> 'char *' lvalue Var 0x147927df0 'name' 'char *'     `-ReturnStmt 0x1479414a0 <line:12:9, col:16>       `-RecoveryExpr 0x147941480 <col:16> '<dependent type>' contains-errors lvalue ","20437":"`-FunctionDecl 0x14d940b40  line:2:13 kvm_mmu_notifier_invalidate_range_end 'void (struct mmu_notifier *, const struct mmu_notifier_range *)' static   |-ParmVarDecl 0x14d928648 <col:51, col:72> col:72 used mn 'struct mmu_notifier *'   |-ParmVarDecl 0x14d940a28 <line:3:6, col:39> col:39 used range 'const struct mmu_notifier_range *'   `-CompoundStmt 0x14d946f38 <line:4:1, line:29:38>     |-DeclStmt 0x14d941038 <line:5:2, col:43>     | |-RecordDecl 0x14d940c40 <col:2, col:9> col:9 struct kvm     | `-VarDecl 0x14d940da8 <col:2, col:42> col:14 used kvm 'struct kvm *' cinit     |   `-ImplicitCastExpr 0x14d941008 <col:20, col:42> 'struct kvm *' <IntegralToPointer>     |     `-CallExpr 0x14d940fc8 <col:20, col:42> 'int'     |       |-ImplicitCastExpr 0x14d940fb0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14d940f40 <col:20> 'int ()' Function 0x14d940e88 'mmu_notifier_to_kvm' 'int ()'     |       `-ImplicitCastExpr 0x14d940ff0 <col:40> 'struct mmu_notifier *' <LValueToRValue>     |         `-DeclRefExpr 0x14d940f60 <col:40> 'struct mmu_notifier *' lvalue ParmVar 0x14d928648 'mn' 'struct mmu_notifier *'     |-DeclStmt 0x14d941578 <line:6:2, line:15:3>     | |-RecordDecl 0x14d941050 <line:6:8, col:15> col:15 struct kvm_hva_range     | `-VarDecl 0x14d941148 <col:2, col:29> col:29 invalid hva_range 'const struct kvm_hva_range'     |-CallExpr 0x14d9416e8 <line:18:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d941670 <col:2> 'int ()' Function 0x14d9415b8 '__kvm_handle_hva_range' 'int ()'     | |-DeclRefExpr 0x14d941690 <col:25> 'struct kvm *' lvalue Var 0x14d940da8 'kvm' 'struct kvm *'     | `-UnaryOperator 0x14d9416d0 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14d9416b0 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d941890 <line:21:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d9417f8 <col:2> 'int ()' Function 0x14d941740 'spin_lock' 'int ()'     | `-UnaryOperator 0x14d941878 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14d941850 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14d941818 <col:13> 'struct kvm *' lvalue Var 0x14d940da8 'kvm' 'struct kvm *'     |-CallExpr 0x14d946b50 <line:23:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d946ab8 <col:2> 'int ()' Function 0x14d946a00 'spin_unlock' 'int ()'     | `-UnaryOperator 0x14d946b38 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14d946b10 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14d946ad8 <col:15> 'struct kvm *' lvalue Var 0x14d940da8 'kvm' 'struct kvm *'     |-IfStmt 0x14d946d50 <line:26:2, line:27:51>     | |-RecoveryExpr 0x14d946b90 <line:26:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14d946d28 <line:27:3, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d946c90 <col:3> 'int ()' Function 0x14d946bd8 'rcuwait_wake_up' 'int ()'     |   `-UnaryOperator 0x14d946d10 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14d946ce8 <col:20, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14d946cb0 <col:20> 'struct kvm *' lvalue Var 0x14d940da8 'kvm' 'struct kvm *'     `-CallExpr 0x14d946f10 <line:29:2, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d946e50 <col:2> 'int ()' Function 0x14d946d98 'BUG_ON' 'int ()'       `-BinaryOperator 0x14d946ef0 <col:9, col:35> 'int' contains-errors '<'         |-RecoveryExpr 0x14d946ea8 <col:9, col:14> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x14d946e70 <col:9> 'struct kvm *' lvalue Var 0x14d940da8 'kvm' 'struct kvm *'         `-IntegerLiteral 0x14d946ed0 <col:35> 'int' 0 ","20327":"`-FunctionDecl 0x155128f18  line:1:26 invalid WritePOCKETMODImage 'int (const int *, int *, int *)' static   |-ParmVarDecl 0x155128cf0 <col:46, col:63> col:63 invalid image_info 'const int *'   |-ParmVarDecl 0x155128da8 <line:2:3, col:10> col:10 referenced invalid image 'int *'   |-ParmVarDecl 0x155128e28 <col:16, col:31> col:31 invalid exception 'int *'   `-CompoundStmt 0x15680a1f8 <line:3:1, line:87:1>     |-DeclStmt 0x155129058 <line:6:3, line:7:10>     | `-VarDecl 0x155128ff0 <line:6:3, line:7:6> col:6 invalid next 'const int *'     |-BinaryOperator 0x1551291e8 <line:9:3, line:11:6> '<dependent type>' contains-errors ','     | |-BinaryOperator 0x155129178 <line:9:3, line:10:6> '<dependent type>' contains-errors '*'     | | |-RecoveryExpr 0x155129090 <line:9:3> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x155129070 <col:3> 'int *' lvalue ParmVar 0x155128da8 'image' 'int *'     | | `-RecoveryExpr 0x155129158 <line:10:6> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1551291d0 <line:11:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x1551291b8 <col:6> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x155129198 <col:6> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x155129288 <line:16:3, line:17:6>     | `-VarDecl 0x155129220 <line:16:3, line:17:5> col:5 referenced invalid i 'int' register     |-CallExpr 0x155142568 <line:20:3, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155142440 <col:3> 'int ()' Function 0x155129348 'assert' 'int ()'     | `-BinaryOperator 0x155142548 <col:10, col:35> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x155142480 <col:10, col:22> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x155142460 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x155142528 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155142730 <line:22:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155142608 <col:3> 'int ()' Function 0x155129348 'assert' 'int ()'     | `-BinaryOperator 0x155142710 <col:10, col:30> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x155142648 <col:10, col:17> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x155142628 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1551426f0 <col:30> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x155142e98 <line:29:3, col:5> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x155142e50 <col:3> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x155142e30 <col:3> 'int' lvalue Var 0x155129220 'i' 'int'       `-IntegerLiteral 0x155142e78 <col:5> 'int' 0 ","20269":"`-FunctionDecl 0x1471281a8  line:1:1 yystrlen 'int (const char *)'   |-ParmVarDecl 0x1471280d8 <col:11, col:23> col:23 used yystr 'const char *'   `-CompoundStmt 0x147128400 <line:2:1, line:7:1>     `-ReturnStmt 0x1471283f0 <line:6:3, col:10>       `-RecoveryExpr 0x1471283d0 <col:10> '<dependent type>' contains-errors lvalue ","20210":"`-FunctionDecl 0x1469418d8  line:1:10 invalid cli_bcapi_buffer_pipe_read_get 'int *(struct cli_bc_ctx *, int, int)'   |-ParmVarDecl 0x146928668 <col:41, col:60> col:60 used ctx 'struct cli_bc_ctx *'   |-ParmVarDecl 0x1469286e8 <col:66, col:74> col:74 invalid id 'int'   |-ParmVarDecl 0x146928768 <col:78, col:87> col:87 invalid size 'int'   `-CompoundStmt 0x146942420 <line:2:1, line:9:1>     |-DeclStmt 0x146941d78 <line:3:5, col:46>     | |-RecordDecl 0x146941998 <col:5, col:12> col:12 struct bc_buffer     | `-VarDecl 0x146941b08 <col:5, col:45> col:23 used b 'struct bc_buffer *' cinit     |   `-CallExpr 0x146941d30 <col:27, col:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x146941cd0 <col:27> 'int ()' Function 0x146941c18 'get_buffer' 'int ()'     |     |-DeclRefExpr 0x146941cf0 <col:38> 'struct cli_bc_ctx *' lvalue ParmVar 0x146928668 'ctx' 'struct cli_bc_ctx *'     |     `-RecoveryExpr 0x146941d10 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146942068 <line:4:5, line:5:9>     | |-BinaryOperator 0x146942000 <line:4:9, col:68> 'int' contains-errors '||'     | | |-BinaryOperator 0x146941f90 <col:9, col:62> 'int' contains-errors '||'     | | | |-UnaryOperator 0x146941dc8 <col:9, col:10> 'int' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x146941db0 <col:10> 'struct bc_buffer *' contains-errors <LValueToRValue>     | | | |   `-DeclRefExpr 0x146941d90 <col:10> 'struct bc_buffer *' contains-errors lvalue Var 0x146941b08 'b' 'struct bc_buffer *'     | | | `-BinaryOperator 0x146941f70 <col:15, col:62> 'int' contains-errors '>'     | | |   |-RecoveryExpr 0x146941de0 <col:15> '<dependent type>' contains-errors lvalue     | | |   `-CallExpr 0x146941f40 <col:22, col:62> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x146941ee0 <col:22> 'int ()' Function 0x146941e28 'cli_bcapi_buffer_pipe_read_avail' 'int ()'     | | |     |-DeclRefExpr 0x146941f00 <col:55> 'struct cli_bc_ctx *' lvalue ParmVar 0x146928668 'ctx' 'struct cli_bc_ctx *'     | | |     `-RecoveryExpr 0x146941f20 <col:60> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x146941fe8 <col:67, col:68> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x146941fd0 <col:68> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x146941fb0 <col:68> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x146942058 <line:5:2, col:9>     |   `-RecoveryExpr 0x146942038 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1469421d8 <line:6:5, line:7:22>     | |-RecoveryExpr 0x1469420c0 <line:6:9, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x146942088 <col:9> 'struct bc_buffer *' contains-errors lvalue Var 0x146941b08 'b' 'struct bc_buffer *'     | `-ReturnStmt 0x1469421c8 <line:7:2, col:22>     |   `-BinaryOperator 0x1469421a8 <col:9, col:22> '<dependent type>' contains-errors '+'     |     |-RecoveryExpr 0x146942120 <col:9, col:12> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1469420e8 <col:9> 'struct bc_buffer *' contains-errors lvalue Var 0x146941b08 'b' 'struct bc_buffer *'     |     `-RecoveryExpr 0x146942180 <col:19, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x146942148 <col:19> 'struct bc_buffer *' contains-errors lvalue Var 0x146941b08 'b' 'struct bc_buffer *'     `-ReturnStmt 0x146942410 <line:8:5, col:57>       `-CallExpr 0x1469423d8 <col:12, col:57> '<dependent type>' contains-errors         |-DeclRefExpr 0x1469422d8 <col:12> 'int ()' Function 0x146942220 'fmap_need_off' 'int ()'         |-RecoveryExpr 0x146942330 <col:26, col:31> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x1469422f8 <col:26> 'struct cli_bc_ctx *' lvalue ParmVar 0x146928668 'ctx' 'struct cli_bc_ctx *'         |-RecoveryExpr 0x146942390 <col:37, col:40> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x146942358 <col:37> 'struct bc_buffer *' contains-errors lvalue Var 0x146941b08 'b' 'struct bc_buffer *'         `-RecoveryExpr 0x1469423b8 <col:53> '<dependent type>' contains-errors lvalue ","20503":"`-FunctionDecl 0x127942dd0  col:42 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x127942ed0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x127942f38 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x127942e78 <<invalid sloc>> Implicit 887 ","20899":"`-FunctionDecl 0x14280ddc8  line:1:7 invalid BN_bn2dec 'char *(const int *)'   |-ParmVarDecl 0x14280dcf0 <col:17, col:31> col:31 invalid a 'const int *'   `-CompoundStmt 0x14282aba8 <line:2:1, line:56:1>     |-DeclStmt 0x14280e058 <line:3:5, col:27>     | |-VarDecl 0x14280de90 <col:5, col:13> col:9 used i 'int' cinit     | | `-IntegerLiteral 0x14280def8 <col:13> 'int' 0     | |-VarDecl 0x14280df30 <col:5, col:16> col:16 used num 'int'     | `-VarDecl 0x14280dfb0 <col:5, col:26> col:21 used ok 'int' cinit     |   `-IntegerLiteral 0x14280e018 <col:26> 'int' 0     |-DeclStmt 0x14280e128 <line:4:5, col:21>     | `-VarDecl 0x14280e088 <col:5, col:17> col:11 used buf 'char *' cinit     |   `-RecoveryExpr 0x14280e108 <col:17> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14280e1c0 <line:5:5, col:12>     | `-VarDecl 0x14280e158 <col:5, col:11> col:11 used p 'char *'     |-BinaryOperator 0x1428278a8 <line:10:5, col:26> 'int' contains-errors '='     | |-DeclRefExpr 0x14280e280 <col:5> 'int' lvalue Var 0x14280de90 'i' 'int'     | `-BinaryOperator 0x142827888 <col:9, col:26> '<dependent type>' contains-errors '*'     |   |-CallExpr 0x142827840 <col:9, col:22> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x142827800 <col:9> 'int ()' Function 0x14280e348 'BN_num_bits' 'int ()'     |   | `-RecoveryExpr 0x142827820 <col:21> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x142827868 <col:26> 'int' 3     |-BinaryOperator 0x142827a98 <line:11:5, col:37> 'int' '='     | |-DeclRefExpr 0x1428278c8 <col:5> 'int' lvalue Var 0x14280df30 'num' 'int'     | `-BinaryOperator 0x142827a78 <col:11, col:37> 'int' '+'     |   |-ParenExpr 0x142827a38 <col:11, col:33> 'int'     |   | `-BinaryOperator 0x142827a18 <col:12, col:32> 'int' '+'     |   |   |-BinaryOperator 0x1428279d8 <col:12, col:25> 'int' '+'     |   |   | |-BinaryOperator 0x142827940 <col:12, col:16> 'int' '\/'     |   |   | | |-ImplicitCastExpr 0x142827928 <col:12> 'int' <LValueToRValue>     |   |   | | | `-DeclRefExpr 0x1428278e8 <col:12> 'int' lvalue Var 0x14280de90 'i' 'int'     |   |   | | `-IntegerLiteral 0x142827908 <col:16> 'int' 10     |   |   | `-BinaryOperator 0x1428279b8 <col:21, col:25> 'int' '\/'     |   |   |   |-ImplicitCastExpr 0x1428279a0 <col:21> 'int' <LValueToRValue>     |   |   |   | `-DeclRefExpr 0x142827960 <col:21> 'int' lvalue Var 0x14280de90 'i' 'int'     |   |   |   `-IntegerLiteral 0x142827980 <col:25> 'int' 1000     |   |   `-IntegerLiteral 0x1428279f8 <col:32> 'int' 1     |   `-IntegerLiteral 0x142827a58 <col:37> 'int' 1     |-BinaryOperator 0x1428281d0 <line:13:5, col:33> 'char *' contains-errors '='     | |-DeclRefExpr 0x142827c68 <col:5> 'char *' contains-errors lvalue Var 0x14280e088 'buf' 'char *'     | `-ImplicitCastExpr 0x142827d90 <col:11, col:33> 'char *' <IntegralToPointer>     |   `-CallExpr 0x142827d68 <col:11, col:33> 'int'     |     |-ImplicitCastExpr 0x142827d50 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x142827c88 <col:11> 'int ()' Function 0x142827ae0 'OPENSSL_malloc' 'int ()'     |     `-BinaryOperator 0x142827d00 <col:26, col:32> 'int' '+'     |       |-ImplicitCastExpr 0x142827ce8 <col:26> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x142827ca8 <col:26> 'int' lvalue Var 0x14280df30 'num' 'int'     |       `-IntegerLiteral 0x142827cc8 <col:32> 'int' 3     |-IfStmt 0x142828510 <line:14:5, line:17:5>     | |-RecoveryExpr 0x142828298 <line:14:9, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x1428284f0 <col:45, line:17:5>     |   |-CallExpr 0x142828458 <line:15:9, col:51> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x142828398 <col:9> 'int ()' Function 0x1428282e0 'BNerr' 'int ()'     |   | |-RecoveryExpr 0x142828418 <col:15> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x142828438 <col:31> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1428284d8 <line:16:9, col:14> 'err' 0x142828488     |-IfStmt 0x1428286b0 <line:18:5, line:19:14>     | |-RecoveryExpr 0x142828678 <line:18:9, col:28> '_Bool' contains-errors     | `-GotoStmt 0x142828698 <line:19:9, col:14> 'err' 0x142828488     |-BinaryOperator 0x142828728 <line:22:5, col:9> 'char *' contains-errors '='     | |-DeclRefExpr 0x1428286d0 <col:5> 'char *' lvalue Var 0x14280e158 'p' 'char *'     | `-ImplicitCastExpr 0x142828710 <col:9> 'char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x1428286f0 <col:9> 'char *' contains-errors lvalue Var 0x14280e088 'buf' 'char *'     |-IfStmt 0x14282a7b8 <line:24:5, line:47:5> has_else     | |-RecoveryExpr 0x142829ed8 <line:24:9, col:21> '_Bool' contains-errors     | |-CompoundStmt 0x14282a078 <col:24, line:27:5>     | | |-BinaryOperator 0x142829f98 <line:25:9, col:18> 'char' '='     | | | |-UnaryOperator 0x142829f50 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow     | | | | `-ParenExpr 0x142829f30 <col:10, col:14> 'char *'     | | | |   `-UnaryOperator 0x142829f18 <col:11, col:12> 'char *' postfix '++'     | | | |     `-DeclRefExpr 0x142829ef8 <col:11> 'char *' lvalue Var 0x14280e158 'p' 'char *'     | | | `-ImplicitCastExpr 0x142829f80 <col:18> 'char' <IntegralCast>     | | |   `-CharacterLiteral 0x142829f68 <col:18> 'int' 48     | | `-BinaryOperator 0x14282a058 <line:26:9, col:18> 'char' '='     | |   |-UnaryOperator 0x14282a010 <col:9, col:14> 'char' lvalue prefix '*' cannot overflow     | |   | `-ParenExpr 0x142829ff0 <col:10, col:14> 'char *'     | |   |   `-UnaryOperator 0x142829fd8 <col:11, col:12> 'char *' postfix '++'     | |   |     `-DeclRefExpr 0x142829fb8 <col:11> 'char *' lvalue Var 0x14280e158 'p' 'char *'     | |   `-ImplicitCastExpr 0x14282a040 <col:18> 'char' <IntegralCast>     | |     `-CharacterLiteral 0x14282a028 <col:18> 'int' 0     | `-CompoundStmt 0x14282a780 <line:27:12, line:47:5>     |   |-IfStmt 0x14282a258 <line:28:9, line:29:20>     |   | |-RecoveryExpr 0x14282a198 <line:28:13, col:29> '_Bool' contains-errors     |   | `-BinaryOperator 0x14282a238 <line:29:13, col:20> 'char' '='     |   |   |-UnaryOperator 0x14282a1f0 <col:13, col:15> 'char' lvalue prefix '*' cannot overflow     |   |   | `-UnaryOperator 0x14282a1d8 <col:14, col:15> 'char *' postfix '++'     |   |   |   `-DeclRefExpr 0x14282a1b8 <col:14> 'char *' lvalue Var 0x14280e158 'p' 'char *'     |   |   `-ImplicitCastExpr 0x14282a220 <col:20> 'char' <IntegralCast>     |   |     `-CharacterLiteral 0x14282a208 <col:20> 'int' 45     |   |-BinaryOperator 0x14282a2b8 <line:31:9, col:13> 'int' '='     |   | |-DeclRefExpr 0x14282a278 <col:9> 'int' lvalue Var 0x14280de90 'i' 'int'     |   | `-IntegerLiteral 0x14282a298 <col:13> 'int' 0     |   |-WhileStmt 0x14282a428 <line:32:9, line:35:9>     |   | |-RecoveryExpr 0x14282a2f8 <line:32:16, col:29> '_Bool' contains-errors     |   | `-CompoundStmt 0x14282a418 <col:32, line:35:9>     |   |-WhileStmt 0x14282a608 <line:39:9, line:40:14>     |   | |-ImplicitCastExpr 0x14282a5b8 <line:39:16, col:17> 'char' <LValueToRValue>     |   | | `-UnaryOperator 0x14282a5a0 <col:16, col:17> 'char' lvalue prefix '*' cannot overflow     |   | |   `-ImplicitCastExpr 0x14282a588 <col:17> 'char *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x14282a568 <col:17> 'char *' lvalue Var 0x14280e158 'p' 'char *'     |   | `-UnaryOperator 0x14282a5f0 <line:40:13, col:14> 'char *' postfix '++'     |   |   `-DeclRefExpr 0x14282a5d0 <col:13> 'char *' lvalue Var 0x14280e158 'p' 'char *'     |   `-WhileStmt 0x14282a760 <line:41:9, line:46:9>     |     |-RecoveryExpr 0x14282a628 <line:41:16, col:22> '_Bool' contains-errors     |     `-CompoundStmt 0x14282a748 <col:31, line:46:9>     |       `-WhileStmt 0x14282a728 <line:44:13, line:45:18>     |         |-ImplicitCastExpr 0x14282a6d8 <line:44:20, col:21> 'char' <LValueToRValue>     |         | `-UnaryOperator 0x14282a6c0 <col:20, col:21> 'char' lvalue prefix '*' cannot overflow     |         |   `-ImplicitCastExpr 0x14282a6a8 <col:21> 'char *' <LValueToRValue>     |         |     `-DeclRefExpr 0x14282a688 <col:21> 'char *' lvalue Var 0x14280e158 'p' 'char *'     |         `-UnaryOperator 0x14282a710 <line:45:17, col:18> 'char *' postfix '++'     |           `-DeclRefExpr 0x14282a6f0 <col:17> 'char *' lvalue Var 0x14280e158 'p' 'char *'     |-BinaryOperator 0x14282a828 <line:48:5, col:10> 'int' '='     | |-DeclRefExpr 0x14282a7e8 <col:5> 'int' lvalue Var 0x14280dfb0 'ok' 'int'     | `-IntegerLiteral 0x14282a808 <col:10> 'int' 1     |-LabelStmt 0x14282a950 <line:49:2, col:5> 'err'     | `-NullStmt 0x14282a948 <col:5>     |-IfStmt 0x14282aaf0 <line:52:5, line:53:16>     | |-ImplicitCastExpr 0x14282aa90 <line:52:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14282aa70 <col:9> 'int' lvalue Var 0x14280dfb0 'ok' 'int'     | `-ReturnStmt 0x14282aae0 <line:53:9, col:16>     |   `-ImplicitCastExpr 0x14282aac8 <col:16> 'char *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14282aaa8 <col:16> 'char *' contains-errors lvalue Var 0x14280e088 'buf' 'char *'     `-CallExpr 0x14282ab68 <line:54:5, col:21> 'int' contains-errors       |-ImplicitCastExpr 0x14282ab50 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14282ab10 <col:5> 'int ()' Function 0x14282a870 'OPENSSL_free' 'int ()'       `-ImplicitCastExpr 0x14282ab90 <col:18> 'char *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x14282ab30 <col:18> 'char *' contains-errors lvalue Var 0x14280e088 'buf' 'char *' ","20523":"`-FunctionDecl 0x129128310  line:1:13 referenced invalid recursive_help_go 'void (int *, int, int *)' static   |-ParmVarDecl 0x129128128 <col:31, col:38> col:38 invalid core 'int *'   |-ParmVarDecl 0x1291281a8 <col:44, col:48> col:48 used detail 'int'   |-ParmVarDecl 0x129128228 <col:56, col:72> col:72 invalid desc 'int *'   `-CompoundStmt 0x129142108 <col:78, line:19:1>     |-DeclStmt 0x129128450 <line:2:2, col:7>     | `-VarDecl 0x1291283e8 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x129128720 <line:3:2, line:5:2>     | |-CXXDependentScopeMemberExpr 0x129128488 <line:3:6, col:12> '<dependent type>' contains-errors lvalue ->help_msg     | | `-RecoveryExpr 0x129128468 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129128708 <col:22, line:5:2>     |   `-CallExpr 0x1291286d8 <line:4:3, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x129128630 <col:3> 'int ()' Function 0x129128578 'r_core_cmd_help' 'int ()'     |     |-RecoveryExpr 0x129128650 <col:20> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x129128690 <col:26, col:32> '<dependent type>' contains-errors lvalue ->help_msg     |       `-RecoveryExpr 0x129128670 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129141b88 <line:6:2, line:13:2>     | |-BinaryOperator 0x129128798 <line:6:6, col:16> 'int' '>='     | | |-ImplicitCastExpr 0x129128780 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x129128740 <col:6> 'int' lvalue ParmVar 0x1291281a8 'detail' 'int'     | | `-IntegerLiteral 0x129128760 <col:16> 'int' 1     | `-CompoundStmt 0x129141b68 <col:19, line:13:2>     |   |-IfStmt 0x129141938 <line:7:3, line:9:3>     |   | |-CXXDependentScopeMemberExpr 0x129141800 <line:7:7, col:13> '<dependent type>' contains-errors lvalue ->help_detail     |   | | `-RecoveryExpr 0x1291287b8 <col:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x129141920 <col:26, line:9:3>     |   |   `-CallExpr 0x1291418f0 <line:8:4, col:44> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x129141848 <col:4> 'int ()' Function 0x129128578 'r_core_cmd_help' 'int ()'     |   |     |-RecoveryExpr 0x129141868 <col:21> '<dependent type>' contains-errors lvalue     |   |     `-CXXDependentScopeMemberExpr 0x1291418a8 <col:27, col:33> '<dependent type>' contains-errors lvalue ->help_detail     |   |       `-RecoveryExpr 0x129141888 <col:27> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x129141b48 <line:10:3, line:12:3>     |     |-BinaryOperator 0x129141a38 <line:10:7, col:28> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x1291419b0 <col:7, col:17> 'int' '>='     |     | | |-ImplicitCastExpr 0x129141998 <col:7> 'int' <LValueToRValue>     |     | | | `-DeclRefExpr 0x129141958 <col:7> 'int' lvalue ParmVar 0x1291281a8 'detail' 'int'     |     | | `-IntegerLiteral 0x129141978 <col:17> 'int' 2     |     | `-CXXDependentScopeMemberExpr 0x1291419f0 <col:22, col:28> '<dependent type>' contains-errors lvalue ->help_detail2     |     |   `-RecoveryExpr 0x1291419d0 <col:22> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x129141b30 <col:42, line:12:3>     |       `-CallExpr 0x129141b00 <line:11:4, col:45> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x129141a58 <col:4> 'int ()' Function 0x129128578 'r_core_cmd_help' 'int ()'     |         |-RecoveryExpr 0x129141a78 <col:21> '<dependent type>' contains-errors lvalue     |         `-CXXDependentScopeMemberExpr 0x129141ab8 <col:27, col:33> '<dependent type>' contains-errors lvalue ->help_detail2     |           `-RecoveryExpr 0x129141a98 <col:27> '<dependent type>' contains-errors lvalue     `-ForStmt 0x1291420d0 <line:14:2, line:18:2>       |-BinaryOperator 0x129141be8 <line:14:7, col:11> 'int' '='       | |-DeclRefExpr 0x129141ba8 <col:7> 'int' lvalue Var 0x1291283e8 'i' 'int'       | `-IntegerLiteral 0x129141bc8 <col:11> 'int' 32       |-<<<NULL>>>       |-BinaryOperator 0x129141db8 <col:15, col:42> 'int' contains-errors '<'       | |-DeclRefExpr 0x129141c08 <col:15> 'int' lvalue Var 0x1291283e8 'i' 'int'       | `-CallExpr 0x129141d90 <col:19, col:42> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x129141d08 <col:19> 'int ()' Function 0x129141c50 'R_ARRAY_SIZE' 'int ()'       |   `-CXXDependentScopeMemberExpr 0x129141d48 <col:33, col:39> '<dependent type>' contains-errors lvalue ->sub       |     `-RecoveryExpr 0x129141d28 <col:33> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x129141df8 <col:45, col:46> 'int' postfix '++'       | `-DeclRefExpr 0x129141dd8 <col:45> 'int' lvalue Var 0x1291283e8 'i' 'int'       `-CompoundStmt 0x1291420b8 <col:50, line:18:2>         `-IfStmt 0x129142098 <line:15:3, line:17:3>           |-ArraySubscriptExpr 0x129141ec8 <line:15:7, col:18> '<dependent type>' contains-errors lvalue           | |-ImplicitCastExpr 0x129141e98 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>           | | `-CXXDependentScopeMemberExpr 0x129141e30 <col:7, col:13> '<dependent type>' contains-errors lvalue ->sub           | |   `-RecoveryExpr 0x129141e10 <col:7> '<dependent type>' contains-errors lvalue           | `-ImplicitCastExpr 0x129141eb0 <col:17> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x129141e78 <col:17> 'int' lvalue Var 0x1291283e8 'i' 'int'           `-CompoundStmt 0x129142080 <col:21, line:17:3>             `-CallExpr 0x129142048 <line:16:4, col:49> '<dependent type>' contains-errors               |-RecoveryExpr 0x129141f08 <col:4> '<dependent type>' contains-errors lvalue               | `-DeclRefExpr 0x129141ee8 <col:4> 'void (int *, int, int *)' Function 0x129128310 'recursive_help_go' 'void (int *, int, int *)'               |-RecoveryExpr 0x129141f30 <col:23> '<dependent type>' contains-errors lvalue               |-DeclRefExpr 0x129141f50 <col:29> 'int' lvalue ParmVar 0x1291281a8 'detail' 'int'               `-ArraySubscriptExpr 0x129142028 <col:37, col:48> '<dependent type>' contains-errors lvalue                 |-ImplicitCastExpr 0x129141ff8 <col:37, col:43> '<dependent type>' contains-errors <LValueToRValue>                 | `-CXXDependentScopeMemberExpr 0x129141f90 <col:37, col:43> '<dependent type>' contains-errors lvalue ->sub                 |   `-RecoveryExpr 0x129141f70 <col:37> '<dependent type>' contains-errors lvalue                 `-ImplicitCastExpr 0x129142010 <col:47> 'int' <LValueToRValue>                   `-DeclRefExpr 0x129141fd8 <col:47> 'int' lvalue Var 0x1291283e8 'i' 'int' ","20233":"`-FunctionDecl 0x1289281a0  line:1:13 php_set_default_dir 'void (int)' static   |-ParmVarDecl 0x1289280d8 <col:33, col:37> col:37 used id 'int'   `-CompoundStmt 0x128941ac8 <line:2:1, line:12:1>     |-IfStmt 0x1289286f0 <line:3:2, line:5:2>     | |-BinaryOperator 0x1289284c0 <line:3:6, col:26> 'int' contains-errors '!='     | | |-CallExpr 0x128928498 <col:6, col:22> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1289283c0 <col:6> 'int ()' Function 0x128928308 'DIRG' 'int ()'     | | | `-RecoveryExpr 0x128928478 <col:11> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x128928440 <col:25, col:26> 'int' prefix '-'     | |   `-IntegerLiteral 0x128928420 <col:26> 'int' 1     | `-CompoundStmt 0x1289286d8 <col:29, line:5:2>     |   `-CallExpr 0x1289286b0 <line:4:3, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1289285c0 <col:3> 'int ()' Function 0x128928508 'zend_list_delete' 'int ()'     |     `-CallExpr 0x128928688 <col:20, col:36> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1289285e0 <col:20> 'int ()' Function 0x128928308 'DIRG' 'int ()'     |       `-RecoveryExpr 0x128928668 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1289419a0 <line:7:2, line:9:2>     | |-BinaryOperator 0x128928780 <line:7:6, col:13> 'int' '!='     | | |-ImplicitCastExpr 0x128928768 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x128928710 <col:6> 'int' lvalue ParmVar 0x1289280d8 'id' 'int'     | | `-UnaryOperator 0x128928750 <col:12, col:13> 'int' prefix '-'     | |   `-IntegerLiteral 0x128928730 <col:13> 'int' 1     | `-CompoundStmt 0x128941988 <col:16, line:9:2>     |   `-CallExpr 0x128941948 <line:8:3, col:22> 'int'     |     |-ImplicitCastExpr 0x128941930 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1289418b8 <col:3> 'int ()' Function 0x128941800 'zend_list_addref' 'int ()'     |     `-ImplicitCastExpr 0x128941970 <col:20> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1289418d8 <col:20> 'int' lvalue ParmVar 0x1289280d8 'id' 'int'     `-BinaryOperator 0x128941aa8 <line:11:2, col:22> '<dependent type>' contains-errors '='       |-CallExpr 0x128941a80 <col:2, col:18> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1289419c0 <col:2> 'int ()' Function 0x128928308 'DIRG' 'int ()'       | `-RecoveryExpr 0x128941a60 <col:7> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x128941a20 <col:22> 'int' lvalue ParmVar 0x1289280d8 'id' 'int' ","20539":"`-FunctionDecl 0x12500ddc8  line:1:13 invalid ct_state_to_string 'const char *(int)'   |-ParmVarDecl 0x12500dcf0 <col:32, col:41> col:41 invalid state 'int'   `-CompoundStmt 0x12500e298 <line:2:1, line:19:1>     `-SwitchStmt 0x12500deb0 <line:3:5, line:18:5>       |-ImplicitCastExpr 0x12500de98 <line:3:13> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x12500de78 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12500e250 <col:20, line:18:5>         |-ReturnStmt 0x12500df80 <line:5:9, col:16>         | `-ImplicitCastExpr 0x12500df68 <col:16> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x12500df50 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x12500df30 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x12500dff8 <line:7:9, col:16>         | `-ImplicitCastExpr 0x12500dfe0 <col:16> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x12500dfc8 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x12500dfa8 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x12500e070 <line:9:9, col:16>         | `-ImplicitCastExpr 0x12500e058 <col:16> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x12500e040 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x12500e020 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x12500e0e8 <line:11:9, col:16>         | `-ImplicitCastExpr 0x12500e0d0 <col:16> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x12500e0b8 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x12500e098 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x12500e160 <line:13:9, col:16>         | `-ImplicitCastExpr 0x12500e148 <col:16> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x12500e130 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x12500e110 <col:16> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x12500e1d8 <line:15:9, col:16>         | `-ImplicitCastExpr 0x12500e1c0 <col:16> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x12500e1a8 <col:16> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x12500e188 <col:16> 'char[4]' lvalue \"STR\"         `-DefaultStmt 0x12500e230 <line:16:5, line:17:16>           `-ReturnStmt 0x12500e220 <col:9, col:16>             `-RecoveryExpr 0x12500e200 <col:16> '<dependent type>' contains-errors lvalue ","20556":"`-FunctionDecl 0x1370276e8  line:1:1 invalid glue 'int (int, int)'   |-ParmVarDecl 0x13700e128 <col:6> col:6 cirrus_bitblt_rop_fwd_ 'int'   |-ParmVarDecl 0x13700e0a8 <col:30> col:30 ROP_NAME 'int'   `-CompoundStmt 0x137027fc8 <line:6:1, line:24:1>     |-DeclStmt 0x1370278b8 <line:7:5, col:12>     | |-VarDecl 0x1370277b8 <col:5, col:9> col:9 used x 'int'     | `-VarDecl 0x137027838 <col:5, col:11> col:11 used y 'int'     |-IfStmt 0x1370279b8 <line:11:5, line:13:5>     | |-RecoveryExpr 0x137027970 <line:11:9, col:55> '_Bool' contains-errors     | `-CompoundStmt 0x1370279a0 <col:58, line:13:5>     |   `-ReturnStmt 0x137027990 <line:12:9>     `-ForStmt 0x137027f90 <line:15:5, line:23:5>       |-BinaryOperator 0x137027a18 <line:15:10, col:14> 'int' '='       | |-DeclRefExpr 0x1370279d8 <col:10> 'int' lvalue Var 0x137027838 'y' 'int'       | `-IntegerLiteral 0x1370279f8 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x137027ab0 <col:17, col:21> 'int' contains-errors '<'       | |-DeclRefExpr 0x137027a38 <col:17> 'int' lvalue Var 0x137027838 'y' 'int'       | `-RecoveryExpr 0x137027a90 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x137027af0 <col:32, col:33> 'int' postfix '++'       | `-DeclRefExpr 0x137027ad0 <col:32> 'int' lvalue Var 0x137027838 'y' 'int'       `-CompoundStmt 0x137027f78 <col:37, line:23:5>         `-ForStmt 0x137027f40 <line:16:9, line:20:9>           |-BinaryOperator 0x137027b48 <line:16:14, col:18> 'int' '='           | |-DeclRefExpr 0x137027b08 <col:14> 'int' lvalue Var 0x1370277b8 'x' 'int'           | `-IntegerLiteral 0x137027b28 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x137027be0 <col:21, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x137027b68 <col:21> 'int' lvalue Var 0x1370277b8 'x' 'int'           | `-RecoveryExpr 0x137027bc0 <col:25> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x137027c20 <col:35, col:36> 'int' postfix '++'           | `-DeclRefExpr 0x137027c00 <col:35> 'int' lvalue Var 0x1370277b8 'x' 'int'           `-CompoundStmt 0x137027f28 <col:40, line:20:9>             `-CallExpr 0x137027ef0 <line:17:13, col:36> '<dependent type>' contains-errors               |-DeclRefExpr 0x137027d90 <col:13> 'int ()' Function 0x137027cd8 'ROP_OP' 'int ()'               |-RecoveryExpr 0x137027e60 <col:20> '<dependent type>' contains-errors lvalue               |-RecoveryExpr 0x137027e80 <col:23> '<dependent type>' contains-errors lvalue               `-UnaryOperator 0x137027ed8 <col:32, col:33> '<dependent type>' contains-errors prefix '*' cannot overflow                 `-ImplicitCastExpr 0x137027ec0 <col:33> '<dependent type>' contains-errors <LValueToRValue>                   `-RecoveryExpr 0x137027ea0 <col:33> '<dependent type>' contains-errors lvalue ","20300":"`-FunctionDecl 0x11e80de80  line:1:13 invalid red_stream_set_socket 'void (int *, int)' static   |-ParmVarDecl 0x11e80dd28 <col:35, col:46> col:46 referenced invalid stream 'int *'   |-ParmVarDecl 0x11e80dda8 <col:54, col:58> col:58 used socket 'int'   `-CompoundStmt 0x11f00a598 <line:2:1, line:17:1>     |-BinaryOperator 0x11e80dfe8 <line:3:5, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11e80df80 <col:5, col:13> '<dependent type>' contains-errors lvalue ->socket     | | `-RecoveryExpr 0x11e80df58 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11e80df38 <col:5> 'int *' lvalue ParmVar 0x11e80dd28 'stream' 'int *'     | `-DeclRefExpr 0x11e80dfc8 <col:22> 'int' lvalue ParmVar 0x11e80dda8 'socket' 'int'     |-BinaryOperator 0x11e80e260 <line:5:5, col:64> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11e80e0e0 <col:5, col:25> '<dependent type>' contains-errors lvalue ->llen     | | `-CXXDependentScopeMemberExpr 0x11e80e098 <col:5, col:19> '<dependent type>' contains-errors lvalue ->info     | |   `-CXXDependentScopeMemberExpr 0x11e80e050 <col:5, col:13> '<dependent type>' contains-errors lvalue ->priv     | |     `-RecoveryExpr 0x11e80e028 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11e80e008 <col:5> 'int *' lvalue ParmVar 0x11e80dd28 'stream' 'int *'     | `-UnaryExprOrTypeTraitExpr 0x11e80e240 <col:32, col:64> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x11e80e220 <col:38, col:64> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x11e80e1d8 <col:39, col:59> '<dependent type>' contains-errors lvalue ->laddr     |       `-CXXDependentScopeMemberExpr 0x11e80e190 <col:39, col:53> '<dependent type>' contains-errors lvalue ->info     |         `-CXXDependentScopeMemberExpr 0x11e80e148 <col:39, col:47> '<dependent type>' contains-errors lvalue ->priv     |           `-RecoveryExpr 0x11e80e128 <col:39> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11e827518 <line:6:5, col:64> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11e80e358 <col:5, col:25> '<dependent type>' contains-errors lvalue ->plen     | | `-CXXDependentScopeMemberExpr 0x11e80e310 <col:5, col:19> '<dependent type>' contains-errors lvalue ->info     | |   `-CXXDependentScopeMemberExpr 0x11e80e2c8 <col:5, col:13> '<dependent type>' contains-errors lvalue ->priv     | |     `-RecoveryExpr 0x11e80e2a0 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11e80e280 <col:5> 'int *' lvalue ParmVar 0x11e80dd28 'stream' 'int *'     | `-UnaryExprOrTypeTraitExpr 0x11e8274f8 <col:32, col:64> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x11e8274d8 <col:38, col:64> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x11e827490 <col:39, col:59> '<dependent type>' contains-errors lvalue ->paddr     |       `-CXXDependentScopeMemberExpr 0x11e827448 <col:39, col:53> '<dependent type>' contains-errors lvalue ->info     |         `-CXXDependentScopeMemberExpr 0x11e827400 <col:39, col:47> '<dependent type>' contains-errors lvalue ->priv     |           `-RecoveryExpr 0x11e80e3a0 <col:39> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11e827b10 <line:7:5, col:106> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e827690 <col:5> 'int ()' Function 0x11e8275d8 'getsockname' 'int ()'     | |-CXXDependentScopeMemberExpr 0x11e8276d0 <col:17, col:25> '<dependent type>' contains-errors lvalue ->socket     | | `-RecoveryExpr 0x11e8276b0 <col:17> '<dependent type>' contains-errors lvalue     | |-CStyleCastExpr 0x11e8279d8 <col:33, col:78> 'struct sockaddr *' contains-errors <Dependent>     | | `-ParenExpr 0x11e8279b8 <col:51, col:78> '<dependent type>' contains-errors     | |   `-UnaryOperator 0x11e8278b8 <col:52, col:73> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x11e827870 <col:53, col:73> '<dependent type>' contains-errors lvalue ->laddr     | |       `-CXXDependentScopeMemberExpr 0x11e827828 <col:53, col:67> '<dependent type>' contains-errors lvalue ->info     | |         `-CXXDependentScopeMemberExpr 0x11e8277e0 <col:53, col:61> '<dependent type>' contains-errors lvalue ->priv     | |           `-RecoveryExpr 0x11e8277c0 <col:53> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x11e827af8 <col:81, col:102> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x11e827ab0 <col:82, col:102> '<dependent type>' contains-errors lvalue ->llen     |     `-CXXDependentScopeMemberExpr 0x11e827a68 <col:82, col:96> '<dependent type>' contains-errors lvalue ->info     |       `-CXXDependentScopeMemberExpr 0x11e827a20 <col:82, col:90> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x11e827a00 <col:82> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11e827fc0 <line:8:5, col:106> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e827c28 <col:5> 'int ()' Function 0x11e827b70 'getpeername' 'int ()'     | |-CXXDependentScopeMemberExpr 0x11e827c68 <col:17, col:25> '<dependent type>' contains-errors lvalue ->socket     | | `-RecoveryExpr 0x11e827c48 <col:17> '<dependent type>' contains-errors lvalue     | |-CStyleCastExpr 0x11e827e88 <col:33, col:78> 'struct sockaddr *' contains-errors <Dependent>     | | `-ParenExpr 0x11e827e68 <col:51, col:78> '<dependent type>' contains-errors     | |   `-UnaryOperator 0x11e827da8 <col:52, col:73> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x11e827d60 <col:53, col:73> '<dependent type>' contains-errors lvalue ->paddr     | |       `-CXXDependentScopeMemberExpr 0x11e827d18 <col:53, col:67> '<dependent type>' contains-errors lvalue ->info     | |         `-CXXDependentScopeMemberExpr 0x11e827cd0 <col:53, col:61> '<dependent type>' contains-errors lvalue ->priv     | |           `-RecoveryExpr 0x11e827cb0 <col:53> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x11e827fa8 <col:81, col:102> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x11e827f60 <col:82, col:102> '<dependent type>' contains-errors lvalue ->plen     |     `-CXXDependentScopeMemberExpr 0x11e827f18 <col:82, col:96> '<dependent type>' contains-errors lvalue ->info     |       `-CXXDependentScopeMemberExpr 0x11e827ed0 <col:82, col:90> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x11e827eb0 <col:82> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x11e828180 <line:10:5, col:34> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x11e8280d0 <col:5, col:25> '<dependent type>' contains-errors lvalue ->flags     | | `-CXXDependentScopeMemberExpr 0x11e828088 <col:5, col:19> '<dependent type>' contains-errors lvalue ->info     | |   `-CXXDependentScopeMemberExpr 0x11e828040 <col:5, col:13> '<dependent type>' contains-errors lvalue ->priv     | |     `-RecoveryExpr 0x11e828018 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11e827ff8 <col:5> 'int *' lvalue ParmVar 0x11e80dd28 'stream' 'int *'     | `-RecoveryExpr 0x11e828160 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11f009c20 <line:11:5, col:72> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11e828288 <col:5, col:25> '<dependent type>' contains-errors lvalue ->llen_ext     | | `-CXXDependentScopeMemberExpr 0x11e828240 <col:5, col:19> '<dependent type>' contains-errors lvalue ->info     | |   `-CXXDependentScopeMemberExpr 0x11e8281f8 <col:5, col:13> '<dependent type>' contains-errors lvalue ->priv     | |     `-RecoveryExpr 0x11e8281d0 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11e8281b0 <col:5> 'int *' lvalue ParmVar 0x11e80dd28 'stream' 'int *'     | `-UnaryExprOrTypeTraitExpr 0x11f009c00 <col:36, col:72> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x11e8283c8 <col:42, col:72> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x11e828380 <col:43, col:63> '<dependent type>' contains-errors lvalue ->laddr_ext     |       `-CXXDependentScopeMemberExpr 0x11e828338 <col:43, col:57> '<dependent type>' contains-errors lvalue ->info     |         `-CXXDependentScopeMemberExpr 0x11e8282f0 <col:43, col:51> '<dependent type>' contains-errors lvalue ->priv     |           `-RecoveryExpr 0x11e8282d0 <col:43> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11f009e98 <line:12:5, col:72> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11f009d18 <col:5, col:25> '<dependent type>' contains-errors lvalue ->plen_ext     | | `-CXXDependentScopeMemberExpr 0x11f009cd0 <col:5, col:19> '<dependent type>' contains-errors lvalue ->info     | |   `-CXXDependentScopeMemberExpr 0x11f009c88 <col:5, col:13> '<dependent type>' contains-errors lvalue ->priv     | |     `-RecoveryExpr 0x11f009c60 <col:5> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11f009c40 <col:5> 'int *' lvalue ParmVar 0x11e80dd28 'stream' 'int *'     | `-UnaryExprOrTypeTraitExpr 0x11f009e78 <col:36, col:72> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x11f009e58 <col:42, col:72> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x11f009e10 <col:43, col:63> '<dependent type>' contains-errors lvalue ->paddr_ext     |       `-CXXDependentScopeMemberExpr 0x11f009dc8 <col:43, col:57> '<dependent type>' contains-errors lvalue ->info     |         `-CXXDependentScopeMemberExpr 0x11f009d80 <col:43, col:51> '<dependent type>' contains-errors lvalue ->priv     |           `-RecoveryExpr 0x11f009d60 <col:43> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f00a1f0 <line:13:5, line:14:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f009eb8 <line:13:5> 'int ()' Function 0x11e8275d8 'getsockname' 'int ()'     | |-CXXDependentScopeMemberExpr 0x11f009ef8 <col:17, col:25> '<dependent type>' contains-errors lvalue ->socket     | | `-RecoveryExpr 0x11f009ed8 <col:17> '<dependent type>' contains-errors lvalue     | |-CStyleCastExpr 0x11f00a0b8 <col:33, col:82> 'struct sockaddr *' contains-errors <Dependent>     | | `-ParenExpr 0x11f00a098 <col:51, col:82> '<dependent type>' contains-errors     | |   `-UnaryOperator 0x11f00a038 <col:52, col:73> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x11f009ff0 <col:53, col:73> '<dependent type>' contains-errors lvalue ->laddr_ext     | |       `-CXXDependentScopeMemberExpr 0x11f009fa8 <col:53, col:67> '<dependent type>' contains-errors lvalue ->info     | |         `-CXXDependentScopeMemberExpr 0x11f009f60 <col:53, col:61> '<dependent type>' contains-errors lvalue ->priv     | |           `-RecoveryExpr 0x11f009f40 <col:53> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x11f00a1d8 <line:14:17, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x11f00a190 <col:18, col:38> '<dependent type>' contains-errors lvalue ->llen_ext     |     `-CXXDependentScopeMemberExpr 0x11f00a148 <col:18, col:32> '<dependent type>' contains-errors lvalue ->info     |       `-CXXDependentScopeMemberExpr 0x11f00a100 <col:18, col:26> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x11f00a0e0 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x11f00a560 <line:15:5, line:16:46> '<dependent type>' contains-errors       |-DeclRefExpr 0x11f00a228 <line:15:5> 'int ()' Function 0x11e827b70 'getpeername' 'int ()'       |-CXXDependentScopeMemberExpr 0x11f00a268 <col:17, col:25> '<dependent type>' contains-errors lvalue ->socket       | `-RecoveryExpr 0x11f00a248 <col:17> '<dependent type>' contains-errors lvalue       |-CStyleCastExpr 0x11f00a428 <col:33, col:82> 'struct sockaddr *' contains-errors <Dependent>       | `-ParenExpr 0x11f00a408 <col:51, col:82> '<dependent type>' contains-errors       |   `-UnaryOperator 0x11f00a3a8 <col:52, col:73> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-CXXDependentScopeMemberExpr 0x11f00a360 <col:53, col:73> '<dependent type>' contains-errors lvalue ->paddr_ext       |       `-CXXDependentScopeMemberExpr 0x11f00a318 <col:53, col:67> '<dependent type>' contains-errors lvalue ->info       |         `-CXXDependentScopeMemberExpr 0x11f00a2d0 <col:53, col:61> '<dependent type>' contains-errors lvalue ->priv       |           `-RecoveryExpr 0x11f00a2b0 <col:53> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x11f00a548 <line:16:17, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x11f00a500 <col:18, col:38> '<dependent type>' contains-errors lvalue ->plen_ext           `-CXXDependentScopeMemberExpr 0x11f00a4b8 <col:18, col:32> '<dependent type>' contains-errors lvalue ->info             `-CXXDependentScopeMemberExpr 0x11f00a470 <col:18, col:26> '<dependent type>' contains-errors lvalue ->priv               `-RecoveryExpr 0x11f00a450 <col:18> '<dependent type>' contains-errors lvalue ","20384":"`-FunctionDecl 0x14c00e038  line:1:24 invalid php_mbregex_compile_pattern 'int *(const char *, int, int, int, int *)' static   |-ParmVarDecl 0x14c00dcf0 <col:52, col:64> col:64 used pattern 'const char *'   |-ParmVarDecl 0x14c00dd70 <col:73, col:77> col:77 used patlen 'int'   |-ParmVarDecl 0x14c00ddf0 <col:85, col:100> col:100 invalid options 'int'   |-ParmVarDecl 0x14c00de70 <col:109, col:122> col:122 invalid enc 'int'   |-ParmVarDecl 0x14c00df28 <col:127, col:143> col:143 invalid syntax 'int *'   `-CompoundStmt 0x14c028bc0 <line:2:1, line:23:1>     |-DeclStmt 0x14c00e1a8 <line:3:2, col:18>     | `-VarDecl 0x14c00e120 <col:2, col:17> col:6 used err_code 'int' cinit     |   `-IntegerLiteral 0x14c00e188 <col:17> 'int' 0     |-DeclStmt 0x14c00e260 <line:4:2, col:15>     | `-VarDecl 0x14c00e1d8 <col:2, col:14> col:6 used found 'int' cinit     |   `-IntegerLiteral 0x14c00e240 <col:14> 'int' 0     |-IfStmt 0x14c028b68 <line:10:2, line:20:2> has_else     | |-RecoveryExpr 0x14c028358 <line:10:6, col:93> '_Bool' contains-errors     | |-CompoundStmt 0x14c028ae0 <col:101, line:18:2>     | | `-IfStmt 0x14c0288b0 <line:11:3, line:16:3>     | |   |-RecoveryExpr 0x14c028588 <line:11:7, col:129> '_Bool' contains-errors     | |   `-CompoundStmt 0x14c028898 <col:142, line:16:3>     | |     `-GotoStmt 0x14c028880 <line:15:4, col:9> 'out' 0x14c028830     | `-IfStmt 0x14c028b48 <line:18:9, line:20:2>     |   |-RecoveryExpr 0x14c028b18 <line:18:13, col:22> '_Bool' contains-errors     |   `-CompoundStmt 0x14c028b38 <col:31, line:20:2>     `-LabelStmt 0x14c028ba0 <line:21:1, col:4> 'out'       `-NullStmt 0x14c028b98 <col:4> ","21063":"`-FunctionDecl 0x1209282c0  line:1:13 ahci_irq_set 'void (void *, int, int)' static   |-ParmVarDecl 0x1209280d8 <col:26, col:32> col:32 opaque 'void *'   |-ParmVarDecl 0x120928158 <col:40, col:44> col:44 n 'int'   |-ParmVarDecl 0x1209281d8 <col:47, col:51> col:51 level 'int'   `-CompoundStmt 0x1209283c8 <line:2:1, line:3:1> ","20804":"`-FunctionDecl 0x155128750  line:1:13 drop_futex_key_refs 'void (union futex_key *)' static   |-ParmVarDecl 0x155128648 <col:33, col:50> col:50 used key 'union futex_key *'   `-CompoundStmt 0x155141488 <line:2:1, line:20:1>     |-IfStmt 0x155140d30 <line:3:2, line:7:2>     | |-UnaryOperator 0x155140b08 <line:3:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x155140af0 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x155140aa8 <col:7, col:17> '<dependent type>' contains-errors lvalue .ptr     | |     `-RecoveryExpr 0x155140a80 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x155140a48 <col:7> 'union futex_key *' lvalue ParmVar 0x155128648 'key' 'union futex_key *'     | `-CompoundStmt 0x155140d10 <col:22, line:7:2>     |   |-CallExpr 0x155140cd8 <line:5:3, col:17> 'int'     |   | |-ImplicitCastExpr 0x155140cc0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x155140c50 <col:3> 'int ()' Function 0x155140b98 'WARN_ON_ONCE' 'int ()'     |   | `-IntegerLiteral 0x155140c70 <col:16> 'int' 1     |   `-ReturnStmt 0x155140d00 <line:6:3>     |-IfStmt 0x155140f18 <line:9:2, line:10:3>     | |-UnaryOperator 0x155140ef0 <line:9:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x155140ec8 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x155140e30 <col:7> 'int ()' Function 0x155140d78 'IS_ENABLED' 'int ()'     | |   `-RecoveryExpr 0x155140ea8 <col:18> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x155140f08 <line:10:3>     `-SwitchStmt 0x155141050 <line:12:2, line:19:2>       |-RecoveryExpr 0x155141030 <line:12:10, col:60> 'int' contains-errors       `-CompoundStmt 0x155141458 <col:63, line:19:2>         |-CallExpr 0x155141238 <line:14:3, col:25> '<dependent type>' contains-errors         | |-DeclRefExpr 0x155141170 <col:3> 'int ()' Function 0x1551410b8 'iput' 'int ()'         | `-CXXDependentScopeMemberExpr 0x1551411f0 <col:8, col:20> '<dependent type>' contains-errors lvalue .inode         |   `-RecoveryExpr 0x1551411c8 <col:8, col:13> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x155141190 <col:8> 'union futex_key *' lvalue ParmVar 0x155128648 'key' 'union futex_key *'         |-BreakStmt 0x155141260 <line:15:3>         |-CallExpr 0x155141428 <line:17:3, col:25> '<dependent type>' contains-errors         | |-DeclRefExpr 0x155141360 <col:3> 'int ()' Function 0x1551412a8 'mmdrop' 'int ()'         | `-CXXDependentScopeMemberExpr 0x1551413e0 <col:10, col:23> '<dependent type>' contains-errors lvalue .mm         |   `-RecoveryExpr 0x1551413b8 <col:10, col:15> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x155141380 <col:10> 'union futex_key *' lvalue ParmVar 0x155128648 'key' 'union futex_key *'         `-BreakStmt 0x155141450 <line:18:3> ","20519":"`-FunctionDecl 0x137008200  line:1:22 invalid xfrm_sa_len 'int (struct xfrm_state *)' static inline   |-ParmVarDecl 0x13600e268 <col:34, col:53> col:53 used x 'struct xfrm_state *'   `-CompoundStmt 0x137809088 <line:2:1, line:39:1>     |-RecoveryExpr 0x137008390 <line:3:2, col:13> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x137008370 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x137008350 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1370082e8 <col:13> 'int' 0     `-IfStmt 0x137008bf0 <line:6:2, line:10:2>       |-RecoveryExpr 0x137008788 <line:6:6, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x137008750 <col:6> 'struct xfrm_state *' lvalue ParmVar 0x13600e268 'x' 'struct xfrm_state *'       `-CompoundStmt 0x137008be0 <col:15, line:10:2> ","21116":"`-FunctionDecl 0x13581e910  line:1:13 invalid cmd_me 'void (const char *, int *, int *)' static   |-ParmVarDecl 0x13581e6d8 <col:20, col:32> col:32 used data 'const char *'   |-ParmVarDecl 0x13581e7a8 <col:38, col:54> col:54 invalid server 'int *'   |-ParmVarDecl 0x13581e828 <col:62, col:75> col:75 invalid item 'int *'   `-CompoundStmt 0x134832fa0 <line:2:1, line:16:1>     |-DeclStmt 0x13581ea68 <line:4:2, col:11>     | `-VarDecl 0x13581ea00 <col:2, col:8> col:8 used str 'char *'     |-CallExpr 0x13581ecc0 <line:6:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13581ebe0 <col:2> 'int ()' Function 0x13581eb28 'g_return_if_fail' 'int ()'     | `-BinaryOperator 0x13581eca0 <col:19, col:27> 'int' contains-errors '!='     |   |-DeclRefExpr 0x13581ec00 <col:19> 'const char *' lvalue ParmVar 0x13581e6d8 'data' 'const char *'     |   `-RecoveryExpr 0x13581ec80 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x134832708 <line:9:2, col:19>     | |-BinaryOperator 0x1348326d8 <col:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x134832698 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1348326b8 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1348326f8 <col:19>     |-BinaryOperator 0x134832998 <line:11:2, col:37> 'char *' contains-errors '='     | |-DeclRefExpr 0x134832728 <col:2> 'char *' lvalue Var 0x13581ea00 'str' 'char *'     | `-CallExpr 0x134832960 <col:8, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x134832828 <col:8> 'int ()' Function 0x134832770 'g_strconcat' 'int ()'     |   |-StringLiteral 0x134832890 <col:20> 'char[4]' lvalue \"STR\"     |   |-DeclRefExpr 0x1348328b0 <col:27> 'const char *' lvalue ParmVar 0x13581e6d8 'data' 'const char *'     |   `-RecoveryExpr 0x134832940 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x134832c78 <line:12:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134832a98 <col:2> 'int ()' Function 0x1348329e0 'dcc_ctcp_message' 'int ()'     | |-RecoveryExpr 0x134832ab8 <col:19> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x134832bf0 <col:27, col:32> '<dependent type>' contains-errors lvalue ->nick     | | `-RecoveryExpr 0x134832bd0 <col:27> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x134832c38 <col:38> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x134832c58 <col:43> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x134832b68 <col:50> 'char *' lvalue Var 0x13581ea00 'str' 'char *'     |-CallExpr 0x134832e28 <line:13:2, col:12> 'int'     | |-ImplicitCastExpr 0x134832e10 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x134832da0 <col:2> 'int ()' Function 0x134832ce8 'g_free' 'int ()'     | `-ImplicitCastExpr 0x134832e50 <col:9> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x134832dc0 <col:9> 'char *' lvalue Var 0x13581ea00 'str' 'char *'     `-CallExpr 0x134832f80 <line:15:2, col:14> 'int'       `-ImplicitCastExpr 0x134832f68 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x134832f48 <col:2> 'int ()' Function 0x134832e90 'signal_stop' 'int ()' ","20470":"`-FunctionDecl 0x14480e358  line:1:12 t220_frontend_attach 'int (struct dvb_usb_adapter *)' static   |-ParmVarDecl 0x14480e248 <col:33, col:57> col:57 used d 'struct dvb_usb_adapter *'   `-CompoundStmt 0x14482a450 <line:2:1, line:49:1>     |-IfStmt 0x144826bb8 <line:6:2, line:7:12>     | |-BinaryOperator 0x1448269b0 <line:6:6, col:56> 'int' contains-errors '<'     | | |-CallExpr 0x144826960 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x144826780 <col:6> 'int ()' Function 0x1448266c8 'dvb_usb_generic_rw' 'int ()'     | | | |-RecoveryExpr 0x1448267d8 <col:25, col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1448267a0 <col:25> 'struct dvb_usb_adapter *' lvalue ParmVar 0x14480e248 'd' 'struct dvb_usb_adapter *'     | | | |-RecoveryExpr 0x144826920 <col:33> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x144826818 <col:39> 'int' 3     | | | |-RecoveryExpr 0x144826940 <col:42> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x144826850 <col:48> 'int' 1     | | | `-IntegerLiteral 0x144826870 <col:51> 'int' 0     | | `-IntegerLiteral 0x1448268e0 <col:56> 'int' 0     | `-CallExpr 0x144826b78 <line:7:3, col:12> 'int'     |   |-ImplicitCastExpr 0x144826b60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x144826ab0 <col:3> 'int ()' Function 0x1448269f8 'err' 'int ()'     |   `-ImplicitCastExpr 0x144826ba0 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x144826b10 <col:7> 'char[4]' lvalue \"STR\"     |-IfStmt 0x144826f80 <line:13:2, line:14:12>     | |-BinaryOperator 0x144826ec8 <line:13:6, col:56> 'int' contains-errors '<'     | | |-CallExpr 0x144826e78 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x144826c98 <col:6> 'int ()' Function 0x1448266c8 'dvb_usb_generic_rw' 'int ()'     | | | |-RecoveryExpr 0x144826cf0 <col:25, col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x144826cb8 <col:25> 'struct dvb_usb_adapter *' lvalue ParmVar 0x14480e248 'd' 'struct dvb_usb_adapter *'     | | | |-RecoveryExpr 0x144826e38 <col:33> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x144826d30 <col:39> 'int' 3     | | | |-RecoveryExpr 0x144826e58 <col:42> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x144826d68 <col:48> 'int' 1     | | | `-IntegerLiteral 0x144826d88 <col:51> 'int' 0     | | `-IntegerLiteral 0x144826df8 <col:56> 'int' 0     | `-CallExpr 0x144826f40 <line:14:3, col:12> 'int'     |   |-ImplicitCastExpr 0x144826f28 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x144826ee8 <col:3> 'int ()' Function 0x1448269f8 'err' 'int ()'     |   `-ImplicitCastExpr 0x144826f68 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x144826f08 <col:7> 'char[4]' lvalue \"STR\"     |-IfStmt 0x144827348 <line:20:2, line:21:12>     | |-BinaryOperator 0x144827290 <line:20:6, col:56> 'int' contains-errors '<'     | | |-CallExpr 0x144827240 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x144827060 <col:6> 'int ()' Function 0x1448266c8 'dvb_usb_generic_rw' 'int ()'     | | | |-RecoveryExpr 0x1448270b8 <col:25, col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x144827080 <col:25> 'struct dvb_usb_adapter *' lvalue ParmVar 0x14480e248 'd' 'struct dvb_usb_adapter *'     | | | |-RecoveryExpr 0x144827200 <col:33> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x1448270f8 <col:39> 'int' 3     | | | |-RecoveryExpr 0x144827220 <col:42> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x144827130 <col:48> 'int' 1     | | | `-IntegerLiteral 0x144827150 <col:51> 'int' 0     | | `-IntegerLiteral 0x1448271c0 <col:56> 'int' 0     | `-CallExpr 0x144827308 <line:21:3, col:12> 'int'     |   |-ImplicitCastExpr 0x1448272f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1448272b0 <col:3> 'int ()' Function 0x1448269f8 'err' 'int ()'     |   `-ImplicitCastExpr 0x144827330 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x1448272d0 <col:7> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1448274a0 <line:23:2, col:11> 'int'     | |-ImplicitCastExpr 0x144827488 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144827448 <col:2> 'int ()' Function 0x144827390 'msleep' 'int ()'     | `-IntegerLiteral 0x144827468 <col:9> 'int' 50     |-IfStmt 0x144829960 <line:29:2, line:30:12>     | |-RecoveryExpr 0x1448298a8 <line:29:6, col:56> '_Bool' contains-errors     | `-CallExpr 0x144829920 <line:30:3, col:12> 'int'     |   |-ImplicitCastExpr 0x144829908 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1448298c8 <col:3> 'int ()' Function 0x1448269f8 'err' 'int ()'     |   `-ImplicitCastExpr 0x144829948 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x1448298e8 <col:7> 'char[4]' lvalue \"STR\"     |-IfStmt 0x144829b78 <line:34:2, line:35:12>     | |-RecoveryExpr 0x144829ac0 <line:34:6, col:56> '_Bool' contains-errors     | `-CallExpr 0x144829b38 <line:35:3, col:12> 'int'     |   |-ImplicitCastExpr 0x144829b20 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x144829ae0 <col:3> 'int ()' Function 0x1448269f8 'err' 'int ()'     |   `-ImplicitCastExpr 0x144829b60 <col:7> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x144829b00 <col:7> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14482a398 <line:39:2, line:45:2>     | |-RecoveryExpr 0x144829f58 <line:39:6, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x14482a380 <col:32, line:45:2>     |   `-IfStmt 0x14482a360 <line:40:3, line:44:3>     |     |-RecoveryExpr 0x14482a178 <line:40:7, line:41:41> '_Bool' contains-errors     |     `-CompoundStmt 0x14482a340 <col:44, line:44:3>     |       |-CallExpr 0x14482a2d0 <line:42:4, col:14> 'int'     |       | |-ImplicitCastExpr 0x14482a2b8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x14482a278 <col:4> 'int ()' Function 0x14482a1c0 'info' 'int ()'     |       | `-ImplicitCastExpr 0x14482a2f8 <col:9> 'char *' <ArrayToPointerDecay>     |       |   `-StringLiteral 0x14482a298 <col:9> 'char[4]' lvalue \"STR\"     |       `-ReturnStmt 0x14482a330 <line:43:4, col:11>     |         `-IntegerLiteral 0x14482a310 <col:11> 'int' 0     `-CallExpr 0x14482a410 <line:47:2, col:12> 'int'       |-ImplicitCastExpr 0x14482a3f8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14482a3b8 <col:2> 'int ()' Function 0x14482a1c0 'info' 'int ()'       `-ImplicitCastExpr 0x14482a438 <col:7> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x14482a3d8 <col:7> 'char[4]' lvalue \"STR\" ","20200":"`-FunctionDecl 0x154940b40  line:1:13 freeary 'void (struct ipc_namespace *, struct kern_ipc_perm *)' static   |-ParmVarDecl 0x154928648 <col:21, col:43> col:43 used ns 'struct ipc_namespace *'   |-ParmVarDecl 0x154940a28 <col:47, col:69> col:69 used ipcp 'struct kern_ipc_perm *'   `-CompoundStmt 0x156008be0 <line:2:1, line:42:1>     |-DeclStmt 0x154940ec0 <line:3:2, col:26>     | |-RecordDecl 0x154940c40 <col:2, col:9> col:9 struct sem_undo     | |-VarDecl 0x154940da8 <col:2, col:19> col:19 used un 'struct sem_undo *'     | `-VarDecl 0x154940e38 <col:2, col:24> col:24 used tu 'struct sem_undo *'     |-DeclStmt 0x154941160 <line:4:2, col:26>     | |-RecordDecl 0x154940ed8 <col:2, col:9> col:9 struct sem_queue     | |-VarDecl 0x154941048 <col:2, col:20> col:20 used q 'struct sem_queue *'     | `-VarDecl 0x1549410d8 <col:2, col:24> col:24 used tq 'struct sem_queue *'     |-DeclStmt 0x1549414f0 <line:5:2, col:72>     | |-RecordDecl 0x154941178 <col:2, col:9> col:9 struct sem_array     | `-VarDecl 0x1549412e8 <col:2, col:20> col:20 used sma 'struct sem_array *'     |-DeclStmt 0x154941688 <line:6:2, col:24>     | |-RecordDecl 0x154941508 <col:2, col:9> col:9 struct list_head     | `-VarDecl 0x154941608 <col:2, col:19> col:19 invalid tasks 'struct list_head'     |-DeclStmt 0x154941720 <line:7:2, col:7>     | `-VarDecl 0x1549416b8 <col:2, col:6> col:6 i 'int'     |-CallExpr 0x1549418f8 <line:10:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154941818 <col:2> 'int ()' Function 0x154941760 'assert_spin_locked' 'int ()'     | `-UnaryOperator 0x1549418e0 <col:21, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x154941898 <col:22, col:36> '<dependent type>' contains-errors lvalue .lock     |     `-RecoveryExpr 0x154941870 <col:22, col:27> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x154941838 <col:22> 'struct sem_array *' lvalue Var 0x1549412e8 'sma' 'struct sem_array *'     |-CallExpr 0x154942f50 <line:11:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154942e00 <col:2> 'int ()' Function 0x154941948 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x154942e20 <col:27> 'struct sem_undo *' lvalue Var 0x154940da8 'un' 'struct sem_undo *'     | |-DeclRefExpr 0x154942e40 <col:31> 'struct sem_undo *' lvalue Var 0x154940e38 'tu' 'struct sem_undo *'     | |-UnaryOperator 0x154942ec0 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x154942e98 <col:36, col:41> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x154942e60 <col:36> 'struct sem_array *' lvalue Var 0x1549412e8 'sma' 'struct sem_array *'     | `-RecoveryExpr 0x154942f30 <col:50> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x154943878 <col:59, line:18:2>     | |-CallExpr 0x154943108 <line:12:3, col:24> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x154943070 <col:3> 'int ()' Function 0x154942fb8 'list_del' 'int ()'     | | `-UnaryOperator 0x1549430f0 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1549430c8 <col:13, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x154943090 <col:13> 'struct sem_undo *' lvalue Var 0x154940da8 'un' 'struct sem_undo *'     | |-CallExpr 0x1549432f0 <line:13:3, col:27> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x154943210 <col:3> 'int ()' Function 0x154943158 'spin_lock' 'int ()'     | | `-UnaryOperator 0x1549432d8 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x154943290 <col:14, col:23> '<dependent type>' contains-errors lvalue ->lock     | |     `-RecoveryExpr 0x154943268 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x154943230 <col:14> 'struct sem_undo *' lvalue Var 0x154940da8 'un' 'struct sem_undo *'     | |-BinaryOperator 0x1549433b0 <line:14:3, col:16> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x154943350 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x154943318 <col:3> 'struct sem_undo *' lvalue Var 0x154940da8 'un' 'struct sem_undo *'     | | `-UnaryOperator 0x154943398 <col:15, col:16> 'int' prefix '-'     | |   `-IntegerLiteral 0x154943378 <col:16> 'int' 1     | |-CallExpr 0x154943548 <line:15:3, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1549434b0 <col:3> 'int ()' Function 0x1549433f8 'list_del_rcu' 'int ()'     | | `-UnaryOperator 0x154943530 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x154943508 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1549434d0 <col:17> 'struct sem_undo *' lvalue Var 0x154940da8 'un' 'struct sem_undo *'     | `-CallExpr 0x154943730 <line:16:3, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154943650 <col:3> 'int ()' Function 0x154943598 'spin_unlock' 'int ()'     |   `-UnaryOperator 0x154943718 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x1549436d0 <col:16, col:25> '<dependent type>' contains-errors lvalue ->lock     |       `-RecoveryExpr 0x1549436a8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x154943670 <col:16> 'struct sem_undo *' lvalue Var 0x154940da8 'un' 'struct sem_undo *'     |-CallExpr 0x1549439e8 <line:21:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154943990 <col:2> 'int ()' Function 0x1549438d8 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x1549439d0 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1549439b0 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x154943c58 <line:36:2, col:16> 'int'     | |-ImplicitCastExpr 0x154943c40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x154943bc8 <col:2> 'int ()' Function 0x154943b10 'sem_unlock' 'int ()'     | `-ImplicitCastExpr 0x154943c80 <col:13> 'struct sem_array *' <LValueToRValue>     |   `-DeclRefExpr 0x154943be8 <col:13> 'struct sem_array *' lvalue Var 0x1549412e8 'sma' 'struct sem_array *'     |-CallExpr 0x154943dd0 <line:38:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154943d78 <col:2> 'int ()' Function 0x154943cc0 'wake_up_sem_queue_do' 'int ()'     | `-UnaryOperator 0x154943db8 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x154943d98 <col:24> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x1560088c0 <line:39:2, col:24> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x156008838 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x156008800 <col:2> 'struct ipc_namespace *' lvalue ParmVar 0x154928648 'ns' 'struct ipc_namespace *'     | `-RecoveryExpr 0x156008898 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x156008860 <col:19> 'struct sem_array *' lvalue Var 0x1549412e8 'sma' 'struct sem_array *'     |-CallExpr 0x156008a28 <line:40:2, col:23> 'int'     | |-ImplicitCastExpr 0x156008a10 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1560089d0 <col:2> 'int ()' Function 0x156008918 'security_sem_free' 'int ()'     | `-ImplicitCastExpr 0x156008a50 <col:20> 'struct sem_array *' <LValueToRValue>     |   `-DeclRefExpr 0x1560089f0 <col:20> 'struct sem_array *' lvalue Var 0x1549412e8 'sma' 'struct sem_array *'     `-CallExpr 0x156008ba0 <line:41:2, col:20> 'int'       |-ImplicitCastExpr 0x156008b88 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x156008b48 <col:2> 'int ()' Function 0x156008a90 'ipc_rcu_putref' 'int ()'       `-ImplicitCastExpr 0x156008bc8 <col:17> 'struct sem_array *' <LValueToRValue>         `-DeclRefExpr 0x156008b68 <col:17> 'struct sem_array *' lvalue Var 0x1549412e8 'sma' 'struct sem_array *' ","20527":"`-FunctionDecl 0x13c80de80  line:1:13 invalid do_busid_cmd 'void (int *, int)' static   |-ParmVarDecl 0x13c80dd28 <col:26, col:36> col:36 referenced invalid s 'int *'   |-ParmVarDecl 0x13c80dda8 <col:39, col:47> col:47 invalid busid 'int'   `-CompoundStmt 0x13b07b6f8 <line:2:1, line:40:1>     |-DeclStmt 0x13c80dfb8 <line:5:5, col:12>     | `-VarDecl 0x13c80df50 <col:5, col:9> col:9 used lun 'int'     |-CallExpr 0x13c80e180 <line:9:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c80e140 <col:5> 'int ()' Function 0x13c80e088 'trace_esp_do_busid_cmd' 'int ()'     | `-RecoveryExpr 0x13c80e160 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c80e228 <line:10:5, col:19> 'int' contains-errors '='     | |-DeclRefExpr 0x13c80e1a8 <col:5> 'int' lvalue Var 0x13c80df50 'lun' 'int'     | `-BinaryOperator 0x13c80e208 <col:11, col:19> '<dependent type>' contains-errors '&'     |   |-RecoveryExpr 0x13c80e1c8 <col:11> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13c80e1e8 <col:19> 'int' 7     |-IfStmt 0x13b0421c8 <line:12:5, line:14:5>     | |-BinaryOperator 0x13b042180 <line:12:9, col:24> 'int' contains-errors '||'     | | |-UnaryOperator 0x13b042138 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x13b042120 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x13b042100 <col:10> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x13b042168 <col:20, col:24> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x13b042150 <col:21, col:24> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x13b042068 <col:21, col:24> '<dependent type>' contains-errors lvalue ->current_dev     | |       `-RecoveryExpr 0x13b042048 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b0421b0 <col:37, line:14:5>     |   `-ReturnStmt 0x13b0421a0 <line:13:9>     |-CallExpr 0x13b042410 <line:15:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b0422c8 <col:5> 'int ()' Function 0x13b042210 'esp_fifo_pop_buf' 'int ()'     | |-UnaryOperator 0x13b042350 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x13b042308 <col:23, col:26> '<dependent type>' contains-errors lvalue ->cmdfifo     | |   `-RecoveryExpr 0x13b0422e8 <col:23> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13b0423d0 <col:35> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13b0423f0 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13b042a08 <line:18:5, col:62> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b042740 <col:5, col:8> '<dependent type>' contains-errors lvalue ->current_req     | | `-RecoveryExpr 0x13b042718 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13b0426f8 <col:5> 'int *' lvalue ParmVar 0x13c80dd28 's' 'int *'     | `-CallExpr 0x13b0429c0 <col:22, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b042868 <col:22> 'int ()' Function 0x13b0427b0 'scsi_req_new' 'int ()'     |   |-RecoveryExpr 0x13b042980 <col:35> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x13b0428a0 <col:48> 'int' 0     |   |-DeclRefExpr 0x13b0428c0 <col:51> 'int' lvalue Var 0x13c80df50 'lun' 'int'     |   |-RecoveryExpr 0x13b0429a0 <col:56> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13b0428f8 <col:61> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b042dc8 <line:21:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b042d28 <col:5> 'int ()' Function 0x13b042c70 'fifo8_reset' 'int ()'     | `-UnaryOperator 0x13b042db0 <col:17, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13b042d68 <col:18, col:21> '<dependent type>' contains-errors lvalue ->cmdfifo     |     `-RecoveryExpr 0x13b042d48 <col:18> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13b07b6d8 <line:22:5, line:39:5>       |-RecoveryExpr 0x13b042e10 <line:22:9, col:20> '_Bool' contains-errors       `-CompoundStmt 0x13b07b6a0 <col:23, line:39:5>         |-BinaryOperator 0x13b07ae00 <line:25:9, col:21> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x13b042f98 <col:9, col:12> '<dependent type>' contains-errors lvalue ->ti_cmd         | | `-RecoveryExpr 0x13b042f70 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x13b042f50 <col:9> 'int *' lvalue ParmVar 0x13c80dd28 's' 'int *'         | `-IntegerLiteral 0x13b042fe0 <col:21> 'int' 0         |-CallExpr 0x13b07af60 <line:26:9, col:24> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13b07af00 <col:9> 'int ()' Function 0x13b07ae48 'esp_set_tc' 'int ()'         | |-RecoveryExpr 0x13b07af20 <col:20> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13b07af40 <col:23> 'int' 0         |-IfStmt 0x13b07b4d0 <line:27:9, line:36:9> has_else         | |-RecoveryExpr 0x13b07afb0 <line:27:13, col:23> '_Bool' contains-errors         | |-CompoundStmt 0x13b07b0f0 <col:26, line:31:9>         | `-CompoundStmt 0x13b07b4b0 <col:16, line:36:9>         |   |-CallExpr 0x13b07b340 <line:34:13, col:28> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x13b07b300 <col:13> 'int ()' Function 0x13b07b248 'esp_raise_irq' 'int ()'         |   | `-RecoveryExpr 0x13b07b320 <col:27> '<dependent type>' contains-errors lvalue         |   `-CallExpr 0x13b07b488 <line:35:13, col:28> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x13b07b448 <col:13> 'int ()' Function 0x13b07b390 'esp_lower_drq' 'int ()'         |     `-RecoveryExpr 0x13b07b468 <col:27> '<dependent type>' contains-errors lvalue         |-CallExpr 0x13b07b668 <line:37:9, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13b07b5e0 <col:9> 'int ()' Function 0x13b07b528 'scsi_req_continue' 'int ()'         | `-CXXDependentScopeMemberExpr 0x13b07b620 <col:27, col:30> '<dependent type>' contains-errors lvalue ->current_req         |   `-RecoveryExpr 0x13b07b600 <col:27> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x13b07b690 <line:38:9> ","21038":"`-FunctionDecl 0x122123f78  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x122124078 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x122124020 <<invalid sloc>> Implicit 873 ","20324":"`-FunctionDecl 0x13800de88  line:1:1 invalid p11_rpc_message_write_version 'int (int *, int *)'   |-ParmVarDecl 0x13800dd28 <col:32, col:49> col:49 invalid msg 'int *'   |-ParmVarDecl 0x13800dda8 <line:2:32, col:44> col:44 invalid version 'int *'   `-CompoundStmt 0x138027b90 <line:3:1, line:15:1>     |-CallExpr 0x13800e180 <line:4:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e0a0 <col:2> 'int ()' Function 0x13800dfe8 'assert' 'int ()'     | `-BinaryOperator 0x13800e160 <col:10, col:17> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13800e0c0 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13800e140 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13800e2d0 <line:5:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e1a8 <col:2> 'int ()' Function 0x13800dfe8 'assert' 'int ()'     | `-BinaryOperator 0x13800e2b0 <col:10, col:25> 'int' contains-errors '!='     |   |-CXXDependentScopeMemberExpr 0x13800e1e8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->output     |   | `-RecoveryExpr 0x13800e1c8 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13800e290 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13800e3d8 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e2f8 <col:2> 'int ()' Function 0x13800dfe8 'assert' 'int ()'     | `-BinaryOperator 0x13800e3b8 <col:10, col:21> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13800e318 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13800e398 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138027690 <line:9:2, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138027400 <col:2> 'int ()' Function 0x13800dfe8 'assert' 'int ()'     | `-BinaryOperator 0x138027670 <col:10, col:68> 'int' contains-errors '||'     |   |-UnaryOperator 0x1380274a0 <col:10, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-ImplicitCastExpr 0x138027488 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-CXXDependentScopeMemberExpr 0x138027440 <col:11, col:16> '<dependent type>' contains-errors lvalue ->signature     |   |     `-RecoveryExpr 0x138027420 <col:11> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x138027640 <col:29, col:68> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x138027598 <col:29> 'int ()' Function 0x1380274e0 'p11_rpc_message_verify_part' 'int ()'     |     |-RecoveryExpr 0x1380275b8 <col:58> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x138027620 <col:63> 'char[4]' lvalue \"STR\"     |-CallExpr 0x138027888 <line:11:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138027798 <col:2> 'int ()' Function 0x1380276e0 'p11_rpc_buffer_add_byte' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1380277d8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->output     | | `-RecoveryExpr 0x1380277b8 <col:27> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x138027840 <col:40, col:49> '<dependent type>' contains-errors lvalue ->major     |   `-RecoveryExpr 0x138027820 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1380279a8 <line:12:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1380278b8 <col:2> 'int ()' Function 0x1380276e0 'p11_rpc_buffer_add_byte' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1380278f8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->output     | | `-RecoveryExpr 0x1380278d8 <col:27> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x138027960 <col:40, col:49> '<dependent type>' contains-errors lvalue ->minor     |   `-RecoveryExpr 0x138027940 <col:40> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x138027b80 <line:14:2, col:40>       `-UnaryOperator 0x138027b68 <col:9, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow         `-CallExpr 0x138027b40 <col:10, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x138027ab8 <col:10> 'int ()' Function 0x138027a00 'p11_buffer_failed' 'int ()'           `-CXXDependentScopeMemberExpr 0x138027af8 <col:29, col:34> '<dependent type>' contains-errors lvalue ->output             `-RecoveryExpr 0x138027ad8 <col:29> '<dependent type>' contains-errors lvalue ","20745":"`-FunctionDecl 0x139029f10  col:3 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x139029fb8 <<invalid sloc>> Implicit 867 ","20387":"`-FunctionDecl 0x144128758  line:1:12 snd_timer_start_slave 'int (struct snd_timer_instance *)' static   |-ParmVarDecl 0x144128648 <col:34, col:61> col:61 used timeri 'struct snd_timer_instance *'   `-CompoundStmt 0x144141310 <line:2:1, line:12:1>     |-DeclStmt 0x144140ad0 <line:3:2, col:21>     | `-VarDecl 0x144140a68 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x144140ce8 <line:5:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144140c10 <col:2> 'int ()' Function 0x144140b58 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x144140cd0 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x144140cb0 <col:21> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x144140c60 <col:40> 'unsigned long' lvalue Var 0x144140a68 'flags' 'unsigned long'     |-CompoundAssignOperator 0x144140de0 <line:6:2, col:19> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x144140d50 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x144140d18 <col:2> 'struct snd_timer_instance *' lvalue ParmVar 0x144128648 'timeri' 'struct snd_timer_instance *'     | `-RecoveryExpr 0x144140dc0 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1441410d8 <line:7:2, line:9:44>     | |-RecoveryExpr 0x144140e48 <line:7:6, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x144140e10 <col:6> 'struct snd_timer_instance *' lvalue ParmVar 0x144128648 'timeri' 'struct snd_timer_instance *'     | `-CallExpr 0x1441410a8 <line:8:3, line:9:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144140f50 <line:8:3> 'int ()' Function 0x144140e98 'list_add_tail' 'int ()'     |   |-UnaryOperator 0x144140fd0 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x144140fa8 <col:18, col:26> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x144140f70 <col:18> 'struct snd_timer_instance *' lvalue ParmVar 0x144128648 'timeri' 'struct snd_timer_instance *'     |   `-UnaryOperator 0x144141090 <line:9:10, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x144141048 <col:11, col:27> '<dependent type>' contains-errors lvalue ->slave_active_head     |       `-RecoveryExpr 0x144141020 <col:11, col:19> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x144140fe8 <col:11> 'struct snd_timer_instance *' lvalue ParmVar 0x144128648 'timeri' 'struct snd_timer_instance *'     |-CallExpr 0x1441412b0 <line:10:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1441411d8 <col:2> 'int ()' Function 0x144141120 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x144141298 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x144141278 <col:26> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x144141228 <col:45> 'unsigned long' lvalue Var 0x144140a68 'flags' 'unsigned long'     `-ReturnStmt 0x144141300 <line:11:2, col:9>       `-IntegerLiteral 0x1441412e0 <col:9> 'int' 1 ","20332":"`-FunctionDecl 0x13900ddc8  line:1:1 invalid filter_result_proceed 'int (int)'   |-ParmVarDecl 0x13900dcf0 <col:23, col:32> col:32 invalid reqid 'int'   `-CompoundStmt 0x139027c78 <line:2:1, line:7:1>     |-CallExpr 0x13900e120 <line:3:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13900dfd0 <col:2> 'int ()' Function 0x13900df18 'm_create' 'int ()'     | |-RecoveryExpr 0x13900e0e0 <col:11> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13900e100 <col:19> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x13900e020 <col:46> 'int' 0     | |-IntegerLiteral 0x13900e040 <col:49> 'int' 0     | `-UnaryOperator 0x13900e080 <col:52, col:53> 'int' prefix '-'     |   `-IntegerLiteral 0x13900e060 <col:53> 'int' 1     |-CallExpr 0x13900e2f0 <line:4:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13900e248 <col:2> 'int ()' Function 0x13900e190 'm_add_id' 'int ()'     | |-RecoveryExpr 0x13900e2d0 <col:11> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13900e280 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x139027ac0 <line:5:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x139027a00 <col:2> 'int ()' Function 0x13900e348 'm_add_int' 'int ()'     | |-RecoveryExpr 0x139027a80 <col:12> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x139027aa0 <col:20> '<dependent type>' contains-errors lvalue     `-CallExpr 0x139027c50 <line:6:2, col:16> '<dependent type>' contains-errors       |-DeclRefExpr 0x139027bd0 <col:2> 'int ()' Function 0x139027b18 'm_close' 'int ()'       `-RecoveryExpr 0x139027c30 <col:10> '<dependent type>' contains-errors lvalue ","20711":"`-FunctionDecl 0x127128758  line:1:12 update_discovery_filter 'int (struct btd_adapter *)' static   |-ParmVarDecl 0x127128648 <col:36, col:56> col:56 used adapter 'struct btd_adapter *'   `-CompoundStmt 0x127143d98 <line:2:1, line:41:1>     |-DeclStmt 0x127140c38 <line:3:2, col:47>     | |-RecordDecl 0x127140a50 <col:2, col:9> col:9 struct mgmt_cp_start_service_discovery     | `-VarDecl 0x127140bb8 <col:2, col:42> col:42 used sd_cp 'struct mgmt_cp_start_service_discovery *'     |-CallExpr 0x127140e58 <line:7:2, col:8> 'int'     | |-ImplicitCastExpr 0x127140e40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127140d90 <col:2> 'int ()' Function 0x127140cd8 'DBG' 'int ()'     | `-ImplicitCastExpr 0x127140e80 <col:6> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x127140df0 <col:6> 'char[1]' lvalue \"\"     |-IfStmt 0x127141378 <line:9:2, line:13:2>     | |-CallExpr 0x127141070 <line:9:6, col:49> 'int'     | | |-ImplicitCastExpr 0x127141058 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x127140f78 <col:6> 'int ()' Function 0x127140ec0 'discovery_filter_to_mgmt_cp' 'int ()'     | | |-ImplicitCastExpr 0x1271410a0 <col:34> 'struct btd_adapter *' <LValueToRValue>     | | | `-DeclRefExpr 0x127140f98 <col:34> 'struct btd_adapter *' lvalue ParmVar 0x127128648 'adapter' 'struct btd_adapter *'     | | `-UnaryOperator 0x127141040 <col:43, col:44> 'struct mgmt_cp_start_service_discovery **' prefix '&' cannot overflow     | |   `-DeclRefExpr 0x127140fb8 <col:44> 'struct mgmt_cp_start_service_discovery *' lvalue Var 0x127140bb8 'sd_cp' 'struct mgmt_cp_start_service_discovery *'     | `-CompoundStmt 0x127141358 <col:52, line:13:2>     |   |-CallExpr 0x127141280 <line:10:3, line:11:10> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127141198 <line:10:3> 'int ()' Function 0x1271410e0 'btd_error' 'int ()'     |   | |-RecoveryExpr 0x1271411f0 <col:13, col:22> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1271411b8 <col:13> 'struct btd_adapter *' lvalue ParmVar 0x127128648 'adapter' 'struct btd_adapter *'     |   | `-StringLiteral 0x127141260 <line:11:5> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x127141348 <line:12:3, col:11>     |     `-UnaryOperator 0x127141330 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x127141318 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1271412f8 <col:11> '<dependent type>' contains-errors lvalue     |-ForStmt 0x1271432f8 <line:15:2, line:23:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-RecoveryExpr 0x127141448 <line:15:36> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x127141648 <col:39, col:57> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x1271415e0 <col:39> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x127141620 <col:43, col:57> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x127141560 <col:43> 'int ()' Function 0x1271414a8 'g_slist_next' 'int ()'     | |   `-RecoveryExpr 0x127141600 <col:56> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1271432d0 <col:60, line:23:2>     |   |-DeclStmt 0x127141920 <line:16:3, col:44>     |   | |-RecordDecl 0x127141668 <col:3, col:10> col:10 struct discovery_client     |   | `-VarDecl 0x1271417d8 <col:3, col:40> col:28 used client 'struct discovery_client *' cinit     |   |   `-CXXDependentScopeMemberExpr 0x1271418c0 <col:37, col:40> '<dependent type>' contains-errors lvalue ->data     |   |     `-RecoveryExpr 0x1271418a0 <col:37> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1271419d0 <line:18:3, line:19:4>     |   | |-UnaryOperator 0x1271419b0 <line:18:7, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x127141998 <col:8, col:16> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x127141970 <col:8, col:16> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x127141938 <col:8> 'struct discovery_client *' contains-errors lvalue Var 0x1271417d8 'client' 'struct discovery_client *'     |   | `-ContinueStmt 0x1271419c8 <line:19:4>     |   `-IfStmt 0x1271432b0 <line:21:3, line:22:4>     |     |-CXXDependentScopeMemberExpr 0x127143260 <line:21:7, col:33> '<dependent type>' contains-errors lvalue ->discoverable     |     | `-RecoveryExpr 0x127143238 <col:7, col:15> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x127143200 <col:7> 'struct discovery_client *' contains-errors lvalue Var 0x1271417d8 'client' 'struct discovery_client *'     |     `-BreakStmt 0x1271432a8 <line:22:4>     |-CallExpr 0x127143588 <line:25:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127143410 <col:2> 'int ()' Function 0x127143358 'set_discovery_discoverable' 'int ()'     | |-DeclRefExpr 0x127143430 <col:29> 'struct btd_adapter *' lvalue ParmVar 0x127128648 'adapter' 'struct btd_adapter *'     | `-ConditionalOperator 0x127143558 <col:38, col:49> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x1271434f8 <col:38> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x127143518 <col:42> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x127143538 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127143a90 <line:28:2, line:33:2>     | |-BinaryOperator 0x127143808 <line:28:6, line:29:30> 'int' contains-errors '&&'     | | |-CallExpr 0x127143738 <line:28:6, col:60> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x127143698 <col:6> 'int ()' Function 0x1271435e0 'filters_equal' 'int ()'     | | | |-RecoveryExpr 0x1271436f0 <col:20, col:29> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1271436b8 <col:20> 'struct btd_adapter *' lvalue ParmVar 0x127128648 'adapter' 'struct btd_adapter *'     | | | `-DeclRefExpr 0x127143718 <col:55> 'struct mgmt_cp_start_service_discovery *' lvalue Var 0x127140bb8 'sd_cp' 'struct mgmt_cp_start_service_discovery *'     | | `-BinaryOperator 0x1271437e8 <line:29:6, col:30> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x1271437a0 <col:6, col:15> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x127143768 <col:6> 'struct btd_adapter *' lvalue ParmVar 0x127128648 'adapter' 'struct btd_adapter *'     | |   `-IntegerLiteral 0x1271437c8 <col:30> 'int' 0     | `-CompoundStmt 0x127143a68 <col:33, line:33:2>     |   |-CallExpr 0x127143880 <line:30:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x127143868 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x127143828 <col:3> 'int ()' Function 0x127140cd8 'DBG' 'int ()'     |   | `-ImplicitCastExpr 0x1271438a8 <col:7> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x127143848 <col:7> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x1271439f8 <line:31:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x1271439e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1271439a0 <col:3> 'int ()' Function 0x1271438e8 'g_free' 'int ()'     |   | `-ImplicitCastExpr 0x127143a20 <col:10> 'struct mgmt_cp_start_service_discovery *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1271439c0 <col:10> 'struct mgmt_cp_start_service_discovery *' lvalue Var 0x127140bb8 'sd_cp' 'struct mgmt_cp_start_service_discovery *'     |   `-ReturnStmt 0x127143a58 <line:32:3, col:10>     |     `-IntegerLiteral 0x127143a38 <col:10> 'int' 0     |-CallExpr 0x127143b30 <line:35:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127143ab0 <col:2> 'int ()' Function 0x1271438e8 'g_free' 'int ()'     | `-RecoveryExpr 0x127143b08 <col:9, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x127143ad0 <col:9> 'struct btd_adapter *' lvalue ParmVar 0x127128648 'adapter' 'struct btd_adapter *'     |-BinaryOperator 0x127143bd8 <line:36:2, col:38> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127143b90 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127143b58 <col:2> 'struct btd_adapter *' lvalue ParmVar 0x127128648 'adapter' 'struct btd_adapter *'     | `-DeclRefExpr 0x127143bb8 <col:38> 'struct mgmt_cp_start_service_discovery *' lvalue Var 0x127140bb8 'sd_cp' 'struct mgmt_cp_start_service_discovery *'     `-CallExpr 0x127143d50 <line:38:2, col:36> 'int'       |-ImplicitCastExpr 0x127143d38 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x127143cd8 <col:2> 'int ()' Function 0x127143c20 'trigger_start_discovery' 'int ()'       |-ImplicitCastExpr 0x127143d80 <col:26> 'struct btd_adapter *' <LValueToRValue>       | `-DeclRefExpr 0x127143cf8 <col:26> 'struct btd_adapter *' lvalue ParmVar 0x127128648 'adapter' 'struct btd_adapter *'       `-IntegerLiteral 0x127143d18 <col:35> 'int' 0 ","20213":"`-FunctionDecl 0x12d016518  line:1:19 invalid ImagesToCustomStream 'int (const int *, int *, int *)'   |-ParmVarDecl 0x12d0162f0 <col:40, col:57> col:57 referenced invalid image_info 'const int *'   |-ParmVarDecl 0x12d0163a8 <line:2:3, col:10> col:10 referenced invalid images 'int *'   |-ParmVarDecl 0x12d016428 <col:17, col:32> col:32 invalid exception 'int *'   `-CompoundStmt 0x12d9206a0 <line:3:1, line:117:1>     |-DeclStmt 0x12d016658 <line:4:3, line:5:17>     | `-VarDecl 0x12d0165f0 <line:4:3, line:5:6> col:6 referenced invalid magick_info 'const int *'     |-BinaryOperator 0x12d016730 <line:7:3, line:8:6> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x12d016690 <line:7:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d016670 <col:3> 'const int *' lvalue ParmVar 0x12d0162f0 'image_info' 'const int *'     | `-RecoveryExpr 0x12d016710 <line:8:6> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d02d820 <line:15:3, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d0168f0 <col:3> 'int ()' Function 0x12d0167f8 'assert' 'int ()'     | `-BinaryOperator 0x12d02d800 <col:10, col:35> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12d016930 <col:10, col:22> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x12d016910 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d0169d8 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d02de68 <line:20:3, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d02dd40 <col:3> 'int ()' Function 0x12d0167f8 'assert' 'int ()'     | `-BinaryOperator 0x12d02de48 <col:10, col:31> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12d02dd80 <col:10, col:18> '<dependent type>' contains-errors lvalue ->signature     |   | `-RecoveryExpr 0x12d02dd60 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d02de28 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d91e390 <line:31:3, col:53> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d02e790 <col:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d02e770 <col:3> 'const int *' lvalue Var 0x12d0165f0 'magick_info' 'const int *'     | `-CallExpr 0x12d91e360 <col:15, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d91e2b8 <col:15> 'int ()' Function 0x12d91e200 'GetMagickInfo' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12d91e2f8 <col:29, col:37> '<dependent type>' contains-errors lvalue ->magick     |   | `-RecoveryExpr 0x12d91e2d8 <col:29> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12d91e340 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d91e718 <line:32:3, line:39:5>     | |-RecoveryExpr 0x12d91e3d0 <line:32:7, col:43> '_Bool' contains-errors     | `-CompoundStmt 0x12d91e700 <line:33:5, line:39:5>     |   `-ReturnStmt 0x12d91e6f0 <line:38:7>     |-IfStmt 0x12d91eaa0 <line:42:3, line:48:5>     | |-RecoveryExpr 0x12d91ea50 <line:42:7, line:43:66> '_Bool' contains-errors     | `-CompoundStmt 0x12d91ea90 <line:44:5, line:48:5>     `-IfStmt 0x12d920650 <line:49:3, line:115:5> has_else       |-RecoveryExpr 0x12d91eac0 <line:49:7, col:23> '_Bool' contains-errors       |-CompoundStmt 0x12d91ef78 <line:50:5, line:56:5>       | |-CStyleCastExpr 0x12d91ec38 <line:52:7, col:30> 'void' contains-errors <ToVoid>       | | `-CallExpr 0x12d91ec00 <col:14, col:30> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x12d91ebc0 <col:14> 'int ()' Function 0x12d91eb08 'CloseBlob' 'int ()'       | |   `-RecoveryExpr 0x12d91ebe0 <col:24> '<dependent type>' contains-errors lvalue       | |-BinaryOperator 0x12d91ed10 <line:53:7, col:25> '<dependent type>' contains-errors '='       | | |-UnaryOperator 0x12d91ece0 <col:7, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow       | | | `-ImplicitCastExpr 0x12d91ecc8 <col:8, col:16> '<dependent type>' contains-errors <LValueToRValue>       | | |   `-CXXDependentScopeMemberExpr 0x12d91ec80 <col:8, col:16> '<dependent type>' contains-errors lvalue ->filename       | | |     `-RecoveryExpr 0x12d91ec60 <col:8> '<dependent type>' contains-errors lvalue       | | `-CharacterLiteral 0x12d91ecf8 <col:25> 'int' 0       | `-CStyleCastExpr 0x12d91ef50 <line:55:7, col:30> 'void' contains-errors <ToVoid>       |   `-CallExpr 0x12d91ef18 <col:14, col:30> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x12d91eed8 <col:14> 'int ()' Function 0x12d91eb08 'CloseBlob' 'int ()'       |     `-RecoveryExpr 0x12d91eef8 <col:24> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d920608 <line:58:5, line:115:5>         |-DeclStmt 0x12d91f018 <line:59:7, line:61:33>         | `-VarDecl 0x12d91efb0 <line:59:7, line:60:9> col:9 invalid filename 'char'         |-DeclStmt 0x12d91f0b0 <line:63:7, line:64:13>         | `-VarDecl 0x12d91f048 <line:63:7, line:64:9> col:9 used file 'int'         |-DeclStmt 0x12d91f180 <line:66:7, line:67:14>         | `-VarDecl 0x12d91f118 <line:66:7, line:67:10> col:10 used blob 'unsigned char *'         |-IfStmt 0x12d91f598 <line:73:7, line:79:9>         | |-RecoveryExpr 0x12d91f388 <line:73:11, col:37> '_Bool' contains-errors         | `-CompoundStmt 0x12d91f580 <line:74:9, line:79:9>         |   `-ReturnStmt 0x12d91f570 <line:78:11>         |-IfStmt 0x12d91fa78 <line:81:7, line:88:9>         | |-BinaryOperator 0x12d91f748 <line:81:11, col:20> 'int' '=='         | | |-ImplicitCastExpr 0x12d91f730 <col:11> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x12d91f6d8 <col:11> 'int' lvalue Var 0x12d91f048 'file' 'int'         | | `-UnaryOperator 0x12d91f718 <col:19, col:20> 'int' prefix '-'         | |   `-IntegerLiteral 0x12d91f6f8 <col:20> 'int' 1         | `-CompoundStmt 0x12d91fa58 <line:82:9, line:88:9>         |   |-BinaryOperator 0x12d91fa08 <line:85:11, col:61> 'unsigned char *' '='         |   | |-DeclRefExpr 0x12d91f830 <col:11> 'unsigned char *' lvalue Var 0x12d91f118 'blob' 'unsigned char *'         |   | `-CStyleCastExpr 0x12d91f9e0 <col:16, col:61> 'unsigned char *' <IntegralToPointer>         |   |   `-CallExpr 0x12d91f988 <col:34, col:61> 'int'         |   |     |-ImplicitCastExpr 0x12d91f970 <col:34> 'int (*)()' <FunctionToPointerDecay>         |   |     | `-DeclRefExpr 0x12d91f930 <col:34> 'int ()' Function 0x12d91f878 'RelinquishMagickMemory' 'int ()'         |   |     `-ImplicitCastExpr 0x12d91f9b0 <col:57> 'unsigned char *' <LValueToRValue>         |   |       `-DeclRefExpr 0x12d91f950 <col:57> 'unsigned char *' lvalue Var 0x12d91f118 'blob' 'unsigned char *'         |   `-ReturnStmt 0x12d91fa48 <line:87:11>         |-IfStmt 0x12d9203d0 <line:90:7, line:112:9>         | |-RecoveryExpr 0x12d91fc50 <line:90:11, col:40> '_Bool' contains-errors         | `-CompoundStmt 0x12d9203b0 <line:91:9, line:112:9>         |   |-CStyleCastExpr 0x12d91ff10 <line:98:11, col:34> 'void' contains-errors <ToVoid>         |   | `-CallExpr 0x12d91fed8 <col:18, col:34> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x12d91fe98 <col:18> 'int ()' Function 0x12d91eb08 'CloseBlob' 'int ()'         |   |   `-RecoveryExpr 0x12d91feb8 <col:28> '<dependent type>' contains-errors lvalue         |   `-IfStmt 0x12d920290 <line:99:11, line:110:13>         |     |-RecoveryExpr 0x12d91ff38 <line:99:15, col:25> '_Bool' contains-errors         |     `-CompoundStmt 0x12d920278 <line:100:13, line:110:13>         |       `-WhileStmt 0x12d920258 <line:103:15, line:109:15>         |         |-RecoveryExpr 0x12d920078 <line:103:22, col:41> '_Bool' contains-errors         |         `-CompoundStmt 0x12d920248 <line:104:15, line:109:15>         `-BinaryOperator 0x12d9204e8 <line:113:7, col:57> 'unsigned char *' '='           |-DeclRefExpr 0x12d9203f0 <col:7> 'unsigned char *' lvalue Var 0x12d91f118 'blob' 'unsigned char *'           `-CStyleCastExpr 0x12d9204c0 <col:12, col:57> 'unsigned char *' <IntegralToPointer>             `-CallExpr 0x12d920468 <col:30, col:57> 'int'               |-ImplicitCastExpr 0x12d920450 <col:30> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x12d920410 <col:30> 'int ()' Function 0x12d91f878 'RelinquishMagickMemory' 'int ()'               `-ImplicitCastExpr 0x12d920490 <col:53> 'unsigned char *' <LValueToRValue>                 `-DeclRefExpr 0x12d920430 <col:53> 'unsigned char *' lvalue Var 0x12d91f118 'blob' 'unsigned char *' ","20479":"`-FunctionDecl 0x14300de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x14300dd58 <col:8> col:8 RouterTest 'int'   |-ParmVarDecl 0x14300dcd8 <col:20> col:20 NoMetadataMatchCriteria 'int'   `-CompoundStmt 0x143029268 <col:45, line:20:1>     |-CallExpr 0x143028630 <line:2:3, col:98> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x1430285a0 <col:3, col:69> '<dependent type>' contains-errors lvalue .WillByDefault     | | `-CallExpr 0x143028570 <col:3, col:67> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14300e060 <col:3> 'int ()' Function 0x14300dfa8 'ON_CALL' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x1430284f0 <col:11, col:30> '<dependent type>' contains-errors lvalue ->route_entry_     | |   | `-CXXDependentScopeMemberExpr 0x1430284a8 <col:11, col:22> '<dependent type>' contains-errors lvalue .route_     | |   |   `-RecoveryExpr 0x143028488 <col:11> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x143028550 <col:44, col:66> 'int'     | |     `-ImplicitCastExpr 0x143028538 <col:44> 'int (*)()' <FunctionToPointerDecay>     | |       `-DeclRefExpr 0x14300e208 <col:44> 'int ()' Function 0x14300e150 'metadataMatchCriteria' 'int ()'     | `-CallExpr 0x143028608 <col:83, col:97> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x143028400 <col:83> 'int ()' Function 0x14300e338 'Return' 'int ()'     |   `-RecoveryExpr 0x1430285e8 <col:90> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143028fe8 <line:9:3, line:10:38> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x143028f40 <line:9:3, line:10:8> '<dependent type>' contains-errors lvalue .WillOnce     | | `-CallExpr 0x143028f10 <line:9:3, col:68> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x143028ab0 <col:3> 'int ()' Function 0x143028680 'EXPECT_CALL' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x143028e58 <col:15, col:41> '<dependent type>' contains-errors lvalue .conn_pool_     | |   | `-CXXDependentScopeMemberExpr 0x143028e10 <col:15, col:19> '<dependent type>' contains-errors lvalue .thread_local_cluster_     | |   |   `-RecoveryExpr 0x143028df0 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x143028ee0 <col:53, col:67> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x143028c58 <col:53> 'int ()' Function 0x143028ba0 'newStream' 'int ()'     | |     |-RecoveryExpr 0x143028ea0 <col:63> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x143028ec0 <col:66> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x143028fc0 <line:10:17, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x143028d50 <col:17> 'int ()' Function 0x14300e338 'Return' 'int ()'     |   `-UnaryOperator 0x143028fa8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x143028f88 <col:25> '<dependent type>' contains-errors lvalue     `-CallExpr 0x143029128 <line:11:3, col:29> 'int'       `-ImplicitCastExpr 0x143029110 <col:3> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x1430290f0 <col:3> 'int ()' Function 0x143029038 'expectResponseTimerCreate' 'int ()' ","20599":"`-FunctionDecl 0x14680de58  line:1:10 invalid CheckInputs 'int (int, int)'   |-ParmVarDecl 0x14680dcf0 <col:22, col:29> col:29 invalid group_size_t 'int'   |-ParmVarDecl 0x14680dd70 <col:43, col:50> col:50 invalid group_key_t 'int'   `-CompoundStmt 0x147008270 <col:63, line:20:3>     |-IfStmt 0x14680e048 <line:2:5, line:7:5>     | |-BinaryOperator 0x14680dfb8 <line:2:9, col:31> 'int' contains-errors '>'     | | |-CallExpr 0x14680df78 <col:9, col:27> '<dependent type>' contains-errors     | | | `-CXXDependentScopeMemberExpr 0x14680df30 <col:9, col:22> '<dependent type>' contains-errors lvalue .dims     | | |   `-RecoveryExpr 0x14680df10 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14680df98 <col:31> 'int' 0     | `-CompoundStmt 0x14680e028 <col:34, line:7:5>     |   |-ReturnStmt 0x14680e010 <line:3:7, col:14>     |   | `-RecoveryExpr 0x14680dff0 <col:14> '<dependent type>' contains-errors lvalue     |   `-NullStmt 0x14680e020 <line:6:46>     |-IfStmt 0x14680e1a0 <line:8:5, line:12:5>     | |-BinaryOperator 0x14680e110 <line:8:9, col:30> 'int' contains-errors '>'     | | |-CallExpr 0x14680e0d0 <col:9, col:26> '<dependent type>' contains-errors     | | | `-CXXDependentScopeMemberExpr 0x14680e088 <col:9, col:21> '<dependent type>' contains-errors lvalue .dims     | | |   `-RecoveryExpr 0x14680e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14680e0f0 <col:30> 'int' 0     | `-CompoundStmt 0x14680e180 <col:33, line:12:5>     |   |-ReturnStmt 0x14680e168 <line:9:7, col:14>     |   | `-RecoveryExpr 0x14680e148 <col:14> '<dependent type>' contains-errors lvalue     |   `-NullStmt 0x14680e178 <line:11:45>     |-DeclStmt 0x14680e300 <line:14:5, col:62>     | `-VarDecl 0x14680e1d8 <col:5, col:10> col:10 used group_size 'int' auto     |-IfStmt 0x147008200 <line:15:5, line:18:5>     | |-BinaryOperator 0x14680e370 <line:15:9, col:23> 'int' '<='     | | |-ImplicitCastExpr 0x14680e358 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14680e318 <col:9> 'int' lvalue Var 0x14680e1d8 'group_size' 'int'     | | `-IntegerLiteral 0x14680e338 <col:23> 'int' 0     | `-CompoundStmt 0x14680e3e0 <col:26, line:18:5>     |   |-ReturnStmt 0x14680e3c8 <line:16:7, col:14>     |   | `-RecoveryExpr 0x14680e3a8 <col:14> '<dependent type>' contains-errors lvalue     |   `-NullStmt 0x14680e3d8 <line:17:29>     |-ReturnStmt 0x147008258 <line:19:5, col:12>     | `-RecoveryExpr 0x147008238 <col:12> '<dependent type>' contains-errors lvalue     `-NullStmt 0x147008268 <col:24> ","20999":"`-FunctionDecl 0x131141670  col:2 implicit used bzero 'void (void *, unsigned long)' extern   |-ParmVarDecl 0x131141770 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1311417d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x131141718 <<invalid sloc>> Implicit 954 ","21100":"`-FunctionDecl 0x136128158  line:1:20 parse_scheme 'const char *(struct parse_state *)' static   |-ParmVarDecl 0x136128048 <col:33, col:53> col:53 used state 'struct parse_state *'   `-CompoundStmt 0x136141ab0 <line:2:1, line:43:1>     |-UnaryExprOrTypeTraitExpr 0x1361404c0 <line:3:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x1361404a0 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1361405c0 <line:4:2, col:30>     | `-VarDecl 0x1361404f8 <col:2, col:27> col:14 used tmp 'const char *' cinit     |   `-RecoveryExpr 0x136140598 <col:20, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136140560 <col:20> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     |-DoStmt 0x1378097e0 <line:6:2, line:40:37>     | |-CompoundStmt 0x1378096d0 <line:6:5, line:40:2>     | | `-SwitchStmt 0x136140668 <line:7:3, line:39:3>     | |   |-UnaryOperator 0x136140650 <line:7:11, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x136140638 <col:12, col:19> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x136140610 <col:12, col:19> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x1361405d8 <col:12> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |   `-CompoundStmt 0x137809680 <col:24, line:39:3>     | |     |-CaseStmt 0x1361406a8 <line:8:3, line:10:40>     | |     | |-CharacterLiteral 0x136140690 <line:8:8> 'int' 58     | |     | `-BinaryOperator 0x136140848 <line:10:4, col:40> '<dependent type>' contains-errors '='     | |     |   |-CXXDependentScopeMemberExpr 0x136140730 <col:4, col:15> '<dependent type>' contains-errors lvalue .scheme     | |     |   | `-RecoveryExpr 0x136140708 <col:4, col:11> '<dependent type>' contains-errors lvalue     | |     |   |   `-DeclRefExpr 0x1361406d0 <col:4> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     |   `-UnaryOperator 0x136140830 <col:24, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     |     `-ArraySubscriptExpr 0x136140810 <col:25, col:40> '<dependent type>' contains-errors lvalue     | |     |       |-ImplicitCastExpr 0x1361407f8 <col:25, col:32> '<dependent type>' contains-errors <LValueToRValue>     | |     |       | `-RecoveryExpr 0x1361407b0 <col:25, col:32> '<dependent type>' contains-errors lvalue     | |     |       |   `-DeclRefExpr 0x136140778 <col:25> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     |       `-IntegerLiteral 0x1361407d8 <col:39> 'int' 0     | |     |-BinaryOperator 0x136140998 <line:11:4, col:37> '<dependent type>' contains-errors '='     | |     | |-ArraySubscriptExpr 0x136140958 <col:4, col:33> '<dependent type>' contains-errors lvalue     | |     | | |-ImplicitCastExpr 0x136140940 <col:4, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |     | | | `-RecoveryExpr 0x1361408a0 <col:4, col:11> '<dependent type>' contains-errors lvalue     | |     | | |   `-DeclRefExpr 0x136140868 <col:4> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     | | `-UnaryOperator 0x136140928 <col:18, col:31> '<dependent type>' contains-errors postfix '++' cannot overflow     | |     | |   `-RecoveryExpr 0x136140900 <col:18, col:25> '<dependent type>' contains-errors lvalue     | |     | |     `-DeclRefExpr 0x1361408c8 <col:18> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     | `-IntegerLiteral 0x136140978 <col:37> 'int' 0     | |     |-ReturnStmt 0x136140a30 <line:12:4, col:20>     | |     | `-UnaryOperator 0x136140a18 <col:11, col:20> '<dependent type>' contains-errors prefix '++' cannot overflow     | |     |   `-RecoveryExpr 0x1361409f0 <col:13, col:20> '<dependent type>' contains-errors lvalue     | |     |     `-DeclRefExpr 0x1361409b8 <col:13> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     |-CaseStmt 0x136140a58 <line:14:3, line:19:4>     | |     | |-CharacterLiteral 0x136140a40 <line:14:8> 'int' 48     | |     | `-CaseStmt 0x136140a98 <col:13, line:19:4>     | |     |   |-CharacterLiteral 0x136140a80 <line:14:18> 'int' 49     | |     |   `-CaseStmt 0x136140ad8 <col:23, line:19:4>     | |     |     |-CharacterLiteral 0x136140ac0 <line:14:28> 'int' 50     | |     |     `-CaseStmt 0x136140b18 <col:33, line:19:4>     | |     |       |-CharacterLiteral 0x136140b00 <line:14:38> 'int' 51     | |     |       `-CaseStmt 0x136140b58 <col:43, line:19:4>     | |     |         |-CharacterLiteral 0x136140b40 <line:14:48> 'int' 52     | |     |         `-CaseStmt 0x136140b98 <col:53, line:19:4>     | |     |           |-CharacterLiteral 0x136140b80 <line:14:58> 'int' 53     | |     |           `-CaseStmt 0x136140bd8 <col:63, line:19:4>     | |     |             |-CharacterLiteral 0x136140bc0 <line:14:68> 'int' 54     | |     |             `-CaseStmt 0x136140c18 <line:15:3, line:19:4>     | |     |               |-CharacterLiteral 0x136140c00 <line:15:8> 'int' 55     | |     |               `-CaseStmt 0x136140c58 <col:13, line:19:4>     | |     |                 |-CharacterLiteral 0x136140c40 <line:15:18> 'int' 56     | |     |                 `-CaseStmt 0x136140c98 <col:23, line:19:4>     | |     |                   |-CharacterLiteral 0x136140c80 <line:15:28> 'int' 57     | |     |                   `-CaseStmt 0x136140cd8 <line:16:3, line:19:4>     | |     |                     |-CharacterLiteral 0x136140cc0 <line:16:8> 'int' 43     | |     |                     `-CaseStmt 0x136140d18 <col:13, line:19:4>     | |     |                       |-CharacterLiteral 0x136140d00 <line:16:18> 'int' 45     | |     |                       `-CaseStmt 0x136140d58 <col:23, line:19:4>     | |     |                         |-CharacterLiteral 0x136140d40 <line:16:28> 'int' 46     | |     |                         `-IfStmt 0x136140e80 <line:17:4, line:19:4>     | |     |                           |-BinaryOperator 0x136140e00 <line:17:8, col:22> 'int' contains-errors '=='     | |     |                           | |-RecoveryExpr 0x136140db8 <col:8, col:15> '<dependent type>' contains-errors lvalue     | |     |                           | | `-DeclRefExpr 0x136140d80 <col:8> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     |                           | `-DeclRefExpr 0x136140de0 <col:22> 'const char *' contains-errors lvalue Var 0x1361404f8 'tmp' 'const char *'     | |     |                           `-CompoundStmt 0x136140e68 <col:27, line:19:4>     | |     |                             `-ReturnStmt 0x136140e58 <line:18:5, col:12>     | |     |                               `-ImplicitCastExpr 0x136140e40 <col:12> 'const char *' contains-errors <LValueToRValue>     | |     |                                 `-DeclRefExpr 0x136140e20 <col:12> 'const char *' contains-errors lvalue Var 0x1361404f8 'tmp' 'const char *'     | |     |-CaseStmt 0x136140eb8 <line:21:3, line:30:45>     | |     | |-CharacterLiteral 0x136140ea0 <line:21:8> 'int' 65     | |     | `-CaseStmt 0x136140ef8 <col:13, line:30:45>     | |     |   |-CharacterLiteral 0x136140ee0 <line:21:18> 'int' 66     | |     |   `-CaseStmt 0x136140f38 <col:23, line:30:45>     | |     |     |-CharacterLiteral 0x136140f20 <line:21:28> 'int' 67     | |     |     `-CaseStmt 0x136140f78 <col:33, line:30:45>     | |     |       |-CharacterLiteral 0x136140f60 <line:21:38> 'int' 68     | |     |       `-CaseStmt 0x136140fb8 <col:43, line:30:45>     | |     |         |-CharacterLiteral 0x136140fa0 <line:21:48> 'int' 69     | |     |         `-CaseStmt 0x136140ff8 <col:53, line:30:45>     | |     |           |-CharacterLiteral 0x136140fe0 <line:21:58> 'int' 70     | |     |           `-CaseStmt 0x136141038 <col:63, line:30:45>     | |     |             |-CharacterLiteral 0x136141020 <line:21:68> 'int' 71     | |     |             `-CaseStmt 0x136141078 <line:22:3, line:30:45>     | |     |               |-CharacterLiteral 0x136141060 <line:22:8> 'int' 72     | |     |               `-CaseStmt 0x1361410b8 <col:13, line:30:45>     | |     |                 |-CharacterLiteral 0x1361410a0 <line:22:18> 'int' 73     | |     |                 `-CaseStmt 0x1361410f8 <col:23, line:30:45>     | |     |                   |-CharacterLiteral 0x1361410e0 <line:22:28> 'int' 74     | |     |                   `-CaseStmt 0x136141138 <col:33, line:30:45>     | |     |                     |-CharacterLiteral 0x136141120 <line:22:38> 'int' 75     | |     |                     `-CaseStmt 0x136141178 <col:43, line:30:45>     | |     |                       |-CharacterLiteral 0x136141160 <line:22:48> 'int' 76     | |     |                       `-CaseStmt 0x1361411b8 <col:53, line:30:45>     | |     |                         |-CharacterLiteral 0x1361411a0 <line:22:58> 'int' 77     | |     |                         `-CaseStmt 0x1361411f8 <col:63, line:30:45>     | |     |                           |-CharacterLiteral 0x1361411e0 <line:22:68> 'int' 78     | |     |                           `-CaseStmt 0x136141238 <line:23:3, line:30:45>     | |     |                             |-CharacterLiteral 0x136141220 <line:23:8> 'int' 79     | |     |                             `-CaseStmt 0x136141278 <col:13, line:30:45>     | |     |                               |-CharacterLiteral 0x136141260 <line:23:18> 'int' 80     | |     |                               `-CaseStmt 0x1361412b8 <col:23, line:30:45>     | |     |                                 |-CharacterLiteral 0x1361412a0 <line:23:28> 'int' 81     | |     |                                 `-CaseStmt 0x1361412f8 <col:33, line:30:45>     | |     |                                   |-CharacterLiteral 0x1361412e0 <line:23:38> 'int' 82     | |     |                                   `-CaseStmt 0x136141338 <col:43, line:30:45>     | |     |                                     |-CharacterLiteral 0x136141320 <line:23:48> 'int' 83     | |     |                                     `-CaseStmt 0x136141378 <col:53, line:30:45>     | |     |                                       |-CharacterLiteral 0x136141360 <line:23:58> 'int' 84     | |     |                                       `-CaseStmt 0x1361413b8 <col:63, line:30:45>     | |     |                                         |-CharacterLiteral 0x1361413a0 <line:23:68> 'int' 85     | |     |                                         `-CaseStmt 0x137808800 <line:24:3, line:30:45>     | |     |                                           |-CharacterLiteral 0x1361413e0 <line:24:8> 'int' 86     | |     |                                           `-CaseStmt 0x137808840 <col:13, line:30:45>     | |     |                                             |-CharacterLiteral 0x137808828 <line:24:18> 'int' 87     | |     |                                             `-CaseStmt 0x137808880 <col:23, line:30:45>     | |     |                                               |-CharacterLiteral 0x137808868 <line:24:28> 'int' 88     | |     |                                               `-CaseStmt 0x1378088c0 <col:33, line:30:45>     | |     |                                                 |-CharacterLiteral 0x1378088a8 <line:24:38> 'int' 89     | |     |                                                 `-CaseStmt 0x137808900 <col:43, line:30:45>     | |     |                                                   |-CharacterLiteral 0x1378088e8 <line:24:48> 'int' 90     | |     |                                                   `-CaseStmt 0x137808940 <line:25:3, line:30:45>     | |     |                                                     |-CharacterLiteral 0x137808928 <line:25:8> 'int' 97     | |     |                                                     `-CaseStmt 0x137808980 <col:13, line:30:45>     | |     |                                                       |-CharacterLiteral 0x137808968 <line:25:18> 'int' 98     | |     |                                                       `-CaseStmt 0x1378089c0 <col:23, line:30:45>     | |     |                                                         |-CharacterLiteral 0x1378089a8 <line:25:28> 'int' 99     | |     |                                                         `-CaseStmt 0x137808a00 <col:33, line:30:45>     | |     |                                                           |-CharacterLiteral 0x1378089e8 <line:25:38> 'int' 100     | |     |                                                           `-CaseStmt 0x137808a40 <col:43, line:30:45>     | |     |                                                             |-CharacterLiteral 0x137808a28 <line:25:48> 'int' 101     | |     |                                                             `-CaseStmt 0x137808a80 <col:53, line:30:45>     | |     |                                                               |-CharacterLiteral 0x137808a68 <line:25:58> 'int' 102     | |     |                                                               `-CaseStmt 0x137808ac0 <col:63, line:30:45>     | |     |                                                                 |-CharacterLiteral 0x137808aa8 <line:25:68> 'int' 103     | |     |                                                                 `-CaseStmt 0x137808b00 <line:26:3, line:30:45>     | |     |                                                                   |-CharacterLiteral 0x137808ae8 <line:26:8> 'int' 104     | |     |                                                                   `-CaseStmt 0x137808b40 <col:13, line:30:45>     | |     |                                                                     |-CharacterLiteral 0x137808b28 <line:26:18> 'int' 105     | |     |                                                                     `-CaseStmt 0x137808b80 <col:23, line:30:45>     | |     |                                                                       |-CharacterLiteral 0x137808b68 <line:26:28> 'int' 106     | |     |                                                                       `-CaseStmt 0x137808bc0 <col:33, line:30:45>     | |     |                                                                         |-CharacterLiteral 0x137808ba8 <line:26:38> 'int' 107     | |     |                                                                         `-CaseStmt 0x137808c00 <col:43, line:30:45>     | |     |                                                                           |-CharacterLiteral 0x137808be8 <line:26:48> 'int' 108     | |     |                                                                           `-CaseStmt 0x137808c40 <col:53, line:30:45>     | |     |                                                                             |-CharacterLiteral 0x137808c28 <line:26:58> 'int' 109     | |     |                                                                             `-CaseStmt 0x137808c80 <col:63, line:30:45>     | |     |                                                                               |-CharacterLiteral 0x137808c68 <line:26:68> 'int' 110     | |     |                                                                               `-CaseStmt 0x137808cc0 <line:27:3, line:30:45>     | |     |                                                                                 |-CharacterLiteral 0x137808ca8 <line:27:8> 'int' 111     | |     |                                                                                 `-CaseStmt 0x137808d00 <col:13, line:30:45>     | |     |                                                                                   |-CharacterLiteral 0x137808ce8 <line:27:18> 'int' 112     | |     |                                                                                   `-CaseStmt 0x137808d40 <col:23, line:30:45>     | |     |                                                                                     |-CharacterLiteral 0x137808d28 <line:27:28> 'int' 113     | |     |                                                                                     `-CaseStmt 0x137808d80 <col:33, line:30:45>     | |     |                                                                                       |-CharacterLiteral 0x137808d68 <line:27:38> 'int' 114     | |     |                                                                                       `-CaseStmt 0x137808dc0 <col:43, line:30:45>     | |     |                                                                                         |-CharacterLiteral 0x137808da8 <line:27:48> 'int' 115     | |     |                                                                                         `-CaseStmt 0x137808e00 <col:53, line:30:45>     | |     |                                                                                           |-CharacterLiteral 0x137808de8 <line:27:58> 'int' 116     | |     |                                                                                           `-CaseStmt 0x137808e40 <col:63, line:30:45>     | |     |                                                                                             |-CharacterLiteral 0x137808e28 <line:27:68> 'int' 117     | |     |                                                                                             `-CaseStmt 0x137808e80 <line:28:3, line:30:45>     | |     |                                                                                               |-CharacterLiteral 0x137808e68 <line:28:8> 'int' 118     | |     |                                                                                               `-CaseStmt 0x137808ec0 <col:13, line:30:45>     | |     |                                                                                                 |-CharacterLiteral 0x137808ea8 <line:28:18> 'int' 119     | |     |                                                                                                 `-CaseStmt 0x137808f00 <col:23, line:30:45>     | |     |                                                                                                   |-CharacterLiteral 0x137808ee8 <line:28:28> 'int' 120     | |     |                                                                                                   `-CaseStmt 0x137808f40 <col:33, line:30:45>     | |     |                                                                                                     |-CharacterLiteral 0x137808f28 <line:28:38> 'int' 121     | |     |                                                                                                     `-CaseStmt 0x137808f80 <col:43, line:30:45>     | |     |                                                                                                       |-CharacterLiteral 0x137808f68 <line:28:48> 'int' 122     | |     |                                                                                                       `-BinaryOperator 0x137809148 <line:30:4, col:45> '<dependent type>' contains-errors '='     | |     |                                                                                                         |-ArraySubscriptExpr 0x137809098 <col:4, col:33> '<dependent type>' contains-errors lvalue     | |     |                                                                                                         | |-ImplicitCastExpr 0x137809080 <col:4, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |     |                                                                                                         | | `-RecoveryExpr 0x137808fe0 <col:4, col:11> '<dependent type>' contains-errors lvalue     | |     |                                                                                                         | |   `-DeclRefExpr 0x137808fa8 <col:4> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     |                                                                                                         | `-UnaryOperator 0x137809068 <col:18, col:31> '<dependent type>' contains-errors postfix '++' cannot overflow     | |     |                                                                                                         |   `-RecoveryExpr 0x137809040 <col:18, col:25> '<dependent type>' contains-errors lvalue     | |     |                                                                                                         |     `-DeclRefExpr 0x137809008 <col:18> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     |                                                                                                         `-UnaryOperator 0x137809130 <col:37, col:45> '<dependent type>' contains-errors prefix '*' cannot overflow     | |     |                                                                                                           `-ImplicitCastExpr 0x137809118 <col:38, col:45> '<dependent type>' contains-errors <LValueToRValue>     | |     |                                                                                                             `-RecoveryExpr 0x1378090f0 <col:38, col:45> '<dependent type>' contains-errors lvalue     | |     |                                                                                                               `-DeclRefExpr 0x1378090b8 <col:38> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |     |-BreakStmt 0x137809168 <line:31:4>     | |     |-DefaultStmt 0x137809508 <line:33:3, line:37:4>     | |     | `-IfStmt 0x1378094e8 <line:34:4, line:37:4>     | |     |   |-RecoveryExpr 0x137809468 <line:34:8, col:76> '_Bool' contains-errors     | |     |   `-CompoundStmt 0x1378094d0 <col:79, line:37:4>     | |     |     `-ReturnStmt 0x1378094c0 <line:36:5, col:12>     | |     |       `-ImplicitCastExpr 0x1378094a8 <col:12> 'const char *' contains-errors <LValueToRValue>     | |     |         `-DeclRefExpr 0x137809488 <col:12> 'const char *' contains-errors lvalue Var 0x1361404f8 'tmp' 'const char *'     | |     `-CompoundAssignOperator 0x137809650 <line:38:4, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |       |-RecoveryExpr 0x137809560 <col:4, col:11> '<dependent type>' contains-errors lvalue     | |       | `-DeclRefExpr 0x137809528 <col:4> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     | |       `-BinaryOperator 0x137809630 <col:18, col:23> '<dependent type>' contains-errors '-'     | |         |-RecoveryExpr 0x137809610 <col:18> '<dependent type>' contains-errors lvalue     | |         `-IntegerLiteral 0x1378095a0 <col:23> 'int' 1     | `-BinaryOperator 0x1378097c0 <line:40:11, col:34> 'int' contains-errors '!='     |   |-UnaryOperator 0x137809748 <col:11, col:20> '<dependent type>' contains-errors prefix '++' cannot overflow     |   | `-RecoveryExpr 0x137809720 <col:13, col:20> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1378096e8 <col:13> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     |   `-RecoveryExpr 0x137809798 <col:27, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x137809760 <col:27> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'     `-ReturnStmt 0x136141aa0 <line:42:2, col:22>       `-BinaryOperator 0x136141a80 <col:9, col:22> '<dependent type>' contains-errors '='         |-RecoveryExpr 0x136141a38 <col:9, col:16> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x136141a00 <col:9> 'struct parse_state *' lvalue ParmVar 0x136128048 'state' 'struct parse_state *'         `-DeclRefExpr 0x136141a60 <col:22> 'const char *' contains-errors lvalue Var 0x1361404f8 'tmp' 'const char *' ","20710":"`-FunctionDecl 0x14d8274d8  line:1:9 invalid cli_bcapi_seek 'int (struct cli_bc_ctx *, int, int)'   |-ParmVarDecl 0x14d80e268 <col:24, col:43> col:43 used ctx 'struct cli_bc_ctx *'   |-ParmVarDecl 0x14d80e2e8 <col:48, col:56> col:56 invalid pos 'int'   |-ParmVarDecl 0x14d80e368 <col:61, col:70> col:70 invalid whence 'int'   `-CompoundStmt 0x14d8283a8 <line:2:1, line:32:1>     |-IfStmt 0x14d827a30 <line:4:5, line:8:5>     | |-UnaryOperator 0x14d827610 <line:4:9, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14d8275f8 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14d8275d0 <col:10, col:15> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14d827598 <col:10> 'struct cli_bc_ctx *' lvalue ParmVar 0x14d80e268 'ctx' 'struct cli_bc_ctx *'     | `-CompoundStmt 0x14d827a08 <col:21, line:8:5>     |   |-CallExpr 0x14d827848 <line:5:2, col:18> 'int'     |   | |-ImplicitCastExpr 0x14d827830 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d827780 <col:2> 'int ()' Function 0x14d8276c8 'cli_dbgmsg' 'int ()'     |   | `-ImplicitCastExpr 0x14d827870 <col:13> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14d8277e0 <col:13> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x14d8279a0 <line:6:2, col:13> 'int'     |   | `-ImplicitCastExpr 0x14d827988 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14d827968 <col:2> 'int ()' Function 0x14d8278b0 'API_MISUSE' 'int ()'     |   `-ReturnStmt 0x14d8279f8 <line:7:2, col:10>     |     `-UnaryOperator 0x14d8279e0 <col:9, col:10> 'int' prefix '-'     |       `-IntegerLiteral 0x14d8279c0 <col:10> 'int' 1     |-SwitchStmt 0x14d827a88 <line:9:5, line:23:5>     | |-ImplicitCastExpr 0x14d827a70 <line:9:13> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x14d827a50 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d827e70 <col:21, line:23:5>     |   |-CaseStmt 0x14d827ad0 <line:10:2, <invalid sloc>>     |   | |-IntegerLiteral 0x14d827ab0 <col:7> 'int' 0     |   | `-NullStmt 0x14d827b18 <<invalid sloc>>     |   |-BreakStmt 0x14d827b20 <line:12:6>     |   |-CaseStmt 0x14d827b48 <line:13:2, <invalid sloc>>     |   | |-IntegerLiteral 0x14d827b28 <col:7> 'int' 1     |   | `-NullStmt 0x14d827c10 <<invalid sloc>>     |   |-BreakStmt 0x14d827c18 <line:15:6>     |   |-CaseStmt 0x14d827c40 <line:16:2, <invalid sloc>>     |   | |-IntegerLiteral 0x14d827c20 <col:7> 'int' 2     |   | `-NullStmt 0x14d827d08 <<invalid sloc>>     |   |-BreakStmt 0x14d827d10 <line:18:6>     |   |-DefaultStmt 0x14d827d70 <line:19:2, line:20:17>     |   | `-CallExpr 0x14d827d50 <col:6, col:17> 'int'     |   |   `-ImplicitCastExpr 0x14d827d38 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x14d827d18 <col:6> 'int ()' Function 0x14d8278b0 'API_MISUSE' 'int ()'     |   |-CallExpr 0x14d827de8 <line:21:6, col:22> 'int'     |   | |-ImplicitCastExpr 0x14d827dd0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d827d90 <col:6> 'int ()' Function 0x14d8276c8 'cli_dbgmsg' 'int ()'     |   | `-ImplicitCastExpr 0x14d827e10 <col:17> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14d827db0 <col:17> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14d827e60 <line:22:6, col:14>     |     `-UnaryOperator 0x14d827e48 <col:13, col:14> 'int' prefix '-'     |       `-IntegerLiteral 0x14d827e28 <col:14> 'int' 1     `-IfStmt 0x14d828228 <line:24:5, line:28:5>       |-BinaryOperator 0x14d828058 <line:24:9, col:31> 'int' contains-errors '||'       | |-BinaryOperator 0x14d827ff8 <col:9, col:15> 'int' contains-errors '<'       | | |-RecoveryExpr 0x14d827fd8 <col:9> '<dependent type>' contains-errors lvalue       | | `-IntegerLiteral 0x14d827ee0 <col:15> 'int' 0       | `-BinaryOperator 0x14d828038 <col:20, col:31> 'int' contains-errors '>'       |   |-RecoveryExpr 0x14d828018 <col:20> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14d827f70 <col:26, col:31> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x14d827f38 <col:26> 'struct cli_bc_ctx *' lvalue ParmVar 0x14d80e268 'ctx' 'struct cli_bc_ctx *'       `-CompoundStmt 0x14d828208 <col:42, line:28:5>         |-CallExpr 0x14d828188 <line:25:2, line:26:25> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14d828078 <line:25:2> 'int ()' Function 0x14d8276c8 'cli_dbgmsg' 'int ()'         | |-StringLiteral 0x14d828098 <col:13> 'char[4]' lvalue \"STR\"         | |-RecoveryExpr 0x14d828168 <line:26:6> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x14d828108 <col:11, col:16> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x14d8280d0 <col:11> 'struct cli_bc_ctx *' lvalue ParmVar 0x14d80e268 'ctx' 'struct cli_bc_ctx *'         `-ReturnStmt 0x14d8281f8 <line:27:2, col:10>           `-UnaryOperator 0x14d8281e0 <col:9, col:10> 'int' prefix '-'             `-IntegerLiteral 0x14d8281c0 <col:10> 'int' 1 ","20955":"`-FunctionDecl 0x1591286e0  col:11 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x159808200 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x159808268 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x159128788 <<invalid sloc>> Implicit 893 ","20637":"`-FunctionDecl 0x1341281f8  line:1:1 invalid z2grestoreall 'int (int *)'   |-ParmVarDecl 0x134128128 <col:15, col:24> col:24 invalid i_ctx_p 'int *'   `-CompoundStmt 0x134141af0 <line:2:1, line:14:1>     |-ForStmt 0x134141a88 <line:3:5, line:12:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x134141a70 <line:3:14, line:12:5>     |   `-IfStmt 0x134141a40 <line:4:9, line:11:47> has_else     |     |-UnaryOperator 0x134128658 <line:4:13, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-CallExpr 0x134128628 <col:14, col:59> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x134128400 <col:14> 'int ()' Function 0x134128348 'restore_page_device' 'int ()'     |     |   |-RecoveryExpr 0x1341285c0 <col:34> '<dependent type>' contains-errors lvalue     |     |   `-CallExpr 0x134128600 <col:39, col:58> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x134128518 <col:39> 'int ()' Function 0x134128460 'gs_gstate_saved' 'int ()'     |     |     `-RecoveryExpr 0x1341285e0 <col:55> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x134141860 <col:62, line:10:9>     |     | |-CallExpr 0x1341287d0 <line:7:13, col:28> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x134128750 <col:13> 'int ()' Function 0x134128698 'gs_grestore' 'int ()'     |     | | `-RecoveryExpr 0x1341287b0 <col:25> '<dependent type>' contains-errors lvalue     |     | `-IfStmt 0x134141840 <line:8:13, line:9:17>     |     |   |-RecoveryExpr 0x134141818 <line:8:17> '<dependent type>' contains-errors lvalue     |     |   `-BreakStmt 0x134141838 <line:9:17>     |     `-ReturnStmt 0x134141a30 <line:11:13, col:47>     |       `-CallExpr 0x134141a00 <col:20, col:47> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x134141960 <col:20> 'int ()' Function 0x1341418a8 'push_callout' 'int ()'     |         |-RecoveryExpr 0x134141980 <col:33> '<dependent type>' contains-errors lvalue     |         `-StringLiteral 0x1341419e0 <col:42> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x134141ae0 <line:13:5, col:12>       `-IntegerLiteral 0x134141ac0 <col:12> 'int' 0 ","20969":"`-FunctionDecl 0x15000e458  line:1:1 invalid ossl_x509name_cmp 'int (int, int)'   |-ParmVarDecl 0x15000e2f0 <col:19, col:25> col:25 invalid self 'int'   |-ParmVarDecl 0x15000e370 <col:31, col:37> col:37 invalid other 'int'   `-CompoundStmt 0x150027bd8 <line:2:1, line:10:1>     |-DeclStmt 0x15000e590 <line:3:5, col:15>     | `-VarDecl 0x15000e528 <col:5, col:9> col:9 used result 'int'     |-BinaryOperator 0x15000e7b0 <line:5:5, col:44> 'int' contains-errors '='     | |-DeclRefExpr 0x15000e5a8 <col:5> 'int' lvalue Var 0x15000e528 'result' 'int'     | `-CallExpr 0x15000e780 <col:14, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15000e720 <col:14> 'int ()' Function 0x15000e668 'ossl_x509name_cmp0' 'int ()'     |   |-RecoveryExpr 0x15000e740 <col:33> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x15000e760 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x150027a00 <line:6:5, col:38>     | |-BinaryOperator 0x15000e828 <col:9, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x15000e810 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15000e7d0 <col:9> 'int' lvalue Var 0x15000e528 'result' 'int'     | | `-IntegerLiteral 0x15000e7f0 <col:18> 'int' 0     | `-ReturnStmt 0x15000e9f0 <col:21, col:38>     |   `-CallExpr 0x15000e9c8 <col:28, col:38> 'int'     |     |-ImplicitCastExpr 0x15000e9b0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15000e928 <col:28> 'int ()' Function 0x15000e870 'INT2FIX' 'int ()'     |     `-UnaryOperator 0x15000e968 <col:36, col:37> 'int' prefix '-'     |       `-IntegerLiteral 0x15000e948 <col:37> 'int' 1     |-IfStmt 0x150027b28 <line:7:5, col:37>     | |-BinaryOperator 0x150027a78 <col:9, col:18> 'int' '>'     | | |-ImplicitCastExpr 0x150027a60 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x150027a20 <col:9> 'int' lvalue Var 0x15000e528 'result' 'int'     | | `-IntegerLiteral 0x150027a40 <col:18> 'int' 1     | `-ReturnStmt 0x150027b18 <col:21, col:37>     |   `-CallExpr 0x150027af0 <col:28, col:37> 'int'     |     |-ImplicitCastExpr 0x150027ad8 <col:28> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x150027a98 <col:28> 'int ()' Function 0x15000e870 'INT2FIX' 'int ()'     |     `-IntegerLiteral 0x150027ab8 <col:36> 'int' 1     `-ReturnStmt 0x150027bc8 <line:9:5, col:21>       `-CallExpr 0x150027ba0 <col:12, col:21> 'int'         |-ImplicitCastExpr 0x150027b88 <col:12> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x150027b48 <col:12> 'int ()' Function 0x15000e870 'INT2FIX' 'int ()'         `-IntegerLiteral 0x150027b68 <col:20> 'int' 0 ","20291":"`-FunctionDecl 0x13a928750  line:1:20 timer_stats_hrtimer_clear_start_info 'void (struct hrtimer *)' static inline   |-ParmVarDecl 0x13a928648 <col:57, col:73> col:73 timer 'struct hrtimer *'   `-CompoundStmt 0x13a940a48 <line:2:1, line:6:1> ","20636":"`-FunctionDecl 0x13d124c00  col:17 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x13d124d00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13d124d68 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13d124ca8 <<invalid sloc>> Implicit 893 ","20715":"`-FunctionDecl 0x11d9281a8  line:1:8 PHP_FUNCTION 'int (int)' static   |-ParmVarDecl 0x11d9280d8 <col:21> col:21 libxml_disable_entity_loader 'int'   `-CompoundStmt 0x11d940b48 <line:2:1, line:21:1>     |-IfStmt 0x11d9285b8 <line:6:2, line:8:2>     | |-RecoveryExpr 0x11d928570 <line:6:6, col:75> '_Bool' contains-errors     | `-CompoundStmt 0x11d9285a0 <col:84, line:8:2>     |   `-ReturnStmt 0x11d928590 <line:7:3>     |-IfStmt 0x11d940a38 <line:10:2, line:14:2> has_else     | |-BinaryOperator 0x11d928650 <line:10:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x11d928630 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11d9285f0 <col:17> 'int' 0     | |-CompoundStmt 0x11d9287b0 <col:20, line:12:2>     | `-CompoundStmt 0x11d940a28 <col:9, line:14:2>     `-IfStmt 0x11d940b28 <line:16:2, line:18:2>       |-BinaryOperator 0x11d940af8 <line:16:6, col:13> 'int' contains-errors '=='       | |-RecoveryExpr 0x11d940ab8 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x11d940ad8 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x11d940b18 <col:45, line:18:2> ","20726":"`-FunctionDecl 0x152026748  line:1:12 vhost_net_rx_peek_head_len 'int (struct vhost_net *, struct sock *)' static   |-ParmVarDecl 0x15200e248 <col:39, col:57> col:57 used net 'struct vhost_net *'   |-ParmVarDecl 0x152026628 <col:62, col:75> col:75 used sk 'struct sock *'   `-CompoundStmt 0x15380b250 <line:2:1, line:37:1>     |-DeclStmt 0x152026ac8 <line:3:2, col:62>     | |-RecordDecl 0x152026848 <col:2, col:9> col:9 struct vhost_net_virtqueue     | `-VarDecl 0x1520269b8 <col:2, col:30> col:30 used rvq 'struct vhost_net_virtqueue *'     |-DeclStmt 0x152026c48 <line:4:2, col:62>     | `-VarDecl 0x152026b68 <col:2, col:30> col:30 used nvq 'struct vhost_net_virtqueue *'     |-DeclStmt 0x152026ec0 <line:5:2, col:39>     | |-RecordDecl 0x152026c60 <col:2, col:9> col:9 struct vhost_virtqueue     | `-VarDecl 0x152026dc8 <col:2, col:37> col:26 used vq 'struct vhost_virtqueue *' cinit     |   `-UnaryOperator 0x152026e90 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x152026e68 <col:32, col:37> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x152026e30 <col:32> 'struct vhost_net_virtqueue *' lvalue Var 0x152026b68 'nvq' 'struct vhost_net_virtqueue *'     |-DeclStmt 0x152026ff0 <line:6:2, col:42>     | `-FunctionDecl 0x152026f38 parent 0x151855608 <col:2, col:41> col:16 invalid uninitialized_var 'unsigned long ()'     |-DeclStmt 0x1520272a8 <line:7:2, col:34>     | `-VarDecl 0x152027020 <col:2, col:33> col:6 used len 'int' cinit     |   `-CallExpr 0x152027248 <col:12, col:33> 'int'     |     |-ImplicitCastExpr 0x152027230 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1520271a0 <col:12> 'int ()' Function 0x1520270e8 'peek_head_len' 'int ()'     |     |-ImplicitCastExpr 0x152027278 <col:26> 'struct vhost_net_virtqueue *' <LValueToRValue>     |     | `-DeclRefExpr 0x1520271c0 <col:26> 'struct vhost_net_virtqueue *' lvalue Var 0x1520269b8 'rvq' 'struct vhost_net_virtqueue *'     |     `-ImplicitCastExpr 0x152027290 <col:31> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x1520271e0 <col:31> 'struct sock *' lvalue ParmVar 0x152026628 'sk' 'struct sock *'     |-IfStmt 0x15380b1e8 <line:9:2, line:34:2>     | |-BinaryOperator 0x152027370 <line:9:6, col:18> 'int' contains-errors '&&'     | | |-UnaryOperator 0x1520272f8 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x1520272e0 <col:7> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x1520272c0 <col:7> 'int' lvalue Var 0x152027020 'len' 'int'     | | `-RecoveryExpr 0x152027348 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152027310 <col:14> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     | `-CompoundStmt 0x15380b198 <col:36, line:34:2>     |   |-CallExpr 0x152027508 <line:11:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152027470 <col:3> 'int ()' Function 0x1520273b8 'mutex_lock' 'int ()'     |   | `-UnaryOperator 0x1520274f0 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1520274c8 <col:15, col:19> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x152027490 <col:15> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   |-CallExpr 0x1538096c8 <line:12:3, col:37> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x153809610 <col:3> 'int ()' Function 0x152027558 'vhost_disable_notify' 'int ()'     |   | |-UnaryOperator 0x153809690 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x153809668 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x153809630 <col:25> 'struct vhost_net *' lvalue ParmVar 0x15200e248 'net' 'struct vhost_net *'     |   | `-DeclRefExpr 0x1538096a8 <col:35> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   |-CallExpr 0x153809810 <line:14:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x1538097f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x1538097d8 <col:3> 'int ()' Function 0x153809720 'preempt_disable' 'int ()'     |   |-WhileStmt 0x15380a178 <line:17:3, line:20:14>     |   | |-BinaryOperator 0x15380a020 <line:17:10, line:19:44> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x15380a000 <line:17:10, line:18:28> 'int' contains-errors '&&'     |   | | | |-CallExpr 0x153809f60 <line:17:10, col:48> '<dependent type>' contains-errors     |   | | | | |-DeclRefExpr 0x153809ac8 <col:10> 'int ()' Function 0x153809a10 'vhost_can_busy_poll' 'int ()'     |   | | | | |-UnaryOperator 0x153809b48 <col:30, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | | | | `-RecoveryExpr 0x153809b20 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   | | | | |   `-DeclRefExpr 0x153809ae8 <col:31> 'struct vhost_net *' lvalue ParmVar 0x15200e248 'net' 'struct vhost_net *'     |   | | | | `-RecoveryExpr 0x153809f40 <col:41> '<dependent type>' contains-errors lvalue     |   | | | `-UnaryOperator 0x153809fe8 <line:18:10, col:28> 'int' prefix '!' cannot overflow     |   | | |   `-CallExpr 0x153809fa8 <col:11, col:28> 'int'     |   | | |     |-ImplicitCastExpr 0x153809f90 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | | |     | `-DeclRefExpr 0x153809c88 <col:11> 'int ()' Function 0x153809bd0 'sk_has_rx_data' 'int ()'     |   | | |     `-ImplicitCastExpr 0x153809fd0 <col:26> 'struct sock *' <LValueToRValue>     |   | | |       `-DeclRefExpr 0x153809ca8 <col:26> 'struct sock *' lvalue ParmVar 0x152026628 'sk' 'struct sock *'     |   | | `-CallExpr 0x153809ef0 <line:19:10, col:44> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x153809e38 <col:10> 'int ()' Function 0x153809d80 'vhost_vq_avail_empty' 'int ()'     |   | |   |-UnaryOperator 0x153809eb8 <col:31, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   | `-RecoveryExpr 0x153809e90 <col:32, col:37> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x153809e58 <col:32> 'struct vhost_net *' lvalue ParmVar 0x15200e248 'net' 'struct vhost_net *'     |   | |   `-DeclRefExpr 0x153809ed0 <col:42> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   | `-CallExpr 0x15380a158 <line:20:4, col:14> 'int'     |   |   `-ImplicitCastExpr 0x15380a140 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     `-DeclRefExpr 0x15380a120 <col:4> 'int ()' Function 0x15380a068 'cpu_relax' 'int ()'     |   |-CallExpr 0x15380a2b0 <line:22:3, col:18> 'int'     |   | `-ImplicitCastExpr 0x15380a298 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x15380a278 <col:3> 'int ()' Function 0x15380a1c0 'preempt_enable' 'int ()'     |   |-IfStmt 0x15380aeb0 <line:24:3, line:29:3> has_else     |   | |-UnaryOperator 0x15380a3b8 <line:24:7, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x15380a388 <col:8, col:42> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x15380a2d0 <col:8> 'int ()' Function 0x153809d80 'vhost_vq_avail_empty' 'int ()'     |   | |   |-UnaryOperator 0x15380a350 <col:29, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   | `-RecoveryExpr 0x15380a328 <col:30, col:35> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x15380a2f0 <col:30> 'struct vhost_net *' lvalue ParmVar 0x15200e248 'net' 'struct vhost_net *'     |   | |   `-DeclRefExpr 0x15380a368 <col:40> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   | |-CallExpr 0x15380a548 <line:25:4, col:30> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x15380a4b0 <col:4> 'int ()' Function 0x15380a3f8 'vhost_poll_queue' 'int ()'     |   | | `-UnaryOperator 0x15380a530 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   `-RecoveryExpr 0x15380a508 <col:22, col:26> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x15380a4d0 <col:22> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   | `-IfStmt 0x15380ae90 <line:26:8, line:29:3>     |   |   |-CallExpr 0x15380aca0 <line:26:12, col:55> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x15380aab8 <col:12> 'int ()' Function 0x15380aa00 'unlikely' 'int ()'     |   |   | `-CallExpr 0x15380ac70 <col:21, col:54> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x15380abb8 <col:21> 'int ()' Function 0x15380ab00 'vhost_enable_notify' 'int ()'     |   |   |   |-UnaryOperator 0x15380ac38 <col:41, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   | `-RecoveryExpr 0x15380ac10 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   |   |   |   `-DeclRefExpr 0x15380abd8 <col:42> 'struct vhost_net *' lvalue ParmVar 0x15200e248 'net' 'struct vhost_net *'     |   |   |   `-DeclRefExpr 0x15380ac50 <col:52> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   |   `-CompoundStmt 0x15380ae70 <col:58, line:29:3>     |   |     |-CallExpr 0x15380ad80 <line:27:4, col:38> '<dependent type>' contains-errors     |   |     | |-DeclRefExpr 0x15380acc8 <col:4> 'int ()' Function 0x152027558 'vhost_disable_notify' 'int ()'     |   |     | |-UnaryOperator 0x15380ad48 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     | | `-RecoveryExpr 0x15380ad20 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   |     | |   `-DeclRefExpr 0x15380ace8 <col:26> 'struct vhost_net *' lvalue ParmVar 0x15200e248 'net' 'struct vhost_net *'     |   |     | `-DeclRefExpr 0x15380ad60 <col:36> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   |     `-CallExpr 0x15380ae48 <line:28:4, col:30> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x15380adb0 <col:4> 'int ()' Function 0x15380a3f8 'vhost_poll_queue' 'int ()'     |   |       `-UnaryOperator 0x15380ae30 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |         `-RecoveryExpr 0x15380ae08 <col:22, col:26> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x15380add0 <col:22> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   |-CallExpr 0x15380b058 <line:31:3, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15380afc0 <col:3> 'int ()' Function 0x15380af08 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x15380b040 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15380b018 <col:17, col:21> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15380afe0 <col:17> 'struct vhost_virtqueue *' contains-errors lvalue Var 0x152026dc8 'vq' 'struct vhost_virtqueue *'     |   `-BinaryOperator 0x15380b178 <line:33:3, col:30> 'int' '='     |     |-DeclRefExpr 0x15380b080 <col:3> 'int' lvalue Var 0x152027020 'len' 'int'     |     `-CallExpr 0x15380b118 <col:9, col:30> 'int'     |       |-ImplicitCastExpr 0x15380b100 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15380b0a0 <col:9> 'int ()' Function 0x1520270e8 'peek_head_len' 'int ()'     |       |-ImplicitCastExpr 0x15380b148 <col:23> 'struct vhost_net_virtqueue *' <LValueToRValue>     |       | `-DeclRefExpr 0x15380b0c0 <col:23> 'struct vhost_net_virtqueue *' lvalue Var 0x1520269b8 'rvq' 'struct vhost_net_virtqueue *'     |       `-ImplicitCastExpr 0x15380b160 <col:28> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x15380b0e0 <col:28> 'struct sock *' lvalue ParmVar 0x152026628 'sk' 'struct sock *'     `-ReturnStmt 0x15380b240 <line:36:2, col:9>       `-ImplicitCastExpr 0x15380b228 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15380b208 <col:9> 'int' lvalue Var 0x152027020 'len' 'int' ","20232":"`-FunctionDecl 0x126142d00  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x126143600 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x126143668 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1261436d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x126142da8 <<invalid sloc>> Implicit 882 ","20207":"`-FunctionDecl 0x14400dd90  line:1:13 do_client_disconnect 'void (void)' static   `-CompoundStmt 0x14400e1f8 <line:2:1, line:8:1>     `-IfStmt 0x14400e1d8 <line:3:5, line:7:5>       |-RecoveryExpr 0x14400deb0 <line:3:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14400e1c0 <col:27, line:7:5>         `-CallExpr 0x14400e158 <line:4:9, line:5:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x14400dfe0 <line:4:9> 'int ()' Function 0x14400df28 'udscs_server_write_all' 'int ()'           |-RecoveryExpr 0x14400e0f8 <col:32> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x14400e118 <col:40> '<dependent type>' contains-errors lvalue           |-IntegerLiteral 0x14400e030 <col:70> 'int' 0           |-IntegerLiteral 0x14400e050 <col:73> 'int' 0           |-RecoveryExpr 0x14400e138 <line:5:32> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x14400e088 <col:38> 'int' 0 ","21191":"`-FunctionDecl 0x1419281f0  line:1:6 invalid gf_node_free 'void (int *)'   |-ParmVarDecl 0x141928128 <col:19, col:28> col:28 referenced invalid node 'int *'   `-CompoundStmt 0x142809520 <line:2:1, line:36:1>     |-IfStmt 0x141928300 <line:3:2, col:13>     | |-UnaryOperator 0x1419282d8 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1419282c0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1419282a0 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1419282f0 <col:13>     |-IfStmt 0x141928590 <line:5:2, col:80>     | |-CXXDependentScopeMemberExpr 0x141928388 <col:6, col:23> '<dependent type>' contains-errors lvalue ->UserCallback     | | `-CXXDependentScopeMemberExpr 0x141928340 <col:6, col:12> '<dependent type>' contains-errors lvalue ->sgprivate     | |   `-RecoveryExpr 0x141928320 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x141928558 <col:37, col:80> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x141928460 <col:37, col:54> '<dependent type>' contains-errors lvalue ->UserCallback     |   | `-CXXDependentScopeMemberExpr 0x141928418 <col:37, col:43> '<dependent type>' contains-errors lvalue ->sgprivate     |   |   `-RecoveryExpr 0x1419283f0 <col:37> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1419283d0 <col:37> 'int *' lvalue ParmVar 0x141928128 'node' 'int *'     |   |-RecoveryExpr 0x1419284a8 <col:67> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x141928538 <col:73> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1419284e0 <col:79> 'int' 1     |-IfStmt 0x141941ae0 <line:7:2, line:8:123>     | |-BinaryOperator 0x141928758 <line:7:6, col:66> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x141928618 <col:6, col:23> '<dependent type>' contains-errors lvalue ->scenegraph     | | | `-CXXDependentScopeMemberExpr 0x1419285d0 <col:6, col:12> '<dependent type>' contains-errors lvalue ->sgprivate     | | |   `-RecoveryExpr 0x1419285b0 <col:6> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x141928710 <col:37, col:66> '<dependent type>' contains-errors lvalue ->NodeCallback     | |   `-CXXDependentScopeMemberExpr 0x1419286c8 <col:37, col:54> '<dependent type>' contains-errors lvalue ->scenegraph     | |     `-CXXDependentScopeMemberExpr 0x141928680 <col:37, col:43> '<dependent type>' contains-errors lvalue ->sgprivate     | |       `-RecoveryExpr 0x141928660 <col:37> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x141941aa0 <line:8:3, col:123> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x141941890 <col:3, col:32> '<dependent type>' contains-errors lvalue ->NodeCallback     |   | `-CXXDependentScopeMemberExpr 0x141941848 <col:3, col:20> '<dependent type>' contains-errors lvalue ->scenegraph     |   |   `-CXXDependentScopeMemberExpr 0x141941800 <col:3, col:9> '<dependent type>' contains-errors lvalue ->sgprivate     |   |     `-RecoveryExpr 0x141928798 <col:3> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x141928778 <col:3> 'int *' lvalue ParmVar 0x141928128 'node' 'int *'     |   |-CXXDependentScopeMemberExpr 0x141941988 <col:45, col:74> '<dependent type>' contains-errors lvalue ->userpriv     |   | `-CXXDependentScopeMemberExpr 0x141941940 <col:45, col:62> '<dependent type>' contains-errors lvalue ->scenegraph     |   |   `-CXXDependentScopeMemberExpr 0x1419418f8 <col:45, col:51> '<dependent type>' contains-errors lvalue ->sgprivate     |   |     `-RecoveryExpr 0x1419418d8 <col:45> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x141941a60 <col:84> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1419419e8 <col:113> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x141941a80 <col:119> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1428091e0 <line:10:2, line:32:2>     | |-CXXDependentScopeMemberExpr 0x141941b68 <line:10:6, col:23> '<dependent type>' contains-errors lvalue ->interact     | | `-CXXDependentScopeMemberExpr 0x141941b20 <col:6, col:12> '<dependent type>' contains-errors lvalue ->sgprivate     | |   `-RecoveryExpr 0x141941b00 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1428091b0 <col:33, line:32:2>     |   |-IfStmt 0x141941f58 <line:11:3, line:13:3>     |   | |-CXXDependentScopeMemberExpr 0x141941c60 <line:11:7, col:34> '<dependent type>' contains-errors lvalue ->routes     |   | | `-CXXDependentScopeMemberExpr 0x141941c18 <col:7, col:24> '<dependent type>' contains-errors lvalue ->interact     |   | |   `-CXXDependentScopeMemberExpr 0x141941bd0 <col:7, col:13> '<dependent type>' contains-errors lvalue ->sgprivate     |   | |     `-RecoveryExpr 0x141941bb0 <col:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x141941f40 <col:42, line:13:3>     |   |   `-CallExpr 0x141941f18 <line:12:4, col:49> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x141941e00 <col:4> 'int ()' Function 0x141941d48 'gf_list_del' 'int ()'     |   |     `-CXXDependentScopeMemberExpr 0x141941ed0 <col:16, col:43> '<dependent type>' contains-errors lvalue ->routes     |   |       `-CXXDependentScopeMemberExpr 0x141941e88 <col:16, col:33> '<dependent type>' contains-errors lvalue ->interact     |   |         `-CXXDependentScopeMemberExpr 0x141941e40 <col:16, col:22> '<dependent type>' contains-errors lvalue ->sgprivate     |   |           `-RecoveryExpr 0x141941e20 <col:16> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1419424d0 <line:15:3, line:18:3>     |   | |-CXXDependentScopeMemberExpr 0x141942028 <line:15:7, col:34> '<dependent type>' contains-errors lvalue ->dom_evt     |   | | `-CXXDependentScopeMemberExpr 0x141941fe0 <col:7, col:24> '<dependent type>' contains-errors lvalue ->interact     |   | |   `-CXXDependentScopeMemberExpr 0x141941f98 <col:7, col:13> '<dependent type>' contains-errors lvalue ->sgprivate     |   | |     `-RecoveryExpr 0x141941f78 <col:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x1419424b0 <col:43, line:18:3>     |   |   |-CallExpr 0x141942268 <line:16:4, col:72> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x141942150 <col:4> 'int ()' Function 0x141942098 'gf_dom_event_remove_all_listeners' 'int ()'     |   |   | `-CXXDependentScopeMemberExpr 0x141942220 <col:38, col:65> '<dependent type>' contains-errors lvalue ->dom_evt     |   |   |   `-CXXDependentScopeMemberExpr 0x1419421d8 <col:38, col:55> '<dependent type>' contains-errors lvalue ->interact     |   |   |     `-CXXDependentScopeMemberExpr 0x141942190 <col:38, col:44> '<dependent type>' contains-errors lvalue ->sgprivate     |   |   |       `-RecoveryExpr 0x141942170 <col:38> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x141942488 <line:17:4, col:62> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x141942370 <col:4> 'int ()' Function 0x1419422b8 'gf_dom_event_target_del' 'int ()'     |   |     `-CXXDependentScopeMemberExpr 0x141942440 <col:28, col:55> '<dependent type>' contains-errors lvalue ->dom_evt     |   |       `-CXXDependentScopeMemberExpr 0x1419423f8 <col:28, col:45> '<dependent type>' contains-errors lvalue ->interact     |   |         `-CXXDependentScopeMemberExpr 0x1419423b0 <col:28, col:34> '<dependent type>' contains-errors lvalue ->sgprivate     |   |           `-RecoveryExpr 0x141942390 <col:28> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x141942740 <line:19:3, line:21:3>     |   | |-CXXDependentScopeMemberExpr 0x1419425a0 <line:19:7, col:34> '<dependent type>' contains-errors lvalue ->animations     |   | | `-CXXDependentScopeMemberExpr 0x141942558 <col:7, col:24> '<dependent type>' contains-errors lvalue ->interact     |   | |   `-CXXDependentScopeMemberExpr 0x141942510 <col:7, col:13> '<dependent type>' contains-errors lvalue ->sgprivate     |   | |     `-RecoveryExpr 0x1419424f0 <col:7> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x141942728 <col:46, line:21:3>     |   |   `-CallExpr 0x141942700 <line:20:4, col:53> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1419425e8 <col:4> 'int ()' Function 0x141941d48 'gf_list_del' 'int ()'     |   |     `-CXXDependentScopeMemberExpr 0x1419426b8 <col:16, col:43> '<dependent type>' contains-errors lvalue ->animations     |   |       `-CXXDependentScopeMemberExpr 0x141942670 <col:16, col:33> '<dependent type>' contains-errors lvalue ->interact     |   |         `-CXXDependentScopeMemberExpr 0x141942628 <col:16, col:22> '<dependent type>' contains-errors lvalue ->sgprivate     |   |           `-RecoveryExpr 0x141942608 <col:16> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x142809188 <line:31:3, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1428090b8 <col:3> 'int ()' Function 0x142809000 'gf_free' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x142809140 <col:11, col:28> '<dependent type>' contains-errors lvalue ->interact     |       `-CXXDependentScopeMemberExpr 0x1428090f8 <col:11, col:17> '<dependent type>' contains-errors lvalue ->sgprivate     |         `-RecoveryExpr 0x1428090d8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1428093e0 <line:33:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1428092e0 <col:2> 'int ()' Function 0x142809228 'assert' 'int ()'     | `-UnaryOperator 0x1428093c8 <col:9, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-ImplicitCastExpr 0x1428093b0 <col:11, col:28> '<dependent type>' contains-errors <LValueToRValue>     |     `-CXXDependentScopeMemberExpr 0x142809368 <col:11, col:28> '<dependent type>' contains-errors lvalue ->parents     |       `-CXXDependentScopeMemberExpr 0x142809320 <col:11, col:17> '<dependent type>' contains-errors lvalue ->sgprivate     |         `-RecoveryExpr 0x142809300 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142809490 <line:34:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142809408 <col:2> 'int ()' Function 0x142809000 'gf_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x142809448 <col:10, col:16> '<dependent type>' contains-errors lvalue ->sgprivate     |   `-RecoveryExpr 0x142809428 <col:10> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1428094f8 <line:35:2, col:14> '<dependent type>' contains-errors       |-DeclRefExpr 0x1428094b8 <col:2> 'int ()' Function 0x142809000 'gf_free' 'int ()'       `-RecoveryExpr 0x1428094d8 <col:10> '<dependent type>' contains-errors lvalue ","20596":"`-FunctionDecl 0x145027198  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x145027298 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x145027300 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x145027368 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x145027240 <<invalid sloc>> Implicit 900 ","20957":"`-FunctionDecl 0x14380b688  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14380b788 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14380b7f0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14380b858 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14380b730 <<invalid sloc>> Implicit 900 ","20271":"`-FunctionDecl 0x14c142fd8  col:2 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x14c1430d8 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14c143140 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14c1431a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14c143080 <<invalid sloc>> Implicit 886 ","21174":"`-FunctionDecl 0x10484a5a8  line:1:12 invalid drbg_ec_mul 'int (int *, int *, const int *, int)' static   |-ParmVarDecl 0x10484a328 <col:24, col:37> col:37 invalid ectx 'int *'   |-ParmVarDecl 0x10484a3a8 <col:43, col:51> col:51 invalid r 'int *'   |-ParmVarDecl 0x10484a428 <col:54, col:68> col:68 invalid s 'const int *'   |-ParmVarDecl 0x10484a4a8 <col:71, col:75> col:75 used use_q 'int'   `-CompoundStmt 0x104864678 <line:2:2, line:20:2>     |-IfStmt 0x104864278 <line:3:2, line:14:3> has_else     | |-ImplicitCastExpr 0x10484a690 <line:3:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x10484a670 <col:6> 'int' lvalue ParmVar 0x10484a4a8 'use_q' 'int'     | |-CompoundStmt 0x104863f40 <line:4:3, line:8:3>     | | `-IfStmt 0x104863f20 <line:5:3, line:7:11>     | |   |-UnaryOperator 0x104863ed8 <line:5:7, line:6:35> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   | `-CallExpr 0x104863e88 <line:5:8, line:6:35> '<dependent type>' contains-errors     | |   |   |-DeclRefExpr 0x10484a800 <line:5:8> 'int ()' Function 0x10484a748 'EC_POINT_mul' 'int ()'     | |   |   |-CXXDependentScopeMemberExpr 0x10484a840 <col:21, col:27> '<dependent type>' contains-errors lvalue ->curve     | |   |   | `-RecoveryExpr 0x10484a820 <col:21> '<dependent type>' contains-errors lvalue     | |   |   |-CXXDependentScopeMemberExpr 0x10484a8a8 <col:34, col:40> '<dependent type>' contains-errors lvalue ->ptmp     | |   |   | `-RecoveryExpr 0x10484a888 <col:34> '<dependent type>' contains-errors lvalue     | |   |   |-RecoveryExpr 0x104863e68 <line:6:7> '<dependent type>' contains-errors lvalue     | |   |   |-CXXDependentScopeMemberExpr 0x10484a928 <col:13, col:19> '<dependent type>' contains-errors lvalue ->Q     | |   |   | `-RecoveryExpr 0x10484a908 <col:13> '<dependent type>' contains-errors lvalue     | |   |   |-RecoveryExpr 0x10484a970 <col:22> '<dependent type>' contains-errors lvalue     | |   |   `-CXXDependentScopeMemberExpr 0x10484a9b0 <col:25, col:31> '<dependent type>' contains-errors lvalue ->bctx     | |   |     `-RecoveryExpr 0x10484a990 <col:25> '<dependent type>' contains-errors lvalue     | |   `-ReturnStmt 0x104863f10 <line:7:4, col:11>     | |     `-IntegerLiteral 0x104863ef0 <col:11> 'int' 0     | `-CompoundStmt 0x104864260 <line:10:3, line:14:3>     |   `-IfStmt 0x104864240 <line:11:3, line:13:11>     |     |-UnaryOperator 0x1048641f8 <line:11:7, line:12:32> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-CallExpr 0x1048641a8 <line:11:8, line:12:32> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x104863f58 <line:11:8> 'int ()' Function 0x10484a748 'EC_POINT_mul' 'int ()'     |     |   |-CXXDependentScopeMemberExpr 0x104863f98 <col:21, col:27> '<dependent type>' contains-errors lvalue ->curve     |     |   | `-RecoveryExpr 0x104863f78 <col:21> '<dependent type>' contains-errors lvalue     |     |   |-CXXDependentScopeMemberExpr 0x104864000 <col:34, col:40> '<dependent type>' contains-errors lvalue ->ptmp     |     |   | `-RecoveryExpr 0x104863fe0 <col:34> '<dependent type>' contains-errors lvalue     |     |   |-RecoveryExpr 0x104864048 <line:12:7> '<dependent type>' contains-errors lvalue     |     |   |-RecoveryExpr 0x104864168 <col:10> '<dependent type>' contains-errors lvalue     |     |   |-RecoveryExpr 0x104864188 <col:16> '<dependent type>' contains-errors lvalue     |     |   `-CXXDependentScopeMemberExpr 0x1048640b8 <col:22, col:28> '<dependent type>' contains-errors lvalue ->bctx     |     |     `-RecoveryExpr 0x104864098 <col:22> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x104864230 <line:13:4, col:11>     |       `-IntegerLiteral 0x104864210 <col:11> 'int' 0     |-IfStmt 0x104864628 <line:16:2, line:18:10>     | |-UnaryOperator 0x1048645e0 <line:16:6, line:17:24> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x104864598 <line:16:7, line:17:24> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x104864388 <line:16:7> 'int ()' Function 0x1048642d0 'EC_POINT_get_affine_coordinates_GFp' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x1048643c8 <col:43, col:49> '<dependent type>' contains-errors lvalue ->curve     | |   | `-RecoveryExpr 0x1048643a8 <col:43> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x104864430 <col:56, col:62> '<dependent type>' contains-errors lvalue ->ptmp     | |   | `-RecoveryExpr 0x104864410 <col:56> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x104864478 <col:68> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x104864578 <line:17:8> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x1048644d0 <col:14, col:20> '<dependent type>' contains-errors lvalue ->bctx     | |     `-RecoveryExpr 0x1048644b0 <col:14> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x104864618 <line:18:3, col:10>     |   `-IntegerLiteral 0x1048645f8 <col:10> 'int' 0     `-ReturnStmt 0x104864668 <line:19:2, col:9>       `-IntegerLiteral 0x104864648 <col:9> 'int' 1 ","21140":"`-FunctionDecl 0x13d128288  line:2:8 invalid xtra_box_read 'int (int *, int *)'   |-ParmVarDecl 0x13d128128 <col:22, col:30> col:30 invalid s 'int *'   |-ParmVarDecl 0x13d1281a8 <col:33, col:47> col:47 invalid bs 'int *'   `-CompoundStmt 0x13d1421b0 <line:3:1, line:51:15>     `-WhileStmt 0x13d142190 <line:5:2, line:50:2>       |-CXXDependentScopeMemberExpr 0x13d1283f0 <line:5:9, col:14> '<dependent type>' contains-errors lvalue ->size       | `-RecoveryExpr 0x13d1283d0 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13d142158 <col:20, line:50:2>         |-DeclStmt 0x13d1285d8 <line:9:3, col:31>         | |-VarDecl 0x13d128468 <col:3, col:14> col:9 used data 'char *' cinit         | | `-RecoveryExpr 0x13d1284e8 <col:14> '<dependent type>' contains-errors lvalue         | `-VarDecl 0x13d128520 <col:3, col:27> col:21 used data2 'char *' cinit         |   `-RecoveryExpr 0x13d1285a0 <col:27> '<dependent type>' contains-errors lvalue         |-CallExpr 0x13d141800 <line:10:3, col:36> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13d128750 <col:3> 'int ()' Function 0x13d128698 'ISOM_DECREASE_SIZE_NO_ERR' 'int ()'         | |-RecoveryExpr 0x13d1287d8 <col:29> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x13d128788 <col:34> 'int' 18         |-IfStmt 0x13d141a10 <line:15:3, line:18:3>         | |-RecoveryExpr 0x13d141880 <line:15:7, col:25> '_Bool' contains-errors         | `-CompoundStmt 0x13d141a00 <col:37, line:18:3>         |-IfStmt 0x13d141e48 <line:30:3, line:38:3>         | |-RecoveryExpr 0x13d141c10 <line:30:7, col:17> '_Bool' contains-errors         | `-CompoundStmt 0x13d141e38 <col:20, line:38:3>         `-IfStmt 0x13d142138 <line:47:3, line:49:3>           |-RecoveryExpr 0x13d1420a8 <line:47:7> '_Bool' contains-errors           `-CompoundStmt 0x13d142128 <col:17, line:49:3> ","20293":"`-FunctionDecl 0x12f8fbc80  line:1:6 invalid BN_swap 'void (int *, int *)'   |-ParmVarDecl 0x12f8fbb28 <col:14, col:22> col:22 referenced invalid a 'int *'   |-ParmVarDecl 0x12f8fbba8 <col:25, col:33> col:33 referenced invalid b 'int *'   `-CompoundStmt 0x12f9164b0 <line:2:1, line:32:1>     |-DeclStmt 0x12f8fbe50 <line:3:5, col:33>     | |-VarDecl 0x12f8fbd50 <col:5, col:9> col:9 used flags_old_a 'int'     | `-VarDecl 0x12f8fbdd0 <col:5, col:22> col:22 used flags_old_b 'int'     |-DeclStmt 0x12f8fc020 <line:5:5, col:35>     | |-VarDecl 0x12f8fbe98 <col:5, col:9> col:9 used tmp_top 'int'     | |-VarDecl 0x12f8fbf18 <col:5, col:18> col:18 used tmp_dmax 'int'     | `-VarDecl 0x12f8fbf98 <col:5, col:28> col:28 used tmp_neg 'int'     |-CallExpr 0x12f8fc1d0 <line:7:5, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f8fc190 <col:5> 'int ()' Function 0x12f8fc0d8 'bn_check_top' 'int ()'     | `-RecoveryExpr 0x12f8fc1b0 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f915240 <line:8:5, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f915200 <col:5> 'int ()' Function 0x12f8fc0d8 'bn_check_top' 'int ()'     | `-RecoveryExpr 0x12f915220 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f9152f0 <line:10:5, col:22> 'int' contains-errors '='     | |-DeclRefExpr 0x12f915268 <col:5> 'int' lvalue Var 0x12f8fbd50 'flags_old_a' 'int'     | `-CXXDependentScopeMemberExpr 0x12f9152a8 <col:19, col:22> '<dependent type>' contains-errors lvalue ->flags     |   `-RecoveryExpr 0x12f915288 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f915398 <line:11:5, col:22> 'int' contains-errors '='     | |-DeclRefExpr 0x12f915310 <col:5> 'int' lvalue Var 0x12f8fbdd0 'flags_old_b' 'int'     | `-CXXDependentScopeMemberExpr 0x12f915350 <col:19, col:22> '<dependent type>' contains-errors lvalue ->flags     |   `-RecoveryExpr 0x12f915330 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f9154a8 <line:14:5, col:18> 'int' contains-errors '='     | |-DeclRefExpr 0x12f915420 <col:5> 'int' lvalue Var 0x12f8fbe98 'tmp_top' 'int'     | `-CXXDependentScopeMemberExpr 0x12f915460 <col:15, col:18> '<dependent type>' contains-errors lvalue ->top     |   `-RecoveryExpr 0x12f915440 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f915550 <line:15:5, col:19> 'int' contains-errors '='     | |-DeclRefExpr 0x12f9154c8 <col:5> 'int' lvalue Var 0x12f8fbf18 'tmp_dmax' 'int'     | `-CXXDependentScopeMemberExpr 0x12f915508 <col:16, col:19> '<dependent type>' contains-errors lvalue ->dmax     |   `-RecoveryExpr 0x12f9154e8 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f9155f8 <line:16:5, col:18> 'int' contains-errors '='     | |-DeclRefExpr 0x12f915570 <col:5> 'int' lvalue Var 0x12f8fbf98 'tmp_neg' 'int'     | `-CXXDependentScopeMemberExpr 0x12f9155b0 <col:15, col:18> '<dependent type>' contains-errors lvalue ->neg     |   `-RecoveryExpr 0x12f915590 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f915710 <line:18:5, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f915660 <col:5, col:8> '<dependent type>' contains-errors lvalue ->d     | | `-RecoveryExpr 0x12f915638 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915618 <col:5> 'int *' lvalue ParmVar 0x12f8fbb28 'a' 'int *'     | `-CXXDependentScopeMemberExpr 0x12f9156c8 <col:12, col:15> '<dependent type>' contains-errors lvalue ->d     |   `-RecoveryExpr 0x12f9156a8 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f915828 <line:19:5, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f915778 <col:5, col:8> '<dependent type>' contains-errors lvalue ->top     | | `-RecoveryExpr 0x12f915750 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915730 <col:5> 'int *' lvalue ParmVar 0x12f8fbb28 'a' 'int *'     | `-CXXDependentScopeMemberExpr 0x12f9157e0 <col:14, col:17> '<dependent type>' contains-errors lvalue ->top     |   `-RecoveryExpr 0x12f9157c0 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f915940 <line:20:5, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f915890 <col:5, col:8> '<dependent type>' contains-errors lvalue ->dmax     | | `-RecoveryExpr 0x12f915868 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915848 <col:5> 'int *' lvalue ParmVar 0x12f8fbb28 'a' 'int *'     | `-CXXDependentScopeMemberExpr 0x12f9158f8 <col:15, col:18> '<dependent type>' contains-errors lvalue ->dmax     |   `-RecoveryExpr 0x12f9158d8 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f915a58 <line:21:5, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f9159a8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->neg     | | `-RecoveryExpr 0x12f915980 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915960 <col:5> 'int *' lvalue ParmVar 0x12f8fbb28 'a' 'int *'     | `-CXXDependentScopeMemberExpr 0x12f915a10 <col:14, col:17> '<dependent type>' contains-errors lvalue ->neg     |   `-RecoveryExpr 0x12f9159f0 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f915b60 <line:23:5, col:12> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f915ac0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->d     | | `-RecoveryExpr 0x12f915a98 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915a78 <col:5> 'int *' lvalue ParmVar 0x12f8fbba8 'b' 'int *'     | `-RecoveryExpr 0x12f915b40 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f915c30 <line:24:5, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f915bc8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->top     | | `-RecoveryExpr 0x12f915ba0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915b80 <col:5> 'int *' lvalue ParmVar 0x12f8fbba8 'b' 'int *'     | `-DeclRefExpr 0x12f915c10 <col:14> 'int' lvalue Var 0x12f8fbe98 'tmp_top' 'int'     |-BinaryOperator 0x12f915d00 <line:25:5, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f915c98 <col:5, col:8> '<dependent type>' contains-errors lvalue ->dmax     | | `-RecoveryExpr 0x12f915c70 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915c50 <col:5> 'int *' lvalue ParmVar 0x12f8fbba8 'b' 'int *'     | `-DeclRefExpr 0x12f915ce0 <col:15> 'int' lvalue Var 0x12f8fbf18 'tmp_dmax' 'int'     |-BinaryOperator 0x12f915dd0 <line:26:5, col:14> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f915d68 <col:5, col:8> '<dependent type>' contains-errors lvalue ->neg     | | `-RecoveryExpr 0x12f915d40 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915d20 <col:5> 'int *' lvalue ParmVar 0x12f8fbba8 'b' 'int *'     | `-DeclRefExpr 0x12f915db0 <col:14> 'int' lvalue Var 0x12f8fbf98 'tmp_neg' 'int'     |-BinaryOperator 0x12f9161c0 <line:28:5, col:66> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f915e38 <col:5, col:8> '<dependent type>' contains-errors lvalue ->flags     | | `-RecoveryExpr 0x12f915e10 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f915df0 <col:5> 'int *' lvalue ParmVar 0x12f8fbb28 'a' 'int *'     | `-BinaryOperator 0x12f9161a0 <col:16, col:66> 'int' '|'     |   |-CallExpr 0x12f915fe8 <col:16, col:40> 'int'     |   | |-ImplicitCastExpr 0x12f915fd0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12f915f60 <col:16> 'int ()' Function 0x12f915ea8 'FLAGS_STRUCT' 'int ()'     |   | `-ImplicitCastExpr 0x12f916010 <col:29> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x12f915f80 <col:29> 'int' lvalue Var 0x12f8fbd50 'flags_old_a' 'int'     |   `-CallExpr 0x12f916160 <col:44, col:66> 'int'     |     |-ImplicitCastExpr 0x12f916148 <col:44> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12f916108 <col:44> 'int ()' Function 0x12f916050 'FLAGS_DATA' 'int ()'     |     `-ImplicitCastExpr 0x12f916188 <col:55> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12f916128 <col:55> 'int' lvalue Var 0x12f8fbdd0 'flags_old_b' 'int'     |-BinaryOperator 0x12f9163c0 <line:29:5, col:66> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f916228 <col:5, col:8> '<dependent type>' contains-errors lvalue ->flags     | | `-RecoveryExpr 0x12f916200 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f9161e0 <col:5> 'int *' lvalue ParmVar 0x12f8fbba8 'b' 'int *'     | `-BinaryOperator 0x12f9163a0 <col:16, col:66> 'int' '|'     |   |-CallExpr 0x12f9162c8 <col:16, col:40> 'int'     |   | |-ImplicitCastExpr 0x12f9162b0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12f916270 <col:16> 'int ()' Function 0x12f915ea8 'FLAGS_STRUCT' 'int ()'     |   | `-ImplicitCastExpr 0x12f9162f0 <col:29> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x12f916290 <col:29> 'int' lvalue Var 0x12f8fbdd0 'flags_old_b' 'int'     |   `-CallExpr 0x12f916360 <col:44, col:66> 'int'     |     |-ImplicitCastExpr 0x12f916348 <col:44> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12f916308 <col:44> 'int ()' Function 0x12f916050 'FLAGS_DATA' 'int ()'     |     `-ImplicitCastExpr 0x12f916388 <col:55> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12f916328 <col:55> 'int' lvalue Var 0x12f8fbd50 'flags_old_a' 'int'     |-CallExpr 0x12f916420 <line:30:5, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f9163e0 <col:5> 'int ()' Function 0x12f8fc0d8 'bn_check_top' 'int ()'     | `-RecoveryExpr 0x12f916400 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12f916488 <line:31:5, col:19> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f916448 <col:5> 'int ()' Function 0x12f8fc0d8 'bn_check_top' 'int ()'       `-RecoveryExpr 0x12f916468 <col:18> '<dependent type>' contains-errors lvalue ","20830":"`-FunctionDecl 0x15300de88  line:1:5 invalid json_object_update 'int (int *, int *)'   |-ParmVarDecl 0x15300dd28 <col:24, col:32> col:32 invalid object 'int *'   |-ParmVarDecl 0x15300dda8 <col:40, col:48> col:48 invalid other 'int *'   `-CompoundStmt 0x153027760 <line:2:1, line:15:1>     |-DeclStmt 0x15300dfc0 <line:3:5, col:20>     | `-VarDecl 0x15300df58 <col:5, col:17> col:17 used key 'const char *'     |-IfStmt 0x15300e2b8 <line:6:5, line:7:17>     | |-BinaryOperator 0x15300e250 <line:6:8, col:56> 'int' contains-errors '||'     | | |-UnaryOperator 0x15300e1b8 <col:8, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x15300e190 <col:9, col:30> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x15300e150 <col:9> 'int ()' Function 0x15300e098 'json_is_object' 'int ()'     | | |   `-RecoveryExpr 0x15300e170 <col:24> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x15300e238 <col:35, col:56> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x15300e210 <col:36, col:56> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x15300e1d0 <col:36> 'int ()' Function 0x15300e098 'json_is_object' 'int ()'     | |     `-RecoveryExpr 0x15300e1f0 <col:51> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15300e2a8 <line:7:9, col:17>     |   `-UnaryOperator 0x15300e290 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x15300e270 <col:17> 'int' 1     |-CallExpr 0x153027490 <line:9:5, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15300e3b8 <col:5> 'int ()' Function 0x15300e300 'json_object_foreach' 'int ()'     | |-RecoveryExpr 0x15300e3d8 <col:25> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x153027400 <col:32> 'const char *' lvalue Var 0x15300df58 'key' 'const char *'     | `-RecoveryExpr 0x153027470 <col:37> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x153027718 <col:44, line:12:5>     | `-IfStmt 0x1530276f8 <line:10:9, line:11:21>     |   |-CallExpr 0x153027678 <line:10:12, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1530275a8 <col:12> 'int ()' Function 0x1530274f0 'json_object_set_nocheck' 'int ()'     |   | |-RecoveryExpr 0x1530275c8 <col:36> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x1530275e8 <col:44> 'const char *' lvalue Var 0x15300df58 'key' 'const char *'     |   | `-RecoveryExpr 0x153027658 <col:49> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1530276e8 <line:11:13, col:21>     |     `-UnaryOperator 0x1530276d0 <col:20, col:21> 'int' prefix '-'     |       `-IntegerLiteral 0x1530276b0 <col:21> 'int' 1     `-ReturnStmt 0x153027750 <line:14:5, col:12>       `-IntegerLiteral 0x153027730 <col:12> 'int' 0 ","20489":"`-FunctionDecl 0x1510ff688  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1510ff788 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1510ff7f0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1510ff858 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1510ff730 <<invalid sloc>> Implicit 900 ","20506":"`-FunctionDecl 0x1561281d8  line:1:17 invalid X509_STORE_new 'int *(void)'   `-CompoundStmt 0x1561282c8 <line:2:5, line:5:5>     `-ReturnStmt 0x1561282b8 <line:4:9, col:16>       `-ImplicitCastExpr 0x1561282a0 <col:16> 'int *' <NullToPointer>         `-IntegerLiteral 0x156128280 <col:16> 'int' 0 ","20827":"`-FunctionDecl 0x12e0cbc00  line:1:12 do_add_counters 'int (struct net *, int)' static   |-ParmVarDecl 0x12e0af648 <col:28, col:40> col:40 used net 'struct net *'   |-ParmVarDecl 0x12e0af6c0 <col:45, col:56> col:56 __user 'int'   `-CompoundStmt 0x12f0090b0 <line:3:1, line:87:1>     |-DeclStmt 0x12e0cbd80 <line:4:2, col:16>     | `-VarDecl 0x12e0cbd18 <col:2, col:15> col:15 used i 'unsigned int'     |-DeclStmt 0x12e0cbf18 <line:5:2, col:29>     | |-RecordDecl 0x12e0cbd98 <col:2, col:9> col:9 struct xt_counters_info     | `-VarDecl 0x12e0cbe98 <col:2, col:26> col:26 invalid tmp 'struct xt_counters_info'     |-DeclStmt 0x12e0cc118 <line:6:2, col:27>     | |-RecordDecl 0x12e0cbf30 <col:2, col:9> col:9 struct xt_counters     | `-VarDecl 0x12e0cc098 <col:2, col:22> col:22 used paddc 'struct xt_counters *'     |-DeclStmt 0x12e0cc1b0 <line:7:2, col:27>     | `-VarDecl 0x12e0cc148 <col:2, col:15> col:15 used num_counters 'unsigned int'     |-DeclStmt 0x12e0cc248 <line:8:2, col:18>     | `-VarDecl 0x12e0cc1e0 <col:2, col:14> col:14 used name 'const char *'     |-DeclStmt 0x12e0cc2e0 <line:9:2, col:10>     | `-VarDecl 0x12e0cc278 <col:2, col:6> col:6 used size 'int'     |-DeclStmt 0x12e0cc378 <line:10:2, col:12>     | `-VarDecl 0x12e0cc310 <col:2, col:8> col:8 used ptmp 'void *'     |-DeclStmt 0x12e0cc578 <line:11:2, col:20>     | |-RecordDecl 0x12e0cc390 <col:2, col:9> col:9 struct xt_table     | `-VarDecl 0x12e0cc4f8 <col:2, col:19> col:19 used t 'struct xt_table *'     |-DeclStmt 0x12e0cc778 <line:12:2, col:37>     | |-RecordDecl 0x12e0cc590 <col:8, col:15> col:15 struct xt_table_info     | `-VarDecl 0x12e0cc6f8 <col:2, col:30> col:30 used private 'const struct xt_table_info *'     |-DeclStmt 0x12e0cc830 <line:13:2, col:13>     | `-VarDecl 0x12e0cc7a8 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x12e0cc810 <col:12> 'int' 0     |-DeclStmt 0x12e0cca38 <line:14:2, col:25>     | |-RecordDecl 0x12e0cc848 <col:2, col:9> col:9 struct arpt_entry     | `-VarDecl 0x12e0cc9b8 <col:2, col:21> col:21 used iter 'struct arpt_entry *'     |-DeclStmt 0x12e0ccad0 <line:15:2, col:21>     | `-VarDecl 0x12e0cca68 <col:2, col:15> col:15 used addend 'unsigned int'     |-CompoundStmt 0x12e0ccbd0 <line:24:2, line:27:2>     | `-BinaryOperator 0x12e0ccb40 <line:25:3, col:11> 'void *' contains-errors '='     |   |-DeclRefExpr 0x12e0ccae8 <col:3> 'void *' lvalue Var 0x12e0cc310 'ptmp' 'void *'     |   `-UnaryOperator 0x12e0ccb28 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e0ccb08 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e0cf7b0 <line:29:2, line:30:11>     | |-BinaryOperator 0x12e0cf6e8 <line:29:6, col:42> 'int' '!='     | | |-CallExpr 0x12e0cf668 <col:6, col:37> 'int'     | | | |-ImplicitCastExpr 0x12e0cf650 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x12e0cf510 <col:6> 'int ()' Function 0x12e0cf458 'copy_from_user' 'int ()'     | | | |-ImplicitCastExpr 0x12e0cf6a0 <col:21> 'void *' <LValueToRValue>     | | | | `-DeclRefExpr 0x12e0cf530 <col:21> 'void *' lvalue Var 0x12e0cc310 'ptmp' 'void *'     | | | |-ImplicitCastExpr 0x12e0cf6b8 <col:27> 'struct arpt_entry *' <LValueToRValue>     | | | | `-DeclRefExpr 0x12e0cf600 <col:27> 'struct arpt_entry *' lvalue Var 0x12e0cc9b8 'iter' 'struct arpt_entry *'     | | | `-ImplicitCastExpr 0x12e0cf6d0 <col:33> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x12e0cf568 <col:33> 'int' lvalue Var 0x12e0cc278 'size' 'int'     | | `-IntegerLiteral 0x12e0cf5c0 <col:42> 'int' 0     | `-ReturnStmt 0x12e0cf7a0 <line:30:3, col:11>     |   `-UnaryOperator 0x12e0cf788 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12e0cf770 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12e0cf750 <col:11> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x12e0cf920 <line:38:2, line:41:2>     | |-BinaryOperator 0x12e0cf858 <line:39:3, col:22> 'unsigned int' contains-errors '='     | | |-DeclRefExpr 0x12e0cf7d0 <col:3> 'unsigned int' lvalue Var 0x12e0cc148 'num_counters' 'unsigned int'     | | `-CXXDependentScopeMemberExpr 0x12e0cf810 <col:18, col:22> '<dependent type>' contains-errors lvalue .num_counters     | |   `-RecoveryExpr 0x12e0cf7f0 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x12e0cf900 <line:40:3, col:14> 'const char *' contains-errors '='     |   |-DeclRefExpr 0x12e0cf878 <col:3> 'const char *' lvalue Var 0x12e0cc1e0 'name' 'const char *'     |   `-CXXDependentScopeMemberExpr 0x12e0cf8b8 <col:10, col:14> '<dependent type>' contains-errors lvalue .name     |     `-RecoveryExpr 0x12e0cf898 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e0cfab8 <line:43:2, line:44:11>     | |-RecoveryExpr 0x12e0cf9f0 <line:43:6, col:60> '_Bool' contains-errors     | `-ReturnStmt 0x12e0cfaa8 <line:44:3, col:11>     |   `-UnaryOperator 0x12e0cfa90 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12e0cfa78 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12e0cfa58 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e0cfd00 <line:46:2, col:28> 'struct xt_counters *' contains-errors '='     | |-DeclRefExpr 0x12e0cfad8 <col:2> 'struct xt_counters *' lvalue Var 0x12e0cc098 'paddc' 'struct xt_counters *'     | `-CallExpr 0x12e0cfcd8 <col:10, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e0cfbd8 <col:10> 'int ()' Function 0x12e0cfb20 'vmalloc' 'int ()'     |   `-BinaryOperator 0x12e0cfcb8 <col:18, col:24> '<dependent type>' contains-errors '-'     |     |-RecoveryExpr 0x12e0cfc98 <col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12e0cfc10 <col:24> 'int' lvalue Var 0x12e0cc278 'size' 'int'     |-IfStmt 0x12e0cfe18 <line:47:2, line:48:11>     | |-UnaryOperator 0x12e0cfd58 <line:47:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12e0cfd40 <col:7> 'struct xt_counters *' <LValueToRValue>     | |   `-DeclRefExpr 0x12e0cfd20 <col:7> 'struct xt_counters *' lvalue Var 0x12e0cc098 'paddc' 'struct xt_counters *'     | `-ReturnStmt 0x12e0cfe08 <line:48:3, col:11>     |   `-UnaryOperator 0x12e0cfdf0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12e0cfdd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12e0cfdb8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e0d0248 <line:50:2, line:53:2>     | |-BinaryOperator 0x12e0d00a8 <line:50:6, col:56> 'int' contains-errors '!='     | | |-CallExpr 0x12e0d0070 <col:6, col:51> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12e0cfe38 <col:6> 'int ()' Function 0x12e0cf458 'copy_from_user' 'int ()'     | | | |-DeclRefExpr 0x12e0cfe58 <col:21> 'struct xt_counters *' lvalue Var 0x12e0cc098 'paddc' 'struct xt_counters *'     | | | |-BinaryOperator 0x12e0d0010 <col:28, col:35> '<dependent type>' contains-errors '+'     | | | | |-RecoveryExpr 0x12e0cfff0 <col:28> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12e0cfe90 <col:35> 'int' lvalue Var 0x12e0cc278 'size' 'int'     | | | `-BinaryOperator 0x12e0d0050 <col:41, col:47> '<dependent type>' contains-errors '-'     | | |   |-RecoveryExpr 0x12e0d0030 <col:41> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x12e0cfee8 <col:47> 'int' lvalue Var 0x12e0cc278 'size' 'int'     | | `-IntegerLiteral 0x12e0cff60 <col:56> 'int' 0     | `-CompoundStmt 0x12e0d0228 <col:59, line:53:2>     |   |-BinaryOperator 0x12e0d01a0 <line:51:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12e0d00c8 <col:3> 'int' lvalue Var 0x12e0cc7a8 'ret' 'int'     |   | `-UnaryOperator 0x12e0d0188 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x12e0d0170 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x12e0d0150 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12e0d0210 <line:52:3, col:8> 'free' 0x12e0d01c0     |-BinaryOperator 0x12e0d0eb0 <line:55:2, col:47> 'struct xt_table *' contains-errors '='     | |-DeclRefExpr 0x12e0d0268 <col:2> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'     | `-CallExpr 0x12e0d0e78 <col:6, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e0d0368 <col:6> 'int ()' Function 0x12e0d02b0 'xt_find_table_lock' 'int ()'     |   |-DeclRefExpr 0x12e0d0388 <col:25> 'struct net *' lvalue ParmVar 0x12e0af648 'net' 'struct net *'     |   |-RecoveryExpr 0x12e0d0e58 <col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12e0d03c0 <col:43> 'const char *' lvalue Var 0x12e0cc1e0 'name' 'const char *'     |-IfStmt 0x12e0d1230 <line:56:2, line:59:2>     | |-CallExpr 0x12e0d1008 <line:56:6, col:22> 'int'     | | |-ImplicitCastExpr 0x12e0d0ff0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12e0d0fb0 <col:6> 'int ()' Function 0x12e0d0ef8 'IS_ERR_OR_NULL' 'int ()'     | | `-ImplicitCastExpr 0x12e0d1030 <col:21> 'struct xt_table *' <LValueToRValue>     | |   `-DeclRefExpr 0x12e0d0fd0 <col:21> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'     | `-CompoundStmt 0x12e0d1218 <col:25, line:59:2>     |   `-GotoStmt 0x12e0d1200 <line:58:3, col:8> 'free' 0x12e0d01c0     |-CallExpr 0x12e0d1368 <line:61:2, col:19> 'int'     | `-ImplicitCastExpr 0x12e0d1350 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12e0d1330 <col:2> 'int ()' Function 0x12e0d1278 'local_bh_disable' 'int ()'     |-BinaryOperator 0x12e0d1408 <line:62:2, col:15> 'const struct xt_table_info *' contains-errors '='     | |-DeclRefExpr 0x12e0d1388 <col:2> 'const struct xt_table_info *' lvalue Var 0x12e0cc6f8 'private' 'const struct xt_table_info *'     | `-RecoveryExpr 0x12e0d13e0 <col:12, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12e0d13a8 <col:12> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'     |-IfStmt 0x12e0d1568 <line:63:2, line:66:2>     | |-BinaryOperator 0x12e0d14a8 <line:63:6, col:25> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12e0d1460 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12e0d1428 <col:6> 'const struct xt_table_info *' lvalue Var 0x12e0cc6f8 'private' 'const struct xt_table_info *'     | | `-DeclRefExpr 0x12e0d1488 <col:25> 'unsigned int' lvalue Var 0x12e0cc148 'num_counters' 'unsigned int'     | `-CompoundStmt 0x12e0d1550 <col:39, line:66:2>     |   `-GotoStmt 0x12e0d1538 <line:65:3, col:8> 'unlock_up_free' 0x12e0d14e8     |-BinaryOperator 0x12e0d15e0 <line:68:2, col:6> 'unsigned int' '='     | |-DeclRefExpr 0x12e0d1588 <col:2> 'unsigned int' lvalue Var 0x12e0cbd18 'i' 'unsigned int'     | `-ImplicitCastExpr 0x12e0d15c8 <col:6> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x12e0d15a8 <col:6> 'int' 0     |-BinaryOperator 0x12e0d1770 <line:70:2, col:33> 'unsigned int' '='     | |-DeclRefExpr 0x12e0d1600 <col:2> 'unsigned int' lvalue Var 0x12e0cca68 'addend' 'unsigned int'     | `-ImplicitCastExpr 0x12e0d1758 <col:11, col:33> 'unsigned int' <IntegralCast>     |   `-CallExpr 0x12e0d1738 <col:11, col:33> 'int'     |     `-ImplicitCastExpr 0x12e0d1720 <col:11> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12e0d1700 <col:11> 'int ()' Function 0x12e0d1648 'xt_write_recseq_begin' 'int ()'     |-CallExpr 0x12e0d1970 <line:71:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e0d1870 <col:2> 'int ()' Function 0x12e0d17b8 'xt_entry_foreach' 'int ()'     | |-DeclRefExpr 0x12e0d1890 <col:19> 'struct arpt_entry *' lvalue Var 0x12e0cc9b8 'iter' 'struct arpt_entry *'     | |-RecoveryExpr 0x12e0d18e8 <col:26, col:35> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e0d18b0 <col:26> 'const struct xt_table_info *' lvalue Var 0x12e0cc6f8 'private' 'const struct xt_table_info *'     | `-RecoveryExpr 0x12e0d1948 <col:44, col:53> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12e0d1910 <col:44> 'const struct xt_table_info *' lvalue Var 0x12e0cc6f8 'private' 'const struct xt_table_info *'     |-CompoundStmt 0x12f0088d8 <col:59, line:77:2>     | |-DeclStmt 0x12e0d1a70 <line:72:3, col:26>     | | `-VarDecl 0x12e0d1a08 <col:3, col:23> col:23 used tmp 'struct xt_counters *'     | |-BinaryOperator 0x12e0d1c48 <line:74:3, col:48> 'struct xt_counters *' contains-errors '='     | | |-DeclRefExpr 0x12e0d1a88 <col:3> 'struct xt_counters *' lvalue Var 0x12e0d1a08 'tmp' 'struct xt_counters *'     | | `-CallExpr 0x12e0d1c20 <col:9, col:48> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12e0d1b88 <col:9> 'int ()' Function 0x12e0d1ad0 'xt_get_this_cpu_counter' 'int ()'     | |   `-UnaryOperator 0x12e0d1c08 <col:33, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x12e0d1be0 <col:34, col:40> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12e0d1ba8 <col:34> 'struct arpt_entry *' lvalue Var 0x12e0cc9b8 'iter' 'struct arpt_entry *'     | `-UnaryOperator 0x12f0088c0 <line:76:3, col:5> 'unsigned int' prefix '++'     |   `-DeclRefExpr 0x12f0088a0 <col:5> 'unsigned int' lvalue Var 0x12e0cbd18 'i' 'unsigned int'     |-CallExpr 0x12f008a38 <line:78:2, col:28> 'int'     | |-ImplicitCastExpr 0x12f008a20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f0089e0 <col:2> 'int ()' Function 0x12f008928 'xt_write_recseq_end' 'int ()'     | `-ImplicitCastExpr 0x12f008a60 <col:22> 'unsigned int' <LValueToRValue>     |   `-DeclRefExpr 0x12f008a00 <col:22> 'unsigned int' lvalue Var 0x12e0cca68 'addend' 'unsigned int'     |-LabelStmt 0x12f008bb0 <line:79:2, line:80:18> 'unlock_up_free'     | `-CallExpr 0x12f008b90 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x12f008b78 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x12f008b58 <col:2> 'int ()' Function 0x12f008aa0 'local_bh_enable' 'int ()'     |-CallExpr 0x12f008d08 <line:81:2, col:19> 'int'     | |-ImplicitCastExpr 0x12f008cf0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f008cb0 <col:2> 'int ()' Function 0x12f008bf8 'xt_table_unlock' 'int ()'     | `-ImplicitCastExpr 0x12f008d30 <col:18> 'struct xt_table *' <LValueToRValue>     |   `-DeclRefExpr 0x12f008cd0 <col:18> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'     |-CallExpr 0x12f008ea8 <line:82:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f008e28 <col:2> 'int ()' Function 0x12f008d70 'module_put' 'int ()'     | `-RecoveryExpr 0x12f008e80 <col:13, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12f008e48 <col:13> 'struct xt_table *' lvalue Var 0x12e0cc4f8 't' 'struct xt_table *'     |-LabelStmt 0x12f009048 <line:83:2, line:84:13> 'free'     | `-CallExpr 0x12f009008 <col:2, col:13> 'int'     |   |-ImplicitCastExpr 0x12f008ff0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f008fb0 <col:2> 'int ()' Function 0x12f008ef8 'vfree' 'int ()'     |   `-ImplicitCastExpr 0x12f009030 <col:8> 'struct xt_counters *' <LValueToRValue>     |     `-DeclRefExpr 0x12f008fd0 <col:8> 'struct xt_counters *' lvalue Var 0x12e0cc098 'paddc' 'struct xt_counters *'     `-ReturnStmt 0x12f0090a0 <line:86:2, col:9>       `-ImplicitCastExpr 0x12f009088 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12f009068 <col:9> 'int' lvalue Var 0x12e0cc7a8 'ret' 'int' ","21121":"`-FunctionDecl 0x12503ce48  line:1:6 invalid keyctl_update_key 'long (int, int)'   |-ParmVarDecl 0x12503ccf0 <col:24, col:37> col:37 invalid id 'int'   |-ParmVarDecl 0x12503cd68 <line:2:10, col:21> col:21 __user 'int'   `-CompoundStmt 0x125056668 <line:4:1, line:41:1>     |-DeclStmt 0x12503cf80 <line:6:2, col:15>     | `-VarDecl 0x12503cf18 <col:2, col:8> col:8 used payload 'void *'     |-DeclStmt 0x12503d018 <line:7:2, col:10>     | `-VarDecl 0x12503cfb0 <col:2, col:7> col:7 used ret 'long'     |-BinaryOperator 0x12503d108 <line:9:2, col:9> 'long' contains-errors '='     | |-DeclRefExpr 0x12503d030 <col:2> 'long' lvalue Var 0x12503cfb0 'ret' 'long'     | `-UnaryOperator 0x12503d0f0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x12503d0d8 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12503d0b8 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12503d240 <line:10:2, line:11:8>     | |-BinaryOperator 0x12503d1b8 <line:10:6, col:13> 'int' contains-errors '>'     | | |-RecoveryExpr 0x12503d178 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12503d198 <col:13> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x12503d228 <line:11:3, col:8> 'error' 0x12503d1d8     |-BinaryOperator 0x12503d2d8 <line:14:2, col:12> 'void *' contains-errors '='     | |-DeclRefExpr 0x12503d260 <col:2> 'void *' lvalue Var 0x12503cf18 'payload' 'void *'     | `-RecoveryExpr 0x12503d2b8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125055da0 <line:15:2, line:24:2>     | |-DeclRefExpr 0x12503d310 <line:15:6> 'void *' lvalue Var 0x12503cf18 'payload' 'void *'     | `-CompoundStmt 0x125055d68 <col:16, line:24:2>     |   |-BinaryOperator 0x125055618 <line:16:3, col:10> 'long' contains-errors '='     |   | |-DeclRefExpr 0x12503d330 <col:3> 'long' lvalue Var 0x12503cfb0 'ret' 'long'     |   | `-UnaryOperator 0x125055600 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x12503d3d8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x12503d3b8 <col:10> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1250558c0 <line:17:3, col:37> 'void *' contains-errors '='     |   | |-DeclRefExpr 0x125055638 <col:3> 'void *' lvalue Var 0x12503cf18 'payload' 'void *'     |   | `-CallExpr 0x125055890 <col:13, col:37> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1250557b0 <col:13> 'int ()' Function 0x1250556f8 'kmalloc' 'int ()'     |   |   |-RecoveryExpr 0x125055850 <col:21> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x125055870 <col:27> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x125055948 <line:18:3, line:19:9>     |   | |-UnaryOperator 0x125055918 <line:18:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x125055900 <col:8> 'void *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1250558e0 <col:8> 'void *' lvalue Var 0x12503cf18 'payload' 'void *'     |   | `-GotoStmt 0x125055930 <line:19:4, col:9> 'error' 0x12503d1d8     |   |-BinaryOperator 0x125055a40 <line:21:3, col:10> 'long' contains-errors '='     |   | |-DeclRefExpr 0x125055968 <col:3> 'long' lvalue Var 0x12503cfb0 'ret' 'long'     |   | `-UnaryOperator 0x125055a28 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x125055a10 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x1250559f0 <col:10> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x125055d48 <line:22:3, line:23:9>     |     |-BinaryOperator 0x125055cc0 <line:22:7, col:50> 'int' contains-errors '!='     |     | |-CallExpr 0x125055c88 <col:7, col:45> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x125055b40 <col:7> 'int ()' Function 0x125055a88 'copy_from_user' 'int ()'     |     | | |-DeclRefExpr 0x125055b60 <col:22> 'void *' lvalue Var 0x12503cf18 'payload' 'void *'     |     | | |-RecoveryExpr 0x125055c48 <col:31> '<dependent type>' contains-errors lvalue     |     | | `-RecoveryExpr 0x125055c68 <col:41> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x125055be8 <col:50> 'int' 0     |     `-GotoStmt 0x125055d30 <line:23:4, col:9> 'error2' 0x125055ce0     |-IfStmt 0x1250561c0 <line:28:2, line:31:2>     | |-RecoveryExpr 0x125056050 <line:28:6, col:20> '_Bool' contains-errors     | `-CompoundStmt 0x1250561a8 <col:23, line:31:2>     |   `-GotoStmt 0x125056190 <line:30:3, col:8> 'error2' 0x125055ce0     |-LabelStmt 0x1250565c8 <line:37:1, line:38:15> 'error2'     | `-CallExpr 0x125056588 <col:2, col:15> 'int'     |   |-ImplicitCastExpr 0x125056570 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x125056500 <col:2> 'int ()' Function 0x125056448 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x1250565b0 <col:8> 'void *' <LValueToRValue>     |     `-DeclRefExpr 0x125056520 <col:8> 'void *' lvalue Var 0x12503cf18 'payload' 'void *'     `-LabelStmt 0x125056648 <line:39:1, line:40:9> 'error'       `-ReturnStmt 0x125056638 <col:2, col:9>         `-ImplicitCastExpr 0x125056620 <col:9> 'long' <LValueToRValue>           `-DeclRefExpr 0x125056600 <col:9> 'long' lvalue Var 0x12503cfb0 'ret' 'long' ","20486":"`-FunctionDecl 0x15a927bf0  line:1:6 invalid ff_rtmp_packet_destroy 'void (int *)'   |-ParmVarDecl 0x15a927b28 <col:29, col:41> col:41 referenced invalid pkt 'int *'   `-CompoundStmt 0x15a928018 <line:2:1, line:7:1>     |-IfStmt 0x15a927d00 <line:3:5, line:4:9>     | |-UnaryOperator 0x15a927cd8 <line:3:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15a927cc0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15a927ca0 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a927cf0 <line:4:9>     |-CallExpr 0x15a927f20 <line:5:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a927e80 <col:5> 'int ()' Function 0x15a927dc8 'av_freep' 'int ()'     | `-UnaryOperator 0x15a927f08 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x15a927ec0 <col:15, col:20> '<dependent type>' contains-errors lvalue ->data     |     `-RecoveryExpr 0x15a927ea0 <col:15> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x15a927ff8 <line:6:5, col:17> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x15a927f90 <col:5, col:10> '<dependent type>' contains-errors lvalue ->size       | `-RecoveryExpr 0x15a927f68 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x15a927f48 <col:5> 'int *' lvalue ParmVar 0x15a927b28 'pkt' 'int *'       `-IntegerLiteral 0x15a927fd8 <col:17> 'int' 0 ","21016":"`-FunctionDecl 0x14300de88  line:1:1 invalid send_setup_for_user 'int (int *, const char *)'   |-ParmVarDecl 0x14300dd28 <col:22, col:34> col:34 invalid self 'int *'   |-ParmVarDecl 0x14300dda8 <line:2:22, col:34> col:34 used service_name 'const char *'   `-CompoundStmt 0x1430294a8 <line:3:1, line:64:1>     |-DeclStmt 0x14300dfc0 <line:4:9, col:37>     | `-VarDecl 0x14300df58 <col:9, col:25> col:25 used display_name 'const char *'     |-DeclStmt 0x14300e058 <line:5:9, col:39>     | `-VarDecl 0x14300dff0 <col:9, col:25> col:25 used display_device 'const char *'     |-DeclStmt 0x14300e0f0 <line:6:9, col:40>     | `-VarDecl 0x14300e088 <col:9, col:25> col:25 used display_seat_id 'const char *'     |-DeclStmt 0x14300e188 <line:7:9, col:41>     | `-VarDecl 0x14300e120 <col:9, col:25> col:25 used display_hostname 'const char *'     |-DeclStmt 0x14300e220 <line:8:9, col:51>     | `-VarDecl 0x14300e1b8 <col:9, col:25> col:25 used display_x11_authority_file 'const char *'     |-DeclStmt 0x14300e2b8 <line:9:9, col:38>     | `-VarDecl 0x14300e250 <col:9, col:25> col:25 used selected_user 'const char *'     |-CallExpr 0x143027598 <line:12:9, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1430274b8 <col:9> 'int ()' Function 0x143027400 'g_assert' 'int ()'     | `-BinaryOperator 0x143027578 <col:19, col:35> 'int' contains-errors '!='     |   |-DeclRefExpr 0x1430274d8 <col:19> 'const char *' lvalue ParmVar 0x14300dda8 'service_name' 'const char *'     |   `-RecoveryExpr 0x143027558 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143027a40 <line:16:9, line:20:9> has_else     | |-BinaryOperator 0x143027838 <line:16:13, col:41> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x143027798 <col:13, col:25> '<dependent type>' contains-errors lvalue ->display_name     | | | `-CXXDependentScopeMemberExpr 0x143027750 <col:13, col:19> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x143027730 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x143027818 <col:41> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x143027948 <col:47, line:18:9>     | | `-BinaryOperator 0x143027928 <line:17:17, col:44> 'const char *' contains-errors '='     | |   |-DeclRefExpr 0x143027858 <col:17> 'const char *' lvalue Var 0x14300df58 'display_name' 'const char *'     | |   `-CXXDependentScopeMemberExpr 0x1430278e0 <col:32, col:44> '<dependent type>' contains-errors lvalue ->display_name     | |     `-CXXDependentScopeMemberExpr 0x143027898 <col:32, col:38> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x143027878 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143027a28 <line:18:16, line:20:9>     |   `-BinaryOperator 0x143027a08 <line:19:17, col:32> 'const char *' '='     |     |-DeclRefExpr 0x143027960 <col:17> 'const char *' lvalue Var 0x14300df58 'display_name' 'const char *'     |     `-ImplicitCastExpr 0x1430279f0 <col:32> 'const char *' <NoOp>     |       `-ImplicitCastExpr 0x1430279d8 <col:32> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x1430279c0 <col:32> 'char[1]' lvalue \"\"     |-IfStmt 0x143027d40 <line:21:9, line:25:9> has_else     | |-BinaryOperator 0x143027b78 <line:21:13, col:45> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x143027ad8 <col:13, col:25> '<dependent type>' contains-errors lvalue ->display_hostname     | | | `-CXXDependentScopeMemberExpr 0x143027a90 <col:13, col:19> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x143027a70 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x143027b58 <col:45> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x143027c88 <col:51, line:23:9>     | | `-BinaryOperator 0x143027c68 <line:22:17, col:48> 'const char *' contains-errors '='     | |   |-DeclRefExpr 0x143027b98 <col:17> 'const char *' lvalue Var 0x14300e120 'display_hostname' 'const char *'     | |   `-CXXDependentScopeMemberExpr 0x143027c20 <col:36, col:48> '<dependent type>' contains-errors lvalue ->display_hostname     | |     `-CXXDependentScopeMemberExpr 0x143027bd8 <col:36, col:42> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x143027bb8 <col:36> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143027d28 <line:23:16, line:25:9>     |   `-BinaryOperator 0x143027d08 <line:24:17, col:36> 'const char *' '='     |     |-DeclRefExpr 0x143027ca0 <col:17> 'const char *' lvalue Var 0x14300e120 'display_hostname' 'const char *'     |     `-ImplicitCastExpr 0x143027cf0 <col:36> 'const char *' <NoOp>     |       `-ImplicitCastExpr 0x143027cd8 <col:36> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x143027cc0 <col:36> 'char[1]' lvalue \"\"     |-IfStmt 0x143028040 <line:26:9, line:30:9> has_else     | |-BinaryOperator 0x143027e78 <line:26:13, col:43> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x143027dd8 <col:13, col:25> '<dependent type>' contains-errors lvalue ->display_device     | | | `-CXXDependentScopeMemberExpr 0x143027d90 <col:13, col:19> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x143027d70 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x143027e58 <col:43> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x143027f88 <col:49, line:28:9>     | | `-BinaryOperator 0x143027f68 <line:27:17, col:46> 'const char *' contains-errors '='     | |   |-DeclRefExpr 0x143027e98 <col:17> 'const char *' lvalue Var 0x14300dff0 'display_device' 'const char *'     | |   `-CXXDependentScopeMemberExpr 0x143027f20 <col:34, col:46> '<dependent type>' contains-errors lvalue ->display_device     | |     `-CXXDependentScopeMemberExpr 0x143027ed8 <col:34, col:40> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x143027eb8 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143028028 <line:28:16, line:30:9>     |   `-BinaryOperator 0x143028008 <line:29:17, col:34> 'const char *' '='     |     |-DeclRefExpr 0x143027fa0 <col:17> 'const char *' lvalue Var 0x14300dff0 'display_device' 'const char *'     |     `-ImplicitCastExpr 0x143027ff0 <col:34> 'const char *' <NoOp>     |       `-ImplicitCastExpr 0x143027fd8 <col:34> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x143027fc0 <col:34> 'char[1]' lvalue \"\"     |-IfStmt 0x143028340 <line:31:9, line:35:9> has_else     | |-BinaryOperator 0x143028178 <line:31:13, col:44> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x1430280d8 <col:13, col:25> '<dependent type>' contains-errors lvalue ->display_seat_id     | | | `-CXXDependentScopeMemberExpr 0x143028090 <col:13, col:19> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x143028070 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x143028158 <col:44> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x143028288 <col:50, line:33:9>     | | `-BinaryOperator 0x143028268 <line:32:17, col:47> 'const char *' contains-errors '='     | |   |-DeclRefExpr 0x143028198 <col:17> 'const char *' lvalue Var 0x14300e088 'display_seat_id' 'const char *'     | |   `-CXXDependentScopeMemberExpr 0x143028220 <col:35, col:47> '<dependent type>' contains-errors lvalue ->display_seat_id     | |     `-CXXDependentScopeMemberExpr 0x1430281d8 <col:35, col:41> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x1430281b8 <col:35> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143028328 <line:33:16, line:35:9>     |   `-BinaryOperator 0x143028308 <line:34:17, col:35> 'const char *' '='     |     |-DeclRefExpr 0x1430282a0 <col:17> 'const char *' lvalue Var 0x14300e088 'display_seat_id' 'const char *'     |     `-ImplicitCastExpr 0x1430282f0 <col:35> 'const char *' <NoOp>     |       `-ImplicitCastExpr 0x1430282d8 <col:35> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x1430282c0 <col:35> 'char[1]' lvalue \"\"     |-IfStmt 0x143028a68 <line:36:9, line:40:9> has_else     | |-BinaryOperator 0x1430288a0 <line:36:13, col:55> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x143028800 <col:13, col:25> '<dependent type>' contains-errors lvalue ->display_x11_authority_file     | | | `-CXXDependentScopeMemberExpr 0x143028390 <col:13, col:19> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x143028370 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x143028880 <col:55> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1430289b0 <col:61, line:38:9>     | | `-BinaryOperator 0x143028990 <line:37:17, col:58> 'const char *' contains-errors '='     | |   |-DeclRefExpr 0x1430288c0 <col:17> 'const char *' lvalue Var 0x14300e1b8 'display_x11_authority_file' 'const char *'     | |   `-CXXDependentScopeMemberExpr 0x143028948 <col:46, col:58> '<dependent type>' contains-errors lvalue ->display_x11_authority_file     | |     `-CXXDependentScopeMemberExpr 0x143028900 <col:46, col:52> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x1430288e0 <col:46> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143028a50 <line:38:16, line:40:9>     |   `-BinaryOperator 0x143028a30 <line:39:17, col:46> 'const char *' '='     |     |-DeclRefExpr 0x1430289c8 <col:17> 'const char *' lvalue Var 0x14300e1b8 'display_x11_authority_file' 'const char *'     |     `-ImplicitCastExpr 0x143028a18 <col:46> 'const char *' <NoOp>     |       `-ImplicitCastExpr 0x143028a00 <col:46> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x1430289e8 <col:46> 'char[1]' lvalue \"\"     |-IfStmt 0x143028d68 <line:41:9, line:45:9> has_else     | |-BinaryOperator 0x143028ba0 <line:41:13, col:42> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x143028b00 <col:13, col:25> '<dependent type>' contains-errors lvalue ->selected_user     | | | `-CXXDependentScopeMemberExpr 0x143028ab8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x143028a98 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x143028b80 <col:42> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x143028cb0 <col:48, line:43:9>     | | `-BinaryOperator 0x143028c90 <line:42:17, col:45> 'const char *' contains-errors '='     | |   |-DeclRefExpr 0x143028bc0 <col:17> 'const char *' lvalue Var 0x14300e250 'selected_user' 'const char *'     | |   `-CXXDependentScopeMemberExpr 0x143028c48 <col:33, col:45> '<dependent type>' contains-errors lvalue ->selected_user     | |     `-CXXDependentScopeMemberExpr 0x143028c00 <col:33, col:39> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x143028be0 <col:33> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143028d50 <line:43:16, line:45:9>     |   `-BinaryOperator 0x143028d30 <line:44:17, col:33> 'const char *' '='     |     |-DeclRefExpr 0x143028cc8 <col:17> 'const char *' lvalue Var 0x14300e250 'selected_user' 'const char *'     |     `-ImplicitCastExpr 0x143028d18 <col:33> 'const char *' <NoOp>     |       `-ImplicitCastExpr 0x143028d00 <col:33> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x143028ce8 <col:33> 'char[1]' lvalue \"\"     |-CallExpr 0x143028fb0 <line:47:9, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143028e78 <col:9> 'int ()' Function 0x143028dc0 'g_debug' 'int ()'     | |-StringLiteral 0x143028ee0 <col:18> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x143028f68 <col:25, col:37> '<dependent type>' contains-errors lvalue ->selected_user     |   `-CXXDependentScopeMemberExpr 0x143028f20 <col:25, col:31> '<dependent type>' contains-errors lvalue ->priv     |     `-RecoveryExpr 0x143028f00 <col:25> '<dependent type>' contains-errors lvalue     `-IfStmt 0x143029488 <line:49:9, line:63:9>       |-BinaryOperator 0x143029070 <line:49:13, col:29> 'int' contains-errors '!='       | |-RecoveryExpr 0x143029030 <col:13> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x143029050 <col:29> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x143029478 <col:35, line:63:9> ","21077":"`-FunctionDecl 0x148128238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x148128158 <col:12> col:12 FilesystemIterator 'int'   |-ParmVarDecl 0x1481280d8 <col:32> col:32 current 'int'   `-CompoundStmt 0x148141400 <line:2:1, line:19:1>     |-IfStmt 0x148128628 <line:5:2, line:7:2>     | |-BinaryOperator 0x1481285e0 <line:5:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x1481285a0 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x148128588 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x148128490 <col:6> 'int ()' Function 0x1481283d8 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x1481285c0 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x148128610 <col:47, line:7:2>     |   `-ReturnStmt 0x148128600 <line:6:3>     `-IfStmt 0x1481413d0 <line:9:2, line:18:2> has_else       |-CallExpr 0x148140a00 <line:9:6, col:67> '<dependent type>' contains-errors       | |-DeclRefExpr 0x148128728 <col:6> 'int ()' Function 0x148128670 'SPL_FILE_DIR_CURRENT' 'int ()'       | |-RecoveryExpr 0x1481287a8 <col:27> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1481287c8 <col:35> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x148140e68 <col:70, line:12:2>       | `-CallExpr 0x148140e30 <line:11:3, col:61> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x148140c28 <col:3> 'int ()' Function 0x148140b70 'RETURN_STRINGL' 'int ()'       |   |-CXXDependentScopeMemberExpr 0x148140d80 <col:18, col:26> '<dependent type>' contains-errors lvalue ->file_name       |   | `-RecoveryExpr 0x148140d60 <col:18> '<dependent type>' contains-errors lvalue       |   |-CXXDependentScopeMemberExpr 0x148140de8 <col:37, col:45> '<dependent type>' contains-errors lvalue ->file_name_len       |   | `-RecoveryExpr 0x148140dc8 <col:37> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x148140d08 <col:60> 'int' 1       `-IfStmt 0x1481413a0 <line:12:9, line:18:2> has_else         |-CallExpr 0x148140f40 <line:12:13, col:74> '<dependent type>' contains-errors         | |-DeclRefExpr 0x148140e80 <col:13> 'int ()' Function 0x148128670 'SPL_FILE_DIR_CURRENT' 'int ()'         | |-RecoveryExpr 0x148140f00 <col:34> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x148140f20 <col:42> '<dependent type>' contains-errors lvalue         |-CompoundStmt 0x1481410b0 <col:77, line:15:2>         `-CompoundStmt 0x148141388 <col:9, line:18:2>           `-CallExpr 0x148141350 <line:16:3, col:30> 'int'             |-ImplicitCastExpr 0x148141338 <col:3> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x1481411a0 <col:3> 'int ()' Function 0x1481410e8 'RETURN_ZVAL' 'int ()'             |-CallExpr 0x1481412d8 <col:15, col:23> 'int'             | `-ImplicitCastExpr 0x1481412c0 <col:15> 'int (*)()' <FunctionToPointerDecay>             |   `-DeclRefExpr 0x1481412a0 <col:15> 'int ()' Function 0x1481411e8 'getThis' 'int ()'             |-IntegerLiteral 0x1481412f8 <col:26> 'int' 1             `-IntegerLiteral 0x148141318 <col:29> 'int' 0 ","20887":"`-FunctionDecl 0x12f039878  line:1:12 atalk_create 'int (struct net *, struct socket *, int, int)' static   |-ParmVarDecl 0x12f01f848 <col:25, col:37> col:37 used net 'struct net *'   |-ParmVarDecl 0x12f039628 <col:42, col:57> col:57 used sock 'struct socket *'   |-ParmVarDecl 0x12f0396a8 <col:63, col:67> col:67 protocol 'int'   |-ParmVarDecl 0x12f039728 <line:2:4, col:8> col:8 used kern 'int'   `-CompoundStmt 0x130114268 <line:3:1, line:25:1>     |-DeclStmt 0x12f039b78 <line:4:2, col:17>     | |-RecordDecl 0x12f039988 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x12f039af8 <col:2, col:15> col:15 used sk 'struct sock *'     |-DeclStmt 0x12f039cc0 <line:5:2, col:27>     | `-VarDecl 0x12f039ba8 <col:2, col:12> col:6 used rc 'int' cinit     |   `-UnaryOperator 0x12f039ca8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12f039c90 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12f039c70 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f039fd0 <line:7:2, line:8:11>     | |-UnaryOperator 0x12f039f10 <line:7:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12f039ee0 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12f039df0 <col:7> 'int ()' Function 0x12f039d38 'net_eq' 'int ()'     | |   |-DeclRefExpr 0x12f039e10 <col:14> 'struct net *' lvalue ParmVar 0x12f01f848 'net' 'struct net *'     | |   `-UnaryOperator 0x12f039ec8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x12f039ea8 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f039fc0 <line:8:3, col:11>     |   `-UnaryOperator 0x12f039fa8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12f039f90 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12f039f70 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f03a248 <line:11:2, line:12:8>     | |-BinaryOperator 0x12f03a1c0 <line:11:6, col:46> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12f03a160 <col:6, col:20> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x12f03a028 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12f039ff0 <col:6> 'struct socket *' lvalue ParmVar 0x12f039628 'sock' 'struct socket *'     | | | `-RecoveryExpr 0x12f03a140 <col:20> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12f03a1a0 <col:32, col:46> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x12f03a0c0 <col:32, col:38> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12f03a088 <col:32> 'struct socket *' lvalue ParmVar 0x12f039628 'sock' 'struct socket *'     | |   `-RecoveryExpr 0x12f03a180 <col:46> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x12f03a230 <line:12:3, col:8> 'out' 0x12f03a1e0     |-BinaryOperator 0x12f03a340 <line:13:2, col:8> 'int' contains-errors '='     | |-DeclRefExpr 0x12f03a268 <col:2> 'int' contains-errors lvalue Var 0x12f039ba8 'rc' 'int'     | `-UnaryOperator 0x12f03a328 <col:7, col:8> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x12f03a310 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12f03a2f0 <col:8> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x130113c48 <line:14:2, col:63> 'struct sock *' contains-errors '='     | |-DeclRefExpr 0x12f03a360 <col:2> 'struct sock *' lvalue Var 0x12f039af8 'sk' 'struct sock *'     | `-CallExpr 0x130113c00 <col:7, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f03a460 <col:7> 'int ()' Function 0x12f03a3a8 'sk_alloc' 'int ()'     |   |-DeclRefExpr 0x12f03a480 <col:16> 'struct net *' lvalue ParmVar 0x12f01f848 'net' 'struct net *'     |   |-RecoveryExpr 0x12f03a588 <col:21> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x12f03a5a8 <col:35> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x12f03a5e8 <col:47, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12f03a5c8 <col:48> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12f03a500 <col:59> 'int' lvalue ParmVar 0x12f039728 'kern' 'int'     |-IfStmt 0x130113cd0 <line:15:2, line:16:8>     | |-UnaryOperator 0x130113ca0 <line:15:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x130113c88 <col:7> 'struct sock *' <LValueToRValue>     | |   `-DeclRefExpr 0x130113c68 <col:7> 'struct sock *' lvalue Var 0x12f039af8 'sk' 'struct sock *'     | `-GotoStmt 0x130113cb8 <line:16:3, col:8> 'out' 0x12f03a1e0     |-BinaryOperator 0x130113d30 <line:17:2, col:7> 'int' contains-errors '='     | |-DeclRefExpr 0x130113cf0 <col:2> 'int' contains-errors lvalue Var 0x12f039ba8 'rc' 'int'     | `-IntegerLiteral 0x130113d10 <col:7> 'int' 0     |-BinaryOperator 0x130113e38 <line:18:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130113d88 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130113d50 <col:2> 'struct socket *' lvalue ParmVar 0x12f039628 'sock' 'struct socket *'     | `-UnaryOperator 0x130113e20 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x130113e00 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130113fe8 <line:19:2, col:25> 'int'     | |-ImplicitCastExpr 0x130113fd0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x130113f38 <col:2> 'int ()' Function 0x130113e80 'sock_init_data' 'int ()'     | |-ImplicitCastExpr 0x130114018 <col:17> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x130113f58 <col:17> 'struct socket *' lvalue ParmVar 0x12f039628 'sock' 'struct socket *'     | `-ImplicitCastExpr 0x130114030 <col:23> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x130113f78 <col:23> 'struct sock *' lvalue Var 0x12f039af8 'sk' 'struct sock *'     |-CallExpr 0x1301141d0 <line:22:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130114128 <col:2> 'int ()' Function 0x130114070 'sock_set_flag' 'int ()'     | |-DeclRefExpr 0x130114148 <col:16> 'struct sock *' lvalue Var 0x12f039af8 'sk' 'struct sock *'     | `-RecoveryExpr 0x1301141b0 <col:20> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x130114248 <line:23:1, line:24:9> 'out'       `-ReturnStmt 0x130114238 <col:2, col:9>         `-ImplicitCastExpr 0x130114220 <col:9> 'int' contains-errors <LValueToRValue>           `-DeclRefExpr 0x130114200 <col:9> 'int' contains-errors lvalue Var 0x12f039ba8 'rc' 'int' ","20626":"`-FunctionDecl 0x14b009858  col:12 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x14b009958 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14b009900 <<invalid sloc>> Implicit 902 ","20365":"`-FunctionDecl 0x12b1039e0  col:7 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12b103ae0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12b103b48 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12b103bb0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12b103a88 <<invalid sloc>> Implicit 882 ","20493":"`-FunctionDecl 0x11d00de08  col:10 invalid is_sameY 'int (const int)'   `-ParmVarDecl 0x11d00dcf0 <col:19, <invalid sloc>> col:29 invalid 'const int' ","20409":"`-FunctionDecl 0x125928758  line:1:12 i40e_resume_port_tx 'int (struct i40e_pf *)' static   |-ParmVarDecl 0x125928648 <col:32, col:48> col:48 used pf 'struct i40e_pf *'   `-CompoundStmt 0x125942918 <line:2:1, line:18:1>     |-DeclStmt 0x125940cb0 <line:3:2, col:30>     | |-RecordDecl 0x125940a50 <col:2, col:9> col:9 struct i40e_hw     | `-VarDecl 0x125940bb8 <col:2, col:28> col:18 used hw 'struct i40e_hw *' cinit     |   `-UnaryOperator 0x125940c80 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x125940c58 <col:24, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x125940c20 <col:24> 'struct i40e_pf *' lvalue ParmVar 0x125928648 'pf' 'struct i40e_pf *'     |-DeclStmt 0x125940d48 <line:4:2, col:9>     | `-VarDecl 0x125940ce0 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x125940fa8 <line:6:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x125940d60 <col:2> 'int' lvalue Var 0x125940ce0 'ret' 'int'     | `-CallExpr 0x125940f78 <col:8, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125940eb0 <col:8> 'int ()' Function 0x125940df8 'i40e_aq_resume_port_tx' 'int ()'     |   |-DeclRefExpr 0x125940ed0 <col:31> 'struct i40e_hw *' contains-errors lvalue Var 0x125940bb8 'hw' 'struct i40e_hw *'     |   `-RecoveryExpr 0x125940f58 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1259428b0 <line:7:2, line:15:2>     | |-ImplicitCastExpr 0x125940fe8 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x125940fc8 <col:6> 'int' lvalue Var 0x125940ce0 'ret' 'int'     | `-CompoundStmt 0x125942888 <col:11, line:15:2>     |   |-CallExpr 0x125941680 <line:8:3, line:11:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1259410e0 <line:8:3> 'int ()' Function 0x125941028 'dev_info' 'int ()'     |   | |-UnaryOperator 0x1259411a8 <col:12, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x125941160 <col:13, col:23> '<dependent type>' contains-errors lvalue ->dev     |   | |   `-RecoveryExpr 0x125941138 <col:13, col:17> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x125941100 <col:13> 'struct i40e_pf *' lvalue ParmVar 0x125928648 'pf' 'struct i40e_pf *'     |   | |-StringLiteral 0x125941200 <line:9:5> 'char[4]' lvalue \"STR\"     |   | |-CallExpr 0x1259413b8 <line:10:6, col:32> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x125941300 <col:6> 'int ()' Function 0x125941248 'i40e_stat_str' 'int ()'     |   | | |-UnaryOperator 0x125941380 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | | `-RecoveryExpr 0x125941358 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   | | |   `-DeclRefExpr 0x125941320 <col:21> 'struct i40e_pf *' lvalue ParmVar 0x125928648 'pf' 'struct i40e_pf *'     |   | | `-DeclRefExpr 0x125941398 <col:29> 'int' lvalue Var 0x125940ce0 'ret' 'int'     |   | `-CallExpr 0x125941650 <line:11:6, col:52> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1259414c8 <col:6> 'int ()' Function 0x125941410 'i40e_aq_str' 'int ()'     |   |   |-UnaryOperator 0x125941548 <col:18, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x125941520 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x1259414e8 <col:19> 'struct i40e_pf *' lvalue ParmVar 0x125928648 'pf' 'struct i40e_pf *'     |   |   `-CXXDependentScopeMemberExpr 0x125941608 <col:27, col:37> '<dependent type>' contains-errors lvalue .asq_last_status     |   |     `-CXXDependentScopeMemberExpr 0x1259415c0 <col:27, col:34> '<dependent type>' contains-errors lvalue .aq     |   |       `-RecoveryExpr 0x125941598 <col:27, col:31> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x125941560 <col:27> 'struct i40e_pf *' lvalue ParmVar 0x125928648 'pf' 'struct i40e_pf *'     |   |-CallExpr 0x125941888 <line:13:3, col:47> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1259417a0 <col:3> 'int ()' Function 0x1259416e8 'set_bit' 'int ()'     |   | |-RecoveryExpr 0x125941868 <col:11> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x125941810 <col:38, col:42> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1259417d8 <col:38> 'struct i40e_pf *' lvalue ParmVar 0x125928648 'pf' 'struct i40e_pf *'     |   `-CallExpr 0x125942848 <line:14:3, col:33> 'int'     |     |-ImplicitCastExpr 0x125942830 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x125941998 <col:3> 'int ()' Function 0x1259418e0 'i40e_service_event_schedule' 'int ()'     |     `-ImplicitCastExpr 0x125942870 <col:31> 'struct i40e_pf *' <LValueToRValue>     |       `-DeclRefExpr 0x1259419b8 <col:31> 'struct i40e_pf *' lvalue ParmVar 0x125928648 'pf' 'struct i40e_pf *'     `-ReturnStmt 0x125942908 <line:17:2, col:9>       `-ImplicitCastExpr 0x1259428f0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1259428d0 <col:9> 'int' lvalue Var 0x125940ce0 'ret' 'int' ","20212":"`-FunctionDecl 0x138128488  line:1:19 invalid xt_request_find_target 'struct xt_target *(int, const char *, int)'   |-ParmVarDecl 0x138128190 <col:42, col:45> col:45 invalid af 'int'   |-ParmVarDecl 0x138128210 <col:49, col:61> col:61 used name 'const char *'   |-ParmVarDecl 0x138128290 <col:67, col:70> col:70 invalid revision 'int'   `-CompoundStmt 0x138141da0 <line:2:1, line:12:1>     |-DeclStmt 0x138128640 <line:3:2, col:26>     | `-VarDecl 0x1381285d8 <col:2, col:20> col:20 used target 'struct xt_target *'     |-BinaryOperator 0x138141898 <line:5:2, col:44> 'struct xt_target *' contains-errors '='     | |-DeclRefExpr 0x138128658 <col:2> 'struct xt_target *' lvalue Var 0x1381285d8 'target' 'struct xt_target *'     | `-CallExpr 0x138141860 <col:11, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1381287d0 <col:11> 'int ()' Function 0x138128718 'xt_find_target' 'int ()'     |   |-RecoveryExpr 0x138141800 <col:26> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x138141820 <col:30> 'const char *' lvalue ParmVar 0x138128210 'name' 'const char *'     |   `-RecoveryExpr 0x138141840 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138141d38 <line:6:2, line:9:2>     | |-CallExpr 0x138141a28 <line:6:6, col:19> 'int'     | | |-ImplicitCastExpr 0x138141a10 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x138141998 <col:6> 'int ()' Function 0x1381418e0 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x138141a50 <col:13> 'struct xt_target *' <LValueToRValue>     | |   `-DeclRefExpr 0x1381419b8 <col:13> 'struct xt_target *' lvalue Var 0x1381285d8 'target' 'struct xt_target *'     | `-CompoundStmt 0x138141d20 <col:22, line:9:2>     |   `-BinaryOperator 0x138141d00 <line:8:3, col:45> 'struct xt_target *' contains-errors '='     |     |-DeclRefExpr 0x138141c28 <col:3> 'struct xt_target *' lvalue Var 0x1381285d8 'target' 'struct xt_target *'     |     `-CallExpr 0x138141cc8 <col:12, col:45> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x138141c48 <col:12> 'int ()' Function 0x138128718 'xt_find_target' 'int ()'     |       |-RecoveryExpr 0x138141c68 <col:27> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x138141c88 <col:31> 'const char *' lvalue ParmVar 0x138128210 'name' 'const char *'     |       `-RecoveryExpr 0x138141ca8 <col:37> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x138141d90 <line:11:2, col:9>       `-ImplicitCastExpr 0x138141d78 <col:9> 'struct xt_target *' <LValueToRValue>         `-DeclRefExpr 0x138141d58 <col:9> 'struct xt_target *' lvalue Var 0x1381285d8 'target' 'struct xt_target *' ","20858":"`-FunctionDecl 0x13b00df68  line:1:27 invalid PushColormapIndex 'int (int *, const int, int *)' static inline   |-ParmVarDecl 0x13b00dd28 <col:45, col:52> col:52 invalid image 'int *'   |-ParmVarDecl 0x13b00dda8 <line:2:3, col:16> col:16 invalid index 'const int'   |-ParmVarDecl 0x13b00de28 <col:22, col:41> col:41 invalid range_exception 'int *'   `-CompoundStmt 0x13b00e228 <line:3:1, line:8:1>     `-BinaryOperator 0x13b00e1f0 <line:6:3, col:20> '<dependent type>' contains-errors '='       |-UnaryOperator 0x13b00e1b8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x13b00e1a0 <col:4> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x13b00e0e8 <col:4> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x13b00e1d0 <col:20> '<dependent type>' contains-errors lvalue ","20964":"`-FunctionDecl 0x14c06cca0  col:13 implicit used strtol 'long (const char *, char **, int)' extern   |-ParmVarDecl 0x14c06cda0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14c06ce08 <<invalid sloc>> <invalid sloc> 'char **'   |-ParmVarDecl 0x14c06ce70 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x14c06cd48 <<invalid sloc>> Implicit 877 ","20558":"`-FunctionDecl 0x15a140be0  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15a140ce0 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15a140c88 <<invalid sloc>> Implicit 873 ","21036":"`-FunctionDecl 0x155941778  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x155941878 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x155941820 <<invalid sloc>> Implicit 873 ","20666":"`-FunctionDecl 0x11e128678  line:1:1 invalid copyCharacters 'int (int, int, const int *, const int *, int *, int *, int, int *, int *)'   |-ParmVarDecl 0x11e1280d8 <col:16, col:20> col:20 used from 'int'   |-ParmVarDecl 0x11e128158 <col:26, col:30> col:30 used to 'int'   |-ParmVarDecl 0x11e1281f0 <col:34, col:64> col:64 invalid table 'const int *'   |-ParmVarDecl 0x11e128270 <line:2:3, col:19> col:19 invalid input 'const int *'   |-ParmVarDecl 0x11e128328 <col:26, col:37> col:37 referenced invalid output 'int *'   |-ParmVarDecl 0x11e1283a8 <col:45, col:50> col:50 used posMapping 'int *'   |-ParmVarDecl 0x11e128428 <col:62, col:66> col:66 used transOpcode 'int'   |-ParmVarDecl 0x11e1284a8 <line:3:3, col:8> col:8 used cursorPosition 'int *'   |-ParmVarDecl 0x11e128528 <col:24, col:29> col:29 used cursorStatus 'int *'   `-CompoundStmt 0x11e142560 <col:43, line:24:1>     |-IfStmt 0x11e142500 <line:4:2, line:21:2> has_else     | |-BinaryOperator 0x11e1287e0 <line:4:6, col:21> 'int' contains-errors '=='     | | |-DeclRefExpr 0x11e128768 <col:6> 'int' lvalue ParmVar 0x11e128428 'transOpcode' 'int'     | | `-RecoveryExpr 0x11e1287c0 <col:21> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x11e141d08 <col:34, line:11:2>     | | `-WhileStmt 0x11e141ce8 <line:5:3, line:10:3>     | |   |-BinaryOperator 0x11e141870 <line:5:10, col:17> 'int' '<'     | |   | |-ImplicitCastExpr 0x11e141840 <col:10> 'int' <LValueToRValue>     | |   | | `-DeclRefExpr 0x11e141800 <col:10> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     | |   | `-ImplicitCastExpr 0x11e141858 <col:17> 'int' <LValueToRValue>     | |   |   `-DeclRefExpr 0x11e141820 <col:17> 'int' lvalue ParmVar 0x11e128158 'to' 'int'     | |   `-CompoundStmt 0x11e141cc8 <col:21, line:10:3>     | |     |-IfStmt 0x11e141c70 <line:6:4, line:8:12>     | |     | |-UnaryOperator 0x11e141c28 <line:6:8, line:7:35> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     | | `-CallExpr 0x11e141bc8 <line:6:9, line:7:35> '<dependent type>' contains-errors     | |     | |   |-DeclRefExpr 0x11e1419f0 <line:6:9> 'int ()' Function 0x11e141938 'putCharacter' 'int ()'     | |     | |   |-ArraySubscriptExpr 0x11e141ac8 <col:22, col:39> '<dependent type>' contains-errors lvalue     | |     | |   | |-ImplicitCastExpr 0x11e141a98 <col:22, col:29> '<dependent type>' contains-errors <LValueToRValue>     | |     | |   | | `-CXXDependentScopeMemberExpr 0x11e141a30 <col:22, col:29> '<dependent type>' contains-errors lvalue ->chars     | |     | |   | |   `-RecoveryExpr 0x11e141a10 <col:22> '<dependent type>' contains-errors lvalue     | |     | |   | `-ImplicitCastExpr 0x11e141ab0 <col:35> 'int' <LValueToRValue>     | |     | |   |   `-DeclRefExpr 0x11e141a78 <col:35> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     | |     | |   |-RecoveryExpr 0x11e141ae8 <col:42> '<dependent type>' contains-errors lvalue     | |     | |   |-DeclRefExpr 0x11e141b08 <col:49> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     | |     | |   |-RecoveryExpr 0x11e141b28 <col:55> '<dependent type>' contains-errors lvalue     | |     | |   |-RecoveryExpr 0x11e141b48 <col:62> '<dependent type>' contains-errors lvalue     | |     | |   |-DeclRefExpr 0x11e141b68 <col:70> 'int *' lvalue ParmVar 0x11e1283a8 'posMapping' 'int *'     | |     | |   |-DeclRefExpr 0x11e141b88 <line:7:7> 'int *' lvalue ParmVar 0x11e1284a8 'cursorPosition' 'int *'     | |     | |   `-DeclRefExpr 0x11e141ba8 <col:23> 'int *' lvalue ParmVar 0x11e128528 'cursorStatus' 'int *'     | |     | `-ReturnStmt 0x11e141c60 <line:8:5, col:12>     | |     |   `-IntegerLiteral 0x11e141c40 <col:12> 'int' 0     | |     `-UnaryOperator 0x11e141cb0 <line:9:4, col:8> 'int' postfix '++'     | |       `-DeclRefExpr 0x11e141c90 <col:4> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     | `-CompoundStmt 0x11e1424e8 <line:11:9, line:21:2>     |   `-IfStmt 0x11e1424c8 <line:12:3, line:20:3>     |     |-BinaryOperator 0x11e141d90 <line:12:7, col:12> 'int' '>'     |     | |-ImplicitCastExpr 0x11e141d60 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x11e141d20 <col:7> 'int' lvalue ParmVar 0x11e128158 'to' 'int'     |     | `-ImplicitCastExpr 0x11e141d78 <col:12> 'int' <LValueToRValue>     |     |   `-DeclRefExpr 0x11e141d40 <col:12> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     |     `-CompoundStmt 0x11e1424a8 <col:18, line:20:3>     |       |-IfStmt 0x11e141f70 <line:13:4, col:65>     |       | |-BinaryOperator 0x11e141f20 <col:8, col:47> 'int' contains-errors '>'     |       | | |-ParenExpr 0x11e141e98 <col:8, col:35> '<dependent type>' contains-errors     |       | | | `-BinaryOperator 0x11e141e78 <col:9, col:31> '<dependent type>' contains-errors '-'     |       | | |   |-BinaryOperator 0x11e141e38 <col:9, col:26> '<dependent type>' contains-errors '+'     |       | | |   | |-CXXDependentScopeMemberExpr 0x11e141dd0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->length     |       | | |   | | `-RecoveryExpr 0x11e141db0 <col:9> '<dependent type>' contains-errors lvalue     |       | | |   | `-DeclRefExpr 0x11e141e18 <col:26> 'int' lvalue ParmVar 0x11e128158 'to' 'int'     |       | | |   `-DeclRefExpr 0x11e141e58 <col:31> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     |       | | `-CXXDependentScopeMemberExpr 0x11e141ed8 <col:39, col:47> '<dependent type>' contains-errors lvalue ->maxlength     |       | |   `-RecoveryExpr 0x11e141eb8 <col:39> '<dependent type>' contains-errors lvalue     |       | `-ReturnStmt 0x11e141f60 <col:58, col:65>     |       |   `-IntegerLiteral 0x11e141f40 <col:65> 'int' 0     |       `-WhileStmt 0x11e142488 <line:14:4, line:19:4>     |         |-BinaryOperator 0x11e142000 <line:14:11, col:16> 'int' '>'     |         | |-ImplicitCastExpr 0x11e141fd0 <col:11> 'int' <LValueToRValue>     |         | | `-DeclRefExpr 0x11e141f90 <col:11> 'int' lvalue ParmVar 0x11e128158 'to' 'int'     |         | `-ImplicitCastExpr 0x11e141fe8 <col:16> 'int' <LValueToRValue>     |         |   `-DeclRefExpr 0x11e141fb0 <col:16> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     |         `-CompoundStmt 0x11e142458 <col:22, line:19:4>     |           |-BinaryOperator 0x11e142118 <line:15:5, col:34> '<dependent type>' contains-errors '='     |           | |-ArraySubscriptExpr 0x11e1420d8 <col:5, col:30> '<dependent type>' contains-errors lvalue     |           | | |-ImplicitCastExpr 0x11e1420a8 <col:5> 'int *' <LValueToRValue>     |           | | | `-DeclRefExpr 0x11e142020 <col:5> 'int *' lvalue ParmVar 0x11e1283a8 'posMapping' 'int *'     |           | | `-ImplicitCastExpr 0x11e1420c0 <col:16, col:24> '<dependent type>' contains-errors <LValueToRValue>     |           | |   `-CXXDependentScopeMemberExpr 0x11e142060 <col:16, col:24> '<dependent type>' contains-errors lvalue ->length     |           | |     `-RecoveryExpr 0x11e142040 <col:16> '<dependent type>' contains-errors lvalue     |           | `-DeclRefExpr 0x11e1420f8 <col:34> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     |           |-BinaryOperator 0x11e142358 <line:16:5, col:54> '<dependent type>' contains-errors '='     |           | |-ArraySubscriptExpr 0x11e142260 <col:5, col:33> '<dependent type>' contains-errors lvalue     |           | | |-ImplicitCastExpr 0x11e142230 <col:5, col:13> '<dependent type>' contains-errors <LValueToRValue>     |           | | | `-CXXDependentScopeMemberExpr 0x11e142180 <col:5, col:13> '<dependent type>' contains-errors lvalue ->chars     |           | | |   `-RecoveryExpr 0x11e142158 <col:5> '<dependent type>' contains-errors lvalue     |           | | |     `-DeclRefExpr 0x11e142138 <col:5> 'int *' lvalue ParmVar 0x11e128328 'output' 'int *'     |           | | `-ImplicitCastExpr 0x11e142248 <col:19, col:27> '<dependent type>' contains-errors <LValueToRValue>     |           | |   `-CXXDependentScopeMemberExpr 0x11e1421e8 <col:19, col:27> '<dependent type>' contains-errors lvalue ->length     |           | |     `-RecoveryExpr 0x11e1421c8 <col:19> '<dependent type>' contains-errors lvalue     |           | `-ArraySubscriptExpr 0x11e142338 <col:37, col:54> '<dependent type>' contains-errors lvalue     |           |   |-ImplicitCastExpr 0x11e142308 <col:37, col:44> '<dependent type>' contains-errors <LValueToRValue>     |           |   | `-CXXDependentScopeMemberExpr 0x11e1422a0 <col:37, col:44> '<dependent type>' contains-errors lvalue ->chars     |           |   |   `-RecoveryExpr 0x11e142280 <col:37> '<dependent type>' contains-errors lvalue     |           |   `-ImplicitCastExpr 0x11e142320 <col:50> 'int' <LValueToRValue>     |           |     `-DeclRefExpr 0x11e1422e8 <col:50> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     |           |-UnaryOperator 0x11e142408 <line:17:5, col:19> '<dependent type>' contains-errors postfix '++' cannot overflow     |           | `-CXXDependentScopeMemberExpr 0x11e1423c0 <col:5, col:13> '<dependent type>' contains-errors lvalue ->length     |           |   `-RecoveryExpr 0x11e142398 <col:5> '<dependent type>' contains-errors lvalue     |           |     `-DeclRefExpr 0x11e142378 <col:5> 'int *' lvalue ParmVar 0x11e128328 'output' 'int *'     |           `-UnaryOperator 0x11e142440 <line:18:5, col:9> 'int' postfix '++'     |             `-DeclRefExpr 0x11e142420 <col:5> 'int' lvalue ParmVar 0x11e1280d8 'from' 'int'     `-ReturnStmt 0x11e142550 <line:23:2, col:9>       `-IntegerLiteral 0x11e142530 <col:9> 'int' 1 ","20942":"`-FunctionDecl 0x128928550  line:1:13 invalid exif_iif_add_tag 'void (int *, int, char *, int, int, int, void *)' static   |-ParmVarDecl 0x128928128 <col:30, col:47> col:47 invalid image_info 'int *'   |-ParmVarDecl 0x1289281a8 <col:59, col:63> col:63 used section_index 'int'   |-ParmVarDecl 0x128928228 <col:78, col:84> col:84 used name 'char *'   |-ParmVarDecl 0x1289282a8 <col:90, col:94> col:94 used tag 'int'   |-ParmVarDecl 0x128928328 <col:99, col:103> col:103 used format 'int'   |-ParmVarDecl 0x1289283a8 <col:111, col:118> col:118 invalid length 'int'   |-ParmVarDecl 0x128928428 <col:126, col:132> col:132 used value 'void *'   `-CompoundStmt 0x1298087a8 <line:2:1, line:4:1>     `-CallExpr 0x129808748 <line:3:2, col:113> '<dependent type>' contains-errors       |-DeclRefExpr 0x128928790 <col:2> 'int ()' Function 0x1289286d8 'exif_iif_add_value' 'int ()'       |-RecoveryExpr 0x1289287b0 <col:21> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x1289287d0 <col:33> 'int' lvalue ParmVar 0x1289281a8 'section_index' 'int'       |-DeclRefExpr 0x129808600 <col:48> 'char *' lvalue ParmVar 0x128928228 'name' 'char *'       |-DeclRefExpr 0x129808620 <col:54> 'int' lvalue ParmVar 0x1289282a8 'tag' 'int'       |-DeclRefExpr 0x129808640 <col:59> 'int' lvalue ParmVar 0x128928328 'format' 'int'       |-CStyleCastExpr 0x129808698 <col:67, col:72> 'int' contains-errors <Dependent>       | `-RecoveryExpr 0x129808660 <col:72> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x1298086c0 <col:80> 'void *' lvalue ParmVar 0x128928428 'value' 'void *'       `-CXXDependentScopeMemberExpr 0x129808700 <col:87, col:99> '<dependent type>' contains-errors lvalue ->motorola_intel         `-RecoveryExpr 0x1298086e0 <col:87> '<dependent type>' contains-errors lvalue ","20820":"`-FunctionDecl 0x123128318  line:1:1 checkforcmd_noparen 'int (char **, char *, int)'   |-ParmVarDecl 0x123128128 <line:2:5, col:14> col:14 used pp 'char **'   |-ParmVarDecl 0x1231281a8 <line:3:5, col:11> col:11 used cmd 'char *'   |-ParmVarDecl 0x123128228 <line:4:5, col:10> col:10 used len 'int'   `-CompoundStmt 0x123128678 <line:5:1, line:7:1>     `-ReturnStmt 0x123128668 <line:6:5, col:46>       `-CallExpr 0x123128628 <col:12, col:46> '<dependent type>' contains-errors         |-DeclRefExpr 0x123128530 <col:12> 'int ()' Function 0x123128478 'checkforcmd_opt' 'int ()'         |-DeclRefExpr 0x123128550 <col:28> 'char **' lvalue ParmVar 0x123128128 'pp' 'char **'         |-DeclRefExpr 0x123128570 <col:32> 'char *' lvalue ParmVar 0x1231281a8 'cmd' 'char *'         |-DeclRefExpr 0x123128590 <col:37> 'int' lvalue ParmVar 0x123128228 'len' 'int'         `-RecoveryExpr 0x123128608 <col:42> '<dependent type>' contains-errors lvalue ","20530":"`-FunctionDecl 0x15800ddc0  line:1:13 invalid _c2s_time_checks 'void (int)' static   |-ParmVarDecl 0x15800dcf0 <col:30, col:36> col:36 invalid c2s 'int'   `-CompoundStmt 0x15802b290 <col:41, line:38:1>     |-DeclStmt 0x158027c18 <line:4:5, col:21>     | |-RecordDecl 0x15800de70 <col:5, col:11> col:11 union xhashv     | `-VarDecl 0x15800df68 <col:5, col:18> col:18 referenced invalid xhv 'union xhashv'     `-IfStmt 0x15802b270 <line:8:5, line:37:47>       |-CallExpr 0x158027f58 <line:8:8, col:38> '<dependent type>' contains-errors       | |-DeclRefExpr 0x158027ed0 <col:8> 'int ()' Function 0x158027e18 'xhash_iter_first' 'int ()'       | `-CXXDependentScopeMemberExpr 0x158027f10 <col:25, col:30> '<dependent type>' contains-errors lvalue ->sessions       |   `-RecoveryExpr 0x158027ef0 <col:25> '<dependent type>' contains-errors lvalue       `-DoStmt 0x15802b250 <line:9:9, line:37:47>         |-CompoundStmt 0x15802b080 <line:9:12, line:37:9>         | |-BinaryOperator 0x158028098 <line:10:13, col:29> '<dependent type>' contains-errors '='         | | |-CXXDependentScopeMemberExpr 0x158027fc8 <col:13, col:17> '<dependent type>' contains-errors lvalue .sess_val         | | | `-RecoveryExpr 0x158027fa0 <col:13> '<dependent type>' contains-errors lvalue         | | |   `-DeclRefExpr 0x158027f80 <col:13> 'union xhashv' lvalue Var 0x15800df68 'xhv' 'union xhashv'         | | `-UnaryOperator 0x158028080 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         | |   `-RecoveryExpr 0x158028060 <col:29> '<dependent type>' contains-errors lvalue         | |-CallExpr 0x158028338 <line:11:13, col:62> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x158028198 <col:13> 'int ()' Function 0x1580280e0 'xhash_iter_get' 'int ()'         | | |-CXXDependentScopeMemberExpr 0x1580281d8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->sessions         | | | `-RecoveryExpr 0x1580281b8 <col:28> '<dependent type>' contains-errors lvalue         | | |-RecoveryExpr 0x1580282f8 <col:43> '<dependent type>' contains-errors lvalue         | | |-RecoveryExpr 0x158028318 <col:49> '<dependent type>' contains-errors lvalue         | | `-CXXDependentScopeMemberExpr 0x158028270 <col:55, col:59> '<dependent type>' contains-errors lvalue .val         | |   `-RecoveryExpr 0x158028250 <col:55> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x1580284a8 <line:13:13, col:26>         | | |-UnaryOperator 0x158028488 <col:16, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow         | | | `-ImplicitCastExpr 0x158028470 <col:17, col:23> '<dependent type>' contains-errors <LValueToRValue>         | | |   `-CXXDependentScopeMemberExpr 0x158028428 <col:17, col:23> '<dependent type>' contains-errors lvalue ->s         | | |     `-RecoveryExpr 0x158028408 <col:17> '<dependent type>' contains-errors lvalue         | | `-ContinueStmt 0x1580284a0 <col:26>         | |-IfStmt 0x15802a9b0 <line:15:13, line:22:13>         | | |-BinaryOperator 0x158028778 <line:15:16, col:75> 'int' contains-errors '&&'         | | | |-BinaryOperator 0x158028550 <col:16, col:37> 'int' contains-errors '>'         | | | | |-CXXDependentScopeMemberExpr 0x1580284e8 <col:16, col:21> '<dependent type>' contains-errors lvalue ->io_check_idle         | | | | | `-RecoveryExpr 0x1580284c8 <col:16> '<dependent type>' contains-errors lvalue         | | | | `-IntegerLiteral 0x158028530 <col:37> 'int' 0         | | | `-BinaryOperator 0x158028758 <col:42, col:75> 'int' contains-errors '>'         | | |   |-RecoveryExpr 0x1580286b0 <col:42> '<dependent type>' contains-errors lvalue         | | |   `-BinaryOperator 0x158028738 <col:48, col:75> '<dependent type>' contains-errors '+'         | | |     |-CXXDependentScopeMemberExpr 0x1580286f0 <col:48, col:54> '<dependent type>' contains-errors lvalue ->last_activity         | | |     | `-RecoveryExpr 0x1580286d0 <col:48> '<dependent type>' contains-errors lvalue         | | |     `-CXXDependentScopeMemberExpr 0x158028608 <col:70, col:75> '<dependent type>' contains-errors lvalue ->io_check_idle         | | |       `-RecoveryExpr 0x1580285e8 <col:70> '<dependent type>' contains-errors lvalue         | | `-CompoundStmt 0x15802a990 <col:90, line:22:13>         | |   |-CallExpr 0x15802a718 <line:16:17, col:90> '<dependent type>' contains-errors         | |   | |-DeclRefExpr 0x158028878 <col:17> 'int ()' Function 0x1580287c0 'log_write' 'int ()'         | |   | |-CXXDependentScopeMemberExpr 0x1580288b8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->log         | |   | | `-RecoveryExpr 0x158028898 <col:27> '<dependent type>' contains-errors lvalue         | |   | |-RecoveryExpr 0x158028b38 <col:37> '<dependent type>' contains-errors lvalue         | |   | |-StringLiteral 0x158028960 <col:49> 'char[4]' lvalue \"STR\"         | |   | |-CXXDependentScopeMemberExpr 0x15802a600 <col:56, col:66> '<dependent type>' contains-errors lvalue ->fd         | |   | | `-CXXDependentScopeMemberExpr 0x158028b78 <col:56, col:62> '<dependent type>' contains-errors lvalue ->fd         | |   | |   `-RecoveryExpr 0x158028b58 <col:56> '<dependent type>' contains-errors lvalue         | |   | |-CXXDependentScopeMemberExpr 0x15802a668 <col:70, col:76> '<dependent type>' contains-errors lvalue ->ip         | |   | | `-RecoveryExpr 0x15802a648 <col:70> '<dependent type>' contains-errors lvalue         | |   | `-CXXDependentScopeMemberExpr 0x15802a6d0 <col:80, col:86> '<dependent type>' contains-errors lvalue ->port         | |   |   `-RecoveryExpr 0x15802a6b0 <col:80> '<dependent type>' contains-errors lvalue         | |   `-ContinueStmt 0x15802a988 <line:21:17>         | |-IfStmt 0x15802ad70 <line:24:13, line:28:13>         | | |-RecoveryExpr 0x15802aae0 <line:24:16, col:120> '_Bool' contains-errors         | | `-CompoundStmt 0x15802ad60 <col:134, line:28:13>         | `-IfStmt 0x15802b060 <line:30:13, line:35:13>         |   |-RecoveryExpr 0x15802aed0 <line:30:16, col:88> '_Bool' contains-errors         |   `-CompoundStmt 0x15802b050 <col:91, line:35:13>         `-CallExpr 0x15802b228 <line:37:17, col:46> '<dependent type>' contains-errors           |-DeclRefExpr 0x15802b1a0 <col:17> 'int ()' Function 0x15802b0e8 'xhash_iter_next' 'int ()'           `-CXXDependentScopeMemberExpr 0x15802b1e0 <col:33, col:38> '<dependent type>' contains-errors lvalue ->sessions             `-RecoveryExpr 0x15802b1c0 <col:33> '<dependent type>' contains-errors lvalue ","21126":"`-FunctionDecl 0x13e00e358  line:1:5 filemap_write_and_wait 'int (struct address_space *)'   |-ParmVarDecl 0x13e00e248 <col:28, col:50> col:50 used mapping 'struct address_space *'   `-CompoundStmt 0x13e026e50 <line:2:1, line:15:1>     |-DeclStmt 0x13e0266f0 <line:3:2, col:13>     | `-VarDecl 0x13e026668 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x13e0266d0 <col:12> 'int' 0     |-IfStmt 0x13e026de8 <line:5:2, line:13:2>     | |-RecoveryExpr 0x13e026740 <line:5:6, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e026708 <col:6> 'struct address_space *' lvalue ParmVar 0x13e00e248 'mapping' 'struct address_space *'     | `-CompoundStmt 0x13e026dc8 <col:24, line:13:2>     |   |-BinaryOperator 0x13e026978 <line:6:3, col:35> 'int' '='     |   | |-DeclRefExpr 0x13e026768 <col:3> 'int' lvalue Var 0x13e026668 'err' 'int'     |   | `-CallExpr 0x13e026938 <col:9, col:35> 'int'     |   |   |-ImplicitCastExpr 0x13e026920 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x13e0268b0 <col:9> 'int ()' Function 0x13e0267f8 'filemap_fdatawrite' 'int ()'     |   |   `-ImplicitCastExpr 0x13e026960 <col:28> 'struct address_space *' <LValueToRValue>     |   |     `-DeclRefExpr 0x13e0268d0 <col:28> 'struct address_space *' lvalue ParmVar 0x13e00e248 'mapping' 'struct address_space *'     |   `-IfStmt 0x13e026da8 <line:8:3, line:12:3>     |     |-BinaryOperator 0x13e026a70 <line:8:7, col:15> 'int' contains-errors '!='     |     | |-DeclRefExpr 0x13e026998 <col:7> 'int' lvalue Var 0x13e026668 'err' 'int'     |     | `-UnaryOperator 0x13e026a58 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |   `-ImplicitCastExpr 0x13e026a40 <col:15> '<dependent type>' contains-errors <LValueToRValue>     |     |     `-RecoveryExpr 0x13e026a20 <col:15> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13e026d88 <col:20, line:12:3>     |       |-DeclStmt 0x13e026c88 <line:9:4, col:41>     |       | `-VarDecl 0x13e026aa8 <col:4, col:40> col:8 used err2 'int' cinit     |       |   `-CallExpr 0x13e026c48 <col:15, col:40> 'int'     |       |     |-ImplicitCastExpr 0x13e026c30 <col:15> 'int (*)()' <FunctionToPointerDecay>     |       |     | `-DeclRefExpr 0x13e026bf0 <col:15> 'int ()' Function 0x13e026b38 'filemap_fdatawait' 'int ()'     |       |     `-ImplicitCastExpr 0x13e026c70 <col:33> 'struct address_space *' <LValueToRValue>     |       |       `-DeclRefExpr 0x13e026c10 <col:33> 'struct address_space *' lvalue ParmVar 0x13e00e248 'mapping' 'struct address_space *'     |       `-IfStmt 0x13e026d68 <line:10:4, line:11:11>     |         |-UnaryOperator 0x13e026cd8 <line:10:8, col:9> 'int' prefix '!' cannot overflow     |         | `-ImplicitCastExpr 0x13e026cc0 <col:9> 'int' <LValueToRValue>     |         |   `-DeclRefExpr 0x13e026ca0 <col:9> 'int' lvalue Var 0x13e026668 'err' 'int'     |         `-BinaryOperator 0x13e026d48 <line:11:5, col:11> 'int' '='     |           |-DeclRefExpr 0x13e026cf0 <col:5> 'int' lvalue Var 0x13e026668 'err' 'int'     |           `-ImplicitCastExpr 0x13e026d30 <col:11> 'int' <LValueToRValue>     |             `-DeclRefExpr 0x13e026d10 <col:11> 'int' lvalue Var 0x13e026aa8 'err2' 'int'     `-ReturnStmt 0x13e026e40 <line:14:2, col:9>       `-ImplicitCastExpr 0x13e026e28 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13e026e08 <col:9> 'int' lvalue Var 0x13e026668 'err' 'int' ","21055":"`-FunctionDecl 0x14c128a88  line:1:13 invalid ParseSparseAccessor 'int (int *, int)' static   |-ParmVarDecl 0x14c128928 <col:33, col:43> col:43 referenced invalid accessor 'int *'   |-ParmVarDecl 0x14c1289a8 <col:53, <invalid sloc>> col:56 invalid 'int'   `-CompoundStmt 0x14c1424a8 <line:2:48, line:53:1>     |-BinaryOperator 0x14c128c70 <line:3:3, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c128bd0 <col:3, col:20> '<dependent type>' contains-errors lvalue .isSparse     | | `-CXXDependentScopeMemberExpr 0x14c128b88 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sparse     | |   `-RecoveryExpr 0x14c128b60 <col:3> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14c128b40 <col:3> 'int *' lvalue ParmVar 0x14c128928 'accessor' 'int *'     | `-RecoveryExpr 0x14c128c50 <col:31> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14c128d30 <line:5:3, col:16>     | `-VarDecl 0x14c128ca8 <col:3, col:15> col:7 used count 'int' cinit     |   `-IntegerLiteral 0x14c128d10 <col:15> 'int' 0     |-IfStmt 0x14e0096c0 <line:6:3, line:8:3>     | |-UnaryOperator 0x14e009680 <line:6:7, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14e009640 <col:8, col:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14c128ea0 <col:8> 'int ()' Function 0x14c128de8 'ParseIntegerProperty' 'int ()'     | |   |-UnaryOperator 0x14c128ee0 <col:29, col:30> 'int *' prefix '&' cannot overflow     | |   | `-DeclRefExpr 0x14c128ec0 <col:30> 'int' lvalue Var 0x14c128ca8 'count' 'int'     | |   |-RecoveryExpr 0x14e009600 <col:37> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x14e009620 <col:42> '<dependent type>' contains-errors lvalue     | |   `-StringLiteral 0x14c128f70 <col:45> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x14e0096b0 <col:53, line:8:3>     |-IfStmt 0x14e0099a0 <line:12:3, line:15:3>     | |-UnaryOperator 0x14e0098f8 <line:12:7, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14e0098c0 <col:8, col:45> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14e0097c0 <col:8> 'int ()' Function 0x14e009708 'FindMember' 'int ()'     | |   |-RecoveryExpr 0x14e009880 <col:19> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x14e0097f8 <col:22> 'char[4]' lvalue \"STR\"     | |   `-RecoveryExpr 0x14e0098a0 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e009990 <col:48, line:15:3>     |-IfStmt 0x14e009b40 <line:17:3, line:20:3>     | |-UnaryOperator 0x14e009af8 <line:17:7, col:44> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14e009ac0 <col:8, col:44> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14e0099c0 <col:8> 'int ()' Function 0x14e009708 'FindMember' 'int ()'     | |   |-RecoveryExpr 0x14e009a80 <col:19> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x14e0099f8 <col:22> 'char[4]' lvalue \"STR\"     | |   `-RecoveryExpr 0x14e009aa0 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e009b30 <col:47, line:20:3>     |-DeclStmt 0x14e009d60 <line:25:3, col:75>     | |-VarDecl 0x14e009b78 <col:3, col:29> col:7 used indices_buffer_view 'int' cinit     | | `-IntegerLiteral 0x14e009be0 <col:29> 'int' 0     | |-VarDecl 0x14e009c18 <col:3, col:54> col:32 used indices_byte_offset 'int' cinit     | | `-IntegerLiteral 0x14e009c80 <col:54> 'int' 0     | `-VarDecl 0x14e009cb8 <col:3, col:74> col:57 used component_type 'int' cinit     |   `-IntegerLiteral 0x14e009d20 <col:74> 'int' 0     |-IfStmt 0x14e009e40 <line:26:3, line:29:3>     | |-RecoveryExpr 0x14e009e10 <line:26:7, line:27:35> '_Bool' contains-errors     | `-CompoundStmt 0x14e009e30 <col:38, line:29:3>     |-IfStmt 0x14e009fa0 <line:32:3, line:35:3>     | |-RecoveryExpr 0x14e009f70 <line:32:7, line:33:35> '_Bool' contains-errors     | `-CompoundStmt 0x14e009f90 <col:38, line:35:3>     |-DeclStmt 0x14e00a118 <line:37:3, col:53>     | |-VarDecl 0x14e009fd8 <col:3, col:28> col:7 used values_buffer_view 'int' cinit     | | `-IntegerLiteral 0x14e00a040 <col:28> 'int' 0     | `-VarDecl 0x14e00a078 <col:3, col:52> col:31 used values_byte_offset 'int' cinit     |   `-IntegerLiteral 0x14e00a0e0 <col:52> 'int' 0     |-IfStmt 0x14e00a1f8 <line:38:3, line:41:3>     | |-RecoveryExpr 0x14e00a1c8 <line:38:7, line:39:35> '_Bool' contains-errors     | `-CompoundStmt 0x14e00a1e8 <col:38, line:41:3>     |-BinaryOperator 0x14e00a388 <line:45:3, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e00a320 <col:3, col:20> '<dependent type>' contains-errors lvalue .count     | | `-CXXDependentScopeMemberExpr 0x14e00a2d8 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sparse     | |   `-RecoveryExpr 0x14e00a2b0 <col:3> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e00a290 <col:3> 'int *' lvalue ParmVar 0x14c128928 'accessor' 'int *'     | `-DeclRefExpr 0x14e00a368 <col:28> 'int' lvalue Var 0x14c128ca8 'count' 'int'     |-BinaryOperator 0x14e00a4e8 <line:46:3, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14e00a480 <col:3, col:28> '<dependent type>' contains-errors lvalue .bufferView     | | `-CXXDependentScopeMemberExpr 0x14e00a438 <col:3, col:20> '<dependent type>' contains-errors lvalue .indices     | |   `-CXXDependentScopeMemberExpr 0x14e00a3f0 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sparse     | |     `-RecoveryExpr 0x14e00a3c8 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14e00a3a8 <col:3> 'int *' lvalue ParmVar 0x14c128928 'accessor' 'int *'     | `-DeclRefExpr 0x14e00a4c8 <col:41> 'int' lvalue Var 0x14e009b78 'indices_buffer_view' 'int'     |-BinaryOperator 0x14c142068 <line:47:3, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c142000 <col:3, col:28> '<dependent type>' contains-errors lvalue .byteOffset     | | `-CXXDependentScopeMemberExpr 0x14e00a598 <col:3, col:20> '<dependent type>' contains-errors lvalue .indices     | |   `-CXXDependentScopeMemberExpr 0x14e00a550 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sparse     | |     `-RecoveryExpr 0x14e00a528 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14e00a508 <col:3> 'int *' lvalue ParmVar 0x14c128928 'accessor' 'int *'     | `-DeclRefExpr 0x14c142048 <col:41> 'int' lvalue Var 0x14e009c18 'indices_byte_offset' 'int'     |-BinaryOperator 0x14c1421c8 <line:48:3, col:44> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c142160 <col:3, col:28> '<dependent type>' contains-errors lvalue .componentType     | | `-CXXDependentScopeMemberExpr 0x14c142118 <col:3, col:20> '<dependent type>' contains-errors lvalue .indices     | |   `-CXXDependentScopeMemberExpr 0x14c1420d0 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sparse     | |     `-RecoveryExpr 0x14c1420a8 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14c142088 <col:3> 'int *' lvalue ParmVar 0x14c128928 'accessor' 'int *'     | `-DeclRefExpr 0x14c1421a8 <col:44> 'int' lvalue Var 0x14e009cb8 'component_type' 'int'     |-BinaryOperator 0x14c142328 <line:49:3, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c1422c0 <col:3, col:27> '<dependent type>' contains-errors lvalue .bufferView     | | `-CXXDependentScopeMemberExpr 0x14c142278 <col:3, col:20> '<dependent type>' contains-errors lvalue .values     | |   `-CXXDependentScopeMemberExpr 0x14c142230 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sparse     | |     `-RecoveryExpr 0x14c142208 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14c1421e8 <col:3> 'int *' lvalue ParmVar 0x14c128928 'accessor' 'int *'     | `-DeclRefExpr 0x14c142308 <col:40> 'int' lvalue Var 0x14e009fd8 'values_buffer_view' 'int'     `-BinaryOperator 0x14c142488 <line:50:3, col:40> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x14c142420 <col:3, col:27> '<dependent type>' contains-errors lvalue .byteOffset       | `-CXXDependentScopeMemberExpr 0x14c1423d8 <col:3, col:20> '<dependent type>' contains-errors lvalue .values       |   `-CXXDependentScopeMemberExpr 0x14c142390 <col:3, col:13> '<dependent type>' contains-errors lvalue ->sparse       |     `-RecoveryExpr 0x14c142368 <col:3> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x14c142348 <col:3> 'int *' lvalue ParmVar 0x14c128928 'accessor' 'int *'       `-DeclRefExpr 0x14c142468 <col:40> 'int' lvalue Var 0x14e00a078 'values_byte_offset' 'int' ","20739":"`-FunctionDecl 0x155141718  line:1:12 create_fixed_stream_quirk 'int (struct snd_usb_audio *, struct usb_interface *, struct usb_driver *, const struct snd_usb_audio_quirk *)' static   |-ParmVarDecl 0x155128e48 <col:38, col:60> col:60 used chip 'struct snd_usb_audio *'   |-ParmVarDecl 0x155141228 <line:2:10, col:32> col:32 used iface 'struct usb_interface *'   |-ParmVarDecl 0x1551413f8 <line:3:10, col:29> col:29 driver 'struct usb_driver *'   |-ParmVarDecl 0x1551415c8 <line:4:10, col:44> col:44 used quirk 'const struct snd_usb_audio_quirk *'   `-CompoundStmt 0x15580cdb8 <line:5:1, line:57:1>     |-DeclStmt 0x155141a18 <line:6:2, col:24>     | |-RecordDecl 0x155141828 <col:2, col:9> col:9 struct audioformat     | `-VarDecl 0x155141998 <col:2, col:22> col:22 used fp 'struct audioformat *'     |-DeclStmt 0x155141c18 <line:7:2, col:33>     | |-RecordDecl 0x155141a30 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x155141b98 <col:2, col:29> col:29 used alts 'struct usb_host_interface *'     |-DeclStmt 0x155141e18 <line:8:2, col:40>     | |-RecordDecl 0x155141c30 <col:2, col:9> col:9 struct usb_interface_descriptor     | `-VarDecl 0x155141d98 <col:2, col:35> col:35 used altsd 'struct usb_interface_descriptor *'     |-DeclStmt 0x155141f48 <line:9:2, col:17>     | |-VarDecl 0x155141e48 <col:2, col:6> col:6 used stream 'int'     | `-VarDecl 0x155141ec8 <col:2, col:14> col:14 used err 'int'     |-DeclStmt 0x155142060 <line:10:2, col:29>     | `-VarDecl 0x155141fa8 <col:2, col:25> col:12 used rate_table 'unsigned int *' cinit     |   `-RecoveryExpr 0x155142040 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15580a810 <line:13:2, line:16:2>     | |-UnaryOperator 0x15580a500 <line:13:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15580a4e8 <col:7> 'struct audioformat *' <LValueToRValue>     | |   `-DeclRefExpr 0x15580a4c8 <col:7> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | `-CompoundStmt 0x15580a7f0 <col:11, line:16:2>     |   |-CallExpr 0x15580a6e8 <line:14:3, col:28> 'int'     |   | |-ImplicitCastExpr 0x15580a6d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15580a5f8 <col:3> 'int ()' Function 0x15580a540 'usb_audio_err' 'int ()'     |   | |-ImplicitCastExpr 0x15580a718 <col:17> 'struct snd_usb_audio *' <LValueToRValue>     |   | | `-DeclRefExpr 0x15580a618 <col:17> 'struct snd_usb_audio *' lvalue ParmVar 0x155128e48 'chip' 'struct snd_usb_audio *'     |   | `-ImplicitCastExpr 0x15580a730 <col:23> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x15580a680 <col:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x15580a7e0 <line:15:3, col:11>     |     `-UnaryOperator 0x15580a7c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x15580a7b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x15580a790 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15580ab48 <line:17:2, line:20:2>     | |-BinaryOperator 0x15580a8e8 <line:17:6, col:21> 'int' contains-errors '>'     | | |-RecoveryExpr 0x15580a868 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15580a830 <col:6> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | | `-RecoveryExpr 0x15580a8c8 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15580ab28 <col:35, line:20:2>     |   |-CallExpr 0x15580aa40 <line:18:3, col:11> 'int'     |   | |-ImplicitCastExpr 0x15580aa28 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15580a9e8 <col:3> 'int ()' Function 0x15580a930 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x15580aa68 <col:9> 'struct audioformat *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15580aa08 <col:9> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |   `-ReturnStmt 0x15580ab18 <line:19:3, col:11>     |     `-UnaryOperator 0x15580ab00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x15580aae8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x15580aac8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15580b190 <line:21:2, line:29:2>     | |-BinaryOperator 0x15580abe8 <line:21:6, col:21> 'int' contains-errors '>'     | | |-RecoveryExpr 0x15580aba0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15580ab68 <col:6> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | | `-IntegerLiteral 0x15580abc8 <col:21> 'int' 0     | `-CompoundStmt 0x15580b168 <col:24, line:29:2>     |   |-BinaryOperator 0x15580aed8 <line:22:3, line:23:48> 'unsigned int *' contains-errors '='     |   | |-DeclRefExpr 0x15580ac08 <line:22:3> 'unsigned int *' contains-errors lvalue Var 0x155141fa8 'rate_table' 'unsigned int *'     |   | `-CallExpr 0x15580aea0 <col:16, line:23:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15580ac28 <line:22:16> 'int ()' Function 0x1551420f8 'kmemdup' 'int ()'     |   |   |-RecoveryExpr 0x15580ac80 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x15580ac48 <col:24> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |   |   |-BinaryOperator 0x15580ae60 <line:23:10, col:28> '<dependent type>' contains-errors '*'     |   |   | |-UnaryExprOrTypeTraitExpr 0x15580ae40 <col:10, col:20> 'unsigned long' sizeof 'int'     |   |   | `-RecoveryExpr 0x15580ad18 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x15580ace0 <col:24> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |   |   `-RecoveryExpr 0x15580ae80 <col:38> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x15580b0a8 <line:24:3, line:27:3>     |   | |-UnaryOperator 0x15580af30 <line:24:7, col:8> 'int' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x15580af18 <col:8> 'unsigned int *' contains-errors <LValueToRValue>     |   | |   `-DeclRefExpr 0x15580aef8 <col:8> 'unsigned int *' contains-errors lvalue Var 0x155141fa8 'rate_table' 'unsigned int *'     |   | `-CompoundStmt 0x15580b088 <col:20, line:27:3>     |   |   |-CallExpr 0x15580afa0 <line:25:4, col:12> 'int'     |   |   | |-ImplicitCastExpr 0x15580af88 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x15580af48 <col:4> 'int ()' Function 0x15580a930 'kfree' 'int ()'     |   |   | `-ImplicitCastExpr 0x15580afc8 <col:10> 'struct audioformat *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x15580af68 <col:10> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |   |   `-ReturnStmt 0x15580b078 <line:26:4, col:12>     |   |     `-UnaryOperator 0x15580b060 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x15580b048 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x15580b028 <col:12> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x15580b148 <line:28:3, col:20> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x15580b100 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15580b0c8 <col:3> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |     `-DeclRefExpr 0x15580b128 <col:20> 'unsigned int *' contains-errors lvalue Var 0x155141fa8 'rate_table' 'unsigned int *'     |-BinaryOperator 0x15580b480 <line:33:2, col:49> 'int' '='     | |-DeclRefExpr 0x15580b268 <col:2> 'int' lvalue Var 0x155141ec8 'err' 'int'     | `-CallExpr 0x15580b400 <col:8, col:49> 'int'     |   |-ImplicitCastExpr 0x15580b3e8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15580b368 <col:8> 'int ()' Function 0x15580b2b0 'snd_usb_add_audio_stream' 'int ()'     |   |-ImplicitCastExpr 0x15580b438 <col:33> 'struct snd_usb_audio *' <LValueToRValue>     |   | `-DeclRefExpr 0x15580b388 <col:33> 'struct snd_usb_audio *' lvalue ParmVar 0x155128e48 'chip' 'struct snd_usb_audio *'     |   |-ImplicitCastExpr 0x15580b450 <col:39> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x15580b3a8 <col:39> 'int' lvalue Var 0x155141e48 'stream' 'int'     |   `-ImplicitCastExpr 0x15580b468 <col:47> 'struct audioformat *' <LValueToRValue>     |     `-DeclRefExpr 0x15580b3c8 <col:47> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |-IfStmt 0x15580b6b8 <line:34:2, line:38:2>     | |-BinaryOperator 0x15580b4f8 <line:34:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x15580b4e0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15580b4a0 <col:6> 'int' lvalue Var 0x155141ec8 'err' 'int'     | | `-IntegerLiteral 0x15580b4c0 <col:12> 'int' 0     | `-CompoundStmt 0x15580b690 <col:15, line:38:2>     |   |-CallExpr 0x15580b570 <line:35:3, col:11> 'int'     |   | |-ImplicitCastExpr 0x15580b558 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15580b518 <col:3> 'int ()' Function 0x15580a930 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x15580b598 <col:9> 'struct audioformat *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15580b538 <col:9> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |   |-CallExpr 0x15580b608 <line:36:3, col:19> 'int' contains-errors     |   | |-ImplicitCastExpr 0x15580b5f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15580b5b0 <col:3> 'int ()' Function 0x15580a930 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x15580b630 <col:9> 'unsigned int *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x15580b5d0 <col:9> 'unsigned int *' contains-errors lvalue Var 0x155141fa8 'rate_table' 'unsigned int *'     |   `-ReturnStmt 0x15580b680 <line:37:3, col:10>     |     `-ImplicitCastExpr 0x15580b668 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x15580b648 <col:10> 'int' lvalue Var 0x155141ec8 'err' 'int'     |-IfStmt 0x15580bbe8 <line:39:2, line:44:2>     | |-BinaryOperator 0x15580ba78 <line:39:6, line:40:31> 'int' contains-errors '||'     | | |-BinaryOperator 0x15580b978 <line:39:6, col:58> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x15580b710 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x15580b6d8 <col:6> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | | | `-CXXDependentScopeMemberExpr 0x15580b930 <col:19, col:58> '<dependent type>' contains-errors lvalue ->bInterfaceNumber     | | |   `-CallExpr 0x15580b908 <col:19, col:55> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x15580b818 <col:19> 'int ()' Function 0x15580b760 'get_iface_desc' 'int ()'     | | |     `-UnaryOperator 0x15580b8f0 <col:34, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |       `-ArraySubscriptExpr 0x15580b8d0 <col:35, col:54> '<dependent type>' contains-errors lvalue     | | |         |-ImplicitCastExpr 0x15580b8b8 <col:35, col:42> '<dependent type>' contains-errors <LValueToRValue>     | | |         | `-RecoveryExpr 0x15580b870 <col:35, col:42> '<dependent type>' contains-errors lvalue     | | |         |   `-DeclRefExpr 0x15580b838 <col:35> 'struct usb_interface *' lvalue ParmVar 0x155141228 'iface' 'struct usb_interface *'     | | |         `-IntegerLiteral 0x15580b898 <col:53> 'int' 0     | | `-BinaryOperator 0x15580ba58 <line:40:6, col:31> 'int' contains-errors '>='     | |   |-RecoveryExpr 0x15580b9d0 <col:6, col:10> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x15580b998 <col:6> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | |   `-RecoveryExpr 0x15580ba30 <col:24, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15580b9f8 <col:24> 'struct usb_interface *' lvalue ParmVar 0x155141228 'iface' 'struct usb_interface *'     | `-CompoundStmt 0x15580bbc8 <col:47, line:44:2>     |   |-CallExpr 0x15580baf0 <line:41:3, col:11> 'int'     |   | |-ImplicitCastExpr 0x15580bad8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15580ba98 <col:3> 'int ()' Function 0x15580a930 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x15580bb18 <col:9> 'struct audioformat *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15580bab8 <col:9> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |   `-CallExpr 0x15580bb88 <line:42:3, col:19> 'int' contains-errors     |     |-ImplicitCastExpr 0x15580bb70 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15580bb30 <col:3> 'int ()' Function 0x15580a930 'kfree' 'int ()'     |     `-ImplicitCastExpr 0x15580bbb0 <col:9> 'unsigned int *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x15580bb50 <col:9> 'unsigned int *' contains-errors lvalue Var 0x155141fa8 'rate_table' 'unsigned int *'     |-BinaryOperator 0x15580bd50 <line:45:2, col:42> 'struct usb_host_interface *' contains-errors '='     | |-DeclRefExpr 0x15580bc08 <col:2> 'struct usb_host_interface *' lvalue Var 0x155141b98 'alts' 'struct usb_host_interface *'     | `-UnaryOperator 0x15580bd38 <col:9, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x15580bd18 <col:10, col:42> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x15580bce8 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x15580bc60 <col:10, col:17> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x15580bc28 <col:10> 'struct usb_interface *' lvalue ParmVar 0x155141228 'iface' 'struct usb_interface *'     |     `-ImplicitCastExpr 0x15580bd00 <col:28, col:32> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15580bcc0 <col:28, col:32> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x15580bc88 <col:28> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |-BinaryOperator 0x15580be40 <line:46:2, col:29> 'struct usb_interface_descriptor *' '='     | |-DeclRefExpr 0x15580bd70 <col:2> 'struct usb_interface_descriptor *' lvalue Var 0x155141d98 'altsd' 'struct usb_interface_descriptor *'     | `-ImplicitCastExpr 0x15580be28 <col:10, col:29> 'struct usb_interface_descriptor *' <IntegralToPointer>     |   `-CallExpr 0x15580bde8 <col:10, col:29> 'int'     |     |-ImplicitCastExpr 0x15580bdd0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15580bd90 <col:10> 'int ()' Function 0x15580b760 'get_iface_desc' 'int ()'     |     `-ImplicitCastExpr 0x15580be10 <col:25> 'struct usb_host_interface *' <LValueToRValue>     |       `-DeclRefExpr 0x15580bdb0 <col:25> 'struct usb_host_interface *' lvalue Var 0x155141b98 'alts' 'struct usb_host_interface *'     |-BinaryOperator 0x15580bf20 <line:47:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15580be98 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15580be60 <col:2> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | `-RecoveryExpr 0x15580bef8 <col:17, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15580bec0 <col:17> 'struct usb_interface_descriptor *' lvalue Var 0x155141d98 'altsd' 'struct usb_interface_descriptor *'     |-IfStmt 0x15580c218 <line:49:2, line:50:59>     | |-BinaryOperator 0x15580bfc0 <line:49:6, col:26> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15580bf78 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15580bf40 <col:6> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | | `-IntegerLiteral 0x15580bfa0 <col:26> 'int' 0     | `-BinaryOperator 0x15580c1f8 <line:50:3, col:59> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x15580c018 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15580bfe0 <col:3> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |   `-CallExpr 0x15580c198 <col:22, col:59> 'int'     |     |-ImplicitCastExpr 0x15580c180 <col:22> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15580c120 <col:22> 'int ()' Function 0x15580c068 'snd_usb_parse_datainterval' 'int ()'     |     |-ImplicitCastExpr 0x15580c1c8 <col:49> 'struct snd_usb_audio *' <LValueToRValue>     |     | `-DeclRefExpr 0x15580c140 <col:49> 'struct snd_usb_audio *' lvalue ParmVar 0x155128e48 'chip' 'struct snd_usb_audio *'     |     `-ImplicitCastExpr 0x15580c1e0 <col:55> 'struct usb_host_interface *' <LValueToRValue>     |       `-DeclRefExpr 0x15580c160 <col:55> 'struct usb_host_interface *' lvalue Var 0x155141b98 'alts' 'struct usb_host_interface *'     |-IfStmt 0x15580c6e8 <line:51:2, line:52:70>     | |-BinaryOperator 0x15580c2b8 <line:51:6, col:25> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15580c270 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15580c238 <col:6> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | | `-IntegerLiteral 0x15580c298 <col:25> 'int' 0     | `-BinaryOperator 0x15580c6c8 <line:52:3, col:70> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x15580c310 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15580c2d8 <col:3> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |   `-CallExpr 0x15580c6a0 <col:21, col:70> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15580c4b8 <col:21> 'int ()' Function 0x15580c400 'le16_to_cpu' 'int ()'     |     `-RecoveryExpr 0x15580c678 <col:33, col:56> '<dependent type>' contains-errors lvalue     |       `-CallExpr 0x15580c630 <col:33, col:53> 'int'     |         |-ImplicitCastExpr 0x15580c618 <col:33> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x15580c5b8 <col:33> 'int ()' Function 0x15580c500 'get_endpoint' 'int ()'     |         |-ImplicitCastExpr 0x15580c660 <col:46> 'struct usb_host_interface *' <LValueToRValue>     |         | `-DeclRefExpr 0x15580c5d8 <col:46> 'struct usb_host_interface *' lvalue Var 0x155141b98 'alts' 'struct usb_host_interface *'     |         `-IntegerLiteral 0x15580c5f8 <col:52> 'int' 0     |-CallExpr 0x15580c8e8 <line:53:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580c7e8 <col:2> 'int ()' Function 0x15580c730 'usb_set_interface' 'int ()'     | |-RecoveryExpr 0x15580c840 <col:20, col:26> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15580c808 <col:20> 'struct snd_usb_audio *' lvalue ParmVar 0x155128e48 'chip' 'struct snd_usb_audio *'     | |-RecoveryExpr 0x15580c8a0 <col:31, col:35> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15580c868 <col:31> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | `-IntegerLiteral 0x15580c8c8 <col:42> 'int' 0     |-CallExpr 0x15580cae0 <line:54:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580ca00 <col:2> 'int ()' Function 0x15580c948 'snd_usb_init_pitch' 'int ()'     | |-DeclRefExpr 0x15580ca20 <col:21> 'struct snd_usb_audio *' lvalue ParmVar 0x155128e48 'chip' 'struct snd_usb_audio *'     | |-RecoveryExpr 0x15580ca78 <col:27, col:31> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15580ca40 <col:27> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | |-DeclRefExpr 0x15580caa0 <col:38> 'struct usb_host_interface *' lvalue Var 0x155141b98 'alts' 'struct usb_host_interface *'     | `-DeclRefExpr 0x15580cac0 <col:44> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     |-CallExpr 0x15580cd40 <line:55:2, col:66> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580cc00 <col:2> 'int ()' Function 0x15580cb48 'snd_usb_init_sample_rate' 'int ()'     | |-DeclRefExpr 0x15580cc20 <col:27> 'struct snd_usb_audio *' lvalue ParmVar 0x155128e48 'chip' 'struct snd_usb_audio *'     | |-RecoveryExpr 0x15580cc78 <col:33, col:37> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15580cc40 <col:33> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | |-DeclRefExpr 0x15580cca0 <col:44> 'struct usb_host_interface *' lvalue Var 0x155141b98 'alts' 'struct usb_host_interface *'     | |-DeclRefExpr 0x15580ccc0 <col:50> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     | `-RecoveryExpr 0x15580cd18 <col:54, col:58> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15580cce0 <col:54> 'struct audioformat *' lvalue Var 0x155141998 'fp' 'struct audioformat *'     `-ReturnStmt 0x15580cda8 <line:56:2, col:9>       `-IntegerLiteral 0x15580cd88 <col:9> 'int' 0 ","20586":"`-FunctionDecl 0x14b940a00  line:1:12 sctp_setsockopt_hmac_ident 'int (struct sock *, char)' static   |-ParmVarDecl 0x14b928648 <col:39, col:52> col:52 used sk 'struct sock *'   |-ParmVarDecl 0x14b9286c0 <line:2:9, col:14> col:14 __user 'char'   `-CompoundStmt 0x14b944300 <line:4:1, line:30:1>     |-DeclStmt 0x14b940ce8 <line:5:2, col:29>     | |-RecordDecl 0x14b940b00 <col:2, col:9> col:9 struct sctp_hmacalgo     | `-VarDecl 0x14b940c68 <col:2, col:24> col:24 used hmacs 'struct sctp_hmacalgo *'     |-DeclStmt 0x14b940d80 <line:6:2, col:9>     | `-VarDecl 0x14b940d18 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x14b940ee8 <line:8:2, line:9:11>     | |-RecoveryExpr 0x14b940e20 <line:8:6, col:42> '_Bool' contains-errors     | `-ReturnStmt 0x14b940ed8 <line:9:3, col:11>     |   `-UnaryOperator 0x14b940ec0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b940ea8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b940e88 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b941150 <line:11:2, col:36> 'struct sctp_hmacalgo *' contains-errors '='     | |-DeclRefExpr 0x14b940f08 <col:2> 'struct sctp_hmacalgo *' lvalue Var 0x14b940c68 'hmacs' 'struct sctp_hmacalgo *'     | `-CallExpr 0x14b941120 <col:10, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b941040 <col:10> 'int ()' Function 0x14b940f88 'kmalloc' 'int ()'     |   |-RecoveryExpr 0x14b9410e0 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14b941100 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b941268 <line:12:2, line:13:11>     | |-UnaryOperator 0x14b9411a8 <line:12:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b941190 <col:7> 'struct sctp_hmacalgo *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b941170 <col:7> 'struct sctp_hmacalgo *' lvalue Var 0x14b940c68 'hmacs' 'struct sctp_hmacalgo *'     | `-ReturnStmt 0x14b941258 <line:13:3, col:11>     |   `-UnaryOperator 0x14b941240 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14b941228 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14b941208 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b941608 <line:15:2, line:18:2>     | |-CallExpr 0x14b941450 <line:15:6, col:42> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14b941368 <col:6> 'int ()' Function 0x14b9412b0 'copy_from_user' 'int ()'     | | |-DeclRefExpr 0x14b941388 <col:21> 'struct sctp_hmacalgo *' lvalue Var 0x14b940c68 'hmacs' 'struct sctp_hmacalgo *'     | | |-RecoveryExpr 0x14b941410 <col:28> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14b941430 <col:36> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b9415e8 <col:45, line:18:2>     |   |-BinaryOperator 0x14b941560 <line:16:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14b941488 <col:3> 'int' lvalue Var 0x14b940d18 'err' 'int'     |   | `-UnaryOperator 0x14b941548 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14b941530 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14b941510 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14b9415d0 <line:17:3, col:8> 'out' 0x14b941580     |-IfStmt 0x14b941910 <line:20:2, line:24:2>     | |-BinaryOperator 0x14b9417c0 <line:20:6, line:21:32> 'int' contains-errors '||'     | | |-BinaryOperator 0x14b9416a8 <line:20:6, col:33> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x14b941660 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14b941628 <col:6> 'struct sctp_hmacalgo *' lvalue Var 0x14b940c68 'hmacs' 'struct sctp_hmacalgo *'     | | | `-IntegerLiteral 0x14b941688 <col:33> 'int' 0     | | `-BinaryOperator 0x14b9417a0 <line:21:6, col:32> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x14b941700 <col:6, col:13> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14b9416c8 <col:6> 'struct sctp_hmacalgo *' lvalue Var 0x14b940c68 'hmacs' 'struct sctp_hmacalgo *'     | |   `-RecoveryExpr 0x14b941780 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b9418f0 <col:53, line:24:2>     |   |-BinaryOperator 0x14b9418b8 <line:22:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14b9417e0 <col:3> 'int' lvalue Var 0x14b940d18 'err' 'int'     |   | `-UnaryOperator 0x14b9418a0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14b941888 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14b941868 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14b9418d8 <line:23:3, col:8> 'out' 0x14b941580     |-BinaryOperator 0x14b944100 <line:26:2, col:53> 'int' contains-errors '='     | |-DeclRefExpr 0x14b941930 <col:2> 'int' lvalue Var 0x14b940d18 'err' 'int'     | `-CallExpr 0x14b9440d0 <col:8, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b943eb8 <col:8> 'int ()' Function 0x14b943e00 'sctp_auth_ep_set_hmacs' 'int ()'     |   |-RecoveryExpr 0x14b944088 <col:31, col:44> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x14b944048 <col:31, col:41> 'int'     |   |   |-ImplicitCastExpr 0x14b944030 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14b943fb8 <col:31> 'int ()' Function 0x14b943f00 'sctp_sk' 'int ()'     |   |   `-ImplicitCastExpr 0x14b944070 <col:39> 'struct sock *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14b943fd8 <col:39> 'struct sock *' lvalue ParmVar 0x14b928648 'sk' 'struct sock *'     |   `-DeclRefExpr 0x14b9440b0 <col:48> 'struct sctp_hmacalgo *' lvalue Var 0x14b940c68 'hmacs' 'struct sctp_hmacalgo *'     |-LabelStmt 0x14b944298 <line:27:1, line:28:13> 'out'     | `-CallExpr 0x14b944258 <col:2, col:13> 'int'     |   |-ImplicitCastExpr 0x14b944240 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b944200 <col:2> 'int ()' Function 0x14b944148 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x14b944280 <col:8> 'struct sctp_hmacalgo *' <LValueToRValue>     |     `-DeclRefExpr 0x14b944220 <col:8> 'struct sctp_hmacalgo *' lvalue Var 0x14b940c68 'hmacs' 'struct sctp_hmacalgo *'     `-ReturnStmt 0x14b9442f0 <line:29:2, col:9>       `-ImplicitCastExpr 0x14b9442d8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14b9442b8 <col:9> 'int' lvalue Var 0x14b940d18 'err' 'int' ","20587":"`-FunctionDecl 0x1489229e8  line:1:12 init_pitch_v1 'int (struct snd_usb_audio *, int, struct usb_host_interface *, struct audioformat *)' static   |-ParmVarDecl 0x14900e248 <col:26, col:48> col:48 used chip 'struct snd_usb_audio *'   |-ParmVarDecl 0x14900e2c8 <col:54, col:58> col:58 used iface 'int'   |-ParmVarDecl 0x1489226c8 <line:2:5, col:32> col:32 used alts 'struct usb_host_interface *'   |-ParmVarDecl 0x148922898 <line:3:5, col:25> col:25 fmt 'struct audioformat *'   `-CompoundStmt 0x149028430 <line:4:1, line:23:1>     |-DeclStmt 0x148922d48 <line:5:2, col:36>     | |-RecordDecl 0x148922af8 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x148922c68 <col:2, col:33> col:21 used dev 'struct usb_device *' cinit     |   `-RecoveryExpr 0x148922d08 <col:27, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148922cd0 <col:27> 'struct snd_usb_audio *' lvalue ParmVar 0x14900e248 'chip' 'struct snd_usb_audio *'     |-DeclStmt 0x148922de0 <line:6:2, col:17>     | `-VarDecl 0x148922d78 <col:2, col:15> col:15 used ep 'unsigned int'     |-DeclStmt 0x148922f10 <line:7:2, col:23>     | `-VarDecl 0x148922ea8 <col:2, col:22> col:16 used data 'unsigned char[1]'     |-DeclStmt 0x148922fa8 <line:8:2, col:9>     | `-VarDecl 0x148922f40 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x148923228 <line:10:2, col:30> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x148922fc0 <col:2> 'unsigned int' lvalue Var 0x148922d78 'ep' 'unsigned int'     | `-RecoveryExpr 0x148923200 <col:7, col:30> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1489231b8 <col:7, col:27> 'int'     |     |-ImplicitCastExpr 0x1489231a0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x148923110 <col:7> 'int ()' Function 0x148923058 'get_endpoint' 'int ()'     |     |-ImplicitCastExpr 0x1489231e8 <col:20> 'struct usb_host_interface *' <LValueToRValue>     |     | `-DeclRefExpr 0x148923130 <col:20> 'struct usb_host_interface *' lvalue ParmVar 0x1489226c8 'alts' 'struct usb_host_interface *'     |     `-IntegerLiteral 0x148923150 <col:26> 'int' 0     |-BinaryOperator 0x148923330 <line:12:2, col:12> 'unsigned char' '='     | |-ArraySubscriptExpr 0x1489232d8 <col:2, col:8> 'unsigned char' lvalue     | | |-ImplicitCastExpr 0x1489232c0 <col:2> 'unsigned char *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x148923248 <col:2> 'unsigned char[1]' lvalue Var 0x148922ea8 'data' 'unsigned char[1]'     | | `-IntegerLiteral 0x148923268 <col:7> 'int' 0     | `-ImplicitCastExpr 0x148923318 <col:12> 'unsigned char' <IntegralCast>     |   `-IntegerLiteral 0x1489232f8 <col:12> 'int' 1     |-IfStmt 0x1490283e0 <line:13:2, line:20:2>     | |-RecoveryExpr 0x1490280e0 <line:13:6, line:16:31> '_Bool' contains-errors     | `-CompoundStmt 0x1490283c0 <col:34, line:20:2>     |   |-CallExpr 0x1490282d8 <line:17:3, line:18:19> 'int'     |   | |-ImplicitCastExpr 0x1490282c0 <line:17:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1490281e0 <col:3> 'int ()' Function 0x149028128 'usb_audio_err' 'int ()'     |   | |-ImplicitCastExpr 0x149028318 <col:17> 'struct snd_usb_audio *' <LValueToRValue>     |   | | `-DeclRefExpr 0x149028200 <col:17> 'struct snd_usb_audio *' lvalue ParmVar 0x14900e248 'chip' 'struct snd_usb_audio *'     |   | |-ImplicitCastExpr 0x149028330 <col:23> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x149028260 <col:23> 'char[4]' lvalue \"STR\"     |   | |-ImplicitCastExpr 0x149028348 <line:18:10> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x149028280 <col:10> 'int' lvalue ParmVar 0x14900e2c8 'iface' 'int'     |   | `-ImplicitCastExpr 0x149028360 <col:17> 'unsigned int' <LValueToRValue>     |   |   `-DeclRefExpr 0x1490282a0 <col:17> 'unsigned int' lvalue Var 0x148922d78 'ep' 'unsigned int'     |   `-ReturnStmt 0x1490283b0 <line:19:3, col:10>     |     `-ImplicitCastExpr 0x149028398 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x149028378 <col:10> 'int' lvalue Var 0x148922f40 'err' 'int'     `-ReturnStmt 0x149028420 <line:22:2, col:9>       `-IntegerLiteral 0x149028400 <col:9> 'int' 0 ","20889":"`-FunctionDecl 0x14580ddc8  line:1:1 invalid cliprdr_process 'int (int)'   |-ParmVarDecl 0x14580dcf0 <col:17, col:24> col:24 invalid s 'int'   `-CompoundStmt 0x145828288 <line:2:1, line:59:1>     |-CallExpr 0x14580e098 <line:7:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14580dff0 <col:2> 'int ()' Function 0x14580df38 'in_uint16_le' 'int ()'     | |-RecoveryExpr 0x14580e010 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14580e078 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14580e170 <line:8:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14580e0c8 <col:2> 'int ()' Function 0x14580df38 'in_uint16_le' 'int ()'     | |-RecoveryExpr 0x14580e0e8 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14580e150 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14580e328 <line:9:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14580e280 <col:2> 'int ()' Function 0x14580e1c8 'in_uint32_le' 'int ()'     | |-RecoveryExpr 0x14580e2a0 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14580e308 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1458276a8 <line:12:2, line:13:15> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1458274b8 <line:12:2> 'int ()' Function 0x145827400 'logger' 'int ()'     | |-RecoveryExpr 0x145827608 <col:9> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x145827628 <col:20> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x145827550 <col:27> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x145827648 <col:34> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x145827668 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x145827688 <line:13:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145827b38 <line:15:2, line:33:2>     | |-BinaryOperator 0x145827788 <line:15:6, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x145827748 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x145827768 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145827b18 <line:16:2, line:33:2>     |   |-SwitchStmt 0x1458277c8 <line:17:3, line:30:3>     |   | |-RecoveryExpr 0x1458277a8 <line:17:11> 'int' contains-errors     |   | `-CompoundStmt 0x145827ad8 <line:18:3, line:30:3>     |   |   |-BreakStmt 0x1458278f0 <line:23:5>     |   |   |-CallExpr 0x145827a48 <line:25:5, col:28> 'int'     |   |   | `-ImplicitCastExpr 0x145827a30 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   `-DeclRefExpr 0x1458279d8 <col:5> 'int ()' Function 0x145827920 'ui_clip_request_failed' 'int ()'     |   |   |-BreakStmt 0x145827a68 <line:26:5>     |   |   `-DefaultStmt 0x145827ab8 <line:27:4, col:11>     |   |     `-NullStmt 0x145827ab0 <col:11>     |   `-ReturnStmt 0x145827b08 <line:32:3>     `-SwitchStmt 0x145827b78 <line:35:2, line:58:2>       |-RecoveryExpr 0x145827b58 <line:35:10> 'int' contains-errors       `-CompoundStmt 0x145828238 <line:36:2, line:58:2>         |-CallExpr 0x145827cb8 <line:38:4, col:17> 'int'         | `-ImplicitCastExpr 0x145827ca0 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x145827c80 <col:4> 'int ()' Function 0x145827bc8 'ui_clip_sync' 'int ()'         |-BreakStmt 0x145827cd8 <line:39:4>         |-ReturnStmt 0x145827f00 <line:43:4>         |-BreakStmt 0x145827f10 <line:45:4>         |-BreakStmt 0x145828058 <line:49:4>         |-BreakStmt 0x145828160 <line:52:4>         |-CaseStmt 0x1458281a0 <line:53:3, line:54:4>         | |-ConstantExpr 0x145828188 <line:53:8> 'int'         | | `-IntegerLiteral 0x145828168 <col:8> 'int' 7         | `-BreakStmt 0x1458281c8 <line:54:4>         `-DefaultStmt 0x145828218 <line:55:3, col:10>           `-NullStmt 0x145828210 <col:10> ","20392":"`-FunctionDecl 0x12b9422a0  col:45 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12b9423a0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12b942408 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12b942470 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12b942348 <<invalid sloc>> Implicit 883 ","20253":"`-FunctionDecl 0x155925000  line:1:15 invalid ZSTD_encodeSequences 'int (void *, int, const int *, const int *, const int *, const int *, const int *, const int *, const int *, int, int, int)' static   |-ParmVarDecl 0x15590b8f0 <line:2:13, col:19> col:19 used dst 'void *'   |-ParmVarDecl 0x15590b970 <col:24, col:31> col:31 invalid dstCapacity 'int'   |-ParmVarDecl 0x15590b9f0 <line:3:13, col:31> col:31 invalid CTable_MatchLength 'const int *'   |-ParmVarDecl 0x15590ba70 <col:51, col:63> col:63 invalid mlCodeTable 'const int *'   |-ParmVarDecl 0x15590baf0 <line:4:13, col:31> col:31 invalid CTable_OffsetBits 'const int *'   |-ParmVarDecl 0x15590bb70 <col:50, col:62> col:62 invalid ofCodeTable 'const int *'   |-ParmVarDecl 0x15590bbf0 <line:5:13, col:31> col:31 invalid CTable_LitLength 'const int *'   |-ParmVarDecl 0x15590bc70 <col:49, col:61> col:61 invalid llCodeTable 'const int *'   |-ParmVarDecl 0x15590bcf0 <line:6:13, col:27> col:27 invalid sequences 'const int *'   |-ParmVarDecl 0x15590bd70 <col:38, col:45> col:45 invalid nbSeq 'int'   |-ParmVarDecl 0x15590bdf0 <col:52, col:56> col:56 used longOffsets 'int'   |-ParmVarDecl 0x15590be70 <col:69, col:73> col:73 used bmi2 'int'   `-CompoundStmt 0x1559254d8 <line:7:1, line:23:1>     |-CStyleCastExpr 0x155925150 <line:17:5, col:11> 'void' <ToVoid>     | `-ImplicitCastExpr 0x155925138 <col:11> 'int' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x155925108 <col:11> 'int' lvalue ParmVar 0x15590be70 'bmi2' 'int'     `-ReturnStmt 0x1559254c8 <line:18:5, line:22:70>       `-CallExpr 0x155925450 <line:18:12, line:22:70> '<dependent type>' contains-errors         |-DeclRefExpr 0x1559252d0 <line:18:12> 'int ()' Function 0x155925218 'ZSTD_encodeSequences_default' 'int ()'         |-DeclRefExpr 0x1559252f0 <col:41> 'void *' lvalue ParmVar 0x15590b8f0 'dst' 'void *'         |-RecoveryExpr 0x155925310 <col:46> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x155925330 <line:19:41> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x155925350 <col:61> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x155925370 <line:20:41> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x155925390 <col:60> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1559253b0 <line:21:41> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1559253d0 <col:59> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1559253f0 <line:22:41> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x155925410 <col:52> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x155925430 <col:59> 'int' lvalue ParmVar 0x15590bdf0 'longOffsets' 'int' ","20616":"`-FunctionDecl 0x1321416b8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1321417b8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x132141820 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x132141888 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x132141760 <<invalid sloc>> Implicit 882 ","20884":"`-FunctionDecl 0x12600df78  line:1:1 invalid virDomainGetDiskErrors 'int (int, int, unsigned int, unsigned int)'   |-ParmVarDecl 0x12600dcf0 <col:24, col:37> col:37 invalid dom 'int'   |-ParmVarDecl 0x12600dd70 <line:2:24, col:46> col:46 referenced invalid errors 'int'   |-ParmVarDecl 0x12600ddf0 <line:3:24, col:37> col:37 used maxerrors 'unsigned int'   |-ParmVarDecl 0x12600de70 <line:4:24, col:37> col:37 used flags 'unsigned int'   `-CompoundStmt 0x126028210 <line:5:1, line:31:1>     |-CallExpr 0x12600e2a0 <line:6:5, line:7:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12600e1a0 <line:6:5> 'int ()' Function 0x12600e0e8 'VIR_DOMAIN_DEBUG' 'int ()'     | |-RecoveryExpr 0x12600e1c0 <col:22> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12600e220 <col:27> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x12600e240 <line:7:22> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x12600e260 <col:30> 'unsigned int' lvalue ParmVar 0x12600ddf0 'maxerrors' 'unsigned int'     | `-DeclRefExpr 0x12600e280 <col:41> 'unsigned int' lvalue ParmVar 0x12600de70 'flags' 'unsigned int'     |-CallExpr 0x126027448 <line:9:5, col:23> 'int'     | `-ImplicitCastExpr 0x126027430 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12600e3c8 <col:5> 'int ()' Function 0x12600e310 'virResetLastError' 'int ()'     |-CallExpr 0x1260275c0 <line:11:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126027548 <col:5> 'int ()' Function 0x126027490 'virCheckDomainReturn' 'int ()'     | |-RecoveryExpr 0x126027568 <col:26> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1260275a8 <col:31, col:32> 'int' prefix '-'     |   `-IntegerLiteral 0x126027588 <col:32> 'int' 1     |-IfStmt 0x1260279d8 <line:13:5, line:16:42> has_else     | |-ImplicitCastExpr 0x126027610 <line:13:9> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x1260275f0 <col:9> 'unsigned int' lvalue ParmVar 0x12600ddf0 'maxerrors' 'unsigned int'     | |-CallExpr 0x1260277d0 <line:14:9, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x126027708 <col:9> 'int ()' Function 0x126027650 'virCheckNonNullArgGoto' 'int ()'     | | |-RecoveryExpr 0x126027728 <col:32> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1260277b0 <col:40> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1260279a8 <line:16:9, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1260278e0 <col:9> 'int ()' Function 0x126027828 'virCheckNullArgGoto' 'int ()'     |   |-RecoveryExpr 0x126027900 <col:29> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x126027988 <col:37> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126027ec0 <line:18:5, line:24:5>     | |-CXXDependentScopeMemberExpr 0x126027ab8 <line:18:9, col:28> '<dependent type>' contains-errors lvalue ->domainGetDiskErrors     | | `-CXXDependentScopeMemberExpr 0x126027a70 <col:9, col:20> '<dependent type>' contains-errors lvalue ->driver     | |   `-CXXDependentScopeMemberExpr 0x126027a28 <col:9, col:14> '<dependent type>' contains-errors lvalue ->conn     | |     `-RecoveryExpr 0x126027a08 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126027e98 <col:49, line:24:5>     |   |-DeclStmt 0x126027d38 <line:19:9, line:20:75>     |   | `-VarDecl 0x126027b18 <line:19:9, line:20:74> line:19:13 used ret 'int' cinit     |   |   `-CallExpr 0x126027cf8 <col:19, line:20:74> '<dependent type>' contains-errors     |   |     |-CXXDependentScopeMemberExpr 0x126027c30 <line:19:19, col:38> '<dependent type>' contains-errors lvalue ->domainGetDiskErrors     |   |     | `-CXXDependentScopeMemberExpr 0x126027be8 <col:19, col:30> '<dependent type>' contains-errors lvalue ->driver     |   |     |   `-CXXDependentScopeMemberExpr 0x126027ba0 <col:19, col:24> '<dependent type>' contains-errors lvalue ->conn     |   |     |     `-RecoveryExpr 0x126027b80 <col:19> '<dependent type>' contains-errors lvalue     |   |     |-RecoveryExpr 0x126027c78 <col:58> '<dependent type>' contains-errors lvalue     |   |     |-RecoveryExpr 0x126027c98 <col:63> '<dependent type>' contains-errors lvalue     |   |     |-DeclRefExpr 0x126027cb8 <line:20:58> 'unsigned int' lvalue ParmVar 0x12600ddf0 'maxerrors' 'unsigned int'     |   |     `-DeclRefExpr 0x126027cd8 <col:69> 'unsigned int' lvalue ParmVar 0x12600de70 'flags' 'unsigned int'     |   |-IfStmt 0x126027e30 <line:21:9, line:22:18>     |   | |-BinaryOperator 0x126027da8 <line:21:13, col:19> 'int' contains-errors '<'     |   | | |-ImplicitCastExpr 0x126027d90 <col:13> 'int' contains-errors <LValueToRValue>     |   | | | `-DeclRefExpr 0x126027d50 <col:13> 'int' contains-errors lvalue Var 0x126027b18 'ret' 'int'     |   | | `-IntegerLiteral 0x126027d70 <col:19> 'int' 0     |   | `-GotoStmt 0x126027e18 <line:22:13, col:18> 'error' 0x126027dc8     |   `-ReturnStmt 0x126027e88 <line:23:9, col:16>     |     `-ImplicitCastExpr 0x126027e70 <col:16> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x126027e50 <col:16> 'int' contains-errors lvalue Var 0x126027b18 'ret' 'int'     |-CallExpr 0x126027ff8 <line:26:5, col:31> 'int'     | `-ImplicitCastExpr 0x126027fe0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x126027fc0 <col:5> 'int ()' Function 0x126027f08 'virReportUnsupportedError' 'int ()'     |-LabelStmt 0x1260281a8 <line:28:2, line:29:31> 'error'     | `-CallExpr 0x126028180 <col:5, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1260280f8 <col:5> 'int ()' Function 0x126028040 'virDispatchError' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x126028138 <col:22, col:27> '<dependent type>' contains-errors lvalue ->conn     |     `-RecoveryExpr 0x126028118 <col:22> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x126028200 <line:30:5, col:13>       `-UnaryOperator 0x1260281e8 <col:12, col:13> 'int' prefix '-'         `-IntegerLiteral 0x1260281c8 <col:13> 'int' 1 ","21170":"`-FunctionDecl 0x15380e958  line:1:1 invalid TPMI_AES_KEY_BITS_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x15380e728 <col:29, col:48> col:48 invalid target 'int *'   |-ParmVarDecl 0x15380e7e0 <col:56, col:63> col:63 invalid buffer 'int **'   |-ParmVarDecl 0x15380e860 <col:71, col:78> col:78 invalid size 'int *'   `-CompoundStmt 0x1538277b8 <line:2:1, line:18:1>     |-IfStmt 0x15380ece8 <line:5:5, line:7:5>     | |-BinaryOperator 0x15380eaa8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15380ea68 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15380ea88 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15380ecd8 <col:31, line:7:5>     |-IfStmt 0x153827750 <line:8:5, line:16:5>     | |-BinaryOperator 0x15380ed98 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15380ed58 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15380ed78 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x153827738 <col:31, line:16:5>     |   `-SwitchStmt 0x153827618 <line:9:2, line:15:2>     |     |-UnaryOperator 0x153827600 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x15380edd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x15380edb8 <col:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x153827718 <col:19, line:15:2>     |       |-CaseStmt 0x153827660 <line:10:4, line:12:6>     |       | |-IntegerLiteral 0x153827640 <line:10:9> 'int' 128     |       | `-CaseStmt 0x1538276a8 <line:11:4, line:12:6>     |       |   |-IntegerLiteral 0x153827688 <line:11:9> 'int' 256     |       |   `-BreakStmt 0x1538276d0 <line:12:6>     |       `-DefaultStmt 0x1538276f8 <line:13:4, col:11>     |         `-NullStmt 0x1538276f0 <col:11>     `-ReturnStmt 0x1538277a8 <line:17:5, col:12>       `-RecoveryExpr 0x153827788 <col:12> '<dependent type>' contains-errors lvalue ","20683":"`-FunctionDecl 0x147140b40  line:1:13 svm_get_idt 'void (struct kvm_vcpu *, struct desc_ptr *)' static   |-ParmVarDecl 0x147128648 <col:25, col:42> col:42 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x147140a28 <col:48, col:65> col:65 used dt 'struct desc_ptr *'   `-CompoundStmt 0x1471413c0 <line:2:1, line:7:1>     |-DeclStmt 0x147141038 <line:3:2, col:37>     | |-RecordDecl 0x147140c40 <col:2, col:9> col:9 struct vcpu_svm     | `-VarDecl 0x147140da8 <col:2, col:36> col:19 used svm 'struct vcpu_svm *' cinit     |   `-ImplicitCastExpr 0x147141008 <col:25, col:36> 'struct vcpu_svm *' <IntegralToPointer>     |     `-CallExpr 0x147140fc8 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x147140fb0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x147140f40 <col:25> 'int ()' Function 0x147140e88 'to_svm' 'int ()'     |       `-ImplicitCastExpr 0x147140ff0 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x147140f60 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x147128648 'vcpu' 'struct kvm_vcpu *'     |-BinaryOperator 0x1471411e8 <line:5:2, col:34> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x147141088 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147141050 <col:2> 'struct desc_ptr *' lvalue ParmVar 0x147140a28 'dt' 'struct desc_ptr *'     | `-CXXDependentScopeMemberExpr 0x1471411a0 <col:13, col:34> '<dependent type>' contains-errors lvalue .limit     |   `-CXXDependentScopeMemberExpr 0x147141158 <col:13, col:29> '<dependent type>' contains-errors lvalue .idtr     |     `-CXXDependentScopeMemberExpr 0x147141110 <col:13, col:24> '<dependent type>' contains-errors lvalue ->save     |       `-RecoveryExpr 0x1471410e8 <col:13, col:18> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1471410b0 <col:13> 'struct vcpu_svm *' lvalue Var 0x147140da8 'svm' 'struct vcpu_svm *'     `-BinaryOperator 0x1471413a0 <line:6:2, col:37> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x147141240 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x147141208 <col:2> 'struct desc_ptr *' lvalue ParmVar 0x147140a28 'dt' 'struct desc_ptr *'       `-CXXDependentScopeMemberExpr 0x147141358 <col:16, col:37> '<dependent type>' contains-errors lvalue .base         `-CXXDependentScopeMemberExpr 0x147141310 <col:16, col:32> '<dependent type>' contains-errors lvalue .idtr           `-CXXDependentScopeMemberExpr 0x1471412c8 <col:16, col:27> '<dependent type>' contains-errors lvalue ->save             `-RecoveryExpr 0x1471412a0 <col:16, col:21> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x147141268 <col:16> 'struct vcpu_svm *' lvalue Var 0x147140da8 'svm' 'struct vcpu_svm *' ","21218":"`-FunctionDecl 0x14b80a310  col:32 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14b80a410 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14b80a3b8 <<invalid sloc>> Implicit 873 ","20361":"`-FunctionDecl 0x145141188  line:1:1 invalid glue 'int (int (*)(), int)'   |-ParmVarDecl 0x145128580 <col:6, <invalid sloc>> col:6 invalid glue 'int (*)()'   |-ParmVarDecl 0x145128600 <col:52> col:52 _8 'int'   `-CompoundStmt 0x145141a80 <line:8:1, line:27:1>     |-DeclStmt 0x145141358 <line:9:5, col:12>     | |-VarDecl 0x145141258 <col:5, col:9> col:9 used x 'int'     | `-VarDecl 0x1451412d8 <col:5, col:11> col:11 used y 'int'     |-IfStmt 0x145141458 <line:14:5, line:16:5>     | |-RecoveryExpr 0x145141410 <line:14:9, col:55> '_Bool' contains-errors     | `-CompoundStmt 0x145141440 <col:58, line:16:5>     |   `-ReturnStmt 0x145141430 <line:15:9>     `-ForStmt 0x145141a48 <line:18:5, line:26:5>       |-BinaryOperator 0x1451414b8 <line:18:10, col:14> 'int' '='       | |-DeclRefExpr 0x145141478 <col:10> 'int' lvalue Var 0x1451412d8 'y' 'int'       | `-IntegerLiteral 0x145141498 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x145141550 <col:17, col:21> 'int' contains-errors '<'       | |-DeclRefExpr 0x1451414d8 <col:17> 'int' lvalue Var 0x1451412d8 'y' 'int'       | `-RecoveryExpr 0x145141530 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x145141590 <col:32, col:33> 'int' postfix '++'       | `-DeclRefExpr 0x145141570 <col:32> 'int' lvalue Var 0x1451412d8 'y' 'int'       `-CompoundStmt 0x145141a30 <col:37, line:26:5>         `-ForStmt 0x1451419f8 <line:19:9, line:23:9>           |-BinaryOperator 0x1451415e8 <line:19:14, col:18> 'int' '='           | |-DeclRefExpr 0x1451415a8 <col:14> 'int' lvalue Var 0x145141258 'x' 'int'           | `-IntegerLiteral 0x1451415c8 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x145141680 <col:21, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x145141608 <col:21> 'int' lvalue Var 0x145141258 'x' 'int'           | `-RecoveryExpr 0x145141660 <col:25> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x1451416c0 <col:35, col:36> 'int' postfix '++'           | `-DeclRefExpr 0x1451416a0 <col:35> 'int' lvalue Var 0x145141258 'x' 'int'           `-CompoundStmt 0x1451419e0 <col:40, line:23:9>             `-CallExpr 0x1451419a0 <line:20:13, col:47> '<dependent type>' contains-errors               |-DeclRefExpr 0x145141800 <col:13> 'int ()' Function 0x145141748 'ROP_OP_TR' 'int ()'               |-RecoveryExpr 0x1451418f0 <col:23> '<dependent type>' contains-errors lvalue               |-RecoveryExpr 0x145141910 <col:26> '<dependent type>' contains-errors lvalue               |-UnaryOperator 0x145141968 <col:35, col:36> '<dependent type>' contains-errors prefix '*' cannot overflow               | `-ImplicitCastExpr 0x145141950 <col:36> '<dependent type>' contains-errors <LValueToRValue>               |   `-RecoveryExpr 0x145141930 <col:36> '<dependent type>' contains-errors lvalue               `-RecoveryExpr 0x145141980 <col:41> '<dependent type>' contains-errors lvalue ","20642":"`-FunctionDecl 0x15700de88  line:1:5 invalid SSL_set_fd 'int (int *, int)'   |-ParmVarDecl 0x15700dd28 <col:16, col:21> col:21 invalid s 'int *'   |-ParmVarDecl 0x15700dda8 <col:23, col:27> col:27 used fd 'int'   `-CompoundStmt 0x157028560 <line:2:2, line:18:2>     |-DeclStmt 0x15700dfe0 <line:3:2, col:11>     | `-VarDecl 0x15700df58 <col:2, col:10> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x15700dfc0 <col:10> 'int' 0     |-IfStmt 0x157028058 <line:8:2, line:12:3>     | |-BinaryOperator 0x15700e3d8 <line:8:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15700e398 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15700e3b8 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x157028038 <line:9:3, line:12:3>     |   |-CallExpr 0x157027fa0 <line:10:3, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x157027ee0 <col:3> 'int ()' Function 0x157027e28 'SSLerr' 'int ()'     |   | |-RecoveryExpr 0x157027f60 <col:10> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x157027f80 <col:27> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x157028020 <line:11:3, col:8> 'err' 0x157027fd0     |-CallExpr 0x157028240 <line:13:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157028158 <col:2> 'int ()' Function 0x1570280a0 'BIO_set_fd' 'int ()'     | |-RecoveryExpr 0x157028200 <col:13> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x157028190 <col:17> 'int' lvalue ParmVar 0x15700dda8 'fd' 'int'     | `-RecoveryExpr 0x157028220 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157028440 <line:14:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157028358 <col:2> 'int ()' Function 0x1570282a0 'SSL_set_bio' 'int ()'     | |-RecoveryExpr 0x157028378 <col:14> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x157028400 <col:16> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x157028420 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1570284b8 <line:15:2, col:6> 'int' '='     | |-DeclRefExpr 0x157028478 <col:2> 'int' lvalue Var 0x15700df58 'ret' 'int'     | `-IntegerLiteral 0x157028498 <col:6> 'int' 1     `-LabelStmt 0x157028540 <line:16:1, line:17:12> 'err'       `-ReturnStmt 0x157028530 <col:2, col:12>         `-ImplicitCastExpr 0x157028518 <col:8, col:12> 'int' <LValueToRValue>           `-ParenExpr 0x1570284f8 <col:8, col:12> 'int' lvalue             `-DeclRefExpr 0x1570284d8 <col:9> 'int' lvalue Var 0x15700df58 'ret' 'int' ","20770":"`-FunctionDecl 0x11f80def0  line:1:24 invalid __cil_get_constraint_operator_flavor 'enum cil_flavor (const char *)' static   |-ParmVarDecl 0x11f80dd98 <col:61, col:73> col:73 used op 'const char *'   `-CompoundStmt 0x11f826f10 <line:2:1, line:12:1>     `-IfStmt 0x11f826ee0 <line:3:2, line:11:14> has_else       |-BinaryOperator 0x11f8266c0 <line:3:6, col:12> 'int' contains-errors '=='       | |-DeclRefExpr 0x11f826630 <col:6> 'const char *' lvalue ParmVar 0x11f80dd98 'op' 'const char *'       | `-RecoveryExpr 0x11f8266a0 <col:12> '<dependent type>' contains-errors lvalue       |-ReturnStmt 0x11f826718 <col:33, col:40>       | `-RecoveryExpr 0x11f8266f8 <col:40> '<dependent type>' contains-errors lvalue       `-IfStmt 0x11f826eb0 <line:4:7, line:11:14> has_else         |-BinaryOperator 0x11f8267a0 <line:4:11, col:17> 'int' contains-errors '=='         | |-DeclRefExpr 0x11f826728 <col:11> 'const char *' lvalue ParmVar 0x11f80dd98 'op' 'const char *'         | `-RecoveryExpr 0x11f826780 <col:17> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x11f8267f8 <col:33, col:40>         | `-RecoveryExpr 0x11f8267d8 <col:40> '<dependent type>' contains-errors lvalue         `-IfStmt 0x11f826e80 <line:5:7, line:11:14> has_else           |-BinaryOperator 0x11f826880 <line:5:11, col:17> 'int' contains-errors '=='           | |-DeclRefExpr 0x11f826808 <col:11> 'const char *' lvalue ParmVar 0x11f80dd98 'op' 'const char *'           | `-RecoveryExpr 0x11f826860 <col:17> '<dependent type>' contains-errors lvalue           |-ReturnStmt 0x11f8268d8 <col:33, col:40>           | `-RecoveryExpr 0x11f8268b8 <col:40> '<dependent type>' contains-errors lvalue           `-IfStmt 0x11f826e50 <line:6:7, line:11:14> has_else             |-BinaryOperator 0x11f826960 <line:6:11, col:17> 'int' contains-errors '=='             | |-DeclRefExpr 0x11f8268e8 <col:11> 'const char *' lvalue ParmVar 0x11f80dd98 'op' 'const char *'             | `-RecoveryExpr 0x11f826940 <col:17> '<dependent type>' contains-errors lvalue             |-ReturnStmt 0x11f8269b8 <col:33, col:40>             | `-RecoveryExpr 0x11f826998 <col:40> '<dependent type>' contains-errors lvalue             `-IfStmt 0x11f826e20 <line:7:7, line:11:14> has_else               |-BinaryOperator 0x11f826a40 <line:7:11, col:17> 'int' contains-errors '=='               | |-DeclRefExpr 0x11f8269c8 <col:11> 'const char *' lvalue ParmVar 0x11f80dd98 'op' 'const char *'               | `-RecoveryExpr 0x11f826a20 <col:17> '<dependent type>' contains-errors lvalue               |-ReturnStmt 0x11f826a98 <col:33, col:40>               | `-RecoveryExpr 0x11f826a78 <col:40> '<dependent type>' contains-errors lvalue               `-IfStmt 0x11f826df0 <line:8:7, line:11:14> has_else                 |-BinaryOperator 0x11f826b20 <line:8:11, col:17> 'int' contains-errors '=='                 | |-DeclRefExpr 0x11f826aa8 <col:11> 'const char *' lvalue ParmVar 0x11f80dd98 'op' 'const char *'                 | `-RecoveryExpr 0x11f826b00 <col:17> '<dependent type>' contains-errors lvalue                 |-ReturnStmt 0x11f826b78 <col:38, col:45>                 | `-RecoveryExpr 0x11f826b58 <col:45> '<dependent type>' contains-errors lvalue                 `-IfStmt 0x11f826dc0 <line:9:7, line:11:14> has_else                   |-BinaryOperator 0x11f826c00 <line:9:11, col:17> 'int' contains-errors '=='                   | |-DeclRefExpr 0x11f826b88 <col:11> 'const char *' lvalue ParmVar 0x11f80dd98 'op' 'const char *'                   | `-RecoveryExpr 0x11f826be0 <col:17> '<dependent type>' contains-errors lvalue                   |-ReturnStmt 0x11f826c58 <col:38, col:45>                   | `-RecoveryExpr 0x11f826c38 <col:45> '<dependent type>' contains-errors lvalue                   `-IfStmt 0x11f826d90 <line:10:7, line:11:14> has_else                     |-BinaryOperator 0x11f826ce0 <line:10:11, col:17> 'int' contains-errors '=='                     | |-DeclRefExpr 0x11f826c68 <col:11> 'const char *' lvalue ParmVar 0x11f80dd98 'op' 'const char *'                     | `-RecoveryExpr 0x11f826cc0 <col:17> '<dependent type>' contains-errors lvalue                     |-ReturnStmt 0x11f826d38 <col:38, col:45>                     | `-RecoveryExpr 0x11f826d18 <col:45> '<dependent type>' contains-errors lvalue                     `-ReturnStmt 0x11f826d80 <line:11:7, col:14>                       `-RecoveryExpr 0x11f826d60 <col:14> '<dependent type>' contains-errors lvalue ","21199":"`-FunctionDecl 0x15a1281c8  line:1:8 invalid ZSTD_sizeof_CCtx 'int (const int *)'   |-ParmVarDecl 0x15a1280f0 <col:25, col:42> col:42 invalid cctx 'const int *'   `-CompoundStmt 0x15a808830 <line:2:1, line:7:1>     |-IfStmt 0x15a128340 <line:3:5, col:28>     | |-BinaryOperator 0x15a1282f0 <col:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15a128278 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15a1282d0 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a128330 <col:21, col:28>     |   `-IntegerLiteral 0x15a128310 <col:28> 'int' 0     `-ReturnStmt 0x15a808820 <line:4:5, line:6:36>       `-BinaryOperator 0x15a808800 <line:4:12, line:6:36> '<dependent type>' contains-errors '+'         |-BinaryOperator 0x15a128680 <line:4:12, line:5:48> '<dependent type>' contains-errors '+'         | |-BinaryOperator 0x15a128458 <line:4:12, col:34> '<dependent type>' contains-errors '+'         | | |-UnaryExprOrTypeTraitExpr 0x15a1283d0 <col:12, col:24> 'unsigned long' contains-errors sizeof         | | | `-ParenExpr 0x15a1283b0 <col:18, col:24> '<dependent type>' contains-errors         | | |   `-UnaryOperator 0x15a128398 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow         | | |     `-ImplicitCastExpr 0x15a128380 <col:20> '<dependent type>' contains-errors <LValueToRValue>         | | |       `-RecoveryExpr 0x15a128360 <col:20> '<dependent type>' contains-errors lvalue         | | `-CXXDependentScopeMemberExpr 0x15a128410 <col:28, col:34> '<dependent type>' contains-errors lvalue ->workSpaceSize         | |   `-RecoveryExpr 0x15a1283f0 <col:28> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x15a128658 <line:5:14, col:48> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x15a1285d0 <col:14> 'int ()' Function 0x15a128518 'ZSTD_sizeof_CDict' 'int ()'         |   `-CXXDependentScopeMemberExpr 0x15a128610 <col:32, col:38> '<dependent type>' contains-errors lvalue ->cdictLocal         |     `-RecoveryExpr 0x15a1285f0 <col:32> '<dependent type>' contains-errors lvalue         `-CallExpr 0x15a1287c0 <line:6:14, col:36> '<dependent type>' contains-errors           |-DeclRefExpr 0x15a128780 <col:14> 'int ()' Function 0x15a1286c8 'ZSTD_sizeof_mtctx' 'int ()'           `-RecoveryExpr 0x15a1287a0 <col:32> '<dependent type>' contains-errors lvalue ","20754":"`-FunctionDecl 0x154128438  line:1:18 invalid bson_append_code_w_scope_n 'int (int *, const char *, const char *, int, const int *)'   |-ParmVarDecl 0x154128128 <col:46, col:52> col:52 invalid b 'int *'   |-ParmVarDecl 0x1541281a8 <col:55, col:67> col:67 used name 'const char *'   |-ParmVarDecl 0x154128228 <line:2:9, col:21> col:21 used code 'const char *'   |-ParmVarDecl 0x1541282a8 <col:27, col:31> col:31 used len 'int'   |-ParmVarDecl 0x154128328 <col:36, col:48> col:48 invalid scope 'const int *'   `-CompoundStmt 0x1548096e8 <col:56, line:15:1>     |-DeclStmt 0x154128620 <line:4:5, col:17>     | |-VarDecl 0x154128520 <col:5, col:9> col:9 used sl 'int'     | `-VarDecl 0x1541285a0 <col:5, col:13> col:13 used size 'int'     |-IfStmt 0x1541286d0 <line:5:5, col:26>     | |-UnaryOperator 0x154128670 <col:10, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x154128658 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x154128638 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1541286c0 <col:19, col:26>     |   `-RecoveryExpr 0x1541286a0 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154128788 <line:6:5, col:16> 'int' '='     | |-DeclRefExpr 0x1541286f0 <col:5> 'int' lvalue Var 0x154128520 'sl' 'int'     | `-BinaryOperator 0x154128768 <col:10, col:16> 'int' '+'     |   |-ImplicitCastExpr 0x154128750 <col:10> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x154128710 <col:10> 'int' lvalue ParmVar 0x1541282a8 'len' 'int'     |   `-IntegerLiteral 0x154128730 <col:16> 'int' 1     |-BinaryOperator 0x154808e78 <line:7:5, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x1541287a8 <col:5> 'int' lvalue Var 0x1541285a0 'size' 'int'     | `-BinaryOperator 0x154808e58 <col:12, col:42> '<dependent type>' contains-errors '+'     |   |-BinaryOperator 0x154808c78 <col:12, col:20> 'int' '+'     |   | |-BinaryOperator 0x154808c20 <col:12, col:16> 'int' '+'     |   | | |-IntegerLiteral 0x1541287c8 <col:12> 'int' 4     |   | | `-IntegerLiteral 0x154808c00 <col:16> 'int' 4     |   | `-ImplicitCastExpr 0x154808c60 <col:20> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x154808c40 <col:20> 'int' lvalue Var 0x154128520 'sl' 'int'     |   `-CallExpr 0x154808e30 <col:25, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x154808df0 <col:25> 'int ()' Function 0x154808d38 'bson_size' 'int ()'     |     `-RecoveryExpr 0x154808e10 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154809170 <line:8:5, line:9:16>     | |-BinaryOperator 0x154809108 <line:8:10, col:66> 'int' contains-errors '=='     | | |-CallExpr 0x1548090a8 <col:10, col:61> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x154808f78 <col:10> 'int ()' Function 0x154808ec0 'bson_append_estart' 'int ()'     | | | |-RecoveryExpr 0x154808f98 <col:30> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x154809088 <col:33> '<dependent type>' contains-errors lvalue     | | | |-DeclRefExpr 0x154808fd0 <col:50> 'const char *' lvalue ParmVar 0x1541281a8 'name' 'const char *'     | | | `-DeclRefExpr 0x154808ff0 <col:56> 'int' lvalue Var 0x1541285a0 'size' 'int'     | | `-RecoveryExpr 0x1548090e8 <col:66> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x154809160 <line:9:9, col:16>     |   `-RecoveryExpr 0x154809140 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1548092e8 <line:10:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154809270 <col:5> 'int ()' Function 0x1548091b8 'bson_append32' 'int ()'     | |-RecoveryExpr 0x154809290 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1548092d0 <col:23, col:24> 'int *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x1548092b0 <col:24> 'int' lvalue Var 0x1541285a0 'size' 'int'     |-CallExpr 0x154809390 <line:11:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154809318 <col:5> 'int ()' Function 0x1548091b8 'bson_append32' 'int ()'     | |-RecoveryExpr 0x154809338 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x154809378 <col:23, col:24> 'int *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x154809358 <col:24> 'int' lvalue Var 0x154128520 'sl' 'int'     |-CallExpr 0x154809520 <line:12:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1548094a0 <col:5> 'int ()' Function 0x1548093e8 'bson_append' 'int ()'     | |-RecoveryExpr 0x1548094c0 <col:18> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x1548094e0 <col:21> 'const char *' lvalue ParmVar 0x154128228 'code' 'const char *'     | `-DeclRefExpr 0x154809500 <col:27> 'int' lvalue Var 0x154128520 'sl' 'int'     |-CallExpr 0x154809668 <line:13:5, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154809558 <col:5> 'int ()' Function 0x1548093e8 'bson_append' 'int ()'     | |-RecoveryExpr 0x154809578 <col:18> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x1548095b8 <col:21, col:28> '<dependent type>' contains-errors lvalue ->data     | | `-RecoveryExpr 0x154809598 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x154809640 <col:34, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154809600 <col:34> 'int ()' Function 0x154808d38 'bson_size' 'int ()'     |   `-RecoveryExpr 0x154809620 <col:45> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1548096d8 <line:14:5, col:12>       `-RecoveryExpr 0x1548096b8 <col:12> '<dependent type>' contains-errors lvalue ","21226":"`-FunctionDecl 0x1438f4c80  line:1:6 invalid qxl_render_cursor 'void (int *, int *)'   |-ParmVarDecl 0x1438f4b28 <col:24, col:38> col:38 referenced invalid qxl 'int *'   |-ParmVarDecl 0x1438f4ba8 <col:43, col:58> col:58 invalid ext 'int *'   `-CompoundStmt 0x1420177b0 <line:2:1, line:43:1>     |-IfStmt 0x14200f108 <line:7:5, line:9:5>     | |-BinaryOperator 0x14200f0c0 <line:7:9, col:50> 'int' contains-errors '||'     | | |-UnaryOperator 0x1438f5180 <col:9, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x1438f5168 <col:10, col:23> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x1438f5120 <col:10, col:23> '<dependent type>' contains-errors lvalue ->mouse_set     | | |     `-CXXDependentScopeMemberExpr 0x1438f50d8 <col:10, col:19> '<dependent type>' contains-errors lvalue .ds     | | |       `-CXXDependentScopeMemberExpr 0x1438f5090 <col:10, col:15> '<dependent type>' contains-errors lvalue ->ssd     | | |         `-RecoveryExpr 0x1438f5070 <col:10> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14200f0a8 <col:36, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x14200f090 <col:37, col:50> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x14200f048 <col:37, col:50> '<dependent type>' contains-errors lvalue ->cursor_define     | |       `-CXXDependentScopeMemberExpr 0x14200f000 <col:37, col:46> '<dependent type>' contains-errors lvalue .ds     | |         `-CXXDependentScopeMemberExpr 0x1438f51b8 <col:37, col:42> '<dependent type>' contains-errors lvalue ->ssd     | |           `-RecoveryExpr 0x1438f5198 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14200f0f0 <col:65, line:9:5>     |   `-ReturnStmt 0x14200f0e0 <line:8:9>     |-IfStmt 0x14200f958 <line:11:5, line:15:5>     | |-BinaryOperator 0x14200f330 <line:11:9, col:40> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14200f1b0 <col:9, col:22> 'int' contains-errors '>'     | | | |-CXXDependentScopeMemberExpr 0x14200f148 <col:9, col:14> '<dependent type>' contains-errors lvalue ->debug     | | | | `-RecoveryExpr 0x14200f128 <col:9> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x14200f190 <col:22> 'int' 1     | | `-BinaryOperator 0x14200f310 <col:27, col:40> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x14200f2a8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->type     | |   | `-RecoveryExpr 0x14200f288 <col:27> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x14200f2f0 <col:40> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14200f930 <col:57, line:15:5>     |   |-CallExpr 0x14200f5f0 <line:12:9, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14200f430 <col:9> 'int ()' Function 0x14200f378 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x14200f5d0 <col:17> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14200f4b0 <col:25> 'char[4]' lvalue \"STR\"     |   | `-PredefinedExpr 0x14200f580 <col:32> 'const char[18]' lvalue __FUNCTION__     |   |   `-StringLiteral 0x14200f550 <col:32> 'const char[18]' lvalue \"qxl_render_cursor\"     |   |-CallExpr 0x14200f820 <line:13:9, col:51> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14200f708 <col:9> 'int ()' Function 0x14200f650 'qxl_log_cmd_cursor' 'int ()'     |   | |-RecoveryExpr 0x14200f728 <col:28> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14200f800 <col:33> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x14200f780 <col:38, col:43> '<dependent type>' contains-errors lvalue ->group_id     |   |   `-RecoveryExpr 0x14200f760 <col:38> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14200f900 <line:14:9, col:30> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14200f858 <col:9> 'int ()' Function 0x14200f378 'fprintf' 'int ()'     |     |-RecoveryExpr 0x14200f8e0 <col:17> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14200f890 <col:25> 'char[4]' lvalue \"STR\"     `-SwitchStmt 0x14200fa58 <line:16:5, line:42:5>       |-CXXDependentScopeMemberExpr 0x14200fa10 <line:16:13, col:18> '<dependent type>' contains-errors lvalue ->type       | `-RecoveryExpr 0x14200f9f0 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x142017758 <col:24, line:42:5>         |-IfStmt 0x14200fd38 <line:19:9, line:22:9>         | |-RecoveryExpr 0x14200fc68 <line:19:13, col:48> '_Bool' contains-errors         | `-CompoundStmt 0x14200fd20 <col:59, line:22:9>         |   `-ReturnStmt 0x14200fd10 <line:21:13>         |-IfStmt 0x142016a30 <line:24:9, line:26:9>         | |-RecoveryExpr 0x14200fe78 <line:24:13, col:18> '_Bool' contains-errors         | `-CompoundStmt 0x142016a20 <col:24, line:26:9>         |-CallExpr 0x142016c18 <line:27:9, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x142016b30 <col:9> 'int ()' Function 0x142016a78 'qemu_mutex_lock' 'int ()'         | `-UnaryOperator 0x142016c00 <col:25, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x142016bb8 <col:26, col:35> '<dependent type>' contains-errors lvalue .lock         |     `-CXXDependentScopeMemberExpr 0x142016b70 <col:26, col:31> '<dependent type>' contains-errors lvalue ->ssd         |       `-RecoveryExpr 0x142016b50 <col:26> '<dependent type>' contains-errors lvalue         |-IfStmt 0x142016ee0 <line:28:9, line:30:9>         | |-CXXDependentScopeMemberExpr 0x142016ca8 <line:28:13, col:22> '<dependent type>' contains-errors lvalue .cursor         | | `-CXXDependentScopeMemberExpr 0x142016c60 <col:13, col:18> '<dependent type>' contains-errors lvalue ->ssd         | |   `-RecoveryExpr 0x142016c40 <col:13> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x142016ec8 <col:30, line:30:9>         |   `-CallExpr 0x142016ea0 <line:29:13, col:39> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x142016dd0 <col:13> 'int ()' Function 0x142016d18 'cursor_put' 'int ()'         |     `-CXXDependentScopeMemberExpr 0x142016e58 <col:24, col:33> '<dependent type>' contains-errors lvalue .cursor         |       `-CXXDependentScopeMemberExpr 0x142016e10 <col:24, col:29> '<dependent type>' contains-errors lvalue ->ssd         |         `-RecoveryExpr 0x142016df0 <col:24> '<dependent type>' contains-errors lvalue         |-CallExpr 0x142017350 <line:34:9, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x142017268 <col:9> 'int ()' Function 0x1420171b0 'qemu_mutex_unlock' 'int ()'         | `-UnaryOperator 0x142017338 <col:27, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x1420172f0 <col:28, col:37> '<dependent type>' contains-errors lvalue .lock         |     `-CXXDependentScopeMemberExpr 0x1420172a8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->ssd         |       `-RecoveryExpr 0x142017288 <col:28> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x142017378 <line:35:9>         |-CallExpr 0x142017468 <line:37:9, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x142017380 <col:9> 'int ()' Function 0x142016a78 'qemu_mutex_lock' 'int ()'         | `-UnaryOperator 0x142017450 <col:25, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x142017408 <col:26, col:35> '<dependent type>' contains-errors lvalue .lock         |     `-CXXDependentScopeMemberExpr 0x1420173c0 <col:26, col:31> '<dependent type>' contains-errors lvalue ->ssd         |       `-RecoveryExpr 0x1420173a0 <col:26> '<dependent type>' contains-errors lvalue         |-CallExpr 0x142017728 <line:40:9, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x142017640 <col:9> 'int ()' Function 0x1420171b0 'qemu_mutex_unlock' 'int ()'         | `-UnaryOperator 0x142017710 <col:27, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x1420176c8 <col:28, col:37> '<dependent type>' contains-errors lvalue .lock         |     `-CXXDependentScopeMemberExpr 0x142017680 <col:28, col:33> '<dependent type>' contains-errors lvalue ->ssd         |       `-RecoveryExpr 0x142017660 <col:28> '<dependent type>' contains-errors lvalue         `-BreakStmt 0x142017750 <line:41:9> ","21211":"`-FunctionDecl 0x148941910  col:33 implicit used floor 'double (double)' extern   |-ParmVarDecl 0x148941a10 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x1489419b8 <<invalid sloc>> Implicit 1079   |-NoThrowAttr 0x148941a80 <col:33> Implicit   `-ConstAttr 0x148941aa8 <col:33> Implicit ","20611":"`-FunctionDecl 0x159928318  line:1:1 invalid gst_mpegts_section_new 'int (int, int *, int)'   |-ParmVarDecl 0x1599280f0 <col:25, col:33> col:33 invalid pid 'int'   |-ParmVarDecl 0x1599281a8 <col:38, col:47> col:47 referenced invalid data 'int *'   |-ParmVarDecl 0x159928228 <col:53, col:59> col:59 invalid data_size 'int'   `-CompoundStmt 0x15a0093d0 <line:2:1, line:53:1>     |-IfStmt 0x15a008918 <line:10:3, line:11:10>     | |-CallExpr 0x15a008888 <line:10:7, col:49> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x159928728 <col:7> 'int ()' Function 0x159928670 'G_UNLIKELY' 'int ()'     | | `-BinaryOperator 0x15a008868 <col:19, col:48> 'int' contains-errors '<'     | |   |-RecoveryExpr 0x159928748 <col:19> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x15a008848 <col:31, col:48> '<dependent type>' contains-errors '+'     | |     |-RecoveryExpr 0x15a008828 <col:31> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x159928780 <col:48> 'int' 3     | `-GotoStmt 0x15a008900 <line:11:5, col:10> 'short_packet' 0x15a0088b0     |-UnaryOperator 0x15a008b58 <line:20:3, col:7> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x15a008b30 <col:3> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15a008b10 <col:3> 'int *' lvalue ParmVar 0x1599281a8 'data' 'int *'     |-IfStmt 0x15a0090c8 <line:25:3, line:41:3>     | |-RecoveryExpr 0x15a008c80 <line:25:7, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x15a0090a8 <col:28, line:41:3>     |   |-CompoundAssignOperator 0x15a008e28 <line:29:5, col:13> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x15a008de0 <col:5> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15a008dc0 <col:5> 'int *' lvalue ParmVar 0x1599281a8 'data' 'int *'     |   | `-IntegerLiteral 0x15a008e08 <col:13> 'int' 2     |   `-CompoundAssignOperator 0x15a008f28 <line:32:5, col:13> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x15a008ee0 <col:5> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15a008ec0 <col:5> 'int *' lvalue ParmVar 0x1599281a8 'data' 'int *'     |     `-IntegerLiteral 0x15a008f08 <col:13> 'int' 2     `-LabelStmt 0x15a0093b0 <line:45:1, line:52:3> 'short_packet'       `-CompoundStmt 0x15a009398 <line:46:3, line:52:3>         `-CallExpr 0x15a009370 <line:50:5, col:17> '<dependent type>' contains-errors           |-DeclRefExpr 0x15a009330 <col:5> 'int ()' Function 0x15a009278 'g_free' 'int ()'           `-RecoveryExpr 0x15a009350 <col:13> '<dependent type>' contains-errors lvalue ","20937":"`-FunctionDecl 0x1479281f0  line:1:13 invalid init_meminfo 'void (int *)' static   |-ParmVarDecl 0x147928128 <col:26, col:42> col:42 invalid mem_info 'int *'   `-CompoundStmt 0x147928780 <line:2:1, line:5:1>     |-CallExpr 0x1479284e0 <line:3:5, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147928400 <col:5> 'int ()' Function 0x147928348 'memslot_info_init' 'int ()'     | |-RecoveryExpr 0x147928420 <col:23> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x147928440 <col:33> 'int' 1     | |-IntegerLiteral 0x147928460 <col:37> 'int' 1     | |-IntegerLiteral 0x147928480 <col:41> 'int' 1     | |-IntegerLiteral 0x1479284a0 <col:44> 'int' 1     | `-IntegerLiteral 0x1479284c0 <col:47> 'int' 0     `-CallExpr 0x147928728 <line:4:5, col:60> '<dependent type>' contains-errors       |-DeclRefExpr 0x147928610 <col:5> 'int ()' Function 0x147928558 'memslot_info_add_slot' 'int ()'       |-RecoveryExpr 0x147928630 <col:27> '<dependent type>' contains-errors lvalue       |-IntegerLiteral 0x147928650 <col:37> 'int' 0       |-IntegerLiteral 0x147928670 <col:40> 'int' 0       |-IntegerLiteral 0x147928690 <col:43> 'int' 0       |-IntegerLiteral 0x1479286b0 <col:47> 'int' 0       |-UnaryOperator 0x1479286f0 <col:51, col:52> 'unsigned long' prefix '~' cannot overflow       | `-IntegerLiteral 0x1479286d0 <col:52> 'unsigned long' 0       `-IntegerLiteral 0x147928708 <col:58> 'int' 0 ","20474":"`-FunctionDecl 0x11f00e338  line:1:8 invalid got_fatal_error 'int ()'   `-CompoundStmt 0x11f00e488 <line:2:3, line:4:3>     `-ReturnStmt 0x11f00e478 <line:3:5, col:31>       `-BinaryOperator 0x11f00e458 <col:12, col:31> 'int' contains-errors '>'         |-RecoveryExpr 0x11f00e438 <col:12> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x11f00e3f8 <col:31> 'int' 0 ","20762":"`-FunctionDecl 0x13980dda0  line:1:13 check_pdf 'void (const char *)' static   |-ParmVarDecl 0x13980dcd8 <col:23, col:35> col:35 used filename 'const char *'   `-CompoundStmt 0x139827e18 <line:2:1, line:14:1>     |-RecoveryExpr 0x13980df00 <line:5:5> '<dependent type>' contains-errors lvalue     `-ForStmt 0x139827de0 <line:7:5, line:13:5>       |-DeclStmt 0x13980e1b8 <line:7:10, col:19>       | `-VarDecl 0x13980e130 <col:10, col:18> col:14 used i 'int' cinit       |   `-IntegerLiteral 0x13980e198 <col:18> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x13980e248 <col:21, col:25> 'int' contains-errors '<'       | |-DeclRefExpr 0x13980e1d0 <col:21> 'int' lvalue Var 0x13980e130 'i' 'int'       | `-RecoveryExpr 0x13980e228 <col:25> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x13980e288 <col:33, col:35> 'int' prefix '++'       | `-DeclRefExpr 0x13980e268 <col:35> 'int' lvalue Var 0x13980e130 'i' 'int'       `-CompoundStmt 0x139827db0 <line:8:5, line:13:5>         |-DeclStmt 0x13980e398 <line:9:9, col:27>         | `-VarDecl 0x13980e2b8 <col:9, col:26> col:13 used pageno 'int' cinit         |   `-BinaryOperator 0x13980e378 <col:22, col:26> 'int' '+'         |     |-ImplicitCastExpr 0x13980e360 <col:22> 'int' <LValueToRValue>         |     | `-DeclRefExpr 0x13980e320 <col:22> 'int' lvalue Var 0x13980e130 'i' 'int'         |     `-IntegerLiteral 0x13980e340 <col:26> 'int' 1         |-RecoveryExpr 0x13980e3e0 <line:10:9> '<dependent type>' contains-errors lvalue         |-CallExpr 0x139827aa8 <line:11:9, col:48> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1398278e0 <col:9> 'int ()' Function 0x139827828 'check_page_contents' 'int ()'         | |-DeclRefExpr 0x139827900 <col:29> 'int' lvalue Var 0x13980e2b8 'pageno' 'int'         | `-CallExpr 0x139827a80 <col:37, col:47> '<dependent type>' contains-errors         |   |-CXXDependentScopeMemberExpr 0x139827a38 <col:37, col:43> '<dependent type>' contains-errors lvalue .at         |   | `-RecoveryExpr 0x139827a18 <col:37> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x139827980 <col:46> 'int' lvalue Var 0x13980e130 'i' 'int'         `-CallExpr 0x139827d80 <line:12:9, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x139827bb8 <col:9> 'int ()' Function 0x139827b00 'check_image' 'int ()'           |-DeclRefExpr 0x139827bd8 <col:21> 'int' lvalue Var 0x13980e2b8 'pageno' 'int'           `-CallExpr 0x139827d58 <col:29, col:39> '<dependent type>' contains-errors             |-CXXDependentScopeMemberExpr 0x139827d10 <col:29, col:35> '<dependent type>' contains-errors lvalue .at             | `-RecoveryExpr 0x139827cf0 <col:29> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x139827c58 <col:38> 'int' lvalue Var 0x13980e130 'i' 'int' ","20430":"`-FunctionDecl 0x1050093b8  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1050094b8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x105009520 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x105009588 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x105009460 <<invalid sloc>> Implicit 882 ","20543":"`-FunctionDecl 0x1359286d8  line:1:8 invalid mysql_connect_ssl_check 'int *(int *, const char *, const char *, const char *, const char *, int, const char *, long, int)'   |-ParmVarDecl 0x135928128 <col:32, col:39> col:39 invalid mysql_arg 'int *'   |-ParmVarDecl 0x1359281a8 <col:50, col:62> col:62 used host 'const char *'   |-ParmVarDecl 0x135928228 <line:2:32, col:44> col:44 used user 'const char *'   |-ParmVarDecl 0x1359282a8 <col:50, col:62> col:62 used passwd 'const char *'   |-ParmVarDecl 0x135928328 <line:3:32, col:44> col:44 used db 'const char *'   |-ParmVarDecl 0x1359283a8 <col:48, col:53> col:53 used port 'int'   |-ParmVarDecl 0x135928428 <line:4:32, col:44> col:44 used unix_socket 'const char *'   |-ParmVarDecl 0x1359284a8 <col:57, col:63> col:63 used client_flag 'long'   |-ParmVarDecl 0x135928528 <line:5:32, col:40> col:40 invalid ssl_required 'int'   | `-UnusedAttr 0x135928590 <col:68> unused   `-CompoundStmt 0x135942b28 <line:6:1, line:22:1>     `-ReturnStmt 0x135942b18 <line:21:3, col:10>       `-RecoveryExpr 0x135942af8 <col:10> '<dependent type>' contains-errors lvalue ","20862":"`-FunctionDecl 0x159128208  line:1:28 invalid ScaleQuantumToLong 'unsigned int (const int)' static inline   |-ParmVarDecl 0x1591280f0 <col:47, col:61> col:61 invalid quantum 'const int'   `-CompoundStmt 0x159128348 <line:2:1, line:12:1>     `-ReturnStmt 0x159128338 <line:4:3, col:32>       `-ParenExpr 0x159128318 <col:9, col:32> 'unsigned int' contains-errors         `-CStyleCastExpr 0x1591282f0 <col:10, col:25> 'unsigned int' contains-errors <Dependent>           `-RecoveryExpr 0x1591282b8 <col:25> '<dependent type>' contains-errors lvalue ","20854":"`-FunctionDecl 0x13300de30  line:1:13 invalid free_blobs 'void (int **)' static   |-ParmVarDecl 0x13300dd60 <col:24, col:32> col:32 invalid ptr 'int **'   `-CompoundStmt 0x13300e278 <line:2:1, line:8:1>     `-ForStmt 0x13300e240 <line:3:3, line:7:3>       |-<<<NULL>>>       |-<<<NULL>>>       |-UnaryOperator 0x13300df18 <line:3:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x13300df00 <col:11> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x13300dee0 <col:11> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x13300df50 <col:17, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x13300df30 <col:17> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13300e230 <line:4:3, line:7:3> ","20781":"`-FunctionDecl 0x14e140b48  line:1:5 h2_make_htx_trailers 'int (struct http_hdr *, struct htx *)'   |-ParmVarDecl 0x14e128648 <col:26, col:43> col:43 used list 'struct http_hdr *'   |-ParmVarDecl 0x14e140a28 <col:49, col:61> col:61 used htx 'struct htx *'   `-CompoundStmt 0x14e147138 <line:2:1, line:44:1>     |-DeclStmt 0x14e140ce0 <line:4:2, col:7>     | `-VarDecl 0x14e140c78 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x14e147080 <line:37:2, line:38:8>     | |-RecoveryExpr 0x14e147048 <line:37:6, col:37> '_Bool' contains-errors     | `-GotoStmt 0x14e147068 <line:38:3, col:8> 'fail' 0x14e140e68     |-ReturnStmt 0x14e1470c0 <line:40:2, col:9>     | `-IntegerLiteral 0x14e1470a0 <col:9> 'int' 1     `-LabelStmt 0x14e147118 <line:42:2, line:43:10> 'fail'       `-ReturnStmt 0x14e147108 <col:2, col:10>         `-UnaryOperator 0x14e1470f0 <col:9, col:10> 'int' prefix '-'           `-IntegerLiteral 0x14e1470d0 <col:10> 'int' 1 ","20725":"`-FunctionDecl 0x12081e998  line:1:1 tdbio_read_model 'int (void)'   `-CompoundStmt 0x12084b908 <line:2:1, line:11:1>     |-DeclStmt 0x12081eb20 <line:4:3, col:9>     | `-VarDecl 0x12081eab8 <col:3, col:7> col:7 used rc 'int'     |-BinaryOperator 0x12081ede0 <line:6:3, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x12081eb38 <col:3> 'int' lvalue Var 0x12081eab8 'rc' 'int'     | `-CallExpr 0x12081eda8 <col:8, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12081ec70 <col:8> 'int ()' Function 0x12081ebb8 'tdbio_read_record' 'int ()'     |   |-IntegerLiteral 0x12081ec90 <col:27> 'int' 0     |   |-UnaryOperator 0x12081ed70 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12081ed50 <col:31> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12081ed88 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12084b6f0 <line:7:3, line:9:36>     | |-ImplicitCastExpr 0x12081ee20 <line:7:7> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12081ee00 <col:7> 'int' lvalue Var 0x12081eab8 'rc' 'int'     | `-CallExpr 0x12084b6b8 <line:8:5, line:9:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12081ef18 <line:8:5> 'int ()' Function 0x12081ee60 'log_fatal' 'int ()'     |   |-CallExpr 0x12084b600 <col:16, col:23> 'int'     |   | |-ImplicitCastExpr 0x12084b5e8 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12084b2b8 <col:16> 'int ()' Function 0x12084b200 '_' 'int ()'     |   | `-ImplicitCastExpr 0x12084b628 <col:18> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12084b320 <col:18> 'char[4]' lvalue \"STR\"     |   |-RecoveryExpr 0x12084b640 <line:9:9> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12084b678 <col:18, col:34> 'int'     |     |-ImplicitCastExpr 0x12084b660 <col:18> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12084b4c0 <col:18> 'int ()' Function 0x12084b408 'gpg_strerror' 'int ()'     |     `-ImplicitCastExpr 0x12084b6a0 <col:32> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12084b4e0 <col:32> 'int' lvalue Var 0x12081eab8 'rc' 'int'     `-ReturnStmt 0x12084b8f8 <line:10:3, col:19>       `-CXXDependentScopeMemberExpr 0x12084b8b0 <col:10, col:19> '<dependent type>' contains-errors lvalue .trust_model         `-CXXDependentScopeMemberExpr 0x12084b868 <col:10, col:15> '<dependent type>' contains-errors lvalue .ver           `-CXXDependentScopeMemberExpr 0x12084b820 <col:10, col:13> '<dependent type>' contains-errors lvalue .r             `-RecoveryExpr 0x12084b800 <col:10> '<dependent type>' contains-errors lvalue ","20561":"`-FunctionDecl 0x145127b98  line:1:1 allocate_ts_cell 'int (void)'   `-CompoundStmt 0x1451405a0 <line:2:1, line:16:1>     |-DeclStmt 0x145127d38 <line:4:3, col:8>     | `-VarDecl 0x145127cd0 <col:3, col:7> col:7 used i 'int'     |-IfStmt 0x1451404c0 <line:5:3, line:11:3>     | |-BinaryOperator 0x145127de0 <line:5:7, col:23> 'int' contains-errors '=='     | | |-RecoveryExpr 0x145127da0 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x145127dc0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1451404a8 <col:29, line:11:3>     |   `-ForStmt 0x145140400 <line:7:5, line:9:5>     |     |-BinaryOperator 0x145127fd0 <line:7:10, col:12> 'int' '='     |     | |-DeclRefExpr 0x145127f90 <col:10> 'int' lvalue Var 0x145127cd0 'i' 'int'     |     | `-IntegerLiteral 0x145127fb0 <col:12> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x1451280c8 <col:15, col:32> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x145127ff0 <col:15> 'int' lvalue Var 0x145127cd0 'i' 'int'     |     | `-BinaryOperator 0x1451280a8 <col:17, col:32> '<dependent type>' contains-errors '-'     |     |   |-RecoveryExpr 0x145128088 <col:17> '<dependent type>' contains-errors lvalue     |     |   `-IntegerLiteral 0x145128028 <col:32> 'int' 1     |     |-UnaryOperator 0x145128108 <col:35, col:36> 'int' postfix '++'     |     | `-DeclRefExpr 0x1451280e8 <col:35> 'int' lvalue Var 0x145127cd0 'i' 'int'     |     `-CompoundStmt 0x1451281d8 <col:40, line:9:5>     `-ReturnStmt 0x145140590 <line:15:3, col:10>       `-RecoveryExpr 0x145140570 <col:10> '<dependent type>' contains-errors lvalue ","20312":"`-FunctionDecl 0x150928280  line:1:13 invalid w2le 'void (int, int *)' static   |-ParmVarDecl 0x1509280f0 <col:18, col:27> col:27 invalid val 'int'   |-ParmVarDecl 0x1509281a8 <col:32, col:42> col:42 invalid x 'int *'   `-CompoundStmt 0x150928520 <line:2:1, line:4:1>     `-CallExpr 0x1509284f0 <line:3:2, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x150928490 <col:2> 'int ()' Function 0x1509283d8 'put_unaligned_le16' 'int ()'       |-RecoveryExpr 0x1509284b0 <col:21> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1509284d0 <col:26> '<dependent type>' contains-errors lvalue ","20446":"`-FunctionDecl 0x12b128448  line:1:5 diskutil_grub 'int (const char *, const char *, const int, const char *, const char *)'   |-ParmVarDecl 0x12b1280d8 <col:19, col:31> col:31 used path 'const char *'   |-ParmVarDecl 0x12b128158 <col:37, col:49> col:49 used mnt_pt 'const char *'   |-ParmVarDecl 0x12b1281d8 <col:57, col:67> col:67 used part 'const int'   |-ParmVarDecl 0x12b128258 <col:73, col:85> col:85 used kernel 'const char *'   |-ParmVarDecl 0x12b1282d8 <col:93, col:105> col:105 used ramdisk 'const char *'   `-CompoundStmt 0x12b1410d8 <line:2:1, line:10:1>     |-DeclStmt 0x12b128630 <line:3:5, col:25>     | `-VarDecl 0x12b128578 <col:5, col:15> col:9 used ret 'int' cinit     |   `-RecoveryExpr 0x12b128610 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b140e18 <line:5:5, line:6:20>     | |-BinaryOperator 0x12b140d90 <line:5:9, col:71> 'int' contains-errors '!='     | | |-ParenExpr 0x12b140d50 <col:9, col:66> 'int' contains-errors     | | | `-BinaryOperator 0x12b140d30 <col:10, col:65> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x12b128648 <col:10> 'int' contains-errors lvalue Var 0x12b128578 'ret' 'int'     | | |   `-CallExpr 0x12b140c90 <col:16, col:65> 'int'     | | |     |-ImplicitCastExpr 0x12b140c78 <col:16> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x12b128780 <col:16> 'int ()' Function 0x12b1286c8 'diskutil_grub_files' 'int ()'     | | |     |-ImplicitCastExpr 0x12b140cd0 <col:36> 'const char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x12b1287a0 <col:36> 'const char *' lvalue ParmVar 0x12b128158 'mnt_pt' 'const char *'     | | |     |-ImplicitCastExpr 0x12b140ce8 <col:44> 'int' <LValueToRValue>     | | |     | `-DeclRefExpr 0x12b1287c0 <col:44> 'const int' lvalue ParmVar 0x12b1281d8 'part' 'const int'     | | |     |-ImplicitCastExpr 0x12b140d00 <col:50> 'const char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x12b1287e0 <col:50> 'const char *' lvalue ParmVar 0x12b128258 'kernel' 'const char *'     | | |     `-ImplicitCastExpr 0x12b140d18 <col:58> 'const char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x12b140a00 <col:58> 'const char *' lvalue ParmVar 0x12b1282d8 'ramdisk' 'const char *'     | | `-RecoveryExpr 0x12b140d70 <col:71> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12b140e08 <line:6:9, col:20>     |   `-ImplicitCastExpr 0x12b140df0 <col:16, col:20> 'int' contains-errors <LValueToRValue>     |     `-ParenExpr 0x12b140dd0 <col:16, col:20> 'int' contains-errors lvalue     |       `-DeclRefExpr 0x12b140db0 <col:17> 'int' contains-errors lvalue Var 0x12b128578 'ret' 'int'     |-BinaryOperator 0x12b141050 <line:8:5, col:48> 'int' contains-errors '='     | |-DeclRefExpr 0x12b140e38 <col:5> 'int' contains-errors lvalue Var 0x12b128578 'ret' 'int'     | `-CallExpr 0x12b140fd0 <col:11, col:48> 'int'     |   |-ImplicitCastExpr 0x12b140fb8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b140f38 <col:11> 'int ()' Function 0x12b140e80 'diskutil_grub2_mbr' 'int ()'     |   |-ImplicitCastExpr 0x12b141008 <col:30> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x12b140f58 <col:30> 'const char *' lvalue ParmVar 0x12b1280d8 'path' 'const char *'     |   |-ImplicitCastExpr 0x12b141020 <col:36> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x12b140f78 <col:36> 'const int' lvalue ParmVar 0x12b1281d8 'part' 'const int'     |   `-ImplicitCastExpr 0x12b141038 <col:42> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x12b140f98 <col:42> 'const char *' lvalue ParmVar 0x12b128158 'mnt_pt' 'const char *'     `-ReturnStmt 0x12b1410c8 <line:9:5, col:16>       `-ImplicitCastExpr 0x12b1410b0 <col:12, col:16> 'int' contains-errors <LValueToRValue>         `-ParenExpr 0x12b141090 <col:12, col:16> 'int' contains-errors lvalue           `-DeclRefExpr 0x12b141070 <col:13> 'int' contains-errors lvalue Var 0x12b128578 'ret' 'int' ","21056":"`-FunctionDecl 0x1450c81f8  line:1:1 invalid z2setgstate 'int (int *)'   |-ParmVarDecl 0x1450c8128 <col:13, col:22> col:22 invalid i_ctx_p 'int *'   `-CompoundStmt 0x1450e23f0 <line:2:1, line:9:1>     |-CallExpr 0x1450c8520 <line:5:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1450c8400 <col:5> 'int ()' Function 0x1450c8348 'check_stype' 'int ()'     | |-UnaryOperator 0x1450c84e8 <col:17, col:18> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1450c84d0 <col:18> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1450c84b0 <col:18> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1450c8500 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1450e2208 <line:6:5, line:7:34>     | |-UnaryOperator 0x1450e2098 <line:6:9, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1450e2068 <col:10, col:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1450c8630 <col:10> 'int ()' Function 0x1450c8578 'restore_page_device' 'int ()'     | |   |-RecoveryExpr 0x1450e2000 <col:30> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x1450e2040 <col:35, col:49> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x1450c8748 <col:35> 'int ()' Function 0x1450c8690 'igstate_ptr' 'int ()'     | |     `-RecoveryExpr 0x1450e2020 <col:47> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1450e21f8 <line:7:9, col:34>     |   `-CallExpr 0x1450e21d0 <col:16, col:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1450e2190 <col:16> 'int ()' Function 0x1450e20d8 'zsetgstate' 'int ()'     |     `-RecoveryExpr 0x1450e21b0 <col:27> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1450e23e0 <line:8:5, col:39>       `-CallExpr 0x1450e23b0 <col:12, col:39> '<dependent type>' contains-errors         |-DeclRefExpr 0x1450e2308 <col:12> 'int ()' Function 0x1450e2250 'push_callout' 'int ()'         |-RecoveryExpr 0x1450e2328 <col:25> '<dependent type>' contains-errors lvalue         `-StringLiteral 0x1450e2390 <col:34> 'char[4]' lvalue \"STR\" ","21045":"`-FunctionDecl 0x14e827e70  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14e827f70 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14e827fd8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14e828040 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14e827f18 <<invalid sloc>> Implicit 900 ","20840":"`-FunctionDecl 0x14000e518  line:1:10 invalid opj_j2k_decode_tiles 'int (int *, int *, int *)'   |-ParmVarDecl 0x14000e328 <col:33, col:44> col:44 invalid p_j2k 'int *'   |-ParmVarDecl 0x14000e3a8 <line:2:61, col:83> col:83 invalid p_stream 'int *'   |-ParmVarDecl 0x14000e428 <line:3:61, col:79> col:79 invalid p_manager 'int *'   `-CompoundStmt 0x1400291b0 <line:4:1, line:72:1>     |-IfStmt 0x14000e9b8 <line:14:9, line:17:9>     | |-UnaryOperator 0x14000e688 <line:14:13, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14000e670 <col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14000e650 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14000e998 <col:31, line:17:9>     |   |-CallExpr 0x14000e918 <line:15:17, col:58> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14000e800 <col:17> 'int ()' Function 0x14000e748 'opj_event_msg' 'int ()'     |   | |-RecoveryExpr 0x14000e820 <col:31> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14000e8f8 <col:42> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x14000e8a0 <col:53> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14000e988 <line:16:17, col:24>     |     `-RecoveryExpr 0x14000e968 <col:24> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x140029170 <line:20:9, line:67:9>       |-RecoveryExpr 0x140027a00 <line:20:16> '_Bool' contains-errors       `-CompoundStmt 0x140029128 <col:26, line:67:9>         |-IfStmt 0x140027cb0 <line:21:17, line:32:17>         | |-RecoveryExpr 0x140027b80 <line:21:21, line:29:50> '_Bool' contains-errors         | `-CompoundStmt 0x140027ca0 <col:53, line:32:17>         |-IfStmt 0x140027d10 <line:34:17, line:36:17>         | |-RecoveryExpr 0x140027cd0 <line:34:21, col:23> '_Bool' contains-errors         | `-CompoundStmt 0x140027cf8 <col:32, line:36:17>         |   `-BreakStmt 0x140027cf0 <line:35:25>         |-IfStmt 0x140027fd8 <line:38:17, line:47:17>         | |-RecoveryExpr 0x140027d30 <line:38:21, col:35> '_Bool' contains-errors         | `-CompoundStmt 0x140027fc0 <col:52, line:47:17>         |   `-IfStmt 0x140027fa0 <line:40:25, line:44:25>         |     |-RecoveryExpr 0x140027d50 <line:40:29, col:31> '_Bool' contains-errors         |     `-CompoundStmt 0x140027f90 <col:51, line:44:25>         |-IfStmt 0x1400283a8 <line:49:17, line:53:17>         | |-RecoveryExpr 0x140028158 <line:49:21, col:112> '_Bool' contains-errors         | `-CompoundStmt 0x140028398 <col:115, line:53:17>         |-IfStmt 0x1400287e8 <line:56:17, line:59:17>         | |-RecoveryExpr 0x140028798 <line:56:21, col:99> '_Bool' contains-errors         | `-CompoundStmt 0x1400287d8 <col:102, line:59:17>         |-IfStmt 0x140028f40 <line:62:17, line:64:21>         | |-RecoveryExpr 0x140028f18 <line:62:20, line:63:69> '_Bool' contains-errors         | `-BreakStmt 0x140028f38 <line:64:21>         `-IfStmt 0x140029108 <line:65:17, line:66:21>           |-RecoveryExpr 0x1400290e0 <line:65:20, col:64> '_Bool' contains-errors           `-BreakStmt 0x140029100 <line:66:21> ","20421":"`-FunctionDecl 0x12c8269c8  line:1:1 nfs4_open_revalidate 'int (struct inode *, struct dentry *, int, struct nameidata *)'   |-ParmVarDecl 0x12c80e248 <col:22, col:36> col:36 used dir 'struct inode *'   |-ParmVarDecl 0x12c826628 <col:41, col:56> col:56 used dentry 'struct dentry *'   |-ParmVarDecl 0x12c8266a8 <col:64, col:68> col:68 used openflags 'int'   |-ParmVarDecl 0x12c826878 <col:79, col:97> col:97 used nd 'struct nameidata *'   `-CompoundStmt 0x12c82e098 <line:2:1, line:37:1>     |-DeclStmt 0x12c826df0 <line:3:2, line:6:3>     | |-RecordDecl 0x12c826ad8 <line:3:2, col:9> col:9 struct path     | `-VarDecl 0x12c826bd8 <col:2, col:14> col:14 invalid path 'struct path'     |-DeclStmt 0x12c826ff8 <line:7:2, col:23>     | |-RecordDecl 0x12c826e08 <col:2, col:9> col:9 struct rpc_cred     | `-VarDecl 0x12c826f78 <col:2, col:19> col:19 used cred 'struct rpc_cred *'     |-DeclStmt 0x12c8271f8 <line:8:2, col:26>     | |-RecordDecl 0x12c827010 <col:2, col:9> col:9 struct nfs4_state     | `-VarDecl 0x12c827178 <col:2, col:21> col:21 used state 'struct nfs4_state *'     |-BinaryOperator 0x12c827400 <line:10:2, col:25> 'struct rpc_cred *' '='     | |-DeclRefExpr 0x12c827210 <col:2> 'struct rpc_cred *' lvalue Var 0x12c826f78 'cred' 'struct rpc_cred *'     | `-ImplicitCastExpr 0x12c8273e8 <col:9, col:25> 'struct rpc_cred *' <IntegralToPointer>     |   `-CallExpr 0x12c8273c8 <col:9, col:25> 'int'     |     `-ImplicitCastExpr 0x12c8273b0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12c827360 <col:9> 'int ()' Function 0x12c8272a8 'rpc_lookup_cred' 'int ()'     |-IfStmt 0x12c82c760 <line:11:2, line:12:22>     | |-CallExpr 0x12c827558 <line:11:6, col:17> 'int'     | | |-ImplicitCastExpr 0x12c827540 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12c827500 <col:6> 'int ()' Function 0x12c827448 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x12c827580 <col:13> 'struct rpc_cred *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c827520 <col:13> 'struct rpc_cred *' lvalue Var 0x12c826f78 'cred' 'struct rpc_cred *'     | `-ReturnStmt 0x12c82c750 <line:12:3, col:22>     |   `-CallExpr 0x12c82c710 <col:10, col:22> 'int'     |     |-ImplicitCastExpr 0x12c82c6f8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12c82c6b8 <col:10> 'int ()' Function 0x12c82c600 'PTR_ERR' 'int ()'     |     `-ImplicitCastExpr 0x12c82c738 <col:18> 'struct rpc_cred *' <LValueToRValue>     |       `-DeclRefExpr 0x12c82c6d8 <col:18> 'struct rpc_cred *' lvalue Var 0x12c826f78 'cred' 'struct rpc_cred *'     |-BinaryOperator 0x12c82ca20 <line:13:2, col:56> 'struct nfs4_state *' contains-errors '='     | |-DeclRefExpr 0x12c82c780 <col:2> 'struct nfs4_state *' lvalue Var 0x12c827178 'state' 'struct nfs4_state *'     | `-CallExpr 0x12c82c9d8 <col:10, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c82c880 <col:10> 'int ()' Function 0x12c82c7c8 'nfs4_do_open' 'int ()'     |   |-DeclRefExpr 0x12c82c8a0 <col:23> 'struct inode *' lvalue ParmVar 0x12c80e248 'dir' 'struct inode *'     |   |-UnaryOperator 0x12c82c8e0 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12c82c8c0 <col:29> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x12c82c8f8 <col:35> 'int' lvalue ParmVar 0x12c8266a8 'openflags' 'int'     |   |-RecoveryExpr 0x12c82c9b8 <col:46> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c82c930 <col:52> 'struct rpc_cred *' lvalue Var 0x12c826f78 'cred' 'struct rpc_cred *'     |-CallExpr 0x12c82cb78 <line:14:2, col:18> 'int'     | |-ImplicitCastExpr 0x12c82cb60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c82cb20 <col:2> 'int ()' Function 0x12c82ca68 'put_rpccred' 'int ()'     | `-ImplicitCastExpr 0x12c82cba0 <col:14> 'struct rpc_cred *' <LValueToRValue>     |   `-DeclRefExpr 0x12c82cb40 <col:14> 'struct rpc_cred *' lvalue Var 0x12c826f78 'cred' 'struct rpc_cred *'     |-IfStmt 0x12c82d2f8 <line:15:2, line:27:2>     | |-CallExpr 0x12c82cc10 <line:15:6, col:18> 'int'     | | |-ImplicitCastExpr 0x12c82cbf8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12c82cbb8 <col:6> 'int ()' Function 0x12c827448 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x12c82cc38 <col:13> 'struct nfs4_state *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c82cbd8 <col:13> 'struct nfs4_state *' lvalue Var 0x12c827178 'state' 'struct nfs4_state *'     | `-CompoundStmt 0x12c82d2e0 <col:21, line:27:2>     |   `-SwitchStmt 0x12c82cce8 <line:16:3, line:26:3>     |     |-CallExpr 0x12c82cca8 <line:16:11, col:24> 'int'     |     | |-ImplicitCastExpr 0x12c82cc90 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x12c82cc50 <col:11> 'int ()' Function 0x12c82c600 'PTR_ERR' 'int ()'     |     | `-ImplicitCastExpr 0x12c82ccd0 <col:19> 'struct nfs4_state *' <LValueToRValue>     |     |   `-DeclRefExpr 0x12c82cc70 <col:19> 'struct nfs4_state *' lvalue Var 0x12c827178 'state' 'struct nfs4_state *'     |     `-CompoundStmt 0x12c82d2b8 <col:27, line:26:3>     |       |-CallExpr 0x12c82d1c8 <line:22:5, col:61> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x12c82cf58 <col:5> 'int ()' Function 0x12c82cea0 'lookup_instantiate_filp' 'int ()'     |       | |-DeclRefExpr 0x12c82cf78 <col:29> 'struct nameidata *' lvalue ParmVar 0x12c826878 'nd' 'struct nameidata *'     |       | |-CStyleCastExpr 0x12c82d180 <col:33, col:50> 'struct dentry *' <BitCast>     |       | | `-ImplicitCastExpr 0x12c82d168 <col:50> 'struct nfs4_state *' <LValueToRValue> part_of_explicit_cast     |       | |   `-DeclRefExpr 0x12c82cf98 <col:50> 'struct nfs4_state *' lvalue Var 0x12c827178 'state' 'struct nfs4_state *'     |       | `-RecoveryExpr 0x12c82d1a8 <col:57> '<dependent type>' contains-errors lvalue     |       |-ReturnStmt 0x12c82d220 <line:23:5, col:12>     |       | `-IntegerLiteral 0x12c82d200 <col:12> 'int' 1     |       `-DefaultStmt 0x12c82d298 <line:24:4, line:25:10>     |         `-GotoStmt 0x12c82d280 <col:5, col:10> 'out_drop' 0x12c82d230     |-IfStmt 0x12c82dd00 <line:28:2, line:32:2>     | |-BinaryOperator 0x12c82d3d8 <line:28:6, col:30> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12c82d350 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12c82d318 <col:6> 'struct nfs4_state *' lvalue Var 0x12c827178 'state' 'struct nfs4_state *'     | | `-RecoveryExpr 0x12c82d3b0 <col:22, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c82d378 <col:22> 'struct dentry *' lvalue ParmVar 0x12c826628 'dentry' 'struct dentry *'     | `-CompoundStmt 0x12c82dcd8 <col:39, line:32:2>     |   |-CallExpr 0x12c82dab0 <line:29:3, col:58> 'int'     |   | |-ImplicitCastExpr 0x12c82da98 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12c82d4d8 <col:3> 'int ()' Function 0x12c82d420 'nfs_set_verifier' 'int ()'     |   | |-ImplicitCastExpr 0x12c82dae0 <col:20> 'struct dentry *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12c82d4f8 <col:20> 'struct dentry *' lvalue ParmVar 0x12c826628 'dentry' 'struct dentry *'     |   | `-CallExpr 0x12c82da58 <col:28, col:57> 'int'     |   |   |-ImplicitCastExpr 0x12c82da40 <col:28> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12c82da00 <col:28> 'int ()' Function 0x12c82d540 'nfs_save_change_attribute' 'int ()'     |   |   `-ImplicitCastExpr 0x12c82da80 <col:54> 'struct inode *' <LValueToRValue>     |   |     `-DeclRefExpr 0x12c82da20 <col:54> 'struct inode *' lvalue ParmVar 0x12c80e248 'dir' 'struct inode *'     |   |-CallExpr 0x12c82dc70 <line:30:3, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12c82dbd8 <col:3> 'int ()' Function 0x12c82db20 'nfs4_intent_set_file' 'int ()'     |   | |-DeclRefExpr 0x12c82dbf8 <col:24> 'struct nameidata *' lvalue ParmVar 0x12c826878 'nd' 'struct nameidata *'     |   | |-UnaryOperator 0x12c82dc38 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x12c82dc18 <col:29> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12c82dc50 <col:35> 'struct nfs4_state *' lvalue Var 0x12c827178 'state' 'struct nfs4_state *'     |   `-ReturnStmt 0x12c82dcc8 <line:31:3, col:10>     |     `-IntegerLiteral 0x12c82dca8 <col:10> 'int' 1     |-CallExpr 0x12c82de98 <line:33:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c82de00 <col:2> 'int ()' Function 0x12c82dd48 'nfs4_close_sync' 'int ()'     | |-UnaryOperator 0x12c82de40 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12c82de20 <col:19> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x12c82de58 <col:25> 'struct nfs4_state *' lvalue Var 0x12c827178 'state' 'struct nfs4_state *'     | `-DeclRefExpr 0x12c82de78 <col:32> 'int' lvalue ParmVar 0x12c8266a8 'openflags' 'int'     |-LabelStmt 0x12c82e048 <line:34:1, line:35:15> 'out_drop'     | `-CallExpr 0x12c82e008 <col:2, col:15> 'int'     |   |-ImplicitCastExpr 0x12c82dff0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12c82dfb0 <col:2> 'int ()' Function 0x12c82def8 'd_drop' 'int ()'     |   `-ImplicitCastExpr 0x12c82e030 <col:9> 'struct dentry *' <LValueToRValue>     |     `-DeclRefExpr 0x12c82dfd0 <col:9> 'struct dentry *' lvalue ParmVar 0x12c826628 'dentry' 'struct dentry *'     `-ReturnStmt 0x12c82e088 <line:36:2, col:9>       `-IntegerLiteral 0x12c82e068 <col:9> 'int' 0 ","21161":"`-FunctionDecl 0x14500df18  line:1:11 invalid GetPayload 'int *(int, int *, int)'   |-ParmVarDecl 0x14500dcf0 <col:22, col:29> col:29 invalid handle 'int'   |-ParmVarDecl 0x14500dda8 <col:37, col:47> col:47 invalid lastpayload 'int *'   |-ParmVarDecl 0x14500de28 <col:60, col:69> col:69 invalid index 'int'   `-CompoundStmt 0x144922f48 <line:2:1, line:19:1>     |-IfStmt 0x14500e100 <line:4:2, col:26>     | |-BinaryOperator 0x14500e098 <col:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14500e058 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14500e078 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14500e0f0 <col:19, col:26>     |   `-RecoveryExpr 0x14500e0d0 <col:26> '<dependent type>' contains-errors lvalue     `-IfStmt 0x144922f28 <line:7:2, line:17:2>       |-BinaryOperator 0x14500e360 <line:7:6, col:38> 'int' contains-errors '&&'       | |-BinaryOperator 0x14500e2d8 <col:6, col:19> 'int' contains-errors '<'       | | |-RecoveryExpr 0x14500e150 <col:6> '<dependent type>' contains-errors lvalue       | | `-CXXDependentScopeMemberExpr 0x14500e290 <col:14, col:19> '<dependent type>' contains-errors lvalue ->indexcount       | |   `-RecoveryExpr 0x14500e270 <col:14> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x14500e318 <col:33, col:38> '<dependent type>' contains-errors lvalue ->mediafp       |   `-RecoveryExpr 0x14500e2f8 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x144922f10 <line:8:2, line:17:2>         `-IfStmt 0x144922ef0 <line:11:3, line:16:3>           |-RecoveryExpr 0x14500e3b0 <line:11:7> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x144922ee0 <line:12:3, line:16:3> ","20917":"`-FunctionDecl 0x153128318  line:1:1 invalid call_func_retnr 'int (char *, int, int *)'   |-ParmVarDecl 0x1531280f0 <line:2:5, col:18> col:18 used func 'char *'   |-ParmVarDecl 0x153128170 <line:3:5, col:10> col:10 used argc 'int'   |-ParmVarDecl 0x153128228 <line:4:5, col:15> col:15 invalid argv 'int *'   `-CompoundStmt 0x153140d50 <line:5:1, line:15:1>     |-IfStmt 0x153128758 <line:9:5, line:10:10>     | |-BinaryOperator 0x1531286f0 <line:9:9, col:56> 'int' contains-errors '=='     | | |-CallExpr 0x153128690 <col:9, col:51> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x153128530 <col:9> 'int ()' Function 0x153128478 'call_vim_function' 'int ()'     | | | |-DeclRefExpr 0x153128550 <col:27> 'char *' lvalue ParmVar 0x1531280f0 'func' 'char *'     | | | |-DeclRefExpr 0x153128570 <col:33> 'int' lvalue ParmVar 0x153128170 'argc' 'int'     | | | |-RecoveryExpr 0x153128590 <col:39> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x153128678 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x153128658 <col:46> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1531286d0 <col:56> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x153128748 <line:10:2, col:10>     |   `-UnaryOperator 0x153128730 <col:9, col:10> 'int' prefix '-'     |     `-IntegerLiteral 0x153128710 <col:10> 'int' 1     |-CallExpr 0x153140ce0 <line:13:5, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153140c30 <col:5> 'int ()' Function 0x153140b78 'clear_tv' 'int ()'     | `-UnaryOperator 0x153140cc8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x153140ca8 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x153140d40 <line:14:5, col:12>       `-RecoveryExpr 0x153140d20 <col:12> '<dependent type>' contains-errors lvalue ","20748":"`-FunctionDecl 0x11e00dfa8  line:1:1 invalid gnutls_x509_crt_get_issuer_alt_othername_oid 'int (int, unsigned int, void *, int *)'   |-ParmVarDecl 0x11e00dcf0 <col:46, col:64> col:64 invalid cert 'int'   |-ParmVarDecl 0x11e00dd70 <line:2:11, col:24> col:24 used seq 'unsigned int'   |-ParmVarDecl 0x11e00ddf0 <line:3:11, col:17> col:17 used ret 'void *'   |-ParmVarDecl 0x11e00dea8 <col:22, col:31> col:31 invalid ret_size 'int *'   `-CompoundStmt 0x11e80a070 <line:4:1, line:7:1>     `-ReturnStmt 0x11e80a060 <line:5:2, line:6:15>       `-CallExpr 0x11e80a000 <line:5:9, line:6:15> '<dependent type>' contains-errors         |-DeclRefExpr 0x11e00e1d0 <line:5:9> 'int ()' Function 0x11e00e118 'get_alt_name' 'int ()'         |-RecoveryExpr 0x11e00e1f0 <col:22> '<dependent type>' contains-errors lvalue         |-StringLiteral 0x11e00e250 <col:28> 'char[4]' lvalue \"STR\"         |-DeclRefExpr 0x11e00e270 <col:35> 'unsigned int' lvalue ParmVar 0x11e00dd70 'seq' 'unsigned int'         |-DeclRefExpr 0x11e00e290 <col:40> 'void *' lvalue ParmVar 0x11e00ddf0 'ret' 'void *'         |-RecoveryExpr 0x11e00e2b0 <col:45> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e00e380 <col:55> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e00e3a0 <line:6:8> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x11e00e300 <col:14> 'int' 1 ","20382":"`-FunctionDecl 0x1459419f8  line:1:1 invalid getln 'int (int, char *, int, int, enum tgetpass_errval *)'   |-ParmVarDecl 0x1459280d8 <col:7, col:11> col:11 used fd 'int'   |-ParmVarDecl 0x145928158 <col:15, col:21> col:21 used buf 'char *'   |-ParmVarDecl 0x1459281f0 <col:26, col:33> col:33 invalid bufsiz 'int'   |-ParmVarDecl 0x145928270 <col:41, col:45> col:45 used feedback 'int'   |-ParmVarDecl 0x145941888 <line:2:5, col:27> col:27 used errval 'enum tgetpass_errval *'   `-CompoundStmt 0x14600a2d0 <line:3:1, line:77:1>     |-BinaryOperator 0x145941b80 <line:4:5, col:19> 'unsigned long' contains-errors '='     | |-UnaryExprOrTypeTraitExpr 0x145941b60 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x145941b40 <col:12> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x145941b00 <col:19> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x145941c58 <line:6:5, col:19>     | `-VarDecl 0x145941bb8 <col:5, col:16> col:11 used cp 'char *' cinit     |   `-ImplicitCastExpr 0x145941c40 <col:16> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x145941c20 <col:16> 'char *' lvalue ParmVar 0x145928158 'buf' 'char *'     |-DeclStmt 0x145941d18 <line:7:5, col:18>     | `-VarDecl 0x145941c80 <col:5, col:14> col:10 used c 'char' cinit     |   `-ImplicitCastExpr 0x145941d00 <col:14> 'char' <IntegralCast>     |     `-CharacterLiteral 0x145941ce8 <col:14> 'int' 0     |-CallExpr 0x145941f38 <line:8:5, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145941e90 <col:5> 'int ()' Function 0x145941dd8 'debug_decl' 'int ()'     | |-RecoveryExpr 0x145941eb0 <col:16> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x145941f18 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x145942070 <line:10:5, col:15> 'enum tgetpass_errval' contains-errors '='     | |-UnaryOperator 0x145942038 <col:5, col:6> 'enum tgetpass_errval' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x145942020 <col:6> 'enum tgetpass_errval *' <LValueToRValue>     | |   `-DeclRefExpr 0x145941f68 <col:6> 'enum tgetpass_errval *' lvalue ParmVar 0x145941888 'errval' 'enum tgetpass_errval *'     | `-RecoveryExpr 0x145942050 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145942410 <line:12:5, line:16:5>     | |-BinaryOperator 0x145942108 <line:12:9, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1459420e8 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1459420a8 <col:17> 'int' 0     | `-CompoundStmt 0x1459423f0 <col:20, line:16:5>     |   |-BinaryOperator 0x145942230 <line:13:2, col:12> 'enum tgetpass_errval' contains-errors '='     |   | |-UnaryOperator 0x1459421f8 <col:2, col:3> 'enum tgetpass_errval' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x1459421e0 <col:3> 'enum tgetpass_errval *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x145942128 <col:3> 'enum tgetpass_errval *' lvalue ParmVar 0x145941888 'errval' 'enum tgetpass_errval *'     |   | `-RecoveryExpr 0x145942210 <col:12> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1459423c8 <line:15:2, col:23> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x145942348 <col:2> 'int ()' Function 0x145942290 'debug_return_str' 'int ()'     |     `-RecoveryExpr 0x1459423a8 <col:19> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x1460099a0 <line:18:5, line:46:5>     | |-UnaryOperator 0x145942480 <line:18:12, col:14> '<dependent type>' contains-errors prefix '--' cannot overflow     | | `-RecoveryExpr 0x145942460 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x146009978 <col:20, line:46:5>     |   |-IfStmt 0x146008d80 <line:20:2, line:21:6>     |   | |-BinaryOperator 0x146008d58 <line:20:6, col:35> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x146008ce8 <col:6, col:22> 'int' contains-errors '||'     |   | | | |-BinaryOperator 0x146008c78 <col:6, col:12> 'int' contains-errors '!='     |   | | | | |-RecoveryExpr 0x146008c58 <col:6> '<dependent type>' contains-errors lvalue     |   | | | | `-IntegerLiteral 0x1459426c0 <col:12> 'int' 1     |   | | | `-BinaryOperator 0x146008cc8 <col:17, col:22> 'int' '=='     |   | | |   |-ImplicitCastExpr 0x146008cb0 <col:17> 'int' <IntegralCast>     |   | | |   | `-ImplicitCastExpr 0x146008c98 <col:17> 'char' <LValueToRValue>     |   | | |   |   `-DeclRefExpr 0x145942700 <col:17> 'char' lvalue Var 0x145941c80 'c' 'char'     |   | | |   `-CharacterLiteral 0x145942720 <col:22> 'int' 10     |   | | `-BinaryOperator 0x146008d38 <col:30, col:35> 'int' '=='     |   | |   |-ImplicitCastExpr 0x146008d20 <col:30> 'int' <IntegralCast>     |   | |   | `-ImplicitCastExpr 0x146008d08 <col:30> 'char' <LValueToRValue>     |   | |   |   `-DeclRefExpr 0x1459427a8 <col:30> 'char' lvalue Var 0x145941c80 'c' 'char'     |   | |   `-CharacterLiteral 0x1459427c8 <col:35> 'int' 13     |   | `-BreakStmt 0x146008d78 <line:21:6>     |   |-IfStmt 0x1460098b0 <line:22:2, line:44:2>     |   | |-ImplicitCastExpr 0x146008dc0 <line:22:6> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x146008da0 <col:6> 'int' lvalue ParmVar 0x145928270 'feedback' 'int'     |   | `-CompoundStmt 0x146009890 <col:16, line:44:2>     |   |   |-IfStmt 0x146009620 <line:23:6, line:42:6> has_else     |   |   | |-BinaryOperator 0x146008e50 <line:23:10, col:15> 'int' contains-errors '=='     |   |   | | |-DeclRefExpr 0x146008dd8 <col:10> 'char' lvalue Var 0x145941c80 'c' 'char'     |   |   | | `-RecoveryExpr 0x146008e30 <col:15> '<dependent type>' contains-errors lvalue     |   |   | |-CompoundStmt 0x146008e98 <col:30, line:26:6>     |   |   | | `-BreakStmt 0x146008e90 <line:25:3>     |   |   | `-IfStmt 0x1460095f0 <line:26:13, line:42:6> has_else     |   |   |   |-RecoveryExpr 0x146008ed0 <line:26:17, col:22> '_Bool' contains-errors     |   |   |   |-CompoundStmt 0x1460092c0 <col:38, line:34:6>     |   |   |   | |-WhileStmt 0x146009278 <line:27:3, line:31:3>     |   |   |   | | |-BinaryOperator 0x146008f60 <line:27:10, col:15> 'int' '>'     |   |   |   | | | |-ImplicitCastExpr 0x146008f30 <col:10> 'char *' <LValueToRValue>     |   |   |   | | | | `-DeclRefExpr 0x146008ef0 <col:10> 'char *' lvalue Var 0x145941bb8 'cp' 'char *'     |   |   |   | | | `-ImplicitCastExpr 0x146008f48 <col:15> 'char *' <LValueToRValue>     |   |   |   | | |   `-DeclRefExpr 0x146008f10 <col:15> 'char *' lvalue ParmVar 0x145928158 'buf' 'char *'     |   |   |   | | `-CompoundStmt 0x146009258 <col:20, line:31:3>     |   |   |   | |   |-IfStmt 0x146009200 <line:28:7, line:29:4>     |   |   |   | |   | |-BinaryOperator 0x1460091d8 <line:28:11, col:35> 'int' '=='     |   |   |   | |   | | |-CallExpr 0x146009138 <col:11, col:29> 'int'     |   |   |   | |   | | | |-ImplicitCastExpr 0x146009120 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | |   | | | | `-DeclRefExpr 0x146009060 <col:11> 'int ()' Function 0x146008fa8 'write' 'int ()'     |   |   |   | |   | | | |-ImplicitCastExpr 0x146009170 <col:17> 'int' <LValueToRValue>     |   |   |   | |   | | | | `-DeclRefExpr 0x146009080 <col:17> 'int' lvalue ParmVar 0x1459280d8 'fd' 'int'     |   |   |   | |   | | | |-ImplicitCastExpr 0x146009188 <col:21> 'char *' <ArrayToPointerDecay>     |   |   |   | |   | | | | `-StringLiteral 0x1460090e0 <col:21> 'char[4]' lvalue \"STR\"     |   |   |   | |   | | | `-IntegerLiteral 0x146009100 <col:28> 'int' 3     |   |   |   | |   | | `-UnaryOperator 0x1460091c0 <col:34, col:35> 'int' prefix '-'     |   |   |   | |   | |   `-IntegerLiteral 0x1460091a0 <col:35> 'int' 1     |   |   |   | |   | `-BreakStmt 0x1460091f8 <line:29:4>     |   |   |   | |   `-UnaryOperator 0x146009240 <line:30:7, col:9> 'char *' prefix '--'     |   |   |   | |     `-DeclRefExpr 0x146009220 <col:9> 'char *' lvalue Var 0x145941bb8 'cp' 'char *'     |   |   |   | `-ContinueStmt 0x1460092b8 <line:33:3>     |   |   |   `-IfStmt 0x1460095d0 <line:34:13, line:42:6>     |   |   |     |-RecoveryExpr 0x146009300 <line:34:17, col:22> '_Bool' contains-errors     |   |   |     `-CompoundStmt 0x1460095b0 <col:39, line:42:6>     |   |   |       |-IfStmt 0x146009588 <line:35:3, line:40:3>     |   |   |       | |-BinaryOperator 0x146009390 <line:35:7, col:12> 'int' '>'     |   |   |       | | |-ImplicitCastExpr 0x146009360 <col:7> 'char *' <LValueToRValue>     |   |   |       | | | `-DeclRefExpr 0x146009320 <col:7> 'char *' lvalue Var 0x145941bb8 'cp' 'char *'     |   |   |       | | `-ImplicitCastExpr 0x146009378 <col:12> 'char *' <LValueToRValue>     |   |   |       | |   `-DeclRefExpr 0x146009340 <col:12> 'char *' lvalue ParmVar 0x145928158 'buf' 'char *'     |   |   |       | `-CompoundStmt 0x146009568 <col:17, line:40:3>     |   |   |       |   |-IfStmt 0x146009510 <line:36:7, line:37:4>     |   |   |       |   | |-BinaryOperator 0x1460094e8 <line:36:11, col:35> 'int' '=='     |   |   |       |   | | |-CallExpr 0x146009448 <col:11, col:29> 'int'     |   |   |       |   | | | |-ImplicitCastExpr 0x146009430 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   |       |   | | | | `-DeclRefExpr 0x1460093b0 <col:11> 'int ()' Function 0x146008fa8 'write' 'int ()'     |   |   |       |   | | | |-ImplicitCastExpr 0x146009480 <col:17> 'int' <LValueToRValue>     |   |   |       |   | | | | `-DeclRefExpr 0x1460093d0 <col:17> 'int' lvalue ParmVar 0x1459280d8 'fd' 'int'     |   |   |       |   | | | |-ImplicitCastExpr 0x146009498 <col:21> 'char *' <ArrayToPointerDecay>     |   |   |       |   | | | | `-StringLiteral 0x1460093f0 <col:21> 'char[4]' lvalue \"STR\"     |   |   |       |   | | | `-IntegerLiteral 0x146009410 <col:28> 'int' 3     |   |   |       |   | | `-UnaryOperator 0x1460094d0 <col:34, col:35> 'int' prefix '-'     |   |   |       |   | |   `-IntegerLiteral 0x1460094b0 <col:35> 'int' 1     |   |   |       |   | `-BreakStmt 0x146009508 <line:37:4>     |   |   |       |   `-UnaryOperator 0x146009550 <line:38:7, col:9> 'char *' prefix '--'     |   |   |       |     `-DeclRefExpr 0x146009530 <col:9> 'char *' lvalue Var 0x145941bb8 'cp' 'char *'     |   |   |       `-ContinueStmt 0x1460095a8 <line:41:3>     |   |   `-CallExpr 0x146009868 <line:43:6, col:39> 'int'     |   |     |-ImplicitCastExpr 0x146009850 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x146009730 <col:6> 'int ()' Function 0x146009678 'ignore_result' 'int ()'     |   |     `-CallExpr 0x1460097e8 <col:20, col:38> 'int'     |   |       |-ImplicitCastExpr 0x1460097d0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x146009750 <col:20> 'int ()' Function 0x146008fa8 'write' 'int ()'     |   |       |-ImplicitCastExpr 0x146009820 <col:26> 'int' <LValueToRValue>     |   |       | `-DeclRefExpr 0x146009770 <col:26> 'int' lvalue ParmVar 0x1459280d8 'fd' 'int'     |   |       |-ImplicitCastExpr 0x146009838 <col:30> 'char *' <ArrayToPointerDecay>     |   |       | `-StringLiteral 0x146009790 <col:30> 'char[4]' lvalue \"STR\"     |   |       `-IntegerLiteral 0x1460097b0 <col:37> 'int' 1     |   `-BinaryOperator 0x146009958 <line:45:2, col:10> 'char' '='     |     |-UnaryOperator 0x146009908 <col:2, col:5> 'char' lvalue prefix '*' cannot overflow     |     | `-UnaryOperator 0x1460098f0 <col:3, col:5> 'char *' postfix '++'     |     |   `-DeclRefExpr 0x1460098d0 <col:3> 'char *' lvalue Var 0x145941bb8 'cp' 'char *'     |     `-ImplicitCastExpr 0x146009940 <col:10> 'char' <LValueToRValue>     |       `-DeclRefExpr 0x146009920 <col:10> 'char' lvalue Var 0x145941c80 'c' 'char'     |-BinaryOperator 0x146009a40 <line:47:5, col:11> 'char' '='     | |-UnaryOperator 0x1460099f8 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1460099e0 <col:6> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x1460099c0 <col:6> 'char *' lvalue Var 0x145941bb8 'cp' 'char *'     | `-ImplicitCastExpr 0x146009a28 <col:11> 'char' <IntegralCast>     |   `-CharacterLiteral 0x146009a10 <col:11> 'int' 0     |-IfStmt 0x146009d40 <line:48:5, line:55:5>     | |-ImplicitCastExpr 0x146009a80 <line:48:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x146009a60 <col:9> 'int' lvalue ParmVar 0x145928270 'feedback' 'int'     | `-CompoundStmt 0x146009d28 <col:19, line:55:5>     |   `-WhileStmt 0x146009d08 <line:50:2, line:54:2>     |     |-BinaryOperator 0x146009b08 <line:50:9, col:14> 'int' '>'     |     | |-ImplicitCastExpr 0x146009ad8 <col:9> 'char *' <LValueToRValue>     |     | | `-DeclRefExpr 0x146009a98 <col:9> 'char *' lvalue Var 0x145941bb8 'cp' 'char *'     |     | `-ImplicitCastExpr 0x146009af0 <col:14> 'char *' <LValueToRValue>     |     |   `-DeclRefExpr 0x146009ab8 <col:14> 'char *' lvalue ParmVar 0x145928158 'buf' 'char *'     |     `-CompoundStmt 0x146009ce8 <col:19, line:54:2>     |       |-IfStmt 0x146009c90 <line:51:6, line:52:3>     |       | |-BinaryOperator 0x146009c68 <line:51:10, col:34> 'int' '=='     |       | | |-CallExpr 0x146009bc0 <col:10, col:28> 'int'     |       | | | |-ImplicitCastExpr 0x146009ba8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | | | | `-DeclRefExpr 0x146009b28 <col:10> 'int ()' Function 0x146008fa8 'write' 'int ()'     |       | | | |-ImplicitCastExpr 0x146009c00 <col:16> 'int' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x146009b48 <col:16> 'int' lvalue ParmVar 0x1459280d8 'fd' 'int'     |       | | | |-ImplicitCastExpr 0x146009c18 <col:20> 'char *' <ArrayToPointerDecay>     |       | | | | `-StringLiteral 0x146009b68 <col:20> 'char[4]' lvalue \"STR\"     |       | | | `-IntegerLiteral 0x146009b88 <col:27> 'int' 3     |       | | `-UnaryOperator 0x146009c50 <col:33, col:34> 'int' prefix '-'     |       | |   `-IntegerLiteral 0x146009c30 <col:34> 'int' 1     |       | `-BreakStmt 0x146009c88 <line:52:3>     |       `-UnaryOperator 0x146009cd0 <line:53:6, col:8> 'char *' prefix '--'     |         `-DeclRefExpr 0x146009cb0 <col:8> 'char *' lvalue Var 0x145941bb8 'cp' 'char *'     `-SwitchStmt 0x146009d80 <line:57:5, line:76:5>       |-RecoveryExpr 0x146009d60 <line:57:13> 'int' contains-errors       `-CompoundStmt 0x14600a2a8 <col:17, line:76:5>         |-CaseStmt 0x146009df8 <line:58:5, line:65:2>         | |-ConstantExpr 0x146009de0 <line:58:10, col:11> 'int'         | | `-UnaryOperator 0x146009dc8 <col:10, col:11> 'int' prefix '-'         | |   `-IntegerLiteral 0x146009da8 <col:11> 'int' 1         | `-IfStmt 0x146009f40 <line:60:2, line:65:2> has_else         |   |-RecoveryExpr 0x146009e20 <line:60:6, col:15> '_Bool' contains-errors         |   |-CompoundStmt 0x146009ed0 <col:22, line:63:2>         |   `-CompoundStmt 0x146009f30 <col:9, line:65:2>         |-CaseStmt 0x146009fc8 <line:67:5, line:72:2>         | |-ConstantExpr 0x146009fb0 <line:67:10> 'int'         | | `-IntegerLiteral 0x146009f90 <col:10> 'int' 0         | `-IfStmt 0x14600a0f0 <line:69:2, line:72:2>         |   |-RecoveryExpr 0x14600a050 <line:69:6, col:23> '_Bool' contains-errors         |   `-CompoundStmt 0x14600a0e0 <col:26, line:72:2>         `-DefaultStmt 0x14600a288 <line:74:5, line:75:29>           `-CallExpr 0x14600a248 <col:2, col:29> 'int'             |-ImplicitCastExpr 0x14600a230 <col:2> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x14600a1f0 <col:2> 'int ()' Function 0x14600a138 'debug_return_str_masked' 'int ()'             `-ImplicitCastExpr 0x14600a270 <col:26> 'char *' <LValueToRValue>               `-DeclRefExpr 0x14600a210 <col:26> 'char *' lvalue ParmVar 0x145928158 'buf' 'char *' ","20413":"`-FunctionDecl 0x15584fbf0  line:1:6 invalid addDbAdminAnyDbPrivileges 'void (int *)'   |-ParmVarDecl 0x15584fb28 <col:32, col:49> col:49 referenced invalid privileges 'int *'   `-CompoundStmt 0x15584fe38 <col:61, line:13:1>     |-RecoveryExpr 0x15584fcf0 <line:2:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x15584fd60 <line:4:5> '<dependent type>' contains-errors lvalue     `-RecoveryExpr 0x15584fe18 <line:10:5> '<dependent type>' contains-errors lvalue ","20759":"`-FunctionDecl 0x1588fada8  line:1:12 compat_standard_to_user 'int (int)' static   |-ParmVarDecl 0x1588facd0 <col:36, col:41> col:41 __user 'int'   `-CompoundStmt 0x1588fb288 <line:2:1, line:8:1> ","20477":"`-FunctionDecl 0x12b00df18  line:1:5 referenced invalid jpc_encode 'int (int *, int *, const char *)'   |-ParmVarDecl 0x12b00dd28 <col:16, col:29> col:29 invalid image 'int *'   |-ParmVarDecl 0x12b00dda8 <col:36, col:50> col:50 invalid out 'int *'   |-ParmVarDecl 0x12b00de28 <col:55, col:67> col:67 used optstr 'const char *'   `-CompoundStmt 0x12c008e88 <line:2:1, line:58:1>     |-BinaryOperator 0x12b00e078 <line:3:2, col:13> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x12b00dff8 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b00dfd8 <col:2> 'int (int *, int *, const char *)' Function 0x12b00df18 'jpc_encode' 'int (int *, int *, const char *)'     | `-RecoveryExpr 0x12b00e058 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b00e2b8 <line:9:2, col:15> 'int'     | `-ImplicitCastExpr 0x12b00e2a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12b00e250 <col:2> 'int ()' Function 0x12b00e198 'jpc_initluts' 'int ()'     |-IfStmt 0x12b027cf0 <line:11:2, line:14:2>     | |-RecoveryExpr 0x12b027a90 <line:11:6, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x12b027cd0 <col:40, line:14:2>     |   |-CallExpr 0x12b027c28 <line:12:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x12b027c10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12b027b90 <col:3> 'int ()' Function 0x12b027ad8 'jas_eprintf' 'int ()'     |   | `-ImplicitCastExpr 0x12b027c50 <col:15> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12b027bf0 <col:15> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x12b027cb8 <line:13:3, col:8> 'error' 0x12b027c68     |-IfStmt 0x12b027f28 <line:16:2, line:18:2>     | |-RecoveryExpr 0x12b027ed8 <line:16:6, col:44> '_Bool' contains-errors     | `-CompoundStmt 0x12b027f10 <col:47, line:18:2>     |   `-GotoStmt 0x12b027ef8 <line:17:3, col:8> 'error' 0x12b027c68     |-IfStmt 0x12b028120 <line:22:2, line:24:2>     | |-CallExpr 0x12b0280c8 <line:22:6, col:31> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b028048 <col:6> 'int ()' Function 0x12b027f90 'jpc_enc_encodemainhdr' 'int ()'     | | `-RecoveryExpr 0x12b0280a8 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b028108 <col:34, line:24:2>     |   `-GotoStmt 0x12b0280f0 <line:23:3, col:8> 'error' 0x12b027c68     |-IfStmt 0x12b0282f8 <line:27:2, line:29:2>     | |-CallExpr 0x12b0282a0 <line:27:6, col:32> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b028220 <col:6> 'int ()' Function 0x12b028168 'jpc_enc_encodemainbody' 'int ()'     | | `-RecoveryExpr 0x12b028280 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b0282e0 <col:35, line:29:2>     |   `-GotoStmt 0x12b0282c8 <line:28:3, col:8> 'error' 0x12b027c68     |-IfStmt 0x12b028468 <line:32:2, line:34:2>     | |-RecoveryExpr 0x12b028418 <line:32:6, col:44> '_Bool' contains-errors     | `-CompoundStmt 0x12b028450 <col:47, line:34:2>     |   `-GotoStmt 0x12b028438 <line:33:3, col:8> 'error' 0x12b027c68     |-IfStmt 0x12b028678 <line:35:2, line:38:2>     | |-RecoveryExpr 0x12b028588 <line:35:6, col:47> '_Bool' contains-errors     | `-CompoundStmt 0x12b028658 <col:50, line:38:2>     |   |-CallExpr 0x12b028600 <line:36:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x12b0285e8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12b0285a8 <col:3> 'int ()' Function 0x12b027ad8 'jas_eprintf' 'int ()'     |   | `-ImplicitCastExpr 0x12b028628 <col:15> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x12b0285c8 <col:15> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x12b028640 <line:37:3, col:8> 'error' 0x12b027c68     |-IfStmt 0x12b028908 <line:42:2, line:44:2>     | |-RecoveryExpr 0x12b0288b8 <line:42:6, col:31> '_Bool' contains-errors     | `-CompoundStmt 0x12b0288f0 <col:34, line:44:2>     |   `-GotoStmt 0x12b0288d8 <line:43:3, col:8> 'error' 0x12b027c68     |-ReturnStmt 0x12c008c50 <line:48:2, col:9>     | `-IntegerLiteral 0x12c008c30 <col:9> 'int' 0     |-LabelStmt 0x12c008db0 <line:50:1, line:53:2> 'error'     | `-IfStmt 0x12c008d90 <line:51:2, line:53:2>     |   |-RecoveryExpr 0x12c008c60 <line:51:6> '_Bool' contains-errors     |   `-CompoundStmt 0x12c008d80 <col:10, line:53:2>     |-IfStmt 0x12c008e20 <line:54:2, line:56:2>     | |-RecoveryExpr 0x12c008dd0 <line:54:6> '_Bool' contains-errors     | `-CompoundStmt 0x12c008e10 <col:11, line:56:2>     `-ReturnStmt 0x12c008e78 <line:57:2, col:10>       `-UnaryOperator 0x12c008e60 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x12c008e40 <col:10> 'int' 1 ","20456":"`-FunctionDecl 0x14d928ec8  line:1:1 invalid update_connection 'int (int *, int *, int *, int *, int, int)'   |-ParmVarDecl 0x14d928b28 <col:20, col:38> col:38 invalid list 'int *'   |-ParmVarDecl 0x14d928ba8 <line:2:20, col:40> col:40 invalid editor 'int *'   |-ParmVarDecl 0x14d928c28 <line:3:20, col:42> col:42 invalid original 'int *'   |-ParmVarDecl 0x14d928ca8 <line:4:20, col:34> col:34 invalid modified 'int *'   |-ParmVarDecl 0x14d928d28 <line:5:20, col:40> col:40 invalid callback 'int'   |-ParmVarDecl 0x14d928da8 <line:6:20, col:29> col:29 invalid user_data 'int'   `-CompoundStmt 0x14f00a6a0 <line:7:1, line:70:1>     `-IfStmt 0x14f00a670 <line:20:2, line:69:2> has_else       |-RecoveryExpr 0x14f008ca0 <line:20:6, col:44> '_Bool' contains-errors       |-CompoundStmt 0x14f00a4d0 <col:60, line:66:2>       | |-CallExpr 0x14f008de0 <line:28:3, col:40> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x14f008da0 <col:3> 'int ()' Function 0x14f008ce8 'utils_fill_connection_certs' 'int ()'       | | `-RecoveryExpr 0x14f008dc0 <col:32> '<dependent type>' contains-errors lvalue       | |-CallExpr 0x14f0090d8 <line:32:3, line:33:52> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x14f009030 <line:32:3> 'int ()' Function 0x14f008f78 'nm_gconf_copy_private_connection_values' 'int ()'       | | |-CallExpr 0x14f009090 <col:44, col:91> '<dependent type>' contains-errors       | | | |-DeclRefExpr 0x14f009050 <col:44> 'int ()' Function 0x14f008af0 'nm_exported_connection_get_connection' 'int ()'       | | | `-RecoveryExpr 0x14f009070 <col:83> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x14f0090b8 <line:33:44> '<dependent type>' contains-errors lvalue       | |-CallExpr 0x14f009448 <line:37:3, col:48> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x14f009408 <col:3> 'int ()' Function 0x14f009350 'utils_clear_filled_connection_certs' 'int ()'       | | `-RecoveryExpr 0x14f009428 <col:40> '<dependent type>' contains-errors lvalue       | `-IfStmt 0x14f00a380 <line:40:3, line:62:3> has_else       |   |-RecoveryExpr 0x14f0095b8 <line:40:7, col:8> '_Bool' contains-errors       |   |-CompoundStmt 0x14f00a1a8 <col:17, line:58:3>       |   | `-IfStmt 0x14f00a158 <line:41:4, line:55:4> has_else       |   |   |-RecoveryExpr 0x14f0096d8 <line:41:8, col:51> '_Bool' contains-errors       |   |   |-CompoundStmt 0x14f00a058 <col:54, line:51:4>       |   |   | `-IfStmt 0x14f00a038 <line:45:5, line:50:5>       |   |   |   |-RecoveryExpr 0x14f009c00 <line:45:9> '_Bool' contains-errors       |   |   |   `-CompoundStmt 0x14f00a028 <col:21, line:50:5>       |   |   `-CompoundStmt 0x14f00a148 <line:51:11, line:55:4>       |   `-CompoundStmt 0x14f00a368 <line:58:10, line:62:3>       |     `-IfStmt 0x14f00a348 <line:60:4, line:61:50>       |       |-RecoveryExpr 0x14f00a1e0 <line:60:8, col:61> '_Bool' contains-errors       |       `-CallExpr 0x14f00a320 <line:61:5, col:50> '<dependent type>' contains-errors       |         |-DeclRefExpr 0x14f00a2e0 <col:5> 'int ()' Function 0x14f00a228 'nm_connection_editor_save_vpn_secrets' 'int ()'       |         `-RecoveryExpr 0x14f00a300 <col:44> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14f00a660 <line:66:9, line:69:2> ","20454":"`-FunctionDecl 0x140142538  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x140142638 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1401426a0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x140142708 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1401425e0 <<invalid sloc>> Implicit 882 ","20576":"`-FunctionDecl 0x147141238  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x147141338 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1471413a0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x147141408 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1471412e0 <<invalid sloc>> Implicit 882 ","20801":"`-FunctionDecl 0x158940b48  line:1:12 smk_skb_to_addr_ipv6 'int (struct sk_buff *, struct sockaddr_in6 *)' static   |-ParmVarDecl 0x158928648 <col:33, col:49> col:49 used skb 'struct sk_buff *'   |-ParmVarDecl 0x158940a28 <col:54, col:75> col:75 used sip 'struct sockaddr_in6 *'   `-CompoundStmt 0x149009d08 <line:2:1, line:47:1>     |-DeclStmt 0x158940ce0 <line:4:2, col:12>     | `-VarDecl 0x158940c78 <col:2, col:6> col:6 used offset 'int'     |-DeclStmt 0x158940e10 <line:5:2, col:21>     | `-VarDecl 0x158940d10 <col:2, col:15> col:6 used proto 'int' cinit     |   `-UnaryOperator 0x158940df8 <col:14, col:15> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x158940de0 <col:15> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x158940dc0 <col:15> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x158940fa8 <line:6:2, col:23>     | |-RecordDecl 0x158940e28 <col:2, col:9> col:9 struct ipv6hdr     | `-VarDecl 0x158940f28 <col:2, col:17> col:17 invalid _ipv6h 'struct ipv6hdr'     |-DeclStmt 0x1589410e0 <line:7:2, col:21>     | `-VarDecl 0x158941078 <col:2, col:18> col:18 used ip6 'struct ipv6hdr *'     |-DeclStmt 0x158941370 <line:9:2, col:26>     | |-RecordDecl 0x1589410f8 <col:2, col:9> col:9 struct tcphdr     | |-VarDecl 0x1589411f8 <col:2, col:16> col:16 invalid _tcph 'struct tcphdr'     | `-VarDecl 0x1589412e8 <col:2, col:24> col:24 used th 'struct tcphdr *'     |-DeclStmt 0x158941600 <line:10:2, col:26>     | |-RecordDecl 0x158941388 <col:2, col:9> col:9 struct udphdr     | |-VarDecl 0x158941488 <col:2, col:16> col:16 invalid _udph 'struct udphdr'     | `-VarDecl 0x158941578 <col:2, col:24> col:24 used uh 'struct udphdr *'     |-DeclStmt 0x158941890 <line:11:2, col:29>     | |-RecordDecl 0x158941618 <col:2, col:9> col:9 struct dccp_hdr     | |-VarDecl 0x158941718 <col:2, col:18> col:18 invalid _dccph 'struct dccp_hdr'     | `-VarDecl 0x158941808 <col:2, col:27> col:27 used dh 'struct dccp_hdr *'     |-BinaryOperator 0x158941928 <line:13:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1589418e0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1589418a8 <col:2> 'struct sockaddr_in6 *' lvalue ParmVar 0x158940a28 'sip' 'struct sockaddr_in6 *'     | `-IntegerLiteral 0x158941908 <col:19> 'int' 0     |-BinaryOperator 0x149008988 <line:15:2, col:33> 'int' '='     | |-DeclRefExpr 0x158941948 <col:2> 'int' lvalue Var 0x158940c78 'offset' 'int'     | `-CallExpr 0x149008948 <col:11, col:33> 'int'     |   |-ImplicitCastExpr 0x149008930 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1490088b8 <col:11> 'int ()' Function 0x149008800 'skb_network_offset' 'int ()'     |   `-ImplicitCastExpr 0x149008970 <col:30> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x1490088d8 <col:30> 'struct sk_buff *' lvalue ParmVar 0x158928648 'skb' 'struct sk_buff *'     |-BinaryOperator 0x149008be0 <line:16:2, col:63> 'struct ipv6hdr *' contains-errors '='     | |-DeclRefExpr 0x1490089a8 <col:2> 'struct ipv6hdr *' lvalue Var 0x158941078 'ip6' 'struct ipv6hdr *'     | `-CallExpr 0x149008ba0 <col:8, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149008aa8 <col:8> 'int ()' Function 0x1490089f0 'skb_header_pointer' 'int ()'     |   |-DeclRefExpr 0x149008ac8 <col:27> 'struct sk_buff *' lvalue ParmVar 0x158928648 'skb' 'struct sk_buff *'     |   |-DeclRefExpr 0x149008ae8 <col:32> 'int' lvalue Var 0x158940c78 'offset' 'int'     |   |-UnaryExprOrTypeTraitExpr 0x149008b48 <col:40, col:53> 'unsigned long' contains-errors sizeof     |   | `-ParenExpr 0x149008b28 <col:46, col:53> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x149008b08 <col:47> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x149008b88 <col:56, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x149008b68 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149008d40 <line:17:2, line:18:11>     | |-BinaryOperator 0x149008c78 <line:17:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x149008c00 <col:6> 'struct ipv6hdr *' lvalue Var 0x158941078 'ip6' 'struct ipv6hdr *'     | | `-RecoveryExpr 0x149008c58 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x149008d30 <line:18:3, col:11>     |   `-UnaryOperator 0x149008d18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x149008d00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x149008ce0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149008e20 <line:19:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x149008d98 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x149008d60 <col:2> 'struct sockaddr_in6 *' lvalue ParmVar 0x158940a28 'sip' 'struct sockaddr_in6 *'     | `-RecoveryExpr 0x149008df8 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x149008dc0 <col:19> 'struct ipv6hdr *' lvalue Var 0x158941078 'ip6' 'struct ipv6hdr *'     |-CompoundAssignOperator 0x149008f20 <line:22:2, col:25> 'int' contains-errors '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     | |-DeclRefExpr 0x149008ea0 <col:2> 'int' lvalue Var 0x158940c78 'offset' 'int'     | `-UnaryExprOrTypeTraitExpr 0x149008f00 <col:12, col:25> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x149008ee0 <col:18, col:25> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x149008ec0 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x149009220 <line:23:2, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x149008f50 <col:2> 'int' lvalue Var 0x158940c78 'offset' 'int'     | `-CallExpr 0x1490091e0 <col:11, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x149009050 <col:11> 'int ()' Function 0x149008f98 'ipv6_skip_exthdr' 'int ()'     |   |-DeclRefExpr 0x149009070 <col:28> 'struct sk_buff *' lvalue ParmVar 0x158928648 'skb' 'struct sk_buff *'     |   |-DeclRefExpr 0x149009090 <col:33> 'int' lvalue Var 0x158940c78 'offset' 'int'     |   |-UnaryOperator 0x149009190 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x149009170 <col:42> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1490091c8 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1490091a8 <col:52> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149009360 <line:24:2, line:25:11>     | |-BinaryOperator 0x149009298 <line:24:6, col:15> 'int' '<'     | | |-ImplicitCastExpr 0x149009280 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x149009240 <col:6> 'int' lvalue Var 0x158940c78 'offset' 'int'     | | `-IntegerLiteral 0x149009260 <col:15> 'int' 0     | `-ReturnStmt 0x149009350 <line:25:3, col:11>     |   `-UnaryOperator 0x149009338 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x149009320 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x149009300 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x1490093d8 <line:28:2, line:45:2>     | |-ImplicitCastExpr 0x1490093c0 <line:28:10> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x1490093a0 <col:10> 'int' contains-errors lvalue Var 0x158940d10 'proto' 'int'     | `-CompoundStmt 0x149009c68 <col:17, line:45:2>     |   |-BinaryOperator 0x149009558 <line:30:3, col:61> 'struct tcphdr *' contains-errors '='     |   | |-DeclRefExpr 0x149009400 <col:3> 'struct tcphdr *' lvalue Var 0x1589412e8 'th' 'struct tcphdr *'     |   | `-CallExpr 0x149009518 <col:8, col:61> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x149009420 <col:8> 'int ()' Function 0x1490089f0 'skb_header_pointer' 'int ()'     |   |   |-DeclRefExpr 0x149009440 <col:27> 'struct sk_buff *' lvalue ParmVar 0x158928648 'skb' 'struct sk_buff *'     |   |   |-DeclRefExpr 0x149009460 <col:32> 'int' lvalue Var 0x158940c78 'offset' 'int'     |   |   |-UnaryExprOrTypeTraitExpr 0x1490094c0 <col:40, col:52> 'unsigned long' contains-errors sizeof     |   |   | `-ParenExpr 0x1490094a0 <col:46, col:52> '<dependent type>' contains-errors lvalue     |   |   |   `-RecoveryExpr 0x149009480 <col:47> '<dependent type>' contains-errors lvalue     |   |   `-UnaryOperator 0x149009500 <col:55, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x1490094e0 <col:56> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x149009698 <line:31:3, line:32:25>     |   | |-RecoveryExpr 0x149009598 <line:31:7, col:13> '_Bool' contains-errors     |   | `-BinaryOperator 0x149009678 <line:32:4, col:25> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x1490095f0 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x1490095b8 <col:4> 'struct sockaddr_in6 *' lvalue ParmVar 0x158940a28 'sip' 'struct sockaddr_in6 *'     |   |   `-RecoveryExpr 0x149009650 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x149009618 <col:21> 'struct tcphdr *' lvalue Var 0x1589412e8 'th' 'struct tcphdr *'     |   |-BreakStmt 0x1490096b8 <line:33:3>     |   |-BinaryOperator 0x149009840 <line:36:3, col:61> 'struct udphdr *' contains-errors '='     |   | |-DeclRefExpr 0x1490096c0 <col:3> 'struct udphdr *' lvalue Var 0x158941578 'uh' 'struct udphdr *'     |   | `-CallExpr 0x149009800 <col:8, col:61> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1490096e0 <col:8> 'int ()' Function 0x1490089f0 'skb_header_pointer' 'int ()'     |   |   |-DeclRefExpr 0x149009700 <col:27> 'struct sk_buff *' lvalue ParmVar 0x158928648 'skb' 'struct sk_buff *'     |   |   |-DeclRefExpr 0x149009720 <col:32> 'int' lvalue Var 0x158940c78 'offset' 'int'     |   |   |-UnaryExprOrTypeTraitExpr 0x149009780 <col:40, col:52> 'unsigned long' contains-errors sizeof     |   |   | `-ParenExpr 0x149009760 <col:46, col:52> '<dependent type>' contains-errors lvalue     |   |   |   `-RecoveryExpr 0x149009740 <col:47> '<dependent type>' contains-errors lvalue     |   |   `-UnaryOperator 0x1490097c0 <col:55, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x1490097a0 <col:56> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x149009980 <line:37:3, line:38:25>     |   | |-RecoveryExpr 0x149009880 <line:37:7, col:13> '_Bool' contains-errors     |   | `-BinaryOperator 0x149009960 <line:38:4, col:25> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x1490098d8 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x1490098a0 <col:4> 'struct sockaddr_in6 *' lvalue ParmVar 0x158940a28 'sip' 'struct sockaddr_in6 *'     |   |   `-RecoveryExpr 0x149009938 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x149009900 <col:21> 'struct udphdr *' lvalue Var 0x158941578 'uh' 'struct udphdr *'     |   |-BreakStmt 0x1490099a0 <line:39:3>     |   |-BinaryOperator 0x149009b00 <line:41:3, col:63> 'struct dccp_hdr *' contains-errors '='     |   | |-DeclRefExpr 0x1490099a8 <col:3> 'struct dccp_hdr *' lvalue Var 0x158941808 'dh' 'struct dccp_hdr *'     |   | `-CallExpr 0x149009ac0 <col:8, col:63> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1490099c8 <col:8> 'int ()' Function 0x1490089f0 'skb_header_pointer' 'int ()'     |   |   |-DeclRefExpr 0x1490099e8 <col:27> 'struct sk_buff *' lvalue ParmVar 0x158928648 'skb' 'struct sk_buff *'     |   |   |-DeclRefExpr 0x149009a08 <col:32> 'int' lvalue Var 0x158940c78 'offset' 'int'     |   |   |-UnaryExprOrTypeTraitExpr 0x149009a68 <col:40, col:53> 'unsigned long' contains-errors sizeof     |   |   | `-ParenExpr 0x149009a48 <col:46, col:53> '<dependent type>' contains-errors lvalue     |   |   |   `-RecoveryExpr 0x149009a28 <col:47> '<dependent type>' contains-errors lvalue     |   |   `-UnaryOperator 0x149009aa8 <col:56, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x149009a88 <col:57> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x149009c40 <line:42:3, line:43:25>     |   | |-RecoveryExpr 0x149009b40 <line:42:7, col:13> '_Bool' contains-errors     |   | `-BinaryOperator 0x149009c20 <line:43:4, col:25> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x149009b98 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x149009b60 <col:4> 'struct sockaddr_in6 *' lvalue ParmVar 0x158940a28 'sip' 'struct sockaddr_in6 *'     |   |   `-RecoveryExpr 0x149009bf8 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x149009bc0 <col:21> 'struct dccp_hdr *' lvalue Var 0x158941808 'dh' 'struct dccp_hdr *'     |   `-BreakStmt 0x149009c60 <line:44:3>     `-ReturnStmt 0x149009cf8 <line:46:2, col:9>       `-ImplicitCastExpr 0x149009ce0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x149009cc0 <col:9> 'int' contains-errors lvalue Var 0x158940d10 'proto' 'int' ","20921":"`-FunctionDecl 0x149123848  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x149123948 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1491238f0 <<invalid sloc>> Implicit 873 ","20966":"`-FunctionDecl 0x15580dee8  line:1:1 invalid xsltParseAttrXSLTVersion 'int (int, int, int)'   |-ParmVarDecl 0x15580dcf0 <col:26, col:46> col:46 referenced invalid cctxt 'int'   |-ParmVarDecl 0x15580dd70 <col:53, col:64> col:64 invalid node 'int'   |-ParmVarDecl 0x15580ddf0 <line:2:5, col:9> col:9 used instrCategory 'int'   `-CompoundStmt 0x155828ca0 <line:3:1, line:54:1>     |-IfStmt 0x15580e0f8 <line:7:5, line:8:11>     | |-RecoveryExpr 0x15580e070 <line:7:9, col:41> '_Bool' contains-errors     | `-ReturnStmt 0x15580e0e8 <line:8:2, col:11>     |   `-ParenExpr 0x15580e0c8 <col:8, col:11> 'int'     |     `-UnaryOperator 0x15580e0b0 <col:9, col:10> 'int' prefix '-'     |       `-IntegerLiteral 0x15580e090 <col:10> 'int' 1     |-IfStmt 0x155827ed0 <line:15:5, line:16:10>     | |-BinaryOperator 0x155827e60 <line:15:9, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x155827e20 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x155827e40 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x155827ec0 <line:16:2, col:10>     |   `-ParenExpr 0x155827ea0 <col:8, col:10> 'int'     |     `-IntegerLiteral 0x155827e80 <col:9> 'int' 0     |-IfStmt 0x155828328 <line:20:5, line:28:5> has_else     | |-RecoveryExpr 0x155827fb8 <line:20:9, line:21:34> '_Bool' contains-errors     | |-NullStmt 0x155828320 <line:22:2>     | `-CompoundStmt 0x155828300 <line:23:10, line:28:5>     |   |-UnaryOperator 0x155828298 <line:26:2, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x155828250 <col:2, col:16> '<dependent type>' contains-errors lvalue ->errors     |   |   `-CXXDependentScopeMemberExpr 0x155828208 <col:2, col:9> '<dependent type>' contains-errors lvalue ->style     |   |     `-RecoveryExpr 0x1558281e0 <col:2> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1558281c0 <col:2> 'int' lvalue ParmVar 0x15580dcf0 'cctxt' 'int'     |   `-ReturnStmt 0x1558282f0 <line:27:2, col:10>     |     `-ParenExpr 0x1558282d0 <col:8, col:10> 'int'     |       `-IntegerLiteral 0x1558282b0 <col:9> 'int' 1     |-IfStmt 0x155828bb0 <line:30:5, line:47:5> has_else     | |-RecoveryExpr 0x155828458 <line:30:9, col:52> '_Bool' contains-errors     | |-CompoundStmt 0x155828a60 <col:55, line:45:5>     | | |-BinaryOperator 0x155828570 <line:31:2, col:33> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x155828508 <col:2, col:16> '<dependent type>' contains-errors lvalue ->forwardsCompat     | | | | `-CXXDependentScopeMemberExpr 0x1558284c0 <col:2, col:9> '<dependent type>' contains-errors lvalue ->inode     | | | |   `-RecoveryExpr 0x155828498 <col:2> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x155828478 <col:2> 'int' lvalue ParmVar 0x15580dcf0 'cctxt' 'int'     | | | `-IntegerLiteral 0x155828550 <col:33> 'int' 1     | | `-IfStmt 0x155828a40 <line:34:2, line:44:2>     | |   |-UnaryOperator 0x155828610 <line:34:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   | `-ImplicitCastExpr 0x1558285f8 <col:8, col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-CXXDependentScopeMemberExpr 0x1558285b0 <col:8, col:15> '<dependent type>' contains-errors lvalue ->hasForwardsCompat     | |   |     `-RecoveryExpr 0x155828590 <col:8> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x155828a20 <col:34, line:44:2>     | |     |-BinaryOperator 0x1558286d8 <line:35:6, col:33> '<dependent type>' contains-errors '='     | |     | |-CXXDependentScopeMemberExpr 0x155828670 <col:6, col:13> '<dependent type>' contains-errors lvalue ->hasForwardsCompat     | |     | | `-RecoveryExpr 0x155828648 <col:6> '<dependent type>' contains-errors lvalue     | |     | |   `-DeclRefExpr 0x155828628 <col:6> 'int' lvalue ParmVar 0x15580dcf0 'cctxt' 'int'     | |     | `-IntegerLiteral 0x1558286b8 <col:33> 'int' 1     | |     `-UnaryOperator 0x155828978 <line:42:6, col:28> '<dependent type>' contains-errors postfix '++' cannot overflow     | |       `-CXXDependentScopeMemberExpr 0x155828930 <col:6, col:20> '<dependent type>' contains-errors lvalue ->warnings     | |         `-CXXDependentScopeMemberExpr 0x1558288e8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->style     | |           `-RecoveryExpr 0x1558288c0 <col:6> '<dependent type>' contains-errors lvalue     | |             `-DeclRefExpr 0x1558288a0 <col:6> 'int' lvalue ParmVar 0x15580dcf0 'cctxt' 'int'     | `-CompoundStmt 0x155828b98 <line:45:12, line:47:5>     |   `-BinaryOperator 0x155828b78 <line:46:2, col:33> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x155828b10 <col:2, col:16> '<dependent type>' contains-errors lvalue ->forwardsCompat     |     | `-CXXDependentScopeMemberExpr 0x155828ac8 <col:2, col:9> '<dependent type>' contains-errors lvalue ->inode     |     |   `-RecoveryExpr 0x155828aa0 <col:2> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x155828a80 <col:2> 'int' lvalue ParmVar 0x15580dcf0 'cctxt' 'int'     |     `-IntegerLiteral 0x155828b58 <col:33> 'int' 0     |-IfStmt 0x155828c30 <line:49:5, line:52:5>     | |-RecoveryExpr 0x155828c00 <line:49:9, col:60> '_Bool' contains-errors     | `-CompoundStmt 0x155828c20 <col:63, line:52:5>     `-ReturnStmt 0x155828c90 <line:53:5, col:13>       `-ParenExpr 0x155828c70 <col:11, col:13> 'int'         `-IntegerLiteral 0x155828c50 <col:12> 'int' 1 ","20455":"`-FunctionDecl 0x14c80df18  line:1:12 invalid spl_filesystem_file_read_line 'int (int *, int *, int)' static   |-ParmVarDecl 0x14c80dd28 <col:42, col:49> col:49 invalid this_ptr 'int *'   |-ParmVarDecl 0x14c80dda8 <col:59, col:82> col:82 invalid intern 'int *'   |-ParmVarDecl 0x14c80de28 <col:90, col:94> col:94 used silent 'int'   `-CompoundStmt 0x14c827bf0 <line:2:1, line:11:1>     |-DeclStmt 0x14c80e230 <line:3:2, col:80>     | `-VarDecl 0x14c80dff0 <col:2, col:6> col:6 used ret 'int'     |-WhileStmt 0x14c827b88 <line:5:2, line:8:2>     | |-RecoveryExpr 0x14c827998 <line:5:9, col:136> '_Bool' contains-errors     | `-CompoundStmt 0x14c827b78 <col:139, line:8:2>     `-ReturnStmt 0x14c827be0 <line:10:2, col:9>       `-ImplicitCastExpr 0x14c827bc8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c827ba8 <col:9> 'int' lvalue Var 0x14c80dff0 'ret' 'int' ","20813":"`-FunctionDecl 0x15b87d4d8  line:1:12 invalid distribute_cfs_runtime 'int (struct cfs_bandwidth *, int, int)' static   |-ParmVarDecl 0x15c80e268 <col:35, col:57> col:57 used cfs_b 'struct cfs_bandwidth *'   |-ParmVarDecl 0x15c80e2e8 <line:2:3, col:7> col:7 referenced invalid remaining 'int'   |-ParmVarDecl 0x15c80e368 <col:18, col:22> col:22 invalid expires 'int'   `-CompoundStmt 0x15b883de0 <line:3:1, line:39:1>     |-DeclStmt 0x15b87d788 <line:4:2, col:23>     | |-RecordDecl 0x15b87d598 <col:2, col:9> col:9 struct cfs_rq     | `-VarDecl 0x15b87d708 <col:2, col:17> col:17 used cfs_rq 'struct cfs_rq *'     |-CallExpr 0x15b87d968 <line:8:2, col:16> 'int'     | `-ImplicitCastExpr 0x15b87d950 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15b87d900 <col:2> 'int ()' Function 0x15b87d848 'rcu_read_lock' 'int ()'     |-CallExpr 0x15b87db90 <line:9:2, line:10:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b87da68 <line:9:2> 'int ()' Function 0x15b87d9b0 'list_for_each_entry_rcu' 'int ()'     | |-DeclRefExpr 0x15b87da88 <col:26> 'struct cfs_rq *' lvalue Var 0x15b87d708 'cfs_rq' 'struct cfs_rq *'     | |-UnaryOperator 0x15b87db08 <col:34, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15b87dae0 <col:35, col:42> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b87daa8 <col:35> 'struct cfs_bandwidth *' lvalue ParmVar 0x15c80e268 'cfs_b' 'struct cfs_bandwidth *'     | `-RecoveryExpr 0x15b87db70 <line:10:5> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x15b883c38 <col:21, line:35:2>     | |-DeclStmt 0x15b87df48 <line:11:3, col:32>     | | |-RecordDecl 0x15b87dbc8 <col:3, col:10> col:10 struct rq     | | `-VarDecl 0x15b87dd38 <col:3, col:31> col:14 used rq 'struct rq *' cinit     | |   `-ImplicitCastExpr 0x15b87df18 <col:19, col:31> 'struct rq *' <IntegralToPointer>     | |     `-CallExpr 0x15b87ded8 <col:19, col:31> 'int'     | |       |-ImplicitCastExpr 0x15b87dec0 <col:19> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x15b87de80 <col:19> 'int ()' Function 0x15b87ddc8 'rq_of' 'int ()'     | |       `-ImplicitCastExpr 0x15b87df00 <col:25> 'struct cfs_rq *' <LValueToRValue>     | |         `-DeclRefExpr 0x15b87dea0 <col:25> 'struct cfs_rq *' lvalue Var 0x15b87d708 'cfs_rq' 'struct cfs_rq *'     | |-DeclStmt 0x15b87e0d8 <line:12:3, col:21>     | | |-RecordDecl 0x15b87df60 <col:3, col:10> col:10 struct rq_flags     | | `-VarDecl 0x15b87e058 <col:3, col:19> col:19 invalid rf 'struct rq_flags'     | |-CallExpr 0x15b87e248 <line:14:3, col:26> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15b87e1d0 <col:3> 'int ()' Function 0x15b87e118 'rq_lock_irqsave' 'int ()'     | | |-DeclRefExpr 0x15b87e1f0 <col:19> 'struct rq *' lvalue Var 0x15b87dd38 'rq' 'struct rq *'     | | `-UnaryOperator 0x15b87e230 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x15b87e210 <col:24> '<dependent type>' contains-errors lvalue     | |-IfStmt 0x15b883480 <line:15:3, line:16:9>     | | |-UnaryOperator 0x15b883400 <line:15:7, col:31> 'int' prefix '!' cannot overflow     | | | `-CallExpr 0x15b87e3b0 <col:8, col:31> 'int'     | | |   |-ImplicitCastExpr 0x15b87e398 <col:8> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x15b87e358 <col:8> 'int ()' Function 0x15b87e2a0 'cfs_rq_throttled' 'int ()'     | | |   `-ImplicitCastExpr 0x15b87e3d8 <col:25> 'struct cfs_rq *' <LValueToRValue>     | | |     `-DeclRefExpr 0x15b87e378 <col:25> 'struct cfs_rq *' lvalue Var 0x15b87d708 'cfs_rq' 'struct cfs_rq *'     | | `-GotoStmt 0x15b883468 <line:16:4, col:9> 'next' 0x15b883418     | |-CompoundAssignOperator 0x15b8836d8 <line:21:3, col:16> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | |-RecoveryExpr 0x15b883648 <col:3> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15b883628 <col:3> 'int' lvalue ParmVar 0x15c80e2e8 'remaining' 'int'     | | `-RecoveryExpr 0x15b8836b8 <col:16> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x15b8837e8 <line:24:3, col:29> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x15b8837a0 <col:3, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15b883768 <col:3> 'struct cfs_rq *' lvalue Var 0x15b87d708 'cfs_rq' 'struct cfs_rq *'     | | `-RecoveryExpr 0x15b8837c8 <col:29> '<dependent type>' contains-errors lvalue     | |-IfStmt 0x15b883a20 <line:27:3, line:28:28>     | | |-BinaryOperator 0x15b883888 <line:27:7, col:35> 'int' contains-errors '>'     | | | |-RecoveryExpr 0x15b883840 <col:7, col:15> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x15b883808 <col:7> 'struct cfs_rq *' lvalue Var 0x15b87d708 'cfs_rq' 'struct cfs_rq *'     | | | `-IntegerLiteral 0x15b883868 <col:35> 'int' 0     | | `-CallExpr 0x15b8839e0 <line:28:4, col:28> 'int'     | |   |-ImplicitCastExpr 0x15b8839c8 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x15b883988 <col:4> 'int ()' Function 0x15b8838d0 'unthrottle_cfs_rq' 'int ()'     | |   `-ImplicitCastExpr 0x15b883a08 <col:22> 'struct cfs_rq *' <LValueToRValue>     | |     `-DeclRefExpr 0x15b8839a8 <col:22> 'struct cfs_rq *' lvalue Var 0x15b87d708 'cfs_rq' 'struct cfs_rq *'     | `-LabelStmt 0x15b883bc8 <line:30:1, line:31:31> 'next'     |   `-CallExpr 0x15b883b98 <col:3, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15b883b20 <col:3> 'int ()' Function 0x15b883a68 'rq_unlock_irqrestore' 'int ()'     |     |-DeclRefExpr 0x15b883b40 <col:24> 'struct rq *' lvalue Var 0x15b87dd38 'rq' 'struct rq *'     |     `-UnaryOperator 0x15b883b80 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x15b883b60 <col:29> '<dependent type>' contains-errors lvalue     `-CallExpr 0x15b883da0 <line:36:2, col:18> 'int'       `-ImplicitCastExpr 0x15b883d88 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x15b883d68 <col:2> 'int ()' Function 0x15b883cb0 'rcu_read_unlock' 'int ()' ","20386":"`-FunctionDecl 0x13c9285e8  line:1:1 invalid slapi_config_register_callback_plugin 'int (int, int, const char *, int, const char *, int, void *, int *)'   |-ParmVarDecl 0x13c9280d8 <col:39, col:43> col:43 used operation 'int'   |-ParmVarDecl 0x13c928158 <line:2:39, col:43> col:43 used flags 'int'   |-ParmVarDecl 0x13c9281d8 <line:3:39, col:51> col:51 used base 'const char *'   |-ParmVarDecl 0x13c928258 <line:4:39, col:43> col:43 used scope 'int'   |-ParmVarDecl 0x13c9282d8 <line:5:39, col:51> col:51 used filter 'const char *'   |-ParmVarDecl 0x13c928370 <line:6:39, col:53> col:53 invalid fn 'int'   |-ParmVarDecl 0x13c9283f0 <line:7:39, col:45> col:45 used fn_arg 'void *'   |-ParmVarDecl 0x13c9284a8 <line:8:39, col:53> col:53 invalid pb 'int *'   `-CompoundStmt 0x13c9449d0 <line:9:1, line:32:1>     |-DeclStmt 0x13c928770 <line:10:5, col:15>     | `-VarDecl 0x13c9286e8 <col:5, col:14> col:9 used rc 'int' cinit     |   `-IntegerLiteral 0x13c928750 <col:14> 'int' 0     |-IfStmt 0x13c944968 <line:12:5, line:30:5>     | |-BinaryOperator 0x13c941a00 <line:12:9, col:15> 'int' contains-errors '!='     | | |-RecoveryExpr 0x13c9419c0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13c9419e0 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13c944948 <col:21, line:30:5>     |   |-DeclStmt 0x13c941d40 <line:13:9, col:70>     |   | |-RecordDecl 0x13c941a20 <col:9, col:16> col:16 struct dse     |   | `-VarDecl 0x13c941b88 <col:9, col:21> col:21 used pdse 'struct dse *'     |   `-IfStmt 0x13c944928 <line:14:9, line:29:9>     |     |-BinaryOperator 0x13c941dd0 <line:14:13, col:21> 'int' contains-errors '!='     |     | |-DeclRefExpr 0x13c941d58 <col:13> 'struct dse *' lvalue Var 0x13c941b88 'pdse' 'struct dse *'     |     | `-RecoveryExpr 0x13c941db0 <col:21> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13c944908 <col:27, line:29:9>     |       |-CallExpr 0x13c941fa8 <line:16:13, col:46> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x13c941ed0 <col:13> 'int ()' Function 0x13c941e18 'slapi_sdn_init_dn_byref' 'int ()'     |       | |-UnaryOperator 0x13c941f90 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | | `-RecoveryExpr 0x13c941f70 <col:38> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x13c941f20 <col:42> 'const char *' lvalue ParmVar 0x13c9281d8 'base' 'const char *'     |       `-IfStmt 0x13c9447d8 <line:17:13, line:26:13> has_else     |         |-BinaryOperator 0x13c942050 <line:17:17, col:23> 'int' contains-errors '!='     |         | |-RecoveryExpr 0x13c941fd8 <col:17> '<dependent type>' contains-errors lvalue     |         | `-RecoveryExpr 0x13c942030 <col:23> '<dependent type>' contains-errors lvalue     |         |-CompoundStmt 0x13c944688 <col:29, line:23:13>     |         | |-DeclStmt 0x13c942290 <line:19:17, col:53>     |         | | |-RecordDecl 0x13c942070 <col:17, col:24> col:24 struct slapdplugin     |         | | `-VarDecl 0x13c9421d8 <col:17, col:49> col:37 used pb_plugin 'struct slapdplugin *' cinit     |         | |   `-RecoveryExpr 0x13c942258 <col:49> '<dependent type>' contains-errors lvalue     |         | `-CallExpr 0x13c9424d0 <line:20:17, col:62> '<dependent type>' contains-errors     |         |   |-DeclRefExpr 0x13c942388 <col:17> 'int ()' Function 0x13c9422d0 'slapi_pblock_get' 'int ()'     |         |   |-RecoveryExpr 0x13c9423a8 <col:34> '<dependent type>' contains-errors lvalue     |         |   |-RecoveryExpr 0x13c9424b0 <col:38> '<dependent type>' contains-errors lvalue     |         |   `-UnaryOperator 0x13c942460 <col:52, col:53> 'struct slapdplugin **' contains-errors prefix '&' cannot overflow     |         |     `-DeclRefExpr 0x13c9423e0 <col:53> 'struct slapdplugin *' contains-errors lvalue Var 0x13c9421d8 'pb_plugin' 'struct slapdplugin *'     |         `-CompoundStmt 0x13c9447c8 <line:23:20, line:26:13>     `-ReturnStmt 0x13c9449c0 <line:31:5, col:12>       `-ImplicitCastExpr 0x13c9449a8 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x13c944988 <col:12> 'int' lvalue Var 0x13c9286e8 'rc' 'int' ","20378":"`-FunctionDecl 0x12f8163c8  line:1:5 invalid llhttp_message_needs_eof 'int (const int *)'   |-ParmVarDecl 0x12f8162f0 <col:30, col:46> col:46 invalid parser 'const int *'   `-CompoundStmt 0x12f82ded8 <col:54, line:19:1>     |-IfStmt 0x12f8165a0 <line:2:3, line:4:3>     | |-BinaryOperator 0x12f816538 <line:2:7, col:23> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12f816498 <col:7, col:15> '<dependent type>' contains-errors lvalue ->type     | | | `-RecoveryExpr 0x12f816478 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12f816518 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f816588 <col:37, line:4:3>     |   `-ReturnStmt 0x12f816578 <line:3:5, col:12>     |     `-IntegerLiteral 0x12f816558 <col:12> 'int' 0     |-IfStmt 0x12f816940 <line:7:3, line:12:3>     | |-RecoveryExpr 0x12f8168d8 <line:7:7, line:10:34> '_Bool' contains-errors     | `-CompoundStmt 0x12f816928 <col:37, line:12:3>     |   `-ReturnStmt 0x12f816918 <line:11:5, col:12>     |     `-IntegerLiteral 0x12f8168f8 <col:12> 'int' 0     |-IfStmt 0x12f82de88 <line:14:3, line:16:3>     | |-RecoveryExpr 0x12f82de20 <line:14:7, col:52> '_Bool' contains-errors     | `-CompoundStmt 0x12f82de70 <col:55, line:16:3>     |   `-ReturnStmt 0x12f82de60 <line:15:5, col:12>     |     `-IntegerLiteral 0x12f82de40 <col:12> 'int' 0     `-ReturnStmt 0x12f82dec8 <line:18:3, col:10>       `-IntegerLiteral 0x12f82dea8 <col:10> 'int' 1 ","20771":"`-FunctionDecl 0x127914230  line:1:13 invalid virgl_cmd_transfer_to_host_2d 'void (int *, struct virtio_gpu_ctrl_command *)' static   |-ParmVarDecl 0x1278fab28 <col:43, col:54> col:54 invalid g 'int *'   |-ParmVarDecl 0x1278fb118 <line:2:43, col:75> col:75 cmd 'struct virtio_gpu_ctrl_command *'   `-CompoundStmt 0x127915680 <line:3:1, line:24:1>     |-DeclStmt 0x127914468 <line:4:5, col:46>     | |-RecordDecl 0x1279142e8 <col:5, col:12> col:12 struct virtio_gpu_transfer_to_host_2d     | `-VarDecl 0x1279143e8 <col:5, col:43> col:43 invalid t2d 'struct virtio_gpu_transfer_to_host_2d'     |-DeclStmt 0x1279145f8 <line:5:5, col:30>     | |-RecordDecl 0x127914480 <col:5, col:12> col:12 struct virtio_gpu_box     | `-VarDecl 0x127914578 <col:5, col:27> col:27 referenced invalid box 'struct virtio_gpu_box'     |-CallExpr 0x1279147b0 <line:7:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127914770 <col:5> 'int ()' Function 0x1279146b8 'VIRTIO_GPU_FILL_CMD' 'int ()'     | `-RecoveryExpr 0x127914790 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127914940 <line:8:5, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1279148b8 <col:5> 'int ()' Function 0x127914800 'trace_virtio_gpu_cmd_res_xfer_toh_2d' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1279148f8 <col:42, col:46> '<dependent type>' contains-errors lvalue .resource_id     |   `-RecoveryExpr 0x1279148d8 <col:42> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x127914aa8 <line:10:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1279149b0 <col:5, col:9> '<dependent type>' contains-errors lvalue .x     | | `-RecoveryExpr 0x127914988 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127914968 <col:5> 'struct virtio_gpu_box' lvalue Var 0x127914578 'box' 'struct virtio_gpu_box'     | `-CXXDependentScopeMemberExpr 0x127914a60 <col:13, col:19> '<dependent type>' contains-errors lvalue .x     |   `-CXXDependentScopeMemberExpr 0x127914a18 <col:13, col:17> '<dependent type>' contains-errors lvalue .r     |     `-RecoveryExpr 0x1279149f8 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x127914c08 <line:11:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127914b10 <col:5, col:9> '<dependent type>' contains-errors lvalue .y     | | `-RecoveryExpr 0x127914ae8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127914ac8 <col:5> 'struct virtio_gpu_box' lvalue Var 0x127914578 'box' 'struct virtio_gpu_box'     | `-CXXDependentScopeMemberExpr 0x127914bc0 <col:13, col:19> '<dependent type>' contains-errors lvalue .y     |   `-CXXDependentScopeMemberExpr 0x127914b78 <col:13, col:17> '<dependent type>' contains-errors lvalue .r     |     `-RecoveryExpr 0x127914b58 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x127914cd8 <line:12:5, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127914c70 <col:5, col:9> '<dependent type>' contains-errors lvalue .z     | | `-RecoveryExpr 0x127914c48 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127914c28 <col:5> 'struct virtio_gpu_box' lvalue Var 0x127914578 'box' 'struct virtio_gpu_box'     | `-IntegerLiteral 0x127914cb8 <col:13> 'int' 0     |-BinaryOperator 0x127914e38 <line:13:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127914d40 <col:5, col:9> '<dependent type>' contains-errors lvalue .w     | | `-RecoveryExpr 0x127914d18 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127914cf8 <col:5> 'struct virtio_gpu_box' lvalue Var 0x127914578 'box' 'struct virtio_gpu_box'     | `-CXXDependentScopeMemberExpr 0x127914df0 <col:13, col:19> '<dependent type>' contains-errors lvalue .width     |   `-CXXDependentScopeMemberExpr 0x127914da8 <col:13, col:17> '<dependent type>' contains-errors lvalue .r     |     `-RecoveryExpr 0x127914d88 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x127914f98 <line:14:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127914ea0 <col:5, col:9> '<dependent type>' contains-errors lvalue .h     | | `-RecoveryExpr 0x127914e78 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127914e58 <col:5> 'struct virtio_gpu_box' lvalue Var 0x127914578 'box' 'struct virtio_gpu_box'     | `-CXXDependentScopeMemberExpr 0x127914f50 <col:13, col:19> '<dependent type>' contains-errors lvalue .height     |   `-CXXDependentScopeMemberExpr 0x127914f08 <col:13, col:17> '<dependent type>' contains-errors lvalue .r     |     `-RecoveryExpr 0x127914ee8 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x127915068 <line:15:5, col:13> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127915000 <col:5, col:9> '<dependent type>' contains-errors lvalue .d     | | `-RecoveryExpr 0x127914fd8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127914fb8 <col:5> 'struct virtio_gpu_box' lvalue Var 0x127914578 'box' 'struct virtio_gpu_box'     | `-IntegerLiteral 0x127915048 <col:13> 'int' 1     `-CallExpr 0x127915618 <line:17:5, line:23:58> '<dependent type>' contains-errors       |-DeclRefExpr 0x127915168 <line:17:5> 'int ()' Function 0x1279150b0 'virgl_renderer_transfer_write_iov' 'int ()'       |-CXXDependentScopeMemberExpr 0x1279151a8 <col:39, col:43> '<dependent type>' contains-errors lvalue .resource_id       | `-RecoveryExpr 0x127915188 <col:39> '<dependent type>' contains-errors lvalue       |-IntegerLiteral 0x127915200 <line:18:39> 'int' 0       |-IntegerLiteral 0x127915220 <line:19:39> 'int' 0       |-IntegerLiteral 0x127915240 <line:20:39> 'int' 0       |-IntegerLiteral 0x127915260 <line:21:39> 'int' 0       |-CStyleCastExpr 0x1279155d0 <line:22:39, col:60> 'struct virgl_box *' contains-errors <Dependent>       | `-UnaryOperator 0x127915340 <col:59, col:60> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x127915320 <col:60> '<dependent type>' contains-errors lvalue       |-CXXDependentScopeMemberExpr 0x127915470 <line:23:39, col:43> '<dependent type>' contains-errors lvalue .offset       | `-RecoveryExpr 0x127915450 <col:39> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1279155f8 <col:51> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x1279154d0 <col:57> 'int' 0 ","21156":"`-FunctionDecl 0x158128168  line:1:21 invalid Register_NON_MAX_SUPPRESSION_V5 'int *()'   `-CompoundStmt 0x158128338 <col:55, line:5:1>     |-DeclStmt 0x1581282d8 <line:2:3, line:3:60>     | `-VarDecl 0x158128228 <line:2:3, col:29> col:29 invalid r 'int' static     `-ReturnStmt 0x158128328 <line:4:3, col:11>       `-UnaryOperator 0x158128310 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x1581282f0 <col:11> '<dependent type>' contains-errors lvalue ","20280":"`-FunctionDecl 0x12f80e350  line:1:13 hns_ppe_init_hw 'void (struct hns_ppe_cb *)' static   |-ParmVarDecl 0x12f80e248 <col:29, col:48> col:48 used ppe_cb 'struct hns_ppe_cb *'   `-CompoundStmt 0x1388096d8 <line:2:1, line:42:1>     |-DeclStmt 0x12f826898 <line:3:2, col:61>     | |-RecordDecl 0x12f826648 <col:2, col:9> col:9 struct ppe_common_cb     | `-VarDecl 0x12f8267b8 <col:2, col:48> col:24 used ppe_common_cb 'struct ppe_common_cb *' cinit     |   `-RecoveryExpr 0x12f826858 <col:40, col:48> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f826820 <col:40> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'     |-DeclStmt 0x12f826b18 <line:5:2, col:56>     | |-RecordDecl 0x12f8268c8 <col:2, col:9> col:9 struct dsaf_device     | `-VarDecl 0x12f826a38 <col:2, col:48> col:22 used dsaf_dev 'struct dsaf_device *' cinit     |   `-RecoveryExpr 0x12f826ad8 <col:33, col:48> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f826aa0 <col:33> 'struct ppe_common_cb *' contains-errors lvalue Var 0x12f8267b8 'ppe_common_cb' 'struct ppe_common_cb *'     |-DeclStmt 0x12f826bb0 <line:6:2, col:7>     | `-VarDecl 0x12f826b48 <col:2, col:6> col:6 used i 'int'     |-CallExpr 0x12f826dc8 <line:9:2, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f826ce0 <col:2> 'int ()' Function 0x12f826c28 'netdev_rss_key_fill' 'int ()'     | |-RecoveryExpr 0x12f826d38 <col:22, col:30> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f826d00 <col:22> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'     | `-RecoveryExpr 0x12f826da8 <col:39> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f827068 <line:12:2, col:11> 'int'     | |-ImplicitCastExpr 0x12f827050 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f826fd8 <col:2> 'int ()' Function 0x12f826f20 'mdelay' 'int ()'     | `-IntegerLiteral 0x12f826ff8 <col:9> 'int' 10     |-CallExpr 0x12f8272e8 <line:16:2, col:30> 'int'     | |-ImplicitCastExpr 0x12f8272d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f827270 <col:2> 'int ()' Function 0x12f8271b8 'hns_ppe_exc_irq_en' 'int ()'     | |-ImplicitCastExpr 0x12f827318 <col:21> 'struct hns_ppe_cb *' <LValueToRValue>     | | `-DeclRefExpr 0x12f827290 <col:21> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'     | `-IntegerLiteral 0x12f8272b0 <col:29> 'int' 0     |-IfStmt 0x138808a30 <line:18:2, line:23:2> has_else     | |-BinaryOperator 0x12f8273e8 <line:18:6, col:33> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12f827368 <col:6, col:21> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12f827330 <col:6> 'struct ppe_common_cb *' contains-errors lvalue Var 0x12f8267b8 'ppe_common_cb' 'struct ppe_common_cb *'     | | `-RecoveryExpr 0x12f8273c8 <col:33> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1388089c0 <col:56, line:21:2>     | | |-CallExpr 0x12f827590 <line:19:3, col:44> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12f8274e8 <col:3> 'int ()' Function 0x12f827430 'hns_ppe_set_port_mode' 'int ()'     | | | |-DeclRefExpr 0x12f827508 <col:25> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'     | | | `-RecoveryExpr 0x12f827570 <col:33> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x138808988 <line:20:3, col:55> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1388088b8 <col:3> 'int ()' Function 0x138808800 'dsaf_write_dev' 'int ()'     | |   |-DeclRefExpr 0x1388088d8 <col:18> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'     | |   |-RecoveryExpr 0x138808968 <col:26> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x138808910 <col:54> 'int' 0     | `-CompoundStmt 0x138808a20 <line:21:9, line:23:2>     |-CallExpr 0x138808bb8 <line:25:2, col:40> 'int'     | |-ImplicitCastExpr 0x138808ba0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x138808b40 <col:2> 'int ()' Function 0x138808a88 'hns_ppe_checksum_hw' 'int ()'     | |-ImplicitCastExpr 0x138808be8 <col:22> 'struct hns_ppe_cb *' <LValueToRValue>     | | `-DeclRefExpr 0x138808b60 <col:22> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'     | `-IntegerLiteral 0x138808b80 <col:30> 'unsigned int' 4294967295     |-CallExpr 0x138808d38 <line:26:2, col:27> 'int'     | |-ImplicitCastExpr 0x138808d20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x138808ce0 <col:2> 'int ()' Function 0x138808c28 'hns_ppe_cnt_clr_ce' 'int ()'     | `-ImplicitCastExpr 0x138808d60 <col:21> 'struct hns_ppe_cb *' <LValueToRValue>     |   `-DeclRefExpr 0x138808d00 <col:21> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'     `-IfStmt 0x1388096b8 <line:28:2, line:41:2>       |-UnaryOperator 0x138808f00 <line:28:6, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x138808ed8 <col:7, col:36> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x138808e58 <col:7> 'int ()' Function 0x138808da0 'AE_IS_VER1' 'int ()'       |   `-RecoveryExpr 0x138808eb0 <col:18, col:28> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x138808e78 <col:18> 'struct dsaf_device *' contains-errors lvalue Var 0x12f826a38 'dsaf_dev' 'struct dsaf_device *'       `-CompoundStmt 0x138809690 <col:39, line:41:2>         |-CallExpr 0x138809070 <line:29:3, col:35> 'int'         | |-ImplicitCastExpr 0x138809058 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x138808ff8 <col:3> 'int ()' Function 0x138808f40 'hns_ppe_set_vlan_strip' 'int ()'         | |-ImplicitCastExpr 0x1388090a0 <col:26> 'struct hns_ppe_cb *' <LValueToRValue>         | | `-DeclRefExpr 0x138809018 <col:26> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'         | `-IntegerLiteral 0x138809038 <col:34> 'int' 0         |-CallExpr 0x138809278 <line:35:3, col:46> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1388091d8 <col:3> 'int ()' Function 0x138809120 'hns_ppe_set_rss_key' 'int ()'         | |-DeclRefExpr 0x1388091f8 <col:23> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'         | `-RecoveryExpr 0x138809250 <col:31, col:39> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x138809218 <col:31> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'         `-CallExpr 0x138809660 <line:40:3, col:58> '<dependent type>' contains-errors           |-DeclRefExpr 0x1388095c0 <col:3> 'int ()' Function 0x138809508 'hns_ppe_set_indir_table' 'int ()'           |-DeclRefExpr 0x1388095e0 <col:27> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *'           `-RecoveryExpr 0x138809638 <col:35, col:43> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x138809600 <col:35> 'struct hns_ppe_cb *' lvalue ParmVar 0x12f80e248 'ppe_cb' 'struct hns_ppe_cb *' ","20390":"`-FunctionDecl 0x155928208  line:1:18 invalid collectGroups 'int (const int)' static   |-ParmVarDecl 0x1559280f0 <col:32, <invalid sloc>> col:41 invalid 'const int'   `-CompoundStmt 0x155943500 <line:2:1, line:61:1>     |-DeclStmt 0x155928358 <line:4:2, col:16>     | `-VarDecl 0x1559282d0 <col:2, col:15> col:6 used lineNo 'int' cinit     |   `-IntegerLiteral 0x155928338 <col:15> 'int' 1     `-ForStmt 0x1559434c8 <line:8:2, line:59:2>       |-DeclStmt 0x155928428 <line:8:7, col:23>       | `-VarDecl 0x155928388 <col:7, col:22> col:20 used i 'unsigned int' cinit       |   `-ImplicitCastExpr 0x155928410 <col:22> 'unsigned int' <IntegralCast>       |     `-IntegerLiteral 0x1559283f0 <col:22> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x155928588 <col:25, col:43> 'int' contains-errors '<'       | |-DeclRefExpr 0x155928440 <col:25> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'       | `-CallExpr 0x155928568 <col:27, col:43> '<dependent type>' contains-errors       |   `-CXXDependentScopeMemberExpr 0x155928520 <col:27, col:36> '<dependent type>' contains-errors lvalue .length       |     `-RecoveryExpr 0x155928500 <col:27> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x1559285c8 <col:46, col:48> 'unsigned int' prefix '++'       | `-DeclRefExpr 0x1559285a8 <col:48> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'       `-CompoundStmt 0x155943490 <col:51, line:59:2>         |-IfStmt 0x1559286b0 <line:10:3, line:13:3>         | |-RecoveryExpr 0x155928630 <line:10:7, col:22> '_Bool' contains-errors         | `-CompoundStmt 0x155928690 <col:28, line:13:3>         |   |-UnaryOperator 0x155928670 <line:11:4, col:10> 'int' postfix '++'         |   | `-DeclRefExpr 0x155928650 <col:4> 'int' lvalue Var 0x1559282d0 'lineNo' 'int'         |   `-ContinueStmt 0x155928688 <line:12:4>         |-IfStmt 0x1559425f8 <line:16:3, line:19:3>         | |-BinaryOperator 0x155942578 <line:16:7, col:52> 'int' contains-errors '&&'         | | |-RecoveryExpr 0x155942498 <col:7> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x155942558 <col:19, col:52> 'int' contains-errors '=='         | |   |-CallExpr 0x155942520 <col:19, col:47> '<dependent type>' contains-errors         | |   | |-CXXDependentScopeMemberExpr 0x1559424d8 <col:19, col:28> '<dependent type>' contains-errors lvalue .compare         | |   | | `-RecoveryExpr 0x1559424b8 <col:19> '<dependent type>' contains-errors lvalue         | |   | |-DeclRefExpr 0x155928748 <col:36> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'         | |   | |-IntegerLiteral 0x155928768 <col:39> 'int' 2         | |   | `-StringLiteral 0x1559287d0 <col:42> 'char[4]' lvalue \"STR\"         | |   `-IntegerLiteral 0x155942438 <col:52> 'int' 0         | `-CompoundStmt 0x1559425d8 <col:55, line:19:3>         |   |-UnaryOperator 0x1559425b8 <line:17:4, col:5> 'unsigned int' postfix '++'         |   | `-DeclRefExpr 0x155942598 <col:4> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'         |   `-ContinueStmt 0x1559425d0 <line:18:4>         |-IfStmt 0x1559426f0 <line:22:3, line:25:3>         | |-RecoveryExpr 0x155942668 <line:22:7, col:22> '_Bool' contains-errors         | `-CompoundStmt 0x1559426d8 <col:27, line:25:3>         |   `-ContinueStmt 0x1559426d0 <line:24:4>         |-IfStmt 0x155942c10 <line:27:3, line:32:3>         | |-BinaryOperator 0x1559429c0 <line:27:7, col:53> 'int' contains-errors '&&'         | | |-UnaryOperator 0x1559428e8 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow         | | | `-ImplicitCastExpr 0x1559428d0 <col:8> '<dependent type>' contains-errors <LValueToRValue>         | | |   `-RecoveryExpr 0x1559428b0 <col:8> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x1559429a0 <col:20, col:53> 'int' contains-errors '=='         | |   |-CallExpr 0x155942968 <col:20, col:48> '<dependent type>' contains-errors         | |   | |-CXXDependentScopeMemberExpr 0x155942920 <col:20, col:29> '<dependent type>' contains-errors lvalue .compare         | |   | | `-RecoveryExpr 0x155942900 <col:20> '<dependent type>' contains-errors lvalue         | |   | |-DeclRefExpr 0x1559427b8 <col:37> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'         | |   | |-IntegerLiteral 0x1559427d8 <col:40> 'int' 2         | |   | `-StringLiteral 0x1559427f8 <col:43> 'char[4]' lvalue \"STR\"         | |   `-IntegerLiteral 0x155942850 <col:53> 'int' 0         | `-CompoundStmt 0x155942be0 <col:56, line:32:3>         |   |-UnaryOperator 0x155942a00 <line:28:4, col:5> 'unsigned int' postfix '++'         |   | `-DeclRefExpr 0x1559429e0 <col:4> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'         |   |-WhileStmt 0x155942b80 <line:29:4, col:57>         |   | |-RecoveryExpr 0x155942b28 <col:11, col:52> '_Bool' contains-errors         |   | `-UnaryOperator 0x155942b68 <col:56, col:57> 'unsigned int' postfix '++'         |   |   `-DeclRefExpr 0x155942b48 <col:56> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'         |   |-UnaryOperator 0x155942bc0 <line:30:4, col:10> 'int' postfix '++'         |   | `-DeclRefExpr 0x155942ba0 <col:4> 'int' lvalue Var 0x1559282d0 'lineNo' 'int'         |   `-ContinueStmt 0x155942bd8 <line:31:4>         `-IfStmt 0x155943470 <line:35:3, line:58:3>           |-BinaryOperator 0x155942ee0 <line:35:7, col:53> 'int' contains-errors '&&'           | |-UnaryOperator 0x155942e08 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow           | | `-ImplicitCastExpr 0x155942df0 <col:8> '<dependent type>' contains-errors <LValueToRValue>           | |   `-RecoveryExpr 0x155942dd0 <col:8> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x155942ec0 <col:20, col:53> 'int' contains-errors '=='           |   |-CallExpr 0x155942e88 <col:20, col:48> '<dependent type>' contains-errors           |   | |-CXXDependentScopeMemberExpr 0x155942e40 <col:20, col:29> '<dependent type>' contains-errors lvalue .compare           |   | | `-RecoveryExpr 0x155942e20 <col:20> '<dependent type>' contains-errors lvalue           |   | |-DeclRefExpr 0x155942cd8 <col:37> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'           |   | |-IntegerLiteral 0x155942cf8 <col:40> 'int' 2           |   | `-StringLiteral 0x155942d18 <col:43> 'char[4]' lvalue \"STR\"           |   `-IntegerLiteral 0x155942d70 <col:53> 'int' 0           `-CompoundStmt 0x155943440 <col:56, line:58:3>             |-RecoveryExpr 0x155942f30 <line:37:4> '<dependent type>' contains-errors lvalue             |-UnaryOperator 0x155942f70 <line:38:4, col:5> 'unsigned int' postfix '++'             | `-DeclRefExpr 0x155942f50 <col:4> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'             |-IfStmt 0x155943038 <line:39:4, line:44:4> has_else             | |-RecoveryExpr 0x155942fa8 <line:39:7, col:25> '_Bool' contains-errors             | |-CompoundStmt 0x155943000 <col:28, line:41:4>             | | `-UnaryOperator 0x155942fe8 <line:40:5, col:6> 'unsigned int' postfix '++'             | |   `-DeclRefExpr 0x155942fc8 <col:5> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int'             | `-CompoundStmt 0x155943020 <line:42:9, line:44:4>             |   `-ContinueStmt 0x155943018 <line:43:5>             `-WhileStmt 0x155943268 <line:47:4, line:54:4>               |-RecoveryExpr 0x155943108 <line:47:11, col:67> '_Bool' contains-errors               `-CompoundStmt 0x155943248 <col:70, line:54:4>                 |-IfStmt 0x1559431d0 <line:48:5, line:51:5>                 | |-RecoveryExpr 0x155943160 <line:48:8, col:21> '_Bool' contains-errors                 | `-CompoundStmt 0x1559431b8 <col:26, line:51:5>                 |   `-UnaryOperator 0x1559431a0 <line:49:6, col:12> 'int' postfix '++'                 |     `-DeclRefExpr 0x155943180 <col:6> 'int' lvalue Var 0x1559282d0 'lineNo' 'int'                 `-UnaryOperator 0x155943230 <line:53:5, col:6> 'unsigned int' postfix '++'                   `-DeclRefExpr 0x155943210 <col:5> 'unsigned int' lvalue Var 0x155928388 'i' 'unsigned int' ","20892":"`-FunctionDecl 0x11e808358  line:1:9 invalid smb_vfs_call_listxattr 'int (struct vfs_handle_struct *, const char *, char *, int)'   |-ParmVarDecl 0x11e128668 <col:32, col:58> col:58 used handle 'struct vfs_handle_struct *'   |-ParmVarDecl 0x11e1286e8 <line:2:11, col:23> col:23 used path 'const char *'   |-ParmVarDecl 0x11e128768 <col:29, col:35> col:35 used list 'char *'   |-ParmVarDecl 0x11e808200 <col:41, col:48> col:48 invalid size 'int'   `-CompoundStmt 0x11e8087a0 <line:3:1, line:6:1>     |-CallExpr 0x11e808600 <line:4:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e808580 <col:2> 'int ()' Function 0x11e8084c8 'VFS_FIND' 'int ()'     | `-RecoveryExpr 0x11e8085e0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11e808790 <line:5:2, col:56>       `-CallExpr 0x11e808750 <col:9, col:56> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x11e808688 <col:9, col:22> '<dependent type>' contains-errors lvalue ->listxattr         | `-RecoveryExpr 0x11e808660 <col:9, col:17> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x11e808628 <col:9> 'struct vfs_handle_struct *' lvalue ParmVar 0x11e128668 'handle' 'struct vfs_handle_struct *'         |-DeclRefExpr 0x11e8086d0 <col:32> 'struct vfs_handle_struct *' lvalue ParmVar 0x11e128668 'handle' 'struct vfs_handle_struct *'         |-DeclRefExpr 0x11e8086f0 <col:40> 'const char *' lvalue ParmVar 0x11e1286e8 'path' 'const char *'         |-DeclRefExpr 0x11e808710 <col:46> 'char *' lvalue ParmVar 0x11e128768 'list' 'char *'         `-RecoveryExpr 0x11e808730 <col:52> '<dependent type>' contains-errors lvalue ","20671":"`-FunctionDecl 0x12c128438  line:1:1 invalid read_bytes 'int (int *, void *, int, int, char *)'   |-ParmVarDecl 0x12c128128 <col:12, col:18> col:18 invalid fp 'int *'   |-ParmVarDecl 0x12c1281a8 <col:22, col:28> col:28 used buf 'void *'   |-ParmVarDecl 0x12c128228 <col:33, col:40> col:40 invalid bytes_to_read 'int'   |-ParmVarDecl 0x12c1282a8 <col:55, col:59> col:59 used fail_on_eof 'int'   |-ParmVarDecl 0x12c128328 <line:2:5, col:11> col:11 used errbuf 'char *'   `-CompoundStmt 0x12c142098 <line:3:1, line:21:1>     |-UnaryExprOrTypeTraitExpr 0x12c128560 <line:4:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x12c128540 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c142028 <line:7:2, line:19:2>     | |-BinaryOperator 0x12c141840 <line:7:6, col:18> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12c141820 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c1287d8 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c142008 <col:33, line:19:2>     |   |-IfStmt 0x12c141f70 <line:8:3, line:17:3> has_else     |   | |-CallExpr 0x12c141980 <line:8:7, col:16> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x12c141940 <col:7> 'int ()' Function 0x12c141888 'ferror' 'int ()'     |   | | `-RecoveryExpr 0x12c141960 <col:14> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x12c141c20 <col:19, line:11:3>     |   | | `-CallExpr 0x12c141be0 <line:9:4, line:10:20> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x12c141a88 <line:9:4> 'int ()' Function 0x12c1419d0 'pcap_fmt_errmsg_for_errno' 'int ()'     |   | |   |-DeclRefExpr 0x12c141aa8 <col:30> 'char *' lvalue ParmVar 0x12c128328 'errbuf' 'char *'     |   | |   |-RecoveryExpr 0x12c141ba0 <col:38> '<dependent type>' contains-errors lvalue     |   | |   |-RecoveryExpr 0x12c141bc0 <line:10:8> '<dependent type>' contains-errors lvalue     |   | |   `-StringLiteral 0x12c141b40 <col:15> 'char[4]' lvalue \"STR\"     |   | `-CompoundStmt 0x12c141f58 <line:11:10, line:17:3>     |   |   `-IfStmt 0x12c141de0 <line:12:4, line:13:14>     |   |     |-BinaryOperator 0x12c141d70 <line:12:8, col:26> 'int' contains-errors '&&'     |   |     | |-BinaryOperator 0x12c141d20 <col:8, col:20> 'int' contains-errors '=='     |   |     | | |-RecoveryExpr 0x12c141d00 <col:8> '<dependent type>' contains-errors lvalue     |   |     | | `-IntegerLiteral 0x12c141c50 <col:20> 'int' 0     |   |     | `-UnaryOperator 0x12c141d58 <col:25, col:26> 'int' prefix '!' cannot overflow     |   |     |   `-ImplicitCastExpr 0x12c141d40 <col:26> 'int' <LValueToRValue>     |   |     |     `-DeclRefExpr 0x12c141c90 <col:26> 'int' lvalue ParmVar 0x12c1282a8 'fail_on_eof' 'int'     |   |     `-ReturnStmt 0x12c141dd0 <line:13:5, col:14>     |   |       `-ParenExpr 0x12c141db0 <col:12, col:14> 'int'     |   |         `-IntegerLiteral 0x12c141d90 <col:13> 'int' 0     |   `-ReturnStmt 0x12c141ff8 <line:18:3, col:13>     |     `-ParenExpr 0x12c141fd8 <col:10, col:13> 'int'     |       `-UnaryOperator 0x12c141fc0 <col:11, col:12> 'int' prefix '-'     |         `-IntegerLiteral 0x12c141fa0 <col:12> 'int' 1     `-ReturnStmt 0x12c142088 <line:20:2, col:11>       `-ParenExpr 0x12c142068 <col:9, col:11> 'int'         `-IntegerLiteral 0x12c142048 <col:10> 'int' 1 ","20851":"`-FunctionDecl 0x152826688  line:1:12 smk_curacc_on_task 'int (struct task_struct *, int, const char *)' static   |-ParmVarDecl 0x15280e248 <col:31, col:51> col:51 used p 'struct task_struct *'   |-ParmVarDecl 0x15280e2c8 <col:54, col:58> col:58 used access 'int'   |-ParmVarDecl 0x15280e348 <line:2:5, col:17> col:17 used caller 'const char *'   `-CompoundStmt 0x152829200 <line:3:1, line:13:1>     |-DeclStmt 0x152826908 <line:4:2, col:26>     | |-RecordDecl 0x152826790 <col:2, col:9> col:9 struct smk_audit_info     | `-VarDecl 0x152826888 <col:2, col:24> col:24 invalid ad 'struct smk_audit_info'     |-DeclStmt 0x152826d18 <line:5:2, col:54>     | |-RecordDecl 0x152826920 <col:2, col:9> col:9 struct smack_known     | `-VarDecl 0x152826a88 <col:2, col:53> col:22 used skp 'struct smack_known *' cinit     |   `-ImplicitCastExpr 0x152826ce8 <col:28, col:53> 'struct smack_known *' <IntegralToPointer>     |     `-CallExpr 0x152826ca8 <col:28, col:53> 'int'     |       |-ImplicitCastExpr 0x152826c90 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x152826c20 <col:28> 'int ()' Function 0x152826b68 'smk_of_task_struct_subj' 'int ()'     |       `-ImplicitCastExpr 0x152826cd0 <col:52> 'struct task_struct *' <LValueToRValue>     |         `-DeclRefExpr 0x152826c40 <col:52> 'struct task_struct *' lvalue ParmVar 0x15280e248 'p' 'struct task_struct *'     |-DeclStmt 0x152826db0 <line:6:2, col:8>     | `-VarDecl 0x152826d48 <col:2, col:6> col:6 used rc 'int'     |-CallExpr 0x152826f90 <line:8:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152826ea8 <col:2> 'int ()' Function 0x152826df0 'smk_ad_init' 'int ()'     | |-UnaryOperator 0x152826ee8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x152826ec8 <col:15> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x152826f00 <col:19> 'const char *' lvalue ParmVar 0x15280e348 'caller' 'const char *'     | `-RecoveryExpr 0x152826f70 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152827120 <line:9:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1528270a8 <col:2> 'int ()' Function 0x152826ff0 'smk_ad_setfield_u_tsk' 'int ()'     | |-UnaryOperator 0x1528270e8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1528270c8 <col:25> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x152827100 <col:29> 'struct task_struct *' lvalue ParmVar 0x15280e248 'p' 'struct task_struct *'     |-BinaryOperator 0x152827320 <line:10:2, col:34> 'int' contains-errors '='     | |-DeclRefExpr 0x152827150 <col:2> 'int' lvalue Var 0x152826d48 'rc' 'int'     | `-CallExpr 0x1528272e8 <col:7, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152827250 <col:7> 'int ()' Function 0x152827198 'smk_curacc' 'int ()'     |   |-DeclRefExpr 0x152827270 <col:18> 'struct smack_known *' lvalue Var 0x152826a88 'skp' 'struct smack_known *'     |   |-DeclRefExpr 0x152827290 <col:23> 'int' lvalue ParmVar 0x15280e2c8 'access' 'int'     |   `-UnaryOperator 0x1528272d0 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1528272b0 <col:32> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152827558 <line:11:2, col:32> 'int' '='     | |-DeclRefExpr 0x152827340 <col:2> 'int' lvalue Var 0x152826d48 'rc' 'int'     | `-CallExpr 0x1528274d8 <col:7, col:32> 'int'     |   |-ImplicitCastExpr 0x1528274c0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x152827440 <col:7> 'int ()' Function 0x152827388 'smk_bu_task' 'int ()'     |   |-ImplicitCastExpr 0x152827510 <col:19> 'struct task_struct *' <LValueToRValue>     |   | `-DeclRefExpr 0x152827460 <col:19> 'struct task_struct *' lvalue ParmVar 0x15280e248 'p' 'struct task_struct *'     |   |-ImplicitCastExpr 0x152827528 <col:22> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x152827480 <col:22> 'int' lvalue ParmVar 0x15280e2c8 'access' 'int'     |   `-ImplicitCastExpr 0x152827540 <col:30> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1528274a0 <col:30> 'int' lvalue Var 0x152826d48 'rc' 'int'     `-ReturnStmt 0x1528275b0 <line:12:2, col:9>       `-ImplicitCastExpr 0x152827598 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x152827578 <col:9> 'int' lvalue Var 0x152826d48 'rc' 'int' ","20695":"`-FunctionDecl 0x154027710  line:1:6 invalid ldap_decode_attribs_bare 'void (int *, struct asn1_data *, struct ldb_message_element **, int *)'   |-ParmVarDecl 0x15400dd28 <col:31, col:43> col:43 invalid mem_ctx 'int *'   |-ParmVarDecl 0x15400e318 <col:52, col:70> col:70 used data 'struct asn1_data *'   |-ParmVarDecl 0x154027548 <line:2:10, col:39> col:39 used attributes 'struct ldb_message_element **'   |-ParmVarDecl 0x1540275c8 <line:3:10, col:15> col:15 used num_attributes 'int *'   `-CompoundStmt 0x154028150 <line:4:1, line:12:1>     `-WhileStmt 0x154028130 <line:5:2, line:11:2>       |-CallExpr 0x154027b18 <line:5:9, col:45> 'int'       | |-ImplicitCastExpr 0x154027b00 <col:9> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x154027930 <col:9> 'int ()' Function 0x154027878 'asn1_peek_tag' 'int ()'       | |-ImplicitCastExpr 0x154027b48 <col:23> 'struct asn1_data *' <LValueToRValue>       | | `-DeclRefExpr 0x154027950 <col:23> 'struct asn1_data *' lvalue ParmVar 0x15400e318 'data' 'struct asn1_data *'       | `-CallExpr 0x154027ad8 <col:29, col:44> 'int'       |   |-ImplicitCastExpr 0x154027ac0 <col:29> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x154027a50 <col:29> 'int ()' Function 0x154027998 'ASN1_SEQUENCE' 'int ()'       |   `-IntegerLiteral 0x154027a70 <col:43> 'int' 0       `-CompoundStmt 0x154028100 <col:48, line:11:2>         |-DeclStmt 0x154027c18 <line:6:3, col:36>         | `-VarDecl 0x154027bb0 <col:3, col:30> col:30 invalid attrib 'struct ldb_message_element'         |-CallExpr 0x154027d50 <line:7:3, col:21> '<dependent type>' contains-errors         | |-DeclRefExpr 0x154027d10 <col:3> 'int ()' Function 0x154027c58 'ZERO_STRUCT' 'int ()'         | `-RecoveryExpr 0x154027d30 <col:15> '<dependent type>' contains-errors lvalue         |-CallExpr 0x154027ef0 <line:8:3, col:44> '<dependent type>' contains-errors         | |-DeclRefExpr 0x154027e58 <col:3> 'int ()' Function 0x154027da0 'ldap_decode_attrib' 'int ()'         | |-RecoveryExpr 0x154027e78 <col:22> '<dependent type>' contains-errors lvalue         | |-DeclRefExpr 0x154027e98 <col:31> 'struct asn1_data *' lvalue ParmVar 0x15400e318 'data' 'struct asn1_data *'         | `-UnaryOperator 0x154027ed8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x154027eb8 <col:38> '<dependent type>' contains-errors lvalue         `-CallExpr 0x1540280c0 <line:9:3, line:10:35> '<dependent type>' contains-errors           |-DeclRefExpr 0x154028008 <line:9:3> 'int ()' Function 0x154027f50 'add_attrib_to_array_talloc' 'int ()'           |-RecoveryExpr 0x154028028 <col:30> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x154028068 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow           | `-RecoveryExpr 0x154028048 <col:40> '<dependent type>' contains-errors lvalue           |-DeclRefExpr 0x154028080 <line:10:9> 'struct ldb_message_element **' lvalue ParmVar 0x154027548 'attributes' 'struct ldb_message_element **'           `-DeclRefExpr 0x1540280a0 <col:21> 'int *' lvalue ParmVar 0x1540275c8 'num_attributes' 'int *' ","20909":"`-FunctionDecl 0x121940c08  line:1:5 group_send_sig_info 'int (int, struct siginfo *, struct task_struct *)'   |-ParmVarDecl 0x1219280d8 <col:25, col:29> col:29 used sig 'int'   |-ParmVarDecl 0x1219286c8 <col:34, col:50> col:50 used info 'struct siginfo *'   |-ParmVarDecl 0x121940ac8 <col:56, col:76> col:76 used p 'struct task_struct *'   `-CompoundStmt 0x121941940 <line:2:1, line:17:1>     |-DeclStmt 0x121940d90 <line:3:2, col:21>     | `-VarDecl 0x121940d28 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x121940e28 <line:4:2, col:9>     | `-VarDecl 0x121940dc0 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x1219410d8 <line:6:2, col:42> 'int' '='     | |-DeclRefExpr 0x121940e40 <col:2> 'int' lvalue Var 0x121940dc0 'ret' 'int'     | `-CallExpr 0x121941058 <col:8, col:42> 'int'     |   |-ImplicitCastExpr 0x121941040 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x121940f90 <col:8> 'int ()' Function 0x121940ed8 'check_kill_permission' 'int ()'     |   |-ImplicitCastExpr 0x121941090 <col:30> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x121940fb0 <col:30> 'int' lvalue ParmVar 0x1219280d8 'sig' 'int'     |   |-ImplicitCastExpr 0x1219410a8 <col:35> 'struct siginfo *' <LValueToRValue>     |   | `-DeclRefExpr 0x121940fd0 <col:35> 'struct siginfo *' lvalue ParmVar 0x1219286c8 'info' 'struct siginfo *'     |   `-ImplicitCastExpr 0x1219410c0 <col:41> 'struct task_struct *' <LValueToRValue>     |     `-DeclRefExpr 0x121940ff0 <col:41> 'struct task_struct *' lvalue ParmVar 0x121940ac8 'p' 'struct task_struct *'     |-IfStmt 0x1219418d8 <line:8:2, line:14:2>     | |-BinaryOperator 0x121941180 <line:8:6, col:14> 'int' '&&'     | | |-UnaryOperator 0x121941130 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x121941118 <col:7> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x1219410f8 <col:7> 'int' lvalue Var 0x121940dc0 'ret' 'int'     | | `-ImplicitCastExpr 0x121941168 <col:14> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x121941148 <col:14> 'int' lvalue ParmVar 0x1219280d8 'sig' 'int'     | `-CompoundStmt 0x1219418b8 <col:19, line:14:2>     |   |-BinaryOperator 0x121941278 <line:9:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1219411a0 <col:3> 'int' lvalue Var 0x121940dc0 'ret' 'int'     |   | `-UnaryOperator 0x121941260 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x121941248 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x121941228 <col:10> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x121941898 <line:10:3, line:13:3>     |     |-CallExpr 0x121941440 <line:10:7, col:34> 'int'     |     | |-ImplicitCastExpr 0x121941428 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x121941378 <col:7> 'int ()' Function 0x1219412c0 'lock_task_sighand' 'int ()'     |     | |-ImplicitCastExpr 0x121941470 <col:25> 'struct task_struct *' <LValueToRValue>     |     | | `-DeclRefExpr 0x121941398 <col:25> 'struct task_struct *' lvalue ParmVar 0x121940ac8 'p' 'struct task_struct *'     |     | `-UnaryOperator 0x121941410 <col:28, col:29> 'unsigned long *' prefix '&' cannot overflow     |     |   `-DeclRefExpr 0x1219413b8 <col:29> 'unsigned long' lvalue Var 0x121940d28 'flags' 'unsigned long'     |     `-CompoundStmt 0x121941878 <col:37, line:13:3>     |       |-BinaryOperator 0x1219416a0 <line:11:4, col:44> 'int' '='     |       | |-DeclRefExpr 0x121941488 <col:4> 'int' lvalue Var 0x121940dc0 'ret' 'int'     |       | `-CallExpr 0x121941620 <col:10, col:44> 'int'     |       |   |-ImplicitCastExpr 0x121941608 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x121941588 <col:10> 'int ()' Function 0x1219414d0 '__group_send_sig_info' 'int ()'     |       |   |-ImplicitCastExpr 0x121941658 <col:32> 'int' <LValueToRValue>     |       |   | `-DeclRefExpr 0x1219415a8 <col:32> 'int' lvalue ParmVar 0x1219280d8 'sig' 'int'     |       |   |-ImplicitCastExpr 0x121941670 <col:37> 'struct siginfo *' <LValueToRValue>     |       |   | `-DeclRefExpr 0x1219415c8 <col:37> 'struct siginfo *' lvalue ParmVar 0x1219286c8 'info' 'struct siginfo *'     |       |   `-ImplicitCastExpr 0x121941688 <col:43> 'struct task_struct *' <LValueToRValue>     |       |     `-DeclRefExpr 0x1219415e8 <col:43> 'struct task_struct *' lvalue ParmVar 0x121940ac8 'p' 'struct task_struct *'     |       `-CallExpr 0x121941830 <line:12:4, col:33> 'int'     |         |-ImplicitCastExpr 0x121941818 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x1219417a0 <col:4> 'int ()' Function 0x1219416e8 'unlock_task_sighand' 'int ()'     |         |-ImplicitCastExpr 0x121941860 <col:24> 'struct task_struct *' <LValueToRValue>     |         | `-DeclRefExpr 0x1219417c0 <col:24> 'struct task_struct *' lvalue ParmVar 0x121940ac8 'p' 'struct task_struct *'     |         `-UnaryOperator 0x121941800 <col:27, col:28> 'unsigned long *' prefix '&' cannot overflow     |           `-DeclRefExpr 0x1219417e0 <col:28> 'unsigned long' lvalue Var 0x121940d28 'flags' 'unsigned long'     `-ReturnStmt 0x121941930 <line:16:2, col:9>       `-ImplicitCastExpr 0x121941918 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1219418f8 <col:9> 'int' lvalue Var 0x121940dc0 'ret' 'int' ","20447":"`-FunctionDecl 0x1529281a0  line:1:13 native_flush_tlb_one_user 'void (unsigned long)' static   |-ParmVarDecl 0x1529280d8 <col:39, col:53> col:53 used addr 'unsigned long'   `-CompoundStmt 0x152928488 <line:2:1, line:4:1>     `-CallExpr 0x152928448 <line:3:2, col:34> 'int'       |-ImplicitCastExpr 0x152928430 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1529283c0 <col:2> 'int ()' Function 0x152928308 '__native_flush_tlb_one_user' 'int ()'       `-ImplicitCastExpr 0x152928470 <col:30> 'unsigned long' <LValueToRValue>         `-DeclRefExpr 0x1529283e0 <col:30> 'unsigned long' lvalue ParmVar 0x1529280d8 'addr' 'unsigned long' ","20986":"`-FunctionDecl 0x144146fc8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1441470c8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x144147130 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x144147198 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x144147070 <<invalid sloc>> Implicit 882 ","20457":"`-FunctionDecl 0x151118088  line:1:1 invalid send_session_type 'int (int *, int *)'   |-ParmVarDecl 0x151117f28 <col:20, col:32> col:32 invalid self 'int *'   |-ParmVarDecl 0x151117fa8 <line:2:20, col:44> col:44 invalid conversation 'int *'   `-CompoundStmt 0x151812a20 <line:3:1, line:14:1>     |-DeclStmt 0x151118250 <line:4:9, col:41>     | `-VarDecl 0x151118158 <col:9, col:36> col:21 used session_type 'const char *' cinit     |   `-ImplicitCastExpr 0x151118238 <col:36> 'const char *' <NoOp>     |     `-ImplicitCastExpr 0x151118220 <col:36> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x151118200 <col:36> 'char[4]' lvalue \"STR\"     |-IfStmt 0x151118498 <line:6:9, line:8:9>     | |-BinaryOperator 0x151118370 <line:6:13, col:41> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x1511182d0 <col:13, col:25> '<dependent type>' contains-errors lvalue ->session_type     | | | `-CXXDependentScopeMemberExpr 0x151118288 <col:13, col:19> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x151118268 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x151118350 <col:41> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151118480 <col:47, line:8:9>     |   `-BinaryOperator 0x151118460 <line:7:17, col:44> 'const char *' contains-errors '='     |     |-DeclRefExpr 0x151118390 <col:17> 'const char *' lvalue Var 0x151118158 'session_type' 'const char *'     |     `-CXXDependentScopeMemberExpr 0x151118418 <col:32, col:44> '<dependent type>' contains-errors lvalue ->session_type     |       `-CXXDependentScopeMemberExpr 0x1511183d0 <col:32, col:38> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x1511183b0 <col:32> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1518129d0 <line:10:9, line:13:72> '<dependent type>' contains-errors       |-DeclRefExpr 0x151812810 <line:10:9> 'int ()' Function 0x151118558 'gdm_dbus_worker_call_set_environment_variable' 'int ()'       |-CXXDependentScopeMemberExpr 0x151812850 <col:56, col:70> '<dependent type>' contains-errors lvalue ->worker_proxy       | `-RecoveryExpr 0x151812830 <col:56> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x151812898 <line:11:56> 'char[4]' lvalue \"STR\"       |-DeclRefExpr 0x1518128b8 <line:12:56> 'const char *' lvalue Var 0x151118158 'session_type' 'const char *'       |-RecoveryExpr 0x151812970 <line:13:56> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x151812990 <col:62> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1518129b0 <col:68> '<dependent type>' contains-errors lvalue ","20202":"`-FunctionDecl 0x14a80de08  line:1:30 invalid ScaleQuantumToShort 'unsigned short (const int)' static inline   |-ParmVarDecl 0x14a80dcf0 <col:50, col:64> col:64 invalid quantum 'const int'   `-CompoundStmt 0x14a80df48 <line:2:1, line:12:1>     `-ReturnStmt 0x14a80df38 <line:4:3, col:34>       `-ParenExpr 0x14a80df18 <col:9, col:34> 'unsigned short' contains-errors         `-CStyleCastExpr 0x14a80def0 <col:10, col:27> 'unsigned short' contains-errors <Dependent>           `-RecoveryExpr 0x14a80deb8 <col:27> '<dependent type>' contains-errors lvalue ","20303":"`-FunctionDecl 0x12e80e350  line:1:6 hfi1_mmu_rb_unregister 'void (struct mmu_rb_handler *)'   |-ParmVarDecl 0x12e80e248 <col:29, col:52> col:52 used handler 'struct mmu_rb_handler *'   `-CompoundStmt 0x12e8297f8 <line:2:1, line:28:1>     |-DeclStmt 0x12e826838 <line:3:2, col:28>     | |-RecordDecl 0x12e826648 <col:2, col:9> col:9 struct mmu_rb_node     | `-VarDecl 0x12e8267b8 <col:2, col:22> col:22 used rbnode 'struct mmu_rb_node *'     |-DeclStmt 0x12e826a38 <line:4:2, col:22>     | |-RecordDecl 0x12e826850 <col:2, col:9> col:9 struct rb_node     | `-VarDecl 0x12e8269b8 <col:2, col:18> col:18 used node 'struct rb_node *'     |-DeclStmt 0x12e826ad0 <line:5:2, col:21>     | `-VarDecl 0x12e826a68 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x12e826c68 <line:6:2, col:27>     | |-RecordDecl 0x12e826ae8 <col:2, col:9> col:9 struct list_head     | `-VarDecl 0x12e826be8 <col:2, col:19> col:19 invalid del_list 'struct list_head'     |-CallExpr 0x12e826ea8 <line:9:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e826db0 <col:2> 'int ()' Function 0x12e826cf8 'mmu_notifier_unregister' 'int ()'     | |-UnaryOperator 0x12e826e30 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12e826e08 <col:27, col:36> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12e826dd0 <col:27> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *'     | `-RecoveryExpr 0x12e826e80 <col:40, col:49> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12e826e48 <col:40> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *'     |-CallExpr 0x12e827050 <line:12:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e826fb8 <col:2> 'int ()' Function 0x12e826f00 'flush_work' 'int ()'     | `-UnaryOperator 0x12e827038 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e827010 <col:14, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12e826fd8 <col:14> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *'     |-CallExpr 0x12e8271b0 <line:14:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e827158 <col:2> 'int ()' Function 0x12e8270a0 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x12e827198 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e827178 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e827370 <line:16:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e8272b8 <col:2> 'int ()' Function 0x12e827200 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x12e827338 <col:20, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12e827310 <col:21, col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12e8272d8 <col:21> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *'     | `-DeclRefExpr 0x12e827350 <col:36> 'unsigned long' lvalue Var 0x12e826a68 'flags' 'unsigned long'     |-WhileStmt 0x12e8292e0 <line:17:2, line:22:2>     | |-ParenExpr 0x12e827580 <line:17:9, col:48> 'struct rb_node *' contains-errors     | | `-BinaryOperator 0x12e827560 <col:10, col:47> 'struct rb_node *' contains-errors '='     | |   |-DeclRefExpr 0x12e8273a0 <col:10> 'struct rb_node *' lvalue Var 0x12e8269b8 'node' 'struct rb_node *'     | |   `-CallExpr 0x12e827538 <col:17, col:47> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12e8274a0 <col:17> 'int ()' Function 0x12e8273e8 'rb_first_cached' 'int ()'     | |     `-UnaryOperator 0x12e827520 <col:33, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     | |       `-RecoveryExpr 0x12e8274f8 <col:34, col:43> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x12e8274c0 <col:34> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *'     | `-CompoundStmt 0x12e8292c0 <col:51, line:22:2>     |   |-CallExpr 0x12e8290b0 <line:19:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12e828ff8 <col:3> 'int ()' Function 0x12e828f40 'rb_erase_cached' 'int ()'     |   | |-DeclRefExpr 0x12e829018 <col:19> 'struct rb_node *' lvalue Var 0x12e8269b8 'node' 'struct rb_node *'     |   | `-UnaryOperator 0x12e829098 <col:25, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12e829070 <col:26, col:35> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12e829038 <col:26> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *'     |   `-CallExpr 0x12e829290 <line:21:3, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12e8291c0 <col:3> 'int ()' Function 0x12e829108 'list_move' 'int ()'     |     |-UnaryOperator 0x12e829240 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x12e829218 <col:14, col:22> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12e8291e0 <col:14> 'struct mmu_rb_node *' lvalue Var 0x12e8267b8 'rbnode' 'struct mmu_rb_node *'     |     `-UnaryOperator 0x12e829278 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x12e829258 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e829498 <line:23:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e8293e0 <col:2> 'int ()' Function 0x12e829328 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x12e829460 <col:25, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12e829438 <col:26, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12e829400 <col:26> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *'     | `-DeclRefExpr 0x12e829478 <col:41> 'unsigned long' lvalue Var 0x12e826a68 'flags' 'unsigned long'     |-CallExpr 0x12e829620 <line:25:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e8295a8 <col:2> 'int ()' Function 0x12e8294f0 'do_remove' 'int ()'     | |-DeclRefExpr 0x12e8295c8 <col:12> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *'     | `-UnaryOperator 0x12e829608 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e8295e8 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12e8297b8 <line:27:2, col:15> 'int'       |-ImplicitCastExpr 0x12e8297a0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12e829730 <col:2> 'int ()' Function 0x12e829678 'kfree' 'int ()'       `-ImplicitCastExpr 0x12e8297e0 <col:8> 'struct mmu_rb_handler *' <LValueToRValue>         `-DeclRefExpr 0x12e829750 <col:8> 'struct mmu_rb_handler *' lvalue ParmVar 0x12e80e248 'handler' 'struct mmu_rb_handler *' ","21147":"`-FunctionDecl 0x13000de88  line:1:12 invalid jpc_poc_dumpparms 'int (int *, int *)' static   |-ParmVarDecl 0x13000dd28 <col:30, col:40> col:40 invalid ms 'int *'   |-ParmVarDecl 0x13000dda8 <col:44, col:50> col:50 invalid out 'int *'   `-CompoundStmt 0x127923168 <line:2:1, line:16:1>     |-DeclStmt 0x13000e0b8 <line:5:2, col:12>     | `-VarDecl 0x13000e050 <col:2, col:6> col:6 used pchgno 'int'     |-ForStmt 0x127923100 <line:6:2, line:14:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13000e2f0 <line:6:38, col:52> 'int' contains-errors '<'     | | |-DeclRefExpr 0x13000e1e8 <col:38> 'int' lvalue Var 0x13000e050 'pchgno' 'int'     | | `-CXXDependentScopeMemberExpr 0x13000e2a8 <col:47, col:52> '<dependent type>' contains-errors lvalue ->numpchgs     | |   `-RecoveryExpr 0x13000e288 <col:47> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x13000e3d0 <line:7:4, col:16> '<dependent type>' contains-errors ','     | | |-UnaryOperator 0x13000e330 <col:4, col:6> 'int' prefix '++'     | | | `-DeclRefExpr 0x13000e310 <col:6> 'int' lvalue Var 0x13000e050 'pchgno' 'int'     | | `-UnaryOperator 0x13000e3b8 <col:14, col:16> '<dependent type>' contains-errors prefix '++' cannot overflow     | |   `-RecoveryExpr 0x13000e398 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1279230d0 <col:22, line:14:2>     |   |-CallExpr 0x127922928 <line:8:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127922760 <col:3> 'int ()' Function 0x1279226a8 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x127922780 <col:11> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x1279227e0 <col:16> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x127922800 <col:23> 'int' lvalue Var 0x13000e050 'pchgno' 'int'     |   | `-CXXDependentScopeMemberExpr 0x1279228e0 <col:31, col:37> '<dependent type>' contains-errors lvalue ->prgord     |   |   `-RecoveryExpr 0x1279228c0 <col:31> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x127922be8 <line:9:3, line:10:55> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127922968 <line:9:3> 'int ()' Function 0x1279226a8 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x127922988 <col:11> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x1279229a8 <col:16> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x1279229c8 <line:10:5> 'int' lvalue Var 0x13000e050 'pchgno' 'int'     |   | |-CXXDependentScopeMemberExpr 0x127922b38 <col:13, col:19> '<dependent type>' contains-errors lvalue ->compnostart     |   | | `-RecoveryExpr 0x127922b18 <col:13> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x127922a48 <col:32> 'int' lvalue Var 0x13000e050 'pchgno' 'int'     |   | `-CXXDependentScopeMemberExpr 0x127922ba0 <col:40, col:46> '<dependent type>' contains-errors lvalue ->compnoend     |   |   `-RecoveryExpr 0x127922b80 <col:40> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x127922eb8 <line:11:3, line:12:55> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127922c38 <line:11:3> 'int ()' Function 0x1279226a8 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x127922c58 <col:11> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x127922c78 <col:16> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x127922c98 <line:12:5> 'int' lvalue Var 0x13000e050 'pchgno' 'int'     |   | |-CXXDependentScopeMemberExpr 0x127922e08 <col:13, col:19> '<dependent type>' contains-errors lvalue ->rlvlnostart     |   | | `-RecoveryExpr 0x127922de8 <col:13> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x127922d18 <col:32> 'int' lvalue Var 0x13000e050 'pchgno' 'int'     |   | `-CXXDependentScopeMemberExpr 0x127922e70 <col:40, col:46> '<dependent type>' contains-errors lvalue ->rlvlnoend     |   |   `-RecoveryExpr 0x127922e50 <col:40> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x127923090 <line:13:3, col:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x127922f08 <col:3> 'int ()' Function 0x1279226a8 'fprintf' 'int ()'     |     |-RecoveryExpr 0x127922f28 <col:11> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x127922f48 <col:16> 'char[4]' lvalue \"STR\"     |     |-DeclRefExpr 0x127922f68 <col:23> 'int' lvalue Var 0x13000e050 'pchgno' 'int'     |     `-CXXDependentScopeMemberExpr 0x127923048 <col:31, col:37> '<dependent type>' contains-errors lvalue ->lyrnoend     |       `-RecoveryExpr 0x127923028 <col:31> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x127923158 <line:15:2, col:9>       `-IntegerLiteral 0x127923138 <col:9> 'int' 0 ","20260":"`-FunctionDecl 0x12280e350  line:1:20 sem_putref 'void (struct sem_array *)' static inline   |-ParmVarDecl 0x12280e248 <col:31, col:49> col:49 used sma 'struct sem_array *'   `-CompoundStmt 0x1228269f0 <line:2:1, line:5:1>     |-CallExpr 0x1228267f8 <line:3:2, col:25> 'int'     | |-ImplicitCastExpr 0x1228267e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122826770 <col:2> 'int ()' Function 0x1228266b8 'sem_lock_and_putref' 'int ()'     | `-ImplicitCastExpr 0x122826820 <col:22> 'struct sem_array *' <LValueToRValue>     |   `-DeclRefExpr 0x122826790 <col:22> 'struct sem_array *' lvalue ParmVar 0x12280e248 'sma' 'struct sem_array *'     `-CallExpr 0x1228269a8 <line:4:2, col:20> 'int'       |-ImplicitCastExpr 0x122826990 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x122826918 <col:2> 'int ()' Function 0x122826860 'sem_unlock' 'int ()'       |-ImplicitCastExpr 0x1228269d8 <col:13> 'struct sem_array *' <LValueToRValue>       | `-DeclRefExpr 0x122826938 <col:13> 'struct sem_array *' lvalue ParmVar 0x12280e248 'sma' 'struct sem_array *'       `-UnaryOperator 0x122826978 <col:18, col:19> 'int' prefix '-'         `-IntegerLiteral 0x122826958 <col:19> 'int' 1 ","20914":"`-FunctionDecl 0x130029908  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x130029a08 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1300299b0 <<invalid sloc>> Implicit 873 ","20860":"`-FunctionDecl 0x13100de88  line:1:8 invalid aprm_box_write 'int (int *, int *)'   |-ParmVarDecl 0x13100dd28 <col:23, col:31> col:31 invalid s 'int *'   |-ParmVarDecl 0x13100dda8 <col:34, col:48> col:48 invalid bs 'int *'   `-CompoundStmt 0x13100e140 <line:2:1, line:4:1>     `-ReturnStmt 0x13100e130 <line:3:2, col:37>       `-CallExpr 0x13100e100 <col:9, col:37> '<dependent type>' contains-errors         |-DeclRefExpr 0x13100e0a0 <col:9> 'int ()' Function 0x13100dfe8 'gf_isom_full_box_write' 'int ()'         |-RecoveryExpr 0x13100e0c0 <col:32> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13100e0e0 <col:35> '<dependent type>' contains-errors lvalue ","20736":"`-FunctionDecl 0x132940a00  line:1:13 nfs41_sequence_prepare 'void (struct rpc_task *, void *)' static   |-ParmVarDecl 0x132928648 <col:36, col:53> col:53 used task 'struct rpc_task *'   |-ParmVarDecl 0x1329286c8 <col:59, col:65> col:65 used data 'void *'   `-CompoundStmt 0x132942800 <line:2:1, line:14:1>     |-DeclStmt 0x132940d38 <line:3:2, col:44>     | |-RecordDecl 0x132940b00 <col:2, col:9> col:9 struct nfs4_sequence_data     | `-VarDecl 0x132940c68 <col:2, col:40> col:29 used calldata 'struct nfs4_sequence_data *' cinit     |   `-ImplicitCastExpr 0x132940d08 <col:40> 'struct nfs4_sequence_data *' <BitCast>     |     `-ImplicitCastExpr 0x132940cf0 <col:40> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x132940cd0 <col:40> 'void *' lvalue ParmVar 0x1329286c8 'data' 'void *'     |-DeclStmt 0x132940f98 <line:4:2, col:40>     | |-RecordDecl 0x132940d50 <col:2, col:9> col:9 struct nfs_client     | `-VarDecl 0x132940eb8 <col:2, col:37> col:21 used clp 'struct nfs_client *' cinit     |   `-RecoveryExpr 0x132940f58 <col:27, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x132940f20 <col:27> 'struct nfs4_sequence_data *' lvalue Var 0x132940c68 'calldata' 'struct nfs4_sequence_data *'     |-DeclStmt 0x132941198 <line:5:2, col:33>     | |-RecordDecl 0x132940fb0 <col:2, col:9> col:9 struct nfs4_sequence_args     | `-VarDecl 0x132941118 <col:2, col:29> col:29 used args 'struct nfs4_sequence_args *'     |-DeclStmt 0x132941398 <line:6:2, col:31>     | |-RecordDecl 0x1329411b0 <col:2, col:9> col:9 struct nfs4_sequence_res     | `-VarDecl 0x132941318 <col:2, col:28> col:28 used res 'struct nfs4_sequence_res *'     |-BinaryOperator 0x132941478 <line:8:2, col:22> 'struct nfs4_sequence_args *' contains-errors '='     | |-DeclRefExpr 0x1329413b0 <col:2> 'struct nfs4_sequence_args *' lvalue Var 0x132941118 'args' 'struct nfs4_sequence_args *'     | `-CXXDependentScopeMemberExpr 0x132941430 <col:9, col:22> '<dependent type>' contains-errors lvalue .rpc_argp     |   `-RecoveryExpr 0x132941408 <col:9, col:15> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1329413d0 <col:9> 'struct rpc_task *' lvalue ParmVar 0x132928648 'task' 'struct rpc_task *'     |-BinaryOperator 0x132941560 <line:9:2, col:21> 'struct nfs4_sequence_res *' contains-errors '='     | |-DeclRefExpr 0x132941498 <col:2> 'struct nfs4_sequence_res *' lvalue Var 0x132941318 'res' 'struct nfs4_sequence_res *'     | `-CXXDependentScopeMemberExpr 0x132941518 <col:8, col:21> '<dependent type>' contains-errors lvalue .rpc_resp     |   `-RecoveryExpr 0x1329414f0 <col:8, col:14> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1329414b8 <col:8> 'struct rpc_task *' lvalue ParmVar 0x132928648 'task' 'struct rpc_task *'     |-IfStmt 0x132941808 <line:11:2, line:12:3>     | |-CallExpr 0x1329417b0 <line:11:6, col:62> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1329416b0 <col:6> 'int ()' Function 0x1329415f8 'nfs41_setup_sequence' 'int ()'     | | |-RecoveryExpr 0x132941708 <col:27, col:32> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1329416d0 <col:27> 'struct nfs_client *' contains-errors lvalue Var 0x132940eb8 'clp' 'struct nfs_client *'     | | |-DeclRefExpr 0x132941730 <col:44> 'struct nfs4_sequence_args *' lvalue Var 0x132941118 'args' 'struct nfs4_sequence_args *'     | | |-DeclRefExpr 0x132941750 <col:50> 'struct nfs4_sequence_res *' lvalue Var 0x132941318 'res' 'struct nfs4_sequence_res *'     | | |-IntegerLiteral 0x132941770 <col:55> 'int' 0     | | `-DeclRefExpr 0x132941790 <col:58> 'struct rpc_task *' lvalue ParmVar 0x132928648 'task' 'struct rpc_task *'     | `-ReturnStmt 0x1329417f8 <line:12:3>     `-CallExpr 0x132941998 <line:13:2, col:21> 'int'       |-ImplicitCastExpr 0x132941980 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x132941908 <col:2> 'int ()' Function 0x132941850 'rpc_call_start' 'int ()'       `-ImplicitCastExpr 0x1329419c0 <col:17> 'struct rpc_task *' <LValueToRValue>         `-DeclRefExpr 0x132941928 <col:17> 'struct rpc_task *' lvalue ParmVar 0x132928648 'task' 'struct rpc_task *' ","21236":"`-FunctionDecl 0x12400de88  line:1:1 invalid rsvg_state_clone 'int (int *, const int *)'   |-ParmVarDecl 0x12400dd28 <col:19, col:31> col:31 referenced invalid dst 'int *'   |-ParmVarDecl 0x12400dda8 <col:36, col:54> col:54 invalid src 'const int *'   `-CompoundStmt 0x1240284e8 <line:2:1, line:22:1>     |-DeclStmt 0x12400dfc0 <line:3:5, col:11>     | `-VarDecl 0x12400df58 <col:5, col:10> col:10 used i 'int'     |-CallExpr 0x12400e1f0 <line:6:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12400e1b0 <col:5> 'int ()' Function 0x12400e0f8 'rsvg_state_finalize' 'int ()'     | `-RecoveryExpr 0x12400e1d0 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12400e2b8 <line:8:5, col:13> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x12400e250 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12400e238 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12400e218 <col:6> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x12400e2a0 <col:12, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x12400e288 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12400e268 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12400e3c0 <line:9:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12400e320 <col:5, col:10> '<dependent type>' contains-errors lvalue ->parent     | | `-RecoveryExpr 0x12400e2f8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12400e2d8 <col:5> 'int *' lvalue ParmVar 0x12400dd28 'dst' 'int *'     | `-RecoveryExpr 0x12400e3a0 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124027600 <line:10:5, col:50> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x124027428 <col:5, col:10> '<dependent type>' contains-errors lvalue ->font_family     | | `-RecoveryExpr 0x124027400 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12400e3e0 <col:5> 'int *' lvalue ParmVar 0x12400dd28 'dst' 'int *'     | `-CallExpr 0x1240275d8 <col:24, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124027550 <col:24> 'int ()' Function 0x124027498 'g_strdup' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x124027590 <col:34, col:39> '<dependent type>' contains-errors lvalue ->font_family     |     `-RecoveryExpr 0x124027570 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124027760 <line:11:5, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x124027668 <col:5, col:10> '<dependent type>' contains-errors lvalue ->lang     | | `-RecoveryExpr 0x124027640 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x124027620 <col:5> 'int *' lvalue ParmVar 0x12400dd28 'dst' 'int *'     | `-CallExpr 0x124027738 <col:17, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1240276b0 <col:17> 'int ()' Function 0x124027498 'g_strdup' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1240276f0 <col:27, col:32> '<dependent type>' contains-errors lvalue ->lang     |     `-RecoveryExpr 0x1240276d0 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1240278e8 <line:12:5, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124027860 <col:5> 'int ()' Function 0x1240277a8 'rsvg_paint_server_ref' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1240278a0 <col:28, col:33> '<dependent type>' contains-errors lvalue ->fill     |   `-RecoveryExpr 0x124027880 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x124027998 <line:13:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124027910 <col:5> 'int ()' Function 0x1240277a8 'rsvg_paint_server_ref' 'int ()'     | `-CXXDependentScopeMemberExpr 0x124027950 <col:28, col:33> '<dependent type>' contains-errors lvalue ->stroke     |   `-RecoveryExpr 0x124027930 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124027be0 <line:15:5, col:48> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x124027a08 <col:5, col:10> '<dependent type>' contains-errors lvalue ->styles     | | `-RecoveryExpr 0x1240279e0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1240279c0 <col:5> 'int *' lvalue ParmVar 0x12400dd28 'dst' 'int *'     | `-CallExpr 0x124027bb8 <col:19, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124027b30 <col:19> 'int ()' Function 0x124027a78 'g_hash_table_ref' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x124027b70 <col:37, col:42> '<dependent type>' contains-errors lvalue ->styles     |     `-RecoveryExpr 0x124027b50 <col:37> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1240284c8 <line:17:5, line:21:5>       |-BinaryOperator 0x124027cd0 <line:17:9, col:28> 'int' contains-errors '>'       | |-CXXDependentScopeMemberExpr 0x124027c68 <col:9, col:19> '<dependent type>' contains-errors lvalue .n_dash       | | `-CXXDependentScopeMemberExpr 0x124027c20 <col:9, col:14> '<dependent type>' contains-errors lvalue ->dash       | |   `-RecoveryExpr 0x124027c00 <col:9> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x124027cb0 <col:28> 'int' 0       `-CompoundStmt 0x1240284a8 <col:31, line:21:5>         |-BinaryOperator 0x124028030 <line:18:9, col:58> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x124027d80 <col:9, col:19> '<dependent type>' contains-errors lvalue .dash         | | `-CXXDependentScopeMemberExpr 0x124027d38 <col:9, col:14> '<dependent type>' contains-errors lvalue ->dash         | |   `-RecoveryExpr 0x124027d10 <col:9> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x124027cf0 <col:9> 'int *' lvalue ParmVar 0x12400dd28 'dst' 'int *'         | `-CallExpr 0x124028000 <col:26, col:58> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x124027ea8 <col:26> 'int ()' Function 0x124027df0 'g_new' 'int ()'         |   |-RecoveryExpr 0x124027fe0 <col:33> '<dependent type>' contains-errors lvalue         |   `-CXXDependentScopeMemberExpr 0x124027f48 <col:42, col:52> '<dependent type>' contains-errors lvalue .n_dash         |     `-CXXDependentScopeMemberExpr 0x124027f00 <col:42, col:47> '<dependent type>' contains-errors lvalue ->dash         |       `-RecoveryExpr 0x124027ee0 <col:42> '<dependent type>' contains-errors lvalue         `-ForStmt 0x124028470 <line:19:9, line:20:49>           |-BinaryOperator 0x124028090 <line:19:14, col:18> 'int' '='           | |-DeclRefExpr 0x124028050 <col:14> 'int' lvalue Var 0x12400df58 'i' 'int'           | `-IntegerLiteral 0x124028070 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x124028180 <col:21, col:35> 'int' contains-errors '<'           | |-DeclRefExpr 0x1240280b0 <col:21> 'int' lvalue Var 0x12400df58 'i' 'int'           | `-CXXDependentScopeMemberExpr 0x124028138 <col:25, col:35> '<dependent type>' contains-errors lvalue .n_dash           |   `-CXXDependentScopeMemberExpr 0x1240280f0 <col:25, col:30> '<dependent type>' contains-errors lvalue ->dash           |     `-RecoveryExpr 0x1240280d0 <col:25> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x1240281c0 <col:43, col:44> 'int' postfix '++'           | `-DeclRefExpr 0x1240281a0 <col:43> 'int' lvalue Var 0x12400df58 'i' 'int'           `-BinaryOperator 0x124028450 <line:20:13, col:49> '<dependent type>' contains-errors '='             |-ArraySubscriptExpr 0x124028300 <col:13, col:29> '<dependent type>' contains-errors lvalue             | |-ImplicitCastExpr 0x1240282d0 <col:13, col:23> '<dependent type>' contains-errors <LValueToRValue>             | | `-CXXDependentScopeMemberExpr 0x124028268 <col:13, col:23> '<dependent type>' contains-errors lvalue .dash             | |   `-CXXDependentScopeMemberExpr 0x124028220 <col:13, col:18> '<dependent type>' contains-errors lvalue ->dash             | |     `-RecoveryExpr 0x1240281f8 <col:13> '<dependent type>' contains-errors lvalue             | |       `-DeclRefExpr 0x1240281d8 <col:13> 'int *' lvalue ParmVar 0x12400dd28 'dst' 'int *'             | `-ImplicitCastExpr 0x1240282e8 <col:28> 'int' <LValueToRValue>             |   `-DeclRefExpr 0x1240282b0 <col:28> 'int' lvalue Var 0x12400df58 'i' 'int'             `-ArraySubscriptExpr 0x124028430 <col:33, col:49> '<dependent type>' contains-errors lvalue               |-ImplicitCastExpr 0x124028400 <col:33, col:43> '<dependent type>' contains-errors <LValueToRValue>               | `-CXXDependentScopeMemberExpr 0x124028388 <col:33, col:43> '<dependent type>' contains-errors lvalue .dash               |   `-CXXDependentScopeMemberExpr 0x124028340 <col:33, col:38> '<dependent type>' contains-errors lvalue ->dash               |     `-RecoveryExpr 0x124028320 <col:33> '<dependent type>' contains-errors lvalue               `-ImplicitCastExpr 0x124028418 <col:48> 'int' <LValueToRValue>                 `-DeclRefExpr 0x1240283d0 <col:48> 'int' lvalue Var 0x12400df58 'i' 'int' ","21018":"`-FunctionDecl 0x12900df10 prev 0x12900dda0  line:1:8 free 'void (void *)'   |-ParmVarDecl 0x12900dcd8 <col:13, col:20> col:20 used p 'void *'   |-CompoundStmt 0x12900e258 <line:2:3, line:23:3>   | `-CallExpr 0x12900e218 <line:21:7, col:22> 'int'   |   |-ImplicitCastExpr 0x12900e200 <col:7> 'int (*)()' <FunctionToPointerDecay>   |   | `-DeclRefExpr 0x12900e190 <col:7> 'int ()' Function 0x12900e0d8 'REDIRECT_FREE' 'int ()'   |   `-ImplicitCastExpr 0x12900e240 <col:21> 'void *' <LValueToRValue>   |     `-DeclRefExpr 0x12900e1b0 <col:21> 'void *' lvalue ParmVar 0x12900dcd8 'p' 'void *'   `-BuiltinAttr 0x12900dff0 <<invalid sloc>> Inherited Implicit 873 ","20473":"`-FunctionDecl 0x1251418d8  line:1:5 invalid nfc_dep_link_up 'int (struct nfc_dev *, int, int)'   |-ParmVarDecl 0x125128648 <col:21, col:37> col:37 used dev 'struct nfc_dev *'   |-ParmVarDecl 0x1251286c8 <col:42, col:46> col:46 used target_index 'int'   |-ParmVarDecl 0x125128760 <col:60, col:63> col:63 invalid comm_mode 'int'   `-CompoundStmt 0x1251432e8 <line:2:1, line:46:1>     |-DeclStmt 0x125141a38 <line:3:2, col:12>     | `-VarDecl 0x1251419b0 <col:2, col:11> col:6 used rc 'int' cinit     |   `-IntegerLiteral 0x125141a18 <col:11> 'int' 0     |-UnaryExprOrTypeTraitExpr 0x125141ac0 <line:5:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x125141aa0 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x125141cc8 <line:6:2, col:27>     | |-RecordDecl 0x125141ae0 <col:2, col:9> col:9 struct nfc_target     | `-VarDecl 0x125141c48 <col:2, col:21> col:21 used target 'struct nfc_target *'     |-CallExpr 0x125142080 <line:8:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125141e40 <col:2> 'int ()' Function 0x125141d88 'pr_debug' 'int ()'     | |-StringLiteral 0x125141ea0 <col:11> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x125142038 <col:18, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x125141fa0 <col:18> 'int ()' Function 0x125141ee8 'dev_name' 'int ()'     | | `-UnaryOperator 0x125142020 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x125141ff8 <col:28, col:33> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x125141fc0 <col:28> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'     | `-RecoveryExpr 0x125142060 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125142238 <line:10:2, line:11:11>     | |-UnaryOperator 0x125142178 <line:10:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x125142160 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x125142118 <col:7, col:17> '<dependent type>' contains-errors lvalue ->dep_link_up     | |     `-RecoveryExpr 0x1251420f0 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1251420b8 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'     | `-ReturnStmt 0x125142228 <line:11:3, col:11>     |   `-UnaryOperator 0x125142210 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1251421f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1251421d8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1251423d0 <line:13:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125142338 <col:2> 'int ()' Function 0x125142280 'device_lock' 'int ()'     | `-UnaryOperator 0x1251423b8 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x125142390 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125142358 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'     |-IfStmt 0x125142730 <line:15:2, line:18:2>     | |-UnaryOperator 0x125142598 <line:15:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x125142570 <col:7, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1251424d8 <col:7> 'int ()' Function 0x125142420 'device_is_registered' 'int ()'     | |   `-UnaryOperator 0x125142558 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x125142530 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1251424f8 <col:29> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x125142710 <col:40, line:18:2>     |   |-BinaryOperator 0x125142688 <line:16:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1251425b0 <col:3> 'int' lvalue Var 0x1251419b0 'rc' 'int'     |   | `-UnaryOperator 0x125142670 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x125142658 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x125142638 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1251426f8 <line:17:3, col:8> 'error' 0x1251426a8     |-IfStmt 0x125142970 <line:20:2, line:23:2>     | |-BinaryOperator 0x125142820 <line:20:6, col:26> 'int' contains-errors '=='     | | |-RecoveryExpr 0x125142788 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x125142750 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'     | | `-RecoveryExpr 0x125142800 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x125142950 <col:32, line:23:2>     |   |-BinaryOperator 0x125142918 <line:21:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x125142840 <col:3> 'int' lvalue Var 0x1251419b0 'rc' 'int'     |   | `-UnaryOperator 0x125142900 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x1251428e8 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x1251428c8 <col:9> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x125142938 <line:22:3, col:8> 'error' 0x1251426a8     |-IfStmt 0x125142b20 <line:26:2, line:29:2>     | |-RecoveryExpr 0x125142ab0 <line:26:6, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x125142b08 <col:31, line:29:2>     |   `-GotoStmt 0x125142af0 <line:28:3, col:8> 'error' 0x1251426a8     |-BinaryOperator 0x125142d60 <line:31:2, col:44> 'struct nfc_target *' '='     | |-DeclRefExpr 0x125142b40 <col:2> 'struct nfc_target *' lvalue Var 0x125141c48 'target' 'struct nfc_target *'     | `-ImplicitCastExpr 0x125142d48 <col:11, col:44> 'struct nfc_target *' <IntegralToPointer>     |   `-CallExpr 0x125142ce8 <col:11, col:44> 'int'     |     |-ImplicitCastExpr 0x125142cd0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x125142c40 <col:11> 'int ()' Function 0x125142b88 'nfc_find_target' 'int ()'     |     |-ImplicitCastExpr 0x125142d18 <col:27> 'struct nfc_dev *' <LValueToRValue>     |     | `-DeclRefExpr 0x125142c60 <col:27> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'     |     `-ImplicitCastExpr 0x125142d30 <col:32> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x125142c80 <col:32> 'int' lvalue ParmVar 0x1251286c8 'target_index' 'int'     |-IfStmt 0x125142e10 <line:32:2, line:35:2>     | |-RecoveryExpr 0x125142da0 <line:32:6, col:16> '_Bool' contains-errors     | `-CompoundStmt 0x125142df8 <col:22, line:35:2>     |   `-GotoStmt 0x125142de0 <line:34:3, col:8> 'error' 0x1251426a8     |-IfStmt 0x1251430c0 <line:38:2, line:41:2>     | |-UnaryOperator 0x125142f90 <line:38:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x125142f78 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x125142f58 <col:7> 'int' lvalue Var 0x1251419b0 'rc' 'int'     | `-CompoundStmt 0x1251430a8 <col:11, line:41:2>     |   `-BinaryOperator 0x125143028 <line:39:3, col:24> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x125142fe0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x125142fa8 <col:3> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'     |     `-DeclRefExpr 0x125143008 <col:24> 'struct nfc_target *' lvalue Var 0x125141c48 'target' 'struct nfc_target *'     |-LabelStmt 0x125143280 <line:43:1, line:44:25> 'error'     | `-CallExpr 0x125143258 <col:2, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1251431c0 <col:2> 'int ()' Function 0x125143108 'device_unlock' 'int ()'     |   `-UnaryOperator 0x125143240 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x125143218 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1251431e0 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x125128648 'dev' 'struct nfc_dev *'     `-ReturnStmt 0x1251432d8 <line:45:2, col:9>       `-ImplicitCastExpr 0x1251432c0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1251432a0 <col:9> 'int' lvalue Var 0x1251419b0 'rc' 'int' ","20763":"`-FunctionDecl 0x152808238  line:1:6 invalid tcp_schedule_loss_probe 'int (struct sock *, int)'   |-ParmVarDecl 0x152128668 <col:30, col:43> col:43 used sk 'struct sock *'   |-ParmVarDecl 0x1521286e8 <col:47, col:52> col:52 invalid advancing_rto 'int'   `-CompoundStmt 0x152142588 <line:2:1, line:41:1>     |-DeclStmt 0x152808718 <line:3:2, col:50>     | |-RecordDecl 0x1528082f0 <col:2, col:9> col:9 struct inet_connection_sock     | `-VarDecl 0x152808458 <col:2, col:49> col:31 used icsk 'struct inet_connection_sock *' cinit     |   `-ImplicitCastExpr 0x1528086e8 <col:38, col:49> 'struct inet_connection_sock *' <IntegralToPointer>     |     `-CallExpr 0x1528086a8 <col:38, col:49> 'int'     |       |-ImplicitCastExpr 0x152808690 <col:38> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x152808620 <col:38> 'int ()' Function 0x152808568 'inet_csk' 'int ()'     |       `-ImplicitCastExpr 0x1528086d0 <col:47> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x152808640 <col:47> 'struct sock *' lvalue ParmVar 0x152128668 'sk' 'struct sock *'     |-DeclStmt 0x152808aa8 <line:4:2, col:34>     | |-RecordDecl 0x152808730 <col:2, col:9> col:9 struct tcp_sock     | `-VarDecl 0x152808898 <col:2, col:33> col:19 used tp 'struct tcp_sock *' cinit     |   `-ImplicitCastExpr 0x152808a78 <col:24, col:33> 'struct tcp_sock *' <IntegralToPointer>     |     `-CallExpr 0x152808a38 <col:24, col:33> 'int'     |       |-ImplicitCastExpr 0x152808a20 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1528089e0 <col:24> 'int ()' Function 0x152808928 'tcp_sk' 'int ()'     |       `-ImplicitCastExpr 0x152808a60 <col:31> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x152808a00 <col:31> 'struct sock *' lvalue ParmVar 0x152128668 'sk' 'struct sock *'     |-DeclStmt 0x152808b40 <line:6:2, col:19>     | `-VarDecl 0x152808ad8 <col:2, col:6> col:6 used early_retrans 'int'     |-BinaryOperator 0x152808f18 <line:12:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x152808bd0 <col:2> 'int' lvalue Var 0x152808ad8 'early_retrans' 'int'     | `-CXXDependentScopeMemberExpr 0x152808ed0 <col:18, col:37> '<dependent type>' contains-errors lvalue .sysctl_tcp_early_retrans     |   `-RecoveryExpr 0x152808ea8 <col:18, col:32> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x152808e68 <col:18, col:29> 'int'     |       |-ImplicitCastExpr 0x152808e50 <col:18> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x152808cd0 <col:18> 'int ()' Function 0x152808c18 'sock_net' 'int ()'     |       `-ImplicitCastExpr 0x152808e90 <col:27> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x152808cf0 <col:27> 'struct sock *' lvalue ParmVar 0x152128668 'sk' 'struct sock *'     `-IfStmt 0x152141ed0 <line:21:2, line:29:2> has_else       |-RecoveryExpr 0x152141c20 <line:21:6, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x152141be8 <col:6> 'struct tcp_sock *' lvalue Var 0x152808898 'tp' 'struct tcp_sock *'       |-CompoundStmt 0x152141eb0 <col:19, line:27:2>       `-CompoundStmt 0x152141ec0 <col:9, line:29:2> ","20888":"`-FunctionDecl 0x16000de68  line:1:1 breakcmd 'int (int, char **)'   |-ParmVarDecl 0x16000dcd8 <col:10, col:14> col:14 used argc 'int'   |-ParmVarDecl 0x16000dd88 <col:20, col:27> col:27 used argv 'char **'   `-CompoundStmt 0x160028a48 <line:2:1, line:14:1>     |-DeclStmt 0x16000e308 <line:3:2, col:40>     | `-VarDecl 0x16000df80 <col:2, col:39> col:6 used n 'int' cinit     |   `-ConditionalOperator 0x16000e2d8 <col:10, col:39> 'int'     |     |-BinaryOperator 0x16000e040 <col:10, col:17> 'int' '>'     |     | |-ImplicitCastExpr 0x16000e028 <col:10> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x16000dfe8 <col:10> 'int' lvalue ParmVar 0x16000dcd8 'argc' 'int'     |     | `-IntegerLiteral 0x16000e008 <col:17> 'int' 1     |     |-CallExpr 0x16000e278 <col:21, col:35> 'int'     |     | |-ImplicitCastExpr 0x16000e260 <col:21> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x16000e190 <col:21> 'int ()' Function 0x16000e0d8 'number' 'int ()'     |     | `-ImplicitCastExpr 0x16000e2a0 <col:28, col:34> 'char *' <LValueToRValue>     |     |   `-ArraySubscriptExpr 0x16000e208 <col:28, col:34> 'char *' lvalue     |     |     |-ImplicitCastExpr 0x16000e1f0 <col:28> 'char **' <LValueToRValue>     |     |     | `-DeclRefExpr 0x16000e1b0 <col:28> 'char **' lvalue ParmVar 0x16000dd88 'argv' 'char **'     |     |     `-IntegerLiteral 0x16000e1d0 <col:33> 'int' 1     |     `-IntegerLiteral 0x16000e2b8 <col:39> 'int' 1     |-IfStmt 0x1600285a8 <line:5:2, line:6:17>     | |-BinaryOperator 0x16000e378 <line:5:6, col:11> 'int' '<='     | | |-ImplicitCastExpr 0x16000e360 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x16000e320 <col:6> 'int' lvalue Var 0x16000df80 'n' 'int'     | | `-IntegerLiteral 0x16000e340 <col:11> 'int' 0     | `-CallExpr 0x160028568 <line:6:3, col:17> 'int'     |   |-ImplicitCastExpr 0x160028550 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1600284b8 <col:3> 'int ()' Function 0x160028400 'badnum' 'int ()'     |   `-ImplicitCastExpr 0x160028590 <col:10, col:16> 'char *' <LValueToRValue>     |     `-ArraySubscriptExpr 0x160028530 <col:10, col:16> 'char *' lvalue     |       |-ImplicitCastExpr 0x160028518 <col:10> 'char **' <LValueToRValue>     |       | `-DeclRefExpr 0x1600284d8 <col:10> 'char **' lvalue ParmVar 0x16000dd88 'argv' 'char **'     |       `-IntegerLiteral 0x1600284f8 <col:15> 'int' 1     |-IfStmt 0x1600286f8 <line:7:2, line:8:7>     | |-BinaryOperator 0x160028640 <line:7:6, col:10> 'int' contains-errors '>'     | | |-DeclRefExpr 0x1600285c8 <col:6> 'int' lvalue Var 0x16000df80 'n' 'int'     | | `-RecoveryExpr 0x160028620 <col:10> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1600286d8 <line:8:3, col:7> 'int' contains-errors '='     |   |-DeclRefExpr 0x160028660 <col:3> 'int' lvalue Var 0x16000df80 'n' 'int'     |   `-RecoveryExpr 0x1600286b8 <col:7> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1600289f8 <line:9:2, line:12:2>     | |-BinaryOperator 0x160028770 <line:9:6, col:10> 'int' '>'     | | |-ImplicitCastExpr 0x160028758 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x160028718 <col:6> 'int' lvalue Var 0x16000df80 'n' 'int'     | | `-IntegerLiteral 0x160028738 <col:10> 'int' 0     | `-CompoundStmt 0x1600289e8 <col:13, line:12:2>     `-ReturnStmt 0x160028a38 <line:13:2, col:9>       `-IntegerLiteral 0x160028a18 <col:9> 'int' 0 ","20800":"`-FunctionDecl 0x1521281c8  line:1:18 invalid bson_iterator_int 'int (const int *)'   |-ParmVarDecl 0x1521280f0 <col:37, col:58> col:58 invalid i 'const int *'   `-CompoundStmt 0x1528083b0 <col:62, line:12:1>     `-SwitchStmt 0x152128438 <line:2:5, line:11:5>       |-CallExpr 0x152128410 <line:2:14, col:36> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1521283d0 <col:14> 'int ()' Function 0x152128318 'bson_iterator_type' 'int ()'       | `-RecoveryExpr 0x1521283f0 <col:34> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x152808380 <col:40, line:11:5>         |-ReturnStmt 0x1521285c0 <line:4:9, col:41>         | `-CallExpr 0x152128598 <col:16, col:41> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x152128558 <col:16> 'int ()' Function 0x1521284a0 'bson_iterator_int_raw' 'int ()'         |   `-RecoveryExpr 0x152128578 <col:39> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x152128730 <line:6:9, col:42>         | `-CallExpr 0x152128708 <col:16, col:42> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1521286c8 <col:16> 'int ()' Function 0x152128610 'bson_iterator_long_raw' 'int ()'         |   `-RecoveryExpr 0x1521286e8 <col:40> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x152808320 <line:8:9, col:44>         | `-CallExpr 0x1528082f8 <col:16, col:44> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1528082b8 <col:16> 'int ()' Function 0x152808200 'bson_iterator_double_raw' 'int ()'         |   `-RecoveryExpr 0x1528082d8 <col:42> '<dependent type>' contains-errors lvalue         `-DefaultStmt 0x152808360 <line:9:5, line:10:16>           `-ReturnStmt 0x152808350 <col:9, col:16>             `-IntegerLiteral 0x152808330 <col:16> 'int' 0 ","20376":"`-FunctionDecl 0x13f128288  line:1:12 invalid ossl_new_session_cb 'int (int *, int *)' static   |-ParmVarDecl 0x13f128128 <col:32, col:37> col:37 invalid ssl 'int *'   |-ParmVarDecl 0x13f1281a8 <col:42, col:55> col:55 invalid ssl_sessionid 'int *'   `-CompoundStmt 0x13f145b70 <line:2:1, line:53:1>     |-DeclStmt 0x13f1283e0 <line:3:3, col:14>     | `-VarDecl 0x13f128358 <col:3, col:13> col:7 used res 'int' cinit     |   `-IntegerLiteral 0x13f1283c0 <col:13> 'int' 0     |-DeclStmt 0x13f1285e8 <line:4:3, col:27>     | |-RecordDecl 0x13f1283f8 <col:3, col:10> col:10 struct connectdata     | `-VarDecl 0x13f128568 <col:3, col:23> col:23 used conn 'struct connectdata *'     |-DeclStmt 0x13f1287e8 <line:5:3, col:25>     | |-RecordDecl 0x13f128600 <col:3, col:10> col:10 struct Curl_easy     | `-VarDecl 0x13f128768 <col:3, col:21> col:21 used data 'struct Curl_easy *'     |-DeclStmt 0x13f141880 <line:6:3, col:16>     | `-VarDecl 0x13f141818 <col:3, col:7> col:7 used sockindex 'int'     |-DeclStmt 0x13f141b38 <line:8:3, col:43>     | `-VarDecl 0x13f1418e8 <col:3, col:42> col:7 used data_idx 'int' cinit     |   `-CallExpr 0x13f141b18 <col:18, col:42> 'int'     |     `-ImplicitCastExpr 0x13f141b00 <col:18> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13f141ab0 <col:18> 'int ()' Function 0x13f1419f8 'ossl_get_ssl_data_index' 'int ()'     |-DeclStmt 0x13f141d08 <line:9:3, col:50>     | `-VarDecl 0x13f141b68 <col:3, col:49> col:7 used connectdata_idx 'int' cinit     |   `-CallExpr 0x13f141ce8 <col:25, col:49> 'int'     |     `-ImplicitCastExpr 0x13f141cd0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13f141cb0 <col:25> 'int ()' Function 0x13f141bf8 'ossl_get_ssl_conn_index' 'int ()'     |-DeclStmt 0x13f141ed8 <line:10:3, col:53>     | `-VarDecl 0x13f141d38 <col:3, col:52> col:7 used sockindex_idx 'int' cinit     |   `-CallExpr 0x13f141eb8 <col:23, col:52> 'int'     |     `-ImplicitCastExpr 0x13f141ea0 <col:23> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13f141e80 <col:23> 'int ()' Function 0x13f141dc8 'ossl_get_ssl_sockindex_index' 'int ()'     |-IfStmt 0x13f1420c8 <line:12:3, line:13:12>     | |-BinaryOperator 0x13f142078 <line:12:6, col:61> 'int' '||'     | | |-BinaryOperator 0x13f141fe0 <col:6, col:40> 'int' '||'     | | | |-BinaryOperator 0x13f141f48 <col:6, col:17> 'int' '<'     | | | | |-ImplicitCastExpr 0x13f141f30 <col:6> 'int' <LValueToRValue>     | | | | | `-DeclRefExpr 0x13f141ef0 <col:6> 'int' lvalue Var 0x13f1418e8 'data_idx' 'int'     | | | | `-IntegerLiteral 0x13f141f10 <col:17> 'int' 0     | | | `-BinaryOperator 0x13f141fc0 <col:22, col:40> 'int' '<'     | | |   |-ImplicitCastExpr 0x13f141fa8 <col:22> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x13f141f68 <col:22> 'int' lvalue Var 0x13f141b68 'connectdata_idx' 'int'     | | |   `-IntegerLiteral 0x13f141f88 <col:40> 'int' 0     | | `-BinaryOperator 0x13f142058 <col:45, col:61> 'int' '<'     | |   |-ImplicitCastExpr 0x13f142040 <col:45> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x13f142000 <col:45> 'int' lvalue Var 0x13f141d38 'sockindex_idx' 'int'     | |   `-IntegerLiteral 0x13f142020 <col:61> 'int' 0     | `-ReturnStmt 0x13f1420b8 <line:13:5, col:12>     |   `-IntegerLiteral 0x13f142098 <col:12> 'int' 0     |-BinaryOperator 0x13f142330 <line:15:3, col:68> 'struct connectdata *' contains-errors '='     | |-DeclRefExpr 0x13f1420e8 <col:3> 'struct connectdata *' lvalue Var 0x13f128568 'conn' 'struct connectdata *'     | `-CStyleCastExpr 0x13f142308 <col:10, col:68> 'struct connectdata *' contains-errors <Dependent>     |   `-CallExpr 0x13f142248 <col:32, col:68> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13f1421e8 <col:32> 'int ()' Function 0x13f142130 'SSL_get_ex_data' 'int ()'     |     |-RecoveryExpr 0x13f142208 <col:48> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f142228 <col:53> 'int' lvalue Var 0x13f141b68 'connectdata_idx' 'int'     |-IfStmt 0x13f1423d0 <line:16:3, line:17:12>     | |-UnaryOperator 0x13f142388 <line:16:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f142370 <col:7> 'struct connectdata *' <LValueToRValue>     | |   `-DeclRefExpr 0x13f142350 <col:7> 'struct connectdata *' lvalue Var 0x13f128568 'conn' 'struct connectdata *'     | `-ReturnStmt 0x13f1423c0 <line:17:5, col:12>     |   `-IntegerLiteral 0x13f1423a0 <col:12> 'int' 0     |-BinaryOperator 0x13f142550 <line:19:3, col:60> 'struct Curl_easy *' contains-errors '='     | |-DeclRefExpr 0x13f1423f0 <col:3> 'struct Curl_easy *' lvalue Var 0x13f128768 'data' 'struct Curl_easy *'     | `-CStyleCastExpr 0x13f142528 <col:10, col:60> 'struct Curl_easy *' contains-errors <Dependent>     |   `-CallExpr 0x13f142470 <col:31, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13f142410 <col:31> 'int ()' Function 0x13f142130 'SSL_get_ex_data' 'int ()'     |     |-RecoveryExpr 0x13f142430 <col:47> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f142450 <col:52> 'int' lvalue Var 0x13f1418e8 'data_idx' 'int'     |-BinaryOperator 0x13f144998 <line:23:3, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x13f1425a8 <col:3> 'int' lvalue Var 0x13f141818 'sockindex' 'int'     | `-CStyleCastExpr 0x13f144970 <col:15, col:47> 'int' contains-errors <Dependent>     |   `-ParenExpr 0x13f144950 <col:20, col:47> '<dependent type>' contains-errors     |     `-BinaryOperator 0x13f144910 <col:21, col:43> '<dependent type>' contains-errors '-'     |       |-DeclRefExpr 0x13f1448f0 <col:21> 'int' lvalue Var 0x13f141d38 'sockindex_idx' 'int'     |       `-RecoveryExpr 0x13f144870 <col:37, col:43> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13f1425e0 <col:37> 'struct connectdata *' lvalue Var 0x13f128568 'conn' 'struct connectdata *'     |-IfStmt 0x13f145b08 <line:25:3, line:50:3>     | |-CallExpr 0x13f144ba8 <line:25:6, col:38> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13f144a98 <col:6> 'int ()' Function 0x13f1449e0 'SSL_SET_OPTION' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x13f144b60 <col:21, col:29> '<dependent type>' contains-errors lvalue .sessionid     | |   `-RecoveryExpr 0x13f144b40 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f145ad0 <col:41, line:50:3>     |   |-DeclStmt 0x13f144c88 <line:27:5, col:35>     |   | `-VarDecl 0x13f144be8 <col:5, col:31> col:11 used old_ssl_sessionid 'void *' cinit     |   |   `-RecoveryExpr 0x13f144c68 <col:31> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x13f144dd8 <line:29:5, col:33> 'int'     |   | |-ImplicitCastExpr 0x13f144dc0 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13f144d80 <col:5> 'int ()' Function 0x13f144cc8 'Curl_ssl_sessionid_lock' 'int ()'     |   | `-ImplicitCastExpr 0x13f144e00 <col:29> 'struct Curl_easy *' <LValueToRValue>     |   |   `-DeclRefExpr 0x13f144da0 <col:29> 'struct Curl_easy *' lvalue Var 0x13f128768 'data' 'struct Curl_easy *'     |   |-IfStmt 0x13f145478 <line:32:5, line:38:5>     |   | |-RecoveryExpr 0x13f144fe8 <line:32:8> '_Bool' contains-errors     |   | `-CompoundStmt 0x13f145460 <col:17, line:38:5>     |   |   `-IfStmt 0x13f145440 <line:33:7, line:37:7>     |   |     |-BinaryOperator 0x13f145048 <line:33:10, col:31> 'int' contains-errors '!='     |   |     | |-DeclRefExpr 0x13f145008 <col:10> 'void *' contains-errors lvalue Var 0x13f144be8 'old_ssl_sessionid' 'void *'     |   |     | `-RecoveryExpr 0x13f145028 <col:31> '<dependent type>' contains-errors lvalue     |   |     `-CompoundStmt 0x13f145420 <col:46, line:37:7>     |   |       |-CallExpr 0x13f145208 <line:34:9, col:26> 'int'     |   |       | |-ImplicitCastExpr 0x13f1451f0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |       | | `-DeclRefExpr 0x13f145148 <col:9> 'int ()' Function 0x13f145090 'infof' 'int ()'     |   |       | |-ImplicitCastExpr 0x13f145238 <col:15> 'struct Curl_easy *' <LValueToRValue>     |   |       | | `-DeclRefExpr 0x13f145168 <col:15> 'struct Curl_easy *' lvalue Var 0x13f128768 'data' 'struct Curl_easy *'     |   |       | `-ImplicitCastExpr 0x13f145250 <col:21> 'char *' <ArrayToPointerDecay>     |   |       |   `-StringLiteral 0x13f1451d0 <col:21> 'char[4]' lvalue \"STR\"     |   |       `-CallExpr 0x13f1453c0 <line:35:9, col:54> 'int' contains-errors     |   |         |-ImplicitCastExpr 0x13f1453a8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |         | `-DeclRefExpr 0x13f145348 <col:9> 'int ()' Function 0x13f145290 'Curl_ssl_delsessionid' 'int ()'     |   |         |-ImplicitCastExpr 0x13f1453f0 <col:31> 'struct Curl_easy *' <LValueToRValue>     |   |         | `-DeclRefExpr 0x13f145368 <col:31> 'struct Curl_easy *' lvalue Var 0x13f128768 'data' 'struct Curl_easy *'     |   |         `-ImplicitCastExpr 0x13f145408 <col:37> 'void *' contains-errors <LValueToRValue>     |   |           `-DeclRefExpr 0x13f145388 <col:37> 'void *' contains-errors lvalue Var 0x13f144be8 'old_ssl_sessionid' 'void *'     |   |-IfStmt 0x13f145938 <line:40:5, line:48:5>     |   | |-RecoveryExpr 0x13f145498 <line:40:8, col:9> '_Bool' contains-errors     |   | `-CompoundStmt 0x13f145920 <col:18, line:48:5>     |   |   `-IfStmt 0x13f1458f0 <line:41:7, line:47:26> has_else     |   |     |-UnaryOperator 0x13f1456a8 <line:41:10, line:42:52> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |     | `-CallExpr 0x13f145660 <line:41:11, line:42:52> '<dependent type>' contains-errors     |   |     |   |-DeclRefExpr 0x13f145598 <line:41:11> 'int ()' Function 0x13f1454e0 'Curl_ssl_addsessionid' 'int ()'     |   |     |   |-DeclRefExpr 0x13f1455b8 <col:33> 'struct Curl_easy *' lvalue Var 0x13f128768 'data' 'struct Curl_easy *'     |   |     |   |-DeclRefExpr 0x13f1455d8 <col:39> 'struct connectdata *' lvalue Var 0x13f128568 'conn' 'struct connectdata *'     |   |     |   |-RecoveryExpr 0x13f145600 <col:45> '<dependent type>' contains-errors lvalue     |   |     |   |-IntegerLiteral 0x13f145620 <line:42:39> 'int' 0     |   |     |   `-DeclRefExpr 0x13f145640 <col:43> 'int' lvalue Var 0x13f141818 'sockindex' 'int'     |   |     |-CompoundStmt 0x13f145720 <col:55, line:45:7>     |   |     | `-BinaryOperator 0x13f145700 <line:44:9, col:15> 'int' '='     |   |     |   |-DeclRefExpr 0x13f1456c0 <col:9> 'int' lvalue Var 0x13f128358 'res' 'int'     |   |     |   `-IntegerLiteral 0x13f1456e0 <col:15> 'int' 1     |   |     `-CallExpr 0x13f145890 <line:47:9, col:26> 'int'     |   |       |-ImplicitCastExpr 0x13f145878 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x13f145818 <col:9> 'int ()' Function 0x13f145760 'failf' 'int ()'     |   |       |-ImplicitCastExpr 0x13f1458c0 <col:15> 'struct Curl_easy *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x13f145838 <col:15> 'struct Curl_easy *' lvalue Var 0x13f128768 'data' 'struct Curl_easy *'     |   |       `-ImplicitCastExpr 0x13f1458d8 <col:21> 'char *' <ArrayToPointerDecay>     |   |         `-StringLiteral 0x13f145858 <col:21> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x13f145a90 <line:49:5, col:35> 'int'     |     |-ImplicitCastExpr 0x13f145a78 <col:5> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13f145a38 <col:5> 'int ()' Function 0x13f145980 'Curl_ssl_sessionid_unlock' 'int ()'     |     `-ImplicitCastExpr 0x13f145ab8 <col:31> 'struct Curl_easy *' <LValueToRValue>     |       `-DeclRefExpr 0x13f145a58 <col:31> 'struct Curl_easy *' lvalue Var 0x13f128768 'data' 'struct Curl_easy *'     `-ReturnStmt 0x13f145b60 <line:52:3, col:10>       `-ImplicitCastExpr 0x13f145b48 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x13f145b28 <col:10> 'int' lvalue Var 0x13f128358 'res' 'int' ","20667":"`-FunctionDecl 0x14f01f238  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14f01f338 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14f01f3a0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14f01f408 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14f01f2e0 <<invalid sloc>> Implicit 882 ","20765":"`-FunctionDecl 0x14712e038  line:1:22 invalid __peek_user 'unsigned long (struct task_struct *, int)' static   |-ParmVarDecl 0x147114e48 <col:34, col:54> col:54 used child 'struct task_struct *'   |-ParmVarDecl 0x147114ee0 <col:61, col:68> col:68 referenced invalid addr 'int'   `-CompoundStmt 0x14712fb18 <line:2:1, line:45:1>     |-DeclStmt 0x14712e310 <line:3:2, col:27>     | |-RecordDecl 0x14712e0f0 <col:2, col:9> col:9 struct user     | `-VarDecl 0x14712e258 <col:2, col:23> col:15 used dummy 'struct user *' cinit     |   `-RecoveryExpr 0x14712e2d8 <col:23> '<dependent type>' contains-errors lvalue     |-ImplicitCastExpr 0x14712e370 <line:4:2> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x14712e348 <col:2> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14712e328 <col:2> 'int' lvalue ParmVar 0x147114ee0 'addr' 'int'     `-IfStmt 0x14712fae8 <line:6:2, line:42:3> has_else       |-RecoveryExpr 0x14712e4a0 <line:6:6, col:35> '_Bool' contains-errors       |-CompoundStmt 0x14712e970 <col:41, line:13:2>       `-IfStmt 0x14712fab8 <col:9, line:42:3> has_else         |-RecoveryExpr 0x14712ea80 <line:13:13, col:42> '_Bool' contains-errors         |-CompoundStmt 0x14712ec10 <col:53, line:24:2>         `-IfStmt 0x14712fa88 <col:9, line:42:3> has_else           |-RecoveryExpr 0x14712ece8 <line:24:13, col:43> '_Bool' contains-errors           |-CompoundStmt 0x14712ed08 <col:54, line:28:2>           `-IfStmt 0x14712fa58 <col:9, line:42:3> has_else             |-RecoveryExpr 0x14712ee38 <line:28:13, col:54> '_Bool' contains-errors             |-CompoundStmt 0x14712f730 <col:57, line:36:2>             `-IfStmt 0x14712fa28 <col:9, line:42:3> has_else               |-RecoveryExpr 0x14712f860 <line:36:13, col:55> '_Bool' contains-errors               |-CompoundStmt 0x14712f9f0 <col:58, line:41:2>               `-NullStmt 0x14712fa20 <line:42:3> ","20823":"`-FunctionDecl 0x15b12c700  col:14 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x15b12c800 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x15b12c7a8 <<invalid sloc>> Implicit 902 ","20874":"`-FunctionDecl 0x143008b90  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x143008c90 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x143008cf8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x143008d60 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x143008c38 <<invalid sloc>> Implicit 882 ","20871":"`-FunctionDecl 0x126813e38  line:1:5 send_sig_mceerr 'int (int, int)'   |-ParmVarDecl 0x126813cd8 <col:21, col:25> col:25 used code 'int'   |-ParmVarDecl 0x126813d50 <col:31, col:36> col:36 __user 'int'   `-CompoundStmt 0x12682d1b0 <line:2:1, line:13:1>     |-DeclStmt 0x12682c728 <line:3:2, col:28>     | |-RecordDecl 0x126813f38 <col:2, col:9> col:9 struct kernel_siginfo     | `-VarDecl 0x126814038 <col:2, col:24> col:24 referenced invalid info 'struct kernel_siginfo'     |-CallExpr 0x12682ca78 <line:6:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12682ca20 <col:2> 'int ()' Function 0x12682c968 'clear_siginfo' 'int ()'     | `-UnaryOperator 0x12682ca60 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12682ca40 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12682cb88 <line:7:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12682cae8 <col:2, col:7> '<dependent type>' contains-errors lvalue .si_signo     | | `-RecoveryExpr 0x12682cac0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12682caa0 <col:2> 'struct kernel_siginfo' lvalue Var 0x126814038 'info' 'struct kernel_siginfo'     | `-RecoveryExpr 0x12682cb68 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12682cc58 <line:8:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12682cbf0 <col:2, col:7> '<dependent type>' contains-errors lvalue .si_errno     | | `-RecoveryExpr 0x12682cbc8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12682cba8 <col:2> 'struct kernel_siginfo' lvalue Var 0x126814038 'info' 'struct kernel_siginfo'     | `-IntegerLiteral 0x12682cc38 <col:18> 'int' 0     |-BinaryOperator 0x12682cd28 <line:9:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12682ccc0 <col:2, col:7> '<dependent type>' contains-errors lvalue .si_code     | | `-RecoveryExpr 0x12682cc98 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12682cc78 <col:2> 'struct kernel_siginfo' lvalue Var 0x126814038 'info' 'struct kernel_siginfo'     | `-DeclRefExpr 0x12682cd08 <col:17> 'int' lvalue ParmVar 0x126813cd8 'code' 'int'     |-BinaryOperator 0x12682ce30 <line:10:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12682cd90 <col:2, col:7> '<dependent type>' contains-errors lvalue .si_addr     | | `-RecoveryExpr 0x12682cd68 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12682cd48 <col:2> 'struct kernel_siginfo' lvalue Var 0x126814038 'info' 'struct kernel_siginfo'     | `-RecoveryExpr 0x12682ce10 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12682cf38 <line:11:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12682ce98 <col:2, col:7> '<dependent type>' contains-errors lvalue .si_addr_lsb     | | `-RecoveryExpr 0x12682ce70 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12682ce50 <col:2> 'struct kernel_siginfo' lvalue Var 0x126814038 'info' 'struct kernel_siginfo'     | `-RecoveryExpr 0x12682cf18 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12682d1a0 <line:12:2, col:46>       `-CallExpr 0x12682d168 <col:9, col:46> '<dependent type>' contains-errors         |-DeclRefExpr 0x12682d038 <col:9> 'int ()' Function 0x12682cf80 'send_sig_info' 'int ()'         |-CXXDependentScopeMemberExpr 0x12682d078 <col:23, col:28> '<dependent type>' contains-errors lvalue .si_signo         | `-RecoveryExpr 0x12682d058 <col:23> '<dependent type>' contains-errors lvalue         |-UnaryOperator 0x12682d0e0 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x12682d0c0 <col:39> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12682d148 <col:45> '<dependent type>' contains-errors lvalue ","20833":"`-FunctionDecl 0x149128198  line:1:1 check_restricted 'int (void)'   `-CompoundStmt 0x149128708 <line:2:1, line:9:1>     |-IfStmt 0x1491286a0 <line:3:5, line:7:5>     | |-RecoveryExpr 0x1491282b8 <line:3:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x149128680 <line:4:5, line:7:5>     |   |-CallExpr 0x149128610 <line:5:2, col:15> 'int'     |   | |-ImplicitCastExpr 0x1491285f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1491283f0 <col:2> 'int ()' Function 0x149128338 'emsg' 'int ()'     |   | `-CallExpr 0x1491285b8 <col:7, col:14> 'int'     |   |   |-ImplicitCastExpr 0x1491285a0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1491284f0 <col:7> 'int ()' Function 0x149128438 '_' 'int ()'     |   |   `-ImplicitCastExpr 0x1491285e0 <col:9> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x149128550 <col:9> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x149128670 <line:6:2, col:9>     |     `-RecoveryExpr 0x149128650 <col:9> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1491286f8 <line:8:5, col:12>       `-RecoveryExpr 0x1491286d8 <col:12> '<dependent type>' contains-errors lvalue ","20638":"`-FunctionDecl 0x107826e00  col:5 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x107826f00 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x107826f68 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x107826fd0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x107826ea8 <<invalid sloc>> Implicit 900 ","21040":"`-FunctionDecl 0x14b1281a8  line:1:8 PHP_GINIT_FUNCTION 'int (int)' static   |-ParmVarDecl 0x14b1280d8 <col:27> col:27 libxml 'int'   `-CompoundStmt 0x14b128300 <line:2:1, line:6:1> ","20661":"`-FunctionDecl 0x1409281c8  line:1:19 invalid mailbox_cached_header 'int (const char *)'   |-ParmVarDecl 0x1409280f0 <col:41, col:53> col:53 used s 'const char *'   `-CompoundStmt 0x1409284a8 <line:2:1, line:4:1>     `-ReturnStmt 0x140928498 <line:3:5, col:30>       `-CallExpr 0x140928458 <col:12, col:30> 'int'         |-ImplicitCastExpr 0x140928440 <col:12> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1409283d0 <col:12> 'int ()' Function 0x140928318 'is_cached_header' 'int ()'         `-ImplicitCastExpr 0x140928480 <col:29> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x1409283f0 <col:29> 'const char *' lvalue ParmVar 0x1409280f0 's' 'const char *' ","20216":"`-FunctionDecl 0x11f826600  line:1:20 sub_frag_mem_limit 'void (struct inet_frag_queue *, int)' static inline   |-ParmVarDecl 0x11f80e248 <col:39, col:63> col:63 used q 'struct inet_frag_queue *'   |-ParmVarDecl 0x11f80e2c8 <col:66, col:70> col:70 used i 'int'   `-CompoundStmt 0x11f826a38 <line:2:1, line:4:1>     `-CallExpr 0x11f826a00 <line:3:2, col:66> '<dependent type>' contains-errors       |-DeclRefExpr 0x11f826830 <col:2> 'int ()' Function 0x11f826778 '__percpu_counter_add' 'int ()'       |-UnaryOperator 0x11f8268f8 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-CXXDependentScopeMemberExpr 0x11f8268b0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->mem       |   `-RecoveryExpr 0x11f826888 <col:24, col:27> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x11f826850 <col:24> 'struct inet_frag_queue *' lvalue ParmVar 0x11f80e248 'q' 'struct inet_frag_queue *'       |-UnaryOperator 0x11f8269c8 <col:37, col:38> 'int' prefix '-'       | `-ImplicitCastExpr 0x11f8269b0 <col:38> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x11f826910 <col:38> 'int' lvalue ParmVar 0x11f80e2c8 'i' 'int'       `-DeclRefExpr 0x11f8269e0 <col:41> 'int ()' Function 0x11f826778 '__percpu_counter_add' 'int ()' ","20751":"`-FunctionDecl 0x141928248  line:1:12 referenced invalid set_invariant_sys_reg 'int (int, int)' static   |-ParmVarDecl 0x1419280f0 <col:34, col:38> col:38 invalid id 'int'   |-ParmVarDecl 0x141928168 <col:42, col:47> col:47 __user 'int'   `-CompoundStmt 0x141943250 <line:2:1, line:23:1>     |-DeclStmt 0x1419418a8 <line:3:2, col:30>     | |-RecordDecl 0x141928300 <col:2, col:9> col:9 struct sys_reg_params     | `-VarDecl 0x1419283f8 <col:2, col:24> col:24 invalid params 'struct sys_reg_params'     |-DeclStmt 0x141941aa8 <line:4:2, col:30>     | |-RecordDecl 0x1419418c0 <col:8, col:15> col:15 struct sys_reg_desc     | `-VarDecl 0x141941a28 <col:2, col:29> col:29 used r 'const struct sys_reg_desc *'     |-DeclStmt 0x141941b40 <line:5:2, col:9>     | `-VarDecl 0x141941ad8 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x141941e18 <line:8:2, line:9:11>     | |-UnaryOperator 0x141941d58 <line:8:6, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x141941d28 <col:7, col:34> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x141941cb0 <col:7> 'int ()' Function 0x141941bf8 'index_to_params' 'int ()'     | |   |-RecoveryExpr 0x141941cd0 <col:23> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x141941d10 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x141941cf0 <col:28> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x141941e08 <line:9:3, col:11>     |   `-UnaryOperator 0x141941df0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x141941dd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x141941db8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x141942200 <line:10:2, col:74> 'const struct sys_reg_desc *' contains-errors '='     | |-DeclRefExpr 0x141941e38 <col:2> 'const struct sys_reg_desc *' lvalue Var 0x141941a28 'r' 'const struct sys_reg_desc *'     | `-CallExpr 0x1419421c8 <col:6, col:74> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x141941f38 <col:6> 'int ()' Function 0x141941e80 'find_reg' 'int ()'     |   |-UnaryOperator 0x141941f78 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x141941f58 <col:16> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x141942160 <col:24> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1419421a0 <col:44, col:73> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x141942088 <col:44> 'int ()' Function 0x141941fd0 'ARRAY_SIZE' 'int ()'     |     `-RecoveryExpr 0x141942180 <col:55> '<dependent type>' contains-errors lvalue     |-IfStmt 0x141942318 <line:11:2, line:12:11>     | |-UnaryOperator 0x141942258 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x141942240 <col:7> 'const struct sys_reg_desc *' <LValueToRValue>     | |   `-DeclRefExpr 0x141942220 <col:7> 'const struct sys_reg_desc *' lvalue Var 0x141941a28 'r' 'const struct sys_reg_desc *'     | `-ReturnStmt 0x141942308 <line:12:3, col:11>     |   `-UnaryOperator 0x1419422f0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1419422d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1419422b8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1419425a8 <line:14:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x141942338 <col:2> 'int' lvalue Var 0x141941ad8 'err' 'int'     | `-CallExpr 0x141942570 <col:8, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x141942438 <col:8> 'int ()' Function 0x141942380 'reg_from_user' 'int ()'     |   |-UnaryOperator 0x141942538 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x141942518 <col:23> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x141942550 <col:28> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1419424a0 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x141942648 <line:15:2, line:16:10>     | |-ImplicitCastExpr 0x1419425e8 <line:15:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1419425c8 <col:6> 'int' lvalue Var 0x141941ad8 'err' 'int'     | `-ReturnStmt 0x141942638 <line:16:3, col:10>     |   `-ImplicitCastExpr 0x141942620 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x141942600 <col:10> 'int' lvalue Var 0x141941ad8 'err' 'int'     |-IfStmt 0x141943200 <line:19:2, line:20:11>     | |-BinaryOperator 0x141942720 <line:19:6, col:16> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1419426a0 <col:6, col:9> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x141942668 <col:6> 'const struct sys_reg_desc *' lvalue Var 0x141941a28 'r' 'const struct sys_reg_desc *'     | | `-RecoveryExpr 0x141942700 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1419427d8 <line:20:3, col:11>     |   `-UnaryOperator 0x1419427c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1419427a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x141942788 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x141943240 <line:22:2, col:9>       `-IntegerLiteral 0x141943220 <col:9> 'int' 0 ","21173":"`-FunctionDecl 0x1519282e8  line:1:1 invalid one_mpi_from_pkey 'int (int, const char *, int)'   |-ParmVarDecl 0x1519280f0 <col:20, col:32> col:32 invalid pkey 'int'   |-ParmVarDecl 0x151928170 <col:38, col:50> col:50 used name 'const char *'   |-ParmVarDecl 0x1519281f0 <col:56, col:63> col:63 invalid namelen 'int'   `-CompoundStmt 0x151941d60 <line:2:1, line:26:1>     |-IfStmt 0x1519286d8 <line:7:3, line:8:12>     | |-UnaryOperator 0x151928678 <line:7:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x151928660 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x151928640 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1519286c8 <line:8:5, col:12>     |   `-RecoveryExpr 0x1519286a8 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1519419a0 <line:10:3, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151941920 <col:3> 'int ()' Function 0x151941868 'gcry_sexp_release' 'int ()'     | `-RecoveryExpr 0x151941980 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151941ac0 <line:12:3, line:13:12>     | |-UnaryOperator 0x151941a60 <line:12:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x151941a48 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x151941a28 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x151941ab0 <line:13:5, col:12>     |   `-RecoveryExpr 0x151941a90 <col:12> '<dependent type>' contains-errors lvalue     `-IfStmt 0x151941be0 <line:16:3, line:20:5>       |-RecoveryExpr 0x151941b90 <line:16:7, col:8> '_Bool' contains-errors       `-CompoundStmt 0x151941bd0 <line:17:5, line:20:5> ","20606":"`-FunctionDecl 0x147928310  line:1:6 invalid bn_mul_comba4 'void (int *, int *, int *)'   |-ParmVarDecl 0x147928128 <col:20, col:30> col:30 referenced invalid r 'int *'   |-ParmVarDecl 0x1479281a8 <col:33, col:43> col:43 invalid a 'int *'   |-ParmVarDecl 0x147928228 <col:46, col:56> col:56 invalid b 'int *'   `-CompoundStmt 0x150009630 <line:2:2, line:7:2>     |-BinaryOperator 0x147928798 <line:3:2, col:40> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x147928450 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x147928438 <col:2> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x1479283f0 <col:2> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1479283d0 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'     | | `-IntegerLiteral 0x147928418 <col:4> 'int' 4     | `-CallExpr 0x147928758 <col:7, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1479285d0 <col:7> 'int ()' Function 0x147928518 'bn_mul_words' 'int ()'     |   |-UnaryOperator 0x147928688 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-ParenExpr 0x147928668 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   |   `-ArraySubscriptExpr 0x147928648 <col:26, col:29> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x147928630 <col:26> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x1479285f0 <col:26> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x147928610 <col:28> 'int' 0     |   |-RecoveryExpr 0x1479286a0 <col:32> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x1479286c0 <col:34> 'int' 4     |   `-ArraySubscriptExpr 0x147928738 <col:36, col:39> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x147928720 <col:36> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x1479286e0 <col:36> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x147928700 <col:38> 'int' 0     |-BinaryOperator 0x150009100 <line:4:2, col:40> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x150008e38 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x150008e20 <col:2> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x1479287d8 <col:2> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1479287b8 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'     | | `-IntegerLiteral 0x150008e00 <col:4> 'int' 5     | `-CallExpr 0x1500090c0 <col:7, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150008f38 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'     |   |-UnaryOperator 0x150008ff0 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-ParenExpr 0x150008fd0 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   |   `-ArraySubscriptExpr 0x150008fb0 <col:26, col:29> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x150008f98 <col:26> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x150008f58 <col:26> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x150008f78 <col:28> 'int' 1     |   |-RecoveryExpr 0x150009008 <col:32> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x150009028 <col:34> 'int' 4     |   `-ArraySubscriptExpr 0x1500090a0 <col:36, col:39> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x150009088 <col:36> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x150009048 <col:36> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x150009068 <col:38> 'int' 1     |-BinaryOperator 0x150009388 <line:5:2, col:40> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x1500091a0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x150009188 <col:2> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x150009140 <col:2> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x150009120 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'     | | `-IntegerLiteral 0x150009168 <col:4> 'int' 6     | `-CallExpr 0x150009348 <col:7, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1500091c0 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'     |   |-UnaryOperator 0x150009278 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-ParenExpr 0x150009258 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   |   `-ArraySubscriptExpr 0x150009238 <col:26, col:29> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x150009220 <col:26> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x1500091e0 <col:26> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x150009200 <col:28> 'int' 2     |   |-RecoveryExpr 0x150009290 <col:32> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x1500092b0 <col:34> 'int' 4     |   `-ArraySubscriptExpr 0x150009328 <col:36, col:39> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x150009310 <col:36> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x1500092d0 <col:36> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1500092f0 <col:38> 'int' 2     `-BinaryOperator 0x150009610 <line:6:2, col:40> '<dependent type>' contains-errors '='       |-ArraySubscriptExpr 0x150009428 <col:2, col:5> '<dependent type>' contains-errors lvalue       | |-ImplicitCastExpr 0x150009410 <col:2> '<dependent type>' contains-errors <LValueToRValue>       | | `-RecoveryExpr 0x1500093c8 <col:2> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x1500093a8 <col:2> 'int *' lvalue ParmVar 0x147928128 'r' 'int *'       | `-IntegerLiteral 0x1500093f0 <col:4> 'int' 7       `-CallExpr 0x1500095d0 <col:7, col:40> '<dependent type>' contains-errors         |-DeclRefExpr 0x150009448 <col:7> 'int ()' Function 0x150008e80 'bn_mul_add_words' 'int ()'         |-UnaryOperator 0x150009500 <col:24, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-ParenExpr 0x1500094e0 <col:25, col:30> '<dependent type>' contains-errors lvalue         |   `-ArraySubscriptExpr 0x1500094c0 <col:26, col:29> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x1500094a8 <col:26> '<dependent type>' contains-errors <LValueToRValue>         |     | `-RecoveryExpr 0x150009468 <col:26> '<dependent type>' contains-errors lvalue         |     `-IntegerLiteral 0x150009488 <col:28> 'int' 3         |-RecoveryExpr 0x150009518 <col:32> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x150009538 <col:34> 'int' 4         `-ArraySubscriptExpr 0x1500095b0 <col:36, col:39> '<dependent type>' contains-errors lvalue           |-ImplicitCastExpr 0x150009598 <col:36> '<dependent type>' contains-errors <LValueToRValue>           | `-RecoveryExpr 0x150009558 <col:36> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x150009578 <col:38> 'int' 3 ","20643":"`-FunctionDecl 0x1529281c8  line:1:1 invalid rb_str_downcase 'int (int)'   |-ParmVarDecl 0x1529280f0 <col:17, col:23> col:23 referenced invalid str 'int'   `-CompoundStmt 0x152928620 <line:2:1, line:6:1>     |-BinaryOperator 0x152928488 <line:3:5, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x152928298 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x152928278 <col:5> 'int' lvalue ParmVar 0x1529280f0 'str' 'int'     | `-CallExpr 0x152928460 <col:11, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152928420 <col:11> 'int ()' Function 0x152928368 'rb_str_dup' 'int ()'     |   `-RecoveryExpr 0x152928440 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1529285c8 <line:4:5, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152928588 <col:5> 'int ()' Function 0x1529284d0 'rb_str_downcase_bang' 'int ()'     | `-RecoveryExpr 0x1529285a8 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x152928610 <line:5:5, col:12>       `-RecoveryExpr 0x1529285f0 <col:12> '<dependent type>' contains-errors lvalue ","21129":"`-FunctionDecl 0x1478149c8  line:1:1 referenced invalid SProcRecordRegisterClients 'int (int)'   |-ParmVarDecl 0x1478148f0 <col:28, col:38> col:38 invalid client 'int'   `-CompoundStmt 0x1470f7cc8 <line:2:1, line:11:1>     |-CallExpr 0x147814c70 <line:3:5, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147814bd0 <col:5> 'int ()' Function 0x147814b18 'REQUEST' 'int ()'     | `-RecoveryExpr 0x147814c50 <col:13> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x147814d18 <line:4:5, col:15>     | `-VarDecl 0x147814cb0 <col:5, col:9> col:9 used status 'int'     |-CallExpr 0x147814f50 <line:6:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147814e10 <col:5> 'int ()' Function 0x147814d58 'swaps' 'int ()'     | `-UnaryOperator 0x147814f38 <col:11, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x147814ef0 <col:12, col:19> '<dependent type>' contains-errors lvalue ->length     |     `-RecoveryExpr 0x147814ed0 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1470f7958 <line:7:5, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1470f78b8 <col:5> 'int ()' Function 0x1470f7800 'REQUEST_AT_LEAST_SIZE' 'int ()'     | `-RecoveryExpr 0x1470f7938 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1470f7b50 <line:8:5, line:9:16>     | |-RecoveryExpr 0x1470f7ae8 <line:8:9, col:58> '_Bool' contains-errors     | `-ReturnStmt 0x1470f7b40 <line:9:9, col:16>     |   `-ImplicitCastExpr 0x1470f7b28 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1470f7b08 <col:16> 'int' lvalue Var 0x147814cb0 'status' 'int'     `-ReturnStmt 0x1470f7cb8 <line:10:5, col:44>       `-CallExpr 0x1470f7c90 <col:12, col:44> '<dependent type>' contains-errors         |-DeclRefExpr 0x1470f7c50 <col:12> 'int ()' Function 0x1470f7b98 'ProcRecordRegisterClients' 'int ()'         `-RecoveryExpr 0x1470f7c70 <col:38> '<dependent type>' contains-errors lvalue ","20632":"`-FunctionDecl 0x15480e008  line:1:12 invalid allmbox_p 'int (void *, const char *, int, const char *, int)' static   |-ParmVarDecl 0x15480dcd8 <col:22, col:28> col:28 used rock 'void *'   |-ParmVarDecl 0x15480dd58 <line:2:22, col:34> col:34 used key 'const char *'   |-ParmVarDecl 0x15480ddf0 <line:3:22, col:29> col:29 invalid keylen 'int'   |-ParmVarDecl 0x15480de70 <line:4:22, col:34> col:34 used data 'const char *'   |-ParmVarDecl 0x15480def0 <line:5:22, col:29> col:29 invalid datalen 'int'   `-CompoundStmt 0x154829158 <line:6:1, line:23:1>     |-DeclStmt 0x15480e3b0 <line:7:5, col:58>     | |-RecordDecl 0x15480e0d8 <col:5, col:12> col:12 struct allmb_rock     | `-VarDecl 0x15480e248 <col:5, col:54> col:24 used mbrock 'struct allmb_rock *' cinit     |   `-CStyleCastExpr 0x15480e370 <col:33, col:54> 'struct allmb_rock *' <BitCast>     |     `-ImplicitCastExpr 0x15480e358 <col:54> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x15480e2b0 <col:54> 'void *' lvalue ParmVar 0x15480dcd8 'rock' 'void *'     |-DeclStmt 0x154828468 <line:8:5, col:10>     | `-VarDecl 0x154828400 <col:5, col:9> col:9 used r 'int'     |-IfStmt 0x1548285d0 <line:11:5, col:41>     | |-BinaryOperator 0x154828580 <col:9, col:29> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x154828480 <col:9> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x154828560 <col:19, col:29> 'int' '=='     | |   |-ImplicitCastExpr 0x154828548 <col:19, col:24> 'int' <IntegralCast>     | |   | `-ImplicitCastExpr 0x154828530 <col:19, col:24> 'char' <LValueToRValue>     | |   |   `-ArraySubscriptExpr 0x1548284f8 <col:19, col:24> 'const char' lvalue     | |   |     |-ImplicitCastExpr 0x1548284e0 <col:19> 'const char *' <LValueToRValue>     | |   |     | `-DeclRefExpr 0x1548284a0 <col:19> 'const char *' lvalue ParmVar 0x15480dd58 'key' 'const char *'     | |   |     `-IntegerLiteral 0x1548284c0 <col:23> 'int' 0     | |   `-CharacterLiteral 0x154828518 <col:29> 'int' 36     | `-ReturnStmt 0x1548285c0 <col:34, col:41>     |   `-IntegerLiteral 0x1548285a0 <col:41> 'int' 0     |-CallExpr 0x154828c10 <line:14:5, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154828750 <col:5> 'int ()' Function 0x154828698 'mboxlist_entry_free' 'int ()'     | `-UnaryOperator 0x154828bf8 <col:25, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x154828bd0 <col:26, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x154828770 <col:26> 'struct allmb_rock *' lvalue Var 0x15480e248 'mbrock' 'struct allmb_rock *'     |-BinaryOperator 0x154828e98 <line:16:5, col:74> 'int' contains-errors '='     | |-DeclRefExpr 0x154828c38 <col:5> 'int' lvalue Var 0x154828400 'r' 'int'     | `-CallExpr 0x154828e50 <col:9, col:74> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154828d38 <col:9> 'int ()' Function 0x154828c80 'mboxlist_parse_entry' 'int ()'     |   |-UnaryOperator 0x154828db8 <col:30, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x154828d90 <col:31, col:39> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x154828d58 <col:31> 'struct allmb_rock *' lvalue Var 0x15480e248 'mbrock' 'struct allmb_rock *'     |   |-DeclRefExpr 0x154828dd0 <col:48> 'const char *' lvalue ParmVar 0x15480dd58 'key' 'const char *'     |   |-RecoveryExpr 0x154828df0 <col:53> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x154828e10 <col:61> 'const char *' lvalue ParmVar 0x15480de70 'data' 'const char *'     |   `-RecoveryExpr 0x154828e30 <col:67> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154828f20 <line:17:5, col:19>     | |-ImplicitCastExpr 0x154828ed8 <col:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x154828eb8 <col:9> 'int' lvalue Var 0x154828400 'r' 'int'     | `-ReturnStmt 0x154828f10 <col:12, col:19>     |   `-IntegerLiteral 0x154828ef0 <col:19> 'int' 0     |-IfStmt 0x154829108 <line:19:5, line:20:16>     | |-RecoveryExpr 0x1548290b8 <line:19:9, col:92> '_Bool' contains-errors     | `-ReturnStmt 0x1548290f8 <line:20:9, col:16>     |   `-IntegerLiteral 0x1548290d8 <col:16> 'int' 0     `-ReturnStmt 0x154829148 <line:22:5, col:12>       `-IntegerLiteral 0x154829128 <col:12> 'int' 1 ","21105":"`-FunctionDecl 0x1379281c8  line:1:1 invalid xmlDictCreateSub 'int (int)'   |-ParmVarDecl 0x1379280f0 <col:18, col:29> col:29 invalid sub 'int'   `-CompoundStmt 0x137941ac8 <col:34, line:12:1>     `-IfStmt 0x1379285d0 <line:4:5, line:10:5>       |-RecoveryExpr 0x1379282e8 <line:4:9, col:39> '_Bool' contains-errors       `-CompoundStmt 0x1379285b8 <col:42, line:10:5>         `-CallExpr 0x137928590 <line:9:2, col:32> '<dependent type>' contains-errors           |-DeclRefExpr 0x137928480 <col:2> 'int ()' Function 0x1379283c8 'xmlDictReference' 'int ()'           `-CXXDependentScopeMemberExpr 0x137928548 <col:19, col:25> '<dependent type>' contains-errors lvalue ->subdict             `-RecoveryExpr 0x137928528 <col:19> '<dependent type>' contains-errors lvalue ","21006":"`-FunctionDecl 0x13d80e2e8  line:1:12 sched_read_attr 'int (struct sched_attr)' static   |-ParmVarDecl 0x13d80e1d8 <col:28, col:46> col:46 invalid __user 'struct sched_attr'   `-CompoundStmt 0x13e009048 <line:4:1, line:36:1>     |-DeclStmt 0x13e008268 <line:5:2, col:9>     | `-VarDecl 0x13e008200 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x13e0085c0 <line:7:2, line:8:11>     | |-UnaryOperator 0x13e008500 <line:7:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13e0084c8 <col:7, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13e0083b0 <col:7> 'int ()' Function 0x13e0082f8 'access_ok' 'int ()'     | |   |-RecoveryExpr 0x13e008468 <col:17> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x13e008488 <col:31> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13e0084a8 <col:38> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13e0085b0 <line:8:3, col:11>     |   `-UnaryOperator 0x13e008598 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13e008580 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13e008560 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e008b98 <line:11:2, line:24:2>     | |-RecoveryExpr 0x13e008640 <line:11:6, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x13e008b70 <col:29, line:24:2>     |   |-DeclStmt 0x13e008710 <line:12:3, col:22>     |   | `-VarDecl 0x13e0086a8 <col:3, col:18> col:18 used addr 'unsigned char *'     |   |-DeclStmt 0x13e0087a8 <line:13:3, col:21>     |   | `-VarDecl 0x13e008740 <col:3, col:18> col:18 used end 'unsigned char *'     |   `-ForStmt 0x13e008b20 <line:18:3, line:21:3>     |     |-<<<NULL>>>     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13e0089c0 <line:18:10, col:17> 'int' '<'     |     | |-ImplicitCastExpr 0x13e008990 <col:10> 'unsigned char *' <LValueToRValue>     |     | | `-DeclRefExpr 0x13e008950 <col:10> 'unsigned char *' lvalue Var 0x13e0086a8 'addr' 'unsigned char *'     |     | `-ImplicitCastExpr 0x13e0089a8 <col:17> 'unsigned char *' <LValueToRValue>     |     |   `-DeclRefExpr 0x13e008970 <col:17> 'unsigned char *' lvalue Var 0x13e008740 'end' 'unsigned char *'     |     |-UnaryOperator 0x13e008a00 <col:22, col:26> 'unsigned char *' postfix '++'     |     | `-DeclRefExpr 0x13e0089e0 <col:22> 'unsigned char *' lvalue Var 0x13e0086a8 'addr' 'unsigned char *'     |     `-CompoundStmt 0x13e008b08 <col:30, line:21:3>     |       `-IfStmt 0x13e008ae8 <line:19:4, line:20:10>     |         |-ImplicitCastExpr 0x13e008a68 <line:19:8, col:9> 'unsigned char' <LValueToRValue>     |         | `-UnaryOperator 0x13e008a50 <col:8, col:9> 'unsigned char' lvalue prefix '*' cannot overflow     |         |   `-ImplicitCastExpr 0x13e008a38 <col:9> 'unsigned char *' <LValueToRValue>     |         |     `-DeclRefExpr 0x13e008a18 <col:9> 'unsigned char *' lvalue Var 0x13e0086a8 'addr' 'unsigned char *'     |         `-GotoStmt 0x13e008ad0 <line:20:5, col:10> 'err_size' 0x13e008a80     |-BinaryOperator 0x13e008e10 <line:26:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x13e008bb8 <col:2> 'int' lvalue Var 0x13e008200 'ret' 'int'     | `-CallExpr 0x13e008dd8 <col:8, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13e008cb8 <col:8> 'int ()' Function 0x13e008c00 'copy_to_user' 'int ()'     |   |-RecoveryExpr 0x13e008d78 <col:21> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x13e008d98 <col:28> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13e008db8 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e008f10 <line:27:2, line:28:11>     | |-ImplicitCastExpr 0x13e008e50 <line:27:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13e008e30 <col:6> 'int' lvalue Var 0x13e008200 'ret' 'int'     | `-ReturnStmt 0x13e008f00 <line:28:3, col:11>     |   `-UnaryOperator 0x13e008ee8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13e008ed0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13e008eb0 <col:11> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x13e008fc8 <line:30:1, line:31:9> 'out'     | `-ReturnStmt 0x13e008f68 <col:2, col:9>     |   `-ImplicitCastExpr 0x13e008f50 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13e008f30 <col:9> 'int' lvalue Var 0x13e008200 'ret' 'int'     |-LabelStmt 0x13e009010 <line:33:1, col:9> 'err_size'     | `-NullStmt 0x13e009008 <col:9>     `-GotoStmt 0x13e009030 <line:35:2, col:7> 'out' 0x13e008f78 ","21213":"`-FunctionDecl 0x13d809628  col:2 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x13d809728 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x13d8096d0 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x13d809798 <col:2> Implicit ","20927":"`-FunctionDecl 0x12a141eb0  col:9 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x12a141fb0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12a142018 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x12a142080 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12a141f58 <<invalid sloc>> Implicit 888 ","20431":"`-FunctionDecl 0x15b00ddd0  line:1:20 AffineArgsToCoefficients 'void (double *)' static inline   |-ParmVarDecl 0x15b00dd08 <col:45, col:53> col:53 used affine 'double *'   `-CompoundStmt 0x15b026b50 <line:2:1, line:7:1>     |-DeclStmt 0x15b00dfe0 <line:4:3, col:16>     | `-VarDecl 0x15b00df78 <col:3, col:15> col:10 used tmp 'double[4]'     |-BinaryOperator 0x15b00e100 <line:5:3, col:18> 'double' '='     | |-ArraySubscriptExpr 0x15b00e050 <col:3, col:8> 'double' lvalue     | | |-ImplicitCastExpr 0x15b00e038 <col:3> 'double *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x15b00dff8 <col:3> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'     | | `-IntegerLiteral 0x15b00e018 <col:7> 'int' 0     | `-ImplicitCastExpr 0x15b00e0e8 <col:10, col:18> 'double' <LValueToRValue>     |   `-ArraySubscriptExpr 0x15b00e0c8 <col:10, col:18> 'double' lvalue     |     |-ImplicitCastExpr 0x15b00e0b0 <col:10> 'double *' <LValueToRValue>     |     | `-DeclRefExpr 0x15b00e070 <col:10> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'     |     `-IntegerLiteral 0x15b00e090 <col:17> 'int' 1     |-BinaryOperator 0x15b00e228 <col:21, col:36> 'double' '='     | |-ArraySubscriptExpr 0x15b00e178 <col:21, col:26> 'double' lvalue     | | |-ImplicitCastExpr 0x15b00e160 <col:21> 'double *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x15b00e120 <col:21> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'     | | `-IntegerLiteral 0x15b00e140 <col:25> 'int' 1     | `-ImplicitCastExpr 0x15b00e210 <col:28, col:36> 'double' <LValueToRValue>     |   `-ArraySubscriptExpr 0x15b00e1f0 <col:28, col:36> 'double' lvalue     |     |-ImplicitCastExpr 0x15b00e1d8 <col:28> 'double *' <LValueToRValue>     |     | `-DeclRefExpr 0x15b00e198 <col:28> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'     |     `-IntegerLiteral 0x15b00e1b8 <col:35> 'int' 2     |-BinaryOperator 0x15b00e350 <col:39, col:54> 'double' '='     | |-ArraySubscriptExpr 0x15b00e2a0 <col:39, col:44> 'double' lvalue     | | |-ImplicitCastExpr 0x15b00e288 <col:39> 'double *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x15b00e248 <col:39> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'     | | `-IntegerLiteral 0x15b00e268 <col:43> 'int' 2     | `-ImplicitCastExpr 0x15b00e338 <col:46, col:54> 'double' <LValueToRValue>     |   `-ArraySubscriptExpr 0x15b00e318 <col:46, col:54> 'double' lvalue     |     |-ImplicitCastExpr 0x15b00e300 <col:46> 'double *' <LValueToRValue>     |     | `-DeclRefExpr 0x15b00e2c0 <col:46> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'     |     `-IntegerLiteral 0x15b00e2e0 <col:53> 'int' 3     |-BinaryOperator 0x15b026690 <col:57, col:72> 'double' '='     | |-ArraySubscriptExpr 0x15b00e3c8 <col:57, col:62> 'double' lvalue     | | |-ImplicitCastExpr 0x15b00e3b0 <col:57> 'double *' <ArrayToPointerDecay>     | | | `-DeclRefExpr 0x15b00e370 <col:57> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'     | | `-IntegerLiteral 0x15b00e390 <col:61> 'int' 3     | `-ImplicitCastExpr 0x15b026678 <col:64, col:72> 'double' <LValueToRValue>     |   `-ArraySubscriptExpr 0x15b026658 <col:64, col:72> 'double' lvalue     |     |-ImplicitCastExpr 0x15b026640 <col:64> 'double *' <LValueToRValue>     |     | `-DeclRefExpr 0x15b026600 <col:64> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'     |     `-IntegerLiteral 0x15b026620 <col:71> 'int' 4     |-BinaryOperator 0x15b0267b8 <line:6:3, col:18> 'double' '='     | |-ArraySubscriptExpr 0x15b026708 <col:3, col:11> 'double' lvalue     | | |-ImplicitCastExpr 0x15b0266f0 <col:3> 'double *' <LValueToRValue>     | | | `-DeclRefExpr 0x15b0266b0 <col:3> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'     | | `-IntegerLiteral 0x15b0266d0 <col:10> 'int' 3     | `-ImplicitCastExpr 0x15b0267a0 <col:13, col:18> 'double' <LValueToRValue>     |   `-ArraySubscriptExpr 0x15b026780 <col:13, col:18> 'double' lvalue     |     |-ImplicitCastExpr 0x15b026768 <col:13> 'double *' <ArrayToPointerDecay>     |     | `-DeclRefExpr 0x15b026728 <col:13> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'     |     `-IntegerLiteral 0x15b026748 <col:17> 'int' 0     |-BinaryOperator 0x15b0268e0 <col:21, col:36> 'double' '='     | |-ArraySubscriptExpr 0x15b026830 <col:21, col:29> 'double' lvalue     | | |-ImplicitCastExpr 0x15b026818 <col:21> 'double *' <LValueToRValue>     | | | `-DeclRefExpr 0x15b0267d8 <col:21> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'     | | `-IntegerLiteral 0x15b0267f8 <col:28> 'int' 1     | `-ImplicitCastExpr 0x15b0268c8 <col:31, col:36> 'double' <LValueToRValue>     |   `-ArraySubscriptExpr 0x15b0268a8 <col:31, col:36> 'double' lvalue     |     |-ImplicitCastExpr 0x15b026890 <col:31> 'double *' <ArrayToPointerDecay>     |     | `-DeclRefExpr 0x15b026850 <col:31> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'     |     `-IntegerLiteral 0x15b026870 <col:35> 'int' 1     |-BinaryOperator 0x15b026a08 <col:39, col:54> 'double' '='     | |-ArraySubscriptExpr 0x15b026958 <col:39, col:47> 'double' lvalue     | | |-ImplicitCastExpr 0x15b026940 <col:39> 'double *' <LValueToRValue>     | | | `-DeclRefExpr 0x15b026900 <col:39> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'     | | `-IntegerLiteral 0x15b026920 <col:46> 'int' 4     | `-ImplicitCastExpr 0x15b0269f0 <col:49, col:54> 'double' <LValueToRValue>     |   `-ArraySubscriptExpr 0x15b0269d0 <col:49, col:54> 'double' lvalue     |     |-ImplicitCastExpr 0x15b0269b8 <col:49> 'double *' <ArrayToPointerDecay>     |     | `-DeclRefExpr 0x15b026978 <col:49> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'     |     `-IntegerLiteral 0x15b026998 <col:53> 'int' 2     `-BinaryOperator 0x15b026b30 <col:57, col:72> 'double' '='       |-ArraySubscriptExpr 0x15b026a80 <col:57, col:65> 'double' lvalue       | |-ImplicitCastExpr 0x15b026a68 <col:57> 'double *' <LValueToRValue>       | | `-DeclRefExpr 0x15b026a28 <col:57> 'double *' lvalue ParmVar 0x15b00dd08 'affine' 'double *'       | `-IntegerLiteral 0x15b026a48 <col:64> 'int' 2       `-ImplicitCastExpr 0x15b026b18 <col:67, col:72> 'double' <LValueToRValue>         `-ArraySubscriptExpr 0x15b026af8 <col:67, col:72> 'double' lvalue           |-ImplicitCastExpr 0x15b026ae0 <col:67> 'double *' <ArrayToPointerDecay>           | `-DeclRefExpr 0x15b026aa0 <col:67> 'double[4]' lvalue Var 0x15b00df78 'tmp' 'double[4]'           `-IntegerLiteral 0x15b026ac0 <col:71> 'int' 3 ","20713":"`-FunctionDecl 0x13e008348  line:1:1 pegasus_set_wol 'int (struct net_device *, struct ethtool_wolinfo *)'   |-ParmVarDecl 0x13d00e248 <col:17, col:36> col:36 used dev 'struct net_device *'   |-ParmVarDecl 0x13e008228 <col:41, col:65> col:65 used wol 'struct ethtool_wolinfo *'   `-CompoundStmt 0x13e008f70 <line:2:1, line:26:1>     |-DeclStmt 0x13e0086d8 <line:5:2, col:10>     | `-VarDecl 0x13e008670 <col:2, col:7> col:7 used ret 'int'     |-IfStmt 0x13e0088d0 <line:7:2, line:8:11>     | |-BinaryOperator 0x13e008808 <line:7:6, col:22> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13e008728 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13e0086f0 <col:6> 'struct ethtool_wolinfo *' lvalue ParmVar 0x13e008228 'wol' 'struct ethtool_wolinfo *'     | | `-UnaryOperator 0x13e0087f0 <col:21, col:22> '<dependent type>' contains-errors prefix '~' cannot overflow     | |   `-ImplicitCastExpr 0x13e0087d8 <col:22> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x13e0087b8 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13e0088c0 <line:8:3, col:11>     |   `-UnaryOperator 0x13e0088a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13e008890 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13e008870 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13e008f60 <line:25:2, col:9>       `-ImplicitCastExpr 0x13e008f48 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13e008f28 <col:9> 'int' lvalue Var 0x13e008670 'ret' 'int' ","21215":"`-FunctionDecl 0x159944700  col:9 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x159944800 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x1599447a8 <<invalid sloc>> Implicit 903   `-FormatAttr 0x159944870 <col:9> Implicit printf 1 2 ","21094":"`-FunctionDecl 0x148928118  line:1:1 TEST_CASE 'int ()'   `-CompoundStmt 0x148928588 <line:2:1, line:16:1>     |-CallExpr 0x148928458 <line:14:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148928360 <col:5> 'int ()' Function 0x1489282a8 'REQUIRE' 'int ()'     | `-BinaryOperator 0x148928438 <col:13, col:20> 'int' contains-errors '=='     |   |-RecoveryExpr 0x1489283f8 <col:13> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x148928418 <col:20> '<dependent type>' contains-errors lvalue     `-CallExpr 0x148928560 <line:15:5, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x148928480 <col:5> 'int ()' Function 0x1489282a8 'REQUIRE' 'int ()'       `-BinaryOperator 0x148928540 <col:13, col:19> 'int' contains-errors '=='         |-RecoveryExpr 0x148928520 <col:13> '<dependent type>' contains-errors lvalue         `-StringLiteral 0x1489284b8 <col:19> 'char[4]' lvalue \"STR\" ","20313":"`-FunctionDecl 0x147029678  col:6 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x147029778 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x147029720 <<invalid sloc>> Implicit 902 ","20243":"`-FunctionDecl 0x1410cd488  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x1410cd328 <col:22, col:37> col:37 referenced invalid context 'int *'   |-ParmVarDecl 0x1410cd3a8 <col:46, col:58> col:58 referenced invalid node 'int *'   `-CompoundStmt 0x1410e7f48 <col:64, line:46:1>     |-CallExpr 0x1410cd848 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1410cd6a0 <col:3> 'int ()' Function 0x1410cd5e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1410cd6c0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x1410cd800 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1410cd7c0 <col:30> 'int ()' Function 0x1410cd708 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x1410cd7e0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1410cd828 <col:47> 'int' 2     |-CallExpr 0x1410e6248 <line:3:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1410cd880 <col:3> 'int ()' Function 0x1410cd5e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1410cd8a0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x1410e6200 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1410cd9a0 <col:30> 'int ()' Function 0x1410cd8e8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x1410cd9c0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1410e6228 <col:48> 'int' 0     |-ImplicitCastExpr 0x1410e6398 <line:6:3> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x1410e6370 <col:3> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1410e6350 <col:3> 'int *' lvalue ParmVar 0x1410cd328 'context' 'int *'     |-CallExpr 0x1410e64f0 <col:13, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1410e6490 <col:13> 'int ()' Function 0x1410e63d8 'op_context' 'int ()'     | |-RecoveryExpr 0x1410e64b0 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1410e64d0 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1410e6f70 <line:8:3, line:11:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1410e6600 <line:8:3> 'int ()' Function 0x1410e6548 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x1410e6620 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1410e6f50 <col:27, line:11:57> 'int' contains-errors '||'     |   |-BinaryOperator 0x1410e6ef0 <line:8:27, line:10:57> 'int' contains-errors '||'     |   | |-BinaryOperator 0x1410e6e90 <line:8:27, line:9:57> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x1410e6e30 <line:8:27, col:53> 'int' contains-errors '=='     |   | | | |-CXXDependentScopeMemberExpr 0x1410e6aa8 <col:27, col:45> '<dependent type>' contains-errors lvalue ->type     |   | | | | `-RecoveryExpr 0x1410e6a80 <col:27, col:38> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x1410e6640 <col:27> 'int ()' Function 0x1410e63d8 'op_context' 'int ()'     |   | | | `-RecoveryExpr 0x1410e6e10 <col:53> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x1410e6e70 <line:9:31, col:57> 'int' contains-errors '=='     |   | |   |-CXXDependentScopeMemberExpr 0x1410e6b70 <col:31, col:49> '<dependent type>' contains-errors lvalue ->type     |   | |   | `-RecoveryExpr 0x1410e6b48 <col:31, col:42> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x1410e6b28 <col:31> 'int ()' Function 0x1410e63d8 'op_context' 'int ()'     |   | |   `-RecoveryExpr 0x1410e6e50 <col:57> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x1410e6ed0 <line:10:31, col:57> 'int' contains-errors '=='     |   |   |-CXXDependentScopeMemberExpr 0x1410e6c58 <col:31, col:49> '<dependent type>' contains-errors lvalue ->type     |   |   | `-RecoveryExpr 0x1410e6c30 <col:31, col:42> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x1410e6c10 <col:31> 'int ()' Function 0x1410e63d8 'op_context' 'int ()'     |   |   `-RecoveryExpr 0x1410e6eb0 <col:57> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1410e6f30 <line:11:31, col:57> 'int' contains-errors '=='     |     |-CXXDependentScopeMemberExpr 0x1410e6d40 <col:31, col:49> '<dependent type>' contains-errors lvalue ->type     |     | `-RecoveryExpr 0x1410e6d18 <col:31, col:42> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x1410e6cf8 <col:31> 'int ()' Function 0x1410e63d8 'op_context' 'int ()'     |     `-RecoveryExpr 0x1410e6f10 <col:57> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x1410e7200 <line:15:3, line:25:3>     | |-ImplicitCastExpr 0x1410e71d8 <line:15:11, col:29> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x1410e7190 <col:11, col:29> '<dependent type>' contains-errors lvalue ->type     | |   `-RecoveryExpr 0x1410e7168 <col:11, col:22> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1410e7148 <col:11> 'int ()' Function 0x1410e63d8 'op_context' 'int ()'     | `-CompoundStmt 0x1410e7360 <col:35, line:25:3>     |   |-BreakStmt 0x1410e72a8 <line:19:7>     |   |-BreakStmt 0x1410e7330 <line:22:7>     |   `-DefaultStmt 0x1410e7340 <line:23:5, line:24:7>     |     `-BreakStmt 0x1410e7338 <col:7>     |-IfStmt 0x1410e7580 <line:28:3, line:31:3>     | |-RecoveryExpr 0x1410e7388 <line:28:7, col:35> '_Bool' contains-errors     | `-CompoundStmt 0x1410e7570 <col:56, line:31:3>     |-CallExpr 0x1410e7708 <line:33:3, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1410e7680 <col:3> 'int ()' Function 0x1410e75c8 'TfLiteIntArrayFree' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1410e76c0 <col:22, col:28> '<dependent type>' contains-errors lvalue ->temporaries     |   `-RecoveryExpr 0x1410e76a0 <col:22> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1410e7950 <line:34:3, col:45> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x1410e7778 <col:3, col:9> '<dependent type>' contains-errors lvalue ->temporaries       | `-RecoveryExpr 0x1410e7750 <col:3> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1410e7730 <col:3> 'int *' lvalue ParmVar 0x1410cd3a8 'node' 'int *'       `-CallExpr 0x1410e7928 <col:23, col:45> 'int'         |-ImplicitCastExpr 0x1410e7910 <col:23> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1410e78a0 <col:23> 'int ()' Function 0x1410e77e8 'TfLiteIntArrayCreate' 'int ()'         `-IntegerLiteral 0x1410e78c0 <col:44> 'int' 1 ","20973":"`-FunctionDecl 0x143140b48  line:1:12 get_floppy_geometry 'int (int, int, struct floppy_struct **)' static   |-ParmVarDecl 0x1431280d8 <col:32, col:36> col:36 used drive 'int'   |-ParmVarDecl 0x143128158 <col:43, col:47> col:47 used type 'int'   |-ParmVarDecl 0x143140a00 <col:53, col:76> col:76 used g 'struct floppy_struct **'   `-CompoundStmt 0x143141678 <line:2:1, line:16:1>     |-IfStmt 0x1431414a0 <line:3:2, line:12:2> has_else     | |-ImplicitCastExpr 0x143140c70 <line:3:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x143140c50 <col:6> 'int' lvalue ParmVar 0x143128158 'type' 'int'     | |-NullStmt 0x143141498 <line:4:3>     | `-CompoundStmt 0x143141470 <line:5:7, line:12:2>     |   |-IfStmt 0x143140fc0 <line:6:3, line:7:12>     |   | |-CallExpr 0x143140ee8 <line:6:7, col:28> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x143140e40 <col:7> 'int ()' Function 0x143140d88 'lock_fdc' 'int ()'     |   | | |-DeclRefExpr 0x143140e60 <col:16> 'int' lvalue ParmVar 0x1431280d8 'drive' 'int'     |   | | `-RecoveryExpr 0x143140ec8 <col:23> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x143140fb0 <line:7:4, col:12>     |   |   `-UnaryOperator 0x143140f98 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x143140f80 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x143140f60 <col:12> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x143141258 <line:8:3, line:9:12>     |   | |-RecoveryExpr 0x143141160 <line:8:7, col:32> '_Bool' contains-errors     |   | `-ReturnStmt 0x143141248 <line:9:4, col:12>     |   |   `-UnaryOperator 0x143141230 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x143141218 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x1431411c8 <col:12> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1431413c8 <line:10:3, col:22> 'int'     |     `-ImplicitCastExpr 0x1431413b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x143141358 <col:3> 'int ()' Function 0x1431412a0 'process_fd_request' 'int ()'     |-IfStmt 0x143141628 <line:13:2, line:14:11>     | |-UnaryOperator 0x143141538 <line:13:6, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x143141520 <col:7, col:8> 'struct floppy_struct *' <LValueToRValue>     | |   `-UnaryOperator 0x143141508 <col:7, col:8> 'struct floppy_struct *' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x1431414f0 <col:8> 'struct floppy_struct **' <LValueToRValue>     | |       `-DeclRefExpr 0x1431414d0 <col:8> 'struct floppy_struct **' lvalue ParmVar 0x143140a00 'g' 'struct floppy_struct **'     | `-ReturnStmt 0x143141618 <line:14:3, col:11>     |   `-UnaryOperator 0x143141600 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1431415e8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x143141598 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x143141668 <line:15:2, col:9>       `-IntegerLiteral 0x143141648 <col:9> 'int' 0 ","20836":"`-FunctionDecl 0x13600ddc8  line:1:26 invalid GetPixelMagentaTraits 'int (const int *)' static inline   |-ParmVarDecl 0x13600dcf0 <line:2:3, col:16> col:16 invalid magick_restrict 'const int *'   `-CompoundStmt 0x13600def0 <line:3:1, line:5:1> ","20991":"`-FunctionDecl 0x12e141838  line:1:19 invalid xrstor_state_booting 'int (struct xsave_struct *, int)' static inline   |-ParmVarDecl 0x12e128648 <col:40, col:61> col:61 fx 'struct xsave_struct *'   |-ParmVarDecl 0x12e1286e0 <col:65, col:69> col:69 referenced invalid mask 'int'   `-CompoundStmt 0x12e141f80 <line:2:1, line:25:1>     |-DeclStmt 0x12e141990 <line:5:2, col:13>     | `-VarDecl 0x12e141908 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x12e141970 <col:12> 'int' 0     |-CallExpr 0x12e141bf8 <line:7:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e141b00 <col:2> 'int ()' Function 0x12e141a48 'WARN_ON' 'int ()'     | `-BinaryOperator 0x12e141bd8 <col:10, col:26> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12e141b98 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12e141bb8 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e141f70 <line:24:2, col:9>       `-ImplicitCastExpr 0x12e141f58 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12e141f38 <col:9> 'int' lvalue Var 0x12e141908 'err' 'int' ","21237":"`-FunctionDecl 0x1420266d0  line:1:20 hns_nic_reclaim_one_desc 'void (struct hnae_ring *, int *, int *)' static inline   |-ParmVarDecl 0x14200e248 <col:45, col:63> col:63 used ring 'struct hnae_ring *'   |-ParmVarDecl 0x14200e2f8 <line:2:10, col:15> col:15 used bytes 'int *'   |-ParmVarDecl 0x14200e378 <col:22, col:27> col:27 used pkts 'int *'   `-CompoundStmt 0x1420270c8 <line:3:1, line:12:1>     |-DeclStmt 0x142026af0 <line:4:2, col:68>     | |-RecordDecl 0x1420267d8 <col:2, col:9> col:9 struct hnae_desc_cb     | `-VarDecl 0x142026948 <col:2, col:67> col:23 used desc_cb 'struct hnae_desc_cb *' cinit     |   `-UnaryOperator 0x142026ac0 <col:33, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x142026aa0 <col:34, col:67> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x142026a70 <col:34, col:40> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x1420269e8 <col:34, col:40> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1420269b0 <col:34> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'     |       `-ImplicitCastExpr 0x142026a88 <col:48, col:54> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x142026a48 <col:48, col:54> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x142026a10 <col:48> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'     |-CompoundAssignOperator 0x142026cf8 <line:7:2, col:23> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-ParenExpr 0x142026c78 <col:2, col:9> 'int' lvalue     | | `-UnaryOperator 0x142026c60 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x142026c48 <col:4> 'int *' <LValueToRValue>     | |     `-DeclRefExpr 0x142026c28 <col:4> 'int *' lvalue ParmVar 0x14200e2f8 'bytes' 'int *'     | `-RecoveryExpr 0x142026cd0 <col:14, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x142026c98 <col:14> 'struct hnae_desc_cb *' contains-errors lvalue Var 0x142026948 'desc_cb' 'struct hnae_desc_cb *'     |-CallExpr 0x142026ee0 <line:9:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142026e40 <col:2> 'int ()' Function 0x142026d88 'hnae_free_buffer_detach' 'int ()'     | |-DeclRefExpr 0x142026e60 <col:26> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'     | `-RecoveryExpr 0x142026eb8 <col:32, col:38> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x142026e80 <col:32> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'     `-CallExpr 0x142027098 <line:11:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x142026ff0 <col:2> 'int ()' Function 0x142026f38 'ring_ptr_move_fw' 'int ()'       |-DeclRefExpr 0x142027010 <col:19> 'struct hnae_ring *' lvalue ParmVar 0x14200e248 'ring' 'struct hnae_ring *'       `-RecoveryExpr 0x142027078 <col:25> '<dependent type>' contains-errors lvalue ","21219":"`-FunctionDecl 0x155128280  line:1:13 invalid append_options 'void (int *, void *)' static   |-ParmVarDecl 0x155128128 <col:28, col:45> col:45 invalid iter 'int *'   |-ParmVarDecl 0x1551281a8 <col:51, col:57> col:57 used user_data 'void *'   `-CompoundStmt 0x155141048 <line:2:1, line:35:1>     |-DeclStmt 0x155128578 <line:3:2, col:35>     | |-RecordDecl 0x155128338 <col:2, col:9> col:9 struct pending_op     | `-VarDecl 0x1551284a8 <col:2, col:26> col:21 used op 'struct pending_op *' cinit     |   `-ImplicitCastExpr 0x155128548 <col:26> 'struct pending_op *' <BitCast>     |     `-ImplicitCastExpr 0x155128530 <col:26> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x155128510 <col:26> 'void *' lvalue ParmVar 0x1551281a8 'user_data' 'void *'     |-DeclStmt 0x15580a440 <line:4:2, col:48>     | `-VarDecl 0x1551285a8 <col:2, col:47> col:14 used path 'const char *' cinit     |   `-CallExpr 0x15580a418 <col:21, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x155128770 <col:21> 'int ()' Function 0x1551286b8 'device_get_path' 'int ()'     |     `-RecoveryExpr 0x15580a3f0 <col:37, col:41> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x155128790 <col:37> 'struct pending_op *' lvalue Var 0x1551284a8 'op' 'struct pending_op *'     |-DeclStmt 0x15580a648 <line:5:2, col:31>     | |-RecordDecl 0x15580a458 <col:2, col:9> col:9 struct bt_gatt_server     | `-VarDecl 0x15580a5c8 <col:2, col:25> col:25 used server 'struct bt_gatt_server *'     |-DeclStmt 0x15580a6e0 <line:6:2, col:18>     | `-VarDecl 0x15580a678 <col:2, col:14> col:14 used link 'const char *'     |-SwitchStmt 0x15580a770 <line:9:2, line:19:2>     | |-ImplicitCastExpr 0x15580a758 <line:9:10, col:14> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x15580a730 <col:10, col:14> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15580a6f8 <col:10> 'struct pending_op *' lvalue Var 0x1551284a8 'op' 'struct pending_op *'     | `-CompoundStmt 0x15580a9f8 <col:25, line:19:2>     |   |-BinaryOperator 0x15580a860 <line:11:3, col:10> 'const char *' '='     |   | |-DeclRefExpr 0x15580a7b0 <col:3> 'const char *' lvalue Var 0x15580a678 'link' 'const char *'     |   | `-ImplicitCastExpr 0x15580a848 <col:10> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x15580a830 <col:10> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x15580a810 <col:10> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x15580a880 <line:12:3>     |   |-BinaryOperator 0x15580a910 <line:14:3, col:10> 'const char *' '='     |   | |-DeclRefExpr 0x15580a8a0 <col:3> 'const char *' lvalue Var 0x15580a678 'link' 'const char *'     |   | `-ImplicitCastExpr 0x15580a8f8 <col:10> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x15580a8e0 <col:10> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x15580a8c0 <col:10> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x15580a930 <line:15:3>     |   |-DefaultStmt 0x15580a9d0 <line:16:2, line:17:10>     |   | `-BinaryOperator 0x15580a9b0 <col:3, col:10> 'const char *' contains-errors '='     |   |   |-DeclRefExpr 0x15580a938 <col:3> 'const char *' lvalue Var 0x15580a678 'link' 'const char *'     |   |   `-RecoveryExpr 0x15580a990 <col:10> '<dependent type>' contains-errors lvalue     |   `-BreakStmt 0x15580a9f0 <line:18:3>     |-CallExpr 0x15580ac58 <line:21:2, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15580ab18 <col:2> 'int ()' Function 0x15580aa60 'dict_append_entry' 'int ()'     | |-RecoveryExpr 0x15580ab38 <col:20> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x15580ab58 <col:26> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x15580ac38 <col:33> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x15580abe0 <col:56, col:57> 'const char **' contains-errors prefix '&' cannot overflow     |   `-DeclRefExpr 0x15580ab90 <col:57> 'const char *' contains-errors lvalue Var 0x1551285a8 'path' 'const char *'     |-IfStmt 0x15580ae88 <line:22:2, line:24:19>     | |-RecoveryExpr 0x15580acd0 <line:22:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15580ac98 <col:6> 'struct pending_op *' lvalue Var 0x1551284a8 'op' 'struct pending_op *'     | `-CallExpr 0x15580ae48 <line:23:3, line:24:19> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15580acf8 <line:23:3> 'int ()' Function 0x15580aa60 'dict_append_entry' 'int ()'     |   |-RecoveryExpr 0x15580ad18 <col:21> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x15580ad38 <col:27> 'char[4]' lvalue \"STR\"     |   |-RecoveryExpr 0x15580ae28 <col:34> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x15580add0 <line:24:8, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15580ada8 <col:9, col:13> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15580ad70 <col:9> 'struct pending_op *' lvalue Var 0x1551284a8 'op' 'struct pending_op *'     |-IfStmt 0x155140a40 <line:25:2, line:26:57>     | |-ImplicitCastExpr 0x15580aec8 <line:25:6> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x15580aea8 <col:6> 'const char *' lvalue Var 0x15580a678 'link' 'const char *'     | `-CallExpr 0x155140a00 <line:26:3, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15580aee0 <col:3> 'int ()' Function 0x15580aa60 'dict_append_entry' 'int ()'     |   |-RecoveryExpr 0x15580af00 <col:21> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x15580af20 <col:27> 'char[4]' lvalue \"STR\"     |   |-RecoveryExpr 0x15580afd0 <col:34> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x15580af78 <col:52, col:53> 'const char **' prefix '&' cannot overflow     |     `-DeclRefExpr 0x15580af58 <col:53> 'const char *' lvalue Var 0x15580a678 'link' 'const char *'     |-IfStmt 0x155140c50 <line:27:2, line:29:27>     | |-RecoveryExpr 0x155140a98 <line:27:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x155140a60 <col:6> 'struct pending_op *' lvalue Var 0x1551284a8 'op' 'struct pending_op *'     | `-CallExpr 0x155140c10 <line:28:3, line:29:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x155140ac0 <line:28:3> 'int ()' Function 0x15580aa60 'dict_append_entry' 'int ()'     |   |-RecoveryExpr 0x155140ae0 <col:21> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x155140b00 <col:27> 'char[4]' lvalue \"STR\"     |   |-RecoveryExpr 0x155140bf0 <col:34> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x155140b98 <line:29:8, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x155140b70 <col:9, col:13> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x155140b38 <col:9> 'struct pending_op *' lvalue Var 0x1551284a8 'op' 'struct pending_op *'     `-BinaryOperator 0x155140e18 <line:31:2, col:48> 'struct bt_gatt_server *' contains-errors '='       |-DeclRefExpr 0x155140c70 <col:2> 'struct bt_gatt_server *' lvalue Var 0x15580a5c8 'server' 'struct bt_gatt_server *'       `-CallExpr 0x155140df0 <col:11, col:48> '<dependent type>' contains-errors         |-DeclRefExpr 0x155140d70 <col:11> 'int ()' Function 0x155140cb8 'btd_device_get_gatt_server' 'int ()'         `-RecoveryExpr 0x155140dc8 <col:38, col:42> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x155140d90 <col:38> 'struct pending_op *' lvalue Var 0x1551284a8 'op' 'struct pending_op *' ","20541":"`-FunctionDecl 0x141826600  col:22 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x141826700 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x141826768 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1418266a8 <<invalid sloc>> Implicit 893 ","20338":"`-FunctionDecl 0x125845288  line:1:1 invalid __read_extent_tree_block 'int (const char *, unsigned int, struct inode *, int, int, int)'   |-ParmVarDecl 0x12581ded8 <col:26, col:38> col:38 used function 'const char *'   |-ParmVarDecl 0x12581df58 <col:48, col:61> col:61 used line 'unsigned int'   |-ParmVarDecl 0x12581e548 <line:2:5, col:19> col:19 used inode 'struct inode *'   |-ParmVarDecl 0x125845000 <col:26, col:39> col:39 invalid pblk 'int'   |-ParmVarDecl 0x125845080 <col:45, col:49> col:49 used depth 'int'   |-ParmVarDecl 0x125845100 <line:3:5, col:9> col:9 used flags 'int'   `-CompoundStmt 0x1258469f8 <line:4:1, line:43:1>     |-DeclStmt 0x125845548 <line:5:2, col:25>     | |-RecordDecl 0x125845360 <col:2, col:9> col:9 struct buffer_head     | `-VarDecl 0x1258454c8 <col:2, col:23> col:23 used bh 'struct buffer_head *'     |-DeclStmt 0x1258455e0 <line:6:2, col:12>     | `-VarDecl 0x125845578 <col:2, col:9> col:9 used err 'int'     |-BinaryOperator 0x125845988 <line:12:2, col:49> 'struct buffer_head *' contains-errors '='     | |-DeclRefExpr 0x1258456a8 <col:2> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     | `-CallExpr 0x125845950 <col:7, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125845820 <col:7> 'int ()' Function 0x125845768 'sb_getblk_gfp' 'int ()'     |   |-RecoveryExpr 0x125845878 <col:21, col:28> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x125845840 <col:21> 'struct inode *' lvalue ParmVar 0x12581e548 'inode' 'struct inode *'     |   |-RecoveryExpr 0x1258458a0 <col:34> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x125845930 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125845d68 <line:13:2, line:14:25>     | |-CallExpr 0x125845b48 <line:13:6, col:18> 'int'     | | |-ImplicitCastExpr 0x125845b30 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x125845a88 <col:6> 'int ()' Function 0x1258459d0 'unlikely' 'int ()'     | | `-UnaryOperator 0x125845ae0 <col:15, col:16> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x125845ac8 <col:16> 'struct buffer_head *' <LValueToRValue>     | |     `-DeclRefExpr 0x125845aa8 <col:16> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     | `-ReturnStmt 0x125845d58 <line:14:3, col:25>     |   `-CallExpr 0x125845d30 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x125845c50 <col:10> 'int ()' Function 0x125845b98 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x125845d18 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x125845d00 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x125845ce0 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1270097e8 <line:16:2, line:21:2>     | |-UnaryOperator 0x125845f00 <line:16:6, col:29> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x125845ec0 <col:7, col:29> 'int'     | |   |-ImplicitCastExpr 0x125845ea8 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x125845e68 <col:7> 'int ()' Function 0x125845db0 'bh_uptodate_or_lock' 'int ()'     | |   `-ImplicitCastExpr 0x125845ee8 <col:27> 'struct buffer_head *' <LValueToRValue>     | |     `-DeclRefExpr 0x125845e88 <col:27> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     | `-CompoundStmt 0x1270097c0 <col:32, line:21:2>     |   |-CallExpr 0x1270094d0 <line:17:3, col:51> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127009400 <col:3> 'int ()' Function 0x125845f40 'trace_ext4_ext_load_extent' 'int ()'     |   | |-DeclRefExpr 0x127009420 <col:30> 'struct inode *' lvalue ParmVar 0x12581e548 'inode' 'struct inode *'     |   | |-RecoveryExpr 0x127009440 <col:37> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1270094b0 <col:43> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1270096a0 <line:18:3, col:26> 'int' '='     |   | |-DeclRefExpr 0x127009508 <col:3> 'int' lvalue Var 0x125845578 'err' 'int'     |   | `-CallExpr 0x127009660 <col:9, col:26> 'int'     |   |   |-ImplicitCastExpr 0x127009648 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x127009608 <col:9> 'int ()' Function 0x127009550 'bh_submit_read' 'int ()'     |   |   `-ImplicitCastExpr 0x127009688 <col:24> 'struct buffer_head *' <LValueToRValue>     |   |     `-DeclRefExpr 0x127009628 <col:24> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     |   `-IfStmt 0x1270097a0 <line:19:3, line:20:9>     |     |-BinaryOperator 0x127009718 <line:19:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x127009700 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x1270096c0 <col:7> 'int' lvalue Var 0x125845578 'err' 'int'     |     | `-IntegerLiteral 0x1270096e0 <col:13> 'int' 0     |     `-GotoStmt 0x127009788 <line:20:4, col:9> 'errout' 0x127009738     |-IfStmt 0x127009a58 <line:22:2, line:23:10>     | |-RecoveryExpr 0x1270099d8 <line:22:6, col:58> '_Bool' contains-errors     | `-ReturnStmt 0x127009a48 <line:23:3, col:10>     |   `-ImplicitCastExpr 0x127009a30 <col:10> 'int' <PointerToIntegral>     |     `-ImplicitCastExpr 0x127009a18 <col:10> 'struct buffer_head *' <LValueToRValue>     |       `-DeclRefExpr 0x1270099f8 <col:10> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     |-IfStmt 0x125846058 <line:24:2, line:31:2>     | |-BinaryOperator 0x127009ff8 <line:24:6, line:26:62> 'int' contains-errors '||'     | | |-UnaryOperator 0x127009c00 <line:24:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x127009bd8 <col:7, col:43> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x127009b58 <col:7> 'int ()' Function 0x127009aa0 'ext4_has_feature_journal' 'int ()'     | | |   `-RecoveryExpr 0x127009bb0 <col:32, col:39> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x127009b78 <col:32> 'struct inode *' lvalue ParmVar 0x12581e548 'inode' 'struct inode *'     | | `-ParenExpr 0x127009fd8 <line:25:6, line:26:62> 'int' contains-errors     | |   `-BinaryOperator 0x127009fb8 <line:25:7, line:26:61> 'int' contains-errors '!='     | |     |-RecoveryExpr 0x127009c50 <line:25:7, col:14> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x127009c18 <col:7> 'struct inode *' lvalue ParmVar 0x12581e548 'inode' 'struct inode *'     | |     `-CallExpr 0x127009f90 <line:26:7, col:61> '<dependent type>' contains-errors     | |       |-DeclRefExpr 0x127009d58 <col:7> 'int ()' Function 0x127009ca0 'le32_to_cpu' 'int ()'     | |       `-CXXDependentScopeMemberExpr 0x127009f48 <col:19, col:47> '<dependent type>' contains-errors lvalue ->s_journal_inum     | |         `-CXXDependentScopeMemberExpr 0x127009f00 <col:19, col:41> '<dependent type>' contains-errors lvalue ->s_es     | |           `-CallExpr 0x127009ed8 <col:19, col:38> '<dependent type>' contains-errors     | |             |-DeclRefExpr 0x127009e58 <col:19> 'int ()' Function 0x127009da0 'EXT4_SB' 'int ()'     | |             `-RecoveryExpr 0x127009eb0 <col:27, col:34> '<dependent type>' contains-errors lvalue     | |               `-DeclRefExpr 0x127009e78 <col:27> 'struct inode *' lvalue ParmVar 0x12581e548 'inode' 'struct inode *'     | `-CompoundStmt 0x125846038 <col:65, line:31:2>     |   |-BinaryOperator 0x12700a3a0 <line:27:3, line:28:42> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12700a018 <line:27:3> 'int' lvalue Var 0x125845578 'err' 'int'     |   | `-CallExpr 0x12700a350 <col:9, line:28:42> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12700a118 <line:27:9> 'int ()' Function 0x12700a060 '__ext4_ext_check' 'int ()'     |   |   |-DeclRefExpr 0x12700a138 <col:26> 'const char *' lvalue ParmVar 0x12581ded8 'function' 'const char *'     |   |   |-DeclRefExpr 0x12700a158 <col:36> 'unsigned int' lvalue ParmVar 0x12581df58 'line' 'unsigned int'     |   |   |-DeclRefExpr 0x12700a178 <col:42> 'struct inode *' lvalue ParmVar 0x12581e548 'inode' 'struct inode *'     |   |   |-CallExpr 0x12700a2d0 <line:28:12, col:28> 'int'     |   |   | |-ImplicitCastExpr 0x12700a2b8 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x12700a278 <col:12> 'int ()' Function 0x12700a1c0 'ext_block_hdr' 'int ()'     |   |   | `-ImplicitCastExpr 0x12700a2f8 <col:26> 'struct buffer_head *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x12700a298 <col:26> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     |   |   |-DeclRefExpr 0x12700a310 <col:31> 'int' lvalue ParmVar 0x125845080 'depth' 'int'     |   |   `-RecoveryExpr 0x12700a330 <col:38> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x125846018 <line:29:3, line:30:9>     |     |-ImplicitCastExpr 0x12700a3e0 <line:29:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x12700a3c0 <col:7> 'int' lvalue Var 0x125845578 'err' 'int'     |     `-GotoStmt 0x125846000 <line:30:4, col:9> 'errout' 0x127009738     |-CallExpr 0x1258461b0 <line:32:2, col:24> 'int'     | |-ImplicitCastExpr 0x125846198 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x125846158 <col:2> 'int ()' Function 0x1258460a0 'set_buffer_verified' 'int ()'     | `-ImplicitCastExpr 0x1258461d8 <col:22> 'struct buffer_head *' <LValueToRValue>     |   `-DeclRefExpr 0x125846178 <col:22> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     |-IfStmt 0x125846738 <line:34:2, line:37:2>     | |-RecoveryExpr 0x125846288 <line:34:6, col:45> '_Bool' contains-errors     | `-CompoundStmt 0x125846718 <col:48, line:37:2>     |   |-DeclStmt 0x125846548 <line:35:3, col:52>     |   | |-RecordDecl 0x1258462a8 <col:3, col:10> col:10 struct ext4_extent_header     |   | `-VarDecl 0x125846418 <col:3, col:51> col:30 used eh 'struct ext4_extent_header *' cinit     |   |   `-ImplicitCastExpr 0x125846518 <col:35, col:51> 'struct ext4_extent_header *' <IntegralToPointer>     |   |     `-CallExpr 0x1258464d8 <col:35, col:51> 'int'     |   |       |-ImplicitCastExpr 0x1258464c0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x125846480 <col:35> 'int ()' Function 0x12700a1c0 'ext_block_hdr' 'int ()'     |   |       `-ImplicitCastExpr 0x125846500 <col:49> 'struct buffer_head *' <LValueToRValue>     |   |         `-DeclRefExpr 0x1258464a0 <col:49> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     |   `-CallExpr 0x1258466b8 <line:36:3, col:31> 'int'     |     |-ImplicitCastExpr 0x1258466a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x125846640 <col:3> 'int ()' Function 0x125846588 'ext4_cache_extents' 'int ()'     |     |-ImplicitCastExpr 0x1258466e8 <col:22> 'struct inode *' <LValueToRValue>     |     | `-DeclRefExpr 0x125846660 <col:22> 'struct inode *' lvalue ParmVar 0x12581e548 'inode' 'struct inode *'     |     `-ImplicitCastExpr 0x125846700 <col:29> 'struct ext4_extent_header *' <LValueToRValue>     |       `-DeclRefExpr 0x125846680 <col:29> 'struct ext4_extent_header *' lvalue Var 0x125846418 'eh' 'struct ext4_extent_header *'     |-ReturnStmt 0x1258467a8 <line:38:2, col:9>     | `-ImplicitCastExpr 0x125846790 <col:9> 'int' <PointerToIntegral>     |   `-ImplicitCastExpr 0x125846778 <col:9> 'struct buffer_head *' <LValueToRValue>     |     `-DeclRefExpr 0x125846758 <col:9> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     |-LabelStmt 0x125846930 <line:39:1, line:40:11> 'errout'     | `-CallExpr 0x1258468f0 <col:2, col:11> 'int'     |   |-ImplicitCastExpr 0x1258468d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x125846898 <col:2> 'int ()' Function 0x1258467e0 'put_bh' 'int ()'     |   `-ImplicitCastExpr 0x125846918 <col:9> 'struct buffer_head *' <LValueToRValue>     |     `-DeclRefExpr 0x1258468b8 <col:9> 'struct buffer_head *' lvalue Var 0x1258454c8 'bh' 'struct buffer_head *'     `-ReturnStmt 0x1258469e8 <line:41:2, col:20>       `-CallExpr 0x1258469a8 <col:9, col:20> 'int'         |-ImplicitCastExpr 0x125846990 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x125846950 <col:9> 'int ()' Function 0x125845b98 'ERR_PTR' 'int ()'         `-ImplicitCastExpr 0x1258469d0 <col:17> 'int' <LValueToRValue>           `-DeclRefExpr 0x125846970 <col:17> 'int' lvalue Var 0x125845578 'err' 'int' ","21194":"`-FunctionDecl 0x14f941800  col:9 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14f941900 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14f941968 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14f9419d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14f9418a8 <<invalid sloc>> Implicit 900 ","20449":"`-FunctionDecl 0x14a80de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x14a80dd58 <col:8> col:8 Http1ServerConnectionImplTest 'int'   |-ParmVarDecl 0x14a80dcd8 <col:39> col:39 Http11AbsolutePath1 'int'   `-CompoundStmt 0x14a80e250 <col:60, line:8:1>     |-CallExpr 0x14a80e0c8 <line:2:3, col:14> 'int'     | `-ImplicitCastExpr 0x14a80e0b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14a80e060 <col:3> 'int ()' Function 0x14a80dfa8 'initialize' 'int ()'     `-RecoveryExpr 0x14a80e118 <line:6:3> '<dependent type>' contains-errors lvalue ","20517":"`-FunctionDecl 0x15580de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x15580dd58 <col:6> col:6 BasicFlatBufferModel 'int'   |-ParmVarDecl 0x15580dcd8 <col:28> col:28 TestHandleMalformedModel 'int'   `-CompoundStmt 0x155826730 <col:54, line:19:2>     `-DeclStmt 0x155826718 <line:2:3, line:5:4>       `-VarDecl 0x15580df50 <line:2:3, line:5:3> line:2:14 model_paths 'const int' auto cinit         `-InitListExpr 0x15580e078 <col:28, line:5:3> 'int'           `-ImplicitCastExpr 0x15580e0d0 <line:4:7> 'int' <PointerToIntegral>             `-ImplicitCastExpr 0x15580e0b8 <col:7> 'char *' <ArrayToPointerDecay>               `-StringLiteral 0x15580e000 <col:7> 'char[4]' lvalue \"STR\" ","21111":"`-FunctionDecl 0x12b944d48  line:1:12 snd_timer_user_release 'int (struct inode *, struct file *)' static   |-ParmVarDecl 0x12b928648 <col:35, col:49> col:49 inode 'struct inode *'   |-ParmVarDecl 0x12b944c28 <col:56, col:69> col:69 used file 'struct file *'   `-CompoundStmt 0x12b945808 <line:2:1, line:15:1>     |-DeclStmt 0x12b945038 <line:3:2, col:27>     | |-RecordDecl 0x12b944e48 <col:2, col:9> col:9 struct snd_timer_user     | `-VarDecl 0x12b944fb8 <col:2, col:25> col:25 used tu 'struct snd_timer_user *'     |-IfStmt 0x12b9457b8 <line:5:2, line:13:2>     | |-RecoveryExpr 0x12b945088 <line:5:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b945050 <col:6> 'struct file *' lvalue ParmVar 0x12b944c28 'file' 'struct file *'     | `-CompoundStmt 0x12b945778 <col:26, line:13:2>     |   |-BinaryOperator 0x12b945130 <line:6:3, col:14> 'struct snd_timer_user *' contains-errors '='     |   | |-DeclRefExpr 0x12b9450b0 <col:3> 'struct snd_timer_user *' lvalue Var 0x12b944fb8 'tu' 'struct snd_timer_user *'     |   | `-RecoveryExpr 0x12b945108 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12b9450d0 <col:8> 'struct file *' lvalue ParmVar 0x12b944c28 'file' 'struct file *'     |   |-BinaryOperator 0x12b945220 <line:7:3, col:24> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12b945188 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12b945150 <col:3> 'struct file *' lvalue ParmVar 0x12b944c28 'file' 'struct file *'     |   | `-RecoveryExpr 0x12b945200 <col:24> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x12b945458 <line:8:3, line:9:30>     |   | |-RecoveryExpr 0x12b945278 <line:8:7, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12b945240 <col:7> 'struct snd_timer_user *' lvalue Var 0x12b944fb8 'tu' 'struct snd_timer_user *'     |   | `-CallExpr 0x12b945430 <line:9:4, col:30> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12b9453b0 <col:4> 'int ()' Function 0x12b9452f8 'snd_timer_close' 'int ()'     |   |   `-RecoveryExpr 0x12b945408 <col:20, col:24> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12b9453d0 <col:20> 'struct snd_timer_user *' lvalue Var 0x12b944fb8 'tu' 'struct snd_timer_user *'     |   |-CallExpr 0x12b9455d8 <line:10:3, col:18> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b945558 <col:3> 'int ()' Function 0x12b9454a0 'kfree' 'int ()'     |   | `-RecoveryExpr 0x12b9455b0 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12b945578 <col:9> 'struct snd_timer_user *' lvalue Var 0x12b944fb8 'tu' 'struct snd_timer_user *'     |   |-CallExpr 0x12b945680 <line:11:3, col:19> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b945600 <col:3> 'int ()' Function 0x12b9454a0 'kfree' 'int ()'     |   | `-RecoveryExpr 0x12b945658 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12b945620 <col:9> 'struct snd_timer_user *' lvalue Var 0x12b944fb8 'tu' 'struct snd_timer_user *'     |   `-CallExpr 0x12b945738 <line:12:3, col:11> 'int'     |     |-ImplicitCastExpr 0x12b945720 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12b9456a8 <col:3> 'int ()' Function 0x12b9454a0 'kfree' 'int ()'     |     `-ImplicitCastExpr 0x12b945760 <col:9> 'struct snd_timer_user *' <LValueToRValue>     |       `-DeclRefExpr 0x12b9456c8 <col:9> 'struct snd_timer_user *' lvalue Var 0x12b944fb8 'tu' 'struct snd_timer_user *'     `-ReturnStmt 0x12b9457f8 <line:14:2, col:9>       `-IntegerLiteral 0x12b9457d8 <col:9> 'int' 0 ","20521":"`-FunctionDecl 0x14e88d058  line:1:1 invalid SWFInput_readSBits 'int (int, int)'   |-ParmVarDecl 0x14e88cef0 <col:20, col:29> col:29 invalid input 'int'   |-ParmVarDecl 0x14e88cf70 <col:36, col:40> col:40 used number 'int'   `-CompoundStmt 0x14e068478 <line:2:1, line:9:1>     |-DeclStmt 0x14e88d380 <line:3:2, col:44>     | `-VarDecl 0x14e88d128 <col:2, col:43> col:6 used num 'int' cinit     |   `-CallExpr 0x14e88d350 <col:12, col:43> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14e88d2f0 <col:12> 'int ()' Function 0x14e88d238 'SWFInput_readBits' 'int ()'     |     |-RecoveryExpr 0x14e88d310 <col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14e88d330 <col:37> 'int' lvalue ParmVar 0x14e88cf70 'number' 'int'     `-IfStmt 0x14e068448 <line:5:2, line:8:10> has_else       |-BinaryOperator 0x14e88d4c8 <line:5:7, col:27> 'int' contains-errors '&'       | |-ImplicitCastExpr 0x14e88d4b0 <col:7> 'int' contains-errors <LValueToRValue>       | | `-DeclRefExpr 0x14e88d398 <col:7> 'int' contains-errors lvalue Var 0x14e88d128 'num' 'int'       | `-ParenExpr 0x14e88d490 <col:13, col:27> 'int'       |   `-BinaryOperator 0x14e88d470 <col:14, col:26> 'int' '<<'       |     |-IntegerLiteral 0x14e88d3b8 <col:14> 'int' 1       |     `-ParenExpr 0x14e88d450 <col:17, col:26> 'int'       |       `-BinaryOperator 0x14e88d430 <col:18, col:25> 'int' '-'       |         |-ImplicitCastExpr 0x14e88d418 <col:18> 'int' <LValueToRValue>       |         | `-DeclRefExpr 0x14e88d3d8 <col:18> 'int' lvalue ParmVar 0x14e88cf70 'number' 'int'       |         `-IntegerLiteral 0x14e88d3f8 <col:25> 'int' 1       |-ReturnStmt 0x14e88d5d8 <line:6:3, col:26>       | `-BinaryOperator 0x14e88d5b8 <col:10, col:26> 'int' contains-errors '-'       |   |-ImplicitCastExpr 0x14e88d5a0 <col:10> 'int' contains-errors <LValueToRValue>       |   | `-DeclRefExpr 0x14e88d4e8 <col:10> 'int' contains-errors lvalue Var 0x14e88d128 'num' 'int'       |   `-ParenExpr 0x14e88d580 <col:16, col:26> 'int'       |     `-BinaryOperator 0x14e88d560 <col:17, col:20> 'int' '<<'       |       |-IntegerLiteral 0x14e88d508 <col:17> 'int' 1       |       `-ImplicitCastExpr 0x14e88d548 <col:20> 'int' <LValueToRValue>       |         `-DeclRefExpr 0x14e88d528 <col:20> 'int' lvalue ParmVar 0x14e88cf70 'number' 'int'       `-ReturnStmt 0x14e068438 <line:8:3, col:10>         `-ImplicitCastExpr 0x14e068420 <col:10> 'int' contains-errors <LValueToRValue>           `-DeclRefExpr 0x14e068400 <col:10> 'int' contains-errors lvalue Var 0x14e88d128 'num' 'int' ","20570":"`-FunctionDecl 0x1360268a0  line:1:13 smc_parse_options 'void (const struct tcphdr *, struct tcp_options_received *, const unsigned char *, int)' static   |-ParmVarDecl 0x13600e248 <col:31, col:52> col:52 th 'const struct tcphdr *'   |-ParmVarDecl 0x136026628 <line:2:10, col:39> col:39 opt_rx 'struct tcp_options_received *'   |-ParmVarDecl 0x1360266d8 <line:3:10, col:31> col:31 ptr 'const unsigned char *'   |-ParmVarDecl 0x136026758 <line:4:10, col:14> col:14 opsize 'int'   `-CompoundStmt 0x1360269b0 <line:5:1, line:14:1> ","20686":"`-FunctionDecl 0x10700ddf0  line:1:6 invalid state_mark_attach 'void (int *)'   |-ParmVarDecl 0x10700dd28 <col:25, col:32> col:32 invalid s 'int *'   `-CompoundStmt 0x10700e380 <line:2:1, line:5:1>     `-IfStmt 0x10700e360 <line:3:3, line:4:36>       |-RecoveryExpr 0x10700e188 <line:3:7, col:59> '_Bool' contains-errors       `-CallExpr 0x10700e330 <line:4:5, col:36> '<dependent type>' contains-errors         |-DeclRefExpr 0x10700e288 <col:5> 'int ()' Function 0x10700e1d0 'state_puts' 'int ()'         |-RecoveryExpr 0x10700e310 <col:17> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x10700e2c0 <col:35> '<dependent type>' contains-errors lvalue ","21080":"`-FunctionDecl 0x13b128598  line:1:1 invalid ews_config_utils_try_credentials_sync 'int (int *, int *, const int *, int *, int, int *, int **)'   |-ParmVarDecl 0x13b128128 <col:40, col:62> col:62 invalid prompter 'int *'   |-ParmVarDecl 0x13b1281a8 <line:2:12, col:21> col:21 invalid source 'int *'   |-ParmVarDecl 0x13b128228 <line:3:12, col:36> col:36 invalid credentials 'const int *'   |-ParmVarDecl 0x13b1282a8 <line:4:12, col:22> col:22 invalid out_authenticated 'int *'   |-ParmVarDecl 0x13b128328 <line:5:12, col:21> col:21 invalid user_data 'int'   |-ParmVarDecl 0x13b1283a8 <line:6:12, col:26> col:26 invalid cancellable 'int *'   |-ParmVarDecl 0x13b128460 <line:7:12, col:21> col:21 invalid error 'int **'   `-CompoundStmt 0x13b80a3a8 <line:8:1, line:37:1>     |-DeclStmt 0x13b128730 <line:11:2, col:16>     | `-VarDecl 0x13b1286c8 <col:2, col:9> col:9 used hosturl 'char *'     |-BinaryOperator 0x13b809838 <line:14:2, col:62> 'char *' contains-errors '='     | |-DeclRefExpr 0x13b128748 <col:2> 'char *' lvalue Var 0x13b1286c8 'hosturl' 'char *'     | `-CallExpr 0x13b809810 <col:12, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13b8096e0 <col:12> 'int ()' Function 0x13b809628 'camel_ews_settings_dup_hosturl' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x13b8097c8 <col:44, col:50> '<dependent type>' contains-errors lvalue ->ews_settings     |     `-RecoveryExpr 0x13b8097a8 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b809c88 <line:16:2, col:17> 'int'     | |-ImplicitCastExpr 0x13b809c70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13b809c00 <col:2> 'int ()' Function 0x13b809b48 'g_free' 'int ()'     | `-ImplicitCastExpr 0x13b809cb0 <col:10> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x13b809c20 <col:10> 'char *' lvalue Var 0x13b1286c8 'hosturl' 'char *'     `-IfStmt 0x13b80a378 <line:25:2, line:34:2> has_else       |-RecoveryExpr 0x13b809fc8 <line:25:6, col:21> '_Bool' contains-errors       |-CompoundStmt 0x13b80a038 <col:55, line:27:2>       `-IfStmt 0x13b80a348 <col:9, line:34:2> has_else         |-RecoveryExpr 0x13b80a048 <line:27:13, col:28> '_Bool' contains-errors         |-CompoundStmt 0x13b80a300 <col:62, line:31:2>         | `-CallExpr 0x13b80a2d8 <line:30:3, col:23> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x13b80a298 <col:3> 'int ()' Function 0x13b80a1e0 'g_clear_error' 'int ()'         |   `-RecoveryExpr 0x13b80a2b8 <col:18> '<dependent type>' contains-errors lvalue         `-CompoundStmt 0x13b80a338 <line:31:9, line:34:2> ","20511":"`-FunctionDecl 0x14f140be0  line:1:13 raw_sock_seq_show 'void (struct seq_file *, struct sock *, int)' static   |-ParmVarDecl 0x14f128648 <col:31, col:48> col:48 used seq 'struct seq_file *'   |-ParmVarDecl 0x14f140a28 <col:53, col:66> col:66 used sp 'struct sock *'   |-ParmVarDecl 0x14f140aa8 <col:70, col:74> col:74 used i 'int'   `-CompoundStmt 0x14f1445a8 <line:2:1, line:16:1>     |-DeclStmt 0x14f1410e8 <line:3:2, col:38>     | |-RecordDecl 0x14f140ce8 <col:2, col:9> col:9 struct inet_sock     | `-VarDecl 0x14f140e58 <col:2, col:37> col:20 inet 'struct inet_sock *' cinit     |   `-ImplicitCastExpr 0x14f1410b8 <col:27, col:37> 'struct inet_sock *' <IntegralToPointer>     |     `-CallExpr 0x14f141078 <col:27, col:37> 'int'     |       |-ImplicitCastExpr 0x14f141060 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14f140ff0 <col:27> 'int ()' Function 0x14f140f38 'inet_sk' 'int ()'     |       `-ImplicitCastExpr 0x14f1410a0 <col:35> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x14f141010 <col:35> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *'     `-CallExpr 0x14f1444f0 <line:9:2, line:15:62> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f1411e0 <line:9:2> 'int ()' Function 0x14f141128 'seq_printf' 'int ()'       |-DeclRefExpr 0x14f141200 <col:13> 'struct seq_file *' lvalue ParmVar 0x14f128648 'seq' 'struct seq_file *'       |-StringLiteral 0x14f141260 <col:18, line:10:3> 'char[7]' lvalue \"STRSTR\"       |-DeclRefExpr 0x14f141288 <line:11:3> 'int' lvalue ParmVar 0x14f140aa8 'i' 'int'       |-RecoveryExpr 0x14f144310 <col:6> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x14f144330 <col:11> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x14f144350 <col:17> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x14f144370 <col:23> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x14f141340 <col:30, col:34> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14f141308 <col:30> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *'       |-CallExpr 0x14f1443a8 <line:12:3, col:23> 'int'       | |-ImplicitCastExpr 0x14f144390 <col:3> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x14f141448 <col:3> 'int ()' Function 0x14f141390 'sk_wmem_alloc_get' 'int ()'       | `-ImplicitCastExpr 0x14f1443d0 <col:21> 'struct sock *' <LValueToRValue>       |   `-DeclRefExpr 0x14f141468 <col:21> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *'       |-CallExpr 0x14f144400 <line:13:3, col:23> 'int'       | |-ImplicitCastExpr 0x14f1443e8 <col:3> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x14f1415c0 <col:3> 'int ()' Function 0x14f141508 'sk_rmem_alloc_get' 'int ()'       | `-ImplicitCastExpr 0x14f144428 <col:21> 'struct sock *' <LValueToRValue>       |   `-DeclRefExpr 0x14f1415e0 <col:21> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *'       |-IntegerLiteral 0x14f141658 <line:14:3> 'int' 0       |-IntegerLiteral 0x14f141678 <col:6> 'long' 0       |-IntegerLiteral 0x14f141698 <col:10> 'int' 0       |-CallExpr 0x14f144458 <col:13, col:26> 'int'       | |-ImplicitCastExpr 0x14f144440 <col:13> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x14f141798 <col:13> 'int ()' Function 0x14f1416e0 'sock_i_uid' 'int ()'       | `-ImplicitCastExpr 0x14f144480 <col:24> 'struct sock *' <LValueToRValue>       |   `-DeclRefExpr 0x14f1417b8 <col:24> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *'       |-IntegerLiteral 0x14f141830 <col:29> 'int' 0       |-CallExpr 0x14f1444b0 <col:32, col:45> 'int'       | |-ImplicitCastExpr 0x14f144498 <col:32> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x14f141930 <col:32> 'int ()' Function 0x14f141878 'sock_i_ino' 'int ()'       | `-ImplicitCastExpr 0x14f1444d8 <col:43> 'struct sock *' <LValueToRValue>       |   `-DeclRefExpr 0x14f141950 <col:43> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *'       |-CallExpr 0x14f144150 <line:15:3, col:29> '<dependent type>' contains-errors       | |-DeclRefExpr 0x14f1440b8 <col:3> 'int ()' Function 0x14f144000 'atomic_read' 'int ()'       | `-UnaryOperator 0x14f144138 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x14f144110 <col:16, col:20> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x14f1440d8 <col:16> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *'       |-DeclRefExpr 0x14f144178 <col:32> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *'       `-CallExpr 0x14f144230 <col:36, col:61> '<dependent type>' contains-errors         |-DeclRefExpr 0x14f144198 <col:36> 'int ()' Function 0x14f144000 'atomic_read' 'int ()'         `-UnaryOperator 0x14f144218 <col:48, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x14f1441f0 <col:49, col:53> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14f1441b8 <col:49> 'struct sock *' lvalue ParmVar 0x14f140a28 'sp' 'struct sock *' ","20815":"`-FunctionDecl 0x139143ab8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x139143bb8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x139143c20 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x139143c88 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x139143b60 <<invalid sloc>> Implicit 900 ","21176":"`-FunctionDecl 0x13680e350  line:1:13 cil_reset_classpermission 'void (struct cil_classpermission *)' static   |-ParmVarDecl 0x13680e248 <col:39, col:67> col:67 used cp 'struct cil_classpermission *'   `-CompoundStmt 0x1368268f8 <line:2:1, line:8:1>     |-IfStmt 0x136826720 <line:3:2, line:5:2>     | |-BinaryOperator 0x1368266d8 <line:3:6, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x136826648 <col:6> 'struct cil_classpermission *' lvalue ParmVar 0x13680e248 'cp' 'struct cil_classpermission *'     | | `-RecoveryExpr 0x1368266b8 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136826708 <col:18, line:5:2>     |   `-ReturnStmt 0x1368266f8 <line:4:3>     `-CallExpr 0x1368268d0 <line:7:2, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x136826850 <col:2> 'int ()' Function 0x136826798 'cil_reset_classperms_list' 'int ()'       `-RecoveryExpr 0x1368268a8 <col:28, col:32> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x136826870 <col:28> 'struct cil_classpermission *' lvalue ParmVar 0x13680e248 'cp' 'struct cil_classpermission *' ","20709":"`-FunctionDecl 0x14c9420f0  col:22 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x14c9421f0 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x14c942198 <<invalid sloc>> Implicit 901 ","21195":"`-FunctionDecl 0x148808d28  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x148808e28 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x148808e90 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x148808ef8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x148808dd0 <<invalid sloc>> Implicit 882 ","20882":"`-FunctionDecl 0x13e0085c8  line:1:12 __netlink_create 'int (struct net *, struct socket *, struct mutex *, int)' static   |-ParmVarDecl 0x13d128648 <col:29, col:41> col:41 used net 'struct net *'   |-ParmVarDecl 0x13e008228 <col:46, col:61> col:61 used sock 'struct socket *'   |-ParmVarDecl 0x13e0083f8 <line:2:8, col:22> col:22 used cb_mutex 'struct mutex *'   |-ParmVarDecl 0x13e008478 <col:32, col:36> col:36 used protocol 'int'   `-CompoundStmt 0x13d1412f0 <line:3:1, line:30:1>     |-DeclStmt 0x13e0088c8 <line:4:2, col:17>     | |-RecordDecl 0x13e0086d8 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x13e008848 <col:2, col:15> col:15 used sk 'struct sock *'     |-DeclStmt 0x13e008ac8 <line:5:2, col:26>     | |-RecordDecl 0x13e0088e0 <col:2, col:9> col:9 struct netlink_sock     | `-VarDecl 0x13e008a48 <col:2, col:23> col:23 used nlk 'struct netlink_sock *'     |-BinaryOperator 0x13e008be0 <line:7:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13e008b18 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13e008ae0 <col:2> 'struct socket *' lvalue ParmVar 0x13e008228 'sock' 'struct socket *'     | `-UnaryOperator 0x13e008bc8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13e008ba8 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13e008ee8 <line:9:2, col:59> 'struct sock *' contains-errors '='     | |-DeclRefExpr 0x13e008c00 <col:2> 'struct sock *' lvalue Var 0x13e008848 'sk' 'struct sock *'     | `-CallExpr 0x13e008ea8 <col:7, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13e008d30 <col:7> 'int ()' Function 0x13e008c78 'sk_alloc' 'int ()'     |   |-DeclRefExpr 0x13e008d50 <col:16> 'struct net *' lvalue ParmVar 0x13d128648 'net' 'struct net *'     |   |-RecoveryExpr 0x13e008e30 <col:21> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x13e008e50 <col:33> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x13e008e90 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13e008e70 <col:46> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e009000 <line:10:2, line:11:11>     | |-UnaryOperator 0x13e008f40 <line:10:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e008f28 <col:7> 'struct sock *' <LValueToRValue>     | |   `-DeclRefExpr 0x13e008f08 <col:7> 'struct sock *' lvalue Var 0x13e008848 'sk' 'struct sock *'     | `-ReturnStmt 0x13e008ff0 <line:11:3, col:11>     |   `-UnaryOperator 0x13e008fd8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13e008fc0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13e008fa0 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e0091a8 <line:13:2, col:25> 'int'     | |-ImplicitCastExpr 0x13e009190 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e009100 <col:2> 'int ()' Function 0x13e009048 'sock_init_data' 'int ()'     | |-ImplicitCastExpr 0x13e0091d8 <col:17> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x13e009120 <col:17> 'struct socket *' lvalue ParmVar 0x13e008228 'sock' 'struct socket *'     | `-ImplicitCastExpr 0x13d140a00 <col:23> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x13e009140 <col:23> 'struct sock *' lvalue Var 0x13e008848 'sk' 'struct sock *'     |-BinaryOperator 0x13d140bc8 <line:15:2, col:17> 'struct netlink_sock *' '='     | |-DeclRefExpr 0x13d140a18 <col:2> 'struct netlink_sock *' lvalue Var 0x13e008a48 'nlk' 'struct netlink_sock *'     | `-ImplicitCastExpr 0x13d140bb0 <col:8, col:17> 'struct netlink_sock *' <IntegralToPointer>     |   `-CallExpr 0x13d140b70 <col:8, col:17> 'int'     |     |-ImplicitCastExpr 0x13d140b58 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13d140b18 <col:8> 'int ()' Function 0x13d140a60 'nlk_sk' 'int ()'     |     `-ImplicitCastExpr 0x13d140b98 <col:15> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x13d140b38 <col:15> 'struct sock *' lvalue Var 0x13e008848 'sk' 'struct sock *'     |-IfStmt 0x13d140f78 <line:16:2, line:21:2> has_else     | |-ImplicitCastExpr 0x13d140c08 <line:16:6> 'struct mutex *' <LValueToRValue>     | | `-DeclRefExpr 0x13d140be8 <col:6> 'struct mutex *' lvalue ParmVar 0x13e0083f8 'cb_mutex' 'struct mutex *'     | |-CompoundStmt 0x13d140cc0 <col:16, line:18:2>     | | `-BinaryOperator 0x13d140ca0 <line:17:3, col:19> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x13d140c58 <col:3, col:8> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x13d140c20 <col:3> 'struct netlink_sock *' lvalue Var 0x13e008a48 'nlk' 'struct netlink_sock *'     | |   `-DeclRefExpr 0x13d140c80 <col:19> 'struct mutex *' lvalue ParmVar 0x13e0083f8 'cb_mutex' 'struct mutex *'     | `-CompoundStmt 0x13d140f58 <line:18:9, line:21:2>     |   |-BinaryOperator 0x13d140db0 <line:19:3, col:25> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13d140d10 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13d140cd8 <col:3> 'struct netlink_sock *' lvalue Var 0x13e008a48 'nlk' 'struct netlink_sock *'     |   | `-UnaryOperator 0x13d140d98 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x13d140d70 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13d140d38 <col:20> 'struct netlink_sock *' lvalue Var 0x13e008a48 'nlk' 'struct netlink_sock *'     |   `-CallExpr 0x13d140f30 <line:20:3, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13d140eb0 <col:3> 'int ()' Function 0x13d140df8 'mutex_init' 'int ()'     |     `-RecoveryExpr 0x13d140f08 <col:14, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d140ed0 <col:14> 'struct netlink_sock *' lvalue Var 0x13e008a48 'nlk' 'struct netlink_sock *'     |-CallExpr 0x13d141120 <line:22:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d141088 <col:2> 'int ()' Function 0x13d140fd0 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x13d141108 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d1410e0 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d1410a8 <col:23> 'struct netlink_sock *' lvalue Var 0x13e008a48 'nlk' 'struct netlink_sock *'     |-BinaryOperator 0x13d141200 <line:27:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13d141180 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d141148 <col:2> 'struct sock *' lvalue Var 0x13e008848 'sk' 'struct sock *'     | `-RecoveryExpr 0x13d1411e0 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d1412a0 <line:28:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13d141258 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d141220 <col:2> 'struct sock *' lvalue Var 0x13e008848 'sk' 'struct sock *'     | `-DeclRefExpr 0x13d141280 <col:20> 'int' lvalue ParmVar 0x13e008478 'protocol' 'int'     `-ReturnStmt 0x13d1412e0 <line:29:2, col:9>       `-IntegerLiteral 0x13d1412c0 <col:9> 'int' 0 ","20362":"`-FunctionDecl 0x12c8266b8  line:1:24 dequeue_head 'struct sk_buff *(struct wdrr_bucket *)' static   |-ParmVarDecl 0x12c80e2e8 <col:37, col:57> col:57 used bucket 'struct wdrr_bucket *'   `-CompoundStmt 0x12c826c30 <line:2:1, line:8:1>     |-DeclStmt 0x12c826900 <line:3:2, col:36>     | `-VarDecl 0x12c826838 <col:2, col:32> col:18 used skb 'struct sk_buff *' cinit     |   `-RecoveryExpr 0x12c8268d8 <col:24, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c8268a0 <col:24> 'struct wdrr_bucket *' lvalue ParmVar 0x12c80e2e8 'bucket' 'struct wdrr_bucket *'     |-BinaryOperator 0x12c8269d8 <line:5:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12c826950 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12c826918 <col:2> 'struct wdrr_bucket *' lvalue ParmVar 0x12c80e2e8 'bucket' 'struct wdrr_bucket *'     | `-RecoveryExpr 0x12c8269b0 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c826978 <col:17> 'struct sk_buff *' contains-errors lvalue Var 0x12c826838 'skb' 'struct sk_buff *'     |-CallExpr 0x12c826ba8 <line:6:2, col:26> 'int' contains-errors     | |-ImplicitCastExpr 0x12c826b90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c826b20 <col:2> 'int ()' Function 0x12c826a68 'skb_mark_not_on_list' 'int ()'     | `-ImplicitCastExpr 0x12c826bd0 <col:23> 'struct sk_buff *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12c826b40 <col:23> 'struct sk_buff *' contains-errors lvalue Var 0x12c826838 'skb' 'struct sk_buff *'     `-ReturnStmt 0x12c826c20 <line:7:2, col:9>       `-ImplicitCastExpr 0x12c826c08 <col:9> 'struct sk_buff *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x12c826be8 <col:9> 'struct sk_buff *' contains-errors lvalue Var 0x12c826838 'skb' 'struct sk_buff *' ","21004":"`-FunctionDecl 0x15c82b110  col:33 implicit used floor 'double (double)' extern   |-ParmVarDecl 0x15c82b210 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x15c82b1b8 <<invalid sloc>> Implicit 1079   |-NoThrowAttr 0x15c82b280 <col:33> Implicit   `-ConstAttr 0x15c82b2a8 <col:33> Implicit ","20591":"`-FunctionDecl 0x14480de88  line:1:1 invalid bytes_lstrip 'int (int *, int *)'   |-ParmVarDecl 0x14480dd28 <col:14, col:29> col:29 invalid self 'int *'   |-ParmVarDecl 0x14480dda8 <col:35, col:45> col:45 invalid args 'int *'   `-CompoundStmt 0x144827948 <line:2:1, line:7:1>     `-IfStmt 0x144827918 <line:3:5, line:6:49> has_else       |-BinaryOperator 0x14480e128 <line:3:9, col:35> 'int' contains-errors '=='       | |-CallExpr 0x14480e0e0 <col:9, col:30> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x14480e0a0 <col:9> 'int ()' Function 0x14480dfe8 'PyTuple_GET_SIZE' 'int ()'       | | `-RecoveryExpr 0x14480e0c0 <col:26> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x14480e108 <col:35> 'int' 0       |-ReturnStmt 0x14480e300 <line:4:9, col:40>       | `-CallExpr 0x14480e2d0 <col:16, col:40> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14480e228 <col:16> 'int ()' Function 0x14480e170 'do_strip' 'int ()'       |   |-RecoveryExpr 0x14480e248 <col:25> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14480e2b0 <col:31> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x144827908 <line:6:9, col:49>         `-CallExpr 0x1448278d0 <col:16, col:49> '<dependent type>' contains-errors           |-DeclRefExpr 0x144827800 <col:16> 'int ()' Function 0x14480e338 'do_argstrip' 'int ()'           |-RecoveryExpr 0x144827820 <col:28> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x1448278b0 <col:34> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x144827858 <col:45> '<dependent type>' contains-errors lvalue ","20779":"`-FunctionDecl 0x146107088  line:1:1 invalid get_user_var_name 'int (int *, int)'   |-ParmVarDecl 0x146106f28 <col:19, col:29> col:29 invalid xp 'int *'   |-ParmVarDecl 0x146106fa8 <col:33, col:37> col:37 used idx 'int'   `-CompoundStmt 0x14500a090 <line:2:1, line:87:1>     |-DeclStmt 0x1461071c0 <line:3:5, col:24>     | `-VarDecl 0x146107158 <col:5, col:19> col:19 used gdone 'long' static     |-DeclStmt 0x146107258 <line:4:5, col:24>     | `-VarDecl 0x1461071f0 <col:5, col:19> col:19 used bdone 'long' static     |-DeclStmt 0x1461072f0 <line:5:5, col:24>     | `-VarDecl 0x146107288 <col:5, col:19> col:19 used wdone 'long' static     |-DeclStmt 0x146107388 <line:6:5, col:24>     | `-VarDecl 0x146107320 <col:5, col:19> col:19 used tdone 'long' static     |-DeclStmt 0x146107420 <line:7:5, col:21>     | `-VarDecl 0x1461073b8 <col:5, col:17> col:17 used vidx 'int' static     |-DeclStmt 0x1461074b8 <line:8:5, col:26>     | `-VarDecl 0x146107450 <col:5, col:24> col:24 referenced invalid hi 'int *' static     |-IfStmt 0x146120730 <line:11:5, line:15:5>     | |-BinaryOperator 0x146107540 <line:11:9, col:16> 'int' '=='     | | |-ImplicitCastExpr 0x146107528 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1461074e8 <col:9> 'int' lvalue ParmVar 0x146106fa8 'idx' 'int'     | | `-IntegerLiteral 0x146107508 <col:16> 'int' 0     | `-CompoundStmt 0x146120710 <line:12:5, line:15:5>     |   |-BinaryOperator 0x146120678 <line:13:2, col:33> 'long' '='     |   | |-DeclRefExpr 0x146107560 <col:2> 'long' lvalue Var 0x146107158 'gdone' 'long'     |   | `-BinaryOperator 0x146120658 <col:10, col:33> 'long' '='     |   |   |-DeclRefExpr 0x146107580 <col:10> 'long' lvalue Var 0x1461071f0 'bdone' 'long'     |   |   `-BinaryOperator 0x146120638 <col:18, col:33> 'long' '='     |   |     |-DeclRefExpr 0x1461075a0 <col:18> 'long' lvalue Var 0x146107288 'wdone' 'long'     |   |     `-ImplicitCastExpr 0x146120620 <col:26, col:33> 'long' <IntegralCast>     |   |       `-BinaryOperator 0x146120600 <col:26, col:33> 'int' '='     |   |         |-DeclRefExpr 0x1461075c0 <col:26> 'int' lvalue Var 0x1461073b8 'vidx' 'int'     |   |         `-IntegerLiteral 0x1461075e0 <col:33> 'int' 0     |   `-BinaryOperator 0x1461206f0 <line:14:2, col:10> 'long' '='     |     |-DeclRefExpr 0x146120698 <col:2> 'long' lvalue Var 0x146107320 'tdone' 'long'     |     `-ImplicitCastExpr 0x1461206d8 <col:10> 'long' <IntegralCast>     |       `-IntegerLiteral 0x1461206b8 <col:10> 'int' 0     |-IfStmt 0x1461211c8 <line:18:5, line:29:5>     | |-BinaryOperator 0x146120858 <line:18:9, col:27> 'int' contains-errors '<'     | | |-DeclRefExpr 0x146120750 <col:9> 'long' lvalue Var 0x146107158 'gdone' 'long'     | | `-CXXDependentScopeMemberExpr 0x146120810 <col:17, col:27> '<dependent type>' contains-errors lvalue .ht_used     | |   `-RecoveryExpr 0x1461207f0 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x146121198 <line:19:5, line:29:5>     |   |-IfStmt 0x146120a90 <line:20:2, line:23:8> has_else     |   | |-BinaryOperator 0x1461208e8 <line:20:6, col:17> 'int' '=='     |   | | |-UnaryOperator 0x146120898 <col:6, col:11> 'long' postfix '++'     |   | | | `-DeclRefExpr 0x146120878 <col:6> 'long' lvalue Var 0x146107158 'gdone' 'long'     |   | | `-ImplicitCastExpr 0x1461208d0 <col:17> 'long' <IntegralCast>     |   | |   `-IntegerLiteral 0x1461208b0 <col:17> 'int' 0     |   | |-BinaryOperator 0x146120a38 <line:21:6, col:21> '<dependent type>' contains-errors '='     |   | | |-RecoveryExpr 0x146120928 <col:6> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x146120908 <col:6> 'int *' lvalue Var 0x146107450 'hi' 'int *'     |   | | `-CXXDependentScopeMemberExpr 0x1461209f0 <col:11, col:21> '<dependent type>' contains-errors lvalue .ht_array     |   | |   `-RecoveryExpr 0x1461209d0 <col:11> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x146120a78 <line:23:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow     |   |   `-RecoveryExpr 0x146120a58 <col:8> '<dependent type>' contains-errors lvalue     |   |-WhileStmt 0x146120cc0 <line:24:2, line:25:8>     |   | |-CallExpr 0x146120c60 <line:24:9, col:26> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x146120c20 <col:9> 'int ()' Function 0x146120b68 'HASHITEM_EMPTY' 'int ()'     |   | | `-RecoveryExpr 0x146120c40 <col:24> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x146120ca8 <line:25:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow     |   |   `-RecoveryExpr 0x146120c88 <col:8> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x146121100 <line:26:2, line:27:47>     |   | |-BinaryOperator 0x146120f20 <line:26:6, col:43> 'int' contains-errors '=='     |   | | |-CallExpr 0x146120ec8 <col:6, col:38> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x146120dc0 <col:6> 'int ()' Function 0x146120d08 'STRNCMP' 'int ()'     |   | | | |-StringLiteral 0x146120e20 <col:14> 'char[4]' lvalue \"STR\"     |   | | | |-CXXDependentScopeMemberExpr 0x146120e60 <col:21, col:25> '<dependent type>' contains-errors lvalue ->xp_pattern     |   | | | | `-RecoveryExpr 0x146120e40 <col:21> '<dependent type>' contains-errors lvalue     |   | | | `-IntegerLiteral 0x146120ea8 <col:37> 'int' 2     |   | | `-IntegerLiteral 0x146120f00 <col:43> 'int' 0     |   | `-ReturnStmt 0x1461210f0 <line:27:6, col:47>     |   |   `-CallExpr 0x1461210c0 <col:13, col:47> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x146121020 <col:13> 'int ()' Function 0x146120f68 'cat_prefix_varname' 'int ()'     |   |     |-CharacterLiteral 0x146121040 <col:32> 'int' 103     |   |     `-CXXDependentScopeMemberExpr 0x146121078 <col:37, col:41> '<dependent type>' contains-errors lvalue ->hi_key     |   |       `-RecoveryExpr 0x146121058 <col:37> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x146121188 <line:28:2, col:13>     |     `-CXXDependentScopeMemberExpr 0x146121140 <col:9, col:13> '<dependent type>' contains-errors lvalue ->hi_key     |       `-RecoveryExpr 0x146121120 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1450097f8 <line:38:5, line:47:5>     | |-BinaryOperator 0x1461213b0 <line:38:9, col:21> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1461212a8 <col:9> 'long' lvalue Var 0x1461071f0 'bdone' 'long'     | | `-CXXDependentScopeMemberExpr 0x146121368 <col:17, col:21> '<dependent type>' contains-errors lvalue ->ht_used     | |   `-RecoveryExpr 0x146121348 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1450097d0 <line:39:5, line:47:5>     |   |-IfStmt 0x145009600 <line:40:2, line:43:8> has_else     |   | |-BinaryOperator 0x146121440 <line:40:6, col:17> 'int' '=='     |   | | |-UnaryOperator 0x1461213f0 <col:6, col:11> 'long' postfix '++'     |   | | | `-DeclRefExpr 0x1461213d0 <col:6> 'long' lvalue Var 0x1461071f0 'bdone' 'long'     |   | | `-ImplicitCastExpr 0x146121428 <col:17> 'long' <IntegralCast>     |   | |   `-IntegerLiteral 0x146121408 <col:17> 'int' 0     |   | |-BinaryOperator 0x146121590 <line:41:6, col:15> '<dependent type>' contains-errors '='     |   | | |-RecoveryExpr 0x146121480 <col:6> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x146121460 <col:6> 'int *' lvalue Var 0x146107450 'hi' 'int *'     |   | | `-CXXDependentScopeMemberExpr 0x146121548 <col:11, col:15> '<dependent type>' contains-errors lvalue ->ht_array     |   | |   `-RecoveryExpr 0x146121528 <col:11> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1461215d0 <line:43:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow     |   |   `-RecoveryExpr 0x1461215b0 <col:8> '<dependent type>' contains-errors lvalue     |   |-WhileStmt 0x1450096d0 <line:44:2, line:45:8>     |   | |-CallExpr 0x145009670 <line:44:9, col:26> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x145009630 <col:9> 'int ()' Function 0x146120b68 'HASHITEM_EMPTY' 'int ()'     |   | | `-RecoveryExpr 0x145009650 <col:24> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1450096b8 <line:45:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow     |   |   `-RecoveryExpr 0x145009698 <col:8> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1450097c0 <line:46:2, col:43>     |     `-CallExpr 0x145009790 <col:9, col:43> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1450096f0 <col:9> 'int ()' Function 0x146120f68 'cat_prefix_varname' 'int ()'     |       |-CharacterLiteral 0x145009710 <col:28> 'int' 98     |       `-CXXDependentScopeMemberExpr 0x145009748 <col:33, col:37> '<dependent type>' contains-errors lvalue ->hi_key     |         `-RecoveryExpr 0x145009728 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145009b68 <line:56:5, line:65:5>     | |-RecoveryExpr 0x145009838 <line:56:9, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x145009b40 <line:57:5, line:65:5>     |   |-IfStmt 0x145009970 <line:58:2, line:61:8> has_else     |   | |-BinaryOperator 0x1450098c8 <line:58:6, col:17> 'int' '=='     |   | | |-UnaryOperator 0x145009878 <col:6, col:11> 'long' postfix '++'     |   | | | `-DeclRefExpr 0x145009858 <col:6> 'long' lvalue Var 0x146107288 'wdone' 'long'     |   | | `-ImplicitCastExpr 0x1450098b0 <col:17> 'long' <IntegralCast>     |   | |   `-IntegerLiteral 0x145009890 <col:17> 'int' 0     |   | |-NullStmt 0x145009968 <line:59:6>     |   | `-UnaryOperator 0x145009950 <line:61:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow     |   |   `-RecoveryExpr 0x145009930 <col:8> '<dependent type>' contains-errors lvalue     |   |-WhileStmt 0x145009a40 <line:62:2, line:63:8>     |   | |-CallExpr 0x1450099e0 <line:62:9, col:26> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1450099a0 <col:9> 'int ()' Function 0x146120b68 'HASHITEM_EMPTY' 'int ()'     |   | | `-RecoveryExpr 0x1450099c0 <col:24> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x145009a28 <line:63:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow     |   |   `-RecoveryExpr 0x145009a08 <col:8> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x145009b30 <line:64:2, col:43>     |     `-CallExpr 0x145009b00 <col:9, col:43> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x145009a60 <col:9> 'int ()' Function 0x146120f68 'cat_prefix_varname' 'int ()'     |       |-CharacterLiteral 0x145009a80 <col:28> 'int' 119     |       `-CXXDependentScopeMemberExpr 0x145009ab8 <col:33, col:37> '<dependent type>' contains-errors lvalue ->hi_key     |         `-RecoveryExpr 0x145009a98 <col:33> '<dependent type>' contains-errors lvalue     `-IfStmt 0x145009ed8 <line:69:5, line:78:5>       |-RecoveryExpr 0x145009ba8 <line:69:9, col:21> '_Bool' contains-errors       `-CompoundStmt 0x145009eb0 <line:70:5, line:78:5>         |-IfStmt 0x145009ce0 <line:71:2, line:74:8> has_else         | |-BinaryOperator 0x145009c38 <line:71:6, col:17> 'int' '=='         | | |-UnaryOperator 0x145009be8 <col:6, col:11> 'long' postfix '++'         | | | `-DeclRefExpr 0x145009bc8 <col:6> 'long' lvalue Var 0x146107320 'tdone' 'long'         | | `-ImplicitCastExpr 0x145009c20 <col:17> 'long' <IntegralCast>         | |   `-IntegerLiteral 0x145009c00 <col:17> 'int' 0         | |-NullStmt 0x145009cd8 <line:72:6>         | `-UnaryOperator 0x145009cc0 <line:74:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow         |   `-RecoveryExpr 0x145009ca0 <col:8> '<dependent type>' contains-errors lvalue         |-WhileStmt 0x145009db0 <line:75:2, line:76:8>         | |-CallExpr 0x145009d50 <line:75:9, col:26> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x145009d10 <col:9> 'int ()' Function 0x146120b68 'HASHITEM_EMPTY' 'int ()'         | | `-RecoveryExpr 0x145009d30 <col:24> '<dependent type>' contains-errors lvalue         | `-UnaryOperator 0x145009d98 <line:76:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow         |   `-RecoveryExpr 0x145009d78 <col:8> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x145009ea0 <line:77:2, col:43>           `-CallExpr 0x145009e70 <col:9, col:43> '<dependent type>' contains-errors             |-DeclRefExpr 0x145009dd0 <col:9> 'int ()' Function 0x146120f68 'cat_prefix_varname' 'int ()'             |-CharacterLiteral 0x145009df0 <col:28> 'int' 116             `-CXXDependentScopeMemberExpr 0x145009e28 <col:33, col:37> '<dependent type>' contains-errors lvalue ->hi_key               `-RecoveryExpr 0x145009e08 <col:33> '<dependent type>' contains-errors lvalue ","20826":"`-FunctionDecl 0x12a1419a8  line:1:12 invalid compare_ts_with_wrapdetect 'int (int, struct playlist *, int, struct playlist *)' static   |-ParmVarDecl 0x12a1280f0 <col:39, col:47> col:47 invalid ts_a 'int'   |-ParmVarDecl 0x12a1286e8 <col:53, col:70> col:70 pls_a 'struct playlist *'   |-ParmVarDecl 0x12a128768 <line:2:39, col:47> col:47 invalid ts_b 'int'   |-ParmVarDecl 0x12a141858 <col:53, col:70> col:70 pls_b 'struct playlist *'   `-CompoundStmt 0x12a141d40 <line:3:1, line:8:1>     `-ReturnStmt 0x12a141d30 <line:7:5, col:62>       `-CallExpr 0x12a141cf8 <col:12, col:62> '<dependent type>' contains-errors         |-DeclRefExpr 0x12a141bd0 <col:12> 'int ()' Function 0x12a141b18 'av_compare_mod' 'int ()'         |-RecoveryExpr 0x12a141cb8 <col:27> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12a141cd8 <col:40> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x12a141c60 <col:53, col:60> 'long long' '<<'           |-IntegerLiteral 0x12a141c20 <col:53> 'long long' 1           `-IntegerLiteral 0x12a141c40 <col:60> 'int' 33 ","20852":"`-FunctionDecl 0x154827c00  col:9 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x154827d00 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x154827d68 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x154827dd0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x154827ca8 <<invalid sloc>> Implicit 900 ","20482":"`-FunctionDecl 0x151128750  line:1:13 coerce_reg_to_32 'void (struct bpf_reg_state *)' static   |-ParmVarDecl 0x151128648 <col:30, col:52> col:52 used reg 'struct bpf_reg_state *'   `-CompoundStmt 0x151140e68 <line:2:1, line:7:1>     |-BinaryOperator 0x151140ca0 <line:4:2, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x151140a80 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151140a48 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x151128648 'reg' 'struct bpf_reg_state *'     | `-CallExpr 0x151140c70 <col:17, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151140bd0 <col:17> 'int ()' Function 0x151140b18 'tnum_cast' 'int ()'     |   |-RecoveryExpr 0x151140c28 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x151140bf0 <col:27> 'struct bpf_reg_state *' lvalue ParmVar 0x151128648 'reg' 'struct bpf_reg_state *'     |   `-IntegerLiteral 0x151140c50 <col:41> 'int' 4     `-CallExpr 0x151140e28 <line:6:2, col:25> 'int'       |-ImplicitCastExpr 0x151140e10 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x151140da0 <col:2> 'int ()' Function 0x151140ce8 '__update_reg_bounds' 'int ()'       `-ImplicitCastExpr 0x151140e50 <col:22> 'struct bpf_reg_state *' <LValueToRValue>         `-DeclRefExpr 0x151140dc0 <col:22> 'struct bpf_reg_state *' lvalue ParmVar 0x151128648 'reg' 'struct bpf_reg_state *' ","21155":"`-FunctionDecl 0x128940a00  line:1:12 atalk_seq_socket_show 'int (struct seq_file *, void *)' static   |-ParmVarDecl 0x128928648 <col:34, col:51> col:51 used seq 'struct seq_file *'   |-ParmVarDecl 0x1289286c8 <col:56, col:62> col:62 used v 'void *'   `-CompoundStmt 0x129008b48 <line:2:1, line:25:1>     |-DeclStmt 0x128940ce8 <line:3:2, col:16>     | |-RecordDecl 0x128940b00 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x128940c68 <col:2, col:15> col:15 used s 'struct sock *'     |-DeclStmt 0x128940ee8 <line:4:2, col:23>     | |-RecordDecl 0x128940d00 <col:2, col:9> col:9 struct atalk_sock     | `-VarDecl 0x128940e68 <col:2, col:21> col:21 used at 'struct atalk_sock *'     |-IfStmt 0x1289412a0 <line:6:2, line:10:2>     | |-BinaryOperator 0x128940f90 <line:6:6, col:11> 'int' contains-errors '=='     | | |-DeclRefExpr 0x128940f00 <col:6> 'void *' lvalue ParmVar 0x1289286c8 'v' 'void *'     | | `-RecoveryExpr 0x128940f70 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x128941280 <col:28, line:10:2>     |   |-CallExpr 0x1289411b8 <line:7:3, line:8:10> 'int'     |   | |-ImplicitCastExpr 0x1289411a0 <line:7:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1289410c0 <col:3> 'int ()' Function 0x128941008 'seq_printf' 'int ()'     |   | |-ImplicitCastExpr 0x1289411e8 <col:14> 'struct seq_file *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1289410e0 <col:14> 'struct seq_file *' lvalue ParmVar 0x128928648 'seq' 'struct seq_file *'     |   | `-ImplicitCastExpr 0x128941200 <col:19, line:8:5> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x128941140 <line:7:19, line:8:5> 'char[7]' lvalue \"STRSTR\"     |   `-GotoStmt 0x128941268 <line:9:3, col:8> 'out' 0x128941218     |-BinaryOperator 0x128941470 <line:12:2, col:16> 'struct sock *' '='     | |-DeclRefExpr 0x1289412c0 <col:2> 'struct sock *' lvalue Var 0x128940c68 's' 'struct sock *'     | `-ImplicitCastExpr 0x128941458 <col:6, col:16> 'struct sock *' <IntegralToPointer>     |   `-CallExpr 0x128941418 <col:6, col:16> 'int'     |     |-ImplicitCastExpr 0x128941400 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1289413c0 <col:6> 'int ()' Function 0x128941308 'sk_entry' 'int ()'     |     `-ImplicitCastExpr 0x128941440 <col:15> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x1289413e0 <col:15> 'void *' lvalue ParmVar 0x1289286c8 'v' 'void *'     |-BinaryOperator 0x128941640 <line:13:2, col:14> 'struct atalk_sock *' '='     | |-DeclRefExpr 0x128941490 <col:2> 'struct atalk_sock *' lvalue Var 0x128940e68 'at' 'struct atalk_sock *'     | `-ImplicitCastExpr 0x128941628 <col:7, col:14> 'struct atalk_sock *' <IntegralToPointer>     |   `-CallExpr 0x1289415e8 <col:7, col:14> 'int'     |     |-ImplicitCastExpr 0x1289415d0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x128941590 <col:7> 'int ()' Function 0x1289414d8 'at_sk' 'int ()'     |     `-ImplicitCastExpr 0x128941610 <col:13> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x1289415b0 <col:13> 'struct sock *' lvalue Var 0x128940c68 's' 'struct sock *'     |-CallExpr 0x129008a70 <line:15:2, line:22:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128941660 <line:15:2> 'int ()' Function 0x128941008 'seq_printf' 'int ()'     | |-DeclRefExpr 0x128941680 <col:13> 'struct seq_file *' lvalue ParmVar 0x128928648 'seq' 'struct seq_file *'     | |-StringLiteral 0x1289416a0 <col:18, line:16:4> 'char[7]' lvalue \"STRSTR\"     | |-RecoveryExpr 0x128941700 <line:17:6, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1289416c8 <col:6> 'struct sock *' lvalue Var 0x128940c68 's' 'struct sock *'     | |-CallExpr 0x128941888 <col:18, col:35> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x128941808 <col:18> 'int ()' Function 0x128941750 'ntohs' 'int ()'     | | `-RecoveryExpr 0x128941860 <col:24, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x128941828 <col:24> 'struct atalk_sock *' lvalue Var 0x128940e68 'at' 'struct atalk_sock *'     | |-RecoveryExpr 0x1289418e8 <col:38, col:42> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1289418b0 <col:38> 'struct atalk_sock *' lvalue Var 0x128940e68 'at' 'struct atalk_sock *'     | |-RecoveryExpr 0x128941948 <col:52, col:56> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x128941910 <col:52> 'struct atalk_sock *' lvalue Var 0x128940e68 'at' 'struct atalk_sock *'     | |-CallExpr 0x129008200 <line:18:6, col:24> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x128941970 <col:6> 'int ()' Function 0x128941750 'ntohs' 'int ()'     | | `-RecoveryExpr 0x1289419c8 <col:12, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x128941990 <col:12> 'struct atalk_sock *' lvalue Var 0x128940e68 'at' 'struct atalk_sock *'     | |-RecoveryExpr 0x129008260 <col:27, col:31> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x129008228 <col:27> 'struct atalk_sock *' lvalue Var 0x128940e68 'at' 'struct atalk_sock *'     | |-RecoveryExpr 0x1290082c0 <col:42, col:46> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x129008288 <col:42> 'struct atalk_sock *' lvalue Var 0x128940e68 'at' 'struct atalk_sock *'     | |-CallExpr 0x129008420 <line:19:6, col:25> 'int'     | | |-ImplicitCastExpr 0x129008408 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1290083c8 <col:6> 'int ()' Function 0x129008310 'sk_wmem_alloc_get' 'int ()'     | | `-ImplicitCastExpr 0x129008448 <col:24> 'struct sock *' <LValueToRValue>     | |   `-DeclRefExpr 0x1290083e8 <col:24> 'struct sock *' lvalue Var 0x128940c68 's' 'struct sock *'     | |-CallExpr 0x129008598 <line:20:6, col:25> 'int'     | | |-ImplicitCastExpr 0x129008580 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x129008540 <col:6> 'int ()' Function 0x129008488 'sk_rmem_alloc_get' 'int ()'     | | `-ImplicitCastExpr 0x1290085c0 <col:24> 'struct sock *' <LValueToRValue>     | |   `-DeclRefExpr 0x129008560 <col:24> 'struct sock *' lvalue Var 0x128940c68 's' 'struct sock *'     | |-RecoveryExpr 0x129008610 <line:21:6, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1290085d8 <col:6> 'struct sock *' lvalue Var 0x128940c68 's' 'struct sock *'     | `-CallExpr 0x129008a40 <line:22:6, col:54> 'int'     |   |-ImplicitCastExpr 0x129008a28 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x129008718 <col:6> 'int ()' Function 0x129008660 'from_kuid_munged' 'int ()'     |   |-CallExpr 0x129008870 <col:23, col:38> 'int'     |   | |-ImplicitCastExpr 0x129008858 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x129008818 <col:23> 'int ()' Function 0x129008760 'seq_user_ns' 'int ()'     |   | `-ImplicitCastExpr 0x129008898 <col:35> 'struct seq_file *' <LValueToRValue>     |   |   `-DeclRefExpr 0x129008838 <col:35> 'struct seq_file *' lvalue ParmVar 0x128928648 'seq' 'struct seq_file *'     |   `-CallExpr 0x1290089e8 <col:41, col:53> 'int'     |     |-ImplicitCastExpr 0x1290089d0 <col:41> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x129008990 <col:41> 'int ()' Function 0x1290088d8 'sock_i_uid' 'int ()'     |     `-ImplicitCastExpr 0x129008a10 <col:52> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x1290089b0 <col:52> 'struct sock *' lvalue Var 0x128940c68 's' 'struct sock *'     `-LabelStmt 0x129008b28 <line:23:1, line:24:9> 'out'       `-ReturnStmt 0x129008b18 <col:2, col:9>         `-IntegerLiteral 0x129008af8 <col:9> 'int' 0 ","20910":"`-FunctionDecl 0x156925e88  line:1:12 sctp_getsockopt_adaptation_layer 'int (struct sock *, int, char)' static   |-ParmVarDecl 0x160010048 <col:45, col:58> col:58 used sk 'struct sock *'   |-ParmVarDecl 0x1600100c8 <col:62, col:66> col:66 used len 'int'   |-ParmVarDecl 0x160010140 <line:2:7, col:12> col:12 __user 'char'   `-CompoundStmt 0x156926838 <line:3:1, line:14:1>     |-DeclStmt 0x156926108 <line:4:2, col:38>     | |-RecordDecl 0x156925f90 <col:2, col:9> col:9 struct sctp_setadaptation     | `-VarDecl 0x156926088 <col:2, col:28> col:28 referenced invalid adaptation 'struct sctp_setadaptation'     |-IfStmt 0x156926270 <line:6:2, line:7:11>     | |-RecoveryExpr 0x156926190 <line:6:6, col:45> '_Bool' contains-errors     | `-ReturnStmt 0x156926260 <line:7:3, col:11>     |   `-UnaryOperator 0x156926248 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x156926230 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x156926210 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x156926520 <line:9:2, col:47> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1569262d8 <col:2, col:13> '<dependent type>' contains-errors lvalue .ssb_adaptation_ind     | | `-RecoveryExpr 0x1569262b0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x156926290 <col:2> 'struct sctp_setadaptation' lvalue Var 0x156926088 'adaptation' 'struct sctp_setadaptation'     | `-RecoveryExpr 0x1569264f8 <col:34, col:47> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1569264b8 <col:34, col:44> 'int'     |     |-ImplicitCastExpr 0x1569264a0 <col:34> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x156926430 <col:34> 'int ()' Function 0x156926378 'sctp_sk' 'int ()'     |     `-ImplicitCastExpr 0x1569264e0 <col:42> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x156926450 <col:42> 'struct sock *' lvalue ParmVar 0x160010048 'sk' 'struct sock *'     |-IfStmt 0x1569267e8 <line:10:2, line:11:11>     | |-CallExpr 0x156926708 <line:10:6, col:43> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x156926620 <col:6> 'int ()' Function 0x156926568 'copy_to_user' 'int ()'     | | |-RecoveryExpr 0x1569266e8 <col:19> '<dependent type>' contains-errors lvalue     | | |-UnaryOperator 0x156926678 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x156926658 <col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x156926690 <col:40> 'int' lvalue ParmVar 0x1600100c8 'len' 'int'     | `-ReturnStmt 0x1569267d8 <line:11:3, col:11>     |   `-UnaryOperator 0x1569267c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1569267a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x156926788 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x156926828 <line:13:2, col:9>       `-IntegerLiteral 0x156926808 <col:9> 'int' 0 ","20905":"`-FunctionDecl 0x15c00e038  line:1:9 invalid address_space_cache_init 'int (int *, int *, int, int, int)'   |-ParmVarDecl 0x15c00dd28 <col:34, col:53> col:53 referenced invalid cache 'int *'   |-ParmVarDecl 0x15c00dda8 <line:2:34, col:48> col:48 invalid as 'int *'   |-ParmVarDecl 0x15c00de28 <line:3:34, col:41> col:41 referenced invalid addr 'int'   |-ParmVarDecl 0x15c00dea8 <line:4:34, col:41> col:41 invalid len 'int'   |-ParmVarDecl 0x15c00df28 <line:5:34, col:39> col:39 invalid is_write 'int'   `-CompoundStmt 0x15c0298b0 <line:6:1, line:33:1>     |-ImplicitCastExpr 0x15c00e168 <line:8:5> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x15c00e140 <col:5> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15c00e120 <col:5> 'int' lvalue ParmVar 0x15c00de28 'addr' 'int'     |-CallExpr 0x15c00e370 <line:11:5, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c00e2f0 <col:5> 'int ()' Function 0x15c00e238 'assert' 'int ()'     | `-BinaryOperator 0x15c00e350 <col:12, col:18> 'int' contains-errors '>'     |   |-RecoveryExpr 0x15c00e310 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x15c00e330 <col:18> 'int' 0     |-BinaryOperator 0x15c027590 <line:14:5, col:46> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15c027400 <col:5, col:12> '<dependent type>' contains-errors lvalue ->fv     | | `-RecoveryExpr 0x15c00e3d8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15c00e3b8 <col:5> 'int *' lvalue ParmVar 0x15c00dd28 'cache' 'int *'     | `-CallExpr 0x15c027568 <col:17, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15c027528 <col:17> 'int ()' Function 0x15c027470 'address_space_get_flatview' 'int ()'     |   `-RecoveryExpr 0x15c027548 <col:44> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15c027b28 <line:16:5, col:83> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15c027788 <col:5, col:12> '<dependent type>' contains-errors lvalue ->mrs     | | `-RecoveryExpr 0x15c027760 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15c027740 <col:5> 'int *' lvalue ParmVar 0x15c00dd28 'cache' 'int *'     | `-UnaryOperator 0x15c027b10 <col:18, col:83> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-CallExpr 0x15c027ac8 <col:19, col:83> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15c0278b0 <col:19> 'int ()' Function 0x15c0277f8 'address_space_translate_internal' 'int ()'     |     |-RecoveryExpr 0x15c027a50 <col:52> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x15c0278e8 <col:55> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x15c027970 <col:61, col:69> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-CXXDependentScopeMemberExpr 0x15c027928 <col:62, col:69> '<dependent type>' contains-errors lvalue ->xlat     |     |   `-RecoveryExpr 0x15c027908 <col:62> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x15c027a90 <col:75, col:76> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x15c027a70 <col:76> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15c027aa8 <col:79> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15c028310 <line:20:5, line:28:5> has_else     | |-RecoveryExpr 0x15c027e18 <line:20:9, col:45> '_Bool' contains-errors     | |-CompoundStmt 0x15c028260 <col:48, line:26:5>     | `-CompoundStmt 0x15c028300 <col:12, line:28:5>     `-BinaryOperator 0x15c029890 <line:31:5, col:23> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x15c029828 <col:5, col:12> '<dependent type>' contains-errors lvalue ->is_write       | `-RecoveryExpr 0x15c029800 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x15c0283d0 <col:5> 'int *' lvalue ParmVar 0x15c00dd28 'cache' 'int *'       `-RecoveryExpr 0x15c029870 <col:23> '<dependent type>' contains-errors lvalue ","21168":"`-FunctionDecl 0x12c928118  line:1:2 __must_hold 'int ()'   `-CompoundStmt 0x12c928438 <line:2:1, line:6:1>     `-ReturnStmt 0x12c928428 <line:5:2, col:9>       `-RecoveryExpr 0x12c928408 <col:9> '<dependent type>' contains-errors lvalue ","21208":"`-FunctionDecl 0x14100ddf8  line:1:1 referenced invalid pblock_analytics_init 'int (int *)'   |-ParmVarDecl 0x14100dd28 <col:23, col:37> col:37 referenced invalid pb 'int *'   `-CompoundStmt 0x141027770 <line:2:1, line:11:1>     |-IfStmt 0x14100e168 <line:3:5, line:5:5>     | |-BinaryOperator 0x14100df58 <line:3:9, col:34> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14100df18 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14100df38 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14100e158 <col:40, line:5:5>     |-IfStmt 0x141027648 <line:7:5, line:9:5>     | |-BinaryOperator 0x14100e248 <line:7:9, col:26> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14100e1a8 <col:9, col:13> '<dependent type>' contains-errors lvalue ->analytics     | | | `-RecoveryExpr 0x14100e188 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14100e228 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141027630 <col:32, line:9:5>     |   `-BinaryOperator 0x141027610 <line:8:9, col:124> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14100e2b0 <col:9, col:13> '<dependent type>' contains-errors lvalue ->analytics     |     | `-RecoveryExpr 0x14100e288 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14100e268 <col:9> 'int *' lvalue ParmVar 0x14100dd28 'pb' 'int *'     |     `-CallExpr 0x1410275c0 <col:25, col:124> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14100e3d8 <col:25> 'int ()' Function 0x14100e320 'PL_NewHashTable' 'int ()'     |       |-RecoveryExpr 0x141027500 <col:41> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x141027520 <col:61> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x141027540 <col:76> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x141027560 <col:94> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x141027580 <col:114> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x1410275a0 <col:120> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x141027750 <line:10:5, col:26> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x1410276b0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->analytics_init       | `-RecoveryExpr 0x141027688 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x141027668 <col:5> 'int *' lvalue ParmVar 0x14100dd28 'pb' 'int *'       `-RecoveryExpr 0x141027730 <col:26> '<dependent type>' contains-errors lvalue ","20768":"`-FunctionDecl 0x15680de88  line:1:1 invalid CheckRelationOwnership 'int (int *, int)'   |-ParmVarDecl 0x15680dd28 <col:24, col:34> col:34 invalid rel 'int *'   |-ParmVarDecl 0x15680dda8 <col:39, col:44> col:44 invalid noCatalogs 'int'   `-CompoundStmt 0x156828c18 <line:2:1, line:28:1>     |-IfStmt 0x1568281d8 <line:10:2, line:11:28>     | |-UnaryOperator 0x156827f78 <line:10:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x156827f50 <col:7, col:29> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x156827eb8 <col:7> 'int ()' Function 0x156827e00 'HeapTupleIsValid' 'int ()'     | |   `-RecoveryExpr 0x156827f30 <col:24> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1568281a0 <line:11:3, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x156828070 <col:3> 'int ()' Function 0x156827fb8 'elog' 'int ()'     |   |-RecoveryExpr 0x156828160 <col:8> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x1568280f0 <col:15> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x156828180 <col:22> '<dependent type>' contains-errors lvalue     `-IfStmt 0x156828af8 <line:17:2, line:25:2>       |-RecoveryExpr 0x1568285f0 <line:17:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x156828ae8 <line:18:2, line:25:2> ","20585":"`-FunctionDecl 0x11f80ddf8  line:1:9 invalid llhttp_get_http_major 'int (int *)'   |-ParmVarDecl 0x11f80dd28 <col:31, col:41> col:41 invalid parser 'int *'   `-CompoundStmt 0x11f80df20 <col:49, line:3:1>     `-ReturnStmt 0x11f80df10 <line:2:3, col:18>       `-CXXDependentScopeMemberExpr 0x11f80dec8 <col:10, col:18> '<dependent type>' contains-errors lvalue ->http_major         `-RecoveryExpr 0x11f80dea8 <col:10> '<dependent type>' contains-errors lvalue ","20982":"`-FunctionDecl 0x12680e350  line:1:13 oom_reap_task 'void (struct task_struct *)' static   |-ParmVarDecl 0x12680e248 <col:27, col:47> col:47 used tsk 'struct task_struct *'   `-CompoundStmt 0x12780b018 <line:2:1, line:27:1>     |-DeclStmt 0x1278082e8 <line:3:2, col:18>     | `-VarDecl 0x127808260 <col:2, col:17> col:6 used attempts 'int' cinit     |   `-IntegerLiteral 0x1278082c8 <col:17> 'int' 0     |-DeclStmt 0x127808590 <line:4:2, col:44>     | |-RecordDecl 0x127808300 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x127808468 <col:2, col:38> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x127808530 <col:25, col:38> '<dependent type>' contains-errors lvalue ->oom_mm     |     `-RecoveryExpr 0x127808508 <col:25, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1278084d0 <col:25> 'struct task_struct *' lvalue ParmVar 0x12680e248 'tsk' 'struct task_struct *'     |-WhileStmt 0x127808b58 <line:7:2, line:8:30>     | |-BinaryOperator 0x127808950 <line:7:9, col:73> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1278088a0 <col:9, col:22> 'int' contains-errors '<'     | | | |-UnaryOperator 0x1278085c8 <col:9, col:17> 'int' postfix '++'     | | | | `-DeclRefExpr 0x1278085a8 <col:9> 'int' lvalue Var 0x127808260 'attempts' 'int'     | | | `-RecoveryExpr 0x127808880 <col:22> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x127808938 <col:46, col:73> 'int' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x1278088d8 <col:47, col:73> 'int' contains-errors     | |     |-ImplicitCastExpr 0x1278088c0 <col:47> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x127808740 <col:47> 'int ()' Function 0x127808688 '__oom_reap_task_mm' 'int ()'     | |     |-ImplicitCastExpr 0x127808908 <col:66> 'struct task_struct *' <LValueToRValue>     | |     | `-DeclRefExpr 0x127808760 <col:66> 'struct task_struct *' lvalue ParmVar 0x12680e248 'tsk' 'struct task_struct *'     | |     `-ImplicitCastExpr 0x127808920 <col:71> 'struct mm_struct *' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x127808780 <col:71> 'struct mm_struct *' contains-errors lvalue Var 0x127808468 'mm' 'struct mm_struct *'     | `-CallExpr 0x127808b30 <line:8:3, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127808a50 <col:3> 'int ()' Function 0x127808998 'schedule_timeout_idle' 'int ()'     |   `-BinaryOperator 0x127808b10 <col:25, col:28> '<dependent type>' contains-errors '\/'     |     |-RecoveryExpr 0x127808af0 <col:25> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x127808a88 <col:28> 'int' 10     |-IfStmt 0x127808ec8 <line:10:2, line:12:8>     | |-BinaryOperator 0x127808e40 <line:10:6, line:11:39> 'int' contains-errors '||'     | | |-BinaryOperator 0x127808dd0 <line:10:6, col:18> 'int' contains-errors '<='     | | | |-DeclRefExpr 0x127808b78 <col:6> 'int' lvalue Var 0x127808260 'attempts' 'int'     | | | `-RecoveryExpr 0x127808db0 <col:18> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x127808e10 <line:11:6, col:39> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x127808cb0 <col:6> 'int ()' Function 0x127808bf8 'test_bit' 'int ()'     | |   |-RecoveryExpr 0x127808df0 <col:15> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x127808d48 <col:29, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x127808d20 <col:30, col:34> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x127808ce8 <col:30> 'struct mm_struct *' contains-errors lvalue Var 0x127808468 'mm' 'struct mm_struct *'     | `-GotoStmt 0x127808eb0 <line:12:3, col:8> 'done' 0x127808e60     |-CallExpr 0x12780aa28 <line:15:2, line:16:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127808fc8 <line:15:2> 'int ()' Function 0x127808f10 'pr_info' 'int ()'     | |-StringLiteral 0x127809030 <col:10> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x127809188 <line:16:3, col:18> 'int'     | | |-ImplicitCastExpr 0x127809170 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x127809130 <col:3> 'int ()' Function 0x127809078 'task_pid_nr' 'int ()'     | | `-ImplicitCastExpr 0x1278091b0 <col:15> 'struct task_struct *' <LValueToRValue>     | |   `-DeclRefExpr 0x127809150 <col:15> 'struct task_struct *' lvalue ParmVar 0x12680e248 'tsk' 'struct task_struct *'     | `-RecoveryExpr 0x12780aa00 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1278091c8 <col:21> 'struct task_struct *' lvalue ParmVar 0x12680e248 'tsk' 'struct task_struct *'     |-CallExpr 0x12780ab78 <line:17:2, col:23> 'int'     | `-ImplicitCastExpr 0x12780ab60 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12780ab40 <col:2> 'int ()' Function 0x12780aa88 'debug_show_all_locks' 'int ()'     |-LabelStmt 0x12780ac70 <line:19:1, line:20:25> 'done'     | `-BinaryOperator 0x12780ac50 <col:2, col:25> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12780abd0 <col:2, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12780ab98 <col:2> 'struct task_struct *' lvalue ParmVar 0x12680e248 'tsk' 'struct task_struct *'     |   `-RecoveryExpr 0x12780ac30 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12780ae70 <line:23:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12780ad70 <col:2> 'int ()' Function 0x12780acb8 'set_bit' 'int ()'     | |-RecoveryExpr 0x12780ae50 <col:10> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x12780ae08 <col:24, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12780ade0 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12780ada8 <col:25> 'struct mm_struct *' contains-errors lvalue Var 0x127808468 'mm' 'struct mm_struct *'     `-CallExpr 0x12780afd8 <line:26:2, col:21> 'int'       |-ImplicitCastExpr 0x12780afc0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12780af80 <col:2> 'int ()' Function 0x12780aec8 'put_task_struct' 'int ()'       `-ImplicitCastExpr 0x12780b000 <col:18> 'struct task_struct *' <LValueToRValue>         `-DeclRefExpr 0x12780afa0 <col:18> 'struct task_struct *' lvalue ParmVar 0x12680e248 'tsk' 'struct task_struct *' ","20728":"`-FunctionDecl 0x130943348  col:9 implicit used log 'double (double)' extern   |-ParmVarDecl 0x130943448 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x1309433f0 <<invalid sloc>> Implicit 1106   |-ConstAttr 0x1309434b8 <col:9> Implicit   `-NoThrowAttr 0x1309434e0 <col:9> Implicit ","20577":"`-FunctionDecl 0x126027778  line:1:20 invalid sctp_sf_cookie_wait_prm_abort 'int (const struct sctp_endpoint *, const struct sctp_association *, const int, void *, int *)'   |-ParmVarDecl 0x12600e268 <line:2:2, col:30> col:30 ep 'const struct sctp_endpoint *'   |-ParmVarDecl 0x126027458 <line:3:2, col:33> col:33 used asoc 'const struct sctp_association *'   |-ParmVarDecl 0x1260274d8 <line:4:2, col:23> col:23 invalid type 'const int'   |-ParmVarDecl 0x126027558 <line:5:2, col:8> col:8 used arg 'void *'   |-ParmVarDecl 0x126027608 <line:6:2, col:18> col:18 invalid commands 'int *'   `-CompoundStmt 0x125922d58 <line:7:1, line:36:1>     |-DeclStmt 0x126027a88 <line:8:2, col:26>     | |-RecordDecl 0x126027848 <col:2, col:9> col:9 struct msghdr     | `-VarDecl 0x1260279b8 <col:2, col:23> col:17 used msg 'struct msghdr *' cinit     |   `-ImplicitCastExpr 0x126027a58 <col:23> 'struct msghdr *' <BitCast>     |     `-ImplicitCastExpr 0x126027a40 <col:23> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x126027a20 <col:23> 'void *' lvalue ParmVar 0x126027558 'arg' 'void *'     |-DeclStmt 0x126027c88 <line:9:2, col:26>     | |-RecordDecl 0x126027aa0 <col:2, col:9> col:9 struct sctp_chunk     | `-VarDecl 0x126027c08 <col:2, col:21> col:21 used abort 'struct sctp_chunk *'     |-CallExpr 0x126028038 <line:13:2, line:14:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126027e00 <line:13:2> 'int ()' Function 0x126027d48 'sctp_add_cmd_sf' 'int ()'     | |-RecoveryExpr 0x126027e20 <col:18> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x126027fd0 <col:28> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x126028010 <line:14:4, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x126027f38 <col:4> 'int ()' Function 0x126027e80 'SCTP_TO' 'int ()'     |   `-RecoveryExpr 0x126027ff0 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1260282b0 <line:18:2, col:46> 'struct sctp_chunk *' contains-errors '='     | |-DeclRefExpr 0x126028088 <col:2> 'struct sctp_chunk *' lvalue Var 0x126027c08 'abort' 'struct sctp_chunk *'     | `-CallExpr 0x126028278 <col:10, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x126028188 <col:10> 'int ()' Function 0x1260280d0 'sctp_make_abort_user' 'int ()'     |   |-DeclRefExpr 0x1260281a8 <col:31> 'const struct sctp_association *' lvalue ParmVar 0x126027458 'asoc' 'const struct sctp_association *'     |   |-RecoveryExpr 0x126028258 <col:37> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1260281e0 <col:43> 'struct msghdr *' lvalue Var 0x1260279b8 'msg' 'struct msghdr *'     |-IfStmt 0x125922878 <line:19:2, line:22:62> has_else     | |-UnaryOperator 0x126028308 <line:19:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1260282f0 <col:7> 'struct sctp_chunk *' <LValueToRValue>     | |   `-DeclRefExpr 0x1260282d0 <col:7> 'struct sctp_chunk *' lvalue Var 0x126027c08 'abort' 'struct sctp_chunk *'     | |-NullStmt 0x125922870 <line:20:3>     | `-CallExpr 0x125922838 <line:22:3, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x126028338 <col:3> 'int ()' Function 0x126027d48 'sctp_add_cmd_sf' 'int ()'     |   |-RecoveryExpr 0x126028358 <col:19> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1259227c0 <col:29> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1259227f8 <col:45, col:61> 'int'     |     |-ImplicitCastExpr 0x1259227e0 <col:45> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1259226b8 <col:45> 'int ()' Function 0x125922600 'SCTP_CHUNK' 'int ()'     |     `-ImplicitCastExpr 0x125922820 <col:56> 'struct sctp_chunk *' <LValueToRValue>     |       `-DeclRefExpr 0x1259226d8 <col:56> 'struct sctp_chunk *' lvalue Var 0x126027c08 'abort' 'struct sctp_chunk *'     `-CallExpr 0x125922ae0 <line:24:2, line:25:33> '<dependent type>' contains-errors       |-DeclRefExpr 0x1259228a8 <line:24:2> 'int ()' Function 0x126027d48 'sctp_add_cmd_sf' 'int ()'       |-RecoveryExpr 0x1259228c8 <col:18> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x125922a78 <col:28> '<dependent type>' contains-errors lvalue       `-CallExpr 0x125922ab8 <line:25:4, col:32> '<dependent type>' contains-errors         |-DeclRefExpr 0x1259229e0 <col:4> 'int ()' Function 0x125922928 'SCTP_STATE' 'int ()'         `-RecoveryExpr 0x125922a98 <col:15> '<dependent type>' contains-errors lvalue ","20218":"`-FunctionDecl 0x10500ddc0  line:1:8 invalid SendTo 'void (int)'   |-ParmVarDecl 0x10500dcf0 <col:15, <invalid sloc>> col:17 invalid 'int'   `-CompoundStmt 0x10500e0e0 <line:5:47, line:16:3>     |-IfStmt 0x10500df48 <line:6:5, line:9:5>     | |-UnaryOperator 0x10500def0 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x10500ded8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x10500deb8 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x10500df30 <col:36, line:9:5>     |   `-ReturnStmt 0x10500df20 <line:8:7>     |-RecoveryExpr 0x10500df98 <line:10:5> '<dependent type>' contains-errors lvalue     `-IfStmt 0x10500e078 <line:11:5, line:13:5>       |-UnaryOperator 0x10500e038 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x10500e020 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x10500e000 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x10500e060 <col:68, line:13:5>         `-ReturnStmt 0x10500e050 <line:12:7> ","20248":"`-FunctionDecl 0x15280df18  line:1:1 invalid secret 'int (int, int, int *)'   |-ParmVarDecl 0x15280dcf0 <col:9, col:20> col:20 invalid output 'int'   |-ParmVarDecl 0x15280dd70 <col:28, col:39> col:39 invalid input 'int'   |-ParmVarDecl 0x15280de28 <col:46, col:62> col:62 invalid skey 'int *'   `-CompoundStmt 0x1538096f8 <line:2:1, line:37:1>     |-CallExpr 0x15280e170 <line:4:3, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15280e130 <col:3> 'int ()' Function 0x15280e078 'mpi_normalize' 'int ()'     | `-RecoveryExpr 0x15280e150 <col:18> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1538096c8 <line:6:3, line:36:5> has_else       |-BinaryOperator 0x15280e380 <line:6:7, col:38> 'int' contains-errors '||'       | |-BinaryOperator 0x15280e2c8 <col:7, col:26> 'int' contains-errors '||'       | | |-UnaryOperator 0x15280e218 <col:7, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow       | | | `-ImplicitCastExpr 0x15280e200 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>       | | |   `-CXXDependentScopeMemberExpr 0x15280e1b8 <col:8, col:14> '<dependent type>' contains-errors lvalue ->p       | | |     `-RecoveryExpr 0x15280e198 <col:8> '<dependent type>' contains-errors lvalue       | | `-UnaryOperator 0x15280e2b0 <col:19, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow       | |   `-ImplicitCastExpr 0x15280e298 <col:20, col:26> '<dependent type>' contains-errors <LValueToRValue>       | |     `-CXXDependentScopeMemberExpr 0x15280e250 <col:20, col:26> '<dependent type>' contains-errors lvalue ->q       | |       `-RecoveryExpr 0x15280e230 <col:20> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x15280e368 <col:31, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow       |   `-ImplicitCastExpr 0x15280e350 <col:32, col:38> '<dependent type>' contains-errors <LValueToRValue>       |     `-CXXDependentScopeMemberExpr 0x15280e308 <col:32, col:38> '<dependent type>' contains-errors lvalue ->u       |       `-RecoveryExpr 0x15280e2e8 <col:32> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x152827628 <line:7:5, line:9:5>       | `-CallExpr 0x1528275e8 <line:8:7, col:48> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x1528274b8 <col:7> 'int ()' Function 0x152827400 'mpi_powm' 'int ()'       |   |-RecoveryExpr 0x1528274d8 <col:17> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x1528274f8 <col:25> '<dependent type>' contains-errors lvalue       |   |-CXXDependentScopeMemberExpr 0x152827538 <col:32, col:38> '<dependent type>' contains-errors lvalue ->d       |   | `-RecoveryExpr 0x152827518 <col:32> '<dependent type>' contains-errors lvalue       |   `-CXXDependentScopeMemberExpr 0x1528275a0 <col:41, col:47> '<dependent type>' contains-errors lvalue ->n       |     `-RecoveryExpr 0x152827580 <col:41> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x153809690 <line:11:5, line:36:5>         |-CallExpr 0x152827838 <line:17:7, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x152827720 <col:7> 'int ()' Function 0x152827668 'mpi_sub_ui' 'int ()'         | |-RecoveryExpr 0x152827818 <col:19> '<dependent type>' contains-errors lvalue         | |-CXXDependentScopeMemberExpr 0x152827778 <col:22, col:28> '<dependent type>' contains-errors lvalue ->p         | | `-RecoveryExpr 0x152827758 <col:22> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x1528277c0 <col:31> 'int' 1         |-CallExpr 0x152827a80 <line:18:7, col:33> '<dependent type>' contains-errors         | |-DeclRefExpr 0x152827950 <col:7> 'int ()' Function 0x152827898 'mpi_fdiv_r' 'int ()'         | |-RecoveryExpr 0x152827a40 <col:19> '<dependent type>' contains-errors lvalue         | |-CXXDependentScopeMemberExpr 0x1528279a8 <col:22, col:28> '<dependent type>' contains-errors lvalue ->d         | | `-RecoveryExpr 0x152827988 <col:22> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x152827a60 <col:31> '<dependent type>' contains-errors lvalue         |-CallExpr 0x152827c10 <line:19:7, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x152827ab8 <col:7> 'int ()' Function 0x152827400 'mpi_powm' 'int ()'         | |-RecoveryExpr 0x152827bd0 <col:17> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x152827af0 <col:21> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x152827bf0 <col:28> '<dependent type>' contains-errors lvalue         | `-CXXDependentScopeMemberExpr 0x152827b48 <col:31, col:37> '<dependent type>' contains-errors lvalue ->p         |   `-RecoveryExpr 0x152827b28 <col:31> '<dependent type>' contains-errors lvalue         |-CallExpr 0x152827d68 <line:21:7, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x152827c50 <col:7> 'int ()' Function 0x152827668 'mpi_sub_ui' 'int ()'         | |-RecoveryExpr 0x152827d48 <col:19> '<dependent type>' contains-errors lvalue         | |-CXXDependentScopeMemberExpr 0x152827ca8 <col:22, col:28> '<dependent type>' contains-errors lvalue ->q         | | `-RecoveryExpr 0x152827c88 <col:22> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x152827cf0 <col:31> 'int' 1         `-CallExpr 0x152827ed0 <line:22:7, col:33> '<dependent type>' contains-errors           |-DeclRefExpr 0x152827da0 <col:7> 'int ()' Function 0x152827898 'mpi_fdiv_r' 'int ()'           |-RecoveryExpr 0x152827e90 <col:19> '<dependent type>' contains-errors lvalue           |-CXXDependentScopeMemberExpr 0x152827df8 <col:22, col:28> '<dependent type>' contains-errors lvalue ->d           | `-RecoveryExpr 0x152827dd8 <col:22> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x152827eb0 <col:31> '<dependent type>' contains-errors lvalue ","20564":"`-FunctionDecl 0x12b128258  line:1:1 invalid is_admin_of_role 'int (int, int)'   |-ParmVarDecl 0x12b1280f0 <col:18, col:22> col:22 invalid member 'int'   |-ParmVarDecl 0x12b128170 <col:30, col:34> col:34 invalid role 'int'   `-CompoundStmt 0x12b1420e0 <line:2:1, line:50:1>     |-IfStmt 0x12b1283e8 <line:8:2, line:9:10>     | |-BinaryOperator 0x12b128380 <line:8:6, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12b128340 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12b128360 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12b1283d8 <line:9:3, col:10>     |   `-RecoveryExpr 0x12b1283b8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b128610 <line:12:2, line:13:10>     | |-CallExpr 0x12b1285a0 <line:12:6, col:26> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b128560 <col:6> 'int ()' Function 0x12b1284a8 'superuser_arg' 'int ()'     | | `-RecoveryExpr 0x12b128580 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12b128600 <line:13:3, col:10>     |   `-RecoveryExpr 0x12b1285e0 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b141978 <line:18:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b1418b8 <col:2> 'int ()' Function 0x12b141800 'foreach' 'int ()'     | |-RecoveryExpr 0x12b141938 <col:10> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12b141958 <col:13> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x12b141fc8 <line:19:2, line:45:2>       `-DeclStmt 0x12b141a40 <line:22:3, col:10>         `-VarDecl 0x12b1419d8 <col:3, col:9> col:9 used i 'int' ","20890":"`-FunctionDecl 0x14600e350  line:1:6 key_put 'void (struct key *)'   |-ParmVarDecl 0x14600e248 <col:14, col:26> col:26 used key 'struct key *'   `-CompoundStmt 0x14602ae30 <line:2:1, line:9:1>     `-IfStmt 0x14602ae10 <line:3:2, line:8:2>       |-ImplicitCastExpr 0x14602a868 <line:3:6> 'struct key *' <LValueToRValue>       | `-DeclRefExpr 0x14602a848 <col:6> 'struct key *' lvalue ParmVar 0x14600e248 'key' 'struct key *'       `-CompoundStmt 0x14602adf0 <col:11, line:8:2>         |-CallExpr 0x14602aa38 <line:4:3, col:16> 'int'         | |-ImplicitCastExpr 0x14602aa20 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x14602a9b0 <col:3> 'int ()' Function 0x14602a8f8 'key_check' 'int ()'         | `-ImplicitCastExpr 0x14602aa60 <col:13> 'struct key *' <LValueToRValue>         |   `-DeclRefExpr 0x14602a9d0 <col:13> 'struct key *' lvalue ParmVar 0x14600e248 'key' 'struct key *'         `-IfStmt 0x14602add0 <line:6:3, line:7:30>           |-CallExpr 0x14602abf0 <line:6:7, col:40> '<dependent type>' contains-errors           | |-DeclRefExpr 0x14602ab58 <col:7> 'int ()' Function 0x14602aaa0 'refcount_dec_and_test' 'int ()'           | `-UnaryOperator 0x14602abd8 <col:29, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow           |   `-RecoveryExpr 0x14602abb0 <col:30, col:35> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x14602ab78 <col:30> 'struct key *' lvalue ParmVar 0x14600e248 'key' 'struct key *'           `-CallExpr 0x14602ada8 <line:7:4, col:30> '<dependent type>' contains-errors             |-DeclRefExpr 0x14602acf8 <col:4> 'int ()' Function 0x14602ac40 'schedule_work' 'int ()'             `-UnaryOperator 0x14602ad90 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow               `-RecoveryExpr 0x14602ad70 <col:19> '<dependent type>' contains-errors lvalue ","20463":"`-FunctionDecl 0x141941838  line:1:6 invalid asn1_write_GeneralString 'int (struct asn1_data *, const char *)'   |-ParmVarDecl 0x141928668 <col:31, col:49> col:49 used data 'struct asn1_data *'   |-ParmVarDecl 0x1419286e8 <col:55, col:67> col:67 used s 'const char *'   `-CompoundStmt 0x141941f30 <line:2:1, line:7:1>     |-CallExpr 0x141941af8 <line:3:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141941a50 <col:2> 'int ()' Function 0x141941998 'asn1_push_tag' 'int ()'     | |-DeclRefExpr 0x141941a70 <col:16> 'struct asn1_data *' lvalue ParmVar 0x141928668 'data' 'struct asn1_data *'     | `-RecoveryExpr 0x141941ad8 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x141941cb8 <line:4:2, col:31> 'int'     | |-ImplicitCastExpr 0x141941ca0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x141941c08 <col:2> 'int ()' Function 0x141941b50 'asn1_write_LDAPString' 'int ()'     | |-ImplicitCastExpr 0x141941ce8 <col:24> 'struct asn1_data *' <LValueToRValue>     | | `-DeclRefExpr 0x141941c28 <col:24> 'struct asn1_data *' lvalue ParmVar 0x141928668 'data' 'struct asn1_data *'     | `-ImplicitCastExpr 0x141941d00 <col:30> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x141941c48 <col:30> 'const char *' lvalue ParmVar 0x1419286e8 's' 'const char *'     |-CallExpr 0x141941e50 <line:5:2, col:19> 'int'     | |-ImplicitCastExpr 0x141941e38 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x141941df8 <col:2> 'int ()' Function 0x141941d40 'asn1_pop_tag' 'int ()'     | `-ImplicitCastExpr 0x141941e78 <col:15> 'struct asn1_data *' <LValueToRValue>     |   `-DeclRefExpr 0x141941e18 <col:15> 'struct asn1_data *' lvalue ParmVar 0x141928668 'data' 'struct asn1_data *'     `-ReturnStmt 0x141941f20 <line:6:2, col:16>       `-UnaryOperator 0x141941f08 <col:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow         `-ImplicitCastExpr 0x141941ef0 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x141941ec8 <col:10, col:16> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x141941e90 <col:10> 'struct asn1_data *' lvalue ParmVar 0x141928668 'data' 'struct asn1_data *' ","20450":"`-FunctionDecl 0x13400dd68  line:1:21 invalid Register_LOGICAL_NOT 'int *()'   `-CompoundStmt 0x13400df38 <col:44, line:8:1>     |-DeclStmt 0x13400ded8 <line:2:3, line:6:35>     | `-VarDecl 0x13400de28 <line:2:3, col:29> col:29 invalid r 'int' static     `-ReturnStmt 0x13400df28 <line:7:3, col:11>       `-UnaryOperator 0x13400df10 <col:10, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x13400def0 <col:11> '<dependent type>' contains-errors lvalue ","21201":"`-FunctionDecl 0x15780df18  line:1:1 invalid on_handler_vanished 'int (int *, const char *, int)'   |-ParmVarDecl 0x15780dd28 <col:21, col:38> col:38 invalid connection 'int *'   |-ParmVarDecl 0x15780dda8 <line:2:7, col:24> col:24 name 'const char *'   |-ParmVarDecl 0x15780de28 <line:3:7, col:24> col:24 invalid user_data 'int'   `-CompoundStmt 0x16000a550 <line:4:1, line:19:1>     |-DeclStmt 0x15780e1e8 <line:5:2, col:43>     | |-RecordDecl 0x15780dfd8 <col:2, col:9> col:9 struct tcmur_handler     | `-VarDecl 0x15780e148 <col:2, col:34> col:24 used handler 'struct tcmur_handler *' cinit     |   `-RecoveryExpr 0x15780e1b0 <col:34> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x160008a80 <line:6:2, col:42>     | |-RecordDecl 0x15780e200 <col:2, col:9> col:9 struct dbus_info     | `-VarDecl 0x15780e368 <col:2, col:36> col:20 used info 'struct dbus_info *' cinit     |   `-RecoveryExpr 0x160008a40 <col:27, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15780e3d0 <col:27> 'struct tcmur_handler *' contains-errors lvalue Var 0x15780e148 'handler' 'struct tcmur_handler *'     |-IfStmt 0x160009418 <line:8:2, line:16:2>     | |-RecoveryExpr 0x160008ad0 <line:8:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x160008a98 <col:6> 'struct dbus_info *' contains-errors lvalue Var 0x15780e368 'info' 'struct dbus_info *'     | `-CompoundStmt 0x1600093e8 <col:33, line:16:2>     |   |-DeclStmt 0x160008b78 <line:9:3, col:15>     |   | `-VarDecl 0x160008b10 <col:3, col:9> col:9 used reason 'char *'     |   |-BinaryOperator 0x160008e28 <line:10:3, line:12:21> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x160008b90 <line:10:3> 'char *' lvalue Var 0x160008b10 'reason' 'char *'     |   | `-CallExpr 0x160008df8 <col:12, line:12:21> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x160008d10 <line:10:12> 'int ()' Function 0x160008c58 'g_strdup_printf' 'int ()'     |   |   |-StringLiteral 0x160008d70 <col:28, line:11:5> 'char[7]' lvalue \"STRSTR\"     |   |   `-RecoveryExpr 0x160008dd0 <line:12:5, col:14> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x160008d98 <col:5> 'struct tcmur_handler *' contains-errors lvalue Var 0x15780e148 'handler' 'struct tcmur_handler *'     |   |-CallExpr 0x160009208 <line:13:3, line:14:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x160008f28 <line:13:3> 'int ()' Function 0x160008e70 'g_dbus_method_invocation_return_value' 'int ()'     |   | |-RecoveryExpr 0x160008f80 <col:41, col:47> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x160008f48 <col:41> 'struct dbus_info *' contains-errors lvalue Var 0x15780e368 'info' 'struct dbus_info *'     |   | `-CallExpr 0x1600091d0 <line:14:8, col:42> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x160009088 <col:8> 'int ()' Function 0x160008fd0 'g_variant_new' 'int ()'     |   |   |-StringLiteral 0x1600090f0 <col:22> 'char[4]' lvalue \"STR\"     |   |   |-RecoveryExpr 0x1600091b0 <col:29> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x160009128 <col:36> 'char *' lvalue Var 0x160008b10 'reason' 'char *'     |   `-CallExpr 0x1600093a8 <line:15:3, col:16> 'int'     |     |-ImplicitCastExpr 0x160009390 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x160009318 <col:3> 'int ()' Function 0x160009260 'g_free' 'int ()'     |     `-ImplicitCastExpr 0x1600093d0 <col:10> 'char *' <LValueToRValue>     |       `-DeclRefExpr 0x160009338 <col:10> 'char *' lvalue Var 0x160008b10 'reason' 'char *'     |-CallExpr 0x160009570 <line:17:2, col:34> 'int' contains-errors     | |-ImplicitCastExpr 0x160009558 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x160009518 <col:2> 'int ()' Function 0x160009460 'tcmur_unregister_handler' 'int ()'     | `-ImplicitCastExpr 0x160009598 <col:27> 'struct tcmur_handler *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x160009538 <col:27> 'struct tcmur_handler *' contains-errors lvalue Var 0x15780e148 'handler' 'struct tcmur_handler *'     `-CallExpr 0x16000a510 <line:18:2, col:31> 'int' contains-errors       |-ImplicitCastExpr 0x16000a4f8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x16000a4b8 <col:2> 'int ()' Function 0x16000a400 'dbus_unexport_handler' 'int ()'       `-ImplicitCastExpr 0x16000a538 <col:24> 'struct tcmur_handler *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x16000a4d8 <col:24> 'struct tcmur_handler *' contains-errors lvalue Var 0x15780e148 'handler' 'struct tcmur_handler *' ","21196":"`-FunctionDecl 0x12502a948  line:1:5 ppp_register_net_channel 'int (struct net *, struct ppp_channel *)'   |-ParmVarDecl 0x12500e248 <col:30, col:42> col:42 used net 'struct net *'   |-ParmVarDecl 0x12502a828 <col:47, col:67> col:67 used chan 'struct ppp_channel *'   `-CompoundStmt 0x124923408 <line:2:1, line:32:1>     |-DeclStmt 0x12502ac38 <line:3:2, col:21>     | |-RecordDecl 0x12502aa48 <col:2, col:9> col:9 struct channel     | `-VarDecl 0x12502abb8 <col:2, col:18> col:18 used pch 'struct channel *'     |-DeclStmt 0x12502ae38 <line:4:2, col:20>     | |-RecordDecl 0x12502ac50 <col:2, col:9> col:9 struct ppp_net     | `-VarDecl 0x12502adb8 <col:2, col:18> col:18 used pn 'struct ppp_net *'     |-IfStmt 0x12502b120 <line:7:2, line:8:11>     | |-UnaryOperator 0x12502b060 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12502b048 <col:7> 'struct channel *' <LValueToRValue>     | |   `-DeclRefExpr 0x12502b028 <col:7> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     | `-ReturnStmt 0x12502b110 <line:8:3, col:11>     |   `-UnaryOperator 0x12502b0f8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12502b0e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12502b0c0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12502b320 <line:10:2, col:21> 'struct ppp_net *' '='     | |-DeclRefExpr 0x12502b140 <col:2> 'struct ppp_net *' lvalue Var 0x12502adb8 'pn' 'struct ppp_net *'     | `-ImplicitCastExpr 0x12502b308 <col:7, col:21> 'struct ppp_net *' <IntegralToPointer>     |   `-CallExpr 0x12502b2c8 <col:7, col:21> 'int'     |     |-ImplicitCastExpr 0x12502b2b0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12502b240 <col:7> 'int ()' Function 0x12502b188 'ppp_pernet' 'int ()'     |     `-ImplicitCastExpr 0x12502b2f0 <col:18> 'struct net *' <LValueToRValue>     |       `-DeclRefExpr 0x12502b260 <col:18> 'struct net *' lvalue ParmVar 0x12500e248 'net' 'struct net *'     |-BinaryOperator 0x12502b3f8 <line:12:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12502b378 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12502b340 <col:2> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     | `-RecoveryExpr 0x12502b3d8 <col:13> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12502b498 <line:13:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12502b450 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12502b418 <col:2> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     | `-DeclRefExpr 0x12502b478 <col:14> 'struct ppp_channel *' lvalue ParmVar 0x12502a828 'chan' 'struct ppp_channel *'     |-BinaryOperator 0x12502b538 <line:14:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12502b4f0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12502b4b8 <col:2> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     | `-DeclRefExpr 0x12502b518 <col:18> 'struct net *' lvalue ParmVar 0x12500e248 'net' 'struct net *'     |-BinaryOperator 0x12502b5d8 <line:15:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12502b590 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12502b558 <col:2> 'struct ppp_channel *' lvalue ParmVar 0x12502a828 'chan' 'struct ppp_channel *'     | `-DeclRefExpr 0x12502b5b8 <col:14> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     |-CallExpr 0x124922600 <line:16:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12502b6d8 <col:2> 'int ()' Function 0x12502b620 'init_ppp_file' 'int ()'     | |-UnaryOperator 0x12502b758 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12502b730 <col:17, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12502b6f8 <col:17> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     | `-RecoveryExpr 0x12502b7b8 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x124922738 <line:17:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x124922690 <col:2, col:12> '<dependent type>' contains-errors lvalue .hdrlen     | | `-RecoveryExpr 0x124922668 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x124922630 <col:2> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     | `-RecoveryExpr 0x124922710 <col:21, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1249226d8 <col:21> 'struct ppp_channel *' lvalue ParmVar 0x12502a828 'chan' 'struct ppp_channel *'     |-CallExpr 0x1249228d0 <line:21:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124922838 <col:2> 'int ()' Function 0x124922780 'init_rwsem' 'int ()'     | `-UnaryOperator 0x1249228b8 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x124922890 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124922858 <col:14> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     |-CallExpr 0x124922a70 <line:22:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1249229d8 <col:2> 'int ()' Function 0x124922920 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x124922a58 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x124922a30 <col:18, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1249229f8 <col:18> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     |-CallExpr 0x124922c10 <line:23:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124922b78 <col:2> 'int ()' Function 0x124922ac0 'rwlock_init' 'int ()'     | `-UnaryOperator 0x124922bf8 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x124922bd0 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124922b98 <col:15> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     |-CallExpr 0x124922db0 <line:25:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124922d18 <col:2> 'int ()' Function 0x124922c60 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x124922d98 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x124922d70 <col:16, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124922d38 <col:16> 'struct ppp_net *' lvalue Var 0x12502adb8 'pn' 'struct ppp_net *'     |-BinaryOperator 0x124922ef8 <line:26:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x124922e38 <col:2, col:12> '<dependent type>' contains-errors lvalue .index     | | `-RecoveryExpr 0x124922e10 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x124922dd8 <col:2> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     | `-UnaryOperator 0x124922ee0 <col:20, col:26> '<dependent type>' contains-errors prefix '++' cannot overflow     |   `-RecoveryExpr 0x124922eb8 <col:22, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124922e80 <col:22> 'struct ppp_net *' lvalue Var 0x12502adb8 'pn' 'struct ppp_net *'     |-CallExpr 0x124923108 <line:27:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124922ff8 <col:2> 'int ()' Function 0x124922f40 'list_add' 'int ()'     | |-UnaryOperator 0x124923078 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x124923050 <col:12, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x124923018 <col:12> 'struct channel *' lvalue Var 0x12502abb8 'pch' 'struct channel *'     | `-UnaryOperator 0x1249230f0 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1249230c8 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124923090 <col:24> 'struct ppp_net *' lvalue Var 0x12502adb8 'pn' 'struct ppp_net *'     |-CallExpr 0x1249233b0 <line:29:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124923318 <col:2> 'int ()' Function 0x124923260 'spin_unlock_bh' 'int ()'     | `-UnaryOperator 0x124923398 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x124923370 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x124923338 <col:18> 'struct ppp_net *' lvalue Var 0x12502adb8 'pn' 'struct ppp_net *'     `-ReturnStmt 0x1249233f8 <line:31:2, col:9>       `-IntegerLiteral 0x1249233d8 <col:9> 'int' 0 ","20399":"`-FunctionDecl 0x12c940da8  line:1:19 copy_regset_from_user 'int (struct task_struct *, const struct user_regset_view *, unsigned int, unsigned int, unsigned int, int)' static inline   |-ParmVarDecl 0x12c928648 <col:41, col:61> col:61 used target 'struct task_struct *'   |-ParmVarDecl 0x12c940a28 <line:2:6, col:37> col:37 used view 'const struct user_regset_view *'   |-ParmVarDecl 0x12c940aa8 <line:3:6, col:19> col:19 used setno 'unsigned int'   |-ParmVarDecl 0x12c940b28 <line:4:6, col:19> col:19 used offset 'unsigned int'   |-ParmVarDecl 0x12c940ba8 <col:27, col:40> col:40 used size 'unsigned int'   |-ParmVarDecl 0x12c940c20 <line:5:6, col:17> col:17 __user 'int'   `-CompoundStmt 0x12c9416f8 <line:6:1, line:13:1>     |-DeclStmt 0x12c9411a0 <line:7:2, col:58>     | |-RecordDecl 0x12c940ec8 <col:8, col:15> col:15 struct user_regset     | `-VarDecl 0x12c941038 <col:2, col:57> col:28 used regset 'const struct user_regset *' cinit     |   `-UnaryOperator 0x12c941170 <col:37, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x12c941150 <col:38, col:57> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x12c941120 <col:38, col:44> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x12c9410d8 <col:38, col:44> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x12c9410a0 <col:38> 'const struct user_regset_view *' lvalue ParmVar 0x12c940a28 'view' 'const struct user_regset_view *'     |       `-ImplicitCastExpr 0x12c941138 <col:52> 'unsigned int' <LValueToRValue>     |         `-DeclRefExpr 0x12c941100 <col:52> 'unsigned int' lvalue ParmVar 0x12c940aa8 'setno' 'unsigned int'     |-IfStmt 0x12c9414d8 <line:9:2, line:10:11>     | |-UnaryOperator 0x12c941418 <line:9:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c9413e0 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c9412e0 <col:7> 'int ()' Function 0x12c941228 'access_ok' 'int ()'     | |   |-RecoveryExpr 0x12c9413a0 <col:17> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x12c9413c0 <col:30> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c941330 <col:36> 'unsigned int' lvalue ParmVar 0x12c940ba8 'size' 'unsigned int'     | `-ReturnStmt 0x12c9414c8 <line:10:3, col:11>     |   `-UnaryOperator 0x12c9414b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c941498 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c941478 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c9416e8 <line:12:2, col:61>       `-CallExpr 0x12c941698 <col:9, col:61> '<dependent type>' contains-errors         |-RecoveryExpr 0x12c941530 <col:9, col:17> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x12c9414f8 <col:9> 'const struct user_regset *' contains-errors lvalue Var 0x12c941038 'regset' 'const struct user_regset *'         |-DeclRefExpr 0x12c941558 <col:21> 'struct task_struct *' lvalue ParmVar 0x12c928648 'target' 'struct task_struct *'         |-DeclRefExpr 0x12c941578 <col:29> 'const struct user_regset *' contains-errors lvalue Var 0x12c941038 'regset' 'const struct user_regset *'         |-DeclRefExpr 0x12c941598 <col:37> 'unsigned int' lvalue ParmVar 0x12c940b28 'offset' 'unsigned int'         |-DeclRefExpr 0x12c9415b8 <col:45> 'unsigned int' lvalue ParmVar 0x12c940ba8 'size' 'unsigned int'         |-RecoveryExpr 0x12c941658 <col:51> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12c941678 <col:57> '<dependent type>' contains-errors lvalue ","20557":"`-FunctionDecl 0x13000b630  col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13000b730 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13000b798 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13000b800 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13000b6d8 <<invalid sloc>> Implicit 884 ","20794":"`-FunctionDecl 0x14d02ae28  line:1:5 bt_procfs_init 'int (struct net *, const char *, struct bt_sock_list *, int (*)(struct seq_file *, void *))'   |-ParmVarDecl 0x14d00e248 <col:20, col:32> col:32 net 'struct net *'   |-ParmVarDecl 0x14d00e2c8 <col:37, col:49> col:49 name 'const char *'   |-ParmVarDecl 0x14d02a8c8 <line:2:6, col:27> col:27 sk_list 'struct bt_sock_list *'   |-ParmVarDecl 0x14d02acd8 <line:3:6, col:48> col:13 seq_show 'int (*)(struct seq_file *, void *)'   `-CompoundStmt 0x14d02af68 <line:4:1, line:6:1>     `-ReturnStmt 0x14d02af58 <line:5:2, col:9>       `-IntegerLiteral 0x14d02af38 <col:9> 'int' 0 "},"target":{"20249":1,"20787":0,"20191":0,"21254":1,"20702":0,"20316":0,"20723":0,"20886":0,"21093":0,"20346":1,"21205":0,"20337":1,"21258":1,"20600":0,"21182":0,"20217":0,"20816":0,"21118":1,"20883":1,"21122":1,"21083":0,"20658":0,"20948":0,"20610":1,"20520":1,"20983":1,"21247":0,"21127":1,"20875":0,"20989":1,"20572":0,"20357":0,"20236":0,"20305":0,"20641":0,"21054":1,"20468":0,"20402":0,"20839":0,"20326":1,"20681":1,"21107":1,"20499":0,"20546":0,"20529":1,"20419":0,"20639":0,"20628":1,"20502":1,"20595":0,"20734":0,"21172":0,"20388":0,"21165":0,"21178":0,"20563":1,"21153":1,"20566":1,"20377":1,"20375":1,"20799":1,"21185":1,"20339":1,"20554":0,"20919":0,"21003":1,"20548":0,"20240":0,"21192":0,"20774":1,"20298":1,"20440":0,"20700":0,"20896":1,"20588":1,"20719":1,"20691":1,"20938":0,"20812":1,"21025":1,"20911":0,"20997":0,"20684":1,"20802":1,"20347":0,"20810":1,"20309":0,"20629":0,"20404":1,"20418":1,"20416":0,"20729":1,"21034":1,"20706":0,"20461":0,"20524":1,"20321":1,"20790":1,"20481":1,"21067":1,"21023":1,"20544":0,"20970":0,"20784":0,"20322":1,"21184":0,"20829":0,"20932":0,"21160":1,"21137":0,"20534":1,"21241":1,"20738":1,"20786":1,"20575":1,"20432":0,"21148":1,"20608":0,"20295":0,"21102":0,"20448":0,"21115":0,"21198":1,"20579":1,"21187":0,"20811":1,"20441":1,"20363":1,"20650":0,"21085":1,"20647":1,"20951":0,"20654":1,"20760":1,"21073":1,"20383":1,"21216":0,"20491":0,"20373":0,"20396":0,"20526":0,"21239":1,"20747":1,"20859":0,"20397":1,"20803":1,"21052":0,"20903":0,"20631":0,"20724":0,"20234":0,"20807":1,"21202":0,"21090":0,"20967":1,"20488":1,"20607":0,"20452":1,"20744":0,"20538":0,"20497":0,"20282":0,"20689":1,"20256":0,"20462":1,"20469":1,"20242":0,"20897":1,"20808":1,"20634":1,"20211":0,"20412":0,"20244":1,"21068":0,"20609":1,"20330":0,"20675":1,"20259":0,"21009":0,"20690":1,"20255":0,"20987":1,"20433":0,"20385":0,"20423":0,"21071":0,"20653":0,"20478":1,"20669":0,"20407":0,"20229":0,"20845":1,"20651":0,"21072":1,"21207":1,"20508":1,"21106":1,"20513":1,"20279":0,"20697":0,"21255":1,"20640":0,"21088":0,"20559":0,"20963":0,"20856":1,"20705":0,"21015":1,"20395":1,"21154":1,"21033":1,"20369":1,"20846":1,"20436":0,"20476":1,"20996":1,"20525":0,"20224":1,"21152":0,"21209":1,"20261":1,"20703":0,"20742":0,"20487":1,"20614":0,"20535":0,"21144":0,"21124":0,"20949":0,"21087":1,"20228":0,"20230":0,"20219":0,"20834":1,"20400":0,"20688":1,"20484":1,"20342":1,"20445":0,"20732":1,"20393":0,"20286":0,"20795":1,"20343":1,"20252":1,"21136":1,"20507":0,"20788":1,"20272":0,"20288":1,"21020":1,"21190":1,"21240":0,"21046":1,"21227":0,"20984":1,"20624":1,"20685":1,"21134":0,"20769":1,"21002":0,"20798":0,"20694":0,"20924":1,"20251":0,"20349":1,"20722":1,"21089":0,"20581":1,"20646":1,"20613":1,"20918":1,"21183":0,"20512":0,"21042":1,"20498":1,"20560":0,"20380":1,"21112":1,"20990":0,"20731":0,"21097":0,"20198":0,"20317":1,"21092":1,"20906":0,"20895":0,"20356":1,"21091":0,"21169":0,"20205":0,"21238":0,"20965":1,"21058":1,"20429":0,"20267":0,"20931":0,"21011":1,"20483":1,"20225":1,"20992":1,"20665":1,"21242":1,"20270":0,"20746":1,"20601":0,"20555":1,"20908":1,"21204":0,"20824":1,"20427":1,"20306":0,"20578":1,"20727":0,"20756":1,"20863":1,"20663":0,"20518":0,"21228":1,"20553":0,"20426":1,"20876":0,"20504":0,"20565":1,"20214":0,"20716":1,"21163":0,"20438":0,"20998":0,"20821":1,"20275":1,"21001":0,"20633":1,"20835":1,"21133":0,"20310":0,"20913":0,"20612":1,"21028":0,"20257":1,"21035":1,"20943":0,"21220":0,"20319":1,"21062":1,"20371":1,"20574":0,"20867":0,"21109":0,"21096":1,"21135":1,"20939":0,"20936":1,"20411":1,"20954":0,"20953":0,"20594":0,"20656":0,"21180":0,"20915":1,"20791":1,"20231":1,"20750":0,"20415":0,"20238":1,"20247":0,"20904":0,"20920":1,"21007":0,"20370":1,"20975":1,"20221":0,"21066":0,"20950":1,"20250":0,"20358":1,"20515":0,"20657":0,"21061":0,"21166":0,"20818":0,"20659":0,"21231":0,"20552":0,"20934":0,"20314":0,"20246":0,"20664":1,"21098":0,"20819":0,"20625":1,"20550":1,"20368":1,"20866":1,"21225":0,"21141":0,"20623":0,"21017":0,"20467":0,"20227":0,"20831":0,"20354":0,"21114":1,"20410":0,"21222":0,"21230":0,"20458":0,"20680":0,"20547":0,"20792":0,"20278":0,"20549":0,"20208":0,"20648":1,"20505":1,"20509":0,"20720":0,"20465":1,"20582":0,"20749":1,"20935":0,"20825":1,"20209":1,"21049":1,"21177":0,"21158":0,"20311":1,"21171":1,"20778":0,"20318":0,"20988":1,"20277":0,"20873":0,"21069":0,"21223":1,"21159":0,"20902":0,"20545":0,"20870":1,"20733":0,"20201":1,"20841":0,"21224":1,"20604":1,"21108":0,"20620":1,"20540":0,"20239":1,"21037":0,"20226":0,"20907":1,"20881":0,"21030":0,"21031":1,"20842":1,"20630":1,"21065":1,"21099":0,"21235":1,"20848":1,"20265":1,"20980":0,"20940":0,"20879":1,"21081":1,"20717":1,"21120":1,"20401":1,"20847":0,"20571":1,"21229":1,"20930":1,"20945":0,"20398":1,"21142":0,"20268":1,"20981":1,"20878":0,"21188":1,"20590":1,"21131":1,"20766":0,"20707":0,"20865":1,"20598":1,"20855":0,"21123":1,"20994":1,"20805":0,"20597":1,"20262":1,"20772":0,"20662":1,"20522":1,"20941":1,"21059":0,"20417":0,"20355":1,"20320":1,"20894":1,"21082":0,"20679":1,"20891":0,"21117":1,"20258":0,"21041":1,"20333":0,"20453":1,"21008":1,"20443":0,"20562":0,"20290":1,"21164":0,"20414":1,"21060":1,"21050":1,"20652":1,"20767":0,"20485":0,"21128":0,"20292":1,"20947":1,"21048":1,"21064":0,"20757":0,"20837":1,"21175":1,"21013":1,"21210":0,"20704":0,"20425":0,"20391":1,"20472":0,"20584":1,"20304":0,"21234":1,"20672":1,"21005":0,"20289":0,"21076":0,"20850":1,"21039":0,"20979":0,"20367":1,"20460":1,"21232":1,"20995":1,"20406":1,"20735":1,"20281":0,"20276":1,"21221":1,"20985":0,"20435":1,"20542":0,"20764":0,"20428":1,"20199":0,"21214":0,"20235":1,"20466":1,"20206":0,"21251":1,"20832":1,"20644":0,"20670":0,"20843":0,"21203":1,"20345":1,"20351":1,"20381":0,"20926":0,"20761":1,"21051":0,"20959":1,"20284":1,"20424":1,"20753":1,"20660":0,"20668":0,"21125":1,"20203":0,"20603":0,"20635":1,"20536":0,"20323":0,"20814":0,"20741":1,"20718":1,"20699":0,"20958":1,"20912":0,"21167":0,"20352":1,"21012":1,"20471":0,"20533":0,"20974":0,"20336":0,"20783":0,"20925":1,"20344":0,"20782":0,"21197":0,"20307":1,"21119":1,"21019":1,"20394":1,"20956":0,"21259":1,"20796":1,"20693":1,"20649":1,"20869":1,"20194":0,"20885":1,"21074":1,"20730":0,"20593":1,"20274":0,"20372":0,"20619":0,"20299":1,"20901":0,"20793":0,"20374":0,"20325":0,"20712":0,"20501":0,"20379":1,"20849":0,"21146":0,"20220":1,"20872":0,"20809":0,"20444":0,"21217":1,"20617":0,"20366":0,"21250":1,"20531":1,"20655":1,"20627":1,"20952":1,"21244":1,"20464":0,"20583":1,"20302":0,"20285":1,"20645":0,"20677":0,"20296":1,"20568":1,"20692":0,"20838":0,"20828":1,"20514":0,"20490":0,"20510":0,"21162":0,"21103":1,"21032":0,"20844":1,"20528":0,"20408":1,"20551":1,"21150":1,"20797":0,"20301":0,"20880":0,"21206":0,"20993":1,"21057":1,"21143":1,"20864":0,"20946":1,"20777":1,"20605":0,"21044":1,"21070":0,"20341":0,"21101":0,"21248":1,"20776":0,"20263":1,"20329":1,"20348":0,"21000":0,"21047":1,"20853":1,"21243":1,"21084":1,"20451":1,"20475":1,"20422":0,"21113":0,"20785":1,"20360":1,"20682":0,"20516":0,"20245":1,"21075":1,"20589":1,"20898":1,"20968":1,"20350":0,"20752":1,"20264":1,"21130":1,"20622":1,"20923":1,"21193":0,"20972":0,"20537":0,"20496":1,"21132":0,"20740":1,"20743":1,"21252":0,"21139":1,"20364":1,"21245":0,"20287":0,"21104":1,"20806":0,"20420":0,"20492":0,"21246":0,"21253":0,"20673":0,"20701":0,"21157":0,"21179":1,"20580":0,"21257":1,"20755":1,"20222":0,"21233":0,"20961":0,"20922":0,"21043":0,"20334":0,"20817":0,"20403":1,"20696":0,"20331":0,"21010":1,"20687":1,"20857":0,"21212":1,"21024":0,"20775":0,"20893":1,"20780":1,"21053":1,"21110":1,"20618":1,"21256":0,"21079":1,"20389":1,"20758":0,"20773":1,"21014":0,"20615":0,"20944":1,"21027":1,"20340":0,"21022":0,"20573":0,"20494":1,"20328":1,"21021":0,"20297":1,"20480":0,"20977":0,"21249":1,"20495":1,"20569":1,"21151":1,"20960":0,"21200":0,"20621":0,"20273":1,"20592":1,"21181":0,"20532":0,"20714":0,"20254":0,"20674":1,"20789":1,"20315":1,"20500":1,"21138":0,"20237":1,"20868":0,"20294":1,"20708":0,"20241":1,"21078":1,"21149":1,"20223":1,"20928":0,"20215":0,"20459":1,"20204":0,"20822":1,"20359":1,"20676":0,"20737":0,"21095":1,"20698":0,"21029":1,"21026":1,"20861":0,"20405":0,"21189":1,"20721":0,"20678":0,"20353":0,"20962":0,"20916":1,"20266":0,"20900":0,"20439":1,"21186":0,"20602":0,"20978":1,"20308":0,"20976":0,"21145":0,"20929":1,"20567":0,"20442":0,"20434":1,"21086":0,"20335":0,"20933":1,"20877":0,"20283":1,"20971":0,"20437":0,"20327":1,"20269":1,"20210":0,"20503":1,"20899":1,"20523":0,"20233":1,"20539":0,"20556":1,"20300":0,"20384":1,"21063":0,"20804":1,"20519":0,"21116":0,"20470":1,"20200":1,"20527":0,"21038":1,"20324":0,"20745":1,"20387":1,"20332":0,"20711":1,"20213":0,"20479":0,"20599":0,"20999":1,"21100":1,"20710":0,"20955":1,"20637":1,"20969":1,"20291":1,"20636":1,"20715":1,"20726":0,"20232":1,"20207":1,"21191":1,"20596":0,"20957":1,"20271":1,"21174":1,"21140":0,"20293":0,"20830":0,"20489":1,"20506":0,"20827":1,"21121":1,"20486":0,"21016":1,"21077":1,"20887":1,"20626":1,"20365":1,"20493":0,"20409":0,"20212":0,"20858":0,"20964":0,"20558":0,"21036":0,"20666":0,"20942":1,"20820":0,"20530":0,"21126":0,"21055":1,"20739":1,"20586":1,"20587":1,"20889":1,"20392":0,"20253":1,"20616":1,"20884":0,"21170":1,"20683":0,"21218":1,"20361":1,"20642":0,"20770":0,"21199":0,"20754":1,"21226":0,"21211":1,"20611":1,"20937":0,"20474":0,"20762":1,"20430":1,"20543":1,"20862":1,"20854":0,"20781":1,"20725":0,"20561":0,"20312":0,"20446":0,"21056":1,"21045":1,"20840":0,"20421":1,"21161":1,"20917":0,"20748":0,"20382":1,"20413":1,"20759":0,"20477":0,"20456":1,"20454":1,"20576":1,"20801":0,"20921":1,"20966":0,"20455":1,"20813":1,"20386":0,"20378":1,"20771":0,"21156":0,"20280":0,"20390":0,"20892":0,"20671":1,"20851":1,"20695":1,"20909":0,"20447":0,"20986":1,"20457":1,"20202":1,"20303":1,"21147":0,"20260":0,"20914":1,"20860":0,"20736":0,"21236":1,"21018":0,"20473":1,"20763":0,"20888":0,"20800":1,"20376":1,"20667":1,"20765":1,"20823":0,"20874":1,"20871":0,"20833":1,"20638":1,"21040":1,"20661":0,"20216":0,"20751":0,"21173":0,"20606":1,"20643":0,"21129":1,"20632":0,"21105":1,"21006":1,"21213":1,"20927":1,"20431":0,"20713":0,"21215":0,"21094":1,"20313":1,"20243":1,"20973":1,"20836":0,"20991":1,"21237":0,"21219":1,"20541":0,"20338":1,"21194":0,"20449":0,"20517":1,"21111":1,"20521":1,"20570":0,"20686":0,"21080":1,"20511":0,"20815":1,"21176":1,"20709":1,"21195":1,"20882":0,"20362":0,"21004":1,"20591":0,"20779":1,"20826":0,"20852":1,"20482":1,"21155":0,"20910":0,"20905":1,"21168":1,"21208":0,"20768":1,"20585":0,"20982":1,"20728":1,"20577":0,"20218":1,"20248":1,"20564":1,"20890":0,"20463":1,"20450":0,"21201":1,"21196":1,"20399":1,"20557":1,"20794":0}}