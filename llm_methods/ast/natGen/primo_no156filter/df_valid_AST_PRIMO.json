{"func":{"19742":"`-FunctionDecl 0x1529419d8  line:1:12 invalid __follow_pte 'int (struct mm_struct *, unsigned long, int **, int **)' static   |-ParmVarDecl 0x152928648 <col:25, col:43> col:43 used mm 'struct mm_struct *'   |-ParmVarDecl 0x1529286c8 <col:47, col:61> col:61 used address 'unsigned long'   |-ParmVarDecl 0x152941800 <line:2:3, col:11> col:11 referenced invalid ptepp 'int **'   |-ParmVarDecl 0x152941888 <col:18, col:31> col:31 referenced invalid ptlp 'int **'   `-CompoundStmt 0x152943e48 <line:3:1, line:37:1>     |-IfStmt 0x152942370 <line:10:2, line:11:8>     | |-BinaryOperator 0x1529422e8 <line:10:6, col:46> 'int' contains-errors '||'     | | |-CallExpr 0x152942220 <col:6, col:19> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x152941e88 <col:6> 'int ()' Function 0x152941dd0 'pgd_none' 'int ()'     | | | `-UnaryOperator 0x152942208 <col:15, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow     | | |   `-ImplicitCastExpr 0x1529421f0 <col:16> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x1529421d0 <col:16> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1529422c0 <col:24, col:46> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x152941ff8 <col:24> 'int ()' Function 0x152941f40 'unlikely' 'int ()'     | |   `-CallExpr 0x152942298 <col:33, col:45> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x1529420f8 <col:33> 'int ()' Function 0x152942040 'pgd_bad' 'int ()'     | |     `-UnaryOperator 0x152942280 <col:41, col:42> '<dependent type>' contains-errors prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x152942268 <col:42> '<dependent type>' contains-errors <LValueToRValue>     | |         `-RecoveryExpr 0x152942248 <col:42> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x152942358 <line:11:3, col:8> 'out' 0x152942308     |-IfStmt 0x152942750 <line:14:2, line:15:8>     | |-RecoveryExpr 0x152942718 <line:14:6, col:46> '_Bool' contains-errors     | `-GotoStmt 0x152942738 <line:15:3, col:8> 'out' 0x152942308     |-IfStmt 0x152943750 <line:19:2, line:20:8>     | |-RecoveryExpr 0x152943718 <line:19:6, col:46> '_Bool' contains-errors     | `-GotoStmt 0x152943738 <line:20:3, col:8> 'out' 0x152942308     |-IfStmt 0x1529438a8 <line:23:2, line:24:8>     | |-RecoveryExpr 0x152943870 <line:23:6, col:19> '_Bool' contains-errors     | `-GotoStmt 0x152943890 <line:24:3, col:8> 'out' 0x152942308     |-IfStmt 0x152943a60 <line:27:2, line:28:8>     | |-RecoveryExpr 0x152943a28 <line:27:6, col:7> '_Bool' contains-errors     | `-GotoStmt 0x152943a48 <line:28:3, col:8> 'out' 0x152942308     |-IfStmt 0x152943c08 <line:29:2, line:30:8>     | |-RecoveryExpr 0x152943b80 <line:29:6, col:24> '_Bool' contains-errors     | `-GotoStmt 0x152943bf0 <line:30:3, col:8> 'unlock' 0x152943ba0     |-ReturnStmt 0x152943c98 <line:32:2, col:9>     | `-IntegerLiteral 0x152943c78 <col:9> 'int' 0     |-LabelStmt 0x152943e00 <line:33:1, col:7> 'unlock'     | `-NullStmt 0x152943df8 <col:7>     `-LabelStmt 0x152943e28 <line:35:1, col:4> 'out'       `-NullStmt 0x152943e20 <col:4> ","19276":"`-FunctionDecl 0x13a128ff8  line:1:1 invalid parser_module_parse_export_clause 'int (int *)'   |-ParmVarDecl 0x13a128f28 <col:36, col:54> col:54 invalid context_p 'int *'   `-CompoundStmt 0x13c009c60 <line:2:1, line:103:1>     |-IfStmt 0x13b008250 <line:5:3, line:10:3>     | |-BinaryOperator 0x13a1291c0 <line:5:7, col:62> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x13a1290c8 <col:7, col:18> '<dependent type>' contains-errors lvalue ->source_p     | | | `-RecoveryExpr 0x13a1290a8 <col:7> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x13a129178 <col:30, col:62> '<dependent type>' contains-errors lvalue ->source_p     | |   `-CXXDependentScopeMemberExpr 0x13a129130 <col:30, col:41> '<dependent type>' contains-errors lvalue ->next_scanner_info_p     | |     `-RecoveryExpr 0x13a129110 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b008238 <line:6:3, line:10:3>     |   `-CallExpr 0x13a1294c0 <line:8:5, col:95> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13a129350 <col:5> 'int ()' Function 0x13a129298 'JERRY_ASSERT' 'int ()'     |     `-BinaryOperator 0x13a1294a0 <col:19, col:59> 'int' contains-errors '=='     |       |-CXXDependentScopeMemberExpr 0x13a1293d8 <col:19, col:51> '<dependent type>' contains-errors lvalue ->type     |       | `-CXXDependentScopeMemberExpr 0x13a129390 <col:19, col:30> '<dependent type>' contains-errors lvalue ->next_scanner_info_p     |       |   `-RecoveryExpr 0x13a129370 <col:19> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x13a129480 <col:59> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b0083e0 <line:12:3, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b008270 <col:3> 'int ()' Function 0x13a129298 'JERRY_ASSERT' 'int ()'     | `-BinaryOperator 0x13b0083c0 <col:17, col:42> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x13b0082f8 <col:17, col:34> '<dependent type>' contains-errors lvalue .type     |   | `-CXXDependentScopeMemberExpr 0x13b0082b0 <col:17, col:28> '<dependent type>' contains-errors lvalue ->token     |   |   `-RecoveryExpr 0x13b008290 <col:17> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13b0083a0 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13b008528 <line:13:3, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b0084e8 <col:3> 'int ()' Function 0x13b008430 'lexer_next_token' 'int ()'     | `-RecoveryExpr 0x13b008508 <col:21> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x13c009c40 <line:15:3, line:102:3>       |-RecoveryExpr 0x13b008568 <line:15:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13c009be8 <line:16:3, line:102:3>         |-IfStmt 0x13b008740 <line:17:5, line:21:5>         | |-BinaryOperator 0x13b008690 <line:17:9, col:34> 'int' contains-errors '=='         | | |-CXXDependentScopeMemberExpr 0x13b0085f0 <col:9, col:26> '<dependent type>' contains-errors lvalue .type         | | | `-CXXDependentScopeMemberExpr 0x13b0085a8 <col:9, col:20> '<dependent type>' contains-errors lvalue ->token         | | |   `-RecoveryExpr 0x13b008588 <col:9> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x13b008670 <col:34> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x13b008720 <line:18:5, line:21:5>         |   |-CallExpr 0x13b0086f0 <line:19:7, col:34> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x13b0086b0 <col:7> 'int ()' Function 0x13b008430 'lexer_next_token' 'int ()'         |   | `-RecoveryExpr 0x13b0086d0 <col:25> '<dependent type>' contains-errors lvalue         |   `-BreakStmt 0x13b008718 <line:20:7>         |-IfStmt 0x13b008d70 <line:24:5, line:29:5>         | |-BinaryOperator 0x13b008b80 <line:24:9, line:26:45> 'int' contains-errors '||'         | | |-BinaryOperator 0x13b008b20 <line:24:9, line:25:50> 'int' contains-errors '||'         | | | |-BinaryOperator 0x13b008ac0 <line:24:9, col:34> 'int' contains-errors '!='         | | | | |-CXXDependentScopeMemberExpr 0x13b0087c8 <col:9, col:26> '<dependent type>' contains-errors lvalue .type         | | | | | `-CXXDependentScopeMemberExpr 0x13b008780 <col:9, col:20> '<dependent type>' contains-errors lvalue ->token         | | | | |   `-RecoveryExpr 0x13b008760 <col:9> '<dependent type>' contains-errors lvalue         | | | | `-RecoveryExpr 0x13b008aa0 <col:34> '<dependent type>' contains-errors lvalue         | | | `-BinaryOperator 0x13b008b00 <line:25:12, col:50> 'int' contains-errors '!='         | | |   |-CXXDependentScopeMemberExpr 0x13b0088f8 <col:12, col:42> '<dependent type>' contains-errors lvalue .type         | | |   | `-CXXDependentScopeMemberExpr 0x13b0088b0 <col:12, col:29> '<dependent type>' contains-errors lvalue .lit_location         | | |   |   `-CXXDependentScopeMemberExpr 0x13b008868 <col:12, col:23> '<dependent type>' contains-errors lvalue ->token         | | |   |     `-RecoveryExpr 0x13b008848 <col:12> '<dependent type>' contains-errors lvalue         | | |   `-RecoveryExpr 0x13b008ae0 <col:50> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x13b008b60 <line:26:12, col:45> 'int' contains-errors '>='         | |   |-CXXDependentScopeMemberExpr 0x13b008a00 <col:12, col:29> '<dependent type>' contains-errors lvalue .keyword_type         | |   | `-CXXDependentScopeMemberExpr 0x13b0089b8 <col:12, col:23> '<dependent type>' contains-errors lvalue ->token         | |   |   `-RecoveryExpr 0x13b008998 <col:12> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x13b008b40 <col:45> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x13b008d58 <line:27:5, line:29:5>         |   `-CallExpr 0x13b008d28 <line:28:7, col:68> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x13b008c80 <col:7> 'int ()' Function 0x13b008bc8 'parser_raise_error' 'int ()'         |     |-RecoveryExpr 0x13b008ca0 <col:27> '<dependent type>' contains-errors lvalue         |     `-RecoveryExpr 0x13b008d08 <col:38> '<dependent type>' contains-errors lvalue         |-IfStmt 0x13c008800 <line:36:5, line:40:5>         | |-RecoveryExpr 0x13b009190 <line:36:9, line:37:75> '_Bool' contains-errors         | `-CompoundStmt 0x13b0091f0 <line:38:5, line:40:5>         |-CallExpr 0x13c008860 <line:45:5, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13c008820 <col:5> 'int ()' Function 0x13b008430 'lexer_next_token' 'int ()'         | `-RecoveryExpr 0x13c008840 <col:23> '<dependent type>' contains-errors lvalue         |-IfStmt 0x13c008f50 <line:46:5, line:61:5>         | |-CallExpr 0x13c008a30 <line:46:9, col:55> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x13c008968 <col:9> 'int ()' Function 0x13c0088b0 'lexer_token_is_identifier' 'int ()'         | | |-RecoveryExpr 0x13c008988 <col:36> '<dependent type>' contains-errors lvalue         | | |-StringLiteral 0x13c0089f0 <col:47> 'char[4]' lvalue \"STR\"         | | `-IntegerLiteral 0x13c008a10 <col:54> 'int' 2         | `-CompoundStmt 0x13c008f28 <line:47:5, line:61:5>         |   |-CallExpr 0x13c008aa8 <line:48:7, col:34> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x13c008a68 <col:7> 'int ()' Function 0x13b008430 'lexer_next_token' 'int ()'         |   | `-RecoveryExpr 0x13c008a88 <col:25> '<dependent type>' contains-errors lvalue         |   |-IfStmt 0x13c008ce8 <line:50:7, line:54:7>         |   | |-RecoveryExpr 0x13c008c78 <line:50:11, line:51:52> '_Bool' contains-errors         |   | `-CompoundStmt 0x13c008cd8 <line:52:7, line:54:7>         |   `-CallExpr 0x13c008f00 <line:60:7, col:34> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x13c008ec0 <col:7> 'int ()' Function 0x13b008430 'lexer_next_token' 'int ()'         |     `-RecoveryExpr 0x13c008ee0 <col:25> '<dependent type>' contains-errors lvalue         |-IfStmt 0x13c0092f0 <line:66:5, line:75:5> has_else         | |-RecoveryExpr 0x13c009170 <line:66:9, col:30> '_Bool' contains-errors         | |-CompoundStmt 0x13c0091d0 <line:67:5, line:70:5>         | `-CompoundStmt 0x13c0092e0 <line:72:5, line:75:5>         |-IfStmt 0x13c0095d0 <line:77:5, line:82:5>         | |-RecoveryExpr 0x13c009440 <line:77:9, col:71> '_Bool' contains-errors         | `-CompoundStmt 0x13c0095c0 <line:78:5, line:82:5>         |-IfStmt 0x13c009a90 <line:88:5, line:96:5> has_else         | |-RecoveryExpr 0x13c0098b0 <line:88:9, line:89:37> '_Bool' contains-errors         | |-CompoundStmt 0x13c009910 <line:90:5, line:92:5>         | `-IfStmt 0x13c009a70 <line:93:10, line:96:5>         |   |-RecoveryExpr 0x13c0099d0 <line:93:14, col:39> '_Bool' contains-errors         |   `-CompoundStmt 0x13c009a58 <line:94:5, line:96:5>         |     `-CallExpr 0x13c009a30 <line:95:7, col:34> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x13c0099f0 <col:7> 'int ()' Function 0x13b008430 'lexer_next_token' 'int ()'         |       `-RecoveryExpr 0x13c009a10 <col:25> '<dependent type>' contains-errors lvalue         `-IfStmt 0x13c009bc8 <line:98:5, line:101:5>           |-CallExpr 0x13c009b40 <line:98:9, col:55> '<dependent type>' contains-errors           | |-DeclRefExpr 0x13c009ac0 <col:9> 'int ()' Function 0x13c0088b0 'lexer_token_is_identifier' 'int ()'           | |-RecoveryExpr 0x13c009ae0 <col:36> '<dependent type>' contains-errors lvalue           | |-StringLiteral 0x13c009b00 <col:47> 'char[4]' lvalue \"STR\"           | `-IntegerLiteral 0x13c009b20 <col:54> 'int' 4           `-CompoundStmt 0x13c009bb8 <line:99:5, line:101:5> ","19380":"`-FunctionDecl 0x14c141b18  line:1:12 prepare_to_clone_next_submodule 'int (const struct cache_entry *, struct child_process *, struct submodule_update_clone *, struct strbuf *)' static   |-ParmVarDecl 0x14c129248 <col:44, col:70> col:70 used ce 'const struct cache_entry *'   |-ParmVarDecl 0x14c141628 <line:2:9, col:31> col:31 used child 'struct child_process *'   |-ParmVarDecl 0x14c1417f8 <line:3:9, col:40> col:40 used suc 'struct submodule_update_clone *'   |-ParmVarDecl 0x14c1419c8 <line:4:9, col:24> col:24 used out 'struct strbuf *'   `-CompoundStmt 0x14c147cd0 <line:5:1, line:92:1>     |-DeclStmt 0x14c141e68 <line:6:2, col:36>     | |-RecordDecl 0x14c141c28 <col:8, col:15> col:15 struct submodule     | `-VarDecl 0x14c141d98 <col:2, col:32> col:26 used sub 'const struct submodule *' cinit     |   `-RecoveryExpr 0x14c141e30 <col:32> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14c141f50 <line:7:2, col:44>     | `-VarDecl 0x14c141ed0 <col:2, col:16> col:16 invalid displaypath_sb 'struct strbuf'     |-DeclStmt 0x14c142008 <line:8:2, col:32>     | `-VarDecl 0x14c141f88 <col:2, col:16> col:16 invalid sb 'struct strbuf'     |-DeclStmt 0x14c1420d8 <line:9:2, col:32>     | `-VarDecl 0x14c142038 <col:2, col:28> col:14 used displaypath 'const char *' cinit     |   `-RecoveryExpr 0x14c1420b8 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14c142190 <line:10:2, col:23>     | `-VarDecl 0x14c142108 <col:2, col:22> col:6 used needs_cloning 'int' cinit     |   `-IntegerLiteral 0x14c142170 <col:22> 'int' 0     |-IfStmt 0x14c144790 <line:12:2, line:20:2>     | |-CallExpr 0x14c142348 <line:12:6, col:17> 'int'     | | |-ImplicitCastExpr 0x14c142330 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14c1422c0 <col:6> 'int ()' Function 0x14c142208 'ce_stage' 'int ()'     | | `-ImplicitCastExpr 0x14c142370 <col:15> 'const struct cache_entry *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c1422e0 <col:15> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     | `-CompoundStmt 0x14c144760 <col:20, line:20:2>     |   |-IfStmt 0x14c144248 <line:13:3, line:16:31> has_else     |   | |-RecoveryExpr 0x14c1423c0 <line:13:7, col:12> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14c142388 <col:7> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     |   | |-CallExpr 0x14c144040 <line:14:4, col:59> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x14c1424c8 <col:4> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'     |   | | |-UnaryOperator 0x14c142508 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | | `-RecoveryExpr 0x14c1424e8 <col:17> '<dependent type>' contains-errors lvalue     |   | | |-StringLiteral 0x14c142560 <col:21> 'char[4]' lvalue \"STR\"     |   | | |-RecoveryExpr 0x14c1425b8 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x14c142580 <col:28> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     |   | | `-RecoveryExpr 0x14c144018 <col:51, col:55> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14c1425e0 <col:51> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     |   | `-CallExpr 0x14c144218 <line:16:4, col:31> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14c144160 <col:4> 'int ()' Function 0x14c1440a8 'strbuf_addstr' 'int ()'     |   |   |-UnaryOperator 0x14c1441a0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x14c144180 <col:19> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x14c1441f0 <col:23, col:27> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14c1441b8 <col:23> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     |   |-CallExpr 0x14c144528 <line:17:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c144278 <col:3> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'     |   | |-DeclRefExpr 0x14c144298 <col:15> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'     |   | |-CallExpr 0x14c1444e8 <col:20, col:27> 'int'     |   | | |-ImplicitCastExpr 0x14c1444d0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14c144398 <col:20> 'int ()' Function 0x14c1442e0 '_' 'int ()'     |   | | `-ImplicitCastExpr 0x14c144510 <col:22> 'char *' <ArrayToPointerDecay>     |   | |   `-StringLiteral 0x14c1443b8 <col:22> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x14c144450 <col:30, col:33> '<dependent type>' contains-errors lvalue .buf     |   |   `-RecoveryExpr 0x14c144430 <col:30> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14c1446b0 <line:18:3, col:25> 'int'     |   | |-ImplicitCastExpr 0x14c144698 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c144640 <col:3> 'int ()' Function 0x14c144588 'strbuf_addch' 'int ()'     |   | |-ImplicitCastExpr 0x14c1446e0 <col:16> 'struct strbuf *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14c144660 <col:16> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'     |   | `-CharacterLiteral 0x14c144680 <col:21> 'int' 10     |   `-GotoStmt 0x14c144748 <line:19:3, col:8> 'cleanup' 0x14c1446f8     |-BinaryOperator 0x14c1449e8 <line:22:2, col:47> 'const struct submodule *' contains-errors '='     | |-DeclRefExpr 0x14c1447b0 <col:2> 'const struct submodule *' contains-errors lvalue Var 0x14c141d98 'sub' 'const struct submodule *'     | `-CallExpr 0x14c1449b8 <col:8, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c1448b0 <col:8> 'int ()' Function 0x14c1447f8 'submodule_from_path' 'int ()'     |   |-RecoveryExpr 0x14c144998 <col:28> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c144920 <col:39, col:43> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c1448e8 <col:39> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     |-IfStmt 0x14c144d78 <line:24:2, line:28:21> has_else     | |-RecoveryExpr 0x14c144a40 <line:24:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c144a08 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     | |-BinaryOperator 0x14c144cb8 <line:25:3, line:26:35> 'const char *' contains-errors '='     | | |-DeclRefExpr 0x14c144a68 <line:25:3> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'     | | `-CallExpr 0x14c144c80 <col:17, line:26:35> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14c144b68 <line:25:17> 'int ()' Function 0x14c144ab0 'relative_path' 'int ()'     | |   |-RecoveryExpr 0x14c144bc0 <col:31, col:36> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14c144b88 <col:31> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     | |   |-RecoveryExpr 0x14c144c20 <line:26:10, col:14> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14c144be8 <col:10> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     | |   `-UnaryOperator 0x14c144c68 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x14c144c48 <col:21> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x14c144d58 <line:28:3, col:21> 'const char *' contains-errors '='     |   |-DeclRefExpr 0x14c144cd8 <col:3> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'     |   `-RecoveryExpr 0x14c144d30 <col:17, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c144cf8 <col:17> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     |-IfStmt 0x14c145038 <line:30:2, line:33:2>     | |-UnaryOperator 0x14c144de0 <line:30:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c144dc8 <col:7> 'const struct submodule *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x14c144da8 <col:7> 'const struct submodule *' contains-errors lvalue Var 0x14c141d98 'sub' 'const struct submodule *'     | `-CompoundStmt 0x14c145018 <col:12, line:33:2>     |   |-CallExpr 0x14c144f70 <line:31:3, col:52> 'int' contains-errors     |   | |-ImplicitCastExpr 0x14c144f58 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c144ed8 <col:3> 'int ()' Function 0x14c144e20 'next_submodule_warn_missing' 'int ()'     |   | |-ImplicitCastExpr 0x14c144fa8 <col:31> 'struct submodule_update_clone *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14c144ef8 <col:31> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     |   | |-ImplicitCastExpr 0x14c144fc0 <col:36> 'struct strbuf *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14c144f18 <col:36> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'     |   | `-ImplicitCastExpr 0x14c144fd8 <col:41> 'const char *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x14c144f38 <col:41> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'     |   `-GotoStmt 0x14c145000 <line:32:3, col:8> 'cleanup' 0x14c1446f8     |-IfStmt 0x14c1454e0 <line:35:2, line:41:2>     | |-RecoveryExpr 0x14c145250 <line:35:6, line:37:49> '_Bool' contains-errors     | `-CompoundStmt 0x14c1454b8 <col:52, line:41:2>     |   |-CallExpr 0x14c145380 <line:38:3, col:41> 'int' contains-errors     |   | |-ImplicitCastExpr 0x14c145368 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c145270 <col:3> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'     |   | |-ImplicitCastExpr 0x14c1453b8 <col:15> 'struct strbuf *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14c145290 <col:15> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'     |   | |-CallExpr 0x14c145308 <col:20, col:27> 'int'     |   | | |-ImplicitCastExpr 0x14c1452f0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14c1452b0 <col:20> 'int ()' Function 0x14c1442e0 '_' 'int ()'     |   | | `-ImplicitCastExpr 0x14c145330 <col:22> 'char *' <ArrayToPointerDecay>     |   | |   `-StringLiteral 0x14c1452d0 <col:22> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x14c1453d0 <col:30> 'const char *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x14c145348 <col:30> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'     |   |-CallExpr 0x14c145458 <line:39:3, col:25> 'int'     |   | |-ImplicitCastExpr 0x14c145440 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c1453e8 <col:3> 'int ()' Function 0x14c144588 'strbuf_addch' 'int ()'     |   | |-ImplicitCastExpr 0x14c145488 <col:16> 'struct strbuf *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14c145408 <col:16> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'     |   | `-CharacterLiteral 0x14c145428 <col:21> 'int' 10     |   `-GotoStmt 0x14c1454a0 <line:40:3, col:8> 'cleanup' 0x14c1446f8     |-IfStmt 0x14c1457d0 <line:44:2, line:47:2>     | |-RecoveryExpr 0x14c145660 <line:44:6, col:51> '_Bool' contains-errors     | `-CompoundStmt 0x14c1457b0 <col:54, line:47:2>     |   |-CallExpr 0x14c145718 <line:45:3, col:52> 'int' contains-errors     |   | |-ImplicitCastExpr 0x14c145700 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c145680 <col:3> 'int ()' Function 0x14c144e20 'next_submodule_warn_missing' 'int ()'     |   | |-ImplicitCastExpr 0x14c145750 <col:31> 'struct submodule_update_clone *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14c1456a0 <col:31> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     |   | |-ImplicitCastExpr 0x14c145768 <col:36> 'struct strbuf *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14c1456c0 <col:36> 'struct strbuf *' lvalue ParmVar 0x14c1419c8 'out' 'struct strbuf *'     |   | `-ImplicitCastExpr 0x14c145780 <col:41> 'const char *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x14c1456e0 <col:41> 'const char *' contains-errors lvalue Var 0x14c142038 'displaypath' 'const char *'     |   `-GotoStmt 0x14c145798 <line:46:3, col:8> 'cleanup' 0x14c1446f8     |-CallExpr 0x14c145928 <line:49:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c1458d0 <col:2> 'int ()' Function 0x14c145818 'strbuf_reset' 'int ()'     | `-UnaryOperator 0x14c145910 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14c1458f0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c145a28 <line:50:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c145950 <col:2> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'     | |-UnaryOperator 0x14c145990 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c145970 <col:15> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x14c1459a8 <col:19> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x14c145a00 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c1459c8 <col:26> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     |-BinaryOperator 0x14c145c28 <line:51:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x14c145a60 <col:2> 'int' lvalue Var 0x14c142108 'needs_cloning' 'int'     | `-UnaryOperator 0x14c145c10 <col:18, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x14c145be8 <col:19, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14c145b60 <col:19> 'int ()' Function 0x14c145aa8 'file_exists' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14c145ba0 <col:31, col:34> '<dependent type>' contains-errors lvalue .buf     |       `-RecoveryExpr 0x14c145b80 <col:31> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c145ca0 <line:53:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c145c48 <col:2> 'int ()' Function 0x14c145818 'strbuf_reset' 'int ()'     | `-UnaryOperator 0x14c145c88 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14c145c68 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c146110 <line:54:2, line:56:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c145cc8 <line:54:2> 'int ()' Function 0x14c142410 'strbuf_addf' 'int ()'     | |-UnaryOperator 0x14c145d08 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c145ce8 <col:15> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x14c145d20 <col:19> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x14c145d78 <col:26, col:30> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c145d40 <col:26> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     | |-CallExpr 0x14c145f18 <line:55:4, col:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c145e80 <col:4> 'int ()' Function 0x14c145dc8 'oid_to_hex' 'int ()'     | | `-UnaryOperator 0x14c145f00 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x14c145ed8 <col:16, col:20> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14c145ea0 <col:16> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     | |-CallExpr 0x14c1460d0 <col:26, col:37> 'int'     | | |-ImplicitCastExpr 0x14c1460b8 <col:26> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14c145f40 <col:26> 'int ()' Function 0x14c142208 'ce_stage' 'int ()'     | | `-ImplicitCastExpr 0x14c1460f8 <col:35> 'const struct cache_entry *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c145f60 <col:35> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     | |-DeclRefExpr 0x14c145fd8 <line:56:4> 'int' lvalue Var 0x14c142108 'needs_cloning' 'int'     | `-RecoveryExpr 0x14c146038 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c146000 <col:19> 'const struct cache_entry *' lvalue ParmVar 0x14c129248 'ce' 'const struct cache_entry *'     |-CallExpr 0x14c146348 <line:57:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c146248 <col:2> 'int ()' Function 0x14c146190 'string_list_append' 'int ()'     | |-UnaryOperator 0x14c1462c8 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c1462a0 <col:22, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c146268 <col:22> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     | `-CXXDependentScopeMemberExpr 0x14c146300 <col:41, col:44> '<dependent type>' contains-errors lvalue .buf     |   `-RecoveryExpr 0x14c1462e0 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c1463e0 <line:59:2, line:60:8>     | |-UnaryOperator 0x14c1463b0 <line:59:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c146398 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14c146378 <col:7> 'int' lvalue Var 0x14c142108 'needs_cloning' 'int'     | `-GotoStmt 0x14c1463c8 <line:60:3, col:8> 'cleanup' 0x14c1446f8     |-BinaryOperator 0x14c146480 <line:62:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c146438 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c146400 <col:2> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     | `-IntegerLiteral 0x14c146460 <col:19> 'int' 1     |-BinaryOperator 0x14c146520 <line:63:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c1464d8 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c1464a0 <col:2> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     | `-IntegerLiteral 0x14c146500 <col:20> 'int' 1     |-BinaryOperator 0x14c1465c0 <line:64:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c146578 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c146540 <col:2> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     | `-IntegerLiteral 0x14c1465a0 <col:28> 'int' 1     |-BinaryOperator 0x14c146678 <line:65:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c146618 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c1465e0 <col:2> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     | `-UnaryOperator 0x14c146660 <col:15, col:16> 'int' prefix '-'     |   `-IntegerLiteral 0x14c146640 <col:16> 'int' 1     |-CallExpr 0x14c146830 <line:66:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c146778 <col:2> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'     | |-UnaryOperator 0x14c1467f8 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c1467d0 <col:19, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c146798 <col:19> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     | `-StringLiteral 0x14c146810 <col:32> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14c146918 <line:67:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c146860 <col:2> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'     | |-UnaryOperator 0x14c1468e0 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c1468b8 <col:19, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c146880 <col:19> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     | `-StringLiteral 0x14c1468f8 <col:32> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14c146a90 <line:68:2, line:69:38>     | |-RecoveryExpr 0x14c146980 <line:68:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c146948 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     | `-CallExpr 0x14c146a60 <line:69:3, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c1469a8 <col:3> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'     |   |-UnaryOperator 0x14c146a28 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c146a00 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c1469c8 <col:20> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     |   `-StringLiteral 0x14c146a40 <col:33> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14c146bf8 <line:70:2, line:71:38>     | |-RecoveryExpr 0x14c146ae8 <line:70:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c146ab0 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     | `-CallExpr 0x14c146bc8 <line:71:3, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c146b10 <col:3> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'     |   |-UnaryOperator 0x14c146b90 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c146b68 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c146b30 <col:20> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     |   `-StringLiteral 0x14c146ba8 <col:33> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14c147090 <line:74:2, line:75:38>     | |-BinaryOperator 0x14c146f70 <line:74:6, col:58> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x14c146ea8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14c146e70 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     | | `-BinaryOperator 0x14c146f50 <col:32, col:58> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x14c146f08 <col:32, col:37> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14c146ed0 <col:32> 'const struct submodule *' contains-errors lvalue Var 0x14c141d98 'sub' 'const struct submodule *'     | |   `-IntegerLiteral 0x14c146f30 <col:58> 'int' 1     | `-CallExpr 0x14c147060 <line:75:3, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c146f90 <col:3> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'     |   |-UnaryOperator 0x14c147028 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c147000 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c146fb0 <col:20> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     |   `-StringLiteral 0x14c147040 <col:33> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14c1479a0 <line:79:2, line:83:2>     | |-CXXDependentScopeMemberExpr 0x14c147458 <line:79:6, col:22> '<dependent type>' contains-errors lvalue .nr     | | `-RecoveryExpr 0x14c147430 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c1473f8 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     | `-CompoundStmt 0x14c147980 <col:26, line:83:2>     |   |-DeclStmt 0x14c147688 <line:80:3, col:32>     |   | |-RecordDecl 0x14c1474a0 <col:3, col:10> col:10 struct string_list_item     |   | `-VarDecl 0x14c147608 <col:3, col:28> col:28 used item 'struct string_list_item *'     |   `-CallExpr 0x14c147838 <line:81:3, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14c147780 <col:3> 'int ()' Function 0x14c1476c8 'for_each_string_list_item' 'int ()'     |     |-DeclRefExpr 0x14c1477a0 <col:29> 'struct string_list_item *' lvalue Var 0x14c147608 'item' 'struct string_list_item *'     |     `-UnaryOperator 0x14c147820 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14c1477f8 <col:36, col:41> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14c1477c0 <col:36> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     |-IfStmt 0x14c147b48 <line:84:2, line:85:43>     | |-RecoveryExpr 0x14c1479f8 <line:84:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c1479c0 <col:6> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     | `-CallExpr 0x14c147b18 <line:85:3, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c147a20 <col:3> 'int ()' Function 0x14c1466c0 'argv_array_push' 'int ()'     |   |-UnaryOperator 0x14c147aa0 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14c147a78 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c147a40 <col:20> 'struct child_process *' lvalue ParmVar 0x14c141628 'child' 'struct child_process *'     |   `-RecoveryExpr 0x14c147af0 <col:33, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c147ab8 <col:33> 'struct submodule_update_clone *' lvalue ParmVar 0x14c1417f8 'suc' 'struct submodule_update_clone *'     |-LabelStmt 0x14c147be8 <line:87:1, line:88:30> 'cleanup'     | `-CallExpr 0x14c147bc0 <col:2, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c147b68 <col:2> 'int ()' Function 0x14c145818 'strbuf_reset' 'int ()'     |   `-UnaryOperator 0x14c147ba8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14c147b88 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c147c60 <line:89:2, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c147c08 <col:2> 'int ()' Function 0x14c145818 'strbuf_reset' 'int ()'     | `-UnaryOperator 0x14c147c48 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14c147c28 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14c147cc0 <line:91:2, col:9>       `-ImplicitCastExpr 0x14c147ca8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c147c88 <col:9> 'int' lvalue Var 0x14c142108 'needs_cloning' 'int' ","19517":"`-FunctionDecl 0x123826600  line:1:6 bitbag_set_bit 'void (struct bitbag *, int)'   |-ParmVarDecl 0x12380e248 <col:21, col:36> col:36 used bb 'struct bitbag *'   |-ParmVarDecl 0x12380e2c8 <col:40, col:44> col:44 used ndx 'int'   `-CompoundStmt 0x123827008 <line:2:1, line:12:1>     |-DeclStmt 0x123826830 <line:3:2, col:35>     | `-VarDecl 0x123826718 <col:2, col:19> col:6 used slot 'int' cinit     |   `-BinaryOperator 0x123826810 <col:13, col:19> '<dependent type>' contains-errors '\/'     |     |-DeclRefExpr 0x123826780 <col:13> 'int' lvalue ParmVar 0x12380e2c8 'ndx' 'int'     |     `-RecoveryExpr 0x1238267f0 <col:19> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x1238268d0 <line:4:2, col:9> 'int' contains-errors '%=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x123826848 <col:2> 'int' lvalue ParmVar 0x12380e2c8 'ndx' 'int'     | `-RecoveryExpr 0x1238268b0 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123826d60 <line:6:2, line:9:2>     | |-UnaryOperator 0x1238269e8 <line:6:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1238269d0 <col:7, col:20> '<dependent type>' contains-errors <LValueToRValue>     | |   `-ArraySubscriptExpr 0x1238269b0 <col:7, col:20> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x123826980 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x123826938 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x123826900 <col:7> 'struct bitbag *' lvalue ParmVar 0x12380e248 'bb' 'struct bitbag *'     | |     `-ImplicitCastExpr 0x123826998 <col:16> 'int' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x123826960 <col:16> 'int' contains-errors lvalue Var 0x123826718 'slot' 'int'     | `-CompoundStmt 0x123826d48 <col:23, line:9:2>     |   `-IfStmt 0x123826d28 <line:7:3, line:8:23>     |     |-RecoveryExpr 0x123826ae8 <line:7:7, col:62> '_Bool' contains-errors     |     `-CallExpr 0x123826ce8 <line:8:4, col:23> 'int'     |       |-ImplicitCastExpr 0x123826cd0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x123826c20 <col:4> 'int ()' Function 0x123826b68 'out_of_memory' 'int ()'     |       `-ImplicitCastExpr 0x123826d10 <col:18> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x123826c80 <col:18> 'char[4]' lvalue \"STR\"     `-CompoundAssignOperator 0x123826fd8 <line:11:2, col:43> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-ArraySubscriptExpr 0x123826ee0 <col:2, col:23> '<dependent type>' contains-errors lvalue       | |-ImplicitCastExpr 0x123826ec8 <col:2, col:15> '<dependent type>' contains-errors <LValueToRValue>       | | `-ArraySubscriptExpr 0x123826e30 <col:2, col:15> '<dependent type>' contains-errors lvalue       | |   |-ImplicitCastExpr 0x123826e00 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>       | |   | `-RecoveryExpr 0x123826db8 <col:2, col:6> '<dependent type>' contains-errors lvalue       | |   |   `-DeclRefExpr 0x123826d80 <col:2> 'struct bitbag *' lvalue ParmVar 0x12380e248 'bb' 'struct bitbag *'       | |   `-ImplicitCastExpr 0x123826e18 <col:11> 'int' contains-errors <LValueToRValue>       | |     `-DeclRefExpr 0x123826de0 <col:11> 'int' contains-errors lvalue Var 0x123826718 'slot' 'int'       | `-BinaryOperator 0x123826ea8 <col:17, col:21> 'int' '\/'       |   |-ImplicitCastExpr 0x123826e90 <col:17> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x123826e50 <col:17> 'int' lvalue ParmVar 0x12380e2c8 'ndx' 'int'       |   `-IntegerLiteral 0x123826e70 <col:21> 'int' 32       `-BinaryOperator 0x123826fb8 <col:28, col:43> 'unsigned int' '<<'         |-IntegerLiteral 0x123826f00 <col:28> 'unsigned int' 1         `-ParenExpr 0x123826f98 <col:34, col:43> 'int'           `-BinaryOperator 0x123826f78 <col:35, col:41> 'int' '%'             |-ImplicitCastExpr 0x123826f60 <col:35> 'int' <LValueToRValue>             | `-DeclRefExpr 0x123826f20 <col:35> 'int' lvalue ParmVar 0x12380e2c8 'ndx' 'int'             `-IntegerLiteral 0x123826f40 <col:41> 'int' 32 ","19876":"`-FunctionDecl 0x107008f68  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x107009068 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1070090d0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x107009138 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x107009010 <<invalid sloc>> Implicit 882 ","19138":"`-FunctionDecl 0x152827ab0  col:12 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x152827bb0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x152827b58 <<invalid sloc>> Implicit 902 ","19350":"`-FunctionDecl 0x138143db0  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x138143eb0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x138143e58 <<invalid sloc>> Implicit 903   `-FormatAttr 0x138143f20 <col:3> Implicit printf 1 2 ","19349":"`-FunctionDecl 0x14c831e88  line:1:12 mce_default_notifier 'int (struct notifier_block *, unsigned long, void *)' static   |-ParmVarDecl 0x14c813c48 <col:33, col:56> col:56 nb 'struct notifier_block *'   |-ParmVarDecl 0x14c813cc8 <col:60, col:74> col:74 val 'unsigned long'   |-ParmVarDecl 0x14c813d48 <line:2:5, col:11> col:11 used data 'void *'   `-CompoundStmt 0x14c832810 <line:3:1, line:15:1>     |-DeclStmt 0x14c832260 <line:4:2, col:36>     | |-RecordDecl 0x14c831f90 <col:2, col:9> col:9 struct mce     | `-VarDecl 0x14c8320f8 <col:2, col:32> col:14 used m 'struct mce *' cinit     |   `-CStyleCastExpr 0x14c832220 <col:18, col:32> 'struct mce *' <BitCast>     |     `-ImplicitCastExpr 0x14c832208 <col:32> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x14c832160 <col:32> 'void *' lvalue ParmVar 0x14c813d48 'data' 'void *'     |-IfStmt 0x14c832328 <line:6:2, line:7:10>     | |-UnaryOperator 0x14c8322b0 <line:6:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c832298 <col:7> 'struct mce *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c832278 <col:7> 'struct mce *' lvalue Var 0x14c8320f8 'm' 'struct mce *'     | `-ReturnStmt 0x14c832318 <line:7:3, col:10>     |   `-RecoveryExpr 0x14c8322f8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c8325f8 <line:9:2, line:10:10>     | |-BinaryOperator 0x14c832590 <line:9:6, col:36> 'int' contains-errors '>'     | | |-CallExpr 0x14c832548 <col:6, col:32> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14c832460 <col:6> 'int ()' Function 0x14c8323a8 'atomic_read' 'int ()'     | | | `-UnaryOperator 0x14c832530 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x14c832510 <col:19> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14c832570 <col:36> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c8325e8 <line:10:3, col:10>     |   `-RecoveryExpr 0x14c8325c8 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c832788 <line:12:2, col:15> 'int'     | |-ImplicitCastExpr 0x14c832770 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c8326f8 <col:2> 'int ()' Function 0x14c832640 '__print_mce' 'int ()'     | `-ImplicitCastExpr 0x14c8327b0 <col:14> 'struct mce *' <LValueToRValue>     |   `-DeclRefExpr 0x14c832718 <col:14> 'struct mce *' lvalue Var 0x14c8320f8 'm' 'struct mce *'     `-ReturnStmt 0x14c832800 <line:14:2, col:9>       `-RecoveryExpr 0x14c8327e0 <col:9> '<dependent type>' contains-errors lvalue ","19790":"`-FunctionDecl 0x120928258  line:1:1 invalid imapx_uids_array_cmp 'int (int, int)'   |-ParmVarDecl 0x1209280f0 <col:23, col:37> col:37 invalid ap 'int'   |-ParmVarDecl 0x120928170 <line:2:23, col:37> col:37 invalid bp 'int'   `-CompoundStmt 0x12100a6c8 <line:3:1, line:8:1>     |-DeclStmt 0x120928420 <line:4:2, col:39>     | `-VarDecl 0x120928358 <col:2, col:37> col:16 used a 'const char **' cinit     |   `-CStyleCastExpr 0x1209283f8 <col:20, col:37> 'const char **' contains-errors <Dependent>     |     `-RecoveryExpr 0x1209283c0 <col:37> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x120928518 <line:5:2, col:39>     | `-VarDecl 0x120928450 <col:2, col:37> col:16 used b 'const char **' cinit     |   `-CStyleCastExpr 0x1209284f0 <col:20, col:37> 'const char **' contains-errors <Dependent>     |     `-RecoveryExpr 0x1209284b8 <col:37> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12100a6b8 <line:7:2, col:49>       `-CallExpr 0x12100a680 <col:9, col:49> '<dependent type>' contains-errors         |-DeclRefExpr 0x120928690 <col:9> 'int ()' Function 0x1209285d8 'imapx_refresh_info_uid_cmp' 'int ()'         |-UnaryOperator 0x12100a618 <col:37, col:38> 'const char *' contains-errors lvalue prefix '*' cannot overflow         | `-ImplicitCastExpr 0x12100a600 <col:38> 'const char **' contains-errors <LValueToRValue>         |   `-DeclRefExpr 0x1209286b0 <col:38> 'const char **' contains-errors lvalue Var 0x120928358 'a' 'const char **'         |-UnaryOperator 0x12100a648 <col:41, col:42> 'const char *' contains-errors lvalue prefix '*' cannot overflow         | `-ImplicitCastExpr 0x12100a630 <col:42> 'const char **' contains-errors <LValueToRValue>         |   `-DeclRefExpr 0x120928700 <col:42> 'const char **' contains-errors lvalue Var 0x120928450 'b' 'const char **'         `-RecoveryExpr 0x12100a660 <col:45> '<dependent type>' contains-errors lvalue ","19373":"`-FunctionDecl 0x14e128258  line:1:1 invalid format_iso_time 'int (char *, int)'   |-ParmVarDecl 0x14e1280d8 <col:17, col:23> col:23 used buf 'char *'   |-ParmVarDecl 0x14e128170 <col:28, col:35> col:35 invalid t 'int'   `-CompoundStmt 0x14e141d80 <line:2:1, line:5:1>     |-DeclStmt 0x14e1418a8 <line:3:3, col:15>     | |-RecordDecl 0x14e128310 <col:3, col:10> col:10 struct tm     | `-VarDecl 0x14e128408 <col:3, col:13> col:13 invalid tm 'struct tm'     `-CallExpr 0x14e141d40 <line:4:3, col:61> '<dependent type>' contains-errors       |-DeclRefExpr 0x14e141a20 <col:3> 'int ()' Function 0x14e141968 'strftime' 'int ()'       |-DeclRefExpr 0x14e141a40 <col:12> 'char *' lvalue ParmVar 0x14e1280d8 'buf' 'char *'       |-BinaryOperator 0x14e141d20 <col:17, col:30> '<dependent type>' contains-errors '+'       | |-RecoveryExpr 0x14e141d00 <col:17> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x14e141a78 <col:30> 'int' 1       |-StringLiteral 0x14e141b00 <col:33> 'char[4]' lvalue \"STR\"       `-CallExpr 0x14e141c90 <col:40, col:60> '<dependent type>' contains-errors         |-DeclRefExpr 0x14e141c00 <col:40> 'int ()' Function 0x14e141b48 'tor_gmtime_r' 'int ()'         |-UnaryOperator 0x14e141c40 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x14e141c20 <col:54> '<dependent type>' contains-errors lvalue         `-UnaryOperator 0x14e141c78 <col:57, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x14e141c58 <col:58> '<dependent type>' contains-errors lvalue ","19540":"`-FunctionDecl 0x15b128138  line:1:13 invalid spec 'int ()'   `-CompoundStmt 0x15b128430 <col:20, line:3:5>     |-ReturnStmt 0x15b128418 <line:2:9, col:26>     | `-CallExpr 0x15b1283d8 <col:16, col:26> 'int'     |   |-ImplicitCastExpr 0x15b1283c0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b128308 <col:16> 'int ()' Function 0x15b128250 'BSON' 'int ()'     |   `-ImplicitCastExpr 0x15b128400 <col:21> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x15b128370 <col:21> 'char[4]' lvalue \"STR\"     `-NullStmt 0x15b128428 <col:28> ","19550":"`-FunctionDecl 0x142940b48  line:1:12 toneport_init 'int (struct usb_line6 *, const struct usb_device_id *)' static   |-ParmVarDecl 0x142928648 <col:26, col:44> col:44 used line6 'struct usb_line6 *'   |-ParmVarDecl 0x142940a28 <line:2:5, col:33> col:33 used id 'const struct usb_device_id *'   `-CompoundStmt 0x1429457d0 <line:3:1, line:49:1>     |-DeclStmt 0x142940cc8 <line:4:2, col:9>     | `-VarDecl 0x142940c60 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x142940fb0 <line:5:2, col:76>     | |-RecordDecl 0x142940ce0 <col:2, col:9> col:9 struct usb_line6_toneport     | `-VarDecl 0x142940e48 <col:2, col:71> col:29 used toneport 'struct usb_line6_toneport *' cinit     |   `-CStyleCastExpr 0x142940f70 <col:41, col:71> 'struct usb_line6_toneport *' <BitCast>     |     `-ImplicitCastExpr 0x142940f58 <col:71> 'struct usb_line6 *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x142940eb0 <col:71> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     |-BinaryOperator 0x142941088 <line:7:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142941000 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142940fc8 <col:2> 'struct usb_line6_toneport *' lvalue Var 0x142940e48 'toneport' 'struct usb_line6_toneport *'     | `-RecoveryExpr 0x142941060 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x142941028 <col:19> 'const struct usb_device_id *' lvalue ParmVar 0x142940a28 'id' 'const struct usb_device_id *'     |-CallExpr 0x1429412d0 <line:8:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1429411d0 <col:2> 'int ()' Function 0x142941118 'INIT_DELAYED_WORK' 'int ()'     | |-UnaryOperator 0x142941250 <col:20, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x142941228 <col:21, col:31> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1429411f0 <col:21> 'struct usb_line6_toneport *' lvalue Var 0x142940e48 'toneport' 'struct usb_line6_toneport *'     | `-RecoveryExpr 0x1429412b0 <col:41> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1429413b8 <line:10:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x142941338 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142941300 <col:2> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     | `-RecoveryExpr 0x142941398 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x142941600 <line:13:2, col:54> 'int' contains-errors '='     | |-DeclRefExpr 0x1429413d8 <col:2> 'int' lvalue Var 0x142940c60 'err' 'int'     | `-CallExpr 0x1429415d0 <col:8, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1429414d8 <col:8> 'int ()' Function 0x142941420 'line6_init_pcm' 'int ()'     |   |-DeclRefExpr 0x1429414f8 <col:23> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     |   `-UnaryOperator 0x1429415b8 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x142941598 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1429416e0 <line:14:2, line:15:10>     | |-BinaryOperator 0x142941678 <line:14:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x142941660 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x142941620 <col:6> 'int' lvalue Var 0x142940c60 'err' 'int'     | | `-IntegerLiteral 0x142941640 <col:12> 'int' 0     | `-ReturnStmt 0x1429416d0 <line:15:3, col:10>     |   `-ImplicitCastExpr 0x1429416b8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x142941698 <col:10> 'int' lvalue Var 0x142940c60 'err' 'int'     |-BinaryOperator 0x142944540 <line:18:2, line:20:28> 'int' contains-errors '='     | |-DeclRefExpr 0x142941700 <line:18:2> 'int' lvalue Var 0x142940c60 'err' 'int'     | `-CallExpr 0x142944510 <col:8, line:20:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x142941800 <line:18:8> 'int ()' Function 0x142941748 'snd_ctl_add' 'int ()'     |   |-RecoveryExpr 0x142941858 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x142941820 <col:20> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     |   `-CallExpr 0x1429444e0 <line:19:6, line:20:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x142941960 <line:19:6> 'int ()' Function 0x1429418a8 'snd_ctl_new1' 'int ()'     |     |-UnaryOperator 0x1429444c8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x1429444a8 <col:20> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x142944400 <line:20:12, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1429419b0 <col:12> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     |-IfStmt 0x142944620 <line:21:2, line:22:10>     | |-BinaryOperator 0x1429445b8 <line:21:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x1429445a0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x142944560 <col:6> 'int' lvalue Var 0x142940c60 'err' 'int'     | | `-IntegerLiteral 0x142944580 <col:12> 'int' 0     | `-ReturnStmt 0x142944610 <line:22:3, col:10>     |   `-ImplicitCastExpr 0x1429445f8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1429445d8 <col:10> 'int' lvalue Var 0x142940c60 'err' 'int'     |-IfStmt 0x142944b70 <line:25:2, line:32:2>     | |-CallExpr 0x1429447a8 <line:25:6, col:41> 'int'     | | |-ImplicitCastExpr 0x142944790 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x142944720 <col:6> 'int ()' Function 0x142944668 'toneport_has_source_select' 'int ()'     | | `-ImplicitCastExpr 0x1429447d0 <col:33> 'struct usb_line6_toneport *' <LValueToRValue>     | |   `-DeclRefExpr 0x142944740 <col:33> 'struct usb_line6_toneport *' lvalue Var 0x142940e48 'toneport' 'struct usb_line6_toneport *'     | `-CompoundStmt 0x142944b50 <col:44, line:32:2>     |   |-BinaryOperator 0x142944a50 <line:26:3, line:29:27> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1429447e8 <line:26:3> 'int' lvalue Var 0x142940c60 'err' 'int'     |   | `-CallExpr 0x142944a20 <line:27:7, line:29:27> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x142944808 <line:27:7> 'int ()' Function 0x142941748 'snd_ctl_add' 'int ()'     |   |   |-RecoveryExpr 0x142944860 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x142944828 <col:19> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     |   |   `-CallExpr 0x1429449f0 <line:28:5, line:29:26> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x142944888 <line:28:5> 'int ()' Function 0x1429418a8 'snd_ctl_new1' 'int ()'     |   |     |-UnaryOperator 0x1429449d8 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     | `-RecoveryExpr 0x1429449b8 <col:19> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x142944910 <line:29:11, col:18> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1429448d8 <col:11> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     |   `-IfStmt 0x142944b30 <line:30:3, line:31:11>     |     |-BinaryOperator 0x142944ac8 <line:30:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x142944ab0 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x142944a70 <col:7> 'int' lvalue Var 0x142940c60 'err' 'int'     |     | `-IntegerLiteral 0x142944a90 <col:13> 'int' 0     |     `-ReturnStmt 0x142944b20 <line:31:4, col:11>     |       `-ImplicitCastExpr 0x142944b08 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x142944ae8 <col:11> 'int' lvalue Var 0x142940c60 'err' 'int'     |-CallExpr 0x142944d28 <line:34:2, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142944c70 <col:2> 'int ()' Function 0x142944bb8 'line6_read_serial_number' 'int ()'     | |-DeclRefExpr 0x142944c90 <col:27> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     | `-UnaryOperator 0x142944d10 <col:34, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x142944ce8 <col:35, col:45> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x142944cb0 <col:35> 'struct usb_line6_toneport *' lvalue Var 0x142940e48 'toneport' 'struct usb_line6_toneport *'     |-CallExpr 0x142944f30 <line:35:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142944e38 <col:2> 'int ()' Function 0x142944d80 'line6_read_data' 'int ()'     | |-DeclRefExpr 0x142944e58 <col:18> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *'     | |-IntegerLiteral 0x142944e78 <col:25> 'int' 32962     | |-UnaryOperator 0x142944ef8 <col:33, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x142944ed0 <col:34, col:44> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142944e98 <col:34> 'struct usb_line6_toneport *' lvalue Var 0x142940e48 'toneport' 'struct usb_line6_toneport *'     | `-IntegerLiteral 0x142944f10 <col:62> 'int' 1     |-IfStmt 0x1429453a0 <line:37:2, line:41:2>     | |-CallExpr 0x1429450a8 <line:37:6, col:31> 'int'     | | |-ImplicitCastExpr 0x142945090 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x142945050 <col:6> 'int ()' Function 0x142944f98 'toneport_has_led' 'int ()'     | | `-ImplicitCastExpr 0x1429450d0 <col:23> 'struct usb_line6_toneport *' <LValueToRValue>     | |   `-DeclRefExpr 0x142945070 <col:23> 'struct usb_line6_toneport *' lvalue Var 0x142940e48 'toneport' 'struct usb_line6_toneport *'     | `-CompoundStmt 0x142945380 <col:34, line:41:2>     |   |-BinaryOperator 0x142945280 <line:38:3, col:36> 'int' '='     |   | |-DeclRefExpr 0x1429450e8 <col:3> 'int' lvalue Var 0x142940c60 'err' 'int'     |   | `-CallExpr 0x142945240 <col:9, col:36> 'int'     |   |   |-ImplicitCastExpr 0x142945228 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1429451e8 <col:9> 'int ()' Function 0x142945130 'toneport_init_leds' 'int ()'     |   |   `-ImplicitCastExpr 0x142945268 <col:28> 'struct usb_line6_toneport *' <LValueToRValue>     |   |     `-DeclRefExpr 0x142945208 <col:28> 'struct usb_line6_toneport *' lvalue Var 0x142940e48 'toneport' 'struct usb_line6_toneport *'     |   `-IfStmt 0x142945360 <line:39:3, line:40:11>     |     |-BinaryOperator 0x1429452f8 <line:39:7, col:13> 'int' '<'     |     | |-ImplicitCastExpr 0x1429452e0 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x1429452a0 <col:7> 'int' lvalue Var 0x142940c60 'err' 'int'     |     | `-IntegerLiteral 0x1429452c0 <col:13> 'int' 0     |     `-ReturnStmt 0x142945350 <line:40:4, col:11>     |       `-ImplicitCastExpr 0x142945338 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x142945318 <col:11> 'int' lvalue Var 0x142940c60 'err' 'int'     |-BinaryOperator 0x142945578 <line:43:2, col:31> 'int' '='     | |-DeclRefExpr 0x1429453c0 <col:2> 'int' lvalue Var 0x142940c60 'err' 'int'     | `-CallExpr 0x142945538 <col:8, col:31> 'int'     |   |-ImplicitCastExpr 0x142945520 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1429454e0 <col:8> 'int ()' Function 0x142945428 'toneport_setup' 'int ()'     |   `-ImplicitCastExpr 0x142945560 <col:23> 'struct usb_line6_toneport *' <LValueToRValue>     |     `-DeclRefExpr 0x142945500 <col:23> 'struct usb_line6_toneport *' lvalue Var 0x142940e48 'toneport' 'struct usb_line6_toneport *'     |-IfStmt 0x142945618 <line:44:2, line:45:10>     | |-ImplicitCastExpr 0x1429455b8 <line:44:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x142945598 <col:6> 'int' lvalue Var 0x142940c60 'err' 'int'     | `-ReturnStmt 0x142945608 <line:45:3, col:10>     |   `-ImplicitCastExpr 0x1429455f0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1429455d0 <col:10> 'int' lvalue Var 0x142940c60 'err' 'int'     `-ReturnStmt 0x1429457c0 <line:48:2, col:38>       `-CallExpr 0x142945798 <col:9, col:38> '<dependent type>' contains-errors         |-DeclRefExpr 0x142945718 <col:9> 'int ()' Function 0x142945660 'snd_card_register' 'int ()'         `-RecoveryExpr 0x142945770 <col:27, col:34> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x142945738 <col:27> 'struct usb_line6 *' lvalue ParmVar 0x142928648 'line6' 'struct usb_line6 *' ","19855":"`-FunctionDecl 0x13a1281f8  line:1:12 invalid checkout_extensions_update_index 'int (int *)' static   |-ParmVarDecl 0x13a128128 <col:45, col:60> col:60 invalid data 'int *'   `-CompoundStmt 0x13a142800 <line:2:1, line:31:1>     |-DeclStmt 0x13a128328 <line:3:2, col:40>     | `-VarDecl 0x13a1282c0 <col:2, col:30> col:30 invalid reuc_entry 'const int *'     |-DeclStmt 0x13a1283c0 <line:4:2, col:40>     | `-VarDecl 0x13a128358 <col:2, col:30> col:30 invalid name_entry 'const int *'     |-UnaryExprOrTypeTraitExpr 0x13a128430 <line:5:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13a128410 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13a1284f0 <line:6:2, col:15>     | `-VarDecl 0x13a128468 <col:2, col:14> col:6 used error 'int' cinit     |   `-IntegerLiteral 0x13a1284d0 <col:14> 'int' 0     |-IfStmt 0x13a128618 <line:8:2, line:9:10>     | |-RecoveryExpr 0x13a1285c8 <line:8:6, col:53> '_Bool' contains-errors     | `-ReturnStmt 0x13a128608 <line:9:3, col:10>     |   `-IntegerLiteral 0x13a1285e8 <col:10> 'int' 0     |-IfStmt 0x13a1421a8 <line:11:2, line:19:2>     | |-CXXDependentScopeMemberExpr 0x13a128658 <line:11:6, col:12> '<dependent type>' contains-errors lvalue ->update_reuc     | | `-RecoveryExpr 0x13a128638 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a142188 <col:25, line:19:2>     |   |-CallExpr 0x13a141918 <line:12:3, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a141800 <col:3> 'int ()' Function 0x13a128748 'git_vector_foreach' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x13a141840 <col:22, col:28> '<dependent type>' contains-errors lvalue ->update_reuc     |   | | `-RecoveryExpr 0x13a141820 <col:22> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x13a1418f8 <col:41> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x13a1418a0 <col:44> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x13a142170 <col:56, line:18:3>     |     `-IfStmt 0x13a142150 <line:13:4, line:17:10>     |       |-BinaryOperator 0x13a1420c8 <line:13:8, line:16:50> 'int' contains-errors '<'     |       | |-ParenExpr 0x13a142088 <line:13:8, line:16:46> 'int' contains-errors     |       | | `-BinaryOperator 0x13a142068 <line:13:9, line:16:45> 'int' contains-errors '='     |       | |   |-DeclRefExpr 0x13a141950 <line:13:9> 'int' lvalue Var 0x13a128468 'error' 'int'     |       | |   `-CallExpr 0x13a142008 <col:17, line:16:45> '<dependent type>' contains-errors     |       | |     |-DeclRefExpr 0x13a141a50 <line:13:17> 'int ()' Function 0x13a141998 'git_index_reuc_add' 'int ()'     |       | |     |-CXXDependentScopeMemberExpr 0x13a141a90 <col:36, col:42> '<dependent type>' contains-errors lvalue ->index     |       | |     | `-RecoveryExpr 0x13a141a70 <col:36> '<dependent type>' contains-errors lvalue     |       | |     |-CXXDependentScopeMemberExpr 0x13a141af8 <col:49, col:61> '<dependent type>' contains-errors lvalue ->path     |       | |     | `-RecoveryExpr 0x13a141ad8 <col:49> '<dependent type>' contains-errors lvalue     |       | |     |-ArraySubscriptExpr 0x13a141be0 <line:14:5, col:23> '<dependent type>' contains-errors lvalue     |       | |     | |-ImplicitCastExpr 0x13a141bc8 <col:5, col:17> '<dependent type>' contains-errors <LValueToRValue>     |       | |     | | `-CXXDependentScopeMemberExpr 0x13a141b60 <col:5, col:17> '<dependent type>' contains-errors lvalue ->mode     |       | |     | |   `-RecoveryExpr 0x13a141b40 <col:5> '<dependent type>' contains-errors lvalue     |       | |     | `-IntegerLiteral 0x13a141ba8 <col:22> 'int' 0     |       | |     |-UnaryOperator 0x13a141cc0 <col:26, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | |     | `-ArraySubscriptExpr 0x13a141ca0 <col:27, col:44> '<dependent type>' contains-errors lvalue     |       | |     |   |-ImplicitCastExpr 0x13a141c88 <col:27, col:39> '<dependent type>' contains-errors <LValueToRValue>     |       | |     |   | `-CXXDependentScopeMemberExpr 0x13a141c20 <col:27, col:39> '<dependent type>' contains-errors lvalue ->oid     |       | |     |   |   `-RecoveryExpr 0x13a141c00 <col:27> '<dependent type>' contains-errors lvalue     |       | |     |   `-IntegerLiteral 0x13a141c68 <col:43> 'int' 0     |       | |     |-ArraySubscriptExpr 0x13a141d78 <line:15:5, col:23> '<dependent type>' contains-errors lvalue     |       | |     | |-ImplicitCastExpr 0x13a141d60 <col:5, col:17> '<dependent type>' contains-errors <LValueToRValue>     |       | |     | | `-CXXDependentScopeMemberExpr 0x13a141cf8 <col:5, col:17> '<dependent type>' contains-errors lvalue ->mode     |       | |     | |   `-RecoveryExpr 0x13a141cd8 <col:5> '<dependent type>' contains-errors lvalue     |       | |     | `-IntegerLiteral 0x13a141d40 <col:22> 'int' 1     |       | |     |-UnaryOperator 0x13a141e58 <col:26, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | |     | `-ArraySubscriptExpr 0x13a141e38 <col:27, col:44> '<dependent type>' contains-errors lvalue     |       | |     |   |-ImplicitCastExpr 0x13a141e20 <col:27, col:39> '<dependent type>' contains-errors <LValueToRValue>     |       | |     |   | `-CXXDependentScopeMemberExpr 0x13a141db8 <col:27, col:39> '<dependent type>' contains-errors lvalue ->oid     |       | |     |   |   `-RecoveryExpr 0x13a141d98 <col:27> '<dependent type>' contains-errors lvalue     |       | |     |   `-IntegerLiteral 0x13a141e00 <col:43> 'int' 1     |       | |     |-ArraySubscriptExpr 0x13a141f10 <line:16:5, col:23> '<dependent type>' contains-errors lvalue     |       | |     | |-ImplicitCastExpr 0x13a141ef8 <col:5, col:17> '<dependent type>' contains-errors <LValueToRValue>     |       | |     | | `-CXXDependentScopeMemberExpr 0x13a141e90 <col:5, col:17> '<dependent type>' contains-errors lvalue ->mode     |       | |     | |   `-RecoveryExpr 0x13a141e70 <col:5> '<dependent type>' contains-errors lvalue     |       | |     | `-IntegerLiteral 0x13a141ed8 <col:22> 'int' 2     |       | |     `-UnaryOperator 0x13a141ff0 <col:26, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | |       `-ArraySubscriptExpr 0x13a141fd0 <col:27, col:44> '<dependent type>' contains-errors lvalue     |       | |         |-ImplicitCastExpr 0x13a141fb8 <col:27, col:39> '<dependent type>' contains-errors <LValueToRValue>     |       | |         | `-CXXDependentScopeMemberExpr 0x13a141f50 <col:27, col:39> '<dependent type>' contains-errors lvalue ->oid     |       | |         |   `-RecoveryExpr 0x13a141f30 <col:27> '<dependent type>' contains-errors lvalue     |       | |         `-IntegerLiteral 0x13a141f98 <col:43> 'int' 2     |       | `-IntegerLiteral 0x13a1420a8 <col:50> 'int' 0     |       `-GotoStmt 0x13a142138 <line:17:5, col:10> 'done' 0x13a1420e8     |-IfStmt 0x13a142770 <line:21:2, line:27:2>     | |-CXXDependentScopeMemberExpr 0x13a1421e8 <line:21:6, col:12> '<dependent type>' contains-errors lvalue ->update_names     | | `-RecoveryExpr 0x13a1421c8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a142750 <col:26, line:27:2>     |   |-CallExpr 0x13a142348 <line:22:3, col:55> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a142230 <col:3> 'int ()' Function 0x13a128748 'git_vector_foreach' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x13a142270 <col:22, col:28> '<dependent type>' contains-errors lvalue ->update_names     |   | | `-RecoveryExpr 0x13a142250 <col:22> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x13a142328 <col:42> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x13a1422d0 <col:45> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x13a142738 <col:57, line:26:3>     |     `-IfStmt 0x13a142718 <line:23:4, line:25:10>     |       |-BinaryOperator 0x13a1426e0 <line:23:8, line:24:46> 'int' contains-errors '<'     |       | |-ParenExpr 0x13a1426a0 <line:23:8, line:24:42> 'int' contains-errors     |       | | `-BinaryOperator 0x13a142680 <line:23:9, line:24:41> 'int' contains-errors '='     |       | |   |-DeclRefExpr 0x13a142380 <line:23:9> 'int' lvalue Var 0x13a128468 'error' 'int'     |       | |   `-CallExpr 0x13a142640 <col:17, line:24:41> '<dependent type>' contains-errors     |       | |     |-DeclRefExpr 0x13a142480 <line:23:17> 'int ()' Function 0x13a1423c8 'git_index_name_add' 'int ()'     |       | |     |-CXXDependentScopeMemberExpr 0x13a1424c0 <col:36, col:42> '<dependent type>' contains-errors lvalue ->index     |       | |     | `-RecoveryExpr 0x13a1424a0 <col:36> '<dependent type>' contains-errors lvalue     |       | |     |-CXXDependentScopeMemberExpr 0x13a142528 <col:49, col:61> '<dependent type>' contains-errors lvalue ->ancestor     |       | |     | `-RecoveryExpr 0x13a142508 <col:49> '<dependent type>' contains-errors lvalue     |       | |     |-CXXDependentScopeMemberExpr 0x13a142590 <line:24:5, col:17> '<dependent type>' contains-errors lvalue ->ours     |       | |     | `-RecoveryExpr 0x13a142570 <col:5> '<dependent type>' contains-errors lvalue     |       | |     `-CXXDependentScopeMemberExpr 0x13a1425f8 <col:23, col:35> '<dependent type>' contains-errors lvalue ->theirs     |       | |       `-RecoveryExpr 0x13a1425d8 <col:23> '<dependent type>' contains-errors lvalue     |       | `-IntegerLiteral 0x13a1426c0 <col:46> 'int' 0     |       `-GotoStmt 0x13a142700 <line:25:5, col:10> 'done' 0x13a1420e8     `-LabelStmt 0x13a1427d8 <line:29:1, line:30:9> 'done'       `-ReturnStmt 0x13a1427c8 <col:2, col:9>         `-ImplicitCastExpr 0x13a1427b0 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x13a142790 <col:9> 'int' lvalue Var 0x13a128468 'error' 'int' ","19793":"`-FunctionDecl 0x14c940b48  line:1:12 fuse_setattr 'int (struct dentry *, struct iattr *)' static   |-ParmVarDecl 0x14c928648 <col:25, col:40> col:40 used entry 'struct dentry *'   |-ParmVarDecl 0x14c940a28 <col:47, col:61> col:61 used attr 'struct iattr *'   `-CompoundStmt 0x14c949318 <line:2:1, line:47:1>     |-DeclStmt 0x14c941048 <line:3:2, col:38>     | |-RecordDecl 0x14c940c48 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x14c940db8 <col:2, col:37> col:16 used inode 'struct inode *' cinit     |   `-ImplicitCastExpr 0x14c941018 <col:24, col:37> 'struct inode *' <IntegralToPointer>     |     `-CallExpr 0x14c940fd8 <col:24, col:37> 'int'     |       |-ImplicitCastExpr 0x14c940fc0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14c940f50 <col:24> 'int ()' Function 0x14c940e98 'd_inode' 'int ()'     |       `-ImplicitCastExpr 0x14c941000 <col:32> 'struct dentry *' <LValueToRValue>     |         `-DeclRefExpr 0x14c940f70 <col:32> 'struct dentry *' lvalue ParmVar 0x14c928648 'entry' 'struct dentry *'     |-DeclStmt 0x14c9413d8 <line:4:2, col:45>     | |-RecordDecl 0x14c941060 <col:2, col:9> col:9 struct fuse_conn     | `-VarDecl 0x14c9411c8 <col:2, col:44> col:20 used fc 'struct fuse_conn *' cinit     |   `-ImplicitCastExpr 0x14c9413a8 <col:25, col:44> 'struct fuse_conn *' <IntegralToPointer>     |     `-CallExpr 0x14c941368 <col:25, col:44> 'int'     |       |-ImplicitCastExpr 0x14c941350 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14c941310 <col:25> 'int ()' Function 0x14c941258 'get_fuse_conn' 'int ()'     |       `-ImplicitCastExpr 0x14c941390 <col:39> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x14c941330 <col:39> 'struct inode *' lvalue Var 0x14c940db8 'inode' 'struct inode *'     |-DeclStmt 0x14c9416e8 <line:5:2, col:73>     | |-RecordDecl 0x14c9413f0 <col:2, col:9> col:9 struct file     | `-VarDecl 0x14c941558 <col:2, col:15> col:15 used file 'struct file *'     |-DeclStmt 0x14c941780 <line:6:2, col:9>     | `-VarDecl 0x14c941718 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x14c947040 <line:8:2, line:9:11>     | |-UnaryOperator 0x14c941970 <line:8:6, col:54> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x14c941948 <col:7, col:54> 'int'     | |   |-ImplicitCastExpr 0x14c941930 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14c941878 <col:7> 'int ()' Function 0x14c9417c0 'fuse_allow_current_process' 'int ()'     | |   `-CallExpr 0x14c9418f0 <col:34, col:53> 'int'     | |     |-ImplicitCastExpr 0x14c9418d8 <col:34> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x14c941898 <col:34> 'int ()' Function 0x14c941258 'get_fuse_conn' 'int ()'     | |     `-ImplicitCastExpr 0x14c941918 <col:48> 'struct inode *' <LValueToRValue>     | |       `-DeclRefExpr 0x14c9418b8 <col:48> 'struct inode *' lvalue Var 0x14c940db8 'inode' 'struct inode *'     | `-ReturnStmt 0x14c947030 <line:9:3, col:11>     |   `-UnaryOperator 0x14c947018 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c947000 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c9419d0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c947980 <line:11:2, line:32:2>     | |-RecoveryExpr 0x14c947110 <line:11:6, col:55> '_Bool' contains-errors     | `-CompoundStmt 0x14c947968 <col:58, line:32:2>     |   `-IfStmt 0x14c947948 <line:16:3, line:31:3>     |     |-BinaryOperator 0x14c947338 <line:16:7, col:36> 'int' contains-errors '&&'     |     | |-UnaryOperator 0x14c947290 <col:7, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | | `-ImplicitCastExpr 0x14c947278 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x14c947250 <col:8, col:12> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x14c947218 <col:8> 'struct fuse_conn *' lvalue Var 0x14c9411c8 'fc' 'struct fuse_conn *'     |     | `-UnaryOperator 0x14c947320 <col:31, col:36> '<dependent type>' contains-errors prefix '!' cannot overflow     |     |   `-ImplicitCastExpr 0x14c947308 <col:32, col:36> '<dependent type>' contains-errors <LValueToRValue>     |     |     `-RecoveryExpr 0x14c9472e0 <col:32, col:36> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x14c9472a8 <col:32> 'struct fuse_conn *' lvalue Var 0x14c9411c8 'fc' 'struct fuse_conn *'     |     `-CompoundStmt 0x14c947918 <col:56, line:31:3>     |       |-IfStmt 0x14c947538 <line:19:4, line:20:12>     |       | |-ImplicitCastExpr 0x14c9474d8 <line:19:8> 'int' <LValueToRValue>     |       | | `-DeclRefExpr 0x14c9474b8 <col:8> 'int' lvalue Var 0x14c941718 'ret' 'int'     |       | `-ReturnStmt 0x14c947528 <line:20:5, col:12>     |       |   `-ImplicitCastExpr 0x14c947510 <col:12> 'int' <LValueToRValue>     |       |     `-DeclRefExpr 0x14c9474f0 <col:12> 'int' lvalue Var 0x14c941718 'ret' 'int'     |       |-BinaryOperator 0x14c947618 <line:22:4, col:27> '<dependent type>' contains-errors '='     |       | |-RecoveryExpr 0x14c947590 <col:4, col:10> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x14c947558 <col:4> 'struct iattr *' lvalue ParmVar 0x14c940a28 'attr' 'struct iattr *'     |       | `-RecoveryExpr 0x14c9475f0 <col:20, col:27> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c9475b8 <col:20> 'struct inode *' lvalue Var 0x14c940db8 'inode' 'struct inode *'     |       |-IfStmt 0x14c947788 <line:23:4, line:26:4>     |       | |-RecoveryExpr 0x14c947698 <line:23:8, col:24> '_Bool' contains-errors     |       | `-CompoundStmt 0x14c947778 <col:33, line:26:4>     |       `-IfStmt 0x14c9478f8 <line:27:4, line:30:4>     |         |-RecoveryExpr 0x14c947808 <line:27:8, col:67> '_Bool' contains-errors     |         `-CompoundStmt 0x14c9478e8 <col:70, line:30:4>     |-IfStmt 0x14c947a60 <line:33:2, line:34:10>     | |-UnaryOperator 0x14c947a18 <line:33:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c947a00 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14c9479d8 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14c9479a0 <col:7> 'struct iattr *' lvalue ParmVar 0x14c940a28 'attr' 'struct iattr *'     | `-ReturnStmt 0x14c947a50 <line:34:3, col:10>     |   `-IntegerLiteral 0x14c947a30 <col:10> 'int' 0     |-BinaryOperator 0x14c947c98 <line:36:2, col:41> 'int' '='     | |-DeclRefExpr 0x14c947a80 <col:2> 'int' lvalue Var 0x14c941718 'ret' 'int'     | `-CallExpr 0x14c947c18 <col:8, col:41> 'int'     |   |-ImplicitCastExpr 0x14c947c00 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14c947b80 <col:8> 'int ()' Function 0x14c947ac8 'fuse_do_setattr' 'int ()'     |   |-ImplicitCastExpr 0x14c947c50 <col:24> 'struct dentry *' <LValueToRValue>     |   | `-DeclRefExpr 0x14c947ba0 <col:24> 'struct dentry *' lvalue ParmVar 0x14c928648 'entry' 'struct dentry *'     |   |-ImplicitCastExpr 0x14c947c68 <col:31> 'struct iattr *' <LValueToRValue>     |   | `-DeclRefExpr 0x14c947bc0 <col:31> 'struct iattr *' lvalue ParmVar 0x14c940a28 'attr' 'struct iattr *'     |   `-ImplicitCastExpr 0x14c947c80 <col:37> 'struct file *' <LValueToRValue>     |     `-DeclRefExpr 0x14c947be0 <col:37> 'struct file *' lvalue Var 0x14c941558 'file' 'struct file *'     |-IfStmt 0x14c9492b0 <line:37:2, line:45:2>     | |-UnaryOperator 0x14c947cf0 <line:37:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c947cd8 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14c947cb8 <col:7> 'int' lvalue Var 0x14c941718 'ret' 'int'     | `-CompoundStmt 0x14c949290 <col:12, line:45:2>     |   |-IfStmt 0x14c947ee0 <line:39:3, line:40:32>     |   | |-RecoveryExpr 0x14c947d40 <line:39:7, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14c947d08 <col:7> 'struct fuse_conn *' lvalue Var 0x14c9411c8 'fc' 'struct fuse_conn *'     |   | `-CallExpr 0x14c947ea0 <line:40:4, col:32> 'int'     |   |   |-ImplicitCastExpr 0x14c947e88 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14c947e48 <col:4> 'int ()' Function 0x14c947d90 'forget_all_cached_acls' 'int ()'     |   |   `-ImplicitCastExpr 0x14c947ec8 <col:27> 'struct inode *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14c947e68 <col:27> 'struct inode *' lvalue Var 0x14c940db8 'inode' 'struct inode *'     |   `-IfStmt 0x14c949270 <line:43:3, line:44:37>     |     |-RecoveryExpr 0x14c9490d8 <line:43:7, col:53> '_Bool' contains-errors     |     `-CallExpr 0x14c949230 <line:44:4, col:37> 'int'     |       |-ImplicitCastExpr 0x14c949218 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14c9491d8 <col:4> 'int ()' Function 0x14c949120 'fuse_invalidate_entry_cache' 'int ()'     |       `-ImplicitCastExpr 0x14c949258 <col:32> 'struct dentry *' <LValueToRValue>     |         `-DeclRefExpr 0x14c9491f8 <col:32> 'struct dentry *' lvalue ParmVar 0x14c928648 'entry' 'struct dentry *'     `-ReturnStmt 0x14c949308 <line:46:2, col:9>       `-ImplicitCastExpr 0x14c9492f0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c9492d0 <col:9> 'int' lvalue Var 0x14c941718 'ret' 'int' ","19152":"`-FunctionDecl 0x12e1454a8  col:6 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12e145600 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12e145668 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12e1456d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12e145550 <<invalid sloc>> Implicit 883 ","19511":"`-FunctionDecl 0x15703d350  line:1:13 snd_timer_check_master 'void (struct snd_timer_instance *)' static   |-ParmVarDecl 0x15703d248 <col:36, col:63> col:63 used master 'struct snd_timer_instance *'   `-CompoundStmt 0x1608f3070 <line:2:1, line:19:1>     |-DeclStmt 0x157054fe8 <line:3:2, col:40>     | |-VarDecl 0x157054ed8 <col:2, col:29> col:29 used slave 'struct snd_timer_instance *'     | `-VarDecl 0x157054f68 <col:2, col:37> col:37 used tmp 'struct snd_timer_instance *'     |-CallExpr 0x157055270 <line:6:2, col:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157055130 <col:2> 'int ()' Function 0x157055078 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x157055150 <col:27> 'struct snd_timer_instance *' lvalue Var 0x157054ed8 'slave' 'struct snd_timer_instance *'     | |-DeclRefExpr 0x157055170 <col:34> 'struct snd_timer_instance *' lvalue Var 0x157054f68 'tmp' 'struct snd_timer_instance *'     | |-UnaryOperator 0x157055238 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x157055218 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x157055250 <col:62> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x1608f3058 <col:73, line:18:2>       `-IfStmt 0x1608f3038 <line:7:3, line:17:3>         |-BinaryOperator 0x157055470 <line:7:7, line:8:34> 'int' contains-errors '&&'         | |-BinaryOperator 0x157055370 <line:7:7, col:37> 'int' contains-errors '=='         | | |-RecoveryExpr 0x1570552e8 <col:7, col:14> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x1570552b0 <col:7> 'struct snd_timer_instance *' lvalue Var 0x157054ed8 'slave' 'struct snd_timer_instance *'         | | `-RecoveryExpr 0x157055348 <col:29, col:37> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x157055310 <col:29> 'struct snd_timer_instance *' lvalue ParmVar 0x15703d248 'master' 'struct snd_timer_instance *'         | `-BinaryOperator 0x157055450 <line:8:7, col:34> 'int' contains-errors '=='         |   |-RecoveryExpr 0x1570553c8 <col:7, col:14> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x157055390 <col:7> 'struct snd_timer_instance *' lvalue Var 0x157054ed8 'slave' 'struct snd_timer_instance *'         |   `-RecoveryExpr 0x157055428 <col:26, col:34> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x1570553f0 <col:26> 'struct snd_timer_instance *' lvalue ParmVar 0x15703d248 'master' 'struct snd_timer_instance *'         `-CompoundStmt 0x1608f3000 <col:44, line:17:3>           |-CallExpr 0x157055680 <line:9:4, col:62> '<dependent type>' contains-errors           | |-DeclRefExpr 0x157055570 <col:4> 'int ()' Function 0x1570554b8 'list_move_tail' 'int ()'           | |-UnaryOperator 0x1570555f0 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow           | | `-RecoveryExpr 0x1570555c8 <col:20, col:27> '<dependent type>' contains-errors lvalue           | |   `-DeclRefExpr 0x157055590 <col:20> 'struct snd_timer_instance *' lvalue Var 0x157054ed8 'slave' 'struct snd_timer_instance *'           | `-UnaryOperator 0x157055668 <col:38, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow           |   `-RecoveryExpr 0x157055640 <col:39, col:47> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x157055608 <col:39> 'struct snd_timer_instance *' lvalue ParmVar 0x15703d248 'master' 'struct snd_timer_instance *'           |-CallExpr 0x157055840 <line:10:4, col:36> '<dependent type>' contains-errors           | |-DeclRefExpr 0x157055790 <col:4> 'int ()' Function 0x1570556d8 'spin_lock_irq' 'int ()'           | `-UnaryOperator 0x157055828 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow           |   `-RecoveryExpr 0x157055808 <col:19> '<dependent type>' contains-errors lvalue           |-BinaryOperator 0x1570558e8 <line:11:4, col:20> '<dependent type>' contains-errors '='           | |-RecoveryExpr 0x1570558a0 <col:4, col:11> '<dependent type>' contains-errors lvalue           | | `-DeclRefExpr 0x157055868 <col:4> 'struct snd_timer_instance *' lvalue Var 0x157054ed8 'slave' 'struct snd_timer_instance *'           | `-DeclRefExpr 0x1570558c8 <col:20> 'struct snd_timer_instance *' lvalue ParmVar 0x15703d248 'master' 'struct snd_timer_instance *'           |-BinaryOperator 0x1570559c8 <line:12:4, col:27> '<dependent type>' contains-errors '='           | |-RecoveryExpr 0x157055940 <col:4, col:11> '<dependent type>' contains-errors lvalue           | | `-DeclRefExpr 0x157055908 <col:4> 'struct snd_timer_instance *' lvalue Var 0x157054ed8 'slave' 'struct snd_timer_instance *'           | `-RecoveryExpr 0x1570559a0 <col:19, col:27> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x157055968 <col:19> 'struct snd_timer_instance *' lvalue ParmVar 0x15703d248 'master' 'struct snd_timer_instance *'           `-IfStmt 0x157055ce0 <line:13:4, line:15:38>             |-BinaryOperator 0x157055aa0 <line:13:8, col:23> '<dependent type>' contains-errors '&'             | |-RecoveryExpr 0x157055a20 <col:8, col:15> '<dependent type>' contains-errors lvalue             | | `-DeclRefExpr 0x1570559e8 <col:8> 'struct snd_timer_instance *' lvalue Var 0x157054ed8 'slave' 'struct snd_timer_instance *'             | `-RecoveryExpr 0x157055a80 <col:23> '<dependent type>' contains-errors lvalue             `-CallExpr 0x157055cb0 <line:14:5, line:15:38> '<dependent type>' contains-errors               |-DeclRefExpr 0x157055ba0 <line:14:5> 'int ()' Function 0x157055ae8 'list_add_tail' 'int ()'               |-UnaryOperator 0x157055c20 <col:19, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow               | `-RecoveryExpr 0x157055bf8 <col:20, col:27> '<dependent type>' contains-errors lvalue               |   `-DeclRefExpr 0x157055bc0 <col:20> 'struct snd_timer_instance *' lvalue Var 0x157054ed8 'slave' 'struct snd_timer_instance *'               `-UnaryOperator 0x157055c98 <line:15:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow                 `-RecoveryExpr 0x157055c70 <col:13, col:21> '<dependent type>' contains-errors lvalue                   `-DeclRefExpr 0x157055c38 <col:13> 'struct snd_timer_instance *' lvalue ParmVar 0x15703d248 'master' 'struct snd_timer_instance *' ","19459":"`-FunctionDecl 0x1439281c8  line:1:19 invalid smca_status_reg 'int (int)' static inline   |-ParmVarDecl 0x1439280f0 <col:35, col:39> col:39 used bank 'int'   `-CompoundStmt 0x1439284a8 <line:2:1, line:4:1>     `-ReturnStmt 0x143928498 <line:3:2, col:39>       `-CallExpr 0x143928458 <col:9, col:39> 'int'         |-ImplicitCastExpr 0x143928440 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x1439283d0 <col:9> 'int ()' Function 0x143928318 'MSR_AMD64_SMCA_MCx_STATUS' 'int ()'         `-ImplicitCastExpr 0x143928480 <col:35> 'int' <LValueToRValue>           `-DeclRefExpr 0x1439283f0 <col:35> 'int' lvalue ParmVar 0x1439280f0 'bank' 'int' ","20058":"`-FunctionDecl 0x15a928758  line:1:5 security_tun_dev_attach 'int (struct sock *)'   |-ParmVarDecl 0x15a928648 <col:29, col:42> col:42 used sk 'struct sock *'   `-CompoundStmt 0x15a940bb0 <line:2:1, line:4:1>     `-ReturnStmt 0x15a940ba0 <line:3:2, col:40>       `-CallExpr 0x15a940b78 <col:9, col:40> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x15a940b30 <col:9, col:23> '<dependent type>' contains-errors lvalue ->tun_dev_attach         | `-RecoveryExpr 0x15a940b10 <col:9> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x15a940ac8 <col:38> 'struct sock *' lvalue ParmVar 0x15a928648 'sk' 'struct sock *' ","19660":"`-FunctionDecl 0x13c140a00  line:1:20 ncp_init_request_s 'void (struct ncp_server *, int)' static inline   |-ParmVarDecl 0x13c128648 <col:39, col:58> col:58 used server 'struct ncp_server *'   |-ParmVarDecl 0x13c1286c8 <col:66, col:70> col:70 used subfunction 'int'   `-CompoundStmt 0x13c1410d0 <line:2:1, line:9:1>     |-CallExpr 0x13c140cb8 <line:3:2, col:24> 'int'     | |-ImplicitCastExpr 0x13c140ca0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c140c30 <col:2> 'int ()' Function 0x13c140b78 'ncp_lock_server' 'int ()'     | `-ImplicitCastExpr 0x13c140ce0 <col:18> 'struct ncp_server *' <LValueToRValue>     |   `-DeclRefExpr 0x13c140c50 <col:18> 'struct ncp_server *' lvalue ParmVar 0x13c128648 'server' 'struct ncp_server *'     |-CallExpr 0x13c140fd0 <line:6:2, col:34> 'int'     | |-ImplicitCastExpr 0x13c140fb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c140f58 <col:2> 'int ()' Function 0x13c140ea0 'ncp_add_byte' 'int ()'     | |-ImplicitCastExpr 0x13c141000 <col:15> 'struct ncp_server *' <LValueToRValue>     | | `-DeclRefExpr 0x13c140f78 <col:15> 'struct ncp_server *' lvalue ParmVar 0x13c128648 'server' 'struct ncp_server *'     | `-ImplicitCastExpr 0x13c141018 <col:23> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x13c140f98 <col:23> 'int' lvalue ParmVar 0x13c1286c8 'subfunction' 'int'     `-BinaryOperator 0x13c1410b0 <line:8:2, col:28> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x13c141068 <col:2, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13c141030 <col:2> 'struct ncp_server *' lvalue ParmVar 0x13c128648 'server' 'struct ncp_server *'       `-IntegerLiteral 0x13c141090 <col:28> 'int' 1 ","20133":"`-FunctionDecl 0x131844438  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x131844358 <col:8> col:8 Http2CodecImplTest 'int'   |-ParmVarDecl 0x1318442d8 <col:28> col:28 HeaderNameWithUnderscoreAreRejectedByDefault 'int'   `-CompoundStmt 0x1308a2da8 <col:74, line:11:1>     |-CallExpr 0x1318446e8 <line:3:3, col:14> 'int'     | `-ImplicitCastExpr 0x1318446d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x131844680 <col:3> 'int ()' Function 0x1318445c8 'initialize' 'int ()'     |-RecoveryExpr 0x131844738 <line:6:3> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1308a2c10 <line:8:3, col:69> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x1308a2bc8 <col:3, col:62> '<dependent type>' contains-errors lvalue .Times       | `-CallExpr 0x1308a2b98 <col:3, col:60> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x1318448a0 <col:3> 'int ()' Function 0x1318447e8 'EXPECT_CALL' 'int ()'       |   |-RecoveryExpr 0x1308a2b08 <col:15> '<dependent type>' contains-errors lvalue       |   `-CallExpr 0x1308a2b68 <col:41, col:59> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x1318449b8 <col:41> 'int ()' Function 0x131844900 'onResetStream' 'int ()'       |     |-RecoveryExpr 0x1308a2b28 <col:55> '<dependent type>' contains-errors lvalue       |     `-RecoveryExpr 0x1308a2b48 <col:58> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x1308a2ac0 <col:68> 'int' 1 ","20158":"`-FunctionDecl 0x12d0fa4c8  line:1:5 invalid bson_ensure_space 'int (int *, const int)'   |-ParmVarDecl 0x12d0fa328 <col:24, col:30> col:30 referenced invalid b 'int *'   |-ParmVarDecl 0x12d0fa3a8 <col:33, col:43> col:43 used bytesNeeded 'const int'   `-CompoundStmt 0x12d114820 <col:57, line:28:1>     |-DeclStmt 0x12d0fa6f0 <line:2:5, col:31>     | `-VarDecl 0x12d0fa598 <col:5, col:27> col:9 used pos 'int' cinit     |   `-BinaryOperator 0x12d0fa6d0 <col:15, col:27> '<dependent type>' contains-errors '-'     |     |-CXXDependentScopeMemberExpr 0x12d0fa620 <col:15, col:18> '<dependent type>' contains-errors lvalue ->cur     |     | `-RecoveryExpr 0x12d0fa600 <col:15> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x12d0fa688 <col:24, col:27> '<dependent type>' contains-errors lvalue ->data     |       `-RecoveryExpr 0x12d0fa668 <col:24> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12d0fa7f0 <line:3:5, col:25>     | `-VarDecl 0x12d0fa720 <col:5, col:21> col:11 used orig 'char *' cinit     |   `-CXXDependentScopeMemberExpr 0x12d0fa7a8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->data     |     `-RecoveryExpr 0x12d0fa788 <col:18> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12d0fa888 <line:4:5, col:17>     | `-VarDecl 0x12d0fa820 <col:5, col:9> col:9 used new_size 'int'     |-IfStmt 0x12d113a00 <line:6:5, line:7:16>     | |-BinaryOperator 0x12d0fa998 <line:6:10, col:34> 'int' contains-errors '<='     | | |-BinaryOperator 0x12d0fa910 <col:10, col:16> 'int' contains-errors '+'     | | | |-ImplicitCastExpr 0x12d0fa8e0 <col:10> 'int' contains-errors <LValueToRValue>     | | | | `-DeclRefExpr 0x12d0fa8a0 <col:10> 'int' contains-errors lvalue Var 0x12d0fa598 'pos' 'int'     | | | `-ImplicitCastExpr 0x12d0fa8f8 <col:16> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x12d0fa8c0 <col:16> 'const int' lvalue ParmVar 0x12d0fa3a8 'bytesNeeded' 'const int'     | | `-CXXDependentScopeMemberExpr 0x12d0fa950 <col:31, col:34> '<dependent type>' contains-errors lvalue ->dataSize     | |   `-RecoveryExpr 0x12d0fa930 <col:31> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d0fa9f0 <line:7:9, col:16>     |   `-RecoveryExpr 0x12d0fa9d0 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d113b48 <line:9:5, col:50> 'int' contains-errors '='     | |-DeclRefExpr 0x12d113a20 <col:5> 'int' lvalue Var 0x12d0fa820 'new_size' 'int'     | `-BinaryOperator 0x12d113b28 <col:16, col:50> '<dependent type>' contains-errors '*'     |   |-FloatingLiteral 0x12d113a40 <col:16> 'double' 1.500000e+00     |   `-ParenExpr 0x12d113b08 <col:22, col:50> '<dependent type>' contains-errors     |     `-BinaryOperator 0x12d113ae8 <col:24, col:38> '<dependent type>' contains-errors '+'     |       |-CXXDependentScopeMemberExpr 0x12d113a80 <col:24, col:27> '<dependent type>' contains-errors lvalue ->dataSize     |       | `-RecoveryExpr 0x12d113a60 <col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d113ac8 <col:38> 'const int' lvalue ParmVar 0x12d0fa3a8 'bytesNeeded' 'const int'     |-IfStmt 0x12d113fa0 <line:11:5, line:18:5>     | |-BinaryOperator 0x12d113bf0 <line:11:9, col:23> 'int' contains-errors '<'     | | |-DeclRefExpr 0x12d113b68 <col:9> 'int' lvalue Var 0x12d0fa820 'new_size' 'int'     | | `-CXXDependentScopeMemberExpr 0x12d113ba8 <col:20, col:23> '<dependent type>' contains-errors lvalue ->dataSize     | |   `-RecoveryExpr 0x12d113b88 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d113f88 <col:34, line:18:5>     |   `-IfStmt 0x12d113f58 <line:12:9, line:17:9> has_else     |     |-BinaryOperator 0x12d113d30 <line:12:13, col:45> 'int' contains-errors '<'     |     | |-ParenExpr 0x12d113cb8 <col:13, col:41> '<dependent type>' contains-errors     |     | | `-BinaryOperator 0x12d113c98 <col:15, col:29> '<dependent type>' contains-errors '+'     |     | |   |-CXXDependentScopeMemberExpr 0x12d113c30 <col:15, col:18> '<dependent type>' contains-errors lvalue ->dataSize     |     | |   | `-RecoveryExpr 0x12d113c10 <col:15> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x12d113c78 <col:29> 'const int' lvalue ParmVar 0x12d0fa3a8 'bytesNeeded' 'const int'     |     | `-RecoveryExpr 0x12d113d10 <col:45> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x12d113dc8 <line:13:13, col:24> 'int' contains-errors '='     |     | |-DeclRefExpr 0x12d113d50 <col:13> 'int' lvalue Var 0x12d0fa820 'new_size' 'int'     |     | `-RecoveryExpr 0x12d113da8 <col:24> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12d113f38 <line:14:14, line:17:9>     |       |-BinaryOperator 0x12d113ed0 <line:15:13, col:22> '<dependent type>' contains-errors '='     |       | |-CXXDependentScopeMemberExpr 0x12d113e30 <col:13, col:16> '<dependent type>' contains-errors lvalue ->err     |       | | `-RecoveryExpr 0x12d113e08 <col:13> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x12d113de8 <col:13> 'int *' lvalue ParmVar 0x12d0fa328 'b' 'int *'     |       | `-RecoveryExpr 0x12d113eb0 <col:22> '<dependent type>' contains-errors lvalue     |       `-ReturnStmt 0x12d113f28 <line:16:13, col:20>     |         `-RecoveryExpr 0x12d113f08 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d114288 <line:20:5, col:47> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d114008 <col:5, col:8> '<dependent type>' contains-errors lvalue ->data     | | `-RecoveryExpr 0x12d113fe0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d113fc0 <col:5> 'int *' lvalue ParmVar 0x12d0fa328 'b' 'int *'     | `-CallExpr 0x12d114258 <col:15, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d1141b0 <col:15> 'int ()' Function 0x12d1140f8 'bson_realloc' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12d1141f0 <col:29, col:32> '<dependent type>' contains-errors lvalue ->data     |   | `-RecoveryExpr 0x12d1141d0 <col:29> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d114238 <col:38> 'int' lvalue Var 0x12d0fa820 'new_size' 'int'     |-IfStmt 0x12d114580 <line:21:5, line:22:42>     | |-UnaryOperator 0x12d114328 <line:21:10, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12d114310 <col:11, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12d1142c8 <col:11, col:14> '<dependent type>' contains-errors lvalue ->data     | |     `-RecoveryExpr 0x12d1142a8 <col:11> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12d114550 <line:22:9, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d114420 <col:9> 'int ()' Function 0x12d114368 'bson_fatal_msg' 'int ()'     |   |-UnaryOperator 0x12d1144d8 <col:25, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-UnaryOperator 0x12d1144c0 <col:26, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   `-ImplicitCastExpr 0x12d1144a8 <col:27, col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-CXXDependentScopeMemberExpr 0x12d114460 <col:27, col:30> '<dependent type>' contains-errors lvalue ->data     |   |       `-RecoveryExpr 0x12d114440 <col:27> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x12d114530 <col:36> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x12d114650 <line:24:5, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d1145e8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->dataSize     | | `-RecoveryExpr 0x12d1145c0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d1145a0 <col:5> 'int *' lvalue ParmVar 0x12d0fa328 'b' 'int *'     | `-DeclRefExpr 0x12d114630 <col:19> 'int' lvalue Var 0x12d0fa820 'new_size' 'int'     |-CompoundAssignOperator 0x12d1147a8 <line:25:5, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x12d1146b8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->cur     | | `-RecoveryExpr 0x12d114690 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d114670 <col:5> 'int *' lvalue ParmVar 0x12d0fa328 'b' 'int *'     | `-BinaryOperator 0x12d114788 <col:15, col:25> '<dependent type>' contains-errors '-'     |   |-CXXDependentScopeMemberExpr 0x12d114720 <col:15, col:18> '<dependent type>' contains-errors lvalue ->data     |   | `-RecoveryExpr 0x12d114700 <col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d114768 <col:25> 'char *' contains-errors lvalue Var 0x12d0fa720 'orig' 'char *'     `-ReturnStmt 0x12d114810 <line:27:5, col:12>       `-RecoveryExpr 0x12d1147f0 <col:12> '<dependent type>' contains-errors lvalue ","20195":"`-FunctionDecl 0x15700df78  line:1:1 invalid virDomainDiskSourceFormatNetwork 'int (int, int, int, unsigned int)'   |-ParmVarDecl 0x15700dcf0 <col:34, col:47> col:47 invalid attrBuf 'int'   |-ParmVarDecl 0x15700dd70 <line:2:34, col:47> col:47 invalid childBuf 'int'   |-ParmVarDecl 0x15700ddf0 <line:3:34, col:54> col:54 invalid src 'int'   |-ParmVarDecl 0x15700de70 <line:4:34, col:47> col:47 used flags 'unsigned int'   `-CompoundStmt 0x157029830 <line:5:1, line:60:1>     |-UnaryExprOrTypeTraitExpr 0x15700e098 <line:6:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x15700e078 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157027470 <line:9:5, line:10:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15700e210 <line:9:5> 'int ()' Function 0x15700e158 'virBufferAsprintf' 'int ()'     | |-RecoveryExpr 0x15700e230 <col:23> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x15700e290 <col:32> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x157027448 <line:10:23, col:70> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15700e390 <col:23> 'int ()' Function 0x15700e2d8 'virStorageNetProtocolTypeToString' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x157027400 <col:57, col:62> '<dependent type>' contains-errors lvalue ->protocol     |     `-RecoveryExpr 0x15700e3b0 <col:57> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1570279e8 <line:15:5, col:66> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157027818 <col:5> 'int ()' Function 0x157027760 'virBufferEscapeString' 'int ()'     | |-RecoveryExpr 0x157027838 <col:27> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x157027858 <col:36> 'char[4]' lvalue \"STR\"     | `-ConditionalOperator 0x1570279b8 <col:43, col:62> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x157027978 <col:43> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x157027998 <col:50> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x1570278c8 <col:57, col:62> '<dependent type>' contains-errors lvalue ->path     |     `-RecoveryExpr 0x1570278a8 <col:57> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157027ae8 <line:16:5, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157027a20 <col:5> 'int ()' Function 0x157027760 'virBufferEscapeString' 'int ()'     | |-RecoveryExpr 0x157027a40 <col:27> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x157027a60 <col:36> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x157027aa0 <col:43, col:48> '<dependent type>' contains-errors lvalue ->query     |   `-RecoveryExpr 0x157027a80 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157027ee8 <line:18:5, line:22:68>     | |-RecoveryExpr 0x157027ca0 <line:18:9, line:20:29> '_Bool' contains-errors     | `-CallExpr 0x157027eb0 <line:21:9, line:22:68> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157027cc0 <line:21:9> 'int ()' Function 0x15700e158 'virBufferAsprintf' 'int ()'     |   |-RecoveryExpr 0x157027ce0 <col:27> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x157027d00 <col:36> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x157027e88 <line:22:27, col:67> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x157027e00 <col:27> 'int ()' Function 0x157027d48 'virTristateBoolTypeToString' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x157027e40 <col:55, col:60> '<dependent type>' contains-errors lvalue ->haveTLS     |       `-RecoveryExpr 0x157027e20 <col:55> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1570280a0 <line:23:5, line:24:61>     | |-BinaryOperator 0x157027f80 <line:23:9, col:17> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x157027f08 <col:9> 'unsigned int' lvalue ParmVar 0x15700de70 'flags' 'unsigned int'     | | `-RecoveryExpr 0x157027f60 <col:17> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x157028068 <line:24:9, col:61> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157027fa0 <col:9> 'int ()' Function 0x15700e158 'virBufferAsprintf' 'int ()'     |   |-RecoveryExpr 0x157027fc0 <col:27> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x157027fe0 <col:36> 'char[4]' lvalue \"STR\"     |   `-CXXDependentScopeMemberExpr 0x157028020 <col:43, col:48> '<dependent type>' contains-errors lvalue ->tlsFromConfig     |     `-RecoveryExpr 0x157028000 <col:43> '<dependent type>' contains-errors lvalue     |-ForStmt 0x157028d60 <line:26:5, line:39:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x1570281d8 <line:26:17, col:26> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1570281b8 <col:17> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x157028150 <col:21, col:26> '<dependent type>' contains-errors lvalue ->nhosts     | |   `-RecoveryExpr 0x157028130 <col:21> '<dependent type>' contains-errors lvalue     | |-<<<NULL>>>     | `-CompoundStmt 0x157028d40 <col:39, line:39:5>     |   |-CallExpr 0x157028338 <line:27:9, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1570282d8 <col:9> 'int ()' Function 0x157028220 'virBufferAddLit' 'int ()'     |   | |-RecoveryExpr 0x1570282f8 <col:25> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x157028318 <col:35> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x157028d10 <line:38:9, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x157028cb0 <col:9> 'int ()' Function 0x157028220 'virBufferAddLit' 'int ()'     |     |-RecoveryExpr 0x157028cd0 <col:25> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x157028cf0 <col:35> 'char[4]' lvalue \"STR\"     |-CallExpr 0x157028e60 <line:41:5, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157028d98 <col:5> 'int ()' Function 0x157027760 'virBufferEscapeString' 'int ()'     | |-RecoveryExpr 0x157028db8 <col:27> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x157028dd8 <col:37> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x157028e18 <col:44, col:49> '<dependent type>' contains-errors lvalue ->snapshot     |   `-RecoveryExpr 0x157028df8 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157028f60 <line:42:5, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157028e98 <col:5> 'int ()' Function 0x157027760 'virBufferEscapeString' 'int ()'     | |-RecoveryExpr 0x157028eb8 <col:27> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x157028ed8 <col:37> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x157028f18 <col:44, col:49> '<dependent type>' contains-errors lvalue ->configFile     |   `-RecoveryExpr 0x157028ef8 <col:44> '<dependent type>' contains-errors lvalue     |-CallExpr 0x157029138 <line:44:5, col:65> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157029078 <col:5> 'int ()' Function 0x157028fc0 'virStorageSourceInitiatorFormatXML' 'int ()'     | |-UnaryOperator 0x157029100 <col:40, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1570290b8 <col:41, col:46> '<dependent type>' contains-errors lvalue ->initiator     | |   `-RecoveryExpr 0x157029098 <col:41> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x157029118 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157029350 <line:46:5, line:49:5>     | |-RecoveryExpr 0x1570291d0 <line:46:9, col:27> '_Bool' contains-errors     | `-CompoundStmt 0x157029338 <col:53, line:49:5>     |   `-CallExpr 0x157029300 <line:47:9, line:48:70> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1570291f0 <line:47:9> 'int ()' Function 0x15700e158 'virBufferAsprintf' 'int ()'     |     |-RecoveryExpr 0x157029210 <col:27> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x157029230 <col:37> 'char[4]' lvalue \"STR\"     |     `-CallExpr 0x1570292d8 <line:48:27, col:69> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x157029250 <col:27> 'int ()' Function 0x157027d48 'virTristateBoolTypeToString' 'int ()'     |       `-CXXDependentScopeMemberExpr 0x157029290 <col:55, col:60> '<dependent type>' contains-errors lvalue ->sslverify     |         `-RecoveryExpr 0x157029270 <col:55> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1570294b0 <line:51:5, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157029450 <col:5> 'int ()' Function 0x157029398 'virDomainDiskSourceFormatNetworkCookies' 'int ()'     | |-RecoveryExpr 0x157029470 <col:45> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x157029490 <col:55> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157029648 <line:53:5, line:54:58>     | |-CXXDependentScopeMemberExpr 0x157029500 <line:53:9, col:14> '<dependent type>' contains-errors lvalue ->readahead     | | `-RecoveryExpr 0x1570294e0 <col:9> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x157029610 <line:54:9, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157029548 <col:9> 'int ()' Function 0x15700e158 'virBufferAsprintf' 'int ()'     |   |-RecoveryExpr 0x157029568 <col:27> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x157029588 <col:37> 'char[4]' lvalue \"STR\"     |   `-CXXDependentScopeMemberExpr 0x1570295c8 <col:44, col:49> '<dependent type>' contains-errors lvalue ->readahead     |     `-RecoveryExpr 0x1570295a8 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1570297d0 <line:56:5, line:57:56>     | |-CXXDependentScopeMemberExpr 0x157029688 <line:56:9, col:14> '<dependent type>' contains-errors lvalue ->timeout     | | `-RecoveryExpr 0x157029668 <col:9> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x157029798 <line:57:9, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1570296d0 <col:9> 'int ()' Function 0x15700e158 'virBufferAsprintf' 'int ()'     |   |-RecoveryExpr 0x1570296f0 <col:27> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x157029710 <col:37> 'char[4]' lvalue \"STR\"     |   `-CXXDependentScopeMemberExpr 0x157029750 <col:44, col:49> '<dependent type>' contains-errors lvalue ->timeout     |     `-RecoveryExpr 0x157029730 <col:44> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x157029820 <line:59:5, col:12>       `-IntegerLiteral 0x157029800 <col:12> 'int' 0 ","19159":"`-FunctionDecl 0x14b808a70  col:6 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14b808b70 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14b808bd8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14b808c40 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14b808b18 <<invalid sloc>> Implicit 883 ","19800":"`-FunctionDecl 0x152142378  line:1:16 invalid fuse_dev_splice_write 'int (struct pipe_inode_info *, struct file *, int *, int, unsigned int)' static   |-ParmVarDecl 0x152128e68 <col:38, col:62> col:62 used pipe 'struct pipe_inode_info *'   |-ParmVarDecl 0x152142058 <line:2:10, col:23> col:23 used out 'struct file *'   |-ParmVarDecl 0x152142108 <col:28, col:36> col:36 invalid ppos 'int *'   |-ParmVarDecl 0x152142188 <line:3:10, col:17> col:17 invalid len 'int'   |-ParmVarDecl 0x152142208 <col:22, col:35> col:35 used flags 'unsigned int'   `-CompoundStmt 0x15214bca0 <line:4:1, line:83:1>     |-DeclStmt 0x1521424c8 <line:5:2, col:15>     | `-VarDecl 0x152142460 <col:2, col:11> col:11 used nbuf 'unsigned int'     |-DeclStmt 0x152142560 <line:6:2, col:14>     | `-VarDecl 0x1521424f8 <col:2, col:11> col:11 used idx 'unsigned int'     |-DeclStmt 0x152142768 <line:7:2, col:26>     | |-RecordDecl 0x152142578 <col:2, col:9> col:9 struct pipe_buffer     | `-VarDecl 0x1521426e8 <col:2, col:22> col:22 used bufs 'struct pipe_buffer *'     |-DeclStmt 0x1521428f8 <line:8:2, col:27>     | |-RecordDecl 0x152142780 <col:2, col:9> col:9 struct fuse_copy_state     | `-VarDecl 0x152142878 <col:2, col:25> col:25 referenced invalid cs 'struct fuse_copy_state'     |-DeclStmt 0x152142af8 <line:9:2, col:22>     | |-RecordDecl 0x152142910 <col:2, col:9> col:9 struct fuse_dev     | `-VarDecl 0x152142a78 <col:2, col:19> col:19 used fud 'struct fuse_dev *'     |-UnaryExprOrTypeTraitExpr 0x152142b68 <line:10:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x152142b48 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152142de0 <line:13:2, col:24> 'struct fuse_dev *' '='     | |-DeclRefExpr 0x152142b88 <col:2> 'struct fuse_dev *' lvalue Var 0x152142a78 'fud' 'struct fuse_dev *'     | `-ImplicitCastExpr 0x152142dc8 <col:8, col:24> 'struct fuse_dev *' <IntegralToPointer>     |   `-CallExpr 0x152142d88 <col:8, col:24> 'int'     |     |-ImplicitCastExpr 0x152142d70 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x152142d00 <col:8> 'int ()' Function 0x152142c48 'fuse_get_dev' 'int ()'     |     `-ImplicitCastExpr 0x152142db0 <col:21> 'struct file *' <LValueToRValue>     |       `-DeclRefExpr 0x152142d20 <col:21> 'struct file *' lvalue ParmVar 0x152142058 'out' 'struct file *'     |-IfStmt 0x152142ef8 <line:14:2, line:15:11>     | |-UnaryOperator 0x152142e38 <line:14:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x152142e20 <col:7> 'struct fuse_dev *' <LValueToRValue>     | |   `-DeclRefExpr 0x152142e00 <col:7> 'struct fuse_dev *' lvalue Var 0x152142a78 'fud' 'struct fuse_dev *'     | `-ReturnStmt 0x152142ee8 <line:15:3, col:11>     |   `-UnaryOperator 0x152142ed0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x152142eb8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152142e98 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152143058 <line:17:2, col:16> 'int'     | |-ImplicitCastExpr 0x152143040 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x152143000 <col:2> 'int ()' Function 0x152142f40 'pipe_lock' 'int ()'     | `-ImplicitCastExpr 0x152143080 <col:12> 'struct pipe_inode_info *' <LValueToRValue>     |   `-DeclRefExpr 0x152143020 <col:12> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |-IfStmt 0x152143518 <line:21:2, line:24:2>     | |-UnaryOperator 0x1521432c0 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1521432a8 <col:7> 'struct pipe_buffer *' <LValueToRValue>     | |   `-DeclRefExpr 0x152143288 <col:7> 'struct pipe_buffer *' lvalue Var 0x1521426e8 'bufs' 'struct pipe_buffer *'     | `-CompoundStmt 0x1521434f8 <col:13, line:24:2>     |   |-CallExpr 0x152143410 <line:22:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x1521433f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1521433b8 <col:3> 'int ()' Function 0x152143300 'pipe_unlock' 'int ()'     |   | `-ImplicitCastExpr 0x152143438 <col:15> 'struct pipe_inode_info *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1521433d8 <col:15> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   `-ReturnStmt 0x1521434e8 <line:23:3, col:11>     |     `-UnaryOperator 0x1521434d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1521434b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x152143498 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152143590 <line:26:2, col:9> 'unsigned int' '='     | |-DeclRefExpr 0x152143538 <col:2> 'unsigned int' lvalue Var 0x152142460 'nbuf' 'unsigned int'     | `-ImplicitCastExpr 0x152143578 <col:9> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x152143558 <col:9> 'int' 0     |-IfStmt 0x152143bd8 <line:32:2, line:35:2>     | |-RecoveryExpr 0x152143a98 <line:32:6, col:12> '_Bool' contains-errors     | `-CompoundStmt 0x152143bb8 <col:17, line:35:2>     |   |-CallExpr 0x152143b10 <line:33:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x152143af8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x152143ab8 <col:3> 'int ()' Function 0x152143300 'pipe_unlock' 'int ()'     |   | `-ImplicitCastExpr 0x152143b38 <col:15> 'struct pipe_inode_info *' <LValueToRValue>     |   |   `-DeclRefExpr 0x152143ad8 <col:15> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   `-GotoStmt 0x152143ba0 <line:34:3, col:8> 'out' 0x152143b50     |-WhileStmt 0x152146380 <line:38:2, line:62:2>     | |-RecoveryExpr 0x152143c18 <line:38:9> '_Bool' contains-errors     | `-CompoundStmt 0x152146338 <col:14, line:62:2>     |   |-DeclStmt 0x152143d00 <line:39:3, col:27>     |   | `-VarDecl 0x152143c98 <col:3, col:23> col:23 used ibuf 'struct pipe_buffer *'     |   |-DeclStmt 0x152143da8 <line:40:3, col:27>     |   | `-VarDecl 0x152143d40 <col:3, col:23> col:23 used obuf 'struct pipe_buffer *'     |   |-CallExpr 0x152143f60 <line:42:3, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152143ea0 <col:3> 'int ()' Function 0x152143de8 'BUG_ON' 'int ()'     |   | `-BinaryOperator 0x152143f40 <col:10, col:24> 'int' contains-errors '>='     |   |   |-DeclRefExpr 0x152143ec0 <col:10> 'unsigned int' lvalue Var 0x152142460 'nbuf' 'unsigned int'     |   |   `-RecoveryExpr 0x152143f18 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x152143ee0 <col:18> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |-CallExpr 0x152145658 <line:43:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x152143f88 <col:3> 'int ()' Function 0x152143de8 'BUG_ON' 'int ()'     |   | `-UnaryOperator 0x152145640 <col:10, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   `-ImplicitCastExpr 0x152145628 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x152145600 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x152143fa8 <col:11> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |-BinaryOperator 0x1521457c8 <line:44:3, col:34> 'struct pipe_buffer *' contains-errors '='     |   | |-DeclRefExpr 0x152145680 <col:3> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   | `-UnaryOperator 0x1521457b0 <col:10, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x152145790 <col:11, col:34> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x152145760 <col:11, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x1521456d8 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x1521456a0 <col:11> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |     `-ImplicitCastExpr 0x152145778 <col:22, col:28> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x152145738 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x152145700 <col:22> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |-IfStmt 0x152146270 <line:47:3, line:59:3> has_else     |   | |-RecoveryExpr 0x1521458d8 <line:47:7, col:20> '_Bool' contains-errors     |   | |-CompoundStmt 0x152145cd8 <col:25, line:52:3>     |   | | |-ImplicitCastExpr 0x1521459c8 <line:48:4, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | | | `-RecoveryExpr 0x152145998 <col:4, col:13> '<dependent type>' contains-errors lvalue     |   | | |   |-UnaryOperator 0x152145930 <col:4, col:5> 'struct pipe_buffer' lvalue prefix '*' cannot overflow     |   | | |   | `-ImplicitCastExpr 0x152145918 <col:5> 'struct pipe_buffer *' <LValueToRValue>     |   | | |   |   `-DeclRefExpr 0x1521458f8 <col:5> 'struct pipe_buffer *' lvalue Var 0x152143d40 'obuf' 'struct pipe_buffer *'     |   | | |   `-UnaryOperator 0x152145980 <col:12, col:13> 'struct pipe_buffer' lvalue prefix '*' cannot overflow     |   | | |     `-ImplicitCastExpr 0x152145968 <col:13> 'struct pipe_buffer *' <LValueToRValue>     |   | | |       `-DeclRefExpr 0x152145948 <col:13> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   | | |-BinaryOperator 0x152145c40 <line:50:4, col:58> '<dependent type>' contains-errors '='     |   | | | |-RecoveryExpr 0x152145a78 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   | | | | `-DeclRefExpr 0x152145a40 <col:4> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   | | | `-BinaryOperator 0x152145c20 <col:19, col:58> '<dependent type>' contains-errors '&'     |   | | |   |-ParenExpr 0x152145b40 <col:19, col:36> '<dependent type>' contains-errors     |   | | |   | `-BinaryOperator 0x152145b20 <col:20, col:35> '<dependent type>' contains-errors '+'     |   | | |   |   |-RecoveryExpr 0x152145ad8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   | | |   |   | `-DeclRefExpr 0x152145aa0 <col:20> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   | | |   |   `-IntegerLiteral 0x152145b00 <col:35> 'int' 1     |   | | |   `-ParenExpr 0x152145c00 <col:40, col:58> '<dependent type>' contains-errors     |   | | |     `-BinaryOperator 0x152145be0 <col:41, col:57> '<dependent type>' contains-errors '-'     |   | | |       |-RecoveryExpr 0x152145b98 <col:41, col:47> '<dependent type>' contains-errors lvalue     |   | | |       | `-DeclRefExpr 0x152145b60 <col:41> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   | | |       `-IntegerLiteral 0x152145bc0 <col:57> 'int' 1     |   | | `-UnaryOperator 0x152145cc0 <line:51:4, col:16> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | |   `-RecoveryExpr 0x152145c98 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x152145c60 <col:4> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   | `-CompoundStmt 0x152146240 <line:52:10, line:59:3>     |   |   |-CallExpr 0x152145e58 <line:53:4, col:27> 'int'     |   |   | |-ImplicitCastExpr 0x152145e40 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x152145de0 <col:4> 'int ()' Function 0x152145d28 'pipe_buf_get' 'int ()'     |   |   | |-ImplicitCastExpr 0x152145e88 <col:17> 'struct pipe_inode_info *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x152145e00 <col:17> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |   |   | `-ImplicitCastExpr 0x152145ea0 <col:23> 'struct pipe_buffer *' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x152145e20 <col:23> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   |   |-ImplicitCastExpr 0x152145f88 <line:54:4, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x152145f58 <col:4, col:13> '<dependent type>' contains-errors lvalue     |   |   |   |-UnaryOperator 0x152145ef0 <col:4, col:5> 'struct pipe_buffer' lvalue prefix '*' cannot overflow     |   |   |   | `-ImplicitCastExpr 0x152145ed8 <col:5> 'struct pipe_buffer *' <LValueToRValue>     |   |   |   |   `-DeclRefExpr 0x152145eb8 <col:5> 'struct pipe_buffer *' lvalue Var 0x152143d40 'obuf' 'struct pipe_buffer *'     |   |   |   `-UnaryOperator 0x152145f40 <col:12, col:13> 'struct pipe_buffer' lvalue prefix '*' cannot overflow     |   |   |     `-ImplicitCastExpr 0x152145f28 <col:13> 'struct pipe_buffer *' <LValueToRValue>     |   |   |       `-DeclRefExpr 0x152145f08 <col:13> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   |   |-CompoundAssignOperator 0x152146120 <line:57:4, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   | |-RecoveryExpr 0x152146098 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x152146060 <col:4> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   |   | `-RecoveryExpr 0x1521460f8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x1521460c0 <col:20> 'struct pipe_buffer *' lvalue Var 0x152143d40 'obuf' 'struct pipe_buffer *'     |   |   `-CompoundAssignOperator 0x152146210 <line:58:4, col:23> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |     |-RecoveryExpr 0x152146188 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x152146150 <col:4> 'struct pipe_buffer *' lvalue Var 0x152143c98 'ibuf' 'struct pipe_buffer *'     |   |     `-RecoveryExpr 0x1521461e8 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1521461b0 <col:17> 'struct pipe_buffer *' lvalue Var 0x152143d40 'obuf' 'struct pipe_buffer *'     |   `-UnaryOperator 0x1521462c0 <line:60:3, col:7> 'unsigned int' postfix '++'     |     `-DeclRefExpr 0x1521462a0 <col:3> 'unsigned int' lvalue Var 0x152142460 'nbuf' 'unsigned int'     |-CallExpr 0x1521463f8 <line:63:2, col:18> 'int'     | |-ImplicitCastExpr 0x1521463e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1521463a0 <col:2> 'int ()' Function 0x152143300 'pipe_unlock' 'int ()'     | `-ImplicitCastExpr 0x152146420 <col:14> 'struct pipe_inode_info *' <LValueToRValue>     |   `-DeclRefExpr 0x1521463c0 <col:14> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |-BinaryOperator 0x15214b268 <line:66:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15214b200 <col:2, col:5> '<dependent type>' contains-errors lvalue .pipebufs     | | `-RecoveryExpr 0x1521465b0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152146590 <col:2> 'struct fuse_copy_state' lvalue Var 0x152142878 'cs' 'struct fuse_copy_state'     | `-DeclRefExpr 0x15214b248 <col:16> 'struct pipe_buffer *' lvalue Var 0x1521426e8 'bufs' 'struct pipe_buffer *'     |-BinaryOperator 0x15214b338 <line:67:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15214b2d0 <col:2, col:5> '<dependent type>' contains-errors lvalue .nr_segs     | | `-RecoveryExpr 0x15214b2a8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15214b288 <col:2> 'struct fuse_copy_state' lvalue Var 0x152142878 'cs' 'struct fuse_copy_state'     | `-DeclRefExpr 0x15214b318 <col:15> 'unsigned int' lvalue Var 0x152142460 'nbuf' 'unsigned int'     |-BinaryOperator 0x15214b408 <line:68:2, col:12> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15214b3a0 <col:2, col:5> '<dependent type>' contains-errors lvalue .pipe     | | `-RecoveryExpr 0x15214b378 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15214b358 <col:2> 'struct fuse_copy_state' lvalue Var 0x152142878 'cs' 'struct fuse_copy_state'     | `-DeclRefExpr 0x15214b3e8 <col:12> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |-IfStmt 0x15214b538 <line:70:2, line:71:19>     | |-RecoveryExpr 0x15214b448 <line:70:6, col:14> '_Bool' contains-errors     | `-BinaryOperator 0x15214b518 <line:71:3, col:19> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x15214b4b0 <col:3, col:6> '<dependent type>' contains-errors lvalue .move_pages     |   | `-RecoveryExpr 0x15214b488 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15214b468 <col:3> 'struct fuse_copy_state' lvalue Var 0x152142878 'cs' 'struct fuse_copy_state'     |   `-IntegerLiteral 0x15214b4f8 <col:19> 'int' 1     |-CallExpr 0x15214b760 <line:75:2, col:16> 'int'     | |-ImplicitCastExpr 0x15214b748 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15214b708 <col:2> 'int ()' Function 0x152142f40 'pipe_lock' 'int ()'     | `-ImplicitCastExpr 0x15214b788 <col:12> 'struct pipe_inode_info *' <LValueToRValue>     |   `-DeclRefExpr 0x15214b728 <col:12> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     |-CallExpr 0x15214bac8 <line:78:2, col:18> 'int'     | |-ImplicitCastExpr 0x15214bab0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15214ba70 <col:2> 'int ()' Function 0x152143300 'pipe_unlock' 'int ()'     | `-ImplicitCastExpr 0x15214baf0 <col:14> 'struct pipe_inode_info *' <LValueToRValue>     |   `-DeclRefExpr 0x15214ba90 <col:14> 'struct pipe_inode_info *' lvalue ParmVar 0x152128e68 'pipe' 'struct pipe_inode_info *'     `-LabelStmt 0x15214bc80 <line:80:1, line:81:13> 'out'       `-CallExpr 0x15214bc40 <col:2, col:13> 'int'         |-ImplicitCastExpr 0x15214bc28 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x15214bbe8 <col:2> 'int ()' Function 0x15214bb30 'kvfree' 'int ()'         `-ImplicitCastExpr 0x15214bc68 <col:9> 'struct pipe_buffer *' <LValueToRValue>           `-DeclRefExpr 0x15214bc08 <col:9> 'struct pipe_buffer *' lvalue Var 0x1521426e8 'bufs' 'struct pipe_buffer *' ","19474":"`-FunctionDecl 0x13f928dc8  line:1:1 referenced invalid ProcXIChangeHierarchy 'int (int)'   |-ParmVarDecl 0x13f928cf0 <col:23, col:33> col:33 invalid client 'int'   `-CompoundStmt 0x13f942dc8 <line:2:1, line:98:1>     |-UnaryExprOrTypeTraitExpr 0x13f928ee8 <line:4:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13f928ec8 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13f928fc0 <line:5:5, col:21>     | `-VarDecl 0x13f928f20 <col:5, col:14> col:9 used rc 'int' cinit     |   `-RecoveryExpr 0x13f928fa0 <col:14> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13f9290d8 <line:6:5, col:34>     | `-VarDecl 0x13f929008 <col:5, col:9> col:9 invalid flags 'int'     |-CallExpr 0x13f9292f0 <line:8:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f929250 <col:5> 'int ()' Function 0x13f929198 'REQUEST' 'int ()'     | `-RecoveryExpr 0x13f9292d0 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f9424a0 <line:9:5, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f942400 <col:5> 'int ()' Function 0x13f929340 'REQUEST_AT_LEAST_SIZE' 'int ()'     | `-RecoveryExpr 0x13f942480 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f942638 <line:11:5, line:12:16>     | |-UnaryOperator 0x13f9425d8 <line:11:9, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f9425c0 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13f942578 <col:10, col:17> '<dependent type>' contains-errors lvalue ->num_changes     | |     `-RecoveryExpr 0x13f942558 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13f942628 <line:12:9, col:16>     |   `-ImplicitCastExpr 0x13f942610 <col:16> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x13f9425f0 <col:16> 'int' contains-errors lvalue Var 0x13f928f20 'rc' 'int'     |-WhileStmt 0x13f942bf8 <line:17:5, line:92:5>     | |-RecoveryExpr 0x13f942740 <line:17:12, col:30> '_Bool' contains-errors     | `-CompoundStmt 0x13f942bd0 <col:34, line:92:5>     |   |-IfStmt 0x13f942820 <line:18:9, line:21:9>     |   | |-RecoveryExpr 0x13f942760 <line:18:13, col:51> '_Bool' contains-errors     |   | `-CompoundStmt 0x13f942808 <col:54, line:21:9>     |   |   `-GotoStmt 0x13f9427f0 <line:20:13, col:18> 'unwind' 0x13f9427a0     |   |-DoStmt 0x13f942b88 <line:30:5, line:35:14>     |   | |-CompoundStmt 0x13f942b50 <line:30:8, line:35:5>     |   | | `-IfStmt 0x13f942b30 <line:31:9, line:34:9>     |   | |   |-RecoveryExpr 0x13f942ac0 <line:31:13, col:72> '_Bool' contains-errors     |   | |   `-CompoundStmt 0x13f942b18 <col:75, line:34:9>     |   | |     `-GotoStmt 0x13f942b00 <line:33:13, col:18> 'unwind' 0x13f9427a0     |   | `-IntegerLiteral 0x13f942b68 <line:35:13> 'int' 0     |   `-NullStmt 0x13f942ba8 <line:90:31>     |-LabelStmt 0x13f942d60 <line:94:2, line:96:37> 'unwind'     | `-CallExpr 0x13f942d38 <col:5, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f942cf8 <col:5> 'int ()' Function 0x13f942c40 'XISendDeviceHierarchyEvent' 'int ()'     |   `-RecoveryExpr 0x13f942d18 <col:32> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f942db8 <line:97:5, col:12>       `-ImplicitCastExpr 0x13f942da0 <col:12> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x13f942d80 <col:12> 'int' contains-errors lvalue Var 0x13f928f20 'rc' 'int' ","19677":"`-FunctionDecl 0x13281e638  line:1:1 invalid gre_sre_ip_print 'int (int *, int, int, const char *, int)'   |-ParmVarDecl 0x13281e328 <col:18, col:38> col:38 invalid ndo 'int *'   |-ParmVarDecl 0x13281e3a8 <col:43, col:51> col:51 invalid sreoff 'int'   |-ParmVarDecl 0x13281e428 <col:59, col:67> col:67 referenced invalid srelen 'int'   |-ParmVarDecl 0x13281e4a8 <line:2:18, col:32> col:32 used bp 'const char *'   |-ParmVarDecl 0x13281e528 <col:36, col:42> col:42 referenced invalid len 'int'   `-CompoundStmt 0x1308a5ce0 <line:3:1, line:35:1>     |-DeclStmt 0x13281e7c0 <line:4:2, col:23>     | `-VarDecl 0x13281e720 <col:2, col:21> col:16 used up 'const char *' cinit     |   `-ImplicitCastExpr 0x13281e7a8 <col:21> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x13281e788 <col:21> 'const char *' lvalue ParmVar 0x13281e4a8 'bp' 'const char *'     |-DeclStmt 0x13281e868 <line:5:2, col:27>     | `-VarDecl 0x13281e800 <col:2, col:7> col:7 invalid buf 'char'     |-IfStmt 0x1308a4e78 <line:7:2, line:10:2>     | |-BinaryOperator 0x13281e8c0 <line:7:6, col:15> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13281e880 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13281e8a0 <col:15> 'int' 3     | `-CompoundStmt 0x1308a4e58 <col:18, line:10:2>     |   |-CallExpr 0x1308a4de0 <line:8:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1308a4cb8 <col:3> 'int ()' Function 0x1308a4c00 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x1308a4dc0 <col:12, col:31> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x1308a4da0 <col:13, col:25> '<dependent type>' contains-errors ','     |   |     |-BinaryOperator 0x1308a4d60 <col:13, col:18> 'char[4]' contains-errors ','     |   |     | |-RecoveryExpr 0x1308a4cd8 <col:13> '<dependent type>' contains-errors lvalue     |   |     | `-StringLiteral 0x1308a4d40 <col:18> 'char[4]' lvalue \"STR\"     |   |     `-RecoveryExpr 0x1308a4d80 <col:25> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1308a4e48 <line:9:3, col:12>     |     `-ParenExpr 0x1308a4e28 <col:10, col:12> 'int'     |       `-IntegerLiteral 0x1308a4e08 <col:11> 'int' 1     |-IfStmt 0x1308a5070 <line:11:2, line:14:2>     | |-BinaryOperator 0x1308a4ed8 <line:11:6, col:15> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x1308a4e98 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1308a4eb8 <col:15> 'int' 3     | `-CompoundStmt 0x1308a5050 <col:18, line:14:2>     |   |-CallExpr 0x1308a4fd8 <line:12:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1308a4ef8 <col:3> 'int ()' Function 0x1308a4c00 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x1308a4fb8 <col:12, col:31> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x1308a4f98 <col:13, col:25> '<dependent type>' contains-errors ','     |   |     |-BinaryOperator 0x1308a4f58 <col:13, col:18> 'char[4]' contains-errors ','     |   |     | |-RecoveryExpr 0x1308a4f18 <col:13> '<dependent type>' contains-errors lvalue     |   |     | `-StringLiteral 0x1308a4f38 <col:18> 'char[4]' lvalue \"STR\"     |   |     `-RecoveryExpr 0x1308a4f78 <col:25> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1308a5040 <line:13:3, col:12>     |     `-ParenExpr 0x1308a5020 <col:10, col:12> 'int'     |       `-IntegerLiteral 0x1308a5000 <col:11> 'int' 1     |-IfStmt 0x1308a52a8 <line:15:2, line:18:2>     | |-BinaryOperator 0x1308a50d0 <line:15:6, col:16> 'int' contains-errors '>='     | | |-RecoveryExpr 0x1308a5090 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1308a50b0 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1308a5288 <col:24, line:18:2>     |   |-CallExpr 0x1308a5210 <line:16:3, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1308a50f0 <col:3> 'int ()' Function 0x1308a4c00 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x1308a51f0 <col:12, col:39> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x1308a51d0 <col:13, col:33> '<dependent type>' contains-errors ','     |   |     |-BinaryOperator 0x1308a5190 <col:13, col:25> '<dependent type>' contains-errors ','     |   |     | |-BinaryOperator 0x1308a5150 <col:13, col:18> 'char[4]' contains-errors ','     |   |     | | |-RecoveryExpr 0x1308a5110 <col:13> '<dependent type>' contains-errors lvalue     |   |     | | `-StringLiteral 0x1308a5130 <col:18> 'char[4]' lvalue \"STR\"     |   |     | `-RecoveryExpr 0x1308a5170 <col:25> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x1308a51b0 <col:33> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1308a5278 <line:17:3, col:12>     |     `-ParenExpr 0x1308a5258 <col:10, col:12> 'int'     |       `-IntegerLiteral 0x1308a5238 <col:11> 'int' 1     |-WhileStmt 0x1308a5c70 <line:20:2, line:33:2>     | |-BinaryOperator 0x1308a5308 <line:20:9, col:19> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1308a52c8 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1308a52e8 <col:19> 'int' 0     | `-CompoundStmt 0x1308a5c30 <col:22, line:33:2>     |   |-IfStmt 0x1308a55b0 <line:21:3, line:22:13>     |   | |-UnaryOperator 0x1308a5548 <line:21:7, col:24> 'int' prefix '!' cannot overflow     |   | | `-CallExpr 0x1308a54e8 <col:8, col:24> 'int'     |   | |   |-ImplicitCastExpr 0x1308a54d0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x1308a5408 <col:8> 'int ()' Function 0x1308a5350 'ND_TTEST2' 'int ()'     |   | |   |-ImplicitCastExpr 0x1308a5530 <col:18, col:19> 'int' <IntegralCast>     |   | |   | `-ImplicitCastExpr 0x1308a5518 <col:18, col:19> 'char' <LValueToRValue>     |   | |   |   `-UnaryOperator 0x1308a5460 <col:18, col:19> 'const char' lvalue prefix '*' cannot overflow     |   | |   |     `-ImplicitCastExpr 0x1308a5448 <col:19> 'const char *' <LValueToRValue>     |   | |   |       `-DeclRefExpr 0x1308a5428 <col:19> 'const char *' lvalue ParmVar 0x13281e4a8 'bp' 'const char *'     |   | |   `-IntegerLiteral 0x1308a5478 <col:23> 'int' 4     |   | `-ReturnStmt 0x1308a55a0 <line:22:4, col:13>     |   |   `-ParenExpr 0x1308a5580 <col:11, col:13> 'int'     |   |     `-IntegerLiteral 0x1308a5560 <col:12> 'int' 0     |   |-IfStmt 0x1308a5680 <line:23:3, line:24:13>     |   | |-BinaryOperator 0x1308a5610 <line:23:7, col:13> 'int' contains-errors '<'     |   | | |-RecoveryExpr 0x1308a55d0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x1308a55f0 <col:13> 'int' 4     |   | `-ReturnStmt 0x1308a5670 <line:24:4, col:13>     |   |   `-ParenExpr 0x1308a5650 <col:11, col:13> 'int'     |   |     `-IntegerLiteral 0x1308a5630 <col:12> 'int' 0     |   |-CallExpr 0x1308a5840 <line:26:3, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1308a5780 <col:3> 'int ()' Function 0x1308a56c8 'addrtostr' 'int ()'     |   | |-DeclRefExpr 0x1308a57a0 <col:13> 'const char *' lvalue ParmVar 0x13281e4a8 'bp' 'const char *'     |   | |-RecoveryExpr 0x1308a57c0 <col:17> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x1308a5820 <col:22, col:32> 'unsigned long' contains-errors sizeof     |   |   `-ParenExpr 0x1308a5800 <col:28, col:32> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x1308a57e0 <col:29> '<dependent type>' contains-errors lvalue     |   |-CompoundAssignOperator 0x1308a5aa8 <line:30:3, col:9> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   | |-DeclRefExpr 0x1308a5a68 <col:3> 'const char *' lvalue ParmVar 0x13281e4a8 'bp' 'const char *'     |   | `-IntegerLiteral 0x1308a5a88 <col:9> 'int' 4     |   |-CompoundAssignOperator 0x1308a5b40 <line:31:3, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x1308a5af8 <col:3> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1308a5ad8 <col:3> 'int' lvalue ParmVar 0x13281e528 'len' 'int'     |   | `-IntegerLiteral 0x1308a5b20 <col:10> 'int' 4     |   `-CompoundAssignOperator 0x1308a5c00 <line:32:3, col:13> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x1308a5b90 <col:3> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1308a5b70 <col:3> 'int' lvalue ParmVar 0x13281e428 'srelen' 'int'     |     `-IntegerLiteral 0x1308a5bb8 <col:13> 'int' 4     `-ReturnStmt 0x1308a5cd0 <line:34:2, col:11>       `-ParenExpr 0x1308a5cb0 <col:9, col:11> 'int'         `-IntegerLiteral 0x1308a5c90 <col:10> 'int' 1 ","19527":"`-FunctionDecl 0x15b941998  line:1:12 ovl_copy_up_locked 'int (struct dentry *, struct dentry *, struct dentry *, struct path *, struct kstat *, struct iattr *, const char *)' static   |-ParmVarDecl 0x15b928e48 <col:31, col:46> col:46 used workdir 'struct dentry *'   |-ParmVarDecl 0x15b928f38 <col:55, col:70> col:70 used upperdir 'struct dentry *'   |-ParmVarDecl 0x15b941200 <line:2:10, col:25> col:25 used dentry 'struct dentry *'   |-ParmVarDecl 0x15b9413d8 <col:33, col:46> col:46 used lowerpath 'struct path *'   |-ParmVarDecl 0x15b9415a8 <line:3:10, col:24> col:24 used stat 'struct kstat *'   |-ParmVarDecl 0x15b941778 <col:30, col:44> col:44 used attr 'struct iattr *'   |-ParmVarDecl 0x15b9417f8 <line:4:10, col:22> col:22 used link 'const char *'   `-CompoundStmt 0x15b94ac98 <line:5:1, line:74:1>     |-DeclStmt 0x15b941d08 <line:6:2, col:39>     | |-RecordDecl 0x15b941ac0 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x15b941c28 <col:2, col:32> col:16 used wdir 'struct inode *' cinit     |   `-RecoveryExpr 0x15b941cc8 <col:23, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b941c90 <col:23> 'struct dentry *' lvalue ParmVar 0x15b928e48 'workdir' 'struct dentry *'     |-DeclStmt 0x15b941e70 <line:7:2, col:40>     | `-VarDecl 0x15b941da8 <col:2, col:33> col:16 used udir 'struct inode *' cinit     |   `-RecoveryExpr 0x15b941e48 <col:23, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b941e10 <col:23> 'struct dentry *' lvalue ParmVar 0x15b928f38 'upperdir' 'struct dentry *'     |-DeclStmt 0x15b941f68 <line:8:2, col:33>     | `-VarDecl 0x15b941eb0 <col:2, col:29> col:17 used newdentry 'struct dentry *' cinit     |   `-RecoveryExpr 0x15b941f48 <col:29> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15b942048 <line:9:2, col:29>     | `-VarDecl 0x15b941fa8 <col:2, col:25> col:17 used upper 'struct dentry *' cinit     |   `-RecoveryExpr 0x15b942028 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15b9420e0 <line:11:2, col:9>     | `-VarDecl 0x15b942078 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x15b9473e0 <line:13:2, col:45> 'struct dentry *' contains-errors '='     | |-DeclRefExpr 0x15b9420f8 <col:2> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     | `-ImplicitCastExpr 0x15b9473c8 <col:14, col:45> 'struct dentry *' <IntegralToPointer>     |   `-CallExpr 0x15b947368 <col:14, col:45> 'int'     |     |-ImplicitCastExpr 0x15b947350 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15b9472b8 <col:14> 'int ()' Function 0x15b947200 'ovl_lookup_temp' 'int ()'     |     |-ImplicitCastExpr 0x15b947398 <col:30> 'struct dentry *' <LValueToRValue>     |     | `-DeclRefExpr 0x15b9472d8 <col:30> 'struct dentry *' lvalue ParmVar 0x15b928e48 'workdir' 'struct dentry *'     |     `-ImplicitCastExpr 0x15b9473b0 <col:39> 'struct dentry *' <LValueToRValue>     |       `-DeclRefExpr 0x15b9472f8 <col:39> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'     |-BinaryOperator 0x15b947598 <line:14:2, col:25> 'int' contains-errors '='     | |-DeclRefExpr 0x15b947400 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-CallExpr 0x15b947558 <col:8, col:25> 'int' contains-errors     |   |-ImplicitCastExpr 0x15b947540 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b947500 <col:8> 'int ()' Function 0x15b947448 'PTR_ERR' 'int ()'     |   `-ImplicitCastExpr 0x15b947580 <col:16> 'struct dentry *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15b947520 <col:16> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |-IfStmt 0x15b947798 <line:15:2, line:16:8>     | |-CallExpr 0x15b9476f0 <line:15:6, col:22> 'int' contains-errors     | | |-ImplicitCastExpr 0x15b9476d8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15b947698 <col:6> 'int ()' Function 0x15b9475e0 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x15b947718 <col:13> 'struct dentry *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x15b9476b8 <col:13> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     | `-GotoStmt 0x15b947780 <line:16:3, col:8> 'out' 0x15b947730     |-BinaryOperator 0x15b947a80 <line:18:2, line:19:29> 'struct dentry *' contains-errors '='     | |-DeclRefExpr 0x15b9477b8 <line:18:2> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'     | `-CallExpr 0x15b947a48 <col:10, line:19:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b9478b8 <line:18:10> 'int ()' Function 0x15b947800 'lookup_one_len' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x15b947938 <col:25, col:40> '<dependent type>' contains-errors lvalue .name     |   | `-RecoveryExpr 0x15b947910 <col:25, col:33> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15b9478d8 <col:25> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'     |   |-DeclRefExpr 0x15b947980 <col:46> 'struct dentry *' lvalue ParmVar 0x15b928f38 'upperdir' 'struct dentry *'     |   `-CXXDependentScopeMemberExpr 0x15b947a00 <line:19:11, col:26> '<dependent type>' contains-errors lvalue .len     |     `-RecoveryExpr 0x15b9479d8 <col:11, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b9479a0 <col:11> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'     |-BinaryOperator 0x15b947b58 <line:20:2, col:21> 'int' contains-errors '='     | |-DeclRefExpr 0x15b947aa0 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-CallExpr 0x15b947b18 <col:8, col:21> 'int' contains-errors     |   |-ImplicitCastExpr 0x15b947b00 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b947ac0 <col:8> 'int ()' Function 0x15b947448 'PTR_ERR' 'int ()'     |   `-ImplicitCastExpr 0x15b947b40 <col:16> 'struct dentry *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15b947ae0 <col:16> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'     |-IfStmt 0x15b947c78 <line:21:2, line:22:8>     | |-CallExpr 0x15b947bd0 <line:21:6, col:18> 'int' contains-errors     | | |-ImplicitCastExpr 0x15b947bb8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x15b947b78 <col:6> 'int ()' Function 0x15b9475e0 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x15b947bf8 <col:13> 'struct dentry *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x15b947b98 <col:13> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'     | `-GotoStmt 0x15b947c60 <line:22:3, col:8> 'out1' 0x15b947c10     |-CompoundAssignOperator 0x15b947d60 <line:25:2, col:16> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x15b947cd0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b947c98 <col:2> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'     | `-RecoveryExpr 0x15b947d40 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15b948060 <line:26:2, col:63> 'int' contains-errors '='     | |-DeclRefExpr 0x15b947d90 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-CallExpr 0x15b948010 <col:8, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b947e90 <col:8> 'int ()' Function 0x15b947dd8 'ovl_create_real' 'int ()'     |   |-DeclRefExpr 0x15b947eb0 <col:24> 'struct inode *' contains-errors lvalue Var 0x15b941c28 'wdir' 'struct inode *'     |   |-DeclRefExpr 0x15b947ed0 <col:30> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |   |-DeclRefExpr 0x15b947ef0 <col:41> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'     |   |-DeclRefExpr 0x15b947f10 <col:47> 'const char *' lvalue ParmVar 0x15b9417f8 'link' 'const char *'     |   |-RecoveryExpr 0x15b947fd0 <col:53> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x15b947ff0 <col:59> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15b948138 <line:27:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b9480b8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b948080 <col:2> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'     | `-RecoveryExpr 0x15b948118 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b948c00 <line:28:2, line:29:8>     | |-ImplicitCastExpr 0x15b948178 <line:28:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15b948158 <col:6> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-GotoStmt 0x15b9481e0 <line:29:3, col:8> 'out2' 0x15b948190     |-IfStmt 0x15b949568 <line:31:2, line:40:2>     | |-CallExpr 0x15b948d80 <line:31:6, col:24> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15b948d00 <col:6> 'int ()' Function 0x15b948c48 'S_ISREG' 'int ()'     | | `-RecoveryExpr 0x15b948d58 <col:14, col:20> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15b948d20 <col:14> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'     | `-CompoundStmt 0x15b949530 <col:27, line:40:2>     |   |-DeclStmt 0x15b948e68 <line:32:3, col:24>     |   | `-VarDecl 0x15b948e00 <col:3, col:15> col:15 referenced invalid upperpath 'struct path'     |   |-CallExpr 0x15b948fd8 <line:33:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15b948f60 <col:3> 'int ()' Function 0x15b948ea8 'ovl_path_upper' 'int ()'     |   | |-DeclRefExpr 0x15b948f80 <col:18> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'     |   | `-UnaryOperator 0x15b948fc0 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15b948fa0 <col:27> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x15b949220 <line:35:3, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x15b9491b8 <col:3, col:13> '<dependent type>' contains-errors lvalue .dentry     |   | | `-RecoveryExpr 0x15b949190 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x15b949170 <col:3> 'struct path' lvalue Var 0x15b948e00 'upperpath' 'struct path'     |   | `-DeclRefExpr 0x15b949200 <col:22> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |   |-BinaryOperator 0x15b949450 <line:37:3, col:59> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15b949240 <col:3> 'int' lvalue Var 0x15b942078 'err' 'int'     |   | `-CallExpr 0x15b949418 <col:9, col:59> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15b949340 <col:9> 'int ()' Function 0x15b949288 'ovl_copy_up_data' 'int ()'     |   |   |-DeclRefExpr 0x15b949360 <col:26> 'struct path *' lvalue ParmVar 0x15b9413d8 'lowerpath' 'struct path *'     |   |   |-UnaryOperator 0x15b9493a0 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x15b949380 <col:38> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x15b9493f0 <col:49, col:55> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15b9493b8 <col:49> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'     |   `-IfStmt 0x15b949510 <line:38:3, line:39:9>     |     |-ImplicitCastExpr 0x15b949490 <line:38:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15b949470 <col:7> 'int' lvalue Var 0x15b942078 'err' 'int'     |     `-GotoStmt 0x15b9494f8 <line:39:4, col:9> 'out_cleanup' 0x15b9494a8     |-BinaryOperator 0x15b949758 <line:42:2, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x15b949588 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-CallExpr 0x15b949728 <col:8, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15b949688 <col:8> 'int ()' Function 0x15b9495d0 'ovl_copy_xattr' 'int ()'     |   |-RecoveryExpr 0x15b9496e0 <col:23, col:34> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15b9496a8 <col:23> 'struct path *' lvalue ParmVar 0x15b9413d8 'lowerpath' 'struct path *'     |   `-DeclRefExpr 0x15b949708 <col:42> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |-IfStmt 0x15b9497c8 <line:43:2, line:44:8>     | |-ImplicitCastExpr 0x15b949798 <line:43:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15b949778 <col:6> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-GotoStmt 0x15b9497b0 <line:44:3, col:8> 'out_cleanup' 0x15b9494a8     |-CallExpr 0x15b9499a8 <line:46:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b9498c8 <col:2> 'int ()' Function 0x15b949810 'mutex_lock' 'int ()'     | `-UnaryOperator 0x15b949990 <col:13, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x15b949948 <col:14, col:34> '<dependent type>' contains-errors lvalue ->i_mutex     |     `-RecoveryExpr 0x15b949920 <col:14, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b9498e8 <col:14> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |-BinaryOperator 0x15b949ba8 <line:47:2, col:36> 'int' contains-errors '='     | |-DeclRefExpr 0x15b9499d0 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-CallExpr 0x15b949b48 <col:8, col:36> 'int' contains-errors     |   |-ImplicitCastExpr 0x15b949b30 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b949ad0 <col:8> 'int ()' Function 0x15b949a18 'ovl_set_attr' 'int ()'     |   |-ImplicitCastExpr 0x15b949b78 <col:21> 'struct dentry *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x15b949af0 <col:21> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |   `-ImplicitCastExpr 0x15b949b90 <col:32> 'struct kstat *' <LValueToRValue>     |     `-DeclRefExpr 0x15b949b10 <col:32> 'struct kstat *' lvalue ParmVar 0x15b9415a8 'stat' 'struct kstat *'     |-CallExpr 0x15b949f90 <line:50:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b949eb0 <col:2> 'int ()' Function 0x15b949df8 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x15b949f78 <col:15, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x15b949f30 <col:16, col:36> '<dependent type>' contains-errors lvalue ->i_mutex     |     `-RecoveryExpr 0x15b949f08 <col:16, col:27> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b949ed0 <col:16> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |-IfStmt 0x15b94a008 <line:51:2, line:52:8>     | |-ImplicitCastExpr 0x15b949fd8 <line:51:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15b949fb8 <col:6> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-GotoStmt 0x15b949ff0 <line:52:3, col:8> 'out_cleanup' 0x15b9494a8     |-BinaryOperator 0x15b94a2a8 <line:54:2, col:53> 'int' contains-errors '='     | |-DeclRefExpr 0x15b94a028 <col:2> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-CallExpr 0x15b94a200 <col:8, col:53> 'int' contains-errors     |   |-ImplicitCastExpr 0x15b94a1e8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b94a128 <col:8> 'int ()' Function 0x15b94a070 'ovl_do_rename' 'int ()'     |   |-ImplicitCastExpr 0x15b94a248 <col:22> 'struct inode *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x15b94a148 <col:22> 'struct inode *' contains-errors lvalue Var 0x15b941c28 'wdir' 'struct inode *'     |   |-ImplicitCastExpr 0x15b94a260 <col:28> 'struct dentry *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x15b94a168 <col:28> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |   |-ImplicitCastExpr 0x15b94a278 <col:39> 'struct inode *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x15b94a188 <col:39> 'struct inode *' contains-errors lvalue Var 0x15b941da8 'udir' 'struct inode *'     |   |-ImplicitCastExpr 0x15b94a290 <col:45> 'struct dentry *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x15b94a1a8 <col:45> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'     |   `-IntegerLiteral 0x15b94a1c8 <col:52> 'int' 0     |-IfStmt 0x15b94a318 <line:55:2, line:56:8>     | |-ImplicitCastExpr 0x15b94a2e8 <line:55:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x15b94a2c8 <col:6> 'int' lvalue Var 0x15b942078 'err' 'int'     | `-GotoStmt 0x15b94a300 <line:56:3, col:8> 'out_cleanup' 0x15b9494a8     |-CallExpr 0x15b94a490 <line:58:2, col:37> 'int' contains-errors     | |-ImplicitCastExpr 0x15b94a478 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15b94a418 <col:2> 'int ()' Function 0x15b94a360 'ovl_dentry_update' 'int ()'     | |-ImplicitCastExpr 0x15b94a4c0 <col:20> 'struct dentry *' <LValueToRValue>     | | `-DeclRefExpr 0x15b94a438 <col:20> 'struct dentry *' lvalue ParmVar 0x15b941200 'dentry' 'struct dentry *'     | `-ImplicitCastExpr 0x15b94a4d8 <col:28> 'struct dentry *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x15b94a458 <col:28> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |-LabelStmt 0x15b94a948 <line:64:1, line:65:12> 'out2'     | `-CallExpr 0x15b94a908 <col:2, col:12> 'int' contains-errors     |   |-ImplicitCastExpr 0x15b94a8f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b94a8b0 <col:2> 'int ()' Function 0x15b94a7f8 'dput' 'int ()'     |   `-ImplicitCastExpr 0x15b94a930 <col:7> 'struct dentry *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15b94a8d0 <col:7> 'struct dentry *' contains-errors lvalue Var 0x15b941fa8 'upper' 'struct dentry *'     |-LabelStmt 0x15b94aa00 <line:66:1, line:67:16> 'out1'     | `-CallExpr 0x15b94a9c0 <col:2, col:16> 'int' contains-errors     |   |-ImplicitCastExpr 0x15b94a9a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b94a968 <col:2> 'int ()' Function 0x15b94a7f8 'dput' 'int ()'     |   `-ImplicitCastExpr 0x15b94a9e8 <col:7> 'struct dentry *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15b94a988 <col:7> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     |-LabelStmt 0x15b94aa68 <line:68:1, line:69:9> 'out'     | `-ReturnStmt 0x15b94aa58 <col:2, col:9>     |   `-ImplicitCastExpr 0x15b94aa40 <col:9> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15b94aa20 <col:9> 'int' lvalue Var 0x15b942078 'err' 'int'     |-LabelStmt 0x15b94ac60 <line:71:1, line:72:29> 'out_cleanup'     | `-CallExpr 0x15b94ac00 <col:2, col:29> 'int' contains-errors     |   |-ImplicitCastExpr 0x15b94abc8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15b94ab68 <col:2> 'int ()' Function 0x15b94aab0 'ovl_cleanup' 'int ()'     |   |-ImplicitCastExpr 0x15b94ac30 <col:14> 'struct inode *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x15b94ab88 <col:14> 'struct inode *' contains-errors lvalue Var 0x15b941c28 'wdir' 'struct inode *'     |   `-ImplicitCastExpr 0x15b94ac48 <col:20> 'struct dentry *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15b94aba8 <col:20> 'struct dentry *' contains-errors lvalue Var 0x15b941eb0 'newdentry' 'struct dentry *'     `-GotoStmt 0x15b94ac80 <line:73:2, col:7> 'out' 0x15b947730 ","19909":"`-FunctionDecl 0x1431283a0  line:1:6 invalid _mi_report_crashed 'void (int *, const char *, const char *, int)'   |-ParmVarDecl 0x143128128 <col:25, col:34> col:34 invalid file 'int *'   |-ParmVarDecl 0x1431281a8 <col:40, col:52> col:52 used message 'const char *'   |-ParmVarDecl 0x143128228 <line:2:25, col:37> col:37 used sfile 'const char *'   |-ParmVarDecl 0x1431282a8 <col:44, col:49> col:49 used sline 'int'   `-CompoundStmt 0x1431425b0 <line:3:1, line:22:1>     |-DeclStmt 0x1431285a8 <line:6:3, col:17>     | `-VarDecl 0x143128540 <col:3, col:16> col:8 used buf 'char[1024]'     |-CallExpr 0x143141818 <line:7:3, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143128720 <col:3> 'int ()' Function 0x143128668 'mysql_mutex_lock' 'int ()'     | `-UnaryOperator 0x143141800 <col:20, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1431287a8 <col:21, col:30> '<dependent type>' contains-errors lvalue ->intern_lock     |     `-CXXDependentScopeMemberExpr 0x143128760 <col:21, col:27> '<dependent type>' contains-errors lvalue ->s     |       `-RecoveryExpr 0x143128740 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143141cc8 <line:8:3, line:12:40> has_else     | |-RecoveryExpr 0x143141870 <line:8:7, col:41> '_Bool' contains-errors     | |-CallExpr 0x143141b38 <line:9:5, line:10:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x143141970 <line:9:5> 'int ()' Function 0x1431418b8 'sql_print_error' 'int ()'     | | |-StringLiteral 0x1431419d0 <col:21> 'char[4]' lvalue \"STR\"     | | |-CXXDependentScopeMemberExpr 0x143141af0 <col:28, col:37> '<dependent type>' contains-errors lvalue ->thread_id     | | | `-RecoveryExpr 0x143141ad0 <col:28> '<dependent type>' contains-errors lvalue     | | |-DeclRefExpr 0x143141a50 <line:10:21> 'const char *' lvalue ParmVar 0x143128228 'sfile' 'const char *'     | | `-DeclRefExpr 0x143141a70 <col:28> 'int' lvalue ParmVar 0x1431282a8 'sline' 'int'     | `-CallExpr 0x143141c48 <line:12:5, col:40> 'int'     |   |-ImplicitCastExpr 0x143141c30 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x143141b78 <col:5> 'int ()' Function 0x1431418b8 'sql_print_error' 'int ()'     |   |-ImplicitCastExpr 0x143141c80 <col:21> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x143141b98 <col:21> 'char[4]' lvalue \"STR\"     |   |-ImplicitCastExpr 0x143141c98 <col:28> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x143141bb8 <col:28> 'const char *' lvalue ParmVar 0x143128228 'sfile' 'const char *'     |   `-ImplicitCastExpr 0x143141cb0 <col:35> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x143141bd8 <col:35> 'int' lvalue ParmVar 0x1431282a8 'sline' 'int'     |-IfStmt 0x143141e08 <line:13:3, line:14:35>     | |-ImplicitCastExpr 0x143141d18 <line:13:7> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x143141cf8 <col:7> 'const char *' lvalue ParmVar 0x1431281a8 'message' 'const char *'     | `-CallExpr 0x143141da8 <line:14:5, col:35> 'int'     |   |-ImplicitCastExpr 0x143141d90 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x143141d30 <col:5> 'int ()' Function 0x1431418b8 'sql_print_error' 'int ()'     |   |-ImplicitCastExpr 0x143141dd8 <col:21> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x143141d50 <col:21> 'char[4]' lvalue \"STR\"     |   `-ImplicitCastExpr 0x143141df0 <col:28> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x143141d70 <col:28> 'const char *' lvalue ParmVar 0x1431281a8 'message' 'const char *'     |-ForStmt 0x143142388 <line:15:3, line:20:3>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-RecoveryExpr 0x143141f28 <line:15:34> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x143142128 <col:43, col:69> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x1431420c0 <col:43> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x143142100 <col:52, col:69> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x143142040 <col:52> 'int ()' Function 0x143141f88 'list_rest' 'int ()'     | |   `-RecoveryExpr 0x1431420e0 <col:62> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143142378 <line:16:3, line:20:3>     `-CallExpr 0x143142588 <line:21:3, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x1431424a0 <col:3> 'int ()' Function 0x1431423e8 'mysql_mutex_unlock' 'int ()'       `-UnaryOperator 0x143142570 <col:22, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x143142528 <col:23, col:32> '<dependent type>' contains-errors lvalue ->intern_lock           `-CXXDependentScopeMemberExpr 0x1431424e0 <col:23, col:29> '<dependent type>' contains-errors lvalue ->s             `-RecoveryExpr 0x1431424c0 <col:23> '<dependent type>' contains-errors lvalue ","20134":"`-FunctionDecl 0x129027568  line:1:24 invalid _hsh_find 'struct bpf_blk *(const struct bpf_state *, int)' static   |-ParmVarDecl 0x12900e2e8 <col:34, col:58> col:58 used state 'const struct bpf_state *'   |-ParmVarDecl 0x12900e380 <col:65, col:74> col:74 invalid h_val 'int'   `-CompoundStmt 0x129027bc0 <line:2:1, line:9:1>     |-DeclStmt 0x129027808 <line:3:2, col:29>     | |-RecordDecl 0x129027620 <col:2, col:9> col:9 struct bpf_hash_bkt     | `-VarDecl 0x129027788 <col:2, col:23> col:23 used h_iter 'struct bpf_hash_bkt *'     |-BinaryOperator 0x129027a30 <line:5:2, col:37> 'struct bpf_hash_bkt *' contains-errors '='     | |-DeclRefExpr 0x129027820 <col:2> 'struct bpf_hash_bkt *' lvalue Var 0x129027788 'h_iter' 'struct bpf_hash_bkt *'     | `-CallExpr 0x129027a00 <col:11, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1290279a0 <col:11> 'int ()' Function 0x1290278e8 '_hsh_find_bkt' 'int ()'     |   |-DeclRefExpr 0x1290279c0 <col:25> 'const struct bpf_state *' lvalue ParmVar 0x12900e2e8 'state' 'const struct bpf_state *'     |   `-RecoveryExpr 0x1290279e0 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129027b30 <line:6:2, line:7:10>     | |-BinaryOperator 0x129027ac8 <line:6:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x129027a50 <col:6> 'struct bpf_hash_bkt *' lvalue Var 0x129027788 'h_iter' 'struct bpf_hash_bkt *'     | | `-RecoveryExpr 0x129027aa8 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x129027b20 <line:7:3, col:10>     |   `-RecoveryExpr 0x129027b00 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x129027bb0 <line:8:2, col:17>       `-RecoveryExpr 0x129027b88 <col:9, col:17> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x129027b50 <col:9> 'struct bpf_hash_bkt *' lvalue Var 0x129027788 'h_iter' 'struct bpf_hash_bkt *' ","19644":"`-FunctionDecl 0x12800df18  line:1:1 invalid _change_user 'int (int *, int, int)'   |-ParmVarDecl 0x12800dd28 <col:15, col:34> col:34 referenced invalid worker 'int *'   |-ParmVarDecl 0x12800dda8 <line:2:15, col:34> col:34 invalid uid 'int'   |-ParmVarDecl 0x12800de28 <line:3:15, col:34> col:34 invalid gid 'int'   `-CompoundStmt 0x1280276e0 <line:4:1, line:26:1>     |-BinaryOperator 0x12800e0e8 <line:15:9, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12800e080 <col:9, col:23> '<dependent type>' contains-errors lvalue ->uid     | | `-CXXDependentScopeMemberExpr 0x12800e038 <col:9, col:17> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x12800e010 <col:9> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12800dff0 <col:9> 'int *' lvalue ParmVar 0x12800dd28 'worker' 'int *'     | `-RecoveryExpr 0x12800e0c8 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12800e368 <line:17:9, line:19:9>     | |-BinaryOperator 0x12800e2e8 <line:17:13, col:28> 'int' contains-errors '<'     | | |-CallExpr 0x12800e2a0 <col:13, col:24> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12800e260 <col:13> 'int ()' Function 0x12800e1a8 'setgid' 'int ()'     | | | `-RecoveryExpr 0x12800e280 <col:21> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12800e2c8 <col:28> 'int' 0     | `-CompoundStmt 0x12800e350 <col:31, line:19:9>     |   `-ReturnStmt 0x12800e340 <line:18:17, col:24>     |     `-RecoveryExpr 0x12800e320 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128027678 <line:21:9, line:23:9>     | |-BinaryOperator 0x1280275f8 <line:21:13, col:56> 'int' contains-errors '<'     | | |-CallExpr 0x1280275a8 <col:13, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1280274b8 <col:13> 'int ()' Function 0x128027400 'initgroups' 'int ()'     | | | |-CXXDependentScopeMemberExpr 0x128027540 <col:25, col:39> '<dependent type>' contains-errors lvalue ->username     | | | | `-CXXDependentScopeMemberExpr 0x1280274f8 <col:25, col:33> '<dependent type>' contains-errors lvalue ->priv     | | | |   `-RecoveryExpr 0x1280274d8 <col:25> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x128027588 <col:49> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1280275d8 <col:56> 'int' 0     | `-CompoundStmt 0x128027660 <col:59, line:23:9>     |   `-ReturnStmt 0x128027650 <line:22:17, col:24>     |     `-RecoveryExpr 0x128027630 <col:24> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1280276d0 <line:25:9, col:16>       `-RecoveryExpr 0x1280276b0 <col:16> '<dependent type>' contains-errors lvalue ","20078":"`-FunctionDecl 0x14b9281a8  line:1:14 conv_get_current_locale 'const char *(void)'   `-CompoundStmt 0x14b9431e8 <line:2:1, line:18:1>     |-DeclStmt 0x14b928318 <line:3:2, col:25>     | `-VarDecl 0x14b9282b0 <col:2, col:15> col:15 used cur_locale 'const char *'     |-BinaryOperator 0x14b9429b0 <line:8:2, col:29> 'const char *' '='     | |-DeclRefExpr 0x14b928330 <col:2> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     | `-ImplicitCastExpr 0x14b928568 <col:15, col:29> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x14b928528 <col:15, col:29> 'int'     |     |-ImplicitCastExpr 0x14b928510 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b928460 <col:15> 'int ()' Function 0x14b9283a8 'g_getenv' 'int ()'     |     `-ImplicitCastExpr 0x14b928550 <col:24> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x14b9284c0 <col:24> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14b942b10 <line:9:2, col:46>     | |-UnaryOperator 0x14b942a08 <col:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b9429f0 <col:7> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b9429d0 <col:7> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     | `-BinaryOperator 0x14b942af0 <col:19, col:46> 'const char *' '='     |   |-DeclRefExpr 0x14b942a20 <col:19> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     |   `-ImplicitCastExpr 0x14b942ad8 <col:32, col:46> 'const char *' <IntegralToPointer>     |     `-CallExpr 0x14b942a98 <col:32, col:46> 'int'     |       |-ImplicitCastExpr 0x14b942a80 <col:32> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b942a40 <col:32> 'int ()' Function 0x14b9283a8 'g_getenv' 'int ()'     |       `-ImplicitCastExpr 0x14b942ac0 <col:41> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x14b942a60 <col:41> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14b942c70 <line:10:2, col:46>     | |-UnaryOperator 0x14b942b68 <col:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b942b50 <col:7> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b942b30 <col:7> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     | `-BinaryOperator 0x14b942c50 <col:19, col:46> 'const char *' '='     |   |-DeclRefExpr 0x14b942b80 <col:19> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     |   `-ImplicitCastExpr 0x14b942c38 <col:32, col:46> 'const char *' <IntegralToPointer>     |     `-CallExpr 0x14b942bf8 <col:32, col:46> 'int'     |       |-ImplicitCastExpr 0x14b942be0 <col:32> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b942ba0 <col:32> 'int ()' Function 0x14b9283a8 'g_getenv' 'int ()'     |       `-ImplicitCastExpr 0x14b942c20 <col:41> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x14b942bc0 <col:41> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14b942f10 <line:11:2, col:56>     | |-UnaryOperator 0x14b942cc8 <col:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b942cb0 <col:7> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b942c90 <col:7> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     | `-BinaryOperator 0x14b942ef0 <col:19, col:56> 'const char *' contains-errors '='     |   |-DeclRefExpr 0x14b942ce0 <col:19> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     |   `-CallExpr 0x14b942ec0 <col:32, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14b942de0 <col:32> 'int ()' Function 0x14b942d28 'setlocale' 'int ()'     |     |-RecoveryExpr 0x14b942e80 <col:42> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x14b942ea0 <col:52> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b943158 <line:14:2, line:15:38> 'int'     | |-ImplicitCastExpr 0x14b943140 <line:14:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b943010 <col:2> 'int ()' Function 0x14b942f58 'debug_print' 'int ()'     | |-ImplicitCastExpr 0x14b943188 <col:14> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x14b943030 <col:14> 'char[4]' lvalue \"STR\"     | `-ConditionalOperator 0x14b943110 <line:15:7, col:33> 'const char *'     |   |-ImplicitCastExpr 0x14b9430b0 <col:7> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x14b943050 <col:7> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     |   |-ImplicitCastExpr 0x14b9430c8 <col:20> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x14b943070 <col:20> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *'     |   `-ImplicitCastExpr 0x14b9430f8 <col:33> 'const char *' <BitCast>     |     `-ImplicitCastExpr 0x14b9430e0 <col:33> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x14b943090 <col:33> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x14b9431d8 <line:17:2, col:9>       `-ImplicitCastExpr 0x14b9431c0 <col:9> 'const char *' <LValueToRValue>         `-DeclRefExpr 0x14b9431a0 <col:9> 'const char *' lvalue Var 0x14b9282b0 'cur_locale' 'const char *' ","19189":"`-FunctionDecl 0x147928328  line:1:1 g_execvp 'int (const char *, char **)'   |-ParmVarDecl 0x1479280d8 <col:10, col:22> col:22 used p1 'const char *'   |-ParmVarDecl 0x147928200 <col:26, col:37> col:32 used args 'char **'   `-CompoundStmt 0x147928668 <line:2:1, line:8:1>     `-ReturnStmt 0x147928658 <line:6:3, col:25>       `-CallExpr 0x1479285f8 <col:10, col:25> 'int'         |-ImplicitCastExpr 0x1479285e0 <col:10> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x147928550 <col:10> 'int ()' Function 0x147928498 'execvp' 'int ()'         |-ImplicitCastExpr 0x147928628 <col:17> 'const char *' <LValueToRValue>         | `-DeclRefExpr 0x147928570 <col:17> 'const char *' lvalue ParmVar 0x1479280d8 'p1' 'const char *'         `-ImplicitCastExpr 0x147928640 <col:21> 'char **' <LValueToRValue>           `-DeclRefExpr 0x147928590 <col:21> 'char **' lvalue ParmVar 0x147928200 'args' 'char **' ","19284":"`-FunctionDecl 0x132928358  line:1:1 invalid TPM_GENERATED_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x132928128 <col:25, col:40> col:40 invalid target 'int *'   |-ParmVarDecl 0x1329281e0 <col:48, col:55> col:55 invalid buffer 'int **'   |-ParmVarDecl 0x132928260 <col:63, col:70> col:70 invalid size 'int *'   `-CompoundStmt 0x1329419b8 <line:2:1, line:14:1>     |-IfStmt 0x1329286e8 <line:5:5, line:7:5>     | |-BinaryOperator 0x1329284a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x132928468 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x132928488 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1329286d8 <col:31, line:7:5>     |-IfStmt 0x132941950 <line:8:5, line:12:5>     | |-BinaryOperator 0x132928798 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x132928758 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x132928778 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x132941938 <col:31, line:12:5>     |   `-IfStmt 0x132941918 <line:9:2, line:11:2>     |     |-BinaryOperator 0x1329418d0 <line:9:6, col:17> 'int' contains-errors '!='     |     | |-UnaryOperator 0x132941898 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | | `-ImplicitCastExpr 0x132941880 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x1329287b8 <col:7> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x1329418b0 <col:17> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x132941908 <col:38, line:11:2>     `-ReturnStmt 0x1329419a8 <line:13:5, col:12>       `-RecoveryExpr 0x132941988 <col:12> '<dependent type>' contains-errors lvalue ","19372":"`-FunctionDecl 0x14a827438  line:1:12 invalid _snd_ctl_register_ioctl 'int (int, struct list_head *)' static   |-ParmVarDecl 0x14a80dcf0 <col:36, col:58> col:58 invalid fcn 'int'   |-ParmVarDecl 0x14a80e2e8 <col:63, col:81> col:81 used lists 'struct list_head *'   `-CompoundStmt 0x14a828060 <line:2:1, line:13:1>     |-DeclStmt 0x14a8276d8 <line:3:2, col:27>     | |-RecordDecl 0x14a8274f0 <col:2, col:9> col:9 struct snd_kctl_ioctl     | `-VarDecl 0x14a827658 <col:2, col:25> col:25 used pn 'struct snd_kctl_ioctl *'     |-IfStmt 0x14a827a38 <line:6:2, line:7:11>     | |-BinaryOperator 0x14a827970 <line:6:6, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14a8278f8 <col:6> 'struct snd_kctl_ioctl *' lvalue Var 0x14a827658 'pn' 'struct snd_kctl_ioctl *'     | | `-RecoveryExpr 0x14a827950 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14a827a28 <line:7:3, col:11>     |   `-UnaryOperator 0x14a827a10 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14a8279f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14a8279d8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a827ad8 <line:8:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a827a90 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a827a58 <col:2> 'struct snd_kctl_ioctl *' lvalue Var 0x14a827658 'pn' 'struct snd_kctl_ioctl *'     | `-RecoveryExpr 0x14a827ab8 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a827c88 <line:9:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a827bd8 <col:2> 'int ()' Function 0x14a827b20 'down_write' 'int ()'     | `-UnaryOperator 0x14a827c70 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a827c50 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a827e48 <line:10:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a827d90 <col:2> 'int ()' Function 0x14a827cd8 'list_add_tail' 'int ()'     | |-UnaryOperator 0x14a827e10 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14a827de8 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a827db0 <col:17> 'struct snd_kctl_ioctl *' lvalue Var 0x14a827658 'pn' 'struct snd_kctl_ioctl *'     | `-DeclRefExpr 0x14a827e28 <col:27> 'struct list_head *' lvalue ParmVar 0x14a80e2e8 'lists' 'struct list_head *'     |-CallExpr 0x14a828008 <line:11:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a827f58 <col:2> 'int ()' Function 0x14a827ea0 'up_write' 'int ()'     | `-UnaryOperator 0x14a827ff0 <col:11, col:12> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a827fd0 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14a828050 <line:12:2, col:9>       `-IntegerLiteral 0x14a828030 <col:9> 'int' 0 ","19376":"`-FunctionDecl 0x125940e88  line:1:12 invalid tcp_check_dsack 'int (struct sock *, const struct sk_buff *, struct tcp_sack_block_wire *, int, int)' static   |-ParmVarDecl 0x125928648 <col:28, col:41> col:41 used sk 'struct sock *'   |-ParmVarDecl 0x125940a28 <col:45, col:67> col:67 used ack_skb 'const struct sk_buff *'   |-ParmVarDecl 0x125940bf8 <line:2:7, col:35> col:35 sp 'struct tcp_sack_block_wire *'   |-ParmVarDecl 0x125940c78 <col:39, col:43> col:43 used num_sacks 'int'   |-ParmVarDecl 0x125940d10 <line:3:7, col:11> col:11 invalid prior_snd_una 'int'   `-CompoundStmt 0x1259440f8 <line:4:1, line:34:1>     |-DeclStmt 0x125941388 <line:5:2, col:34>     | |-RecordDecl 0x125940f58 <col:2, col:9> col:9 struct tcp_sock     | `-VarDecl 0x1259410c8 <col:2, col:33> col:19 used tp 'struct tcp_sock *' cinit     |   `-ImplicitCastExpr 0x125941358 <col:24, col:33> 'struct tcp_sock *' <IntegralToPointer>     |     `-CallExpr 0x125941318 <col:24, col:33> 'int'     |       |-ImplicitCastExpr 0x125941300 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x125941290 <col:24> 'int ()' Function 0x1259411d8 'tcp_sk' 'int ()'     |       `-ImplicitCastExpr 0x125941340 <col:31> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x1259412b0 <col:31> 'struct sock *' lvalue ParmVar 0x125928648 'sk' 'struct sock *'     |-DeclStmt 0x125941440 <line:8:2, col:18>     | `-VarDecl 0x1259413b8 <col:2, col:17> col:6 used dup_sack 'int' cinit     |   `-IntegerLiteral 0x125941420 <col:17> 'int' 0     |-IfStmt 0x125943de8 <line:10:2, line:25:2> has_else     | |-CallExpr 0x1259417e0 <line:10:6, col:54> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x125941538 <col:6> 'int ()' Function 0x125941480 'before' 'int ()'     | | |-RecoveryExpr 0x125941740 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1259417b8 <col:26, col:47> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x125941778 <col:26, col:44> 'int'     | |     |-ImplicitCastExpr 0x125941760 <col:26> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x125941650 <col:26> 'int ()' Function 0x125941598 'TCP_SKB_CB' 'int ()'     | |     `-ImplicitCastExpr 0x1259417a0 <col:37> 'const struct sk_buff *' <LValueToRValue>     | |       `-DeclRefExpr 0x125941670 <col:37> 'const struct sk_buff *' lvalue ParmVar 0x125940a28 'ack_skb' 'const struct sk_buff *'     | |-CompoundStmt 0x1259437c0 <col:57, line:14:2>     | | |-BinaryOperator 0x125941850 <line:11:3, col:14> 'int' '='     | | | |-DeclRefExpr 0x125941810 <col:3> 'int' lvalue Var 0x1259413b8 'dup_sack' 'int'     | | | `-IntegerLiteral 0x125941830 <col:14> 'int' 1     | | |-CallExpr 0x1259419a8 <line:12:3, col:20> 'int'     | | | |-ImplicitCastExpr 0x125941990 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x125941950 <col:3> 'int ()' Function 0x125941898 'tcp_dsack_seen' 'int ()'     | | | `-ImplicitCastExpr 0x1259419d0 <col:18> 'struct tcp_sock *' <LValueToRValue>     | | |   `-DeclRefExpr 0x125941970 <col:18> 'struct tcp_sock *' lvalue Var 0x1259410c8 'tp' 'struct tcp_sock *'     | | `-CallExpr 0x125943790 <line:13:3, col:56> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1259434e0 <col:3> 'int ()' Function 0x125943428 'NET_INC_STATS_BH' 'int ()'     | |   |-CallExpr 0x125943730 <col:20, col:31> 'int'     | |   | |-ImplicitCastExpr 0x125943718 <col:20> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x1259435e0 <col:20> 'int ()' Function 0x125943528 'sock_net' 'int ()'     | |   | `-ImplicitCastExpr 0x125943758 <col:29> 'struct sock *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x125943600 <col:29> 'struct sock *' lvalue ParmVar 0x125928648 'sk' 'struct sock *'     | |   `-RecoveryExpr 0x125943770 <col:34> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x125943dc8 <line:14:9, line:25:2>     |   |-BinaryOperator 0x125943840 <line:14:13, col:25> 'int' '>'     |   | |-ImplicitCastExpr 0x125943828 <col:13> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1259437e8 <col:13> 'int' lvalue ParmVar 0x125940c78 'num_sacks' 'int'     |   | `-IntegerLiteral 0x125943808 <col:25> 'int' 1     |   `-CompoundStmt 0x125943db0 <col:28, line:25:2>     |     `-IfStmt 0x125943d90 <line:18:3, line:24:3>     |       |-BinaryOperator 0x125943ba0 <line:18:7, line:19:39> 'int' contains-errors '&&'     |       | |-UnaryOperator 0x125943b00 <line:18:7, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     |       | | `-CallExpr 0x125943ad0 <col:8, col:34> '<dependent type>' contains-errors     |       | |   |-DeclRefExpr 0x125943940 <col:8> 'int ()' Function 0x125943888 'after' 'int ()'     |       | |   |-RecoveryExpr 0x125943a90 <col:14> '<dependent type>' contains-errors lvalue     |       | |   `-RecoveryExpr 0x125943ab0 <col:25> '<dependent type>' contains-errors lvalue     |       | `-UnaryOperator 0x125943b88 <line:19:7, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow     |       |   `-CallExpr 0x125943b58 <col:8, col:39> '<dependent type>' contains-errors     |       |     |-DeclRefExpr 0x1259439d8 <col:8> 'int ()' Function 0x125941480 'before' 'int ()'     |       |     |-RecoveryExpr 0x125943b18 <col:15> '<dependent type>' contains-errors lvalue     |       |     `-RecoveryExpr 0x125943b38 <col:28> '<dependent type>' contains-errors lvalue     |       `-CompoundStmt 0x125943d70 <col:42, line:24:3>     |         |-BinaryOperator 0x125943c00 <line:20:4, col:15> 'int' '='     |         | |-DeclRefExpr 0x125943bc0 <col:4> 'int' lvalue Var 0x1259413b8 'dup_sack' 'int'     |         | `-IntegerLiteral 0x125943be0 <col:15> 'int' 1     |         `-CallExpr 0x125943c78 <line:21:4, col:21> 'int'     |           |-ImplicitCastExpr 0x125943c60 <col:4> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x125943c20 <col:4> 'int ()' Function 0x125941898 'tcp_dsack_seen' 'int ()'     |           `-ImplicitCastExpr 0x125943ca0 <col:19> 'struct tcp_sock *' <LValueToRValue>     |             `-DeclRefExpr 0x125943c40 <col:19> 'struct tcp_sock *' lvalue Var 0x1259410c8 'tp' 'struct tcp_sock *'     |-IfStmt 0x125944090 <line:28:2, line:31:19>     | |-RecoveryExpr 0x125943ff8 <line:28:6, line:30:38> '_Bool' contains-errors     | `-UnaryOperator 0x125944078 <line:31:3, col:19> '<dependent type>' contains-errors postfix '--' cannot overflow     |   `-RecoveryExpr 0x125944050 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125944018 <col:3> 'struct tcp_sock *' lvalue Var 0x1259410c8 'tp' 'struct tcp_sock *'     `-ReturnStmt 0x1259440e8 <line:33:2, col:9>       `-ImplicitCastExpr 0x1259440d0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1259440b0 <col:9> 'int' lvalue Var 0x1259413b8 'dup_sack' 'int' ","19525":"`-FunctionDecl 0x14c80e128  line:1:1 invalid spnego_gss_wrap_size_limit 'int (int *, const int, int, int, int, int *)'   |-ParmVarDecl 0x14c80dd28 <line:2:2, col:13> col:13 invalid minor_status 'int *'   |-ParmVarDecl 0x14c80dda8 <line:3:2, col:21> col:21 invalid context_handle 'const int'   |-ParmVarDecl 0x14c80de28 <line:4:2, col:7> col:7 used conf_req_flag 'int'   |-ParmVarDecl 0x14c80dea8 <line:5:2, col:12> col:12 invalid qop_req 'int'   |-ParmVarDecl 0x14c80df28 <line:6:2, col:12> col:12 invalid req_output_size 'int'   |-ParmVarDecl 0x14c80dfa8 <line:7:2, col:13> col:13 invalid max_input_size 'int *'   `-CompoundStmt 0x14d0092a8 <line:8:1, line:17:1> ","19363":"`-FunctionDecl 0x1371243f8  col:16 implicit used strerror 'char *(int)' extern   |-ParmVarDecl 0x1371244f8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1371244a0 <<invalid sloc>> Implicit 901 ","19655":"`-FunctionDecl 0x12c9284c8  line:1:8 invalid gf_isom_mvc_config_new 'int (int *, int, int *, char *, char *, int *)'   |-ParmVarDecl 0x12c928128 <col:31, col:43> col:43 invalid the_file 'int *'   |-ParmVarDecl 0x12c9281a8 <col:53, col:57> col:57 invalid trackNumber 'int'   |-ParmVarDecl 0x12c928228 <col:70, col:84> col:84 invalid cfg 'int *'   |-ParmVarDecl 0x12c9282a8 <col:89, col:95> col:95 used URLname 'char *'   |-ParmVarDecl 0x12c928328 <col:104, col:110> col:110 used URNname 'char *'   |-ParmVarDecl 0x12c9283a8 <col:119, col:124> col:124 invalid outDescriptionIndex 'int *'   `-CompoundStmt 0x12d009ce0 <line:2:1, line:4:1>     `-ReturnStmt 0x12d009cd0 <line:3:2, col:109>       `-CallExpr 0x12d009c78 <col:9, col:109> '<dependent type>' contains-errors         |-DeclRefExpr 0x12c928700 <col:9> 'int ()' Function 0x12c928648 'gf_isom_svc_mvc_config_new' 'int ()'         |-RecoveryExpr 0x12c928720 <col:36> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12c928740 <col:46> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12c928760 <col:59> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12d009c58 <col:64> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x12c928798 <col:73> 'char *' lvalue ParmVar 0x12c9282a8 'URLname' 'char *'         |-DeclRefExpr 0x12c9287b8 <col:82> 'char *' lvalue ParmVar 0x12c928328 'URNname' 'char *'         `-RecoveryExpr 0x12c9287d8 <col:90> '<dependent type>' contains-errors lvalue ","20173":"`-FunctionDecl 0x159142918  col:7 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x159142a18 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1591429c0 <<invalid sloc>> Implicit 873 ","19754":"`-FunctionDecl 0x156922980  col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x156922a80 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x156922ae8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x156922b50 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x156922a28 <<invalid sloc>> Implicit 905   `-FormatAttr 0x156922bd0 <col:3> Implicit printf 3 4 ","20177":"`-FunctionDecl 0x150124c38  line:1:1 htmlParseFile 'int (const char *, const char *)'   |-ParmVarDecl 0x150124ad8 <col:15, col:27> col:27 used filename 'const char *'   |-ParmVarDecl 0x150124b58 <col:37, col:49> col:49 used encoding 'const char *'   `-CompoundStmt 0x150124f30 <col:59, line:3:1> ","19873":"`-FunctionDecl 0x11d90fd18  line:1:1 invalid rpl_dao_print 'int (int *, const char *, int)'   |-ParmVarDecl 0x11d90fb28 <col:15, col:35> col:35 invalid ndo 'int *'   |-ParmVarDecl 0x11d90fba8 <line:2:15, col:29> col:29 used bp 'const char *'   |-ParmVarDecl 0x11d90fc28 <col:33, col:39> col:39 referenced invalid length 'int'   `-CompoundStmt 0x11d92c900 <line:3:1, line:43:1>     |-DeclStmt 0x11d9100b0 <line:4:9, col:69>     | |-RecordDecl 0x11d90fdd8 <col:15, col:22> col:22 struct nd_rpl_dao     | `-VarDecl 0x11d90ff48 <col:9, col:67> col:34 used dao 'const struct nd_rpl_dao *' cinit     |   `-CStyleCastExpr 0x11d910070 <col:40, col:67> 'const struct nd_rpl_dao *' <BitCast>     |     `-ImplicitCastExpr 0x11d910058 <col:67> 'const char *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x11d90ffb0 <col:67> 'const char *' lvalue ParmVar 0x11d90fba8 'bp' 'const char *'     |-DeclStmt 0x11d9101e0 <line:5:9, col:38>     | `-VarDecl 0x11d9100e0 <col:9, col:33> col:21 used dagid_str 'const char *' cinit     |   `-ImplicitCastExpr 0x11d9101c8 <col:33> 'const char *' <NoOp>     |     `-ImplicitCastExpr 0x11d9101b0 <col:33> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x11d910190 <col:33> 'char[4]' lvalue \"STR\"     |-ImplicitCastExpr 0x11d92a8b0 <line:7:9, col:23> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x11d92a880 <col:9, col:23> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x11d92a360 <col:9> 'int ()' Function 0x11d92a2a8 'ND_TCHECK' 'int ()'     |   `-UnaryOperator 0x11d92a3b8 <col:19, col:20> 'const struct nd_rpl_dao' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x11d92a3a0 <col:20> 'const struct nd_rpl_dao *' <LValueToRValue>     |       `-DeclRefExpr 0x11d92a380 <col:20> 'const struct nd_rpl_dao *' lvalue Var 0x11d90ff48 'dao' 'const struct nd_rpl_dao *'     |-IfStmt 0x11d92a9c8 <line:8:9, line:9:15>     | |-BinaryOperator 0x11d92a940 <line:8:13, col:22> 'int' contains-errors '<'     | | |-RecoveryExpr 0x11d92a8c8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x11d92a920 <col:22> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x11d92a9b0 <line:9:10, col:15> 'tooshort' 0x11d92a960     |-CompoundAssignOperator 0x11d92aa70 <line:11:9, col:15> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x11d92a9e8 <col:9> 'const char *' lvalue ParmVar 0x11d90fba8 'bp' 'const char *'     | `-RecoveryExpr 0x11d92aa50 <col:15> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x11d92ab50 <line:12:9, col:19> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x11d92aac0 <col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11d92aaa0 <col:9> 'int' lvalue ParmVar 0x11d90fc28 'length' 'int'     | `-RecoveryExpr 0x11d92ab30 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d92bb98 <line:13:9, line:20:9>     | |-CallExpr 0x11d92ace0 <line:13:12, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11d92ac60 <col:12> 'int ()' Function 0x11d92aba8 'RPL_DAO_D' 'int ()'     | | `-RecoveryExpr 0x11d92acb8 <col:22, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d92ac80 <col:22> 'const struct nd_rpl_dao *' lvalue Var 0x11d90ff48 'dao' 'const struct nd_rpl_dao *'     | `-CompoundStmt 0x11d92bb60 <col:39, line:20:9>     |   |-CallExpr 0x11d92aed0 <line:14:17, col:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11d92ade8 <col:17> 'int ()' Function 0x11d92ad30 'ND_TCHECK2' 'int ()'     |   | |-RecoveryExpr 0x11d92ae40 <col:28, col:33> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x11d92ae08 <col:28> 'const struct nd_rpl_dao *' lvalue Var 0x11d90ff48 'dao' 'const struct nd_rpl_dao *'     |   | `-RecoveryExpr 0x11d92aeb0 <col:44> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x11d92afb0 <line:15:17, line:16:23>     |   | |-BinaryOperator 0x11d92af78 <line:15:21, col:30> 'int' contains-errors '<'     |   | | |-RecoveryExpr 0x11d92af00 <col:21> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x11d92af58 <col:30> '<dependent type>' contains-errors lvalue     |   | `-GotoStmt 0x11d92af98 <line:16:18, col:23> 'tooshort' 0x11d92a960     |   |-BinaryOperator 0x11d92b1a0 <line:17:17, col:64> 'const char *' contains-errors '='     |   | |-DeclRefExpr 0x11d92afd0 <col:17> 'const char *' lvalue Var 0x11d9100e0 'dagid_str' 'const char *'     |   | `-CallExpr 0x11d92b170 <col:29, col:64> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11d92b0d0 <col:29> 'int ()' Function 0x11d92b018 'ip6addr_string' 'int ()'     |   |   |-RecoveryExpr 0x11d92b0f0 <col:45> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x11d92b148 <col:50, col:55> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x11d92b110 <col:50> 'const struct nd_rpl_dao *' lvalue Var 0x11d90ff48 'dao' 'const struct nd_rpl_dao *'     |   |-CompoundAssignOperator 0x11d92ba50 <line:18:17, col:23> 'const char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x11d92b1c0 <col:17> 'const char *' lvalue ParmVar 0x11d90fba8 'bp' 'const char *'     |   | `-RecoveryExpr 0x11d92ba30 <col:23> '<dependent type>' contains-errors lvalue     |   `-CompoundAssignOperator 0x11d92bb30 <line:19:17, col:27> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x11d92baa0 <col:17> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x11d92ba80 <col:17> 'int' lvalue ParmVar 0x11d90fc28 'length' 'int'     |     `-RecoveryExpr 0x11d92bb10 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d92c690 <line:30:9, line:33:9>     | |-BinaryOperator 0x11d92c1d0 <line:30:12, col:29> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x11d92c168 <col:12, col:17> '<dependent type>' contains-errors lvalue ->ndo_vflag     | | | `-RecoveryExpr 0x11d92c148 <col:12> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11d92c1b0 <col:29> 'int' 1     | `-CompoundStmt 0x11d92c670 <col:32, line:33:9>     |   |-DeclStmt 0x11d92c4c0 <line:31:17, col:91>     |   | |-RecordDecl 0x11d92c1f0 <col:23, col:30> col:30 struct rpl_dio_genoption     |   | `-VarDecl 0x11d92c358 <col:17, col:89> col:49 used opt 'const struct rpl_dio_genoption *' cinit     |   |   `-CStyleCastExpr 0x11d92c480 <col:55, col:89> 'const struct rpl_dio_genoption *' <BitCast>     |   |     `-ImplicitCastExpr 0x11d92c468 <col:89> 'const char *' <LValueToRValue> part_of_explicit_cast     |   |       `-DeclRefExpr 0x11d92c3c0 <col:89> 'const char *' lvalue ParmVar 0x11d90fba8 'bp' 'const char *'     |   `-CallExpr 0x11d92c638 <line:32:17, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11d92c5b8 <col:17> 'int ()' Function 0x11d92c500 'rpl_dio_printopt' 'int ()'     |     |-RecoveryExpr 0x11d92c5d8 <col:34> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x11d92c5f8 <col:39> 'const struct rpl_dio_genoption *' lvalue Var 0x11d92c358 'opt' 'const struct rpl_dio_genoption *'     |     `-RecoveryExpr 0x11d92c618 <col:44> '<dependent type>' contains-errors lvalue     |-ReturnStmt 0x11d92c6b0 <line:34:2>     |-LabelStmt 0x11d92c7d8 <line:36:1, line:37:22> 'trunc'     | `-CallExpr 0x11d92c760 <col:2, col:22> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11d92c6c0 <col:2> 'int ()' Function 0x11d92bbe0 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x11d92c740 <col:11, col:21> 'char[4]' contains-errors     |     `-BinaryOperator 0x11d92c720 <col:12, col:16> 'char[4]' contains-errors ','     |       |-RecoveryExpr 0x11d92c6e0 <col:12> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x11d92c700 <col:16> 'char[4]' lvalue \"STR\"     |-ReturnStmt 0x11d92c7f8 <line:38:2>     |-LabelStmt 0x11d92c8d0 <line:40:1, line:41:22> 'tooshort'     | `-CallExpr 0x11d92c8a8 <col:2, col:22> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11d92c808 <col:2> 'int ()' Function 0x11d92bbe0 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x11d92c888 <col:11, col:21> 'char[4]' contains-errors     |     `-BinaryOperator 0x11d92c868 <col:12, col:16> 'char[4]' contains-errors ','     |       |-RecoveryExpr 0x11d92c828 <col:12> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x11d92c848 <col:16> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x11d92c8f0 <line:42:2> ","19472":"`-FunctionDecl 0x151928208  line:1:30 invalid ScaleQuantumToShort 'unsigned short (const int)' static inline   |-ParmVarDecl 0x1519280f0 <col:50, col:64> col:64 invalid quantum 'const int'   `-CompoundStmt 0x1519283c8 <line:2:1, line:12:1>     `-ReturnStmt 0x1519283b8 <line:4:3, col:42>       `-ParenExpr 0x151928398 <col:9, col:42> 'unsigned short' contains-errors         `-CStyleCastExpr 0x151928370 <col:10, col:41> 'unsigned short' contains-errors <Dependent>           `-ParenExpr 0x151928350 <col:27, col:41> '<dependent type>' contains-errors             `-BinaryOperator 0x1519282f8 <col:28, col:34> '<dependent type>' contains-errors '*'               |-IntegerLiteral 0x1519282b8 <col:28> 'unsigned long' 257               `-RecoveryExpr 0x1519282d8 <col:34> '<dependent type>' contains-errors lvalue ","19576":"`-FunctionDecl 0x15a141800  col:13 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x15a141900 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x15a141968 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x15a1418a8 <<invalid sloc>> Implicit 887 ","19877":"`-FunctionDecl 0x130928288  line:1:12 invalid bmp_getint16 'int (int *, int *)' static   |-ParmVarDecl 0x130928128 <col:25, col:39> col:39 invalid in 'int *'   |-ParmVarDecl 0x1309281a8 <col:43, col:57> col:57 invalid val 'int *'   `-CompoundStmt 0x130941f08 <line:2:1, line:12:1>     |-DeclStmt 0x1309283c0 <line:3:2, col:8>     | `-VarDecl 0x130928358 <col:2, col:6> col:6 used lo 'int'     |-DeclStmt 0x130928458 <line:4:2, col:8>     | `-VarDecl 0x1309283f0 <col:2, col:6> col:6 used hi 'int'     |-IfStmt 0x130941d00 <line:5:2, line:7:2>     | |-BinaryOperator 0x130941c80 <line:5:6, col:73> 'int' contains-errors '||'     | | |-BinaryOperator 0x130941c20 <col:6, col:36> 'int' contains-errors '=='     | | | |-ParenExpr 0x130928678 <col:6, col:31> 'int' contains-errors     | | | | `-BinaryOperator 0x130928658 <col:7, col:30> 'int' contains-errors '='     | | | |   |-DeclRefExpr 0x130928470 <col:7> 'int' lvalue Var 0x130928358 'lo' 'int'     | | | |   `-CallExpr 0x130928630 <col:12, col:30> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x1309285f0 <col:12> 'int ()' Function 0x130928538 'jas_stream_getc' 'int ()'     | | | |     `-RecoveryExpr 0x130928610 <col:28> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x130941c00 <col:36> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x130941c60 <col:43, col:73> 'int' contains-errors '=='     | |   |-ParenExpr 0x130928778 <col:43, col:68> 'int' contains-errors     | |   | `-BinaryOperator 0x130928758 <col:44, col:67> 'int' contains-errors '='     | |   |   |-DeclRefExpr 0x1309286d0 <col:44> 'int' lvalue Var 0x1309283f0 'hi' 'int'     | |   |   `-CallExpr 0x130928730 <col:49, col:67> '<dependent type>' contains-errors     | |   |     |-DeclRefExpr 0x1309286f0 <col:49> 'int ()' Function 0x130928538 'jas_stream_getc' 'int ()'     | |   |     `-RecoveryExpr 0x130928710 <col:65> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x130941c40 <col:73> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x130941ce8 <col:78, line:7:2>     |   `-ReturnStmt 0x130941cd8 <line:6:3, col:11>     |     `-UnaryOperator 0x130941cc0 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x130941ca0 <col:11> 'int' 1     |-IfStmt 0x130941eb8 <line:8:2, line:10:2>     | |-RecoveryExpr 0x130941d20 <line:8:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x130941ea0 <col:11, line:10:2>     |   `-BinaryOperator 0x130941e80 <line:9:3, col:22> '<dependent type>' contains-errors '='     |     |-UnaryOperator 0x130941d78 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x130941d60 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x130941d40 <col:4> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x130941e60 <col:10, col:22> 'int' '|'     |       |-ParenExpr 0x130941e08 <col:10, col:18> 'int'     |       | `-BinaryOperator 0x130941de8 <col:11, col:17> 'int' '<<'     |       |   |-ImplicitCastExpr 0x130941dd0 <col:11> 'int' <LValueToRValue>     |       |   | `-DeclRefExpr 0x130941d90 <col:11> 'int' lvalue Var 0x1309283f0 'hi' 'int'     |       |   `-IntegerLiteral 0x130941db0 <col:17> 'int' 8     |       `-ImplicitCastExpr 0x130941e48 <col:22> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x130941e28 <col:22> 'int' lvalue Var 0x130928358 'lo' 'int'     `-ReturnStmt 0x130941ef8 <line:11:2, col:9>       `-IntegerLiteral 0x130941ed8 <col:9> 'int' 0 ","19897":"`-FunctionDecl 0x12f922e88  line:1:1 invalid handle_activity 'int (int *, int *)'   |-ParmVarDecl 0x12f922d28 <col:17, col:30> col:30 invalid rx_message 'int *'   |-ParmVarDecl 0x12f922da8 <col:42, col:53> col:53 referenced invalid tx_message 'int *'   `-CompoundStmt 0x12f93d328 <line:2:1, line:12:1>     |-CallExpr 0x12f923150 <line:4:3, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f9230a0 <col:3> 'int ()' Function 0x12f922fe8 'NSR_GetActivityReport' 'int ()'     | `-UnaryOperator 0x12f923138 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12f923118 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f93c4d8 <line:5:3, col:57> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f923250 <col:3, col:29> '<dependent type>' contains-errors lvalue .online     | | `-CXXDependentScopeMemberExpr 0x12f923208 <col:3, col:20> '<dependent type>' contains-errors lvalue .activity     | |   `-CXXDependentScopeMemberExpr 0x12f9231c0 <col:3, col:15> '<dependent type>' contains-errors lvalue ->data     | |     `-RecoveryExpr 0x12f923198 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12f923178 <col:3> 'int *' lvalue ParmVar 0x12f922da8 'tx_message' 'int *'     | `-CallExpr 0x12f93c4b0 <col:38, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f923378 <col:38> 'int ()' Function 0x12f9232c0 'htonl' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12f93c468 <col:44, col:51> '<dependent type>' contains-errors lvalue .online     |     `-RecoveryExpr 0x12f93c448 <col:44> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f93c770 <line:6:3, col:59> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f93c5d0 <col:3, col:29> '<dependent type>' contains-errors lvalue .offline     | | `-CXXDependentScopeMemberExpr 0x12f93c588 <col:3, col:20> '<dependent type>' contains-errors lvalue .activity     | |   `-CXXDependentScopeMemberExpr 0x12f93c540 <col:3, col:15> '<dependent type>' contains-errors lvalue ->data     | |     `-RecoveryExpr 0x12f93c518 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12f93c4f8 <col:3> 'int *' lvalue ParmVar 0x12f922da8 'tx_message' 'int *'     | `-CallExpr 0x12f93c748 <col:39, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f93c618 <col:39> 'int ()' Function 0x12f9232c0 'htonl' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12f93c700 <col:45, col:52> '<dependent type>' contains-errors lvalue .offline     |     `-RecoveryExpr 0x12f93c6e0 <col:45> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f93ca08 <line:7:3, col:69> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f93c868 <col:3, col:29> '<dependent type>' contains-errors lvalue .burst_online     | | `-CXXDependentScopeMemberExpr 0x12f93c820 <col:3, col:20> '<dependent type>' contains-errors lvalue .activity     | |   `-CXXDependentScopeMemberExpr 0x12f93c7d8 <col:3, col:15> '<dependent type>' contains-errors lvalue ->data     | |     `-RecoveryExpr 0x12f93c7b0 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12f93c790 <col:3> 'int *' lvalue ParmVar 0x12f922da8 'tx_message' 'int *'     | `-CallExpr 0x12f93c9e0 <col:44, col:69> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f93c8b0 <col:44> 'int ()' Function 0x12f9232c0 'htonl' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12f93c998 <col:50, col:57> '<dependent type>' contains-errors lvalue .burst_online     |     `-RecoveryExpr 0x12f93c978 <col:50> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f93cca0 <line:8:3, col:71> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f93cb00 <col:3, col:29> '<dependent type>' contains-errors lvalue .burst_offline     | | `-CXXDependentScopeMemberExpr 0x12f93cab8 <col:3, col:20> '<dependent type>' contains-errors lvalue .activity     | |   `-CXXDependentScopeMemberExpr 0x12f93ca70 <col:3, col:15> '<dependent type>' contains-errors lvalue ->data     | |     `-RecoveryExpr 0x12f93ca48 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12f93ca28 <col:3> 'int *' lvalue ParmVar 0x12f922da8 'tx_message' 'int *'     | `-CallExpr 0x12f93cc78 <col:45, col:71> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f93cb48 <col:45> 'int ()' Function 0x12f9232c0 'htonl' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12f93cc30 <col:51, col:58> '<dependent type>' contains-errors lvalue .burst_offline     |     `-RecoveryExpr 0x12f93cc10 <col:51> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f93cf38 <line:9:3, col:65> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f93cd98 <col:3, col:29> '<dependent type>' contains-errors lvalue .unresolved     | | `-CXXDependentScopeMemberExpr 0x12f93cd50 <col:3, col:20> '<dependent type>' contains-errors lvalue .activity     | |   `-CXXDependentScopeMemberExpr 0x12f93cd08 <col:3, col:15> '<dependent type>' contains-errors lvalue ->data     | |     `-RecoveryExpr 0x12f93cce0 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12f93ccc0 <col:3> 'int *' lvalue ParmVar 0x12f922da8 'tx_message' 'int *'     | `-CallExpr 0x12f93cf10 <col:42, col:65> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f93cde0 <col:42> 'int ()' Function 0x12f9232c0 'htonl' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12f93cec8 <col:48, col:55> '<dependent type>' contains-errors lvalue .unresolved     |     `-RecoveryExpr 0x12f93cea8 <col:48> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f93d190 <line:10:3, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f93cfa0 <col:3, col:15> '<dependent type>' contains-errors lvalue ->status     | | `-RecoveryExpr 0x12f93cf78 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f93cf58 <col:3> 'int *' lvalue ParmVar 0x12f922da8 'tx_message' 'int *'     | `-CallExpr 0x12f93d168 <col:24, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f93d0c8 <col:24> 'int ()' Function 0x12f93d010 'htons' 'int ()'     |   `-RecoveryExpr 0x12f93d148 <col:30> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x12f93d308 <line:11:3, col:41> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x12f93d1f8 <col:3, col:15> '<dependent type>' contains-errors lvalue ->reply       | `-RecoveryExpr 0x12f93d1d0 <col:3> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x12f93d1b0 <col:3> 'int *' lvalue ParmVar 0x12f922da8 'tx_message' 'int *'       `-CallExpr 0x12f93d2e0 <col:23, col:41> '<dependent type>' contains-errors         |-DeclRefExpr 0x12f93d240 <col:23> 'int ()' Function 0x12f93d010 'htons' 'int ()'         `-RecoveryExpr 0x12f93d2c0 <col:29> '<dependent type>' contains-errors lvalue ","19419":"`-FunctionDecl 0x121140b48  line:1:12 perf_trace_event_init 'int (struct ftrace_event_call *, struct perf_event *)' static   |-ParmVarDecl 0x121128648 <col:34, col:60> col:60 used tp_event 'struct ftrace_event_call *'   |-ParmVarDecl 0x121140a28 <line:2:6, col:25> col:25 used p_event 'struct perf_event *'   `-CompoundStmt 0x1211416b0 <line:3:1, line:21:1>     |-DeclStmt 0x121140cc8 <line:4:2, col:9>     | `-VarDecl 0x121140c60 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x121140f38 <line:6:2, col:47> 'int' '='     | |-DeclRefExpr 0x121140ce0 <col:2> 'int' lvalue Var 0x121140c60 'ret' 'int'     | `-CallExpr 0x121140ed8 <col:8, col:47> 'int'     |   |-ImplicitCastExpr 0x121140ec0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x121140e30 <col:8> 'int ()' Function 0x121140d78 'perf_trace_event_perm' 'int ()'     |   |-ImplicitCastExpr 0x121140f08 <col:30> 'struct ftrace_event_call *' <LValueToRValue>     |   | `-DeclRefExpr 0x121140e50 <col:30> 'struct ftrace_event_call *' lvalue ParmVar 0x121128648 'tp_event' 'struct ftrace_event_call *'     |   `-ImplicitCastExpr 0x121140f20 <col:40> 'struct perf_event *' <LValueToRValue>     |     `-DeclRefExpr 0x121140e70 <col:40> 'struct perf_event *' lvalue ParmVar 0x121140a28 'p_event' 'struct perf_event *'     |-IfStmt 0x121140fd8 <line:7:2, line:8:10>     | |-ImplicitCastExpr 0x121140f78 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x121140f58 <col:6> 'int' lvalue Var 0x121140c60 'ret' 'int'     | `-ReturnStmt 0x121140fc8 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x121140fb0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x121140f90 <col:10> 'int' lvalue Var 0x121140c60 'ret' 'int'     |-BinaryOperator 0x1211411d0 <line:10:2, col:46> 'int' '='     | |-DeclRefExpr 0x121140ff8 <col:2> 'int' lvalue Var 0x121140c60 'ret' 'int'     | `-CallExpr 0x121141170 <col:8, col:46> 'int'     |   |-ImplicitCastExpr 0x121141158 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1211410f8 <col:8> 'int ()' Function 0x121141040 'perf_trace_event_reg' 'int ()'     |   |-ImplicitCastExpr 0x1211411a0 <col:29> 'struct ftrace_event_call *' <LValueToRValue>     |   | `-DeclRefExpr 0x121141118 <col:29> 'struct ftrace_event_call *' lvalue ParmVar 0x121128648 'tp_event' 'struct ftrace_event_call *'     |   `-ImplicitCastExpr 0x1211411b8 <col:39> 'struct perf_event *' <LValueToRValue>     |     `-DeclRefExpr 0x121141138 <col:39> 'struct perf_event *' lvalue ParmVar 0x121140a28 'p_event' 'struct perf_event *'     |-IfStmt 0x121141270 <line:11:2, line:12:10>     | |-ImplicitCastExpr 0x121141210 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1211411f0 <col:6> 'int' lvalue Var 0x121140c60 'ret' 'int'     | `-ReturnStmt 0x121141260 <line:12:3, col:10>     |   `-ImplicitCastExpr 0x121141248 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x121141228 <col:10> 'int' lvalue Var 0x121140c60 'ret' 'int'     |-BinaryOperator 0x121141428 <line:14:2, col:37> 'int' '='     | |-DeclRefExpr 0x121141290 <col:2> 'int' lvalue Var 0x121140c60 'ret' 'int'     | `-CallExpr 0x1211413e8 <col:8, col:37> 'int'     |   |-ImplicitCastExpr 0x1211413d0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x121141390 <col:8> 'int ()' Function 0x1211412d8 'perf_trace_event_open' 'int ()'     |   `-ImplicitCastExpr 0x121141410 <col:30> 'struct perf_event *' <LValueToRValue>     |     `-DeclRefExpr 0x1211413b0 <col:30> 'struct perf_event *' lvalue ParmVar 0x121140a28 'p_event' 'struct perf_event *'     |-IfStmt 0x121141660 <line:15:2, line:18:2>     | |-ImplicitCastExpr 0x121141468 <line:15:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x121141448 <col:6> 'int' lvalue Var 0x121140c60 'ret' 'int'     | `-CompoundStmt 0x121141640 <col:11, line:18:2>     |   |-CallExpr 0x1211415b8 <line:16:3, col:33> 'int'     |   | |-ImplicitCastExpr 0x1211415a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x121141560 <col:3> 'int ()' Function 0x1211414a8 'perf_trace_event_unreg' 'int ()'     |   | `-ImplicitCastExpr 0x1211415e0 <col:26> 'struct perf_event *' <LValueToRValue>     |   |   `-DeclRefExpr 0x121141580 <col:26> 'struct perf_event *' lvalue ParmVar 0x121140a28 'p_event' 'struct perf_event *'     |   `-ReturnStmt 0x121141630 <line:17:3, col:10>     |     `-ImplicitCastExpr 0x121141618 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1211415f8 <col:10> 'int' lvalue Var 0x121140c60 'ret' 'int'     `-ReturnStmt 0x1211416a0 <line:20:2, col:9>       `-IntegerLiteral 0x121141680 <col:9> 'int' 0 ","19296":"`-FunctionDecl 0x13b80de88  line:1:5 invalid jas_matrix_cmp 'int (int *, int *)'   |-ParmVarDecl 0x13b80dd28 <col:20, col:34> col:34 invalid mat0 'int *'   |-ParmVarDecl 0x13b80dda8 <col:40, col:54> col:54 invalid mat1 'int *'   `-CompoundStmt 0x13c809178 <line:2:1, line:18:1>     |-DeclStmt 0x13b80dfc0 <line:3:2, col:7>     | `-VarDecl 0x13b80df58 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x13b80e058 <line:4:2, col:7>     | `-VarDecl 0x13b80dff0 <col:2, col:6> col:6 used j 'int'     |-IfStmt 0x13b80e2b8 <line:6:2, line:9:2>     | |-BinaryOperator 0x13b80e250 <line:6:6, line:7:10> 'int' contains-errors '||'     | | |-BinaryOperator 0x13b80e140 <line:6:6, col:30> 'int' contains-errors '!='     | | | |-CXXDependentScopeMemberExpr 0x13b80e090 <col:6, col:12> '<dependent type>' contains-errors lvalue ->numrows_     | | | | `-RecoveryExpr 0x13b80e070 <col:6> '<dependent type>' contains-errors lvalue     | | | `-CXXDependentScopeMemberExpr 0x13b80e0f8 <col:24, col:30> '<dependent type>' contains-errors lvalue ->numrows_     | | |   `-RecoveryExpr 0x13b80e0d8 <col:24> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13b80e230 <col:42, line:7:10> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x13b80e180 <line:6:42, col:48> '<dependent type>' contains-errors lvalue ->numcols_     | |   | `-RecoveryExpr 0x13b80e160 <col:42> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x13b80e1e8 <line:7:4, col:10> '<dependent type>' contains-errors lvalue ->numcols_     | |     `-RecoveryExpr 0x13b80e1c8 <col:4> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b80e2a0 <col:20, line:9:2>     |   `-ReturnStmt 0x13b80e290 <line:8:3, col:10>     |     `-IntegerLiteral 0x13b80e270 <col:10> 'int' 1     |-ForStmt 0x13c809110 <line:10:2, line:16:2>     | |-BinaryOperator 0x13b80e318 <line:10:7, col:11> 'int' '='     | | |-DeclRefExpr 0x13b80e2d8 <col:7> 'int' lvalue Var 0x13b80df58 'i' 'int'     | | `-IntegerLiteral 0x13b80e2f8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x13b80e3c0 <col:14, col:24> 'int' contains-errors '<'     | | |-DeclRefExpr 0x13b80e338 <col:14> 'int' lvalue Var 0x13b80df58 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x13b80e378 <col:18, col:24> '<dependent type>' contains-errors lvalue ->numrows_     | |   `-RecoveryExpr 0x13b80e358 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x13c808c00 <col:34, col:35> 'int' postfix '++'     | | `-DeclRefExpr 0x13b80e3e0 <col:34> 'int' lvalue Var 0x13b80df58 'i' 'int'     | `-CompoundStmt 0x13c8090f8 <col:39, line:16:2>     |   `-ForStmt 0x13c8090c0 <line:11:3, line:15:3>     |     |-BinaryOperator 0x13c808c58 <line:11:8, col:12> 'int' '='     |     | |-DeclRefExpr 0x13c808c18 <col:8> 'int' lvalue Var 0x13b80dff0 'j' 'int'     |     | `-IntegerLiteral 0x13c808c38 <col:12> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13c808d00 <col:15, col:25> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x13c808c78 <col:15> 'int' lvalue Var 0x13b80dff0 'j' 'int'     |     | `-CXXDependentScopeMemberExpr 0x13c808cb8 <col:19, col:25> '<dependent type>' contains-errors lvalue ->numcols_     |     |   `-RecoveryExpr 0x13c808c98 <col:19> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x13c808d40 <col:35, col:36> 'int' postfix '++'     |     | `-DeclRefExpr 0x13c808d20 <col:35> 'int' lvalue Var 0x13b80dff0 'j' 'int'     |     `-CompoundStmt 0x13c8090a8 <col:40, line:15:3>     |       `-IfStmt 0x13c809088 <line:12:4, line:14:4>     |         |-BinaryOperator 0x13c809020 <line:12:8, col:63> 'int' contains-errors '!='     |         | |-CallExpr 0x13c808f30 <col:8, col:33> '<dependent type>' contains-errors     |         | | |-DeclRefExpr 0x13c808eb0 <col:8> 'int ()' Function 0x13c808df8 'jas_matrix_get' 'int ()'     |         | | |-RecoveryExpr 0x13c808ed0 <col:23> '<dependent type>' contains-errors lvalue     |         | | |-DeclRefExpr 0x13c808ef0 <col:29> 'int' lvalue Var 0x13b80df58 'i' 'int'     |         | | `-DeclRefExpr 0x13c808f10 <col:32> 'int' lvalue Var 0x13b80dff0 'j' 'int'     |         | `-CallExpr 0x13c808fe8 <col:38, col:63> '<dependent type>' contains-errors     |         |   |-DeclRefExpr 0x13c808f68 <col:38> 'int ()' Function 0x13c808df8 'jas_matrix_get' 'int ()'     |         |   |-RecoveryExpr 0x13c808f88 <col:53> '<dependent type>' contains-errors lvalue     |         |   |-DeclRefExpr 0x13c808fa8 <col:59> 'int' lvalue Var 0x13b80df58 'i' 'int'     |         |   `-DeclRefExpr 0x13c808fc8 <col:62> 'int' lvalue Var 0x13b80dff0 'j' 'int'     |         `-CompoundStmt 0x13c809070 <col:66, line:14:4>     |           `-ReturnStmt 0x13c809060 <line:13:5, col:12>     |             `-IntegerLiteral 0x13c809040 <col:12> 'int' 1     `-ReturnStmt 0x13c809168 <line:17:2, col:9>       `-IntegerLiteral 0x13c809148 <col:9> 'int' 0 ","20168":"`-FunctionDecl 0x14280dec0  line:1:6 referenced invalid AveragePool 'void (const float *, const int)'   |-ParmVarDecl 0x14280dd08 <col:18, col:31> col:31 used input_data 'const float *'   |-ParmVarDecl 0x14280dda0 <col:43, <invalid sloc>> col:53 invalid 'const int'   `-CompoundStmt 0x142827d40 <line:4:46, line:11:1>     |-DeclStmt 0x14280e090 <line:5:3, col:53>     | |-VarDecl 0x14280df90 <col:3, col:9> col:9 used output_activation_min 'float'     | `-VarDecl 0x14280e010 <col:3, col:32> col:32 used output_activation_max 'float'     |-CallExpr 0x14280e338 <line:6:3, col:73> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14280e200 <col:3> 'int ()' Function 0x14280e148 'GetActivationMinMax' 'int ()'     | |-RecoveryExpr 0x14280e318 <col:23> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14280e290 <col:27, col:28> 'float *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x14280e238 <col:28> 'float' lvalue Var 0x14280df90 'output_activation_min' 'float'     | `-UnaryOperator 0x14280e2c8 <col:51, col:52> 'float *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x14280e2a8 <col:52> 'float' lvalue Var 0x14280e010 'output_activation_max' 'float'     `-CallExpr 0x142827cc0 <line:8:3, line:10:62> '<dependent type>' contains-errors       |-RecoveryExpr 0x14280e390 <line:8:3> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14280e370 <col:3> 'void (const float *, const int)' Function 0x14280dec0 'AveragePool' 'void (const float *, const int)'       |-DeclRefExpr 0x14280e3b8 <col:15> 'const float *' lvalue ParmVar 0x14280dd08 'input_data' 'const float *'       |-RecoveryExpr 0x142827ba0 <col:27> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x142827bc0 <col:39> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x142827be0 <col:53> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x142827c00 <col:68> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x142827c20 <line:9:15> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x142827c40 <col:27> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x142827c60 <col:35> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x142827a90 <col:44> 'float' lvalue Var 0x14280df90 'output_activation_min' 'float'       |-DeclRefExpr 0x142827ab0 <line:10:15> 'float' lvalue Var 0x14280e010 'output_activation_max' 'float'       |-RecoveryExpr 0x142827c80 <col:38> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x142827ca0 <col:51> '<dependent type>' contains-errors lvalue ","19443":"`-FunctionDecl 0x149142858  col:3 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x149142958 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1491429c0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x149142900 <<invalid sloc>> Implicit 906   `-FormatAttr 0x149142a38 <col:3> Implicit printf 2 3 ","19756":"`-FunctionDecl 0x138928758  line:1:5 btrfs_resume_balance_async 'int (struct btrfs_fs_info *)'   |-ParmVarDecl 0x138928648 <col:32, col:54> col:54 used fs_info 'struct btrfs_fs_info *'   `-CompoundStmt 0x138942c50 <line:2:1, line:24:1>     |-DeclStmt 0x138940c38 <line:3:2, col:25>     | |-RecordDecl 0x138940a50 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x138940bb8 <col:2, col:22> col:22 used tsk 'struct task_struct *'     |-CallExpr 0x138940e18 <line:5:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138940d80 <col:2> 'int ()' Function 0x138940cc8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x138940e00 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138940dd8 <col:14, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138940da0 <col:14> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     |-IfStmt 0x1389410c0 <line:6:2, line:9:2>     | |-UnaryOperator 0x138940eb8 <line:6:6, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138940ea0 <col:7, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x138940e78 <col:7, col:16> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x138940e40 <col:7> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     | `-CompoundStmt 0x1389410a0 <col:29, line:9:2>     |   |-CallExpr 0x138941048 <line:7:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x138940fb0 <col:3> 'int ()' Function 0x138940ef8 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x138941030 <col:16, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x138941008 <col:17, col:26> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x138940fd0 <col:17> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     |   `-ReturnStmt 0x138941090 <line:8:3, col:10>     |     `-IntegerLiteral 0x138941070 <col:10> 'int' 0     |-CallExpr 0x138941178 <line:10:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1389410e0 <col:2> 'int ()' Function 0x138940ef8 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x138941160 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138941138 <col:16, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138941100 <col:16> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     |-IfStmt 0x1389415d8 <line:12:2, line:15:2>     | |-CallExpr 0x138941328 <line:12:6, col:42> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x138941280 <col:6> 'int ()' Function 0x1389411c8 'btrfs_test_opt' 'int ()'     | | |-DeclRefExpr 0x1389412a0 <col:21> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     | | `-RecoveryExpr 0x138941308 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1389415b8 <col:45, line:15:2>     |   |-CallExpr 0x138941528 <line:13:3, col:28> 'int'     |   | |-ImplicitCastExpr 0x138941510 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x138941438 <col:3> 'int ()' Function 0x138941380 'btrfs_info' 'int ()'     |   | |-ImplicitCastExpr 0x138941558 <col:14> 'struct btrfs_fs_info *' <LValueToRValue>     |   | | `-DeclRefExpr 0x138941458 <col:14> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     |   | `-ImplicitCastExpr 0x138941570 <col:23> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x1389414c0 <col:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1389415a8 <line:14:3, col:10>     |     `-IntegerLiteral 0x138941588 <col:10> 'int' 0     |-CallExpr 0x138941770 <line:18:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1389416d8 <col:2> 'int ()' Function 0x138941620 'spin_lock' 'int ()'     | `-UnaryOperator 0x138941758 <col:12, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138941730 <col:13, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1389416f8 <col:13> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     |-CompoundAssignOperator 0x1389418a8 <line:19:2, col:33> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x1389417f8 <col:2, col:24> '<dependent type>' contains-errors lvalue ->flags     | | `-RecoveryExpr 0x1389417d0 <col:2, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x138941798 <col:2> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     | `-RecoveryExpr 0x138941888 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138942858 <line:20:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1389419b8 <col:2> 'int ()' Function 0x138941900 'spin_unlock' 'int ()'     | `-UnaryOperator 0x138942840 <col:14, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138942818 <col:15, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1389419d8 <col:15> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     |-BinaryOperator 0x138942aa8 <line:22:2, col:51> 'struct task_struct *' contains-errors '='     | |-DeclRefExpr 0x138942880 <col:2> 'struct task_struct *' lvalue Var 0x138940bb8 'tsk' 'struct task_struct *'     | `-CallExpr 0x138942a70 <col:8, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x138942980 <col:8> 'int ()' Function 0x1389428c8 'kthread_run' 'int ()'     |   |-RecoveryExpr 0x138942a50 <col:20> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x1389429b8 <col:37> 'struct btrfs_fs_info *' lvalue ParmVar 0x138928648 'fs_info' 'struct btrfs_fs_info *'     |   `-StringLiteral 0x1389429d8 <col:46> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x138942c40 <line:23:2, col:28>       `-CallExpr 0x138942c00 <col:9, col:28> 'int'         |-ImplicitCastExpr 0x138942be8 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x138942ba8 <col:9> 'int ()' Function 0x138942af0 'PTR_ERR_OR_ZERO' 'int ()'         `-ImplicitCastExpr 0x138942c28 <col:25> 'struct task_struct *' <LValueToRValue>           `-DeclRefExpr 0x138942bc8 <col:25> 'struct task_struct *' lvalue Var 0x138940bb8 'tsk' 'struct task_struct *' ","19571":"`-FunctionDecl 0x12d928288  line:1:13 invalid rdp_print_sound_capability_set 'int (int *, int)' static   |-ParmVarDecl 0x12d928128 <col:44, col:53> col:53 invalid s 'int *'   |-ParmVarDecl 0x12d9281a8 <col:56, col:63> col:63 invalid length 'int'   `-CompoundStmt 0x12e0095e0 <line:2:1, line:15:1>     |-CallExpr 0x12d9285b8 <line:5:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d9284a0 <col:2> 'int ()' Function 0x12d9283e8 'WLog_INFO' 'int ()'     | |-RecoveryExpr 0x12d928598 <col:12> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12d928520 <col:17> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x12d928540 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d928698 <line:7:2, line:8:10>     | |-BinaryOperator 0x12d928630 <line:7:6, col:15> 'int' contains-errors '<'     | | |-RecoveryExpr 0x12d9285f0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12d928610 <col:15> 'int' 8     | `-ReturnStmt 0x12d928688 <line:8:3, col:10>     |   `-RecoveryExpr 0x12d928668 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e009250 <line:10:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d928798 <col:2> 'int ()' Function 0x12d9286e0 'Stream_Read_UINT16' 'int ()'     | |-RecoveryExpr 0x12d9287b8 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12e009230 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e009328 <line:11:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e009280 <col:2> 'int ()' Function 0x12d9286e0 'Stream_Read_UINT16' 'int ()'     | |-RecoveryExpr 0x12e0092a0 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12e009308 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e009440 <line:12:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e009358 <col:2> 'int ()' Function 0x12d9283e8 'WLog_INFO' 'int ()'     | |-RecoveryExpr 0x12e009400 <col:12> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12e009390 <col:17> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x12e009420 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e009560 <line:13:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e009478 <col:2> 'int ()' Function 0x12d9283e8 'WLog_INFO' 'int ()'     | |-RecoveryExpr 0x12e009520 <col:12> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12e0094b0 <col:17> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x12e009540 <col:24> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e0095d0 <line:14:2, col:9>       `-RecoveryExpr 0x12e0095b0 <col:9> '<dependent type>' contains-errors lvalue ","19259":"`-FunctionDecl 0x131128358  line:1:6 uv__idna_toascii 'long (const char *, const char *, char *, char *)'   |-ParmVarDecl 0x1311280d8 <col:23, col:35> col:35 used s 'const char *'   |-ParmVarDecl 0x131128158 <col:38, col:50> col:50 used se 'const char *'   |-ParmVarDecl 0x1311281d8 <col:54, col:60> col:60 used d 'char *'   |-ParmVarDecl 0x131128258 <col:63, col:69> col:69 used de 'char *'   `-CompoundStmt 0x131142a30 <col:73, line:42:1>     |-DeclStmt 0x1311284e8 <line:2:3, col:17>     | `-VarDecl 0x131128480 <col:3, col:15> col:15 used si 'const char *'     |-DeclStmt 0x131128580 <line:3:3, col:17>     | `-VarDecl 0x131128518 <col:3, col:15> col:15 used st 'const char *'     |-DeclStmt 0x131128618 <line:4:3, col:13>     | `-VarDecl 0x1311285b0 <col:3, col:12> col:12 used c 'unsigned int'     |-DeclStmt 0x1311286b0 <line:5:3, col:11>     | `-VarDecl 0x131128648 <col:3, col:9> col:9 used ds 'char *'     |-DeclStmt 0x131128748 <line:6:3, col:9>     | `-VarDecl 0x1311286e0 <col:3, col:7> col:7 used rc 'int'     |-BinaryOperator 0x1311287b8 <line:8:3, col:8> 'char *' '='     | |-DeclRefExpr 0x131128760 <col:3> 'char *' lvalue Var 0x131128648 'ds' 'char *'     | `-ImplicitCastExpr 0x1311287a0 <col:8> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x131128780 <col:8> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |-ForStmt 0x1311416a0 <line:10:3, line:29:3>     | |-BinaryOperator 0x131140a38 <line:10:8, col:13> 'const char *' '='     | | |-DeclRefExpr 0x1311287d8 <col:8> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     | | `-ImplicitCastExpr 0x131140a20 <col:13> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x131140a00 <col:13> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     | |-<<<NULL>>>     | |-BinaryOperator 0x131140ac8 <col:16, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x131140a98 <col:16> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x131140a58 <col:16> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     | | `-ImplicitCastExpr 0x131140ab0 <col:21> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x131140a78 <col:21> 'const char *' lvalue ParmVar 0x131128158 'se' 'const char *'     | |-<<<NULL>>>     | `-CompoundStmt 0x131141658 <col:27, line:29:3>     |   |-BinaryOperator 0x131140b40 <line:11:5, col:10> 'const char *' '='     |   | |-DeclRefExpr 0x131140ae8 <col:5> 'const char *' lvalue Var 0x131128518 'st' 'const char *'     |   | `-ImplicitCastExpr 0x131140b28 <col:10> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x131140b08 <col:10> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     |   |-BinaryOperator 0x131140e08 <line:12:5, col:33> 'unsigned int' '='     |   | |-DeclRefExpr 0x131140b60 <col:5> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   | `-ImplicitCastExpr 0x131140df0 <col:9, col:33> 'unsigned int' <IntegralCast>     |   |   `-CallExpr 0x131140da8 <col:9, col:33> 'int'     |   |     |-ImplicitCastExpr 0x131140d90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x131140cb0 <col:9> 'int ()' Function 0x131140bf8 'uv__utf8_decode1' 'int ()'     |   |     |-UnaryOperator 0x131140d20 <col:26, col:27> 'const char **' prefix '&' cannot overflow     |   |     | `-DeclRefExpr 0x131140cd0 <col:27> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     |   |     `-ImplicitCastExpr 0x131140dd8 <col:31> 'const char *' <LValueToRValue>     |   |       `-DeclRefExpr 0x131140d38 <col:31> 'const char *' lvalue ParmVar 0x131128158 'se' 'const char *'     |   |-IfStmt 0x1311410c8 <line:14:5, line:18:13>     |   | |-BinaryOperator 0x131140e90 <line:14:9, col:14> 'int' '!='     |   | | |-ImplicitCastExpr 0x131140e60 <col:9> 'unsigned int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x131140e28 <col:9> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   | | `-ImplicitCastExpr 0x131140e78 <col:14> 'unsigned int' <IntegralCast>     |   | |   `-CharacterLiteral 0x131140e48 <col:14> 'int' 46     |   | `-IfStmt 0x1311410a8 <line:15:7, line:18:13>     |   |   |-BinaryOperator 0x131140f20 <line:15:11, col:16> 'int' '!='     |   |   | |-ImplicitCastExpr 0x131140ef0 <col:11> 'unsigned int' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x131140eb0 <col:11> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   |   | `-ImplicitCastExpr 0x131140f08 <col:16> 'unsigned int' <IntegralCast>     |   |   |   `-IntegerLiteral 0x131140ed0 <col:16> 'int' 12290     |   |   `-IfStmt 0x131141088 <line:16:9, line:18:13>     |   |     |-BinaryOperator 0x131140fb0 <line:16:13, col:18> 'int' '!='     |   |     | |-ImplicitCastExpr 0x131140f80 <col:13> 'unsigned int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x131140f40 <col:13> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   |     | `-ImplicitCastExpr 0x131140f98 <col:18> 'unsigned int' <IntegralCast>     |   |     |   `-IntegerLiteral 0x131140f60 <col:18> 'int' 65294     |   |     `-IfStmt 0x131141068 <line:17:11, line:18:13>     |   |       |-BinaryOperator 0x131141040 <line:17:15, col:20> 'int' '!='     |   |       | |-ImplicitCastExpr 0x131141010 <col:15> 'unsigned int' <LValueToRValue>     |   |       | | `-DeclRefExpr 0x131140fd0 <col:15> 'unsigned int' lvalue Var 0x1311285b0 'c' 'unsigned int'     |   |       | `-ImplicitCastExpr 0x131141028 <col:20> 'unsigned int' <IntegralCast>     |   |       |   `-IntegerLiteral 0x131140ff0 <col:20> 'int' 65377     |   |       `-ContinueStmt 0x131141060 <line:18:13>     |   |-BinaryOperator 0x131141378 <line:20:5, col:46> 'int' '='     |   | |-DeclRefExpr 0x1311410e8 <col:5> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |   | `-CallExpr 0x1311412f0 <col:10, col:46> 'int'     |   |   |-ImplicitCastExpr 0x1311412d8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1311411e8 <col:10> 'int ()' Function 0x131141130 'uv__idna_toascii_label' 'int ()'     |   |   |-ImplicitCastExpr 0x131141330 <col:33> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x131141208 <col:33> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     |   |   |-ImplicitCastExpr 0x131141348 <col:36> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x131141228 <col:36> 'const char *' lvalue Var 0x131128518 'st' 'const char *'     |   |   |-UnaryOperator 0x1311412a0 <col:40, col:41> 'char **' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x131141248 <col:41> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   |   `-ImplicitCastExpr 0x131141360 <col:44> 'char *' <LValueToRValue>     |   |     `-DeclRefExpr 0x1311412b8 <col:44> 'char *' lvalue ParmVar 0x131128258 'de' 'char *'     |   |-IfStmt 0x131141470 <line:22:5, line:23:14>     |   | |-BinaryOperator 0x1311413f0 <line:22:9, col:14> 'int' '<'     |   | | |-ImplicitCastExpr 0x1311413d8 <col:9> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x131141398 <col:9> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |   | | `-IntegerLiteral 0x1311413b8 <col:14> 'int' 0     |   | `-ReturnStmt 0x131141460 <line:23:7, col:14>     |   |   `-ImplicitCastExpr 0x131141448 <col:14> 'long' <IntegralCast>     |   |     `-ImplicitCastExpr 0x131141430 <col:14> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x131141410 <col:14> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |   |-IfStmt 0x1311415c0 <line:25:5, line:26:14>     |   | |-BinaryOperator 0x131141500 <line:25:9, col:13> 'int' '<'     |   | | |-ImplicitCastExpr 0x1311414d0 <col:9> 'char *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x131141490 <col:9> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   | | `-ImplicitCastExpr 0x1311414e8 <col:13> 'char *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1311414b0 <col:13> 'char *' lvalue ParmVar 0x131128258 'de' 'char *'     |   | `-BinaryOperator 0x1311415a0 <line:26:7, col:14> 'char' '='     |   |   |-UnaryOperator 0x131141558 <col:7, col:9> 'char' lvalue prefix '*' cannot overflow     |   |   | `-UnaryOperator 0x131141540 <col:8, col:9> 'char *' postfix '++'     |   |   |   `-DeclRefExpr 0x131141520 <col:8> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   |   `-ImplicitCastExpr 0x131141588 <col:14> 'char' <IntegralCast>     |   |     `-CharacterLiteral 0x131141570 <col:14> 'int' 46     |   `-BinaryOperator 0x131141638 <line:28:5, col:9> 'const char *' '='     |     |-DeclRefExpr 0x1311415e0 <col:5> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     |     `-ImplicitCastExpr 0x131141620 <col:9> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x131141600 <col:9> 'const char *' lvalue Var 0x131128480 'si' 'const char *'     |-IfStmt 0x131142820 <line:31:3, line:36:3>     | |-BinaryOperator 0x131141748 <line:31:7, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x131141718 <col:7> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x1311416d8 <col:7> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     | | `-ImplicitCastExpr 0x131141730 <col:11> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x1311416f8 <col:11> 'const char *' lvalue ParmVar 0x131128158 'se' 'const char *'     | `-CompoundStmt 0x131142800 <col:15, line:36:3>     |   |-BinaryOperator 0x1311418e0 <line:32:5, col:46> 'int' '='     |   | |-DeclRefExpr 0x131141768 <col:5> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |   | `-CallExpr 0x131141858 <col:10, col:46> 'int'     |   |   |-ImplicitCastExpr 0x131141840 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x131141788 <col:10> 'int ()' Function 0x131141130 'uv__idna_toascii_label' 'int ()'     |   |   |-ImplicitCastExpr 0x131141898 <col:33> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1311417a8 <col:33> 'const char *' lvalue ParmVar 0x1311280d8 's' 'const char *'     |   |   |-ImplicitCastExpr 0x1311418b0 <col:36> 'const char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1311417c8 <col:36> 'const char *' lvalue ParmVar 0x131128158 'se' 'const char *'     |   |   |-UnaryOperator 0x131141808 <col:40, col:41> 'char **' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x1311417e8 <col:41> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   |   `-ImplicitCastExpr 0x1311418c8 <col:44> 'char *' <LValueToRValue>     |   |     `-DeclRefExpr 0x131141820 <col:44> 'char *' lvalue ParmVar 0x131128258 'de' 'char *'     |   `-IfStmt 0x1311419d8 <line:34:5, line:35:14>     |     |-BinaryOperator 0x131141958 <line:34:9, col:14> 'int' '<'     |     | |-ImplicitCastExpr 0x131141940 <col:9> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x131141900 <col:9> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |     | `-IntegerLiteral 0x131141920 <col:14> 'int' 0     |     `-ReturnStmt 0x1311419c8 <line:35:7, col:14>     |       `-ImplicitCastExpr 0x1311419b0 <col:14> 'long' <IntegralCast>     |         `-ImplicitCastExpr 0x131141998 <col:14> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x131141978 <col:14> 'int' lvalue Var 0x1311286e0 'rc' 'int'     |-IfStmt 0x131142970 <line:38:3, line:39:12>     | |-BinaryOperator 0x1311428b0 <line:38:7, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x131142880 <col:7> 'char *' <LValueToRValue>     | | | `-DeclRefExpr 0x131142840 <col:7> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     | | `-ImplicitCastExpr 0x131142898 <col:11> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x131142860 <col:11> 'char *' lvalue ParmVar 0x131128258 'de' 'char *'     | `-BinaryOperator 0x131142950 <line:39:5, col:12> 'char' '='     |   |-UnaryOperator 0x131142908 <col:5, col:7> 'char' lvalue prefix '*' cannot overflow     |   | `-UnaryOperator 0x1311428f0 <col:6, col:7> 'char *' postfix '++'     |   |   `-DeclRefExpr 0x1311428d0 <col:6> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'     |   `-ImplicitCastExpr 0x131142938 <col:12> 'char' <IntegralCast>     |     `-CharacterLiteral 0x131142920 <col:12> 'int' 0     `-ReturnStmt 0x131142a20 <line:41:3, col:14>       `-BinaryOperator 0x131142a00 <col:10, col:14> 'long' '-'         |-ImplicitCastExpr 0x1311429d0 <col:10> 'char *' <LValueToRValue>         | `-DeclRefExpr 0x131142990 <col:10> 'char *' lvalue ParmVar 0x1311281d8 'd' 'char *'         `-ImplicitCastExpr 0x1311429e8 <col:14> 'char *' <LValueToRValue>           `-DeclRefExpr 0x1311429b0 <col:14> 'char *' lvalue Var 0x131128648 'ds' 'char *' ","19137":"`-FunctionDecl 0x13b8d2de8  line:1:25 invalid avahi_s_host_name_resolver_new 'int *(int *, int, int, const char *, int, int, int, void *)'   |-ParmVarDecl 0x13b8d2928 <line:2:5, col:18> col:18 invalid server 'int *'   |-ParmVarDecl 0x13b8d29a8 <line:3:5, col:18> col:18 invalid interface 'int'   |-ParmVarDecl 0x13b8d2a28 <line:4:5, col:19> col:19 invalid protocol 'int'   |-ParmVarDecl 0x13b8d2aa8 <line:5:5, col:17> col:17 used host_name 'const char *'   |-ParmVarDecl 0x13b8d2b28 <line:6:5, col:19> col:19 invalid aprotocol 'int'   |-ParmVarDecl 0x13b8d2ba8 <line:7:5, col:22> col:22 invalid flags 'int'   |-ParmVarDecl 0x13b8d2c28 <line:8:5, col:36> col:36 invalid callback 'int'   |-ParmVarDecl 0x13b8d2ca8 <line:9:5, col:11> col:11 used userdata 'void *'   `-CompoundStmt 0x13b8ec408 <col:21, line:16:1>     |-CallExpr 0x13b8ec398 <line:13:9, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b8ec318 <col:9> 'int ()' Function 0x13b8ec260 'avahi_s_host_name_resolver_start' 'int ()'     | `-RecoveryExpr 0x13b8ec378 <col:42> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13b8ec3f8 <line:15:9, col:16>       `-RecoveryExpr 0x13b8ec3d8 <col:16> '<dependent type>' contains-errors lvalue ","19256":"`-FunctionDecl 0x15300dee8  line:1:1 invalid kadm5_chpass_principal 'int (void *, int, char *)'   |-ParmVarDecl 0x15300dcd8 <col:24, col:30> col:30 used server_handle 'void *'   |-ParmVarDecl 0x15300dd70 <line:2:24, col:39> col:39 invalid principal 'int'   |-ParmVarDecl 0x15300ddf0 <col:50, col:56> col:56 used password 'char *'   `-CompoundStmt 0x15300e2c0 <line:3:1, line:7:1>     `-ReturnStmt 0x15300e2b0 <line:4:5, line:6:51>       `-CallExpr 0x15300e260 <line:5:9, line:6:51> '<dependent type>' contains-errors         |-DeclRefExpr 0x15300e100 <line:5:9> 'int ()' Function 0x15300e048 'kadm5_chpass_principal_3' 'int ()'         |-DeclRefExpr 0x15300e120 <col:34> 'void *' lvalue ParmVar 0x15300dcd8 'server_handle' 'void *'         |-RecoveryExpr 0x15300e140 <col:49> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x15300e220 <col:60> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x15300e178 <line:6:34> 'int' 0         |-RecoveryExpr 0x15300e240 <col:37> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x15300e1b0 <col:43> 'char *' lvalue ParmVar 0x15300ddf0 'password' 'char *' ","19589":"`-FunctionDecl 0x12b026d48  line:1:1 xfs_attr_fork_reset 'int (struct xfs_inode *, struct xfs_trans *)'   |-ParmVarDecl 0x12b00e848 <line:2:2, col:20> col:20 used ip 'struct xfs_inode *'   |-ParmVarDecl 0x12b026c28 <line:3:2, col:20> col:20 used tp 'struct xfs_trans *'   `-CompoundStmt 0x12b027790 <line:4:1, line:13:1>     |-CallExpr 0x12b027018 <line:5:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b026f70 <col:2> 'int ()' Function 0x12b026eb8 'xfs_idestroy_fork' 'int ()'     | |-DeclRefExpr 0x12b026f90 <col:20> 'struct xfs_inode *' lvalue ParmVar 0x12b00e848 'ip' 'struct xfs_inode *'     | `-RecoveryExpr 0x12b026ff8 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b027110 <line:6:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12b0270a8 <col:2, col:10> '<dependent type>' contains-errors lvalue .di_forkoff     | | `-RecoveryExpr 0x12b027080 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12b027048 <col:2> 'struct xfs_inode *' lvalue ParmVar 0x12b00e848 'ip' 'struct xfs_inode *'     | `-IntegerLiteral 0x12b0270f0 <col:23> 'int' 0     |-BinaryOperator 0x12b027230 <line:7:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12b027190 <col:2, col:10> '<dependent type>' contains-errors lvalue .di_aformat     | | `-RecoveryExpr 0x12b027168 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12b027130 <col:2> 'struct xfs_inode *' lvalue ParmVar 0x12b00e848 'ip' 'struct xfs_inode *'     | `-RecoveryExpr 0x12b027210 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12b027438 <line:9:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b027330 <col:2> 'int ()' Function 0x12b027278 'ASSERT' 'int ()'     | `-BinaryOperator 0x12b027418 <col:9, col:33> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12b0273b0 <col:9, col:17> '<dependent type>' contains-errors lvalue .di_anextents     |   | `-RecoveryExpr 0x12b027388 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12b027350 <col:9> 'struct xfs_inode *' lvalue ParmVar 0x12b00e848 'ip' 'struct xfs_inode *'     |   `-IntegerLiteral 0x12b0273f8 <col:33> 'int' 0     |-CallExpr 0x12b027580 <line:10:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b027460 <col:2> 'int ()' Function 0x12b027278 'ASSERT' 'int ()'     | `-BinaryOperator 0x12b027560 <col:9, col:22> 'int' contains-errors '=='     |   |-RecoveryExpr 0x12b0274b8 <col:9, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12b027480 <col:9> 'struct xfs_inode *' lvalue ParmVar 0x12b00e848 'ip' 'struct xfs_inode *'     |   `-RecoveryExpr 0x12b027540 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12b027758 <line:12:2, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x12b027688 <col:2> 'int ()' Function 0x12b0275d0 'xfs_trans_log_inode' 'int ()'       |-DeclRefExpr 0x12b0276a8 <col:22> 'struct xfs_trans *' lvalue ParmVar 0x12b026c28 'tp' 'struct xfs_trans *'       |-DeclRefExpr 0x12b0276c8 <col:26> 'struct xfs_inode *' lvalue ParmVar 0x12b00e848 'ip' 'struct xfs_inode *'       `-RecoveryExpr 0x12b027738 <col:30> '<dependent type>' contains-errors lvalue ","19515":"`-FunctionDecl 0x14e826600  col:4 implicit used bzero 'void (void *, unsigned long)' extern   |-ParmVarDecl 0x14e826700 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14e826768 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14e8266a8 <<invalid sloc>> Implicit 954 ","19388":"`-FunctionDecl 0x15a128750  col:13 timer_stats_account_timer 'void (struct timer_list *)' static   |-ParmVarDecl 0x15a128648 <col:39, col:58> col:58 timer 'struct timer_list *'   `-CompoundStmt 0x15a140a48 <col:65, col:66> ","19824":"`-FunctionDecl 0x14e04e398  line:1:1 check_secure 'int (void)'   `-CompoundStmt 0x14e04e8d8 <line:2:1, line:18:1>     |-IfStmt 0x14e04e870 <line:3:5, line:8:5>     | |-RecoveryExpr 0x14e04e4b8 <line:3:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e04e850 <line:4:5, line:8:5>     |   |-CallExpr 0x14e04e7e0 <line:6:2, col:18> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e04e610 <col:2> 'int ()' Function 0x14e04e558 'emsg' 'int ()'     |   | `-CallExpr 0x14e04e7b8 <col:7, col:17> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e04e710 <col:7> 'int ()' Function 0x14e04e658 '_' 'int ()'     |   |   `-RecoveryExpr 0x14e04e798 <col:9> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14e04e840 <line:7:2, col:9>     |     `-RecoveryExpr 0x14e04e820 <col:9> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e04e8c8 <line:17:5, col:12>       `-RecoveryExpr 0x14e04e8a8 <col:12> '<dependent type>' contains-errors lvalue ","19219":"`-FunctionDecl 0x12b80e0c8  line:1:6 invalid ssl3_ctx_callback_ctrl 'long (int *, int, void (*)(void))'   |-ParmVarDecl 0x12b80dd28 <col:29, col:38> col:38 referenced invalid ctx 'int *'   |-ParmVarDecl 0x12b80dda8 <col:43, col:47> col:47 used cmd 'int'   |-ParmVarDecl 0x12b80df80 <col:52, col:67> col:59 used fp 'void (*)(void)'   `-CompoundStmt 0x12b82a6f0 <line:2:2, line:62:2>     |-SwitchStmt 0x12b80e240 <line:7:2, line:60:3>     | |-ImplicitCastExpr 0x12b80e228 <line:7:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12b80e208 <col:10> 'int' lvalue ParmVar 0x12b80dda8 'cmd' 'int'     | `-CompoundStmt 0x12b82a600 <line:8:3, line:60:3>     |   |-CompoundStmt 0x12b80e2b0 <line:11:3, line:13:3>     |   |-BreakStmt 0x12b80e2c0 <line:14:3>     |   |-CompoundStmt 0x12b80e310 <line:18:3, line:20:3>     |   |-BreakStmt 0x12b80e320 <line:21:3>     |   |-CompoundStmt 0x12b80e328 <line:25:3, line:27:3>     |   |-BreakStmt 0x12b80e338 <line:28:3>     |   |-BinaryOperator 0x12b828100 <line:32:3, col:64> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12b80e388 <col:3, col:8> '<dependent type>' contains-errors lvalue ->tlsext_servername_callback     |   | | `-RecoveryExpr 0x12b80e360 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12b80e340 <col:3> 'int *' lvalue ParmVar 0x12b80dd28 'ctx' 'int *'     |   | `-CStyleCastExpr 0x12b8280d8 <col:35, col:64> 'int (*)(int *, int *, void *)' <BitCast>     |   |   `-ImplicitCastExpr 0x12b8280c0 <col:64> 'void (*)(void)' <LValueToRValue> part_of_explicit_cast     |   |     `-DeclRefExpr 0x12b827f68 <col:64> 'void (*)(void)' lvalue ParmVar 0x12b80df80 'fp' 'void (*)(void)'     |   |-BreakStmt 0x12b828120 <line:33:3>     |   |-BinaryOperator 0x12b828438 <line:42:3, col:48> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12b828170 <col:3, col:8> '<dependent type>' contains-errors lvalue ->tlsext_status_cb     |   | | `-RecoveryExpr 0x12b828148 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12b828128 <col:3> 'int *' lvalue ParmVar 0x12b80dd28 'ctx' 'int *'     |   | `-CStyleCastExpr 0x12b828410 <col:25, col:48> 'int (*)(int *, void *)' <BitCast>     |   |   `-ImplicitCastExpr 0x12b8283f8 <col:48> 'void (*)(void)' <LValueToRValue> part_of_explicit_cast     |   |     `-DeclRefExpr 0x12b8282b8 <col:48> 'void (*)(void)' lvalue ParmVar 0x12b80df80 'fp' 'void (*)(void)'     |   |-BreakStmt 0x12b828458 <line:43:3>     |   |-BinaryOperator 0x12b8289d8 <line:46:3, line:49:24> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12b8284a8 <line:46:3, col:8> '<dependent type>' contains-errors lvalue ->tlsext_ticket_key_cb     |   | | `-RecoveryExpr 0x12b828480 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12b828460 <col:3> 'int *' lvalue ParmVar 0x12b80dd28 'ctx' 'int *'     |   | `-CStyleCastExpr 0x12b8289b0 <col:29, line:49:24> 'int (*)(int *, unsigned char *, unsigned char *, int *, int *, int)' <BitCast>     |   |   `-ImplicitCastExpr 0x12b828998 <col:24> 'void (*)(void)' <LValueToRValue> part_of_explicit_cast     |   |     `-DeclRefExpr 0x12b828820 <col:24> 'void (*)(void)' lvalue ParmVar 0x12b80df80 'fp' 'void (*)(void)'     |   |-BreakStmt 0x12b8289f8 <line:50:3>     |   |-CompoundStmt 0x12b828d28 <line:54:3, line:56:3>     |   | `-BinaryOperator 0x12b828d08 <line:55:3, col:56> '<dependent type>' contains-errors '='     |   |   |-CXXDependentScopeMemberExpr 0x12b828a48 <col:3, col:8> '<dependent type>' contains-errors lvalue ->not_resumable_session_cb     |   |   | `-RecoveryExpr 0x12b828a20 <col:3> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x12b828a00 <col:3> 'int *' lvalue ParmVar 0x12b80dd28 'ctx' 'int *'     |   |   `-CStyleCastExpr 0x12b828ce0 <col:35, col:56> 'int (*)(int *, int)' <BitCast>     |   |     `-ImplicitCastExpr 0x12b828cc8 <col:56> 'void (*)(void)' <LValueToRValue> part_of_explicit_cast     |   |       `-DeclRefExpr 0x12b828b90 <col:56> 'void (*)(void)' lvalue ParmVar 0x12b80df80 'fp' 'void (*)(void)'     |   |-BreakStmt 0x12b828d40 <line:57:3>     |   `-DefaultStmt 0x12b828db0 <line:58:2, line:59:11>     |     `-ReturnStmt 0x12b828da0 <col:3, col:11>     |       `-ImplicitCastExpr 0x12b828d88 <col:9, col:11> 'long' <IntegralCast>     |         `-ParenExpr 0x12b828d68 <col:9, col:11> 'int'     |           `-IntegerLiteral 0x12b828d48 <col:10> 'int' 0     `-ReturnStmt 0x12b82a6e0 <line:61:2, col:10>       `-ImplicitCastExpr 0x12b82a6c8 <col:8, col:10> 'long' <IntegralCast>         `-ParenExpr 0x12b82a6a8 <col:8, col:10> 'int'           `-IntegerLiteral 0x12b82a688 <col:9> 'int' 1 ","19758":"`-FunctionDecl 0x1379420f0  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1379421f0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x137942258 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1379422c0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x137942198 <<invalid sloc>> Implicit 882 ","20183":"`-FunctionDecl 0x11e827368  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x11e827468 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11e8274d0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x11e827538 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11e827410 <<invalid sloc>> Implicit 900 ","19781":"`-FunctionDecl 0x139928d50  line:1:6 invalid TestGatherNd 'void (int *, const int *, int *, const int *, int *, int *, const int *)'   |-ParmVarDecl 0x139928908 <col:19, col:24> col:24 used param_dims 'int *'   |-ParmVarDecl 0x1399289a0 <col:36, col:53> col:53 invalid param_data 'const int *'   |-ParmVarDecl 0x139928a20 <col:65, col:70> col:70 used index_dims 'int *'   |-ParmVarDecl 0x139928aa0 <line:2:19, col:36> col:36 invalid index_data 'const int *'   |-ParmVarDecl 0x139928b20 <col:48, col:53> col:53 used output_dims 'int *'   |-ParmVarDecl 0x139928ba0 <line:3:19, col:30> col:30 referenced invalid output_data 'int *'   |-ParmVarDecl 0x139928c20 <line:4:19, col:36> col:36 invalid expected_output_data 'const int *'   `-CompoundStmt 0x139942f90 <col:58, line:35:1>     |-DeclStmt 0x139942430 <line:17:3, col:38>     | `-VarDecl 0x139942248 <col:3, col:37> col:7 used inputs_array_data 'int[3]' cinit     |   `-InitListExpr 0x139942378 <col:29, col:37> 'int[3]'     |     |-IntegerLiteral 0x1399422b0 <col:30> 'int' 2     |     |-IntegerLiteral 0x1399422d0 <col:33> 'int' 0     |     `-IntegerLiteral 0x1399422f0 <col:36> 'int' 1     |-DeclStmt 0x1399426c0 <line:19:3, col:36>     | `-VarDecl 0x139942520 <col:3, col:35> col:7 used outputs_array_data 'int[2]' cinit     |   `-InitListExpr 0x139942628 <col:30, col:35> 'int[2]'     |     |-IntegerLiteral 0x139942588 <col:31> 'int' 1     |     `-IntegerLiteral 0x1399425a8 <col:34> 'int' 2     |-DeclStmt 0x139942960 <line:22:3, col:63>     | `-VarDecl 0x1399427c0 <col:3, col:28> col:28 invalid registration 'const int'     |-DeclStmt 0x139942c38 <line:31:3, col:60>     | `-VarDecl 0x139942ad0 <col:3, col:13> col:13 used output_size 'const int'     `-ForStmt 0x139942f58 <line:32:3, line:34:3>       |-DeclStmt 0x139942cf0 <line:32:8, col:17>       | `-VarDecl 0x139942c68 <col:8, col:16> col:12 used i 'int' cinit       |   `-IntegerLiteral 0x139942cd0 <col:16> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x139942d78 <col:19, col:23> 'int' '<'       | |-ImplicitCastExpr 0x139942d48 <col:19> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x139942d08 <col:19> 'int' lvalue Var 0x139942c68 'i' 'int'       | `-ImplicitCastExpr 0x139942d60 <col:23> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x139942d28 <col:23> 'const int' lvalue Var 0x139942ad0 'output_size' 'const int'       |-UnaryOperator 0x139942db8 <col:36, col:38> 'int' prefix '++'       | `-DeclRefExpr 0x139942d98 <col:38> 'int' lvalue Var 0x139942c68 'i' 'int'       `-CompoundStmt 0x139942f40 <col:41, line:34:3>         `-CallExpr 0x139942f10 <line:33:5, col:68> '<dependent type>' contains-errors           |-DeclRefExpr 0x139942dd0 <col:5> 'int ()' Function 0x1399429a0 'TF_LITE_MICRO_EXPECT_EQ' 'int ()'           |-ArraySubscriptExpr 0x139942e60 <col:29, col:51> '<dependent type>' contains-errors lvalue           | |-ImplicitCastExpr 0x139942e30 <col:29> '<dependent type>' contains-errors <LValueToRValue>           | | `-RecoveryExpr 0x139942df0 <col:29> '<dependent type>' contains-errors lvalue           | `-ImplicitCastExpr 0x139942e48 <col:50> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x139942e10 <col:50> 'int' lvalue Var 0x139942c68 'i' 'int'           `-ArraySubscriptExpr 0x139942ef0 <col:54, col:67> '<dependent type>' contains-errors lvalue             |-ImplicitCastExpr 0x139942ec0 <col:54> '<dependent type>' contains-errors <LValueToRValue>             | `-RecoveryExpr 0x139942e80 <col:54> '<dependent type>' contains-errors lvalue             `-ImplicitCastExpr 0x139942ed8 <col:66> 'int' <LValueToRValue>               `-DeclRefExpr 0x139942ea0 <col:66> 'int' lvalue Var 0x139942c68 'i' 'int' ","19499":"`-FunctionDecl 0x14a00b3e0  line:1:13 kvm_vcpu_init 'void (struct kvm_vcpu *, struct kvm *, unsigned int)' static   |-ParmVarDecl 0x14b80e248 <col:27, col:44> col:44 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x14a00b228 <col:50, col:62> col:62 used kvm 'struct kvm *'   |-ParmVarDecl 0x14a00b2a8 <col:67, col:76> col:76 used id 'unsigned int'   `-CompoundStmt 0x14a011db0 <line:2:1, line:19:1>     |-CallExpr 0x14a00b6a8 <line:3:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00b610 <col:2> 'int ()' Function 0x14a00b558 'mutex_init' 'int ()'     | `-UnaryOperator 0x14a00b690 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a00b668 <col:14, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a00b630 <col:14> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     |-BinaryOperator 0x14a00b768 <line:4:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a00b708 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a00b6d0 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-UnaryOperator 0x14a00b750 <col:14, col:15> 'int' prefix '-'     |   `-IntegerLiteral 0x14a00b730 <col:15> 'int' 1     |-BinaryOperator 0x14a00b808 <line:5:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a00b7c0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a00b788 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-DeclRefExpr 0x14a00b7e8 <col:14> 'struct kvm *' lvalue ParmVar 0x14a00b228 'kvm' 'struct kvm *'     |-BinaryOperator 0x14a00b8a8 <line:6:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a00b860 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a00b828 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-DeclRefExpr 0x14a00b888 <col:18> 'unsigned int' lvalue ParmVar 0x14a00b2a8 'id' 'unsigned int'     |-BinaryOperator 0x14a00b980 <line:7:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a00b900 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a00b8c8 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x14a00b960 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a00bb18 <line:9:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00ba80 <col:2> 'int ()' Function 0x14a00b9c8 'rcuwait_init' 'int ()'     | `-UnaryOperator 0x14a00bb00 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a00bad8 <col:16, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a00baa0 <col:16> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x14a00bca8 <line:11:2, col:29> 'int'     | |-ImplicitCastExpr 0x14a00bc90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a00bc20 <col:2> 'int ()' Function 0x14a00bb68 'kvm_async_pf_vcpu_init' 'int ()'     | `-ImplicitCastExpr 0x14a00bcd0 <col:25> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x14a00bc40 <col:25> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x14a00be70 <line:13:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a00bdc8 <col:2> 'int ()' Function 0x14a00bd10 'kvm_vcpu_set_in_spin_loop' 'int ()'     | |-DeclRefExpr 0x14a00bde8 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x14a00be50 <col:34> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14a00c028 <line:14:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a00bf80 <col:2> 'int ()' Function 0x14a00bec8 'kvm_vcpu_set_dy_eligible' 'int ()'       |-DeclRefExpr 0x14a00bfa0 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x14b80e248 'vcpu' 'struct kvm_vcpu *'       `-RecoveryExpr 0x14a00c008 <col:33> '<dependent type>' contains-errors lvalue ","19568":"`-FunctionDecl 0x14000dee8  line:1:26 invalid ReadPropertyMSBLong 'int (const unsigned char **, int *)' static inline   |-ParmVarDecl 0x14000dd40 <col:46, col:68> col:68 used p 'const unsigned char **'   |-ParmVarDecl 0x14000de08 <line:2:3, col:11> col:11 invalid length 'int *'   `-CompoundStmt 0x1400285e0 <line:3:1, line:39:1>     |-DeclStmt 0x14000e1e8 <line:4:3, line:11:12>     | |-RecordDecl 0x14000dfa0 <line:4:3, line:11:3> line:4:3 union definition     | | |-FieldDecl 0x14000e058 <line:6:5, line:7:7> col:7 referenced unsigned_value 'unsigned int'     | | `-FieldDecl 0x14000e0c0 <line:9:5, line:10:7> col:7 referenced signed_value 'int'     | `-VarDecl 0x14000e168 <line:4:3, line:11:5> col:5 used quantum 'union (unnamed union at dataset_diviso_filec\/func6368_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func6368_vuln.c:4:3)'     |-DeclStmt 0x14000e280 <line:13:3, line:14:6>     | `-VarDecl 0x14000e218 <line:13:3, line:14:5> col:5 used c 'int'     |-DeclStmt 0x14000e318 <line:16:3, line:17:6>     | `-VarDecl 0x14000e2b0 <line:16:3, line:17:5> col:5 invalid i 'int' register     |-DeclStmt 0x140027a68 <line:19:3, line:20:14>     | `-VarDecl 0x140027a00 <line:19:3, line:20:13> col:5 used buffer 'unsigned char[4]'     |-UnaryExprOrTypeTraitExpr 0x140027ad8 <line:22:3, line:23:5> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x140027ab8 <col:5> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140027bf0 <line:25:3, line:26:14>     | |-BinaryOperator 0x140027b68 <line:25:7, col:17> 'int' contains-errors '<'     | | |-UnaryOperator 0x140027b30 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x140027b18 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x140027af8 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x140027b48 <col:17> 'int' 4     | `-ReturnStmt 0x140027be0 <line:26:5, col:14>     |   `-ParenExpr 0x140027bc0 <col:11, col:14> 'int'     |     `-UnaryOperator 0x140027ba8 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x140027b88 <col:13> 'int' 1     |-ForStmt 0x140028090 <line:27:3, line:32:3>     | |-BinaryOperator 0x140027c50 <line:27:8, col:10> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x140027c10 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x140027c30 <col:10> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x140027cb0 <col:13, col:17> 'int' contains-errors '<'     | | |-RecoveryExpr 0x140027c70 <col:13> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x140027c90 <col:17> 'int' 4     | |-UnaryOperator 0x140027cf0 <col:20, col:21> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x140027cd0 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140028068 <line:28:3, line:32:3>     |   |-BinaryOperator 0x140027e60 <line:29:5, col:21> 'int' '='     |   | |-DeclRefExpr 0x140027d08 <col:5> 'int' lvalue Var 0x14000e218 'c' 'int'     |   | `-CStyleCastExpr 0x140027e38 <col:7, col:21> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x140027e20 <col:13, col:21> 'unsigned char' <LValueToRValue> part_of_explicit_cast     |   |     `-ParenExpr 0x140027e00 <col:13, col:21> 'const unsigned char' lvalue     |   |       `-UnaryOperator 0x140027db0 <col:14, col:19> 'const unsigned char' lvalue prefix '*' cannot overflow     |   |         `-UnaryOperator 0x140027d98 <col:15, col:19> 'const unsigned char *' postfix '++'     |   |           `-ParenExpr 0x140027d78 <col:15, col:18> 'const unsigned char *' lvalue     |   |             `-UnaryOperator 0x140027d60 <col:16, col:17> 'const unsigned char *' lvalue prefix '*' cannot overflow     |   |               `-ImplicitCastExpr 0x140027d48 <col:17> 'const unsigned char **' <LValueToRValue>     |   |                 `-DeclRefExpr 0x140027d28 <col:17> 'const unsigned char **' lvalue ParmVar 0x14000dd40 'p' 'const unsigned char **'     |   |-UnaryOperator 0x140027ef0 <line:30:5, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-ParenExpr 0x140027ed0 <col:5, col:13> '<dependent type>' contains-errors     |   |   `-UnaryOperator 0x140027eb8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x140027ea0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x140027e80 <col:7> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x140028048 <line:31:5, col:31> '<dependent type>' contains-errors '='     |     |-ArraySubscriptExpr 0x140027fb0 <col:5, col:13> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x140027f80 <col:5> 'unsigned char *' <ArrayToPointerDecay>     |     | | `-DeclRefExpr 0x140027f08 <col:5> 'unsigned char[4]' lvalue Var 0x140027a00 'buffer' 'unsigned char[4]'     |     | `-ImplicitCastExpr 0x140027f98 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x140027f28 <col:12> '<dependent type>' contains-errors lvalue     |     `-CStyleCastExpr 0x140028020 <col:15, col:31> 'unsigned char' <IntegralCast>     |       `-ImplicitCastExpr 0x140028008 <col:31> 'int' <LValueToRValue> part_of_explicit_cast     |         `-DeclRefExpr 0x140027fd0 <col:31> 'int' lvalue Var 0x14000e218 'c' 'int'     `-ReturnStmt 0x1400285d0 <line:38:3, col:30>       `-ImplicitCastExpr 0x1400285b8 <col:9, col:30> 'int' <LValueToRValue>         `-ParenExpr 0x140028598 <col:9, col:30> 'int' lvalue           `-MemberExpr 0x140028568 <col:10, col:18> 'int' lvalue .signed_value 0x14000e0c0             `-DeclRefExpr 0x140028548 <col:10> 'union (unnamed union at dataset_diviso_filec\/func6368_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func6368_vuln.c:4:3)' lvalue Var 0x14000e168 'quantum' 'union (unnamed union at dataset_diviso_filec\/func6368_vuln.c:4:3)':'union (unnamed at dataset_diviso_filec\/func6368_vuln.c:4:3)' ","19329":"`-FunctionDecl 0x1300fad18  line:1:1 invalid restore_page_device 'int (int *, const int *, const int *)'   |-ParmVarDecl 0x1300fab28 <col:21, col:30> col:30 invalid i_ctx_p 'int *'   |-ParmVarDecl 0x1300faba8 <col:39, col:57> col:57 referenced invalid pgs_old 'const int *'   |-ParmVarDecl 0x1300fac28 <col:66, col:84> col:84 referenced invalid pgs_new 'const int *'   `-CompoundStmt 0x130114e28 <line:2:1, line:38:1>     |-IfStmt 0x1301148a8 <line:11:5, line:12:16>     | |-RecoveryExpr 0x130114858 <line:11:9, col:71> '_Bool' contains-errors     | `-ReturnStmt 0x130114898 <line:12:9, col:16>     |   `-IntegerLiteral 0x130114878 <col:16> 'int' 0     |-IfStmt 0x130114a00 <line:19:5, line:24:5>     | |-RecoveryExpr 0x130114950 <line:19:9, col:20> '_Bool' contains-errors     | `-CompoundStmt 0x1301149f0 <col:29, line:24:5>     `-IfStmt 0x130114dc8 <line:26:5, line:35:5>       |-RecoveryExpr 0x130114a20 <line:26:9, col:30> '_Bool' contains-errors       `-CompoundStmt 0x130114da8 <col:46, line:35:5>         |-DeclStmt 0x130114ae0 <line:28:9, col:32>         | `-VarDecl 0x130114a58 <col:9, col:29> col:19 used max_ops 'const int' cinit         |   `-IntegerLiteral 0x130114ac0 <col:29> 'int' 512         `-IfStmt 0x130114d88 <line:31:9, line:34:9>           |-RecoveryExpr 0x130114b18 <line:31:13, col:28> '_Bool' contains-errors           `-CompoundStmt 0x130114d78 <col:35, line:34:9> ","20164":"`-FunctionDecl 0x1489151f0  col:7 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x148915298 <<invalid sloc>> Implicit 867 ","20080":"`-FunctionDecl 0x13f809268  col:19 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x13f809368 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x13f809310 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x13f8093d8 <col:19> Implicit 1 ","19598":"`-FunctionDecl 0x11d941838  line:1:12 invalid svm_smi_allowed 'int (struct kvm_vcpu *, int)' static   |-ParmVarDecl 0x11d928648 <col:28, col:45> col:45 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x11d9286e0 <col:51, col:56> col:56 invalid for_injection 'int'   `-CompoundStmt 0x11d942458 <line:2:1, line:12:1>     |-DeclStmt 0x11d941d18 <line:3:2, col:37>     | |-RecordDecl 0x11d9418f0 <col:2, col:9> col:9 struct vcpu_svm     | `-VarDecl 0x11d941a58 <col:2, col:36> col:19 used svm 'struct vcpu_svm *' cinit     |   `-ImplicitCastExpr 0x11d941ce8 <col:25, col:36> 'struct vcpu_svm *' <IntegralToPointer>     |     `-CallExpr 0x11d941ca8 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x11d941c90 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x11d941c20 <col:25> 'int ()' Function 0x11d941b68 'to_svm' 'int ()'     |       `-ImplicitCastExpr 0x11d941cd0 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x11d941c40 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x11d928648 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x11d941e80 <line:4:2, line:5:11>     | |-CXXDependentScopeMemberExpr 0x11d941d90 <line:4:6, col:18> '<dependent type>' contains-errors lvalue .nested_run_pending     | | `-RecoveryExpr 0x11d941d68 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11d941d30 <col:6> 'struct vcpu_svm *' lvalue Var 0x11d941a58 'svm' 'struct vcpu_svm *'     | `-ReturnStmt 0x11d941e70 <line:5:3, col:11>     |   `-UnaryOperator 0x11d941e58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d941e40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d941e20 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d942298 <line:8:2, line:9:11>     | |-BinaryOperator 0x11d9421d0 <line:8:6, col:68> 'int' contains-errors '&&'     | | |-BinaryOperator 0x11d942038 <col:6, col:41> 'int' contains-errors '&&'     | | | |-RecoveryExpr 0x11d941ea0 <col:6> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x11d941ff8 <col:23, col:41> 'int'     | | |   |-ImplicitCastExpr 0x11d941fe0 <col:23> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x11d941fa0 <col:23> 'int ()' Function 0x11d941ee8 'is_guest_mode' 'int ()'     | | |   `-ImplicitCastExpr 0x11d942020 <col:37> 'struct kvm_vcpu *' <LValueToRValue>     | | |     `-DeclRefExpr 0x11d941fc0 <col:37> 'struct kvm_vcpu *' lvalue ParmVar 0x11d928648 'vcpu' 'struct kvm_vcpu *'     | | `-CallExpr 0x11d942190 <col:46, col:68> 'int'     | |   |-ImplicitCastExpr 0x11d942178 <col:46> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x11d942138 <col:46> 'int ()' Function 0x11d942080 'nested_exit_on_smi' 'int ()'     | |   `-ImplicitCastExpr 0x11d9421b8 <col:65> 'struct vcpu_svm *' <LValueToRValue>     | |     `-DeclRefExpr 0x11d942158 <col:65> 'struct vcpu_svm *' lvalue Var 0x11d941a58 'svm' 'struct vcpu_svm *'     | `-ReturnStmt 0x11d942288 <line:9:3, col:11>     |   `-UnaryOperator 0x11d942270 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x11d942258 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x11d942238 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11d942448 <line:11:2, col:30>       `-UnaryOperator 0x11d942430 <col:9, col:30> 'int' prefix '!' cannot overflow         `-CallExpr 0x11d9423f0 <col:10, col:30> 'int'           |-ImplicitCastExpr 0x11d9423d8 <col:10> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x11d942398 <col:10> 'int ()' Function 0x11d9422e0 'svm_smi_blocked' 'int ()'           `-ImplicitCastExpr 0x11d942418 <col:26> 'struct kvm_vcpu *' <LValueToRValue>             `-DeclRefExpr 0x11d9423b8 <col:26> 'struct kvm_vcpu *' lvalue ParmVar 0x11d928648 'vcpu' 'struct kvm_vcpu *' ","19483":"`-FunctionDecl 0x133928318  line:1:1 invalid proto_read_ulong_buffer 'int (int *, int *, int *)'   |-ParmVarDecl 0x133928128 <col:26, col:43> col:43 invalid msg 'int *'   |-ParmVarDecl 0x1339281a8 <line:2:26, col:40> col:40 invalid buffer 'int *'   |-ParmVarDecl 0x133928228 <line:3:26, col:36> col:36 invalid n_buffer 'int *'   `-CompoundStmt 0x1339424f8 <line:4:1, line:31:1>     |-CallExpr 0x133928610 <line:7:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133928530 <col:2> 'int ()' Function 0x133928478 'assert' 'int ()'     | `-BinaryOperator 0x1339285f0 <col:10, col:17> 'int' contains-errors '!='     |   |-RecoveryExpr 0x133928550 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1339285d0 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133928718 <line:8:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133928638 <col:2> 'int ()' Function 0x133928478 'assert' 'int ()'     | `-BinaryOperator 0x1339286f8 <col:10, col:20> 'int' contains-errors '!='     |   |-RecoveryExpr 0x133928658 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1339286d8 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133941820 <line:9:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133928740 <col:2> 'int ()' Function 0x133928478 'assert' 'int ()'     | `-BinaryOperator 0x133941800 <col:10, col:22> 'int' contains-errors '!='     |   |-RecoveryExpr 0x133928760 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1339287e0 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133941970 <line:10:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133941848 <col:2> 'int ()' Function 0x133928478 'assert' 'int ()'     | `-BinaryOperator 0x133941950 <col:10, col:24> 'int' contains-errors '!='     |   |-CXXDependentScopeMemberExpr 0x133941888 <col:10, col:15> '<dependent type>' contains-errors lvalue ->input     |   | `-RecoveryExpr 0x133941868 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x133941930 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133941c20 <line:13:2, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133941998 <col:2> 'int ()' Function 0x133928478 'assert' 'int ()'     | `-BinaryOperator 0x133941c00 <col:10, col:68> 'int' contains-errors '||'     |   |-UnaryOperator 0x133941a38 <col:10, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-ImplicitCastExpr 0x133941a20 <col:11, col:16> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-CXXDependentScopeMemberExpr 0x1339419d8 <col:11, col:16> '<dependent type>' contains-errors lvalue ->signature     |   |     `-RecoveryExpr 0x1339419b8 <col:11> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x133941bd0 <col:29, col:68> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x133941b30 <col:29> 'int ()' Function 0x133941a78 'p11_rpc_message_verify_part' 'int ()'     |     |-RecoveryExpr 0x133941b50 <col:58> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x133941bb0 <col:63> 'char[4]' lvalue \"STR\"     |-IfStmt 0x133941f80 <line:16:2, line:17:10>     | |-UnaryOperator 0x133941f20 <line:16:6, col:67> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x133941ee8 <col:7, col:67> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x133941d28 <col:7> 'int ()' Function 0x133941c70 'p11_rpc_buffer_get_uint32' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x133941d68 <col:34, col:39> '<dependent type>' contains-errors lvalue ->input     | |   | `-RecoveryExpr 0x133941d48 <col:34> '<dependent type>' contains-errors lvalue     | |   |-UnaryOperator 0x133941e18 <col:46, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   | `-CXXDependentScopeMemberExpr 0x133941dd0 <col:47, col:52> '<dependent type>' contains-errors lvalue ->parsed     | |   |   `-RecoveryExpr 0x133941db0 <col:47> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x133941ed0 <col:60, col:61> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x133941eb0 <col:61> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x133941f70 <line:17:3, col:10>     |   `-RecoveryExpr 0x133941f50 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1339420a8 <line:19:2, col:14> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x133942070 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x133942058 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x133941fa0 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x133942088 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1339421d0 <line:20:2, col:12> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x133942198 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x133942180 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1339420c8 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1339421b0 <col:12> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1339422d0 <line:23:2, line:24:10>       |-BinaryOperator 0x133942268 <line:23:6, col:16> 'int' contains-errors '=='       | |-RecoveryExpr 0x133942248 <col:6> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x133942208 <col:16> 'int' 0       `-ReturnStmt 0x1339422c0 <line:24:3, col:10>         `-RecoveryExpr 0x1339422a0 <col:10> '<dependent type>' contains-errors lvalue ","19279":"`-FunctionDecl 0x15800e358  line:1:12 snd_usb_mbox2_boot_quirk 'int (struct usb_device *)' static   |-ParmVarDecl 0x15800e248 <col:37, col:56> col:56 used dev 'struct usb_device *'   `-CompoundStmt 0x15802a988 <line:2:1, line:55:1>     |-DeclStmt 0x158026898 <line:3:2, col:49>     | |-RecordDecl 0x158026650 <col:2, col:9> col:9 struct usb_host_config     | `-VarDecl 0x1580267b8 <col:2, col:40> col:26 used config 'struct usb_host_config *' cinit     |   `-RecoveryExpr 0x158026858 <col:35, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158026820 <col:35> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |-DeclStmt 0x158026930 <line:4:2, col:9>     | `-VarDecl 0x1580268c8 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x1580269e0 <line:6:2, col:12>     | `-VarDecl 0x158026978 <col:2, col:6> col:6 used fwsize 'int'     |-DeclStmt 0x158026a78 <line:7:2, col:11>     | `-VarDecl 0x158026a10 <col:2, col:6> col:6 used count 'int'     |-BinaryOperator 0x158026dd8 <line:9:2, col:57> 'int' contains-errors '='     | |-DeclRefExpr 0x158026a90 <col:2> 'int' lvalue Var 0x158026978 'fwsize' 'int'     | `-CallExpr 0x158026db0 <col:11, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x158026bc0 <col:11> 'int ()' Function 0x158026b08 'le16_to_cpu' 'int ()'     |   `-RecoveryExpr 0x158026d88 <col:23, col:45> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x158026d48 <col:23, col:42> 'int' contains-errors     |       |-ImplicitCastExpr 0x158026d30 <col:23> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x158026cc0 <col:23> 'int ()' Function 0x158026c08 'get_cfg_desc' 'int ()'     |       `-ImplicitCastExpr 0x158026d70 <col:36> 'struct usb_host_config *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x158026ce0 <col:36> 'struct usb_host_config *' contains-errors lvalue Var 0x1580267b8 'config' 'struct usb_host_config *'     |-IfStmt 0x158027190 <line:11:2, line:14:2>     | |-BinaryOperator 0x158026e70 <line:11:6, col:16> 'int' contains-errors '!='     | | |-DeclRefExpr 0x158026df8 <col:6> 'int' lvalue Var 0x158026978 'fwsize' 'int'     | | `-RecoveryExpr 0x158026e50 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x158027170 <col:37, line:14:2>     |   |-CallExpr 0x158027090 <line:12:3, col:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x158026f70 <col:3> 'int ()' Function 0x158026eb8 'dev_err' 'int ()'     |   | |-UnaryOperator 0x158026ff0 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x158026fc8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x158026f90 <col:12> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |   | |-StringLiteral 0x158027050 <col:22> 'char[4]' lvalue \"STR\"     |   | `-DeclRefExpr 0x158027070 <col:29> 'int' lvalue Var 0x158026978 'fwsize' 'int'     |   `-ReturnStmt 0x158027160 <line:13:3, col:11>     |     `-UnaryOperator 0x158027148 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x158027130 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x158027110 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x158027348 <line:16:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158027290 <col:2> 'int ()' Function 0x1580271d8 'dev_dbg' 'int ()'     | |-UnaryOperator 0x158027310 <col:10, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1580272e8 <col:11, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1580272b0 <col:11> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     | `-StringLiteral 0x158027328 <col:21> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x1580273b8 <line:18:2, col:10> 'int' '='     | |-DeclRefExpr 0x158027378 <col:2> 'int' lvalue Var 0x158026a10 'count' 'int'     | `-IntegerLiteral 0x158027398 <col:10> 'int' 0     |-WhileStmt 0x1580299a0 <line:20:2, line:29:2>     | |-RecoveryExpr 0x1580274f8 <line:20:9, col:63> '_Bool' contains-errors     | `-CompoundStmt 0x158029968 <col:66, line:29:2>     |   |-CallExpr 0x158029258 <line:21:3, col:13> 'int'     |   | |-ImplicitCastExpr 0x158029240 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x158029200 <col:3> 'int ()' Function 0x158027540 'msleep' 'int ()'     |   | `-IntegerLiteral 0x158029220 <col:10> 'int' 500     |   |-CallExpr 0x158029768 <line:22:3, line:24:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x158029360 <line:22:3> 'int ()' Function 0x1580292a8 'snd_usb_ctl_msg' 'int ()'     |   | |-DeclRefExpr 0x158029380 <col:19> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |   | |-CallExpr 0x1580296e8 <col:24, col:46> 'int'     |   | | |-ImplicitCastExpr 0x1580296d0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x158029480 <col:24> 'int ()' Function 0x1580293c8 'usb_rcvctrlpipe' 'int ()'     |   | | |-ImplicitCastExpr 0x158029718 <col:40> 'struct usb_device *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1580294a0 <col:40> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |   | | `-IntegerLiteral 0x1580294c0 <col:45> 'int' 0     |   | |-IntegerLiteral 0x158029540 <line:24:4> 'int' 133     |   | |-IntegerLiteral 0x158029560 <col:10> 'int' 192     |   | |-IntegerLiteral 0x158029580 <col:16> 'int' 1     |   | |-IntegerLiteral 0x1580295a0 <col:24> 'int' 0     |   | |-UnaryOperator 0x158029750 <col:32, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x158029730 <col:33> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x1580295f0 <col:47> 'int' 18     |   |-IfStmt 0x158029828 <line:25:3, line:26:4>     |   | |-RecoveryExpr 0x158029800 <line:25:7, col:26> '_Bool' contains-errors     |   | `-BreakStmt 0x158029820 <line:26:4>     |   |-CallExpr 0x158029900 <line:27:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x158029848 <col:3> 'int ()' Function 0x1580271d8 'dev_dbg' 'int ()'     |   | |-UnaryOperator 0x1580298c8 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x1580298a0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x158029868 <col:12> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |   | `-StringLiteral 0x1580298e0 <col:22> 'char[4]' lvalue \"STR\"     |   `-UnaryOperator 0x158029950 <line:28:3, col:8> 'int' postfix '++'     |     `-DeclRefExpr 0x158029930 <col:3> 'int' lvalue Var 0x158026a10 'count' 'int'     |-IfStmt 0x158029ae8 <line:31:2, line:34:2>     | |-RecoveryExpr 0x1580299e0 <line:31:6, col:25> '_Bool' contains-errors     | `-CompoundStmt 0x158029ad8 <col:43, line:34:2>     |-CallExpr 0x158029bc0 <line:36:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158029b08 <col:2> 'int ()' Function 0x1580271d8 'dev_dbg' 'int ()'     | |-UnaryOperator 0x158029b88 <col:10, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x158029b60 <col:11, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158029b28 <col:11> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     | `-StringLiteral 0x158029ba0 <col:21> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x158029ee8 <line:40:2, col:16> 'struct usb_host_config *' contains-errors '='     | |-DeclRefExpr 0x158029e68 <col:2> 'struct usb_host_config *' contains-errors lvalue Var 0x1580267b8 'config' 'struct usb_host_config *'     | `-RecoveryExpr 0x158029ec0 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x158029e88 <col:11> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |-IfStmt 0x15802a090 <line:41:2, line:42:32>     | |-BinaryOperator 0x158029f60 <line:41:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x158029f48 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x158029f08 <col:6> 'int' lvalue Var 0x1580268c8 'err' 'int'     | | `-IntegerLiteral 0x158029f28 <col:12> 'int' 0     | `-CallExpr 0x15802a058 <line:42:3, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x158029f80 <col:3> 'int ()' Function 0x1580271d8 'dev_dbg' 'int ()'     |   |-UnaryOperator 0x15802a000 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x158029fd8 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x158029fa0 <col:12> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |   |-StringLiteral 0x15802a018 <col:22> 'char[4]' lvalue \"STR\"     |   `-DeclRefExpr 0x15802a038 <col:29> 'int' lvalue Var 0x1580268c8 'err' 'int'     |-BinaryOperator 0x15802a258 <line:44:2, col:35> 'int' '='     | |-DeclRefExpr 0x15802a0b0 <col:2> 'int' lvalue Var 0x1580268c8 'err' 'int'     | `-CallExpr 0x15802a218 <col:8, col:35> 'int'     |   |-ImplicitCastExpr 0x15802a200 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15802a1b0 <col:8> 'int ()' Function 0x15802a0f8 'usb_reset_configuration' 'int ()'     |   `-ImplicitCastExpr 0x15802a240 <col:32> 'struct usb_device *' <LValueToRValue>     |     `-DeclRefExpr 0x15802a1d0 <col:32> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |-IfStmt 0x15802a400 <line:45:2, line:46:32>     | |-BinaryOperator 0x15802a2d0 <line:45:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x15802a2b8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15802a278 <col:6> 'int' lvalue Var 0x1580268c8 'err' 'int'     | | `-IntegerLiteral 0x15802a298 <col:12> 'int' 0     | `-CallExpr 0x15802a3c8 <line:46:3, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15802a2f0 <col:3> 'int ()' Function 0x1580271d8 'dev_dbg' 'int ()'     |   |-UnaryOperator 0x15802a370 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x15802a348 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15802a310 <col:12> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |   |-StringLiteral 0x15802a388 <col:22> 'char[4]' lvalue \"STR\"     |   `-DeclRefExpr 0x15802a3a8 <col:29> 'int' lvalue Var 0x1580268c8 'err' 'int'     |-CallExpr 0x15802a5e0 <line:47:2, line:48:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15802a420 <line:47:2> 'int ()' Function 0x1580271d8 'dev_dbg' 'int ()'     | |-UnaryOperator 0x15802a4a0 <col:10, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15802a478 <col:11, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15802a440 <col:11> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     | |-StringLiteral 0x15802a4b8 <col:21> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x15802a5b8 <line:48:3, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15802a4d8 <col:3> 'int ()' Function 0x158026b08 'le16_to_cpu' 'int ()'     |   `-RecoveryExpr 0x15802a590 <col:15, col:37> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x15802a550 <col:15, col:34> 'int' contains-errors     |       |-ImplicitCastExpr 0x15802a538 <col:15> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15802a4f8 <col:15> 'int ()' Function 0x158026c08 'get_cfg_desc' 'int ()'     |       `-ImplicitCastExpr 0x15802a578 <col:28> 'struct usb_host_config *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x15802a518 <col:28> 'struct usb_host_config *' contains-errors lvalue Var 0x1580267b8 'config' 'struct usb_host_config *'     |-CallExpr 0x15802a750 <line:50:2, col:29> 'int'     | |-ImplicitCastExpr 0x15802a738 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15802a6f8 <col:2> 'int ()' Function 0x15802a640 'mbox2_setup_48_24_magic' 'int ()'     | `-ImplicitCastExpr 0x15802a778 <col:26> 'struct usb_device *' <LValueToRValue>     |   `-DeclRefExpr 0x15802a718 <col:26> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     |-CallExpr 0x15802a928 <line:52:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15802a870 <col:2> 'int ()' Function 0x15802a7b8 'dev_info' 'int ()'     | |-UnaryOperator 0x15802a8f0 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15802a8c8 <col:12, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15802a890 <col:12> 'struct usb_device *' lvalue ParmVar 0x15800e248 'dev' 'struct usb_device *'     | `-StringLiteral 0x15802a908 <col:22> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x15802a978 <line:54:2, col:9>       `-IntegerLiteral 0x15802a958 <col:9> 'int' 0 ","19854":"`-FunctionDecl 0x15d008b08  col:31 implicit used __builtin_return_address 'void *(unsigned int)' extern   |-ParmVarDecl 0x15d008c08 <<invalid sloc>> <invalid sloc> 'unsigned int'   |-BuiltinAttr 0x15d008bb0 <<invalid sloc>> Implicit 461   `-NoThrowAttr 0x15d008c78 <col:31> Implicit ","20081":"`-FunctionDecl 0x14c942718  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14c942818 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14c9427c0 <<invalid sloc>> Implicit 873 ","19609":"`-FunctionDecl 0x124066358  line:1:12 virtbt_close 'int (struct hci_dev *)' static   |-ParmVarDecl 0x124066248 <col:25, col:41> col:41 used hdev 'struct hci_dev *'   `-CompoundStmt 0x121813000 <line:2:1, line:17:1>     |-DeclStmt 0x123048448 <line:3:2, col:54>     | |-RecordDecl 0x123048050 <col:2, col:9> col:9 struct virtio_bluetooth     | `-VarDecl 0x1230481b8 <col:2, col:53> col:27 used vbt 'struct virtio_bluetooth *' cinit     |   `-ImplicitCastExpr 0x123048418 <col:33, col:53> 'struct virtio_bluetooth *' <IntegralToPointer>     |     `-CallExpr 0x1230483d8 <col:33, col:53> 'int'     |       |-ImplicitCastExpr 0x1230483c0 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x123048350 <col:33> 'int ()' Function 0x123048298 'hci_get_drvdata' 'int ()'     |       `-ImplicitCastExpr 0x123048400 <col:49> 'struct hci_dev *' <LValueToRValue>     |         `-DeclRefExpr 0x123048370 <col:49> 'struct hci_dev *' lvalue ParmVar 0x124066248 'hdev' 'struct hci_dev *'     |-DeclStmt 0x1230484e0 <line:4:2, col:7>     | `-VarDecl 0x123048478 <col:2, col:6> col:6 used i 'int'     |-CallExpr 0x123048670 <line:6:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1230485d8 <col:2> 'int ()' Function 0x123048520 'cancel_work_sync' 'int ()'     | `-UnaryOperator 0x123048658 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x123048630 <col:20, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1230485f8 <col:20> 'struct virtio_bluetooth *' lvalue Var 0x1230481b8 'vbt' 'struct virtio_bluetooth *'     |-ForStmt 0x121812f98 <line:8:2, line:14:2>     | |-BinaryOperator 0x1230486d8 <line:8:7, col:11> 'int' '='     | | |-DeclRefExpr 0x123048698 <col:7> 'int' lvalue Var 0x123048478 'i' 'int'     | | `-IntegerLiteral 0x1230486b8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1230488a0 <col:14, col:37> 'int' contains-errors '<'     | | |-DeclRefExpr 0x1230486f8 <col:14> 'int' lvalue Var 0x123048478 'i' 'int'     | | `-CallExpr 0x123048878 <col:18, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1230487f8 <col:18> 'int ()' Function 0x123048740 'ARRAY_SIZE' 'int ()'     | |   `-RecoveryExpr 0x123048850 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x123048818 <col:29> 'struct virtio_bluetooth *' lvalue Var 0x1230481b8 'vbt' 'struct virtio_bluetooth *'     | |-UnaryOperator 0x1230488e0 <col:40, col:41> 'int' postfix '++'     | | `-DeclRefExpr 0x1230488c0 <col:40> 'int' lvalue Var 0x123048478 'i' 'int'     | `-CompoundStmt 0x121812f70 <col:45, line:14:2>     |   |-DeclStmt 0x123048bb8 <line:9:3, col:37>     |   | |-RecordDecl 0x1230488f8 <col:3, col:10> col:10 struct virtqueue     |   | `-VarDecl 0x123048a68 <col:3, col:36> col:21 used vq 'struct virtqueue *' cinit     |   |   `-ArraySubscriptExpr 0x123048b80 <col:26, col:36> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x123048b50 <col:26, col:31> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x123048b08 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x123048ad0 <col:26> 'struct virtio_bluetooth *' lvalue Var 0x1230481b8 'vbt' 'struct virtio_bluetooth *'     |   |     `-ImplicitCastExpr 0x123048b68 <col:35> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x123048b30 <col:35> 'int' lvalue Var 0x123048478 'i' 'int'     |   |-DeclStmt 0x123048db8 <line:10:3, col:22>     |   | |-RecordDecl 0x123048bd0 <col:3, col:10> col:10 struct sk_buff     |   | `-VarDecl 0x123048d38 <col:3, col:19> col:19 used skb 'struct sk_buff *'     |   `-WhileStmt 0x121812f50 <line:12:3, line:13:17>     |     |-ParenExpr 0x123048fa0 <line:12:10, col:48> 'struct sk_buff *' contains-errors     |     | `-BinaryOperator 0x123048f80 <col:11, col:47> 'struct sk_buff *' contains-errors '='     |     |   |-DeclRefExpr 0x123048dd0 <col:11> 'struct sk_buff *' lvalue Var 0x123048d38 'skb' 'struct sk_buff *'     |     |   `-ImplicitCastExpr 0x123048f68 <col:17, col:47> 'struct sk_buff *' contains-errors <IntegralToPointer>     |     |     `-CallExpr 0x123048f28 <col:17, col:47> 'int' contains-errors     |     |       |-ImplicitCastExpr 0x123048f10 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     |       | `-DeclRefExpr 0x123048ed0 <col:17> 'int ()' Function 0x123048e18 'virtqueue_detach_unused_buf' 'int ()'     |     |       `-ImplicitCastExpr 0x123048f50 <col:45> 'struct virtqueue *' contains-errors <LValueToRValue>     |     |         `-DeclRefExpr 0x123048ef0 <col:45> 'struct virtqueue *' contains-errors lvalue Var 0x123048a68 'vq' 'struct virtqueue *'     |     `-CallExpr 0x121812f10 <line:13:4, col:17> 'int'     |       |-ImplicitCastExpr 0x121812ef8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x121812eb8 <col:4> 'int ()' Function 0x121812e00 'kfree_skb' 'int ()'     |       `-ImplicitCastExpr 0x121812f38 <col:14> 'struct sk_buff *' <LValueToRValue>     |         `-DeclRefExpr 0x121812ed8 <col:14> 'struct sk_buff *' lvalue Var 0x123048d38 'skb' 'struct sk_buff *'     `-ReturnStmt 0x121812ff0 <line:16:2, col:9>       `-IntegerLiteral 0x121812fd0 <col:9> 'int' 0 ","19428":"`-FunctionDecl 0x13602e088  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13602e188 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13602e1f0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13602e258 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13602e130 <<invalid sloc>> Implicit 882 ","19545":"`-FunctionDecl 0x15480ddf8  line:1:1 invalid gs_grab_mouse_reset 'int (int *)'   |-ParmVarDecl 0x15480dd28 <col:22, col:30> col:30 referenced invalid grab 'int *'   `-CompoundStmt 0x15480e148 <line:2:1, line:5:1>     |-BinaryOperator 0x15480dfd8 <line:3:9, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15480df38 <col:9, col:21> '<dependent type>' contains-errors lvalue ->mouse_grab_window     | | `-CXXDependentScopeMemberExpr 0x15480def0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x15480dec8 <col:9> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15480dea8 <col:9> 'int *' lvalue ParmVar 0x15480dd28 'grab' 'int *'     | `-RecoveryExpr 0x15480dfb8 <col:41> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x15480e128 <line:4:9, col:41> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x15480e088 <col:9, col:21> '<dependent type>' contains-errors lvalue ->mouse_grab_screen       | `-CXXDependentScopeMemberExpr 0x15480e040 <col:9, col:15> '<dependent type>' contains-errors lvalue ->priv       |   `-RecoveryExpr 0x15480e018 <col:9> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x15480dff8 <col:9> 'int *' lvalue ParmVar 0x15480dd28 'grab' 'int *'       `-RecoveryExpr 0x15480e108 <col:41> '<dependent type>' contains-errors lvalue ","19268":"`-FunctionDecl 0x1428faba8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x1428faad8 <col:14> col:14 oci_lob_load 'int'   `-CompoundStmt 0x142913e58 <line:2:1, line:30:1>     |-DeclStmt 0x1428fafd8 <line:5:2, col:21>     | `-VarDecl 0x1428faf38 <col:2, col:17> col:8 used buffer 'char *' cinit     |   `-RecoveryExpr 0x1428fafb8 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1429135a8 <line:8:2, line:12:2>     | |-UnaryOperator 0x1428fb048 <line:8:6, col:15> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1428fb028 <col:7, col:15> 'int'     | |   `-ImplicitCastExpr 0x1428fb010 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |     `-DeclRefExpr 0x1428faff0 <col:7> 'int ()' Function 0x1428fada8 'getThis' 'int ()'     | `-CompoundStmt 0x142913590 <col:18, line:12:2>     |   `-IfStmt 0x142913570 <line:9:3, line:11:3>     |     |-RecoveryExpr 0x142913528 <line:9:7, col:106> '_Bool' contains-errors     |     `-CompoundStmt 0x142913558 <col:115, line:11:3>     |       `-ReturnStmt 0x142913548 <line:10:4>     |-IfStmt 0x142913b28 <line:21:2, line:23:2>     | |-RecoveryExpr 0x142913af8 <line:21:6, col:72> '_Bool' contains-errors     | `-CompoundStmt 0x142913b18 <col:75, line:23:2>     `-IfStmt 0x142913e28 <line:24:2, line:29:2> has_else       |-RecoveryExpr 0x142913b68 <line:24:6, col:19> '_Bool' contains-errors       |-CompoundStmt 0x142913cc8 <col:22, line:26:2>       `-CompoundStmt 0x142913e10 <line:27:7, line:29:2>         `-CallExpr 0x142913df0 <line:28:3, col:23> 'int'           `-ImplicitCastExpr 0x142913dd8 <col:3> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x142913db8 <col:3> 'int ()' Function 0x142913d00 'RETURN_EMPTY_STRING' 'int ()' ","19223":"`-FunctionDecl 0x14800ddc0  line:1:20 invalid armv8pmu_pmcr_write 'void (int)' static inline   |-ParmVarDecl 0x14800dcf0 <col:40, col:44> col:44 referenced invalid val 'int'   `-CompoundStmt 0x14800e1a0 <line:2:1, line:6:1>     |-CompoundAssignOperator 0x14800df20 <line:3:2, col:9> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x14800de90 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14800de70 <col:2> 'int' lvalue ParmVar 0x14800dcf0 'val' 'int'     | `-RecoveryExpr 0x14800df00 <col:9> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14800e118 <line:4:2, col:6> 'int'       `-ImplicitCastExpr 0x14800e100 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x14800e0b0 <col:2> 'int ()' Function 0x14800dff8 'isb' 'int ()' ","19674":"`-FunctionDecl 0x158027438  line:1:13 referenced invalid vhost_vdpa_set_config_call 'long (struct vhost_vdpa *, int)' static   |-ParmVarDecl 0x15800e248 <col:40, col:59> col:59 used v 'struct vhost_vdpa *'   |-ParmVarDecl 0x15800e2e0 <col:62, col:66> col:66 invalid __user 'int'   `-CompoundStmt 0x15802a2c0 <line:2:1, line:24:1>     |-DeclStmt 0x158027668 <line:3:2, col:25>     | |-RecordDecl 0x1580274f0 <col:2, col:9> col:9 struct vdpa_callback     | `-VarDecl 0x1580275e8 <col:2, col:23> col:23 referenced invalid cb 'struct vdpa_callback'     |-DeclStmt 0x158027700 <line:4:2, col:8>     | `-VarDecl 0x158027698 <col:2, col:6> col:6 used fd 'int'     |-DeclStmt 0x158027908 <line:5:2, col:25>     | |-RecordDecl 0x158027718 <col:2, col:9> col:9 struct eventfd_ctx     | `-VarDecl 0x158027888 <col:2, col:22> col:22 used ctx 'struct eventfd_ctx *'     |-BinaryOperator 0x158027a28 <line:7:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x158027968 <col:2, col:5> '<dependent type>' contains-errors lvalue .callback     | | `-RecoveryExpr 0x158027940 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158027920 <col:2> 'struct vdpa_callback' lvalue Var 0x1580275e8 'cb' 'struct vdpa_callback'     | `-RecoveryExpr 0x158027a08 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x158027b38 <line:8:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x158027a90 <col:2, col:5> '<dependent type>' contains-errors lvalue .private     | | `-RecoveryExpr 0x158027a68 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158027a48 <col:2> 'struct vdpa_callback' lvalue Var 0x1580275e8 'cb' 'struct vdpa_callback'     | `-RecoveryExpr 0x158027b10 <col:15, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x158027ad8 <col:15> 'struct vhost_vdpa *' lvalue ParmVar 0x15800e248 'v' 'struct vhost_vdpa *'     |-IfStmt 0x158027ee8 <line:9:2, line:10:12>     | |-CallExpr 0x158027e08 <line:9:6, col:42> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x158027cb0 <col:6> 'int ()' Function 0x158027bf8 'copy_from_user' 'int ()'     | | |-UnaryOperator 0x158027d20 <col:21, col:22> 'int *' prefix '&' cannot overflow     | | | `-DeclRefExpr 0x158027cd0 <col:22> 'int' lvalue Var 0x158027698 'fd' 'int'     | | |-RecoveryExpr 0x158027de8 <col:26> '<dependent type>' contains-errors lvalue     | | `-UnaryExprOrTypeTraitExpr 0x158027d90 <col:32, col:41> 'unsigned long' sizeof     | |   `-ParenExpr 0x158027d70 <col:38, col:41> 'int' lvalue     | |     `-DeclRefExpr 0x158027d50 <col:39> 'int' lvalue Var 0x158027698 'fd' 'int' non_odr_use_unevaluated     | `-ReturnStmt 0x158027ed8 <line:10:3, col:12>     |   `-UnaryOperator 0x158027ec0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x158027ea8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x158027e88 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x158028280 <line:12:2, col:61> 'struct eventfd_ctx *' contains-errors '='     | |-DeclRefExpr 0x158027f08 <col:2> 'struct eventfd_ctx *' lvalue Var 0x158027888 'ctx' 'struct eventfd_ctx *'     | `-ConditionalOperator 0x158028250 <col:8, col:61> '<dependent type>' contains-errors     |   |-BinaryOperator 0x1580281b8 <col:8, col:14> 'int' contains-errors '=='     |   | |-DeclRefExpr 0x158027f28 <col:8> 'int' lvalue Var 0x158027698 'fd' 'int'     |   | `-RecoveryExpr 0x158028198 <col:14> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1580281d8 <col:34> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x158028210 <col:41, col:61> 'int'     |     |-ImplicitCastExpr 0x1580281f8 <col:41> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x158028078 <col:41> 'int ()' Function 0x158027fc0 'eventfd_ctx_fdget' 'int ()'     |     `-ImplicitCastExpr 0x158028238 <col:59> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x158028098 <col:59> 'int' lvalue Var 0x158027698 'fd' 'int'     |-CallExpr 0x158029a28 <line:13:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158028380 <col:2> 'int ()' Function 0x1580282c8 'swap' 'int ()'     | |-DeclRefExpr 0x1580283a0 <col:7> 'struct eventfd_ctx *' lvalue Var 0x158027888 'ctx' 'struct eventfd_ctx *'     | `-RecoveryExpr 0x158029a00 <col:12, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1580283c0 <col:12> 'struct vhost_vdpa *' lvalue ParmVar 0x15800e248 'v' 'struct vhost_vdpa *'     |-IfStmt 0x158029d60 <line:15:2, line:16:22>     | |-UnaryOperator 0x158029bd0 <line:15:6, col:25> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x158029b90 <col:7, col:25> 'int'     | |   |-ImplicitCastExpr 0x158029b78 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x158029b38 <col:7> 'int ()' Function 0x158029a80 'IS_ERR_OR_NULL' 'int ()'     | |   `-ImplicitCastExpr 0x158029bb8 <col:22> 'struct eventfd_ctx *' <LValueToRValue>     | |     `-DeclRefExpr 0x158029b58 <col:22> 'struct eventfd_ctx *' lvalue Var 0x158027888 'ctx' 'struct eventfd_ctx *'     | `-CallExpr 0x158029d20 <line:16:3, col:22> 'int'     |   |-ImplicitCastExpr 0x158029d08 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x158029cc8 <col:3> 'int ()' Function 0x158029c10 'eventfd_ctx_put' 'int ()'     |   `-ImplicitCastExpr 0x158029d48 <col:19> 'struct eventfd_ctx *' <LValueToRValue>     |     `-DeclRefExpr 0x158029ce8 <col:19> 'struct eventfd_ctx *' lvalue Var 0x158027888 'ctx' 'struct eventfd_ctx *'     |-IfStmt 0x15802a0a0 <line:18:2, line:19:31>     | |-CallExpr 0x158029ee0 <line:18:6, col:26> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x158029e60 <col:6> 'int ()' Function 0x158029da8 'IS_ERR' 'int ()'     | | `-RecoveryExpr 0x158029eb8 <col:13, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x158029e80 <col:13> 'struct vhost_vdpa *' lvalue ParmVar 0x15800e248 'v' 'struct vhost_vdpa *'     | `-ReturnStmt 0x15802a090 <line:19:3, col:31>     |   `-CallExpr 0x15802a068 <col:10, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x158029fe8 <col:10> 'int ()' Function 0x158029f30 'PTR_ERR' 'int ()'     |     `-RecoveryExpr 0x15802a040 <col:18, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15802a008 <col:18> 'struct vhost_vdpa *' lvalue ParmVar 0x15800e248 'v' 'struct vhost_vdpa *'     |-CallExpr 0x15802a248 <line:21:2, col:45> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x15802a168 <col:2, col:19> '<dependent type>' contains-errors lvalue ->set_config_cb     | | `-CXXDependentScopeMemberExpr 0x15802a120 <col:2, col:11> '<dependent type>' contains-errors lvalue ->config     | |   `-RecoveryExpr 0x15802a0f8 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15802a0c0 <col:2> 'struct vhost_vdpa *' lvalue ParmVar 0x15800e248 'v' 'struct vhost_vdpa *'     | |-RecoveryExpr 0x15802a1e8 <col:33, col:36> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15802a1b0 <col:33> 'struct vhost_vdpa *' lvalue ParmVar 0x15800e248 'v' 'struct vhost_vdpa *'     | `-UnaryOperator 0x15802a230 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15802a210 <col:43> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15802a2b0 <line:23:2, col:9>       `-ImplicitCastExpr 0x15802a298 <col:9> 'long' <IntegralCast>         `-IntegerLiteral 0x15802a278 <col:9> 'int' 0 ","20127":"`-FunctionDecl 0x151026d08  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x151026e08 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x151026db0 <<invalid sloc>> Implicit 873 ","19710":"`-FunctionDecl 0x12e80ddf0  line:1:13 invalid sig_print_starting 'void (int *)' static   |-ParmVarDecl 0x12e80dd28 <col:32, col:47> col:47 invalid dest 'int *'   `-CompoundStmt 0x12e827ab0 <line:2:1, line:17:1>     |-IfStmt 0x12e80df00 <line:5:2, line:6:3>     | |-RecoveryExpr 0x12e80ded0 <line:5:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12e80def0 <line:6:3>     |-IfStmt 0x12e80e158 <line:8:2, line:9:3>     | |-UnaryOperator 0x12e80e130 <line:8:6, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12e80e108 <col:7, col:33> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12e80e080 <col:7> 'int ()' Function 0x12e80dfc8 'IS_IRC_SERVER' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x12e80e0c0 <col:21, col:27> '<dependent type>' contains-errors lvalue ->server     | |     `-RecoveryExpr 0x12e80e0a0 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12e80e148 <line:9:3>     |-IfStmt 0x12e80e3a0 <line:11:2, line:12:3>     | |-UnaryOperator 0x12e80e378 <line:11:6, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12e80e348 <col:7, col:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12e80e258 <col:7> 'int ()' Function 0x12e80e1a0 'server_ischannel' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x12e80e298 <col:24, col:30> '<dependent type>' contains-errors lvalue ->server     | |   | `-RecoveryExpr 0x12e80e278 <col:24> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x12e80e300 <col:38, col:44> '<dependent type>' contains-errors lvalue ->target     | |     `-RecoveryExpr 0x12e80e2e0 <col:38> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12e80e390 <line:12:3>     `-IfStmt 0x12e827a90 <line:15:2, line:16:27>       |-BinaryOperator 0x12e8278a0 <line:15:6, col:38> 'int' contains-errors '&&'       | |-BinaryOperator 0x12e8277d8 <col:6, col:13> 'int' contains-errors '!='       | | |-RecoveryExpr 0x12e827798 <col:6> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x12e8277b8 <col:13> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x12e827880 <col:21, col:38> 'int' contains-errors '!='       |   |-CXXDependentScopeMemberExpr 0x12e827818 <col:21, col:26> '<dependent type>' contains-errors lvalue ->netjoins       |   | `-RecoveryExpr 0x12e8277f8 <col:21> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x12e827860 <col:38> '<dependent type>' contains-errors lvalue       `-CallExpr 0x12e827a60 <line:16:3, col:27> '<dependent type>' contains-errors         |-DeclRefExpr 0x12e8279a0 <col:3> 'int ()' Function 0x12e8278e8 'print_netjoins' 'int ()'         |-RecoveryExpr 0x12e827a20 <col:18> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12e827a40 <col:23> '<dependent type>' contains-errors lvalue ","19924":"`-FunctionDecl 0x11f80ddc8  line:1:20 invalid cmdid2name 'const char *(int)' static   |-ParmVarDecl 0x11f80dcf0 <col:31, col:35> col:35 invalid cmdid 'int'   `-CompoundStmt 0x11f828698 <line:2:1, line:111:1>     `-SwitchStmt 0x11f80deb0 <line:3:2, line:110:2>       |-ImplicitCastExpr 0x11f80de98 <line:3:10> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x11f80de78 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x11f8284e0 <col:17, line:110:2>         |-ReturnStmt 0x11f80df80 <line:5:3, col:10>         | `-ImplicitCastExpr 0x11f80df68 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80df50 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80df30 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80dff8 <line:7:3, col:10>         | `-ImplicitCastExpr 0x11f80dfe0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80dfc8 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80dfa8 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e070 <line:9:3, col:10>         | `-ImplicitCastExpr 0x11f80e058 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e040 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e020 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e0e8 <line:11:3, col:10>         | `-ImplicitCastExpr 0x11f80e0d0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e0b8 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e098 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e160 <line:13:3, col:10>         | `-ImplicitCastExpr 0x11f80e148 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e130 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e110 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e1d8 <line:15:3, col:10>         | `-ImplicitCastExpr 0x11f80e1c0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e1a8 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e188 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e250 <line:17:3, col:10>         | `-ImplicitCastExpr 0x11f80e238 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e220 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e200 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e2c8 <line:19:3, col:10>         | `-ImplicitCastExpr 0x11f80e2b0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e298 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e278 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e340 <line:21:3, col:10>         | `-ImplicitCastExpr 0x11f80e328 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e310 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e2f0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f80e3b8 <line:23:3, col:10>         | `-ImplicitCastExpr 0x11f80e3a0 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f80e388 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e368 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827430 <line:25:3, col:10>         | `-ImplicitCastExpr 0x11f827418 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827400 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f80e3e0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8274a8 <line:27:3, col:10>         | `-ImplicitCastExpr 0x11f827490 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827478 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827458 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827520 <line:29:3, col:10>         | `-ImplicitCastExpr 0x11f827508 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8274f0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8274d0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827598 <line:31:3, col:10>         | `-ImplicitCastExpr 0x11f827580 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827568 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827548 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827610 <line:33:3, col:10>         | `-ImplicitCastExpr 0x11f8275f8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8275e0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8275c0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827688 <line:35:3, col:10>         | `-ImplicitCastExpr 0x11f827670 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827658 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827638 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827700 <line:37:3, col:10>         | `-ImplicitCastExpr 0x11f8276e8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8276d0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8276b0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827778 <line:39:3, col:10>         | `-ImplicitCastExpr 0x11f827760 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827748 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827728 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8277f0 <line:41:3, col:10>         | `-ImplicitCastExpr 0x11f8277d8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8277c0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8277a0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827850 <line:43:3, col:10>         | `-ImplicitCastExpr 0x11f827838 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827820 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827800 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8278b0 <line:45:3, col:10>         | `-ImplicitCastExpr 0x11f827898 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827880 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827860 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827910 <line:47:3, col:10>         | `-ImplicitCastExpr 0x11f8278f8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8278e0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8278c0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827970 <line:49:3, col:10>         | `-ImplicitCastExpr 0x11f827958 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827940 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827920 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8279d0 <line:51:3, col:10>         | `-ImplicitCastExpr 0x11f8279b8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8279a0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827980 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827a30 <line:53:3, col:10>         | `-ImplicitCastExpr 0x11f827a18 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827a00 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8279e0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827a90 <line:55:3, col:10>         | `-ImplicitCastExpr 0x11f827a78 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827a60 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827a40 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827af0 <line:57:3, col:10>         | `-ImplicitCastExpr 0x11f827ad8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827ac0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827aa0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827b50 <line:59:3, col:10>         | `-ImplicitCastExpr 0x11f827b38 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827b20 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827b00 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827bb0 <line:61:3, col:10>         | `-ImplicitCastExpr 0x11f827b98 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827b80 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827b60 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827c10 <line:63:3, col:10>         | `-ImplicitCastExpr 0x11f827bf8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827be0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827bc0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827c70 <line:65:3, col:10>         | `-ImplicitCastExpr 0x11f827c58 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827c40 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827c20 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827cd0 <line:67:3, col:10>         | `-ImplicitCastExpr 0x11f827cb8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827ca0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827c80 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827d30 <line:69:3, col:10>         | `-ImplicitCastExpr 0x11f827d18 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827d00 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827ce0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827d90 <line:71:3, col:10>         | `-ImplicitCastExpr 0x11f827d78 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827d60 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827d40 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827df0 <line:73:3, col:10>         | `-ImplicitCastExpr 0x11f827dd8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827dc0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827da0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827e50 <line:75:3, col:10>         | `-ImplicitCastExpr 0x11f827e38 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827e20 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827e00 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827eb0 <line:77:3, col:10>         | `-ImplicitCastExpr 0x11f827e98 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827e80 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827e60 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827f10 <line:79:3, col:10>         | `-ImplicitCastExpr 0x11f827ef8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827ee0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827ec0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827f70 <line:81:3, col:10>         | `-ImplicitCastExpr 0x11f827f58 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827f40 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827f20 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f827fd0 <line:83:3, col:10>         | `-ImplicitCastExpr 0x11f827fb8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f827fa0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827f80 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828030 <line:85:3, col:10>         | `-ImplicitCastExpr 0x11f828018 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828000 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f827fe0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828090 <line:87:3, col:10>         | `-ImplicitCastExpr 0x11f828078 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828060 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828040 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8280f0 <line:89:3, col:10>         | `-ImplicitCastExpr 0x11f8280d8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8280c0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8280a0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828150 <line:91:3, col:10>         | `-ImplicitCastExpr 0x11f828138 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828120 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828100 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8281b0 <line:93:3, col:10>         | `-ImplicitCastExpr 0x11f828198 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828180 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828160 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828210 <line:95:3, col:10>         | `-ImplicitCastExpr 0x11f8281f8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8281e0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8281c0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828270 <line:97:3, col:10>         | `-ImplicitCastExpr 0x11f828258 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828240 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828220 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8282d0 <line:99:3, col:10>         | `-ImplicitCastExpr 0x11f8282b8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8282a0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828280 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828330 <line:101:3, col:10>         | `-ImplicitCastExpr 0x11f828318 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828300 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8282e0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828390 <line:103:3, col:10>         | `-ImplicitCastExpr 0x11f828378 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828360 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828340 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f8283f0 <line:105:3, col:10>         | `-ImplicitCastExpr 0x11f8283d8 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f8283c0 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f8283a0 <col:10> 'char[4]' lvalue \"STR\"         |-ReturnStmt 0x11f828450 <line:107:3, col:10>         | `-ImplicitCastExpr 0x11f828438 <col:10> 'const char *' <NoOp>         |   `-ImplicitCastExpr 0x11f828420 <col:10> 'char *' <ArrayToPointerDecay>         |     `-StringLiteral 0x11f828400 <col:10> 'char[4]' lvalue \"STR\"         `-DefaultStmt 0x11f8284c0 <line:108:2, line:109:10>           `-ReturnStmt 0x11f8284b0 <col:3, col:10>             `-ImplicitCastExpr 0x11f828498 <col:10> 'const char *' <NoOp>               `-ImplicitCastExpr 0x11f828480 <col:10> 'char *' <ArrayToPointerDecay>                 `-StringLiteral 0x11f828460 <col:10> 'char[4]' lvalue \"STR\" ","19182":"`-FunctionDecl 0x15a00ddf8  line:1:1 invalid popup_dialog_idle 'int (int *)'   |-ParmVarDecl 0x15a00dd28 <col:20, col:30> col:30 referenced invalid window 'int *'   `-CompoundStmt 0x15a029d98 <line:2:1, line:55:1>     |-DeclStmt 0x15a00df28 <line:4:9, col:22>     | `-VarDecl 0x15a00dec0 <col:9, col:19> col:19 used tmp 'char *'     |-CallExpr 0x15a00e178 <line:7:9, col:24> 'int'     | |-ImplicitCastExpr 0x15a00e160 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15a00e0b0 <col:9> 'int ()' Function 0x15a00dff8 'gs_debug' 'int ()'     | `-ImplicitCastExpr 0x15a00e1a0 <col:19> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x15a00e110 <col:19> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x15a028200 <line:9:9, col:56> 'char *' contains-errors '='     | |-DeclRefExpr 0x15a00e1b8 <col:9> 'char *' lvalue Var 0x15a00dec0 'tmp' 'char *'     | `-CallExpr 0x15a00e3c0 <col:15, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a00e2b8 <col:15> 'int ()' Function 0x15a00e200 'g_build_filename' 'int ()'     |   |-RecoveryExpr 0x15a00e380 <col:33> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x15a00e2f0 <col:45> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x15a00e3a0 <col:52> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a0284d0 <line:11:9, col:20> 'int'     | |-ImplicitCastExpr 0x15a0284b8 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15a028478 <col:9> 'int ()' Function 0x15a0283c0 'g_free' 'int ()'     | `-ImplicitCastExpr 0x15a0284f8 <col:17> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x15a028498 <col:17> 'char *' lvalue Var 0x15a00dec0 'tmp' 'char *'     |-IfStmt 0x15a028a50 <line:13:9, line:16:9>     | |-CallExpr 0x15a028630 <line:13:13, col:38> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a0285f0 <col:13> 'int ()' Function 0x15a028538 'is_logout_enabled' 'int ()'     | | `-RecoveryExpr 0x15a028610 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a028a38 <col:41, line:16:9>     |   `-CallExpr 0x15a028a00 <line:15:17, col:85> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15a0288a0 <col:17> 'int ()' Function 0x15a0287e8 'g_string_append_printf' 'int ()'     |     |-RecoveryExpr 0x15a0289e0 <col:41> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x15a0288d8 <col:50> 'char[4]' lvalue \"STR\"     |     `-CXXDependentScopeMemberExpr 0x15a028960 <col:57, col:71> '<dependent type>' contains-errors lvalue ->logout_command     |       `-CXXDependentScopeMemberExpr 0x15a028918 <col:57, col:65> '<dependent type>' contains-errors lvalue ->priv     |         `-RecoveryExpr 0x15a0288f8 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a028ef0 <line:18:9, line:24:9>     | |-CXXDependentScopeMemberExpr 0x15a028ad8 <line:18:13, col:27> '<dependent type>' contains-errors lvalue ->status_message     | | `-CXXDependentScopeMemberExpr 0x15a028a90 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x15a028a70 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a028ec8 <col:43, line:24:9>     |   |-DeclStmt 0x15a028ba0 <line:19:17, col:29>     |   | `-VarDecl 0x15a028b38 <col:17, col:23> col:23 used quoted 'char *'     |   |-BinaryOperator 0x15a028db0 <line:21:17, col:69> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x15a028bb8 <col:17> 'char *' lvalue Var 0x15a028b38 'quoted' 'char *'     |   | `-CallExpr 0x15a028d88 <col:26, col:69> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15a028cb8 <col:26> 'int ()' Function 0x15a028c00 'g_shell_quote' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x15a028d40 <col:41, col:55> '<dependent type>' contains-errors lvalue ->status_message     |   |     `-CXXDependentScopeMemberExpr 0x15a028cf8 <col:41, col:49> '<dependent type>' contains-errors lvalue ->priv     |   |       `-RecoveryExpr 0x15a028cd8 <col:41> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x15a028e88 <line:23:17, col:31> 'int'     |     |-ImplicitCastExpr 0x15a028e70 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15a028e30 <col:17> 'int ()' Function 0x15a0283c0 'g_free' 'int ()'     |     `-ImplicitCastExpr 0x15a028eb0 <col:25> 'char *' <LValueToRValue>     |       `-DeclRefExpr 0x15a028e50 <col:25> 'char *' lvalue Var 0x15a028b38 'quoted' 'char *'     |-IfStmt 0x15a0290a8 <line:26:9, line:28:9>     | |-CallExpr 0x15a029030 <line:26:13, col:43> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a028ff0 <col:13> 'int ()' Function 0x15a028f38 'is_user_switch_enabled' 'int ()'     | | `-RecoveryExpr 0x15a029010 <col:37> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a029098 <col:46, line:28:9>     |-IfStmt 0x15a029250 <line:30:9, line:32:9>     | |-CallExpr 0x15a0291e0 <line:30:13, col:31> 'int'     | | `-ImplicitCastExpr 0x15a0291c8 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x15a0291a8 <col:13> 'int ()' Function 0x15a0290f0 'gs_debug_enabled' 'int ()'     | `-CompoundStmt 0x15a029240 <col:34, line:32:9>     |-CallExpr 0x15a029420 <line:34:9, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a029350 <col:9> 'int ()' Function 0x15a029298 'gtk_widget_hide' 'int ()'     | `-CXXDependentScopeMemberExpr 0x15a0293d8 <col:26, col:40> '<dependent type>' contains-errors lvalue ->drawing_area     |   `-CXXDependentScopeMemberExpr 0x15a029390 <col:26, col:34> '<dependent type>' contains-errors lvalue ->priv     |     `-RecoveryExpr 0x15a029370 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a029568 <line:36:9, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a029528 <col:9> 'int ()' Function 0x15a029470 'gs_window_clear_to_background_pixmap' 'int ()'     | `-RecoveryExpr 0x15a029548 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a029b60 <line:46:9, line:48:9>     | |-RecoveryExpr 0x15a029af0 <line:46:13, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x15a029b50 <col:23, line:48:9>     `-BinaryOperator 0x15a029d78 <line:52:9, col:46> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x15a029d10 <col:9, col:23> '<dependent type>' contains-errors lvalue ->popup_dialog_idle_id       | `-CXXDependentScopeMemberExpr 0x15a029cc8 <col:9, col:17> '<dependent type>' contains-errors lvalue ->priv       |   `-RecoveryExpr 0x15a029ca0 <col:9> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x15a029c80 <col:9> 'int *' lvalue ParmVar 0x15a00dd28 'window' 'int *'       `-IntegerLiteral 0x15a029d58 <col:46> 'int' 0 ","19316":"`-FunctionDecl 0x1559099b0  col:2 implicit used vsnprintf 'int (char *, unsigned long, const char *, __builtin_va_list)' extern   |-ParmVarDecl 0x155909ab0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x155909b18 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x155909b80 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x155909be8 <<invalid sloc>> <invalid sloc> '__builtin_va_list':'char *'   |-BuiltinAttr 0x155909a58 <<invalid sloc>> Implicit 909   `-FormatAttr 0x155909c70 <col:2> Implicit printf 3 0 ","20190":"`-FunctionDecl 0x14d141800  line:1:13 invalid settings_changed 'void (struct btd_adapter *, int)' static   |-ParmVarDecl 0x14d128648 <col:30, col:50> col:50 used adapter 'struct btd_adapter *'   |-ParmVarDecl 0x14d1286e0 <col:59, col:68> col:68 invalid settings 'int'   `-CompoundStmt 0x14d143840 <line:2:1, line:49:1>     |-BinaryOperator 0x14d1419d8 <line:7:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d141990 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d141958 <col:2> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     | `-RecoveryExpr 0x14d1419b8 <col:30> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x14d141b20 <line:8:2, col:32> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x14d141a30 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d1419f8 <col:2> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     | `-UnaryOperator 0x14d141b08 <col:31, col:32> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x14d141af0 <col:32> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x14d141ad0 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d141d98 <line:10:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d141cb0 <col:2> 'int ()' Function 0x14d141bf8 'DBG' 'int ()'     | |-StringLiteral 0x14d141d10 <col:6> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x14d141d78 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14d141e68 <line:11:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d141dc8 <col:2> 'int ()' Function 0x14d141bf8 'DBG' 'int ()'     | |-StringLiteral 0x14d141de8 <col:6> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x14d141e40 <col:13, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14d141e08 <col:13> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     |-IfStmt 0x14d142e20 <line:13:2, line:29:2>     | |-BinaryOperator 0x14d141f28 <line:13:6, col:21> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14d141ee8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14d141f08 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d142e00 <col:43, line:29:2>     |   |-CallExpr 0x14d142178 <line:14:10, line:15:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14d142028 <line:14:10> 'int ()' Function 0x14d141f70 'g_dbus_emit_property_changed' 'int ()'     |   | |-RecoveryExpr 0x14d142138 <col:39> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14d142098 <col:50, col:59> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14d142060 <col:50> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     |   | |-RecoveryExpr 0x14d142158 <line:15:6> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x14d1420d8 <col:25> 'char[4]' lvalue \"STR\"     |   `-IfStmt 0x14d1427b8 <line:17:3, line:28:3> has_else     |     |-BinaryOperator 0x14d142270 <line:17:7, col:35> '<dependent type>' contains-errors '&'     |     | |-RecoveryExpr 0x14d1421f0 <col:7, col:16> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x14d1421b8 <col:7> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     |     | `-RecoveryExpr 0x14d142250 <col:35> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x14d142438 <col:57, line:19:3>     |     | `-CallExpr 0x14d1423f8 <line:18:4, col:25> 'int'     |     |   |-ImplicitCastExpr 0x14d1423e0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x14d142370 <col:4> 'int ()' Function 0x14d1422b8 'adapter_start' 'int ()'     |     |   `-ImplicitCastExpr 0x14d142420 <col:18> 'struct btd_adapter *' <LValueToRValue>     |     |     `-DeclRefExpr 0x14d142390 <col:18> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     |     `-CompoundStmt 0x14d142798 <line:19:10, line:28:3>     |       |-CallExpr 0x14d142588 <line:20:4, col:24> 'int'     |       | |-ImplicitCastExpr 0x14d142570 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x14d142530 <col:4> 'int ()' Function 0x14d142478 'adapter_stop' 'int ()'     |       | `-ImplicitCastExpr 0x14d1425b0 <col:17> 'struct btd_adapter *' <LValueToRValue>     |       |   `-DeclRefExpr 0x14d142550 <col:17> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     |       `-IfStmt 0x14d142778 <line:22:4, line:27:4>     |         |-RecoveryExpr 0x14d1425c8 <line:22:8> '_Bool' contains-errors     |         `-CompoundStmt 0x14d142760 <col:23, line:27:4>     |           `-IfStmt 0x14d142740 <line:25:5, line:26:15>     |             |-RecoveryExpr 0x14d1425e8 <line:25:9, col:10> '_Bool' contains-errors     |             `-CallExpr 0x14d142720 <line:26:6, col:15> 'int'     |               `-ImplicitCastExpr 0x14d142708 <col:6> 'int (*)()' <FunctionToPointerDecay>     |                 `-DeclRefExpr 0x14d1426e8 <col:6> 'int ()' Function 0x14d142630 'btd_exit' 'int ()'     |-IfStmt 0x14d1431b0 <line:31:2, line:34:35>     | |-RecoveryExpr 0x14d143018 <line:31:6, line:33:49> '_Bool' contains-errors     | `-CallExpr 0x14d143170 <line:34:3, col:35> 'int'     |   |-ImplicitCastExpr 0x14d143158 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d143118 <col:3> 'int ()' Function 0x14d143060 'trigger_passive_scanning' 'int ()'     |   `-ImplicitCastExpr 0x14d143198 <col:28> 'struct btd_adapter *' <LValueToRValue>     |     `-DeclRefExpr 0x14d143138 <col:28> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     |-IfStmt 0x14d1435b0 <line:36:2, line:41:2>     | |-RecoveryExpr 0x14d1431d0 <line:36:6, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x14d143590 <col:48, line:41:2>     |   |-CallExpr 0x14d1433c8 <line:39:3, col:29> 'int'     |   | |-ImplicitCastExpr 0x14d1433b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d143370 <col:3> 'int ()' Function 0x14d1432b8 'store_adapter_info' 'int ()'     |   | `-ImplicitCastExpr 0x14d1433f0 <col:22> 'struct btd_adapter *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14d143390 <col:22> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     |   `-CallExpr 0x14d143568 <line:40:3, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d1434e8 <col:3> 'int ()' Function 0x14d143430 'btd_adv_manager_refresh' 'int ()'     |     `-RecoveryExpr 0x14d143540 <col:27, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14d143508 <col:27> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *'     `-IfStmt 0x14d143820 <line:43:2, line:48:2>       |-RecoveryExpr 0x14d1435d0 <line:43:6, col:21> '_Bool' contains-errors       `-CompoundStmt 0x14d143808 <col:44, line:48:2>         `-CallExpr 0x14d1437c8 <line:47:3, col:35> 'int'           |-ImplicitCastExpr 0x14d1437b0 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14d143770 <col:3> 'int ()' Function 0x14d1436b8 'trigger_pairable_timeout' 'int ()'           `-ImplicitCastExpr 0x14d1437f0 <col:28> 'struct btd_adapter *' <LValueToRValue>             `-DeclRefExpr 0x14d143790 <col:28> 'struct btd_adapter *' lvalue ParmVar 0x14d128648 'adapter' 'struct btd_adapter *' ","20030":"`-FunctionDecl 0x10502a8f8  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x10502ba00 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x10502ba68 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x10502bad0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x10502a9a0 <<invalid sloc>> Implicit 882 ","19805":"`-FunctionDecl 0x153928168  line:2:9 invalid stvi_box_new 'int *()'   `-CompoundStmt 0x153928478 <line:3:1, line:5:23>     `-CallExpr 0x153928430 <line:4:2, col:62> '<dependent type>' contains-errors       |-DeclRefExpr 0x153928370 <col:2> 'int ()' Function 0x1539282b8 'ISOM_DECL_BOX_ALLOC' 'int ()'       |-RecoveryExpr 0x1539283f0 <col:22> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x153928410 <col:41> '<dependent type>' contains-errors lvalue ","19234":"`-FunctionDecl 0x158941a88  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x158941b88 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x158941bf0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x158941c58 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x158941b30 <<invalid sloc>> Implicit 900 ","19985":"`-FunctionDecl 0x13d128750  line:1:13 __map_bio 'void (struct dm_target_io *)' static   |-ParmVarDecl 0x13d128648 <col:23, col:44> col:44 used tio 'struct dm_target_io *'   `-CompoundStmt 0x13d143590 <line:2:1, line:40:1>     |-DeclStmt 0x13d140ac8 <line:3:2, col:7>     | `-VarDecl 0x13d140a60 <col:2, col:6> col:6 used r 'int'     |-DeclStmt 0x13d140c78 <line:5:2, col:21>     | |-RecordDecl 0x13d140af8 <col:2, col:9> col:9 struct dm_offload     | `-VarDecl 0x13d140bf8 <col:2, col:20> col:20 invalid o 'struct dm_offload'     |-DeclStmt 0x13d140ef0 <line:6:2, col:33>     | |-RecordDecl 0x13d140c90 <col:2, col:9> col:9 struct bio     | `-VarDecl 0x13d140df8 <col:2, col:28> col:14 used clone 'struct bio *' cinit     |   `-UnaryOperator 0x13d140ec0 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13d140e98 <col:23, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d140e60 <col:23> 'struct dm_target_io *' lvalue ParmVar 0x13d128648 'tio' 'struct dm_target_io *'     |-DeclStmt 0x13d141158 <line:7:2, col:32>     | |-RecordDecl 0x13d140f08 <col:2, col:9> col:9 struct dm_target     | `-VarDecl 0x13d141078 <col:2, col:30> col:20 used ti 'struct dm_target *' cinit     |   `-RecoveryExpr 0x13d141118 <col:25, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d1410e0 <col:25> 'struct dm_target_io *' lvalue ParmVar 0x13d128648 'tio' 'struct dm_target_io *'     |-BinaryOperator 0x13d141228 <line:9:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13d1411a8 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d141170 <col:2> 'struct bio *' contains-errors lvalue Var 0x13d140df8 'clone' 'struct bio *'     | `-RecoveryExpr 0x13d141208 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d141440 <line:12:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d141360 <col:2> 'int ()' Function 0x13d1412a8 'atomic_inc' 'int ()'     | `-UnaryOperator 0x13d141428 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d1413e0 <col:14, col:23> '<dependent type>' contains-errors lvalue ->io_count     |     `-RecoveryExpr 0x13d1413b8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d141380 <col:14> 'struct dm_target_io *' lvalue ParmVar 0x13d128648 'tio' 'struct dm_target_io *'     |-CallExpr 0x13d141648 <line:15:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d1415f0 <col:2> 'int ()' Function 0x13d141538 'dm_offload_start' 'int ()'     | `-UnaryOperator 0x13d141630 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d141610 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d1417a8 <line:16:2, col:29> 'int' contains-errors '='     | |-DeclRefExpr 0x13d141670 <col:2> 'int' lvalue Var 0x13d140a60 'r' 'int'     | `-CallExpr 0x13d141778 <col:6, col:29> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x13d1416f0 <col:6, col:16> '<dependent type>' contains-errors lvalue ->map     |   | `-RecoveryExpr 0x13d1416c8 <col:6, col:10> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13d141690 <col:6> 'struct dm_target *' contains-errors lvalue Var 0x13d141078 'ti' 'struct dm_target *'     |   |-DeclRefExpr 0x13d141738 <col:20> 'struct dm_target *' contains-errors lvalue Var 0x13d141078 'ti' 'struct dm_target *'     |   `-DeclRefExpr 0x13d141758 <col:24> 'struct bio *' contains-errors lvalue Var 0x13d140df8 'clone' 'struct bio *'     |-CallExpr 0x13d141900 <line:17:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d1418a8 <col:2> 'int ()' Function 0x13d1417f0 'dm_offload_end' 'int ()'     | `-UnaryOperator 0x13d1418e8 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d1418c8 <col:18> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x13d141960 <line:19:2, line:39:2>       |-ImplicitCastExpr 0x13d141948 <line:19:10> 'int' <LValueToRValue>       | `-DeclRefExpr 0x13d141928 <col:10> 'int' lvalue Var 0x13d140a60 'r' 'int'       `-CompoundStmt 0x13d143530 <col:13, line:39:2>         |-BreakStmt 0x13d1419a0 <line:21:3>         |-CallExpr 0x13d142be8 <line:24:3, line:25:40> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13d1428b8 <line:24:3> 'int ()' Function 0x13d142800 'trace_block_bio_remap' 'int ()'         | |-CXXDependentScopeMemberExpr 0x13d142938 <col:25, col:41> '<dependent type>' contains-errors lvalue ->queue         | | `-RecoveryExpr 0x13d142910 <col:25, col:32> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x13d1428d8 <col:25> 'struct bio *' contains-errors lvalue Var 0x13d140df8 'clone' 'struct bio *'         | |-DeclRefExpr 0x13d142980 <col:48> 'struct bio *' contains-errors lvalue Var 0x13d140df8 'clone' 'struct bio *'         | |-CallExpr 0x13d142b48 <line:25:11, col:31> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x13d142a80 <col:11> 'int ()' Function 0x13d1429c8 'bio_dev' 'int ()'         | | `-CXXDependentScopeMemberExpr 0x13d142b00 <col:19, col:28> '<dependent type>' contains-errors lvalue ->bio         | |   `-RecoveryExpr 0x13d142ad8 <col:19, col:24> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x13d142aa0 <col:19> 'struct dm_target_io *' lvalue ParmVar 0x13d128648 'tio' 'struct dm_target_io *'         | `-RecoveryExpr 0x13d142bc8 <col:34> '<dependent type>' contains-errors lvalue         |-CallExpr 0x13d142d98 <line:26:3, col:29> 'int' contains-errors         | |-ImplicitCastExpr 0x13d142d80 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x13d142d08 <col:3> 'int ()' Function 0x13d142c50 'generic_make_request' 'int ()'         | `-ImplicitCastExpr 0x13d142dc0 <col:24> 'struct bio *' contains-errors <LValueToRValue>         |   `-DeclRefExpr 0x13d142d28 <col:24> 'struct bio *' contains-errors lvalue Var 0x13d140df8 'clone' 'struct bio *'         |-BreakStmt 0x13d142dd8 <line:27:3>         |-CallExpr 0x13d143078 <line:30:3, col:15> 'int'         | |-ImplicitCastExpr 0x13d143060 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x13d143020 <col:3> 'int ()' Function 0x13d142f68 'free_tio' 'int ()'         | `-ImplicitCastExpr 0x13d1430a0 <col:12> 'struct dm_target_io *' <LValueToRValue>         |   `-DeclRefExpr 0x13d143040 <col:12> 'struct dm_target_io *' lvalue ParmVar 0x13d128648 'tio' 'struct dm_target_io *'         |-BreakStmt 0x13d1430b8 <line:31:3>         |-CallExpr 0x13d143198 <line:34:3, col:15> 'int'         | |-ImplicitCastExpr 0x13d143180 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x13d143140 <col:3> 'int ()' Function 0x13d142f68 'free_tio' 'int ()'         | `-ImplicitCastExpr 0x13d1431c0 <col:12> 'struct dm_target_io *' <LValueToRValue>         |   `-DeclRefExpr 0x13d143160 <col:12> 'struct dm_target_io *' lvalue ParmVar 0x13d128648 'tio' 'struct dm_target_io *'         |-BreakStmt 0x13d1431d8 <line:35:3>         |-DefaultStmt 0x13d1433d8 <line:36:2, line:37:18>         | `-CallExpr 0x13d143378 <col:3, col:18> 'int'         |   |-ImplicitCastExpr 0x13d143360 <col:3> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x13d1432c0 <col:3> 'int ()' Function 0x13d143208 'DMWARN' 'int ()'         |   |-ImplicitCastExpr 0x13d1433a8 <col:10> 'char *' <ArrayToPointerDecay>         |   | `-StringLiteral 0x13d143320 <col:10> 'char[4]' lvalue \"STR\"         |   `-ImplicitCastExpr 0x13d1433c0 <col:17> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x13d143340 <col:17> 'int' lvalue Var 0x13d140a60 'r' 'int'         `-CallExpr 0x13d143510 <line:38:3, col:7> 'int'           `-ImplicitCastExpr 0x13d1434f8 <col:3> 'int (*)()' <FunctionToPointerDecay>             `-DeclRefExpr 0x13d1434d8 <col:3> 'int ()' Function 0x13d143420 'BUG' 'int ()' ","19840":"`-FunctionDecl 0x12d10ba08  line:1:6 invalid format_go_output 'int (const int)'   |-ParmVarDecl 0x12d10b8f0 <col:23, <invalid sloc>> col:35 invalid 'const int'   `-CompoundStmt 0x12d125150 <col:48, line:10:1>     |-DeclStmt 0x12d10bbd8 <line:2:3, col:43>     | `-VarDecl 0x12d10bad0 <col:3, col:16> col:16 invalid command 'const int'     |-IfStmt 0x12d10bec0 <line:4:3, line:6:3>     | |-BinaryOperator 0x12d10be40 <line:4:7, col:34> 'int' contains-errors '=='     | | |-CallExpr 0x12d10bdf8 <col:7, col:29> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12d10bd50 <col:7> 'int ()' Function 0x12d10bc98 'system' 'int ()'     | | | `-CallExpr 0x12d10bdd8 <col:14, col:28> '<dependent type>' contains-errors     | | |   `-CXXDependentScopeMemberExpr 0x12d10bd90 <col:14, col:22> '<dependent type>' contains-errors lvalue .c_str     | | |     `-RecoveryExpr 0x12d10bd70 <col:14> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12d10be20 <col:34> 'int' 0     | `-CompoundStmt 0x12d10bea8 <col:37, line:6:3>     |   `-ReturnStmt 0x12d10be98 <line:5:5, col:12>     |     `-RecoveryExpr 0x12d10be78 <col:12> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12d125100 <line:8:3, col:41> '<dependent type>' contains-errors       |-DeclRefExpr 0x12d10bfc0 <col:3> 'int ()' Function 0x12d10bf08 'fprintf' 'int ()'       |-RecoveryExpr 0x12d1250e0 <col:11> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x12d125000 <col:19> 'char[4]' lvalue \"STR\"       `-CallExpr 0x12d125088 <col:26, col:40> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x12d125040 <col:26, col:34> '<dependent type>' contains-errors lvalue .c_str           `-RecoveryExpr 0x12d125020 <col:26> '<dependent type>' contains-errors lvalue ","20100":"`-FunctionDecl 0x11e9402a8  col:17 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x11e9403a8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11e940410 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x11e940478 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11e940350 <<invalid sloc>> Implicit 882 ","19972":"`-FunctionDecl 0x159922740  col:13 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x159922840 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1599228a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x159922910 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x1599227e8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x159922990 <col:13> Implicit printf 3 4 ","19709":"`-FunctionDecl 0x14b80de88  line:1:1 invalid vte_sequence_handler_device_status_report 'int (int *, int *)'   |-ParmVarDecl 0x14b80dd28 <col:44, col:57> col:57 invalid terminal 'int *'   |-ParmVarDecl 0x14b80dda8 <col:67, col:80> col:80 invalid params 'int *'   `-CompoundStmt 0x15b923ca8 <line:2:1, line:33:1>     |-DeclStmt 0x14b80dff0 <line:5:2, col:12>     | `-VarDecl 0x14b80df88 <col:2, col:7> col:7 used param 'long'     |-DeclStmt 0x14b80e118 <line:6:2, col:15>     | `-VarDecl 0x14b80e0b0 <col:2, col:14> col:7 used buf 'char[128]'     `-IfStmt 0x15b923c88 <line:10:2, line:32:2>       |-RecoveryExpr 0x14b80e300 <line:10:6, col:47> '_Bool' contains-errors       `-CompoundStmt 0x15b923c70 <col:50, line:32:2>         `-IfStmt 0x15b923c50 <line:12:3, line:31:3>           |-CallExpr 0x15b9234a8 <line:12:7, col:31> '<dependent type>' contains-errors           | |-DeclRefExpr 0x15b923428 <col:7> 'int ()' Function 0x15b923370 'G_VALUE_HOLDS_LONG' 'int ()'           | `-RecoveryExpr 0x15b923488 <col:26> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x15b923c30 <col:34, line:31:3>             |-BinaryOperator 0x15b923698 <line:13:4, col:34> 'long' contains-errors '='             | |-DeclRefExpr 0x15b9234d0 <col:4> 'long' lvalue Var 0x14b80df88 'param' 'long'             | `-CallExpr 0x15b923670 <col:12, col:34> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x15b9235d0 <col:12> 'int ()' Function 0x15b923518 'g_value_get_long' 'int ()'             |   `-RecoveryExpr 0x15b923650 <col:29> '<dependent type>' contains-errors lvalue             `-SwitchStmt 0x15b9236f0 <line:14:4, line:30:4>               |-ImplicitCastExpr 0x15b9236d8 <line:14:12> 'long' <LValueToRValue>               | `-DeclRefExpr 0x15b9236b8 <col:12> 'long' lvalue Var 0x14b80df88 'param' 'long'               `-CompoundStmt 0x15b923bf0 <col:19, line:30:4>                 |-CaseStmt 0x15b923768 <line:15:4, <invalid sloc>>                 | |-ImplicitCastExpr 0x15b923750 <col:9> 'long' <IntegralCast>                 | | `-ConstantExpr 0x15b923738 <col:9> 'int'                 | |   `-IntegerLiteral 0x15b923718 <col:9> 'int' 5                 | `-NullStmt 0x15b9238c8 <<invalid sloc>>                 |-BreakStmt 0x15b9238d0 <line:18:5>                 |-CaseStmt 0x15b923928 <line:19:4, <invalid sloc>>                 | |-ImplicitCastExpr 0x15b923910 <col:9> 'long' <IntegralCast>                 | | `-ConstantExpr 0x15b9238f8 <col:9> 'int'                 | |   `-IntegerLiteral 0x15b9238d8 <col:9> 'int' 6                 | `-NullStmt 0x15b923ae8 <<invalid sloc>>                 |-CallExpr 0x15b923b88 <line:26:5, col:46> '<dependent type>' contains-errors                 | |-DeclRefExpr 0x15b923af0 <col:5> 'int ()' Function 0x15b9237b8 'vte_terminal_feed_child' 'int ()'                 | |-RecoveryExpr 0x15b923b10 <col:29> '<dependent type>' contains-errors lvalue                 | |-DeclRefExpr 0x15b923b30 <col:39> 'char[128]' lvalue Var 0x14b80e0b0 'buf' 'char[128]'                 | `-UnaryOperator 0x15b923b70 <col:44, col:45> 'int' prefix '-'                 |   `-IntegerLiteral 0x15b923b50 <col:45> 'int' 1                 |-BreakStmt 0x15b923bc0 <line:27:5>                 `-DefaultStmt 0x15b923bd0 <line:28:4, line:29:5>                   `-BreakStmt 0x15b923bc8 <col:5> ","19696":"`-FunctionDecl 0x13f827328  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13f827428 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13f8273d0 <<invalid sloc>> Implicit 873 ","19669":"`-FunctionDecl 0x134128758  line:1:1 ppp_unregister_channel 'int (struct ppp_channel *)'   |-ParmVarDecl 0x134128648 <col:24, col:44> col:44 used chan 'struct ppp_channel *'   `-CompoundStmt 0x1360092f0 <line:2:1, line:28:1>     |-DeclStmt 0x134140c98 <line:3:2, col:33>     | |-RecordDecl 0x134140a50 <col:2, col:9> col:9 struct channel     | `-VarDecl 0x134140bb8 <col:2, col:30> col:18 used pch 'struct channel *' cinit     |   `-RecoveryExpr 0x134140c58 <col:24, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134140c20 <col:24> 'struct ppp_channel *' lvalue ParmVar 0x134128648 'chan' 'struct ppp_channel *'     |-DeclStmt 0x134140e98 <line:4:2, col:20>     | |-RecordDecl 0x134140cb0 <col:2, col:9> col:9 struct ppp_net     | `-VarDecl 0x134140e18 <col:2, col:18> col:18 used pn 'struct ppp_net *'     |-IfStmt 0x134140f10 <line:6:2, line:7:3>     | |-UnaryOperator 0x134140ee8 <line:6:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x134140ed0 <col:7> 'struct channel *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x134140eb0 <col:7> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     | `-ReturnStmt 0x134140f00 <line:7:3>     |-BinaryOperator 0x134141000 <line:9:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x134140f68 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x134140f30 <col:2> 'struct ppp_channel *' lvalue ParmVar 0x134128648 'chan' 'struct ppp_channel *'     | `-RecoveryExpr 0x134140fe0 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1341411c8 <line:12:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134141130 <col:2> 'int ()' Function 0x134141078 'down_write' 'int ()'     | `-UnaryOperator 0x1341411b0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134141188 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134141150 <col:14> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     |-CallExpr 0x134141368 <line:13:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1341412d0 <col:2> 'int ()' Function 0x134141218 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x134141350 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134141328 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1341412f0 <col:16> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     |-BinaryOperator 0x134141448 <line:14:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1341413c8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x134141390 <col:2> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     | `-RecoveryExpr 0x134141428 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1341415e0 <line:15:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134141548 <col:2> 'int ()' Function 0x134141490 'spin_unlock_bh' 'int ()'     | `-UnaryOperator 0x1341415c8 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1341415a0 <col:18, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134141568 <col:18> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     |-CallExpr 0x134141780 <line:16:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1341416e8 <col:2> 'int ()' Function 0x134141630 'up_write' 'int ()'     | `-UnaryOperator 0x134141768 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134141740 <col:12, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134141708 <col:12> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     |-CallExpr 0x134141918 <line:17:2, col:28> 'int' contains-errors     | |-ImplicitCastExpr 0x134141900 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x134141888 <col:2> 'int ()' Function 0x1341417d0 'ppp_disconnect_channel' 'int ()'     | `-ImplicitCastExpr 0x134141940 <col:25> 'struct channel *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x1341418a8 <col:25> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     |-BinaryOperator 0x136008960 <line:19:2, col:31> 'struct ppp_net *' contains-errors '='     | |-DeclRefExpr 0x134141958 <col:2> 'struct ppp_net *' lvalue Var 0x134140e18 'pn' 'struct ppp_net *'     | `-CallExpr 0x136008938 <col:7, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1360088b8 <col:7> 'int ()' Function 0x136008800 'ppp_pernet' 'int ()'     |   `-RecoveryExpr 0x136008910 <col:18, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1360088d8 <col:18> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     |-CallExpr 0x136008a18 <line:20:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136008980 <col:2> 'int ()' Function 0x134141218 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x136008a00 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1360089d8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1360089a0 <col:16> 'struct ppp_net *' lvalue Var 0x134140e18 'pn' 'struct ppp_net *'     |-CallExpr 0x136008bb8 <line:21:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136008b20 <col:2> 'int ()' Function 0x136008a68 'list_del' 'int ()'     | `-UnaryOperator 0x136008ba0 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136008b78 <col:12, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136008b40 <col:12> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     |-CallExpr 0x136008c78 <line:22:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136008be0 <col:2> 'int ()' Function 0x134141490 'spin_unlock_bh' 'int ()'     | `-UnaryOperator 0x136008c60 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x136008c38 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136008c00 <col:18> 'struct ppp_net *' lvalue Var 0x134140e18 'pn' 'struct ppp_net *'     |-BinaryOperator 0x136008d68 <line:24:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x136008d00 <col:2, col:12> '<dependent type>' contains-errors lvalue .dead     | | `-RecoveryExpr 0x136008cd8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136008ca0 <col:2> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     | `-IntegerLiteral 0x136008d48 <col:19> 'int' 1     |-CallExpr 0x136008f48 <line:25:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136008e68 <col:2> 'int ()' Function 0x136008db0 'wake_up_interruptible' 'int ()'     | `-UnaryOperator 0x136008f30 <col:24, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x136008ee8 <col:25, col:35> '<dependent type>' contains-errors lvalue .rwait     |     `-RecoveryExpr 0x136008ec0 <col:25, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x136008e88 <col:25> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'     `-IfStmt 0x1360092d0 <line:26:2, line:27:26>       |-CallExpr 0x136009130 <line:26:6, col:43> '<dependent type>' contains-errors       | |-DeclRefExpr 0x136009050 <col:6> 'int ()' Function 0x136008f98 'atomic_dec_and_test' 'int ()'       | `-UnaryOperator 0x136009118 <col:26, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-CXXDependentScopeMemberExpr 0x1360090d0 <col:27, col:37> '<dependent type>' contains-errors lvalue .refcnt       |     `-RecoveryExpr 0x1360090a8 <col:27, col:32> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x136009070 <col:27> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *'       `-CallExpr 0x136009290 <line:27:3, col:26> 'int' contains-errors         |-ImplicitCastExpr 0x136009278 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x136009238 <col:3> 'int ()' Function 0x136009180 'ppp_destroy_channel' 'int ()'         `-ImplicitCastExpr 0x1360092b8 <col:23> 'struct channel *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x136009258 <col:23> 'struct channel *' contains-errors lvalue Var 0x134140bb8 'pch' 'struct channel *' ","20125":"`-FunctionDecl 0x12293ae10  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12293af10 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12293aeb8 <<invalid sloc>> Implicit 873 ","19779":"`-FunctionDecl 0x13f83bc58  line:1:1 invalid _equalTruncateStmt 'int (const int *, const int *)'   |-ParmVarDecl 0x13f83baf0 <col:20, col:40> col:40 invalid a 'const int *'   |-ParmVarDecl 0x13f83bb70 <col:43, col:63> col:63 invalid b 'const int *'   `-CompoundStmt 0x13f83c190 <line:2:1, line:8:1>     |-CallExpr 0x13f83bef0 <line:3:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f83be70 <col:2> 'int ()' Function 0x13f83bdb8 'COMPARE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x13f83bed0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f83c078 <line:4:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f83bff8 <col:2> 'int ()' Function 0x13f83bf40 'COMPARE_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x13f83c058 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f83c120 <line:5:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f83c0a0 <col:2> 'int ()' Function 0x13f83bf40 'COMPARE_SCALAR_FIELD' 'int ()'     | `-RecoveryExpr 0x13f83c100 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f83c180 <line:7:2, col:9>       `-RecoveryExpr 0x13f83c160 <col:9> '<dependent type>' contains-errors lvalue ","20060":"`-FunctionDecl 0x1428279c0  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x142827ac0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x142827b28 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x142827b90 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x142827a68 <<invalid sloc>> Implicit 900 ","20051":"`-FunctionDecl 0x130928750  line:1:13 atif_drop_device 'void (struct net_device *)' static   |-ParmVarDecl 0x130928648 <col:30, col:49> col:49 used dev 'struct net_device *'   `-CompoundStmt 0x130942990 <line:2:1, line:17:1>     |-DeclStmt 0x130940d18 <line:3:2, col:48>     | |-RecordDecl 0x130940a48 <col:2, col:9> col:9 struct atalk_iface     | `-VarDecl 0x130940c18 <col:2, col:32> col:23 used iface 'struct atalk_iface **' cinit     |   `-UnaryOperator 0x130940ce8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x130940cc8 <col:32> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x130940e20 <line:4:2, col:25>     | `-VarDecl 0x130940db8 <col:2, col:22> col:22 used tmp 'struct atalk_iface *'     |-CallExpr 0x130941000 <line:6:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130940f50 <col:2> 'int ()' Function 0x130940e98 'write_lock_bh' 'int ()'     | `-UnaryOperator 0x130940fe8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x130940fc8 <col:17> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x130941918 <line:7:2, line:15:2>     | |-BinaryOperator 0x130941258 <line:7:9, col:27> 'int' contains-errors '!='     | | |-ParenExpr 0x130941218 <col:9, col:22> 'struct atalk_iface *' contains-errors     | | | `-BinaryOperator 0x1309411f8 <col:10, col:17> 'struct atalk_iface *' contains-errors '='     | | |   |-DeclRefExpr 0x130941028 <col:10> 'struct atalk_iface *' lvalue Var 0x130940db8 'tmp' 'struct atalk_iface *'     | | |   `-ImplicitCastExpr 0x1309411e0 <col:16, col:17> 'struct atalk_iface *' contains-errors <LValueToRValue>     | | |     `-UnaryOperator 0x1309411c8 <col:16, col:17> 'struct atalk_iface *' contains-errors lvalue prefix '*' cannot overflow     | | |       `-ImplicitCastExpr 0x1309411b0 <col:17> 'struct atalk_iface **' contains-errors <LValueToRValue>     | | |         `-DeclRefExpr 0x130941048 <col:17> 'struct atalk_iface **' contains-errors lvalue Var 0x130940c18 'iface' 'struct atalk_iface **'     | | `-RecoveryExpr 0x130941238 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x130941900 <col:33, line:15:2>     |   `-IfStmt 0x1309418d0 <line:8:3, line:14:18> has_else     |     |-BinaryOperator 0x1309412f8 <line:8:7, col:19> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x1309412b0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x130941278 <col:7> 'struct atalk_iface *' lvalue Var 0x130940db8 'tmp' 'struct atalk_iface *'     |     | `-DeclRefExpr 0x1309412d8 <col:19> 'struct net_device *' lvalue ParmVar 0x130928648 'dev' 'struct net_device *'     |     |-CompoundStmt 0x1309417e8 <col:24, line:13:3>     |     | |-BinaryOperator 0x1309413c8 <line:9:4, col:18> 'struct atalk_iface *' contains-errors '='     |     | | |-UnaryOperator 0x130941350 <col:4, col:5> 'struct atalk_iface *' contains-errors lvalue prefix '*' cannot overflow     |     | | | `-ImplicitCastExpr 0x130941338 <col:5> 'struct atalk_iface **' contains-errors <LValueToRValue>     |     | | |   `-DeclRefExpr 0x130941318 <col:5> 'struct atalk_iface **' contains-errors lvalue Var 0x130940c18 'iface' 'struct atalk_iface **'     |     | | `-RecoveryExpr 0x1309413a0 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     | |   `-DeclRefExpr 0x130941368 <col:13> 'struct atalk_iface *' lvalue Var 0x130940db8 'tmp' 'struct atalk_iface *'     |     | |-CallExpr 0x130941558 <line:10:4, col:15> 'int'     |     | | |-ImplicitCastExpr 0x130941540 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | | | `-DeclRefExpr 0x1309414c8 <col:4> 'int ()' Function 0x130941410 'dev_put' 'int ()'     |     | | `-ImplicitCastExpr 0x130941580 <col:12> 'struct net_device *' <LValueToRValue>     |     | |   `-DeclRefExpr 0x1309414e8 <col:12> 'struct net_device *' lvalue ParmVar 0x130928648 'dev' 'struct net_device *'     |     | |-CallExpr 0x1309416d0 <line:11:4, col:13> 'int'     |     | | |-ImplicitCastExpr 0x1309416b8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | | | `-DeclRefExpr 0x130941678 <col:4> 'int ()' Function 0x1309415c0 'kfree' 'int ()'     |     | | `-ImplicitCastExpr 0x1309416f8 <col:10> 'struct atalk_iface *' <LValueToRValue>     |     | |   `-DeclRefExpr 0x130941698 <col:10> 'struct atalk_iface *' lvalue Var 0x130940db8 'tmp' 'struct atalk_iface *'     |     | `-BinaryOperator 0x1309417c8 <line:12:4, col:21> '<dependent type>' contains-errors '='     |     |   |-RecoveryExpr 0x130941748 <col:4, col:9> '<dependent type>' contains-errors lvalue     |     |   | `-DeclRefExpr 0x130941710 <col:4> 'struct net_device *' lvalue ParmVar 0x130928648 'dev' 'struct net_device *'     |     |   `-RecoveryExpr 0x1309417a8 <col:21> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x1309418b0 <line:14:4, col:18> 'struct atalk_iface **' contains-errors '='     |       |-DeclRefExpr 0x130941818 <col:4> 'struct atalk_iface **' contains-errors lvalue Var 0x130940c18 'iface' 'struct atalk_iface **'     |       `-UnaryOperator 0x130941898 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |         `-RecoveryExpr 0x130941870 <col:13, col:18> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x130941838 <col:13> 'struct atalk_iface *' lvalue Var 0x130940db8 'tmp' 'struct atalk_iface *'     `-CallExpr 0x130942968 <line:16:2, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x1309428b8 <col:2> 'int ()' Function 0x130942800 'write_unlock_bh' 'int ()'       `-UnaryOperator 0x130942950 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x130942930 <col:19> '<dependent type>' contains-errors lvalue ","19574":"`-FunctionDecl 0x15604e638  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x15604e558 <col:8> col:8 QueryPlannerTest 'int'   |-ParmVarDecl 0x15604e4d8 <col:26> col:26 ContainedOrOfAndCollapseIndenticalScansWithFilter2 'int'   `-CompoundStmt 0x15582dd98 <col:78, line:12:1>     |-CallExpr 0x15582d6c8 <line:2:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15604e860 <col:5> 'int ()' Function 0x15604e7a8 'addIndex' 'int ()'     | `-CallExpr 0x15582d6a0 <col:14, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15604e960 <col:14> 'int ()' Function 0x15604e8a8 'BSON' 'int ()'     |   `-RecoveryExpr 0x15582d670 <col:19, col:28> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x15604e9c0 <col:19> 'char[4]' lvalue \"STR\"     |     `-IntegerLiteral 0x15604e9e0 <col:28> 'int' 1     |-CallExpr 0x15582d9b0 <line:3:5, col:29> 'int'     | |-ImplicitCastExpr 0x15582d998 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15582d7d0 <col:5> 'int ()' Function 0x15582d718 'runQuery' 'int ()'     | `-CallExpr 0x15582d958 <col:14, col:28> 'int'     |   |-ImplicitCastExpr 0x15582d940 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15582d8d0 <col:14> 'int ()' Function 0x15582d818 'fromjson' 'int ()'     |   `-ImplicitCastExpr 0x15582d980 <col:23> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x15582d8f0 <col:23> 'char[4]' lvalue \"STR\"     |-CallExpr 0x15582db10 <line:5:5, col:26> 'int'     | |-ImplicitCastExpr 0x15582daf8 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15582dab8 <col:5> 'int ()' Function 0x15582da00 'assertNumSolutions' 'int ()'     | `-IntegerLiteral 0x15582dad8 <col:24> 'unsigned int' 2     |-CallExpr 0x15582dc70 <line:6:5, col:31> 'int'     | |-ImplicitCastExpr 0x15582dc58 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15582dc18 <col:5> 'int ()' Function 0x15582db60 'assertSolutionExists' 'int ()'     | `-ImplicitCastExpr 0x15582dc98 <col:26> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x15582dc38 <col:26> 'char[4]' lvalue \"STR\"     `-CallExpr 0x15582dd58 <line:7:5, line:11:14> 'int'       |-ImplicitCastExpr 0x15582dd40 <line:7:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x15582dcb0 <col:5> 'int ()' Function 0x15582db60 'assertSolutionExists' 'int ()'       `-ImplicitCastExpr 0x15582dd80 <line:8:9, line:11:9> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x15582dd10 <line:8:9, line:11:9> 'char[13]' lvalue \"STRSTRSTRSTR\" ","19358":"`-FunctionDecl 0x12a143070  col:9 implicit used toupper 'int (int)' extern   |-ParmVarDecl 0x12a143170 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x12a143118 <<invalid sloc>> Implicit 933   |-NoThrowAttr 0x12a1431e0 <col:9> Implicit   `-PureAttr 0x12a143208 <col:9> Implicit ","19958":"`-FunctionDecl 0x154128208  line:1:29 invalid ScaleQuantumToChar 'unsigned char (const int)' static inline   |-ParmVarDecl 0x1541280f0 <col:48, col:62> col:62 invalid quantum 'const int'   `-CompoundStmt 0x154128670 <line:2:1, line:13:1>     `-ReturnStmt 0x154128660 <line:4:3, line:5:33>       `-ParenExpr 0x154128640 <line:4:9, line:5:33> 'unsigned char' contains-errors         `-CStyleCastExpr 0x154128618 <line:4:10, line:5:32> 'unsigned char' contains-errors <Dependent>           `-ParenExpr 0x1541285f8 <line:4:26, line:5:32> '<dependent type>' contains-errors             `-BinaryOperator 0x1541285a0 <line:4:27, line:5:31> '<dependent type>' contains-errors '\/'               |-ParenExpr 0x154128500 <line:4:27, col:62> '<dependent type>' contains-errors               | `-BinaryOperator 0x1541284e0 <col:28, col:61> '<dependent type>' contains-errors '+'               |   |-RecoveryExpr 0x1541282b8 <col:28> '<dependent type>' contains-errors lvalue               |   `-CallExpr 0x1541284b8 <col:36, col:61> 'int'               |     |-ImplicitCastExpr 0x1541284a0 <col:36> 'int (*)()' <FunctionToPointerDecay>               |     | `-DeclRefExpr 0x154128430 <col:36> 'int ()' Function 0x154128378 'MagickULLConstant' 'int ()'               |     `-IntegerLiteral 0x154128450 <col:54> 'int' 8421504               `-CallExpr 0x154128578 <line:5:5, col:31> 'int'                 |-ImplicitCastExpr 0x154128560 <col:5> 'int (*)()' <FunctionToPointerDecay>                 | `-DeclRefExpr 0x154128520 <col:5> 'int ()' Function 0x154128378 'MagickULLConstant' 'int ()'                 `-IntegerLiteral 0x154128540 <col:23> 'int' 16843009 ","19848":"`-FunctionDecl 0x14a80ddc8  line:1:1 invalid pattern_get_fallback 'int (int)'   |-ParmVarDecl 0x14a80dcf0 <col:23, col:32> col:32 invalid data 'int'   `-CompoundStmt 0x14a80df88 <line:2:1, line:6:1>     `-ReturnStmt 0x14a80df78 <line:5:5, col:21>       `-CXXDependentScopeMemberExpr 0x14a80df30 <col:12, col:21> '<dependent type>' contains-errors lvalue ->fallback         `-RecoveryExpr 0x14a80df10 <col:12> '<dependent type>' contains-errors lvalue ","19606":"`-FunctionDecl 0x150144de8  line:1:1 ext2_set_acl 'int (struct inode *, struct posix_acl *, int)'   |-ParmVarDecl 0x150128648 <col:14, col:28> col:28 used inode 'struct inode *'   |-ParmVarDecl 0x150144c28 <col:35, col:53> col:53 used acl 'struct posix_acl *'   |-ParmVarDecl 0x150144ca8 <col:58, col:62> col:62 used type 'int'   `-CompoundStmt 0x150147f30 <line:2:1, line:45:1>     |-DeclStmt 0x150144f70 <line:3:2, col:16>     | `-VarDecl 0x150144f08 <col:2, col:6> col:6 used name_index 'int'     |-DeclStmt 0x150145058 <line:4:2, col:20>     | `-VarDecl 0x150144fa0 <col:2, col:16> col:8 used value 'void *' cinit     |   `-RecoveryExpr 0x150145038 <col:16> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x150145150 <line:5:2, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x150145130 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x150145110 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1501450a8 <col:16> 'int' 0     |-DeclStmt 0x150145200 <line:6:2, col:11>     | `-VarDecl 0x150145198 <col:2, col:6> col:6 used error 'int'     |-SwitchStmt 0x150145250 <line:8:2, line:32:2>     | |-ImplicitCastExpr 0x150145238 <line:8:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x150145218 <col:9> 'int' lvalue ParmVar 0x150144ca8 'type' 'int'     | `-CompoundStmt 0x1501473b0 <col:15, line:32:2>     |   |-BinaryOperator 0x150145308 <line:10:4, col:17> 'int' contains-errors '='     |   | |-DeclRefExpr 0x150145290 <col:4> 'int' lvalue Var 0x150144f08 'name_index' 'int'     |   | `-RecoveryExpr 0x1501452e8 <col:17> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x150145a80 <line:11:4, line:21:4>     |   | |-ImplicitCastExpr 0x150145348 <line:11:8> 'struct posix_acl *' <LValueToRValue>     |   | | `-DeclRefExpr 0x150145328 <col:8> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     |   | `-CompoundStmt 0x150145a60 <col:13, line:21:4>     |   |   |-BinaryOperator 0x150145578 <line:12:5, col:53> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x150145360 <col:5> 'int' lvalue Var 0x150145198 'error' 'int'     |   |   | `-CallExpr 0x150145548 <col:13, col:53> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x150145490 <col:13> 'int ()' Function 0x1501453d8 'posix_acl_equiv_mode' 'int ()'     |   |   |   |-DeclRefExpr 0x1501454b0 <col:34> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     |   |   |   `-UnaryOperator 0x150145530 <col:39, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x150145508 <col:40, col:47> '<dependent type>' contains-errors lvalue     |   |   |       `-DeclRefExpr 0x1501454d0 <col:40> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   |   `-IfStmt 0x150145a30 <line:13:5, line:20:5> has_else     |   |     |-BinaryOperator 0x1501455f0 <line:13:9, col:17> 'int' '<'     |   |     | |-ImplicitCastExpr 0x1501455d8 <col:9> 'int' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x150145598 <col:9> 'int' lvalue Var 0x150145198 'error' 'int'     |   |     | `-IntegerLiteral 0x1501455b8 <col:17> 'int' 0     |   |     |-ReturnStmt 0x150145648 <line:14:6, col:13>     |   |     | `-ImplicitCastExpr 0x150145630 <col:13> 'int' <LValueToRValue>     |   |     |   `-DeclRefExpr 0x150145610 <col:13> 'int' lvalue Var 0x150145198 'error' 'int'     |   |     `-CompoundStmt 0x150145a08 <line:15:10, line:20:5>     |   |       |-BinaryOperator 0x150145710 <line:16:6, col:23> '<dependent type>' contains-errors '='     |   |       | |-RecoveryExpr 0x150145690 <col:6, col:13> '<dependent type>' contains-errors lvalue     |   |       | | `-DeclRefExpr 0x150145658 <col:6> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   |       | `-RecoveryExpr 0x1501456f0 <col:23> '<dependent type>' contains-errors lvalue     |   |       |-CallExpr 0x150145898 <line:17:6, col:28> 'int'     |   |       | |-ImplicitCastExpr 0x150145880 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   |       | | `-DeclRefExpr 0x150145810 <col:6> 'int ()' Function 0x150145758 'mark_inode_dirty' 'int ()'     |   |       | `-ImplicitCastExpr 0x1501458c0 <col:23> 'struct inode *' <LValueToRValue>     |   |       |   `-DeclRefExpr 0x150145830 <col:23> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   |       `-IfStmt 0x1501459e8 <line:18:6, line:19:13>     |   |         |-BinaryOperator 0x150145930 <line:18:10, col:19> 'int' '=='     |   |         | |-ImplicitCastExpr 0x150145918 <col:10> 'int' <LValueToRValue>     |   |         | | `-DeclRefExpr 0x1501458d8 <col:10> 'int' lvalue Var 0x150145198 'error' 'int'     |   |         | `-IntegerLiteral 0x1501458f8 <col:19> 'int' 0     |   |         `-BinaryOperator 0x1501459c8 <line:19:7, col:13> 'struct posix_acl *' contains-errors '='     |   |           |-DeclRefExpr 0x150145950 <col:7> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     |   |           `-RecoveryExpr 0x1501459a8 <col:13> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x150145aa0 <line:22:4>     |   |-BinaryOperator 0x150145b38 <line:25:4, col:17> 'int' contains-errors '='     |   | |-DeclRefExpr 0x150145ac0 <col:4> 'int' lvalue Var 0x150144f08 'name_index' 'int'     |   | `-RecoveryExpr 0x150145b18 <col:17> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1501472c0 <line:26:4, line:27:28>     |   | |-UnaryOperator 0x150147160 <line:26:8, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x150147138 <col:9, col:30> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x1501470b8 <col:9> 'int ()' Function 0x150147000 'S_ISDIR' 'int ()'     |   | |   `-RecoveryExpr 0x150147110 <col:17, col:24> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x1501470d8 <col:17> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   | `-ReturnStmt 0x1501472b0 <line:27:5, col:28>     |   |   `-ConditionalOperator 0x150147280 <col:12, col:28> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x150147178 <col:12> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     |   |     |-UnaryOperator 0x150147268 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     | `-ImplicitCastExpr 0x150147250 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x150147230 <col:19> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x1501471e0 <col:28> 'int' 0     |   |-BreakStmt 0x1501472e0 <line:28:4>     |   `-DefaultStmt 0x150147390 <line:30:3, line:31:12>     |     `-ReturnStmt 0x150147380 <col:4, col:12>     |       `-UnaryOperator 0x150147368 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x150147350 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x150147330 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1501478e8 <line:33:3, line:37:2>     | |-ImplicitCastExpr 0x150147418 <line:33:7> 'struct posix_acl *' <LValueToRValue>     | | `-DeclRefExpr 0x1501473f8 <col:7> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     | `-CompoundStmt 0x1501478d0 <col:12, line:37:2>     |   `-IfStmt 0x1501478b0 <line:35:3, line:36:29>     |     |-CallExpr 0x1501476a8 <line:35:7, col:19> 'int' contains-errors     |     | |-ImplicitCastExpr 0x150147690 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x150147650 <col:7> 'int ()' Function 0x150147598 'IS_ERR' 'int ()'     |     | `-ImplicitCastExpr 0x1501476d0 <col:14> 'void *' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x150147670 <col:14> 'void *' contains-errors lvalue Var 0x150144fa0 'value' 'void *'     |     `-ReturnStmt 0x1501478a0 <line:36:4, col:29>     |       `-CStyleCastExpr 0x150147878 <col:11, col:29> 'int' contains-errors <NoOp>     |         `-CallExpr 0x150147820 <col:16, col:29> 'int' contains-errors     |           |-ImplicitCastExpr 0x150147808 <col:16> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x1501477c8 <col:16> 'int ()' Function 0x150147710 'PTR_ERR' 'int ()'     |           `-ImplicitCastExpr 0x150147848 <col:24> 'void *' contains-errors <LValueToRValue>     |             `-DeclRefExpr 0x1501477e8 <col:24> 'void *' contains-errors lvalue Var 0x150144fa0 'value' 'void *'     |-CallExpr 0x150147c40 <line:41:2, col:13> 'int' contains-errors     | |-ImplicitCastExpr 0x150147c28 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150147be8 <col:2> 'int ()' Function 0x150147b30 'kfree' 'int ()'     | `-ImplicitCastExpr 0x150147c68 <col:8> 'void *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x150147c08 <col:8> 'void *' contains-errors lvalue Var 0x150144fa0 'value' 'void *'     |-IfStmt 0x150147ec8 <line:42:2, line:43:34>     | |-UnaryOperator 0x150147cb8 <line:42:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x150147ca0 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x150147c80 <col:7> 'int' lvalue Var 0x150145198 'error' 'int'     | `-CallExpr 0x150147e48 <line:43:3, col:34> 'int'     |   |-ImplicitCastExpr 0x150147e30 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x150147db0 <col:3> 'int ()' Function 0x150147cf8 'set_cached_acl' 'int ()'     |   |-ImplicitCastExpr 0x150147e80 <col:18> 'struct inode *' <LValueToRValue>     |   | `-DeclRefExpr 0x150147dd0 <col:18> 'struct inode *' lvalue ParmVar 0x150128648 'inode' 'struct inode *'     |   |-ImplicitCastExpr 0x150147e98 <col:25> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x150147df0 <col:25> 'int' lvalue ParmVar 0x150144ca8 'type' 'int'     |   `-ImplicitCastExpr 0x150147eb0 <col:31> 'struct posix_acl *' <LValueToRValue>     |     `-DeclRefExpr 0x150147e10 <col:31> 'struct posix_acl *' lvalue ParmVar 0x150144c28 'acl' 'struct posix_acl *'     `-ReturnStmt 0x150147f20 <line:44:2, col:9>       `-ImplicitCastExpr 0x150147f08 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x150147ee8 <col:9> 'int' lvalue Var 0x150145198 'error' 'int' ","19562":"`-FunctionDecl 0x129144d28  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x129144e28 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x129144dd0 <<invalid sloc>> Implicit 873 ","19776":"`-FunctionDecl 0x130027190  col:12 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x130027290 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1300272f8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x130027238 <<invalid sloc>> Implicit 887 ","20006":"`-FunctionDecl 0x12d80dec8  line:1:12 strncpy_with_color_codes 'int (char *, char *, int)' static   |-ParmVarDecl 0x12d80dcd8 <col:37, col:43> col:43 used s1 'char *'   |-ParmVarDecl 0x12d80dd58 <col:47, col:53> col:53 used s2 'char *'   |-ParmVarDecl 0x12d80ddd8 <col:57, col:61> col:61 used n 'int'   `-CompoundStmt 0x12d826f50 <col:64, line:22:1>     |-DeclStmt 0x12d80e128 <line:2:2, col:18>     | |-VarDecl 0x12d80dfe8 <col:2, col:10> col:6 used i 'int' cinit     | | `-IntegerLiteral 0x12d80e050 <col:10> 'int' 0     | `-VarDecl 0x12d80e088 <col:2, col:17> col:13 used j 'int' cinit     |   `-IntegerLiteral 0x12d80e0f0 <col:17> 'int' 0     |-DeclStmt 0x12d80e1e0 <line:3:2, col:15>     | `-VarDecl 0x12d80e158 <col:2, col:14> col:6 used count 'int' cinit     |   `-IntegerLiteral 0x12d80e1c0 <col:14> 'int' 0     |-WhileStmt 0x12d826ee8 <line:4:2, line:20:2>     | |-BinaryOperator 0x12d80e348 <line:4:9, col:26> 'int' '&&'     | | |-ImplicitCastExpr 0x12d80e330 <col:9, col:13> 'int' <IntegralCast>     | | | `-ImplicitCastExpr 0x12d80e318 <col:9, col:13> 'char' <LValueToRValue>     | | |   `-ArraySubscriptExpr 0x12d80e268 <col:9, col:13> 'char' lvalue     | | |     |-ImplicitCastExpr 0x12d80e238 <col:9> 'char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x12d80e1f8 <col:9> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     | | |     `-ImplicitCastExpr 0x12d80e250 <col:12> 'int' <LValueToRValue>     | | |       `-DeclRefExpr 0x12d80e218 <col:12> 'int' lvalue Var 0x12d80e088 'j' 'int'     | | `-BinaryOperator 0x12d80e2f8 <col:18, col:26> 'int' '<'     | |   |-ImplicitCastExpr 0x12d80e2c8 <col:18> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x12d80e288 <col:18> 'int' lvalue Var 0x12d80e158 'count' 'int'     | |   `-ImplicitCastExpr 0x12d80e2e0 <col:26> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x12d80e2a8 <col:26> 'int' lvalue ParmVar 0x12d80ddd8 'n' 'int'     | `-CompoundStmt 0x12d826ec8 <col:29, line:20:2>     |   |-WhileStmt 0x12d826c30 <line:6:3, line:15:3>     |   | |-BinaryOperator 0x12d826650 <line:6:10, col:19> 'int' '=='     |   | | |-ImplicitCastExpr 0x12d826638 <col:10, col:14> 'int' <IntegralCast>     |   | | | `-ImplicitCastExpr 0x12d826620 <col:10, col:14> 'char' <LValueToRValue>     |   | | |   `-ArraySubscriptExpr 0x12d80e3d8 <col:10, col:14> 'char' lvalue     |   | | |     |-ImplicitCastExpr 0x12d80e3a8 <col:10> 'char *' <LValueToRValue>     |   | | |     | `-DeclRefExpr 0x12d80e368 <col:10> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     |   | | |     `-ImplicitCastExpr 0x12d80e3c0 <col:13> 'int' <LValueToRValue>     |   | | |       `-DeclRefExpr 0x12d80e388 <col:13> 'int' lvalue Var 0x12d80e088 'j' 'int'     |   | | `-IntegerLiteral 0x12d826600 <col:19> 'int' 27     |   | `-CompoundStmt 0x12d826c10 <col:25, line:15:3>     |   |   |-WhileStmt 0x12d8269b8 <line:8:4, line:10:4>     |   |   | |-BinaryOperator 0x12d826828 <line:8:11, col:29> 'int' '&&'     |   |   | | |-ImplicitCastExpr 0x12d826810 <col:11, col:15> 'int' <IntegralCast>     |   |   | | | `-ImplicitCastExpr 0x12d8267f8 <col:11, col:15> 'char' <LValueToRValue>     |   |   | | |   `-ArraySubscriptExpr 0x12d8266e0 <col:11, col:15> 'char' lvalue     |   |   | | |     |-ImplicitCastExpr 0x12d8266b0 <col:11> 'char *' <LValueToRValue>     |   |   | | |     | `-DeclRefExpr 0x12d826670 <col:11> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     |   |   | | |     `-ImplicitCastExpr 0x12d8266c8 <col:14> 'int' <LValueToRValue>     |   |   | | |       `-DeclRefExpr 0x12d826690 <col:14> 'int' lvalue Var 0x12d80e088 'j' 'int'     |   |   | | `-BinaryOperator 0x12d8267d8 <col:20, col:29> 'int' '!='     |   |   | |   |-ImplicitCastExpr 0x12d8267c0 <col:20, col:24> 'int' <IntegralCast>     |   |   | |   | `-ImplicitCastExpr 0x12d8267a8 <col:20, col:24> 'char' <LValueToRValue>     |   |   | |   |   `-ArraySubscriptExpr 0x12d826770 <col:20, col:24> 'char' lvalue     |   |   | |   |     |-ImplicitCastExpr 0x12d826740 <col:20> 'char *' <LValueToRValue>     |   |   | |   |     | `-DeclRefExpr 0x12d826700 <col:20> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     |   |   | |   |     `-ImplicitCastExpr 0x12d826758 <col:23> 'int' <LValueToRValue>     |   |   | |   |       `-DeclRefExpr 0x12d826720 <col:23> 'int' lvalue Var 0x12d80e088 'j' 'int'     |   |   | |   `-CharacterLiteral 0x12d826790 <col:29> 'int' 109     |   |   | `-CompoundStmt 0x12d8269a0 <col:34, line:10:4>     |   |   |   `-BinaryOperator 0x12d826980 <line:9:5, col:21> 'char' '='     |   |   |     |-ArraySubscriptExpr 0x12d8268b8 <col:5, col:11> 'char' lvalue     |   |   |     | |-ImplicitCastExpr 0x12d8268a0 <col:5> 'char *' <LValueToRValue>     |   |   |     | | `-DeclRefExpr 0x12d826848 <col:5> 'char *' lvalue ParmVar 0x12d80dcd8 's1' 'char *'     |   |   |     | `-UnaryOperator 0x12d826888 <col:8, col:9> 'int' postfix '++'     |   |   |     |   `-DeclRefExpr 0x12d826868 <col:8> 'int' lvalue Var 0x12d80dfe8 'i' 'int'     |   |   |     `-ImplicitCastExpr 0x12d826968 <col:15, col:21> 'char' <LValueToRValue>     |   |   |       `-ArraySubscriptExpr 0x12d826948 <col:15, col:21> 'char' lvalue     |   |   |         |-ImplicitCastExpr 0x12d826930 <col:15> 'char *' <LValueToRValue>     |   |   |         | `-DeclRefExpr 0x12d8268d8 <col:15> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     |   |   |         `-UnaryOperator 0x12d826918 <col:18, col:19> 'int' postfix '++'     |   |   |           `-DeclRefExpr 0x12d8268f8 <col:18> 'int' lvalue Var 0x12d80e088 'j' 'int'     |   |   `-IfStmt 0x12d826bf0 <line:12:4, line:14:4>     |   |     |-ImplicitCastExpr 0x12d826a68 <line:12:8, col:12> 'char' <LValueToRValue>     |   |     | `-ArraySubscriptExpr 0x12d826a48 <col:8, col:12> 'char' lvalue     |   |     |   |-ImplicitCastExpr 0x12d826a18 <col:8> 'char *' <LValueToRValue>     |   |     |   | `-DeclRefExpr 0x12d8269d8 <col:8> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     |   |     |   `-ImplicitCastExpr 0x12d826a30 <col:11> 'int' <LValueToRValue>     |   |     |     `-DeclRefExpr 0x12d8269f8 <col:11> 'int' lvalue Var 0x12d80e088 'j' 'int'     |   |     `-CompoundStmt 0x12d826bd8 <col:15, line:14:4>     |   |       `-BinaryOperator 0x12d826bb8 <line:13:5, col:21> 'char' '='     |   |         |-ArraySubscriptExpr 0x12d826af0 <col:5, col:11> 'char' lvalue     |   |         | |-ImplicitCastExpr 0x12d826ad8 <col:5> 'char *' <LValueToRValue>     |   |         | | `-DeclRefExpr 0x12d826a80 <col:5> 'char *' lvalue ParmVar 0x12d80dcd8 's1' 'char *'     |   |         | `-UnaryOperator 0x12d826ac0 <col:8, col:9> 'int' postfix '++'     |   |         |   `-DeclRefExpr 0x12d826aa0 <col:8> 'int' lvalue Var 0x12d80dfe8 'i' 'int'     |   |         `-ImplicitCastExpr 0x12d826ba0 <col:15, col:21> 'char' <LValueToRValue>     |   |           `-ArraySubscriptExpr 0x12d826b80 <col:15, col:21> 'char' lvalue     |   |             |-ImplicitCastExpr 0x12d826b68 <col:15> 'char *' <LValueToRValue>     |   |             | `-DeclRefExpr 0x12d826b10 <col:15> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     |   |             `-UnaryOperator 0x12d826b50 <col:18, col:19> 'int' postfix '++'     |   |               `-DeclRefExpr 0x12d826b30 <col:18> 'int' lvalue Var 0x12d80e088 'j' 'int'     |   `-IfStmt 0x12d826ea8 <line:16:3, line:19:3>     |     |-ImplicitCastExpr 0x12d826ce0 <line:16:7, col:11> 'char' <LValueToRValue>     |     | `-ArraySubscriptExpr 0x12d826cc0 <col:7, col:11> 'char' lvalue     |     |   |-ImplicitCastExpr 0x12d826c90 <col:7> 'char *' <LValueToRValue>     |     |   | `-DeclRefExpr 0x12d826c50 <col:7> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     |     |   `-ImplicitCastExpr 0x12d826ca8 <col:10> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x12d826c70 <col:10> 'int' lvalue Var 0x12d80e088 'j' 'int'     |     `-CompoundStmt 0x12d826e88 <col:14, line:19:3>     |       |-BinaryOperator 0x12d826e30 <line:17:4, col:20> 'char' '='     |       | |-ArraySubscriptExpr 0x12d826d68 <col:4, col:10> 'char' lvalue     |       | | |-ImplicitCastExpr 0x12d826d50 <col:4> 'char *' <LValueToRValue>     |       | | | `-DeclRefExpr 0x12d826cf8 <col:4> 'char *' lvalue ParmVar 0x12d80dcd8 's1' 'char *'     |       | | `-UnaryOperator 0x12d826d38 <col:7, col:8> 'int' postfix '++'     |       | |   `-DeclRefExpr 0x12d826d18 <col:7> 'int' lvalue Var 0x12d80dfe8 'i' 'int'     |       | `-ImplicitCastExpr 0x12d826e18 <col:14, col:20> 'char' <LValueToRValue>     |       |   `-ArraySubscriptExpr 0x12d826df8 <col:14, col:20> 'char' lvalue     |       |     |-ImplicitCastExpr 0x12d826de0 <col:14> 'char *' <LValueToRValue>     |       |     | `-DeclRefExpr 0x12d826d88 <col:14> 'char *' lvalue ParmVar 0x12d80dd58 's2' 'char *'     |       |     `-UnaryOperator 0x12d826dc8 <col:17, col:18> 'int' postfix '++'     |       |       `-DeclRefExpr 0x12d826da8 <col:17> 'int' lvalue Var 0x12d80e088 'j' 'int'     |       `-UnaryOperator 0x12d826e70 <line:18:4, col:9> 'int' postfix '++'     |         `-DeclRefExpr 0x12d826e50 <col:4> 'int' lvalue Var 0x12d80e158 'count' 'int'     `-ReturnStmt 0x12d826f40 <line:21:2, col:9>       `-ImplicitCastExpr 0x12d826f28 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12d826f08 <col:9> 'int' lvalue Var 0x12d80dfe8 'i' 'int' ","19453":"`-FunctionDecl 0x14c00e358  line:1:5 nfc_llcp_send_symm 'int (struct nfc_dev *)'   |-ParmVarDecl 0x14c00e248 <col:24, col:40> col:40 used dev 'struct nfc_dev *'   `-CompoundStmt 0x14c029ed0 <line:2:1, line:30:1>     |-DeclStmt 0x14c026838 <line:3:2, col:21>     | |-RecordDecl 0x14c026650 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x14c0267b8 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x14c026a38 <line:4:2, col:30>     | |-RecordDecl 0x14c026850 <col:2, col:9> col:9 struct nfc_llcp_local     | `-VarDecl 0x14c0269b8 <col:2, col:25> col:25 used local 'struct nfc_llcp_local *'     |-CallExpr 0x14c026c48 <line:7:2, col:16> 'int'     | |-ImplicitCastExpr 0x14c026c30 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c026b80 <col:2> 'int ()' Function 0x14c026ac8 'pr_debug' 'int ()'     | `-ImplicitCastExpr 0x14c026c70 <col:11> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14c026be0 <col:11> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x14c026e38 <line:9:2, col:33> 'struct nfc_llcp_local *' '='     | |-DeclRefExpr 0x14c026c88 <col:2> 'struct nfc_llcp_local *' lvalue Var 0x14c0269b8 'local' 'struct nfc_llcp_local *'     | `-ImplicitCastExpr 0x14c026e20 <col:10, col:33> 'struct nfc_llcp_local *' <IntegralToPointer>     |   `-CallExpr 0x14c026de0 <col:10, col:33> 'int'     |     |-ImplicitCastExpr 0x14c026dc8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14c026d88 <col:10> 'int ()' Function 0x14c026cd0 'nfc_llcp_find_local' 'int ()'     |     `-ImplicitCastExpr 0x14c026e08 <col:30> 'struct nfc_dev *' <LValueToRValue>     |       `-DeclRefExpr 0x14c026da8 <col:30> 'struct nfc_dev *' lvalue ParmVar 0x14c00e248 'dev' 'struct nfc_dev *'     |-IfStmt 0x14c026f98 <line:10:2, line:11:11>     | |-BinaryOperator 0x14c026ed0 <line:10:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14c026e58 <col:6> 'struct nfc_llcp_local *' lvalue Var 0x14c0269b8 'local' 'struct nfc_llcp_local *'     | | `-RecoveryExpr 0x14c026eb0 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c026f88 <line:11:3, col:11>     |   `-UnaryOperator 0x14c026f70 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c026f58 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c026f38 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c0272f8 <line:16:2, col:34> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x14c0270e8 <col:2> 'struct sk_buff *' lvalue Var 0x14c0267b8 'skb' 'struct sk_buff *'     | `-CallExpr 0x14c0272c8 <col:8, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c0271e8 <col:8> 'int ()' Function 0x14c027130 'alloc_skb' 'int ()'     |   |-RecoveryExpr 0x14c027288 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c0272a8 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c027458 <line:17:2, line:18:11>     | |-BinaryOperator 0x14c027390 <line:17:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14c027318 <col:6> 'struct sk_buff *' lvalue Var 0x14c0267b8 'skb' 'struct sk_buff *'     | | `-RecoveryExpr 0x14c027370 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14c027448 <line:18:3, col:11>     |   `-UnaryOperator 0x14c027430 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c027418 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c0273f8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c0298a8 <line:20:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c027558 <col:2> 'int ()' Function 0x14c0274a0 'skb_reserve' 'int ()'     | |-DeclRefExpr 0x14c027578 <col:14> 'struct sk_buff *' lvalue Var 0x14c0267b8 'skb' 'struct sk_buff *'     | `-BinaryOperator 0x14c029888 <col:19, col:38> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x14c0275d0 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c027598 <col:19> 'struct nfc_dev *' lvalue ParmVar 0x14c00e248 'dev' 'struct nfc_dev *'     |   `-RecoveryExpr 0x14c029868 <col:38> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14c029b90 <line:24:2, col:21> 'int'       |-ImplicitCastExpr 0x14c029b78 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14c029b38 <col:2> 'int ()' Function 0x14c029a80 '__net_timestamp' 'int ()'       `-ImplicitCastExpr 0x14c029bb8 <col:18> 'struct sk_buff *' <LValueToRValue>         `-DeclRefExpr 0x14c029b58 <col:18> 'struct sk_buff *' lvalue Var 0x14c0267b8 'skb' 'struct sk_buff *' ","19587":"`-FunctionDecl 0x13802b638  line:1:5 invalid wait_for_key_construction 'int (struct key *, int)'   |-ParmVarDecl 0x13800e248 <col:31, col:43> col:43 used key 'struct key *'   |-ParmVarDecl 0x13800e2e0 <col:48, col:53> col:53 invalid intr 'int'   `-CompoundStmt 0x13802c220 <line:2:1, line:14:1>     |-DeclStmt 0x13802b770 <line:3:2, col:9>     | `-VarDecl 0x13802b708 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x13802bb50 <line:5:2, line:6:54> 'int' contains-errors '='     | |-DeclRefExpr 0x13802b788 <line:5:2> 'int' lvalue Var 0x13802b708 'ret' 'int'     | `-CallExpr 0x13802bb18 <col:8, line:6:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13802b900 <line:5:8> 'int ()' Function 0x13802b848 'wait_on_bit' 'int ()'     |   |-UnaryOperator 0x13802b980 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13802b958 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13802b920 <col:21> 'struct key *' lvalue ParmVar 0x13800e248 'key' 'struct key *'     |   |-RecoveryExpr 0x13802ba88 <col:33> '<dependent type>' contains-errors lvalue     |   `-ConditionalOperator 0x13802bae8 <line:6:6, col:34> '<dependent type>' contains-errors     |     |-RecoveryExpr 0x13802b9b0 <col:6> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x13802baa8 <col:13> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13802bac8 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13802bc50 <line:7:2, line:8:11>     | |-ImplicitCastExpr 0x13802bb90 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13802bb70 <col:6> 'int' lvalue Var 0x13802b708 'ret' 'int'     | `-ReturnStmt 0x13802bc40 <line:8:3, col:11>     |   `-UnaryOperator 0x13802bc28 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13802bc10 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13802bbf0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13802c078 <line:9:2, line:12:2>     | |-CallExpr 0x13802be50 <line:9:6, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13802bd50 <col:6> 'int ()' Function 0x13802bc98 'test_bit' 'int ()'     | | |-RecoveryExpr 0x13802be30 <col:15> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x13802bde8 <col:34, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x13802bdc0 <col:35, col:40> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13802bd88 <col:35> 'struct key *' lvalue ParmVar 0x13800e248 'key' 'struct key *'     | `-CompoundStmt 0x13802c058 <col:48, line:12:2>     |   |-CallExpr 0x13802bfc8 <line:10:3, col:11> 'int'     |   | `-ImplicitCastExpr 0x13802bfb0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x13802bf60 <col:3> 'int ()' Function 0x13802bea8 'smp_rmb' 'int ()'     |   `-ReturnStmt 0x13802c048 <line:11:3, col:15>     |     `-RecoveryExpr 0x13802c020 <col:10, col:15> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13802bfe8 <col:10> 'struct key *' lvalue ParmVar 0x13800e248 'key' 'struct key *'     `-ReturnStmt 0x13802c210 <line:13:2, col:25>       `-CallExpr 0x13802c1d0 <col:9, col:25> 'int'         |-ImplicitCastExpr 0x13802c1b8 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x13802c178 <col:9> 'int ()' Function 0x13802c0c0 'key_validate' 'int ()'         `-ImplicitCastExpr 0x13802c1f8 <col:22> 'struct key *' <LValueToRValue>           `-DeclRefExpr 0x13802c198 <col:22> 'struct key *' lvalue ParmVar 0x13800e248 'key' 'struct key *' ","19632":"`-FunctionDecl 0x12c142b28  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x12c142c28 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12c142c90 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12c142bd0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x12c142d08 <col:9> Implicit printf 2 3 ","19773":"`-FunctionDecl 0x1379419f8  col:9 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x137941af8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x137941b60 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x137941bc8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x137941aa0 <<invalid sloc>> Implicit 883 ","19841":"`-FunctionDecl 0x160026748  line:1:12 probe_rio 'int (struct usb_interface *, const struct usb_device_id *)' static   |-ParmVarDecl 0x16000e248 <col:22, col:44> col:44 used intf 'struct usb_interface *'   |-ParmVarDecl 0x160026628 <line:2:8, col:36> col:36 id 'const struct usb_device_id *'   `-CompoundStmt 0x157922e60 <line:3:1, line:42:1>     |-DeclStmt 0x160026c48 <line:4:2, col:52>     | |-RecordDecl 0x160026848 <col:2, col:9> col:9 struct usb_device     | `-VarDecl 0x1600269b8 <col:2, col:51> col:21 used dev 'struct usb_device *' cinit     |   `-ImplicitCastExpr 0x160026c18 <col:27, col:51> 'struct usb_device *' <IntegralToPointer>     |     `-CallExpr 0x160026bd8 <col:27, col:51> 'int'     |       |-ImplicitCastExpr 0x160026bc0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x160026b50 <col:27> 'int ()' Function 0x160026a98 'interface_to_usbdev' 'int ()'     |       `-ImplicitCastExpr 0x160026c00 <col:47> 'struct usb_interface *' <LValueToRValue>     |         `-DeclRefExpr 0x160026b70 <col:47> 'struct usb_interface *' lvalue ParmVar 0x16000e248 'intf' 'struct usb_interface *'     |-DeclStmt 0x160026eb0 <line:5:2, col:42>     | |-RecordDecl 0x160026c60 <col:2, col:9> col:9 struct rio_usb_data     | `-VarDecl 0x160026dc8 <col:2, col:30> col:23 used rio 'struct rio_usb_data *' cinit     |   `-UnaryOperator 0x160026e80 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x160026e60 <col:30> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x160026f48 <line:6:2, col:12>     | `-VarDecl 0x160026ee0 <col:2, col:6> col:6 used retval 'int'     |-CallExpr 0x1600271a0 <line:8:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160027040 <col:2> 'int ()' Function 0x160026f88 'dev_info' 'int ()'     | |-UnaryOperator 0x1600270c0 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x160027098 <col:12, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x160027060 <col:12> 'struct usb_interface *' lvalue ParmVar 0x16000e248 'intf' 'struct usb_interface *'     | |-StringLiteral 0x160027120 <col:23> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x160027178 <col:30, col:35> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x160027140 <col:30> 'struct usb_device *' lvalue Var 0x1600269b8 'dev' 'struct usb_device *'     |-BinaryOperator 0x160027400 <line:10:2, col:48> 'int' contains-errors '='     | |-DeclRefExpr 0x1600271d8 <col:2> 'int' lvalue Var 0x160026ee0 'retval' 'int'     | `-CallExpr 0x1600273d0 <col:11, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1600272d8 <col:11> 'int ()' Function 0x160027220 'usb_register_dev' 'int ()'     |   |-DeclRefExpr 0x1600272f8 <col:28> 'struct usb_interface *' lvalue ParmVar 0x16000e248 'intf' 'struct usb_interface *'     |   `-UnaryOperator 0x1600273b8 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x160027398 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1600292f8 <line:11:2, line:15:2>     | |-ImplicitCastExpr 0x160027440 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x160027420 <col:6> 'int' lvalue Var 0x160026ee0 'retval' 'int'     | `-CompoundStmt 0x1600292d8 <col:14, line:15:2>     |   |-CallExpr 0x160029200 <line:12:3, line:13:9> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x160027538 <line:12:3> 'int ()' Function 0x160027480 'dev_err' 'int ()'     |   | |-UnaryOperator 0x1600275b8 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x160027590 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x160027558 <col:12> 'struct usb_device *' lvalue Var 0x1600269b8 'dev' 'struct usb_device *'     |   | `-StringLiteral 0x1600275d0 <line:13:4> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1600292c8 <line:14:3, col:11>     |     `-UnaryOperator 0x1600292b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x160029298 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x160029278 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x160029398 <line:17:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x160029350 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x160029318 <col:2> 'struct rio_usb_data *' contains-errors lvalue Var 0x160026dc8 'rio' 'struct rio_usb_data *'     | `-DeclRefExpr 0x160029378 <col:17> 'struct usb_device *' lvalue Var 0x1600269b8 'dev' 'struct usb_device *'     |-IfStmt 0x1600298a8 <line:19:2, line:24:2>     | |-RecoveryExpr 0x160029598 <line:19:6, col:50> '_Bool' contains-errors     | `-CompoundStmt 0x160029888 <col:53, line:24:2>     |   |-CallExpr 0x160029670 <line:20:3, line:21:9> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1600295b8 <line:20:3> 'int ()' Function 0x160027480 'dev_err' 'int ()'     |   | |-UnaryOperator 0x160029638 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x160029610 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1600295d8 <col:12> 'struct usb_device *' lvalue Var 0x1600269b8 'dev' 'struct usb_device *'     |   | `-StringLiteral 0x160029650 <line:21:4> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x160029858 <line:22:3, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x160029780 <col:3> 'int ()' Function 0x1600296c8 'usb_deregister_dev' 'int ()'     |     |-DeclRefExpr 0x1600297a0 <col:22> 'struct usb_interface *' lvalue ParmVar 0x16000e248 'intf' 'struct usb_interface *'     |     `-UnaryOperator 0x160029840 <col:28, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x160029820 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x160029ac0 <line:25:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1600299a8 <col:2> 'int ()' Function 0x1600298f0 'dev_dbg' 'int ()'     | |-UnaryOperator 0x160029a28 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x160029a00 <col:11, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1600299c8 <col:11> 'struct usb_interface *' lvalue ParmVar 0x16000e248 'intf' 'struct usb_interface *'     | |-StringLiteral 0x160029a40 <col:22> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x160029a98 <col:29, col:34> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x160029a60 <col:29> 'struct rio_usb_data *' contains-errors lvalue Var 0x160026dc8 'rio' 'struct rio_usb_data *'     |-IfStmt 0x160029e68 <line:27:2, line:33:2>     | |-RecoveryExpr 0x160029b78 <line:27:6, col:50> '_Bool' contains-errors     | `-CompoundStmt 0x160029e48 <col:53, line:33:2>     |   |-CallExpr 0x160029c50 <line:28:3, line:29:9> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x160029b98 <line:28:3> 'int ()' Function 0x160027480 'dev_err' 'int ()'     |   | |-UnaryOperator 0x160029c18 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x160029bf0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x160029bb8 <col:12> 'struct usb_device *' lvalue Var 0x1600269b8 'dev' 'struct usb_device *'     |   | `-StringLiteral 0x160029c30 <line:29:4> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x160029e20 <line:31:3, col:18> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x160029da0 <col:3> 'int ()' Function 0x160029ce8 'kfree' 'int ()'     |     `-RecoveryExpr 0x160029df8 <col:9, col:14> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x160029dc0 <col:9> 'struct rio_usb_data *' contains-errors lvalue Var 0x160026dc8 'rio' 'struct rio_usb_data *'     |-CallExpr 0x160029fa0 <line:34:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160029e88 <col:2> 'int ()' Function 0x1600298f0 'dev_dbg' 'int ()'     | |-UnaryOperator 0x160029f08 <col:10, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x160029ee0 <col:11, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x160029ea8 <col:11> 'struct usb_interface *' lvalue ParmVar 0x16000e248 'intf' 'struct usb_interface *'     | |-StringLiteral 0x160029f20 <col:22> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x160029f78 <col:29, col:34> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x160029f40 <col:29> 'struct rio_usb_data *' contains-errors lvalue Var 0x160026dc8 'rio' 'struct rio_usb_data *'     |-CallExpr 0x16002a170 <line:36:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x16002a0b8 <col:2> 'int ()' Function 0x16002a000 'mutex_init' 'int ()'     | `-UnaryOperator 0x16002a158 <col:13, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ParenExpr 0x16002a138 <col:14, col:24> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x16002a110 <col:15, col:20> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x16002a0d8 <col:15> 'struct rio_usb_data *' contains-errors lvalue Var 0x160026dc8 'rio' 'struct rio_usb_data *'     |-CallExpr 0x157922d30 <line:38:2, col:29> 'int' contains-errors     | |-ImplicitCastExpr 0x157922d18 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157922cb8 <col:2> 'int ()' Function 0x157922c00 'usb_set_intfdata' 'int ()'     | |-ImplicitCastExpr 0x157922d60 <col:20> 'struct usb_interface *' <LValueToRValue>     | | `-DeclRefExpr 0x157922cd8 <col:20> 'struct usb_interface *' lvalue ParmVar 0x16000e248 'intf' 'struct usb_interface *'     | `-ImplicitCastExpr 0x157922d78 <col:26> 'struct rio_usb_data *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x157922cf8 <col:26> 'struct rio_usb_data *' contains-errors lvalue Var 0x160026dc8 'rio' 'struct rio_usb_data *'     |-BinaryOperator 0x157922e10 <line:39:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x157922dc8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x157922d90 <col:2> 'struct rio_usb_data *' contains-errors lvalue Var 0x160026dc8 'rio' 'struct rio_usb_data *'     | `-IntegerLiteral 0x157922df0 <col:17> 'int' 1     `-ReturnStmt 0x157922e50 <line:41:2, col:9>       `-IntegerLiteral 0x157922e30 <col:9> 'int' 0 ","19600":"`-FunctionDecl 0x1380e7ba8  line:1:1 poly_in 'int (int)'   |-ParmVarDecl 0x1380e7ad8 <col:9> col:9 PG_FUNCTION_ARGS 'int'   `-CompoundStmt 0x13200b230 <line:2:1, line:30:1>     |-DeclStmt 0x132008340 <line:3:2, col:37>     | `-VarDecl 0x1380e7cb8 <col:2, col:36> col:11 used str 'char *' cinit     |   `-ImplicitCastExpr 0x1380e7f00 <col:17, col:36> 'char *' <IntegralToPointer>     |     `-CallExpr 0x1380e7ed8 <col:17, col:36> 'int'     |       |-ImplicitCastExpr 0x1380e7ec0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1380e7e50 <col:17> 'int ()' Function 0x1380e7d98 'PG_GETARG_CSTRING' 'int ()'     |       `-IntegerLiteral 0x1380e7e70 <col:35> 'int' 0     |-DeclStmt 0x1320083f0 <line:5:2, col:12>     | `-VarDecl 0x132008388 <col:2, col:8> col:8 used npts 'int'     |-DeclStmt 0x132008488 <line:6:2, col:12>     | `-VarDecl 0x132008420 <col:2, col:8> col:8 used size 'int'     |-DeclStmt 0x132008520 <line:7:2, col:14>     | `-VarDecl 0x1320084b8 <col:2, col:8> col:8 used isopen 'int'     `-DeclStmt 0x1320085b8 <line:8:2, col:12>       `-VarDecl 0x132008550 <col:2, col:11> col:11 used s 'char *' ","19692":"`-FunctionDecl 0x136027aa0  col:5 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x136027ba0 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x136027b48 <<invalid sloc>> Implicit 869 ","19382":"`-FunctionDecl 0x127141ad0  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x127141bd0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x127141b78 <<invalid sloc>> Implicit 903   `-FormatAttr 0x127141c40 <col:3> Implicit printf 1 2 ","19883":"`-FunctionDecl 0x138941038  line:1:1 invalid __archive_read_filter_consume 'int (struct archive_read_filter *, int)'   |-ParmVarDecl 0x138927e48 <col:31, col:60> col:60 used filter 'struct archive_read_filter *'   |-ParmVarDecl 0x138927ee0 <line:2:5, col:13> col:13 invalid request 'int'   `-CompoundStmt 0x138941838 <line:3:1, line:20:1>     |-IfStmt 0x138941180 <line:6:2, line:7:10>     | |-BinaryOperator 0x138941130 <line:6:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1389410f0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x138941110 <col:17> 'int' 0     | `-ReturnStmt 0x138941170 <line:7:3, col:10>     |   `-IntegerLiteral 0x138941150 <col:10> 'int' 0     `-IfStmt 0x1389414d8 <line:10:2, line:11:18>       |-BinaryOperator 0x138941408 <line:10:6, col:17> 'int' contains-errors '=='       | |-RecoveryExpr 0x1389413e8 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1389413a8 <col:17> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x1389414c8 <line:11:3, col:18>         `-RecoveryExpr 0x1389414a0 <col:10, col:18> 'int' contains-errors           `-ParenExpr 0x138941480 <col:10, col:18> '<overloaded function type>' lvalue             `-UnresolvedLookupExpr 0x138941440 <col:11> '<overloaded function type>' lvalue (no ADL) = 'skipped' empty ","19331":"`-FunctionDecl 0x13f928198  line:1:5 sctp_v6_protosw_init 'int (void)'   `-CompoundStmt 0x13f941930 <line:2:1, line:14:1>     |-DeclStmt 0x13f928308 <line:3:2, col:8>     | `-VarDecl 0x13f9282a0 <col:2, col:6> col:6 used rc 'int'     |-BinaryOperator 0x13f928598 <line:5:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x13f928320 <col:2> 'int' lvalue Var 0x13f9282a0 'rc' 'int'     | `-CallExpr 0x13f928568 <col:7, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f928470 <col:7> 'int ()' Function 0x13f9283b8 'proto_register' 'int ()'     |   |-UnaryOperator 0x13f928550 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13f928530 <col:23> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13f9284c0 <col:36> 'int' 1     |-IfStmt 0x13f928638 <line:6:2, line:7:10>     | |-ImplicitCastExpr 0x13f9285d8 <line:6:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13f9285b8 <col:6> 'int' lvalue Var 0x13f9282a0 'rc' 'int'     | `-ReturnStmt 0x13f928628 <line:7:3, col:10>     |   `-ImplicitCastExpr 0x13f928610 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13f9285f0 <col:10> 'int' lvalue Var 0x13f9282a0 'rc' 'int'     |-CallExpr 0x13f941800 <line:10:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f928738 <col:2> 'int ()' Function 0x13f928680 'inet6_register_protosw' 'int ()'     | `-UnaryOperator 0x13f9287d0 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f9287b0 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13f9418d8 <line:11:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f941828 <col:2> 'int ()' Function 0x13f928680 'inet6_register_protosw' 'int ()'     | `-UnaryOperator 0x13f9418c0 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f9418a0 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f941920 <line:13:2, col:9>       `-IntegerLiteral 0x13f941900 <col:9> 'int' 0 ","19894":"`-FunctionDecl 0x14a82aa98  line:1:1 invalid ext2_xattr_set 'int (struct inode *, int, const char *, const void *, int, int)'   |-ParmVarDecl 0x14a80e248 <col:16, col:30> col:30 inode 'struct inode *'   |-ParmVarDecl 0x14a80e2c8 <col:37, col:41> col:41 name_index 'int'   |-ParmVarDecl 0x14a80e348 <col:53, col:65> col:65 name 'const char *'   |-ParmVarDecl 0x14a82a800 <line:2:9, col:21> col:21 value 'const void *'   |-ParmVarDecl 0x14a82a898 <col:28, col:35> col:35 invalid size 'int'   |-ParmVarDecl 0x14a82a918 <col:41, col:45> col:45 flags 'int'   `-CompoundStmt 0x14a82ac18 <line:3:1, line:5:1>     `-ReturnStmt 0x14a82ac08 <line:4:2, col:10>       `-UnaryOperator 0x14a82abf0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x14a82abd8 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x14a82abb8 <col:10> '<dependent type>' contains-errors lvalue ","20111":"`-FunctionDecl 0x11d9281f8  line:1:31 invalid get_transport_internal 'int *(int *)' static inline   |-ParmVarDecl 0x11d928128 <col:54, col:64> col:64 invalid ssl 'int *'   `-CompoundStmt 0x11d9282c0 <line:2:1, line:5:1> ","19532":"`-FunctionDecl 0x154928750  line:1:6 nci_unregister_device 'void (struct nci_dev *)'   |-ParmVarDecl 0x154928648 <col:28, col:44> col:44 used ndev 'struct nci_dev *'   `-CompoundStmt 0x154941760 <line:2:1, line:17:1>     |-DeclStmt 0x154940cd0 <line:3:2, col:37>     | |-RecordDecl 0x154940a48 <col:2, col:9> col:9 struct nci_conn_info     | |-VarDecl 0x154940bb8 <col:2, col:24> col:24 used conn_info 'struct nci_conn_info *'     | `-VarDecl 0x154940c48 <col:2, col:36> col:36 used n 'struct nci_conn_info *'     |-CallExpr 0x154940e98 <line:5:2, col:23> 'int'     | |-ImplicitCastExpr 0x154940e80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x154940e10 <col:2> 'int ()' Function 0x154940d58 'nci_close_device' 'int ()'     | `-ImplicitCastExpr 0x154940ec0 <col:19> 'struct nci_dev *' <LValueToRValue>     |   `-DeclRefExpr 0x154940e30 <col:19> 'struct nci_dev *' lvalue ParmVar 0x154928648 'ndev' 'struct nci_dev *'     |-CallExpr 0x154941038 <line:7:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154940fb8 <col:2> 'int ()' Function 0x154940f00 'destroy_workqueue' 'int ()'     | `-RecoveryExpr 0x154941010 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x154940fd8 <col:20> 'struct nci_dev *' lvalue ParmVar 0x154928648 'ndev' 'struct nci_dev *'     |-CallExpr 0x1549410e0 <line:8:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154941060 <col:2> 'int ()' Function 0x154940f00 'destroy_workqueue' 'int ()'     | `-RecoveryExpr 0x1549410b8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x154941080 <col:20> 'struct nci_dev *' lvalue ParmVar 0x154928648 'ndev' 'struct nci_dev *'     |-CallExpr 0x154941188 <line:9:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154941108 <col:2> 'int ()' Function 0x154940f00 'destroy_workqueue' 'int ()'     | `-RecoveryExpr 0x154941160 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x154941128 <col:20> 'struct nci_dev *' lvalue ParmVar 0x154928648 'ndev' 'struct nci_dev *'     |-CallExpr 0x1549413e0 <line:11:2, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154941290 <col:2> 'int ()' Function 0x1549411d8 'list_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x1549412b0 <col:27> 'struct nci_conn_info *' lvalue Var 0x154940bb8 'conn_info' 'struct nci_conn_info *'     | |-DeclRefExpr 0x1549412d0 <col:38> 'struct nci_conn_info *' lvalue Var 0x154940c48 'n' 'struct nci_conn_info *'     | |-UnaryOperator 0x154941350 <col:41, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x154941328 <col:42, col:48> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1549412f0 <col:42> 'struct nci_dev *' lvalue ParmVar 0x154928648 'ndev' 'struct nci_dev *'     | `-RecoveryExpr 0x1549413c0 <col:64> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1549415c0 <col:70, line:14:2>     | `-CallExpr 0x154941598 <line:12:3, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154941500 <col:3> 'int ()' Function 0x154941448 'list_del' 'int ()'     |   `-UnaryOperator 0x154941580 <col:12, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x154941558 <col:13, col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x154941520 <col:13> 'struct nci_conn_info *' lvalue Var 0x154940bb8 'conn_info' 'struct nci_conn_info *'     `-CallExpr 0x154941738 <line:16:2, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x1549416b8 <col:2> 'int ()' Function 0x154941600 'nfc_unregister_device' 'int ()'       `-RecoveryExpr 0x154941710 <col:24, col:30> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x1549416d8 <col:24> 'struct nci_dev *' lvalue ParmVar 0x154928648 'ndev' 'struct nci_dev *' ","19700":"`-FunctionDecl 0x134869f18  line:1:1 invalid memxor 'int (void *, const void *, int)'   |-ParmVarDecl 0x134869cd8 <col:8, col:14> col:14 used dst_in 'void *'   |-ParmVarDecl 0x134869d88 <col:22, col:34> col:34 used src_in 'const void *'   |-ParmVarDecl 0x134869e20 <col:42, col:49> col:49 referenced invalid n 'int'   `-CompoundStmt 0x1340a2fb0 <line:2:1, line:34:1>     |-DeclStmt 0x13486a0a8 <line:3:3, col:21>     | `-VarDecl 0x134869ff0 <col:3, col:15> col:9 used dst 'char *' cinit     |   `-ImplicitCastExpr 0x13486a090 <col:15> 'char *' <BitCast>     |     `-ImplicitCastExpr 0x13486a078 <col:15> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x13486a058 <col:15> 'void *' lvalue ParmVar 0x134869cd8 'dst_in' 'void *'     |-DeclStmt 0x13486a190 <line:4:3, col:27>     | `-VarDecl 0x13486a0d8 <col:3, col:21> col:15 used src 'const char *' cinit     |   `-ImplicitCastExpr 0x13486a178 <col:21> 'const char *' <BitCast>     |     `-ImplicitCastExpr 0x13486a160 <col:21> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x13486a140 <col:21> 'const void *' lvalue ParmVar 0x134869d88 'src_in' 'const void *'     |-IfStmt 0x134883ea8 <line:6:3, line:26:5>     | |-BinaryOperator 0x13486a220 <line:6:7, col:12> 'int' contains-errors '>='     | | |-RecoveryExpr 0x13486a1a8 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13486a200 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x134883e70 <line:7:5, line:26:5>     |   |-DeclStmt 0x13486a2c0 <line:8:7, col:17>     |   | `-VarDecl 0x13486a258 <col:7, col:16> col:16 used i 'unsigned int'     |   |-DeclStmt 0x13486a358 <line:9:7, col:22>     |   | `-VarDecl 0x13486a2f0 <col:7, col:16> col:16 used offset 'unsigned int'     |   |-UnaryExprOrTypeTraitExpr 0x13486a3c8 <line:10:7, col:14> 'unsigned long' contains-errors sizeof     |   | `-RecoveryExpr 0x13486a3a8 <col:14> '<dependent type>' contains-errors lvalue     |   |-ForStmt 0x1348838e0 <line:12:7, line:16:2>     |   | |-BinaryOperator 0x134883628 <line:12:12, col:36> 'unsigned int' contains-errors '='     |   | | |-DeclRefExpr 0x134883400 <col:12> 'unsigned int' lvalue Var 0x13486a258 'i' 'unsigned int'     |   | | `-CallExpr 0x134883600 <col:16, col:36> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x134883580 <col:16> 'int ()' Function 0x1348834c8 'ALIGN_OFFSET' 'int ()'     |   | |   `-BinaryOperator 0x1348835e0 <col:29, col:35> '<dependent type>' contains-errors '+'     |   | |     |-DeclRefExpr 0x1348835a0 <col:29> 'char *' lvalue Var 0x134869ff0 'dst' 'char *'     |   | |     `-RecoveryExpr 0x1348835c0 <col:35> '<dependent type>' contains-errors lvalue     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x1348836b8 <col:39, col:43> 'int' '>'     |   | | |-ImplicitCastExpr 0x134883688 <col:39> 'unsigned int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x134883648 <col:39> 'unsigned int' lvalue Var 0x13486a258 'i' 'unsigned int'     |   | | `-ImplicitCastExpr 0x1348836a0 <col:43> 'unsigned int' <IntegralCast>     |   | |   `-IntegerLiteral 0x134883668 <col:43> 'int' 0     |   | |-UnaryOperator 0x1348836f8 <col:46, col:47> 'unsigned int' postfix '--'     |   | | `-DeclRefExpr 0x1348836d8 <col:46> 'unsigned int' lvalue Var 0x13486a258 'i' 'unsigned int'     |   | `-CompoundStmt 0x1348838c0 <line:13:2, line:16:2>     |   |   |-UnaryOperator 0x134883758 <line:14:4, col:5> '<dependent type>' contains-errors postfix '--' cannot overflow     |   |   | `-RecoveryExpr 0x134883730 <col:4> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x134883710 <col:4> 'int' lvalue ParmVar 0x134869e20 'n' 'int'     |   |   `-CompoundAssignOperator 0x134883890 <line:15:4, col:19> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |     |-ArraySubscriptExpr 0x1348837e0 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |     | |-ImplicitCastExpr 0x1348837b0 <col:4> 'char *' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x134883770 <col:4> 'char *' lvalue Var 0x134869ff0 'dst' 'char *'     |   |     | `-ImplicitCastExpr 0x1348837c8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x134883790 <col:8> '<dependent type>' contains-errors lvalue     |   |     `-ArraySubscriptExpr 0x134883870 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x134883840 <col:14> 'const char *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x134883800 <col:14> 'const char *' lvalue Var 0x13486a0d8 'src' 'const char *'     |   |       `-ImplicitCastExpr 0x134883858 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x134883820 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1348839e0 <line:17:7, col:36> 'unsigned int' contains-errors '='     |     |-DeclRefExpr 0x134883918 <col:7> 'unsigned int' lvalue Var 0x13486a2f0 'offset' 'unsigned int'     |     `-CallExpr 0x1348839b8 <col:16, col:36> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x134883938 <col:16> 'int ()' Function 0x1348834c8 'ALIGN_OFFSET' 'int ()'     |       `-BinaryOperator 0x134883998 <col:29, col:35> '<dependent type>' contains-errors '+'     |         |-DeclRefExpr 0x134883958 <col:29> 'const char *' lvalue Var 0x13486a0d8 'src' 'const char *'     |         `-RecoveryExpr 0x134883978 <col:35> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x1348840f8 <line:27:3, line:31:5>     | |-BinaryOperator 0x134883f08 <line:27:10, col:14> 'int' contains-errors '>'     | | |-RecoveryExpr 0x134883ec8 <col:10> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x134883ee8 <col:14> 'int' 0     | `-CompoundStmt 0x1348840d8 <line:28:5, line:31:5>     |   |-UnaryOperator 0x134883f70 <line:29:7, col:8> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-RecoveryExpr 0x134883f48 <col:7> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x134883f28 <col:7> 'int' lvalue ParmVar 0x134869e20 'n' 'int'     |   `-CompoundAssignOperator 0x1348840a8 <line:30:7, col:22> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-ArraySubscriptExpr 0x134883ff8 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x134883fc8 <col:7> 'char *' <LValueToRValue>     |     | | `-DeclRefExpr 0x134883f88 <col:7> 'char *' lvalue Var 0x134869ff0 'dst' 'char *'     |     | `-ImplicitCastExpr 0x134883fe0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x134883fa8 <col:11> '<dependent type>' contains-errors lvalue     |     `-ArraySubscriptExpr 0x134884088 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x134884058 <col:17> 'const char *' <LValueToRValue>     |       | `-DeclRefExpr 0x134884018 <col:17> 'const char *' lvalue Var 0x13486a0d8 'src' 'const char *'     |       `-ImplicitCastExpr 0x134884070 <col:21> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x134884038 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1340a2fa0 <line:33:3, col:10>       `-ImplicitCastExpr 0x134884150 <col:10> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x134884138 <col:10> 'char *' <LValueToRValue>           `-DeclRefExpr 0x134884118 <col:10> 'char *' lvalue Var 0x134869ff0 'dst' 'char *' ","20135":"`-FunctionDecl 0x12a828100  col:3 implicit used memccpy 'void *(void *, const void *, int, unsigned long)' extern   |-ParmVarDecl 0x12a828200 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12a828268 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12a8282d0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x12a828338 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12a8281a8 <<invalid sloc>> Implicit 946 ","19254":"`-FunctionDecl 0x13f9283a8  line:1:6 invalid do_rt_tgsigqueueinfo 'long (int, int, int, int *)'   |-ParmVarDecl 0x13f9280f0 <col:27, col:33> col:33 invalid tgid 'int'   |-ParmVarDecl 0x13f928170 <col:39, col:45> col:45 invalid pid 'int'   |-ParmVarDecl 0x13f9281f0 <col:50, col:54> col:54 used sig 'int'   |-ParmVarDecl 0x13f9282a8 <col:59, col:70> col:70 referenced invalid info 'int *'   `-CompoundStmt 0x13f941d30 <line:2:1, line:16:1>     |-IfStmt 0x13f9285f8 <line:4:2, line:5:11>     | |-BinaryOperator 0x13f928530 <line:4:6, col:26> 'int' contains-errors '||'     | | |-BinaryOperator 0x13f9284b0 <col:6, col:13> 'int' contains-errors '<='     | | | |-RecoveryExpr 0x13f928470 <col:6> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x13f928490 <col:13> 'int' 0     | | `-BinaryOperator 0x13f928510 <col:18, col:26> 'int' contains-errors '<='     | |   |-RecoveryExpr 0x13f9284d0 <col:18> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x13f9284f0 <col:26> 'int' 0     | `-ReturnStmt 0x13f9285e8 <line:5:3, col:11>     |   `-UnaryOperator 0x13f9285d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13f9285b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13f928598 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f941a70 <line:8:2, line:12:2>     | |-BinaryOperator 0x13f9286d8 <line:8:6, col:23> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x13f928638 <col:6, col:12> '<dependent type>' contains-errors lvalue ->si_code     | | | `-RecoveryExpr 0x13f928618 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13f9286b8 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f941a50 <col:33, line:12:2>     |   |-CallExpr 0x13f941980 <line:10:3, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13f9418b8 <col:3> 'int ()' Function 0x13f941800 'WARN_ON_ONCE' 'int ()'     |   | `-BinaryOperator 0x13f941960 <col:16, col:32> 'int' contains-errors '<'     |   |   |-CXXDependentScopeMemberExpr 0x13f9418f8 <col:16, col:22> '<dependent type>' contains-errors lvalue ->si_code     |   |   | `-RecoveryExpr 0x13f9418d8 <col:16> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x13f941940 <col:32> 'int' 0     |   `-ReturnStmt 0x13f941a40 <line:11:3, col:11>     |     `-UnaryOperator 0x13f941a28 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x13f941a10 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x13f9419f0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f941b40 <line:13:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f941ad8 <col:2, col:8> '<dependent type>' contains-errors lvalue ->si_signo     | | `-RecoveryExpr 0x13f941ab0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f941a90 <col:2> 'int *' lvalue ParmVar 0x13f9282a8 'info' 'int *'     | `-DeclRefExpr 0x13f941b20 <col:19> 'int' lvalue ParmVar 0x13f9281f0 'sig' 'int'     `-ReturnStmt 0x13f941d20 <line:15:2, col:46>       `-CallExpr 0x13f941ce0 <col:9, col:46> '<dependent type>' contains-errors         |-DeclRefExpr 0x13f941c40 <col:9> 'int ()' Function 0x13f941b88 'do_send_specific' 'int ()'         |-RecoveryExpr 0x13f941c60 <col:26> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x13f941c80 <col:32> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x13f941ca0 <col:37> 'int' lvalue ParmVar 0x13f9281f0 'sig' 'int'         `-RecoveryExpr 0x13f941cc0 <col:42> '<dependent type>' contains-errors lvalue ","19822":"`-FunctionDecl 0x12800de08  col:3 invalid QInt16 'int (const int)'   |-ParmVarDecl 0x12800dcf0 <col:10, col:24> col:24 invalid v 'const int'   `-CompoundStmt 0x12800deb8 <col:38, col:39> ","20106":"`-FunctionDecl 0x105026c38  line:1:12 invalid dcbnl_getperm_hwaddr 'int (struct net_device *, struct nlmsghdr *, int, struct nlattr **, struct sk_buff *)' static   |-ParmVarDecl 0x10500e248 <col:33, col:52> col:52 used netdev 'struct net_device *'   |-ParmVarDecl 0x105026628 <col:60, col:77> col:77 nlh 'struct nlmsghdr *'   |-ParmVarDecl 0x1050266c0 <line:2:5, col:9> col:9 invalid seq 'int'   |-ParmVarDecl 0x1050268f8 <col:14, col:30> col:30 tb 'struct nlattr **'   |-ParmVarDecl 0x105026ac8 <col:34, col:50> col:50 used skb 'struct sk_buff *'   `-CompoundStmt 0x1050271e8 <line:3:1, line:12:1>     |-IfStmt 0x105026e88 <line:6:2, line:7:11>     | |-UnaryOperator 0x105026dc8 <line:6:6, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x105026db0 <col:7, col:26> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x105026d68 <col:7, col:26> '<dependent type>' contains-errors lvalue ->getpermhwaddr     | |     `-RecoveryExpr 0x105026d40 <col:7, col:15> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x105026d08 <col:7> 'struct net_device *' lvalue ParmVar 0x10500e248 'netdev' 'struct net_device *'     | `-ReturnStmt 0x105026e78 <line:7:3, col:11>     |   `-UnaryOperator 0x105026e60 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x105026e48 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x105026e28 <col:11> '<dependent type>' contains-errors lvalue     `-CallExpr 0x105026fd8 <line:9:2, col:52> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x105026f08 <col:2, col:21> '<dependent type>' contains-errors lvalue ->getpermhwaddr       | `-RecoveryExpr 0x105026ee0 <col:2, col:10> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x105026ea8 <col:2> 'struct net_device *' lvalue ParmVar 0x10500e248 'netdev' 'struct net_device *'       |-DeclRefExpr 0x105026f50 <col:35> 'struct net_device *' lvalue ParmVar 0x10500e248 'netdev' 'struct net_device *'       `-RecoveryExpr 0x105026fb8 <col:43> '<dependent type>' contains-errors lvalue ","19869":"`-FunctionDecl 0x15c00ddc8  line:1:1 invalid plugin_parse_file 'int (int)'   |-ParmVarDecl 0x15c00dcf0 <col:20, <invalid sloc>> col:25 invalid 'int'   `-CompoundStmt 0x15c027cd0 <line:3:1, line:36:1>     `-IfStmt 0x15c027ca0 <line:9:3, line:35:3> has_else       |-BinaryOperator 0x15c00e0e8 <line:9:7, col:17> 'int' contains-errors '!='       | |-RecoveryExpr 0x15c00e0c8 <col:7> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x15c00e088 <col:17> 'int' 0       |-CompoundStmt 0x15c027c78 <col:20, line:30:3>       | `-IfStmt 0x15c027c48 <line:16:5, line:29:5> has_else       |   |-CallExpr 0x15c00e340 <line:16:9, col:51> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x15c00e1e8 <col:9> 'int ()' Function 0x15c00e130 'g_module_symbol' 'int ()'       |   | |-RecoveryExpr 0x15c00e2e8 <col:26> '<dependent type>' contains-errors lvalue       |   | |-StringLiteral 0x15c00e260 <col:34> 'char[4]' lvalue \"STR\"       |   | `-UnaryOperator 0x15c00e328 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow       |   |   `-RecoveryExpr 0x15c00e308 <col:42> '<dependent type>' contains-errors lvalue       |   |-CompoundStmt 0x15c027b20 <col:54, line:23:5>       |   | `-CallExpr 0x15c027938 <line:21:7, col:37> '<dependent type>' contains-errors       |   |   |-DeclRefExpr 0x15c0278b8 <col:7> 'int ()' Function 0x15c027800 'g_module_make_resident' 'int ()'       |   |   `-RecoveryExpr 0x15c027918 <col:31> '<dependent type>' contains-errors lvalue       |   `-CompoundStmt 0x15c027c38 <line:23:12, line:29:5>       `-CompoundStmt 0x15c027c90 <line:30:10, line:35:3> ","19906":"`-FunctionDecl 0x127128118  line:1:1 referenced gql_root_type 'int ()'   `-CompoundStmt 0x127142820 <col:17, line:6:1>     |-IfStmt 0x127128510 <line:2:5, line:4:5>     | |-BinaryOperator 0x1271283a0 <line:2:9, col:43> 'int' contains-errors '&&'     | | |-BinaryOperator 0x127128320 <col:9, col:17> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x1271282e0 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x127128300 <col:17> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x127128380 <col:35, col:43> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x127128340 <col:35> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x127128360 <col:43> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127128500 <col:58, line:4:5>     `-ReturnStmt 0x127142810 <line:5:5, col:12>       `-ImplicitCastExpr 0x1271285b8 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x1271285a0 <col:12> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x127128548 <col:12> 'int ()' Function 0x127128118 'gql_root_type' 'int ()' ","20000":"`-FunctionDecl 0x14580e350  line:1:13 bnx2x_hw_enable_status 'void (struct bnx2x *)' static   |-ParmVarDecl 0x14580e248 <col:36, col:50> col:50 used bp 'struct bnx2x *'   `-CompoundStmt 0x145827130 <line:2:1, line:29:1>     |-CallExpr 0x145826a00 <line:6:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1458268d8 <col:2> 'int ()' Function 0x145826820 'DP' 'int ()'     | |-RecoveryExpr 0x1458269c0 <col:5> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x145826950 <col:19> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x1458269e0 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x145826ba8 <line:9:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145826ac0 <col:2> 'int ()' Function 0x145826820 'DP' 'int ()'     | |-RecoveryExpr 0x145826b68 <col:5> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x145826af8 <col:19> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x145826b88 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x145826d50 <line:12:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145826c68 <col:2> 'int ()' Function 0x145826820 'DP' 'int ()'     | |-RecoveryExpr 0x145826d10 <col:5> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x145826ca0 <col:19> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x145826d30 <col:26> '<dependent type>' contains-errors lvalue     `-CallExpr 0x145826ef8 <line:15:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x145826e10 <col:2> 'int ()' Function 0x145826820 'DP' 'int ()'       |-RecoveryExpr 0x145826eb8 <col:5> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x145826e48 <col:19> 'char[4]' lvalue \"STR\"       `-RecoveryExpr 0x145826ed8 <col:26> '<dependent type>' contains-errors lvalue ","19272":"`-FunctionDecl 0x12f128ba8  line:1:24 invalid band_create 'int *(int *, int *, int *, int *)' static   |-ParmVarDecl 0x12f128928 <col:36, col:52> col:52 referenced invalid band 'int *'   |-ParmVarDecl 0x12f1289a8 <col:58, col:72> col:72 invalid cp 'int *'   |-ParmVarDecl 0x12f128a28 <line:2:3, col:19> col:19 referenced invalid rlvl 'int *'   |-ParmVarDecl 0x12f128aa8 <col:25, col:42> col:42 referenced invalid bandinfos 'int *'   `-CompoundStmt 0x12f80a9a8 <line:3:1, line:66:1>     |-BinaryOperator 0x12f128df0 <line:13:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f128d88 <col:2, col:8> '<dependent type>' contains-errors lvalue ->data     | | `-RecoveryExpr 0x12f128d60 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f128d40 <col:2> 'int *' lvalue ParmVar 0x12f128928 'band' 'int *'     | `-IntegerLiteral 0x12f128dd0 <col:15> 'int' 0     |-BinaryOperator 0x12f128ec0 <line:14:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f128e58 <col:2, col:8> '<dependent type>' contains-errors lvalue ->prcs     | | `-RecoveryExpr 0x12f128e30 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f128e10 <col:2> 'int *' lvalue ParmVar 0x12f128928 'band' 'int *'     | `-IntegerLiteral 0x12f128ea0 <col:15> 'int' 0     |-BinaryOperator 0x12f128f90 <line:15:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f128f28 <col:2, col:8> '<dependent type>' contains-errors lvalue ->rlvl     | | `-RecoveryExpr 0x12f128f00 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f128ee0 <col:2> 'int *' lvalue ParmVar 0x12f128928 'band' 'int *'     | `-RecoveryExpr 0x12f128f70 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f808cf0 <line:18:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f128fd0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f128fb0 <col:2> 'int *' lvalue ParmVar 0x12f128a28 'rlvl' 'int *'     | `-BinaryOperator 0x12f808cd0 <col:11, col:31> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x12f808c00 <col:11> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x12f808c88 <col:18, col:31> '<dependent type>' contains-errors lvalue ->rlvls     |     `-CXXDependentScopeMemberExpr 0x12f808c40 <col:18, col:24> '<dependent type>' contains-errors lvalue ->tcmpt     |       `-RecoveryExpr 0x12f808c20 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f808e00 <line:19:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12f808d30 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f808d10 <col:2> 'int *' lvalue ParmVar 0x12f128928 'band' 'int *'     | `-BinaryOperator 0x12f808de0 <col:11, col:24> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x12f808d58 <col:11> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x12f808d98 <col:18, col:24> '<dependent type>' contains-errors lvalue ->bands     |     `-RecoveryExpr 0x12f808d78 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f809618 <line:24:1, line:31:1>     | |-RecoveryExpr 0x12f808f28 <line:24:5, col:73> '_Bool' contains-errors     | `-CompoundStmt 0x12f809600 <col:79, line:31:1>     |   `-IfStmt 0x12f809310 <line:25:2, line:27:2>     |     |-UnaryOperator 0x12f809278 <line:25:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ParenExpr 0x12f809258 <col:7, col:49> '<dependent type>' contains-errors     |     |   `-BinaryOperator 0x12f809238 <col:8, col:48> '<dependent type>' contains-errors '='     |     |     |-CXXDependentScopeMemberExpr 0x12f808f68 <col:8, col:14> '<dependent type>' contains-errors lvalue ->data     |     |     | `-RecoveryExpr 0x12f808f48 <col:8> '<dependent type>' contains-errors lvalue     |     |     `-CallExpr 0x12f8091f8 <col:21, col:48> 'int'     |     |       |-ImplicitCastExpr 0x12f8091e0 <col:21> 'int (*)()' <FunctionToPointerDecay>     |     |       | `-DeclRefExpr 0x12f809110 <col:21> 'int ()' Function 0x12f809058 'jas_seq2d_create' 'int ()'     |     |       |-IntegerLiteral 0x12f809130 <col:38> 'int' 0     |     |       |-IntegerLiteral 0x12f809150 <col:41> 'int' 0     |     |       |-IntegerLiteral 0x12f809170 <col:44> 'int' 0     |     |       `-IntegerLiteral 0x12f809190 <col:47> 'int' 0     |     `-CompoundStmt 0x12f8092f8 <col:52, line:27:2>     |       `-GotoStmt 0x12f8092e0 <line:26:3, col:8> 'error' 0x12f809290     |-BinaryOperator 0x12f809a20 <line:35:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f8099b8 <col:2, col:8> '<dependent type>' contains-errors lvalue ->numbps     | | `-RecoveryExpr 0x12f809990 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f809970 <col:2> 'int *' lvalue ParmVar 0x12f128928 'band' 'int *'     | `-IntegerLiteral 0x12f809a00 <col:17> 'int' 0     |-BinaryOperator 0x12f809af0 <line:36:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f809a88 <col:2, col:8> '<dependent type>' contains-errors lvalue ->absstepsize     | | `-RecoveryExpr 0x12f809a60 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f809a40 <col:2> 'int *' lvalue ParmVar 0x12f128928 'band' 'int *'     | `-IntegerLiteral 0x12f809ad0 <col:22> 'int' 0     |-BinaryOperator 0x12f809bc0 <line:37:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12f809b58 <col:2, col:8> '<dependent type>' contains-errors lvalue ->stepsize     | | `-RecoveryExpr 0x12f809b30 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12f809b10 <col:2> 'int *' lvalue ParmVar 0x12f128928 'band' 'int *'     | `-IntegerLiteral 0x12f809ba0 <col:19> 'int' 0     |-IfStmt 0x12f80a7a8 <line:40:1, line:59:1>     | |-CXXDependentScopeMemberExpr 0x12f80a090 <line:40:5, col:11> '<dependent type>' contains-errors lvalue ->data     | | `-RecoveryExpr 0x12f80a070 <col:5> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f80a790 <col:17, line:59:1>     |   `-IfStmt 0x12f80a2f8 <line:41:2, line:43:2>     |     |-RecoveryExpr 0x12f80a2a8 <line:41:6, col:70> '_Bool' contains-errors     |     `-CompoundStmt 0x12f80a2e0 <col:73, line:43:2>     |       `-GotoStmt 0x12f80a2c8 <line:42:3, col:8> 'error' 0x12f809290     |-ReturnStmt 0x12f80a7e8 <line:61:2, col:9>     | `-RecoveryExpr 0x12f80a7c8 <col:9> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x12f80a940 <line:63:1, line:64:19> 'error'     | `-CallExpr 0x12f80a918 <col:2, col:19> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f80a8d8 <col:2> 'int ()' Function 0x12f80a820 'band_destroy' 'int ()'     |   `-RecoveryExpr 0x12f80a8f8 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12f80a998 <line:65:2, col:9>       `-ImplicitCastExpr 0x12f80a980 <col:9> 'int *' <NullToPointer>         `-IntegerLiteral 0x12f80a960 <col:9> 'int' 0 ","20013":"`-FunctionDecl 0x12980e350  line:1:13 toneport_start_pcm 'void (struct work_struct *)' static   |-ParmVarDecl 0x12980e248 <col:32, col:52> col:52 used work 'struct work_struct *'   `-CompoundStmt 0x129826ed8 <line:2:1, line:8:1>     |-DeclStmt 0x129826a08 <line:3:2, line:4:63>     | |-RecordDecl 0x129826648 <line:3:2, col:9> col:9 struct usb_line6_toneport     | `-VarDecl 0x1298267b8 <col:2, col:29> col:29 used toneport 'struct usb_line6_toneport *'     |-DeclStmt 0x129826c80 <line:5:2, col:44>     | |-RecordDecl 0x129826a20 <col:2, col:9> col:9 struct usb_line6     | `-VarDecl 0x129826b88 <col:2, col:39> col:20 used line6 'struct usb_line6 *' cinit     |   `-UnaryOperator 0x129826c50 <col:28, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x129826c28 <col:29, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x129826bf0 <col:29> 'struct usb_line6_toneport *' lvalue Var 0x1298267b8 'toneport' 'struct usb_line6_toneport *'     `-CallExpr 0x129826ea0 <line:7:2, col:63> '<dependent type>' contains-errors       |-DeclRefExpr 0x129826d78 <col:2> 'int ()' Function 0x129826cc0 'line6_pcm_acquire' 'int ()'       |-RecoveryExpr 0x129826dd0 <col:20, col:27> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x129826d98 <col:20> 'struct usb_line6 *' contains-errors lvalue Var 0x129826b88 'line6' 'struct usb_line6 *'       |-RecoveryExpr 0x129826e60 <col:37> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x129826e80 <col:59> '<dependent type>' contains-errors lvalue ","20012":"`-FunctionDecl 0x130928258  line:1:14 invalid from_document 'int (int, int)' static   |-ParmVarDecl 0x1309280f0 <col:28, col:34> col:34 invalid klass 'int'   |-ParmVarDecl 0x130928170 <col:41, col:47> col:47 invalid document 'int'   `-CompoundStmt 0x1310094c0 <line:2:1, line:46:1>     |-CallExpr 0x130928558 <line:9:3, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130928470 <col:3> 'int ()' Function 0x1309283b8 'Data_Get_Struct' 'int ()'     | |-RecoveryExpr 0x130928490 <col:19> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x130928518 <col:29> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x130928538 <col:37> '<dependent type>' contains-errors lvalue     `-IfStmt 0x131009240 <line:32:3, line:40:3>       |-RecoveryExpr 0x131008f88 <line:32:6, col:14> '_Bool' contains-errors       `-CompoundStmt 0x131009230 <col:22, line:40:3> ","19579":"`-FunctionDecl 0x15c1459d8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15c145ad8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15c145b40 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15c145ba8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15c145a80 <<invalid sloc>> Implicit 882 ","19449":"`-FunctionDecl 0x133941548  line:1:5 kvm_arch_vcpu_ioctl_set_sregs 'int (struct kvm_vcpu *, struct kvm_sregs *)'   |-ParmVarDecl 0x133929048 <col:35, col:52> col:52 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x133941428 <line:2:7, col:25> col:25 used sregs 'struct kvm_sregs *'   `-CompoundStmt 0x133947ca0 <line:3:1, line:74:1>     |-DeclStmt 0x1339416e8 <line:4:2, col:26>     | `-VarDecl 0x133941660 <col:2, col:25> col:6 used mmu_reset_needed 'int' cinit     |   `-IntegerLiteral 0x1339416c8 <col:25> 'int' 0     |-DeclStmt 0x1339418a0 <line:5:2, col:32>     | |-VarDecl 0x133941718 <col:2, col:6> col:6 used pending_vec 'int'     | |-VarDecl 0x133941798 <col:2, col:19> col:19 used max_bits 'int'     | `-VarDecl 0x133941818 <col:2, col:29> col:29 used idx 'int'     |-DeclStmt 0x133941a38 <line:6:2, col:20>     | |-RecordDecl 0x1339418b8 <col:2, col:9> col:9 struct desc_ptr     | `-VarDecl 0x1339419b8 <col:2, col:18> col:18 referenced invalid dt 'struct desc_ptr'     |-BinaryOperator 0x133941b88 <line:8:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133941a98 <col:2, col:5> '<dependent type>' contains-errors lvalue .size     | | `-RecoveryExpr 0x133941a70 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133941a50 <col:2> 'struct desc_ptr' lvalue Var 0x1339419b8 'dt' 'struct desc_ptr'     | `-CXXDependentScopeMemberExpr 0x133941b40 <col:12, col:23> '<dependent type>' contains-errors lvalue .limit     |   `-RecoveryExpr 0x133941b18 <col:12, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133941ae0 <col:12> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-BinaryOperator 0x133941ce0 <line:9:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133941bf0 <col:2, col:5> '<dependent type>' contains-errors lvalue .address     | | `-RecoveryExpr 0x133941bc8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133941ba8 <col:2> 'struct desc_ptr' lvalue Var 0x1339419b8 'dt' 'struct desc_ptr'     | `-CXXDependentScopeMemberExpr 0x133941c98 <col:15, col:26> '<dependent type>' contains-errors lvalue .base     |   `-RecoveryExpr 0x133941c70 <col:15, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133941c38 <col:15> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-BinaryOperator 0x133941ea8 <line:11:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133941db8 <col:2, col:5> '<dependent type>' contains-errors lvalue .size     | | `-RecoveryExpr 0x133941d90 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133941d70 <col:2> 'struct desc_ptr' lvalue Var 0x1339419b8 'dt' 'struct desc_ptr'     | `-CXXDependentScopeMemberExpr 0x133941e60 <col:12, col:23> '<dependent type>' contains-errors lvalue .limit     |   `-RecoveryExpr 0x133941e38 <col:12, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133941e00 <col:12> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-BinaryOperator 0x133942000 <line:12:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133941f10 <col:2, col:5> '<dependent type>' contains-errors lvalue .address     | | `-RecoveryExpr 0x133941ee8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133941ec8 <col:2> 'struct desc_ptr' lvalue Var 0x1339419b8 'dt' 'struct desc_ptr'     | `-CXXDependentScopeMemberExpr 0x133941fb8 <col:15, col:26> '<dependent type>' contains-errors lvalue .base     |   `-RecoveryExpr 0x133941f90 <col:15, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133941f58 <col:15> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-BinaryOperator 0x133942180 <line:15:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1339420d8 <col:2, col:13> '<dependent type>' contains-errors lvalue .cr2     | | `-RecoveryExpr 0x1339420b0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133942078 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x133942158 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x133942120 <col:19> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-CompoundAssignOperator 0x133943220 <line:16:2, col:51> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x1339421a0 <col:2> 'int' lvalue Var 0x133941660 'mmu_reset_needed' 'int'     | `-BinaryOperator 0x133943200 <col:22, col:51> 'int' contains-errors '!='     |   |-CallExpr 0x133942358 <col:22, col:39> 'int'     |   | |-ImplicitCastExpr 0x133942340 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1339422d0 <col:22> 'int ()' Function 0x133942218 'kvm_read_cr3' 'int ()'     |   | `-ImplicitCastExpr 0x133942380 <col:35> 'struct kvm_vcpu *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1339422f0 <col:35> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |   `-RecoveryExpr 0x1339423d0 <col:44, col:51> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133942398 <col:44> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-BinaryOperator 0x133943358 <line:17:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1339432b0 <col:2, col:13> '<dependent type>' contains-errors lvalue .cr3     | | `-RecoveryExpr 0x133943288 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133943250 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x133943330 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1339432f8 <col:19> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-CallExpr 0x1339436d0 <line:20:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133943630 <col:2> 'int ()' Function 0x133943578 'kvm_set_cr8' 'int ()'     | |-DeclRefExpr 0x133943650 <col:14> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x1339436a8 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x133943670 <col:20> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-CompoundAssignOperator 0x133943848 <line:22:2, col:48> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x133943700 <col:2> 'int' lvalue Var 0x133941660 'mmu_reset_needed' 'int'     | `-BinaryOperator 0x133943828 <col:22, col:48> 'int' contains-errors '!='     |   |-CXXDependentScopeMemberExpr 0x133943780 <col:22, col:33> '<dependent type>' contains-errors lvalue .efer     |   | `-RecoveryExpr 0x133943758 <col:22, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x133943720 <col:22> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |   `-RecoveryExpr 0x133943800 <col:41, col:48> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1339437c8 <col:41> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-CallExpr 0x133943a78 <line:24:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1339439d8 <col:2> 'int ()' Function 0x133943920 'kvm_set_apic_base' 'int ()'     | |-DeclRefExpr 0x1339439f8 <col:20> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x133943a50 <col:26, col:33> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x133943a18 <col:26> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-CompoundAssignOperator 0x133943d68 <line:26:2, col:51> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x133943aa8 <col:2> 'int' lvalue Var 0x133941660 'mmu_reset_needed' 'int'     | `-BinaryOperator 0x133943d48 <col:22, col:51> 'int' contains-errors '!='     |   |-CallExpr 0x133943d08 <col:22, col:39> 'int'     |   | |-ImplicitCastExpr 0x133943cf0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x133943ba8 <col:22> 'int ()' Function 0x133943af0 'kvm_read_cr0' 'int ()'     |   | `-ImplicitCastExpr 0x133943d30 <col:35> 'struct kvm_vcpu *' <LValueToRValue>     |   |   `-DeclRefExpr 0x133943bc8 <col:35> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |   `-RecoveryExpr 0x133943c78 <col:44, col:51> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133943c40 <col:44> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-BinaryOperator 0x133943f20 <line:28:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133943e78 <col:2, col:13> '<dependent type>' contains-errors lvalue .cr0     | | `-RecoveryExpr 0x133943e50 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133943e18 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x133943ef8 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x133943ec0 <col:19> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-CompoundAssignOperator 0x133944200 <line:30:2, col:51> 'int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x133943f40 <col:2> 'int' lvalue Var 0x133941660 'mmu_reset_needed' 'int'     | `-BinaryOperator 0x1339441e0 <col:22, col:51> 'int' contains-errors '!='     |   |-CallExpr 0x1339441a0 <col:22, col:39> 'int'     |   | |-ImplicitCastExpr 0x133944188 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x133944040 <col:22> 'int ()' Function 0x133943f88 'kvm_read_cr4' 'int ()'     |   | `-ImplicitCastExpr 0x1339441c8 <col:35> 'struct kvm_vcpu *' <LValueToRValue>     |   |   `-DeclRefExpr 0x133944060 <col:35> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |   `-RecoveryExpr 0x133944110 <col:44, col:51> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1339440d8 <col:44> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |-IfStmt 0x1339444a8 <line:32:2, line:33:24>     | |-RecoveryExpr 0x133944310 <line:32:6, col:19> '_Bool' contains-errors     | `-CallExpr 0x133944468 <line:33:3, col:24> 'int'     |   |-ImplicitCastExpr 0x133944450 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x133944410 <col:3> 'int ()' Function 0x133944358 'kvm_update_cpuid' 'int ()'     |   `-ImplicitCastExpr 0x133944490 <col:20> 'struct kvm_vcpu *' <LValueToRValue>     |     `-DeclRefExpr 0x133944430 <col:20> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |-BinaryOperator 0x1339446d0 <line:35:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x1339444c8 <col:2> 'int' lvalue Var 0x133941818 'idx' 'int'     | `-CallExpr 0x1339446a8 <col:8, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1339445c8 <col:8> 'int ()' Function 0x133944510 'srcu_read_lock' 'int ()'     |   `-UnaryOperator 0x133944690 <col:23, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x133944648 <col:24, col:35> '<dependent type>' contains-errors lvalue ->srcu     |       `-RecoveryExpr 0x133944620 <col:24, col:30> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1339445e8 <col:24> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x133944dc0 <line:36:2, line:39:2>     | |-BinaryOperator 0x1339449f8 <line:36:6, col:40> 'int' '&&'     | | |-UnaryOperator 0x133944868 <col:6, col:24> 'int' prefix '!' cannot overflow     | | | `-CallExpr 0x133944828 <col:7, col:24> 'int'     | | |   |-ImplicitCastExpr 0x133944810 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x1339447d0 <col:7> 'int ()' Function 0x133944718 'is_long_mode' 'int ()'     | | |   `-ImplicitCastExpr 0x133944850 <col:20> 'struct kvm_vcpu *' <LValueToRValue>     | | |     `-DeclRefExpr 0x1339447f0 <col:20> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     | | `-CallExpr 0x1339449b8 <col:29, col:40> 'int'     | |   |-ImplicitCastExpr 0x1339449a0 <col:29> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x133944960 <col:29> 'int ()' Function 0x1339448a8 'is_pae' 'int ()'     | |   `-ImplicitCastExpr 0x1339449e0 <col:36> 'struct kvm_vcpu *' <LValueToRValue>     | |     `-DeclRefExpr 0x133944980 <col:36> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     | `-CompoundStmt 0x133944da0 <col:43, line:39:2>     |   |-CallExpr 0x133944d08 <line:37:3, col:60> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x133944af8 <col:3> 'int ()' Function 0x133944a40 'load_pdptrs' 'int ()'     |   | |-DeclRefExpr 0x133944b18 <col:15> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |   | |-CXXDependentScopeMemberExpr 0x133944b98 <col:21, col:32> '<dependent type>' contains-errors lvalue .walk_mmu     |   | | `-RecoveryExpr 0x133944b70 <col:21, col:27> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x133944b38 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |   | `-CallExpr 0x133944cc8 <col:42, col:59> 'int'     |   |   |-ImplicitCastExpr 0x133944cb0 <col:42> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x133944be0 <col:42> 'int ()' Function 0x133942218 'kvm_read_cr3' 'int ()'     |   |   `-ImplicitCastExpr 0x133944cf0 <col:55> 'struct kvm_vcpu *' <LValueToRValue>     |   |     `-DeclRefExpr 0x133944c00 <col:55> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |   `-BinaryOperator 0x133944d80 <line:38:3, col:22> 'int' '='     |     |-DeclRefExpr 0x133944d40 <col:3> 'int' lvalue Var 0x133941660 'mmu_reset_needed' 'int'     |     `-IntegerLiteral 0x133944d60 <col:22> 'int' 1     |-CallExpr 0x133944fc0 <line:40:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133944ec0 <col:2> 'int ()' Function 0x133944e08 'srcu_read_unlock' 'int ()'     | |-UnaryOperator 0x133944f88 <col:19, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x133944f40 <col:20, col:31> '<dependent type>' contains-errors lvalue ->srcu     | |   `-RecoveryExpr 0x133944f18 <col:20, col:26> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x133944ee0 <col:20> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     | `-DeclRefExpr 0x133944fa0 <col:37> 'int' lvalue Var 0x133941818 'idx' 'int'     |-IfStmt 0x1339451a0 <line:42:2, line:43:29>     | |-ImplicitCastExpr 0x133945010 <line:42:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x133944ff0 <col:6> 'int' lvalue Var 0x133941660 'mmu_reset_needed' 'int'     | `-CallExpr 0x133945160 <line:43:3, col:29> 'int'     |   |-ImplicitCastExpr 0x133945148 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x133945108 <col:3> 'int ()' Function 0x133945050 'kvm_mmu_reset_context' 'int ()'     |   `-ImplicitCastExpr 0x133945188 <col:25> 'struct kvm_vcpu *' <LValueToRValue>     |     `-DeclRefExpr 0x133945128 <col:25> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     |-BinaryOperator 0x133945510 <line:46:2, line:47:59> 'int' contains-errors '='     | |-DeclRefExpr 0x1339451e0 <line:46:2> 'int' lvalue Var 0x133941718 'pending_vec' 'int'     | `-CallExpr 0x1339454c8 <col:16, line:47:59> 'int' contains-errors     |   |-ImplicitCastExpr 0x1339454b0 <line:46:16> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1339452e0 <col:16> 'int ()' Function 0x133945228 'find_first_bit' 'int ()'     |   |-CStyleCastExpr 0x133945488 <line:47:3, col:33> 'const unsigned long *' contains-errors <Dependent>     |   | `-RecoveryExpr 0x133945338 <col:26, col:33> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x133945300 <col:26> 'struct kvm_sregs *' lvalue ParmVar 0x133941428 'sregs' 'struct kvm_sregs *'     |   `-ImplicitCastExpr 0x1339454f8 <col:51> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1339453d0 <col:51> 'int' lvalue Var 0x133941798 'max_bits' 'int'     |-IfStmt 0x133945910 <line:48:2, line:51:2>     | |-BinaryOperator 0x1339455a0 <line:48:6, col:20> 'int' '<'     | | |-ImplicitCastExpr 0x133945570 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x133945530 <col:6> 'int' lvalue Var 0x133941718 'pending_vec' 'int'     | | `-ImplicitCastExpr 0x133945588 <col:20> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x133945550 <col:20> 'int' lvalue Var 0x133941798 'max_bits' 'int'     | `-CompoundStmt 0x1339458f8 <col:30, line:51:2>     |   `-CallExpr 0x133945898 <line:50:3, col:30> 'int'     |     |-ImplicitCastExpr 0x133945880 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1339457e0 <col:3> 'int ()' Function 0x133945728 'pr_debug' 'int ()'     |     |-ImplicitCastExpr 0x1339458c8 <col:12> 'char *' <ArrayToPointerDecay>     |     | `-StringLiteral 0x133945840 <col:12> 'char[4]' lvalue \"STR\"     |     `-ImplicitCastExpr 0x1339458e0 <col:19> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x133945860 <col:19> 'int' lvalue Var 0x133941718 'pending_vec' 'int'     |-CallExpr 0x133946108 <line:63:2, col:27> 'int'     | |-ImplicitCastExpr 0x1339460f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1339460b0 <col:2> 'int ()' Function 0x133945ff8 'update_cr8_intercept' 'int ()'     | `-ImplicitCastExpr 0x133946130 <col:23> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x1339460d0 <col:23> 'struct kvm_vcpu *' lvalue ParmVar 0x133929048 'vcpu' 'struct kvm_vcpu *'     `-ReturnStmt 0x133947c90 <line:73:2, col:9>       `-IntegerLiteral 0x133947c70 <col:9> 'int' 0 ","19304":"`-FunctionDecl 0x15b140e88  col:7 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x15b140f88 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x15b140f30 <<invalid sloc>> Implicit 902 ","19220":"`-FunctionDecl 0x14d84b340  col:43 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x14d84b440 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14d84b3e8 <<invalid sloc>> Implicit 902 ","19731":"`-FunctionDecl 0x1440bb408  line:1:12 invalid ReplaceMulWithBroadcastByTile 'int (const int)'   |-ParmVarDecl 0x1440bb2f0 <line:2:7, <invalid sloc>> col:34 invalid 'const int'   `-CompoundStmt 0x1440bb4b8 <line:5:43, col:44> ","19739":"`-FunctionDecl 0x12b128750  line:2:13 netdev_adjacent_del_links 'void (struct net_device *)' static   |-ParmVarDecl 0x12b128648 <col:39, col:58> col:58 used dev 'struct net_device *'   `-CompoundStmt 0x12b1470f8 <line:3:1, line:24:3>     |-DeclStmt 0x12b140c38 <line:4:2, col:30>     | |-RecordDecl 0x12b140a48 <col:2, col:9> col:9 struct netdev_adjacent     | `-VarDecl 0x12b140bb8 <col:2, col:26> col:26 used iter 'struct netdev_adjacent *'     |-DeclStmt 0x12b141048 <line:6:2, col:32>     | |-RecordDecl 0x12b140c50 <col:2, col:9> col:9 struct net     | `-VarDecl 0x12b140db8 <col:2, col:31> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x12b141018 <col:20, col:31> 'struct net *' <IntegralToPointer>     |     `-CallExpr 0x12b140fd8 <col:20, col:31> 'int'     |       |-ImplicitCastExpr 0x12b140fc0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12b140f50 <col:20> 'int ()' Function 0x12b140e98 'dev_net' 'int ()'     |       `-ImplicitCastExpr 0x12b141000 <col:28> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x12b140f70 <col:28> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *'     |-CallExpr 0x12b1412b0 <line:8:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b141140 <col:2> 'int ()' Function 0x12b141088 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x12b141160 <col:22> 'struct netdev_adjacent *' lvalue Var 0x12b140bb8 'iter' 'struct netdev_adjacent *'     | |-UnaryOperator 0x12b141228 <col:28, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12b1411e0 <col:29, col:43> '<dependent type>' contains-errors lvalue .upper     | |   `-RecoveryExpr 0x12b1411b8 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12b141180 <col:29> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *'     | `-RecoveryExpr 0x12b141290 <col:50> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x12b1419d8 <col:56, line:15:2>     | |-CallExpr 0x12b1417c0 <line:11:3, line:12:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b1415d8 <line:11:3> 'int ()' Function 0x12b141520 'netdev_adjacent_sysfs_del' 'int ()'     | | |-RecoveryExpr 0x12b141630 <col:29, col:35> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12b1415f8 <col:29> 'struct netdev_adjacent *' lvalue Var 0x12b140bb8 'iter' 'struct netdev_adjacent *'     | | |-RecoveryExpr 0x12b141690 <col:40, col:45> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12b141658 <col:40> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *'     | | `-UnaryOperator 0x12b1417a8 <line:12:8, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x12b141760 <col:9, col:29> '<dependent type>' contains-errors lvalue .lower     | |     `-CXXDependentScopeMemberExpr 0x12b141718 <col:9, col:20> '<dependent type>' contains-errors lvalue ->adj_list     | |       `-RecoveryExpr 0x12b1416f0 <col:9, col:15> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x12b1416b8 <col:9> 'struct netdev_adjacent *' lvalue Var 0x12b140bb8 'iter' 'struct netdev_adjacent *'     | `-CallExpr 0x12b1419a0 <line:13:3, line:14:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b1417f8 <line:13:3> 'int ()' Function 0x12b141520 'netdev_adjacent_sysfs_del' 'int ()'     |   |-DeclRefExpr 0x12b141818 <col:29> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *'     |   |-CXXDependentScopeMemberExpr 0x12b141898 <col:34, col:45> '<dependent type>' contains-errors lvalue ->name     |   | `-RecoveryExpr 0x12b141870 <col:34, col:40> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12b141838 <col:34> 'struct netdev_adjacent *' lvalue Var 0x12b140bb8 'iter' 'struct netdev_adjacent *'     |   `-UnaryOperator 0x12b141988 <line:14:8, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x12b141940 <col:9, col:23> '<dependent type>' contains-errors lvalue .upper     |       `-RecoveryExpr 0x12b141918 <col:9, col:14> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12b1418e0 <col:9> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *'     |-CallExpr 0x12b146b70 <line:17:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b146a00 <col:2> 'int ()' Function 0x12b141088 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x12b146a20 <col:22> 'struct netdev_adjacent *' lvalue Var 0x12b140bb8 'iter' 'struct netdev_adjacent *'     | |-UnaryOperator 0x12b146ae8 <col:28, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12b146aa0 <col:29, col:43> '<dependent type>' contains-errors lvalue .lower     | |   `-RecoveryExpr 0x12b146a78 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12b146a40 <col:29> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *'     | `-RecoveryExpr 0x12b146b50 <col:50> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x12b1470d8 <col:56, line:24:2>       |-CallExpr 0x12b146ec0 <line:20:3, line:21:34> '<dependent type>' contains-errors       | |-DeclRefExpr 0x12b146cd8 <line:20:3> 'int ()' Function 0x12b141520 'netdev_adjacent_sysfs_del' 'int ()'       | |-RecoveryExpr 0x12b146d30 <col:29, col:35> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x12b146cf8 <col:29> 'struct netdev_adjacent *' lvalue Var 0x12b140bb8 'iter' 'struct netdev_adjacent *'       | |-RecoveryExpr 0x12b146d90 <col:40, col:45> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x12b146d58 <col:40> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *'       | `-UnaryOperator 0x12b146ea8 <line:21:8, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-CXXDependentScopeMemberExpr 0x12b146e60 <col:9, col:29> '<dependent type>' contains-errors lvalue .upper       |     `-CXXDependentScopeMemberExpr 0x12b146e18 <col:9, col:20> '<dependent type>' contains-errors lvalue ->adj_list       |       `-RecoveryExpr 0x12b146df0 <col:9, col:15> '<dependent type>' contains-errors lvalue       |         `-DeclRefExpr 0x12b146db8 <col:9> 'struct netdev_adjacent *' lvalue Var 0x12b140bb8 'iter' 'struct netdev_adjacent *'       `-CallExpr 0x12b1470a0 <line:22:3, line:23:28> '<dependent type>' contains-errors         |-DeclRefExpr 0x12b146ef8 <line:22:3> 'int ()' Function 0x12b141520 'netdev_adjacent_sysfs_del' 'int ()'         |-DeclRefExpr 0x12b146f18 <col:29> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *'         |-CXXDependentScopeMemberExpr 0x12b146f98 <col:34, col:45> '<dependent type>' contains-errors lvalue ->name         | `-RecoveryExpr 0x12b146f70 <col:34, col:40> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x12b146f38 <col:34> 'struct netdev_adjacent *' lvalue Var 0x12b140bb8 'iter' 'struct netdev_adjacent *'         `-UnaryOperator 0x12b147088 <line:23:8, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow           `-CXXDependentScopeMemberExpr 0x12b147040 <col:9, col:23> '<dependent type>' contains-errors lvalue .lower             `-RecoveryExpr 0x12b147018 <col:9, col:14> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x12b146fe0 <col:9> 'struct net_device *' lvalue ParmVar 0x12b128648 'dev' 'struct net_device *' ","19469":"`-FunctionDecl 0x151026938  line:1:5 _mkp_stage_30 'int (struct plugin *, struct client_session *, struct session_request *)'   |-ParmVarDecl 0x15100e248 <col:19, col:34> col:34 used p 'struct plugin *'   |-ParmVarDecl 0x151026628 <line:2:9, col:32> col:32 used cs 'struct client_session *'   |-ParmVarDecl 0x1510267f8 <line:3:9, col:33> col:33 used sr 'struct session_request *'   `-CompoundStmt 0x15102a2c8 <line:4:1, line:25:1>     |-CStyleCastExpr 0x151026aa0 <line:6:5, col:12> 'void' <ToVoid>     | `-ImplicitCastExpr 0x151026a88 <col:12> 'struct plugin *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x151026a58 <col:12> 'struct plugin *' lvalue ParmVar 0x15100e248 'p' 'struct plugin *'     |-CStyleCastExpr 0x151026b10 <line:7:5, col:12> 'void' <ToVoid>     | `-ImplicitCastExpr 0x151026af8 <col:12> 'struct client_session *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x151026ac8 <col:12> 'struct client_session *' lvalue ParmVar 0x151026628 'cs' 'struct client_session *'     |-CallExpr 0x151026d30 <line:9:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151026c50 <col:5> 'int ()' Function 0x151026b98 'PLUGIN_TRACE' 'int ()'     | |-StringLiteral 0x151026cb0 <col:18> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x151026d08 <col:25, col:29> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x151026cd0 <col:25> 'struct client_session *' lvalue ParmVar 0x151026628 'cs' 'struct client_session *'     |-IfStmt 0x151027098 <line:10:5, line:14:5>     | |-BinaryOperator 0x151026f08 <line:10:9, col:42> 'int' contains-errors '<'     | | |-CallExpr 0x151026ec0 <col:9, col:38> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x151026e40 <col:9> 'int ()' Function 0x151026d88 'mk_security_check_url' 'int ()'     | | | `-RecoveryExpr 0x151026e98 <col:31, col:35> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x151026e60 <col:31> 'struct session_request *' lvalue ParmVar 0x1510267f8 'sr' 'struct session_request *'     | | `-IntegerLiteral 0x151026ee8 <col:42> 'int' 0     | `-CompoundStmt 0x151027078 <col:45, line:14:5>     |   |-CallExpr 0x151026fc8 <line:11:9, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x151026f28 <col:9> 'int ()' Function 0x151026b98 'PLUGIN_TRACE' 'int ()'     |   | |-StringLiteral 0x151026f48 <col:22> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x151026fa0 <col:29, col:33> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x151026f68 <col:29> 'struct client_session *' lvalue ParmVar 0x151026628 'cs' 'struct client_session *'     |   `-ReturnStmt 0x151027068 <line:13:9, col:16>     |     `-RecoveryExpr 0x151027048 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x151027158 <line:16:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1510270b8 <col:5> 'int ()' Function 0x151026b98 'PLUGIN_TRACE' 'int ()'     | |-StringLiteral 0x1510270d8 <col:18> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x151027130 <col:25, col:29> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1510270f8 <col:25> 'struct client_session *' lvalue ParmVar 0x151026628 'cs' 'struct client_session *'     `-IfStmt 0x15102a2a8 <line:18:5, line:22:5>       |-BinaryOperator 0x151027558 <line:18:9, col:75> 'int' contains-errors '<'       | |-CallExpr 0x151027520 <col:9, col:71> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x151027390 <col:9> 'int ()' Function 0x1510272d8 'mk_security_check_hotlink' 'int ()'       | | |-RecoveryExpr 0x1510273e8 <col:35, col:39> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x1510273b0 <col:35> 'struct session_request *' lvalue ParmVar 0x1510267f8 'sr' 'struct session_request *'       | | |-RecoveryExpr 0x151027448 <col:54, col:58> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x151027410 <col:54> 'struct session_request *' lvalue ParmVar 0x1510267f8 'sr' 'struct session_request *'       | | `-RecoveryExpr 0x151027500 <col:64> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x1510274c0 <col:75> 'int' 0       `-CompoundStmt 0x15102a290 <col:78, line:22:5>         `-CallExpr 0x15102a228 <line:19:9, col:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x151027578 <col:9> 'int ()' Function 0x151026b98 'PLUGIN_TRACE' 'int ()'           |-StringLiteral 0x151027598 <col:22> 'char[4]' lvalue \"STR\"           `-RecoveryExpr 0x15102a200 <col:29, col:33> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x1510275b8 <col:29> 'struct client_session *' lvalue ParmVar 0x151026628 'cs' 'struct client_session *' ","19230":"`-FunctionDecl 0x145928238  line:1:1 ZEND_METHOD 'int (int, int)'   |-ParmVarDecl 0x145928158 <col:13> col:13 CURLFile 'int'   |-ParmVarDecl 0x1459280d8 <col:23> col:23 __wakeup 'int'   `-CompoundStmt 0x1459287c8 <line:2:1, line:5:1> ","19287":"`-FunctionDecl 0x151128288  line:1:14 invalid Eval 'int (int *, int *)'   |-ParmVarDecl 0x151128128 <col:19, col:34> col:34 referenced invalid context 'int *'   |-ParmVarDecl 0x1511281a8 <col:43, col:55> col:55 invalid node 'int *'   `-CompoundStmt 0x1511426e8 <col:61, line:18:1>     |-DeclStmt 0x1511285d0 <line:2:3, col:68>     | `-VarDecl 0x151128358 <col:3, col:23> col:23 invalid input 'const int *'     `-SwitchStmt 0x151128668 <line:4:3, line:17:3>       |-ImplicitCastExpr 0x151128650 <line:4:11, col:18> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x151128608 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x1511285e8 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1511426b0 <col:24, line:17:3>         |-ReturnStmt 0x151141ea0 <line:6:7, col:65>         | `-BinaryOperator 0x151141e80 <col:14, col:65> 'int' contains-errors ','         |   |-BinaryOperator 0x151141e20 <col:14, col:23> 'int' contains-errors '<'         |   | |-RecoveryExpr 0x1511287d0 <col:14> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x151141e00 <col:23> '<dependent type>' contains-errors lvalue         |   `-BinaryOperator 0x151141e60 <col:36, col:65> 'int' contains-errors '>'         |     |-RecoveryExpr 0x151141e40 <col:36> '<dependent type>' contains-errors lvalue         |     `-ParenExpr 0x151128770 <col:51, col:65> '<dependent type>' contains-errors         |       `-BinaryOperator 0x151128750 <col:52, col:61> '<dependent type>' contains-errors ','         |         |-RecoveryExpr 0x151128710 <col:52> '<dependent type>' contains-errors lvalue         |         `-RecoveryExpr 0x151128730 <col:61> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x1511420b0 <line:8:7, col:63>         | `-BinaryOperator 0x151142090 <col:14, col:63> 'int' contains-errors ','         |   |-BinaryOperator 0x151142030 <col:14, col:23> 'int' contains-errors '<'         |   | |-RecoveryExpr 0x151141ff0 <col:14> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x151142010 <col:23> '<dependent type>' contains-errors lvalue         |   `-BinaryOperator 0x151142070 <col:36, col:63> 'int' contains-errors '>'         |     |-RecoveryExpr 0x151142050 <col:36> '<dependent type>' contains-errors lvalue         |     `-ParenExpr 0x151141f90 <col:49, col:63> '<dependent type>' contains-errors         |       `-BinaryOperator 0x151141f70 <col:50, col:59> '<dependent type>' contains-errors ','         |         |-RecoveryExpr 0x151141f30 <col:50> '<dependent type>' contains-errors lvalue         |         `-RecoveryExpr 0x151141f50 <col:59> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x1511422c0 <line:10:7, col:62>         | `-BinaryOperator 0x1511422a0 <col:14, col:62> 'int' contains-errors ','         |   |-BinaryOperator 0x151142240 <col:14, col:23> 'int' contains-errors '<'         |   | |-RecoveryExpr 0x151142200 <col:14> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x151142220 <col:23> '<dependent type>' contains-errors lvalue         |   `-BinaryOperator 0x151142280 <col:36, col:62> 'int' contains-errors '>'         |     |-RecoveryExpr 0x151142260 <col:36> '<dependent type>' contains-errors lvalue         |     `-ParenExpr 0x1511421a0 <col:48, col:62> '<dependent type>' contains-errors         |       `-BinaryOperator 0x151142180 <col:49, col:58> '<dependent type>' contains-errors ','         |         |-RecoveryExpr 0x151142140 <col:49> '<dependent type>' contains-errors lvalue         |         `-RecoveryExpr 0x151142160 <col:58> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x1511424d0 <line:12:7, col:63>         | `-BinaryOperator 0x1511424b0 <col:14, col:63> 'int' contains-errors ','         |   |-BinaryOperator 0x151142450 <col:14, col:23> 'int' contains-errors '<'         |   | |-RecoveryExpr 0x151142410 <col:14> '<dependent type>' contains-errors lvalue         |   | `-RecoveryExpr 0x151142430 <col:23> '<dependent type>' contains-errors lvalue         |   `-BinaryOperator 0x151142490 <col:36, col:63> 'int' contains-errors '>'         |     |-RecoveryExpr 0x151142470 <col:36> '<dependent type>' contains-errors lvalue         |     `-ParenExpr 0x1511423b0 <col:49, col:63> '<dependent type>' contains-errors         |       `-BinaryOperator 0x151142390 <col:50, col:59> '<dependent type>' contains-errors ','         |         |-RecoveryExpr 0x151142350 <col:50> '<dependent type>' contains-errors lvalue         |         `-RecoveryExpr 0x151142370 <col:59> '<dependent type>' contains-errors lvalue         `-DefaultStmt 0x151142690 <line:13:5, line:15:39>           `-CallExpr 0x151142658 <line:14:7, line:15:39> '<dependent type>' contains-errors             |-CXXDependentScopeMemberExpr 0x151142528 <line:14:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError             | `-RecoveryExpr 0x151142500 <col:7> '<dependent type>' contains-errors lvalue             |   `-DeclRefExpr 0x1511424e0 <col:7> 'int *' lvalue ParmVar 0x151128128 'context' 'int *'             |-RecoveryExpr 0x151142570 <col:28> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x1511425d0 <col:37> 'char[4]' lvalue \"STR\"             `-CXXDependentScopeMemberExpr 0x151142610 <line:15:28, col:35> '<dependent type>' contains-errors lvalue ->type               `-RecoveryExpr 0x1511425f0 <col:28> '<dependent type>' contains-errors lvalue ","19901":"`-FunctionDecl 0x14b141c48  col:14 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x14b141d48 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14b141db0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14b141e18 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14b141cf0 <<invalid sloc>> Implicit 888 ","19291":"`-FunctionDecl 0x12580e0f8  line:1:5 invalid ECDSA_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'   |-ParmVarDecl 0x12580dcd8 <col:18, col:22> col:22 type 'int'   |-ParmVarDecl 0x12580dd88 <col:28, col:49> col:49 used dgst 'const unsigned char *'   |-ParmVarDecl 0x12580de08 <col:55, col:59> col:59 used dgst_len 'int'   |-ParmVarDecl 0x12580de88 <line:2:3, col:24> col:24 used sigbuf 'const unsigned char *'   |-ParmVarDecl 0x12580df08 <col:32, col:36> col:36 used sig_len 'int'   |-ParmVarDecl 0x12580dfd8 <col:45, col:53> col:53 invalid eckey 'int *'   `-CompoundStmt 0x125827db8 <line:3:3, line:14:2>     |-DeclStmt 0x12580e2a0 <line:5:2, col:12>     | `-VarDecl 0x12580e200 <col:2, col:11> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x12580e288 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x12580e268 <col:11> 'int' 1     |-IfStmt 0x1258275b0 <line:8:2, col:27>     | |-BinaryOperator 0x125827528 <col:6, col:11> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1258274e8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x125827508 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1258275a0 <col:17, col:27>     |   `-ImplicitCastExpr 0x125827588 <col:23, col:27> 'int' <LValueToRValue>     |     `-ParenExpr 0x125827568 <col:23, col:27> 'int' lvalue     |       `-DeclRefExpr 0x125827548 <col:24> 'int' lvalue Var 0x12580e200 'ret' 'int'     |-IfStmt 0x125827910 <line:9:2, col:56>     | |-BinaryOperator 0x125827888 <col:6, col:45> 'int' contains-errors '=='     | | |-CallExpr 0x125827830 <col:6, col:40> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1258276b0 <col:6> 'int ()' Function 0x1258275f8 'd2i_ECDSA_SIG' 'int ()'     | | | |-UnaryOperator 0x125827818 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x1258277f8 <col:21> '<dependent type>' contains-errors lvalue     | | | |-UnaryOperator 0x125827750 <col:24, col:25> 'const unsigned char **' prefix '&' cannot overflow     | | | | `-DeclRefExpr 0x125827700 <col:25> 'const unsigned char *' lvalue ParmVar 0x12580de88 'sigbuf' 'const unsigned char *'     | | | `-DeclRefExpr 0x125827768 <col:33> 'int' lvalue ParmVar 0x12580df08 'sig_len' 'int'     | | `-RecoveryExpr 0x125827868 <col:45> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x1258278f8 <col:51, col:56> 'err' 0x1258278a8     |-BinaryOperator 0x125827b88 <line:10:2, col:46> 'int' contains-errors '='     | |-DeclRefExpr 0x125827930 <col:2> 'int' lvalue Var 0x12580e200 'ret' 'int'     | `-CallExpr 0x125827b48 <col:6, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125827a30 <col:6> 'int ()' Function 0x125827978 'ECDSA_do_verify' 'int ()'     |   |-DeclRefExpr 0x125827a50 <col:22> 'const unsigned char *' lvalue ParmVar 0x12580dd88 'dgst' 'const unsigned char *'     |   |-DeclRefExpr 0x125827a70 <col:28> 'int' lvalue ParmVar 0x12580de08 'dgst_len' 'int'     |   |-RecoveryExpr 0x125827b28 <col:38> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x125827aa8 <col:41> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x125827d30 <line:11:1, line:12:18> 'err'     | `-CallExpr 0x125827d08 <col:2, col:18> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125827c88 <col:2> 'int ()' Function 0x125827bd0 'ECDSA_SIG_free' 'int ()'     |   `-RecoveryExpr 0x125827ce8 <col:17> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x125827da8 <line:13:2, col:12>       `-ImplicitCastExpr 0x125827d90 <col:8, col:12> 'int' <LValueToRValue>         `-ParenExpr 0x125827d70 <col:8, col:12> 'int' lvalue           `-DeclRefExpr 0x125827d50 <col:9> 'int' lvalue Var 0x12580e200 'ret' 'int' ","19147":"`-FunctionDecl 0x12c027438  line:1:1 invalid zzip_disk_entry_strdup_comment 'int (int *, struct zzip_disk_entry *)'   |-ParmVarDecl 0x12c00dd28 <col:32, col:43> col:43 invalid disk 'int *'   |-ParmVarDecl 0x12c00e318 <col:49, col:73> col:73 used entry 'struct zzip_disk_entry *'   `-CompoundStmt 0x12c027f00 <line:2:1, line:15:1>     |-IfStmt 0x12c0275e0 <line:3:5, col:35>     | |-BinaryOperator 0x12c027590 <col:9, col:21> 'int' contains-errors '||'     | | |-UnaryOperator 0x12c027528 <col:9, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x12c027510 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x12c0274f0 <col:11> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12c027578 <col:19, col:21> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12c027560 <col:21> 'struct zzip_disk_entry *' <LValueToRValue>     | |     `-DeclRefExpr 0x12c027540 <col:21> 'struct zzip_disk_entry *' lvalue ParmVar 0x12c00e318 'entry' 'struct zzip_disk_entry *'     | `-ReturnStmt 0x12c0275d0 <col:28, col:35>     |   `-IntegerLiteral 0x12c0275b0 <col:35> 'int' 0     |-IfStmt 0x12c027a28 <line:6:5, line:9:9> has_else     | |-RecoveryExpr 0x12c027858 <line:6:9, col:47> '_Bool' contains-errors     | |-NullStmt 0x12c027a20 <line:7:2>     | `-ReturnStmt 0x12c027a10 <line:9:2, col:9>     |   `-IntegerLiteral 0x12c0279f0 <col:9> 'int' 0     |-IfStmt 0x12c027d00 <line:11:5, line:12:9>     | |-BinaryOperator 0x12c027cb0 <line:11:9, col:49> 'int' contains-errors '||'     | | |-BinaryOperator 0x12c027c10 <col:9, col:24> 'int' contains-errors '>'     | | | |-CXXDependentScopeMemberExpr 0x12c027a78 <col:9, col:15> '<dependent type>' contains-errors lvalue ->buffer     | | | | `-RecoveryExpr 0x12c027a58 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12c027bf0 <col:24> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12c027c90 <col:32, col:49> 'int' contains-errors '>'     | |   |-BinaryOperator 0x12c027c70 <col:32, col:37> '<dependent type>' contains-errors '+'     | |   | |-RecoveryExpr 0x12c027c30 <col:32> '<dependent type>' contains-errors lvalue     | |   | `-RecoveryExpr 0x12c027c50 <col:37> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x12c027b68 <col:43, col:49> '<dependent type>' contains-errors lvalue ->endbuf     | |     `-RecoveryExpr 0x12c027b48 <col:43> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c027cf0 <line:12:2, col:9>     |   `-IntegerLiteral 0x12c027cd0 <col:9> 'int' 0     `-ReturnStmt 0x12c027ef0 <line:14:5, col:37>       `-CallExpr 0x12c027ec0 <col:13, col:37> '<dependent type>' contains-errors         |-DeclRefExpr 0x12c027e00 <col:13> 'int ()' Function 0x12c027d48 '_zzip_strndup' 'int ()'         |-RecoveryExpr 0x12c027e80 <col:28> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12c027ea0 <col:34> '<dependent type>' contains-errors lvalue ","19844":"`-FunctionDecl 0x11e142bc8  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x11e142cc8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x11e142d30 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x11e142d98 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11e142c70 <<invalid sloc>> Implicit 882 ","19326":"`-FunctionDecl 0x15682dc08  line:1:12 invalid propfind_schedtag 'int (const int *, int, struct propfind_ctx *, int, int, void *)' static   |-ParmVarDecl 0x1550112f0 <col:30, col:45> col:45 invalid name 'const int *'   |-ParmVarDecl 0x155011370 <col:51, col:60> col:60 invalid ns 'int'   |-ParmVarDecl 0x155011968 <line:2:9, col:30> col:30 used fctx 'struct propfind_ctx *'   |-ParmVarDecl 0x15682d800 <line:3:9, col:20> col:20 invalid resp 'int'   | `-UnusedAttr 0x15682d868 <col:40> unused   |-ParmVarDecl 0x15682d9b0 <line:4:9, col:25> col:25 invalid propstat 'int'   |-ParmVarDecl 0x15682da30 <line:5:9, col:15> col:15 rock 'void *'   | `-UnusedAttr 0x15682da98 <col:35> unused   `-CompoundStmt 0x15682e7c8 <line:6:1, line:19:1>     |-DeclStmt 0x15682dfd8 <line:7:5, col:66>     | |-RecordDecl 0x15682dce0 <col:5, col:12> col:12 struct caldav_data     | `-VarDecl 0x15682de48 <col:5, col:62> col:25 used cdata 'struct caldav_data *' cinit     |   `-CStyleCastExpr 0x15682df98 <col:33, col:62> 'struct caldav_data *' contains-errors <Dependent>     |     `-RecoveryExpr 0x15682dee8 <col:56, col:62> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15682deb0 <col:56> 'struct propfind_ctx *' lvalue ParmVar 0x155011968 'fctx' 'struct propfind_ctx *'     |-IfStmt 0x15682e0c8 <line:9:5, col:35>     | |-UnaryOperator 0x15682e068 <col:9, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15682e050 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15682e028 <col:10, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15682dff0 <col:10> 'struct caldav_data *' contains-errors lvalue Var 0x15682de48 'cdata' 'struct caldav_data *'     | `-ReturnStmt 0x15682e0b8 <col:28, col:35>     |   `-RecoveryExpr 0x15682e098 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15682e2d8 <line:12:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15682e240 <col:5> 'int ()' Function 0x15682e188 'buf_reset' 'int ()'     | `-UnaryOperator 0x15682e2c0 <col:15, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15682e298 <col:16, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15682e260 <col:16> 'struct propfind_ctx *' lvalue ParmVar 0x155011968 'fctx' 'struct propfind_ctx *'     |-CallExpr 0x15682e540 <line:13:5, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15682e3e0 <col:5> 'int ()' Function 0x15682e328 'buf_printf' 'int ()'     | |-UnaryOperator 0x15682e460 <col:16, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15682e438 <col:17, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15682e400 <col:17> 'struct propfind_ctx *' lvalue ParmVar 0x155011968 'fctx' 'struct propfind_ctx *'     | |-StringLiteral 0x15682e4c0 <col:28> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x15682e518 <col:35, col:42> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15682e4e0 <col:35> 'struct caldav_data *' contains-errors lvalue Var 0x15682de48 'cdata' 'struct caldav_data *'     `-ReturnStmt 0x15682e7b8 <line:18:5, col:12>       `-IntegerLiteral 0x15682e798 <col:12> 'int' 0 ","19522":"`-FunctionDecl 0x136026688  line:1:5 ip6_mroute_getsockopt 'int (struct sock *, int, char)'   |-ParmVarDecl 0x13600e248 <col:27, col:40> col:40 used sk 'struct sock *'   |-ParmVarDecl 0x13600e2c8 <col:44, col:48> col:48 used optname 'int'   |-ParmVarDecl 0x13600e340 <col:57, col:62> col:62 __user 'char'   `-CompoundStmt 0x13602ded8 <line:3:1, line:41:1>     |-DeclStmt 0x136026810 <line:4:2, col:9>     | `-VarDecl 0x1360267a8 <col:2, col:6> col:6 used olr 'int'     |-DeclStmt 0x1360268a8 <line:5:2, col:9>     | `-VarDecl 0x136026840 <col:2, col:6> col:6 used val 'int'     |-DeclStmt 0x136026cb8 <line:6:2, col:32>     | |-RecordDecl 0x1360268c0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x136026a28 <col:2, col:31> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x136026c88 <col:20, col:31> 'struct net *' <IntegralToPointer>     |     `-CallExpr 0x136026c48 <col:20, col:31> 'int'     |       |-ImplicitCastExpr 0x136026c30 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x136026bc0 <col:20> 'int ()' Function 0x136026b08 'sock_net' 'int ()'     |       `-ImplicitCastExpr 0x136026c70 <col:29> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x136026be0 <col:29> 'struct sock *' lvalue ParmVar 0x13600e248 'sk' 'struct sock *'     |-DeclStmt 0x136026eb8 <line:7:2, col:23>     | |-RecordDecl 0x136026cd0 <col:2, col:9> col:9 struct mr6_table     | `-VarDecl 0x136026e38 <col:2, col:20> col:20 used mrt 'struct mr6_table *'     |-BinaryOperator 0x136027420 <line:9:2, col:72> 'struct mr6_table *' contains-errors '='     | |-DeclRefExpr 0x136026ed0 <col:2> 'struct mr6_table *' lvalue Var 0x136026e38 'mrt' 'struct mr6_table *'     | `-CallExpr 0x1360273f0 <col:8, col:72> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136026fd0 <col:8> 'int ()' Function 0x136026f18 'ip6mr_get_table' 'int ()'     |   |-DeclRefExpr 0x136026ff0 <col:24> 'struct net *' lvalue Var 0x136026a28 'net' 'struct net *'     |   `-BinaryConditionalOperator 0x1360273b0 <col:29, col:58> '<dependent type>' contains-errors     |     |-ImplicitCastExpr 0x136027380 <col:29, col:42> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x136027338 <col:29, col:42> '<dependent type>' contains-errors lvalue     |     |   `-CallExpr 0x1360272f8 <col:29, col:39> 'int'     |     |     |-ImplicitCastExpr 0x1360272e0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |     |     | `-DeclRefExpr 0x1360270f0 <col:29> 'int ()' Function 0x136027038 'raw6_sk' 'int ()'     |     |     `-ImplicitCastExpr 0x136027320 <col:37> 'struct sock *' <LValueToRValue>     |     |       `-DeclRefExpr 0x136027110 <col:37> 'struct sock *' lvalue ParmVar 0x13600e248 'sk' 'struct sock *'     |     |-OpaqueValueExpr 0x136027398 <col:29, col:42> '<dependent type>' contains-errors     |     | `-ImplicitCastExpr 0x136027380 <col:29, col:42> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x136027338 <col:29, col:42> '<dependent type>' contains-errors lvalue     |     |     `-CallExpr 0x1360272f8 <col:29, col:39> 'int'     |     |       |-ImplicitCastExpr 0x1360272e0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |     |       | `-DeclRefExpr 0x1360270f0 <col:29> 'int ()' Function 0x136027038 'raw6_sk' 'int ()'     |     |       `-ImplicitCastExpr 0x136027320 <col:37> 'struct sock *' <LValueToRValue>     |     |         `-DeclRefExpr 0x136027110 <col:37> 'struct sock *' lvalue ParmVar 0x13600e248 'sk' 'struct sock *'     |     |-OpaqueValueExpr 0x136027398 <col:29, col:42> '<dependent type>' contains-errors     |     | `-ImplicitCastExpr 0x136027380 <col:29, col:42> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x136027338 <col:29, col:42> '<dependent type>' contains-errors lvalue     |     |     `-CallExpr 0x1360272f8 <col:29, col:39> 'int'     |     |       |-ImplicitCastExpr 0x1360272e0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |     |       | `-DeclRefExpr 0x1360270f0 <col:29> 'int ()' Function 0x136027038 'raw6_sk' 'int ()'     |     |       `-ImplicitCastExpr 0x136027320 <col:37> 'struct sock *' <LValueToRValue>     |     |         `-DeclRefExpr 0x136027110 <col:37> 'struct sock *' lvalue ParmVar 0x13600e248 'sk' 'struct sock *'     |     `-RecoveryExpr 0x136027360 <col:58> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136027538 <line:10:2, line:11:11>     | |-UnaryOperator 0x136027478 <line:10:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x136027460 <col:7> 'struct mr6_table *' <LValueToRValue>     | |   `-DeclRefExpr 0x136027440 <col:7> 'struct mr6_table *' lvalue Var 0x136026e38 'mrt' 'struct mr6_table *'     | `-ReturnStmt 0x136027528 <line:11:3, col:11>     |   `-UnaryOperator 0x136027510 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1360274f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1360274d8 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x136027590 <line:13:2, line:27:2>     | |-ImplicitCastExpr 0x136027578 <line:13:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x136027558 <col:10> 'int' lvalue ParmVar 0x13600e2c8 'optname' 'int'     | `-CompoundStmt 0x13602d5d0 <col:19, line:27:2>     |   |-BinaryOperator 0x13602d420 <line:15:3, col:9> 'int' '='     |   | |-DeclRefExpr 0x1360275d0 <col:3> 'int' lvalue Var 0x136026840 'val' 'int'     |   | `-IntegerLiteral 0x13602d400 <col:9> 'int' 773     |   |-BreakStmt 0x13602d440 <line:16:3>     |   |-BinaryOperator 0x13602d4e0 <line:23:3, col:14> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13602d460 <col:3> 'int' lvalue Var 0x136026840 'val' 'int'     |   | `-RecoveryExpr 0x13602d4b8 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13602d480 <col:9> 'struct mr6_table *' lvalue Var 0x136026e38 'mrt' 'struct mr6_table *'     |   |-BreakStmt 0x13602d500 <line:24:3>     |   `-DefaultStmt 0x13602d5b0 <line:25:2, line:26:11>     |     `-ReturnStmt 0x13602d5a0 <col:3, col:11>     |       `-UnaryOperator 0x13602d588 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x13602d570 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x13602d550 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13602d868 <line:29:2, line:30:11>     | |-CallExpr 0x13602d790 <line:29:6, col:26> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13602d6e8 <col:6> 'int ()' Function 0x13602d630 'get_user' 'int ()'     | | |-DeclRefExpr 0x13602d708 <col:15> 'int' lvalue Var 0x1360267a8 'olr' 'int'     | | `-RecoveryExpr 0x13602d770 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13602d858 <line:30:3, col:11>     |   `-UnaryOperator 0x13602d840 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13602d828 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13602d808 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13602db20 <line:33:2, line:34:11>     | |-BinaryOperator 0x13602da58 <line:33:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x13602da40 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13602da00 <col:6> 'int' lvalue Var 0x1360267a8 'olr' 'int'     | | `-IntegerLiteral 0x13602da20 <col:12> 'int' 0     | `-ReturnStmt 0x13602db10 <line:34:3, col:11>     |   `-UnaryOperator 0x13602daf8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13602dae0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13602dac0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13602dec8 <line:40:2, col:9>       `-IntegerLiteral 0x13602dea8 <col:9> 'int' 0 ","19719":"`-FunctionDecl 0x14084be58  line:1:1 invalid xsltParseTemplateContent 'int (int, int)'   |-ParmVarDecl 0x14084bcf0 <col:26, col:44> col:44 invalid style 'int'   |-ParmVarDecl 0x14084bd70 <col:51, col:62> col:62 invalid templ 'int'   `-CompoundStmt 0x140865df0 <col:69, line:27:1>     |-IfStmt 0x14084bff0 <line:2:5, line:3:2>     | |-RecoveryExpr 0x14084bfc0 <line:2:9, col:42> '_Bool' contains-errors     | `-ReturnStmt 0x14084bfe0 <line:3:2>     |-IfStmt 0x140865438 <line:6:5, line:8:5>     | |-BinaryOperator 0x14084c2c0 <line:6:9, col:47> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14084c220 <col:9, col:35> '<dependent type>' contains-errors lvalue ->category     | | | `-CXXDependentScopeMemberExpr 0x14084c1d8 <col:9, col:28> '<dependent type>' contains-errors lvalue ->inode     | | |   `-CallExpr 0x14084c1b0 <col:9, col:25> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x14084c170 <col:9> 'int ()' Function 0x14084c0b8 'XSLT_CCTXT' 'int ()'     | | |     `-RecoveryExpr 0x14084c190 <col:20> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14084c2a0 <col:47> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140865420 <col:80, line:8:5>     |   `-BinaryOperator 0x140865400 <line:7:2, col:48> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14084c390 <col:2, col:28> '<dependent type>' contains-errors lvalue ->extContentHandled     |     | `-CXXDependentScopeMemberExpr 0x14084c348 <col:2, col:21> '<dependent type>' contains-errors lvalue ->inode     |     |   `-CallExpr 0x14084c320 <col:2, col:18> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x14084c2e0 <col:2> 'int ()' Function 0x14084c0b8 'XSLT_CCTXT' 'int ()'     |     |     `-RecoveryExpr 0x14084c300 <col:13> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x14084c3d8 <col:48> 'int' 1     `-IfStmt 0x140865dd0 <line:10:5, line:26:5>       |-BinaryOperator 0x140865518 <line:10:9, col:28> 'int' contains-errors '!='       | |-CXXDependentScopeMemberExpr 0x140865478 <col:9, col:16> '<dependent type>' contains-errors lvalue ->children       | | `-RecoveryExpr 0x140865458 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1408654f8 <col:28> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x140865db8 <col:34, line:26:5>         `-DoStmt 0x140865c30 <line:13:2, line:23:24>           |-CompoundStmt 0x140865bf8 <line:13:5, line:23:2>           | `-IfStmt 0x140865bc8 <line:14:6, line:21:3> has_else           |   |-RecoveryExpr 0x140865810 <line:14:10, line:16:28> '_Bool' contains-errors           |   |-CompoundStmt 0x140865ba0 <line:17:6, line:20:6>           |   | |-BinaryOperator 0x140865980 <line:18:3, col:44> '<dependent type>' contains-errors '='           |   | | |-CXXDependentScopeMemberExpr 0x1408658e0 <col:3, col:29> '<dependent type>' contains-errors lvalue ->curChildType           |   | | | `-CXXDependentScopeMemberExpr 0x140865898 <col:3, col:22> '<dependent type>' contains-errors lvalue ->inode           |   | | |   `-CallExpr 0x140865870 <col:3, col:19> '<dependent type>' contains-errors           |   | | |     |-DeclRefExpr 0x140865830 <col:3> 'int ()' Function 0x14084c0b8 'XSLT_CCTXT' 'int ()'           |   | | |     `-RecoveryExpr 0x140865850 <col:14> '<dependent type>' contains-errors lvalue           |   | | `-RecoveryExpr 0x140865960 <col:44> '<dependent type>' contains-errors lvalue           |   | `-CallExpr 0x140865b70 <line:19:3, col:48> '<dependent type>' contains-errors           |   |   |-DeclRefExpr 0x140865a80 <col:3> 'int ()' Function 0x1408659c8 'xsltParseAnyXSLTElem' 'int ()'           |   |   |-CallExpr 0x140865ae0 <col:24, col:40> '<dependent type>' contains-errors           |   |   | |-DeclRefExpr 0x140865aa0 <col:24> 'int ()' Function 0x14084c0b8 'XSLT_CCTXT' 'int ()'           |   |   | `-RecoveryExpr 0x140865ac0 <col:35> '<dependent type>' contains-errors lvalue           |   |   `-RecoveryExpr 0x140865b50 <col:43> '<dependent type>' contains-errors lvalue           |   `-BreakStmt 0x140865bc0 <line:21:3>           `-RecoveryExpr 0x140865c10 <line:23:11, col:20> '_Bool' contains-errors ","19192":"`-FunctionDecl 0x13a80dda8  line:1:1 PHP_MINIT_FUNCTION 'int (int)'   |-ParmVarDecl 0x13a80dcd8 <col:20> col:20 http_url 'int'   `-CompoundStmt 0x13c809120 <line:2:1, line:41:1>     `-CallExpr 0x13a80e100 <line:5:2, col:53> '<dependent type>' contains-errors       |-DeclRefExpr 0x13a80dfd0 <col:2> 'int ()' Function 0x13a80df18 'INIT_NS_CLASS_ENTRY' 'int ()'       |-RecoveryExpr 0x13a80e0c0 <col:22> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x13a80e050 <col:26> 'char[4]' lvalue \"STR\"       `-RecoveryExpr 0x13a80e0e0 <col:33> '<dependent type>' contains-errors lvalue ","19637":"`-FunctionDecl 0x12200e350  line:1:6 elv_unregister 'void (struct elevator_type *)'   |-ParmVarDecl 0x12200e248 <col:21, col:43> col:43 used e 'struct elevator_type *'   `-CompoundStmt 0x122027010 <line:2:1, line:14:1>     |-CallExpr 0x122026820 <line:4:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122026770 <col:2> 'int ()' Function 0x1220266b8 'spin_lock' 'int ()'     | `-UnaryOperator 0x122026808 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1220267e8 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1220269c0 <line:5:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122026928 <col:2> 'int ()' Function 0x122026870 'list_del_init' 'int ()'     | `-UnaryOperator 0x1220269a8 <col:16, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x122026980 <col:17, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x122026948 <col:17> 'struct elevator_type *' lvalue ParmVar 0x12200e248 'e' 'struct elevator_type *'     |-CallExpr 0x122026b78 <line:6:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122026ac8 <col:2> 'int ()' Function 0x122026a10 'spin_unlock' 'int ()'     | `-UnaryOperator 0x122026b60 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x122026b40 <col:15> '<dependent type>' contains-errors lvalue     `-IfStmt 0x122026ff0 <line:9:2, line:13:2>       |-RecoveryExpr 0x122026bd8 <line:9:6, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x122026ba0 <col:6> 'struct elevator_type *' lvalue ParmVar 0x12200e248 'e' 'struct elevator_type *'       `-CompoundStmt 0x122026fc8 <col:20, line:13:2>         |-CallExpr 0x122026d48 <line:10:3, col:15> 'int'         | `-ImplicitCastExpr 0x122026d30 <col:3> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x122026ce0 <col:3> 'int ()' Function 0x122026c28 'rcu_barrier' 'int ()'         |-CallExpr 0x122026ec8 <line:11:3, col:34> '<dependent type>' contains-errors         | |-DeclRefExpr 0x122026e48 <col:3> 'int ()' Function 0x122026d90 'kmem_cache_destroy' 'int ()'         | `-RecoveryExpr 0x122026ea0 <col:22, col:25> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x122026e68 <col:22> 'struct elevator_type *' lvalue ParmVar 0x12200e248 'e' 'struct elevator_type *'         `-BinaryOperator 0x122026fa8 <line:12:3, col:18> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x122026f28 <col:3, col:6> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x122026ef0 <col:3> 'struct elevator_type *' lvalue ParmVar 0x12200e248 'e' 'struct elevator_type *'           `-RecoveryExpr 0x122026f88 <col:18> '<dependent type>' contains-errors lvalue ","19984":"`-FunctionDecl 0x127008930  col:17 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x127008a30 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x127008a98 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x127008b00 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x1270089d8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x127008b80 <col:17> Implicit printf 3 4 ","20029":"`-FunctionDecl 0x15b144d40  line:1:6 xfrm_sad_getinfo 'void (struct net *, struct xfrmk_sadinfo *)'   |-ParmVarDecl 0x15b128648 <col:23, col:35> col:35 used net 'struct net *'   |-ParmVarDecl 0x15b144c28 <col:40, col:62> col:62 used si 'struct xfrmk_sadinfo *'   `-CompoundStmt 0x15b1455c8 <line:2:1, line:8:1>     |-CallExpr 0x15b145050 <line:3:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b144f70 <col:2> 'int ()' Function 0x15b144eb8 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x15b145038 <col:15, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x15b144ff0 <col:16, col:26> '<dependent type>' contains-errors lvalue .xfrm_state_lock     |     `-RecoveryExpr 0x15b144fc8 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b144f90 <col:16> 'struct net *' lvalue ParmVar 0x15b128648 'net' 'struct net *'     |-BinaryOperator 0x15b145180 <line:4:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b1450b0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b145078 <col:2> 'struct xfrmk_sadinfo *' lvalue ParmVar 0x15b144c28 'si' 'struct xfrmk_sadinfo *'     | `-CXXDependentScopeMemberExpr 0x15b145138 <col:15, col:25> '<dependent type>' contains-errors lvalue .state_num     |   `-RecoveryExpr 0x15b145110 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b1450d8 <col:15> 'struct net *' lvalue ParmVar 0x15b128648 'net' 'struct net *'     |-BinaryOperator 0x15b1452e8 <line:5:2, col:40> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b1451d8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b1451a0 <col:2> 'struct xfrmk_sadinfo *' lvalue ParmVar 0x15b144c28 'si' 'struct xfrmk_sadinfo *'     | `-BinaryOperator 0x15b1452c8 <col:16, col:40> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x15b145260 <col:16, col:26> '<dependent type>' contains-errors lvalue .state_hmask     |   | `-RecoveryExpr 0x15b145238 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15b145200 <col:16> 'struct net *' lvalue ParmVar 0x15b128648 'net' 'struct net *'     |   `-IntegerLiteral 0x15b1452a8 <col:40> 'int' 1     |-BinaryOperator 0x15b1453c0 <line:6:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15b145340 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15b145308 <col:2> 'struct xfrmk_sadinfo *' lvalue ParmVar 0x15b144c28 'si' 'struct xfrmk_sadinfo *'     | `-RecoveryExpr 0x15b1453a0 <col:17> '<dependent type>' contains-errors lvalue     `-CallExpr 0x15b1455a0 <line:7:2, col:43> '<dependent type>' contains-errors       |-DeclRefExpr 0x15b1454c0 <col:2> 'int ()' Function 0x15b145408 'spin_unlock_bh' 'int ()'       `-UnaryOperator 0x15b145588 <col:17, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x15b145540 <col:18, col:28> '<dependent type>' contains-errors lvalue .xfrm_state_lock           `-RecoveryExpr 0x15b145518 <col:18, col:23> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x15b1454e0 <col:18> 'struct net *' lvalue ParmVar 0x15b128648 'net' 'struct net *' ","19333":"`-FunctionDecl 0x15c027308  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x15c027408 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x15c0273b0 <<invalid sloc>> Implicit 873 ","19232":"`-FunctionDecl 0x1521227f8  line:1:12 invalid cirrus_bitblt_videotovideo_patterncopy 'int (int *)' static   |-ParmVarDecl 0x152122728 <col:51, col:68> col:68 invalid s 'int *'   `-CompoundStmt 0x152122be8 <line:2:1, line:6:1>     `-ReturnStmt 0x152122bd8 <line:3:5, line:5:73>       `-CallExpr 0x152122ba8 <line:3:12, line:5:73> '<dependent type>' contains-errors         |-DeclRefExpr 0x152122a00 <line:3:12> 'int ()' Function 0x152122948 'cirrus_bitblt_common_patterncopy' 'int ()'         |-RecoveryExpr 0x152122a20 <col:45> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x152122b88 <line:4:10, line:5:72> '<dependent type>' contains-errors '+'           |-CXXDependentScopeMemberExpr 0x152122a60 <line:4:10, col:13> '<dependent type>' contains-errors lvalue ->vram_ptr           | `-RecoveryExpr 0x152122a40 <col:10> '<dependent type>' contains-errors lvalue           `-ParenExpr 0x152122b68 <line:5:45, col:72> '<dependent type>' contains-errors             `-BinaryOperator 0x152122b48 <col:46, col:71> '<dependent type>' contains-errors '&'               |-CXXDependentScopeMemberExpr 0x152122ac8 <col:46, col:49> '<dependent type>' contains-errors lvalue ->cirrus_blt_srcaddr               | `-RecoveryExpr 0x152122aa8 <col:46> '<dependent type>' contains-errors lvalue               `-UnaryOperator 0x152122b30 <col:70, col:71> 'int' prefix '~' cannot overflow                 `-IntegerLiteral 0x152122b10 <col:71> 'int' 7 ","19810":"`-FunctionDecl 0x1458306b8  col:9 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x1458307b8 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x145830820 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x145830888 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x145830760 <<invalid sloc>> Implicit 888 ","19389":"`-FunctionDecl 0x126928288  line:1:1 invalid print_p2r 'int (const unsigned char *, int)'   |-ParmVarDecl 0x126928108 <col:12, col:33> col:33 used msg 'const unsigned char *'   |-ParmVarDecl 0x1269281a0 <col:38, col:45> col:45 invalid msglen 'int'   `-CompoundStmt 0x127009b60 <line:2:1, line:51:1>     `-SwitchStmt 0x126928428 <line:3:3, line:50:5>       |-ConditionalOperator 0x1269283f8 <line:3:11, col:26> '<dependent type>' contains-errors       | |-RecoveryExpr 0x126928340 <col:11> '<dependent type>' contains-errors lvalue       | |-ArraySubscriptExpr 0x1269283b8 <col:19, col:24> 'const unsigned char' lvalue       | | |-ImplicitCastExpr 0x1269283a0 <col:19> 'const unsigned char *' <LValueToRValue>       | | | `-DeclRefExpr 0x126928360 <col:19> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'       | | `-IntegerLiteral 0x126928380 <col:23> 'int' 0       | `-IntegerLiteral 0x1269283d8 <col:26> 'int' 0       `-CompoundStmt 0x127009a60 <line:4:5, line:50:5>         |-CallExpr 0x126928620 <line:6:7, col:40> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269285c0 <col:7> 'int ()' Function 0x126928508 'print_p2r_iccpoweron' 'int ()'         | |-DeclRefExpr 0x1269285e0 <col:29> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126928600 <col:34> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126928650 <line:7:7>         |-CallExpr 0x1269287b0 <line:9:7, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126928750 <col:7> 'int ()' Function 0x126928698 'print_p2r_iccpoweroff' 'int ()'         | |-DeclRefExpr 0x126928770 <col:30> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126928790 <col:35> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x1269287e0 <line:10:7>         |-CallExpr 0x126941940 <line:12:7, col:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269418e0 <col:7> 'int ()' Function 0x126941828 'print_p2r_getslotstatus' 'int ()'         | |-DeclRefExpr 0x126941900 <col:32> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941920 <col:37> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941970 <line:13:7>         |-CallExpr 0x126941ad0 <line:15:7, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126941a70 <col:7> 'int ()' Function 0x1269419b8 'print_p2r_xfrblock' 'int ()'         | |-DeclRefExpr 0x126941a90 <col:27> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941ab0 <col:32> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941b00 <line:16:7>         |-CallExpr 0x126941c60 <line:18:7, col:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126941c00 <col:7> 'int ()' Function 0x126941b48 'print_p2r_getparameters' 'int ()'         | |-DeclRefExpr 0x126941c20 <col:32> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941c40 <col:37> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941c90 <line:19:7>         |-CallExpr 0x126941df0 <line:21:7, col:45> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126941d90 <col:7> 'int ()' Function 0x126941cd8 'print_p2r_resetparameters' 'int ()'         | |-DeclRefExpr 0x126941db0 <col:34> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941dd0 <col:39> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941e20 <line:22:7>         |-CallExpr 0x126941f80 <line:24:7, col:43> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126941f20 <col:7> 'int ()' Function 0x126941e68 'print_p2r_setparameters' 'int ()'         | |-DeclRefExpr 0x126941f40 <col:32> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126941f60 <col:37> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126941fb0 <line:25:7>         |-CallExpr 0x126942110 <line:27:7, col:36> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269420b0 <col:7> 'int ()' Function 0x126941ff8 'print_p2r_escape' 'int ()'         | |-DeclRefExpr 0x1269420d0 <col:25> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x1269420f0 <col:30> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126942140 <line:28:7>         |-CallExpr 0x1269422a0 <line:30:7, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126942240 <col:7> 'int ()' Function 0x126942188 'print_p2r_iccclock' 'int ()'         | |-DeclRefExpr 0x126942260 <col:27> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126942280 <col:32> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x1269422d0 <line:31:7>         |-CallExpr 0x126942418 <line:33:7, col:37> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269423b8 <col:7> 'int ()' Function 0x126942300 'print_p2r_to0apdu' 'int ()'         | |-DeclRefExpr 0x1269423d8 <col:26> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x1269423f8 <col:31> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126942448 <line:34:7>         |-CallExpr 0x126942590 <line:36:7, col:36> '<dependent type>' contains-errors         | |-DeclRefExpr 0x126942530 <col:7> 'int ()' Function 0x126942478 'print_p2r_secure' 'int ()'         | |-DeclRefExpr 0x126942550 <col:25> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x126942570 <col:30> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x1269425c0 <line:37:7>         |-CallExpr 0x126942708 <line:39:7, col:40> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1269426a8 <col:7> 'int ()' Function 0x1269425f0 'print_p2r_mechanical' 'int ()'         | |-DeclRefExpr 0x1269426c8 <col:29> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x1269426e8 <col:34> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x126942738 <line:40:7>         |-CallExpr 0x127009718 <line:42:7, col:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1270096b8 <col:7> 'int ()' Function 0x127009600 'print_p2r_abort' 'int ()'         | |-DeclRefExpr 0x1270096d8 <col:24> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x1270096f8 <col:29> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x127009748 <line:43:7>         |-CallExpr 0x127009890 <line:45:7, col:41> '<dependent type>' contains-errors         | |-DeclRefExpr 0x127009830 <col:7> 'int ()' Function 0x127009778 'print_p2r_setdatarate' 'int ()'         | |-DeclRefExpr 0x127009850 <col:30> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         | `-RecoveryExpr 0x127009870 <col:35> '<dependent type>' contains-errors lvalue         |-BreakStmt 0x1270098c0 <line:46:7>         |-DefaultStmt 0x127009a38 <line:47:5, line:48:37>         | `-CallExpr 0x127009a08 <col:7, col:37> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1270099a8 <col:7> 'int ()' Function 0x1270098f0 'print_p2r_unknown' 'int ()'         |   |-DeclRefExpr 0x1270099c8 <col:26> 'const unsigned char *' lvalue ParmVar 0x126928108 'msg' 'const unsigned char *'         |   `-RecoveryExpr 0x1270099e8 <col:31> '<dependent type>' contains-errors lvalue         `-BreakStmt 0x127009a58 <line:49:7> ","19690":"`-FunctionDecl 0x11c942148  col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x11c942248 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x11c9422b0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x11c942318 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x11c9421f0 <<invalid sloc>> Implicit 888 ","19480":"`-FunctionDecl 0x12790d488  line:1:1 invalid gdm_session_worker_uninitialize_pam 'int (int *, int)'   |-ParmVarDecl 0x12790d328 <col:38, col:56> col:56 referenced invalid worker 'int *'   |-ParmVarDecl 0x12790d3a8 <line:2:38, col:56> col:56 used status 'int'   `-CompoundStmt 0x1279282d8 <line:3:1, line:48:1>     |-CallExpr 0x12790d768 <line:4:9, col:23> 'int'     | |-ImplicitCastExpr 0x12790d750 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12790d6a0 <col:9> 'int ()' Function 0x12790d5e8 'g_debug' 'int ()'     | `-ImplicitCastExpr 0x12790d790 <col:18> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x12790d700 <col:18> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12790d8e0 <line:6:9, line:7:17>     | |-BinaryOperator 0x12790d8b0 <line:6:13, col:41> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12790d810 <col:13, col:27> '<dependent type>' contains-errors lvalue ->pam_handle     | | | `-CXXDependentScopeMemberExpr 0x12790d7c8 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x12790d7a8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12790d890 <col:41> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12790d8d0 <line:7:17>     |-IfStmt 0x127927838 <line:9:9, line:35:9> has_else     | |-BinaryOperator 0x127926a20 <line:9:13, col:36> 'int' contains-errors '>='     | | |-CXXDependentScopeMemberExpr 0x12790d968 <col:13, col:27> '<dependent type>' contains-errors lvalue ->state     | | | `-CXXDependentScopeMemberExpr 0x12790d920 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x12790d900 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x127926a00 <col:36> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x127926e18 <col:77, line:25:9>     | | |-CallExpr 0x127926c10 <line:10:17, col:63> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x127926b20 <col:17> 'int ()' Function 0x127926a68 'pam_close_session' 'int ()'     | | | |-CXXDependentScopeMemberExpr 0x127926ba8 <col:36, col:50> '<dependent type>' contains-errors lvalue ->pam_handle     | | | | `-CXXDependentScopeMemberExpr 0x127926b60 <col:36, col:44> '<dependent type>' contains-errors lvalue ->priv     | | | |   `-RecoveryExpr 0x127926b40 <col:36> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x127926bf0 <col:62> 'int' 0     | | `-CallExpr 0x127926df0 <line:11:17, col:73> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x127926d20 <col:17> 'int ()' Function 0x127926c68 'gdm_session_auditor_report_logout' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x127926da8 <col:52, col:66> '<dependent type>' contains-errors lvalue ->auditor     | |     `-CXXDependentScopeMemberExpr 0x127926d60 <col:52, col:60> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x127926d40 <col:52> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127927810 <line:25:16, line:35:9>     |   |-DeclStmt 0x127926eb8 <line:26:17, col:24>     |   | `-VarDecl 0x127926e50 <col:17, col:23> col:23 used p 'void *'     |   |-IfStmt 0x1279273e8 <line:28:17, line:30:17>     |   | |-RecoveryExpr 0x127927158 <line:28:21, col:80> '_Bool' contains-errors     |   | `-CompoundStmt 0x1279273d0 <col:93, line:30:17>     |   |   `-CallExpr 0x1279273a0 <line:29:25, col:97> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x127927258 <col:25> 'int ()' Function 0x1279271a0 'gdm_session_auditor_set_username' 'int ()'     |   |     |-CXXDependentScopeMemberExpr 0x1279272e0 <col:59, col:73> '<dependent type>' contains-errors lvalue ->auditor     |   |     | `-CXXDependentScopeMemberExpr 0x127927298 <col:59, col:67> '<dependent type>' contains-errors lvalue ->priv     |   |     |   `-RecoveryExpr 0x127927278 <col:59> '<dependent type>' contains-errors lvalue     |   |     `-CStyleCastExpr 0x127927378 <col:82, col:96> 'const char *' <BitCast>     |   |       `-ImplicitCastExpr 0x127927360 <col:96> 'void *' <LValueToRValue> part_of_explicit_cast     |   |         `-DeclRefExpr 0x127927328 <col:96> 'void *' lvalue Var 0x127926e50 'p' 'void *'     |   `-CallExpr 0x1279277d8 <line:32:17, line:34:106> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1279274e8 <line:32:17> 'int ()' Function 0x127927430 'gdm_session_auditor_report_login_failure' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x127927570 <col:59, col:73> '<dependent type>' contains-errors lvalue ->auditor     |     | `-CXXDependentScopeMemberExpr 0x127927528 <col:59, col:67> '<dependent type>' contains-errors lvalue ->priv     |     |   `-RecoveryExpr 0x127927508 <col:59> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x1279275b8 <line:33:59> 'int' lvalue ParmVar 0x12790d3a8 'status' 'int'     |     `-CallExpr 0x1279277a8 <line:34:59, col:105> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1279276b8 <col:59> 'int ()' Function 0x127927600 'pam_strerror' 'int ()'     |       |-CXXDependentScopeMemberExpr 0x127927740 <col:73, col:87> '<dependent type>' contains-errors lvalue ->pam_handle     |       | `-CXXDependentScopeMemberExpr 0x1279276f8 <col:73, col:81> '<dependent type>' contains-errors lvalue ->priv     |       |   `-RecoveryExpr 0x1279276d8 <col:73> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x127927788 <col:99> 'int' lvalue ParmVar 0x12790d3a8 'status' 'int'     |-IfStmt 0x127927c38 <line:37:9, line:39:9>     | |-BinaryOperator 0x127927970 <line:37:13, col:36> 'int' contains-errors '>='     | | |-CXXDependentScopeMemberExpr 0x1279278d0 <col:13, col:27> '<dependent type>' contains-errors lvalue ->state     | | | `-CXXDependentScopeMemberExpr 0x127927888 <col:13, col:21> '<dependent type>' contains-errors lvalue ->priv     | | |   `-RecoveryExpr 0x127927868 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x127927950 <col:36> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127927c20 <col:73, line:39:9>     |   `-CallExpr 0x127927bf0 <line:38:17, col:71> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x127927ab8 <col:17> 'int ()' Function 0x127927a00 'pam_setcred' 'int ()'     |     |-CXXDependentScopeMemberExpr 0x127927b40 <col:30, col:44> '<dependent type>' contains-errors lvalue ->pam_handle     |     | `-CXXDependentScopeMemberExpr 0x127927af8 <col:30, col:38> '<dependent type>' contains-errors lvalue ->priv     |     |   `-RecoveryExpr 0x127927ad8 <col:30> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x127927bd0 <col:56> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127927e28 <line:41:9, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127927d38 <col:9> 'int ()' Function 0x127927c80 'pam_end' 'int ()'     | |-CXXDependentScopeMemberExpr 0x127927dc0 <col:18, col:32> '<dependent type>' contains-errors lvalue ->pam_handle     | | `-CXXDependentScopeMemberExpr 0x127927d78 <col:18, col:26> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x127927d58 <col:18> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x127927e08 <col:44> 'int' lvalue ParmVar 0x12790d3a8 'status' 'int'     |-BinaryOperator 0x127927f88 <line:42:9, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127927ee8 <col:9, col:23> '<dependent type>' contains-errors lvalue ->pam_handle     | | `-CXXDependentScopeMemberExpr 0x127927ea0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x127927e78 <col:9> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x127927e58 <col:9> 'int *' lvalue ParmVar 0x12790d328 'worker' 'int *'     | `-RecoveryExpr 0x127927f68 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1279280c8 <line:44:9, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127928088 <col:9> 'int ()' Function 0x127927fd0 'gdm_session_worker_stop_auditor' 'int ()'     | `-RecoveryExpr 0x1279280a8 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127928148 <line:46:9, col:23> 'int'     | |-ImplicitCastExpr 0x127928130 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1279280f0 <col:9> 'int ()' Function 0x12790d5e8 'g_debug' 'int ()'     | `-ImplicitCastExpr 0x127928170 <col:18> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x127928110 <col:18> 'char[4]' lvalue \"STR\"     `-BinaryOperator 0x1279282b8 <line:47:9, col:31> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x127928218 <col:9, col:23> '<dependent type>' contains-errors lvalue ->state       | `-CXXDependentScopeMemberExpr 0x1279281d0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->priv       |   `-RecoveryExpr 0x1279281a8 <col:9> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x127928188 <col:9> 'int *' lvalue ParmVar 0x12790d328 'worker' 'int *'       `-RecoveryExpr 0x127928298 <col:31> '<dependent type>' contains-errors lvalue ","19727":"`-FunctionDecl 0x130141838  col:11 implicit used strtol 'long (const char *, char **, int)' extern   |-ParmVarDecl 0x130141938 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x130142000 <<invalid sloc>> <invalid sloc> 'char **'   |-ParmVarDecl 0x130142068 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1301418e0 <<invalid sloc>> Implicit 877 ","19830":"`-FunctionDecl 0x12180de38  line:1:1 PHP_METHOD 'int (int, int)'   |-ParmVarDecl 0x12180dd58 <col:12> col:12 domimplementation 'int'   |-ParmVarDecl 0x12180dcd8 <col:31> col:31 createDocumentType 'int'   `-CompoundStmt 0x121124608 <line:2:1, line:54:1>     |-DeclStmt 0x12180dfe8 <line:4:2, col:9>     | `-VarDecl 0x12180df80 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x12180e288 <line:5:2, col:56> '<dependent type>' contains-errors ','     | |-BinaryOperator 0x12180e228 <col:2, col:38> '<dependent type>' contains-errors ','     | | |-RecoveryExpr 0x12180e1b8 <col:2, col:20> '<dependent type>' contains-errors lvalue     | | | |-UnaryExprOrTypeTraitExpr 0x12180e198 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | | | `-RecoveryExpr 0x12180e178 <col:9> '<dependent type>' contains-errors lvalue     | | | `-IntegerLiteral 0x12180e038 <col:20> 'int' 0     | | `-BinaryOperator 0x12180e208 <col:23, col:38> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x12180e1e8 <col:23> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x12180e0a0 <col:38> 'int' 0     | `-BinaryOperator 0x12180e268 <col:41, col:56> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12180e248 <col:41> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12180e118 <col:56> 'int' 0     |-DeclStmt 0x121122cf8 <line:6:2, col:55>     | |-VarDecl 0x12180e2c0 <col:2, col:15> col:8 used name 'char *' cinit     | | `-RecoveryExpr 0x12180e340 <col:15> '<dependent type>' contains-errors lvalue     | |-VarDecl 0x12180e378 <col:2, col:33> col:22 used publicid 'char *' cinit     | | `-RecoveryExpr 0x121122c00 <col:33> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x121122c38 <col:2, col:51> col:40 used systemid 'char *' cinit     |   `-RecoveryExpr 0x121122cb8 <col:51> '<dependent type>' contains-errors lvalue     |-IfStmt 0x121123260 <line:10:2, line:12:2>     | |-RecoveryExpr 0x121123218 <line:10:6, col:125> '_Bool' contains-errors     | `-CompoundStmt 0x121123248 <col:134, line:12:2>     |   `-ReturnStmt 0x121123238 <line:11:3>     |-IfStmt 0x1211233f0 <line:14:2, line:17:2>     | |-RecoveryExpr 0x1211232a0 <line:14:6, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x1211233e0 <col:21, line:17:2>     |-IfStmt 0x121123460 <line:19:2, line:21:2>     | |-RecoveryExpr 0x121123430 <line:19:6, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x121123450 <col:24, line:21:2>     |-IfStmt 0x1211234d0 <line:22:2, line:24:2>     | |-RecoveryExpr 0x1211234a0 <line:22:6, col:21> '_Bool' contains-errors     | `-CompoundStmt 0x1211234c0 <col:24, line:24:2>     |-IfStmt 0x121124248 <line:27:2, line:37:2> has_else     | |-RecoveryExpr 0x121123668 <line:27:6, col:36> '_Bool' contains-errors     | |-CompoundStmt 0x121124200 <col:42, line:35:2>     | | `-IfStmt 0x121123bd8 <line:29:3, line:34:3>     | |   |-RecoveryExpr 0x121123888 <line:29:7, col:46> '_Bool' contains-errors     | |   `-CompoundStmt 0x121123bc8 <col:52, line:34:3>     | `-CompoundStmt 0x121124238 <line:35:9, line:37:2>     |-IfStmt 0x1211242c8 <line:41:2, line:43:2>     | |-RecoveryExpr 0x121124278 <line:41:6> '_Bool' contains-errors     | `-CompoundStmt 0x1211242b8 <col:11, line:43:2>     `-IfStmt 0x121124478 <line:48:2, line:51:2>       |-RecoveryExpr 0x121124408 <line:48:6, col:17> '_Bool' contains-errors       `-CompoundStmt 0x121124468 <col:23, line:51:2> ","20143":"`-FunctionDecl 0x1360268b8  line:1:12 samldb_unique_attr_check 'int (struct samldb_ctx *, const char *, const char *, struct ldb_dn *)' static   |-ParmVarDecl 0x13600e248 <col:37, col:56> col:56 used ac 'struct samldb_ctx *'   |-ParmVarDecl 0x13600e2c8 <col:60, col:72> col:72 used attr 'const char *'   |-ParmVarDecl 0x13600e348 <line:2:9, col:21> col:21 used attr_conflict 'const char *'   |-ParmVarDecl 0x136026768 <line:3:9, col:24> col:24 used base_dn 'struct ldb_dn *'   `-CompoundStmt 0x137809648 <line:4:1, line:58:1>     |-DeclStmt 0x136026d90 <line:5:2, col:58>     | |-RecordDecl 0x1360269c8 <col:2, col:9> col:9 struct ldb_context     | `-VarDecl 0x136026b38 <col:2, col:57> col:22 used ldb 'struct ldb_context *' cinit     |   `-CallExpr 0x136026d50 <col:28, col:57> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x136026cd0 <col:28> 'int ()' Function 0x136026c18 'ldb_module_get_ctx' 'int ()'     |     `-RecoveryExpr 0x136026d28 <col:47, col:51> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x136026cf0 <col:47> 'struct samldb_ctx *' lvalue ParmVar 0x13600e248 'ac' 'struct samldb_ctx *'     |-DeclStmt 0x136026eb8 <line:6:2, col:42>     | `-VarDecl 0x136026e38 <col:2, col:30> col:21 used no_attrs 'const char *const[]'     |-DeclStmt 0x1360270f0 <line:7:2, col:31>     | |-RecordDecl 0x136026ed0 <col:2, col:9> col:9 struct ldb_result     | `-VarDecl 0x136027038 <col:2, col:27> col:21 used res 'struct ldb_result *' cinit     |   `-RecoveryExpr 0x1360270b8 <col:27> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x1360271c0 <line:8:2, col:24>     | `-VarDecl 0x136027120 <col:2, col:20> col:14 used str 'const char *' cinit     |   `-RecoveryExpr 0x1360271a0 <col:20> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x136027290 <line:9:2, col:28>     | `-VarDecl 0x1360271f0 <col:2, col:24> col:14 used enc_str 'const char *' cinit     |   `-RecoveryExpr 0x136027270 <col:24> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x136027328 <line:10:2, col:9>     | `-VarDecl 0x1360272c0 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x136027c00 <line:12:2, col:57> 'int' contains-errors '='     | |-DeclRefExpr 0x136027340 <col:2> 'int' lvalue Var 0x1360272c0 'ret' 'int'     | `-CallExpr 0x136027578 <col:8, col:57> 'int' contains-errors     |   |-ImplicitCastExpr 0x136027560 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x136027440 <col:8> 'int ()' Function 0x136027388 'samldb_get_single_valued_attr' 'int ()'     |   |-ImplicitCastExpr 0x1360275b8 <col:38> 'struct ldb_context *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x136027460 <col:38> 'struct ldb_context *' contains-errors lvalue Var 0x136026b38 'ldb' 'struct ldb_context *'     |   |-ImplicitCastExpr 0x1360275d0 <col:43> 'struct samldb_ctx *' <LValueToRValue>     |   | `-DeclRefExpr 0x136027480 <col:43> 'struct samldb_ctx *' lvalue ParmVar 0x13600e248 'ac' 'struct samldb_ctx *'     |   |-ImplicitCastExpr 0x1360275e8 <col:47> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x1360274a0 <col:47> 'const char *' lvalue ParmVar 0x13600e2c8 'attr' 'const char *'     |   `-UnaryOperator 0x136027510 <col:53, col:54> 'const char **' contains-errors prefix '&' cannot overflow     |     `-DeclRefExpr 0x1360274c0 <col:54> 'const char *' contains-errors lvalue Var 0x136027120 'str' 'const char *'     |-IfStmt 0x136027d18 <line:13:2, line:15:2>     | |-BinaryOperator 0x136027c98 <line:13:6, col:13> 'int' contains-errors '!='     | | |-DeclRefExpr 0x136027c20 <col:6> 'int' lvalue Var 0x1360272c0 'ret' 'int'     | | `-RecoveryExpr 0x136027c78 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136027d00 <col:26, line:15:2>     |   `-ReturnStmt 0x136027cf0 <line:14:3, col:10>     |     `-ImplicitCastExpr 0x136027cd8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x136027cb8 <col:10> 'int' lvalue Var 0x1360272c0 'ret' 'int'     |-IfStmt 0x136027e30 <line:16:2, line:19:2>     | |-BinaryOperator 0x136027db0 <line:16:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x136027d38 <col:6> 'const char *' contains-errors lvalue Var 0x136027120 'str' 'const char *'     | | `-RecoveryExpr 0x136027d90 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136027e18 <col:19, line:19:2>     |   `-ReturnStmt 0x136027e08 <line:18:3, col:10>     |     `-RecoveryExpr 0x136027de8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x136028040 <line:21:2, col:44> 'const char *' contains-errors '='     | |-DeclRefExpr 0x136027e50 <col:2> 'const char *' contains-errors lvalue Var 0x1360271f0 'enc_str' 'const char *'     | `-ImplicitCastExpr 0x136028028 <col:12, col:44> 'const char *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x136027fc8 <col:12, col:44> 'int' contains-errors     |     |-ImplicitCastExpr 0x136027fb0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x136027f50 <col:12> 'int ()' Function 0x136027e98 'ldb_binary_encode_string' 'int ()'     |     |-ImplicitCastExpr 0x136027ff8 <col:37> 'struct samldb_ctx *' <LValueToRValue>     |     | `-DeclRefExpr 0x136027f70 <col:37> 'struct samldb_ctx *' lvalue ParmVar 0x13600e248 'ac' 'struct samldb_ctx *'     |     `-ImplicitCastExpr 0x136028010 <col:41> 'const char *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x136027f90 <col:41> 'const char *' contains-errors lvalue Var 0x136027120 'str' 'const char *'     |-IfStmt 0x1360282a8 <line:22:2, line:24:2>     | |-BinaryOperator 0x1360280d8 <line:22:6, col:17> 'int' contains-errors '=='     | | |-DeclRefExpr 0x136028060 <col:6> 'const char *' contains-errors lvalue Var 0x1360271f0 'enc_str' 'const char *'     | | `-RecoveryExpr 0x1360280b8 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x136028290 <col:23, line:24:2>     |   `-ReturnStmt 0x136028280 <line:23:3, col:35>     |     `-CallExpr 0x136028258 <col:10, col:35> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1360281d8 <col:10> 'int ()' Function 0x136028120 'ldb_module_oom' 'int ()'     |       `-RecoveryExpr 0x136028230 <col:25, col:29> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1360281f8 <col:25> 'struct samldb_ctx *' lvalue ParmVar 0x13600e248 'ac' 'struct samldb_ctx *'     |-IfStmt 0x136028b00 <line:27:2, line:41:2> has_else     | |-BinaryOperator 0x136028340 <line:27:6, col:23> 'int' contains-errors '!='     | | |-DeclRefExpr 0x1360282c8 <col:6> 'const char *' lvalue ParmVar 0x13600e348 'attr_conflict' 'const char *'     | | `-RecoveryExpr 0x136028320 <col:23> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1360288e0 <col:29, line:35:2>     | | `-BinaryOperator 0x1360288c0 <line:28:3, line:34:29> 'int' contains-errors '='     | |   |-DeclRefExpr 0x136028360 <line:28:3> 'int' lvalue Var 0x1360272c0 'ret' 'int'     | |   `-CallExpr 0x136028838 <col:9, line:34:29> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x136028460 <line:28:9> 'int ()' Function 0x1360283a8 'dsdb_module_search' 'int ()'     | |     |-RecoveryExpr 0x1360284b8 <col:28, col:32> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x136028480 <col:28> 'struct samldb_ctx *' lvalue ParmVar 0x13600e248 'ac' 'struct samldb_ctx *'     | |     |-DeclRefExpr 0x1360284e0 <col:40> 'struct samldb_ctx *' lvalue ParmVar 0x13600e248 'ac' 'struct samldb_ctx *'     | |     |-UnaryOperator 0x136028580 <col:44, col:45> 'struct ldb_result **' contains-errors prefix '&' cannot overflow     | |     | `-DeclRefExpr 0x136028500 <col:45> 'struct ldb_result *' contains-errors lvalue Var 0x136027038 'res' 'struct ldb_result *'     | |     |-DeclRefExpr 0x136028598 <line:29:7> 'struct ldb_dn *' lvalue ParmVar 0x136026768 'base_dn' 'struct ldb_dn *'     | |     |-RecoveryExpr 0x1360287f8 <line:30:7> '<dependent type>' contains-errors lvalue     | |     |-DeclRefExpr 0x1360285d0 <col:26> 'const char *const[]' lvalue Var 0x136026e38 'no_attrs' 'const char *const[]'     | |     |-RecoveryExpr 0x136028818 <line:31:7> '<dependent type>' contains-errors lvalue     | |     |-RecoveryExpr 0x136028640 <col:30, col:34> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x136028608 <col:30> 'struct samldb_ctx *' lvalue ParmVar 0x13600e248 'ac' 'struct samldb_ctx *'     | |     |-StringLiteral 0x1360286b0 <line:32:7> 'char[4]' lvalue \"STR\"     | |     |-DeclRefExpr 0x1360286d0 <line:33:7> 'const char *' lvalue ParmVar 0x13600e2c8 'attr' 'const char *'     | |     |-DeclRefExpr 0x1360286f0 <col:13> 'const char *' contains-errors lvalue Var 0x1360271f0 'enc_str' 'const char *'     | |     |-DeclRefExpr 0x136028710 <line:34:7> 'const char *' lvalue ParmVar 0x13600e348 'attr_conflict' 'const char *'     | |     `-DeclRefExpr 0x136028730 <col:22> 'const char *' contains-errors lvalue Var 0x1360271f0 'enc_str' 'const char *'     | `-CompoundStmt 0x136028af0 <line:35:9, line:41:2>     |-IfStmt 0x136028bd0 <line:42:2, line:44:2>     | |-RecoveryExpr 0x136028b50 <line:42:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x136028bb8 <col:26, line:44:2>     |   `-ReturnStmt 0x136028ba8 <line:43:3, col:10>     |     `-ImplicitCastExpr 0x136028b90 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x136028b70 <col:10> 'int' lvalue Var 0x1360272c0 'ret' 'int'     |-IfStmt 0x1378094a0 <line:45:2, line:54:2> has_else     | |-BinaryOperator 0x137808c80 <line:45:6, col:19> 'int' contains-errors '>'     | | |-RecoveryExpr 0x137808c38 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x137808c00 <col:6> 'struct ldb_result *' contains-errors lvalue Var 0x136027038 'res' 'struct ldb_result *'     | | `-IntegerLiteral 0x137808c60 <col:19> 'int' 1     | |-CompoundStmt 0x137808e28 <col:22, line:47:2>     | | `-ReturnStmt 0x137808e18 <line:46:3, col:23>     | |   `-CallExpr 0x137808dd8 <col:10, col:23> 'int' contains-errors     | |     |-ImplicitCastExpr 0x137808dc0 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x137808d80 <col:10> 'int ()' Function 0x137808cc8 'ldb_operr' 'int ()'     | |     `-ImplicitCastExpr 0x137808e00 <col:20> 'struct ldb_context *' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x137808da0 <col:20> 'struct ldb_context *' contains-errors lvalue Var 0x136026b38 'ldb' 'struct ldb_context *'     | `-IfStmt 0x137809480 <line:47:9, line:54:2>     |   |-BinaryOperator 0x137808ec0 <line:47:13, col:27> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x137808e78 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x137808e40 <col:13> 'struct ldb_result *' contains-errors lvalue Var 0x136027038 'res' 'struct ldb_result *'     |   | `-IntegerLiteral 0x137808ea0 <col:27> 'int' 1     |   `-CompoundStmt 0x137809468 <col:30, line:54:2>     |     `-IfStmt 0x137809448 <line:48:3, line:53:3>     |       |-BinaryOperator 0x1378091d8 <line:48:7, col:56> 'int' contains-errors '!='     |       | |-CallExpr 0x137809188 <col:7, col:51> '<dependent type>' contains-errors     |       | | |-DeclRefExpr 0x137808fc0 <col:7> 'int ()' Function 0x137808f08 'ldb_dn_compare' 'int ()'     |       | | |-CXXDependentScopeMemberExpr 0x137809098 <col:22, col:36> '<dependent type>' contains-errors lvalue ->dn     |       | | | `-ArraySubscriptExpr 0x137809078 <col:22, col:33> '<dependent type>' contains-errors lvalue     |       | | |   |-ImplicitCastExpr 0x137809060 <col:22, col:27> '<dependent type>' contains-errors <LValueToRValue>     |       | | |   | `-RecoveryExpr 0x137809018 <col:22, col:27> '<dependent type>' contains-errors lvalue     |       | | |   |   `-DeclRefExpr 0x137808fe0 <col:22> 'struct ldb_result *' contains-errors lvalue Var 0x136027038 'res' 'struct ldb_result *'     |       | | |   `-IntegerLiteral 0x137809040 <col:32> 'int' 0     |       | | `-CXXDependentScopeMemberExpr 0x137809140 <col:40, col:49> '<dependent type>' contains-errors lvalue ->dn     |       | |   `-RecoveryExpr 0x137809118 <col:40, col:44> '<dependent type>' contains-errors lvalue     |       | |     `-DeclRefExpr 0x1378090e0 <col:40> 'struct samldb_ctx *' lvalue ParmVar 0x13600e248 'ac' 'struct samldb_ctx *'     |       | `-IntegerLiteral 0x1378091b8 <col:56> 'int' 0     |       `-CompoundStmt 0x137809430 <col:59, line:53:3>     |         `-CallExpr 0x137809390 <line:49:4, line:51:26> 'int' contains-errors     |           |-ImplicitCastExpr 0x137809378 <line:49:4> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x1378092d8 <col:4> 'int ()' Function 0x137809220 'ldb_asprintf_errstring' 'int ()'     |           |-ImplicitCastExpr 0x1378093d0 <col:27> 'struct ldb_context *' contains-errors <LValueToRValue>     |           | `-DeclRefExpr 0x1378092f8 <col:27> 'struct ldb_context *' contains-errors lvalue Var 0x136026b38 'ldb' 'struct ldb_context *'     |           |-ImplicitCastExpr 0x1378093e8 <line:50:13> 'char *' <ArrayToPointerDecay>     |           | `-StringLiteral 0x137809318 <col:13> 'char[4]' lvalue \"STR\"     |           |-ImplicitCastExpr 0x137809400 <line:51:13> 'const char *' <LValueToRValue>     |           | `-DeclRefExpr 0x137809338 <col:13> 'const char *' lvalue ParmVar 0x13600e2c8 'attr' 'const char *'     |           `-ImplicitCastExpr 0x137809418 <col:19> 'const char *' contains-errors <LValueToRValue>     |             `-DeclRefExpr 0x137809358 <col:19> 'const char *' contains-errors lvalue Var 0x1360271f0 'enc_str' 'const char *'     `-CallExpr 0x137809608 <line:55:2, col:17> 'int' contains-errors       |-ImplicitCastExpr 0x1378095f0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1378095b0 <col:2> 'int ()' Function 0x1378094f8 'talloc_free' 'int ()'       `-ImplicitCastExpr 0x137809630 <col:14> 'struct ldb_result *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1378095d0 <col:14> 'struct ldb_result *' contains-errors lvalue Var 0x136027038 'res' 'struct ldb_result *' ","19555":"`-FunctionDecl 0x12480ddc0  line:1:8 invalid compareHeaders 'void (int)'   |-ParmVarDecl 0x12480dcf0 <col:23, <invalid sloc>> col:30 invalid 'int'   `-CompoundStmt 0x12480e318 <col:77, line:13:3>     |-IfStmt 0x12480e0e0 <line:4:5, line:7:5>     | |-UnaryOperator 0x12480e088 <line:4:9, col:37> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x12480e068 <col:10, col:37> 'int'     | |   `-ImplicitCastExpr 0x12480e050 <col:10> 'int (*)()' <FunctionToPointerDecay>     | |     `-DeclRefExpr 0x12480e000 <col:10> 'int ()' Function 0x12480df48 'routerSuppressEnvoyHeaders' 'int ()'     | `-CompoundStmt 0x12480e0d0 <col:40, line:7:5>     `-CallExpr 0x12480e2e8 <line:12:5, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x12480e228 <col:5> 'int ()' Function 0x12480e170 'EXPECT_EQ' 'int ()'       |-RecoveryExpr 0x12480e2a8 <col:15> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12480e2c8 <col:33> '<dependent type>' contains-errors lvalue ","20062":"`-FunctionDecl 0x12e80de68  line:1:1 tabstop_eq 'int (int *, int *)'   |-ParmVarDecl 0x12e80dd08 <col:12, col:17> col:17 used ts1 'int *'   |-ParmVarDecl 0x12e80dd88 <col:22, col:27> col:27 used ts2 'int *'   `-CompoundStmt 0x12e826b28 <line:2:1, line:17:1>     |-DeclStmt 0x12e80dfe8 <line:3:5, col:11>     | `-VarDecl 0x12e80df80 <col:5, col:10> col:10 used t 'int'     |-IfStmt 0x12e80e290 <line:5:5, line:6:9>     | |-BinaryOperator 0x12e80e210 <line:5:9, col:46> 'int' '||'     | | |-ParenExpr 0x12e80e0e8 <col:9, col:25> 'int'     | | | `-BinaryOperator 0x12e80e0c8 <col:10, col:22> 'int' '&&'     | | |   |-BinaryOperator 0x12e80e070 <col:10, col:17> 'int' '=='     | | |   | |-ImplicitCastExpr 0x12e80e040 <col:10> 'int *' <LValueToRValue>     | | |   | | `-DeclRefExpr 0x12e80e000 <col:10> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | | |   | `-ImplicitCastExpr 0x12e80e058 <col:17> 'int *' <NullToPointer>     | | |   |   `-IntegerLiteral 0x12e80e020 <col:17> 'int' 0     | | |   `-ImplicitCastExpr 0x12e80e0b0 <col:22> 'int *' <LValueToRValue>     | | |     `-DeclRefExpr 0x12e80e090 <col:22> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     | | `-ParenExpr 0x12e80e1f0 <col:30, col:46> 'int'     | |   `-BinaryOperator 0x12e80e1d0 <col:31, col:45> 'int' '&&'     | |     |-ImplicitCastExpr 0x12e80e1b8 <col:31> 'int *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12e80e108 <col:31> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | |     `-BinaryOperator 0x12e80e198 <col:38, col:45> 'int' '=='     | |       |-ImplicitCastExpr 0x12e80e168 <col:38> 'int *' <LValueToRValue>     | |       | `-DeclRefExpr 0x12e80e128 <col:38> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     | |       `-ImplicitCastExpr 0x12e80e180 <col:45> 'int *' <NullToPointer>     | |         `-IntegerLiteral 0x12e80e148 <col:45> 'int' 0     | `-ReturnStmt 0x12e80e280 <line:6:2, col:9>     |   `-RecoveryExpr 0x12e80e260 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e80e388 <line:7:5, line:8:9>     | |-BinaryOperator 0x12e80e320 <line:7:9, col:16> 'int' '=='     | | |-ImplicitCastExpr 0x12e80e2f0 <col:9> 'int *' <LValueToRValue>     | | | `-DeclRefExpr 0x12e80e2b0 <col:9> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | | `-ImplicitCastExpr 0x12e80e308 <col:16> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x12e80e2d0 <col:16> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     | `-ReturnStmt 0x12e80e378 <line:8:2, col:9>     |   `-RecoveryExpr 0x12e80e358 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e826730 <line:9:5, line:10:9>     | |-BinaryOperator 0x12e8266c8 <line:9:9, col:24> 'int' '!='     | | |-ImplicitCastExpr 0x12e826698 <col:9, col:14> 'int' <LValueToRValue>     | | | `-ArraySubscriptExpr 0x12e826600 <col:9, col:14> 'int' lvalue     | | |   |-ImplicitCastExpr 0x12e80e3e8 <col:9> 'int *' <LValueToRValue>     | | |   | `-DeclRefExpr 0x12e80e3a8 <col:9> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | | |   `-IntegerLiteral 0x12e80e3c8 <col:13> 'int' 0     | | `-ImplicitCastExpr 0x12e8266b0 <col:19, col:24> 'int' <LValueToRValue>     | |   `-ArraySubscriptExpr 0x12e826678 <col:19, col:24> 'int' lvalue     | |     |-ImplicitCastExpr 0x12e826660 <col:19> 'int *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12e826620 <col:19> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     | |     `-IntegerLiteral 0x12e826640 <col:23> 'int' 0     | `-ReturnStmt 0x12e826720 <line:10:2, col:9>     |   `-RecoveryExpr 0x12e826700 <col:9> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12e826aa8 <line:12:5, line:14:13>     | |-BinaryOperator 0x12e826790 <line:12:10, col:14> 'int' '='     | | |-DeclRefExpr 0x12e826750 <col:10> 'int' lvalue Var 0x12e80df80 't' 'int'     | | `-IntegerLiteral 0x12e826770 <col:14> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x12e826878 <col:17, col:27> 'int' '<='     | | |-ImplicitCastExpr 0x12e826848 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12e8267b0 <col:17> 'int' lvalue Var 0x12e80df80 't' 'int'     | | `-ImplicitCastExpr 0x12e826860 <col:22, col:27> 'int' <LValueToRValue>     | |   `-ArraySubscriptExpr 0x12e826828 <col:22, col:27> 'int' lvalue     | |     |-ImplicitCastExpr 0x12e826810 <col:22> 'int *' <LValueToRValue>     | |     | `-DeclRefExpr 0x12e8267d0 <col:22> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     | |     `-IntegerLiteral 0x12e8267f0 <col:26> 'int' 0     | |-UnaryOperator 0x12e8268b8 <col:30, col:32> 'int' prefix '++'     | | `-DeclRefExpr 0x12e826898 <col:32> 'int' lvalue Var 0x12e80df80 't' 'int'     | `-IfStmt 0x12e826a88 <line:13:2, line:14:13>     |   |-BinaryOperator 0x12e826a20 <line:13:6, col:21> 'int' '!='     |   | |-ImplicitCastExpr 0x12e8269f0 <col:6, col:11> 'int' <LValueToRValue>     |   | | `-ArraySubscriptExpr 0x12e826940 <col:6, col:11> 'int' lvalue     |   | |   |-ImplicitCastExpr 0x12e826910 <col:6> 'int *' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x12e8268d0 <col:6> 'int *' lvalue ParmVar 0x12e80dd08 'ts1' 'int *'     |   | |   `-ImplicitCastExpr 0x12e826928 <col:10> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x12e8268f0 <col:10> 'int' lvalue Var 0x12e80df80 't' 'int'     |   | `-ImplicitCastExpr 0x12e826a08 <col:16, col:21> 'int' <LValueToRValue>     |   |   `-ArraySubscriptExpr 0x12e8269d0 <col:16, col:21> 'int' lvalue     |   |     |-ImplicitCastExpr 0x12e8269a0 <col:16> 'int *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x12e826960 <col:16> 'int *' lvalue ParmVar 0x12e80dd88 'ts2' 'int *'     |   |     `-ImplicitCastExpr 0x12e8269b8 <col:20> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x12e826980 <col:20> 'int' lvalue Var 0x12e80df80 't' 'int'     |   `-ReturnStmt 0x12e826a78 <line:14:6, col:13>     |     `-RecoveryExpr 0x12e826a58 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e826b18 <line:16:5, col:12>       `-RecoveryExpr 0x12e826af8 <col:12> '<dependent type>' contains-errors lvalue ","19743":"`-FunctionDecl 0x1528281a0  col:9 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x1528282a0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x152828248 <<invalid sloc>> Implicit 902 ","19774":"`-FunctionDecl 0x14c00e358  line:1:1 cachedb_intcache_store 'int (struct module_qstate *)'   |-ParmVarDecl 0x14c00e248 <col:24, col:46> col:46 used qstate 'struct module_qstate *'   `-CompoundStmt 0x14c026c68 <line:2:1, line:12:1>     `-IfStmt 0x14c026810 <line:7:2, line:8:3>       |-UnaryOperator 0x14c0267e8 <line:7:5, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x14c0267d0 <col:6, col:14> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x14c0267a8 <col:6, col:14> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x14c026770 <col:6> 'struct module_qstate *' lvalue ParmVar 0x14c00e248 'qstate' 'struct module_qstate *'       `-ReturnStmt 0x14c026800 <line:8:3> ","19452":"`-FunctionDecl 0x15200de38  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x15200dd58 <col:8> col:8 Http2CodecImplTest 'int'   |-ParmVarDecl 0x15200dcd8 <col:28> col:28 PingFloodCounterReset 'int'   `-CompoundStmt 0x152029e38 <col:51, line:41:1>     |-DeclStmt 0x15200dfd8 <line:2:3, col:51>     | `-VarDecl 0x15200df50 <col:3, col:48> col:20 used kMaxOutboundControlFrames 'const int' static cinit     |   `-IntegerLiteral 0x15200dfb8 <col:48> 'int' 100     |-ImplicitCastExpr 0x1520266c0 <line:3:3, col:34> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x152026690 <col:3, col:34> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x15200e008 <col:3> 'const int' lvalue Var 0x15200df50 'kMaxOutboundControlFrames' 'const int'     |   `-DeclRefExpr 0x15200e028 <col:34> 'const int' lvalue Var 0x15200df50 'kMaxOutboundControlFrames' 'const int'     |-CallExpr 0x152026858 <line:4:3, col:14> 'int'     | `-ImplicitCastExpr 0x152026840 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1520267f0 <col:3> 'int ()' Function 0x152026738 'initialize' 'int ()'     |-RecoveryExpr 0x1520268a8 <line:7:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152026c00 <line:8:3, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1520269a8 <col:3> 'int ()' Function 0x1520268f0 'EXPECT_CALL' 'int ()'     | |-RecoveryExpr 0x152026b70 <col:15> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x152026bd0 <col:33, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152026ac0 <col:33> 'int ()' Function 0x152026a08 'decodeHeaders_' 'int ()'     |   |-RecoveryExpr 0x152026b90 <col:48> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x152026bb0 <col:51> '<dependent type>' contains-errors lvalue     |-ForStmt 0x152027068 <line:11:3, line:13:3>     | |-DeclStmt 0x152026d00 <line:11:8, col:17>     | | `-VarDecl 0x152026c78 <col:8, col:16> col:12 used i 'int' cinit     | |   `-IntegerLiteral 0x152026ce0 <col:16> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x152026d88 <col:19, col:23> 'int' '<'     | | |-ImplicitCastExpr 0x152026d58 <col:19> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x152026d18 <col:19> 'int' lvalue Var 0x152026c78 'i' 'int'     | | `-ImplicitCastExpr 0x152026d70 <col:23> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x152026d38 <col:23> 'const int' lvalue Var 0x15200df50 'kMaxOutboundControlFrames' 'const int'     | |-UnaryOperator 0x152026e20 <col:50, col:52> 'int' prefix '++'     | | `-DeclRefExpr 0x152026e00 <col:52> 'int' lvalue Var 0x152026c78 'i' 'int'     | `-CompoundStmt 0x152027058 <col:55, line:13:3>     |-DeclStmt 0x152027140 <line:15:3, col:20>     | `-VarDecl 0x1520270b8 <col:3, col:19> col:7 used ack_count 'int' cinit     |   `-IntegerLiteral 0x152027120 <col:19> 'int' 0     |-CallExpr 0x1520275d0 <line:25:3, col:49> 'int'     | |-ImplicitCastExpr 0x1520275b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x152027558 <col:3> 'int ()' Function 0x152026e60 'EXPECT_EQ' 'int ()'     | |-ImplicitCastExpr 0x152029a00 <col:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x152027578 <col:13> 'int' lvalue Var 0x1520270b8 'ack_count' 'int'     | `-ImplicitCastExpr 0x152029a18 <col:24> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x152027598 <col:24> 'const int' lvalue Var 0x15200df50 'kMaxOutboundControlFrames' 'const int'     `-ForStmt 0x152029c80 <line:31:3, line:33:3>       |-DeclStmt 0x152029af0 <line:31:8, col:17>       | `-VarDecl 0x152029a68 <col:8, col:16> col:12 used i 'int' cinit       |   `-IntegerLiteral 0x152029ad0 <col:16> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x152029bb8 <col:19, col:51> 'int' '<'       | |-ImplicitCastExpr 0x152029ba0 <col:19> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x152029b08 <col:19> 'int' lvalue Var 0x152029a68 'i' 'int'       | `-BinaryOperator 0x152029b80 <col:23, col:51> 'int' '\/'       |   |-ImplicitCastExpr 0x152029b68 <col:23> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x152029b28 <col:23> 'const int' lvalue Var 0x15200df50 'kMaxOutboundControlFrames' 'const int'       |   `-IntegerLiteral 0x152029b48 <col:51> 'int' 2       |-UnaryOperator 0x152029bf8 <col:54, col:56> 'int' prefix '++'       | `-DeclRefExpr 0x152029bd8 <col:56> 'int' lvalue Var 0x152029a68 'i' 'int'       `-CompoundStmt 0x152029c70 <col:59, line:33:3> ","20189":"`-FunctionDecl 0x129127140  line:1:6 sock_init_data 'void (struct socket *, struct sock *)'   |-ParmVarDecl 0x12980e248 <col:21, col:36> col:36 used sock 'struct socket *'   |-ParmVarDecl 0x129127028 <col:42, col:55> col:55 used sk 'struct sock *'   `-CompoundStmt 0x12b009cf0 <line:2:1, line:65:1>     |-CallExpr 0x129127408 <line:3:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129127370 <col:2> 'int ()' Function 0x1291272b8 'skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x1291273f0 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1291273c8 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129127390 <col:23> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     |-CallExpr 0x1291274c8 <line:4:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129127430 <col:2> 'int ()' Function 0x1291272b8 'skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x1291274b0 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x129127488 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129127450 <col:23> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     |-CallExpr 0x129127588 <line:5:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1291274f0 <col:2> 'int ()' Function 0x1291272b8 'skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x129127570 <col:22, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x129127548 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129127510 <col:23> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     |-BinaryOperator 0x129127668 <line:10:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1291275e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1291275b0 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-RecoveryExpr 0x129127648 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x129127800 <line:12:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129127768 <col:2> 'int ()' Function 0x1291276b0 'init_timer' 'int ()'     | `-UnaryOperator 0x1291277e8 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1291277c0 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129127788 <col:14> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     |-BinaryOperator 0x1291278e0 <line:14:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x129127860 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x129127828 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-RecoveryExpr 0x1291278c0 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1291279b8 <line:15:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x129127938 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x129127900 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-RecoveryExpr 0x129127998 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x129127a90 <line:16:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x129127a10 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1291279d8 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-RecoveryExpr 0x129127a70 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x129127b68 <line:17:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x129127ae8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x129127ab0 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-RecoveryExpr 0x129127b48 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x129127d18 <line:18:2, col:24> 'int'     | |-ImplicitCastExpr 0x129127d00 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129127c68 <col:2> 'int ()' Function 0x129127bb0 'sk_set_socket' 'int ()'     | |-ImplicitCastExpr 0x129127d48 <col:16> 'struct sock *' <LValueToRValue>     | | `-DeclRefExpr 0x129127c88 <col:16> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-ImplicitCastExpr 0x129127d60 <col:20> 'struct socket *' <LValueToRValue>     |   `-DeclRefExpr 0x129127ca8 <col:20> 'struct socket *' lvalue ParmVar 0x12980e248 'sock' 'struct socket *'     |-CallExpr 0x129127f00 <line:20:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129127e58 <col:2> 'int ()' Function 0x129127da0 'sock_set_flag' 'int ()'     | |-DeclRefExpr 0x129127e78 <col:16> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-RecoveryExpr 0x129127ee0 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b008858 <line:22:2, line:27:3> has_else     | |-ImplicitCastExpr 0x129127f50 <line:22:6> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x129127f30 <col:6> 'struct socket *' lvalue ParmVar 0x12980e248 'sock' 'struct socket *'     | |-CompoundStmt 0x12b0087c8 <col:12, line:26:2>     | | |-BinaryOperator 0x12b008628 <line:23:3, col:23> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x129127fa0 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x129127f68 <col:3> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | | | `-RecoveryExpr 0x12b008600 <col:17, col:23> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x129127fc8 <col:17> 'struct socket *' lvalue ParmVar 0x12980e248 'sock' 'struct socket *'     | | |-BinaryOperator 0x12b008708 <line:24:3, col:21> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x12b008680 <col:3, col:7> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12b008648 <col:3> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | | | `-RecoveryExpr 0x12b0086e0 <col:15, col:21> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x12b0086a8 <col:15> 'struct socket *' lvalue ParmVar 0x12980e248 'sock' 'struct socket *'     | | `-BinaryOperator 0x12b0087a8 <line:25:3, col:14> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x12b008760 <col:3, col:9> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12b008728 <col:3> 'struct socket *' lvalue ParmVar 0x12980e248 'sock' 'struct socket *'     | |   `-DeclRefExpr 0x12b008788 <col:14> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-NullStmt 0x12b008850 <line:27:3>     |-CallExpr 0x12b008a00 <line:29:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b008968 <col:2> 'int ()' Function 0x12b0088b0 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x12b0089e8 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12b0089c0 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12b008988 <col:18> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     |-CallExpr 0x12b008ba0 <line:30:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b008b08 <col:2> 'int ()' Function 0x12b008a50 'rwlock_init' 'int ()'     | `-UnaryOperator 0x12b008b88 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12b008b60 <col:15, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12b008b28 <col:15> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     |-BinaryOperator 0x12b009150 <line:42:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12b0090e8 <col:2, col:14> '<dependent type>' contains-errors lvalue .offset     | | `-RecoveryExpr 0x12b0090c0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12b009088 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-IntegerLiteral 0x12b009130 <col:23> 'int' 0     |-BinaryOperator 0x12b009208 <line:43:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b0091a8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b009170 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-UnaryOperator 0x12b0091f0 <col:21, col:22> 'int' prefix '-'     |   `-IntegerLiteral 0x12b0091d0 <col:22> 'int' 1     |-BinaryOperator 0x12b009368 <line:47:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b009320 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b0092e8 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-IntegerLiteral 0x12b009348 <col:25> 'int' 0     |-BinaryOperator 0x12b009408 <line:48:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b0093c0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b009388 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-IntegerLiteral 0x12b0093e8 <col:21> 'int' 1     |-BinaryOperator 0x12b009778 <line:52:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b009520 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b0094e8 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-CallExpr 0x12b009748 <col:17, col:33> 'int'     |   |-ImplicitCastExpr 0x12b009730 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12b0096b8 <col:17> 'int ()' Function 0x12b009600 'ktime_set' 'int ()'     |   |-UnaryOperator 0x12b0096f8 <col:27, col:28> 'long' prefix '-'     |   | `-IntegerLiteral 0x12b0096d8 <col:28> 'long' 1     |   `-IntegerLiteral 0x12b009710 <col:32> 'int' 0     |-BinaryOperator 0x12b009830 <line:59:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b0097d0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b009798 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-UnaryOperator 0x12b009818 <col:27, col:28> 'unsigned int' prefix '~' cannot overflow     |   `-IntegerLiteral 0x12b0097f8 <col:28> 'unsigned int' 0     |-BinaryOperator 0x12b0098e8 <line:60:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b009888 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b009850 <col:2> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-UnaryOperator 0x12b0098d0 <col:23, col:24> 'unsigned int' prefix '~' cannot overflow     |   `-IntegerLiteral 0x12b0098b0 <col:24> 'unsigned int' 0     |-CallExpr 0x12b009a20 <line:62:2, col:10> 'int'     | `-ImplicitCastExpr 0x12b009a08 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12b0099e8 <col:2> 'int ()' Function 0x12b009930 'smp_wmb' 'int ()'     |-CallExpr 0x12b009bd8 <line:63:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b009b20 <col:2> 'int ()' Function 0x12b009a68 'atomic_set' 'int ()'     | |-UnaryOperator 0x12b009ba0 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12b009b78 <col:14, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12b009b40 <col:14> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'     | `-IntegerLiteral 0x12b009bb8 <col:29> 'int' 1     `-CallExpr 0x12b009cc0 <line:64:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x12b009c08 <col:2> 'int ()' Function 0x12b009a68 'atomic_set' 'int ()'       |-UnaryOperator 0x12b009c88 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x12b009c60 <col:14, col:18> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x12b009c28 <col:14> 'struct sock *' lvalue ParmVar 0x129127028 'sk' 'struct sock *'       `-IntegerLiteral 0x12b009ca0 <col:28> 'int' 0 ","20087":"`-FunctionDecl 0x15c128c38  line:1:1 PHP_METHOD 'int (int, int)'   |-ParmVarDecl 0x15c128b58 <col:12> col:12 PharFileInfo 'int'   |-ParmVarDecl 0x15c128ad8 <col:26> col:26 decompress 'int'   `-CompoundStmt 0x14c8087f0 <line:2:1, line:73:1>     |-DeclStmt 0x15c128db8 <line:3:2, col:13>     | `-VarDecl 0x15c128d50 <col:2, col:8> col:8 used error 'char *'     |-CallExpr 0x15c128f68 <line:4:2, col:20> 'int'     | `-ImplicitCastExpr 0x15c128f50 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x15c128f00 <col:2> 'int ()' Function 0x15c128e48 'PHAR_ENTRY_OBJECT' 'int ()'     |-IfStmt 0x15c1291d0 <line:6:2, line:8:2>     | |-BinaryOperator 0x15c129188 <line:6:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x15c129148 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x15c129130 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x15c129068 <col:6> 'int ()' Function 0x15c128fb0 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x15c129168 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15c1291b8 <col:47, line:8:2>     |   `-ReturnStmt 0x15c1291a8 <line:7:3>     |-IfStmt 0x14c00af48 <line:10:2, line:14:2>     | |-CXXDependentScopeMemberExpr 0x14c00ada0 <line:10:6, col:28> '<dependent type>' contains-errors lvalue ->is_dir     | | `-CXXDependentScopeMemberExpr 0x14c00ad58 <col:6, col:21> '<dependent type>' contains-errors lvalue .entry     | |   `-CXXDependentScopeMemberExpr 0x14c00ad10 <col:6, col:17> '<dependent type>' contains-errors lvalue ->ent     | |     `-RecoveryExpr 0x14c00acf0 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c00af30 <col:36, line:14:2>     |   `-ReturnStmt 0x14c00af20 <line:13:3>     |-IfStmt 0x14c00b0e0 <line:16:2, line:18:2>     | |-RecoveryExpr 0x14c00b0b0 <line:16:6, col:67> '_Bool' contains-errors     | `-CompoundStmt 0x14c00b0d0 <col:70, line:18:2>     |-IfStmt 0x14c00b620 <line:20:2, line:24:2>     | |-BinaryOperator 0x14c00b580 <line:20:6, col:55> 'int' contains-errors '&&'     | | |-CallExpr 0x14c00b3e8 <col:6, col:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14c00b1e0 <col:6> 'int ()' Function 0x14c00b128 'PHAR_G' 'int ()'     | | | `-RecoveryExpr 0x14c00b3c8 <col:13> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14c00b568 <col:26, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x14c00b550 <col:27, col:55> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x14c00b508 <col:27, col:55> '<dependent type>' contains-errors lvalue ->is_data     | |       `-CXXDependentScopeMemberExpr 0x14c00b4c0 <col:27, col:49> '<dependent type>' contains-errors lvalue ->phar     | |         `-CXXDependentScopeMemberExpr 0x14c00b478 <col:27, col:42> '<dependent type>' contains-errors lvalue .entry     | |           `-CXXDependentScopeMemberExpr 0x14c00b430 <col:27, col:38> '<dependent type>' contains-errors lvalue ->ent     | |             `-RecoveryExpr 0x14c00b410 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c00b608 <col:64, line:24:2>     |   `-ReturnStmt 0x14c00b5f8 <line:23:3>     |-IfStmt 0x14c00b6c8 <line:26:2, line:30:2>     | |-RecoveryExpr 0x14c00b640 <line:26:6, col:28> '_Bool' contains-errors     | `-CompoundStmt 0x14c00b6b0 <col:40, line:30:2>     |   `-ReturnStmt 0x14c00b6a0 <line:29:3>     |-IfStmt 0x14c00b7b0 <line:32:2, line:36:2>     | |-RecoveryExpr 0x14c00b728 <line:32:6, col:85> '_Bool' contains-errors     | `-CompoundStmt 0x14c00b798 <col:88, line:36:2>     |   `-ReturnStmt 0x14c00b788 <line:35:3>     |-IfStmt 0x14c00b898 <line:38:2, line:42:2>     | |-RecoveryExpr 0x14c00b810 <line:38:6, col:85> '_Bool' contains-errors     | `-CompoundStmt 0x14c00b880 <col:88, line:42:2>     |   `-ReturnStmt 0x14c00b870 <line:41:3>     |-IfStmt 0x14c00bb98 <line:44:2, line:53:2>     | |-RecoveryExpr 0x14c00b8b8 <line:44:6, col:28> '_Bool' contains-errors     | `-CompoundStmt 0x14c00bb80 <col:43, line:53:2>     |   `-IfStmt 0x14c00ba60 <line:47:3, line:50:3>     |     |-RecoveryExpr 0x14c00b9d8 <line:47:7, col:52> '_Bool' contains-errors     |     `-CompoundStmt 0x14c00ba48 <col:55, line:50:3>     |       `-ReturnStmt 0x14c00ba38 <line:49:4>     |-IfStmt 0x14c808398 <line:54:2, line:60:2>     | |-RecoveryExpr 0x14c00bbb8 <line:54:6, col:29> '_Bool' contains-errors     | `-CompoundStmt 0x14c808380 <col:33, line:60:2>     |   `-IfStmt 0x14c808360 <line:55:3, line:58:3>     |     |-RecoveryExpr 0x14c8082d8 <line:55:7, col:75> '_Bool' contains-errors     |     `-CompoundStmt 0x14c808348 <col:78, line:58:3>     |       `-ReturnStmt 0x14c808338 <line:57:4>     `-IfStmt 0x14c8087d0 <line:68:2, line:71:2>       |-ImplicitCastExpr 0x14c8085e8 <line:68:6> 'char *' <LValueToRValue>       | `-DeclRefExpr 0x14c8085c8 <col:6> 'char *' lvalue Var 0x15c128d50 'error' 'char *'       `-CompoundStmt 0x14c8087b8 <col:13, line:71:2>         `-CallExpr 0x14c808778 <line:70:3, col:14> 'int'           |-ImplicitCastExpr 0x14c808760 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14c808720 <col:3> 'int ()' Function 0x14c808668 'efree' 'int ()'           `-ImplicitCastExpr 0x14c8087a0 <col:9> 'char *' <LValueToRValue>             `-DeclRefExpr 0x14c808740 <col:9> 'char *' lvalue Var 0x15c128d50 'error' 'char *' ","19900":"`-FunctionDecl 0x15002a9f8  line:1:1 referenced hugetlb_get_unmapped_area 'int (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'   |-ParmVarDecl 0x15000e248 <col:27, col:40> col:40 used file 'struct file *'   |-ParmVarDecl 0x15000e2c8 <col:46, col:60> col:60 used addr 'unsigned long'   |-ParmVarDecl 0x15000e348 <line:2:3, col:17> col:17 used len 'unsigned long'   |-ParmVarDecl 0x15002a800 <col:22, col:36> col:36 used pgoff 'unsigned long'   |-ParmVarDecl 0x15002a880 <col:43, col:57> col:57 used flags 'unsigned long'   `-CompoundStmt 0x15002e118 <line:3:1, line:32:1>     |-DeclStmt 0x15002af08 <line:4:2, col:38>     | |-RecordDecl 0x15002ab10 <col:2, col:9> col:9 struct hstate     | `-VarDecl 0x15002ac78 <col:2, col:37> col:17 used h 'struct hstate *' cinit     |   `-ImplicitCastExpr 0x15002aed8 <col:21, col:37> 'struct hstate *' <IntegralToPointer>     |     `-CallExpr 0x15002ae98 <col:21, col:37> 'int'     |       |-ImplicitCastExpr 0x15002ae80 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15002ae10 <col:21> 'int ()' Function 0x15002ad58 'hstate_file' 'int ()'     |       `-ImplicitCastExpr 0x15002aec0 <col:33> 'struct file *' <LValueToRValue>     |         `-DeclRefExpr 0x15002ae30 <col:33> 'struct file *' lvalue ParmVar 0x15000e248 'file' 'struct file *'     |-DeclStmt 0x15002b1d0 <line:5:2, col:36>     | |-RecordDecl 0x15002af20 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x15002b088 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x15002b170 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm     |     `-RecoveryExpr 0x15002b150 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15002b3d8 <line:6:2, col:28>     | |-RecordDecl 0x15002b1e8 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x15002b358 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-IfStmt 0x15002b698 <line:8:2, line:9:11>     | |-BinaryOperator 0x15002b5d0 <line:8:6, col:29> 'unsigned long' '&'     | | |-ImplicitCastExpr 0x15002b5a0 <col:6> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x15002b3f0 <col:6> 'unsigned long' lvalue ParmVar 0x15000e348 'len' 'unsigned long'     | | `-ImplicitCastExpr 0x15002b5b8 <col:12, col:29> 'unsigned long' <IntegralCast>     | |   `-UnaryOperator 0x15002b588 <col:12, col:29> 'int' prefix '~' cannot overflow     | |     `-CallExpr 0x15002b548 <col:13, col:29> 'int'     | |       |-ImplicitCastExpr 0x15002b530 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x15002b4f0 <col:13> 'int ()' Function 0x15002b438 'huge_page_mask' 'int ()'     | |       `-ImplicitCastExpr 0x15002b570 <col:28> 'struct hstate *' <LValueToRValue>     | |         `-DeclRefExpr 0x15002b510 <col:28> 'struct hstate *' lvalue Var 0x15002ac78 'h' 'struct hstate *'     | `-ReturnStmt 0x15002b688 <line:9:3, col:11>     |   `-UnaryOperator 0x15002b670 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15002b658 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15002b638 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151008800 <line:10:2, line:11:11>     | |-BinaryOperator 0x15002b730 <line:10:6, col:12> 'int' contains-errors '>'     | | |-DeclRefExpr 0x15002b6b8 <col:6> 'unsigned long' lvalue ParmVar 0x15000e348 'len' 'unsigned long'     | | `-RecoveryExpr 0x15002b710 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15002b7e8 <line:11:3, col:11>     |   `-UnaryOperator 0x15002b7d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15002b7b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15002b798 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151008bf8 <line:13:2, line:17:2>     | |-BinaryOperator 0x151008898 <line:13:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x151008820 <col:6> 'unsigned long' lvalue ParmVar 0x15002a880 'flags' 'unsigned long'     | | `-RecoveryExpr 0x151008878 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151008bd8 <col:25, line:17:2>     |   |-IfStmt 0x151008b58 <line:14:3, line:15:12>     |   | |-CallExpr 0x151008a30 <line:14:7, col:45> 'int'     |   | | |-ImplicitCastExpr 0x151008a18 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x151008998 <col:7> 'int ()' Function 0x1510088e0 'prepare_hugepage_range' 'int ()'     |   | | |-ImplicitCastExpr 0x151008a68 <col:30> 'struct file *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1510089b8 <col:30> 'struct file *' lvalue ParmVar 0x15000e248 'file' 'struct file *'     |   | | |-ImplicitCastExpr 0x151008a80 <col:36> 'unsigned long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1510089d8 <col:36> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     |   | | `-ImplicitCastExpr 0x151008a98 <col:42> 'unsigned long' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1510089f8 <col:42> 'unsigned long' lvalue ParmVar 0x15000e348 'len' 'unsigned long'     |   | `-ReturnStmt 0x151008b48 <line:15:4, col:12>     |   |   `-UnaryOperator 0x151008b30 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x151008b18 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x151008af8 <col:12> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x151008bc8 <line:16:3, col:10>     |     `-ImplicitCastExpr 0x151008bb0 <col:10> 'int' <IntegralCast>     |       `-ImplicitCastExpr 0x151008b98 <col:10> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x151008b78 <col:10> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     |-IfStmt 0x1510096d0 <line:19:2, line:25:2>     | |-ImplicitCastExpr 0x151008c38 <line:19:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x151008c18 <col:6> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     | `-CompoundStmt 0x1510096a8 <col:12, line:25:2>     |   |-BinaryOperator 0x151008f80 <line:20:3, col:39> 'unsigned long' '='     |   | |-DeclRefExpr 0x151008c50 <col:3> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     |   | `-ImplicitCastExpr 0x151008f68 <col:10, col:39> 'unsigned long' <IntegralCast>     |   |   `-CallExpr 0x151008f20 <col:10, col:39> 'int'     |   |     |-ImplicitCastExpr 0x151008f08 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x151008d50 <col:10> 'int ()' Function 0x151008c98 'ALIGN' 'int ()'     |   |     |-ImplicitCastExpr 0x151008f50 <col:16> 'unsigned long' <LValueToRValue>     |   |     | `-DeclRefExpr 0x151008d70 <col:16> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     |   |     `-CallExpr 0x151008ec8 <col:22, col:38> 'int'     |   |       |-ImplicitCastExpr 0x151008eb0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x151008e70 <col:22> 'int ()' Function 0x151008db8 'huge_page_size' 'int ()'     |   |       `-ImplicitCastExpr 0x151008ef0 <col:37> 'struct hstate *' <LValueToRValue>     |   |         `-DeclRefExpr 0x151008e90 <col:37> 'struct hstate *' lvalue Var 0x15002ac78 'h' 'struct hstate *'     |   |-BinaryOperator 0x151009190 <line:21:3, col:26> 'struct vm_area_struct *' contains-errors '='     |   | |-DeclRefExpr 0x151008fa0 <col:3> 'struct vm_area_struct *' lvalue Var 0x15002b358 'vma' 'struct vm_area_struct *'     |   | `-ImplicitCastExpr 0x151009178 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x151009118 <col:9, col:26> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x151009100 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1510090a0 <col:9> 'int ()' Function 0x151008fe8 'find_vma' 'int ()'     |   |     |-ImplicitCastExpr 0x151009148 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x1510090c0 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x15002b088 'mm' 'struct mm_struct *'     |   |     `-ImplicitCastExpr 0x151009160 <col:22> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x1510090e0 <col:22> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     |   `-IfStmt 0x151009688 <line:22:3, line:24:11>     |     |-BinaryOperator 0x151009608 <line:22:7, line:23:43> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x151009508 <line:22:7, col:26> 'int' contains-errors '>='     |     | | |-BinaryOperator 0x1510094e8 <col:7, col:19> '<dependent type>' contains-errors '-'     |     | | | |-RecoveryExpr 0x1510094c8 <col:7> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x1510091c8 <col:19> 'unsigned long' lvalue ParmVar 0x15000e348 'len' 'unsigned long'     |     | | `-DeclRefExpr 0x151009208 <col:26> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     |     | `-ParenExpr 0x1510095e8 <line:23:7, col:43> 'int' contains-errors     |     |   `-BinaryOperator 0x1510095c8 <col:8, col:35> 'int' contains-errors '||'     |     |     |-UnaryOperator 0x151009540 <col:8, col:9> 'int' prefix '!' cannot overflow     |     |     | `-ImplicitCastExpr 0x151009528 <col:9> 'struct vm_area_struct *' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x151009248 <col:9> 'struct vm_area_struct *' lvalue Var 0x15002b358 'vma' 'struct vm_area_struct *'     |     |     `-BinaryOperator 0x1510095a8 <col:16, col:35> 'int' contains-errors '<='     |     |       |-BinaryOperator 0x151009588 <col:16, col:23> 'unsigned long' '+'     |     |       | |-ImplicitCastExpr 0x151009558 <col:16> 'unsigned long' <LValueToRValue>     |     |       | | `-DeclRefExpr 0x151009298 <col:16> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     |     |       | `-ImplicitCastExpr 0x151009570 <col:23> 'unsigned long' <LValueToRValue>     |     |       |   `-DeclRefExpr 0x1510092b8 <col:23> 'unsigned long' lvalue ParmVar 0x15000e348 'len' 'unsigned long'     |     |       `-RecoveryExpr 0x151009360 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x151009328 <col:30> 'struct vm_area_struct *' lvalue Var 0x15002b358 'vma' 'struct vm_area_struct *'     |     `-ReturnStmt 0x151009678 <line:24:4, col:11>     |       `-ImplicitCastExpr 0x151009660 <col:11> 'int' <IntegralCast>     |         `-ImplicitCastExpr 0x151009648 <col:11> 'unsigned long' <LValueToRValue>     |           `-DeclRefExpr 0x151009628 <col:11> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'     `-IfStmt 0x15002e0e8 <line:26:2, line:31:17> has_else       |-BinaryOperator 0x1510097a8 <line:26:6, col:31> 'int' contains-errors '=='       | |-RecoveryExpr 0x151009728 <col:6, col:10> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x1510096f0 <col:6> 'struct mm_struct *' contains-errors lvalue Var 0x15002b088 'mm' 'struct mm_struct *'       | `-DeclRefExpr 0x151009788 <col:31> 'int (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)' Function 0x15002a9f8 'hugetlb_get_unmapped_area' 'int (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'       |-ReturnStmt 0x15002de50 <line:27:3, line:28:17>       | `-CallExpr 0x15002dd90 <line:27:10, line:28:17> 'int'       |   |-ImplicitCastExpr 0x15002dd78 <line:27:10> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x15002dcb8 <col:10> 'int ()' Function 0x15002dc00 'hugetlb_get_unmapped_area_bottomup' 'int ()'       |   |-ImplicitCastExpr 0x15002ddd8 <col:45> 'struct file *' <LValueToRValue>       |   | `-DeclRefExpr 0x15002dcd8 <col:45> 'struct file *' lvalue ParmVar 0x15000e248 'file' 'struct file *'       |   |-ImplicitCastExpr 0x15002ddf0 <col:51> 'unsigned long' <LValueToRValue>       |   | `-DeclRefExpr 0x15002dcf8 <col:51> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'       |   |-ImplicitCastExpr 0x15002de08 <col:57> 'unsigned long' <LValueToRValue>       |   | `-DeclRefExpr 0x15002dd18 <col:57> 'unsigned long' lvalue ParmVar 0x15000e348 'len' 'unsigned long'       |   |-ImplicitCastExpr 0x15002de20 <line:28:5> 'unsigned long' <LValueToRValue>       |   | `-DeclRefExpr 0x15002dd38 <col:5> 'unsigned long' lvalue ParmVar 0x15002a800 'pgoff' 'unsigned long'       |   `-ImplicitCastExpr 0x15002de38 <col:12> 'unsigned long' <LValueToRValue>       |     `-DeclRefExpr 0x15002dd58 <col:12> 'unsigned long' lvalue ParmVar 0x15002a880 'flags' 'unsigned long'       `-ReturnStmt 0x15002e0d8 <line:30:3, line:31:17>         `-CallExpr 0x15002e018 <line:30:10, line:31:17> 'int'           |-ImplicitCastExpr 0x15002e000 <line:30:10> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x15002df40 <col:10> 'int ()' Function 0x15002de88 'hugetlb_get_unmapped_area_topdown' 'int ()'           |-ImplicitCastExpr 0x15002e060 <col:44> 'struct file *' <LValueToRValue>           | `-DeclRefExpr 0x15002df60 <col:44> 'struct file *' lvalue ParmVar 0x15000e248 'file' 'struct file *'           |-ImplicitCastExpr 0x15002e078 <col:50> 'unsigned long' <LValueToRValue>           | `-DeclRefExpr 0x15002df80 <col:50> 'unsigned long' lvalue ParmVar 0x15000e2c8 'addr' 'unsigned long'           |-ImplicitCastExpr 0x15002e090 <col:56> 'unsigned long' <LValueToRValue>           | `-DeclRefExpr 0x15002dfa0 <col:56> 'unsigned long' lvalue ParmVar 0x15000e348 'len' 'unsigned long'           |-ImplicitCastExpr 0x15002e0a8 <line:31:5> 'unsigned long' <LValueToRValue>           | `-DeclRefExpr 0x15002dfc0 <col:5> 'unsigned long' lvalue ParmVar 0x15002a800 'pgoff' 'unsigned long'           `-ImplicitCastExpr 0x15002e0c0 <col:12> 'unsigned long' <LValueToRValue>             `-DeclRefExpr 0x15002dfe0 <col:12> 'unsigned long' lvalue ParmVar 0x15002a880 'flags' 'unsigned long' ","19635":"`-FunctionDecl 0x1409281a8  line:1:12 path_count_inc 'int (int)' static   |-ParmVarDecl 0x1409280d8 <col:27, col:31> col:31 used nests 'int'   `-CompoundStmt 0x1409283e0 <line:2:1, line:6:1>     |-IfStmt 0x140928390 <line:3:2, line:4:11>     | |-RecoveryExpr 0x140928328 <line:3:6, col:45> '_Bool' contains-errors     | `-ReturnStmt 0x140928380 <line:4:3, col:11>     |   `-UnaryOperator 0x140928368 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x140928348 <col:11> 'int' 1     `-ReturnStmt 0x1409283d0 <line:5:2, col:9>       `-IntegerLiteral 0x1409283b0 <col:9> 'int' 0 ","19221":"`-FunctionDecl 0x14c00df18  line:1:1 invalid datetime_s_jisx0301 'int (int, int *, int)'   |-ParmVarDecl 0x14c00dcd8 <col:21, col:25> col:25 used argc 'int'   |-ParmVarDecl 0x14c00dda8 <col:31, col:38> col:38 invalid argv 'int *'   |-ParmVarDecl 0x14c00de28 <col:44, col:50> col:50 invalid klass 'int'   `-CompoundStmt 0x14c0287d0 <line:2:1, line:18:1>     |-CallExpr 0x14c00e308 <line:5:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c00e130 <col:5> 'int ()' Function 0x14c00e078 'rb_scan_args' 'int ()'     | |-DeclRefExpr 0x14c00e150 <col:18> 'int' lvalue ParmVar 0x14c00dcd8 'argc' 'int'     | |-RecoveryExpr 0x14c00e170 <col:24> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x14c00e1d0 <col:30> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x14c00e2b8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14c00e298 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14c00e2f0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14c00e2d0 <col:44> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x14c00e388 <line:7:5, line:12:5>     | |-ImplicitCastExpr 0x14c00e370 <line:7:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c00e350 <col:13> 'int' lvalue ParmVar 0x14c00dcd8 'argc' 'int'     | `-CompoundStmt 0x14c028588 <col:19, line:12:5>     |   |-CaseStmt 0x14c028200 <line:8:7, <invalid sloc>>     |   | |-ConstantExpr 0x14c00e3d0 <col:12> 'int'     |   | | `-IntegerLiteral 0x14c00e3b0 <col:12> 'int' 0     |   | `-NullStmt 0x14c0283d8 <<invalid sloc>>     |   `-CaseStmt 0x14c028418 <line:10:7, <invalid sloc>>     |     |-ConstantExpr 0x14c028400 <col:12> 'int'     |     | `-IntegerLiteral 0x14c0283e0 <col:12> 'int' 1     |     `-NullStmt 0x14c028580 <<invalid sloc>>     `-CompoundStmt 0x14c0287b8 <line:14:5, line:17:5>       `-ReturnStmt 0x14c0287a8 <line:16:2, col:40>         `-CallExpr 0x14c028770 <col:9, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x14c028688 <col:9> 'int ()' Function 0x14c0285d0 'dt_new_by_frags' 'int ()'           |-RecoveryExpr 0x14c0286a8 <col:25> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x14c028730 <col:32> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x14c028750 <col:38> '<dependent type>' contains-errors lvalue ","19628":"`-FunctionDecl 0x12b141ca0  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x12b141da0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12b141e08 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x12b141e70 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12b141d48 <<invalid sloc>> Implicit 905   `-FormatAttr 0x12b141ef0 <col:2> Implicit printf 3 4 ","19631":"`-FunctionDecl 0x15000df18  line:1:1 invalid symbol_code_set 'int (int *, int, int)'   |-ParmVarDecl 0x15000dd28 <col:18, col:26> col:26 invalid sym 'int *'   |-ParmVarDecl 0x15000dda8 <col:31, col:35> col:35 used code 'int'   |-ParmVarDecl 0x15000de28 <col:41, col:50> col:50 invalid loc 'int'   `-CompoundStmt 0x150029390 <line:2:1, line:27:1>     |-DeclStmt 0x15000e120 <line:3:3, col:35>     | `-VarDecl 0x15000dff0 <col:3, col:31> col:8 used codep 'int *' cinit     |   `-UnaryOperator 0x15000e108 <col:16, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x15000e0c0 <col:17, col:31> '<dependent type>' contains-errors lvalue ->code     |       `-CXXDependentScopeMemberExpr 0x15000e078 <col:17, col:22> '<dependent type>' contains-errors lvalue ->content     |         `-RecoveryExpr 0x15000e058 <col:17> '<dependent type>' contains-errors lvalue     `-IfStmt 0x150029360 <line:4:3, line:26:5> has_else       |-BinaryOperator 0x15000e240 <line:4:7, col:30> 'int' contains-errors '!='       | |-CXXDependentScopeMemberExpr 0x15000e1a0 <col:7, col:21> '<dependent type>' contains-errors lvalue ->class       | | `-CXXDependentScopeMemberExpr 0x15000e158 <col:7, col:12> '<dependent type>' contains-errors lvalue ->content       | |   `-RecoveryExpr 0x15000e138 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x15000e220 <col:30> '<dependent type>' contains-errors lvalue       |-CallExpr 0x1500276c8 <line:5:5, line:6:23> '<dependent type>' contains-errors       | |-DeclRefExpr 0x15000e3c0 <line:5:5> 'int ()' Function 0x15000e308 'complain' 'int ()'       | |-UnaryOperator 0x150027400 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow       | | `-RecoveryExpr 0x15000e3e0 <col:16> '<dependent type>' contains-errors lvalue       | |-DeclRefExpr 0x150027650 <col:21> 'int ()' Function 0x15000e308 'complain' 'int ()'       | `-CallExpr 0x150027688 <line:6:15, col:22> 'int'       |   |-ImplicitCastExpr 0x150027670 <col:15> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x150027510 <col:15> 'int ()' Function 0x150027458 '_' 'int ()'       |   `-ImplicitCastExpr 0x1500276b0 <col:17> 'char *' <ArrayToPointerDecay>       |     `-StringLiteral 0x150027570 <col:17> 'char[4]' lvalue \"STR\"       `-IfStmt 0x150029330 <line:7:8, line:26:5> has_else         |-BinaryOperator 0x150027988 <line:7:12, line:8:25> 'int' contains-errors '&&'         | |-BinaryOperator 0x1500278e8 <line:7:12, col:22> 'int' contains-errors '!='         | | |-UnaryOperator 0x1500278b0 <col:12, col:13> 'int' contains-errors lvalue prefix '*' cannot overflow         | | | `-ImplicitCastExpr 0x150027898 <col:13> 'int *' contains-errors <LValueToRValue>         | | |   `-DeclRefExpr 0x150027700 <col:13> 'int *' contains-errors lvalue Var 0x15000dff0 'codep' 'int *'         | | `-RecoveryExpr 0x1500278c8 <col:22> '<dependent type>' contains-errors lvalue         | `-BinaryOperator 0x150027968 <line:8:15, col:25> 'int' contains-errors '!='         |   |-ImplicitCastExpr 0x150027938 <col:15, col:16> 'int' contains-errors <LValueToRValue>         |   | `-UnaryOperator 0x150027920 <col:15, col:16> 'int' contains-errors lvalue prefix '*' cannot overflow         |   |   `-ImplicitCastExpr 0x150027908 <col:16> 'int *' contains-errors <LValueToRValue>         |   |     `-DeclRefExpr 0x150027788 <col:16> 'int *' contains-errors lvalue Var 0x15000dff0 'codep' 'int *'         |   `-ImplicitCastExpr 0x150027950 <col:25> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x1500277d8 <col:25> 'int' lvalue ParmVar 0x15000dda8 'code' 'int'         |-CallExpr 0x150027bd0 <line:9:5, line:10:23> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1500279a8 <line:9:5> 'int ()' Function 0x15000e308 'complain' 'int ()'         | |-UnaryOperator 0x1500279e8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x1500279c8 <col:16> '<dependent type>' contains-errors lvalue         | |-DeclRefExpr 0x150027b58 <col:21> 'int ()' Function 0x15000e308 'complain' 'int ()'         | |-CallExpr 0x150027b90 <col:32, col:39> 'int'         | | |-ImplicitCastExpr 0x150027b78 <col:32> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x150027a18 <col:32> 'int ()' Function 0x150027458 '_' 'int ()'         | | `-ImplicitCastExpr 0x150027bb8 <col:34> 'char *' <ArrayToPointerDecay>         | |   `-StringLiteral 0x150027a38 <col:34> 'char[4]' lvalue \"STR\"         | `-CXXDependentScopeMemberExpr 0x150027ad0 <line:10:15, col:20> '<dependent type>' contains-errors lvalue ->tag         |   `-RecoveryExpr 0x150027ab0 <col:15> '<dependent type>' contains-errors lvalue         `-IfStmt 0x150029300 <line:11:8, line:26:5> has_else           |-BinaryOperator 0x150027c88 <line:11:12, col:20> 'int' contains-errors '=='           | |-DeclRefExpr 0x150027c10 <col:12> 'int' lvalue ParmVar 0x15000dda8 'code' 'int'           | `-RecoveryExpr 0x150027c68 <col:20> '<dependent type>' contains-errors lvalue           |-CallExpr 0x150027ed0 <line:12:5, line:13:23> '<dependent type>' contains-errors           | |-DeclRefExpr 0x150027ca8 <line:12:5> 'int ()' Function 0x15000e308 'complain' 'int ()'           | |-UnaryOperator 0x150027ce8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow           | | `-RecoveryExpr 0x150027cc8 <col:16> '<dependent type>' contains-errors lvalue           | |-DeclRefExpr 0x150027e58 <col:21> 'int ()' Function 0x15000e308 'complain' 'int ()'           | |-CallExpr 0x150027e90 <col:32, col:39> 'int'           | | |-ImplicitCastExpr 0x150027e78 <col:32> 'int (*)()' <FunctionToPointerDecay>           | | | `-DeclRefExpr 0x150027d18 <col:32> 'int ()' Function 0x150027458 '_' 'int ()'           | | `-ImplicitCastExpr 0x150027eb8 <col:34> 'char *' <ArrayToPointerDecay>           | |   `-StringLiteral 0x150027d38 <col:34> 'char[4]' lvalue \"STR\"           | `-CXXDependentScopeMemberExpr 0x150027dd0 <line:13:15, col:20> '<dependent type>' contains-errors lvalue ->tag           |   `-RecoveryExpr 0x150027db0 <col:15> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x1500292e0 <line:15:5, line:26:5>             |-BinaryOperator 0x150027f98 <line:16:7, col:16> 'int' contains-errors '='             | |-UnaryOperator 0x150027f48 <col:7, col:8> 'int' contains-errors lvalue prefix '*' cannot overflow             | | `-ImplicitCastExpr 0x150027f30 <col:8> 'int *' contains-errors <LValueToRValue>             | |   `-DeclRefExpr 0x150027f10 <col:8> 'int *' contains-errors lvalue Var 0x15000dff0 'codep' 'int *'             | `-ImplicitCastExpr 0x150027f80 <col:16> 'int' <LValueToRValue>             |   `-DeclRefExpr 0x150027f60 <col:16> 'int' lvalue ParmVar 0x15000dda8 'code' 'int'             `-IfStmt 0x1500292c0 <line:18:7, line:25:9>               |-BinaryOperator 0x150028158 <line:18:11, col:25> 'int' contains-errors '&&'               | |-BinaryOperator 0x1500280e8 <col:11, col:19> 'int' '=='               | | |-ImplicitCastExpr 0x1500280d0 <col:11> 'int' <LValueToRValue>               | | | `-DeclRefExpr 0x150027fb8 <col:11> 'int' lvalue ParmVar 0x15000dda8 'code' 'int'               | | `-IntegerLiteral 0x150027fd8 <col:19> 'int' 0               | `-UnaryOperator 0x150028140 <col:24, col:25> '<dependent type>' contains-errors prefix '!' cannot overflow               |   `-ImplicitCastExpr 0x150028128 <col:25> '<dependent type>' contains-errors <LValueToRValue>               |     `-RecoveryExpr 0x150028108 <col:25> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x1500292a8 <line:19:9, line:25:9>                 `-IfStmt 0x150029268 <line:22:11, line:23:15>                   |-BinaryOperator 0x1500283d8 <line:22:15, col:44> 'int' contains-errors '!='                   | |-CXXDependentScopeMemberExpr 0x150028370 <col:15, col:34> '<dependent type>' contains-errors lvalue ->number                   | | `-CXXDependentScopeMemberExpr 0x150028328 <col:15, col:25> '<dependent type>' contains-errors lvalue ->content                   | |   `-RecoveryExpr 0x150028308 <col:15> '<dependent type>' contains-errors lvalue                   | `-RecoveryExpr 0x1500283b8 <col:44> '<dependent type>' contains-errors lvalue                   `-UnaryOperator 0x150029250 <line:23:13, col:15> '<dependent type>' contains-errors prefix '--' cannot overflow                     `-RecoveryExpr 0x150029230 <col:15> '<dependent type>' contains-errors lvalue ","19417":"`-FunctionDecl 0x14f928750  line:1:6 ext3_update_dynamic_rev 'void (struct super_block *)'   |-ParmVarDecl 0x14f928648 <col:30, col:50> col:50 used sb 'struct super_block *'   `-CompoundStmt 0x1580090b8 <line:2:1, line:20:1>     |-DeclStmt 0x158008658 <line:3:2, col:49>     | |-RecordDecl 0x158008248 <col:2, col:9> col:9 struct ext3_super_block     | `-VarDecl 0x1580083b8 <col:2, col:45> col:27 used es 'struct ext3_super_block *' cinit     |   `-RecoveryExpr 0x158008618 <col:32, col:45> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x1580085d8 <col:32, col:42> 'int'     |       |-ImplicitCastExpr 0x1580085c0 <col:32> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x158008550 <col:32> 'int ()' Function 0x158008498 'EXT3_SB' 'int ()'     |       `-ImplicitCastExpr 0x158008600 <col:40> 'struct super_block *' <LValueToRValue>     |         `-DeclRefExpr 0x158008570 <col:40> 'struct super_block *' lvalue ParmVar 0x14f928648 'sb' 'struct super_block *'     |-IfStmt 0x158008880 <line:5:2, line:6:3>     | |-BinaryOperator 0x158008850 <line:5:6, col:37> 'int' contains-errors '>'     | | |-CallExpr 0x1580087d0 <col:6, col:33> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x158008750 <col:6> 'int ()' Function 0x158008698 'le32_to_cpu' 'int ()'     | | | `-RecoveryExpr 0x1580087a8 <col:18, col:22> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x158008770 <col:18> 'struct ext3_super_block *' contains-errors lvalue Var 0x1580083b8 'es' 'struct ext3_super_block *'     | | `-RecoveryExpr 0x158008830 <col:37> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x158008870 <line:6:3>     |-CallExpr 0x158008ae0 <line:8:2, line:11:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158008980 <line:8:2> 'int ()' Function 0x1580088c8 'ext3_msg' 'int ()'     | |-DeclRefExpr 0x1580089a0 <col:11> 'struct super_block *' lvalue ParmVar 0x14f928648 'sb' 'struct super_block *'     | |-RecoveryExpr 0x158008aa0 <col:15> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x158008a20 <line:9:3, line:10:3> 'char[7]' lvalue \"STRSTR\"     | `-RecoveryExpr 0x158008ac0 <line:11:3> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x158008d28 <line:13:2, col:55> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x158008b58 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x158008b20 <col:2> 'struct ext3_super_block *' contains-errors lvalue Var 0x1580083b8 'es' 'struct ext3_super_block *'     | `-CallExpr 0x158008d00 <col:20, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x158008c60 <col:20> 'int ()' Function 0x158008ba8 'cpu_to_le32' 'int ()'     |   `-RecoveryExpr 0x158008ce0 <col:32> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x158008f50 <line:14:2, col:57> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x158008d80 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x158008d48 <col:2> 'struct ext3_super_block *' contains-errors lvalue Var 0x1580083b8 'es' 'struct ext3_super_block *'     | `-CallExpr 0x158008f28 <col:21, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x158008e88 <col:21> 'int ()' Function 0x158008dd0 'cpu_to_le16' 'int ()'     |   `-RecoveryExpr 0x158008f08 <col:33> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x158009098 <line:15:2, col:48> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x158008fa8 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x158008f70 <col:2> 'struct ext3_super_block *' contains-errors lvalue Var 0x1580083b8 'es' 'struct ext3_super_block *'       `-CallExpr 0x158009070 <col:20, col:48> '<dependent type>' contains-errors         |-DeclRefExpr 0x158008fd0 <col:20> 'int ()' Function 0x158008ba8 'cpu_to_le32' 'int ()'         `-RecoveryExpr 0x158009050 <col:32> '<dependent type>' contains-errors lvalue ","19493":"`-FunctionDecl 0x153927c88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x153927b28 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x153927ba8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x15480a018 <col:64, line:33:1>     |-DeclStmt 0x153927e78 <line:2:3, col:75>     | `-VarDecl 0x153927d58 <col:3, col:9> col:9 used params 'int *' auto     |-CallExpr 0x153928198 <line:4:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153927ff0 <col:3> 'int ()' Function 0x153927f38 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x153928010 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x153928150 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x153928110 <col:30> 'int ()' Function 0x153928058 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x153928130 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x153928178 <col:47> 'int' 1     |-CallExpr 0x154808988 <line:5:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1539281d0 <col:3> 'int ()' Function 0x153927f38 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x154808800 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x154808940 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x154808900 <col:30> 'int ()' Function 0x154808848 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x154808920 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x154808968 <col:48> 'int' 1     |-DeclStmt 0x154808bd0 <line:7:3, col:68>     | `-VarDecl 0x1548089d8 <col:3, col:23> col:23 invalid input 'const int *'     |-CallExpr 0x154809038 <line:10:3, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154808e70 <col:3> 'int ()' Function 0x154808db8 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x154808e90 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x154809018 <col:27, col:51> 'int' contains-errors '<='     |   |-CallExpr 0x154808fd0 <col:27, col:46> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x154808f90 <col:27> 'int ()' Function 0x154808ed8 'NumDimensions' 'int ()'     |   | `-RecoveryExpr 0x154808fb0 <col:41> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x154808ff8 <col:51> 'int' 4     |-CallExpr 0x154809518 <line:12:3, line:14:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154809068 <line:12:3> 'int ()' Function 0x154808db8 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x154809088 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1548094f8 <col:27, line:14:47> 'int' contains-errors '||'     |   |-BinaryOperator 0x154809430 <line:12:27, line:13:47> 'int' contains-errors '||'     |   | |-BinaryOperator 0x154809368 <line:12:27, col:43> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x154809300 <col:27, col:35> '<dependent type>' contains-errors lvalue ->type     |   | | | `-RecoveryExpr 0x1548092e0 <col:27> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x154809348 <col:43> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x154809410 <line:13:31, col:47> 'int' contains-errors '=='     |   |   |-CXXDependentScopeMemberExpr 0x1548093a8 <col:31, col:39> '<dependent type>' contains-errors lvalue ->type     |   |   | `-RecoveryExpr 0x154809388 <col:31> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x1548093f0 <col:47> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1548094d8 <line:14:31, col:47> 'int' contains-errors '=='     |     |-CXXDependentScopeMemberExpr 0x154809470 <col:31, col:39> '<dependent type>' contains-errors lvalue ->type     |     | `-RecoveryExpr 0x154809450 <col:31> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x1548094b8 <col:47> '<dependent type>' contains-errors lvalue     `-IfStmt 0x154809d40 <line:17:3, line:25:3>       |-RecoveryExpr 0x1548096d0 <line:17:7, col:55> '_Bool' contains-errors       `-CompoundStmt 0x154809d20 <col:68, line:25:3>         |-IfStmt 0x154809c50 <line:19:5, line:21:5>         | |-RecoveryExpr 0x1548097b0 <line:19:9, col:25> '_Bool' contains-errors         | `-CompoundStmt 0x154809c40 <col:39, line:21:5>         `-IfStmt 0x154809d00 <line:22:5, line:24:5>           |-RecoveryExpr 0x154809c70 <line:22:9, col:25> '_Bool' contains-errors           `-CompoundStmt 0x154809cf0 <col:38, line:24:5> ","19551":"`-FunctionDecl 0x1380f9c38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x1380f9b58 <col:8> col:8 Http1ServerConnectionImplTest 'int'   |-ParmVarDecl 0x1380f9ad8 <col:39> col:39 ManyTrailersRejected 'int'   `-CompoundStmt 0x1380fa128 <col:61, line:4:1>     `-CallExpr 0x1380fa0f8 <line:3:3, col:58> '<dependent type>' contains-errors       |-DeclRefExpr 0x1380f9e60 <col:3> 'int ()' Function 0x1380f9da8 'testTrailersExceedLimit' 'int ()'       |-CallExpr 0x1380fa0b0 <col:27, col:51> 'int'       | |-ImplicitCastExpr 0x1380fa098 <col:27> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x1380f9f60 <col:27> 'int ()' Function 0x1380f9ea8 'createHeaderFragment' 'int ()'       | `-IntegerLiteral 0x1380f9f80 <col:48> 'int' 101       `-RecoveryExpr 0x1380fa0d8 <col:54> '<dependent type>' contains-errors lvalue ","20077":"`-FunctionDecl 0x14f00ddf8  line:1:1 invalid onig_print_statistics 'int (int *)'   |-ParmVarDecl 0x14f00dd28 <col:23, col:29> col:29 invalid f 'int *'   `-CompoundStmt 0x14f0282e8 <line:2:1, line:18:1>     |-DeclStmt 0x14f00df28 <line:3:3, col:8>     | `-VarDecl 0x14f00dec0 <col:3, col:7> col:7 used r 'int'     |-DeclStmt 0x14f00dfc0 <line:4:3, col:8>     | `-VarDecl 0x14f00df58 <col:3, col:7> col:7 used i 'int'     |-BinaryOperator 0x14f00e220 <line:6:3, col:23> 'int' contains-errors '='     | |-DeclRefExpr 0x14f00dfd8 <col:3> 'int' lvalue Var 0x14f00dec0 'r' 'int'     | `-CallExpr 0x14f00e1f0 <col:7, col:23> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f00e150 <col:7> 'int ()' Function 0x14f00e098 'fprintf' 'int ()'     |   |-RecoveryExpr 0x14f00e170 <col:15> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x14f00e1d0 <col:18> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14f00e300 <line:7:3, col:22>     | |-BinaryOperator 0x14f00e298 <col:7, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x14f00e280 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14f00e240 <col:7> 'int' lvalue Var 0x14f00dec0 'r' 'int'     | | `-IntegerLiteral 0x14f00e260 <col:11> 'int' 0     | `-ReturnStmt 0x14f00e2f0 <col:14, col:22>     |   `-UnaryOperator 0x14f00e2d8 <col:21, col:22> 'int' prefix '-'     |     `-IntegerLiteral 0x14f00e2b8 <col:22> 'int' 1     |-BinaryOperator 0x14f0281b8 <line:14:3, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x14f028070 <col:3> 'int' lvalue Var 0x14f00dec0 'r' 'int'     | `-CallExpr 0x14f028180 <col:7, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f028090 <col:7> 'int ()' Function 0x14f00e098 'fprintf' 'int ()'     |   |-RecoveryExpr 0x14f0280b0 <col:15> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x14f0280d0 <col:18> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x14f028160 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14f028298 <line:15:3, col:22>     | |-BinaryOperator 0x14f028230 <col:7, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x14f028218 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14f0281d8 <col:7> 'int' lvalue Var 0x14f00dec0 'r' 'int'     | | `-IntegerLiteral 0x14f0281f8 <col:11> 'int' 0     | `-ReturnStmt 0x14f028288 <col:14, col:22>     |   `-UnaryOperator 0x14f028270 <col:21, col:22> 'int' prefix '-'     |     `-IntegerLiteral 0x14f028250 <col:22> 'int' 1     `-ReturnStmt 0x14f0282d8 <line:17:3, col:10>       `-IntegerLiteral 0x14f0282b8 <col:10> 'int' 0 ","19386":"`-FunctionDecl 0x12e941968  line:1:13 invalid fetch_seccomp 'int (const char *, const char *, struct lxc_proc_context_info *, int *)' static   |-ParmVarDecl 0x12e9280f0 <col:27, col:39> col:39 used name 'const char *'   |-ParmVarDecl 0x12e928170 <col:45, col:57> col:57 used lxcpath 'const char *'   |-ParmVarDecl 0x12e928768 <line:2:3, col:33> col:33 used i 'struct lxc_proc_context_info *'   |-ParmVarDecl 0x12e941818 <col:36, col:58> col:58 invalid options 'int *'   `-CompoundStmt 0x12e9426b0 <line:3:1, line:21:1>     |-DeclStmt 0x12e941c18 <line:4:2, col:25>     | |-RecordDecl 0x12e941a30 <col:2, col:9> col:9 struct lxc_container     | `-VarDecl 0x12e941b98 <col:2, col:24> col:24 used c 'struct lxc_container *'     |-IfStmt 0x12e941dd8 <line:6:2, line:7:10>     | |-RecoveryExpr 0x12e941d70 <line:6:6, col:86> '_Bool' contains-errors     | `-ReturnStmt 0x12e941dc8 <line:7:3, col:10>     |   `-RecoveryExpr 0x12e941da8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e942090 <line:9:2, col:37> 'struct lxc_container *' '='     | |-DeclRefExpr 0x12e941df8 <col:2> 'struct lxc_container *' lvalue Var 0x12e941b98 'c' 'struct lxc_container *'     | `-ImplicitCastExpr 0x12e942078 <col:6, col:37> 'struct lxc_container *' <IntegralToPointer>     |   `-CallExpr 0x12e942018 <col:6, col:37> 'int'     |     |-ImplicitCastExpr 0x12e942000 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12e941f70 <col:6> 'int ()' Function 0x12e941eb8 'lxc_container_new' 'int ()'     |     |-ImplicitCastExpr 0x12e942048 <col:24> 'const char *' <LValueToRValue>     |     | `-DeclRefExpr 0x12e941f90 <col:24> 'const char *' lvalue ParmVar 0x12e9280f0 'name' 'const char *'     |     `-ImplicitCastExpr 0x12e942060 <col:30> 'const char *' <LValueToRValue>     |       `-DeclRefExpr 0x12e941fb0 <col:30> 'const char *' lvalue ParmVar 0x12e928170 'lxcpath' 'const char *'     |-BinaryOperator 0x12e942198 <line:12:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e942150 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e942118 <col:2> 'struct lxc_proc_context_info *' lvalue ParmVar 0x12e928768 'i' 'struct lxc_proc_context_info *'     | `-DeclRefExpr 0x12e942178 <col:17> 'struct lxc_container *' lvalue Var 0x12e941b98 'c' 'struct lxc_container *'     |-IfStmt 0x12e942648 <line:15:2, line:18:2>     | |-BinaryOperator 0x12e942438 <line:15:6, col:45> 'int' contains-errors '<'     | | |-CallExpr 0x12e9423f0 <col:6, col:41> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12e942370 <col:6> 'int ()' Function 0x12e9422b8 'lxc_read_seccomp_config' 'int ()'     | | | `-RecoveryExpr 0x12e9423c8 <col:30, col:33> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x12e942390 <col:30> 'struct lxc_container *' lvalue Var 0x12e941b98 'c' 'struct lxc_container *'     | | `-IntegerLiteral 0x12e942418 <col:45> 'int' 0     | `-CompoundStmt 0x12e942630 <col:48, line:18:2>     |   `-CallExpr 0x12e9425d8 <line:16:3, col:14> 'int'     |     |-ImplicitCastExpr 0x12e9425c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12e942538 <col:3> 'int ()' Function 0x12e942480 'ERROR' 'int ()'     |     `-ImplicitCastExpr 0x12e942600 <col:9> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x12e9425a0 <col:9> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x12e9426a0 <line:20:2, col:9>       `-RecoveryExpr 0x12e942680 <col:9> '<dependent type>' contains-errors lvalue ","19191":"`-FunctionDecl 0x1320134e0  col:13 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1320135e0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x132013648 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1320136b0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x132013588 <<invalid sloc>> Implicit 883 ","19585":"`-FunctionDecl 0x12d013ad0  line:1:13 invalid tcp_sack_new_ofo_skb 'void (struct sock *, int, int)' static   |-ParmVarDecl 0x12d90fa48 <col:34, col:47> col:47 used sk 'struct sock *'   |-ParmVarDecl 0x12d90fae0 <col:51, col:55> col:55 invalid seq 'int'   |-ParmVarDecl 0x12d90fb60 <col:60, col:64> col:64 invalid end_seq 'int'   `-CompoundStmt 0x12e00a088 <line:2:1, line:38:1>     |-DeclStmt 0x12d013fb8 <line:3:2, col:34>     | |-RecordDecl 0x12d013b90 <col:2, col:9> col:9 struct tcp_sock     | `-VarDecl 0x12d013cf8 <col:2, col:33> col:19 used tp 'struct tcp_sock *' cinit     |   `-ImplicitCastExpr 0x12d013f88 <col:24, col:33> 'struct tcp_sock *' <IntegralToPointer>     |     `-CallExpr 0x12d013f48 <col:24, col:33> 'int'     |       |-ImplicitCastExpr 0x12d013f30 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12d013ec0 <col:24> 'int ()' Function 0x12d013e08 'tcp_sk' 'int ()'     |       `-ImplicitCastExpr 0x12d013f70 <col:31> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x12d013ee0 <col:31> 'struct sock *' lvalue ParmVar 0x12d90fa48 'sk' 'struct sock *'     |-DeclStmt 0x12d014288 <line:4:2, col:52>     | |-RecordDecl 0x12d013fd0 <col:2, col:9> col:9 struct tcp_sack_block     | `-VarDecl 0x12d014138 <col:2, col:51> col:25 used sp 'struct tcp_sack_block *' cinit     |   `-UnaryOperator 0x12d014258 <col:30, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x12d014238 <col:31, col:51> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x12d014220 <col:31, col:35> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x12d0141d8 <col:31, col:35> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x12d0141a0 <col:31> 'struct tcp_sock *' lvalue Var 0x12d013cf8 'tp' 'struct tcp_sock *'     |       `-IntegerLiteral 0x12d014200 <col:50> 'int' 0     |-DeclStmt 0x12d0143c8 <line:5:2, col:38>     | `-VarDecl 0x12d0142b8 <col:2, col:29> col:6 used cur_sacks 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x12d014380 <col:18, col:29> '<dependent type>' contains-errors lvalue .num_sacks     |     `-RecoveryExpr 0x12d014358 <col:18, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d014320 <col:18> 'struct tcp_sock *' lvalue Var 0x12d013cf8 'tp' 'struct tcp_sock *'     |-DeclStmt 0x12d014460 <line:6:2, col:15>     | `-VarDecl 0x12d0143f8 <col:2, col:6> col:6 used this_sack 'int'     |-IfStmt 0x12d014530 <line:8:2, line:9:8>     | |-UnaryOperator 0x12d0144b0 <line:8:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12d014498 <col:7> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12d014478 <col:7> 'int' contains-errors lvalue Var 0x12d0142b8 'cur_sacks' 'int'     | `-GotoStmt 0x12d014518 <line:9:3, col:8> 'new_sack' 0x12d0144c8     |-ForStmt 0x12e0096e8 <line:11:2, line:20:2>     | |-BinaryOperator 0x12d014590 <line:11:7, col:19> 'int' '='     | | |-DeclRefExpr 0x12d014550 <col:7> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     | | `-IntegerLiteral 0x12d014570 <col:19> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12d014620 <col:22, col:34> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x12d0145f0 <col:22> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12d0145b0 <col:22> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     | | `-ImplicitCastExpr 0x12d014608 <col:34> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12d0145d0 <col:34> 'int' contains-errors lvalue Var 0x12d0142b8 'cur_sacks' 'int'     | |-BinaryOperator 0x12d0146c0 <col:45, col:60> '<dependent type>' contains-errors ','     | | |-UnaryOperator 0x12d014660 <col:45, col:54> 'int' postfix '++'     | | | `-DeclRefExpr 0x12d014640 <col:45> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     | | `-RecoveryExpr 0x12d014698 <col:58, col:60> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d014678 <col:58> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     | `-CompoundStmt 0x12e0096d0 <col:64, line:20:2>     |   `-IfStmt 0x12e0096b0 <line:12:3, line:19:3>     |     |-CallExpr 0x12d014840 <line:12:7, col:39> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x12d0147c0 <col:7> 'int ()' Function 0x12d014708 'tcp_sack_extend' 'int ()'     |     | |-DeclRefExpr 0x12d0147e0 <col:23> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     |     | |-RecoveryExpr 0x12d014800 <col:27> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x12d014820 <col:32> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12e009688 <col:42, line:19:3>     |       |-ForStmt 0x12e009430 <line:14:4, line:15:24>     |       | |-<<<NULL>>>     |       | |-<<<NULL>>>     |       | |-BinaryOperator 0x12d0148d0 <line:14:11, col:23> 'int' '>'     |       | | |-ImplicitCastExpr 0x12d0148b8 <col:11> 'int' <LValueToRValue>     |       | | | `-DeclRefExpr 0x12d014878 <col:11> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     |       | | `-IntegerLiteral 0x12d014898 <col:23> 'int' 0     |       | |-BinaryOperator 0x12d014970 <col:26, col:41> '<dependent type>' contains-errors ','     |       | | |-UnaryOperator 0x12d014910 <col:26, col:35> 'int' postfix '--'     |       | | | `-DeclRefExpr 0x12d0148f0 <col:26> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     |       | | `-RecoveryExpr 0x12d014948 <col:39, col:41> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x12d014928 <col:39> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     |       | `-CallExpr 0x12e009400 <line:15:5, col:24> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x12e0092b8 <col:5> 'int ()' Function 0x12e009200 'swap' 'int ()'     |       |   |-UnaryOperator 0x12e009310 <col:10, col:11> 'struct tcp_sack_block' contains-errors lvalue prefix '*' cannot overflow     |       |   | `-ImplicitCastExpr 0x12e0092f8 <col:11> 'struct tcp_sack_block *' contains-errors <LValueToRValue>     |       |   |   `-DeclRefExpr 0x12e0092d8 <col:11> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     |       |   `-UnaryOperator 0x12e0093e8 <col:15, col:23> '<dependent type>' contains-errors prefix '*' cannot overflow     |       |     `-ImplicitCastExpr 0x12e0093d0 <col:16, col:23> '<dependent type>' contains-errors <LValueToRValue>     |       |       `-ParenExpr 0x12e0093b0 <col:16, col:23> '<dependent type>' contains-errors lvalue     |       |         `-RecoveryExpr 0x12e009380 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       |           |-DeclRefExpr 0x12e009328 <col:17> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     |       |           `-IntegerLiteral 0x12e009348 <col:22> 'int' 1     |       |-IfStmt 0x12e009658 <line:16:4, line:17:31>     |       | |-BinaryOperator 0x12e0094c0 <line:16:8, col:20> 'int' contains-errors '>'     |       | | |-ImplicitCastExpr 0x12e0094a8 <col:8> 'int' contains-errors <LValueToRValue>     |       | | | `-DeclRefExpr 0x12e009468 <col:8> 'int' contains-errors lvalue Var 0x12d0142b8 'cur_sacks' 'int'     |       | | `-IntegerLiteral 0x12e009488 <col:20> 'int' 1     |       | `-CallExpr 0x12e009618 <line:17:5, col:31> 'int'     |       |   |-ImplicitCastExpr 0x12e009600 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x12e0095c0 <col:5> 'int ()' Function 0x12e009508 'tcp_sack_maybe_coalesce' 'int ()'     |       |   `-ImplicitCastExpr 0x12e009640 <col:29> 'struct tcp_sock *' <LValueToRValue>     |       |     `-DeclRefExpr 0x12e0095e0 <col:29> 'struct tcp_sock *' lvalue Var 0x12d013cf8 'tp' 'struct tcp_sock *'     |       `-ReturnStmt 0x12e009678 <line:18:4>     |-IfStmt 0x12e009bb0 <line:23:2, line:29:2>     | |-BinaryOperator 0x12e009798 <line:23:6, col:19> 'int' contains-errors '>='     | | |-DeclRefExpr 0x12e009720 <col:6> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     | | `-RecoveryExpr 0x12e009778 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12e009b80 <col:34, line:29:2>     |   |-IfStmt 0x12e009a08 <line:24:3, line:25:19>     |   | |-BinaryOperator 0x12e009870 <line:24:7, col:28> 'int' contains-errors '>'     |   | | |-RecoveryExpr 0x12e0097f0 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x12e0097b8 <col:7> 'struct tcp_sock *' lvalue Var 0x12d013cf8 'tp' 'struct tcp_sock *'     |   | | `-RecoveryExpr 0x12e009850 <col:28> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x12e0099c8 <line:25:4, col:19> 'int'     |   |   |-ImplicitCastExpr 0x12e0099b0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12e009970 <col:4> 'int ()' Function 0x12e0098b8 'tcp_send_ack' 'int ()'     |   |   `-ImplicitCastExpr 0x12e0099f0 <col:17> 'struct sock *' <LValueToRValue>     |   |     `-DeclRefExpr 0x12e009990 <col:17> 'struct sock *' lvalue ParmVar 0x12d90fa48 'sk' 'struct sock *'     |   |-UnaryOperator 0x12e009a48 <line:26:3, col:12> 'int' postfix '--'     |   | `-DeclRefExpr 0x12e009a28 <col:3> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     |   |-UnaryOperator 0x12e009b08 <line:27:3, col:23> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x12e009ac0 <col:3, col:14> '<dependent type>' contains-errors lvalue .num_sacks     |   |   `-RecoveryExpr 0x12e009a98 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12e009a60 <col:3> 'struct tcp_sock *' lvalue Var 0x12d013cf8 'tp' 'struct tcp_sock *'     |   `-ImplicitCastExpr 0x12e009b68 <line:28:3, col:5> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12e009b40 <col:3, col:5> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12e009b20 <col:3> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     |-ForStmt 0x12e009e30 <line:30:2, line:31:17>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x12e009c28 <line:30:9, col:21> 'int' '>'     | | |-ImplicitCastExpr 0x12e009c10 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12e009bd0 <col:9> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     | | `-IntegerLiteral 0x12e009bf0 <col:21> 'int' 0     | |-BinaryOperator 0x12e009cc8 <col:24, col:39> '<dependent type>' contains-errors ','     | | |-UnaryOperator 0x12e009c68 <col:24, col:33> 'int' postfix '--'     | | | `-DeclRefExpr 0x12e009c48 <col:24> 'int' lvalue Var 0x12d0143f8 'this_sack' 'int'     | | `-RecoveryExpr 0x12e009ca0 <col:37, col:39> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12e009c80 <col:37> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     | `-BinaryOperator 0x12e009e10 <line:31:3, col:17> 'struct tcp_sack_block' contains-errors '='     |   |-UnaryOperator 0x12e009d20 <col:3, col:4> 'struct tcp_sack_block' contains-errors lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x12e009d08 <col:4> 'struct tcp_sack_block *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x12e009ce8 <col:4> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     |   `-UnaryOperator 0x12e009df8 <col:9, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x12e009de0 <col:10, col:17> '<dependent type>' contains-errors <LValueToRValue>     |       `-ParenExpr 0x12e009dc0 <col:10, col:17> '<dependent type>' contains-errors lvalue     |         `-RecoveryExpr 0x12e009d90 <col:11, col:16> '<dependent type>' contains-errors lvalue     |           |-DeclRefExpr 0x12e009d38 <col:11> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     |           `-IntegerLiteral 0x12e009d58 <col:16> 'int' 1     |-LabelStmt 0x12e009f08 <line:33:1, line:35:18> 'new_sack'     | `-BinaryOperator 0x12e009ee8 <col:2, col:18> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12e009ea0 <col:2, col:6> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12e009e68 <col:2> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     |   `-RecoveryExpr 0x12e009ec8 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e009fa8 <line:36:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12e009f60 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12e009f28 <col:2> 'struct tcp_sack_block *' contains-errors lvalue Var 0x12d014138 'sp' 'struct tcp_sack_block *'     | `-RecoveryExpr 0x12e009f88 <col:16> '<dependent type>' contains-errors lvalue     `-UnaryOperator 0x12e00a070 <line:37:2, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow       `-CXXDependentScopeMemberExpr 0x12e00a028 <col:2, col:13> '<dependent type>' contains-errors lvalue .num_sacks         `-RecoveryExpr 0x12e00a000 <col:2, col:6> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x12e009fc8 <col:2> 'struct tcp_sock *' lvalue Var 0x12d013cf8 'tp' 'struct tcp_sock *' ","19249":"`-FunctionDecl 0x159827608  line:1:1 invalid smb2_hdr_assemble 'int (struct smb2_sync_hdr *, int, const struct cifs_tcon *)'   |-ParmVarDecl 0x15980e248 <col:19, col:41> col:41 used shdr 'struct smb2_sync_hdr *'   |-ParmVarDecl 0x15980e2e0 <col:47, col:54> col:54 invalid smb2_cmd 'int'   |-ParmVarDecl 0x1598274c8 <line:2:5, col:29> col:29 used tcon 'const struct cifs_tcon *'   `-CompoundStmt 0x15982af20 <line:3:1, line:47:1>     |-BinaryOperator 0x159827780 <line:4:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x159827700 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1598276c8 <col:2> 'struct smb2_sync_hdr *' lvalue ParmVar 0x15980e248 'shdr' 'struct smb2_sync_hdr *'     | `-RecoveryExpr 0x159827760 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x159827a10 <line:5:2, col:38> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1598277d8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1598277a0 <col:2> 'struct smb2_sync_hdr *' lvalue ParmVar 0x15980e248 'shdr' 'struct smb2_sync_hdr *'     | `-CallExpr 0x1598279e8 <col:24, col:38> 'int'     |   |-ImplicitCastExpr 0x1598279d0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x159827960 <col:24> 'int ()' Function 0x1598278a8 'cpu_to_le16' 'int ()'     |   `-IntegerLiteral 0x159827980 <col:36> 'int' 64     |-BinaryOperator 0x159827ab0 <line:6:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x159827a68 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x159827a30 <col:2> 'struct smb2_sync_hdr *' lvalue ParmVar 0x15980e248 'shdr' 'struct smb2_sync_hdr *'     | `-RecoveryExpr 0x159827a90 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15982a220 <line:7:2, line:21:2> has_else     | |-BinaryOperator 0x159827c18 <line:7:6, col:38> 'int' contains-errors '&&'     | | |-BinaryOperator 0x159827b50 <col:6, col:20> 'int' contains-errors '&&'     | | | |-DeclRefExpr 0x159827ad0 <col:6> 'const struct cifs_tcon *' lvalue ParmVar 0x1598274c8 'tcon' 'const struct cifs_tcon *'     | | | `-RecoveryExpr 0x159827b28 <col:14, col:20> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x159827af0 <col:14> 'const struct cifs_tcon *' lvalue ParmVar 0x1598274c8 'tcon' 'const struct cifs_tcon *'     | | `-CXXDependentScopeMemberExpr 0x159827bd0 <col:27, col:38> '<dependent type>' contains-errors lvalue ->server     | |   `-RecoveryExpr 0x159827ba8 <col:27, col:33> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x159827b70 <col:27> 'const struct cifs_tcon *' lvalue ParmVar 0x1598274c8 'tcon' 'const struct cifs_tcon *'     | |-CompoundStmt 0x15982a0d8 <col:46, line:19:2>     | | |-DeclStmt 0x159827ed0 <line:8:3, col:53>     | | | |-RecordDecl 0x159827c38 <col:3, col:10> col:10 struct TCP_Server_Info     | | | `-VarDecl 0x159827da8 <col:3, col:47> col:27 used server 'struct TCP_Server_Info *' cinit     | | |   `-CXXDependentScopeMemberExpr 0x159827e70 <col:36, col:47> '<dependent type>' contains-errors lvalue ->server     | | |     `-RecoveryExpr 0x159827e48 <col:36, col:42> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x159827e10 <col:36> 'const struct cifs_tcon *' lvalue ParmVar 0x1598274c8 'tcon' 'const struct cifs_tcon *'     | | |-CallExpr 0x159828060 <line:10:3, col:30> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x159827fc8 <col:3> 'int ()' Function 0x159827f10 'spin_lock' 'int ()'     | | | `-UnaryOperator 0x159828048 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x159828020 <col:14, col:22> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x159827fe8 <col:14> 'struct TCP_Server_Info *' contains-errors lvalue Var 0x159827da8 'server' 'struct TCP_Server_Info *'     | | |-IfStmt 0x159829f08 <line:12:3, line:15:4> has_else     | | | |-BinaryOperator 0x159828148 <line:12:7, col:34> 'int' contains-errors '>='     | | | | |-RecoveryExpr 0x1598280c0 <col:7, col:15> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x159828088 <col:7> 'struct TCP_Server_Info *' contains-errors lvalue Var 0x159827da8 'server' 'struct TCP_Server_Info *'     | | | | `-RecoveryExpr 0x159828120 <col:26, col:34> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x1598280e8 <col:26> 'struct TCP_Server_Info *' contains-errors lvalue Var 0x159827da8 'server' 'struct TCP_Server_Info *'     | | | |-BinaryOperator 0x159828248 <line:13:4, col:39> '<dependent type>' contains-errors '='     | | | | |-RecoveryExpr 0x1598281a0 <col:4, col:10> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x159828168 <col:4> 'struct smb2_sync_hdr *' lvalue ParmVar 0x15980e248 'shdr' 'struct smb2_sync_hdr *'     | | | | `-CallExpr 0x159828220 <col:26, col:39> 'int'     | | | |   |-ImplicitCastExpr 0x159828208 <col:26> 'int (*)()' <FunctionToPointerDecay>     | | | |   | `-DeclRefExpr 0x1598281c8 <col:26> 'int ()' Function 0x1598278a8 'cpu_to_le16' 'int ()'     | | | |   `-IntegerLiteral 0x1598281e8 <col:38> 'int' 0     | | | `-NullStmt 0x159829f00 <line:15:4>     | | `-CallExpr 0x15982a0b0 <line:18:3, col:32> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15982a018 <col:3> 'int ()' Function 0x159829f60 'spin_unlock' 'int ()'     | |   `-UnaryOperator 0x15982a098 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x15982a070 <col:16, col:24> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15982a038 <col:16> 'struct TCP_Server_Info *' contains-errors lvalue Var 0x159827da8 'server' 'struct TCP_Server_Info *'     | `-CompoundStmt 0x15982a208 <line:19:9, line:21:2>     |   `-BinaryOperator 0x15982a1e8 <line:20:3, col:38> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x15982a140 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15982a108 <col:3> 'struct smb2_sync_hdr *' lvalue ParmVar 0x15980e248 'shdr' 'struct smb2_sync_hdr *'     |     `-CallExpr 0x15982a1c0 <col:25, col:38> 'int'     |       |-ImplicitCastExpr 0x15982a1a8 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15982a168 <col:25> 'int ()' Function 0x1598278a8 'cpu_to_le16' 'int ()'     |       `-IntegerLiteral 0x15982a188 <col:37> 'int' 2     |-IfStmt 0x15982a468 <line:24:2, line:25:8>     | |-UnaryOperator 0x15982a3e8 <line:24:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15982a3d0 <col:7> 'const struct cifs_tcon *' <LValueToRValue>     | |   `-DeclRefExpr 0x15982a3b0 <col:7> 'const struct cifs_tcon *' lvalue ParmVar 0x1598274c8 'tcon' 'const struct cifs_tcon *'     | `-GotoStmt 0x15982a450 <line:25:3, col:8> 'out' 0x15982a400     |-IfStmt 0x15982a800 <line:29:2, line:31:37>     | |-RecoveryExpr 0x15982a6e0 <line:29:6, line:30:66> '_Bool' contains-errors     | `-BinaryOperator 0x15982a7e0 <line:31:3, col:37> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x15982a738 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15982a700 <col:3> 'struct smb2_sync_hdr *' lvalue ParmVar 0x15980e248 'shdr' 'struct smb2_sync_hdr *'     |   `-CallExpr 0x15982a7b8 <col:24, col:37> 'int'     |     |-ImplicitCastExpr 0x15982a7a0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15982a760 <col:24> 'int ()' Function 0x1598278a8 'cpu_to_le16' 'int ()'     |     `-IntegerLiteral 0x15982a780 <col:36> 'int' 1     |-BinaryOperator 0x15982a8e0 <line:34:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15982a858 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15982a820 <col:2> 'struct smb2_sync_hdr *' lvalue ParmVar 0x15980e248 'shdr' 'struct smb2_sync_hdr *'     | `-RecoveryExpr 0x15982a8b8 <col:17, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15982a880 <col:17> 'const struct cifs_tcon *' lvalue ParmVar 0x1598274c8 'tcon' 'const struct cifs_tcon *'     |-IfStmt 0x15982aa88 <line:36:2, line:37:32>     | |-RecoveryExpr 0x15982a938 <line:36:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15982a900 <col:6> 'const struct cifs_tcon *' lvalue ParmVar 0x1598274c8 'tcon' 'const struct cifs_tcon *'     | `-BinaryOperator 0x15982aa68 <line:37:3, col:32> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x15982a998 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x15982a960 <col:3> 'struct smb2_sync_hdr *' lvalue ParmVar 0x15980e248 'shdr' 'struct smb2_sync_hdr *'     |   `-CXXDependentScopeMemberExpr 0x15982aa20 <col:21, col:32> '<dependent type>' contains-errors lvalue ->Suid     |     `-RecoveryExpr 0x15982a9f8 <col:21, col:27> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15982a9c0 <col:21> 'const struct cifs_tcon *' lvalue ParmVar 0x1598274c8 'tcon' 'const struct cifs_tcon *'     `-LabelStmt 0x15982af00 <line:45:1, line:46:2> 'out'       `-ReturnStmt 0x15982aef0 <col:2> ","20110":"`-FunctionDecl 0x14a026688  line:1:12 vrend_draw_bind_samplers_shader 'int (struct vrend_context *, int, int)' static   |-ParmVarDecl 0x14a00e248 <col:44, col:66> col:66 used ctx 'struct vrend_context *'   |-ParmVarDecl 0x14a00e2c8 <line:2:44, col:48> col:48 used shader_type 'int'   |-ParmVarDecl 0x14a00e348 <line:3:44, col:48> col:48 used next_sampler_id 'int'   `-CompoundStmt 0x14a02b698 <line:4:1, line:59:1>     |-DeclStmt 0x14a026830 <line:5:4, col:17>     | `-VarDecl 0x14a0267a8 <col:4, col:16> col:8 used index 'int' cinit     |   `-IntegerLiteral 0x14a026810 <col:16> 'int' 0     |-WhileStmt 0x14a02b518 <line:10:4, line:55:4>     | |-RecoveryExpr 0x14a026878 <line:10:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a02b4e0 <col:17, line:55:4>     |   |-DeclStmt 0x14a026b08 <line:11:7, col:32>     |   | `-VarDecl 0x14a0268b0 <col:7, col:31> col:11 used i 'int' cinit     |   |   `-CallExpr 0x14a026ae0 <col:15, col:31> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x14a026a30 <col:15> 'int ()' Function 0x14a026978 'u_bit_scan' 'int ()'     |   |     `-UnaryOperator 0x14a026ac8 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       `-RecoveryExpr 0x14a026aa8 <col:27> '<dependent type>' contains-errors lvalue     |   |-DeclStmt 0x14a026ed8 <line:13:7, col:79>     |   | |-RecordDecl 0x14a026b20 <col:7, col:14> col:14 struct vrend_sampler_view     |   | `-VarDecl 0x14a026c88 <col:7, col:78> col:34 used tview 'struct vrend_sampler_view *' cinit     |   |   `-ArraySubscriptExpr 0x14a026ea0 <col:42, col:78> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x14a026e70 <col:42, col:71> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-CXXDependentScopeMemberExpr 0x14a026e08 <col:42, col:71> '<dependent type>' contains-errors lvalue .views     |   |     |   `-ArraySubscriptExpr 0x14a026de8 <col:42, col:69> '<dependent type>' contains-errors lvalue     |   |     |     |-ImplicitCastExpr 0x14a026db8 <col:42, col:52> '<dependent type>' contains-errors <LValueToRValue>     |   |     |     | `-CXXDependentScopeMemberExpr 0x14a026d50 <col:42, col:52> '<dependent type>' contains-errors lvalue ->views     |   |     |     |   `-RecoveryExpr 0x14a026d28 <col:42, col:47> '<dependent type>' contains-errors lvalue     |   |     |     |     `-DeclRefExpr 0x14a026cf0 <col:42> 'struct vrend_context *' lvalue ParmVar 0x14a00e248 'ctx' 'struct vrend_context *'     |   |     |     `-ImplicitCastExpr 0x14a026dd0 <col:58> 'int' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x14a026d98 <col:58> 'int' lvalue ParmVar 0x14a00e2c8 'shader_type' 'int'     |   |     `-ImplicitCastExpr 0x14a026e88 <col:77> 'int' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x14a026e50 <col:77> 'int' contains-errors lvalue Var 0x14a0268b0 'i' 'int'     |   |-IfStmt 0x14a02b450 <line:14:7, line:52:7>     |   | |-BinaryOperator 0x14a027098 <line:14:11, col:31> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x14a027078 <col:11, col:26> '<dependent type>' contains-errors '&'     |   | | | |-RecoveryExpr 0x14a027000 <col:11> '<dependent type>' contains-errors lvalue     |   | | | `-ParenExpr 0x14a027058 <col:19, col:26> 'int' contains-errors     |   | | |   `-BinaryOperator 0x14a027038 <col:20, col:25> 'int' contains-errors '<<'     |   | | |     |-IntegerLiteral 0x14a026f08 <col:20> 'int' 1     |   | | |     `-ImplicitCastExpr 0x14a027020 <col:25> 'int' contains-errors <LValueToRValue>     |   | | |       `-DeclRefExpr 0x14a026f28 <col:25> 'int' contains-errors lvalue Var 0x14a0268b0 'i' 'int'     |   | | `-DeclRefExpr 0x14a026fc0 <col:31> 'struct vrend_sampler_view *' contains-errors lvalue Var 0x14a026c88 'tview' 'struct vrend_sampler_view *'     |   | `-CompoundStmt 0x14a02b430 <col:38, line:52:7>     |   |   |-IfStmt 0x14a029778 <line:15:10, line:26:10>     |   |   | |-BinaryOperator 0x14a0272b0 <line:15:14, col:69> '<dependent type>' contains-errors '&'     |   |   | | |-ArraySubscriptExpr 0x14a0271f8 <col:14, col:58> '<dependent type>' contains-errors lvalue     |   |   | | | |-ImplicitCastExpr 0x14a0271c8 <col:14, col:30> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | | | `-CXXDependentScopeMemberExpr 0x14a027160 <col:14, col:30> '<dependent type>' contains-errors lvalue ->shadow_samp_mask     |   |   | | | |   `-CXXDependentScopeMemberExpr 0x14a027118 <col:14, col:24> '<dependent type>' contains-errors lvalue ->prog     |   |   | | | |     `-RecoveryExpr 0x14a0270f0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |   | | | |       `-DeclRefExpr 0x14a0270b8 <col:14> 'struct vrend_context *' lvalue ParmVar 0x14a00e248 'ctx' 'struct vrend_context *'     |   |   | | | `-ImplicitCastExpr 0x14a0271e0 <col:47> 'int' <LValueToRValue>     |   |   | | |   `-DeclRefExpr 0x14a0271a8 <col:47> 'int' lvalue ParmVar 0x14a00e2c8 'shader_type' 'int'     |   |   | | `-ParenExpr 0x14a027290 <col:62, col:69> 'int' contains-errors     |   |   | |   `-BinaryOperator 0x14a027270 <col:63, col:68> 'int' contains-errors '<<'     |   |   | |     |-IntegerLiteral 0x14a027218 <col:63> 'int' 1     |   |   | |     `-ImplicitCastExpr 0x14a027258 <col:68> 'int' contains-errors <LValueToRValue>     |   |   | |       `-DeclRefExpr 0x14a027238 <col:68> 'int' contains-errors lvalue Var 0x14a0268b0 'i' 'int'     |   |   | `-CompoundStmt 0x14a029768 <col:72, line:26:10>     |   |   `-IfStmt 0x14a02b410 <line:28:10, line:51:10>     |   |     |-RecoveryExpr 0x14a0297d0 <line:28:14, col:21> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x14a029798 <col:14> 'struct vrend_sampler_view *' contains-errors lvalue Var 0x14a026c88 'tview' 'struct vrend_sampler_view *'     |   |     `-CompoundStmt 0x14a02b3e0 <col:30, line:51:10>     |   |       |-DeclStmt 0x14a029a48 <line:30:13, col:60>     |   |       | |-RecordDecl 0x14a0297f8 <col:13, col:20> col:20 struct vrend_resource     |   |       | `-VarDecl 0x14a029968 <col:13, col:53> col:36 used texture 'struct vrend_resource *' cinit     |   |       |   `-RecoveryExpr 0x14a029a08 <col:46, col:53> '<dependent type>' contains-errors lvalue     |   |       |     `-DeclRefExpr 0x14a0299d0 <col:46> 'struct vrend_sampler_view *' contains-errors lvalue Var 0x14a026c88 'tview' 'struct vrend_sampler_view *'     |   |       |-CallExpr 0x14a029c90 <line:33:13, col:51> '<dependent type>' contains-errors     |   |       | |-DeclRefExpr 0x14a029b40 <col:13> 'int ()' Function 0x14a029a88 'debug_texture' 'int ()'     |   |       | |-PredefinedExpr 0x14a029c18 <col:27> 'const char[32]' lvalue __func__     |   |       | | `-StringLiteral 0x14a029be0 <col:27> 'const char[32]' lvalue \"vrend_draw_bind_samplers_shader\"     |   |       | `-RecoveryExpr 0x14a029c68 <col:37, col:44> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x14a029c30 <col:37> 'struct vrend_sampler_view *' contains-errors lvalue Var 0x14a026c88 'tview' 'struct vrend_sampler_view *'     |   |       |-IfStmt 0x14a02a830 <line:35:13, line:39:16> has_else     |   |       | |-RecoveryExpr 0x14a029d20 <line:35:17, col:37> '_Bool' contains-errors     |   |       | |-CompoundStmt 0x14a029da0 <col:68, line:38:13>     |   |       | `-NullStmt 0x14a02a828 <line:39:16>     |   |       `-IfStmt 0x14a02b310 <line:44:13, line:49:13>     |   |         |-RecoveryExpr 0x14a02ae20 <line:44:17, line:45:69> '_Bool' contains-errors     |   |         `-CompoundStmt 0x14a02b2f8 <col:72, line:49:13>     |   |           `-CallExpr 0x14a02b048 <line:46:16, line:47:64> 'int' contains-errors     |   |             |-ImplicitCastExpr 0x14a02b030 <line:46:16> 'int (*)()' <FunctionToPointerDecay>     |   |             | `-DeclRefExpr 0x14a02af20 <col:16> 'int ()' Function 0x14a02ae68 'vrend_apply_sampler_state' 'int ()'     |   |             |-ImplicitCastExpr 0x14a02b098 <col:42> 'struct vrend_context *' <LValueToRValue>     |   |             | `-DeclRefExpr 0x14a02af40 <col:42> 'struct vrend_context *' lvalue ParmVar 0x14a00e248 'ctx' 'struct vrend_context *'     |   |             |-ImplicitCastExpr 0x14a02b0b0 <col:47> 'struct vrend_resource *' contains-errors <LValueToRValue>     |   |             | `-DeclRefExpr 0x14a02af60 <col:47> 'struct vrend_resource *' contains-errors lvalue Var 0x14a029968 'texture' 'struct vrend_resource *'     |   |             |-ImplicitCastExpr 0x14a02b0c8 <col:56> 'int' <LValueToRValue>     |   |             | `-DeclRefExpr 0x14a02af80 <col:56> 'int' lvalue ParmVar 0x14a00e2c8 'shader_type' 'int'     |   |             |-ImplicitCastExpr 0x14a02b0e0 <col:69> 'int' contains-errors <LValueToRValue>     |   |             | `-DeclRefExpr 0x14a02afa0 <col:69> 'int' contains-errors lvalue Var 0x14a0268b0 'i' 'int'     |   |             |-ImplicitCastExpr 0x14a02b0f8 <line:47:42> 'int' <LValueToRValue>     |   |             | `-DeclRefExpr 0x14a02afc0 <col:42> 'int' lvalue ParmVar 0x14a00e348 'next_sampler_id' 'int'     |   |             `-ImplicitCastExpr 0x14a02b110 <col:59> 'struct vrend_sampler_view *' contains-errors <LValueToRValue>     |   |               `-DeclRefExpr 0x14a02afe0 <col:59> 'struct vrend_sampler_view *' contains-errors lvalue Var 0x14a026c88 'tview' 'struct vrend_sampler_view *'     |   |-UnaryOperator 0x14a02b490 <line:53:7, col:22> 'int' postfix '++'     |   | `-DeclRefExpr 0x14a02b470 <col:7> 'int' lvalue ParmVar 0x14a00e348 'next_sampler_id' 'int'     |   `-UnaryOperator 0x14a02b4c8 <line:54:7, col:12> 'int' postfix '++'     |     `-DeclRefExpr 0x14a02b4a8 <col:7> 'int' lvalue Var 0x14a0267a8 'index' 'int'     `-ReturnStmt 0x14a02b688 <line:58:4, col:11>       `-ImplicitCastExpr 0x14a02b670 <col:11> 'int' <LValueToRValue>         `-DeclRefExpr 0x14a02b650 <col:11> 'int' lvalue ParmVar 0x14a00e348 'next_sampler_id' 'int' ","19202":"`-FunctionDecl 0x14c929038  line:1:1 invalid CheckSetDeviceIndicators 'int (char *, int, int, int *, int)'   |-ParmVarDecl 0x14c928cd8 <col:26, col:32> col:32 wire 'char *'   |-ParmVarDecl 0x14c928d70 <line:2:26, col:39> col:39 invalid dev 'int'   |-ParmVarDecl 0x14c928df0 <line:3:26, col:30> col:30 used num 'int'   |-ParmVarDecl 0x14c928ea8 <col:35, col:40> col:40 used status_rtrn 'int *'   |-ParmVarDecl 0x14c928f28 <col:53, col:63> col:63 invalid client 'int'   `-CompoundStmt 0x14d009538 <line:4:1, line:69:1>     |-DeclStmt 0x14c9291a0 <line:6:5, col:10>     | `-VarDecl 0x14c929138 <col:5, col:9> col:9 used i 'int'     `-ForStmt 0x14d009500 <line:10:5, line:67:5>       |-BinaryOperator 0x14c929210 <line:10:10, col:14> 'int' '='       | |-DeclRefExpr 0x14c9291d0 <col:10> 'int' lvalue Var 0x14c929138 'i' 'int'       | `-IntegerLiteral 0x14c9291f0 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x14c9292a0 <col:17, col:21> 'int' '<'       | |-ImplicitCastExpr 0x14c929270 <col:17> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x14c929230 <col:17> 'int' lvalue Var 0x14c929138 'i' 'int'       | `-ImplicitCastExpr 0x14c929288 <col:21> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x14c929250 <col:21> 'int' lvalue ParmVar 0x14c928df0 'num' 'int'       |-UnaryOperator 0x14c9292e0 <col:26, col:27> 'int' postfix '++'       | `-DeclRefExpr 0x14c9292c0 <col:26> 'int' lvalue Var 0x14c929138 'i' 'int'       `-CompoundStmt 0x14d0094e0 <col:31, line:67:5>         |-IfStmt 0x14c942d00 <line:11:9, line:17:9>         | |-CXXDependentScopeMemberExpr 0x14c929318 <line:11:13, col:21> '<dependent type>' contains-errors lvalue ->swapped         | | `-RecoveryExpr 0x14c9292f8 <col:13> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x14c942cc8 <col:30, line:17:9>         |   |-CallExpr 0x14c942620 <line:12:13, col:37> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x14c9424e0 <col:13> 'int ()' Function 0x14c942428 'swaps' 'int ()'         |   | `-UnaryOperator 0x14c942608 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x14c9425c0 <col:20, col:29> '<dependent type>' contains-errors lvalue ->ledClass         |   |     `-RecoveryExpr 0x14c9425a0 <col:20> '<dependent type>' contains-errors lvalue         |   |-CallExpr 0x14c942788 <line:13:13, col:34> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x14c942648 <col:13> 'int ()' Function 0x14c942428 'swaps' 'int ()'         |   | `-UnaryOperator 0x14c942770 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x14c942728 <col:20, col:29> '<dependent type>' contains-errors lvalue ->ledID         |   |     `-RecoveryExpr 0x14c942708 <col:20> '<dependent type>' contains-errors lvalue         |   |-CallExpr 0x14c9429d0 <line:14:13, col:41> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x14c942890 <col:13> 'int ()' Function 0x14c9427d8 'swapl' 'int ()'         |   | `-UnaryOperator 0x14c9429b8 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x14c942970 <col:20, col:29> '<dependent type>' contains-errors lvalue ->namesPresent         |   |     `-RecoveryExpr 0x14c942950 <col:20> '<dependent type>' contains-errors lvalue         |   |-CallExpr 0x14c942b38 <line:15:13, col:40> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x14c9429f8 <col:13> 'int ()' Function 0x14c9427d8 'swapl' 'int ()'         |   | `-UnaryOperator 0x14c942b20 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x14c942ad8 <col:20, col:29> '<dependent type>' contains-errors lvalue ->mapsPresent         |   |     `-RecoveryExpr 0x14c942ab8 <col:20> '<dependent type>' contains-errors lvalue         |   `-CallExpr 0x14c942ca0 <line:16:13, col:43> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x14c942b60 <col:13> 'int ()' Function 0x14c9427d8 'swapl' 'int ()'         |     `-UnaryOperator 0x14c942c88 <col:19, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         |       `-CXXDependentScopeMemberExpr 0x14c942c40 <col:20, col:29> '<dependent type>' contains-errors lvalue ->physIndicators         |         `-RecoveryExpr 0x14c942c20 <col:20> '<dependent type>' contains-errors lvalue         `-IfStmt 0x14d0094b0 <line:21:9, line:66:9> has_else           |-RecoveryExpr 0x14c942f58 <line:21:13, col:20> '_Bool' contains-errors           |-CompoundStmt 0x14d009460 <col:26, line:62:9>           | |-DeclStmt 0x14c942ff8 <line:22:13, col:27>           | | `-VarDecl 0x14c942f90 <col:13, col:26> col:26 used n 'int' register           | |-DeclStmt 0x14c943090 <line:23:13, col:34>           | | `-VarDecl 0x14c943028 <col:13, col:31> col:31 used bit 'unsigned int' register           | |-DeclStmt 0x14c9431c0 <line:24:13, col:30>           | | |-VarDecl 0x14c9430c0 <col:13, col:17> col:17 used nMaps 'int'           | | `-VarDecl 0x14c943140 <col:13, col:24> col:24 used nNames 'int'           | |-BinaryOperator 0x14c943258 <line:28:13, col:30> 'int' '='           | | |-DeclRefExpr 0x14c9431d8 <col:13> 'int' lvalue Var 0x14c9430c0 'nMaps' 'int'           | | `-BinaryOperator 0x14c943238 <col:21, col:30> 'int' '='           | |   |-DeclRefExpr 0x14c9431f8 <col:21> 'int' lvalue Var 0x14c943140 'nNames' 'int'           | |   `-IntegerLiteral 0x14c943218 <col:30> 'int' 0           | |-IfStmt 0x14d008e70 <line:36:13, line:45:13>           | | |-BinaryOperator 0x14d008a50 <line:36:17, col:26> 'int' '>'           | | | |-ImplicitCastExpr 0x14d008a38 <col:17> 'int' <LValueToRValue>           | | | | `-DeclRefExpr 0x14d0089f8 <col:17> 'int' lvalue Var 0x14c943140 'nNames' 'int'           | | | `-IntegerLiteral 0x14d008a18 <col:26> 'int' 0           | | `-CompoundStmt 0x14d008e58 <col:29, line:45:13>           | |   `-ForStmt 0x14d008e20 <line:37:17, line:44:17>           | |     |-BinaryOperator 0x14d008ab0 <line:37:22, col:26> 'int' '='           | |     | |-DeclRefExpr 0x14d008a70 <col:22> 'int' lvalue Var 0x14c942f90 'n' 'int'           | |     | `-IntegerLiteral 0x14d008a90 <col:26> 'int' 0           | |     |-<<<NULL>>>           | |     |-BinaryOperator 0x14d008b40 <col:29, col:33> 'int' '<'           | |     | |-ImplicitCastExpr 0x14d008b10 <col:29> 'int' <LValueToRValue>           | |     | | `-DeclRefExpr 0x14d008ad0 <col:29> 'int' lvalue Var 0x14c942f90 'n' 'int'           | |     | `-ImplicitCastExpr 0x14d008b28 <col:33> 'int' <LValueToRValue>           | |     |   `-DeclRefExpr 0x14d008af0 <col:33> 'int' lvalue Var 0x14c943140 'nNames' 'int'           | |     |-UnaryOperator 0x14d008b80 <col:41, col:42> 'int' postfix '++'           | |     | `-DeclRefExpr 0x14d008b60 <col:41> 'int' lvalue Var 0x14c942f90 'n' 'int'           | |     `-CompoundStmt 0x14d008e08 <col:46, line:44:17>           | |       `-IfStmt 0x14d008c30 <line:38:21, line:40:21>           | |         |-CXXDependentScopeMemberExpr 0x14d008bb8 <line:38:25, col:33> '<dependent type>' contains-errors lvalue ->swapped           | |         | `-RecoveryExpr 0x14d008b98 <col:25> '<dependent type>' contains-errors lvalue           | |         `-CompoundStmt 0x14d008c20 <col:42, line:40:21>           | `-IfStmt 0x14d009440 <line:47:13, line:60:13>           |   |-BinaryOperator 0x14d008ee8 <line:47:17, col:25> 'int' '>'           |   | |-ImplicitCastExpr 0x14d008ed0 <col:17> 'int' <LValueToRValue>           |   | | `-DeclRefExpr 0x14d008e90 <col:17> 'int' lvalue Var 0x14c9430c0 'nMaps' 'int'           |   | `-IntegerLiteral 0x14d008eb0 <col:25> 'int' 0           |   `-CompoundStmt 0x14d009428 <col:28, line:60:13>           |     `-ForStmt 0x14d0093f0 <line:48:17, line:59:17>           |       |-BinaryOperator 0x14d008f48 <line:48:22, col:26> 'int' '='           |       | |-DeclRefExpr 0x14d008f08 <col:22> 'int' lvalue Var 0x14c942f90 'n' 'int'           |       | `-IntegerLiteral 0x14d008f28 <col:26> 'int' 0           |       |-<<<NULL>>>           |       |-BinaryOperator 0x14d008fd8 <col:29, col:33> 'int' '<'           |       | |-ImplicitCastExpr 0x14d008fa8 <col:29> 'int' <LValueToRValue>           |       | | `-DeclRefExpr 0x14d008f68 <col:29> 'int' lvalue Var 0x14c942f90 'n' 'int'           |       | `-ImplicitCastExpr 0x14d008fc0 <col:33> 'int' <LValueToRValue>           |       |   `-DeclRefExpr 0x14d008f88 <col:33> 'int' lvalue Var 0x14c9430c0 'nMaps' 'int'           |       |-UnaryOperator 0x14d009018 <col:40, col:41> 'int' postfix '++'           |       | `-DeclRefExpr 0x14d008ff8 <col:40> 'int' lvalue Var 0x14c942f90 'n' 'int'           |       `-CompoundStmt 0x14d0093d8 <col:45, line:59:17>           |         `-IfStmt 0x14d0090e8 <line:49:21, line:52:21>           |           |-CXXDependentScopeMemberExpr 0x14d009050 <line:49:25, col:33> '<dependent type>' contains-errors lvalue ->swapped           |           | `-RecoveryExpr 0x14d009030 <col:25> '<dependent type>' contains-errors lvalue           |           `-CompoundStmt 0x14d0090d8 <col:42, line:52:21>           `-CompoundStmt 0x14d0094a0 <line:63:14, line:66:9> ","19689":"`-FunctionDecl 0x10482a3c8  col:6 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x10482a4c8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x10482a470 <<invalid sloc>> Implicit 873 ","19847":"`-FunctionDecl 0x12e928288  line:1:7 invalid problem_data_get_content_or_NULL 'char *(int *, const char *)'   |-ParmVarDecl 0x12e928128 <col:40, col:56> col:56 invalid problem_data 'int *'   |-ParmVarDecl 0x12e9281a8 <col:70, col:82> col:82 used key 'const char *'   `-CompoundStmt 0x12e941c98 <line:2:1, line:7:1>     |-DeclStmt 0x12e928718 <line:3:5, col:81>     | |-RecordDecl 0x12e928340 <col:5, col:12> col:12 struct problem_item     | `-VarDecl 0x12e9284a8 <col:5, col:80> col:26 used item 'struct problem_item *' cinit     |   `-CallExpr 0x12e9286d0 <col:33, col:80> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12e928670 <col:33> 'int ()' Function 0x12e9285b8 'problem_data_get_item_or_NULL' 'int ()'     |     |-RecoveryExpr 0x12e928690 <col:63> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12e9286b0 <col:77> 'const char *' lvalue ParmVar 0x12e9281a8 'key' 'const char *'     |-IfStmt 0x12e9287c8 <line:4:5, line:5:16>     | |-UnaryOperator 0x12e928768 <line:4:9, col:10> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12e928750 <col:10> 'struct problem_item *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12e928730 <col:10> 'struct problem_item *' contains-errors lvalue Var 0x12e9284a8 'item' 'struct problem_item *'     | `-ReturnStmt 0x12e9287b8 <line:5:9, col:16>     |   `-RecoveryExpr 0x12e928798 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e941c88 <line:6:5, col:18>       `-RecoveryExpr 0x12e941c60 <col:12, col:18> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x12e941800 <col:12> 'struct problem_item *' contains-errors lvalue Var 0x12e9284a8 'item' 'struct problem_item *' ","19430":"`-FunctionDecl 0x15a145a38  line:1:12 invalid hugetlb_vmtruncate 'int (struct inode *, int)' static   |-ParmVarDecl 0x15a128648 <col:31, col:45> col:45 used inode 'struct inode *'   |-ParmVarDecl 0x15a1286e0 <col:52, col:59> col:59 invalid offset 'int'   `-CompoundStmt 0x15a146f20 <line:2:1, line:17:1>     |-DeclStmt 0x15a145d38 <line:4:2, col:50>     | |-RecordDecl 0x15a145af0 <col:2, col:9> col:9 struct address_space     | `-VarDecl 0x15a145c58 <col:2, col:41> col:24 used mapping 'struct address_space *' cinit     |   `-RecoveryExpr 0x15a145cf8 <col:34, col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15a145cc0 <col:34> 'struct inode *' lvalue ParmVar 0x15a128648 'inode' 'struct inode *'     |-DeclStmt 0x15a146178 <line:5:2, col:40>     | |-RecordDecl 0x15a145d50 <col:2, col:9> col:9 struct hstate     | `-VarDecl 0x15a145eb8 <col:2, col:39> col:17 used h 'struct hstate *' cinit     |   `-ImplicitCastExpr 0x15a146148 <col:21, col:39> 'struct hstate *' <IntegralToPointer>     |     `-CallExpr 0x15a146108 <col:21, col:39> 'int'     |       |-ImplicitCastExpr 0x15a1460f0 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15a146080 <col:21> 'int ()' Function 0x15a145fc8 'hstate_inode' 'int ()'     |       `-ImplicitCastExpr 0x15a146130 <col:34> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x15a1460a0 <col:34> 'struct inode *' lvalue ParmVar 0x15a128648 'inode' 'struct inode *'     |-CallExpr 0x15a146460 <line:7:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a146270 <col:2> 'int ()' Function 0x15a1461b8 'BUG_ON' 'int ()'     | `-BinaryOperator 0x15a146440 <col:9, col:35> '<dependent type>' contains-errors '&'     |   |-RecoveryExpr 0x15a146290 <col:9> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x15a146428 <col:18, col:35> 'int' prefix '~' cannot overflow     |     `-CallExpr 0x15a1463e8 <col:19, col:35> 'int'     |       |-ImplicitCastExpr 0x15a1463d0 <col:19> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x15a146390 <col:19> 'int ()' Function 0x15a1462d8 'huge_page_mask' 'int ()'     |       `-ImplicitCastExpr 0x15a146410 <col:34> 'struct hstate *' <LValueToRValue>     |         `-DeclRefExpr 0x15a1463b0 <col:34> 'struct hstate *' lvalue Var 0x15a145eb8 'h' 'struct hstate *'     |-CallExpr 0x15a146620 <line:10:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a1465c0 <col:2> 'int ()' Function 0x15a146508 'i_size_write' 'int ()'     | |-DeclRefExpr 0x15a1465e0 <col:15> 'struct inode *' lvalue ParmVar 0x15a128648 'inode' 'struct inode *'     | `-RecoveryExpr 0x15a146600 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a146788 <line:11:2, col:27> 'int' contains-errors     | |-ImplicitCastExpr 0x15a146770 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15a146730 <col:2> 'int ()' Function 0x15a146678 'i_mmap_lock_write' 'int ()'     | `-ImplicitCastExpr 0x15a1467b0 <col:20> 'struct address_space *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x15a146750 <col:20> 'struct address_space *' contains-errors lvalue Var 0x15a145c58 'mapping' 'struct address_space *'     |-IfStmt 0x15a146be8 <line:12:2, line:13:50>     | |-UnaryOperator 0x15a146968 <line:12:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15a146940 <col:7, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15a1468a8 <col:7> 'int ()' Function 0x15a1467f0 'RB_EMPTY_ROOT' 'int ()'     | |   `-UnaryOperator 0x15a146928 <col:21, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x15a146900 <col:22, col:31> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15a1468c8 <col:22> 'struct address_space *' contains-errors lvalue Var 0x15a145c58 'mapping' 'struct address_space *'     | `-CallExpr 0x15a146bb8 <line:13:3, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a146ab8 <col:3> 'int ()' Function 0x15a146a00 'hugetlb_vmtruncate_list' 'int ()'     |   |-UnaryOperator 0x15a146b38 <col:27, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x15a146b10 <col:28, col:37> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15a146ad8 <col:28> 'struct address_space *' contains-errors lvalue Var 0x15a145c58 'mapping' 'struct address_space *'     |   `-RecoveryExpr 0x15a146b98 <col:45> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a146d40 <line:14:2, col:29> 'int' contains-errors     | |-ImplicitCastExpr 0x15a146d28 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15a146ce8 <col:2> 'int ()' Function 0x15a146c30 'i_mmap_unlock_write' 'int ()'     | `-ImplicitCastExpr 0x15a146d68 <col:22> 'struct address_space *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x15a146d08 <col:22> 'struct address_space *' contains-errors lvalue Var 0x15a145c58 'mapping' 'struct address_space *'     |-CallExpr 0x15a146ec0 <line:15:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a146e60 <col:2> 'int ()' Function 0x15a146da8 'truncate_hugepages' 'int ()'     | |-DeclRefExpr 0x15a146e80 <col:21> 'struct inode *' lvalue ParmVar 0x15a128648 'inode' 'struct inode *'     | `-RecoveryExpr 0x15a146ea0 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15a146f10 <line:16:2, col:9>       `-IntegerLiteral 0x15a146ef0 <col:9> 'int' 0 ","19815":"`-FunctionDecl 0x1600f1fa0  line:1:6 vnc_client_write 'void (void *)'   |-ParmVarDecl 0x1600f1ed8 <col:23, col:29> col:29 used opaque 'void *'   `-CompoundStmt 0x16010c7c0 <line:2:1, line:12:1>     |-CallExpr 0x1600f2280 <line:5:5, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1600f2200 <col:5> 'int ()' Function 0x1600f2148 'vnc_lock_output' 'int ()'     | `-RecoveryExpr 0x1600f2260 <col:21> '<dependent type>' contains-errors lvalue     |-IfStmt 0x16010c608 <line:6:5, line:10:5> has_else     | |-BinaryOperator 0x1600f2578 <line:6:9, col:44> 'int' contains-errors '||'     | | |-CXXDependentScopeMemberExpr 0x1600f2480 <col:9, col:20> '<dependent type>' contains-errors lvalue .offset     | | | `-CXXDependentScopeMemberExpr 0x1600f2438 <col:9, col:13> '<dependent type>' contains-errors lvalue ->output     | | |   `-RecoveryExpr 0x1600f2418 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1600f2530 <col:30, col:44> '<dependent type>' contains-errors lvalue .offset     | |   `-CXXDependentScopeMemberExpr 0x1600f24e8 <col:30, col:34> '<dependent type>' contains-errors lvalue ->ws_output     | |     `-RecoveryExpr 0x1600f24c8 <col:30> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x16010c188 <col:52, line:8:5>     | | `-CallExpr 0x16010c148 <line:7:9, col:39> 'int'     | |   |-ImplicitCastExpr 0x16010c130 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x16010c0b8 <col:9> 'int ()' Function 0x16010c000 'vnc_client_write_locked' 'int ()'     | |   `-ImplicitCastExpr 0x16010c170 <col:33> 'void *' <LValueToRValue>     | |     `-DeclRefExpr 0x16010c0d8 <col:33> 'void *' lvalue ParmVar 0x1600f1ed8 'opaque' 'void *'     | `-IfStmt 0x16010c5e8 <line:8:12, line:10:5>     |   |-BinaryOperator 0x16010c2c0 <line:8:16, col:30> 'int' contains-errors '!='     |   | |-CXXDependentScopeMemberExpr 0x16010c278 <col:16, col:20> '<dependent type>' contains-errors lvalue ->csock     |   | | `-RecoveryExpr 0x16010c258 <col:16> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x16010c220 <col:29, col:30> 'int' prefix '-'     |   |   `-IntegerLiteral 0x16010c200 <col:30> 'int' 1     |   `-CompoundStmt 0x16010c5d0 <col:33, line:10:5>     |     `-CallExpr 0x16010c590 <line:9:9, col:65> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x16010c3c0 <col:9> 'int ()' Function 0x16010c308 'qemu_set_fd_handler' 'int ()'     |       |-CXXDependentScopeMemberExpr 0x16010c4e8 <col:29, col:33> '<dependent type>' contains-errors lvalue ->csock     |       | `-RecoveryExpr 0x16010c4c8 <col:29> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x16010c530 <col:40> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x16010c550 <col:57> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x16010c570 <col:63> '<dependent type>' contains-errors lvalue     `-CallExpr 0x16010c798 <line:11:5, col:25> '<dependent type>' contains-errors       |-DeclRefExpr 0x16010c718 <col:5> 'int ()' Function 0x16010c660 'vnc_unlock_output' 'int ()'       `-RecoveryExpr 0x16010c778 <col:23> '<dependent type>' contains-errors lvalue ","19277":"`-FunctionDecl 0x1339281f8  line:1:6 invalid isEqualityOrInNull 'int (int *)'   |-ParmVarDecl 0x133928128 <col:25, col:42> col:42 invalid me 'int *'   `-CompoundStmt 0x133928708 <col:46, line:12:1>     |-IfStmt 0x133928448 <line:2:5, line:4:5>     | |-RecoveryExpr 0x1339282c0 <line:2:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133928438 <col:49, line:4:5>     `-IfStmt 0x1339286d0 <line:6:5, line:9:5>       |-BinaryOperator 0x133928548 <line:6:9, col:28> 'int' contains-errors '=='       | |-CallExpr 0x1339284d0 <col:9, col:23> '<dependent type>' contains-errors       | | `-CXXDependentScopeMemberExpr 0x133928488 <col:9, col:13> '<dependent type>' contains-errors lvalue ->matchType       | |   `-RecoveryExpr 0x133928468 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x133928528 <col:28> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1339286b0 <col:55, line:9:5>         |-DeclStmt 0x133928600 <line:7:9, col:80>         | `-VarDecl 0x133928580 <col:9, col:34> col:34 invalid in 'const int *'         `-ReturnStmt 0x1339286a0 <line:8:9, col:28>           `-CallExpr 0x133928680 <col:16, col:28> '<dependent type>' contains-errors             `-CXXDependentScopeMemberExpr 0x133928638 <col:16, col:20> '<dependent type>' contains-errors lvalue ->hasNull               `-RecoveryExpr 0x133928618 <col:16> '<dependent type>' contains-errors lvalue ","19308":"`-FunctionDecl 0x12f9281f8  line:1:7 invalid janet_array_pop 'int (int *)'   |-ParmVarDecl 0x12f928128 <col:23, col:35> col:35 invalid array 'int *'   `-CompoundStmt 0x12f928690 <col:42, line:7:1>     `-IfStmt 0x12f928660 <line:2:5, line:6:5> has_else       |-CXXDependentScopeMemberExpr 0x12f9282c8 <line:2:9, col:16> '<dependent type>' contains-errors lvalue ->count       | `-RecoveryExpr 0x12f9282a8 <col:9> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x12f928440 <col:23, line:4:5>       | `-ReturnStmt 0x12f928430 <line:3:9, col:42>       |   `-ArraySubscriptExpr 0x12f928410 <col:16, col:42> '<dependent type>' contains-errors lvalue       |     |-ImplicitCastExpr 0x12f9283f8 <col:16, col:23> '<dependent type>' contains-errors <LValueToRValue>       |     | `-CXXDependentScopeMemberExpr 0x12f928330 <col:16, col:23> '<dependent type>' contains-errors lvalue ->data       |     |   `-RecoveryExpr 0x12f928310 <col:16> '<dependent type>' contains-errors lvalue       |     `-UnaryOperator 0x12f9283e0 <col:28, col:37> '<dependent type>' contains-errors prefix '--' cannot overflow       |       `-CXXDependentScopeMemberExpr 0x12f928398 <col:30, col:37> '<dependent type>' contains-errors lvalue ->count       |         `-RecoveryExpr 0x12f928378 <col:30> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12f928648 <line:4:12, line:6:5>         `-ReturnStmt 0x12f928638 <line:5:9, col:31>           `-CallExpr 0x12f928618 <col:16, col:31> 'int'             `-ImplicitCastExpr 0x12f928600 <col:16> 'int (*)()' <FunctionToPointerDecay>               `-DeclRefExpr 0x12f9285b0 <col:16> 'int ()' Function 0x12f9284f8 'janet_wrap_nil' 'int ()' ","19697":"`-FunctionDecl 0x15000dfe8  line:1:1 invalid g_file_monitor_directory 'int (int *, int, int *, int **)'   |-ParmVarDecl 0x15000dd28 <col:27, col:47> col:47 invalid file 'int *'   |-ParmVarDecl 0x15000dda8 <line:2:27, col:47> col:47 invalid flags 'int'   |-ParmVarDecl 0x15000de28 <line:3:27, col:47> col:47 invalid cancellable 'int *'   |-ParmVarDecl 0x15000dee0 <line:4:27, col:47> col:47 invalid error 'int **'   `-CompoundStmt 0x150027f78 <line:5:1, line:25:1>     |-CallExpr 0x150027400 <line:8:3, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15000e220 <col:3> 'int ()' Function 0x15000e168 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x15000e360 <col:25, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15000e320 <col:25> 'int ()' Function 0x15000e268 'G_IS_FILE' 'int ()'     | | `-RecoveryExpr 0x15000e340 <col:36> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15000e3d0 <col:43> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1500275e0 <line:9:3, col:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150027430 <col:3> 'int ()' Function 0x15000e168 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x1500275a0 <col:25, col:34> '<dependent type>' contains-errors '&'     | | |-UnaryOperator 0x150027568 <col:25, col:26> '<dependent type>' contains-errors prefix '~' cannot overflow     | | | `-ImplicitCastExpr 0x150027550 <col:26> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x150027450 <col:26> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x150027580 <col:34> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1500275c0 <col:67> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1500277c8 <line:11:3, line:12:12>     | |-CallExpr 0x150027750 <line:11:7, col:63> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1500276f0 <col:7> 'int ()' Function 0x150027638 'g_cancellable_set_error_if_cancelled' 'int ()'     | | |-RecoveryExpr 0x150027710 <col:45> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x150027730 <col:58> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1500277b8 <line:12:5, col:12>     |   `-RecoveryExpr 0x150027798 <col:12> '<dependent type>' contains-errors lvalue     `-IfStmt 0x150027ed8 <line:16:3, line:22:5>       |-BinaryOperator 0x150027a50 <line:16:7, col:29> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x1500279e8 <col:7, col:14> '<dependent type>' contains-errors lvalue ->monitor_dir       | | `-RecoveryExpr 0x1500279c8 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x150027a30 <col:29> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x150027ec0 <line:17:5, line:22:5>         `-CallExpr 0x150027e80 <line:18:7, line:20:36> '<dependent type>' contains-errors           |-DeclRefExpr 0x150027b50 <line:18:7> 'int ()' Function 0x150027a98 'g_set_error_literal' 'int ()'           |-RecoveryExpr 0x150027b70 <col:28> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x150027de8 <col:35> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x150027e08 <line:19:28> '<dependent type>' contains-errors lvalue           `-CallExpr 0x150027e40 <line:20:28, col:35> 'int'             |-ImplicitCastExpr 0x150027e28 <col:28> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x150027ca0 <col:28> 'int ()' Function 0x150027be8 '_' 'int ()'             `-ImplicitCastExpr 0x150027e68 <col:30> 'char *' <ArrayToPointerDecay>               `-StringLiteral 0x150027d00 <col:30> 'char[4]' lvalue \"STR\" ","19500":"`-FunctionDecl 0x129928d78  line:1:1 invalid h2v1_merged_upsample_internal 'int (int, int, int, int)'   |-ParmVarDecl 0x129928af0 <col:31, col:48> col:48 invalid cinfo 'int'   |-ParmVarDecl 0x129928b70 <col:55, col:66> col:66 invalid input_buf 'int'   |-ParmVarDecl 0x129928bf0 <line:2:31, col:42> col:42 invalid in_row_group_ctr 'int'   |-ParmVarDecl 0x129928c70 <line:3:31, col:42> col:42 invalid output_buf 'int'   `-CompoundStmt 0x12a009a00 <line:4:1, line:64:1>     |-DeclStmt 0x129929068 <line:6:3, col:38>     | |-VarDecl 0x129928e58 <col:3, col:16> col:16 used y 'int' register     | |-VarDecl 0x129928ed8 <col:3, col:19> col:19 used cred 'int' register     | |-VarDecl 0x129928f58 <col:3, col:25> col:25 used cgreen 'int' register     | `-VarDecl 0x129928fd8 <col:3, col:33> col:33 used cblue 'int' register     |-DeclStmt 0x129929198 <line:7:3, col:13>     | |-VarDecl 0x129929098 <col:3, col:7> col:7 used cb 'int'     | `-VarDecl 0x129929118 <col:3, col:11> col:11 used cr 'int'     |-DeclStmt 0x129942268 <line:8:3, col:27>     | `-VarDecl 0x129942200 <col:3, col:21> col:21 referenced invalid outptr 'int' register     |-DeclStmt 0x129942398 <line:12:3, col:60>     | `-VarDecl 0x1299422c8 <col:3, col:21> col:21 invalid range_limit 'int *' register     |-DeclStmt 0x1299424f8 <line:13:3, col:35>     | `-VarDecl 0x1299423c8 <col:3, col:27> col:8 used Crrtab 'int *' cinit     |   `-CXXDependentScopeMemberExpr 0x1299424b0 <col:17, col:27> '<dependent type>' contains-errors lvalue ->Cr_r_tab     |     `-RecoveryExpr 0x129942490 <col:17> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x129942658 <line:14:3, col:35>     | `-VarDecl 0x129942528 <col:3, col:27> col:8 used Cbbtab 'int *' cinit     |   `-CXXDependentScopeMemberExpr 0x129942610 <col:17, col:27> '<dependent type>' contains-errors lvalue ->Cb_b_tab     |     `-RecoveryExpr 0x1299425f0 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x129942a30 <line:22:3, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x129942990 <col:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x129942970 <col:3> 'int' lvalue Var 0x129942200 'outptr' 'int'     | `-ArraySubscriptExpr 0x129942a10 <col:12, col:24> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x1299429f8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x1299429b8 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1299429d8 <col:23> 'int' 0     `-IfStmt 0x12a0099e0 <line:50:3, line:63:3>       |-BinaryOperator 0x12a009300 <line:50:7, col:29> '<dependent type>' contains-errors '&'       | |-CXXDependentScopeMemberExpr 0x12a009298 <col:7, col:14> '<dependent type>' contains-errors lvalue ->output_width       | | `-RecoveryExpr 0x12a009278 <col:7> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x12a0092e0 <col:29> 'int' 1       `-CompoundStmt 0x12a0099c0 <col:32, line:63:3>         |-BinaryOperator 0x12a009468 <line:53:5, col:21> 'int' contains-errors '='         | |-DeclRefExpr 0x12a0093a0 <col:5> 'int' lvalue Var 0x129928ed8 'cred' 'int'         | `-ImplicitCastExpr 0x12a009450 <col:12, col:21> 'int' contains-errors <LValueToRValue>         |   `-ArraySubscriptExpr 0x12a009430 <col:12, col:21> 'int' contains-errors lvalue         |     |-ImplicitCastExpr 0x12a009400 <col:12> 'int *' contains-errors <LValueToRValue>         |     | `-DeclRefExpr 0x12a0093c0 <col:12> 'int *' contains-errors lvalue Var 0x1299423c8 'Crrtab' 'int *'         |     `-ImplicitCastExpr 0x12a009418 <col:19> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x12a0093e0 <col:19> 'int' lvalue Var 0x129929118 'cr' 'int'         `-BinaryOperator 0x12a0095d0 <line:55:5, col:22> 'int' contains-errors '='           |-DeclRefExpr 0x12a009508 <col:5> 'int' lvalue Var 0x129928fd8 'cblue' 'int'           `-ImplicitCastExpr 0x12a0095b8 <col:13, col:22> 'int' contains-errors <LValueToRValue>             `-ArraySubscriptExpr 0x12a009598 <col:13, col:22> 'int' contains-errors lvalue               |-ImplicitCastExpr 0x12a009568 <col:13> 'int *' contains-errors <LValueToRValue>               | `-DeclRefExpr 0x12a009528 <col:13> 'int *' contains-errors lvalue Var 0x129942528 'Cbbtab' 'int *'               `-ImplicitCastExpr 0x12a009580 <col:20> 'int' <LValueToRValue>                 `-DeclRefExpr 0x12a009548 <col:20> 'int' lvalue Var 0x129929098 'cb' 'int' ","19804":"`-FunctionDecl 0x129940b48  line:1:5 snd_rawmidi_input_params 'int (struct snd_rawmidi_substream *, struct snd_rawmidi_params *)'   |-ParmVarDecl 0x129928648 <col:30, col:60> col:60 used substream 'struct snd_rawmidi_substream *'   |-ParmVarDecl 0x129940a28 <line:2:9, col:37> col:37 used params 'struct snd_rawmidi_params *'   `-CompoundStmt 0x12a008bd8 <line:3:1, line:24:1>     |-DeclStmt 0x129940cc8 <line:4:2, col:14>     | `-VarDecl 0x129940c60 <col:2, col:8> col:8 used newbuf 'char *'     |-DeclStmt 0x129940f28 <line:5:2, col:58>     | |-RecordDecl 0x129940ce0 <col:2, col:9> col:9 struct snd_rawmidi_runtime     | `-VarDecl 0x129940e48 <col:2, col:51> col:30 used runtime 'struct snd_rawmidi_runtime *' cinit     |   `-RecoveryExpr 0x129940ee8 <col:40, col:51> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129940eb0 <col:40> 'struct snd_rawmidi_substream *' lvalue ParmVar 0x129928648 'substream' 'struct snd_rawmidi_substream *'     |-CallExpr 0x1299410f8 <line:7:2, col:35> 'int'     | |-ImplicitCastExpr 0x1299410e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129941070 <col:2> 'int ()' Function 0x129940fb8 'snd_rawmidi_drain_input' 'int ()'     | `-ImplicitCastExpr 0x129941120 <col:26> 'struct snd_rawmidi_substream *' <LValueToRValue>     |   `-DeclRefExpr 0x129941090 <col:26> 'struct snd_rawmidi_substream *' lvalue ParmVar 0x129928648 'substream' 'struct snd_rawmidi_substream *'     |-IfStmt 0x129941398 <line:8:2, line:10:2>     | |-BinaryOperator 0x1299412b8 <line:8:6, col:64> 'int' contains-errors '||'     | | |-BinaryOperator 0x1299411b8 <col:6, col:28> 'int' contains-errors '<'     | | | |-RecoveryExpr 0x129941170 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x129941138 <col:6> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     | | | `-IntegerLiteral 0x129941198 <col:28> 'int' 32     | | `-BinaryOperator 0x129941298 <col:34, col:64> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x129941210 <col:34, col:42> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x1299411d8 <col:34> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     | |   `-BinaryOperator 0x129941278 <col:56, col:64> 'long' '*'     | |     |-IntegerLiteral 0x129941238 <col:56> 'long' 1024     | |     `-IntegerLiteral 0x129941258 <col:64> 'long' 1024     | `-CompoundStmt 0x129941380 <col:71, line:10:2>     |   `-ReturnStmt 0x129941370 <line:9:3, col:11>     |     `-UnaryOperator 0x129941358 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x129941340 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x129941320 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129941618 <line:11:2, line:13:2>     | |-BinaryOperator 0x129941538 <line:11:6, col:59> 'int' contains-errors '||'     | | |-BinaryOperator 0x129941438 <col:6, col:26> 'int' contains-errors '<'     | | | |-RecoveryExpr 0x1299413f0 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1299413b8 <col:6> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     | | | `-IntegerLiteral 0x129941418 <col:26> 'int' 1     | | `-BinaryOperator 0x129941518 <col:31, col:59> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x129941490 <col:31, col:39> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x129941458 <col:31> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     | |   `-RecoveryExpr 0x1299414f0 <col:51, col:59> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1299414b8 <col:51> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     | `-CompoundStmt 0x129941600 <col:72, line:13:2>     |   `-ReturnStmt 0x1299415f0 <line:12:3, col:11>     |     `-UnaryOperator 0x1299415d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1299415c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1299415a0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a008aa8 <line:14:2, line:21:2>     | |-BinaryOperator 0x1299416f8 <line:14:6, col:38> 'int' contains-errors '!='     | | |-RecoveryExpr 0x129941670 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x129941638 <col:6> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     | | `-RecoveryExpr 0x1299416d0 <col:29, col:38> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x129941698 <col:29> 'struct snd_rawmidi_runtime *' contains-errors lvalue Var 0x129940e48 'runtime' 'struct snd_rawmidi_runtime *'     | `-CompoundStmt 0x12a008a78 <col:51, line:21:2>     |   |-BinaryOperator 0x1299419c0 <line:15:3, line:16:17> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x129941718 <line:15:3> 'char *' lvalue Var 0x129940c60 'newbuf' 'char *'     |   | `-CallExpr 0x129941988 <col:12, line:16:17> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x129941818 <line:15:12> 'int ()' Function 0x129941760 'krealloc' 'int ()'     |   |   |-RecoveryExpr 0x129941870 <col:21, col:30> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x129941838 <col:21> 'struct snd_rawmidi_runtime *' contains-errors lvalue Var 0x129940e48 'runtime' 'struct snd_rawmidi_runtime *'     |   |   |-RecoveryExpr 0x1299418d0 <col:38, col:46> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x129941898 <col:38> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     |   |   `-RecoveryExpr 0x129941968 <line:16:7> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x12a0088d8 <line:17:3, line:18:12>     |   | |-UnaryOperator 0x12a008818 <line:17:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x12a008800 <col:8> 'char *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1299419e0 <col:8> 'char *' lvalue Var 0x129940c60 'newbuf' 'char *'     |   | `-ReturnStmt 0x12a0088c8 <line:18:4, col:12>     |   |   `-UnaryOperator 0x12a0088b0 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x12a008898 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x12a008878 <col:12> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x12a008978 <line:19:3, col:21> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12a008930 <col:3, col:12> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12a0088f8 <col:3> 'struct snd_rawmidi_runtime *' contains-errors lvalue Var 0x129940e48 'runtime' 'struct snd_rawmidi_runtime *'     |   | `-DeclRefExpr 0x12a008958 <col:21> 'char *' lvalue Var 0x129940c60 'newbuf' 'char *'     |   `-BinaryOperator 0x12a008a58 <line:20:3, col:34> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12a0089d0 <col:3, col:12> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12a008998 <col:3> 'struct snd_rawmidi_runtime *' contains-errors lvalue Var 0x129940e48 'runtime' 'struct snd_rawmidi_runtime *'     |     `-RecoveryExpr 0x12a008a30 <col:26, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12a0089f8 <col:26> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     |-BinaryOperator 0x12a008b88 <line:22:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12a008b00 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12a008ac8 <col:2> 'struct snd_rawmidi_runtime *' contains-errors lvalue Var 0x129940e48 'runtime' 'struct snd_rawmidi_runtime *'     | `-RecoveryExpr 0x12a008b60 <col:23, col:31> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12a008b28 <col:23> 'struct snd_rawmidi_params *' lvalue ParmVar 0x129940a28 'params' 'struct snd_rawmidi_params *'     `-ReturnStmt 0x12a008bc8 <line:23:2, col:9>       `-IntegerLiteral 0x12a008ba8 <col:9> 'int' 0 ","19789":"`-FunctionDecl 0x123145718  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x123145818 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1231457c0 <<invalid sloc>> Implicit 873 ","19895":"`-FunctionDecl 0x13800de38  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x13800dd58 <col:8> col:8 Security 'int'   |-ParmVarDecl 0x13800dcd8 <col:18> col:18 BuiltinAuthenticationAndAccessAndCryptoPlugin_PermissionsDisableDiscoveryDisableAccessNone_validation_ok_disable_discovery_enable_access_none 'int'   `-CompoundStmt 0x139008c90 <line:3:1, line:9:1>     |-RecoveryExpr 0x13800e268 <line:6:5> '<dependent type>' contains-errors lvalue     `-CallExpr 0x139008c58 <line:8:5, col:115> '<dependent type>' contains-errors       |-DeclRefExpr 0x13800e368 <col:5> 'int ()' Function 0x13800e2b0 'BuiltinAuthenticationAndAccessAndCryptoPlugin_Permissions_validation_ok_common' 'int ()'       |-DeclRefExpr 0x13800e388 <col:84> 'int ()' Function 0x13800dfc8 'reader' 'int ()'       |-DeclRefExpr 0x13800e3a8 <col:92> 'int ()' Function 0x13800e120 'writer' 'int ()'       `-RecoveryExpr 0x139008c38 <col:100> '<dependent type>' contains-errors lvalue ","19975":"`-FunctionDecl 0x15900df10  line:8:13 invalid dasher_check_chaining 'void (int *, char *, char *)' static   |-ParmVarDecl 0x15900dd28 <col:35, col:49> col:49 invalid ctx 'int *'   |-ParmVarDecl 0x15900dda8 <col:54, col:60> col:60 used scheme_id 'char *'   |-ParmVarDecl 0x15900de28 <col:71, col:77> col:77 used url 'char *'   `-CompoundStmt 0x1590280c8 <line:9:1, line:20:10>     |-IfStmt 0x15900e3c8 <line:11:2, col:18>     | |-BinaryOperator 0x15900e398 <col:6, col:13> 'int' contains-errors '&&'     | | |-UnaryOperator 0x15900e350 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x15900e338 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x15900e318 <col:7> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x15900e380 <col:12, col:13> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x15900e368 <col:13> 'char *' <LValueToRValue>     | |     `-DeclRefExpr 0x15900e2a8 <col:13> 'char *' lvalue ParmVar 0x15900de28 'url' 'char *'     | `-ReturnStmt 0x15900e3b8 <col:18>     |-IfStmt 0x159027c58 <line:12:2, line:16:2>     | |-UnaryOperator 0x159027838 <line:12:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159027820 <col:7> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x159027800 <col:7> 'char *' lvalue ParmVar 0x15900de28 'url' 'char *'     | `-CompoundStmt 0x159027c30 <col:12, line:16:2>     |   |-CallExpr 0x159027a68 <line:13:3, col:56> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x159027930 <col:3> 'int ()' Function 0x159027878 'gf_list_del_item' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x1590279b8 <col:20, col:30> '<dependent type>' contains-errors lvalue ->supplemental_properties     |   | | `-CXXDependentScopeMemberExpr 0x159027970 <col:20, col:25> '<dependent type>' contains-errors lvalue ->mpd     |   | |   `-RecoveryExpr 0x159027950 <col:20> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x159027a48 <col:55> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x159027bf8 <line:14:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x159027b78 <col:3> 'int ()' Function 0x159027ac0 'gf_mpd_descriptor_free' 'int ()'     |   | `-RecoveryExpr 0x159027bd8 <col:26> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x159027c20 <line:15:3>     `-IfStmt 0x1590280a8 <line:17:2, line:20:10>       |-RecoveryExpr 0x159027c90 <line:17:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x159028088 <col:9, line:20:10>         |-CallExpr 0x159027ea0 <line:18:3, col:19> '<dependent type>' contains-errors         | |-DeclRefExpr 0x159027d90 <col:3> 'int ()' Function 0x159027cd8 'gf_free' 'int ()'         | `-CXXDependentScopeMemberExpr 0x159027e58 <col:11, col:14> '<dependent type>' contains-errors lvalue ->value         |   `-RecoveryExpr 0x159027e38 <col:11> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x159028078 <line:20:3> ","19457":"`-FunctionDecl 0x14d141800  col:22 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x14d141900 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14d1418a8 <<invalid sloc>> Implicit 902 ","20187":"`-FunctionDecl 0x12d026600  line:1:13 sco_conn_del 'void (struct hci_conn *, int)' static   |-ParmVarDecl 0x12d00e248 <col:26, col:43> col:43 used hcon 'struct hci_conn *'   |-ParmVarDecl 0x12d00e2c8 <col:49, col:53> col:53 used err 'int'   `-CompoundStmt 0x12d029850 <line:2:1, line:30:1>     |-DeclStmt 0x12d026948 <line:3:2, col:40>     | |-RecordDecl 0x12d026700 <col:2, col:9> col:9 struct sco_conn     | `-VarDecl 0x12d026868 <col:2, col:32> col:19 used conn 'struct sco_conn *' cinit     |   `-RecoveryExpr 0x12d026908 <col:26, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d0268d0 <col:26> 'struct hci_conn *' lvalue ParmVar 0x12d00e248 'hcon' 'struct hci_conn *'     |-DeclStmt 0x12d026b48 <line:4:2, col:17>     | |-RecordDecl 0x12d026960 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x12d026ac8 <col:2, col:15> col:15 used sk 'struct sock *'     |-IfStmt 0x12d026bc0 <line:6:2, line:7:3>     | |-UnaryOperator 0x12d026b98 <line:6:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12d026b80 <col:7> 'struct sco_conn *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x12d026b60 <col:7> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'     | `-ReturnStmt 0x12d026bb0 <line:7:3>     |-CallExpr 0x12d026e38 <line:9:2, col:31> 'int' contains-errors     | |-ImplicitCastExpr 0x12d026e20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d026d10 <col:2> 'int ()' Function 0x12d026c58 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x12d026e78 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x12d026d70 <col:9> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x12d026e90 <col:16> 'struct hci_conn *' <LValueToRValue>     | | `-DeclRefExpr 0x12d026d90 <col:16> 'struct hci_conn *' lvalue ParmVar 0x12d00e248 'hcon' 'struct hci_conn *'     | |-ImplicitCastExpr 0x12d026ea8 <col:22> 'struct sco_conn *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x12d026db0 <col:22> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'     | `-ImplicitCastExpr 0x12d026ec0 <col:28> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x12d026dd0 <col:28> 'int' lvalue ParmVar 0x12d00e2c8 'err' 'int'     |-CallExpr 0x12d027010 <line:12:2, col:20> 'int' contains-errors     | |-ImplicitCastExpr 0x12d026ff8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d026fb8 <col:2> 'int ()' Function 0x12d026f00 'sco_conn_lock' 'int ()'     | `-ImplicitCastExpr 0x12d027038 <col:16> 'struct sco_conn *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12d026fd8 <col:16> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'     |-BinaryOperator 0x12d0270d0 <line:13:2, col:13> 'struct sock *' contains-errors '='     | |-DeclRefExpr 0x12d027050 <col:2> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'     | `-RecoveryExpr 0x12d0270a8 <col:7, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d027070 <col:7> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'     |-CallExpr 0x12d027228 <line:14:2, col:22> 'int' contains-errors     | |-ImplicitCastExpr 0x12d027210 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d0271d0 <col:2> 'int ()' Function 0x12d027118 'sco_conn_unlock' 'int ()'     | `-ImplicitCastExpr 0x12d027250 <col:18> 'struct sco_conn *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12d0271f0 <col:18> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'     |-IfStmt 0x12d0295e0 <line:16:2, line:26:2>     | |-ImplicitCastExpr 0x12d027288 <line:16:6> 'struct sock *' <LValueToRValue>     | | `-DeclRefExpr 0x12d027268 <col:6> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'     | `-CompoundStmt 0x12d029598 <col:10, line:26:2>     |   |-CallExpr 0x12d0273d8 <line:17:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x12d0273c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d027380 <col:3> 'int ()' Function 0x12d0272c8 'sock_hold' 'int ()'     |   | `-ImplicitCastExpr 0x12d027400 <col:13> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12d0273a0 <col:13> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'     |   |-CallExpr 0x12d027550 <line:18:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x12d027538 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d0274f8 <col:3> 'int ()' Function 0x12d027440 'lock_sock' 'int ()'     |   | `-ImplicitCastExpr 0x12d027578 <col:13> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12d027518 <col:13> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'     |   |-CallExpr 0x12d028f10 <line:19:3, col:26> 'int'     |   | |-ImplicitCastExpr 0x12d028ef8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d028eb8 <col:3> 'int ()' Function 0x12d028e00 'sco_sock_clear_timer' 'int ()'     |   | `-ImplicitCastExpr 0x12d028f38 <col:24> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12d028ed8 <col:24> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'     |   |-CallExpr 0x12d0290a8 <line:20:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x12d029090 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d029030 <col:3> 'int ()' Function 0x12d028f78 'sco_chan_del' 'int ()'     |   | |-ImplicitCastExpr 0x12d0290d8 <col:16> 'struct sock *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12d029050 <col:16> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'     |   | `-ImplicitCastExpr 0x12d0290f0 <col:20> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x12d029070 <col:20> 'int' lvalue ParmVar 0x12d00e2c8 'err' 'int'     |   |-CallExpr 0x12d029240 <line:21:3, col:18> 'int'     |   | |-ImplicitCastExpr 0x12d029228 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d0291e8 <col:3> 'int ()' Function 0x12d029130 'release_sock' 'int ()'     |   | `-ImplicitCastExpr 0x12d029268 <col:16> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12d029208 <col:16> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'     |   |-CallExpr 0x12d0293b8 <line:22:3, col:14> 'int'     |   | |-ImplicitCastExpr 0x12d0293a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12d029360 <col:3> 'int ()' Function 0x12d0292a8 'sock_put' 'int ()'     |   | `-ImplicitCastExpr 0x12d0293e0 <col:12> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12d029380 <col:12> 'struct sock *' lvalue Var 0x12d026ac8 'sk' 'struct sock *'     |   `-CallExpr 0x12d029570 <line:25:3, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12d0294d8 <col:3> 'int ()' Function 0x12d029420 'cancel_delayed_work_sync' 'int ()'     |     `-UnaryOperator 0x12d029558 <col:28, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x12d029530 <col:29, col:35> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x12d0294f8 <col:29> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *'     |-BinaryOperator 0x12d0296b8 <line:28:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d029638 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d029600 <col:2> 'struct hci_conn *' lvalue ParmVar 0x12d00e248 'hcon' 'struct hci_conn *'     | `-RecoveryExpr 0x12d029698 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12d029810 <line:29:2, col:12> 'int' contains-errors       |-ImplicitCastExpr 0x12d0297f8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12d0297b8 <col:2> 'int ()' Function 0x12d029700 'kfree' 'int ()'       `-ImplicitCastExpr 0x12d029838 <col:8> 'struct sco_conn *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x12d0297d8 <col:8> 'struct sco_conn *' contains-errors lvalue Var 0x12d026868 'conn' 'struct sco_conn *' ","20017":"`-FunctionDecl 0x131828220  col:3 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x131828320 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1318282c8 <<invalid sloc>> Implicit 869 ","19725":"`-FunctionDecl 0x140128288  line:1:24 invalid GetOutputShapeFromTensor 'int *(int *, int *)' inline   |-ParmVarDecl 0x140128128 <col:49, col:64> col:64 invalid context 'int *'   |-ParmVarDecl 0x1401281a8 <line:2:49, col:61> col:61 invalid node 'int *'   `-CompoundStmt 0x138009230 <col:67, line:11:1>     |-DeclStmt 0x1401285d0 <line:3:3, col:68>     | `-VarDecl 0x140128358 <col:3, col:23> col:23 invalid shape 'const int *'     |-ForStmt 0x1380091b0 <line:6:3, line:8:3>     | |-DeclStmt 0x138008ee8 <line:6:8, col:17>     | | `-VarDecl 0x138008e60 <col:8, col:16> col:12 used i 'int' cinit     | |   `-IntegerLiteral 0x138008ec8 <col:16> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x138009008 <col:19, col:37> 'int' contains-errors '<'     | | |-DeclRefExpr 0x138008f00 <col:19> 'int' lvalue Var 0x138008e60 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x138008fc0 <col:23, col:37> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x138008fa0 <col:23> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x138009048 <col:43, col:45> 'int' prefix '++'     | | `-DeclRefExpr 0x138009028 <col:45> 'int' lvalue Var 0x138008e60 'i' 'int'     | `-CompoundStmt 0x1380091a0 <col:48, line:8:3>     `-ReturnStmt 0x138009220 <line:10:3, col:10>       `-RecoveryExpr 0x138009200 <col:10> '<dependent type>' contains-errors lvalue ","20039":"`-FunctionDecl 0x14d128318  line:1:1 invalid vte_sequence_handler_multiple 'int (int *, int *, int)'   |-ParmVarDecl 0x14d128128 <col:31, col:44> col:44 invalid terminal 'int *'   |-ParmVarDecl 0x14d1281a8 <line:2:31, col:44> col:44 invalid params 'int *'   |-ParmVarDecl 0x14d128228 <line:3:31, col:58> col:58 invalid handler 'int'   `-CompoundStmt 0x14d128668 <line:4:1, line:6:1>     `-CallExpr 0x14d128628 <line:5:9, col:83> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d128530 <col:9> 'int ()' Function 0x14d128478 'vte_sequence_handler_multiple_limited' 'int ()'       |-RecoveryExpr 0x14d128550 <col:47> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x14d128570 <col:57> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x14d128590 <col:65> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14d128608 <col:74> '<dependent type>' contains-errors lvalue ","19560":"`-FunctionDecl 0x128128750  line:1:6 rsi_mac80211_detach 'void (struct rsi_hw *)'   |-ParmVarDecl 0x128128648 <col:26, col:41> col:41 used adapter 'struct rsi_hw *'   `-CompoundStmt 0x1281419b8 <line:2:1, line:23:1>     |-DeclStmt 0x128140c98 <line:3:2, col:39>     | |-RecordDecl 0x128140a48 <col:2, col:9> col:9 struct ieee80211_hw     | `-VarDecl 0x128140bb8 <col:2, col:37> col:23 used hw 'struct ieee80211_hw *' cinit     |   `-RecoveryExpr 0x128140c58 <col:28, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x128140c20 <col:28> 'struct rsi_hw *' lvalue ParmVar 0x128128648 'adapter' 'struct rsi_hw *'     |-DeclStmt 0x128140e48 <line:4:2, col:24>     | |-EnumDecl 0x128140cb0 <col:2, col:7> col:7 nl80211_band     | `-VarDecl 0x128140dc8 <col:2, col:20> col:20 invalid band 'enum nl80211_band'     |-IfStmt 0x1281413a0 <line:6:2, line:10:2>     | |-ImplicitCastExpr 0x128140e80 <line:6:6> 'struct ieee80211_hw *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x128140e60 <col:6> 'struct ieee80211_hw *' contains-errors lvalue Var 0x128140bb8 'hw' 'struct ieee80211_hw *'     | `-CompoundStmt 0x128141378 <col:10, line:10:2>     |   |-CallExpr 0x128141048 <line:7:3, col:27> 'int' contains-errors     |   | |-ImplicitCastExpr 0x128141030 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x128140fc0 <col:3> 'int ()' Function 0x128140f08 'ieee80211_stop_queues' 'int ()'     |   | `-ImplicitCastExpr 0x128141070 <col:25> 'struct ieee80211_hw *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x128140fe0 <col:25> 'struct ieee80211_hw *' contains-errors lvalue Var 0x128140bb8 'hw' 'struct ieee80211_hw *'     |   |-CallExpr 0x1281411c0 <line:8:3, col:29> 'int' contains-errors     |   | |-ImplicitCastExpr 0x1281411a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x128141168 <col:3> 'int ()' Function 0x1281410b0 'ieee80211_unregister_hw' 'int ()'     |   | `-ImplicitCastExpr 0x1281411e8 <col:27> 'struct ieee80211_hw *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x128141188 <col:27> 'struct ieee80211_hw *' contains-errors lvalue Var 0x128140bb8 'hw' 'struct ieee80211_hw *'     |   `-CallExpr 0x128141338 <line:9:3, col:23> 'int' contains-errors     |     |-ImplicitCastExpr 0x128141320 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1281412e0 <col:3> 'int ()' Function 0x128141228 'ieee80211_free_hw' 'int ()'     |     `-ImplicitCastExpr 0x128141360 <col:21> 'struct ieee80211_hw *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x128141300 <col:21> 'struct ieee80211_hw *' contains-errors lvalue Var 0x128140bb8 'hw' 'struct ieee80211_hw *'     `-ForStmt 0x128141980 <line:12:2, line:17:2>       |-BinaryOperator 0x128141400 <line:12:7, col:14> '<dependent type>' contains-errors '='       | |-RecoveryExpr 0x1281413c0 <col:7> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x1281413e0 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x128141498 <col:17, col:24> 'int' contains-errors '<'       | |-RecoveryExpr 0x128141420 <col:17> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x128141478 <col:24> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x1281414d8 <col:43, col:47> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x1281414b8 <col:43> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x128141960 <col:51, line:17:2>         |-DeclStmt 0x1281417c0 <line:13:3, line:14:28>         | |-RecordDecl 0x1281414f0 <line:13:3, col:10> col:10 struct ieee80211_supported_band         | `-VarDecl 0x128141658 <col:3, line:14:27> line:13:36 used sband 'struct ieee80211_supported_band *' cinit         |   `-UnaryOperator 0x128141790 <line:14:6, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         |     `-ArraySubscriptExpr 0x128141770 <col:7, col:27> '<dependent type>' contains-errors lvalue         |       |-ImplicitCastExpr 0x128141740 <col:7, col:16> '<dependent type>' contains-errors <LValueToRValue>         |       | `-RecoveryExpr 0x1281416f8 <col:7, col:16> '<dependent type>' contains-errors lvalue         |       |   `-DeclRefExpr 0x1281416c0 <col:7> 'struct rsi_hw *' lvalue ParmVar 0x128128648 'adapter' 'struct rsi_hw *'         |       `-ImplicitCastExpr 0x128141758 <col:23> '<dependent type>' contains-errors <LValueToRValue>         |         `-RecoveryExpr 0x128141720 <col:23> '<dependent type>' contains-errors lvalue         `-CallExpr 0x128141938 <line:16:3, col:24> '<dependent type>' contains-errors           |-DeclRefExpr 0x1281418b8 <col:3> 'int ()' Function 0x128141800 'kfree' 'int ()'           `-RecoveryExpr 0x128141910 <col:9, col:16> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x1281418d8 <col:9> 'struct ieee80211_supported_band *' contains-errors lvalue Var 0x128141658 'sband' 'struct ieee80211_supported_band *' ","19392":"`-FunctionDecl 0x1461226d8  line:1:5 invalid nft_parse_register_load 'int (const struct nlattr *, int *, int)'   |-ParmVarDecl 0x14680e248 <col:29, col:50> col:50 used attr 'const struct nlattr *'   |-ParmVarDecl 0x14680e318 <col:56, col:60> col:60 referenced invalid sreg 'int *'   |-ParmVarDecl 0x14680e398 <col:66, col:70> col:70 invalid len 'int'   `-CompoundStmt 0x146122f48 <line:2:1, line:13:1>     |-DeclStmt 0x146122818 <line:4:2, col:9>     | `-VarDecl 0x1461227b0 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x146122a98 <line:6:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x146122850 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x146122830 <col:2> 'int *' lvalue ParmVar 0x14680e318 'sreg' 'int *'     | `-CallExpr 0x146122a58 <col:8, col:31> 'int'     |   |-ImplicitCastExpr 0x146122a40 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1461229d0 <col:8> 'int ()' Function 0x146122918 'nft_parse_register' 'int ()'     |   `-ImplicitCastExpr 0x146122a80 <col:27> 'const struct nlattr *' <LValueToRValue>     |     `-DeclRefExpr 0x1461229f0 <col:27> 'const struct nlattr *' lvalue ParmVar 0x14680e248 'attr' 'const struct nlattr *'     |-BinaryOperator 0x146122cd0 <line:7:2, col:43> 'int' contains-errors '='     | |-DeclRefExpr 0x146122ab8 <col:2> 'int' lvalue Var 0x1461227b0 'err' 'int'     | `-CallExpr 0x146122ca0 <col:8, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146122bb8 <col:8> 'int ()' Function 0x146122b00 'nft_validate_register_load' 'int ()'     |   |-RecoveryExpr 0x146122c80 <col:35> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146122bf0 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146122db0 <line:8:2, line:9:10>     | |-BinaryOperator 0x146122d48 <line:8:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x146122d30 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146122cf0 <col:6> 'int' lvalue Var 0x1461227b0 'err' 'int'     | | `-IntegerLiteral 0x146122d10 <col:12> 'int' 0     | `-ReturnStmt 0x146122da0 <line:9:3, col:10>     |   `-ImplicitCastExpr 0x146122d88 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x146122d68 <col:10> 'int' lvalue Var 0x1461227b0 'err' 'int'     |-BinaryOperator 0x146122ef8 <line:11:2, col:10> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x146122ec0 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x146122ea8 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x146122dd0 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x146122ed8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x146122f38 <line:12:2, col:9>       `-IntegerLiteral 0x146122f18 <col:9> 'int' 0 ","19470":"`-FunctionDecl 0x15a80deb0  line:1:13 invalid read_binary_datetime 'void (int *, char **)' static   |-ParmVarDecl 0x15a80dd28 <col:34, col:46> col:46 referenced invalid tm 'int *'   |-ParmVarDecl 0x15a80ddd8 <col:50, col:58> col:58 used pos 'char **'   `-CompoundStmt 0x15a8297f0 <line:2:1, line:29:1>     |-DeclStmt 0x15a80e208 <line:3:3, col:37>     | `-VarDecl 0x15a80df80 <col:3, col:36> col:8 used length 'int' cinit     |   `-CallExpr 0x15a80e1c8 <col:16, col:36> 'int'     |     |-ImplicitCastExpr 0x15a80e1b0 <col:16> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15a80e140 <col:16> 'int ()' Function 0x15a80e088 'net_field_length' 'int ()'     |     `-ImplicitCastExpr 0x15a80e1f0 <col:33> 'char **' <LValueToRValue>     |       `-DeclRefExpr 0x15a80e160 <col:33> 'char **' lvalue ParmVar 0x15a80ddd8 'pos' 'char **'     `-IfStmt 0x15a8297c0 <line:5:3, line:28:5> has_else       |-ImplicitCastExpr 0x15a80e240 <line:5:7> 'int' <LValueToRValue>       | `-DeclRefExpr 0x15a80e220 <col:7> 'int' lvalue Var 0x15a80df80 'length' 'int'       |-CompoundStmt 0x15a829638 <line:6:3, line:26:3>       | |-DeclStmt 0x15a80e340 <line:7:5, col:20>       | | `-VarDecl 0x15a80e270 <col:5, col:17> col:12 used to 'char *' cinit       | |   `-ImplicitCastExpr 0x15a80e328 <col:16, col:17> 'char *' <LValueToRValue>       | |     `-UnaryOperator 0x15a80e310 <col:16, col:17> 'char *' lvalue prefix '*' cannot overflow       | |       `-ImplicitCastExpr 0x15a80e2f8 <col:17> 'char **' <LValueToRValue>       | |         `-DeclRefExpr 0x15a80e2d8 <col:17> 'char **' lvalue ParmVar 0x15a80ddd8 'pos' 'char **'       | |-BinaryOperator 0x15a827420 <line:9:5, col:17> '<dependent type>' contains-errors '='       | | |-CXXDependentScopeMemberExpr 0x15a80e3a0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->neg       | | | `-RecoveryExpr 0x15a80e378 <col:5> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x15a80e358 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'       | | `-IntegerLiteral 0x15a827400 <col:17> 'int' 0       | |-ImplicitCastExpr 0x15a8279a0 <line:10:5, col:22> '<dependent type>' contains-errors <LValueToRValue>       | | `-RecoveryExpr 0x15a827970 <col:5, col:22> '<dependent type>' contains-errors lvalue       | |   |-CXXDependentScopeMemberExpr 0x15a827488 <col:5, col:9> '<dependent type>' contains-errors lvalue ->year       | |   | `-RecoveryExpr 0x15a827460 <col:5> '<dependent type>' contains-errors lvalue       | |   |   `-DeclRefExpr 0x15a827440 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'       | |   `-ParenExpr 0x15a827528 <col:17, col:22> '<overloaded function type>' lvalue       | |     `-UnresolvedLookupExpr 0x15a8274e8 <col:18> '<overloaded function type>' lvalue (no ADL) = 'uint' empty       | |-CallExpr 0x15a827af0 <col:24, col:36> 'int'       | | |-ImplicitCastExpr 0x15a827ad8 <col:24> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x15a827a98 <col:24> 'int ()' Function 0x15a8279e0 'sint2korr' 'int ()'       | | `-ImplicitCastExpr 0x15a827b18 <col:34> 'char *' <LValueToRValue>       | |   `-DeclRefExpr 0x15a827ab8 <col:34> 'char *' lvalue Var 0x15a80e270 'to' 'char *'       | |-ImplicitCastExpr 0x15a827c68 <line:11:5, col:22> '<dependent type>' contains-errors <LValueToRValue>       | | `-RecoveryExpr 0x15a827c38 <col:5, col:22> '<dependent type>' contains-errors lvalue       | |   |-CXXDependentScopeMemberExpr 0x15a827b78 <col:5, col:9> '<dependent type>' contains-errors lvalue ->month       | |   | `-RecoveryExpr 0x15a827b50 <col:5> '<dependent type>' contains-errors lvalue       | |   |   `-DeclRefExpr 0x15a827b30 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'       | |   `-ParenExpr 0x15a827c18 <col:17, col:22> '<overloaded function type>' lvalue       | |     `-UnresolvedLookupExpr 0x15a827bd8 <col:18> '<overloaded function type>' lvalue (no ADL) = 'uint' empty       | |-ImplicitCastExpr 0x15a827cf8 <col:24, col:28> 'char' <LValueToRValue>       | | `-ArraySubscriptExpr 0x15a827cd8 <col:24, col:28> 'char' lvalue       | |   |-ImplicitCastExpr 0x15a827cc0 <col:24> 'char *' <LValueToRValue>       | |   | `-DeclRefExpr 0x15a827c80 <col:24> 'char *' lvalue Var 0x15a80e270 'to' 'char *'       | |   `-IntegerLiteral 0x15a827ca0 <col:27> 'int' 2       | |-ImplicitCastExpr 0x15a827e48 <line:12:5, col:22> '<dependent type>' contains-errors <LValueToRValue>       | | `-RecoveryExpr 0x15a827e18 <col:5, col:22> '<dependent type>' contains-errors lvalue       | |   |-CXXDependentScopeMemberExpr 0x15a827d58 <col:5, col:9> '<dependent type>' contains-errors lvalue ->day       | |   | `-RecoveryExpr 0x15a827d30 <col:5> '<dependent type>' contains-errors lvalue       | |   |   `-DeclRefExpr 0x15a827d10 <col:5> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'       | |   `-ParenExpr 0x15a827df8 <col:17, col:22> '<overloaded function type>' lvalue       | |     `-UnresolvedLookupExpr 0x15a827db8 <col:18> '<overloaded function type>' lvalue (no ADL) = 'uint' empty       | |-ImplicitCastExpr 0x15a827ed8 <col:24, col:28> 'char' <LValueToRValue>       | | `-ArraySubscriptExpr 0x15a827eb8 <col:24, col:28> 'char' lvalue       | |   |-ImplicitCastExpr 0x15a827ea0 <col:24> 'char *' <LValueToRValue>       | |   | `-DeclRefExpr 0x15a827e60 <col:24> 'char *' lvalue Var 0x15a80e270 'to' 'char *'       | |   `-IntegerLiteral 0x15a827e80 <col:27> 'int' 3       | |-IfStmt 0x15a8291e0 <line:14:5, line:21:41> has_else       | | |-BinaryOperator 0x15a827f48 <line:14:9, col:18> 'int' '>'       | | | |-ImplicitCastExpr 0x15a827f30 <col:9> 'int' <LValueToRValue>       | | | | `-DeclRefExpr 0x15a827ef0 <col:9> 'int' lvalue Var 0x15a80df80 'length' 'int'       | | | `-IntegerLiteral 0x15a827f10 <col:18> 'int' 4       | | |-CompoundStmt 0x15a8283b8 <line:15:5, line:19:5>       | | | |-ImplicitCastExpr 0x15a8280a0 <line:16:7, col:24> '<dependent type>' contains-errors <LValueToRValue>       | | | | `-RecoveryExpr 0x15a828070 <col:7, col:24> '<dependent type>' contains-errors lvalue       | | | |   |-CXXDependentScopeMemberExpr 0x15a827fb0 <col:7, col:11> '<dependent type>' contains-errors lvalue ->hour       | | | |   | `-RecoveryExpr 0x15a827f88 <col:7> '<dependent type>' contains-errors lvalue       | | | |   |   `-DeclRefExpr 0x15a827f68 <col:7> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'       | | | |   `-ParenExpr 0x15a828050 <col:19, col:24> '<overloaded function type>' lvalue       | | | |     `-UnresolvedLookupExpr 0x15a828010 <col:20> '<overloaded function type>' lvalue (no ADL) = 'uint' empty       | | | |-ImplicitCastExpr 0x15a828130 <col:26, col:30> 'char' <LValueToRValue>       | | | | `-ArraySubscriptExpr 0x15a828110 <col:26, col:30> 'char' lvalue       | | | |   |-ImplicitCastExpr 0x15a8280f8 <col:26> 'char *' <LValueToRValue>       | | | |   | `-DeclRefExpr 0x15a8280b8 <col:26> 'char *' lvalue Var 0x15a80e270 'to' 'char *'       | | | |   `-IntegerLiteral 0x15a8280d8 <col:29> 'int' 4       | | | |-ImplicitCastExpr 0x15a828280 <line:17:7, col:24> '<dependent type>' contains-errors <LValueToRValue>       | | | | `-RecoveryExpr 0x15a828250 <col:7, col:24> '<dependent type>' contains-errors lvalue       | | | |   |-CXXDependentScopeMemberExpr 0x15a828190 <col:7, col:11> '<dependent type>' contains-errors lvalue ->minute       | | | |   | `-RecoveryExpr 0x15a828168 <col:7> '<dependent type>' contains-errors lvalue       | | | |   |   `-DeclRefExpr 0x15a828148 <col:7> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'       | | | |   `-ParenExpr 0x15a828230 <col:19, col:24> '<overloaded function type>' lvalue       | | | |     `-UnresolvedLookupExpr 0x15a8281f0 <col:20> '<overloaded function type>' lvalue (no ADL) = 'uint' empty       | | | `-ImplicitCastExpr 0x15a828310 <col:26, col:30> 'char' <LValueToRValue>       | | |   `-ArraySubscriptExpr 0x15a8282f0 <col:26, col:30> 'char' lvalue       | | |     |-ImplicitCastExpr 0x15a8282d8 <col:26> 'char *' <LValueToRValue>       | | |     | `-DeclRefExpr 0x15a828298 <col:26> 'char *' lvalue Var 0x15a80e270 'to' 'char *'       | | |     `-IntegerLiteral 0x15a8282b8 <col:29> 'int' 5       | | `-BinaryOperator 0x15a8291c0 <line:21:7, col:41> '<dependent type>' contains-errors '='       | |   |-CXXDependentScopeMemberExpr 0x15a829048 <col:7, col:11> '<dependent type>' contains-errors lvalue ->hour       | |   | `-RecoveryExpr 0x15a829020 <col:7> '<dependent type>' contains-errors lvalue       | |   |   `-DeclRefExpr 0x15a829000 <col:7> 'int *' lvalue ParmVar 0x15a80dd28 'tm' 'int *'       | |   `-BinaryOperator 0x15a8291a0 <col:17, col:41> '<dependent type>' contains-errors '='       | |     |-CXXDependentScopeMemberExpr 0x15a8290b0 <col:17, col:21> '<dependent type>' contains-errors lvalue ->minute       | |     | `-RecoveryExpr 0x15a829090 <col:17> '<dependent type>' contains-errors lvalue       | |     `-BinaryOperator 0x15a829180 <col:29, col:41> '<dependent type>' contains-errors '='       | |       |-CXXDependentScopeMemberExpr 0x15a829118 <col:29, col:33> '<dependent type>' contains-errors lvalue ->second       | |       | `-RecoveryExpr 0x15a8290f8 <col:29> '<dependent type>' contains-errors lvalue       | |       `-IntegerLiteral 0x15a829160 <col:41> 'int' 0       | `-CompoundAssignOperator 0x15a829608 <line:25:5, col:12> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'       |   |-UnaryOperator 0x15a8295b8 <col:5, col:6> 'char *' lvalue prefix '*' cannot overflow       |   | `-ImplicitCastExpr 0x15a8295a0 <col:6> 'char **' <LValueToRValue>       |   |   `-DeclRefExpr 0x15a829580 <col:6> 'char **' lvalue ParmVar 0x15a80ddd8 'pos' 'char **'       |   `-ImplicitCastExpr 0x15a8295f0 <col:12> 'int' <LValueToRValue>       |     `-DeclRefExpr 0x15a8295d0 <col:12> 'int' lvalue Var 0x15a80df80 'length' 'int'       `-NullStmt 0x15a8297b8 <line:28:5> ","19385":"`-FunctionDecl 0x121944e78  line:1:12 ax25_create 'int (struct net *, struct socket *, int, int)' static   |-ParmVarDecl 0x121928648 <col:24, col:36> col:36 used net 'struct net *'   |-ParmVarDecl 0x121944c28 <col:41, col:56> col:56 used sock 'struct socket *'   |-ParmVarDecl 0x121944ca8 <col:62, col:66> col:66 used protocol 'int'   |-ParmVarDecl 0x121944d28 <line:2:10, col:14> col:14 used kern 'int'   `-CompoundStmt 0x121948190 <line:3:1, line:75:1>     |-DeclStmt 0x121945178 <line:4:2, col:17>     | |-RecordDecl 0x121944f88 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x1219450f8 <col:2, col:15> col:15 used sk 'struct sock *'     |-IfStmt 0x1219454b0 <line:7:2, line:8:11>     | |-UnaryOperator 0x1219453f0 <line:7:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1219453c0 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1219452d0 <col:7> 'int ()' Function 0x121945218 'net_eq' 'int ()'     | |   |-DeclRefExpr 0x1219452f0 <col:14> 'struct net *' lvalue ParmVar 0x121928648 'net' 'struct net *'     | |   `-UnaryOperator 0x1219453a8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x121945388 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1219454a0 <line:8:3, col:11>     |   `-UnaryOperator 0x121945488 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x121945470 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x121945450 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x121945548 <line:10:2, line:54:2>     | |-ImplicitCastExpr 0x121945530 <line:10:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x121945508 <col:10, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1219454d0 <col:10> 'struct socket *' lvalue ParmVar 0x121944c28 'sock' 'struct socket *'     | `-CompoundStmt 0x121945ba0 <col:22, line:54:2>     |   |-IfStmt 0x1219457e0 <line:12:3, line:13:15>     |   | |-BinaryOperator 0x121945728 <line:12:7, col:36> 'int' contains-errors '||'     |   | | |-BinaryOperator 0x1219456c8 <col:7, col:19> 'int' '=='     |   | | | |-ImplicitCastExpr 0x1219456b0 <col:7> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x121945588 <col:7> 'int' lvalue ParmVar 0x121944ca8 'protocol' 'int'     |   | | | `-IntegerLiteral 0x1219455a8 <col:19> 'int' 0     |   | | `-BinaryOperator 0x121945708 <col:24, col:36> 'int' contains-errors '=='     |   | |   |-DeclRefExpr 0x121945600 <col:24> 'int' lvalue ParmVar 0x121944ca8 'protocol' 'int'     |   | |   `-RecoveryExpr 0x1219456e8 <col:36> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x1219457c0 <line:13:4, col:15> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x121945748 <col:4> 'int' lvalue ParmVar 0x121944ca8 'protocol' 'int'     |   |   `-RecoveryExpr 0x1219457a0 <col:15> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x121945800 <line:14:3>     |   |-SwitchStmt 0x121945858 <line:17:3, line:47:3>     |   | |-ImplicitCastExpr 0x121945840 <line:17:11> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x121945820 <col:11> 'int' lvalue ParmVar 0x121944ca8 'protocol' 'int'     |   | `-CompoundStmt 0x121945a80 <col:21, line:47:3>     |   |   |-CaseStmt 0x1219458b8 <line:18:3, line:20:15>     |   |   | |-ConstantExpr 0x1219458a0 <line:18:8> 'int'     |   |   | | `-IntegerLiteral 0x121945880 <col:8> 'int' 0     |   |   | `-BinaryOperator 0x121945970 <line:20:4, col:15> 'int' contains-errors '='     |   |   |   |-DeclRefExpr 0x1219458f8 <col:4> 'int' lvalue ParmVar 0x121944ca8 'protocol' 'int'     |   |   |   `-RecoveryExpr 0x121945950 <col:15> '<dependent type>' contains-errors lvalue     |   |   |-BreakStmt 0x121945990 <line:21:4>     |   |   |-ReturnStmt 0x121945a48 <line:33:4, col:12>     |   |   | `-UnaryOperator 0x121945a30 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x121945a18 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x1219459f8 <col:12> '<dependent type>' contains-errors lvalue     |   |   `-DefaultStmt 0x121945a60 <line:45:3, line:46:4>     |   |     `-BreakStmt 0x121945a58 <col:4>     |   |-BreakStmt 0x121945ab0 <line:48:3>     |   |-BreakStmt 0x121945ad0 <line:51:3>     |   `-DefaultStmt 0x121945b80 <line:52:2, line:53:11>     |     `-ReturnStmt 0x121945b70 <col:3, col:11>     |       `-UnaryOperator 0x121945b58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x121945b40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x121945b20 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1219478c8 <line:56:2, col:59> 'struct sock *' contains-errors '='     | |-DeclRefExpr 0x121945be0 <col:2> 'struct sock *' lvalue Var 0x1219450f8 'sk' 'struct sock *'     | `-CallExpr 0x121947880 <col:7, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1219476e0 <col:7> 'int ()' Function 0x121947628 'sk_alloc' 'int ()'     |   |-DeclRefExpr 0x121947700 <col:16> 'struct net *' lvalue ParmVar 0x121928648 'net' 'struct net *'     |   |-RecoveryExpr 0x121947808 <col:21> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x121947828 <col:30> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x121947868 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x121947848 <col:43> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x121947780 <col:55> 'int' lvalue ParmVar 0x121944d28 'kern' 'int'     |-IfStmt 0x121947e08 <line:61:2, line:64:2>     | |-RecoveryExpr 0x121947c58 <line:61:6, col:7> '_Bool' contains-errors     | `-CompoundStmt 0x121947df0 <col:13, line:64:2>     |   `-CallExpr 0x121947db0 <line:62:3, col:13> 'int'     |     |-ImplicitCastExpr 0x121947d98 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x121947d58 <col:3> 'int ()' Function 0x121947ca0 'sk_free' 'int ()'     |     `-ImplicitCastExpr 0x121947dd8 <col:11> 'struct sock *' <LValueToRValue>     |       `-DeclRefExpr 0x121947d78 <col:11> 'struct sock *' lvalue Var 0x1219450f8 'sk' 'struct sock *'     |-CallExpr 0x121947f80 <line:66:2, col:25> 'int'     | |-ImplicitCastExpr 0x121947f68 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x121947f08 <col:2> 'int ()' Function 0x121947e50 'sock_init_data' 'int ()'     | |-ImplicitCastExpr 0x121947fb0 <col:17> 'struct socket *' <LValueToRValue>     | | `-DeclRefExpr 0x121947f28 <col:17> 'struct socket *' lvalue ParmVar 0x121944c28 'sock' 'struct socket *'     | `-ImplicitCastExpr 0x121947fc8 <col:23> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x121947f48 <col:23> 'struct sock *' lvalue Var 0x1219450f8 'sk' 'struct sock *'     |-BinaryOperator 0x121948120 <line:70:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1219480d8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1219480a0 <col:2> 'struct sock *' lvalue Var 0x1219450f8 'sk' 'struct sock *'     | `-DeclRefExpr 0x121948100 <col:20> 'int' lvalue ParmVar 0x121944ca8 'protocol' 'int'     `-ReturnStmt 0x121948180 <line:74:2, col:9>       `-IntegerLiteral 0x121948160 <col:9> 'int' 0 ","20105":"`-FunctionDecl 0x13f141830  col:17 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x13f141930 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x13f1418d8 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x13f1419a0 <col:17> Implicit 1 ","19653":"`-FunctionDecl 0x14a9489a8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14a948aa8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a948b10 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14a948b78 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a948a50 <<invalid sloc>> Implicit 900 ","19455":"`-FunctionDecl 0x146128288  line:1:8 invalid prft_box_dump 'int (int *, int *)'   |-ParmVarDecl 0x146128128 <col:22, col:30> col:30 invalid a 'int *'   |-ParmVarDecl 0x1461281a8 <col:33, col:40> col:40 invalid trace 'int *'   `-CompoundStmt 0x146142d70 <line:2:1, line:24:1>     |-DeclStmt 0x1461283c0 <line:3:2, col:14>     | `-VarDecl 0x146128358 <col:2, col:9> col:9 used fracs 'double'     |-DeclStmt 0x1461419b8 <line:6:2, col:13>     | |-RecordDecl 0x146128408 <col:2, col:9> col:9 struct tm     | `-VarDecl 0x146128508 <col:2, col:12> col:12 referenced invalid t 'struct tm'     |-IfStmt 0x146141f30 <line:8:2, line:13:2>     | |-BinaryOperator 0x146141b00 <line:8:6, col:13> 'int' contains-errors '<'     | | |-RecoveryExpr 0x146141ae0 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x146141aa0 <col:13> 'int' 0     | `-CompoundStmt 0x146141f18 <col:16, line:13:2>     |   `-IfStmt 0x146141ed8 <line:9:3, line:11:3>     |     |-CXXDependentScopeMemberExpr 0x146141ba0 <line:9:7, col:12> '<dependent type>' contains-errors lvalue ->size     |     | `-RecoveryExpr 0x146141b80 <col:7> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x146141ec0 <col:18, line:11:3>     |       `-CallExpr 0x146141e88 <line:10:4, col:50> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x146141d40 <col:4> 'int ()' Function 0x146141c88 'GF_LOG' 'int ()'     |         |-RecoveryExpr 0x146141e48 <col:11> '<dependent type>' contains-errors lvalue     |         |-RecoveryExpr 0x146141e68 <col:25> '<dependent type>' contains-errors lvalue     |         `-ParenExpr 0x146141df0 <col:43, col:49> 'char[4]' lvalue     |           `-StringLiteral 0x146141dd0 <col:44> 'char[4]' lvalue \"STR\"     |-CompoundAssignOperator 0x146142130 <line:16:2, col:11> 'double' '\/=' ComputeLHSTy='double' ComputeResultTy='double'     | |-DeclRefExpr 0x1461420d8 <col:2> 'double' lvalue Var 0x146128358 'fracs' 'double'     | `-ImplicitCastExpr 0x146142118 <col:11> 'double' <IntegralToFloating>     |   `-IntegerLiteral 0x1461420f8 <col:11> 'unsigned int' 4294967295     |-CompoundAssignOperator 0x1461421b8 <line:17:2, col:11> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'     | |-DeclRefExpr 0x146142160 <col:2> 'double' lvalue Var 0x146128358 'fracs' 'double'     | `-ImplicitCastExpr 0x1461421a0 <col:11> 'double' <IntegralToFloating>     |   `-IntegerLiteral 0x146142180 <col:11> 'int' 1000     |-CallExpr 0x146142348 <line:18:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1461422c8 <col:2> 'int ()' Function 0x146142210 'gf_isom_box_dump_start' 'int ()'     | |-RecoveryExpr 0x1461422e8 <col:25> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x146142308 <col:28> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x146142328 <col:35> '<dependent type>' contains-errors lvalue     `-CallExpr 0x146142d38 <line:21:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x146142cb8 <col:2> 'int ()' Function 0x146142c00 'gf_isom_box_dump_done' 'int ()'       |-StringLiteral 0x146142cd8 <col:24> 'char[4]' lvalue \"STR\"       |-RecoveryExpr 0x146142cf8 <col:31> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x146142d18 <col:34> '<dependent type>' contains-errors lvalue ","19418":"`-FunctionDecl 0x1288094c8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1288095c8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x128809570 <<invalid sloc>> Implicit 873 ","19414":"`-FunctionDecl 0x134141bb8  line:1:5 invalid wmi_call 'int (struct wil6210_priv *, int, void *, int, int, void *, int, int)'   |-ParmVarDecl 0x134128648 <col:14, col:35> col:35 used wil 'struct wil6210_priv *'   |-ParmVarDecl 0x1341286e0 <col:40, col:44> col:44 invalid cmdid 'int'   |-ParmVarDecl 0x134128760 <col:51, col:57> col:57 used buf 'void *'   |-ParmVarDecl 0x134141800 <col:62, col:66> col:66 invalid len 'int'   |-ParmVarDecl 0x134141880 <line:2:7, col:11> col:11 invalid reply_id 'int'   |-ParmVarDecl 0x134141900 <col:21, col:27> col:27 used reply 'void *'   |-ParmVarDecl 0x134141980 <col:34, col:37> col:37 invalid reply_size 'int'   |-ParmVarDecl 0x134141a00 <col:49, col:53> col:53 used to_msec 'int'   `-CompoundStmt 0x134143f18 <line:3:1, line:43:1>     |-DeclStmt 0x134141d20 <line:4:2, col:8>     | `-VarDecl 0x134141cb8 <col:2, col:6> col:6 used rc 'int'     |-DeclStmt 0x134141db8 <line:5:2, col:22>     | `-VarDecl 0x134141d50 <col:2, col:16> col:16 used remain 'unsigned long'     |-CallExpr 0x134141fc8 <line:7:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134141f30 <col:2> 'int ()' Function 0x134141e78 'mutex_lock' 'int ()'     | `-UnaryOperator 0x134141fb0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134141f88 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134141f50 <col:14> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |-CallExpr 0x134142168 <line:9:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1341420d0 <col:2> 'int ()' Function 0x134142018 'spin_lock' 'int ()'     | `-UnaryOperator 0x134142150 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134142128 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1341420f0 <col:13> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |-BinaryOperator 0x134142210 <line:10:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1341421c8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x134142190 <col:2> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     | `-RecoveryExpr 0x1341421f0 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1341422b0 <line:11:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x134142268 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x134142230 <col:2> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     | `-DeclRefExpr 0x134142290 <col:19> 'void *' lvalue ParmVar 0x134141900 'reply' 'void *'     |-BinaryOperator 0x134142350 <line:12:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x134142308 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1341422d0 <col:2> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     | `-RecoveryExpr 0x134142330 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1341424e8 <line:13:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134142450 <col:2> 'int ()' Function 0x134142398 'reinit_completion' 'int ()'     | `-UnaryOperator 0x1341424d0 <col:20, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1341424a8 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134142470 <col:21> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |-CallExpr 0x134142688 <line:14:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1341425f0 <col:2> 'int ()' Function 0x134142538 'spin_unlock' 'int ()'     | `-UnaryOperator 0x134142670 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134142648 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134142610 <col:15> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |-BinaryOperator 0x1341428a0 <line:16:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x1341426b0 <col:2> 'int' lvalue Var 0x134141cb8 'rc' 'int'     | `-CallExpr 0x134142860 <col:7, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1341427b0 <col:7> 'int ()' Function 0x1341426f8 '__wmi_send' 'int ()'     |   |-DeclRefExpr 0x1341427d0 <col:18> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |   |-RecoveryExpr 0x134142800 <col:23> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x134142820 <col:30> 'void *' lvalue ParmVar 0x134128760 'buf' 'void *'     |   `-RecoveryExpr 0x134142840 <col:35> '<dependent type>' contains-errors lvalue     |-IfStmt 0x134142960 <line:17:2, line:18:8>     | |-ImplicitCastExpr 0x1341428e0 <line:17:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1341428c0 <col:6> 'int' lvalue Var 0x134141cb8 'rc' 'int'     | `-GotoStmt 0x134142948 <line:18:3, col:8> 'out' 0x1341428f8     |-BinaryOperator 0x134142cf8 <line:20:2, line:21:36> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x134142980 <line:20:2> 'unsigned long' lvalue Var 0x134141d50 'remain' 'unsigned long'     | `-CallExpr 0x134142cc8 <col:11, line:21:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x134142a80 <line:20:11> 'int ()' Function 0x1341429c8 'wait_for_completion_timeout' 'int ()'     |   |-UnaryOperator 0x134142b00 <col:39, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x134142ad8 <col:40, col:45> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x134142aa0 <col:40> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |   `-CallExpr 0x134142c88 <line:21:11, col:35> 'int'     |     |-ImplicitCastExpr 0x134142c70 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x134142bf8 <col:11> 'int ()' Function 0x134142b40 'msecs_to_jiffies' 'int ()'     |     `-ImplicitCastExpr 0x134142cb0 <col:28> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x134142c18 <col:28> 'int' lvalue ParmVar 0x134141a00 'to_msec' 'int'     |-IfStmt 0x1341433c0 <line:22:2, line:31:2> has_else     | |-BinaryOperator 0x134142d88 <line:22:6, col:11> 'int' '=='     | | |-ImplicitCastExpr 0x134142d70 <col:6> 'unsigned long' <IntegralCast>     | | | `-IntegerLiteral 0x134142d18 <col:6> 'int' 0     | | `-ImplicitCastExpr 0x134142d58 <col:11> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x134142d38 <col:11> 'unsigned long' lvalue Var 0x134141d50 'remain' 'unsigned long'     | |-CompoundStmt 0x134142ff8 <col:19, line:26:2>     | | `-CallExpr 0x134142f90 <line:23:3, line:24:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x134142e88 <line:23:3> 'int ()' Function 0x134142dd0 'wil_err' 'int ()'     | |   |-DeclRefExpr 0x134142ea8 <col:11> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     | |   |-StringLiteral 0x134142f10 <col:16> 'char[4]' lvalue \"STR\"     | |   |-RecoveryExpr 0x134142f30 <line:24:4> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x134142f50 <col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x134142f70 <col:21> 'int' lvalue ParmVar 0x134141a00 'to_msec' 'int'     | `-CompoundStmt 0x1341433a8 <line:26:9, line:31:2>     |   `-CallExpr 0x134143360 <line:27:3, line:30:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1341430f0 <line:27:3> 'int ()' Function 0x134143038 'wil_dbg_wmi' 'int ()'     |     |-DeclRefExpr 0x134143110 <col:15> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |     |-StringLiteral 0x134143130 <line:28:8> 'char[4]' lvalue \"STR\"     |     |-RecoveryExpr 0x134143150 <line:29:8> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x134143170 <col:15> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x134143340 <line:30:8, col:41> 'int' '-'     |       |-ImplicitCastExpr 0x134143328 <col:8> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x134143190 <col:8> 'int' lvalue ParmVar 0x134141a00 'to_msec' 'int'     |       `-CallExpr 0x1341432e8 <col:18, col:41> 'int'     |         |-ImplicitCastExpr 0x1341432d0 <col:18> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x134143290 <col:18> 'int ()' Function 0x1341431d8 'jiffies_to_msecs' 'int ()'     |         `-ImplicitCastExpr 0x134143310 <col:35> 'unsigned long' <LValueToRValue>     |           `-DeclRefExpr 0x1341432b0 <col:35> 'unsigned long' lvalue Var 0x134141d50 'remain' 'unsigned long'     |-LabelStmt 0x1341434b0 <line:33:1, line:34:29> 'out'     | `-CallExpr 0x134143488 <col:2, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1341433f0 <col:2> 'int ()' Function 0x134142018 'spin_lock' 'int ()'     |   `-UnaryOperator 0x134143470 <col:12, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x134143448 <col:13, col:18> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x134143410 <col:13> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |-BinaryOperator 0x134143550 <line:35:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x134143508 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1341434d0 <col:2> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     | `-IntegerLiteral 0x134143530 <col:18> 'int' 0     |-BinaryOperator 0x134143650 <line:37:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x134143608 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1341435d0 <col:2> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     | `-IntegerLiteral 0x134143630 <col:20> 'int' 0     |-CallExpr 0x134143708 <line:38:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134143670 <col:2> 'int ()' Function 0x134142538 'spin_unlock' 'int ()'     | `-UnaryOperator 0x1341436f0 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1341436c8 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134143690 <col:15> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     |-CallExpr 0x134143ea8 <line:40:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134143e10 <col:2> 'int ()' Function 0x134143758 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x134143e90 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x134143e68 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x134143e30 <col:16> 'struct wil6210_priv *' lvalue ParmVar 0x134128648 'wil' 'struct wil6210_priv *'     `-ReturnStmt 0x134143f08 <line:42:2, col:9>       `-ImplicitCastExpr 0x134143ef0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x134143ed0 <col:9> 'int' lvalue Var 0x134141cb8 'rc' 'int' ","20089":"`-FunctionDecl 0x13d128358  line:1:1 invalid TPM2B_CONTEXT_DATA_Marshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x13d128128 <col:28, col:49> col:49 invalid source 'int *'   |-ParmVarDecl 0x13d1281e0 <col:57, col:64> col:64 invalid buffer 'int **'   |-ParmVarDecl 0x13d128260 <col:72, col:79> col:79 invalid size 'int *'   `-CompoundStmt 0x13d1286d0 <line:2:1, line:6:1>     `-ReturnStmt 0x13d1286c0 <line:5:5, col:12>       `-RecoveryExpr 0x13d1286a0 <col:12> '<dependent type>' contains-errors lvalue ","19770":"`-FunctionDecl 0x1330280d0  col:4 implicit used abort 'void (void) __attribute__((noreturn))' extern   `-BuiltinAttr 0x133028178 <<invalid sloc>> Implicit 867 ","19197":"`-FunctionDecl 0x12e81cfc0  line:1:8 invalid set_seek_pre_roll 'void (int)'   |-ParmVarDecl 0x12e81cef0 <col:26, col:35> col:35 referenced invalid seek_pre_roll 'int'   `-CompoundStmt 0x12e81d0f8 <col:50, line:3:3>     `-BinaryOperator 0x12e81d0d8 <line:2:5, col:22> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x12e81d090 <col:5> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x12e81d070 <col:5> 'int' lvalue ParmVar 0x12e81cef0 'seek_pre_roll' 'int'       `-RecoveryExpr 0x12e81d0b8 <col:22> '<dependent type>' contains-errors lvalue ","19989":"`-FunctionDecl 0x130928258  line:1:1 invalid xmlBufErase 'int (int, int)'   |-ParmVarDecl 0x1309280f0 <col:13, col:23> col:23 referenced invalid buf 'int'   |-ParmVarDecl 0x130928170 <col:28, col:35> col:35 invalid len 'int'   `-CompoundStmt 0x1310085b8 <col:40, line:11:1>     |-IfStmt 0x130928478 <line:2:5, line:3:18>     | |-RecoveryExpr 0x1309283f0 <line:2:9, col:37> '_Bool' contains-errors     | `-ReturnStmt 0x130928468 <line:3:9, col:18>     |   `-ParenExpr 0x130928448 <col:15, col:18> 'int'     |     `-UnaryOperator 0x130928430 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x130928410 <col:17> 'int' 1     |-CallExpr 0x130928630 <line:4:5, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1309285f0 <col:5> 'int ()' Function 0x130928538 'CHECK_COMPAT' 'int ()'     | `-RecoveryExpr 0x130928610 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x130928768 <line:5:5, line:6:18>     | |-BinaryOperator 0x1309286e0 <line:5:9, col:20> 'int' contains-errors '>'     | | |-RecoveryExpr 0x130928658 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x130928698 <col:15, col:20> '<dependent type>' contains-errors lvalue ->use     | |   `-RecoveryExpr 0x130928678 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x130928758 <line:6:9, col:18>     |   `-ParenExpr 0x130928738 <col:15, col:18> 'int'     |     `-UnaryOperator 0x130928720 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x130928700 <col:17> 'int' 1     |-CompoundAssignOperator 0x131008268 <line:7:5, col:17> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x131008200 <col:5, col:10> '<dependent type>' contains-errors lvalue ->use     | | `-RecoveryExpr 0x1309287a8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x130928788 <col:5> 'int' lvalue ParmVar 0x1309280f0 'buf' 'int'     | `-RecoveryExpr 0x131008248 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x131008400 <line:8:5, col:30> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x1310083c0 <col:5, col:26> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x131008390 <col:5, col:10> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x1310082e0 <col:5, col:10> '<dependent type>' contains-errors lvalue ->content     | | |   `-RecoveryExpr 0x1310082b8 <col:5> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x131008298 <col:5> 'int' lvalue ParmVar 0x1309280f0 'buf' 'int'     | | `-ImplicitCastExpr 0x1310083a8 <col:18, col:23> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x131008348 <col:18, col:23> '<dependent type>' contains-errors lvalue ->use     | |     `-RecoveryExpr 0x131008328 <col:18> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1310083e0 <col:30> 'int' 0     |-CallExpr 0x131008540 <line:9:5, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131008500 <col:5> 'int ()' Function 0x131008448 'UPDATE_COMPAT' 'int ()'     | `-RecoveryExpr 0x131008520 <col:19> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1310085a8 <line:10:5, col:13>       `-ParenExpr 0x131008588 <col:11, col:13> 'int'         `-IntegerLiteral 0x131008568 <col:12> 'int' 0 ","19305":"`-FunctionDecl 0x136141940  col:20 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x136141a40 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1361419e8 <<invalid sloc>> Implicit 902 ","19813":"`-FunctionDecl 0x14a928758  line:1:1 ext2_xattr_cache_insert 'int (struct buffer_head *)'   |-ParmVarDecl 0x14a928648 <col:25, col:45> col:45 used bh 'struct buffer_head *'   `-CompoundStmt 0x14a942cd8 <line:2:1, line:24:1>     |-DeclStmt 0x14a940c58 <line:4:2, col:27>     | |-RecordDecl 0x14a940a68 <col:2, col:9> col:9 struct mb_cache_entry     | `-VarDecl 0x14a940bd8 <col:2, col:25> col:25 used ce 'struct mb_cache_entry *'     |-DeclStmt 0x14a940cf0 <line:5:2, col:11>     | `-VarDecl 0x14a940c88 <col:2, col:6> col:6 used error 'int'     |-BinaryOperator 0x14a940f50 <line:7:2, col:54> 'struct mb_cache_entry *' contains-errors '='     | |-DeclRefExpr 0x14a940d08 <col:2> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     | `-CallExpr 0x14a940f20 <col:7, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a940e40 <col:7> 'int ()' Function 0x14a940d88 'mb_cache_entry_alloc' 'int ()'     |   |-RecoveryExpr 0x14a940ee0 <col:28> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14a940f00 <col:46> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a941068 <line:8:2, line:9:11>     | |-UnaryOperator 0x14a940fa8 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a940f90 <col:7> 'struct mb_cache_entry *' <LValueToRValue>     | |   `-DeclRefExpr 0x14a940f70 <col:7> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     | `-ReturnStmt 0x14a941058 <line:9:3, col:11>     |   `-UnaryOperator 0x14a941040 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14a941028 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14a941008 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a941360 <line:10:2, col:67> 'int' contains-errors '='     | |-DeclRefExpr 0x14a941088 <col:2> 'int' lvalue Var 0x14a940c88 'error' 'int'     | `-CallExpr 0x14a941320 <col:10, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a941188 <col:10> 'int ()' Function 0x14a9410d0 'mb_cache_entry_insert' 'int ()'     |   |-DeclRefExpr 0x14a9411a8 <col:32> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     |   |-RecoveryExpr 0x14a941200 <col:36, col:40> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a9411c8 <col:36> 'struct buffer_head *' lvalue ParmVar 0x14a928648 'bh' 'struct buffer_head *'     |   |-RecoveryExpr 0x14a941260 <col:48, col:52> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a941228 <col:48> 'struct buffer_head *' lvalue ParmVar 0x14a928648 'bh' 'struct buffer_head *'     |   `-RecoveryExpr 0x14a941300 <col:63> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a942c60 <line:11:2, line:22:2> has_else     | |-ImplicitCastExpr 0x14a9413a0 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14a941380 <col:6> 'int' lvalue Var 0x14a940c88 'error' 'int'     | |-CompoundStmt 0x14a942960 <col:13, line:18:2>     | | |-CallExpr 0x14a941528 <line:12:3, col:25> 'int'     | | | |-ImplicitCastExpr 0x14a941510 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x14a941498 <col:3> 'int ()' Function 0x14a9413e0 'mb_cache_entry_free' 'int ()'     | | | `-ImplicitCastExpr 0x14a941550 <col:23> 'struct mb_cache_entry *' <LValueToRValue>     | | |   `-DeclRefExpr 0x14a9414b8 <col:23> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     | | `-IfStmt 0x14a942940 <line:13:3, line:17:3>     | |   |-BinaryOperator 0x14a941640 <line:13:7, col:17> 'int' contains-errors '=='     | |   | |-DeclRefExpr 0x14a941568 <col:7> 'int' lvalue Var 0x14a940c88 'error' 'int'     | |   | `-UnaryOperator 0x14a941628 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   |   `-ImplicitCastExpr 0x14a941610 <col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   |     `-RecoveryExpr 0x14a9415f0 <col:17> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x14a942920 <col:24, line:17:3>     | |     |-CallExpr 0x14a942888 <line:14:4, line:15:50> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x14a941740 <line:14:4> 'int ()' Function 0x14a941688 'ea_bdebug' 'int ()'     | |     | |-DeclRefExpr 0x14a941760 <col:14> 'struct buffer_head *' lvalue ParmVar 0x14a928648 'bh' 'struct buffer_head *'     | |     | |-StringLiteral 0x14a9417c0 <col:18> 'char[4]' lvalue \"STR\"     | |     | `-CallExpr 0x14a942860 <line:15:5, col:49> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x14a9418c0 <col:5> 'int ()' Function 0x14a941808 'atomic_read' 'int ()'     | |     |   `-UnaryOperator 0x14a942848 <col:17, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     |     `-CXXDependentScopeMemberExpr 0x14a942800 <col:18, col:36> '<dependent type>' contains-errors lvalue ->c_entry_count     | |     |       `-RecoveryExpr 0x14a9419b8 <col:18> '<dependent type>' contains-errors lvalue     | |     `-BinaryOperator 0x14a942900 <line:16:4, col:12> 'int' '='     | |       |-DeclRefExpr 0x14a9428c0 <col:4> 'int' lvalue Var 0x14a940c88 'error' 'int'     | |       `-IntegerLiteral 0x14a9428e0 <col:12> 'int' 0     | `-CompoundStmt 0x14a942c48 <line:18:9, line:22:2>     |   `-CallExpr 0x14a942c08 <line:21:3, col:28> 'int'     |     |-ImplicitCastExpr 0x14a942bf0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14a942bb0 <col:3> 'int ()' Function 0x14a942af8 'mb_cache_entry_release' 'int ()'     |     `-ImplicitCastExpr 0x14a942c30 <col:26> 'struct mb_cache_entry *' <LValueToRValue>     |       `-DeclRefExpr 0x14a942bd0 <col:26> 'struct mb_cache_entry *' lvalue Var 0x14a940bd8 'ce' 'struct mb_cache_entry *'     `-ReturnStmt 0x14a942cc8 <line:23:2, col:9>       `-ImplicitCastExpr 0x14a942cb0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14a942c90 <col:9> 'int' lvalue Var 0x14a940c88 'error' 'int' ","20027":"`-FunctionDecl 0x14f941ae8  line:1:12 invalid translate_desc 'int (struct vhost_dev *, int, int, int, int)' static   |-ParmVarDecl 0x14f928648 <col:27, col:45> col:45 used dev 'struct vhost_dev *'   |-ParmVarDecl 0x14f9286e0 <col:50, col:54> col:54 referenced invalid addr 'int'   |-ParmVarDecl 0x14f928760 <col:60, col:64> col:64 invalid len 'int'   |-ParmVarDecl 0x14f9418f0 <line:2:6, col:19> col:19 invalid iov 'int'   |-ParmVarDecl 0x14f941970 <col:26, col:30> col:30 used iov_size 'int'   `-CompoundStmt 0x14f943488 <line:3:1, line:36:1>     |-DeclStmt 0x14f941da8 <line:4:2, col:39>     | |-RecordDecl 0x14f941bb8 <col:8, col:15> col:15 struct vhost_memory_region     | `-VarDecl 0x14f941d28 <col:2, col:36> col:36 used reg 'const struct vhost_memory_region *'     |-DeclStmt 0x14f941fa8 <line:5:2, col:26>     | |-RecordDecl 0x14f941dc0 <col:2, col:9> col:9 struct vhost_memory     | `-VarDecl 0x14f941f28 <col:2, col:23> col:23 used mem 'struct vhost_memory *'     |-DeclStmt 0x14f9420e0 <line:6:2, col:20>     | `-VarDecl 0x14f942078 <col:2, col:16> col:16 used _iov 'struct iovec *'     |-DeclStmt 0x14f942198 <line:8:2, col:13>     | `-VarDecl 0x14f942110 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x14f942178 <col:12> 'int' 0     |-CallExpr 0x14f942378 <line:10:2, col:16> 'int'     | `-ImplicitCastExpr 0x14f942360 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f942310 <col:2> 'int ()' Function 0x14f942258 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x14f942540 <line:12:2, col:35> 'struct vhost_memory *' contains-errors '='     | |-DeclRefExpr 0x14f942398 <col:2> 'struct vhost_memory *' lvalue Var 0x14f941f28 'mem' 'struct vhost_memory *'     | `-CallExpr 0x14f942518 <col:8, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14f942498 <col:8> 'int ()' Function 0x14f9423e0 'rcu_dereference' 'int ()'     |   `-RecoveryExpr 0x14f9424f0 <col:24, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f9424b8 <col:24> 'struct vhost_dev *' lvalue ParmVar 0x14f928648 'dev' 'struct vhost_dev *'     |-WhileStmt 0x14f9432e8 <line:13:2, line:32:2>     | |-RecoveryExpr 0x14f942578 <line:13:9, col:20> '_Bool' contains-errors     | `-CompoundStmt 0x14f9432a8 <col:23, line:32:2>     |   |-IfStmt 0x14f942898 <line:15:3, line:18:3>     |   | |-CallExpr 0x14f942740 <line:15:7, col:31> 'int'     |   | | |-ImplicitCastExpr 0x14f942728 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14f942678 <col:7> 'int ()' Function 0x14f9425c0 'unlikely' 'int ()'     |   | | `-BinaryOperator 0x14f942708 <col:16, col:23> 'int' '>='     |   | |   |-ImplicitCastExpr 0x14f9426d8 <col:16> 'int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x14f942698 <col:16> 'int' lvalue Var 0x14f942110 'ret' 'int'     |   | |   `-ImplicitCastExpr 0x14f9426f0 <col:23> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x14f9426b8 <col:23> 'int' lvalue ParmVar 0x14f941970 'iov_size' 'int'     |   | `-CompoundStmt 0x14f942878 <col:34, line:18:3>     |   |   |-BinaryOperator 0x14f942850 <line:16:4, col:11> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x14f942768 <col:4> 'int' lvalue Var 0x14f942110 'ret' 'int'     |   |   | `-UnaryOperator 0x14f942838 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x14f942820 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x14f942800 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x14f942870 <line:17:4>     |   |-BinaryOperator 0x14f942a70 <line:19:3, col:35> 'const struct vhost_memory_region *' contains-errors '='     |   | |-DeclRefExpr 0x14f9428b8 <col:3> 'const struct vhost_memory_region *' lvalue Var 0x14f941d28 'reg' 'const struct vhost_memory_region *'     |   | `-CallExpr 0x14f942a38 <col:9, col:35> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14f9429b8 <col:9> 'int ()' Function 0x14f942900 'find_region' 'int ()'     |   |   |-DeclRefExpr 0x14f9429d8 <col:21> 'struct vhost_memory *' lvalue Var 0x14f941f28 'mem' 'struct vhost_memory *'     |   |   |-RecoveryExpr 0x14f9429f8 <col:26> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x14f942a18 <col:32> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x14f942c60 <line:20:3, line:23:3>     |   | |-CallExpr 0x14f942b18 <line:20:7, col:20> 'int'     |   | | |-ImplicitCastExpr 0x14f942b00 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14f942a90 <col:7> 'int ()' Function 0x14f9425c0 'unlikely' 'int ()'     |   | | `-UnaryOperator 0x14f942ae8 <col:16, col:17> 'int' prefix '!' cannot overflow     |   | |   `-ImplicitCastExpr 0x14f942ad0 <col:17> 'const struct vhost_memory_region *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x14f942ab0 <col:17> 'const struct vhost_memory_region *' lvalue Var 0x14f941d28 'reg' 'const struct vhost_memory_region *'     |   | `-CompoundStmt 0x14f942c40 <col:23, line:23:3>     |   |   |-BinaryOperator 0x14f942c18 <line:21:4, col:11> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x14f942b40 <col:4> 'int' lvalue Var 0x14f942110 'ret' 'int'     |   |   | `-UnaryOperator 0x14f942c00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x14f942be8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x14f942bc8 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x14f942c38 <line:22:4>     |   |-BinaryOperator 0x14f942d00 <line:24:3, col:16> 'struct iovec *' contains-errors '='     |   | |-DeclRefExpr 0x14f942c80 <col:3> 'struct iovec *' lvalue Var 0x14f942078 '_iov' 'struct iovec *'     |   | `-BinaryOperator 0x14f942ce0 <col:10, col:16> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x14f942ca0 <col:10> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14f942cc0 <col:16> 'int' lvalue Var 0x14f942110 'ret' 'int'     |   |-BinaryOperator 0x14f943208 <line:27:3, line:28:54> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14f943008 <line:27:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14f942fd0 <col:3> 'struct iovec *' lvalue Var 0x14f942078 '_iov' 'struct iovec *'     |   | `-CStyleCastExpr 0x14f9431e0 <col:20, line:28:54> 'void' contains-errors <ToVoid>     |   |   `-CStyleCastExpr 0x14f9431a8 <line:27:35, line:28:54> 'unsigned long' contains-errors <Dependent>     |   |     `-ParenExpr 0x14f943188 <col:4, col:54> '<dependent type>' contains-errors     |   |       `-BinaryOperator 0x14f943130 <col:5, col:39> '<dependent type>' contains-errors '-'     |   |         |-BinaryOperator 0x14f9430b0 <col:5, col:27> '<dependent type>' contains-errors '+'     |   |         | |-RecoveryExpr 0x14f943068 <col:5, col:10> '<dependent type>' contains-errors lvalue     |   |         | | `-DeclRefExpr 0x14f943030 <col:5> 'const struct vhost_memory_region *' lvalue Var 0x14f941d28 'reg' 'const struct vhost_memory_region *'     |   |         | `-RecoveryExpr 0x14f943090 <col:27> '<dependent type>' contains-errors lvalue     |   |         `-RecoveryExpr 0x14f943108 <col:34, col:39> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x14f9430d0 <col:34> 'const struct vhost_memory_region *' lvalue Var 0x14f941d28 'reg' 'const struct vhost_memory_region *'     |   `-UnaryOperator 0x14f943290 <line:31:3, col:5> 'int' prefix '++'     |     `-DeclRefExpr 0x14f943270 <col:5> 'int' lvalue Var 0x14f942110 'ret' 'int'     |-CallExpr 0x14f943420 <line:34:2, col:18> 'int'     | `-ImplicitCastExpr 0x14f943408 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14f9433e8 <col:2> 'int ()' Function 0x14f943330 'rcu_read_unlock' 'int ()'     `-ReturnStmt 0x14f943478 <line:35:2, col:9>       `-ImplicitCastExpr 0x14f943460 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14f943440 <col:9> 'int' lvalue Var 0x14f942110 'ret' 'int' ","19572":"`-FunctionDecl 0x152922808  line:1:1 invalid evbuffer_ptr_subtract 'int (struct evbuffer *, struct evbuffer_ptr *, int)'   |-ParmVarDecl 0x15300e248 <col:23, col:40> col:40 used buf 'struct evbuffer *'   |-ParmVarDecl 0x152922628 <col:45, col:66> col:66 used pos 'struct evbuffer_ptr *'   |-ParmVarDecl 0x1529226c0 <line:2:5, col:12> col:12 invalid howfar 'int'   `-CompoundStmt 0x1529231d8 <line:3:1, line:15:1>     |-IfStmt 0x1529229d8 <line:4:2, line:5:11>     | |-RecoveryExpr 0x152922960 <line:4:6, col:22> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x1529228c8 <col:6> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x152922940 <col:15, col:22> '<overloaded function type>' lvalue     | |   `-UnresolvedLookupExpr 0x152922900 <col:16> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty     | `-ReturnStmt 0x1529229c8 <line:5:3, col:11>     |   `-UnaryOperator 0x1529229b0 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x152922990 <col:11> 'int' 1     `-IfStmt 0x1529231a8 <line:6:2, line:14:2> has_else       |-BinaryOperator 0x152922b88 <line:6:6, col:55> 'int' contains-errors '&&'       | |-CXXDependentScopeMemberExpr 0x152922a58 <col:6, col:21> '<dependent type>' contains-errors lvalue .chain       | | `-RecoveryExpr 0x152922a30 <col:6, col:11> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x1529229f8 <col:6> 'struct evbuffer_ptr *' lvalue ParmVar 0x152922628 'pos' 'struct evbuffer_ptr *'       | `-BinaryOperator 0x152922b68 <col:30, col:55> 'int' contains-errors '<='       |   |-RecoveryExpr 0x152922aa0 <col:30> '<dependent type>' contains-errors lvalue       |   `-CXXDependentScopeMemberExpr 0x152922b20 <col:40, col:55> '<dependent type>' contains-errors lvalue .pos_in_chain       |     `-RecoveryExpr 0x152922af8 <col:40, col:45> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x152922ac0 <col:40> 'struct evbuffer_ptr *' lvalue ParmVar 0x152922628 'pos' 'struct evbuffer_ptr *'       |-CompoundStmt 0x152922d80 <col:69, line:10:2>       | |-CompoundAssignOperator 0x152922c70 <line:7:3, col:34> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       | | |-CXXDependentScopeMemberExpr 0x152922c08 <col:3, col:18> '<dependent type>' contains-errors lvalue .pos_in_chain       | | | `-RecoveryExpr 0x152922be0 <col:3, col:8> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x152922ba8 <col:3> 'struct evbuffer_ptr *' lvalue ParmVar 0x152922628 'pos' 'struct evbuffer_ptr *'       | | `-RecoveryExpr 0x152922c50 <col:34> '<dependent type>' contains-errors lvalue       | |-CompoundAssignOperator 0x152922d20 <line:8:3, col:15> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       | | |-RecoveryExpr 0x152922cd8 <col:3, col:8> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x152922ca0 <col:3> 'struct evbuffer_ptr *' lvalue ParmVar 0x152922628 'pos' 'struct evbuffer_ptr *'       | | `-RecoveryExpr 0x152922d00 <col:15> '<dependent type>' contains-errors lvalue       | `-ReturnStmt 0x152922d70 <line:9:3, col:10>       |   `-IntegerLiteral 0x152922d50 <col:10> 'int' 0       `-CompoundStmt 0x152923188 <line:10:9, line:14:2>         |-DeclStmt 0x152922ec8 <line:11:3, col:42>         | `-VarDecl 0x152922dc0 <col:3, col:16> col:16 invalid newpos 'const int'         `-ReturnStmt 0x152923178 <line:13:3, col:61>           `-CallExpr 0x152923138 <col:10, col:61> '<dependent type>' contains-errors             |-DeclRefExpr 0x152923040 <col:10> 'int ()' Function 0x152922f88 'evbuffer_ptr_set' 'int ()'             |-DeclRefExpr 0x152923060 <col:27> 'struct evbuffer *' lvalue ParmVar 0x15300e248 'buf' 'struct evbuffer *'             |-DeclRefExpr 0x152923080 <col:32> 'struct evbuffer_ptr *' lvalue ParmVar 0x152922628 'pos' 'struct evbuffer_ptr *'             |-RecoveryExpr 0x1529230a0 <col:37> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x152923118 <col:45> '<dependent type>' contains-errors lvalue ","20123":"`-FunctionDecl 0x14e941aa8  line:1:16 invalid set_cmci_disabled 'int (struct device *, struct device_attribute *, const char *, int)' static   |-ParmVarDecl 0x14e928668 <col:34, col:49> col:49 s 'struct device *'   |-ParmVarDecl 0x14e941858 <line:2:6, col:31> col:31 attr 'struct device_attribute *'   |-ParmVarDecl 0x14e9418d8 <line:3:6, col:18> col:18 used buf 'const char *'   |-ParmVarDecl 0x14e941958 <col:23, col:30> col:30 invalid size 'int'   `-CompoundStmt 0x14e942550 <line:4:1, line:22:1>     |-IfStmt 0x14e941f10 <line:7:2, line:8:11>     | |-BinaryOperator 0x14e941e48 <line:7:6, col:32> 'int' contains-errors '<'     | | |-CallExpr 0x14e941e10 <col:6, col:28> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14e941cd0 <col:6> 'int ()' Function 0x14e941c18 'kstrtou64' 'int ()'     | | | |-DeclRefExpr 0x14e941cf0 <col:16> 'const char *' lvalue ParmVar 0x14e9418d8 'buf' 'const char *'     | | | |-IntegerLiteral 0x14e941d10 <col:21> 'int' 0     | | | `-UnaryOperator 0x14e941df8 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x14e941dd8 <col:25> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14e941d98 <col:32> 'int' 0     | `-ReturnStmt 0x14e941f00 <line:8:3, col:11>     |   `-UnaryOperator 0x14e941ee8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e941ed0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e941eb0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e942500 <line:10:2, line:20:2>     | |-BinaryOperator 0x14e9420e0 <line:10:6, col:32> '<dependent type>' contains-errors '^'     | | |-CXXDependentScopeMemberExpr 0x14e942030 <col:6, col:14> '<dependent type>' contains-errors lvalue .cmci_disabled     | | | `-RecoveryExpr 0x14e942010 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14e9420c8 <col:30, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-UnaryOperator 0x14e9420b0 <col:31, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     `-ImplicitCastExpr 0x14e942098 <col:32> '<dependent type>' contains-errors <LValueToRValue>     | |       `-RecoveryExpr 0x14e942078 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e9424e8 <col:37, line:20:2>     |   `-IfStmt 0x14e9424b8 <line:11:3, line:19:3> has_else     |     |-RecoveryExpr 0x14e942118 <line:11:7> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x14e942350 <col:12, line:15:3>     |     | `-CallExpr 0x14e942300 <line:13:4, col:41> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x14e942218 <col:4> 'int ()' Function 0x14e942160 'on_each_cpu' 'int ()'     |     |   |-RecoveryExpr 0x14e9422c0 <col:16> '<dependent type>' contains-errors lvalue     |     |   |-RecoveryExpr 0x14e9422e0 <col:34> '<dependent type>' contains-errors lvalue     |     |   `-IntegerLiteral 0x14e942268 <col:40> 'int' 1     |     `-CompoundStmt 0x14e9424a0 <line:15:10, line:19:3>     |       `-CallExpr 0x14e942468 <line:18:4, col:38> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x14e942380 <col:4> 'int ()' Function 0x14e942160 'on_each_cpu' 'int ()'     |         |-RecoveryExpr 0x14e942428 <col:16> '<dependent type>' contains-errors lvalue     |         |-RecoveryExpr 0x14e942448 <col:31> '<dependent type>' contains-errors lvalue     |         `-IntegerLiteral 0x14e9423d0 <col:37> 'int' 1     `-ReturnStmt 0x14e942540 <line:21:2, col:9>       `-RecoveryExpr 0x14e942520 <col:9> '<dependent type>' contains-errors lvalue ","19294":"`-FunctionDecl 0x132141ab8  line:1:1 invalid grub_ext4_find_leaf 'int (struct grub_ext2_data *, int *, struct grub_ext4_extent_header *, int)'   |-ParmVarDecl 0x132128648 <col:22, col:45> col:45 used data 'struct grub_ext2_data *'   |-ParmVarDecl 0x132128718 <col:51, col:76> col:76 invalid buf 'int *'   |-ParmVarDecl 0x1321418e8 <line:2:22, col:54> col:54 used ext_block 'struct grub_ext4_extent_header *'   |-ParmVarDecl 0x132141968 <line:3:22, col:36> col:36 invalid fileblock 'int'   `-CompoundStmt 0x132144c80 <line:4:1, line:38:1>     |-DeclStmt 0x132141d68 <line:5:3, col:37>     | |-RecordDecl 0x132141b80 <col:3, col:10> col:10 struct grub_ext4_extent_idx     | `-VarDecl 0x132141ce8 <col:3, col:32> col:32 used index 'struct grub_ext4_extent_idx *'     `-WhileStmt 0x132144c60 <line:7:3, line:37:5>       |-IntegerLiteral 0x132141d80 <line:7:10> 'int' 1       `-CompoundStmt 0x132144c10 <line:8:5, line:37:5>         |-DeclStmt 0x132141e20 <line:9:7, col:12>         | `-VarDecl 0x132141db8 <col:7, col:11> col:11 used i 'int'         |-BinaryOperator 0x132141fd0 <line:12:7, col:61> 'struct grub_ext4_extent_idx *' contains-errors '='         | |-DeclRefExpr 0x132141e38 <col:7> 'struct grub_ext4_extent_idx *' lvalue Var 0x132141ce8 'index' 'struct grub_ext4_extent_idx *'         | `-CStyleCastExpr 0x132141fa8 <col:15, col:61> 'struct grub_ext4_extent_idx *' contains-errors <Dependent>         |   `-ParenExpr 0x132141f88 <col:47, col:61> '<dependent type>' contains-errors lvalue         |     `-RecoveryExpr 0x132141eb0 <col:48, col:60> '<dependent type>' contains-errors lvalue         |       |-DeclRefExpr 0x132141e58 <col:48> 'struct grub_ext4_extent_header *' lvalue ParmVar 0x1321418e8 'ext_block' 'struct grub_ext4_extent_header *'         |       `-IntegerLiteral 0x132141e78 <col:60> 'int' 1         |-IfStmt 0x1321422a0 <line:14:7, line:15:16>         | |-BinaryOperator 0x132142250 <line:14:11, col:49> 'int' contains-errors '!='         | | |-CallExpr 0x1321421d0 <col:11, col:44> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x132142150 <col:11> 'int ()' Function 0x132142098 'grub_le_to_cpu16' 'int ()'         | | | `-RecoveryExpr 0x1321421a8 <col:28, col:39> '<dependent type>' contains-errors lvalue         | | |   `-DeclRefExpr 0x132142170 <col:28> 'struct grub_ext4_extent_header *' lvalue ParmVar 0x1321418e8 'ext_block' 'struct grub_ext4_extent_header *'         | | `-RecoveryExpr 0x132142230 <col:49> '<dependent type>' contains-errors lvalue         | `-ReturnStmt 0x132142290 <line:15:9, col:16>         |   `-IntegerLiteral 0x132142270 <col:16> 'int' 0         |-IfStmt 0x1321423c0 <line:17:7, line:18:16>         | |-BinaryOperator 0x132142340 <line:17:11, col:31> 'int' contains-errors '=='         | | |-RecoveryExpr 0x1321422f8 <col:11, col:22> '<dependent type>' contains-errors lvalue         | | | `-DeclRefExpr 0x1321422c0 <col:11> 'struct grub_ext4_extent_header *' lvalue ParmVar 0x1321418e8 'ext_block' 'struct grub_ext4_extent_header *'         | | `-IntegerLiteral 0x132142320 <col:31> 'int' 0         | `-ReturnStmt 0x1321423b0 <line:18:9, col:16>         |   `-ImplicitCastExpr 0x132142398 <col:16> 'int' <PointerToIntegral>         |     `-ImplicitCastExpr 0x132142380 <col:16> 'struct grub_ext4_extent_header *' <LValueToRValue>         |       `-DeclRefExpr 0x132142360 <col:16> 'struct grub_ext4_extent_header *' lvalue ParmVar 0x1321418e8 'ext_block' 'struct grub_ext4_extent_header *'         |-ForStmt 0x132142750 <line:20:7, line:24:9>         | |-BinaryOperator 0x132142420 <line:20:12, col:16> 'int' '='         | | |-DeclRefExpr 0x1321423e0 <col:12> 'int' lvalue Var 0x132141db8 'i' 'int'         | | `-IntegerLiteral 0x132142400 <col:16> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x132142508 <col:19, col:59> 'int' contains-errors '<'         | | |-DeclRefExpr 0x132142440 <col:19> 'int' lvalue Var 0x132141db8 'i' 'int'         | | `-CallExpr 0x1321424e0 <col:23, col:59> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x132142460 <col:23> 'int ()' Function 0x132142098 'grub_le_to_cpu16' 'int ()'         | |   `-RecoveryExpr 0x1321424b8 <col:41, col:52> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x132142480 <col:41> 'struct grub_ext4_extent_header *' lvalue ParmVar 0x1321418e8 'ext_block' 'struct grub_ext4_extent_header *'         | |-UnaryOperator 0x132142548 <col:62, col:63> 'int' postfix '++'         | | `-DeclRefExpr 0x132142528 <col:62> 'int' lvalue Var 0x132141db8 'i' 'int'         | `-CompoundStmt 0x132142738 <line:21:9, line:24:9>         |   `-IfStmt 0x132142718 <line:22:11, line:23:13>         |     |-RecoveryExpr 0x1321426f0 <line:22:15, col:58> '_Bool' contains-errors         |     `-BreakStmt 0x132142710 <line:23:13>         |-IfStmt 0x132144430 <line:26:7, line:27:16>         | |-BinaryOperator 0x1321427e0 <line:26:11, col:17> 'int' '<'         | | |-UnaryOperator 0x1321427a8 <col:11, col:13> 'int' prefix '--'         | | | `-DeclRefExpr 0x132142788 <col:13> 'int' lvalue Var 0x132141db8 'i' 'int'         | | `-IntegerLiteral 0x1321427c0 <col:17> 'int' 0         | `-ReturnStmt 0x132144420 <line:27:9, col:16>         |   `-IntegerLiteral 0x132144400 <col:16> 'int' 0         |-IfStmt 0x132144ae0 <line:31:7, line:34:16>         | |-RecoveryExpr 0x132144a90 <line:31:11, line:33:56> '_Bool' contains-errors         | `-ReturnStmt 0x132144ad0 <line:34:9, col:16>         |   `-IntegerLiteral 0x132144ab0 <col:16> 'int' 0         `-BinaryOperator 0x132144bf0 <line:36:7, col:54> 'struct grub_ext4_extent_header *' contains-errors '='           |-DeclRefExpr 0x132144b00 <col:7> 'struct grub_ext4_extent_header *' lvalue ParmVar 0x1321418e8 'ext_block' 'struct grub_ext4_extent_header *'           `-CStyleCastExpr 0x132144bc8 <col:19, col:54> 'struct grub_ext4_extent_header *' contains-errors <Dependent>             `-RecoveryExpr 0x132144b20 <col:54> '<dependent type>' contains-errors lvalue ","19620":"`-FunctionDecl 0x15280dfa8  line:1:12 invalid freerdp_peer_send_channel_data 'int (int *, int, int *, int)' static   |-ParmVarDecl 0x15280dd28 <col:43, col:57> col:57 invalid client 'int *'   |-ParmVarDecl 0x15280dda8 <col:65, col:69> col:69 used channelId 'int'   |-ParmVarDecl 0x15280de28 <col:80, col:86> col:86 invalid data 'int *'   |-ParmVarDecl 0x15280dea8 <col:92, col:96> col:96 used size 'int'   `-CompoundStmt 0x15280e350 <line:2:1, line:4:1>     `-ReturnStmt 0x15280e340 <line:3:2, col:74>       `-CallExpr 0x15280e300 <col:9, col:74> '<dependent type>' contains-errors         |-DeclRefExpr 0x15280e1d0 <col:9> 'int ()' Function 0x15280e118 'rdp_send_channel_data' 'int ()'         |-CXXDependentScopeMemberExpr 0x15280e258 <col:31, col:48> '<dependent type>' contains-errors lvalue ->rdp         | `-CXXDependentScopeMemberExpr 0x15280e210 <col:31, col:39> '<dependent type>' contains-errors lvalue ->context         |   `-RecoveryExpr 0x15280e1f0 <col:31> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x15280e2a0 <col:53> 'int' lvalue ParmVar 0x15280dda8 'channelId' 'int'         |-RecoveryExpr 0x15280e2c0 <col:64> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x15280e2e0 <col:70> 'int' lvalue ParmVar 0x15280dea8 'size' 'int' ","19157":"`-FunctionDecl 0x12d808da0  col:11 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x12d808ea0 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x12d808e48 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x12d808f10 <col:11> Implicit 1 ","20170":"`-FunctionDecl 0x153826cb0  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x153826db0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x153826e18 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x153826e80 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x153826d58 <<invalid sloc>> Implicit 905   `-FormatAttr 0x153826f00 <col:2> Implicit printf 3 4 ","19501":"`-FunctionDecl 0x12600ddf8  line:1:1 invalid ex_doautoall 'int (int *)'   |-ParmVarDecl 0x12600dd28 <col:14, col:23> col:23 invalid eap 'int *'   `-CompoundStmt 0x127809600 <line:2:1, line:49:1>     |-DeclStmt 0x12600df60 <line:3:5, col:21>     | `-VarDecl 0x12600dec0 <col:5, col:19> col:10 used retval 'int' cinit     |   `-RecoveryExpr 0x12600df40 <col:19> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12600e078 <line:7:5, col:27>     | `-VarDecl 0x12600dfa8 <col:5, col:24> col:13 used arg 'char *' cinit     |   `-CXXDependentScopeMemberExpr 0x12600e030 <col:19, col:24> '<dependent type>' contains-errors lvalue ->arg     |     `-RecoveryExpr 0x12600e010 <col:19> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12600e370 <line:8:5, col:52>     | `-VarDecl 0x12600e0a8 <col:5, col:51> col:10 used call_do_modelines 'int' cinit     |   `-CallExpr 0x12600e348 <col:30, col:51> 'int' contains-errors     |     |-ImplicitCastExpr 0x12600e330 <col:30> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12600e270 <col:30> 'int ()' Function 0x12600e1b8 'check_nomodeline' 'int ()'     |     `-UnaryOperator 0x12600e2e0 <col:47, col:48> 'char **' contains-errors prefix '&' cannot overflow     |       `-DeclRefExpr 0x12600e290 <col:48> 'char *' contains-errors lvalue Var 0x12600dfa8 'arg' 'char *'     |-DeclStmt 0x126027868 <line:9:5, col:19>     | `-VarDecl 0x126027800 <col:5, col:10> col:10 used did_aucmd 'int'     |-CallExpr 0x1260279e0 <line:12:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126027960 <col:5> 'int ()' Function 0x1260278a8 'FOR_ALL_BUFFERS' 'int ()'     | `-RecoveryExpr 0x1260279c0 <col:21> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1260285c0 <line:13:5, line:40:5>     | `-IfStmt 0x1260285a0 <line:15:2, line:39:2>     |   |-BinaryOperator 0x126027ca8 <line:15:6, col:41> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x126027c28 <col:6, col:26> 'int' contains-errors '!='     |   | | |-CXXDependentScopeMemberExpr 0x126027bc0 <col:6, col:16> '<dependent type>' contains-errors lvalue .ml_mfp     |   | | | `-CXXDependentScopeMemberExpr 0x126027b78 <col:6, col:11> '<dependent type>' contains-errors lvalue ->b_ml     |   | | |   `-RecoveryExpr 0x126027b58 <col:6> '<dependent type>' contains-errors lvalue     |   | | `-RecoveryExpr 0x126027c08 <col:26> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x126027c88 <col:34, col:41> 'int' contains-errors '!='     |   |   |-RecoveryExpr 0x126027c48 <col:34> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x126027c68 <col:41> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x126028580 <line:16:2, line:39:2>     |     |-CallExpr 0x126027e98 <line:18:6, col:29> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x126027da8 <col:6> 'int ()' Function 0x126027cf0 'aucmd_prepbuf' 'int ()'     |     | |-UnaryOperator 0x126027e60 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | `-RecoveryExpr 0x126027e40 <col:21> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x126027e78 <col:26> '<dependent type>' contains-errors lvalue     |     `-IfStmt 0x126028560 <line:34:6, line:38:6>     |       |-RecoveryExpr 0x126028510 <line:34:10, col:49> '_Bool' contains-errors     |       `-CompoundStmt 0x126028550 <line:35:6, line:38:6>     `-IfStmt 0x1260287d8 <line:43:5, line:48:5>       |-RecoveryExpr 0x1260285f8 <line:43:9, col:19> '_Bool' contains-errors       `-CompoundStmt 0x1260287c0 <line:44:5, line:48:5>         `-IfStmt 0x1260287a0 <line:46:2, line:47:20>           |-BinaryOperator 0x126028700 <line:46:6, col:27> 'int' contains-errors '&&'           | |-ImplicitCastExpr 0x1260286d0 <col:6> 'int' contains-errors <LValueToRValue>           | | `-DeclRefExpr 0x126028690 <col:6> 'int' contains-errors lvalue Var 0x12600e0a8 'call_do_modelines' 'int'           | `-ImplicitCastExpr 0x1260286e8 <col:27> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x1260286b0 <col:27> 'int' lvalue Var 0x126027800 'did_aucmd' 'int'           `-CallExpr 0x126028778 <line:47:6, col:20> 'int'             |-ImplicitCastExpr 0x126028760 <col:6> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x126028720 <col:6> 'int ()' Function 0x1260281f8 'do_modelines' 'int ()'             `-IntegerLiteral 0x126028740 <col:19> 'int' 0 ","19566":"`-FunctionDecl 0x130128318  line:1:1 invalid date_s_rfc2822 'int (int, int *, int)'   |-ParmVarDecl 0x1301280d8 <col:16, col:20> col:20 used argc 'int'   |-ParmVarDecl 0x1301281a8 <col:26, col:33> col:33 invalid argv 'int *'   |-ParmVarDecl 0x130128228 <col:39, col:45> col:45 invalid klass 'int'   `-CompoundStmt 0x1301421d0 <line:2:1, line:18:1>     |-CallExpr 0x130128708 <line:5:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130128530 <col:5> 'int ()' Function 0x130128478 'rb_scan_args' 'int ()'     | |-DeclRefExpr 0x130128550 <col:18> 'int' lvalue ParmVar 0x1301280d8 'argc' 'int'     | |-RecoveryExpr 0x130128570 <col:24> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x1301285d0 <col:30> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x1301286b8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x130128698 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1301286f0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1301286d0 <col:44> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x130128788 <line:7:5, line:12:5>     | |-ImplicitCastExpr 0x130128770 <line:7:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x130128750 <col:13> 'int' lvalue ParmVar 0x1301280d8 'argc' 'int'     | `-CompoundStmt 0x130141f88 <col:19, line:12:5>     |   |-CaseStmt 0x130141c00 <line:8:7, <invalid sloc>>     |   | |-ConstantExpr 0x1301287d0 <col:12> 'int'     |   | | `-IntegerLiteral 0x1301287b0 <col:12> 'int' 0     |   | `-NullStmt 0x130141dd8 <<invalid sloc>>     |   `-CaseStmt 0x130141e18 <line:10:7, <invalid sloc>>     |     |-ConstantExpr 0x130141e00 <col:12> 'int'     |     | `-IntegerLiteral 0x130141de0 <col:12> 'int' 1     |     `-NullStmt 0x130141f80 <<invalid sloc>>     `-CompoundStmt 0x1301421b8 <line:14:5, line:17:5>       `-ReturnStmt 0x1301421a8 <line:16:2, col:39>         `-CallExpr 0x130142170 <col:9, col:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x130142088 <col:9> 'int ()' Function 0x130141fd0 'd_new_by_frags' 'int ()'           |-RecoveryExpr 0x1301420a8 <col:24> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x130142130 <col:31> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x130142150 <col:37> '<dependent type>' contains-errors lvalue ","19244":"`-FunctionDecl 0x14b80e300  col:9 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x14b826600 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14b826668 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x14b80e3a8 <<invalid sloc>> Implicit 952 ","19179":"`-FunctionDecl 0x11f9410d0  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x11f9411d0 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x11f941178 <<invalid sloc>> Implicit 873 ","19292":"`-FunctionDecl 0x128140dc8  line:1:12 airo_get_freq 'int (struct net_device *, struct iw_request_info *, struct iw_freq *, char *)' static   |-ParmVarDecl 0x128128648 <col:26, col:45> col:45 used dev 'struct net_device *'   |-ParmVarDecl 0x128140a28 <line:2:5, col:29> col:29 info 'struct iw_request_info *'   |-ParmVarDecl 0x128140bf8 <line:3:5, col:21> col:21 used fwrq 'struct iw_freq *'   |-ParmVarDecl 0x128140c78 <line:4:5, col:11> col:11 extra 'char *'   `-CompoundStmt 0x128142e98 <line:5:1, line:26:1>     |-DeclStmt 0x128141128 <line:6:2, col:40>     | |-RecordDecl 0x128140ed8 <col:2, col:9> col:9 struct airo_info     | `-VarDecl 0x128141048 <col:2, col:33> col:20 used local 'struct airo_info *' cinit     |   `-RecoveryExpr 0x1281410e8 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1281410b0 <col:28> 'struct net_device *' lvalue ParmVar 0x128128648 'dev' 'struct net_device *'     |-DeclStmt 0x1281411d8 <line:8:2, col:8>     | `-VarDecl 0x128141170 <col:2, col:6> col:6 used ch 'int'     |-CallExpr 0x1281413a8 <line:10:2, col:24> 'int' contains-errors     | |-ImplicitCastExpr 0x128141390 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x128141300 <col:2> 'int ()' Function 0x128141248 'readConfigRid' 'int ()'     | |-ImplicitCastExpr 0x1281413d8 <col:16> 'struct airo_info *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x128141320 <col:16> 'struct airo_info *' contains-errors lvalue Var 0x128141048 'local' 'struct airo_info *'     | `-IntegerLiteral 0x128141340 <col:23> 'int' 1     |-IfStmt 0x1281417d0 <line:11:2, line:14:38> has_else     | |-RecoveryExpr 0x1281414e8 <line:11:6, col:48> '_Bool' contains-errors     | |-NullStmt 0x1281417c8 <line:12:3>     | `-CallExpr 0x128141790 <line:14:3, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128141690 <col:3> 'int ()' Function 0x1281415d8 'readStatusRid' 'int ()'     |   |-DeclRefExpr 0x1281416b0 <col:17> 'struct airo_info *' contains-errors lvalue Var 0x128141048 'local' 'struct airo_info *'     |   |-UnaryOperator 0x128141778 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x128141758 <col:25> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x128141700 <col:37> 'int' 1     |-BinaryOperator 0x128142870 <line:16:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x128141800 <col:2> 'int' lvalue Var 0x128141170 'ch' 'int'     | `-CallExpr 0x128142848 <col:7, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128141900 <col:7> 'int ()' Function 0x128141848 'le16_to_cpu' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x128142800 <col:19, col:30> '<dependent type>' contains-errors lvalue .channel     |     `-RecoveryExpr 0x1281419c8 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128142e38 <line:17:2, line:23:2> has_else     | |-BinaryOperator 0x1281429c0 <line:17:5, col:25> 'int' '&&'     | | |-ParenExpr 0x128142908 <col:5, col:12> 'int'     | | | `-BinaryOperator 0x1281428e8 <col:6, col:11> 'int' '>'     | | |   |-ImplicitCastExpr 0x1281428d0 <col:6> 'int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x128142890 <col:6> 'int' lvalue Var 0x128141170 'ch' 'int'     | | |   `-IntegerLiteral 0x1281428b0 <col:11> 'int' 0     | | `-ParenExpr 0x1281429a0 <col:17, col:25> 'int'     | |   `-BinaryOperator 0x128142980 <col:18, col:23> 'int' '<'     | |     |-ImplicitCastExpr 0x128142968 <col:18> 'int' <LValueToRValue>     | |     | `-DeclRefExpr 0x128142928 <col:18> 'int' lvalue Var 0x128141170 'ch' 'int'     | |     `-IntegerLiteral 0x128142948 <col:23> 'int' 15     | |-CompoundStmt 0x128142cb8 <col:28, line:20:2>     | | |-BinaryOperator 0x128142bf8 <line:18:3, col:47> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x128142a18 <col:3, col:9> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x1281429e0 <col:3> 'struct iw_freq *' lvalue ParmVar 0x128140bf8 'fwrq' 'struct iw_freq *'     | | | `-BinaryOperator 0x128142bd8 <col:13, col:47> 'int' '*'     | | |   |-CallExpr 0x128142b78 <col:13, col:43> 'int'     | | |   | |-ImplicitCastExpr 0x128142b60 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | |   | | `-DeclRefExpr 0x128142b20 <col:13> 'int ()' Function 0x128142a68 'ieee80211_dsss_chan_to_freq' 'int ()'     | | |   | `-ImplicitCastExpr 0x128142ba0 <col:41> 'int' <LValueToRValue>     | | |   |   `-DeclRefExpr 0x128142b40 <col:41> 'int' lvalue Var 0x128141170 'ch' 'int'     | | |   `-IntegerLiteral 0x128142bb8 <col:47> 'int' 100000     | | `-BinaryOperator 0x128142c98 <line:19:3, col:13> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x128142c50 <col:3, col:9> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x128142c18 <col:3> 'struct iw_freq *' lvalue ParmVar 0x128140bf8 'fwrq' 'struct iw_freq *'     | |   `-IntegerLiteral 0x128142c78 <col:13> 'int' 1     | `-CompoundStmt 0x128142e18 <line:20:9, line:23:2>     |   |-BinaryOperator 0x128142d58 <line:21:3, col:13> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x128142d10 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x128142cd8 <col:3> 'struct iw_freq *' lvalue ParmVar 0x128140bf8 'fwrq' 'struct iw_freq *'     |   | `-DeclRefExpr 0x128142d38 <col:13> 'int' lvalue Var 0x128141170 'ch' 'int'     |   `-BinaryOperator 0x128142df8 <line:22:3, col:13> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x128142db0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x128142d78 <col:3> 'struct iw_freq *' lvalue ParmVar 0x128140bf8 'fwrq' 'struct iw_freq *'     |     `-IntegerLiteral 0x128142dd8 <col:13> 'int' 0     `-ReturnStmt 0x128142e88 <line:25:2, col:9>       `-IntegerLiteral 0x128142e68 <col:9> 'int' 0 ","20192":"`-FunctionDecl 0x1439029f0  line:1:13 invalid virtio_blk_handle_read 'void (int *)' static   |-ParmVarDecl 0x143902928 <col:36, col:52> col:52 invalid req 'int *'   `-CompoundStmt 0x141811270 <line:2:1, line:19:1>     |-IfStmt 0x141810c90 <line:8:5, line:11:5>     | |-BinaryOperator 0x143902e28 <line:8:9, col:28> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x143902e08 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x143902da0 <col:18, col:28> '<dependent type>' contains-errors lvalue ->sector_mask     | |   `-CXXDependentScopeMemberExpr 0x143902d58 <col:18, col:23> '<dependent type>' contains-errors lvalue ->dev     | |     `-RecoveryExpr 0x143902d38 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141810c70 <col:41, line:11:5>     |   |-CallExpr 0x141810c30 <line:9:9, col:41> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x143902f28 <col:9> 'int ()' Function 0x143902e70 'virtio_blk_rw_complete' 'int ()'     |   | |-RecoveryExpr 0x143902f48 <col:32> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x141810c18 <col:37, col:38> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x141810c00 <col:38> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x143902fe0 <col:38> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x141810c60 <line:10:9>     `-IfStmt 0x141811250 <line:16:5, line:18:5>       |-UnaryOperator 0x1418110e8 <line:16:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x1418110d0 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x1418110b0 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x141811238 <col:15, line:18:5>         `-CallExpr 0x141811208 <line:17:9, col:41> '<dependent type>' contains-errors           |-DeclRefExpr 0x141811100 <col:9> 'int ()' Function 0x143902e70 'virtio_blk_rw_complete' 'int ()'           |-RecoveryExpr 0x141811120 <col:32> '<dependent type>' contains-errors lvalue           `-UnaryOperator 0x1418111f0 <col:37, col:38> '<dependent type>' contains-errors prefix '-' cannot overflow             `-ImplicitCastExpr 0x1418111d8 <col:38> '<dependent type>' contains-errors <LValueToRValue>               `-RecoveryExpr 0x1418111b8 <col:38> '<dependent type>' contains-errors lvalue ","20049":"`-FunctionDecl 0x11e128750  line:1:13 fanout_release 'void (struct sock *)' static   |-ParmVarDecl 0x11e128648 <col:28, col:41> col:41 used sk 'struct sock *'   `-CompoundStmt 0x1280087c8 <line:2:1, line:22:1>     |-DeclStmt 0x11e140e48 <line:3:2, col:37>     | |-RecordDecl 0x11e140a48 <col:2, col:9> col:9 struct packet_sock     | `-VarDecl 0x11e140bb8 <col:2, col:36> col:22 used po 'struct packet_sock *' cinit     |   `-ImplicitCastExpr 0x11e140e18 <col:27, col:36> 'struct packet_sock *' <IntegralToPointer>     |     `-CallExpr 0x11e140dd8 <col:27, col:36> 'int'     |       |-ImplicitCastExpr 0x11e140dc0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x11e140d50 <col:27> 'int ()' Function 0x11e140c98 'pkt_sk' 'int ()'     |       `-ImplicitCastExpr 0x11e140e00 <col:34> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x11e140d70 <col:34> 'struct sock *' lvalue ParmVar 0x11e128648 'sk' 'struct sock *'     |-DeclStmt 0x11e141048 <line:4:2, col:25>     | |-RecordDecl 0x11e140e60 <col:2, col:9> col:9 struct packet_fanout     | `-VarDecl 0x11e140fc8 <col:2, col:24> col:24 used f 'struct packet_fanout *'     |-CallExpr 0x11e1411f0 <line:6:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e141140 <col:2> 'int ()' Function 0x11e141088 'mutex_lock' 'int ()'     | `-UnaryOperator 0x11e1411d8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11e1411b8 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11e141298 <line:7:2, col:10> 'struct packet_fanout *' contains-errors '='     | |-DeclRefExpr 0x11e141218 <col:2> 'struct packet_fanout *' lvalue Var 0x11e140fc8 'f' 'struct packet_fanout *'     | `-RecoveryExpr 0x11e141270 <col:6, col:10> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x11e141238 <col:6> 'struct packet_sock *' lvalue Var 0x11e140bb8 'po' 'struct packet_sock *'     `-IfStmt 0x1280086a8 <line:8:2, line:20:2>       |-ImplicitCastExpr 0x11e1412d8 <line:8:6> 'struct packet_fanout *' <LValueToRValue>       | `-DeclRefExpr 0x11e1412b8 <col:6> 'struct packet_fanout *' lvalue Var 0x11e140fc8 'f' 'struct packet_fanout *'       `-CompoundStmt 0x128008680 <col:9, line:20:2>         |-BinaryOperator 0x11e1413a8 <line:9:3, col:16> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x11e141328 <col:3, col:7> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x11e1412f0 <col:3> 'struct packet_sock *' lvalue Var 0x11e140bb8 'po' 'struct packet_sock *'         | `-RecoveryExpr 0x11e141388 <col:16> '<dependent type>' contains-errors lvalue         |-IfStmt 0x1280083e8 <line:11:3, line:16:3>         | |-CallExpr 0x11e141540 <line:11:7, col:37> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x11e1414a8 <col:7> 'int ()' Function 0x11e1413f0 'atomic_dec_and_test' 'int ()'         | | `-UnaryOperator 0x11e141528 <col:27, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         | |   `-RecoveryExpr 0x11e141500 <col:28, col:31> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x11e1414c8 <col:28> 'struct packet_fanout *' lvalue Var 0x11e140fc8 'f' 'struct packet_fanout *'         | `-CompoundStmt 0x1280083b8 <col:40, line:16:3>         |   |-CallExpr 0x11e1416e0 <line:12:4, col:21> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x11e141648 <col:4> 'int ()' Function 0x11e141590 'list_del' 'int ()'         |   | `-UnaryOperator 0x11e1416c8 <col:13, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-RecoveryExpr 0x11e1416a0 <col:14, col:17> '<dependent type>' contains-errors lvalue         |   |     `-DeclRefExpr 0x11e141668 <col:14> 'struct packet_fanout *' lvalue Var 0x11e140fc8 'f' 'struct packet_fanout *'         |   |-CallExpr 0x11e141880 <line:13:4, col:33> '<dependent type>' contains-errors         |   | |-DeclRefExpr 0x11e1417e8 <col:4> 'int ()' Function 0x11e141730 'dev_remove_pack' 'int ()'         |   | `-UnaryOperator 0x11e141868 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-RecoveryExpr 0x11e141840 <col:21, col:24> '<dependent type>' contains-errors lvalue         |   |     `-DeclRefExpr 0x11e141808 <col:21> 'struct packet_fanout *' lvalue Var 0x11e140fc8 'f' 'struct packet_fanout *'         |   |-CallExpr 0x128008200 <line:14:4, col:25> 'int'         |   | |-ImplicitCastExpr 0x11e1419c8 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   | | `-DeclRefExpr 0x11e141988 <col:4> 'int ()' Function 0x11e1418d0 'fanout_release_data' 'int ()'         |   | `-ImplicitCastExpr 0x128008228 <col:24> 'struct packet_fanout *' <LValueToRValue>         |   |   `-DeclRefExpr 0x11e1419a8 <col:24> 'struct packet_fanout *' lvalue Var 0x11e140fc8 'f' 'struct packet_fanout *'         |   `-CallExpr 0x128008378 <line:15:4, col:11> 'int'         |     |-ImplicitCastExpr 0x128008360 <col:4> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x128008320 <col:4> 'int ()' Function 0x128008268 'kfree' 'int ()'         |     `-ImplicitCastExpr 0x1280083a0 <col:10> 'struct packet_fanout *' <LValueToRValue>         |       `-DeclRefExpr 0x128008340 <col:10> 'struct packet_fanout *' lvalue Var 0x11e140fc8 'f' 'struct packet_fanout *'         `-IfStmt 0x128008660 <line:18:3, line:19:31>           |-RecoveryExpr 0x128008440 <line:18:7, col:11> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x128008408 <col:7> 'struct packet_sock *' lvalue Var 0x11e140bb8 'po' 'struct packet_sock *'           `-CallExpr 0x128008630 <line:19:4, col:31> '<dependent type>' contains-errors             |-DeclRefExpr 0x128008548 <col:4> 'int ()' Function 0x128008490 'kfree_rcu' 'int ()'             |-RecoveryExpr 0x1280085a0 <col:14, col:18> '<dependent type>' contains-errors lvalue             | `-DeclRefExpr 0x128008568 <col:14> 'struct packet_sock *' lvalue Var 0x11e140bb8 'po' 'struct packet_sock *'             `-RecoveryExpr 0x128008610 <col:28> '<dependent type>' contains-errors lvalue ","20063":"`-FunctionDecl 0x132928288  line:1:1 invalid printConfig 'int (int *, char *)'   |-ParmVarDecl 0x132928128 <col:13, col:19> col:19 invalid out 'int *'   |-ParmVarDecl 0x1329281a8 <col:24, col:30> col:30 dummy 'char *'   `-CompoundStmt 0x133008e70 <line:2:1, line:14:1>     |-CallExpr 0x132928568 <line:3:5, line:10:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1329284a0 <line:3:5> 'int ()' Function 0x1329283e8 'fprintf' 'int ()'     | |-RecoveryExpr 0x1329284c0 <col:13> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x132928520 <line:4:13, line:10:13> 'char[22]' lvalue \"STRSTRSTRSTRSTRSTRSTR\"     |-CallExpr 0x1329286d8 <line:11:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132928678 <col:5> 'int ()' Function 0x1329285c0 'printConfigVariables' 'int ()'     | |-RecoveryExpr 0x132928698 <col:26> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1329286b8 <col:31> 'int' 1     |-CallExpr 0x1329287b0 <line:12:5, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132928708 <col:5> 'int ()' Function 0x1329283e8 'fprintf' 'int ()'     | |-RecoveryExpr 0x132928728 <col:13> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x132928790 <col:18> 'char[4]' lvalue \"STR\"     `-CallExpr 0x133008e40 <line:13:5, col:23> '<dependent type>' contains-errors       |-DeclRefExpr 0x1329287e0 <col:5> 'int ()' Function 0x1329283e8 'fprintf' 'int ()'       |-RecoveryExpr 0x133008e00 <col:13> '<dependent type>' contains-errors lvalue       `-StringLiteral 0x133008e20 <col:18> 'char[4]' lvalue \"STR\" ","19625":"`-FunctionDecl 0x152140b48  line:1:12 __dwc3_gadget_ep_queue 'int (struct dwc3_ep *, struct dwc3_request *)' static   |-ParmVarDecl 0x152128648 <col:35, col:51> col:51 used dep 'struct dwc3_ep *'   |-ParmVarDecl 0x152140a28 <col:56, col:77> col:77 used req 'struct dwc3_request *'   `-CompoundStmt 0x1521440c8 <line:2:1, line:51:1>     |-DeclStmt 0x152140e98 <line:3:2, col:30>     | |-RecordDecl 0x152140c48 <col:2, col:9> col:9 struct dwc3     | `-VarDecl 0x152140db8 <col:2, col:27> col:16 used dwc 'struct dwc3 *' cinit     |   `-RecoveryExpr 0x152140e58 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152140e20 <col:22> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *'     |-IfStmt 0x1521412f0 <line:5:2, line:9:2>     | |-UnaryOperator 0x152140f70 <line:5:6, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x152140f58 <col:7, col:21> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x152140f10 <col:7, col:21> '<dependent type>' contains-errors lvalue .desc     | |     `-RecoveryExpr 0x152140ee8 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x152140eb0 <col:7> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *'     | `-CompoundStmt 0x1521412d0 <col:27, line:9:2>     |   |-CallExpr 0x1521411f0 <line:6:3, line:7:14> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1521410b0 <line:6:3> 'int ()' Function 0x152140ff8 'dev_err' 'int ()'     |   | |-RecoveryExpr 0x152141108 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1521410d0 <col:11> 'struct dwc3 *' contains-errors lvalue Var 0x152140db8 'dwc' 'struct dwc3 *'     |   | |-StringLiteral 0x152141170 <col:21> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x1521411c8 <line:7:5, col:10> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x152141190 <col:5> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *'     |   `-ReturnStmt 0x1521412c0 <line:8:3, col:11>     |     `-UnaryOperator 0x1521412a8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x152141290 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x152141270 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1521416d8 <line:11:2, line:13:11>     | |-CallExpr 0x1521415f0 <line:11:6, line:12:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1521413f0 <line:11:6> 'int ()' Function 0x152141338 'WARN' 'int ()'     | | |-BinaryOperator 0x152141490 <col:11, col:23> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x152141448 <col:11, col:16> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x152141410 <col:11> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     | | | `-DeclRefExpr 0x152141470 <col:23> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *'     | | |-StringLiteral 0x1521414b0 <col:28> 'char[4]' lvalue \"STR\"     | | |-UnaryOperator 0x152141530 <line:12:5, col:11> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x152141508 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1521414d0 <col:6> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     | | `-CXXDependentScopeMemberExpr 0x1521415a8 <col:20, col:30> '<dependent type>' contains-errors lvalue ->name     | |   `-RecoveryExpr 0x152141580 <col:20, col:25> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x152141548 <col:20> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     | `-ReturnStmt 0x1521416c8 <line:13:3, col:11>     |   `-UnaryOperator 0x1521416b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x152141698 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152141678 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152141858 <line:15:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1521417d8 <col:2> 'int ()' Function 0x152141720 'pm_runtime_get' 'int ()'     | `-RecoveryExpr 0x152141830 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1521417f8 <col:17> 'struct dwc3 *' contains-errors lvalue Var 0x152140db8 'dwc' 'struct dwc3 *'     |-BinaryOperator 0x152141948 <line:17:2, col:24> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1521418e0 <col:2, col:15> '<dependent type>' contains-errors lvalue .actual     | | `-RecoveryExpr 0x1521418b8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152141880 <col:2> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     | `-IntegerLiteral 0x152141928 <col:24> 'int' 0     |-BinaryOperator 0x152142f00 <line:18:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x152142e00 <col:2, col:15> '<dependent type>' contains-errors lvalue .status     | | `-RecoveryExpr 0x1521419a0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152141968 <col:2> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     | `-UnaryOperator 0x152142ee8 <col:24, col:25> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x152142ed0 <col:25> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x152142eb0 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152142fe0 <line:19:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x152142f58 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x152142f20 <col:2> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     | `-RecoveryExpr 0x152142fb8 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x152142f80 <col:20> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *'     |-BinaryOperator 0x1521430c0 <line:20:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x152143038 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x152143000 <col:2> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     | `-RecoveryExpr 0x152143098 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x152143060 <col:16> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *'     |-CallExpr 0x152143248 <line:22:2, col:25> 'int'     | |-ImplicitCastExpr 0x152143230 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1521431c0 <col:2> 'int ()' Function 0x152143108 'trace_dwc3_ep_queue' 'int ()'     | `-ImplicitCastExpr 0x152143270 <col:22> 'struct dwc3_request *' <LValueToRValue>     |   `-DeclRefExpr 0x1521431e0 <col:22> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     |-CallExpr 0x152143478 <line:24:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152143368 <col:2> 'int ()' Function 0x1521432b0 'list_add_tail' 'int ()'     | |-UnaryOperator 0x1521433e8 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1521433c0 <col:17, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x152143388 <col:17> 'struct dwc3_request *' lvalue ParmVar 0x152140a28 'req' 'struct dwc3_request *'     | `-UnaryOperator 0x152143460 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x152143438 <col:29, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152143400 <col:29> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *'     |-IfStmt 0x152143f00 <line:27:2, line:47:2>     | |-CallExpr 0x152143650 <line:27:6, col:47> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x152143588 <col:6> 'int ()' Function 0x1521434d0 'usb_endpoint_xfer_isoc' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x152143608 <col:29, col:43> '<dependent type>' contains-errors lvalue .desc     | |   `-RecoveryExpr 0x1521435e0 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1521435a8 <col:29> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *'     | `-CompoundStmt 0x152143ed8 <col:50, line:47:2>     |   |-IfStmt 0x152143d10 <line:28:3, line:40:3>     |   | |-RecoveryExpr 0x1521436d8 <line:28:7, col:44> '_Bool' contains-errors     |   | `-CompoundStmt 0x152143cf0 <col:47, line:40:3>     |   |   |-IfStmt 0x152143c90 <line:29:4, line:38:4> has_else     |   |   | |-RecoveryExpr 0x152143758 <line:29:8, col:21> '_Bool' contains-errors     |   |   | |-CompoundStmt 0x152143958 <col:47, line:32:4>     |   |   | `-CompoundStmt 0x152143c80 <col:11, line:38:4>     |   |   `-ReturnStmt 0x152143ce0 <line:39:4, col:11>     |   |     `-IntegerLiteral 0x152143cc0 <col:11> 'int' 0     |   |-IfStmt 0x152143e88 <line:42:3, line:44:9>     |   | |-RecoveryExpr 0x152143e00 <line:42:7, line:43:41> '_Bool' contains-errors     |   | `-GotoStmt 0x152143e70 <line:44:4, col:9> 'out' 0x152143e20     |   `-ReturnStmt 0x152143ec8 <line:46:3, col:10>     |     `-IntegerLiteral 0x152143ea8 <col:10> 'int' 0     `-LabelStmt 0x1521440a8 <line:49:1, line:50:40> 'out'       `-ReturnStmt 0x152144098 <col:2, col:40>         `-CallExpr 0x152144058 <col:9, col:40> 'int'           |-ImplicitCastExpr 0x152144040 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x152144000 <col:9> 'int ()' Function 0x152143f48 '__dwc3_gadget_kick_transfer' 'int ()'           `-ImplicitCastExpr 0x152144080 <col:37> 'struct dwc3_ep *' <LValueToRValue>             `-DeclRefExpr 0x152144020 <col:37> 'struct dwc3_ep *' lvalue ParmVar 0x152128648 'dep' 'struct dwc3_ep *' ","20094":"`-FunctionDecl 0x14f00dda8  line:1:12 hns_gmac_get_sset_count 'int (int)' static   |-ParmVarDecl 0x14f00dcd8 <col:36, col:40> col:40 used stringset 'int'   `-CompoundStmt 0x14f00e168 <line:2:1, line:7:1>     |-IfStmt 0x14f00e118 <line:3:2, line:4:40>     | |-BinaryOperator 0x14f00df30 <line:3:6, col:19> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14f00dea0 <col:6> 'int' lvalue ParmVar 0x14f00dcd8 'stringset' 'int'     | | `-RecoveryExpr 0x14f00df10 <col:19> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14f00e108 <line:4:3, col:40>     |   `-CallExpr 0x14f00e0e0 <col:10, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14f00e060 <col:10> 'int ()' Function 0x14f00dfa8 'ARRAY_SIZE' 'int ()'     |     `-RecoveryExpr 0x14f00e0c0 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14f00e158 <line:6:2, col:9>       `-IntegerLiteral 0x14f00e138 <col:9> 'int' 0 ","19506":"`-FunctionDecl 0x12e128198  line:1:5 referenced nf_ct_frag6_init 'int (void)'   `-CompoundStmt 0x12e143118 <line:2:1, line:21:1>     |-DeclStmt 0x12e128328 <line:3:2, col:13>     | `-VarDecl 0x12e1282a0 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x12e128308 <col:12> 'int' 0     |-BinaryOperator 0x12e142ba8 <line:12:2, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x12e142978 <col:2> 'int' lvalue Var 0x12e1282a0 'ret' 'int'     | `-CallExpr 0x12e142b80 <col:8, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e142ab0 <col:8> 'int ()' Function 0x12e1429f8 'inet_frags_init' 'int ()'     |   `-UnaryOperator 0x12e142b68 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e142b48 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e142c68 <line:13:2, line:14:8>     | |-ImplicitCastExpr 0x12e142be8 <line:13:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12e142bc8 <col:6> 'int' lvalue Var 0x12e1282a0 'ret' 'int'     | `-GotoStmt 0x12e142c50 <line:14:3, col:8> 'out' 0x12e142c00     |-BinaryOperator 0x12e142e80 <line:15:2, col:45> 'int' contains-errors '='     | |-DeclRefExpr 0x12e142c88 <col:2> 'int' lvalue Var 0x12e1282a0 'ret' 'int'     | `-CallExpr 0x12e142e58 <col:8, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e142d88 <col:8> 'int ()' Function 0x12e142cd0 'register_pernet_subsys' 'int ()'     |   `-UnaryOperator 0x12e142e40 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e142e20 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e143090 <line:16:2, line:17:28>     | |-ImplicitCastExpr 0x12e142ec0 <line:16:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12e142ea0 <col:6> 'int' lvalue Var 0x12e1282a0 'ret' 'int'     | `-CallExpr 0x12e143068 <line:17:3, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e142fb8 <col:3> 'int ()' Function 0x12e142f00 'inet_frags_fini' 'int ()'     |   `-UnaryOperator 0x12e143050 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12e143030 <col:20> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x12e1430f8 <line:19:1, line:20:9> 'out'       `-ReturnStmt 0x12e1430e8 <col:2, col:9>         `-ImplicitCastExpr 0x12e1430d0 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x12e1430b0 <col:9> 'int' lvalue Var 0x12e1282a0 'ret' 'int' ","20145":"`-FunctionDecl 0x141846540  line:1:13 __remove_discard_cmd 'void (struct f2fs_sb_info *, struct discard_cmd *)' static   |-ParmVarDecl 0x14181f848 <col:34, col:55> col:55 used sbi 'struct f2fs_sb_info *'   |-ParmVarDecl 0x141846428 <line:2:8, col:28> col:28 used dc 'struct discard_cmd *'   `-CompoundStmt 0x141848878 <line:3:1, line:16:1>     |-DeclStmt 0x141846a48 <line:4:2, col:55>     | |-RecordDecl 0x141846640 <col:2, col:9> col:9 struct discard_cmd_control     | `-VarDecl 0x1418467a8 <col:2, col:47> col:30 used dcc 'struct discard_cmd_control *' cinit     |   `-RecoveryExpr 0x141846a08 <col:36, col:47> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x1418469c8 <col:36, col:44> 'int'     |       |-ImplicitCastExpr 0x1418469b0 <col:36> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x141846940 <col:36> 'int ()' Function 0x141846888 'SM_I' 'int ()'     |       `-ImplicitCastExpr 0x1418469f0 <col:41> 'struct f2fs_sb_info *' <LValueToRValue>     |         `-DeclRefExpr 0x141846960 <col:41> 'struct f2fs_sb_info *' lvalue ParmVar 0x14181f848 'sbi' 'struct f2fs_sb_info *'     |-CallExpr 0x141846be0 <line:6:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141846b40 <col:2> 'int ()' Function 0x141846a88 'f2fs_bug_on' 'int ()'     | |-DeclRefExpr 0x141846b60 <col:14> 'struct f2fs_sb_info *' lvalue ParmVar 0x14181f848 'sbi' 'struct f2fs_sb_info *'     | `-RecoveryExpr 0x141846bb8 <col:19, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x141846b80 <col:19> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *'     |-IfStmt 0x141846de8 <line:8:2, line:9:15>     | |-BinaryOperator 0x141846d28 <line:8:6, col:20> 'int' contains-errors '=='     | | |-RecoveryExpr 0x141846c48 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x141846c10 <col:6> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *'     | | `-UnaryOperator 0x141846d10 <col:19, col:20> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x141846cf8 <col:20> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x141846cd8 <col:20> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x141846dc8 <line:9:3, col:15> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x141846d80 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x141846d48 <col:3> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *'     |   `-IntegerLiteral 0x141846da8 <col:15> 'int' 0     |-IfStmt 0x141847290 <line:11:2, line:14:45>     | |-RecoveryExpr 0x141846e40 <line:11:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x141846e08 <col:6> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *'     | `-CallExpr 0x141847238 <line:12:3, line:14:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x141846f48 <line:12:3> 'int ()' Function 0x141846e90 'f2fs_msg' 'int ()'     |   |-RecoveryExpr 0x141846fa0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x141846f68 <col:12> 'struct f2fs_sb_info *' lvalue ParmVar 0x14181f848 'sbi' 'struct f2fs_sb_info *'     |   |-RecoveryExpr 0x141847218 <col:21> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x141847020 <line:13:4> 'char[4]' lvalue \"STR\"     |   |-RecoveryExpr 0x141847078 <line:14:4, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x141847040 <col:4> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *'     |   |-RecoveryExpr 0x1418470d8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1418470a0 <col:16> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *'     |   |-RecoveryExpr 0x141847138 <col:27, col:31> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x141847100 <col:27> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *'     |   `-RecoveryExpr 0x141847198 <col:36, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x141847160 <col:36> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *'     `-CallExpr 0x141848818 <line:15:2, col:30> 'int' contains-errors       |-ImplicitCastExpr 0x141848800 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x141847390 <col:2> 'int ()' Function 0x1418472d8 '__detach_discard_cmd' 'int ()'       |-ImplicitCastExpr 0x141848848 <col:23> 'struct discard_cmd_control *' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x1418473b0 <col:23> 'struct discard_cmd_control *' contains-errors lvalue Var 0x1418467a8 'dcc' 'struct discard_cmd_control *'       `-ImplicitCastExpr 0x141848860 <col:28> 'struct discard_cmd *' <LValueToRValue>         `-DeclRefExpr 0x1418473d0 <col:28> 'struct discard_cmd *' lvalue ParmVar 0x141846428 'dc' 'struct discard_cmd *' ","19187":"`-FunctionDecl 0x14a8285c8  col:35 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x14a8286c8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x14a828670 <<invalid sloc>> Implicit 873 ","20092":"`-FunctionDecl 0x122922750  line:1:6 __cleanup_signal 'void (struct signal_struct *)'   |-ParmVarDecl 0x122922648 <col:23, col:45> col:45 used sig 'struct signal_struct *'   `-CompoundStmt 0x12293b0f0 <line:2:1, line:7:1>     |-CallExpr 0x12293abf8 <line:3:2, col:31> 'int'     | |-ImplicitCastExpr 0x12293abe0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12293ab70 <col:2> 'int ()' Function 0x12293aab8 'thread_group_cputime_free' 'int ()'     | `-ImplicitCastExpr 0x12293ac20 <col:28> 'struct signal_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x12293ab90 <col:28> 'struct signal_struct *' lvalue ParmVar 0x122922648 'sig' 'struct signal_struct *'     |-CallExpr 0x12293ad70 <line:4:2, col:28> 'int'     | |-ImplicitCastExpr 0x12293ad58 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12293ad18 <col:2> 'int ()' Function 0x12293ac60 'exit_thread_group_keys' 'int ()'     | `-ImplicitCastExpr 0x12293ad98 <col:25> 'struct signal_struct *' <LValueToRValue>     |   `-DeclRefExpr 0x12293ad38 <col:25> 'struct signal_struct *' lvalue ParmVar 0x122922648 'sig' 'struct signal_struct *'     |-CallExpr 0x12293af10 <line:5:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12293ae90 <col:2> 'int ()' Function 0x12293add8 'tty_kref_put' 'int ()'     | `-RecoveryExpr 0x12293aee8 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12293aeb0 <col:15> 'struct signal_struct *' lvalue ParmVar 0x122922648 'sig' 'struct signal_struct *'     `-CallExpr 0x12293b0c0 <line:6:2, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x12293b018 <col:2> 'int ()' Function 0x12293af60 'kmem_cache_free' 'int ()'       |-RecoveryExpr 0x12293b0a0 <col:18> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x12293b050 <col:33> 'struct signal_struct *' lvalue ParmVar 0x122922648 'sig' 'struct signal_struct *' ","20098":"`-FunctionDecl 0x13800dda0  line:1:6 snmp_mib_free 'void (int)'   |-ParmVarDecl 0x13800dcd0 <col:20, col:25> col:25 __percpu 'int'   `-CompoundStmt 0x13800e2e0 <line:2:1, line:7:1>     `-CallExpr 0x13800e0b8 <line:3:2, col:20> '<dependent type>' contains-errors       |-DeclRefExpr 0x13800dfc0 <col:2> 'int ()' Function 0x13800df08 'BUG_ON' 'int ()'       `-BinaryOperator 0x13800e098 <col:9, col:16> 'int' contains-errors '=='         |-RecoveryExpr 0x13800e058 <col:9> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13800e078 <col:16> '<dependent type>' contains-errors lvalue ","19648":"`-FunctionDecl 0x154128318  line:1:5 invalid php_wddx_deserialize_ex 'int (char *, int, int *)'   |-ParmVarDecl 0x1541280d8 <col:29, col:35> col:35 used value 'char *'   |-ParmVarDecl 0x154128158 <col:42, col:46> col:46 used vallen 'int'   |-ParmVarDecl 0x154128228 <col:54, col:60> col:60 invalid return_value 'int *'   `-CompoundStmt 0x1541425a8 <line:2:1, line:31:1>     |-DeclStmt 0x154128470 <line:6:2, col:12>     | `-VarDecl 0x154128408 <col:2, col:6> col:6 used retval 'int'     |-CallExpr 0x154128690 <line:8:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1541285e0 <col:2> 'int ()' Function 0x154128528 'wddx_stack_init' 'int ()'     | `-UnaryOperator 0x154128678 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x154128658 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x154141a78 <line:11:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154141988 <col:2> 'int ()' Function 0x1541418d0 'XML_SetUserData' 'int ()'     | |-RecoveryExpr 0x154141a20 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x154141a60 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x154141a40 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x154141c88 <line:12:2, col:75> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154141b88 <col:2> 'int ()' Function 0x154141ad0 'XML_SetElementHandler' 'int ()'     | |-RecoveryExpr 0x154141c28 <col:24> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x154141c48 <col:32> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x154141c68 <col:55> '<dependent type>' contains-errors lvalue     |-CallExpr 0x154141e60 <line:13:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154141da0 <col:2> 'int ()' Function 0x154141ce8 'XML_SetCharacterDataHandler' 'int ()'     | |-RecoveryExpr 0x154141e20 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x154141e40 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154142430 <line:19:2, line:26:2> has_else     | |-RecoveryExpr 0x154142110 <line:19:6, col:19> '_Bool' contains-errors     | |-CompoundStmt 0x1541423e8 <col:22, line:24:2>     | | `-CallExpr 0x1541423a0 <line:22:3, col:30> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x154142360 <col:3> 'int ()' Function 0x1541422a8 'zval_copy_ctor' 'int ()'     | |   `-RecoveryExpr 0x154142380 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x154142420 <line:24:9, line:26:2>     `-ReturnStmt 0x154142598 <line:30:2, col:9>       `-ImplicitCastExpr 0x154142580 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x154142560 <col:9> 'int' lvalue Var 0x154128408 'retval' 'int' ","19977":"`-FunctionDecl 0x137128750  line:1:6 btrfs_put_block_group 'void (struct btrfs_block_group *)'   |-ParmVarDecl 0x137128648 <col:28, col:54> col:54 used cache 'struct btrfs_block_group *'   `-CompoundStmt 0x137141808 <line:2:1, line:17:1>     `-IfStmt 0x1371417e8 <line:3:2, line:16:2>       |-CallExpr 0x137140c08 <line:3:6, col:40> '<dependent type>' contains-errors       | |-DeclRefExpr 0x137140b70 <col:6> 'int ()' Function 0x137140ab8 'refcount_dec_and_test' 'int ()'       | `-UnaryOperator 0x137140bf0 <col:28, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x137140bc8 <col:29, col:36> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x137140b90 <col:29> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *'       `-CompoundStmt 0x1371417a8 <col:43, line:16:2>         |-CallExpr 0x137140dd0 <line:4:3, col:28> '<dependent type>' contains-errors         | |-DeclRefExpr 0x137140d10 <col:3> 'int ()' Function 0x137140c58 'WARN_ON' 'int ()'         | `-BinaryOperator 0x137140db0 <col:11, col:27> 'int' contains-errors '>'         |   |-RecoveryExpr 0x137140d68 <col:11, col:18> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x137140d30 <col:11> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *'         |   `-IntegerLiteral 0x137140d90 <col:27> 'int' 0         |-CallExpr 0x137140eb8 <line:5:3, col:30> '<dependent type>' contains-errors         | |-DeclRefExpr 0x137140df8 <col:3> 'int ()' Function 0x137140c58 'WARN_ON' 'int ()'         | `-BinaryOperator 0x137140e98 <col:11, col:29> 'int' contains-errors '>'         |   |-RecoveryExpr 0x137140e50 <col:11, col:18> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x137140e18 <col:11> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *'         |   `-IntegerLiteral 0x137140e78 <col:29> 'int' 0         |-IfStmt 0x1371412f0 <line:8:3, line:10:14>         | |-CallExpr 0x1371410b8 <line:8:7, col:48> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x137140ee0 <col:7> 'int ()' Function 0x137140c58 'WARN_ON' 'int ()'         | | `-UnaryOperator 0x1371410a0 <col:15, col:47> '<dependent type>' contains-errors prefix '!' cannot overflow         | |   `-CallExpr 0x137141078 <col:16, col:47> '<dependent type>' contains-errors         | |     |-DeclRefExpr 0x137140fe0 <col:16> 'int ()' Function 0x137140f28 'list_empty' 'int ()'         | |     `-UnaryOperator 0x137141060 <col:27, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         | |       `-RecoveryExpr 0x137141038 <col:28, col:35> '<dependent type>' contains-errors lvalue         | |         `-DeclRefExpr 0x137141000 <col:28> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *'         | `-CallExpr 0x1371412c0 <line:9:4, line:10:14> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1371411c0 <line:9:4> 'int ()' Function 0x137141108 'btrfs_discard_cancel_work' 'int ()'         |   |-UnaryOperator 0x137141288 <col:30, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | `-CXXDependentScopeMemberExpr 0x137141240 <col:31, col:47> '<dependent type>' contains-errors lvalue ->discard_ctl         |   |   `-RecoveryExpr 0x137141218 <col:31, col:38> '<dependent type>' contains-errors lvalue         |   |     `-DeclRefExpr 0x1371411e0 <col:31> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *'         |   `-DeclRefExpr 0x1371412a0 <line:10:9> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *'         |-CallExpr 0x137141530 <line:13:3, col:62> '<dependent type>' contains-errors         | |-DeclRefExpr 0x137141310 <col:3> 'int ()' Function 0x137140c58 'WARN_ON' 'int ()'         | `-UnaryOperator 0x137141518 <col:11, col:61> '<dependent type>' contains-errors prefix '!' cannot overflow         |   `-CallExpr 0x1371414f0 <col:12, col:61> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x137141410 <col:12> 'int ()' Function 0x137141358 'RB_EMPTY_ROOT' 'int ()'         |     `-UnaryOperator 0x1371414d8 <col:26, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow         |       `-CXXDependentScopeMemberExpr 0x137141490 <col:27, col:57> '<dependent type>' contains-errors lvalue .root         |         `-RecoveryExpr 0x137141468 <col:27, col:34> '<dependent type>' contains-errors lvalue         |           `-DeclRefExpr 0x137141430 <col:27> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *'         |-CallExpr 0x1371416b8 <line:14:3, col:30> '<dependent type>' contains-errors         | |-DeclRefExpr 0x137141638 <col:3> 'int ()' Function 0x137141580 'kfree' 'int ()'         | `-RecoveryExpr 0x137141690 <col:9, col:16> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x137141658 <col:9> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *'         `-CallExpr 0x137141768 <line:15:3, col:14> 'int'           |-ImplicitCastExpr 0x137141750 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x1371416e0 <col:3> 'int ()' Function 0x137141580 'kfree' 'int ()'           `-ImplicitCastExpr 0x137141790 <col:9> 'struct btrfs_block_group *' <LValueToRValue>             `-DeclRefExpr 0x137141700 <col:9> 'struct btrfs_block_group *' lvalue ParmVar 0x137128648 'cache' 'struct btrfs_block_group *' ","19670":"`-FunctionDecl 0x10500ddc8  line:1:2 invalid __releases 'int (int)'   |-ParmVarDecl 0x10500dcf0 <col:13, <invalid sloc>> col:15 invalid 'int'   `-CompoundStmt 0x1050284f0 <line:2:1, line:12:1>     |-DeclStmt 0x105027e88 <line:3:2, col:27>     | |-RecordDecl 0x10500de78 <col:2, col:9> col:9 struct rq     | `-VarDecl 0x10500dfe8 <col:2, col:26> col:13 used rq 'struct rq *' cinit     |   `-ImplicitCastExpr 0x10500e238 <col:18, col:26> 'struct rq *' <IntegralToPointer>     |     `-CallExpr 0x10500e218 <col:18, col:26> 'int'     |       `-ImplicitCastExpr 0x10500e200 <col:18> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x10500e1b0 <col:18> 'int ()' Function 0x10500e0f8 'this_rq' 'int ()'     |-CallExpr 0x105028028 <line:5:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x105027f80 <col:2> 'int ()' Function 0x105027ec8 'finish_task_switch' 'int ()'     | |-DeclRefExpr 0x105027fa0 <col:21> 'struct rq *' lvalue Var 0x10500dfe8 'rq' 'struct rq *'     | `-RecoveryExpr 0x105028008 <col:25> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1050284d0 <line:10:2, line:11:57>       |-CXXDependentScopeMemberExpr 0x1050280d8 <line:10:6, col:15> '<dependent type>' contains-errors lvalue ->set_child_tid       | `-RecoveryExpr 0x1050280b8 <col:6> '<dependent type>' contains-errors lvalue       `-CallExpr 0x1050284a0 <line:11:3, col:57> '<dependent type>' contains-errors         |-DeclRefExpr 0x105028200 <col:3> 'int ()' Function 0x105028148 'put_user' 'int ()'         |-CallExpr 0x105028410 <col:12, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x105028300 <col:12> 'int ()' Function 0x105028248 'task_pid_vnr' 'int ()'         | `-RecoveryExpr 0x1050283f0 <col:25> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x105028458 <col:35, col:44> '<dependent type>' contains-errors lvalue ->set_child_tid           `-RecoveryExpr 0x105028438 <col:35> '<dependent type>' contains-errors lvalue ","19711":"`-FunctionDecl 0x12e80e350  line:1:13 l2cap_chan_destroy 'void (struct kref *)' static   |-ParmVarDecl 0x12e80e248 <col:32, col:45> col:45 used kref 'struct kref *'   `-CompoundStmt 0x12e82b490 <line:2:1, line:12:1>     |-DeclStmt 0x12e82abc8 <line:3:2, col:71>     | |-RecordDecl 0x12e82a848 <col:2, col:9> col:9 struct l2cap_chan     | `-VarDecl 0x12e82a9b8 <col:2, col:21> col:21 used chan 'struct l2cap_chan *'     |-CallExpr 0x12e82ada8 <line:5:2, col:20> 'int'     | |-ImplicitCastExpr 0x12e82ad90 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12e82acc0 <col:2> 'int ()' Function 0x12e82ac08 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x12e82add8 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x12e82ad20 <col:9> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x12e82adf0 <col:16> 'struct l2cap_chan *' <LValueToRValue>     |   `-DeclRefExpr 0x12e82ad40 <col:16> 'struct l2cap_chan *' lvalue Var 0x12e82a9b8 'chan' 'struct l2cap_chan *'     |-CallExpr 0x12e82af98 <line:7:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e82aee8 <col:2> 'int ()' Function 0x12e82ae30 'write_lock' 'int ()'     | `-UnaryOperator 0x12e82af80 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e82af60 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e82b138 <line:8:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e82b0a0 <col:2> 'int ()' Function 0x12e82afe8 'list_del' 'int ()'     | `-UnaryOperator 0x12e82b120 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e82b0f8 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12e82b0c0 <col:12> 'struct l2cap_chan *' lvalue Var 0x12e82a9b8 'chan' 'struct l2cap_chan *'     |-CallExpr 0x12e82b2f0 <line:9:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e82b240 <col:2> 'int ()' Function 0x12e82b188 'write_unlock' 'int ()'     | `-UnaryOperator 0x12e82b2d8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12e82b2b8 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12e82b450 <line:11:2, col:12> 'int'       |-ImplicitCastExpr 0x12e82b438 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12e82b3f8 <col:2> 'int ()' Function 0x12e82b340 'kfree' 'int ()'       `-ImplicitCastExpr 0x12e82b478 <col:8> 'struct l2cap_chan *' <LValueToRValue>         `-DeclRefExpr 0x12e82b418 <col:8> 'struct l2cap_chan *' lvalue Var 0x12e82a9b8 'chan' 'struct l2cap_chan *' ","19622":"`-FunctionDecl 0x14e128288  line:1:1 invalid vte_sequence_handler_cl 'int (int *, int *)'   |-ParmVarDecl 0x14e128128 <col:26, col:39> col:39 referenced invalid terminal 'int *'   |-ParmVarDecl 0x14e1281a8 <col:49, col:62> col:62 invalid params 'int *'   `-CompoundStmt 0x14e1287a0 <line:2:1, line:8:1>     |-CallExpr 0x14e1284e0 <line:3:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e1284a0 <col:2> 'int ()' Function 0x14e1283e8 '_vte_terminal_clear_screen' 'int ()'     | `-RecoveryExpr 0x14e1284c0 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e128628 <line:4:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e1285e8 <col:2> 'int ()' Function 0x14e128530 '_vte_terminal_home_cursor' 'int ()'     | `-RecoveryExpr 0x14e128608 <col:29> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x14e128780 <line:7:2, col:37> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x14e1286e0 <col:2, col:17> '<dependent type>' contains-errors lvalue ->text_deleted_flag       | `-CXXDependentScopeMemberExpr 0x14e128698 <col:2, col:12> '<dependent type>' contains-errors lvalue ->pvt       |   `-RecoveryExpr 0x14e128670 <col:2> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x14e128650 <col:2> 'int *' lvalue ParmVar 0x14e128128 'terminal' 'int *'       `-RecoveryExpr 0x14e128760 <col:37> '<dependent type>' contains-errors lvalue ","19208":"`-FunctionDecl 0x11f80df18  line:1:1 invalid archive_add_ready_for_encryption_cb 'int (int *, int *, int)'   |-ParmVarDecl 0x11f80dd28 <col:38, col:52> col:52 invalid source_object 'int *'   |-ParmVarDecl 0x11f80dda8 <line:2:10, col:24> col:24 invalid result 'int *'   |-ParmVarDecl 0x11f80de28 <line:3:10, col:24> col:24 invalid user_data 'int'   `-CompoundStmt 0x128808e08 <line:4:1, line:24:1>     `-IfStmt 0x128808ae8 <line:9:2, line:12:2>       |-UnaryOperator 0x128808888 <line:9:6, col:79> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x128808850 <col:8, col:79> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x11f80e210 <col:8> 'int ()' Function 0x11f80e158 'fr_archive_operation_finish' 'int ()'       |   |-CallExpr 0x11f80e350 <col:37, col:62> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x11f80e310 <col:37> 'int ()' Function 0x11f80e258 'FR_ARCHIVE' 'int ()'       |   | `-RecoveryExpr 0x11f80e330 <col:49> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x11f80e378 <col:65> '<dependent type>' contains-errors lvalue       |   `-UnaryOperator 0x128808838 <col:73, col:74> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x128808818 <col:74> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x128808ac8 <col:82, line:12:2>         |-CallExpr 0x128808a80 <line:10:3, col:87> '<dependent type>' contains-errors         | |-DeclRefExpr 0x128808980 <col:3> 'int ()' Function 0x1288088c8 '_encrypt_operation_completed_with_error' 'int ()'         | |-RecoveryExpr 0x128808a20 <col:44> '<dependent type>' contains-errors lvalue         | |-RecoveryExpr 0x128808a40 <col:52> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x128808a60 <col:82> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x128808ab8 <line:11:3> ","19766":"`-FunctionDecl 0x13d80a6c8  col:9 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x13d80a7c8 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13d80a830 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13d80a898 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13d80a770 <<invalid sloc>> Implicit 888 ","20088":"`-FunctionDecl 0x1581418d8  line:1:14 invalid softnet_seq_next 'void *(struct seq_file *, void *, int *)' static   |-ParmVarDecl 0x158128648 <col:31, col:48> col:48 seq 'struct seq_file *'   |-ParmVarDecl 0x1581286c8 <col:53, col:59> col:59 v 'void *'   |-ParmVarDecl 0x158128798 <col:62, col:70> col:70 invalid pos 'int *'   `-CompoundStmt 0x158141bd8 <line:2:1, line:5:1>     |-UnaryOperator 0x1581419e8 <line:3:2, col:5> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-UnaryOperator 0x1581419d0 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x1581419b8 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x158141998 <col:5> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x158141bc8 <line:4:2, col:31>       `-CallExpr 0x158141ba0 <col:9, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x158141b60 <col:9> 'int ()' Function 0x158141aa8 'softnet_get_online' 'int ()'         `-RecoveryExpr 0x158141b80 <col:28> '<dependent type>' contains-errors lvalue ","19403":"`-FunctionDecl 0x14300de88  line:1:1 invalid _gdm_display_set_remote_hostname 'int (int *, const char *)'   |-ParmVarDecl 0x14300dd28 <col:35, col:51> col:51 invalid self 'int *'   |-ParmVarDecl 0x14300dda8 <line:2:35, col:51> col:51 used hostname 'const char *'   `-CompoundStmt 0x1430274d8 <line:3:1, line:9:1>     `-CallExpr 0x14300e308 <line:7:9, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x14300e1f8 <col:9> 'int ()' Function 0x14300e140 'g_free' 'int ()'       `-CXXDependentScopeMemberExpr 0x14300e2c0 <col:17, col:23> '<dependent type>' contains-errors lvalue ->remote_hostname         `-RecoveryExpr 0x14300e2a0 <col:17> '<dependent type>' contains-errors lvalue ","19323":"`-FunctionDecl 0x14a80a438  line:1:11 skipSpaces 'char *(char *, int)'   |-ParmVarDecl 0x14a80a2d8 <col:23, col:29> col:29 used ptr 'char *'   |-ParmVarDecl 0x14a80a358 <col:34, col:38> col:38 used mode 'int'   `-CompoundStmt 0x14b00ac00 <line:2:5, line:60:5>     |-DeclStmt 0x14a80a5d8 <line:3:9, col:22>     | `-VarDecl 0x14a80a550 <col:9, col:21> col:13 used level 'int' cinit     |   `-IntegerLiteral 0x14a80a5b8 <col:21> 'int' 0     |-ForStmt 0x14a823f78 <line:5:9, line:58:9>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x14a823f48 <line:6:9, line:58:9>     |   |-DeclStmt 0x14a80a668 <line:7:13, col:19>     |   | `-VarDecl 0x14a80a600 <col:13, col:18> col:18 used c 'char'     |   |-UnaryOperator 0x14a80a6a0 <line:8:13, col:16> 'char *' postfix '--'     |   | `-DeclRefExpr 0x14a80a680 <col:13> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |-IfStmt 0x14a823800 <line:10:13, line:48:13> has_else     |   | |-BinaryOperator 0x14a80a748 <line:10:17, col:25> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x14a80a6b8 <col:17> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   | | `-RecoveryExpr 0x14a80a728 <col:25> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x14b0097a8 <line:11:13, line:21:13>     |   | | |-DoStmt 0x14b0092c8 <line:12:17, line:13:93>     |   | | | |-BinaryOperator 0x14a80a7f0 <line:12:20, col:27> 'char' '='     |   | | | | |-DeclRefExpr 0x14a80a768 <col:20> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   | | | | `-ImplicitCastExpr 0x14a80a7d8 <col:24, col:27> 'char' <LValueToRValue>     |   | | | |   `-UnaryOperator 0x14a80a7c0 <col:24, col:27> 'char' lvalue prefix '*' cannot overflow     |   | | | |     `-UnaryOperator 0x14a80a7a8 <col:25, col:27> 'char *' prefix '++'     |   | | | |       `-DeclRefExpr 0x14a80a788 <col:27> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | | | `-BinaryOperator 0x14b0092a8 <line:13:24, col:91> 'int' '&&'     |   | | |   |-CallExpr 0x14a80a9a8 <col:24, col:43> 'int'     |   | | |   | |-ImplicitCastExpr 0x14a80a990 <col:24> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | | `-DeclRefExpr 0x14a80a920 <col:24> 'int ()' Function 0x14a80a868 'cv_isprint_or_tab' 'int ()'     |   | | |   | `-ImplicitCastExpr 0x14a80a9e8 <col:42> 'int' <IntegralCast>     |   | | |   |   `-ImplicitCastExpr 0x14a80a9d0 <col:42> 'char' <LValueToRValue>     |   | | |   |     `-DeclRefExpr 0x14a80a940 <col:42> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   | | |   `-ParenExpr 0x14b009288 <col:48, col:91> 'int'     |   | | |     `-BinaryOperator 0x14b009268 <col:49, col:88> 'int' '||'     |   | | |       |-BinaryOperator 0x14b009168 <col:49, col:71> 'int' '||'     |   | | |       | |-BinaryOperator 0x14b009068 <col:49, col:54> 'int' '!='     |   | | |       | | |-ImplicitCastExpr 0x14b009050 <col:49> 'int' <IntegralCast>     |   | | |       | | | `-ImplicitCastExpr 0x14b009038 <col:49> 'char' <LValueToRValue>     |   | | |       | | |   `-DeclRefExpr 0x14b009000 <col:49> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   | | |       | | `-CharacterLiteral 0x14b009020 <col:54> 'int' 45     |   | | |       | `-BinaryOperator 0x14b009148 <col:61, col:71> 'int' '!='     |   | | |       |   |-ImplicitCastExpr 0x14b009130 <col:61, col:66> 'int' <IntegralCast>     |   | | |       |   | `-ImplicitCastExpr 0x14b009118 <col:61, col:66> 'char' <LValueToRValue>     |   | | |       |   |   `-ArraySubscriptExpr 0x14b0090e0 <col:61, col:66> 'char' lvalue     |   | | |       |   |     |-ImplicitCastExpr 0x14b0090c8 <col:61> 'char *' <LValueToRValue>     |   | | |       |   |     | `-DeclRefExpr 0x14b009088 <col:61> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | | |       |   |     `-IntegerLiteral 0x14b0090a8 <col:65> 'int' 1     |   | | |       |   `-CharacterLiteral 0x14b009100 <col:71> 'int' 45     |   | | |       `-BinaryOperator 0x14b009248 <col:78, col:88> 'int' '!='     |   | | |         |-ImplicitCastExpr 0x14b009230 <col:78, col:83> 'int' <IntegralCast>     |   | | |         | `-ImplicitCastExpr 0x14b009218 <col:78, col:83> 'char' <LValueToRValue>     |   | | |         |   `-ArraySubscriptExpr 0x14b0091e0 <col:78, col:83> 'char' lvalue     |   | | |         |     |-ImplicitCastExpr 0x14b0091c8 <col:78> 'char *' <LValueToRValue>     |   | | |         |     | `-DeclRefExpr 0x14b009188 <col:78> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | | |         |     `-IntegerLiteral 0x14b0091a8 <col:82> 'int' 2     |   | | |         `-CharacterLiteral 0x14b009200 <col:88> 'int' 62     |   | | `-IfStmt 0x14b009788 <line:15:17, line:20:17>     |   | |   |-BinaryOperator 0x14b009350 <line:15:21, col:26> 'int' '=='     |   | |   | |-ImplicitCastExpr 0x14b009338 <col:21> 'int' <IntegralCast>     |   | |   | | `-ImplicitCastExpr 0x14b009320 <col:21> 'char' <LValueToRValue>     |   | |   | |   `-DeclRefExpr 0x14b0092e8 <col:21> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   | |   | `-CharacterLiteral 0x14b009308 <col:26> 'int' 45     |   | |   `-CompoundStmt 0x14b009760 <line:16:17, line:20:17>     |   | |     |-CallExpr 0x14b009668 <line:17:21, col:60> 'int'     |   | |     | |-ImplicitCastExpr 0x14b009650 <col:21> 'int (*)()' <FunctionToPointerDecay>     |   | |     | | `-DeclRefExpr 0x14b009450 <col:21> 'int ()' Function 0x14b009398 'assert' 'int ()'     |   | |     | `-BinaryOperator 0x14b009630 <col:29, col:56> 'int' '&&'     |   | |     |   |-BinaryOperator 0x14b009530 <col:29, col:39> 'int' '=='     |   | |     |   | |-ImplicitCastExpr 0x14b009518 <col:29, col:34> 'int' <IntegralCast>     |   | |     |   | | `-ImplicitCastExpr 0x14b009500 <col:29, col:34> 'char' <LValueToRValue>     |   | |     |   | |   `-ArraySubscriptExpr 0x14b0094c8 <col:29, col:34> 'char' lvalue     |   | |     |   | |     |-ImplicitCastExpr 0x14b0094b0 <col:29> 'char *' <LValueToRValue>     |   | |     |   | |     | `-DeclRefExpr 0x14b009470 <col:29> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | |     |   | |     `-IntegerLiteral 0x14b009490 <col:33> 'int' 1     |   | |     |   | `-CharacterLiteral 0x14b0094e8 <col:39> 'int' 45     |   | |     |   `-BinaryOperator 0x14b009610 <col:46, col:56> 'int' '=='     |   | |     |     |-ImplicitCastExpr 0x14b0095f8 <col:46, col:51> 'int' <IntegralCast>     |   | |     |     | `-ImplicitCastExpr 0x14b0095e0 <col:46, col:51> 'char' <LValueToRValue>     |   | |     |     |   `-ArraySubscriptExpr 0x14b0095a8 <col:46, col:51> 'char' lvalue     |   | |     |     |     |-ImplicitCastExpr 0x14b009590 <col:46> 'char *' <LValueToRValue>     |   | |     |     |     | `-DeclRefExpr 0x14b009550 <col:46> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | |     |     |     `-IntegerLiteral 0x14b009570 <col:50> 'int' 2     |   | |     |     `-CharacterLiteral 0x14b0095c8 <col:56> 'int' 62     |   | |     |-BinaryOperator 0x14b0096d0 <line:18:21, col:28> 'int' '='     |   | |     | |-DeclRefExpr 0x14b009690 <col:21> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   | |     | `-IntegerLiteral 0x14b0096b0 <col:28> 'int' 0     |   | |     `-CompoundAssignOperator 0x14b009730 <line:19:21, col:28> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |   | |       |-DeclRefExpr 0x14b0096f0 <col:21> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   | |       `-IntegerLiteral 0x14b009710 <col:28> 'int' 3     |   | `-IfStmt 0x14a8237d0 <line:22:18, line:48:13> has_else     |   |   |-BinaryOperator 0x14b009840 <line:22:22, col:30> 'int' contains-errors '=='     |   |   | |-DeclRefExpr 0x14b0097c8 <col:22> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   |   | `-RecoveryExpr 0x14b009820 <col:30> '<dependent type>' contains-errors lvalue     |   |   |-CompoundStmt 0x14b009c98 <line:23:13, line:33:13>     |   |   | `-DoStmt 0x14b009c78 <line:25:17, line:32:47>     |   |   |   |-CompoundStmt 0x14b009b98 <line:26:17, line:32:17>     |   |   |   | |-BinaryOperator 0x14b0098e8 <line:27:21, col:28> 'char' '='     |   |   |   | | |-DeclRefExpr 0x14b009860 <col:21> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |   |   | | `-ImplicitCastExpr 0x14b0098d0 <col:25, col:28> 'char' <LValueToRValue>     |   |   |   | |   `-UnaryOperator 0x14b0098b8 <col:25, col:28> 'char' lvalue prefix '*' cannot overflow     |   |   |   | |     `-UnaryOperator 0x14b0098a0 <col:26, col:28> 'char *' prefix '++'     |   |   |   | |       `-DeclRefExpr 0x14b009880 <col:28> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |   |   | |-CompoundAssignOperator 0x14b0099b0 <line:28:21, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     |   |   |   | | |-DeclRefExpr 0x14b009908 <col:21> 'int' lvalue Var 0x14a80a550 'level' 'int'     |   |   |   | | `-BinaryOperator 0x14b009990 <col:30, col:35> 'int' '=='     |   |   |   | |   |-ImplicitCastExpr 0x14b009978 <col:30> 'int' <IntegralCast>     |   |   |   | |   | `-ImplicitCastExpr 0x14b009960 <col:30> 'char' <LValueToRValue>     |   |   |   | |   |   `-DeclRefExpr 0x14b009928 <col:30> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |   |   | |   `-CharacterLiteral 0x14b009948 <col:35> 'int' 60     |   |   |   | |-CompoundAssignOperator 0x14b009a88 <line:29:21, col:35> 'int' '-=' ComputeLHSTy='int' ComputeResultTy='int'     |   |   |   | | |-DeclRefExpr 0x14b0099e0 <col:21> 'int' lvalue Var 0x14a80a550 'level' 'int'     |   |   |   | | `-BinaryOperator 0x14b009a68 <col:30, col:35> 'int' '=='     |   |   |   | |   |-ImplicitCastExpr 0x14b009a50 <col:30> 'int' <IntegralCast>     |   |   |   | |   | `-ImplicitCastExpr 0x14b009a38 <col:30> 'char' <LValueToRValue>     |   |   |   | |   |   `-DeclRefExpr 0x14b009a00 <col:30> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |   |   | |   `-CharacterLiteral 0x14b009a20 <col:35> 'int' 62     |   |   |   | `-IfStmt 0x14b009b78 <line:30:21, line:31:32>     |   |   |   |   |-BinaryOperator 0x14b009b10 <line:30:25, col:33> 'int' '<'     |   |   |   |   | |-ImplicitCastExpr 0x14b009af8 <col:25> 'int' <LValueToRValue>     |   |   |   |   | | `-DeclRefExpr 0x14b009ab8 <col:25> 'int' lvalue Var 0x14a80a550 'level' 'int'     |   |   |   |   | `-IntegerLiteral 0x14b009ad8 <col:33> 'int' 0     |   |   |   |   `-ReturnStmt 0x14b009b68 <line:31:25, col:32>     |   |   |   |     `-ImplicitCastExpr 0x14b009b50 <col:32> 'char *' <LValueToRValue>     |   |   |   |       `-DeclRefExpr 0x14b009b30 <col:32> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |   |   `-CallExpr 0x14b009c20 <line:32:26, col:45> 'int'     |   |   |     |-ImplicitCastExpr 0x14b009c08 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   |   |     | `-DeclRefExpr 0x14b009bc8 <col:26> 'int ()' Function 0x14a80a868 'cv_isprint_or_tab' 'int ()'     |   |   |     `-ImplicitCastExpr 0x14b009c60 <col:44> 'int' <IntegralCast>     |   |   |       `-ImplicitCastExpr 0x14b009c48 <col:44> 'char' <LValueToRValue>     |   |   |         `-DeclRefExpr 0x14b009be8 <col:44> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |   `-CompoundStmt 0x14a8237b0 <line:35:13, line:48:13>     |   |     |-DoStmt 0x14b009e88 <line:36:17, line:37:46>     |   |     | |-BinaryOperator 0x14b009d38 <line:36:20, col:27> 'char' '='     |   |     | | |-DeclRefExpr 0x14b009cb0 <col:20> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |     | | `-ImplicitCastExpr 0x14b009d20 <col:24, col:27> 'char' <LValueToRValue>     |   |     | |   `-UnaryOperator 0x14b009d08 <col:24, col:27> 'char' lvalue prefix '*' cannot overflow     |   |     | |     `-UnaryOperator 0x14b009cf0 <col:25, col:27> 'char *' prefix '++'     |   |     | |       `-DeclRefExpr 0x14b009cd0 <col:27> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |     | `-BinaryOperator 0x14b009e68 <line:37:24, col:41> 'int' '||'     |   |     |   |-BinaryOperator 0x14b009dc0 <col:24, col:29> 'int' '=='     |   |     |   | |-ImplicitCastExpr 0x14b009da8 <col:24> 'int' <IntegralCast>     |   |     |   | | `-ImplicitCastExpr 0x14b009d90 <col:24> 'char' <LValueToRValue>     |   |     |   | |   `-DeclRefExpr 0x14b009d58 <col:24> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |     |   | `-CharacterLiteral 0x14b009d78 <col:29> 'int' 32     |   |     |   `-BinaryOperator 0x14b009e48 <col:36, col:41> 'int' '=='     |   |     |     |-ImplicitCastExpr 0x14b009e30 <col:36> 'int' <IntegralCast>     |   |     |     | `-ImplicitCastExpr 0x14b009e18 <col:36> 'char' <LValueToRValue>     |   |     |     |   `-DeclRefExpr 0x14b009de0 <col:36> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |     |     `-CharacterLiteral 0x14b009e00 <col:41> 'int' 9     |   |     `-IfStmt 0x14a823780 <line:39:17, line:47:21> has_else     |   |       |-BinaryOperator 0x14a823220 <line:39:21, col:77> 'int' '&&'     |   |       | |-BinaryOperator 0x14a823120 <col:21, col:60> 'int' '&&'     |   |       | | |-BinaryOperator 0x14a823020 <col:21, col:43> 'int' '&&'     |   |       | | | |-BinaryOperator 0x14b009f10 <col:21, col:26> 'int' '=='     |   |       | | | | |-ImplicitCastExpr 0x14b009ef8 <col:21> 'int' <IntegralCast>     |   |       | | | | | `-ImplicitCastExpr 0x14b009ee0 <col:21> 'char' <LValueToRValue>     |   |       | | | | |   `-DeclRefExpr 0x14b009ea8 <col:21> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |       | | | | `-CharacterLiteral 0x14b009ec8 <col:26> 'int' 60     |   |       | | | `-BinaryOperator 0x14a823000 <col:33, col:43> 'int' '=='     |   |       | | |   |-ImplicitCastExpr 0x14b009fd8 <col:33, col:38> 'int' <IntegralCast>     |   |       | | |   | `-ImplicitCastExpr 0x14b009fc0 <col:33, col:38> 'char' <LValueToRValue>     |   |       | | |   |   `-ArraySubscriptExpr 0x14b009f88 <col:33, col:38> 'char' lvalue     |   |       | | |   |     |-ImplicitCastExpr 0x14b009f70 <col:33> 'char *' <LValueToRValue>     |   |       | | |   |     | `-DeclRefExpr 0x14b009f30 <col:33> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |       | | |   |     `-IntegerLiteral 0x14b009f50 <col:37> 'int' 1     |   |       | | |   `-CharacterLiteral 0x14b009fa8 <col:43> 'int' 33     |   |       | | `-BinaryOperator 0x14a823100 <col:50, col:60> 'int' '=='     |   |       | |   |-ImplicitCastExpr 0x14a8230e8 <col:50, col:55> 'int' <IntegralCast>     |   |       | |   | `-ImplicitCastExpr 0x14a8230d0 <col:50, col:55> 'char' <LValueToRValue>     |   |       | |   |   `-ArraySubscriptExpr 0x14a823098 <col:50, col:55> 'char' lvalue     |   |       | |   |     |-ImplicitCastExpr 0x14a823080 <col:50> 'char *' <LValueToRValue>     |   |       | |   |     | `-DeclRefExpr 0x14a823040 <col:50> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |       | |   |     `-IntegerLiteral 0x14a823060 <col:54> 'int' 2     |   |       | |   `-CharacterLiteral 0x14a8230b8 <col:60> 'int' 45     |   |       | `-BinaryOperator 0x14a823200 <col:67, col:77> 'int' '=='     |   |       |   |-ImplicitCastExpr 0x14a8231e8 <col:67, col:72> 'int' <IntegralCast>     |   |       |   | `-ImplicitCastExpr 0x14a8231d0 <col:67, col:72> 'char' <LValueToRValue>     |   |       |   |   `-ArraySubscriptExpr 0x14a823198 <col:67, col:72> 'char' lvalue     |   |       |   |     |-ImplicitCastExpr 0x14a823180 <col:67> 'char *' <LValueToRValue>     |   |       |   |     | `-DeclRefExpr 0x14a823140 <col:67> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |       |   |     `-IntegerLiteral 0x14a823160 <col:71> 'int' 3     |   |       |   `-CharacterLiteral 0x14a8231b8 <col:77> 'int' 45     |   |       |-CompoundStmt 0x14a8235a0 <line:40:17, line:45:17>     |   |       | |-IfStmt 0x14a823478 <line:41:21, line:42:51>     |   |       | | |-BinaryOperator 0x14a823298 <line:41:25, col:33> 'int' '!='     |   |       | | | |-ImplicitCastExpr 0x14a823280 <col:25> 'int' <LValueToRValue>     |   |       | | | | `-DeclRefExpr 0x14a823240 <col:25> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   |       | | | `-IntegerLiteral 0x14a823260 <col:33> 'int' 0     |   |       | | `-CallExpr 0x14a823438 <line:42:25, col:51> 'int'     |   |       | |   |-ImplicitCastExpr 0x14a823420 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   |       | |   | `-DeclRefExpr 0x14a823398 <col:25> 'int ()' Function 0x14a8232e0 'CV_PARSE_ERROR_CPP' 'int ()'     |   |       | |   `-ImplicitCastExpr 0x14a823460 <col:45> 'char *' <ArrayToPointerDecay>     |   |       | |     `-StringLiteral 0x14a823400 <col:45> 'char[4]' lvalue \"STR\"     |   |       | |-BinaryOperator 0x14a823510 <line:43:21, col:28> 'int' contains-errors '='     |   |       | | |-DeclRefExpr 0x14a823498 <col:21> 'int' lvalue ParmVar 0x14a80a358 'mode' 'int'     |   |       | | `-RecoveryExpr 0x14a8234f0 <col:28> '<dependent type>' contains-errors lvalue     |   |       | `-CompoundAssignOperator 0x14a823570 <line:44:21, col:28> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |   |       |   |-DeclRefExpr 0x14a823530 <col:21> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |   |       |   `-IntegerLiteral 0x14a823550 <col:28> 'int' 4     |   |       `-IfStmt 0x14a823760 <line:46:22, line:47:21>     |   |         |-CallExpr 0x14a823700 <line:46:26, col:38> 'int'     |   |         | |-ImplicitCastExpr 0x14a8236e8 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   |         | | `-DeclRefExpr 0x14a8236a8 <col:26> 'int ()' Function 0x14a8235f0 'cv_isprint' 'int ()'     |   |         | `-ImplicitCastExpr 0x14a823740 <col:37> 'int' <IntegralCast>     |   |         |   `-ImplicitCastExpr 0x14a823728 <col:37> 'char' <LValueToRValue>     |   |         |     `-DeclRefExpr 0x14a8236c8 <col:37> 'char' lvalue Var 0x14a80a600 'c' 'char'     |   |         `-BreakStmt 0x14a823758 <line:47:21>     |   `-IfStmt 0x14a823f28 <line:50:13, line:57:13>     |     |-UnaryOperator 0x14a823910 <line:50:17, col:33> 'int' prefix '!' cannot overflow     |     | `-CallExpr 0x14a8238b8 <col:18, col:33> 'int'     |     |   |-ImplicitCastExpr 0x14a8238a0 <col:18> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x14a823830 <col:18> 'int ()' Function 0x14a8235f0 'cv_isprint' 'int ()'     |     |   `-ImplicitCastExpr 0x14a8238f8 <col:29, col:30> 'int' <IntegralCast>     |     |     `-ImplicitCastExpr 0x14a8238e0 <col:29, col:30> 'char' <LValueToRValue>     |     |       `-UnaryOperator 0x14a823888 <col:29, col:30> 'char' lvalue prefix '*' cannot overflow     |     |         `-ImplicitCastExpr 0x14a823870 <col:30> 'char *' <LValueToRValue>     |     |           `-DeclRefExpr 0x14a823850 <col:30> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |     `-CompoundStmt 0x14a823f00 <line:51:13, line:57:13>     |       |-IfStmt 0x14a823c28 <line:52:17, line:53:47>     |       | |-BinaryOperator 0x14a823b70 <line:52:21, col:61> 'int' '&&'     |       | | |-BinaryOperator 0x14a823a98 <col:21, col:45> 'int' '&&'     |       | | | |-BinaryOperator 0x14a8239c0 <col:21, col:29> 'int' '!='     |       | | | | |-ImplicitCastExpr 0x14a8239a8 <col:21, col:22> 'int' <IntegralCast>     |       | | | | | `-ImplicitCastExpr 0x14a823990 <col:21, col:22> 'char' <LValueToRValue>     |       | | | | |   `-UnaryOperator 0x14a823960 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow     |       | | | | |     `-ImplicitCastExpr 0x14a823948 <col:22> 'char *' <LValueToRValue>     |       | | | | |       `-DeclRefExpr 0x14a823928 <col:22> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |       | | | | `-CharacterLiteral 0x14a823978 <col:29> 'int' 0     |       | | | `-BinaryOperator 0x14a823a78 <col:37, col:45> 'int' '!='     |       | | |   |-ImplicitCastExpr 0x14a823a60 <col:37, col:38> 'int' <IntegralCast>     |       | | |   | `-ImplicitCastExpr 0x14a823a48 <col:37, col:38> 'char' <LValueToRValue>     |       | | |   |   `-UnaryOperator 0x14a823a18 <col:37, col:38> 'char' lvalue prefix '*' cannot overflow     |       | | |   |     `-ImplicitCastExpr 0x14a823a00 <col:38> 'char *' <LValueToRValue>     |       | | |   |       `-DeclRefExpr 0x14a8239e0 <col:38> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |       | | |   `-CharacterLiteral 0x14a823a30 <col:45> 'int' 10     |       | | `-BinaryOperator 0x14a823b50 <col:53, col:61> 'int' '!='     |       | |   |-ImplicitCastExpr 0x14a823b38 <col:53, col:54> 'int' <IntegralCast>     |       | |   | `-ImplicitCastExpr 0x14a823b20 <col:53, col:54> 'char' <LValueToRValue>     |       | |   |   `-UnaryOperator 0x14a823af0 <col:53, col:54> 'char' lvalue prefix '*' cannot overflow     |       | |   |     `-ImplicitCastExpr 0x14a823ad8 <col:54> 'char *' <LValueToRValue>     |       | |   |       `-DeclRefExpr 0x14a823ab8 <col:54> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |       | |   `-CharacterLiteral 0x14a823b08 <col:61> 'int' 13     |       | `-CallExpr 0x14a823be8 <line:53:21, col:47> 'int'     |       |   |-ImplicitCastExpr 0x14a823bd0 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x14a823b90 <col:21> 'int ()' Function 0x14a8232e0 'CV_PARSE_ERROR_CPP' 'int ()'     |       |   `-ImplicitCastExpr 0x14a823c10 <col:41> 'char *' <ArrayToPointerDecay>     |       |     `-StringLiteral 0x14a823bb0 <col:41> 'char[4]' lvalue \"STR\"     |       |-BinaryOperator 0x14a823d90 <line:54:17, col:32> 'char *' contains-errors '='     |       | |-DeclRefExpr 0x14a823c48 <col:17> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |       | `-CallExpr 0x14a823d70 <col:23, col:32> '<dependent type>' contains-errors     |       |   `-CXXDependentScopeMemberExpr 0x14a823d28 <col:23, col:27> '<dependent type>' contains-errors lvalue ->gets     |       |     `-RecoveryExpr 0x14a823d08 <col:23> '<dependent type>' contains-errors lvalue     |       `-IfStmt 0x14a823ee0 <line:55:17, line:56:21>     |         |-BinaryOperator 0x14a823eb8 <line:55:21, col:37> 'int' '||'     |         | |-UnaryOperator 0x14a823de8 <col:21, col:22> 'int' prefix '!' cannot overflow     |         | | `-ImplicitCastExpr 0x14a823dd0 <col:22> 'char *' <LValueToRValue>     |         | |   `-DeclRefExpr 0x14a823db0 <col:22> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |         | `-BinaryOperator 0x14a823e98 <col:29, col:37> 'int' '=='     |         |   |-ImplicitCastExpr 0x14a823e80 <col:29, col:30> 'int' <IntegralCast>     |         |   | `-ImplicitCastExpr 0x14a823e68 <col:29, col:30> 'char' <LValueToRValue>     |         |   |   `-UnaryOperator 0x14a823e38 <col:29, col:30> 'char' lvalue prefix '*' cannot overflow     |         |   |     `-ImplicitCastExpr 0x14a823e20 <col:30> 'char *' <LValueToRValue>     |         |   |       `-DeclRefExpr 0x14a823e00 <col:30> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *'     |         |   `-CharacterLiteral 0x14a823e50 <col:37> 'int' 0     |         `-BreakStmt 0x14a823ed8 <line:56:21>     `-ReturnStmt 0x14a823fe8 <line:59:9, col:16>       `-ImplicitCastExpr 0x14a823fd0 <col:16> 'char *' <LValueToRValue>         `-DeclRefExpr 0x14a823fb0 <col:16> 'char *' lvalue ParmVar 0x14a80a2d8 'ptr' 'char *' ","19851":"`-FunctionDecl 0x142842d58  line:1:12 handle_vmread 'int (struct kvm_vcpu *)' static   |-ParmVarDecl 0x142842c48 <col:26, col:43> col:43 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x144809908 <line:2:1, line:37:1>     |-DeclStmt 0x14285a8d0 <line:3:2, col:21>     | `-VarDecl 0x14285a868 <col:2, col:16> col:16 used field 'unsigned long'     |-DeclStmt 0x14285ab38 <line:5:2, col:67>     | `-VarDecl 0x14285a918 <col:2, col:66> col:16 used exit_qualification 'unsigned long' cinit     |   `-CallExpr 0x14285ab10 <col:37, col:66> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14285aa90 <col:37> 'int ()' Function 0x14285a9d8 'vmcs_readl' 'int ()'     |     `-RecoveryExpr 0x14285aaf0 <col:48> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14285ad40 <line:9:2, line:10:10>     | |-UnaryOperator 0x14285acf8 <line:9:6, col:39> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x14285acb8 <col:7, col:39> 'int'     | |   |-ImplicitCastExpr 0x14285aca0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14285ac30 <col:7> 'int ()' Function 0x14285ab78 'nested_vmx_check_permission' 'int ()'     | |   `-ImplicitCastExpr 0x14285ace0 <col:35> 'struct kvm_vcpu *' <LValueToRValue>     | |     `-DeclRefExpr 0x14285ac50 <col:35> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'     | `-ReturnStmt 0x14285ad30 <line:10:3, col:10>     |   `-IntegerLiteral 0x14285ad10 <col:10> 'int' 1     |-IfStmt 0x14285b078 <line:12:2, line:13:44>     | |-UnaryOperator 0x14285aed8 <line:12:6, col:35> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x14285ae98 <col:7, col:35> 'int'     | |   |-ImplicitCastExpr 0x14285ae80 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14285ae40 <col:7> 'int ()' Function 0x14285ad88 'nested_vmx_check_vmcs12' 'int ()'     | |   `-ImplicitCastExpr 0x14285aec0 <col:31> 'struct kvm_vcpu *' <LValueToRValue>     | |     `-DeclRefExpr 0x14285ae60 <col:31> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'     | `-ReturnStmt 0x14285b068 <line:13:3, col:44>     |   `-CallExpr 0x14285b028 <col:10, col:44> 'int'     |     |-ImplicitCastExpr 0x14285b010 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14285afd0 <col:10> 'int ()' Function 0x14285af18 'kvm_skip_emulated_instruction' 'int ()'     |     `-ImplicitCastExpr 0x14285b050 <col:40> 'struct kvm_vcpu *' <LValueToRValue>     |       `-DeclRefExpr 0x14285aff0 <col:40> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x14285b728 <line:18:2, line:21:2>     | |-BinaryOperator 0x14285b488 <line:18:6, col:51> 'int' contains-errors '<'     | | |-CallExpr 0x14285b450 <col:6, col:47> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14285b310 <col:6> 'int ()' Function 0x14285b258 'vmcs12_read_any' 'int ()'     | | | |-DeclRefExpr 0x14285b330 <col:22> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'     | | | |-DeclRefExpr 0x14285b350 <col:28> 'unsigned long' lvalue Var 0x14285a868 'field' 'unsigned long'     | | | `-UnaryOperator 0x14285b438 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x14285b418 <col:36> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14285b3d8 <col:51> 'int' 0     | `-CompoundStmt 0x14285b708 <col:54, line:21:2>     |   |-CallExpr 0x14285b630 <line:19:3, col:63> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14285b588 <col:3> 'int ()' Function 0x14285b4d0 'nested_vmx_failValid' 'int ()'     |   | |-DeclRefExpr 0x14285b5a8 <col:24> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'     |   | `-RecoveryExpr 0x14285b610 <col:30> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14285b6f8 <line:20:3, col:44>     |     `-CallExpr 0x14285b6b8 <col:10, col:44> 'int'     |       |-ImplicitCastExpr 0x14285b6a0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14285b660 <col:10> 'int ()' Function 0x14285af18 'kvm_skip_emulated_instruction' 'int ()'     |       `-ImplicitCastExpr 0x14285b6e0 <col:40> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x14285b680 <col:40> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'     |-IfStmt 0x1448096b8 <line:23:2, line:33:2> has_else     | |-BinaryOperator 0x144808e20 <line:23:6, col:38> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x144808e00 <col:6> '<dependent type>' contains-errors lvalue     | | `-ParenExpr 0x14285b7c0 <col:29, col:38> 'unsigned int'     | |   `-BinaryOperator 0x14285b7a0 <col:30, col:36> 'unsigned int' '<<'     | |     |-IntegerLiteral 0x14285b760 <col:30> 'unsigned int' 1     | |     `-IntegerLiteral 0x14285b780 <col:36> 'int' 10     | |-CompoundStmt 0x144808fd0 <col:41, line:26:2>     | `-CompoundStmt 0x1448096a0 <col:9, line:33:2>     |   `-IfStmt 0x1448092b8 <line:27:3, line:29:11>     |     |-CallExpr 0x144809240 <line:27:7, line:28:37> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x1448090c0 <line:27:7> 'int ()' Function 0x144809008 'get_vmx_mem_address' 'int ()'     |     | |-DeclRefExpr 0x1448090e0 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'     |     | |-DeclRefExpr 0x144809100 <col:33> 'unsigned long' contains-errors lvalue Var 0x14285a918 'exit_qualification' 'unsigned long'     |     | |-RecoveryExpr 0x1448091c8 <line:28:5> '<dependent type>' contains-errors lvalue     |     | |-RecoveryExpr 0x1448091e8 <col:27> '<dependent type>' contains-errors lvalue     |     | `-UnaryOperator 0x144809228 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-RecoveryExpr 0x144809208 <col:34> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x1448092a8 <line:29:4, col:11>     |       `-IntegerLiteral 0x144809288 <col:11> 'int' 1     |-CallExpr 0x144809820 <line:35:2, col:25> 'int'     | |-ImplicitCastExpr 0x144809808 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1448097c8 <col:2> 'int ()' Function 0x144809710 'nested_vmx_succeed' 'int ()'     | `-ImplicitCastExpr 0x144809848 <col:21> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x1448097e8 <col:21> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *'     `-ReturnStmt 0x1448098f8 <line:36:2, col:43>       `-CallExpr 0x1448098b8 <col:9, col:43> 'int'         |-ImplicitCastExpr 0x1448098a0 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x144809860 <col:9> 'int ()' Function 0x14285af18 'kvm_skip_emulated_instruction' 'int ()'         `-ImplicitCastExpr 0x1448098e0 <col:39> 'struct kvm_vcpu *' <LValueToRValue>           `-DeclRefExpr 0x144809880 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x142842c48 'vcpu' 'struct kvm_vcpu *' ","19396":"`-FunctionDecl 0x14c00e350  line:1:13 update_pvclock_gtod 'void (struct timekeeper *)' static   |-ParmVarDecl 0x14c00e248 <col:33, col:52> col:52 used tk 'struct timekeeper *'   `-CompoundStmt 0x15c1228f0 <line:2:1, line:21:1>     |-DeclStmt 0x14c0268b8 <line:3:2, col:54>     | |-RecordDecl 0x14c026648 <col:2, col:9> col:9 struct pvclock_gtod_data     | `-VarDecl 0x14c0267b8 <col:2, col:37> col:28 used vdata 'struct pvclock_gtod_data *' cinit     |   `-UnaryOperator 0x14c026888 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14c026868 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c026dd8 <line:8:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c026d40 <col:2> 'int ()' Function 0x14c026c88 'write_seqcount_begin' 'int ()'     | `-UnaryOperator 0x14c026dc0 <col:23, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14c026d98 <col:24, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c026d60 <col:24> 'struct pvclock_gtod_data *' contains-errors lvalue Var 0x14c0267b8 'vdata' 'struct pvclock_gtod_data *'     |-BinaryOperator 0x14c026fe0 <line:11:2, col:58> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c026e60 <col:2, col:15> '<dependent type>' contains-errors lvalue .vclock_mode     | | `-RecoveryExpr 0x14c026e38 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c026e00 <col:2> 'struct pvclock_gtod_data *' contains-errors lvalue Var 0x14c0267b8 'vdata' 'struct pvclock_gtod_data *'     | `-CXXDependentScopeMemberExpr 0x14c026f98 <col:29, col:58> '<dependent type>' contains-errors lvalue .vclock_mode     |   `-CXXDependentScopeMemberExpr 0x14c026f50 <col:29, col:49> '<dependent type>' contains-errors lvalue ->archdata     |     `-CXXDependentScopeMemberExpr 0x14c026f08 <col:29, col:42> '<dependent type>' contains-errors lvalue .clock     |       `-RecoveryExpr 0x14c026ee0 <col:29, col:33> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14c026ea8 <col:29> 'struct timekeeper *' lvalue ParmVar 0x14c00e248 'tk' 'struct timekeeper *'     |-BinaryOperator 0x14c027150 <line:12:2, col:42> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c027060 <col:2, col:15> '<dependent type>' contains-errors lvalue .cycle_last     | | `-RecoveryExpr 0x14c027038 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c027000 <col:2> 'struct pvclock_gtod_data *' contains-errors lvalue Var 0x14c0267b8 'vdata' 'struct pvclock_gtod_data *'     | `-CXXDependentScopeMemberExpr 0x14c027108 <col:29, col:42> '<dependent type>' contains-errors lvalue .cycle_last     |   `-RecoveryExpr 0x14c0270e0 <col:29, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c0270a8 <col:29> 'struct timekeeper *' lvalue ParmVar 0x14c00e248 'tk' 'struct timekeeper *'     |-BinaryOperator 0x14c0272c0 <line:13:2, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c0271d0 <col:2, col:15> '<dependent type>' contains-errors lvalue .mask     | | `-RecoveryExpr 0x14c0271a8 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c027170 <col:2> 'struct pvclock_gtod_data *' contains-errors lvalue Var 0x14c0267b8 'vdata' 'struct pvclock_gtod_data *'     | `-CXXDependentScopeMemberExpr 0x14c027278 <col:23, col:36> '<dependent type>' contains-errors lvalue .mask     |   `-RecoveryExpr 0x14c027250 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c027218 <col:23> 'struct timekeeper *' lvalue ParmVar 0x14c00e248 'tk' 'struct timekeeper *'     |-BinaryOperator 0x14c027430 <line:14:2, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c027340 <col:2, col:15> '<dependent type>' contains-errors lvalue .mult     | | `-RecoveryExpr 0x14c027318 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c0272e0 <col:2> 'struct pvclock_gtod_data *' contains-errors lvalue Var 0x14c0267b8 'vdata' 'struct pvclock_gtod_data *'     | `-CXXDependentScopeMemberExpr 0x14c0273e8 <col:23, col:36> '<dependent type>' contains-errors lvalue .mult     |   `-RecoveryExpr 0x14c0273c0 <col:23, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c027388 <col:23> 'struct timekeeper *' lvalue ParmVar 0x14c00e248 'tk' 'struct timekeeper *'     |-BinaryOperator 0x14c0275a0 <line:15:2, col:37> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14c0274b0 <col:2, col:15> '<dependent type>' contains-errors lvalue .shift     | | `-RecoveryExpr 0x14c027488 <col:2, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c027450 <col:2> 'struct pvclock_gtod_data *' contains-errors lvalue Var 0x14c0267b8 'vdata' 'struct pvclock_gtod_data *'     | `-CXXDependentScopeMemberExpr 0x14c027558 <col:24, col:37> '<dependent type>' contains-errors lvalue .shift     |   `-RecoveryExpr 0x14c027530 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c0274f8 <col:24> 'struct timekeeper *' lvalue ParmVar 0x14c00e248 'tk' 'struct timekeeper *'     |-BinaryOperator 0x15c122730 <line:18:2, col:35> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15c122660 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15c122628 <col:2> 'struct pvclock_gtod_data *' contains-errors lvalue Var 0x14c0267b8 'vdata' 'struct pvclock_gtod_data *'     | `-CXXDependentScopeMemberExpr 0x15c1226e8 <col:22, col:35> '<dependent type>' contains-errors lvalue .xtime_nsec     |   `-RecoveryExpr 0x15c1226c0 <col:22, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15c122688 <col:22> 'struct timekeeper *' lvalue ParmVar 0x14c00e248 'tk' 'struct timekeeper *'     `-CallExpr 0x15c1228c8 <line:20:2, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x15c122830 <col:2> 'int ()' Function 0x15c122778 'write_seqcount_end' 'int ()'       `-UnaryOperator 0x15c1228b0 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x15c122888 <col:22, col:29> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x15c122850 <col:22> 'struct pvclock_gtod_data *' contains-errors lvalue Var 0x14c0267b8 'vdata' 'struct pvclock_gtod_data *' ","19713":"`-FunctionDecl 0x13400ddc8  line:1:13 invalid msr_mtrr_valid 'int (unsigned int)' static   |-ParmVarDecl 0x13400dcf0 <col:28, col:37> col:37 used msr 'unsigned int'   `-CompoundStmt 0x13400e278 <line:2:1, line:23:1>     `-SwitchStmt 0x13400deb0 <line:3:2, line:21:2>       |-ImplicitCastExpr 0x13400de98 <line:3:10> 'unsigned int' <LValueToRValue>       | `-DeclRefExpr 0x13400de78 <col:10> 'unsigned int' lvalue ParmVar 0x13400dcf0 'msr' 'unsigned int'       `-CompoundStmt 0x13400e240 <col:15, line:21:2>         |-ReturnStmt 0x13400e170 <line:18:3, col:10>         | `-RecoveryExpr 0x13400e150 <col:10> '<dependent type>' contains-errors lvalue         `-CaseStmt 0x13400e1d0 <line:19:2, line:20:10>           |-ImplicitCastExpr 0x13400e1b8 <line:19:7> 'unsigned int' <IntegralCast>           | `-ConstantExpr 0x13400e1a0 <col:7> 'int'           |   `-IntegerLiteral 0x13400e180 <col:7> 'int' 760           `-ReturnStmt 0x13400e230 <line:20:3, col:10>             `-RecoveryExpr 0x13400e210 <col:10> '<dependent type>' contains-errors lvalue ","19243":"`-FunctionDecl 0x157940e38  line:1:12 adis_update_scan_mode_burst 'int (struct iio_dev *, const unsigned long *)' static   |-ParmVarDecl 0x157928a48 <col:40, col:56> col:56 used indio_dev 'struct iio_dev *'   |-ParmVarDecl 0x157928af8 <line:2:2, col:23> col:23 scan_mask 'const unsigned long *'   `-CompoundStmt 0x157947eb8 <line:3:1, line:36:1>     |-DeclStmt 0x157941338 <line:4:2, col:55>     | |-RecordDecl 0x157940f38 <col:2, col:9> col:9 struct adis     | `-VarDecl 0x1579410a8 <col:2, col:54> col:15 used adis 'struct adis *' cinit     |   `-ImplicitCastExpr 0x157941308 <col:22, col:54> 'struct adis *' <IntegralToPointer>     |     `-CallExpr 0x1579412c8 <col:22, col:54> 'int'     |       |-ImplicitCastExpr 0x1579412b0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x157941240 <col:22> 'int ()' Function 0x157941188 'iio_device_get_drvdata' 'int ()'     |       `-ImplicitCastExpr 0x1579412f0 <col:45> 'struct iio_dev *' <LValueToRValue>     |         `-DeclRefExpr 0x157941260 <col:45> 'struct iio_dev *' lvalue ParmVar 0x157928a48 'indio_dev' 'struct iio_dev *'     |-DeclStmt 0x1579413d0 <line:5:2, col:27>     | `-VarDecl 0x157941368 <col:2, col:15> col:15 used burst_length 'unsigned int'     |-CompoundAssignOperator 0x1579415c0 <line:10:2, col:31> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x1579414f8 <col:2> 'unsigned int' lvalue Var 0x157941368 'burst_length' 'unsigned int'     | `-CXXDependentScopeMemberExpr 0x157941578 <col:18, col:31> '<dependent type>' contains-errors lvalue ->extra_len     |   `-RecoveryExpr 0x157941550 <col:18, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157941518 <col:18> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     |-BinaryOperator 0x1579419e8 <line:12:2, col:57> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x157941628 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1579415f0 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | `-CallExpr 0x1579419b0 <col:15, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157941730 <col:15> 'int ()' Function 0x157941678 'kcalloc' 'int ()'     |   |-IntegerLiteral 0x157941750 <col:23> 'int' 2     |   |-UnaryExprOrTypeTraitExpr 0x157941970 <col:26, col:44> 'unsigned long' contains-errors sizeof     |   | `-ParenExpr 0x157941950 <col:32, col:44> '<dependent type>' contains-errors     |   |   `-UnaryOperator 0x157941938 <col:33, col:40> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x157941920 <col:34, col:40> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x1579417a8 <col:34, col:40> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x157941770 <col:34> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *' non_odr_use_unevaluated     |   `-RecoveryExpr 0x157941990 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157941b40 <line:13:2, line:14:11>     | |-UnaryOperator 0x157941a80 <line:13:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x157941a68 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x157941a40 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x157941a08 <col:7> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | `-ReturnStmt 0x157941b30 <line:14:3, col:11>     |   `-UnaryOperator 0x157941b18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x157941b00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x157941ae0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157946e60 <line:17:2, line:18:11>     | |-UnaryOperator 0x157941d88 <line:17:6, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x157941d70 <col:7, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x157941d48 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x157941d10 <col:7> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | `-ReturnStmt 0x157946e50 <line:18:3, col:11>     |   `-UnaryOperator 0x157946e38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x157946e20 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x157946e00 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157947370 <line:25:2, col:32> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947308 <col:2, col:16> '<dependent type>' contains-errors lvalue .bits_per_word     | | `-ArraySubscriptExpr 0x1579472e8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x1579472d0 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947288 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947250 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x1579472b0 <col:13> 'int' 0     | `-IntegerLiteral 0x157947350 <col:32> 'int' 8     |-BinaryOperator 0x1579474b0 <line:26:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947448 <col:2, col:16> '<dependent type>' contains-errors lvalue .len     | | `-ArraySubscriptExpr 0x157947428 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947410 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x1579473c8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947390 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x1579473f0 <col:13> 'int' 0     | `-IntegerLiteral 0x157947490 <col:22> 'int' 2     |-BinaryOperator 0x157947630 <line:27:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947588 <col:2, col:16> '<dependent type>' contains-errors lvalue .rx_buf     | | `-ArraySubscriptExpr 0x157947568 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947550 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947508 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x1579474d0 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x157947530 <col:13> 'int' 1     | `-RecoveryExpr 0x157947608 <col:25, col:31> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1579475d0 <col:25> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     |-BinaryOperator 0x157947770 <line:28:2, col:32> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947708 <col:2, col:16> '<dependent type>' contains-errors lvalue .bits_per_word     | | `-ArraySubscriptExpr 0x1579476e8 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x1579476d0 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947688 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947650 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x1579476b0 <col:13> 'int' 1     | `-IntegerLiteral 0x157947750 <col:32> 'int' 8     |-BinaryOperator 0x1579478b0 <line:29:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157947848 <col:2, col:16> '<dependent type>' contains-errors lvalue .len     | | `-ArraySubscriptExpr 0x157947828 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947810 <col:2, col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x1579477c8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947790 <col:2> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x1579477f0 <col:13> 'int' 1     | `-DeclRefExpr 0x157947890 <col:22> 'unsigned int' lvalue Var 0x157941368 'burst_length' 'unsigned int'     |-CallExpr 0x157947a48 <line:31:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1579479b0 <col:2> 'int ()' Function 0x1579478f8 'spi_message_init' 'int ()'     | `-UnaryOperator 0x157947a30 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x157947a08 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1579479d0 <col:20> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     |-CallExpr 0x157947cb8 <line:32:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157947b50 <col:2> 'int ()' Function 0x157947a98 'spi_message_add_tail' 'int ()'     | |-UnaryOperator 0x157947c28 <col:23, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-ArraySubscriptExpr 0x157947c08 <col:24, col:36> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947bf0 <col:24, col:30> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947ba8 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947b70 <col:24> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x157947bd0 <col:35> 'int' 0     | `-UnaryOperator 0x157947ca0 <col:39, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x157947c78 <col:40, col:46> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157947c40 <col:40> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     |-CallExpr 0x157947e58 <line:33:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157947ce8 <col:2> 'int ()' Function 0x157947a98 'spi_message_add_tail' 'int ()'     | |-UnaryOperator 0x157947dc0 <col:23, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-ArraySubscriptExpr 0x157947da0 <col:24, col:36> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x157947d88 <col:24, col:30> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x157947d40 <col:24, col:30> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x157947d08 <col:24> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     | |   `-IntegerLiteral 0x157947d68 <col:35> 'int' 1     | `-UnaryOperator 0x157947e40 <col:39, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x157947e18 <col:40, col:46> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157947dd8 <col:40> 'struct adis *' lvalue Var 0x1579410a8 'adis' 'struct adis *'     `-ReturnStmt 0x157947ea8 <line:35:2, col:9>       `-IntegerLiteral 0x157947e88 <col:9> 'int' 0 ","19699":"`-FunctionDecl 0x14f1281f0  line:1:6 invalid dlay_box_del 'void (int *)'   |-ParmVarDecl 0x14f128128 <col:19, col:27> col:27 invalid s 'int *'   `-CompoundStmt 0x14f128468 <line:2:1, line:4:1>     `-CallExpr 0x14f128440 <line:3:2, col:11> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f128400 <col:2> 'int ()' Function 0x14f128348 'gf_free' 'int ()'       `-RecoveryExpr 0x14f128420 <col:10> '<dependent type>' contains-errors lvalue ","19336":"`-FunctionDecl 0x14a80dda8  line:1:1 fill_submatch_list 'int (int)'   |-ParmVarDecl 0x14a80dcd8 <col:20, col:24> col:24 used argc 'int'   `-CompoundStmt 0x14a8289f0 <line:2:1, line:29:1>     |-DeclStmt 0x14a80df50 <line:4:5, col:11>     | `-VarDecl 0x14a80dee8 <col:5, col:10> col:10 used i 'int'     |-DeclStmt 0x14a80dfe8 <line:5:5, col:14>     | `-VarDecl 0x14a80df80 <col:5, col:13> col:13 used s 'char *'     |-IfStmt 0x14a80e180 <line:8:5, line:10:9>     | |-BinaryOperator 0x14a80e118 <line:8:9, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14a80e0d8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14a80e0f8 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14a80e170 <line:10:2, col:9>     |   `-RecoveryExpr 0x14a80e150 <col:9> '<dependent type>' contains-errors lvalue     `-ForStmt 0x14a828998 <line:17:5, line:27:5>       |-BinaryOperator 0x14a8284d0 <line:17:10, col:14> 'int' '='       | |-DeclRefExpr 0x14a828490 <col:10> 'int' lvalue Var 0x14a80dee8 'i' 'int'       | `-IntegerLiteral 0x14a8284b0 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x14a828548 <col:17, col:21> 'int' '<'       | |-ImplicitCastExpr 0x14a828530 <col:17> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x14a8284f0 <col:17> 'int' lvalue Var 0x14a80dee8 'i' 'int'       | `-IntegerLiteral 0x14a828510 <col:21> 'int' 10       |-UnaryOperator 0x14a828588 <col:25, col:27> 'int' prefix '++'       | `-DeclRefExpr 0x14a828568 <col:27> 'int' lvalue Var 0x14a80dee8 'i' 'int'       `-CompoundStmt 0x14a828988 <line:18:5, line:27:5> ","19748":"`-FunctionDecl 0x12e940c98  line:1:20 serdes_simple_xlate 'struct phy *(struct device *, struct of_phandle_args *)' static   |-ParmVarDecl 0x12e9286e8 <col:40, col:55> col:55 used dev 'struct device *'   |-ParmVarDecl 0x12e940ac8 <line:2:12, col:36> col:36 used args 'struct of_phandle_args *'   `-CompoundStmt 0x12e9438f0 <line:3:1, line:28:1>     |-DeclStmt 0x12e941198 <line:4:2, col:49>     | |-RecordDecl 0x12e940d98 <col:2, col:9> col:9 struct serdes_ctrl     | `-VarDecl 0x12e940f08 <col:2, col:48> col:22 used ctrl 'struct serdes_ctrl *' cinit     |   `-ImplicitCastExpr 0x12e941168 <col:29, col:48> 'struct serdes_ctrl *' <IntegralToPointer>     |     `-CallExpr 0x12e941128 <col:29, col:48> 'int'     |       |-ImplicitCastExpr 0x12e941110 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12e9410a0 <col:29> 'int ()' Function 0x12e940fe8 'dev_get_drvdata' 'int ()'     |       `-ImplicitCastExpr 0x12e941150 <col:45> 'struct device *' <LValueToRValue>     |         `-DeclRefExpr 0x12e9410c0 <col:45> 'struct device *' lvalue ParmVar 0x12e9286e8 'dev' 'struct device *'     |-DeclStmt 0x12e941350 <line:5:2, col:27>     | |-VarDecl 0x12e9411c8 <col:2, col:15> col:15 used port 'unsigned int'     | |-VarDecl 0x12e941248 <col:2, col:21> col:21 used idx 'unsigned int'     | `-VarDecl 0x12e9412c8 <col:2, col:26> col:26 used i 'unsigned int'     |-IfStmt 0x12e941600 <line:7:2, line:8:25>     | |-BinaryOperator 0x12e9413e8 <line:7:6, col:26> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12e9413a0 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12e941368 <col:6> 'struct of_phandle_args *' lvalue ParmVar 0x12e940ac8 'args' 'struct of_phandle_args *'     | | `-IntegerLiteral 0x12e9413c8 <col:26> 'int' 2     | `-ReturnStmt 0x12e9415f0 <line:8:3, col:25>     |   `-CallExpr 0x12e9415c8 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12e9414e8 <col:10> 'int ()' Function 0x12e941430 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x12e9415b0 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12e941598 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12e941578 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12e9416f8 <line:10:2, col:21> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x12e941620 <col:2> 'unsigned int' lvalue Var 0x12e9411c8 'port' 'unsigned int'     | `-ArraySubscriptExpr 0x12e9416d8 <col:9, col:21> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x12e9416c0 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x12e941678 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12e941640 <col:9> 'struct of_phandle_args *' lvalue ParmVar 0x12e940ac8 'args' 'struct of_phandle_args *'     |   `-IntegerLiteral 0x12e9416a0 <col:20> 'int' 0     |-BinaryOperator 0x12e9417f0 <line:11:2, col:20> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x12e941718 <col:2> 'unsigned int' lvalue Var 0x12e941248 'idx' 'unsigned int'     | `-ArraySubscriptExpr 0x12e9417d0 <col:8, col:20> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x12e9417b8 <col:8, col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x12e941770 <col:8, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12e941738 <col:8> 'struct of_phandle_args *' lvalue ParmVar 0x12e940ac8 'args' 'struct of_phandle_args *'     |   `-IntegerLiteral 0x12e941798 <col:19> 'int' 1     |-ForStmt 0x12e9437a0 <line:13:2, line:25:2>     | |-BinaryOperator 0x12e941868 <line:13:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x12e941810 <col:7> 'unsigned int' lvalue Var 0x12e9412c8 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x12e941850 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x12e941830 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x12e941900 <col:14, col:19> 'int' contains-errors '<='     | | |-DeclRefExpr 0x12e941888 <col:14> 'unsigned int' lvalue Var 0x12e9412c8 'i' 'unsigned int'     | | `-RecoveryExpr 0x12e9418e0 <col:19> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x12e941940 <col:31, col:32> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x12e941920 <col:31> 'unsigned int' lvalue Var 0x12e9412c8 'i' 'unsigned int'     | `-CompoundStmt 0x12e943768 <col:36, line:25:2>     |   |-DeclStmt 0x12e943140 <line:14:3, col:62>     |   | |-RecordDecl 0x12e941958 <col:3, col:10> col:10 struct serdes_macro     |   | `-VarDecl 0x12e942ec8 <col:3, col:61> col:24 used macro 'struct serdes_macro *' cinit     |   |   `-CallExpr 0x12e943100 <col:32, col:61> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x12e943010 <col:32> 'int ()' Function 0x12e942f58 'phy_get_drvdata' 'int ()'     |   |     `-ArraySubscriptExpr 0x12e9430e0 <col:48, col:60> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x12e9430b0 <col:48, col:54> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-RecoveryExpr 0x12e943068 <col:48, col:54> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x12e943030 <col:48> 'struct serdes_ctrl *' lvalue Var 0x12e940f08 'ctrl' 'struct serdes_ctrl *'     |   |       `-ImplicitCastExpr 0x12e9430c8 <col:59> 'unsigned int' <LValueToRValue>     |   |         `-DeclRefExpr 0x12e943090 <col:59> 'unsigned int' lvalue Var 0x12e9412c8 'i' 'unsigned int'     |   |-IfStmt 0x12e943200 <line:16:3, line:17:4>     |   | |-BinaryOperator 0x12e9431d8 <line:16:7, col:21> 'int' contains-errors '!='     |   | | |-DeclRefExpr 0x12e943158 <col:7> 'unsigned int' lvalue Var 0x12e941248 'idx' 'unsigned int'     |   | | `-RecoveryExpr 0x12e9431b0 <col:14, col:21> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12e943178 <col:14> 'struct serdes_macro *' contains-errors lvalue Var 0x12e942ec8 'macro' 'struct serdes_macro *'     |   | `-ContinueStmt 0x12e9431f8 <line:17:4>     |   |-IfStmt 0x12e9435c8 <line:20:3, line:21:25>     |   | |-BinaryOperator 0x12e943490 <line:20:7, col:44> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x12e9433d0 <col:7, col:24> 'int' '!='     |   | | | |-ImplicitCastExpr 0x12e9433a0 <col:7> 'unsigned int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x12e943220 <col:7> 'unsigned int' lvalue Var 0x12e941248 'idx' 'unsigned int'     |   | | | `-ImplicitCastExpr 0x12e9433b8 <col:14, col:24> 'unsigned int' <IntegralCast>     |   | | |   `-CallExpr 0x12e943378 <col:14, col:24> 'int'     |   | | |     |-ImplicitCastExpr 0x12e943360 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   | | |     | `-DeclRefExpr 0x12e943320 <col:14> 'int ()' Function 0x12e943268 'SERDES6G' 'int ()'     |   | | |     `-IntegerLiteral 0x12e943340 <col:23> 'int' 0     |   | | `-BinaryOperator 0x12e943470 <col:29, col:44> 'int' contains-errors '>='     |   | |   |-RecoveryExpr 0x12e943428 <col:29, col:36> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x12e9433f0 <col:29> 'struct serdes_macro *' contains-errors lvalue Var 0x12e942ec8 'macro' 'struct serdes_macro *'     |   | |   `-IntegerLiteral 0x12e943450 <col:44> 'int' 0     |   | `-ReturnStmt 0x12e9435b8 <line:21:4, col:25>     |   |   `-CallExpr 0x12e943590 <col:11, col:25> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x12e9434b0 <col:11> 'int ()' Function 0x12e941430 'ERR_PTR' 'int ()'     |   |     `-UnaryOperator 0x12e943578 <col:19, col:20> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x12e943560 <col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x12e943540 <col:20> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x12e943668 <line:23:3, col:17> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x12e943620 <col:3, col:10> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x12e9435e8 <col:3> 'struct serdes_macro *' contains-errors lvalue Var 0x12e942ec8 'macro' 'struct serdes_macro *'     |   | `-DeclRefExpr 0x12e943648 <col:17> 'unsigned int' lvalue Var 0x12e9411c8 'port' 'unsigned int'     |   `-ReturnStmt 0x12e943758 <line:24:3, col:22>     |     `-ArraySubscriptExpr 0x12e943738 <col:10, col:22> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x12e943708 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x12e9436c0 <col:10, col:16> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x12e943688 <col:10> 'struct serdes_ctrl *' lvalue Var 0x12e940f08 'ctrl' 'struct serdes_ctrl *'     |       `-ImplicitCastExpr 0x12e943720 <col:21> 'unsigned int' <LValueToRValue>     |         `-DeclRefExpr 0x12e9436e8 <col:21> 'unsigned int' lvalue Var 0x12e9412c8 'i' 'unsigned int'     `-ReturnStmt 0x12e9438e0 <line:27:2, col:24>       `-CallExpr 0x12e9438b8 <col:9, col:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x12e9437d8 <col:9> 'int ()' Function 0x12e941430 'ERR_PTR' 'int ()'         `-UnaryOperator 0x12e9438a0 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow           `-ImplicitCastExpr 0x12e943888 <col:18> '<dependent type>' contains-errors <LValueToRValue>             `-RecoveryExpr 0x12e943868 <col:18> '<dependent type>' contains-errors lvalue ","19650":"`-FunctionDecl 0x14b0275a0  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14b0276a0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14b027708 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14b027770 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14b027648 <<invalid sloc>> Implicit 900 ","19247":"`-FunctionDecl 0x130128b40  line:1:13 n_hdlc_buf_put 'void (struct n_hdlc_buf_list *, struct n_hdlc_buf *)' static   |-ParmVarDecl 0x130110648 <col:28, col:52> col:52 used list 'struct n_hdlc_buf_list *'   |-ParmVarDecl 0x130128a28 <line:2:7, col:26> col:26 used buf 'struct n_hdlc_buf *'   `-CompoundStmt 0x1301294d8 <line:3:1, line:17:1>     |-DeclStmt 0x130128cc0 <line:4:2, col:21>     | `-VarDecl 0x130128c58 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x130128eb8 <line:5:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130128e00 <col:2> 'int ()' Function 0x130128d48 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x130128e80 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x130128e58 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x130128e20 <col:21> 'struct n_hdlc_buf_list *' lvalue ParmVar 0x130110648 'list' 'struct n_hdlc_buf_list *'     | `-DeclRefExpr 0x130128e98 <col:36> 'unsigned long' lvalue Var 0x130128c58 'flags' 'unsigned long'     |-BinaryOperator 0x130128fa0 <line:7:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130128f20 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130128ee8 <col:2> 'struct n_hdlc_buf *' lvalue ParmVar 0x130128a28 'buf' 'struct n_hdlc_buf *'     | `-RecoveryExpr 0x130128f80 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1301291a8 <line:8:2, line:11:16> has_else     | |-RecoveryExpr 0x130128ff8 <line:8:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130128fc0 <col:6> 'struct n_hdlc_buf_list *' lvalue ParmVar 0x130110648 'list' 'struct n_hdlc_buf_list *'     | |-BinaryOperator 0x1301290e8 <line:9:3, col:22> '<dependent type>' contains-errors '='     | | |-CXXDependentScopeMemberExpr 0x130129080 <col:3, col:15> '<dependent type>' contains-errors lvalue ->link     | | | `-RecoveryExpr 0x130129058 <col:3, col:9> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x130129020 <col:3> 'struct n_hdlc_buf_list *' lvalue ParmVar 0x130110648 'list' 'struct n_hdlc_buf_list *'     | | `-DeclRefExpr 0x1301290c8 <col:22> 'struct n_hdlc_buf *' lvalue ParmVar 0x130128a28 'buf' 'struct n_hdlc_buf *'     | `-BinaryOperator 0x130129188 <line:11:3, col:16> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x130129140 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x130129108 <col:3> 'struct n_hdlc_buf_list *' lvalue ParmVar 0x130110648 'list' 'struct n_hdlc_buf_list *'     |   `-DeclRefExpr 0x130129168 <col:16> 'struct n_hdlc_buf *' lvalue ParmVar 0x130128a28 'buf' 'struct n_hdlc_buf *'     |-BinaryOperator 0x130129258 <line:12:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130129210 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1301291d8 <col:2> 'struct n_hdlc_buf_list *' lvalue ParmVar 0x130110648 'list' 'struct n_hdlc_buf_list *'     | `-DeclRefExpr 0x130129238 <col:15> 'struct n_hdlc_buf *' lvalue ParmVar 0x130128a28 'buf' 'struct n_hdlc_buf *'     |-UnaryOperator 0x1301292f8 <line:13:2, col:15> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-ParenExpr 0x1301292d8 <col:2, col:14> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1301292b0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130129278 <col:3> 'struct n_hdlc_buf_list *' lvalue ParmVar 0x130110648 'list' 'struct n_hdlc_buf_list *'     `-CallExpr 0x1301294a8 <line:15:2, col:46> '<dependent type>' contains-errors       |-DeclRefExpr 0x1301293f0 <col:2> 'int ()' Function 0x130129338 'spin_unlock_irqrestore' 'int ()'       |-UnaryOperator 0x130129470 <col:25, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x130129448 <col:26, col:32> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x130129410 <col:26> 'struct n_hdlc_buf_list *' lvalue ParmVar 0x130110648 'list' 'struct n_hdlc_buf_list *'       `-DeclRefExpr 0x130129488 <col:41> 'unsigned long' lvalue Var 0x130128c58 'flags' 'unsigned long' ","20014":"`-FunctionDecl 0x12103ec88  line:1:1 invalid psutil_users 'int (int *, int *)'   |-ParmVarDecl 0x12103eb28 <col:14, col:24> col:24 invalid self 'int *'   |-ParmVarDecl 0x12103eba8 <col:30, col:40> col:40 invalid args 'int *'   `-CompoundStmt 0x12200bbd8 <col:46, line:58:1>     |-DeclStmt 0x12103ef28 <line:2:5, col:21>     | |-RecordDecl 0x12103ed40 <col:5, col:12> col:12 struct utmpx     | `-VarDecl 0x12103eea8 <col:5, col:19> col:19 used ut 'struct utmpx *'     |-CallExpr 0x1220093a8 <line:13:5, col:15> 'int'     | `-ImplicitCastExpr 0x122009390 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x122009370 <col:5> 'int ()' Function 0x1220092b8 'setutxent' 'int ()'     |-WhileStmt 0x12200a040 <line:14:5, line:45:5>     | |-RecoveryExpr 0x122009578 <line:14:12, col:37> '_Bool' contains-errors     | `-CompoundStmt 0x12200a008 <col:40, line:45:5>     |   |-IfStmt 0x122009828 <line:20:9, line:21:18>     |   | |-RecoveryExpr 0x1220097a0 <line:20:13, col:15> '_Bool' contains-errors     |   | `-GotoStmt 0x122009810 <line:21:13, col:18> 'error' 0x1220097c0     |   |-IfStmt 0x122009928 <line:23:9, line:24:18>     |   | |-RecoveryExpr 0x1220098f0 <line:23:13, col:15> '_Bool' contains-errors     |   | `-GotoStmt 0x122009910 <line:24:13, col:18> 'error' 0x1220097c0     |   |-IfStmt 0x122009a28 <line:26:9, line:27:18>     |   | |-RecoveryExpr 0x1220099f0 <line:26:13, col:15> '_Bool' contains-errors     |   | `-GotoStmt 0x122009a10 <line:27:13, col:18> 'error' 0x1220097c0     |   |-IfStmt 0x122009d30 <line:37:9, line:38:18>     |   | |-RecoveryExpr 0x122009cf8 <line:37:13, col:25> '_Bool' contains-errors     |   | `-GotoStmt 0x122009d18 <line:38:13, col:18> 'error' 0x1220097c0     |   `-IfStmt 0x122009e88 <line:39:9, line:40:18>     |     |-RecoveryExpr 0x122009e50 <line:39:13, col:47> '_Bool' contains-errors     |     `-GotoStmt 0x122009e70 <line:40:13, col:18> 'error' 0x1220097c0     |-CallExpr 0x12200a178 <line:46:5, col:15> 'int'     | `-ImplicitCastExpr 0x12200a160 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12200a140 <col:5> 'int ()' Function 0x12200a088 'endutxent' 'int ()'     |-LabelStmt 0x12200bae0 <line:50:1, col:6> 'error'     | `-NullStmt 0x12200bad8 <col:6>     `-CallExpr 0x12200bbb8 <line:56:5, col:15> 'int'       `-ImplicitCastExpr 0x12200bba0 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12200bb80 <col:5> 'int ()' Function 0x12200a088 'endutxent' 'int ()' ","19233":"`-FunctionDecl 0x12e940cd0  col:8 implicit used isspace 'int (int)' extern   |-ParmVarDecl 0x12e940dd0 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x12e940d78 <<invalid sloc>> Implicit 929   |-NoThrowAttr 0x12e940e40 <col:8> Implicit   `-PureAttr 0x12e940e68 <col:8> Implicit ","19217":"`-FunctionDecl 0x136128318  line:1:1 invalid generate_common_name 'int (int *, int *, char *)'   |-ParmVarDecl 0x136128128 <col:22, col:35> col:35 invalid cms 'int *'   |-ParmVarDecl 0x1361281a8 <col:40, col:49> col:49 invalid der 'int *'   |-ParmVarDecl 0x136128228 <col:54, col:60> col:60 used cn_str 'char *'   `-CompoundStmt 0x1368088d0 <line:2:1, line:28:1>     |-DeclStmt 0x136128458 <line:5:2, col:8>     | `-VarDecl 0x1361283f0 <col:2, col:6> col:6 used rc 'int'     |-BinaryOperator 0x136141c00 <line:7:2, col:63> 'int' contains-errors '='     | |-DeclRefExpr 0x136128470 <col:2> 'int' lvalue Var 0x1361283f0 'rc' 'int'     | `-CallExpr 0x1361287b8 <col:7, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1361285f0 <col:7> 'int ()' Function 0x136128538 'generate_object_id' 'int ()'     |   |-RecoveryExpr 0x136128610 <col:26> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x136128780 <col:31, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x136128738 <col:32, col:35> '<dependent type>' contains-errors lvalue .oid     |   |   `-RecoveryExpr 0x136128718 <col:32> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x136128798 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136141ce0 <line:8:2, line:9:10>     | |-BinaryOperator 0x136141c78 <line:8:6, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x136141c60 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x136141c20 <col:6> 'int' lvalue Var 0x1361283f0 'rc' 'int'     | | `-IntegerLiteral 0x136141c40 <col:11> 'int' 0     | `-ReturnStmt 0x136141cd0 <line:9:3, col:10>     |   `-ImplicitCastExpr 0x136141cb8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x136141c98 <col:10> 'int' lvalue Var 0x1361283f0 'rc' 'int'     |-BinaryOperator 0x136141fe8 <line:10:2, col:46> 'int' contains-errors '='     | |-DeclRefExpr 0x136141d00 <col:2> 'int' lvalue Var 0x1361283f0 'rc' 'int'     | `-CallExpr 0x136141fb0 <col:7, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136141e00 <col:7> 'int ()' Function 0x136141d48 'generate_string' 'int ()'     |   |-RecoveryExpr 0x136141e20 <col:23> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x136141f98 <col:28, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x136141f50 <col:29, col:32> '<dependent type>' contains-errors lvalue .string     |   |   `-RecoveryExpr 0x136141f30 <col:29> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x136141eb8 <col:40> 'char *' lvalue ParmVar 0x136128228 'cn_str' 'char *'     |-IfStmt 0x1361420c8 <line:11:2, line:12:10>     | |-BinaryOperator 0x136142060 <line:11:6, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x136142048 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x136142008 <col:6> 'int' lvalue Var 0x1361283f0 'rc' 'int'     | | `-IntegerLiteral 0x136142028 <col:11> 'int' 0     | `-ReturnStmt 0x1361420b8 <line:12:3, col:10>     |   `-ImplicitCastExpr 0x1361420a0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x136142080 <col:10> 'int' lvalue Var 0x1361283f0 'rc' 'int'     |-DeclStmt 0x136142168 <line:14:2, col:11>     | `-VarDecl 0x136142100 <col:2, col:8> col:8 used ret 'void *'     |-BinaryOperator 0x136142518 <line:15:2, col:72> 'void *' contains-errors '='     | |-DeclRefExpr 0x136142180 <col:2> 'void *' lvalue Var 0x136142100 'ret' 'void *'     | `-CallExpr 0x1361424d8 <col:8, col:72> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136142280 <col:8> 'int ()' Function 0x1361421c8 'SEC_ASN1EncodeItem' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x1361422c0 <col:27, col:32> '<dependent type>' contains-errors lvalue ->arena     |   | `-RecoveryExpr 0x1361422a0 <col:27> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x136142468 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x136142448 <col:40> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x1361424a0 <col:49, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x136142480 <col:50> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1361424b8 <col:54> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1361427c8 <line:16:2, line:17:26>     | |-BinaryOperator 0x1361425b0 <line:16:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x136142538 <col:6> 'void *' lvalue Var 0x136142100 'ret' 'void *'     | | `-RecoveryExpr 0x136142590 <col:13> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x136142790 <line:17:3, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1361426b0 <col:3> 'int ()' Function 0x1361425f8 'cnreterr' 'int ()'     |   |-UnaryOperator 0x1361426f0 <col:12, col:13> 'int' prefix '-'     |   | `-IntegerLiteral 0x1361426d0 <col:13> 'int' 1     |   |-RecoveryExpr 0x136142708 <col:16> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x136142770 <col:21> 'char[4]' lvalue \"STR\"     |-IfStmt 0x136142a20 <line:22:2, line:23:10>     | |-BinaryOperator 0x1361429b8 <line:22:6, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x1361429a0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x136142960 <col:6> 'int' lvalue Var 0x1361283f0 'rc' 'int'     | | `-IntegerLiteral 0x136142980 <col:11> 'int' 0     | `-ReturnStmt 0x136142a10 <line:23:3, col:10>     |   `-ImplicitCastExpr 0x1361429f8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1361429d8 <col:10> 'int' lvalue Var 0x1361283f0 'rc' 'int'     |-IfStmt 0x136808880 <line:25:2, line:26:10>     | |-BinaryOperator 0x136808818 <line:25:6, col:11> 'int' '<'     | | |-ImplicitCastExpr 0x136808800 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x136142bc0 <col:6> 'int' lvalue Var 0x1361283f0 'rc' 'int'     | | `-IntegerLiteral 0x136142be0 <col:11> 'int' 0     | `-ReturnStmt 0x136808870 <line:26:3, col:10>     |   `-ImplicitCastExpr 0x136808858 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x136808838 <col:10> 'int' lvalue Var 0x1361283f0 'rc' 'int'     `-ReturnStmt 0x1368088c0 <line:27:2, col:9>       `-IntegerLiteral 0x1368088a0 <col:9> 'int' 0 ","20108":"`-FunctionDecl 0x102829938  col:28 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x102829a38 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1028299e0 <<invalid sloc>> Implicit 902 ","19278":"`-FunctionDecl 0x140026968  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x140026a68 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x140026ad0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x140026b38 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x140026a10 <<invalid sloc>> Implicit 882 ","19299":"`-FunctionDecl 0x129010950  line:1:13 bpf_map_mmap_close 'void (struct vm_area_struct *)' static   |-ParmVarDecl 0x129010848 <col:32, col:55> col:55 used vma 'struct vm_area_struct *'   `-CompoundStmt 0x129028c20 <line:2:1, line:10:1>     |-DeclStmt 0x1290286e0 <line:3:2, col:50>     | |-RecordDecl 0x129028448 <col:2, col:9> col:9 struct bpf_map     | `-VarDecl 0x1290285b8 <col:2, col:38> col:18 used map 'struct bpf_map *' cinit     |   `-CXXDependentScopeMemberExpr 0x129028680 <col:24, col:38> '<dependent type>' contains-errors lvalue ->private_data     |     `-RecoveryExpr 0x129028658 <col:24, col:29> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x129028620 <col:24> 'struct vm_area_struct *' lvalue ParmVar 0x129010848 'vma' 'struct vm_area_struct *'     `-IfStmt 0x129028c00 <line:5:2, line:9:2>       |-BinaryOperator 0x1290287c8 <line:5:6, col:22> '<dependent type>' contains-errors '&'       | |-RecoveryExpr 0x129028730 <col:6, col:11> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x1290286f8 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x129010848 'vma' 'struct vm_area_struct *'       | `-RecoveryExpr 0x1290287a8 <col:22> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x129028bd8 <col:35, line:9:2>         |-CallExpr 0x129028998 <line:6:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x129028900 <col:3> 'int ()' Function 0x129028848 'mutex_lock' 'int ()'         | `-UnaryOperator 0x129028980 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x129028958 <col:15, col:20> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x129028920 <col:15> 'struct bpf_map *' contains-errors lvalue Var 0x1290285b8 'map' 'struct bpf_map *'         |-UnaryOperator 0x129028a20 <line:7:3, col:16> '<dependent type>' contains-errors postfix '--' cannot overflow         | `-RecoveryExpr 0x1290289f8 <col:3, col:8> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1290289c0 <col:3> 'struct bpf_map *' contains-errors lvalue Var 0x1290285b8 'map' 'struct bpf_map *'         `-CallExpr 0x129028bb0 <line:8:3, col:34> '<dependent type>' contains-errors           |-DeclRefExpr 0x129028b18 <col:3> 'int ()' Function 0x129028a60 'mutex_unlock' 'int ()'           `-UnaryOperator 0x129028b98 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x129028b70 <col:17, col:22> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x129028b38 <col:17> 'struct bpf_map *' contains-errors lvalue Var 0x1290285b8 'map' 'struct bpf_map *' ","19573":"`-FunctionDecl 0x126140b58  line:1:12 rfcomm_sock_getsockopt 'int (struct socket *, int, int, char)' static   |-ParmVarDecl 0x126128648 <col:35, col:50> col:50 used sock 'struct socket *'   |-ParmVarDecl 0x1261286c8 <col:56, col:60> col:60 used level 'int'   |-ParmVarDecl 0x126128748 <col:67, col:71> col:71 used optname 'int'   |-ParmVarDecl 0x126140a00 <col:80, col:85> col:85 __user 'char'   `-CompoundStmt 0x12780c2a0 <line:2:1, line:54:1>     |-DeclStmt 0x126140eb8 <line:3:2, col:28>     | |-RecordDecl 0x126140c68 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x126140dd8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x126140e78 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x126140e40 <col:20> 'struct socket *' lvalue ParmVar 0x126128648 'sock' 'struct socket *'     |-DeclStmt 0x126141048 <line:4:2, col:24>     | |-RecordDecl 0x126140ed0 <col:2, col:9> col:9 struct bt_security     | `-VarDecl 0x126140fc8 <col:2, col:21> col:21 referenced invalid sec 'struct bt_security'     |-DeclStmt 0x126141198 <line:5:2, col:18>     | |-VarDecl 0x126141078 <col:2, col:6> col:6 used len 'int'     | `-VarDecl 0x1261410f8 <col:2, col:17> col:11 used err 'int' cinit     |   `-IntegerLiteral 0x126141160 <col:17> 'int' 0     |-CallExpr 0x1261413c8 <line:7:2, col:18> 'int' contains-errors     | |-ImplicitCastExpr 0x1261413b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1261412e0 <col:2> 'int ()' Function 0x126141228 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x1261413f8 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x126141340 <col:9> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x126141410 <col:16> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x126141360 <col:16> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     |-IfStmt 0x126141700 <line:9:2, line:10:66>     | |-BinaryOperator 0x1261414a0 <line:9:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x126141428 <col:6> 'int' lvalue ParmVar 0x1261286c8 'level' 'int'     | | `-RecoveryExpr 0x126141480 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1261416f0 <line:10:3, col:66>     |   `-CallExpr 0x1261416b0 <col:10, col:66> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1261415a0 <col:10> 'int ()' Function 0x1261414e8 'rfcomm_sock_getsockopt_old' 'int ()'     |     |-DeclRefExpr 0x1261415c0 <col:37> 'struct socket *' lvalue ParmVar 0x126128648 'sock' 'struct socket *'     |     |-DeclRefExpr 0x1261415e0 <col:43> 'int' lvalue ParmVar 0x126128748 'optname' 'int'     |     |-RecoveryExpr 0x126141670 <col:52> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x126141690 <col:60> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126141860 <line:12:2, line:13:11>     | |-BinaryOperator 0x126141798 <line:12:6, col:15> 'int' contains-errors '!='     | | |-DeclRefExpr 0x126141720 <col:6> 'int' lvalue ParmVar 0x1261286c8 'level' 'int'     | | `-RecoveryExpr 0x126141778 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x126141850 <line:13:3, col:11>     |   `-UnaryOperator 0x126141838 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x126141820 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x126141800 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127809af8 <line:15:2, line:16:11>     | |-CallExpr 0x127809a20 <line:15:6, col:26> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x126141960 <col:6> 'int ()' Function 0x1261418a8 'get_user' 'int ()'     | | |-DeclRefExpr 0x126141980 <col:15> 'int' lvalue Var 0x126141078 'len' 'int'     | | `-RecoveryExpr 0x127809a00 <col:20> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x127809ae8 <line:16:3, col:11>     |   `-UnaryOperator 0x127809ad0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x127809ab8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x127809a98 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127809c50 <line:18:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x127809c38 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127809bf8 <col:2> 'int ()' Function 0x127809b40 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x127809c78 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x127809c18 <col:12> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     |-SwitchStmt 0x127809cc8 <line:20:2, line:50:2>     | |-ImplicitCastExpr 0x127809cb0 <line:20:10> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x127809c90 <col:10> 'int' lvalue ParmVar 0x126128748 'optname' 'int'     | `-CompoundStmt 0x12780c098 <col:19, line:50:2>     |   |-IfStmt 0x127809f00 <line:22:3, line:25:3>     |   | |-BinaryOperator 0x127809dc0 <line:22:7, col:22> 'int' contains-errors '!='     |   | | |-RecoveryExpr 0x127809d40 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x127809d08 <col:7> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     |   | | `-RecoveryExpr 0x127809da0 <col:22> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x127809ee0 <col:35, line:25:3>     |   |   |-BinaryOperator 0x127809eb8 <line:23:4, col:11> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x127809de0 <col:4> 'int' lvalue Var 0x1261410f8 'err' 'int'     |   |   | `-UnaryOperator 0x127809ea0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x127809e88 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x127809e68 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x127809ed8 <line:24:4>     |   |-BinaryOperator 0x12780a150 <line:27:3, col:30> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x127809f68 <col:3, col:7> '<dependent type>' contains-errors lvalue .level     |   | | `-RecoveryExpr 0x127809f40 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x127809f20 <col:3> 'struct bt_security' lvalue Var 0x126140fc8 'sec' 'struct bt_security'     |   | `-RecoveryExpr 0x12780a128 <col:15, col:30> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x12780a0e8 <col:15, col:27> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x12780a0d0 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x12780a090 <col:15> 'int ()' Function 0x127809fd8 'rfcomm_pi' 'int ()'     |   |     `-ImplicitCastExpr 0x12780a110 <col:25> 'struct sock *' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x12780a0b0 <col:25> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     |   |-BreakStmt 0x12780a4e8 <line:33:3>     |   |-IfStmt 0x12780a610 <line:36:3, line:39:3>     |   | |-RecoveryExpr 0x12780a5b0 <line:36:7, col:51> '_Bool' contains-errors     |   | `-CompoundStmt 0x12780a5f8 <col:62, line:39:3>     |   |   `-BreakStmt 0x12780a5f0 <line:38:4>     |   |-BreakStmt 0x12780c040 <line:45:3>     |   |-DefaultStmt 0x12780c070 <line:47:2, col:9>     |   | `-NullStmt 0x12780c068 <col:9>     |   `-BreakStmt 0x12780c090 <line:49:3>     |-CallExpr 0x12780c218 <line:52:2, col:17> 'int' contains-errors     | |-ImplicitCastExpr 0x12780c200 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12780c1c0 <col:2> 'int ()' Function 0x12780c108 'release_sock' 'int ()'     | `-ImplicitCastExpr 0x12780c240 <col:15> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12780c1e0 <col:15> 'struct sock *' contains-errors lvalue Var 0x126140dd8 'sk' 'struct sock *'     `-ReturnStmt 0x12780c290 <line:53:2, col:9>       `-ImplicitCastExpr 0x12780c278 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12780c258 <col:9> 'int' lvalue Var 0x1261410f8 'err' 'int' ","19446":"`-FunctionDecl 0x15c128238  line:1:20 object_common1 'long (int, int)' static inline   |-ParmVarDecl 0x15c128158 <col:35> col:35 UNSERIALIZE_PARAMETER 'int'   |-ParmVarDecl 0x15c1280d8 <col:58> col:58 zend_class_entry 'int'   `-CompoundStmt 0x15c140fd8 <line:2:1, line:18:1>     |-DeclStmt 0x15c1283b8 <line:3:2, col:15>     | `-VarDecl 0x15c128350 <col:2, col:7> col:7 used elements 'long'     |-IfStmt 0x15c140f60 <line:9:2, line:15:2> has_else     | |-BinaryOperator 0x15c128748 <line:9:6, col:23> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x15c1286e0 <col:6, col:10> '<dependent type>' contains-errors lvalue ->serialize     | | | `-RecoveryExpr 0x15c1286c0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15c128728 <col:23> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x15c140c08 <col:29, line:11:2>     | | `-CallExpr 0x15c140bd8 <line:10:3, col:27> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15c140ab8 <col:3> 'int ()' Function 0x15c140a00 'object_init_ex' 'int ()'     | |   |-UnaryOperator 0x15c140ba0 <col:18, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x15c140b88 <col:19> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x15c140b68 <col:19> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x15c140bb8 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15c140f40 <line:11:9, line:15:2>     |   |-CallExpr 0x15c140ec0 <line:13:3, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15c140d00 <col:3> 'int ()' Function 0x15c140c48 'zend_error' 'int ()'     |   | |-RecoveryExpr 0x15c140e38 <col:14> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x15c140d80 <col:25> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x15c140e78 <col:32, col:36> '<dependent type>' contains-errors lvalue ->name     |   |   `-RecoveryExpr 0x15c140e58 <col:32> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x15c140f30 <line:14:3, col:10>     |     `-ImplicitCastExpr 0x15c140f18 <col:10> 'long' <IntegralCast>     |       `-IntegerLiteral 0x15c140ef8 <col:10> 'int' 0     `-ReturnStmt 0x15c140fc8 <line:17:2, col:9>       `-ImplicitCastExpr 0x15c140fb0 <col:9> 'long' <LValueToRValue>         `-DeclRefExpr 0x15c140f90 <col:9> 'long' lvalue Var 0x15c128350 'elements' 'long' ","20007":"`-FunctionDecl 0x13180dd90  line:1:13 check_buildid_dir_config 'void (void)' static   `-CompoundStmt 0x13801d350 <line:2:1, line:6:1>     |-DeclStmt 0x13801d018 <line:3:2, col:29>     | |-RecordDecl 0x13180de80 <col:2, col:9> col:9 struct buildid_dir_config     | `-VarDecl 0x13180df78 <col:2, col:28> col:28 referenced invalid c 'struct buildid_dir_config'     |-BinaryOperator 0x13801d130 <line:4:2, col:10> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13801d078 <col:2, col:4> '<dependent type>' contains-errors lvalue .dir     | | `-RecoveryExpr 0x13801d050 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13801d030 <col:2> 'struct buildid_dir_config' lvalue Var 0x13180df78 'c' 'struct buildid_dir_config'     | `-RecoveryExpr 0x13801d110 <col:10> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13801d320 <line:5:2, col:44> '<dependent type>' contains-errors       |-DeclRefExpr 0x13801d260 <col:2> 'int ()' Function 0x13801d1a8 'perf_config' 'int ()'       |-RecoveryExpr 0x13801d300 <col:14> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x13801d2b8 <col:42, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x13801d298 <col:43> '<dependent type>' contains-errors lvalue ","19238":"`-FunctionDecl 0x125827038  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x125827138 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1258271a0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x125827208 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1258270e0 <<invalid sloc>> Implicit 882 ","19210":"`-FunctionDecl 0x146100400  line:1:1 mesalink_connect_step3 'int (struct connectdata *, int)'   |-ParmVarDecl 0x14481f848 <col:24, col:44> col:44 used conn 'struct connectdata *'   |-ParmVarDecl 0x14481f8c8 <col:50, col:54> col:54 used sockindex 'int'   `-CompoundStmt 0x146100b88 <line:2:1, line:44:1>     |-DeclStmt 0x1461007f0 <line:4:3, col:59>     | |-RecordDecl 0x146100518 <col:3, col:10> col:10 struct ssl_connect_data     | `-VarDecl 0x146100688 <col:3, col:58> col:28 used connssl 'struct ssl_connect_data *' cinit     |   `-UnaryOperator 0x1461007c0 <col:38, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-ArraySubscriptExpr 0x1461007a0 <col:39, col:58> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x146100770 <col:39, col:45> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x146100728 <col:39, col:45> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x1461006f0 <col:39> 'struct connectdata *' lvalue ParmVar 0x14481f848 'conn' 'struct connectdata *'     |       `-ImplicitCastExpr 0x146100788 <col:49> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x146100750 <col:49> 'int' lvalue ParmVar 0x14481f8c8 'sockindex' 'int'     |-CallExpr 0x146100a40 <line:6:3, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146100920 <col:3> 'int ()' Function 0x146100868 'DEBUGASSERT' 'int ()'     | `-BinaryOperator 0x146100a20 <col:15, col:41> 'int' contains-errors '=='     |   |-RecoveryExpr 0x146100a00 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146100990 <col:32, col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x146100958 <col:32> 'struct ssl_connect_data *' contains-errors lvalue Var 0x146100688 'connssl' 'struct ssl_connect_data *'     |-BinaryOperator 0x146100b20 <line:41:3, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x146100aa0 <col:3, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x146100a68 <col:3> 'struct ssl_connect_data *' contains-errors lvalue Var 0x146100688 'connssl' 'struct ssl_connect_data *'     | `-RecoveryExpr 0x146100b00 <col:31> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x146100b78 <line:43:3, col:10>       `-RecoveryExpr 0x146100b58 <col:10> '<dependent type>' contains-errors lvalue ","20024":"`-FunctionDecl 0x132829b00  col:7 implicit used strcspn 'unsigned long (const char *, const char *)' extern   |-ParmVarDecl 0x132829c00 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x132829c68 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x132829ba8 <<invalid sloc>> Implicit 894 ","19676":"`-FunctionDecl 0x152141838  line:1:1 invalid compute_next_insert_id 'int (int, struct system_variables *)'   |-ParmVarDecl 0x1521280f0 <col:24, col:34> col:34 referenced invalid nr 'int'   |-ParmVarDecl 0x1521286e8 <col:37, col:62> col:62 used variables 'struct system_variables *'   `-CompoundStmt 0x152142010 <line:2:1, line:22:1>     |-DeclStmt 0x152141990 <line:3:3, col:30>     | `-VarDecl 0x152141908 <col:3, col:19> col:19 invalid save_nr 'const int'     |-IfStmt 0x152141d40 <line:5:3, line:16:3> has_else     | |-BinaryOperator 0x152141a28 <line:5:7, col:46> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1521419e0 <col:7, col:18> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1521419a8 <col:7> 'struct system_variables *' lvalue ParmVar 0x1521286e8 'variables' 'struct system_variables *'     | | `-IntegerLiteral 0x152141a08 <col:46> 'int' 1     | |-BinaryOperator 0x152141af0 <line:6:5, col:14> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x152141a68 <col:5> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x152141a48 <col:5> 'int' lvalue ParmVar 0x1521280f0 'nr' 'int'     | | `-BinaryOperator 0x152141ad0 <col:9, col:14> '<dependent type>' contains-errors '+'     | |   |-RecoveryExpr 0x152141a90 <col:9> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x152141ab0 <col:14> 'int' 1     | `-CompoundStmt 0x152141d30 <line:8:3, line:16:3>     |-IfStmt 0x152141fc0 <line:18:3, line:19:12>     | |-CallExpr 0x152141f50 <line:18:7, col:29> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x152141ed0 <col:7> 'int ()' Function 0x152141e18 'unlikely' 'int ()'     | | `-BinaryOperator 0x152141f30 <col:16, col:22> 'int' contains-errors '<='     | |   |-RecoveryExpr 0x152141ef0 <col:16> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x152141f10 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152141fb0 <line:19:5, col:12>     |   `-RecoveryExpr 0x152141f90 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x152142000 <line:21:3, col:10>       `-RecoveryExpr 0x152141fe0 <col:10> '<dependent type>' contains-errors lvalue ","19431":"`-FunctionDecl 0x14e026600  line:1:12 gfar_clean_rx_ring 'int (struct gfar_priv_rx_q *, int)' static   |-ParmVarDecl 0x14e00e248 <col:31, col:54> col:54 used rx_queue 'struct gfar_priv_rx_q *'   |-ParmVarDecl 0x14e00e2c8 <line:2:10, col:14> col:14 used rx_work_limit 'int'   `-CompoundStmt 0x14e02aba0 <line:3:1, line:91:1>     |-DeclStmt 0x14e026948 <line:4:2, col:42>     | |-RecordDecl 0x14e026700 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x14e026868 <col:2, col:38> col:21 used ndev 'struct net_device *' cinit     |   `-RecoveryExpr 0x14e026908 <col:28, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14e0268d0 <col:28> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |-DeclStmt 0x14e026d58 <line:5:2, col:47>     | |-RecordDecl 0x14e026960 <col:2, col:9> col:9 struct gfar_private     | `-VarDecl 0x14e026ac8 <col:2, col:46> col:23 used priv 'struct gfar_private *' cinit     |   `-ImplicitCastExpr 0x14e026d28 <col:30, col:46> 'struct gfar_private *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x14e026ce8 <col:30, col:46> 'int' contains-errors     |       |-ImplicitCastExpr 0x14e026cd0 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14e026c60 <col:30> 'int ()' Function 0x14e026ba8 'netdev_priv' 'int ()'     |       `-ImplicitCastExpr 0x14e026d10 <col:42> 'struct net_device *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14e026c80 <col:42> 'struct net_device *' contains-errors lvalue Var 0x14e026868 'ndev' 'struct net_device *'     |-DeclStmt 0x14e026f58 <line:6:2, col:19>     | |-RecordDecl 0x14e026d70 <col:2, col:9> col:9 struct rxbd8     | `-VarDecl 0x14e026ed8 <col:2, col:16> col:16 used bdp 'struct rxbd8 *'     |-DeclStmt 0x14e0270a8 <line:7:2, col:20>     | |-VarDecl 0x14e026f88 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x14e027008 <col:2, col:19> col:9 used howmany 'int' cinit     |   `-IntegerLiteral 0x14e027070 <col:19> 'int' 0     |-DeclStmt 0x14e027308 <line:8:2, col:37>     | |-RecordDecl 0x14e0270c0 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x14e027228 <col:2, col:34> col:18 used skb 'struct sk_buff *' cinit     |   `-RecoveryExpr 0x14e0272c8 <col:24, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14e027290 <col:24> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |-DeclStmt 0x14e027518 <line:9:2, col:46>     | `-VarDecl 0x14e027338 <col:2, col:45> col:6 used cleaned_cnt 'int' cinit     |   `-CallExpr 0x14e0274d8 <col:20, col:45> 'int'     |     |-ImplicitCastExpr 0x14e0274c0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14e027480 <col:20> 'int ()' Function 0x14e0273c8 'gfar_rxbd_unused' 'int ()'     |     `-ImplicitCastExpr 0x14e027500 <col:37> 'struct gfar_priv_rx_q *' <LValueToRValue>     |       `-DeclRefExpr 0x14e0274a0 <col:37> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |-DeclStmt 0x14d922eb8 <line:10:2, col:46>     | |-VarDecl 0x14e027548 <col:2, col:29> col:15 used total_bytes 'unsigned int' cinit     | | `-ImplicitCastExpr 0x14e0275d0 <col:29> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x14e0275b0 <col:29> 'int' 0     | `-VarDecl 0x14d922e00 <col:2, col:45> col:32 used total_pkts 'unsigned int' cinit     |   `-ImplicitCastExpr 0x14d922e88 <col:45> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x14d922e68 <col:45> 'int' 0     |-BinaryOperator 0x14d922f50 <line:13:2, col:16> 'int' contains-errors '='     | |-DeclRefExpr 0x14d922ed0 <col:2> 'int' lvalue Var 0x14e026f88 'i' 'int'     | `-RecoveryExpr 0x14d922f28 <col:6, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14d922ef0 <col:6> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |-WhileStmt 0x14e02a530 <line:15:2, line:72:2>     | |-UnaryOperator 0x14d922f90 <line:15:9, col:22> 'int' postfix '--'     | | `-DeclRefExpr 0x14d922f70 <col:9> 'int' lvalue ParmVar 0x14e00e2c8 'rx_work_limit' 'int'     | `-CompoundStmt 0x14e02a490 <col:26, line:72:2>     |   |-IfStmt 0x14d923278 <line:18:3, line:21:3>     |   | |-BinaryOperator 0x14d923020 <line:18:7, col:22> 'int' contains-errors '>='     |   | | |-DeclRefExpr 0x14d922fa8 <col:7> 'int' lvalue Var 0x14e027338 'cleaned_cnt' 'int'     |   | | `-RecoveryExpr 0x14d923000 <col:22> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x14d923258 <col:42, line:21:3>     |   |   |-CallExpr 0x14d923198 <line:19:4, col:45> 'int'     |   |   | |-ImplicitCastExpr 0x14d923180 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x14d923120 <col:4> 'int ()' Function 0x14d923068 'gfar_alloc_rx_buffs' 'int ()'     |   |   | |-ImplicitCastExpr 0x14d9231c8 <col:24> 'struct gfar_priv_rx_q *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x14d923140 <col:24> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |   |   | `-ImplicitCastExpr 0x14d9231e0 <col:34> 'int' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x14d923160 <col:34> 'int' lvalue Var 0x14e027338 'cleaned_cnt' 'int'     |   |   `-BinaryOperator 0x14d923238 <line:20:4, col:18> 'int' '='     |   |     |-DeclRefExpr 0x14d9231f8 <col:4> 'int' lvalue Var 0x14e027338 'cleaned_cnt' 'int'     |   |     `-IntegerLiteral 0x14d923218 <col:18> 'int' 0     |   |-BinaryOperator 0x14d9233a0 <line:23:3, col:32> 'struct rxbd8 *' contains-errors '='     |   | |-DeclRefExpr 0x14d923298 <col:3> 'struct rxbd8 *' lvalue Var 0x14e026ed8 'bdp' 'struct rxbd8 *'     |   | `-UnaryOperator 0x14d923388 <col:9, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x14d923368 <col:10, col:32> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x14d923338 <col:10, col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x14d9232f0 <col:10, col:20> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x14d9232b8 <col:10> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |   |     `-ImplicitCastExpr 0x14d923350 <col:31> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x14d923318 <col:31> 'int' lvalue Var 0x14e026f88 'i' 'int'     |   |-IfStmt 0x14d923750 <line:25:3, line:26:4>     |   | |-BinaryOperator 0x14d923728 <line:25:7, col:36> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x14d9236c0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x14d923700 <col:17, col:36> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x14d923640 <col:17> 'int ()' Function 0x14d923588 'BD_LFLAG' 'int ()'     |   | |   `-RecoveryExpr 0x14d9236e0 <col:26> '<dependent type>' contains-errors lvalue     |   | `-BreakStmt 0x14d923748 <line:26:4>     |   |-CallExpr 0x14d923888 <line:29:3, col:7> 'int'     |   | `-ImplicitCastExpr 0x14d923870 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14d923850 <col:3> 'int ()' Function 0x14d923798 'rmb' 'int ()'     |   |-BinaryOperator 0x14d923ad0 <line:32:3, col:52> 'struct sk_buff *' contains-errors '='     |   | |-DeclRefExpr 0x14d9238a8 <col:3> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   | `-CallExpr 0x14d923a98 <col:9, col:52> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14d9239a8 <col:9> 'int ()' Function 0x14d9238f0 'gfar_get_next_rxbuff' 'int ()'     |   |   |-DeclRefExpr 0x14d9239c8 <col:30> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |   |   |-RecoveryExpr 0x14d923a78 <col:40> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14d923a00 <col:49> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   |-IfStmt 0x14d923c88 <line:33:3, line:34:4>     |   | |-CallExpr 0x14d923c58 <line:33:7, col:20> 'int' contains-errors     |   | | |-ImplicitCastExpr 0x14d923c40 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14d923bd0 <col:7> 'int ()' Function 0x14d923b18 'unlikely' 'int ()'     |   | | `-UnaryOperator 0x14d923c28 <col:16, col:17> 'int' contains-errors prefix '!' cannot overflow     |   | |   `-ImplicitCastExpr 0x14d923c10 <col:17> 'struct sk_buff *' contains-errors <LValueToRValue>     |   | |     `-DeclRefExpr 0x14d923bf0 <col:17> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   | `-BreakStmt 0x14d923c80 <line:34:4>     |   |-UnaryOperator 0x14d923cc8 <line:36:3, col:14> 'int' postfix '++'     |   | `-DeclRefExpr 0x14d923ca8 <col:3> 'int' lvalue Var 0x14e027338 'cleaned_cnt' 'int'     |   |-UnaryOperator 0x14d923d00 <line:37:3, col:10> 'int' postfix '++'     |   | `-DeclRefExpr 0x14d923ce0 <col:3> 'int' lvalue Var 0x14e027008 'howmany' 'int'     |   |-IfStmt 0x14e029688 <line:39:3, line:40:8>     |   | |-CallExpr 0x14e029600 <line:39:7, col:45> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x14d923d18 <col:7> 'int ()' Function 0x14d923b18 'unlikely' 'int ()'     |   | | `-BinaryOperator 0x14d923dd0 <col:16, col:33> 'int' contains-errors '=='     |   | |   |-UnaryOperator 0x14d923d58 <col:16, col:18> 'int' prefix '++'     |   | |   | `-DeclRefExpr 0x14d923d38 <col:18> 'int' lvalue Var 0x14e026f88 'i' 'int'     |   | |   `-RecoveryExpr 0x14d923da8 <col:23, col:33> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14d923d70 <col:23> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |   | `-BinaryOperator 0x14e029668 <line:40:4, col:8> 'int' '='     |   |   |-DeclRefExpr 0x14e029628 <col:4> 'int' lvalue Var 0x14e026f88 'i' 'int'     |   |   `-IntegerLiteral 0x14e029648 <col:8> 'int' 0     |   |-BinaryOperator 0x14e029728 <line:42:3, col:29> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14e0296e0 <col:3, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e0296a8 <col:3> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |   | `-DeclRefExpr 0x14e029708 <col:29> 'int' lvalue Var 0x14e026f88 'i' 'int'     |   |-IfStmt 0x14e029790 <line:45:3, line:46:4>     |   | |-RecoveryExpr 0x14e029768 <line:45:7, col:38> '_Bool' contains-errors     |   | `-ContinueStmt 0x14e029788 <line:46:4>     |   |-IfStmt 0x14e029bb8 <line:48:3, line:56:3>     |   | |-RecoveryExpr 0x14e0297f0 <line:48:7, col:44> '_Bool' contains-errors     |   | `-CompoundStmt 0x14e029b90 <col:47, line:56:3>     |   |   |-CallExpr 0x14e029a68 <line:52:4, col:21> 'int' contains-errors     |   |   | |-ImplicitCastExpr 0x14e029a50 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x14e029a10 <col:4> 'int ()' Function 0x14e029958 'dev_kfree_skb' 'int ()'     |   |   | `-ImplicitCastExpr 0x14e029a90 <col:18> 'struct sk_buff *' contains-errors <LValueToRValue>     |   |   |   `-DeclRefExpr 0x14e029a30 <col:18> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   |   |-UnaryOperator 0x14e029b70 <line:54:4, col:30> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |   | `-CXXDependentScopeMemberExpr 0x14e029b28 <col:4, col:20> '<dependent type>' contains-errors lvalue .rx_dropped     |   |   |   `-RecoveryExpr 0x14e029b00 <col:4, col:14> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x14e029ac8 <col:4> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |   |   `-ContinueStmt 0x14e029b88 <line:55:4>     |   |-CallExpr 0x14e029d30 <line:58:3, col:31> 'int' contains-errors     |   | |-ImplicitCastExpr 0x14e029d18 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e029cb8 <col:3> 'int ()' Function 0x14e029c00 'gfar_process_frame' 'int ()'     |   | |-ImplicitCastExpr 0x14e029d60 <col:22> 'struct net_device *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x14e029cd8 <col:22> 'struct net_device *' contains-errors lvalue Var 0x14e026868 'ndev' 'struct net_device *'     |   | `-ImplicitCastExpr 0x14e029d78 <col:28> 'struct sk_buff *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x14e029cf8 <col:28> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   |-UnaryOperator 0x14e029db0 <line:61:3, col:13> 'unsigned int' postfix '++'     |   | `-DeclRefExpr 0x14e029d90 <col:3> 'unsigned int' lvalue Var 0x14d922e00 'total_pkts' 'unsigned int'     |   |-CompoundAssignOperator 0x14e029e48 <line:62:3, col:23> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x14e029dc8 <col:3> 'unsigned int' lvalue Var 0x14e027548 'total_bytes' 'unsigned int'     |   | `-RecoveryExpr 0x14e029e20 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14e029de8 <col:18> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   |-CallExpr 0x14e029ff8 <line:64:3, col:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e029f58 <col:3> 'int ()' Function 0x14e029ea0 'skb_record_rx_queue' 'int ()'     |   | |-DeclRefExpr 0x14e029f78 <col:23> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   | `-RecoveryExpr 0x14e029fd0 <col:28, col:38> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14e029f98 <col:28> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |   |-BinaryOperator 0x14e02a240 <line:66:3, col:43> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14e02a060 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14e02a028 <col:3> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   | `-CallExpr 0x14e02a1e0 <col:19, col:43> 'int' contains-errors     |   |   |-ImplicitCastExpr 0x14e02a1c8 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14e02a168 <col:19> 'int ()' Function 0x14e02a0b0 'eth_type_trans' 'int ()'     |   |   |-ImplicitCastExpr 0x14e02a210 <col:34> 'struct sk_buff *' contains-errors <LValueToRValue>     |   |   | `-DeclRefExpr 0x14e02a188 <col:34> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |   |   `-ImplicitCastExpr 0x14e02a228 <col:39> 'struct net_device *' contains-errors <LValueToRValue>     |   |     `-DeclRefExpr 0x14e02a1a8 <col:39> 'struct net_device *' contains-errors lvalue Var 0x14e026868 'ndev' 'struct net_device *'     |   `-CallExpr 0x14e02a440 <line:69:3, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14e02a340 <col:3> 'int ()' Function 0x14e02a288 'napi_gro_receive' 'int ()'     |     |-UnaryOperator 0x14e02a408 <col:20, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-CXXDependentScopeMemberExpr 0x14e02a3c0 <col:21, col:36> '<dependent type>' contains-errors lvalue ->napi_rx     |     |   `-RecoveryExpr 0x14e02a398 <col:21, col:31> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14e02a360 <col:21> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |     `-DeclRefExpr 0x14e02a420 <col:45> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |-BinaryOperator 0x14e02a5d0 <line:75:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14e02a588 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14e02a550 <col:2> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     | `-DeclRefExpr 0x14e02a5b0 <col:18> 'struct sk_buff *' contains-errors lvalue Var 0x14e027228 'skb' 'struct sk_buff *'     |-CompoundAssignOperator 0x14e02a6c8 <line:77:2, col:32> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x14e02a660 <col:2, col:18> '<dependent type>' contains-errors lvalue .rx_packets     | | `-RecoveryExpr 0x14e02a638 <col:2, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e02a600 <col:2> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     | `-DeclRefExpr 0x14e02a6a8 <col:32> 'unsigned int' lvalue Var 0x14d922e00 'total_pkts' 'unsigned int'     |-CompoundAssignOperator 0x14e02a7c0 <line:78:2, col:30> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x14e02a758 <col:2, col:18> '<dependent type>' contains-errors lvalue .rx_bytes     | | `-RecoveryExpr 0x14e02a730 <col:2, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e02a6f8 <col:2> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     | `-DeclRefExpr 0x14e02a7a0 <col:30> 'unsigned int' lvalue Var 0x14e027548 'total_bytes' 'unsigned int'     |-IfStmt 0x14e02a900 <line:80:2, line:81:44>     | |-ImplicitCastExpr 0x14e02a810 <line:80:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14e02a7f0 <col:6> 'int' lvalue Var 0x14e027338 'cleaned_cnt' 'int'     | `-CallExpr 0x14e02a8a0 <line:81:3, col:44> 'int'     |   |-ImplicitCastExpr 0x14e02a888 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e02a828 <col:3> 'int ()' Function 0x14d923068 'gfar_alloc_rx_buffs' 'int ()'     |   |-ImplicitCastExpr 0x14e02a8d0 <col:23> 'struct gfar_priv_rx_q *' <LValueToRValue>     |   | `-DeclRefExpr 0x14e02a848 <col:23> 'struct gfar_priv_rx_q *' lvalue ParmVar 0x14e00e248 'rx_queue' 'struct gfar_priv_rx_q *'     |   `-ImplicitCastExpr 0x14e02a8e8 <col:33> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14e02a868 <col:33> 'int' lvalue Var 0x14e027338 'cleaned_cnt' 'int'     |-IfStmt 0x14e02ab38 <line:84:2, line:88:2>     | |-CallExpr 0x14e02a9a0 <line:84:6, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14e02a920 <col:6> 'int ()' Function 0x14d923b18 'unlikely' 'int ()'     | | `-RecoveryExpr 0x14e02a978 <col:15, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e02a940 <col:15> 'struct gfar_private *' contains-errors lvalue Var 0x14e026ac8 'priv' 'struct gfar_private *'     | `-CompoundStmt 0x14e02ab28 <col:36, line:88:2>     `-ReturnStmt 0x14e02ab90 <line:90:2, col:9>       `-ImplicitCastExpr 0x14e02ab78 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14e02ab58 <col:9> 'int' lvalue Var 0x14e027008 'howmany' 'int' ","19879":"`-FunctionDecl 0x1251281c8  line:1:1 invalid idna_strerror 'int (int)'   |-ParmVarDecl 0x1251280f0 <col:16, col:24> col:24 invalid rc 'int'   `-CompoundStmt 0x1251431e0 <line:2:1, line:63:1>     |-DeclStmt 0x1251282f8 <line:3:3, col:16>     | `-VarDecl 0x125128290 <col:3, col:15> col:15 used p 'const char *'     |-CallExpr 0x125128530 <line:5:3, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125128470 <col:3> 'int ()' Function 0x1251283b8 'bindtextdomain' 'int ()'     | |-RecoveryExpr 0x1251284f0 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x125128510 <col:28> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x125128598 <line:7:3, line:60:5>     | |-ImplicitCastExpr 0x125128580 <line:7:11> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x125128560 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1251430a0 <line:8:5, line:60:5>     |   |-BinaryOperator 0x125141c20 <line:10:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x1251285d8 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x1251287e8 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x1251287a8 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125128790 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1251286d8 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x1251287d0 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x125128740 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125141c40 <line:11:7>     |   |-BinaryOperator 0x125141d30 <line:14:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x125141c60 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125141d18 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125141cd8 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125141cc0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x125141c80 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125141d00 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x125141ca0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125141d50 <line:15:7>     |   |-BinaryOperator 0x125141e40 <line:18:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x125141d70 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125141e28 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125141de8 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125141dd0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x125141d90 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125141e10 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x125141db0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125141e60 <line:19:7>     |   |-BinaryOperator 0x125141f50 <line:22:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x125141e80 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125141f38 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125141ef8 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125141ee0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x125141ea0 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125141f20 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x125141ec0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125141f70 <line:23:7>     |   |-BinaryOperator 0x125142060 <line:26:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x125141f90 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125142048 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125142008 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125141ff0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x125141fb0 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125142030 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x125141fd0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125142080 <line:27:7>     |   |-BinaryOperator 0x125142170 <line:30:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x1251420a0 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125142158 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125142118 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125142100 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1251420c0 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125142140 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x1251420e0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125142190 <line:31:7>     |   |-BinaryOperator 0x125142280 <line:34:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x1251421b0 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125142268 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125142228 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125142210 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1251421d0 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125142250 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x1251421f0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x1251422a0 <line:35:7>     |   |-BinaryOperator 0x125142378 <line:38:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x1251422a8 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125142360 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125142320 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125142308 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1251422c8 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125142348 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x1251422e8 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125142398 <line:39:7>     |   |-BinaryOperator 0x125142470 <line:42:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x1251423a0 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125142458 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125142418 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x125142400 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1251423c0 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125142440 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x1251423e0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125142490 <line:43:7>     |   |-BinaryOperator 0x125142568 <line:46:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x125142498 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125142550 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125142510 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x1251424f8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1251424b8 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125142538 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x1251424d8 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125142588 <line:47:7>     |   |-BinaryOperator 0x125142660 <line:50:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x125142590 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125142648 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125142608 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x1251425f0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1251425b0 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125142630 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x1251425d0 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125142680 <line:51:7>     |   |-BinaryOperator 0x125142758 <line:54:7, col:18> 'const char *' '='     |   | |-DeclRefExpr 0x125142688 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   | `-ImplicitCastExpr 0x125142740 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x125142700 <col:11, col:18> 'int'     |   |     |-ImplicitCastExpr 0x1251426e8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1251426a8 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |     `-ImplicitCastExpr 0x125142728 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x1251426c8 <col:13> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x125142778 <line:55:7>     |   |-DefaultStmt 0x125143078 <line:57:5, line:58:18>     |   | `-BinaryOperator 0x125143058 <col:7, col:18> 'const char *' '='     |   |   |-DeclRefExpr 0x125142780 <col:7> 'const char *' lvalue Var 0x125128290 'p' 'const char *'     |   |   `-ImplicitCastExpr 0x125143040 <col:11, col:18> 'const char *' <IntegralToPointer>     |   |     `-CallExpr 0x125143000 <col:11, col:18> 'int'     |   |       |-ImplicitCastExpr 0x1251427e0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x1251427a0 <col:11> 'int ()' Function 0x125128620 '_' 'int ()'     |   |       `-ImplicitCastExpr 0x125143028 <col:13> 'char *' <ArrayToPointerDecay>     |   |         `-StringLiteral 0x1251427c0 <col:13> 'char[4]' lvalue \"STR\"     |   `-BreakStmt 0x125143098 <line:59:7>     `-ReturnStmt 0x1251431d0 <line:62:3, col:10>       `-ImplicitCastExpr 0x1251431b8 <col:10> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x1251431a0 <col:10> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x125143180 <col:10> 'const char *' lvalue Var 0x125128290 'p' 'const char *' ","20104":"`-FunctionDecl 0x12a054f48  line:1:1 xfs_inode_match_id_union 'int (struct xfs_inode *, struct xfs_eofblocks *)'   |-ParmVarDecl 0x12a03d248 <line:2:2, col:20> col:20 used ip 'struct xfs_inode *'   |-ParmVarDecl 0x12a054e28 <line:3:2, col:24> col:24 used eofb 'struct xfs_eofblocks *'   `-CompoundStmt 0x12a055b88 <line:4:1, line:18:1>     |-IfStmt 0x12a0554e0 <line:5:2, line:7:10>     | |-RecoveryExpr 0x12a055490 <line:5:6, line:6:44> '_Bool' contains-errors     | `-ReturnStmt 0x12a0554d0 <line:7:3, col:10>     |   `-IntegerLiteral 0x12a0554b0 <col:10> 'int' 1     |-IfStmt 0x12a055838 <line:9:2, line:11:10>     | |-RecoveryExpr 0x12a0557e8 <line:9:6, line:10:44> '_Bool' contains-errors     | `-ReturnStmt 0x12a055828 <line:11:3, col:10>     |   `-IntegerLiteral 0x12a055808 <col:10> 'int' 1     |-IfStmt 0x12a055b38 <line:13:2, line:15:10>     | |-RecoveryExpr 0x12a055ae8 <line:13:6, line:14:34> '_Bool' contains-errors     | `-ReturnStmt 0x12a055b28 <line:15:3, col:10>     |   `-IntegerLiteral 0x12a055b08 <col:10> 'int' 1     `-ReturnStmt 0x12a055b78 <line:17:2, col:9>       `-IntegerLiteral 0x12a055b58 <col:9> 'int' 0 ","19381":"`-FunctionDecl 0x14c9135c8  line:1:17 delegpt_copy 'struct delegpt *(struct delegpt *, struct regional *)'   |-ParmVarDecl 0x14c8fac18 <col:30, col:46> col:46 used dp 'struct delegpt *'   |-ParmVarDecl 0x14c913428 <col:50, col:67> col:67 used region 'struct regional *'   `-CompoundStmt 0x14c01fd68 <line:2:1, line:28:1>     |-DeclStmt 0x14c913960 <line:3:2, col:47>     | `-VarDecl 0x14c9136f0 <col:2, col:46> col:18 used copy 'struct delegpt *' cinit     |   `-ImplicitCastExpr 0x14c913948 <col:25, col:46> 'struct delegpt *' <IntegralToPointer>     |     `-CallExpr 0x14c913908 <col:25, col:46> 'int'     |       |-ImplicitCastExpr 0x14c9138f0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14c913880 <col:25> 'int ()' Function 0x14c9137c8 'delegpt_create' 'int ()'     |       `-ImplicitCastExpr 0x14c913930 <col:40> 'struct regional *' <LValueToRValue>     |         `-DeclRefExpr 0x14c9138a0 <col:40> 'struct regional *' lvalue ParmVar 0x14c913428 'region' 'struct regional *'     |-DeclStmt 0x14c913b68 <line:4:2, col:23>     | |-RecordDecl 0x14c913978 <col:2, col:9> col:9 struct delegpt_ns     | `-VarDecl 0x14c913ae8 <col:2, col:21> col:21 used ns 'struct delegpt_ns *'     |-DeclStmt 0x14c913d68 <line:5:2, col:24>     | |-RecordDecl 0x14c913b80 <col:2, col:9> col:9 struct delegpt_addr     | `-VarDecl 0x14c913ce8 <col:2, col:23> col:23 used a 'struct delegpt_addr *'     |-IfStmt 0x14c913e18 <line:6:2, line:7:10>     | |-UnaryOperator 0x14c913db8 <line:6:5, col:6> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c913da0 <col:6> 'struct delegpt *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c913d80 <col:6> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     | `-ReturnStmt 0x14c913e08 <line:7:3, col:10>     |   `-RecoveryExpr 0x14c913de8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c914070 <line:8:2, line:9:10>     | |-UnaryOperator 0x14c914010 <line:8:5, col:45> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14c913fd8 <col:6, col:45> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14c913f18 <col:6> 'int ()' Function 0x14c913e60 'delegpt_set_name' 'int ()'     | |   |-DeclRefExpr 0x14c913f38 <col:23> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     | |   |-DeclRefExpr 0x14c913f58 <col:29> 'struct regional *' lvalue ParmVar 0x14c913428 'region' 'struct regional *'     | |   `-RecoveryExpr 0x14c913fb0 <col:37, col:41> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14c913f78 <col:37> 'struct delegpt *' lvalue ParmVar 0x14c8fac18 'dp' 'struct delegpt *'     | `-ReturnStmt 0x14c914060 <line:9:3, col:10>     |   `-RecoveryExpr 0x14c914040 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c914150 <line:10:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c9140c8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c914090 <col:2> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     | `-RecoveryExpr 0x14c914128 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c9140f0 <col:16> 'struct delegpt *' lvalue ParmVar 0x14c8fac18 'dp' 'struct delegpt *'     |-BinaryOperator 0x14c914230 <line:11:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c9141a8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c914170 <col:2> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     | `-RecoveryExpr 0x14c914208 <col:29, col:33> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c9141d0 <col:29> 'struct delegpt *' lvalue ParmVar 0x14c8fac18 'dp' 'struct delegpt *'     |-BinaryOperator 0x14c914310 <line:12:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c914288 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c914250 <col:2> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     | `-RecoveryExpr 0x14c9142e8 <col:23, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c9142b0 <col:23> 'struct delegpt *' lvalue ParmVar 0x14c8fac18 'dp' 'struct delegpt *'     |-ForStmt 0x14c01f780 <line:13:2, line:21:2>     | |-BinaryOperator 0x14c9143b0 <line:13:6, col:15> 'struct delegpt_ns *' contains-errors '='     | | |-DeclRefExpr 0x14c914330 <col:6> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     | | `-RecoveryExpr 0x14c914388 <col:11, col:15> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c914350 <col:11> 'struct delegpt *' lvalue ParmVar 0x14c8fac18 'dp' 'struct delegpt *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x14c01ee00 <col:23> 'struct delegpt_ns *' <LValueToRValue>     | | `-DeclRefExpr 0x14c9143d0 <col:23> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     | |-BinaryOperator 0x14c01ee98 <col:27, col:36> 'struct delegpt_ns *' contains-errors '='     | | |-DeclRefExpr 0x14c01ee18 <col:27> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     | | `-RecoveryExpr 0x14c01ee70 <col:32, col:36> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c01ee38 <col:32> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     | `-CompoundStmt 0x14c01f740 <col:42, line:21:2>     |   |-IfStmt 0x14c01f158 <line:14:3, line:15:11>     |   | |-UnaryOperator 0x14c01f0f8 <line:14:6, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-CallExpr 0x14c01f0b8 <col:7, col:54> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x14c01ef98 <col:7> 'int ()' Function 0x14c01eee0 'delegpt_add_ns' 'int ()'     |   | |   |-DeclRefExpr 0x14c01efb8 <col:22> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     |   | |   |-DeclRefExpr 0x14c01efd8 <col:28> 'struct regional *' lvalue ParmVar 0x14c913428 'region' 'struct regional *'     |   | |   |-RecoveryExpr 0x14c01f030 <col:36, col:40> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x14c01eff8 <col:36> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     |   | |   `-RecoveryExpr 0x14c01f090 <col:46, col:50> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x14c01f058 <col:46> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     |   | `-ReturnStmt 0x14c01f148 <line:15:4, col:11>     |   |   `-RecoveryExpr 0x14c01f128 <col:11> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14c01f280 <line:16:3, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14c01f1d8 <col:3, col:17> '<dependent type>' contains-errors lvalue ->resolved     |   | | `-RecoveryExpr 0x14c01f1b0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14c01f178 <col:3> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     |   | `-RecoveryExpr 0x14c01f258 <col:28, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c01f220 <col:28> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     |   |-BinaryOperator 0x14c01f3a8 <line:17:3, col:28> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14c01f300 <col:3, col:17> '<dependent type>' contains-errors lvalue ->got4     |   | | `-RecoveryExpr 0x14c01f2d8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14c01f2a0 <col:3> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     |   | `-RecoveryExpr 0x14c01f380 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c01f348 <col:24> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     |   |-BinaryOperator 0x14c01f4d0 <line:18:3, col:28> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14c01f428 <col:3, col:17> '<dependent type>' contains-errors lvalue ->got6     |   | | `-RecoveryExpr 0x14c01f400 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14c01f3c8 <col:3> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     |   | `-RecoveryExpr 0x14c01f4a8 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c01f470 <col:24> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     |   |-BinaryOperator 0x14c01f5f8 <line:19:3, col:35> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14c01f550 <col:3, col:17> '<dependent type>' contains-errors lvalue ->done_pside4     |   | | `-RecoveryExpr 0x14c01f528 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14c01f4f0 <col:3> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     |   | `-RecoveryExpr 0x14c01f5d0 <col:31, col:35> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c01f598 <col:31> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     |   `-BinaryOperator 0x14c01f720 <line:20:3, col:35> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14c01f678 <col:3, col:17> '<dependent type>' contains-errors lvalue ->done_pside6     |     | `-RecoveryExpr 0x14c01f650 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14c01f618 <col:3> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *'     |     `-RecoveryExpr 0x14c01f6f8 <col:31, col:35> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c01f6c0 <col:31> 'struct delegpt_ns *' lvalue Var 0x14c913ae8 'ns' 'struct delegpt_ns *'     |-ForStmt 0x14c01fce8 <line:22:2, line:26:2>     | |-BinaryOperator 0x14c01f838 <line:22:6, col:14> 'struct delegpt_addr *' contains-errors '='     | | |-DeclRefExpr 0x14c01f7b8 <col:6> 'struct delegpt_addr *' lvalue Var 0x14c913ce8 'a' 'struct delegpt_addr *'     | | `-RecoveryExpr 0x14c01f810 <col:10, col:14> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c01f7d8 <col:10> 'struct delegpt *' lvalue ParmVar 0x14c8fac18 'dp' 'struct delegpt *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x14c01f878 <col:27> 'struct delegpt_addr *' <LValueToRValue>     | | `-DeclRefExpr 0x14c01f858 <col:27> 'struct delegpt_addr *' lvalue Var 0x14c913ce8 'a' 'struct delegpt_addr *'     | |-BinaryOperator 0x14c01f910 <col:30, col:37> 'struct delegpt_addr *' contains-errors '='     | | |-DeclRefExpr 0x14c01f890 <col:30> 'struct delegpt_addr *' lvalue Var 0x14c913ce8 'a' 'struct delegpt_addr *'     | | `-RecoveryExpr 0x14c01f8e8 <col:34, col:37> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c01f8b0 <col:34> 'struct delegpt_addr *' lvalue Var 0x14c913ce8 'a' 'struct delegpt_addr *'     | `-CompoundStmt 0x14c01fcd8 <col:50, line:26:2>     `-ReturnStmt 0x14c01fd58 <line:27:2, col:9>       `-ImplicitCastExpr 0x14c01fd40 <col:9> 'struct delegpt *' <LValueToRValue>         `-DeclRefExpr 0x14c01fd20 <col:9> 'struct delegpt *' lvalue Var 0x14c9136f0 'copy' 'struct delegpt *' ","19270":"`-FunctionDecl 0x14e80de88  line:1:18 invalid Restricted_getattr 'int *(int *, char *)' static   |-ParmVarDecl 0x14e80dd28 <col:37, col:55> col:55 invalid self 'int *'   |-ParmVarDecl 0x14e80dda8 <col:61, col:67> col:67 name 'char *'   `-CompoundStmt 0x14e80e280 <line:2:1, line:6:1>     |-CallExpr 0x14e80e200 <line:3:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e80e0a0 <col:5> 'int ()' Function 0x14e80dfe8 'PyErr_Format' 'int ()'     | |-RecoveryExpr 0x14e80e1e0 <col:18> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x14e80e120 <col:33> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x14e80e160 <col:40, col:46> '<dependent type>' contains-errors lvalue ->s     |   `-RecoveryExpr 0x14e80e140 <col:40> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14e80e270 <line:5:5, col:12>       `-RecoveryExpr 0x14e80e250 <col:12> '<dependent type>' contains-errors lvalue ","19968":"`-FunctionDecl 0x133928a88  line:1:1 invalid create_pty_only 'int (int *, int *)'   |-ParmVarDecl 0x133928928 <col:17, col:25> col:25 referenced invalid term 'int *'   |-ParmVarDecl 0x1339289a8 <col:31, col:41> col:41 invalid options 'int *'   `-CompoundStmt 0x133943d48 <line:2:1, line:64:1>     |-DeclStmt 0x133928d28 <line:5:5, col:39>     | |-VarDecl 0x133928be0 <col:5, col:24> col:14 used in_name 'char[80]'     | `-VarDecl 0x133928ca8 <col:5, col:38> col:27 used out_name 'char[80]'     |-CallExpr 0x133942000 <line:8:5, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133928ed0 <col:5> 'int ()' Function 0x133928e18 'create_vterm' 'int ()'     | |-RecoveryExpr 0x133928ef0 <col:18> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x133928f30 <col:24, col:30> '<dependent type>' contains-errors lvalue ->tl_rows     | | `-RecoveryExpr 0x133928f10 <col:24> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x133928f98 <col:39, col:45> '<dependent type>' contains-errors lvalue ->tl_cols     |   `-RecoveryExpr 0x133928f78 <col:39> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133942508 <line:10:5, line:12:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133942118 <line:10:5> 'int ()' Function 0x133942060 'vim_snprintf' 'int ()'     | |-DeclRefExpr 0x133942138 <col:18> 'char[80]' lvalue Var 0x133928be0 'in_name' 'char[80]'     | |-UnaryExprOrTypeTraitExpr 0x133942198 <col:27, col:41> 'unsigned long' sizeof     | | `-ParenExpr 0x133942178 <col:33, col:41> 'char[80]' lvalue     | |   `-DeclRefExpr 0x133942158 <col:34> 'char[80]' lvalue Var 0x133928be0 'in_name' 'char[80]' non_odr_use_unevaluated     | |-StringLiteral 0x133942200 <col:44> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x133942480 <line:11:6, col:26> 'int'     | | `-ImplicitCastExpr 0x133942468 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x133942300 <col:6> 'int ()' Function 0x133942248 'GetCurrentProcessId' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1339424c0 <line:12:6, col:14> '<dependent type>' contains-errors lvalue ->b_fnum     |   `-RecoveryExpr 0x1339424a0 <col:6> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133942848 <line:17:5, line:18:7>     | |-RecoveryExpr 0x1339427c0 <line:17:9, col:20> '_Bool' contains-errors     | `-GotoStmt 0x133942830 <line:18:2, col:7> 'failed' 0x1339427e0     |-IfStmt 0x133942a58 <line:27:5, line:28:7>     | |-RecoveryExpr 0x133942a20 <line:27:9, col:21> '_Bool' contains-errors     | `-GotoStmt 0x133942a40 <line:28:2, col:7> 'failed' 0x1339427e0     |-BinaryOperator 0x133942d60 <line:33:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x133942be0 <col:5, col:11> '<dependent type>' contains-errors lvalue ->tl_job     | | `-RecoveryExpr 0x133942bb8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x133942b98 <col:5> 'int *' lvalue ParmVar 0x133928928 'term' 'int *'     | `-CallExpr 0x133942d40 <col:20, col:30> 'int'     |   `-ImplicitCastExpr 0x133942d28 <col:20> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x133942d08 <col:20> 'int ()' Function 0x133942c50 'job_alloc' 'int ()'     |-IfStmt 0x133942e20 <line:34:5, line:35:7>     | |-RecoveryExpr 0x133942de8 <line:34:9, col:25> '_Bool' contains-errors     | `-GotoStmt 0x133942e08 <line:35:2, col:7> 'failed' 0x1339427e0     |-UnaryOperator 0x133942ef0 <line:36:5, col:21> '<dependent type>' contains-errors prefix '++' cannot overflow     | `-CXXDependentScopeMemberExpr 0x133942ea8 <col:7, col:21> '<dependent type>' contains-errors lvalue ->jv_refcount     |   `-CXXDependentScopeMemberExpr 0x133942e60 <col:7, col:13> '<dependent type>' contains-errors lvalue ->tl_job     |     `-RecoveryExpr 0x133942e40 <col:7> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133943570 <line:42:5, line:43:7>     | |-RecoveryExpr 0x133943538 <line:42:9, col:20> '_Bool' contains-errors     | `-GotoStmt 0x133943558 <line:43:2, col:7> 'failed' 0x1339427e0     `-LabelStmt 0x133943ce8 <line:58:1, col:7> 'failed'       `-NullStmt 0x133943ce0 <col:7> ","19357":"`-FunctionDecl 0x1400fbd58  line:1:1 invalid TPMT_TK_AUTH_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x1400fbb28 <col:24, col:38> col:38 invalid target 'int *'   |-ParmVarDecl 0x1400fbbe0 <col:46, col:53> col:53 invalid buffer 'int **'   |-ParmVarDecl 0x1400fbc60 <col:61, col:68> col:68 invalid size 'int *'   `-CompoundStmt 0x140115940 <line:2:1, line:21:1>     |-IfStmt 0x1400fc148 <line:5:5, line:7:5>     | |-BinaryOperator 0x1400fbea8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1400fbe68 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1400fbe88 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1400fc138 <col:31, line:7:5>     |-IfStmt 0x1401153e0 <line:8:5, line:13:5>     | |-BinaryOperator 0x140115200 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1400fc1b8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1400fc1d8 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1401153c8 <col:31, line:13:5>     |   `-IfStmt 0x1401153a8 <line:9:2, line:12:2>     |     |-RecoveryExpr 0x140115360 <line:9:6, line:10:40> '_Bool' contains-errors     |     `-CompoundStmt 0x140115398 <col:43, line:12:2>     |-IfStmt 0x1401156d8 <line:14:5, line:16:5>     | |-BinaryOperator 0x140115490 <line:14:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x140115450 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x140115470 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1401156c8 <col:31, line:16:5>     `-IfStmt 0x140115920 <line:17:5, line:19:5>       |-RecoveryExpr 0x1401156f8 <line:17:9, col:15> '_Bool' contains-errors       `-CompoundStmt 0x140115910 <col:31, line:19:5> ","19664":"`-FunctionDecl 0x12a809730  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12a809830 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12a809898 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12a809900 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12a8097d8 <<invalid sloc>> Implicit 882 ","19597":"`-FunctionDecl 0x155812768  line:1:1 invalid spnego_gss_import_sec_context 'int (int *, const int, int *)'   |-ParmVarDecl 0x155812528 <line:2:2, col:14> col:14 invalid minor_status 'int *'   |-ParmVarDecl 0x1558125a8 <line:3:2, col:21> col:21 invalid interprocess_token 'const int'   |-ParmVarDecl 0x155812628 <line:4:2, col:17> col:17 invalid context_handle 'int *'   `-CompoundStmt 0x155812a50 <line:5:1, line:11:1> ","20156":"`-FunctionDecl 0x12c8300d8  line:1:12 invalid DoPamAuth 'int (struct pam_handle *, const char *, int)' static   |-ParmVarDecl 0x12e00e248 <col:22, col:41> col:41 used pamh 'struct pam_handle *'   |-ParmVarDecl 0x12e00e2c8 <line:2:22, col:34> col:34 used username 'const char *'   |-ParmVarDecl 0x12e00e360 <line:3:22, <invalid sloc>> col:25 invalid 'int'   `-CompoundStmt 0x12e0284d8 <line:4:1, line:31:1>     |-DeclStmt 0x12c830478 <line:5:3, col:52>     | `-VarDecl 0x12c8301b0 <col:3, col:51> col:7 used err 'int' cinit     |   `-CallExpr 0x12c830440 <col:13, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c830370 <col:13> 'int ()' Function 0x12c8302b8 'pam_set_item' 'int ()'     |     |-DeclRefExpr 0x12c830390 <col:26> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'     |     |-RecoveryExpr 0x12c830420 <col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c8303c8 <col:43> 'const char *' lvalue ParmVar 0x12e00e2c8 'username' 'const char *'     |-IfStmt 0x12c8309f8 <line:6:3, line:9:3>     | |-BinaryOperator 0x12c830508 <line:6:7, col:14> 'int' contains-errors '!='     | | |-DeclRefExpr 0x12c830490 <col:7> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     | | `-RecoveryExpr 0x12c8304e8 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c8309d8 <col:27, line:9:3>     |   |-CallExpr 0x12c830958 <line:7:5, col:53> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12c830608 <col:5> 'int ()' Function 0x12c830550 'Dmsg1' 'int ()'     |   | |-RecoveryExpr 0x12c8308c0 <col:11> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x12c830680 <col:23> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x12c8308f8 <col:30, col:52> 'int' contains-errors     |   |   |-ImplicitCastExpr 0x12c8308e0 <col:30> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12c830780 <col:30> 'int ()' Function 0x12c8306c8 'pam_strerror' 'int ()'     |   |   |-ImplicitCastExpr 0x12c830928 <col:43> 'struct pam_handle *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12c8307a0 <col:43> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'     |   |   `-ImplicitCastExpr 0x12c830940 <col:49> 'int' contains-errors <LValueToRValue>     |   |     `-DeclRefExpr 0x12c8307c0 <col:49> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     |   `-ReturnStmt 0x12c8309c8 <line:8:5, col:12>     |     `-ImplicitCastExpr 0x12c8309b0 <col:12> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x12c830990 <col:12> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     |-BinaryOperator 0x12c830bd8 <line:11:3, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x12c830a18 <col:3> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     | `-CallExpr 0x12c830b90 <col:9, col:33> 'int'     |   |-ImplicitCastExpr 0x12c830b78 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12c830b18 <col:9> 'int ()' Function 0x12c830a60 'pam_authenticate' 'int ()'     |   |-ImplicitCastExpr 0x12c830bc0 <col:26> 'struct pam_handle *' <LValueToRValue>     |   | `-DeclRefExpr 0x12c830b38 <col:26> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'     |   `-IntegerLiteral 0x12c830b58 <col:32> 'int' 0     |-IfStmt 0x12c830f30 <line:12:3, line:16:3>     | |-BinaryOperator 0x12c830c70 <line:12:7, col:14> 'int' contains-errors '!='     | | |-DeclRefExpr 0x12c830bf8 <col:7> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     | | `-RecoveryExpr 0x12c830c50 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c830f10 <col:27, line:16:3>     |   |-CallExpr 0x12c830e90 <line:13:5, line:14:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12c830c90 <line:13:5> 'int ()' Function 0x12c830550 'Dmsg1' 'int ()'     |   | |-RecoveryExpr 0x12c830df8 <col:11> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x12c830cc8 <col:23> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x12c830e30 <line:14:11, col:33> 'int' contains-errors     |   |   |-ImplicitCastExpr 0x12c830e18 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12c830ce8 <col:11> 'int ()' Function 0x12c8306c8 'pam_strerror' 'int ()'     |   |   |-ImplicitCastExpr 0x12c830e60 <col:24> 'struct pam_handle *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12c830d08 <col:24> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'     |   |   `-ImplicitCastExpr 0x12c830e78 <col:30> 'int' contains-errors <LValueToRValue>     |   |     `-DeclRefExpr 0x12c830d28 <col:30> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     |   `-ReturnStmt 0x12c830f00 <line:15:5, col:12>     |     `-ImplicitCastExpr 0x12c830ee8 <col:12> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x12c830ec8 <col:12> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     |-DeclStmt 0x12e027e00 <line:21:3, col:19>     | `-VarDecl 0x12c830f98 <col:3, col:15> col:15 used data 'const void *'     |-BinaryOperator 0x12e028088 <line:23:3, col:43> 'int' contains-errors '='     | |-DeclRefExpr 0x12e027e18 <col:3> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     | `-CallExpr 0x12e028050 <col:9, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12e027f18 <col:9> 'int ()' Function 0x12e027e60 'pam_get_item' 'int ()'     |   |-DeclRefExpr 0x12e027f38 <col:22> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'     |   |-RecoveryExpr 0x12e028030 <col:28> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x12e027fc0 <col:38, col:39> 'const void **' prefix '&' cannot overflow     |     `-DeclRefExpr 0x12e027f70 <col:39> 'const void *' lvalue Var 0x12c830f98 'data' 'const void *'     |-IfStmt 0x12e028460 <line:24:3, line:29:3> has_else     | |-BinaryOperator 0x12e028120 <line:24:7, col:14> 'int' contains-errors '!='     | | |-DeclRefExpr 0x12e0280a8 <col:7> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     | | `-RecoveryExpr 0x12e028100 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12e0283c0 <col:27, line:27:3>     | | |-CallExpr 0x12e028340 <line:25:5, col:53> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12e028140 <col:5> 'int ()' Function 0x12c830550 'Dmsg1' 'int ()'     | | | |-RecoveryExpr 0x12e0282a8 <col:11> '<dependent type>' contains-errors lvalue     | | | |-StringLiteral 0x12e028178 <col:23> 'char[4]' lvalue \"STR\"     | | | `-CallExpr 0x12e0282e0 <col:30, col:52> 'int' contains-errors     | | |   |-ImplicitCastExpr 0x12e0282c8 <col:30> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x12e028198 <col:30> 'int ()' Function 0x12c8306c8 'pam_strerror' 'int ()'     | | |   |-ImplicitCastExpr 0x12e028310 <col:43> 'struct pam_handle *' <LValueToRValue>     | | |   | `-DeclRefExpr 0x12e0281b8 <col:43> 'struct pam_handle *' lvalue ParmVar 0x12e00e248 'pamh' 'struct pam_handle *'     | | |   `-ImplicitCastExpr 0x12e028328 <col:49> 'int' contains-errors <LValueToRValue>     | | |     `-DeclRefExpr 0x12e0281d8 <col:49> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     | | `-ReturnStmt 0x12e0283b0 <line:26:5, col:12>     | |   `-ImplicitCastExpr 0x12e028398 <col:12> 'int' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x12e028378 <col:12> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int'     | `-CompoundStmt 0x12e028448 <line:27:10, line:29:3>     |   `-IfStmt 0x12e028428 <line:28:5, col:74>     |     |-ImplicitCastExpr 0x12e028400 <col:9> 'const void *' <LValueToRValue>     |     | `-DeclRefExpr 0x12e0283e0 <col:9> 'const void *' lvalue Var 0x12c830f98 'data' 'const void *'     |     `-CompoundStmt 0x12e028418 <col:15, col:74>     `-ReturnStmt 0x12e0284c8 <line:30:3, col:10>       `-ImplicitCastExpr 0x12e0284b0 <col:10> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x12e028490 <col:10> 'int' contains-errors lvalue Var 0x12c8301b0 'err' 'int' ","19274":"`-FunctionDecl 0x148026800  line:1:13 invalid ikev2_parent_outI1_continue 'void (struct pluto_crypto_req_cont *, struct pluto_crypto_req *, int)' static   |-ParmVarDecl 0x14800e248 <col:41, col:71> col:71 used pcrc 'struct pluto_crypto_req_cont *'   |-ParmVarDecl 0x148026628 <line:2:6, col:31> col:31 used r 'struct pluto_crypto_req *'   |-ParmVarDecl 0x1480266c0 <line:3:6, col:12> col:12 invalid ugh 'int'   `-CompoundStmt 0x14802c4b8 <line:4:1, line:45:1>     |-DeclStmt 0x148026b90 <line:5:2, col:61>     | |-RecordDecl 0x1480268c0 <col:2, col:9> col:9 struct ke_continuation     | `-VarDecl 0x148026a28 <col:2, col:57> col:26 used ke 'struct ke_continuation *' cinit     |   `-CStyleCastExpr 0x148026b50 <col:31, col:57> 'struct ke_continuation *' <BitCast>     |     `-ImplicitCastExpr 0x148026b38 <col:57> 'struct pluto_crypto_req_cont *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x148026a90 <col:57> 'struct pluto_crypto_req_cont *' lvalue ParmVar 0x14800e248 'pcrc' 'struct pluto_crypto_req_cont *'     |-DeclStmt 0x148026df8 <line:6:2, col:32>     | |-RecordDecl 0x148026ba8 <col:2, col:9> col:9 struct msg_digest     | `-VarDecl 0x148026d18 <col:2, col:30> col:21 used md 'struct msg_digest *' cinit     |   `-RecoveryExpr 0x148026db8 <col:26, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148026d80 <col:26> 'struct ke_continuation *' lvalue Var 0x148026a28 'ke' 'struct ke_continuation *'     |-DeclStmt 0x148027058 <line:7:2, col:33>     | |-RecordDecl 0x148026e10 <col:2, col:9> col:9 struct state     | `-VarDecl 0x148026f78 <col:2, col:31> col:22 used st 'struct state *const' cinit     |   `-RecoveryExpr 0x148027018 <col:27, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148026fe0 <col:27> 'struct msg_digest *' contains-errors lvalue Var 0x148026d18 'md' 'struct msg_digest *'     |-CallExpr 0x1480274a0 <line:10:2, line:11:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1480271d0 <line:10:2> 'int ()' Function 0x148027118 'DBG' 'int ()'     | |-RecoveryExpr 0x148027428 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x148027460 <line:11:6, col:19> 'int'     |   |-ImplicitCastExpr 0x148027448 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1480272e8 <col:6> 'int ()' Function 0x148027230 'DBG_log' 'int ()'     |   `-ImplicitCastExpr 0x148027488 <col:14> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x148027350 <col:14> 'char[4]' lvalue \"STR\"     |-IfStmt 0x14802a8b0 <line:13:2, line:20:2>     | |-BinaryOperator 0x148027548 <line:13:6, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1480274d0 <col:6> 'struct state *const' contains-errors lvalue Var 0x148026f78 'st' 'struct state *const'     | | `-RecoveryExpr 0x148027528 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14802a888 <col:18, line:20:2>     |   |-CallExpr 0x14802a638 <line:14:3, line:16:22> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14802a4b8 <line:14:3> 'int ()' Function 0x14802a400 'loglog' 'int ()'     |   | |-RecoveryExpr 0x14802a618 <col:10> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14802a4f0 <line:15:10> 'char[4]' lvalue \"STR\"     |   | `-PredefinedExpr 0x14802a5c8 <line:16:10> 'const char[28]' lvalue __FUNCTION__     |   |   `-StringLiteral 0x14802a590 <col:10> 'const char[28]' lvalue \"ikev2_parent_outI1_continue\"     |   |-IfStmt 0x14802a858 <line:17:3, line:18:21>     |   | |-RecoveryExpr 0x14802a6a8 <line:17:7, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14802a670 <col:7> 'struct ke_continuation *' lvalue Var 0x148026a28 'ke' 'struct ke_continuation *'     |   | `-CallExpr 0x14802a830 <line:18:4, col:21> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14802a7b0 <col:4> 'int ()' Function 0x14802a6f8 'release_md' 'int ()'     |   |   `-RecoveryExpr 0x14802a808 <col:15, col:19> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14802a7d0 <col:15> 'struct ke_continuation *' lvalue Var 0x148026a28 'ke' 'struct ke_continuation *'     |   `-ReturnStmt 0x14802a878 <line:19:3>     |-CallExpr 0x14802aa90 <line:23:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802a9b0 <col:2> 'int ()' Function 0x14802a8f8 'passert' 'int ()'     | `-BinaryOperator 0x14802aa70 <col:10, col:17> 'int' contains-errors '=='     |   |-RecoveryExpr 0x14802a9d0 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14802aa50 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14802abb0 <line:24:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802aab8 <col:2> 'int ()' Function 0x14802a8f8 'passert' 'int ()'     | `-BinaryOperator 0x14802ab90 <col:10, col:23> 'int' contains-errors '=='     |   |-RecoveryExpr 0x14802ab50 <col:10> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14802ab70 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14802acb8 <line:25:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802abd8 <col:2> 'int ()' Function 0x14802a8f8 'passert' 'int ()'     | `-BinaryOperator 0x14802ac98 <col:10, col:16> 'int' contains-errors '!='     |   |-DeclRefExpr 0x14802abf8 <col:10> 'struct state *const' contains-errors lvalue Var 0x148026f78 'st' 'struct state *const'     |   `-RecoveryExpr 0x14802ac78 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14802ade0 <line:27:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802ace0 <col:2> 'int ()' Function 0x14802a8f8 'passert' 'int ()'     | `-BinaryOperator 0x14802adc0 <col:10, col:37> 'int' contains-errors '=='     |   |-RecoveryExpr 0x14802ad38 <col:10, col:14> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14802ad00 <col:10> 'struct state *const' contains-errors lvalue Var 0x148026f78 'st' 'struct state *const'     |   `-RecoveryExpr 0x14802ad98 <col:33, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14802ad60 <col:33> 'struct ke_continuation *' lvalue Var 0x148026a28 'ke' 'struct ke_continuation *'     |-CallExpr 0x14802b060 <line:30:2, col:18> 'int' contains-errors     | |-ImplicitCastExpr 0x14802b048 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14802b008 <col:2> 'int ()' Function 0x14802af50 'set_cur_state' 'int ()'     | `-ImplicitCastExpr 0x14802b088 <col:16> 'struct state *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x14802b028 <col:16> 'struct state *const' contains-errors lvalue Var 0x148026f78 'st' 'struct state *const'     |-IfStmt 0x14802c090 <line:36:2, line:40:2>     | |-RecoveryExpr 0x14802b318 <line:36:6, col:16> '_Bool' contains-errors     | `-CompoundStmt 0x14802c078 <col:22, line:40:2>     |   `-IfStmt 0x14802c058 <line:38:3, line:39:21>     |     |-RecoveryExpr 0x14802bf88 <line:38:7, col:11> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14802bf50 <col:7> 'struct ke_continuation *' lvalue Var 0x148026a28 'ke' 'struct ke_continuation *'     |     `-CallExpr 0x14802c030 <line:39:4, col:21> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14802bfb0 <col:4> 'int ()' Function 0x14802a6f8 'release_md' 'int ()'     |       `-RecoveryExpr 0x14802c008 <col:15, col:19> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x14802bfd0 <col:15> 'struct ke_continuation *' lvalue Var 0x148026a28 'ke' 'struct ke_continuation *'     |-CallExpr 0x14802c1c8 <line:41:2, col:18> 'int'     | `-ImplicitCastExpr 0x14802c1b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14802c190 <col:2> 'int ()' Function 0x14802c0d8 'reset_cur_state' 'int ()'     |-CallExpr 0x14802c300 <line:42:2, col:16> 'int'     | `-ImplicitCastExpr 0x14802c2e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14802c2c8 <col:2> 'int ()' Function 0x14802c210 'reset_globals' 'int ()'     `-CallExpr 0x14802c490 <line:44:2, col:29> 'int'       |-ImplicitCastExpr 0x14802c478 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14802c320 <col:2> 'int ()' Function 0x14802a8f8 'passert' 'int ()'       `-CallExpr 0x14802c458 <col:10, col:28> 'int'         `-ImplicitCastExpr 0x14802c440 <col:10> 'int (*)()' <FunctionToPointerDecay>           `-DeclRefExpr 0x14802c420 <col:10> 'int ()' Function 0x14802c368 'GLOBALS_ARE_RESET' 'int ()' ","20130":"`-FunctionDecl 0x12980e350  line:1:6 stop_gfar 'void (struct net_device *)'   |-ParmVarDecl 0x12980e248 <col:16, col:35> col:35 used dev 'struct net_device *'   `-CompoundStmt 0x129829258 <line:2:1, line:19:1>     |-DeclStmt 0x129826a48 <line:3:2, col:46>     | |-RecordDecl 0x129826648 <col:2, col:9> col:9 struct gfar_private     | `-VarDecl 0x1298267b8 <col:2, col:45> col:23 used priv 'struct gfar_private *' cinit     |   `-ImplicitCastExpr 0x129826a18 <col:30, col:45> 'struct gfar_private *' <IntegralToPointer>     |     `-CallExpr 0x1298269d8 <col:30, col:45> 'int'     |       |-ImplicitCastExpr 0x1298269c0 <col:30> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129826950 <col:30> 'int ()' Function 0x129826898 'netdev_priv' 'int ()'     |       `-ImplicitCastExpr 0x129826a00 <col:42> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x129826970 <col:42> 'struct net_device *' lvalue ParmVar 0x12980e248 'dev' 'struct net_device *'     |-CallExpr 0x129826b98 <line:5:2, col:30> 'int'     | |-ImplicitCastExpr 0x129826b80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129826b40 <col:2> 'int ()' Function 0x129826a88 'netif_tx_stop_all_queues' 'int ()'     | `-ImplicitCastExpr 0x129826bc0 <col:27> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x129826b60 <col:27> 'struct net_device *' lvalue ParmVar 0x12980e248 'dev' 'struct net_device *'     |-CallExpr 0x129826cf0 <line:7:2, col:24> 'int'     | `-ImplicitCastExpr 0x129826cd8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x129826cb8 <col:2> 'int ()' Function 0x129826c00 'smp_mb__before_atomic' 'int ()'     |-CallExpr 0x129826ef0 <line:8:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129826df0 <col:2> 'int ()' Function 0x129826d38 'set_bit' 'int ()'     | |-RecoveryExpr 0x129826ed0 <col:10> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x129826e88 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x129826e60 <col:22, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129826e28 <col:22> 'struct gfar_private *' lvalue Var 0x1298267b8 'priv' 'struct gfar_private *'     |-CallExpr 0x129827038 <line:9:2, col:23> 'int'     | `-ImplicitCastExpr 0x129827020 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x129827000 <col:2> 'int ()' Function 0x129826f48 'smp_mb__after_atomic' 'int ()'     |-CallExpr 0x129827190 <line:11:2, col:19> 'int'     | |-ImplicitCastExpr 0x129827178 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x129827138 <col:2> 'int ()' Function 0x129827080 'disable_napi' 'int ()'     | `-ImplicitCastExpr 0x1298271b8 <col:15> 'struct gfar_private *' <LValueToRValue>     |   `-DeclRefExpr 0x129827158 <col:15> 'struct gfar_private *' lvalue Var 0x1298267b8 'priv' 'struct gfar_private *'     |-CallExpr 0x129827308 <line:14:2, col:16> 'int'     | |-ImplicitCastExpr 0x1298272f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1298272b0 <col:2> 'int ()' Function 0x1298271f8 'gfar_halt' 'int ()'     | `-ImplicitCastExpr 0x129827330 <col:12> 'struct gfar_private *' <LValueToRValue>     |   `-DeclRefExpr 0x1298272d0 <col:12> 'struct gfar_private *' lvalue Var 0x1298267b8 'priv' 'struct gfar_private *'     |-CallExpr 0x1298274a8 <line:16:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129827428 <col:2> 'int ()' Function 0x129827370 'phy_stop' 'int ()'     | `-RecoveryExpr 0x129827480 <col:11, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x129827448 <col:11> 'struct net_device *' lvalue ParmVar 0x12980e248 'dev' 'struct net_device *'     `-CallExpr 0x129829218 <line:18:2, col:25> 'int'       |-ImplicitCastExpr 0x129829200 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1298275b0 <col:2> 'int ()' Function 0x1298274f8 'free_skb_resources' 'int ()'       `-ImplicitCastExpr 0x129829240 <col:21> 'struct gfar_private *' <LValueToRValue>         `-DeclRefExpr 0x1298275d0 <col:21> 'struct gfar_private *' lvalue Var 0x1298267b8 'priv' 'struct gfar_private *' ","19811":"`-FunctionDecl 0x128128190  line:1:6 tracing_start 'void (void)'   `-CompoundStmt 0x102809000 <line:2:1, line:36:1>     |-DeclStmt 0x128128468 <line:3:2, col:28>     | |-RecordDecl 0x128128280 <col:2, col:9> col:9 struct ring_buffer     | `-VarDecl 0x1281283e8 <col:2, col:22> col:22 used buffer 'struct ring_buffer *'     |-DeclStmt 0x128128500 <line:4:2, col:21>     | `-VarDecl 0x128128498 <col:2, col:16> col:16 used flags 'unsigned long'     |-IfStmt 0x128128578 <line:6:2, line:7:3>     | |-RecoveryExpr 0x128128548 <line:6:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x128128568 <line:7:3>     |-CallExpr 0x128141818 <line:9:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1281286b0 <col:2> 'int ()' Function 0x1281285f8 'raw_spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x128141800 <col:24, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1281287b8 <col:25, col:38> '<dependent type>' contains-errors lvalue .start_lock     | |   `-RecoveryExpr 0x128128798 <col:25> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x128128748 <col:50> 'unsigned long' lvalue Var 0x128128498 'flags' 'unsigned long'     |-IfStmt 0x128141ce0 <line:10:2, line:17:2>     | |-UnaryOperator 0x128141928 <line:10:6, col:21> '<dependent type>' contains-errors prefix '--' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1281418e0 <col:8, col:21> '<dependent type>' contains-errors lvalue .stop_count     | |   `-RecoveryExpr 0x1281418c0 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x128141cc0 <col:33, line:17:2>     |   |-IfStmt 0x128141c38 <line:11:3, line:15:3>     |   | |-BinaryOperator 0x128141a48 <line:11:7, col:33> 'int' contains-errors '<'     |   | | |-CXXDependentScopeMemberExpr 0x128141a00 <col:7, col:20> '<dependent type>' contains-errors lvalue .stop_count     |   | | | `-RecoveryExpr 0x1281419e0 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x1281419a0 <col:33> 'int' 0     |   | `-CompoundStmt 0x128141c20 <col:36, line:15:3>     |   |   `-CallExpr 0x128141bd8 <line:13:4, col:18> 'int'     |   |     |-ImplicitCastExpr 0x128141bc0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x128141b48 <col:4> 'int ()' Function 0x128141a90 'WARN_ON_ONCE' 'int ()'     |   |     `-IntegerLiteral 0x128141b68 <col:17> 'int' 1     |   `-GotoStmt 0x128141ca8 <line:16:3, col:8> 'out' 0x128141c58     |-CallExpr 0x128141f20 <line:20:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128141de0 <col:2> 'int ()' Function 0x128141d28 'arch_spin_lock' 'int ()'     | `-UnaryOperator 0x128141f08 <col:17, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x128141ec0 <col:18, col:31> '<dependent type>' contains-errors lvalue .max_lock     |     `-RecoveryExpr 0x128141ea0 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1281420e0 <line:22:2, col:37> 'struct ring_buffer *' contains-errors '='     | |-DeclRefExpr 0x128141f48 <col:2> 'struct ring_buffer *' lvalue Var 0x1281283e8 'buffer' 'struct ring_buffer *'     | `-CXXDependentScopeMemberExpr 0x128142098 <col:11, col:37> '<dependent type>' contains-errors lvalue .buffer     |   `-CXXDependentScopeMemberExpr 0x128142050 <col:11, col:24> '<dependent type>' contains-errors lvalue .trace_buffer     |     `-RecoveryExpr 0x128142030 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1281422b0 <line:23:2, line:24:35>     | |-ImplicitCastExpr 0x128142120 <line:23:6> 'struct ring_buffer *' <LValueToRValue>     | | `-DeclRefExpr 0x128142100 <col:6> 'struct ring_buffer *' lvalue Var 0x1281283e8 'buffer' 'struct ring_buffer *'     | `-CallExpr 0x128142270 <line:24:3, col:35> 'int'     |   |-ImplicitCastExpr 0x128142258 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x128142218 <col:3> 'int ()' Function 0x128142160 'ring_buffer_record_enable' 'int ()'     |   `-ImplicitCastExpr 0x128142298 <col:29> 'struct ring_buffer *' <LValueToRValue>     |     `-DeclRefExpr 0x128142238 <col:29> 'struct ring_buffer *' lvalue Var 0x1281283e8 'buffer' 'struct ring_buffer *'     |-CallExpr 0x1281424f0 <line:32:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1281423b0 <col:2> 'int ()' Function 0x1281422f8 'arch_spin_unlock' 'int ()'     | `-UnaryOperator 0x1281424d8 <col:19, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x128142490 <col:20, col:33> '<dependent type>' contains-errors lvalue .max_lock     |     `-RecoveryExpr 0x128142470 <col:20> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x128142790 <line:34:2, line:35:60> 'out'       `-CallExpr 0x128142760 <col:2, col:60> '<dependent type>' contains-errors         |-DeclRefExpr 0x1281425f8 <col:2> 'int ()' Function 0x128142540 'raw_spin_unlock_irqrestore' 'int ()'         |-UnaryOperator 0x128142748 <col:29, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-CXXDependentScopeMemberExpr 0x128142700 <col:30, col:43> '<dependent type>' contains-errors lvalue .start_lock         |   `-RecoveryExpr 0x1281426e0 <col:30> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x128142690 <col:55> 'unsigned long' lvalue Var 0x128128498 'flags' 'unsigned long' ","19166":"`-FunctionDecl 0x14180dda8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x14180dcd8 <col:14> col:14 used ldap_parse_reference 'int'   `-CompoundStmt 0x1418270e0 <line:2:1, line:30:1>     |-DeclStmt 0x14180e0d8 <line:6:2, col:27>     | |-VarDecl 0x14180dfd8 <col:2, col:9> col:9 used lreferrals 'char **'     | `-VarDecl 0x14180e058 <col:2, col:23> col:23 used refp 'char **'     |-IfStmt 0x141826600 <line:8:2, line:10:2>     | |-RecoveryExpr 0x14180e3a0 <line:8:6, col:99> '_Bool' contains-errors     | `-CompoundStmt 0x14180e3d0 <col:108, line:10:2>     |   `-ReturnStmt 0x14180e3c0 <line:9:3>     |-IfStmt 0x141826988 <line:15:2, line:17:2>     | |-RecoveryExpr 0x141826958 <line:15:6, col:82> '_Bool' contains-errors     | `-CompoundStmt 0x141826978 <col:96, line:17:2>     `-IfStmt 0x1418270c0 <line:21:2, line:28:2>       |-RecoveryExpr 0x141826bc8 <line:21:6, col:20> '_Bool' contains-errors       `-CompoundStmt 0x141827098 <col:26, line:28:2>         |-BinaryOperator 0x141826c40 <line:22:3, col:10> 'char **' '='         | |-DeclRefExpr 0x141826be8 <col:3> 'char **' lvalue Var 0x14180e058 'refp' 'char **'         | `-ImplicitCastExpr 0x141826c28 <col:10> 'char **' <LValueToRValue>         |   `-DeclRefExpr 0x141826c08 <col:10> 'char **' lvalue Var 0x14180dfd8 'lreferrals' 'char **'         |-WhileStmt 0x141826e88 <line:23:3, line:26:3>         | |-ImplicitCastExpr 0x141826cb0 <line:23:10, col:11> 'char *' <LValueToRValue>         | | `-UnaryOperator 0x141826c98 <col:10, col:11> 'char *' lvalue prefix '*' cannot overflow         | |   `-ImplicitCastExpr 0x141826c80 <col:11> 'char **' <LValueToRValue>         | |     `-DeclRefExpr 0x141826c60 <col:11> 'char **' lvalue Var 0x14180e058 'refp' 'char **'         | `-CompoundStmt 0x141826e70 <col:17, line:26:3>         |   `-UnaryOperator 0x141826e58 <line:25:4, col:8> 'char **' postfix '++'         |     `-DeclRefExpr 0x141826e38 <col:4> 'char **' lvalue Var 0x14180e058 'refp' 'char **'         `-CallExpr 0x141827070 <line:27:3, col:35> 'int'           |-ImplicitCastExpr 0x141827058 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x141826f88 <col:3> 'int ()' Function 0x141826ed0 'ldap_memvfree' 'int ()'           `-CStyleCastExpr 0x141827030 <col:17, col:25> 'void **' <BitCast>             `-ImplicitCastExpr 0x141827018 <col:25> 'char **' <LValueToRValue> part_of_explicit_cast               `-DeclRefExpr 0x141826fa8 <col:25> 'char **' lvalue Var 0x14180dfd8 'lreferrals' 'char **' ","19941":"`-FunctionDecl 0x12d90a9d8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12d90aad8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12d90aa80 <<invalid sloc>> Implicit 873 ","20182":"`-FunctionDecl 0x147123430  col:7 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x147123530 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x147123598 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x147123600 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1471234d8 <<invalid sloc>> Implicit 900 ","19520":"`-FunctionDecl 0x152828060  col:22 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x152828160 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1528281c8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x152828108 <<invalid sloc>> Implicit 887 ","19662":"`-FunctionDecl 0x13f80e158  line:1:1 invalid acc_ctx_cont 'int (int *, int, int *, int *, int *, int *, int *)'   |-ParmVarDecl 0x13f80dd28 <col:14, col:25> col:25 invalid minstat 'int *'   |-ParmVarDecl 0x13f80dda8 <line:2:7, col:20> col:20 invalid buf 'int'   |-ParmVarDecl 0x13f80de28 <line:3:7, col:21> col:21 invalid ctx 'int *'   |-ParmVarDecl 0x13f80dea8 <line:4:7, col:21> col:21 invalid responseToken 'int *'   |-ParmVarDecl 0x13f80df28 <line:5:7, col:21> col:21 invalid mechListMIC 'int *'   |-ParmVarDecl 0x13f80dfa8 <line:6:7, col:18> col:18 invalid negState 'int *'   |-ParmVarDecl 0x13f80e028 <line:7:7, col:24> col:24 invalid return_token 'int *'   `-CompoundStmt 0x13f828928 <line:8:1, line:65:1>     |-DeclStmt 0x13f80e2b8 <line:12:2, col:18>     | `-VarDecl 0x13f80e250 <col:2, col:15> col:15 used len 'unsigned int'     |-DeclStmt 0x13f827418 <line:13:2, col:31>     | |-VarDecl 0x13f80e318 <col:2, col:17> col:17 used ptr 'unsigned char *'     | `-VarDecl 0x13f80e398 <col:2, col:23> col:23 used bufstart 'unsigned char *'     |-BinaryOperator 0x13f827588 <line:17:2, col:14> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13f827550 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13f827538 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13f827480 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13f827568 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f827618 <line:18:2, col:13> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13f8275e0 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13f8275c8 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13f8275a8 <col:3> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13f8275f8 <col:13> 'int' 0     |-BinaryOperator 0x13f827758 <line:20:2, col:18> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13f827720 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13f827708 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13f827650 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13f827738 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f827970 <line:21:2, col:34> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13f8278e8 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13f8278d0 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13f827778 <col:3> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13f827950 <col:19, col:34> '<dependent type>' contains-errors '='     |   |-UnaryOperator 0x13f827918 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x13f827900 <col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x13f8277c8 <col:20> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13f827930 <col:34> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f827a58 <line:23:2, col:24> 'unsigned char *' contains-errors '='     | |-DeclRefExpr 0x13f827990 <col:2> 'unsigned char *' lvalue Var 0x13f80e318 'ptr' 'unsigned char *'     | `-BinaryOperator 0x13f827a38 <col:8, col:24> 'unsigned char *' contains-errors '='     |   |-DeclRefExpr 0x13f8279b0 <col:8> 'unsigned char *' lvalue Var 0x13f80e398 'bufstart' 'unsigned char *'     |   `-CXXDependentScopeMemberExpr 0x13f8279f0 <col:19, col:24> '<dependent type>' contains-errors lvalue ->value     |     `-RecoveryExpr 0x13f8279d0 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f827e30 <line:29:2, line:36:2>     | |-RecoveryExpr 0x13f827ae8 <line:29:6, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x13f827e18 <col:25, line:36:2>     |   `-IfStmt 0x13f827df8 <line:32:3, line:35:3>     |     |-RecoveryExpr 0x13f827d78 <line:32:7> '_Bool' contains-errors     |     `-CompoundStmt 0x13f827de8 <col:12, line:35:3>     |-IfStmt 0x13f827ef0 <line:37:2, line:39:2>     | |-RecoveryExpr 0x13f827ec0 <line:37:6, col:29> '_Bool' contains-errors     | `-CompoundStmt 0x13f827ee0 <col:32, line:39:2>     |-IfStmt 0x13f828138 <line:43:2, line:44:8>     | |-RecoveryExpr 0x13f8280b0 <line:43:6, col:13> '_Bool' contains-errors     | `-GotoStmt 0x13f828120 <line:44:3, col:8> 'cleanup' 0x13f8280d0     |-IfStmt 0x13f828248 <line:46:2, line:51:2>     | |-RecoveryExpr 0x13f8281f8 <line:46:6, line:47:22> '_Bool' contains-errors     | `-CompoundStmt 0x13f828230 <col:39, line:51:2>     |   `-GotoStmt 0x13f828218 <line:50:3, col:8> 'cleanup' 0x13f8280d0     |-IfStmt 0x13f8282b8 <line:52:2, line:55:2>     | |-RecoveryExpr 0x13f828268 <line:52:6, col:23> '_Bool' contains-errors     | `-CompoundStmt 0x13f8282a0 <col:37, line:55:2>     |   `-GotoStmt 0x13f828288 <line:54:3, col:8> 'cleanup' 0x13f8280d0     `-LabelStmt 0x13f828908 <line:59:1, line:62:2> 'cleanup'       `-IfStmt 0x13f8288e8 <line:60:2, line:62:2>         |-RecoveryExpr 0x13f828398 <line:60:6, col:23> '_Bool' contains-errors         `-CompoundStmt 0x13f8288d8 <col:37, line:62:2> ","19881":"`-FunctionDecl 0x14a00ddf0  line:1:13 referenced invalid ima_adpcm_reset1 'void (int *)' static   |-ParmVarDecl 0x14a00dd28 <col:31, col:46> col:46 invalid i 'int *'   `-CompoundStmt 0x15a1230e0 <line:2:1, line:15:1>     |-DeclStmt 0x14a00df70 <line:5:2, col:21>     | `-VarDecl 0x14a00df08 <col:2, col:7> col:7 used framesPerBlock 'int'     `-BinaryOperator 0x14a00e2b8 <line:7:2, col:52> 'int' contains-errors '='       |-DeclRefExpr 0x14a00df88 <col:2> 'int' lvalue Var 0x14a00df08 'framesPerBlock' 'int'       `-BinaryOperator 0x14a00e298 <col:19, col:52> '<dependent type>' contains-errors '\/'         |-CXXDependentScopeMemberExpr 0x14a00e158 <col:19, col:22> '<dependent type>' contains-errors lvalue ->samplesPerBlock         | `-RecoveryExpr 0x14a00e138 <col:19> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x14a00e250 <col:40, col:52> '<dependent type>' contains-errors lvalue .channelCount           `-CXXDependentScopeMemberExpr 0x14a00e208 <col:40, col:50> '<dependent type>' contains-errors lvalue ->f             `-CXXDependentScopeMemberExpr 0x14a00e1c0 <col:40, col:43> '<dependent type>' contains-errors lvalue ->track               `-RecoveryExpr 0x14a00e1a0 <col:40> '<dependent type>' contains-errors lvalue ","19764":"`-FunctionDecl 0x131827c78  col:11 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x131827d78 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x131827de0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x131827e48 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x131827d20 <<invalid sloc>> Implicit 883 ","19957":"`-FunctionDecl 0x15380b3a8  line:1:1 command_by_name 'int (const char *)'   |-ParmVarDecl 0x15380b2d8 <col:18, col:30> col:30 used cmdname 'const char *'   `-CompoundStmt 0x1538425e0 <line:2:1, line:18:1>     |-DeclStmt 0x15380b810 <line:4:3, col:42>     | |-VarDecl 0x15380b4b8 <col:3, col:12> col:7 used lo 'int' cinit     | | `-IntegerLiteral 0x15380b520 <col:12> 'int' 0     | `-VarDecl 0x15380b558 <col:3, col:41> col:15 used hi 'int' cinit     |   `-BinaryOperator 0x15380b7d8 <col:20, col:41> '<dependent type>' contains-errors '-'     |     |-CallExpr 0x15380b7b0 <col:20, col:37> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x15380b6f0 <col:20> 'int ()' Function 0x15380b638 'countof' 'int ()'     |     | `-RecoveryExpr 0x15380b790 <col:29> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x15380b750 <col:41> 'int' 1     |-WhileStmt 0x153842578 <line:6:3, line:16:5>     | |-BinaryOperator 0x15380b898 <line:6:10, col:16> 'int' contains-errors '<='     | | |-ImplicitCastExpr 0x15380b868 <col:10> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15380b828 <col:10> 'int' lvalue Var 0x15380b4b8 'lo' 'int'     | | `-ImplicitCastExpr 0x15380b880 <col:16> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x15380b848 <col:16> 'int' contains-errors lvalue Var 0x15380b558 'hi' 'int'     | `-CompoundStmt 0x153842550 <line:7:5, line:16:5>     |   |-DeclStmt 0x153842040 <line:8:7, col:31>     |   | `-VarDecl 0x15380b8d0 <col:7, col:30> col:11 used mid 'int' cinit     |   |   `-BinaryOperator 0x153842020 <col:17, col:30> 'int' contains-errors '>>'     |   |     |-ParenExpr 0x15380b9c8 <col:17, col:25> 'int' contains-errors     |   |     | `-BinaryOperator 0x15380b9a8 <col:18, col:23> 'int' contains-errors '+'     |   |     |   |-ImplicitCastExpr 0x15380b978 <col:18> 'int' <LValueToRValue>     |   |     |   | `-DeclRefExpr 0x15380b938 <col:18> 'int' lvalue Var 0x15380b4b8 'lo' 'int'     |   |     |   `-ImplicitCastExpr 0x15380b990 <col:23> 'int' contains-errors <LValueToRValue>     |   |     |     `-DeclRefExpr 0x15380b958 <col:23> 'int' contains-errors lvalue Var 0x15380b558 'hi' 'int'     |   |     `-IntegerLiteral 0x153842000 <col:30> 'int' 1     |   |-DeclStmt 0x153842230 <line:9:7, col:59>     |   | `-VarDecl 0x153842070 <col:7, col:11> col:11 used cmp 'int'     |   `-IfStmt 0x153842520 <line:10:7, line:15:16> has_else     |     |-BinaryOperator 0x1538422a0 <line:10:11, col:17> 'int' '<'     |     | |-ImplicitCastExpr 0x153842288 <col:11> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x153842248 <col:11> 'int' lvalue Var 0x153842070 'cmp' 'int'     |     | `-IntegerLiteral 0x153842268 <col:17> 'int' 0     |     |-BinaryOperator 0x153842358 <line:11:9, col:20> 'int' contains-errors '='     |     | |-DeclRefExpr 0x1538422c0 <col:9> 'int' contains-errors lvalue Var 0x15380b558 'hi' 'int'     |     | `-BinaryOperator 0x153842338 <col:14, col:20> 'int' contains-errors '-'     |     |   |-ImplicitCastExpr 0x153842320 <col:14> 'int' contains-errors <LValueToRValue>     |     |   | `-DeclRefExpr 0x1538422e0 <col:14> 'int' contains-errors lvalue Var 0x15380b8d0 'mid' 'int'     |     |   `-IntegerLiteral 0x153842300 <col:20> 'int' 1     |     `-IfStmt 0x1538424f0 <line:12:12, line:15:16> has_else     |       |-BinaryOperator 0x1538423d0 <line:12:16, col:22> 'int' '>'     |       | |-ImplicitCastExpr 0x1538423b8 <col:16> 'int' <LValueToRValue>     |       | | `-DeclRefExpr 0x153842378 <col:16> 'int' lvalue Var 0x153842070 'cmp' 'int'     |       | `-IntegerLiteral 0x153842398 <col:22> 'int' 0     |       |-BinaryOperator 0x153842488 <line:13:9, col:20> 'int' contains-errors '='     |       | |-DeclRefExpr 0x1538423f0 <col:9> 'int' lvalue Var 0x15380b4b8 'lo' 'int'     |       | `-BinaryOperator 0x153842468 <col:14, col:20> 'int' contains-errors '+'     |       |   |-ImplicitCastExpr 0x153842450 <col:14> 'int' contains-errors <LValueToRValue>     |       |   | `-DeclRefExpr 0x153842410 <col:14> 'int' contains-errors lvalue Var 0x15380b8d0 'mid' 'int'     |       |   `-IntegerLiteral 0x153842430 <col:20> 'int' 1     |       `-ReturnStmt 0x1538424e0 <line:15:9, col:16>     |         `-ImplicitCastExpr 0x1538424c8 <col:16> 'int' contains-errors <LValueToRValue>     |           `-DeclRefExpr 0x1538424a8 <col:16> 'int' contains-errors lvalue Var 0x15380b8d0 'mid' 'int'     `-ReturnStmt 0x1538425d0 <line:17:3, col:11>       `-UnaryOperator 0x1538425b8 <col:10, col:11> 'int' prefix '-'         `-IntegerLiteral 0x153842598 <col:11> 'int' 1 ","19435":"`-FunctionDecl 0x134928758  line:1:5 kvm_cpu_has_pending_timer 'int (struct kvm_vcpu *)'   |-ParmVarDecl 0x134928648 <col:31, col:48> col:48 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x134940b08 <line:2:1, line:4:1>     `-ReturnStmt 0x134940af8 <line:3:2, col:20>       `-CXXDependentScopeMemberExpr 0x134940ab0 <col:9, col:20> '<dependent type>' contains-errors lvalue .timer_fired         `-RecoveryExpr 0x134940a88 <col:9, col:15> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x134940a50 <col:9> 'struct kvm_vcpu *' lvalue ParmVar 0x134928648 'vcpu' 'struct kvm_vcpu *' ","19992":"`-FunctionDecl 0x13e03ce88  line:1:19 invalid GC_debug_generic_malloc_inner_ignore_off_page 'int *(int, int)'   |-ParmVarDecl 0x13e03ccf0 <col:65, col:72> col:72 invalid lb 'int'   |-ParmVarDecl 0x13e03cd70 <line:2:65, col:69> col:69 used k 'int'   `-CompoundStmt 0x13e056350 <line:3:3, line:17:3>     |-DeclStmt 0x13e03d258 <line:4:5, line:5:69>     | `-VarDecl 0x13e03cf58 <line:4:5, line:5:68> line:4:12 used result 'void *' cinit     |   `-CallExpr 0x13e03d228 <col:21, line:5:68> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e03d120 <line:4:21> 'int ()' Function 0x13e03d068 'GC_generic_malloc_inner_ignore_off_page' 'int ()'     |     |-BinaryOperator 0x13e03d208 <line:5:49, col:54> '<dependent type>' contains-errors '+'     |     | |-RecoveryExpr 0x13e03d140 <col:49> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x13e03d1e8 <col:54> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e03d198 <col:67> 'int' lvalue ParmVar 0x13e03cd70 'k' 'int'     |-IfStmt 0x13e055dd8 <line:7:5, line:11:5>     | |-BinaryOperator 0x13e03d2e0 <line:7:9, col:19> 'int' contains-errors '=='     | | |-ImplicitCastExpr 0x13e03d2b0 <col:9> 'void *' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x13e03d270 <col:9> 'void *' contains-errors lvalue Var 0x13e03cf58 'result' 'void *'     | | `-ImplicitCastExpr 0x13e03d2c8 <col:19> 'void *' <NullToPointer>     | |   `-IntegerLiteral 0x13e03d290 <col:19> 'int' 0     | `-CompoundStmt 0x13e055db8 <col:22, line:11:5>     |   |-CallExpr 0x13e055d08 <line:8:9, line:9:42> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13e055cf0 <line:8:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13e03d3e0 <col:9> 'int ()' Function 0x13e03d328 'GC_err_printf' 'int ()'     |   | |-ImplicitCastExpr 0x13e055d38 <col:23> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x13e055c40 <col:23> 'char[4]' lvalue \"STR\"     |   | `-CStyleCastExpr 0x13e055c98 <line:9:24, col:40> 'unsigned long' contains-errors <Dependent>     |   |   `-RecoveryExpr 0x13e055c60 <col:40> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13e055da8 <line:10:9, col:17>     |     `-ImplicitCastExpr 0x13e055d90 <col:15, col:17> 'int *' <NullToPointer>     |       `-ParenExpr 0x13e055d70 <col:15, col:17> 'int'     |         `-IntegerLiteral 0x13e055d50 <col:16> 'int' 0     |-IfStmt 0x13e055fe0 <line:12:5, line:14:5>     | |-UnaryOperator 0x13e055e78 <line:12:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e055e60 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13e055e40 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e055fc8 <col:32, line:14:5>     |   `-CallExpr 0x13e055fa8 <line:13:9, col:34> 'int'     |     `-ImplicitCastExpr 0x13e055f90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13e055f70 <col:9> 'int ()' Function 0x13e055eb8 'GC_start_debugging_inner' 'int ()'     `-CallExpr 0x13e056188 <line:15:5, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x13e0560e0 <col:5> 'int ()' Function 0x13e056028 'ADD_CALL_CHAIN' 'int ()'       |-DeclRefExpr 0x13e056100 <col:20> 'void *' contains-errors lvalue Var 0x13e03cf58 'result' 'void *'       `-RecoveryExpr 0x13e056168 <col:28> '<dependent type>' contains-errors lvalue ","19269":"`-FunctionDecl 0x13300ddf0  line:1:13 invalid scsi_write_data 'void (int *)' static   |-ParmVarDecl 0x13300dd28 <col:29, col:42> col:42 invalid req 'int *'   `-CompoundStmt 0x1330290f0 <line:2:1, line:33:1>     |-CallExpr 0x133028518 <line:8:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13300e2e8 <col:5> 'int ()' Function 0x13300e230 'assert' 'int ()'     | `-BinaryOperator 0x1330284f8 <col:12, col:28> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x133028490 <col:12, col:19> '<dependent type>' contains-errors lvalue .aiocb     |   | `-CXXDependentScopeMemberExpr 0x133028448 <col:12, col:15> '<dependent type>' contains-errors lvalue ->req     |   |   `-RecoveryExpr 0x133028428 <col:12> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1330284d8 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133028bf0 <line:10:5, line:14:5>     | |-BinaryOperator 0x133028780 <line:10:9, col:28> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x133028718 <col:9, col:20> '<dependent type>' contains-errors lvalue .mode     | | | `-CXXDependentScopeMemberExpr 0x1330286d0 <col:9, col:16> '<dependent type>' contains-errors lvalue .cmd     | | |   `-CXXDependentScopeMemberExpr 0x133028688 <col:9, col:12> '<dependent type>' contains-errors lvalue ->req     | | |     `-RecoveryExpr 0x133028668 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x133028760 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133028bc8 <col:46, line:14:5>     |   |-CallExpr 0x133028948 <line:11:9, col:22> 'int'     |   | |-ImplicitCastExpr 0x133028930 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x133028880 <col:9> 'int ()' Function 0x1330287c8 'DPRINTF' 'int ()'     |   | `-ImplicitCastExpr 0x133028970 <col:17> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x1330288e0 <col:17> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x133028b88 <line:12:9, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x133028a68 <col:9> 'int ()' Function 0x1330289b0 'scsi_write_complete' 'int ()'     |   | |-RecoveryExpr 0x133028b18 <col:29> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x133028b70 <col:32, col:33> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x133028b58 <col:33> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x133028b38 <col:33> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x133028bb8 <line:13:9>     `-IfStmt 0x1330290c0 <line:17:5, line:32:5> has_else       |-RecoveryExpr 0x133028c30 <line:17:9> '_Bool' contains-errors       |-CompoundStmt 0x133029050 <col:12, line:29:5>       | |-IfStmt 0x133028ca0 <line:18:9, line:20:9>       | | |-RecoveryExpr 0x133028c50 <line:18:13, col:16> '_Bool' contains-errors       | | `-CompoundStmt 0x133028c90 <col:27, line:20:9>       | `-IfStmt 0x133029030 <line:26:9, line:28:9>       |   |-RecoveryExpr 0x133028fe0 <line:26:13, col:29> '_Bool' contains-errors       |   `-CompoundStmt 0x133029020 <col:35, line:28:9>       `-CompoundStmt 0x1330290b0 <line:29:12, line:32:5> ","19437":"`-FunctionDecl 0x14a80dec8  line:1:10 invalid run 'int (int *, const int)'   |-ParmVarDecl 0x14a80dd28 <col:14, col:32> col:32 invalid txn 'int *'   |-ParmVarDecl 0x14a80dda8 <line:2:14, <invalid sloc>> col:26 invalid 'const int'   `-CompoundStmt 0x14a1254c0 <line:6:38, line:89:5>     |-RecoveryExpr 0x14a80dfb0 <line:7:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a80e378 <line:9:9, line:11:9>     | |-UnaryOperator 0x14a80e0f0 <line:9:13, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14a80e0d0 <col:14, col:26> '<dependent type>' contains-errors     | |   `-CXXDependentScopeMemberExpr 0x14a80e088 <col:14, col:21> '<dependent type>' contains-errors lvalue .isOK     | |     `-RecoveryExpr 0x14a80e068 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a80e360 <col:29, line:11:9>     |   `-ReturnStmt 0x14a80e350 <line:10:13, col:54>     |     `-CallExpr 0x14a80e320 <col:20, col:54> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14a80e260 <col:20> 'int ()' Function 0x14a80e1a8 'appendCommandStatus' 'int ()'     |       |-RecoveryExpr 0x14a80e2e0 <col:40> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x14a80e300 <col:48> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a123ef8 <line:13:9, line:18:9>     | |-BinaryOperator 0x14a123d78 <line:13:13, col:69> 'int' contains-errors '&&'     | | |-BinaryOperator 0x14a123cc0 <col:13, col:46> 'int' contains-errors '&&'     | | | |-UnaryOperator 0x14a123c10 <col:13, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x14a123bf8 <col:14, col:19> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-CXXDependentScopeMemberExpr 0x14a123bb0 <col:14, col:19> '<dependent type>' contains-errors lvalue .hasHashedPassword     | | | |     `-RecoveryExpr 0x14a123b90 <col:14> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x14a123ca8 <col:40, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x14a123c90 <col:41, col:46> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-CXXDependentScopeMemberExpr 0x14a123c48 <col:41, col:46> '<dependent type>' contains-errors lvalue .hasCustomData     | | |       `-RecoveryExpr 0x14a123c28 <col:41> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14a123d60 <col:63, col:69> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x14a123d48 <col:64, col:69> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x14a123d00 <col:64, col:69> '<dependent type>' contains-errors lvalue .hasRoles     | |       `-RecoveryExpr 0x14a123ce0 <col:64> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a123ee8 <col:79, line:18:9>     |-IfStmt 0x14a124318 <line:20:9, line:26:9>     | |-BinaryOperator 0x14a124238 <line:20:13, col:64> 'int' contains-errors '&&'     | | |-CXXDependentScopeMemberExpr 0x14a124100 <col:13, col:18> '<dependent type>' contains-errors lvalue .hasHashedPassword     | | | `-RecoveryExpr 0x14a1240e0 <col:13> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14a124218 <col:39, col:64> 'int' contains-errors '=='     | |   |-CallExpr 0x14a1241f8 <col:39, col:59> '<dependent type>' contains-errors     | |   | `-CXXDependentScopeMemberExpr 0x14a1241b0 <col:39, col:53> '<dependent type>' contains-errors lvalue .getDB     | |   |   `-CXXDependentScopeMemberExpr 0x14a124168 <col:39, col:44> '<dependent type>' contains-errors lvalue .userName     | |   |     `-RecoveryExpr 0x14a124148 <col:39> '<dependent type>' contains-errors lvalue     | |   `-StringLiteral 0x14a124080 <col:64> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x14a124308 <col:71, line:26:9>     |-IfStmt 0x14a1246c8 <line:29:9, line:48:9>     | |-RecoveryExpr 0x14a124338 <line:29:13, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x14a1246a0 <col:37, line:48:9>     |   |-DeclStmt 0x14a124548 <line:33:13, col:29>     |   | `-VarDecl 0x14a1244e0 <col:13, col:17> col:17 used authzVersion 'int'     |   |-IfStmt 0x14a1245b0 <line:35:13, line:37:13>     |   | |-RecoveryExpr 0x14a124560 <line:35:17, col:30> '_Bool' contains-errors     |   | `-CompoundStmt 0x14a1245a0 <col:33, line:37:13>     |   `-IfStmt 0x14a124670 <line:40:13, line:46:13> has_else     |     |-RecoveryExpr 0x14a1245f0 <line:40:17, col:54> '_Bool' contains-errors     |     |-CompoundStmt 0x14a124630 <col:76, line:44:13>     |     `-CompoundStmt 0x14a124660 <col:20, line:46:13>     |-IfStmt 0x14a124738 <line:49:9, line:51:9>     | |-RecoveryExpr 0x14a1246e8 <line:49:13, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x14a124728 <col:33, line:51:9>     |-IfStmt 0x14a1248a8 <line:52:9, line:54:9>     | |-RecoveryExpr 0x14a124758 <line:52:13, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x14a124898 <col:28, line:54:9>     |-IfStmt 0x14a125148 <line:61:9, line:63:9>     | |-RecoveryExpr 0x14a1250f8 <line:61:13, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x14a125138 <col:29, line:63:9>     `-IfStmt 0x14a125240 <line:67:9, line:76:9>       |-RecoveryExpr 0x14a125168 <line:67:13, col:18> '_Bool' contains-errors       `-CompoundStmt 0x14a125230 <col:28, line:76:9> ","20050":"`-FunctionDecl 0x105826688  line:1:1 hugetlbfs_fill_super 'int (struct super_block *, void *, int)'   |-ParmVarDecl 0x10580e248 <col:22, col:42> col:42 used sb 'struct super_block *'   |-ParmVarDecl 0x10580e2c8 <col:46, col:52> col:52 used data 'void *'   |-ParmVarDecl 0x10580e348 <col:58, col:62> col:62 silent 'int'   `-CompoundStmt 0x10582c9c0 <line:2:1, line:51:1>     |-DeclStmt 0x105826810 <line:3:2, col:9>     | `-VarDecl 0x1058267a8 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x1058269a8 <line:4:2, col:32>     | |-RecordDecl 0x105826828 <col:2, col:9> col:9 struct hugetlbfs_config     | `-VarDecl 0x105826928 <col:2, col:26> col:26 referenced invalid config 'struct hugetlbfs_config'     |-DeclStmt 0x105826ba8 <line:5:2, col:34>     | |-RecordDecl 0x1058269c0 <col:2, col:9> col:9 struct hugetlbfs_sb_info     | `-VarDecl 0x105826b28 <col:2, col:28> col:28 used sbinfo 'struct hugetlbfs_sb_info *'     |-CallExpr 0x105826d98 <line:7:2, col:29> 'int'     | |-ImplicitCastExpr 0x105826d80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x105826cf0 <col:2> 'int ()' Function 0x105826c38 'save_mount_options' 'int ()'     | |-ImplicitCastExpr 0x105826dc8 <col:21> 'struct super_block *' <LValueToRValue>     | | `-DeclRefExpr 0x105826d10 <col:21> 'struct super_block *' lvalue ParmVar 0x10580e248 'sb' 'struct super_block *'     | `-ImplicitCastExpr 0x105826de0 <col:25> 'void *' <LValueToRValue>     |   `-DeclRefExpr 0x105826d30 <col:25> 'void *' lvalue ParmVar 0x10580e2c8 'data' 'void *'     |-BinaryOperator 0x105826ec0 <line:9:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x105826e40 <col:2, col:9> '<dependent type>' contains-errors lvalue .max_hpages     | | `-RecoveryExpr 0x105826e18 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x105826df8 <col:2> 'struct hugetlbfs_config' lvalue Var 0x105826928 'config' 'struct hugetlbfs_config'     | `-UnaryOperator 0x105826ea8 <col:22, col:23> 'int' prefix '-'     |   `-IntegerLiteral 0x105826e88 <col:23> 'int' 1     |-BinaryOperator 0x105826fa8 <line:10:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x105826f28 <col:2, col:9> '<dependent type>' contains-errors lvalue .nr_inodes     | | `-RecoveryExpr 0x105826f00 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x105826ee0 <col:2> 'struct hugetlbfs_config' lvalue Var 0x105826928 'config' 'struct hugetlbfs_config'     | `-UnaryOperator 0x105826f90 <col:21, col:22> 'int' prefix '-'     |   `-IntegerLiteral 0x105826f70 <col:22> 'int' 1     |-BinaryOperator 0x105827190 <line:11:2, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x105827010 <col:2, col:9> '<dependent type>' contains-errors lvalue .uid     | | `-RecoveryExpr 0x105826fe8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x105826fc8 <col:2> 'struct hugetlbfs_config' lvalue Var 0x105826928 'config' 'struct hugetlbfs_config'     | `-CallExpr 0x105827170 <col:15, col:29> 'int'     |   `-ImplicitCastExpr 0x105827158 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x105827138 <col:15> 'int ()' Function 0x105827080 'current_fsuid' 'int ()'     |-BinaryOperator 0x105827378 <line:12:2, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1058271f8 <col:2, col:9> '<dependent type>' contains-errors lvalue .gid     | | `-RecoveryExpr 0x1058271d0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1058271b0 <col:2> 'struct hugetlbfs_config' lvalue Var 0x105826928 'config' 'struct hugetlbfs_config'     | `-CallExpr 0x105827358 <col:15, col:29> 'int'     |   `-ImplicitCastExpr 0x105827340 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x105827320 <col:15> 'int ()' Function 0x105827268 'current_fsgid' 'int ()'     |-BinaryOperator 0x105827448 <line:13:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1058273e0 <col:2, col:9> '<dependent type>' contains-errors lvalue .mode     | | `-RecoveryExpr 0x1058273b8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x105827398 <col:2> 'struct hugetlbfs_config' lvalue Var 0x105826928 'config' 'struct hugetlbfs_config'     | `-IntegerLiteral 0x105827428 <col:16> 'int' 493     |-BinaryOperator 0x105827580 <line:14:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1058274b0 <col:2, col:9> '<dependent type>' contains-errors lvalue .hstate     | | `-RecoveryExpr 0x105827488 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x105827468 <col:2> 'struct hugetlbfs_config' lvalue Var 0x105826928 'config' 'struct hugetlbfs_config'     | `-UnaryOperator 0x105827568 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x105827548 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x105829280 <line:15:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x105829200 <col:2, col:9> '<dependent type>' contains-errors lvalue .min_hpages     | | `-RecoveryExpr 0x1058275c0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1058275a0 <col:2> 'struct hugetlbfs_config' lvalue Var 0x105826928 'config' 'struct hugetlbfs_config'     | `-UnaryOperator 0x105829268 <col:22, col:23> 'int' prefix '-'     |   `-IntegerLiteral 0x105829248 <col:23> 'int' 1     |-BinaryOperator 0x105829448 <line:16:2, col:45> 'int' contains-errors '='     | |-DeclRefExpr 0x1058292a0 <col:2> 'int' lvalue Var 0x1058267a8 'ret' 'int'     | `-CallExpr 0x105829418 <col:8, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1058293a0 <col:8> 'int ()' Function 0x1058292e8 'hugetlbfs_parse_options' 'int ()'     |   |-DeclRefExpr 0x1058293c0 <col:32> 'void *' lvalue ParmVar 0x10580e2c8 'data' 'void *'     |   `-UnaryOperator 0x105829400 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1058293e0 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1058294e8 <line:17:2, line:18:10>     | |-ImplicitCastExpr 0x105829488 <line:17:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x105829468 <col:6> 'int' lvalue Var 0x1058267a8 'ret' 'int'     | `-ReturnStmt 0x1058294d8 <line:18:3, col:10>     |   `-ImplicitCastExpr 0x1058294c0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1058294a0 <col:10> 'int' lvalue Var 0x1058267a8 'ret' 'int'     |-IfStmt 0x105829790 <line:21:2, line:22:11>     | |-UnaryOperator 0x1058296d0 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1058296b8 <col:7> 'struct hugetlbfs_sb_info *' <LValueToRValue>     | |   `-DeclRefExpr 0x105829698 <col:7> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     | `-ReturnStmt 0x105829780 <line:22:3, col:11>     |   `-UnaryOperator 0x105829768 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x105829750 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x105829730 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x105829830 <line:23:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1058297e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1058297b0 <col:2> 'struct super_block *' lvalue ParmVar 0x10580e248 'sb' 'struct super_block *'     | `-DeclRefExpr 0x105829810 <col:18> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     |-BinaryOperator 0x105829918 <line:24:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x105829888 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x105829850 <col:2> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     | `-CXXDependentScopeMemberExpr 0x1058298d0 <col:19, col:26> '<dependent type>' contains-errors lvalue .hstate     |   `-RecoveryExpr 0x1058298b0 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x105829ab0 <line:25:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x105829a18 <col:2> 'int ()' Function 0x105829960 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x105829a98 <col:17, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x105829a70 <col:18, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x105829a38 <col:18> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     |-BinaryOperator 0x105829ba0 <line:26:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x105829b10 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x105829ad8 <col:2> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     | `-CXXDependentScopeMemberExpr 0x105829b58 <col:23, col:30> '<dependent type>' contains-errors lvalue .nr_inodes     |   `-RecoveryExpr 0x105829b38 <col:23> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x105829c88 <line:27:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x105829bf8 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x105829bc0 <col:2> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     | `-CXXDependentScopeMemberExpr 0x105829c40 <col:24, col:31> '<dependent type>' contains-errors lvalue .nr_inodes     |   `-RecoveryExpr 0x105829c20 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x105829d60 <line:28:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x105829ce0 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x105829ca8 <col:2> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     | `-RecoveryExpr 0x105829d40 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x10582bd58 <line:30:2, line:36:2>     | |-BinaryOperator 0x105829f00 <line:30:6, col:55> 'int' contains-errors '||'     | | |-BinaryOperator 0x105829e20 <col:6, col:28> 'int' contains-errors '!='     | | | |-CXXDependentScopeMemberExpr 0x105829da0 <col:6, col:13> '<dependent type>' contains-errors lvalue .max_hpages     | | | | `-RecoveryExpr 0x105829d80 <col:6> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x105829e08 <col:27, col:28> 'int' prefix '-'     | | |   `-IntegerLiteral 0x105829de8 <col:28> 'int' 1     | | `-BinaryOperator 0x105829ee0 <col:33, col:55> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x105829e60 <col:33, col:40> '<dependent type>' contains-errors lvalue .min_hpages     | |   | `-RecoveryExpr 0x105829e40 <col:33> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x105829ec8 <col:54, col:55> 'int' prefix '-'     | |     `-IntegerLiteral 0x105829ea8 <col:55> 'int' 1     | `-CompoundStmt 0x10582bd38 <col:58, line:36:2>     |   |-BinaryOperator 0x10582bc00 <line:31:3, line:33:25> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x105829f58 <line:31:3, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x105829f20 <col:3> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     |   | `-CallExpr 0x10582a1b8 <col:19, line:33:25> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x10582a060 <line:31:19> 'int ()' Function 0x105829fa8 'hugepage_new_subpool' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x10582a0a0 <col:40, col:47> '<dependent type>' contains-errors lvalue .hstate     |   |   | `-RecoveryExpr 0x10582a080 <col:40> '<dependent type>' contains-errors lvalue     |   |   |-CXXDependentScopeMemberExpr 0x10582a108 <line:32:8, col:15> '<dependent type>' contains-errors lvalue .max_hpages     |   |   | `-RecoveryExpr 0x10582a0e8 <col:8> '<dependent type>' contains-errors lvalue     |   |   `-CXXDependentScopeMemberExpr 0x10582a170 <line:33:8, col:15> '<dependent type>' contains-errors lvalue .min_hpages     |   |     `-RecoveryExpr 0x10582a150 <col:8> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x10582bd18 <line:34:3, line:35:9>     |     |-UnaryOperator 0x10582bc98 <line:34:7, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x10582bc80 <col:8, col:16> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x10582bc58 <col:8, col:16> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x10582bc20 <col:8> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     |     `-GotoStmt 0x10582bd00 <line:35:4, col:9> 'out_free' 0x10582bcb0     |-BinaryOperator 0x10582bfc8 <line:38:2, col:48> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x10582be10 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x10582bdd8 <col:2> 'struct super_block *' lvalue ParmVar 0x10580e248 'sb' 'struct super_block *'     | `-CallExpr 0x10582bfa0 <col:20, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x10582bf18 <col:20> 'int ()' Function 0x10582be60 'huge_page_size' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x10582bf58 <col:35, col:42> '<dependent type>' contains-errors lvalue .hstate     |     `-RecoveryExpr 0x10582bf38 <col:35> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x10582c1d8 <line:39:2, col:54> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x10582c020 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x10582bfe8 <col:2> 'struct super_block *' lvalue ParmVar 0x10580e248 'sb' 'struct super_block *'     | `-CallExpr 0x10582c1b0 <col:25, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x10582c128 <col:25> 'int ()' Function 0x10582c070 'huge_page_shift' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x10582c168 <col:41, col:48> '<dependent type>' contains-errors lvalue .hstate     |     `-RecoveryExpr 0x10582c148 <col:41> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x10582c338 <line:42:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x10582c2f0 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x10582c2b8 <col:2> 'struct super_block *' lvalue ParmVar 0x10580e248 'sb' 'struct super_block *'     | `-IntegerLiteral 0x10582c318 <col:20> 'int' 1     |-BinaryOperator 0x10582c668 <line:43:2, col:58> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x10582c390 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x10582c358 <col:2> 'struct super_block *' lvalue ParmVar 0x10580e248 'sb' 'struct super_block *'     | `-CallExpr 0x10582c640 <col:15, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x10582c498 <col:15> 'int ()' Function 0x10582c3e0 'd_make_root' 'int ()'     |   `-CallExpr 0x10582c610 <col:27, col:57> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x10582c598 <col:27> 'int ()' Function 0x10582c4e0 'hugetlbfs_get_root' 'int ()'     |     |-DeclRefExpr 0x10582c5b8 <col:46> 'struct super_block *' lvalue ParmVar 0x10580e248 'sb' 'struct super_block *'     |     `-UnaryOperator 0x10582c5f8 <col:50, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x10582c5d8 <col:51> '<dependent type>' contains-errors lvalue     |-IfStmt 0x10582c730 <line:44:2, line:45:8>     | |-UnaryOperator 0x10582c700 <line:44:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x10582c6e8 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x10582c6c0 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x10582c688 <col:7> 'struct super_block *' lvalue ParmVar 0x10580e248 'sb' 'struct super_block *'     | `-GotoStmt 0x10582c718 <line:45:3, col:8> 'out_free' 0x10582bcb0     |-ReturnStmt 0x10582c770 <line:46:2, col:9>     | `-IntegerLiteral 0x10582c750 <col:9> 'int' 0     |-LabelStmt 0x10582c908 <line:47:1, line:48:21> 'out_free'     | `-CallExpr 0x10582c8e0 <col:2, col:21> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x10582c860 <col:2> 'int ()' Function 0x10582c7a8 'kfree' 'int ()'     |   `-RecoveryExpr 0x10582c8b8 <col:8, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x10582c880 <col:8> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *'     `-CallExpr 0x10582c980 <line:49:2, col:14> 'int'       |-ImplicitCastExpr 0x10582c968 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x10582c928 <col:2> 'int ()' Function 0x10582c7a8 'kfree' 'int ()'       `-ImplicitCastExpr 0x10582c9a8 <col:8> 'struct hugetlbfs_sb_info *' <LValueToRValue>         `-DeclRefExpr 0x10582c948 <col:8> 'struct hugetlbfs_sb_info *' lvalue Var 0x105826b28 'sbinfo' 'struct hugetlbfs_sb_info *' ","19338":"`-FunctionDecl 0x1560b1b58  line:1:5 invalid addattr8 'int (struct nlmsghdr *, int, int, int)'   |-ParmVarDecl 0x156098848 <col:14, col:31> col:31 used n 'struct nlmsghdr *'   |-ParmVarDecl 0x1560988c8 <col:34, col:38> col:38 used maxlen 'int'   |-ParmVarDecl 0x156098948 <col:46, col:50> col:50 used type 'int'   |-ParmVarDecl 0x1560b1a00 <col:56, col:61> col:61 invalid data 'int'   `-CompoundStmt 0x1560b1e50 <line:2:1, line:4:1> ","19204":"`-FunctionDecl 0x12d928318  line:1:17 invalid opj_j2k_decoding_validation 'int (int *, int *, int *)' static   |-ParmVarDecl 0x12d928128 <col:48, col:59> col:59 invalid p_j2k 'int *'   |-ParmVarDecl 0x12d9281a8 <line:2:41, col:63> col:63 invalid p_stream 'int *'   |-ParmVarDecl 0x12d928228 <line:3:41, col:59> col:59 invalid p_manager 'int *'   `-CompoundStmt 0x12d941a80 <line:5:1, line:29:1>     |-CallExpr 0x12d9285b0 <line:9:9, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d928530 <col:9> 'int ()' Function 0x12d928478 'assert' 'int ()'     | `-BinaryOperator 0x12d928590 <col:16, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12d928550 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12d928570 <col:25> 'int' 0     |-CallExpr 0x12d928658 <line:10:9, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d9285d8 <col:9> 'int ()' Function 0x12d928478 'assert' 'int ()'     | `-BinaryOperator 0x12d928638 <col:16, col:28> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12d9285f8 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12d928618 <col:28> 'int' 0     |-CallExpr 0x12d928700 <line:11:9, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d928680 <col:9> 'int ()' Function 0x12d928478 'assert' 'int ()'     | `-BinaryOperator 0x12d9286e0 <col:16, col:29> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12d9286a0 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12d9286c0 <col:29> 'int' 0     `-ReturnStmt 0x12d941a70 <line:28:9, col:16>       `-RecoveryExpr 0x12d941a50 <col:16> '<dependent type>' contains-errors lvalue ","19671":"`-FunctionDecl 0x14d024930  col:9 implicit used strcasecmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x14d03e230 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14d03e298 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14d0249d8 <<invalid sloc>> Implicit 957 ","19621":"`-FunctionDecl 0x12f940d38  line:1:12 rtnl_setlink 'int (struct sk_buff *, struct nlmsghdr *, struct netlink_ext_ack *)' static   |-ParmVarDecl 0x12f928648 <col:25, col:41> col:41 used skb 'struct sk_buff *'   |-ParmVarDecl 0x12f940a28 <col:46, col:63> col:63 used nlh 'struct nlmsghdr *'   |-ParmVarDecl 0x12f940bf8 <line:2:4, col:28> col:28 used extack 'struct netlink_ext_ack *'   `-CompoundStmt 0x12f9484f8 <line:3:1, line:45:1>     |-DeclStmt 0x12f941200 <line:4:2, col:37>     | |-RecordDecl 0x12f940e40 <col:2, col:9> col:9 struct net     | `-VarDecl 0x12f940fa8 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x12f9411c0 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12f941140 <col:20> 'int ()' Function 0x12f941088 'sock_net' 'int ()'     |     `-RecoveryExpr 0x12f941198 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12f941160 <col:29> 'struct sk_buff *' lvalue ParmVar 0x12f928648 'skb' 'struct sk_buff *'     |-DeclStmt 0x12f941408 <line:5:2, col:23>     | |-RecordDecl 0x12f941218 <col:2, col:9> col:9 struct ifinfomsg     | `-VarDecl 0x12f941388 <col:2, col:20> col:20 used ifm 'struct ifinfomsg *'     |-DeclStmt 0x12f941608 <line:6:2, col:24>     | |-RecordDecl 0x12f941420 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x12f941588 <col:2, col:21> col:21 used dev 'struct net_device *'     |-DeclStmt 0x12f9416a0 <line:7:2, col:9>     | `-VarDecl 0x12f941638 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x12f941908 <line:8:2, col:31>     | |-RecordDecl 0x12f9416b8 <col:2, col:9> col:9 struct nlattr     | `-VarDecl 0x12f941888 <col:2, col:17> col:17 invalid tb 'struct nlattr *'     |-DeclStmt 0x12f9419b0 <line:9:2, col:23>     | `-VarDecl 0x12f941948 <col:2, col:7> col:7 referenced invalid ifname 'char'     |-IfStmt 0x12f946ce0 <line:13:2, line:14:8>     | |-BinaryOperator 0x12f946c58 <line:13:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x12f946c40 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12f946c00 <col:6> 'int' lvalue Var 0x12f941638 'err' 'int'     | | `-IntegerLiteral 0x12f946c20 <col:12> 'int' 0     | `-GotoStmt 0x12f946cc8 <line:14:3, col:8> 'errout' 0x12f946c78     |-IfStmt 0x12f946e00 <line:16:2, line:17:11>     | |-RecoveryExpr 0x12f946d38 <line:16:6, col:24> '_Bool' contains-errors     | `-ReturnStmt 0x12f946df0 <line:17:3, col:11>     |   `-UnaryOperator 0x12f946dd8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12f946dc0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12f946da0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f9470c8 <line:19:2, line:22:15> has_else     | |-RecoveryExpr 0x12f946e58 <line:19:6, col:20> '_Bool' contains-errors     | |-NullStmt 0x12f9470c0 <line:20:3>     | `-BinaryOperator 0x12f9470a0 <line:22:3, col:15> '<dependent type>' contains-errors '='     |   |-ArraySubscriptExpr 0x12f947068 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x12f947050 <col:3> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x12f947008 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12f946fe8 <col:3> 'char' lvalue Var 0x12f941948 'ifname' 'char'     |   | `-IntegerLiteral 0x12f947030 <col:10> 'int' 0     |   `-CharacterLiteral 0x12f947088 <col:15> 'int' 0     |-BinaryOperator 0x12f9471d0 <line:24:2, col:9> 'int' contains-errors '='     | |-DeclRefExpr 0x12f9470f8 <col:2> 'int' lvalue Var 0x12f941638 'err' 'int'     | `-UnaryOperator 0x12f9471b8 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x12f9471a0 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x12f947180 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12f9473d0 <line:25:2, col:22> 'struct ifinfomsg *' '='     | |-DeclRefExpr 0x12f9471f0 <col:2> 'struct ifinfomsg *' lvalue Var 0x12f941388 'ifm' 'struct ifinfomsg *'     | `-ImplicitCastExpr 0x12f9473b8 <col:8, col:22> 'struct ifinfomsg *' <IntegralToPointer>     |   `-CallExpr 0x12f947378 <col:8, col:22> 'int'     |     |-ImplicitCastExpr 0x12f947360 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12f9472f0 <col:8> 'int ()' Function 0x12f947238 'nlmsg_data' 'int ()'     |     `-ImplicitCastExpr 0x12f9473a0 <col:19> 'struct nlmsghdr *' <LValueToRValue>     |       `-DeclRefExpr 0x12f947310 <col:19> 'struct nlmsghdr *' lvalue ParmVar 0x12f940a28 'nlh' 'struct nlmsghdr *'     |-IfStmt 0x12f9478b8 <line:26:2, line:31:8> has_else     | |-BinaryOperator 0x12f947470 <line:26:6, col:23> 'int' contains-errors '>'     | | |-RecoveryExpr 0x12f947428 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12f9473f0 <col:6> 'struct ifinfomsg *' lvalue Var 0x12f941388 'ifm' 'struct ifinfomsg *'     | | `-IntegerLiteral 0x12f947450 <col:23> 'int' 0     | |-BinaryOperator 0x12f947660 <line:27:3, col:47> 'struct net_device *' contains-errors '='     | | |-DeclRefExpr 0x12f947490 <col:3> 'struct net_device *' lvalue Var 0x12f941588 'dev' 'struct net_device *'     | | `-CallExpr 0x12f947630 <col:9, col:47> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12f947590 <col:9> 'int ()' Function 0x12f9474d8 '__dev_get_by_index' 'int ()'     | |   |-DeclRefExpr 0x12f9475b0 <col:28> 'struct net *' contains-errors lvalue Var 0x12f940fa8 'net' 'struct net *'     | |   `-RecoveryExpr 0x12f947608 <col:33, col:38> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12f9475d0 <col:33> 'struct ifinfomsg *' lvalue Var 0x12f941388 'ifm' 'struct ifinfomsg *'     | `-IfStmt 0x12f947888 <line:28:7, line:31:8> has_else     |   |-RecoveryExpr 0x12f9476a0 <line:28:11, col:25> '_Bool' contains-errors     |   |-BinaryOperator 0x12f947850 <line:29:3, col:38> 'struct net_device *' contains-errors '='     |   | |-DeclRefExpr 0x12f9476c0 <col:3> 'struct net_device *' lvalue Var 0x12f941588 'dev' 'struct net_device *'     |   | `-CallExpr 0x12f947820 <col:9, col:38> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12f9477c0 <col:9> 'int ()' Function 0x12f947708 '__dev_get_by_name' 'int ()'     |   |   |-DeclRefExpr 0x12f9477e0 <col:27> 'struct net *' contains-errors lvalue Var 0x12f940fa8 'net' 'struct net *'     |   |   `-RecoveryExpr 0x12f947800 <col:32> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12f947870 <line:31:3, col:8> 'errout' 0x12f946c78     |-IfStmt 0x12f947978 <line:33:2, line:36:2>     | |-RecoveryExpr 0x12f947908 <line:33:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x12f947960 <col:19, line:36:2>     |   `-GotoStmt 0x12f947948 <line:35:3, col:8> 'errout' 0x12f946c78     |-BinaryOperator 0x12f948148 <line:38:2, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x12f947998 <col:2> 'int' lvalue Var 0x12f941638 'err' 'int'     | `-CallExpr 0x12f948118 <col:8, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f9480b8 <col:8> 'int ()' Function 0x12f948000 'validate_linkmsg' 'int ()'     |   |-DeclRefExpr 0x12f9480d8 <col:25> 'struct net_device *' lvalue Var 0x12f941588 'dev' 'struct net_device *'     |   `-RecoveryExpr 0x12f9480f8 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12f9481f8 <line:39:2, line:40:8>     | |-BinaryOperator 0x12f9481c0 <line:39:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x12f9481a8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12f948168 <col:6> 'int' lvalue Var 0x12f941638 'err' 'int'     | | `-IntegerLiteral 0x12f948188 <col:12> 'int' 0     | `-GotoStmt 0x12f9481e0 <line:40:3, col:8> 'errout' 0x12f946c78     |-BinaryOperator 0x12f948470 <line:42:2, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x12f948218 <col:2> 'int' lvalue Var 0x12f941638 'err' 'int'     | `-CallExpr 0x12f948418 <col:8, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f948318 <col:8> 'int ()' Function 0x12f948260 'do_setlink' 'int ()'     |   |-DeclRefExpr 0x12f948338 <col:19> 'struct sk_buff *' lvalue ParmVar 0x12f928648 'skb' 'struct sk_buff *'     |   |-DeclRefExpr 0x12f948358 <col:24> 'struct net_device *' lvalue Var 0x12f941588 'dev' 'struct net_device *'     |   |-DeclRefExpr 0x12f948378 <col:29> 'struct ifinfomsg *' lvalue Var 0x12f941388 'ifm' 'struct ifinfomsg *'     |   |-DeclRefExpr 0x12f948398 <col:34> 'struct netlink_ext_ack *' lvalue ParmVar 0x12f940bf8 'extack' 'struct netlink_ext_ack *'     |   |-RecoveryExpr 0x12f9483b8 <col:42> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x12f9483d8 <col:46> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12f9483f8 <col:54> 'int' 0     `-LabelStmt 0x12f9484d8 <line:43:1, line:44:9> 'errout'       `-ReturnStmt 0x12f9484c8 <col:2, col:9>         `-ImplicitCastExpr 0x12f9484b0 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x12f948490 <col:9> 'int' lvalue Var 0x12f941638 'err' 'int' ","19887":"`-FunctionDecl 0x150928110  line:1:6 test_integer_functions 'void ()'   `-CompoundStmt 0x1509418b8 <line:2:1, line:26:1>     |-CallExpr 0x150928418 <line:3:3, line:5:12> 'int'     | |-ImplicitCastExpr 0x150928400 <line:3:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150928330 <col:3> 'int ()' Function 0x150928278 'assert_true_rule' 'int ()'     | |-ImplicitCastExpr 0x150928448 <line:4:7> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x150928390 <col:7> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x150928460 <line:5:7> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1509283b0 <col:7> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1509284f0 <line:7:3, line:9:12> 'int'     | |-ImplicitCastExpr 0x1509284d8 <line:7:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150928478 <col:3> 'int ()' Function 0x150928278 'assert_true_rule' 'int ()'     | |-ImplicitCastExpr 0x150928520 <line:8:7> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x150928498 <col:7> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x150928538 <line:9:7> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1509284b8 <col:7> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1509285c8 <line:11:3, line:13:12> 'int'     | |-ImplicitCastExpr 0x1509285b0 <line:11:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150928550 <col:3> 'int ()' Function 0x150928278 'assert_true_rule' 'int ()'     | |-ImplicitCastExpr 0x1509285f8 <line:12:7> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x150928570 <col:7> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x150928610 <line:13:7> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x150928590 <col:7> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1509286a0 <line:15:3, line:17:12> 'int'     | |-ImplicitCastExpr 0x150928688 <line:15:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150928628 <col:3> 'int ()' Function 0x150928278 'assert_true_rule' 'int ()'     | |-ImplicitCastExpr 0x1509286d0 <line:16:7> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x150928648 <col:7> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x1509286e8 <line:17:7> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x150928668 <col:7> 'char[4]' lvalue \"STR\"     |-CallExpr 0x150928778 <line:19:3, line:21:12> 'int'     | |-ImplicitCastExpr 0x150928760 <line:19:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150928700 <col:3> 'int ()' Function 0x150928278 'assert_true_rule' 'int ()'     | |-ImplicitCastExpr 0x1509287a8 <line:20:7> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x150928720 <col:7> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x1509287c0 <line:21:7> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x150928740 <col:7> 'char[4]' lvalue \"STR\"     `-CallExpr 0x150941858 <line:23:3, line:25:12> 'int'       |-ImplicitCastExpr 0x150941840 <line:23:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1509287d8 <col:3> 'int ()' Function 0x150928278 'assert_true_rule' 'int ()'       |-ImplicitCastExpr 0x150941888 <line:24:7> 'char *' <ArrayToPointerDecay>       | `-StringLiteral 0x150941800 <col:7> 'char[4]' lvalue \"STR\"       `-ImplicitCastExpr 0x1509418a0 <line:25:7> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x150941820 <col:7> 'char[4]' lvalue \"STR\" ","19521":"`-FunctionDecl 0x1469281f8  line:1:19 referenced invalid get_latest_repeatable_unsubmitted_stream 'int *(int *)' static   |-ParmVarDecl 0x146928128 <col:60, col:69> col:69 invalid m 'int *'   `-CompoundStmt 0x1469286d0 <line:2:1, line:8:1>     |-CallExpr 0x1469285c0 <line:6:5, col:71> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146928440 <col:5> 'int ()' Function 0x146928388 'h2_ihash_iter' 'int ()'     | |-CXXDependentScopeMemberExpr 0x146928480 <col:19, col:22> '<dependent type>' contains-errors lvalue ->streams     | | `-RecoveryExpr 0x146928460 <col:19> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x146928568 <col:31> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1469285a8 <col:67, col:68> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x146928588 <col:68> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1469286c0 <line:7:5, col:16>       `-CXXDependentScopeMemberExpr 0x146928678 <col:12, col:16> '<dependent type>' contains-errors lvalue .stream         `-RecoveryExpr 0x146928658 <col:12> '<dependent type>' contains-errors lvalue ","19237":"`-FunctionDecl 0x13680ddc8  line:1:19 invalid gen8_noncanonical_addr 'int (int)' static inline   |-ParmVarDecl 0x13680dcf0 <col:42, col:46> col:46 invalid address 'int'   `-CompoundStmt 0x13680e118 <line:2:1, line:4:1>     `-ReturnStmt 0x13680e108 <line:3:2, col:55>       `-BinaryOperator 0x13680e0e8 <col:9, col:55> '<dependent type>' contains-errors '&'         |-RecoveryExpr 0x13680de78 <col:9> '<dependent type>' contains-errors lvalue         `-CallExpr 0x13680e0b8 <col:19, col:55> '<dependent type>' contains-errors           |-DeclRefExpr 0x13680dff0 <col:19> 'int ()' Function 0x13680df38 'GENMASK_ULL' 'int ()'           |-RecoveryExpr 0x13680e098 <col:31> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x13680e028 <col:54> 'int' 0 ","20178":"`-FunctionDecl 0x15c11f400  line:1:1 processPrimeResponse 'int (struct module_qstate *, int)'   |-ParmVarDecl 0x15c107048 <col:22, col:44> col:44 used qstate 'struct module_qstate *'   |-ParmVarDecl 0x15c1070c8 <col:52, col:56> col:56 used id 'int'   `-CompoundStmt 0x15c810190 <line:2:1, line:37:1>     |-DeclStmt 0x15c11f868 <line:3:2, col:65>     | |-RecordDecl 0x15c11f500 <col:2, col:9> col:9 struct iter_qstate     | `-VarDecl 0x15c11f668 <col:2, col:64> col:22 used iq 'struct iter_qstate *' cinit     |   `-CStyleCastExpr 0x15c11f828 <col:27, col:64> 'struct iter_qstate *' contains-errors <Dependent>     |     `-ArraySubscriptExpr 0x15c11f780 <col:48, col:64> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x15c11f750 <col:48, col:56> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x15c11f708 <col:48, col:56> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x15c11f6d0 <col:48> 'struct module_qstate *' lvalue ParmVar 0x15c107048 'qstate' 'struct module_qstate *'     |       `-ImplicitCastExpr 0x15c11f768 <col:62> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x15c11f730 <col:62> 'int' lvalue ParmVar 0x15c1070c8 'id' 'int'     |-DeclStmt 0x15c11fa18 <line:4:2, col:25>     | |-EnumDecl 0x15c11f880 <col:2, col:7> col:7 response_type     | `-VarDecl 0x15c11f998 <col:2, col:21> col:21 referenced invalid type 'enum response_type'     |-IfStmt 0x15c80b8d8 <line:9:2, line:17:2> has_else     | |-BinaryOperator 0x15c11ffa8 <line:9:5, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15c11ff30 <col:5> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15c11ff88 <col:13> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x15c120180 <col:35, line:12:2>     | | |-BinaryOperator 0x15c120080 <line:10:3, col:26> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x15c120000 <col:3, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x15c11ffc8 <col:3> 'struct module_qstate *' lvalue ParmVar 0x15c107048 'qstate' 'struct module_qstate *'     | | | `-RecoveryExpr 0x15c120060 <col:26> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x15c120160 <line:11:3, col:28> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x15c1200d8 <col:3, col:11> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x15c1200a0 <col:3> 'struct module_qstate *' lvalue ParmVar 0x15c107048 'qstate' 'struct module_qstate *'     | |   `-RecoveryExpr 0x15c120138 <col:24, col:28> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15c120100 <col:24> 'struct iter_qstate *' contains-errors lvalue Var 0x15c11f668 'iq' 'struct iter_qstate *'     | `-CompoundStmt 0x15c80b8b8 <line:12:9, line:17:2>     |   |-CallExpr 0x15c120368 <line:13:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x15c120350 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15c120280 <col:3> 'int ()' Function 0x15c1201c8 'errinf' 'int ()'     |   | |-ImplicitCastExpr 0x15c120398 <col:10> 'struct module_qstate *' <LValueToRValue>     |   | | `-DeclRefExpr 0x15c1202a0 <col:10> 'struct module_qstate *' lvalue ParmVar 0x15c107048 'qstate' 'struct module_qstate *'     |   | `-ImplicitCastExpr 0x15c1203b0 <col:18> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x15c120300 <col:18> 'char[4]' lvalue \"STR\"     |   `-CallExpr 0x15c80b7c0 <line:14:3, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15c80b6b8 <col:3> 'int ()' Function 0x15c80b600 'errinf_dname' 'int ()'     |     |-DeclRefExpr 0x15c80b6d8 <col:16> 'struct module_qstate *' lvalue ParmVar 0x15c107048 'qstate' 'struct module_qstate *'     |     |-StringLiteral 0x15c80b6f8 <col:24> 'char[4]' lvalue \"STR\"     |     `-CXXDependentScopeMemberExpr 0x15c80b778 <col:31, col:45> '<dependent type>' contains-errors lvalue .qname     |       `-RecoveryExpr 0x15c80b750 <col:31, col:39> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x15c80b718 <col:31> 'struct module_qstate *' lvalue ParmVar 0x15c107048 'qstate' 'struct module_qstate *'     |-IfStmt 0x15c810070 <line:20:2, line:32:2>     | |-CXXDependentScopeMemberExpr 0x15c80b9b0 <line:20:5, col:23> '<dependent type>' contains-errors lvalue ->harden_referral_path     | | `-CXXDependentScopeMemberExpr 0x15c80b968 <col:5, col:18> '<dependent type>' contains-errors lvalue ->cfg     | |   `-RecoveryExpr 0x15c80b940 <col:5, col:13> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15c80b908 <col:5> 'struct module_qstate *' lvalue ParmVar 0x15c107048 'qstate' 'struct module_qstate *'     | `-CompoundStmt 0x15c810048 <col:45, line:32:2>     |   |-DeclStmt 0x15c80baf0 <line:21:3, col:36>     |   | `-VarDecl 0x15c80ba88 <col:3, col:25> col:25 used subq 'struct module_qstate *'     |   |-IfStmt 0x15c80c428 <line:25:3, line:30:3>     |   | |-RecoveryExpr 0x15c80c2d8 <line:25:6, line:28:48> '_Bool' contains-errors     |   | `-CompoundStmt 0x15c80c418 <col:51, line:30:3>     |   `-CallExpr 0x15c80c5c0 <line:31:3, col:39> 'int' contains-errors     |     |-ImplicitCastExpr 0x15c80c5a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15c80c528 <col:3> 'int ()' Function 0x15c80c470 'generate_a_aaaa_check' 'int ()'     |     |-ImplicitCastExpr 0x15c810000 <col:25> 'struct module_qstate *' <LValueToRValue>     |     | `-DeclRefExpr 0x15c80c548 <col:25> 'struct module_qstate *' lvalue ParmVar 0x15c107048 'qstate' 'struct module_qstate *'     |     |-ImplicitCastExpr 0x15c810018 <col:33> 'struct iter_qstate *' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x15c80c568 <col:33> 'struct iter_qstate *' contains-errors lvalue Var 0x15c11f668 'iq' 'struct iter_qstate *'     |     `-ImplicitCastExpr 0x15c810030 <col:37> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x15c80c588 <col:37> 'int' lvalue ParmVar 0x15c1070c8 'id' 'int'     `-ReturnStmt 0x15c810180 <line:36:2, col:9>       `-IntegerLiteral 0x15c810160 <col:9> 'int' 0 ","19795":"`-FunctionDecl 0x13d128750  line:1:20 tg3_reset_task_schedule 'void (struct tg3 *)' static inline   |-ParmVarDecl 0x13d128648 <col:44, col:56> col:56 used tp 'struct tg3 *'   `-CompoundStmt 0x13d140e78 <line:2:1, line:5:1>     `-IfStmt 0x13d140e58 <line:3:2, line:4:32>       |-UnaryOperator 0x13d140ca0 <line:3:6, col:66> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x13d140c70 <col:7, col:66> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13d140b70 <col:7> 'int ()' Function 0x13d140ab8 'test_and_set_bit' 'int ()'       |   |-RecoveryExpr 0x13d140c50 <col:24> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x13d140be0 <col:53, col:57> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x13d140ba8 <col:53> 'struct tg3 *' lvalue ParmVar 0x13d128648 'tp' 'struct tg3 *'       `-CallExpr 0x13d140e30 <line:4:3, col:32> '<dependent type>' contains-errors         |-DeclRefExpr 0x13d140d98 <col:3> 'int ()' Function 0x13d140ce0 'schedule_work' 'int ()'         `-UnaryOperator 0x13d140e18 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x13d140df0 <col:18, col:22> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x13d140db8 <col:18> 'struct tg3 *' lvalue ParmVar 0x13d128648 'tp' 'struct tg3 *' ","20112":"`-FunctionDecl 0x14d00e038  line:1:1 invalid on_register_handler 'int (int *, int *, char *, char *, int)'   |-ParmVarDecl 0x14d00dd28 <col:21, col:50> col:50 invalid interface 'int *'   |-ParmVarDecl 0x14d00dda8 <line:2:7, col:30> col:30 invalid invocation 'int *'   |-ParmVarDecl 0x14d00de28 <line:3:7, col:14> col:14 used subtype 'char *'   |-ParmVarDecl 0x14d00dea8 <line:4:7, col:14> col:14 used cfg_desc 'char *'   |-ParmVarDecl 0x14d00df28 <line:5:7, col:16> col:16 invalid user_data 'int'   `-CompoundStmt 0x14c922e78 <line:6:1, line:33:1>     |-DeclStmt 0x14d00e2f8 <line:7:2, col:31>     | |-RecordDecl 0x14d00e108 <col:2, col:9> col:9 struct tcmur_handler     | `-VarDecl 0x14d00e278 <col:2, col:24> col:24 used handler 'struct tcmur_handler *'     |-DeclStmt 0x14d027508 <line:8:2, col:24>     | |-RecordDecl 0x14d00e310 <col:2, col:9> col:9 struct dbus_info     | `-VarDecl 0x14d027488 <col:2, col:20> col:20 used info 'struct dbus_info *'     |-DeclStmt 0x14d0275a0 <line:9:2, col:16>     | `-VarDecl 0x14d027538 <col:2, col:8> col:8 used bus_name 'char *'     |-BinaryOperator 0x14d027cb0 <line:11:2, line:12:15> 'char *' '='     | |-DeclRefExpr 0x14d0275b8 <line:11:2> 'char *' lvalue Var 0x14d027538 'bus_name' 'char *'     | `-ImplicitCastExpr 0x14d027878 <col:13, line:12:15> 'char *' <IntegralToPointer>     |   `-CallExpr 0x14d027818 <line:11:13, line:12:15> 'int'     |     |-ImplicitCastExpr 0x14d027800 <line:11:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14d027730 <col:13> 'int ()' Function 0x14d027678 'g_strdup_printf' 'int ()'     |     |-ImplicitCastExpr 0x14d027848 <col:29> 'char *' <ArrayToPointerDecay>     |     | `-StringLiteral 0x14d027790 <col:29> 'char[4]' lvalue \"STR\"     |     `-ImplicitCastExpr 0x14d027860 <line:12:8> 'char *' <LValueToRValue>     |       `-DeclRefExpr 0x14d0277b0 <col:8> 'char *' lvalue ParmVar 0x14d00de28 'subtype' 'char *'     |-BinaryOperator 0x14d027fe8 <line:15:2, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d027e48 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d027e10 <col:2> 'struct tcmur_handler *' lvalue Var 0x14d00e278 'handler' 'struct tcmur_handler *'     | `-CallExpr 0x14d027fa8 <col:26, col:42> 'int'     |   |-ImplicitCastExpr 0x14d027f90 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d027f50 <col:26> 'int ()' Function 0x14d027e98 'g_strdup' 'int ()'     |   `-ImplicitCastExpr 0x14d027fd0 <col:35> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x14d027f70 <col:35> 'char *' lvalue ParmVar 0x14d00de28 'subtype' 'char *'     |-BinaryOperator 0x14d028100 <line:16:2, col:43> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d028040 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d028008 <col:2> 'struct tcmur_handler *' lvalue Var 0x14d00e278 'handler' 'struct tcmur_handler *'     | `-CallExpr 0x14d0280c0 <col:26, col:43> 'int'     |   |-ImplicitCastExpr 0x14d0280a8 <col:26> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d028068 <col:26> 'int ()' Function 0x14d027e98 'g_strdup' 'int ()'     |   `-ImplicitCastExpr 0x14d0280e8 <col:35> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x14d028088 <col:35> 'char *' lvalue ParmVar 0x14d00dea8 'cfg_desc' 'char *'     |-BinaryOperator 0x14d0281d8 <line:17:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d028158 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d028120 <col:2> 'struct tcmur_handler *' lvalue Var 0x14d00e278 'handler' 'struct tcmur_handler *'     | `-RecoveryExpr 0x14d0281b8 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d0282b0 <line:18:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d028230 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d0281f8 <col:2> 'struct tcmur_handler *' lvalue Var 0x14d00e278 'handler' 'struct tcmur_handler *'     | `-RecoveryExpr 0x14d028290 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d028388 <line:19:2, col:26> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d028308 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d0282d0 <col:2> 'struct tcmur_handler *' lvalue Var 0x14d00e278 'handler' 'struct tcmur_handler *'     | `-RecoveryExpr 0x14d028368 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14c922aa0 <line:22:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c922a58 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c922a20 <col:2> 'struct dbus_info *' lvalue Var 0x14d027488 'info' 'struct dbus_info *'     | `-RecoveryExpr 0x14c922a80 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c922d98 <line:30:2, col:17> 'int'     | |-ImplicitCastExpr 0x14c922d80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c922d40 <col:2> 'int ()' Function 0x14c922c88 'g_free' 'int ()'     | `-ImplicitCastExpr 0x14c922dc0 <col:9> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x14c922d60 <col:9> 'char *' lvalue Var 0x14d027538 'bus_name' 'char *'     `-BinaryOperator 0x14c922e58 <line:31:2, col:20> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x14c922e10 <col:2, col:11> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14c922dd8 <col:2> 'struct tcmur_handler *' lvalue Var 0x14d00e278 'handler' 'struct tcmur_handler *'       `-DeclRefExpr 0x14c922e38 <col:20> 'struct dbus_info *' lvalue Var 0x14d027488 'info' 'struct dbus_info *' ","19307":"`-FunctionDecl 0x13700e0b0  line:1:8 invalid calloc 'void *(int, int)'   |-ParmVarDecl 0x13700dcf0 <col:15, col:22> col:22 invalid n 'int'   |-ParmVarDecl 0x13700dd70 <col:25, col:32> col:32 invalid lb 'int'   `-CompoundStmt 0x1369273d0 <line:2:1, line:27:1>     |-IfStmt 0x13700e308 <line:3:5, line:4:14>     | |-BinaryOperator 0x13700e2a0 <line:3:9, col:33> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x13700e168 <col:9> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13700e280 <col:15, col:33> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x13700e188 <col:15> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x13700e260 <col:19, col:33> '<dependent type>' contains-errors '\/'     | |     |-RecoveryExpr 0x13700e240 <col:19> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x13700e1c0 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13700e2f8 <line:4:7, col:14>     |   `-RecoveryExpr 0x13700e2d8 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1369273c0 <line:26:5, col:41>       `-ParenExpr 0x1369273a0 <col:11, col:41> 'void *' contains-errors         `-CStyleCastExpr 0x136927378 <col:12, col:40> 'void *' contains-errors <Dependent>           `-CallExpr 0x136927338 <col:20, col:40> '<dependent type>' contains-errors             |-DeclRefExpr 0x1369272b8 <col:20> 'int ()' Function 0x136927200 'REDIRECT_MALLOC' 'int ()'             `-BinaryOperator 0x136927318 <col:36, col:38> '<dependent type>' contains-errors '*'               |-RecoveryExpr 0x1369272d8 <col:36> '<dependent type>' contains-errors lvalue               `-RecoveryExpr 0x1369272f8 <col:38> '<dependent type>' contains-errors lvalue ","19176":"`-FunctionDecl 0x1531283a8  line:2:21 invalid Create_Surface_Blended 'int *(int, int, int, int *)' static   |-ParmVarDecl 0x1531280f0 <col:44, col:48> col:48 used width 'int'   |-ParmVarDecl 0x153128170 <col:55, col:59> col:59 used height 'int'   |-ParmVarDecl 0x1531281f0 <col:67, col:77> col:77 invalid fg 'int'   |-ParmVarDecl 0x1531282a8 <col:81, col:89> col:89 referenced invalid color 'int *'   `-CompoundStmt 0x153144150 <line:3:1, line:57:20>     |-DeclStmt 0x153128718 <line:4:5, col:47>     | `-VarDecl 0x153128488 <col:5, col:46> col:15 used alignment 'const int' cinit     |   `-BinaryOperator 0x1531286f8 <col:27, col:46> 'int' '-'     |     |-CallExpr 0x1531286b8 <col:27, col:42> 'int'     |     | `-ImplicitCastExpr 0x1531286a0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |     |   `-DeclRefExpr 0x153128650 <col:27> 'int ()' Function 0x153128598 'Get_Alignement' 'int ()'     |     `-IntegerLiteral 0x1531286d8 <col:46> 'int' 1     |-BinaryOperator 0x153141a18 <line:9:5, col:47> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x153128780 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153128760 <col:5> 'int *' lvalue ParmVar 0x1531282a8 'color' 'int *'     | `-BinaryOperator 0x1531419f8 <col:15, col:47> '<dependent type>' contains-errors '|'     |   |-BinaryOperator 0x153141970 <col:15, col:40> '<dependent type>' contains-errors '|'     |   | |-ParenExpr 0x153141888 <col:15, col:26> '<dependent type>' contains-errors     |   | | `-BinaryOperator 0x153141868 <col:16, col:24> '<dependent type>' contains-errors '<<'     |   | |   |-CXXDependentScopeMemberExpr 0x153141800 <col:16, col:19> '<dependent type>' contains-errors lvalue .r     |   | |   | `-RecoveryExpr 0x1531287a8 <col:16> '<dependent type>' contains-errors lvalue     |   | |   `-IntegerLiteral 0x153141848 <col:24> 'int' 16     |   | `-ParenExpr 0x153141950 <col:30, col:40> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x153141930 <col:31, col:39> '<dependent type>' contains-errors '<<'     |   |     |-CXXDependentScopeMemberExpr 0x1531418c8 <col:31, col:34> '<dependent type>' contains-errors lvalue .g     |   |     | `-RecoveryExpr 0x1531418a8 <col:31> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x153141910 <col:39> 'int' 8     |   `-CXXDependentScopeMemberExpr 0x1531419b0 <col:44, col:47> '<dependent type>' contains-errors lvalue .b     |     `-RecoveryExpr 0x153141990 <col:44> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x153141c68 <line:12:5, col:35> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x153141c10 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x153141bf8 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x153141a38 <col:6> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x153141c48 <col:14, col:35> '<dependent type>' contains-errors '|'     |   |-RecoveryExpr 0x153141c28 <col:14> '<dependent type>' contains-errors lvalue     |   `-ParenExpr 0x153141b48 <col:24, col:35> '<dependent type>' contains-errors     |     `-BinaryOperator 0x153141b28 <col:25, col:33> '<dependent type>' contains-errors '<<'     |       |-CXXDependentScopeMemberExpr 0x153141ac0 <col:25, col:28> '<dependent type>' contains-errors lvalue .a     |       | `-RecoveryExpr 0x153141aa0 <col:25> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x153141b08 <col:33> 'int' 24     `-IfStmt 0x153144130 <line:15:5, line:55:5>       |-BinaryOperator 0x153141ce0 <line:15:9, col:18> 'int' '!='       | |-ImplicitCastExpr 0x153141cc8 <col:9> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x153141c88 <col:9> 'int' lvalue ParmVar 0x1531280f0 'width' 'int'       | `-IntegerLiteral 0x153141ca8 <col:18> 'int' 0       `-CompoundStmt 0x1531440f0 <col:21, line:55:5>         |-DeclStmt 0x153141e18 <line:18:9, col:27>         | |-VarDecl 0x153141d18 <col:9, col:15> col:15 used pixels 'void *'         | `-VarDecl 0x153141d98 <col:9, col:24> col:24 used ptr 'void *'         |-IfStmt 0x153142070 <line:24:9, line:27:9>         | |-BinaryOperator 0x153142040 <line:24:13, col:32> 'int' contains-errors '||'         | | |-BinaryOperator 0x153141fc0 <col:13, col:20> 'int' contains-errors '<'         | | | |-RecoveryExpr 0x153141fa0 <col:13> '<dependent type>' contains-errors lvalue         | | | `-IntegerLiteral 0x153141ef0 <col:20> 'int' 0         | | `-BinaryOperator 0x153142020 <col:25, col:32> 'int' contains-errors '>'         | |   |-RecoveryExpr 0x153141fe0 <col:25> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x153142000 <col:32> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x153142060 <col:48, line:27:9>         |-IfStmt 0x153142200 <line:30:9, line:32:9>         | |-RecoveryExpr 0x1531421d0 <line:30:13, col:20> '_Bool' contains-errors         | `-CompoundStmt 0x1531421f0 <col:26, line:32:9>         |-BinaryOperator 0x1531423e8 <line:36:9, col:33> 'void *' '='         | |-ArraySubscriptExpr 0x153142390 <col:9, col:29> 'void *' lvalue         | | |-ParenExpr 0x153142338 <col:9, col:25> 'void **'         | | | `-CStyleCastExpr 0x153142310 <col:10, col:19> 'void **' <BitCast>         | | |   `-ImplicitCastExpr 0x1531422f8 <col:19> 'void *' <LValueToRValue> part_of_explicit_cast         | | |     `-DeclRefExpr 0x153142290 <col:19> 'void *' lvalue Var 0x153141d18 'pixels' 'void *'         | | `-UnaryOperator 0x153142378 <col:27, col:28> 'int' prefix '-'         | |   `-IntegerLiteral 0x153142358 <col:28> 'int' 1         | `-ImplicitCastExpr 0x1531423d0 <col:33> 'void *' <LValueToRValue>         |   `-DeclRefExpr 0x1531423b0 <col:33> 'void *' lvalue Var 0x153141d98 'ptr' 'void *'         |-IfStmt 0x153142738 <line:39:9, line:42:9>         | |-RecoveryExpr 0x153142588 <line:39:13, col:24> '_Bool' contains-errors         | `-CompoundStmt 0x153142720 <col:30, line:42:9>         |   `-CallExpr 0x1531426e0 <line:40:13, col:25> 'int'         |     |-ImplicitCastExpr 0x1531426c8 <col:13> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x153142688 <col:13> 'int ()' Function 0x1531425d0 'SDL_free' 'int ()'         |     `-ImplicitCastExpr 0x153142708 <col:22> 'void *' <LValueToRValue>         |       `-DeclRefExpr 0x1531426a8 <col:22> 'void *' lvalue Var 0x153141d98 'ptr' 'void *'         `-IfStmt 0x1531440d0 <line:52:9, line:54:9>           |-RecoveryExpr 0x153143fa0 <line:52:13, col:21> '_Bool' contains-errors           `-CompoundStmt 0x1531440c0 <col:39, line:54:9> ","19387":"`-FunctionDecl 0x12900df18  line:1:26 invalid Huffman2DEncodeImage 'int (const int *, int *, int *)' static   |-ParmVarDecl 0x12900dcf0 <col:47, col:64> col:64 referenced invalid image_info 'const int *'   |-ParmVarDecl 0x12900dda8 <line:2:3, col:10> col:10 referenced invalid image 'int *'   |-ParmVarDecl 0x12900de28 <col:16, col:23> col:23 invalid inject_image 'int *'   `-CompoundStmt 0x12a009be8 <line:3:1, line:36:1>     |-BinaryOperator 0x12900e078 <line:4:3, line:5:6> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x12900dff8 <line:4:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12900dfd8 <col:3> 'int *' lvalue ParmVar 0x12900dda8 'image' 'int *'     | `-RecoveryExpr 0x12900e058 <line:5:6> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12900e158 <line:7:3, line:8:6> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x12900e0b8 <line:7:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12900e098 <col:3> 'const int *' lvalue ParmVar 0x12900dcf0 'image_info' 'const int *'     | `-RecoveryExpr 0x12900e138 <line:8:6> '<dependent type>' contains-errors lvalue     |-UnaryExprOrTypeTraitExpr 0x12900e1d0 <line:13:3, line:14:5> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x12900e1b0 <col:5> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12900e2a0 <line:16:3, line:17:12>     | `-VarDecl 0x12900e238 <line:16:3, line:17:6> col:6 used group4 'unsigned char *'     `-BinaryOperator 0x12a009bc8 <line:34:3, col:57> 'unsigned char *' '='       |-DeclRefExpr 0x12a0099c0 <col:3> 'unsigned char *' lvalue Var 0x12900e238 'group4' 'unsigned char *'       `-CStyleCastExpr 0x12a009ba0 <col:10, col:57> 'unsigned char *' <IntegralToPointer>         `-CallExpr 0x12a009b48 <col:28, col:57> 'int'           |-ImplicitCastExpr 0x12a009b30 <col:28> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x12a009ac0 <col:28> 'int ()' Function 0x12a009a08 'RelinquishMagickMemory' 'int ()'           `-ImplicitCastExpr 0x12a009b70 <col:51> 'unsigned char *' <LValueToRValue>             `-DeclRefExpr 0x12a009ae0 <col:51> 'unsigned char *' lvalue Var 0x12900e238 'group4' 'unsigned char *' ","19586":"`-FunctionDecl 0x14511b1a8  line:1:1 invalid virSecuritySELinuxRestoreImageLabel 'int (int *, int *, int *, int)'   |-ParmVarDecl 0x14511af28 <col:37, col:57> col:57 invalid mgr 'int *'   |-ParmVarDecl 0x14511afa8 <line:2:37, col:51> col:51 invalid def 'int *'   |-ParmVarDecl 0x14511b028 <line:3:37, col:55> col:55 invalid src 'int *'   |-ParmVarDecl 0x14511b0a8 <line:4:37, col:70> col:70 invalid flags 'int'   `-CompoundStmt 0x14511b518 <line:5:1, line:7:1>     `-ReturnStmt 0x14511b508 <line:6:5, col:71>       `-CallExpr 0x14511b4c8 <col:12, col:71> '<dependent type>' contains-errors         |-DeclRefExpr 0x14511b3d0 <col:12> 'int ()' Function 0x14511b318 'virSecuritySELinuxRestoreImageLabelInt' 'int ()'         |-RecoveryExpr 0x14511b3f0 <col:51> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x14511b410 <col:56> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x14511b430 <col:61> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14511b4a8 <col:66> '<dependent type>' contains-errors lvalue ","20153":"`-FunctionDecl 0x13b940bb0  col:15 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x13b940cb0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13b940c58 <<invalid sloc>> Implicit 902 ","19309":"`-FunctionDecl 0x126828928  col:3 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x126828a28 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x126828a90 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x126828af8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1268289d0 <<invalid sloc>> Implicit 969 ","19246":"`-FunctionDecl 0x14f00ddf8  line:1:12 invalid FLAC__bitreader_clear 'int (int *)'   |-ParmVarDecl 0x14f00dd28 <col:34, col:51> col:51 referenced invalid br 'int *'   `-CompoundStmt 0x14f00e1a0 <line:2:1, line:6:1>     |-BinaryOperator 0x14f00dfe0 <line:3:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14f00def0 <col:2, col:6> '<dependent type>' contains-errors lvalue ->words     | | `-RecoveryExpr 0x14f00dec8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14f00dea8 <col:2> 'int *' lvalue ParmVar 0x14f00dd28 'br' 'int *'     | `-BinaryOperator 0x14f00dfc0 <col:14, col:26> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x14f00df58 <col:14, col:18> '<dependent type>' contains-errors lvalue ->bytes     |   | `-RecoveryExpr 0x14f00df38 <col:14> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14f00dfa0 <col:26> 'int' 0     |-BinaryOperator 0x14f00e138 <line:4:2, col:43> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14f00e048 <col:2, col:6> '<dependent type>' contains-errors lvalue ->consumed_words     | | `-RecoveryExpr 0x14f00e020 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14f00e000 <col:2> 'int *' lvalue ParmVar 0x14f00dd28 'br' 'int *'     | `-BinaryOperator 0x14f00e118 <col:23, col:43> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x14f00e0b0 <col:23, col:27> '<dependent type>' contains-errors lvalue ->consumed_bits     |   | `-RecoveryExpr 0x14f00e090 <col:23> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14f00e0f8 <col:43> 'int' 0     `-ReturnStmt 0x14f00e190 <line:5:2, col:9>       `-RecoveryExpr 0x14f00e170 <col:9> '<dependent type>' contains-errors lvalue ","19829":"`-FunctionDecl 0x13c128318  line:1:1 invalid date_s_iso8601 'int (int, int *, int)'   |-ParmVarDecl 0x13c1280d8 <col:16, col:20> col:20 used argc 'int'   |-ParmVarDecl 0x13c1281a8 <col:26, col:33> col:33 invalid argv 'int *'   |-ParmVarDecl 0x13c128228 <col:39, col:45> col:45 invalid klass 'int'   `-CompoundStmt 0x13c8087d0 <line:2:1, line:18:1>     |-CallExpr 0x13c128708 <line:5:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c128530 <col:5> 'int ()' Function 0x13c128478 'rb_scan_args' 'int ()'     | |-DeclRefExpr 0x13c128550 <col:18> 'int' lvalue ParmVar 0x13c1280d8 'argc' 'int'     | |-RecoveryExpr 0x13c128570 <col:24> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x13c1285d0 <col:30> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x13c1286b8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13c128698 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13c1286f0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13c1286d0 <col:44> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x13c128788 <line:7:5, line:12:5>     | |-ImplicitCastExpr 0x13c128770 <line:7:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13c128750 <col:13> 'int' lvalue ParmVar 0x13c1280d8 'argc' 'int'     | `-CompoundStmt 0x13c808588 <col:19, line:12:5>     |   |-CaseStmt 0x13c808200 <line:8:7, <invalid sloc>>     |   | |-ConstantExpr 0x13c1287d0 <col:12> 'int'     |   | | `-IntegerLiteral 0x13c1287b0 <col:12> 'int' 0     |   | `-NullStmt 0x13c8083d8 <<invalid sloc>>     |   `-CaseStmt 0x13c808418 <line:10:7, <invalid sloc>>     |     |-ConstantExpr 0x13c808400 <col:12> 'int'     |     | `-IntegerLiteral 0x13c8083e0 <col:12> 'int' 1     |     `-NullStmt 0x13c808580 <<invalid sloc>>     `-CompoundStmt 0x13c8087b8 <line:14:5, line:17:5>       `-ReturnStmt 0x13c8087a8 <line:16:2, col:39>         `-CallExpr 0x13c808770 <col:9, col:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x13c808688 <col:9> 'int ()' Function 0x13c8085d0 'd_new_by_frags' 'int ()'           |-RecoveryExpr 0x13c8086a8 <col:24> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x13c808730 <col:31> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x13c808750 <col:37> '<dependent type>' contains-errors lvalue ","19715":"`-FunctionDecl 0x149008ff8  line:1:9 invalid get_copy 'int *(int *)'   |-ParmVarDecl 0x149008f28 <col:18, col:23> col:23 referenced invalid thd 'int *'   `-CompoundStmt 0x149009170 <line:2:3, col:58> ","19707":"`-FunctionDecl 0x1530274d0  line:1:13 invalid touch_pmd 'void (struct vm_area_struct *, unsigned long, int *)' static   |-ParmVarDecl 0x15300e248 <col:23, col:46> col:46 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x15300e2c8 <col:51, col:65> col:65 used addr 'unsigned long'   |-ParmVarDecl 0x15300e398 <line:2:3, col:10> col:10 referenced invalid pmd 'int *'   `-CompoundStmt 0x153027d88 <line:3:1, line:11:1>     |-BinaryOperator 0x1530278f0 <line:7:2, col:38> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1530275b0 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153027590 <col:2> 'int *' lvalue ParmVar 0x15300e398 'pmd' 'int *'     | `-CallExpr 0x1530278c8 <col:9, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x153027730 <col:9> 'int ()' Function 0x153027678 'pmd_mkyoung' 'int ()'     |   `-CallExpr 0x1530278a0 <col:21, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x153027830 <col:21> 'int ()' Function 0x153027778 'pmd_mkdirty' 'int ()'     |     `-UnaryOperator 0x153027888 <col:33, col:34> '<dependent type>' contains-errors prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x153027870 <col:34> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x153027850 <col:34> '<dependent type>' contains-errors lvalue     `-IfStmt 0x153027d68 <line:8:2, line:10:38>       |-CallExpr 0x153027b88 <line:8:6, line:9:18> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1530279f0 <line:8:6> 'int ()' Function 0x153027938 'pmdp_set_access_flags' 'int ()'       | |-DeclRefExpr 0x153027a10 <col:28> 'struct vm_area_struct *' lvalue ParmVar 0x15300e248 'vma' 'struct vm_area_struct *'       | |-BinaryOperator 0x153027b48 <col:33, col:40> '<dependent type>' contains-errors '&'       | | |-DeclRefExpr 0x153027a30 <col:33> 'unsigned long' lvalue ParmVar 0x15300e2c8 'addr' 'unsigned long'       | | `-RecoveryExpr 0x153027b28 <col:40> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x153027a88 <line:9:5> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x153027b68 <col:10> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x153027ac0 <col:17> 'int' 1       `-CallExpr 0x153027d30 <line:10:3, col:38> '<dependent type>' contains-errors         |-DeclRefExpr 0x153027cb0 <col:3> 'int ()' Function 0x153027bf8 'update_mmu_cache_pmd' 'int ()'         |-DeclRefExpr 0x153027cd0 <col:24> 'struct vm_area_struct *' lvalue ParmVar 0x15300e248 'vma' 'struct vm_area_struct *'         |-DeclRefExpr 0x153027cf0 <col:29> 'unsigned long' lvalue ParmVar 0x15300e2c8 'addr' 'unsigned long'         `-RecoveryExpr 0x153027d10 <col:35> '<dependent type>' contains-errors lvalue ","19260":"`-FunctionDecl 0x153141800  line:1:13 invalid snd_pcm_undo_start 'void (struct snd_pcm_substream *, int)' static   |-ParmVarDecl 0x153128648 <col:32, col:58> col:58 used substream 'struct snd_pcm_substream *'   |-ParmVarDecl 0x1531286e0 <line:2:11, col:27> col:27 invalid state 'int'   `-CompoundStmt 0x153141b20 <line:3:1, line:6:1>     `-IfStmt 0x153141b00 <line:4:2, line:5:60>       |-BinaryOperator 0x153141980 <line:4:6, col:44> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x153141918 <col:6, col:26> '<dependent type>' contains-errors lvalue ->trigger_master       | | `-RecoveryExpr 0x1531418f0 <col:6, col:17> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x1531418b8 <col:6> 'struct snd_pcm_substream *' lvalue ParmVar 0x153128648 'substream' 'struct snd_pcm_substream *'       | `-DeclRefExpr 0x153141960 <col:44> 'struct snd_pcm_substream *' lvalue ParmVar 0x153128648 'substream' 'struct snd_pcm_substream *'       `-CallExpr 0x153141ad0 <line:5:3, col:60> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x153141a00 <col:3, col:19> '<dependent type>' contains-errors lvalue ->trigger         | `-RecoveryExpr 0x1531419d8 <col:3, col:14> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1531419a0 <col:3> 'struct snd_pcm_substream *' lvalue ParmVar 0x153128648 'substream' 'struct snd_pcm_substream *'         |-DeclRefExpr 0x153141a48 <col:27> 'struct snd_pcm_substream *' lvalue ParmVar 0x153128648 'substream' 'struct snd_pcm_substream *'         `-RecoveryExpr 0x153141ab0 <col:38> '<dependent type>' contains-errors lvalue ","19426":"`-FunctionDecl 0x1369281f8  line:1:5 invalid lua_resetthread 'int (int *)'   |-ParmVarDecl 0x136928128 <col:22, col:33> col:33 referenced invalid L 'int *'   `-CompoundStmt 0x1369424c0 <col:36, line:20:1>     |-DeclStmt 0x136928340 <line:3:3, col:13>     | `-VarDecl 0x1369282d8 <col:3, col:7> col:7 used status 'int'     |-CallExpr 0x1369284f0 <line:4:3, col:13> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1369284b0 <col:3> 'int ()' Function 0x1369283f8 'lua_lock' 'int ()'     | `-RecoveryExpr 0x1369284d0 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1369286c0 <line:5:3, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x136928560 <col:3, col:6> '<dependent type>' contains-errors lvalue ->ci     | | `-RecoveryExpr 0x136928538 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136928518 <col:3> 'int *' lvalue ParmVar 0x136928128 'L' 'int *'     | `-BinaryOperator 0x1369286a0 <col:11, col:20> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x136928680 <col:11> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x136928628 <col:16, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x1369285e0 <col:17, col:20> '<dependent type>' contains-errors lvalue ->base_ci     |       `-RecoveryExpr 0x1369285c0 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x136941990 <line:6:3, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1369287c0 <col:3> 'int ()' Function 0x136928708 'setnilvalue' 'int ()'     | `-CallExpr 0x136941968 <col:15, col:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1369418e0 <col:15> 'int ()' Function 0x136941828 's2v' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x136941920 <col:19, col:22> '<dependent type>' contains-errors lvalue ->stack     |     `-RecoveryExpr 0x136941900 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x136941ca8 <line:9:3, col:48> 'int' contains-errors '='     | |-DeclRefExpr 0x136941a38 <col:3> 'int' lvalue Var 0x1369282d8 'status' 'int'     | `-CallExpr 0x136941c70 <col:12, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136941b38 <col:12> 'int ()' Function 0x136941a80 'luaF_close' 'int ()'     |   |-RecoveryExpr 0x136941b58 <col:23> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x136941b98 <col:26, col:29> '<dependent type>' contains-errors lvalue ->stack     |   | `-RecoveryExpr 0x136941b78 <col:26> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x136941c50 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136942190 <line:10:3, line:15:3> has_else     | |-BinaryOperator 0x136941d40 <line:10:7, col:17> 'int' contains-errors '!='     | | |-DeclRefExpr 0x136941cc8 <col:7> 'int' lvalue Var 0x1369282d8 'status' 'int'     | | `-RecoveryExpr 0x136941d20 <col:17> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x136941f48 <line:11:5, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x136941e40 <col:5> 'int ()' Function 0x136941d88 'luaD_seterrorobj' 'int ()'     | | |-RecoveryExpr 0x136941e60 <col:22> '<dependent type>' contains-errors lvalue     | | |-DeclRefExpr 0x136941e80 <col:25> 'int' lvalue Var 0x1369282d8 'status' 'int'     | | `-BinaryOperator 0x136941f28 <col:33, col:44> '<dependent type>' contains-errors '+'     | |   |-CXXDependentScopeMemberExpr 0x136941ec0 <col:33, col:36> '<dependent type>' contains-errors lvalue ->stack     | |   | `-RecoveryExpr 0x136941ea0 <col:33> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x136941f08 <col:44> 'int' 1     | `-CompoundStmt 0x136942170 <line:12:8, line:15:3>     |   |-BinaryOperator 0x136941ff8 <line:13:5, col:14> 'int' contains-errors '='     |   | |-DeclRefExpr 0x136941f80 <col:5> 'int' lvalue Var 0x1369282d8 'status' 'int'     |   | `-RecoveryExpr 0x136941fd8 <col:14> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x136942150 <line:14:5, col:25> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x136942060 <col:5, col:8> '<dependent type>' contains-errors lvalue ->top     |     | `-RecoveryExpr 0x136942038 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x136942018 <col:5> 'int *' lvalue ParmVar 0x136928128 'L' 'int *'     |     `-BinaryOperator 0x136942130 <col:14, col:25> '<dependent type>' contains-errors '+'     |       |-CXXDependentScopeMemberExpr 0x1369420c8 <col:14, col:17> '<dependent type>' contains-errors lvalue ->stack     |       | `-RecoveryExpr 0x1369420a8 <col:14> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x136942110 <col:25> 'int' 1     |-BinaryOperator 0x136942310 <line:17:3, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1369422a8 <col:3, col:6> '<dependent type>' contains-errors lvalue ->status     | | `-RecoveryExpr 0x136942280 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x136942260 <col:3> 'int *' lvalue ParmVar 0x136928128 'L' 'int *'     | `-DeclRefExpr 0x1369422f0 <col:15> 'int' lvalue Var 0x1369282d8 'status' 'int'     |-CallExpr 0x136942450 <line:18:3, col:15> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136942410 <col:3> 'int ()' Function 0x136942358 'lua_unlock' 'int ()'     | `-RecoveryExpr 0x136942430 <col:14> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1369424b0 <line:19:3, col:10>       `-ImplicitCastExpr 0x136942498 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x136942478 <col:10> 'int' lvalue Var 0x1369282d8 'status' 'int' ","19203":"`-FunctionDecl 0x1460269e8  line:1:12 invalid reencrypt_recovery 'int (struct crypt_device *, struct luks2_hdr *, int, struct volume_key *)' static   |-ParmVarDecl 0x14600e248 <col:31, col:52> col:52 used cd 'struct crypt_device *'   |-ParmVarDecl 0x146026628 <line:2:3, col:21> col:21 used hdr 'struct luks2_hdr *'   |-ParmVarDecl 0x1460266c0 <line:3:3, col:12> col:12 invalid device_size 'int'   |-ParmVarDecl 0x146026898 <line:4:3, col:22> col:22 used vks 'struct volume_key *'   `-CompoundStmt 0x14602a898 <line:5:1, line:35:1>     |-DeclStmt 0x146026b30 <line:6:2, col:7>     | `-VarDecl 0x146026ac8 <col:2, col:6> col:6 used r 'int'     |-DeclStmt 0x146026d70 <line:7:2, col:35>     | |-RecordDecl 0x146026b48 <col:2, col:9> col:9 struct luks2_reencrypt     | `-VarDecl 0x146026cb8 <col:2, col:31> col:26 used rh 'struct luks2_reencrypt *' cinit     |   `-RecoveryExpr 0x146026d38 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146027108 <line:9:2, col:52> 'int' contains-errors '='     | |-DeclRefExpr 0x146026d88 <col:2> 'int' lvalue Var 0x146026ac8 'r' 'int'     | `-CallExpr 0x1460270c0 <col:6, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146026f00 <col:6> 'int ()' Function 0x146026e48 'reencrypt_load' 'int ()'     |   |-DeclRefExpr 0x146026f20 <col:21> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     |   |-DeclRefExpr 0x146026f40 <col:25> 'struct luks2_hdr *' lvalue ParmVar 0x146026628 'hdr' 'struct luks2_hdr *'     |   |-RecoveryExpr 0x146026f60 <col:30> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1460270a0 <col:43> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x146027020 <col:49, col:50> 'struct luks2_reencrypt **' contains-errors prefix '&' cannot overflow     |     `-DeclRefExpr 0x146026f98 <col:50> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x146026cb8 'rh' 'struct luks2_reencrypt *'     |-IfStmt 0x146027570 <line:10:2, line:13:2>     | |-BinaryOperator 0x146027180 <line:10:6, col:10> 'int' '<'     | | |-ImplicitCastExpr 0x146027168 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146027128 <col:6> 'int' lvalue Var 0x146026ac8 'r' 'int'     | | `-IntegerLiteral 0x146027148 <col:10> 'int' 0     | `-CompoundStmt 0x146027550 <col:13, line:13:2>     |   |-CallExpr 0x1460274c0 <line:11:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x1460274a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x146027280 <col:3> 'int ()' Function 0x1460271c8 'log_err' 'int ()'     |   | |-ImplicitCastExpr 0x1460274f0 <col:11> 'struct crypt_device *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1460272a0 <col:11> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     |   | `-CallExpr 0x146027468 <col:15, col:22> 'int'     |   |   |-ImplicitCastExpr 0x146027450 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1460273a0 <col:15> 'int ()' Function 0x1460272e8 '_' 'int ()'     |   |   `-ImplicitCastExpr 0x146027490 <col:17> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x146027400 <col:17> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x146027540 <line:12:3, col:10>     |     `-ImplicitCastExpr 0x146027528 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x146027508 <col:10> 'int' lvalue Var 0x146026ac8 'r' 'int'     |-BinaryOperator 0x146029a10 <line:15:2, col:48> 'int' contains-errors '='     | |-DeclRefExpr 0x146027590 <col:2> 'int' lvalue Var 0x146026ac8 'r' 'int'     | `-CallExpr 0x146029970 <col:6, col:48> 'int' contains-errors     |   |-ImplicitCastExpr 0x146029958 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1460298b8 <col:6> 'int ()' Function 0x146029800 'reencrypt_recover_segment' 'int ()'     |   |-ImplicitCastExpr 0x1460299b0 <col:32> 'struct crypt_device *' <LValueToRValue>     |   | `-DeclRefExpr 0x1460298d8 <col:32> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     |   |-ImplicitCastExpr 0x1460299c8 <col:36> 'struct luks2_hdr *' <LValueToRValue>     |   | `-DeclRefExpr 0x1460298f8 <col:36> 'struct luks2_hdr *' lvalue ParmVar 0x146026628 'hdr' 'struct luks2_hdr *'     |   |-ImplicitCastExpr 0x1460299e0 <col:41> 'struct luks2_reencrypt *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x146029918 <col:41> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x146026cb8 'rh' 'struct luks2_reencrypt *'     |   `-ImplicitCastExpr 0x1460299f8 <col:45> 'struct volume_key *' <LValueToRValue>     |     `-DeclRefExpr 0x146029938 <col:45> 'struct volume_key *' lvalue ParmVar 0x146026898 'vks' 'struct volume_key *'     |-IfStmt 0x146029b10 <line:16:2, line:17:8>     | |-BinaryOperator 0x146029a88 <line:16:6, col:10> 'int' '<'     | | |-ImplicitCastExpr 0x146029a70 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146029a30 <col:6> 'int' lvalue Var 0x146026ac8 'r' 'int'     | | `-IntegerLiteral 0x146029a50 <col:10> 'int' 0     | `-GotoStmt 0x146029af8 <line:17:3, col:8> 'out' 0x146029aa8     |-IfStmt 0x146029df0 <line:19:2, line:20:8>     | |-ParenExpr 0x146029db8 <line:19:6, col:55> 'int' contains-errors     | | `-BinaryOperator 0x146029d98 <col:7, col:54> 'int' contains-errors '='     | |   |-DeclRefExpr 0x146029b30 <col:7> 'int' lvalue Var 0x146026ac8 'r' 'int'     | |   `-CallExpr 0x146029d08 <col:11, col:54> 'int' contains-errors     | |     |-ImplicitCastExpr 0x146029cf0 <col:11> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x146029c30 <col:11> 'int ()' Function 0x146029b78 'reencrypt_assign_segments' 'int ()'     | |     |-ImplicitCastExpr 0x146029d50 <col:37> 'struct crypt_device *' <LValueToRValue>     | |     | `-DeclRefExpr 0x146029c50 <col:37> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     | |     |-ImplicitCastExpr 0x146029d68 <col:41> 'struct luks2_hdr *' <LValueToRValue>     | |     | `-DeclRefExpr 0x146029c70 <col:41> 'struct luks2_hdr *' lvalue ParmVar 0x146026628 'hdr' 'struct luks2_hdr *'     | |     |-ImplicitCastExpr 0x146029d80 <col:46> 'struct luks2_reencrypt *' contains-errors <LValueToRValue>     | |     | `-DeclRefExpr 0x146029c90 <col:46> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x146026cb8 'rh' 'struct luks2_reencrypt *'     | |     |-IntegerLiteral 0x146029cb0 <col:50> 'int' 0     | |     `-IntegerLiteral 0x146029cd0 <col:53> 'int' 0     | `-GotoStmt 0x146029dd8 <line:20:3, col:8> 'out' 0x146029aa8     |-BinaryOperator 0x146029fe8 <line:22:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x146029e10 <col:2> 'int' lvalue Var 0x146026ac8 'r' 'int'     | `-CallExpr 0x146029f88 <col:6, col:37> 'int' contains-errors     |   |-ImplicitCastExpr 0x146029f70 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x146029f10 <col:6> 'int ()' Function 0x146029e58 'reencrypt_context_update' 'int ()'     |   |-ImplicitCastExpr 0x146029fb8 <col:31> 'struct crypt_device *' <LValueToRValue>     |   | `-DeclRefExpr 0x146029f30 <col:31> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     |   `-ImplicitCastExpr 0x146029fd0 <col:35> 'struct luks2_reencrypt *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x146029f50 <col:35> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x146026cb8 'rh' 'struct luks2_reencrypt *'     |-IfStmt 0x14602a1b0 <line:23:2, line:26:2>     | |-ImplicitCastExpr 0x14602a028 <line:23:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14602a008 <col:6> 'int' lvalue Var 0x146026ac8 'r' 'int'     | `-CompoundStmt 0x14602a190 <col:9, line:26:2>     |   |-CallExpr 0x14602a130 <line:24:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x14602a118 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14602a040 <col:3> 'int ()' Function 0x1460271c8 'log_err' 'int ()'     |   | |-ImplicitCastExpr 0x14602a160 <col:11> 'struct crypt_device *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14602a060 <col:11> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     |   | `-CallExpr 0x14602a0d8 <col:15, col:22> 'int'     |   |   |-ImplicitCastExpr 0x14602a0c0 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14602a080 <col:15> 'int ()' Function 0x1460272e8 '_' 'int ()'     |   |   `-ImplicitCastExpr 0x14602a100 <col:17> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x14602a0a0 <col:17> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x14602a178 <line:25:3, col:8> 'out' 0x146029aa8     |-BinaryOperator 0x14602a3e8 <line:28:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x14602a1d0 <col:2> 'int' lvalue Var 0x146026ac8 'r' 'int'     | `-CallExpr 0x14602a368 <col:6, col:39> 'int' contains-errors     |   |-ImplicitCastExpr 0x14602a350 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14602a2d0 <col:6> 'int ()' Function 0x14602a218 'reencrypt_teardown_ok' 'int ()'     |   |-ImplicitCastExpr 0x14602a3a0 <col:28> 'struct crypt_device *' <LValueToRValue>     |   | `-DeclRefExpr 0x14602a2f0 <col:28> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     |   |-ImplicitCastExpr 0x14602a3b8 <col:32> 'struct luks2_hdr *' <LValueToRValue>     |   | `-DeclRefExpr 0x14602a310 <col:32> 'struct luks2_hdr *' lvalue ParmVar 0x146026628 'hdr' 'struct luks2_hdr *'     |   `-ImplicitCastExpr 0x14602a3d0 <col:37> 'struct luks2_reencrypt *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14602a330 <col:37> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x146026cb8 'rh' 'struct luks2_reencrypt *'     |-IfStmt 0x14602a650 <line:29:2, line:30:30>     | |-UnaryOperator 0x14602a440 <line:29:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14602a428 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14602a408 <col:7> 'int' lvalue Var 0x146026ac8 'r' 'int'     | `-BinaryOperator 0x14602a630 <line:30:3, col:30> 'int' '='     |   |-DeclRefExpr 0x14602a458 <col:3> 'int' lvalue Var 0x146026ac8 'r' 'int'     |   `-CallExpr 0x14602a5d0 <col:7, col:30> 'int'     |     |-ImplicitCastExpr 0x14602a5b8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14602a558 <col:7> 'int ()' Function 0x14602a4a0 'LUKS2_hdr_write' 'int ()'     |     |-ImplicitCastExpr 0x14602a600 <col:23> 'struct crypt_device *' <LValueToRValue>     |     | `-DeclRefExpr 0x14602a578 <col:23> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     |     `-ImplicitCastExpr 0x14602a618 <col:27> 'struct luks2_hdr *' <LValueToRValue>     |       `-DeclRefExpr 0x14602a598 <col:27> 'struct luks2_hdr *' lvalue ParmVar 0x146026628 'hdr' 'struct luks2_hdr *'     |-LabelStmt 0x14602a830 <line:31:1, line:32:29> 'out'     | `-CallExpr 0x14602a7c8 <col:2, col:29> 'int' contains-errors     |   |-ImplicitCastExpr 0x14602a7b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14602a750 <col:2> 'int ()' Function 0x14602a698 'LUKS2_reencrypt_free' 'int ()'     |   |-ImplicitCastExpr 0x14602a800 <col:23> 'struct crypt_device *' <LValueToRValue>     |   | `-DeclRefExpr 0x14602a770 <col:23> 'struct crypt_device *' lvalue ParmVar 0x14600e248 'cd' 'struct crypt_device *'     |   `-ImplicitCastExpr 0x14602a818 <col:27> 'struct luks2_reencrypt *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14602a790 <col:27> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x146026cb8 'rh' 'struct luks2_reencrypt *'     `-ReturnStmt 0x14602a888 <line:34:2, col:9>       `-ImplicitCastExpr 0x14602a870 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14602a850 <col:9> 'int' lvalue Var 0x146026ac8 'r' 'int' ","19834":"`-FunctionDecl 0x122128758  line:1:12 vcpu_run 'int (struct kvm_vcpu *)' static   |-ParmVarDecl 0x122128648 <col:21, col:38> col:38 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x122143ba0 <line:2:1, line:42:1>     |-DeclStmt 0x122140ad0 <line:3:2, col:7>     | `-VarDecl 0x122140a68 <col:2, col:6> col:6 used r 'int'     |-BinaryOperator 0x122140c00 <line:5:2, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x122140b48 <col:2, col:13> '<dependent type>' contains-errors lvalue .l1tf_flush_l1d     | | `-RecoveryExpr 0x122140b20 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x122140ae8 <col:2> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x122140be0 <col:30> '<dependent type>' contains-errors lvalue     |-ForStmt 0x122143b20 <line:7:2, line:39:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-<<<NULL>>>     | `-CompoundStmt 0x122143ad8 <line:7:11, line:39:2>     |   |-IfStmt 0x122141198 <line:8:3, line:12:3> has_else     |   | |-CallExpr 0x122140db8 <line:8:7, col:28> 'int'     |   | | |-ImplicitCastExpr 0x122140da0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x122140d30 <col:7> 'int ()' Function 0x122140c78 'kvm_vcpu_running' 'int ()'     |   | | `-ImplicitCastExpr 0x122140de0 <col:24> 'struct kvm_vcpu *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x122140d50 <col:24> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   | |-CompoundStmt 0x122140fb0 <col:31, line:10:3>     |   | | `-BinaryOperator 0x122140f90 <line:9:4, col:29> 'int' '='     |   | |   |-DeclRefExpr 0x122140df8 <col:4> 'int' lvalue Var 0x122140a68 'r' 'int'     |   | |   `-CallExpr 0x122140f50 <col:8, col:29> 'int'     |   | |     |-ImplicitCastExpr 0x122140f38 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |     | `-DeclRefExpr 0x122140ef8 <col:8> 'int ()' Function 0x122140e40 'vcpu_enter_guest' 'int ()'     |   | |     `-ImplicitCastExpr 0x122140f78 <col:25> 'struct kvm_vcpu *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x122140f18 <col:25> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   | `-CompoundStmt 0x122141180 <line:10:10, line:12:3>     |   |   `-BinaryOperator 0x122141160 <line:11:4, col:23> 'int' '='     |   |     |-DeclRefExpr 0x122140fc8 <col:4> 'int' lvalue Var 0x122140a68 'r' 'int'     |   |     `-CallExpr 0x122141120 <col:8, col:23> 'int'     |   |       |-ImplicitCastExpr 0x122141108 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x1221410c8 <col:8> 'int ()' Function 0x122141010 'vcpu_block' 'int ()'     |   |       `-ImplicitCastExpr 0x122141148 <col:19> 'struct kvm_vcpu *' <LValueToRValue>     |   |         `-DeclRefExpr 0x1221410e8 <col:19> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   |-IfStmt 0x122141248 <line:14:3, line:15:4>     |   | |-BinaryOperator 0x122141220 <line:14:7, col:12> 'int' '<='     |   | | |-ImplicitCastExpr 0x122141208 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1221411c8 <col:7> 'int' lvalue Var 0x122140a68 'r' 'int'     |   | | `-IntegerLiteral 0x1221411e8 <col:12> 'int' 0     |   | `-BreakStmt 0x122141240 <line:15:4>     |   |-CallExpr 0x1221413f0 <line:17:3, col:42> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x122141348 <col:3> 'int ()' Function 0x122141290 'kvm_clear_request' 'int ()'     |   | |-RecoveryExpr 0x1221413d0 <col:21> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x122141380 <col:38> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   |-IfStmt 0x122141710 <line:18:3, line:19:38>     |   | |-CallExpr 0x122141558 <line:18:7, col:38> 'int'     |   | | |-ImplicitCastExpr 0x122141540 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x122141500 <col:7> 'int ()' Function 0x122141448 'kvm_xen_has_pending_events' 'int ()'     |   | | `-ImplicitCastExpr 0x122141580 <col:34> 'struct kvm_vcpu *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x122141520 <col:34> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   | `-CallExpr 0x1221416d0 <line:19:4, col:38> 'int'     |   |   |-ImplicitCastExpr 0x1221416b8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x122141678 <col:4> 'int ()' Function 0x1221415c0 'kvm_xen_inject_pending_events' 'int ()'     |   |   `-ImplicitCastExpr 0x1221416f8 <col:34> 'struct kvm_vcpu *' <LValueToRValue>     |   |     `-DeclRefExpr 0x122141698 <col:34> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   |-IfStmt 0x122142e40 <line:21:3, line:22:38>     |   | |-CallExpr 0x122141868 <line:21:7, col:37> 'int'     |   | | |-ImplicitCastExpr 0x122141850 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x122141810 <col:7> 'int ()' Function 0x122141758 'kvm_cpu_has_pending_timer' 'int ()'     |   | | `-ImplicitCastExpr 0x122141890 <col:33> 'struct kvm_vcpu *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x122141830 <col:33> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   | `-CallExpr 0x122142e00 <line:22:4, col:38> 'int'     |   |   |-ImplicitCastExpr 0x1221419c8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x122141988 <col:4> 'int ()' Function 0x1221418d0 'kvm_inject_pending_timer_irqs' 'int ()'     |   |   `-ImplicitCastExpr 0x122142e28 <col:34> 'struct kvm_vcpu *' <LValueToRValue>     |   |     `-DeclRefExpr 0x1221419a8 <col:34> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   |-IfStmt 0x1221433e8 <line:24:3, line:30:3>     |   | |-BinaryOperator 0x122143150 <line:24:7, line:25:47> 'int' '&&'     |   | | |-CallExpr 0x122142f98 <line:24:7, col:40> 'int'     |   | | | |-ImplicitCastExpr 0x122142f80 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x122142f40 <col:7> 'int ()' Function 0x122142e88 'dm_request_for_irq_injection' 'int ()'     |   | | | `-ImplicitCastExpr 0x122142fc0 <col:36> 'struct kvm_vcpu *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x122142f60 <col:36> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   | | `-CallExpr 0x122143110 <line:25:4, col:47> 'int'     |   | |   |-ImplicitCastExpr 0x1221430f8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x1221430b8 <col:4> 'int ()' Function 0x122143000 'kvm_vcpu_ready_for_interrupt_injection' 'int ()'     |   | |   `-ImplicitCastExpr 0x122143138 <col:43> 'struct kvm_vcpu *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x1221430d8 <col:43> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   | `-CompoundStmt 0x1221433b8 <col:50, line:30:3>     |   |   |-BinaryOperator 0x1221431b0 <line:26:4, col:8> 'int' '='     |   |   | |-DeclRefExpr 0x122143170 <col:4> 'int' lvalue Var 0x122140a68 'r' 'int'     |   |   | `-IntegerLiteral 0x122143190 <col:8> 'int' 0     |   |   |-BinaryOperator 0x1221432d0 <line:27:4, col:29> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x122143230 <col:4, col:15> '<dependent type>' contains-errors lvalue ->exit_reason     |   |   | | `-RecoveryExpr 0x122143208 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x1221431d0 <col:4> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   |   | `-RecoveryExpr 0x1221432b0 <col:29> '<dependent type>' contains-errors lvalue     |   |   |-UnaryOperator 0x122143398 <line:28:4, col:17> '<dependent type>' contains-errors prefix '++' cannot overflow     |   |   | `-CXXDependentScopeMemberExpr 0x122143350 <col:6, col:17> '<dependent type>' contains-errors lvalue .request_irq_exits     |   |   |   `-RecoveryExpr 0x122143328 <col:6, col:12> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x1221432f0 <col:6> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |   |   `-BreakStmt 0x1221433b0 <line:29:4>     |   `-IfStmt 0x122143ab8 <line:32:3, line:38:3>     |     |-CallExpr 0x122143520 <line:32:7, col:41> 'int'     |     | `-ImplicitCastExpr 0x122143508 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     |   `-DeclRefExpr 0x1221434e8 <col:7> 'int ()' Function 0x122143430 '__xfer_to_guest_mode_work_pending' 'int ()'     |     `-CompoundStmt 0x122143a88 <col:44, line:38:3>     |       |-CallExpr 0x122143678 <line:33:4, col:34> 'int'     |       | |-ImplicitCastExpr 0x122143660 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x122143620 <col:4> 'int ()' Function 0x122143568 'kvm_vcpu_srcu_read_unlock' 'int ()'     |       | `-ImplicitCastExpr 0x1221436a0 <col:30> 'struct kvm_vcpu *' <LValueToRValue>     |       |   `-DeclRefExpr 0x122143640 <col:30> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |       |-BinaryOperator 0x122143850 <line:34:4, col:43> 'int' '='     |       | |-DeclRefExpr 0x1221436b8 <col:4> 'int' lvalue Var 0x122140a68 'r' 'int'     |       | `-CallExpr 0x122143810 <col:8, col:43> 'int'     |       |   |-ImplicitCastExpr 0x1221437f8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x1221437b8 <col:8> 'int ()' Function 0x122143700 'xfer_to_guest_mode_handle_work' 'int ()'     |       |   `-ImplicitCastExpr 0x122143838 <col:39> 'struct kvm_vcpu *' <LValueToRValue>     |       |     `-DeclRefExpr 0x1221437d8 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |       |-CallExpr 0x1221439a8 <line:35:4, col:32> 'int'     |       | |-ImplicitCastExpr 0x122143990 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x122143950 <col:4> 'int ()' Function 0x122143898 'kvm_vcpu_srcu_read_lock' 'int ()'     |       | `-ImplicitCastExpr 0x1221439d0 <col:28> 'struct kvm_vcpu *' <LValueToRValue>     |       |   `-DeclRefExpr 0x122143970 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x122128648 'vcpu' 'struct kvm_vcpu *'     |       `-IfStmt 0x122143a68 <line:36:4, line:37:12>     |         |-ImplicitCastExpr 0x122143a08 <line:36:8> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x1221439e8 <col:8> 'int' lvalue Var 0x122140a68 'r' 'int'     |         `-ReturnStmt 0x122143a58 <line:37:5, col:12>     |           `-ImplicitCastExpr 0x122143a40 <col:12> 'int' <LValueToRValue>     |             `-DeclRefExpr 0x122143a20 <col:12> 'int' lvalue Var 0x122140a68 'r' 'int'     `-ReturnStmt 0x122143b90 <line:41:2, col:9>       `-ImplicitCastExpr 0x122143b78 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x122143b58 <col:9> 'int' lvalue Var 0x122140a68 'r' 'int' ","19362":"`-FunctionDecl 0x14d80ddf0  line:1:20 invalid vmxnet3_ring_inc 'void (int *)' static inline   |-ParmVarDecl 0x14d80dd28 <col:37, col:50> col:50 referenced invalid ring 'int *'   `-CompoundStmt 0x14d80e198 <line:2:1, line:7:1>     `-IfStmt 0x14d80e178 <line:3:5, line:6:5>       |-BinaryOperator 0x14d80df88 <line:3:9, col:31> 'int' contains-errors '>='       | |-UnaryOperator 0x14d80df08 <col:9, col:17> '<dependent type>' contains-errors prefix '++' cannot overflow       | | `-CXXDependentScopeMemberExpr 0x14d80dec0 <col:11, col:17> '<dependent type>' contains-errors lvalue ->next       | |   `-RecoveryExpr 0x14d80dea0 <col:11> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x14d80df40 <col:25, col:31> '<dependent type>' contains-errors lvalue ->size       |   `-RecoveryExpr 0x14d80df20 <col:25> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14d80e158 <col:37, line:6:5>         |-BinaryOperator 0x14d80e058 <line:4:9, col:22> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x14d80dff0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->next         | | `-RecoveryExpr 0x14d80dfc8 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x14d80dfa8 <col:9> 'int *' lvalue ParmVar 0x14d80dd28 'ring' 'int *'         | `-IntegerLiteral 0x14d80e038 <col:22> 'int' 0         `-CompoundAssignOperator 0x14d80e128 <line:5:9, col:22> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |-CXXDependentScopeMemberExpr 0x14d80e0c0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->gen           | `-RecoveryExpr 0x14d80e098 <col:9> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x14d80e078 <col:9> 'int *' lvalue ParmVar 0x14d80dd28 'ring' 'int *'           `-IntegerLiteral 0x14d80e108 <col:22> 'int' 1 ","19641":"`-FunctionDecl 0x124943990  col:4 implicit used _exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x124943a90 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x124943a38 <<invalid sloc>> Implicit 959 ","19783":"`-FunctionDecl 0x16000df18  line:1:1 invalid ip_printroute 'int (int *, const char *, int)'   |-ParmVarDecl 0x16000dd28 <col:15, col:35> col:35 invalid ndo 'int *'   |-ParmVarDecl 0x16000dda8 <line:2:15, col:38> col:38 used cp 'const char *' register   |-ParmVarDecl 0x16000de28 <col:42, col:48> col:48 invalid length 'int'   `-CompoundStmt 0x160028100 <line:3:1, line:22:1>     |-DeclStmt 0x16000e058 <line:4:2, col:20>     | `-VarDecl 0x16000dff0 <col:2, col:17> col:17 referenced invalid ptr 'int' register     |-DeclStmt 0x16000e0f0 <line:5:2, col:20>     | `-VarDecl 0x16000e088 <col:2, col:17> col:17 invalid len 'int' register     |-IfStmt 0x160027458 <line:7:2, line:10:2>     | |-BinaryOperator 0x16000e148 <line:7:6, col:15> 'int' contains-errors '<'     | | |-RecoveryExpr 0x16000e108 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x16000e128 <col:15> 'int' 3     | `-CompoundStmt 0x160027438 <col:18, line:10:2>     |   |-CallExpr 0x160027400 <line:8:3, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x16000e2c0 <col:3> 'int ()' Function 0x16000e208 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x16000e3c0 <col:12, col:31> '<dependent type>' contains-errors     |   |   `-BinaryOperator 0x16000e3a0 <col:13, col:25> '<dependent type>' contains-errors ','     |   |     |-BinaryOperator 0x16000e360 <col:13, col:18> 'char[4]' contains-errors ','     |   |     | |-RecoveryExpr 0x16000e2e0 <col:13> '<dependent type>' contains-errors lvalue     |   |     | `-StringLiteral 0x16000e340 <col:18> 'char[4]' lvalue \"STR\"     |   |     `-RecoveryExpr 0x16000e380 <col:25> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x160027428 <line:9:3>     |-IfStmt 0x160027640 <line:11:2, line:12:32>     | |-BinaryOperator 0x160027518 <line:11:6, col:21> '<dependent type>' contains-errors '&'     | | |-ParenExpr 0x1600274d8 <col:6, col:17> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x1600274b8 <col:7, col:16> '<dependent type>' contains-errors '+'     | | |   |-RecoveryExpr 0x160027478 <col:7> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x160027498 <col:16> 'int' 1     | | `-IntegerLiteral 0x1600274f8 <col:21> 'int' 3     | `-CallExpr 0x160027618 <line:12:3, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x160027538 <col:3> 'int ()' Function 0x16000e208 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x1600275f8 <col:12, col:31> '<dependent type>' contains-errors     |     `-BinaryOperator 0x1600275d8 <col:13, col:25> '<dependent type>' contains-errors ','     |       |-BinaryOperator 0x160027598 <col:13, col:18> 'char[4]' contains-errors ','     |       | |-RecoveryExpr 0x160027558 <col:13> '<dependent type>' contains-errors lvalue     |       | `-StringLiteral 0x160027578 <col:18> 'char[4]' lvalue \"STR\"     |       `-RecoveryExpr 0x1600275b8 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x160027790 <line:13:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x160027680 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x160027660 <col:2> 'int' lvalue Var 0x16000dff0 'ptr' 'int'     | `-BinaryOperator 0x160027770 <col:8, col:16> 'int' '-'     |   |-ImplicitCastExpr 0x160027758 <col:8, col:12> 'int' <IntegralCast>     |   | `-ImplicitCastExpr 0x160027740 <col:8, col:12> 'char' <LValueToRValue>     |   |   `-ArraySubscriptExpr 0x160027700 <col:8, col:12> 'const char' lvalue     |   |     |-ImplicitCastExpr 0x1600276e8 <col:8> 'const char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1600276a8 <col:8> 'const char *' lvalue ParmVar 0x16000dda8 'cp' 'const char *'     |   |     `-IntegerLiteral 0x1600276c8 <col:11> 'int' 2     |   `-IntegerLiteral 0x160027720 <col:16> 'int' 1     |-IfStmt 0x160027b30 <line:14:2, line:15:31>     | |-BinaryOperator 0x1600279b0 <line:14:6, col:51> 'int' contains-errors '||'     | | |-BinaryOperator 0x1600278f0 <col:6, col:31> 'int' contains-errors '||'     | | | |-BinaryOperator 0x1600277f0 <col:6, col:12> 'int' contains-errors '<'     | | | | |-RecoveryExpr 0x1600277b0 <col:6> '<dependent type>' contains-errors lvalue     | | | | `-IntegerLiteral 0x1600277d0 <col:12> 'int' 3     | | | `-ParenExpr 0x1600278d0 <col:17, col:31> '<dependent type>' contains-errors     | | |   `-BinaryOperator 0x1600278b0 <col:18, col:30> '<dependent type>' contains-errors '&'     | | |     |-ParenExpr 0x160027870 <col:18, col:26> '<dependent type>' contains-errors     | | |     | `-BinaryOperator 0x160027850 <col:19, col:25> '<dependent type>' contains-errors '+'     | | |     |   |-RecoveryExpr 0x160027810 <col:19> '<dependent type>' contains-errors lvalue     | | |     |   `-IntegerLiteral 0x160027830 <col:25> 'int' 1     | | |     `-IntegerLiteral 0x160027890 <col:30> 'int' 3     | | `-BinaryOperator 0x160027990 <col:36, col:51> 'int' contains-errors '>'     | |   |-RecoveryExpr 0x160027910 <col:36> '<dependent type>' contains-errors lvalue     | |   `-BinaryOperator 0x160027970 <col:42, col:51> '<dependent type>' contains-errors '+'     | |     |-RecoveryExpr 0x160027930 <col:42> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x160027950 <col:51> 'int' 1     | `-CallExpr 0x160027b08 <line:15:3, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1600279d0 <col:3> 'int ()' Function 0x16000e208 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x160027ae8 <col:12, col:30> 'const char' contains-errors     |     `-BinaryOperator 0x160027ac8 <col:13, col:29> 'const char' contains-errors ','     |       |-BinaryOperator 0x160027a30 <col:13, col:18> 'char[4]' contains-errors ','     |       | |-RecoveryExpr 0x1600279f0 <col:13> '<dependent type>' contains-errors lvalue     |       | `-StringLiteral 0x160027a10 <col:18> 'char[4]' lvalue \"STR\"     |       `-ArraySubscriptExpr 0x160027aa8 <col:25, col:29> 'const char' lvalue     |         |-ImplicitCastExpr 0x160027a90 <col:25> 'const char *' <LValueToRValue>     |         | `-DeclRefExpr 0x160027a50 <col:25> 'const char *' lvalue ParmVar 0x16000dda8 'cp' 'const char *'     |         `-IntegerLiteral 0x160027a70 <col:28> 'int' 2     `-ForStmt 0x1600280c8 <line:17:2, line:21:2>       |-BinaryOperator 0x160027b90 <line:17:7, col:13> '<dependent type>' contains-errors '='       | |-RecoveryExpr 0x160027b50 <col:7> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x160027b70 <col:13> 'int' 3       |-<<<NULL>>>       |-BinaryOperator 0x160027bf0 <col:16, col:22> 'int' contains-errors '<'       | |-RecoveryExpr 0x160027bb0 <col:16> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x160027bd0 <col:22> '<dependent type>' contains-errors lvalue       |-CompoundAssignOperator 0x160027c50 <col:30, col:37> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       | |-RecoveryExpr 0x160027c10 <col:30> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x160027c30 <col:37> 'int' 4       `-CompoundStmt 0x1600280a8 <col:40, line:21:2>         |-CallExpr 0x160027f38 <line:18:3, col:54> '<dependent type>' contains-errors         | |-DeclRefExpr 0x160027c80 <col:3> 'int ()' Function 0x16000e208 'ND_PRINT' 'int ()'         | `-ParenExpr 0x160027f18 <col:12, col:53> '<dependent type>' contains-errors         |   `-BinaryOperator 0x160027ef8 <col:13, col:52> '<dependent type>' contains-errors ','         |     |-BinaryOperator 0x160027ce0 <col:13, col:18> 'char[4]' contains-errors ','         |     | |-RecoveryExpr 0x160027ca0 <col:13> '<dependent type>' contains-errors lvalue         |     | `-StringLiteral 0x160027cc0 <col:18> 'char[4]' lvalue \"STR\"         |     `-CallExpr 0x160027ec8 <col:25, col:52> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x160027de0 <col:25> 'int ()' Function 0x160027d28 'ipaddr_string' 'int ()'         |       |-RecoveryExpr 0x160027e00 <col:39> '<dependent type>' contains-errors lvalue         |       `-UnaryOperator 0x160027eb0 <col:44, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow         |         `-ArraySubscriptExpr 0x160027e90 <col:45, col:51> '<dependent type>' contains-errors lvalue         |           |-ImplicitCastExpr 0x160027e60 <col:45> 'const char *' <LValueToRValue>         |           | `-DeclRefExpr 0x160027e20 <col:45> 'const char *' lvalue ParmVar 0x16000dda8 'cp' 'const char *'         |           `-ImplicitCastExpr 0x160027e78 <col:48> '<dependent type>' contains-errors <LValueToRValue>         |             `-RecoveryExpr 0x160027e40 <col:48> '<dependent type>' contains-errors lvalue         `-IfStmt 0x160028088 <line:19:3, line:20:25>           |-BinaryOperator 0x160027fa0 <line:19:7, col:13> 'int' contains-errors '>'           | |-RecoveryExpr 0x160027f60 <col:7> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x160027f80 <col:13> '<dependent type>' contains-errors lvalue           `-CallExpr 0x160028060 <line:20:4, col:25> '<dependent type>' contains-errors             |-DeclRefExpr 0x160027fc0 <col:4> 'int ()' Function 0x16000e208 'ND_PRINT' 'int ()'             `-ParenExpr 0x160028040 <col:13, col:24> 'char[4]' contains-errors               `-BinaryOperator 0x160028020 <col:14, col:19> 'char[4]' contains-errors ','                 |-RecoveryExpr 0x160027fe0 <col:14> '<dependent type>' contains-errors lvalue                 `-StringLiteral 0x160028000 <col:19> 'char[4]' lvalue \"STR\" ","19624":"`-FunctionDecl 0x12a941838  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12a941938 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12a9418e0 <<invalid sloc>> Implicit 873 ","19659":"`-FunctionDecl 0x156940dc8  line:1:12 orinoco_ioctl_set_auth 'int (struct net_device *, struct iw_request_info *, union iwreq_data *, char *)' static   |-ParmVarDecl 0x156928648 <col:35, col:54> col:54 used dev 'struct net_device *'   |-ParmVarDecl 0x156940a28 <line:2:7, col:31> col:31 info 'struct iw_request_info *'   |-ParmVarDecl 0x156940bf8 <line:3:7, col:25> col:25 used wrqu 'union iwreq_data *'   |-ParmVarDecl 0x156940c78 <col:31, col:37> col:37 extra 'char *'   `-CompoundStmt 0x156944490 <line:4:1, line:66:1>     |-DeclStmt 0x1569412d8 <line:5:2, col:47>     | |-RecordDecl 0x156940ed8 <col:2, col:9> col:9 struct orinoco_private     | `-VarDecl 0x156941048 <col:2, col:46> col:26 used priv 'struct orinoco_private *' cinit     |   `-ImplicitCastExpr 0x1569412a8 <col:33, col:46> 'struct orinoco_private *' <IntegralToPointer>     |     `-CallExpr 0x156941268 <col:33, col:46> 'int'     |       |-ImplicitCastExpr 0x156941250 <col:33> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1569411e0 <col:33> 'int ()' Function 0x156941128 'ndev_priv' 'int ()'     |       `-ImplicitCastExpr 0x156941290 <col:43> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x156941200 <col:43> 'struct net_device *' lvalue ParmVar 0x156928648 'dev' 'struct net_device *'     |-DeclStmt 0x1569415e0 <line:7:2, col:39>     | |-RecordDecl 0x156941380 <col:2, col:9> col:9 struct iw_param     | `-VarDecl 0x1569414e8 <col:2, col:34> col:19 used param 'struct iw_param *' cinit     |   `-UnaryOperator 0x1569415b0 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x156941588 <col:28, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x156941550 <col:28> 'union iwreq_data *' lvalue ParmVar 0x156940bf8 'wrqu' 'union iwreq_data *'     |-DeclStmt 0x156941678 <line:8:2, col:21>     | `-VarDecl 0x156941610 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x1569417a8 <line:9:2, col:24>     | `-VarDecl 0x1569416a8 <col:2, col:13> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x156941790 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x156941778 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x156941758 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x156943490 <line:11:2, line:12:11>     | |-BinaryOperator 0x1569419c8 <line:11:6, col:36> 'int' '!='     | | |-CallExpr 0x156941960 <col:6, col:31> 'int'     | | | |-ImplicitCastExpr 0x156941948 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x1569418a0 <col:6> 'int ()' Function 0x1569417e8 'orinoco_lock' 'int ()'     | | | |-ImplicitCastExpr 0x156941990 <col:19> 'struct orinoco_private *' <LValueToRValue>     | | | | `-DeclRefExpr 0x1569418c0 <col:19> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     | | | `-UnaryOperator 0x156941930 <col:25, col:26> 'unsigned long *' prefix '&' cannot overflow     | | |   `-DeclRefExpr 0x1569418e0 <col:26> 'unsigned long' lvalue Var 0x156941610 'flags' 'unsigned long'     | | `-IntegerLiteral 0x1569419a8 <col:36> 'int' 0     | `-ReturnStmt 0x156943480 <line:12:3, col:11>     |   `-UnaryOperator 0x156943468 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x156943450 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x156943430 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x156943588 <line:14:2, line:62:2>     | |-BinaryOperator 0x156943568 <line:14:10, col:25> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x1569434e8 <col:10, col:17> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1569434b0 <col:10> 'struct iw_param *' contains-errors lvalue Var 0x1569414e8 'param' 'struct iw_param *'     | | `-RecoveryExpr 0x156943548 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x156944220 <col:40, line:62:2>     |   |-BreakStmt 0x156943640 <line:22:3>     |   |-BinaryOperator 0x156943720 <line:26:3, col:27> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x156943698 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x156943660 <col:3> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     |   | `-RecoveryExpr 0x1569436f8 <col:20, col:27> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1569436c0 <col:20> 'struct iw_param *' contains-errors lvalue Var 0x1569414e8 'param' 'struct iw_param *'     |   |-BreakStmt 0x156943740 <line:27:3>     |   |-IfStmt 0x156943b98 <line:31:3, line:37:3> has_else     |   | |-RecoveryExpr 0x156943780 <line:31:7, col:14> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x156943748 <col:7> 'struct iw_param *' contains-errors lvalue Var 0x1569414e8 'param' 'struct iw_param *'     |   | |-CompoundStmt 0x156943988 <col:21, line:34:3>     |   | | `-BinaryOperator 0x156943828 <line:32:4, col:27> '<dependent type>' contains-errors '='     |   | |   |-RecoveryExpr 0x1569437e0 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x1569437a8 <col:4> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     |   | |   `-IntegerLiteral 0x156943808 <col:27> 'int' 1     |   | `-CompoundStmt 0x156943b80 <line:34:10, line:37:3>     |   |   `-BinaryOperator 0x156943a20 <line:35:4, col:27> '<dependent type>' contains-errors '='     |   |     |-RecoveryExpr 0x1569439d8 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x1569439a0 <col:4> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     |   |     `-IntegerLiteral 0x156943a00 <col:27> 'int' 0     |   |-BreakStmt 0x156943bc8 <line:38:3>     |   |-IfStmt 0x156943e68 <line:41:3, line:46:4> has_else     |   | |-RecoveryExpr 0x156943c30 <line:41:7, col:22> '_Bool' contains-errors     |   | |-BinaryOperator 0x156943cd0 <line:42:4, col:25> '<dependent type>' contains-errors '='     |   | | |-RecoveryExpr 0x156943c88 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x156943c50 <col:4> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     |   | | `-IntegerLiteral 0x156943cb0 <col:25> 'int' 1     |   | `-IfStmt 0x156943e38 <line:43:8, line:46:4> has_else     |   |   |-RecoveryExpr 0x156943d50 <line:43:12, col:27> '_Bool' contains-errors     |   |   |-BinaryOperator 0x156943df0 <line:44:4, col:25> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x156943da8 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x156943d70 <col:4> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     |   |   | `-IntegerLiteral 0x156943dd0 <col:25> 'int' 0     |   |   `-NullStmt 0x156943e30 <line:46:4>     |   |-BreakStmt 0x156943e98 <line:47:3>     |   |-IfStmt 0x1569441a0 <line:50:3, line:57:3> has_else     |   | |-RecoveryExpr 0x156943ed8 <line:50:7, col:13> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x156943ea0 <col:7> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     |   | |-CompoundStmt 0x156944050 <col:22, line:52:3>     |   | | `-BinaryOperator 0x156944030 <line:51:4, col:43> '<dependent type>' contains-errors '='     |   | |   |-RecoveryExpr 0x156943f38 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x156943f00 <col:4> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     |   | |   `-ConditionalOperator 0x156944000 <col:24, col:43> '<dependent type>' contains-errors     |   | |     |-RecoveryExpr 0x156943f98 <col:24, col:31> '<dependent type>' contains-errors lvalue     |   | |     | `-DeclRefExpr 0x156943f60 <col:24> 'struct iw_param *' contains-errors lvalue Var 0x1569414e8 'param' 'struct iw_param *'     |   | |     |-IntegerLiteral 0x156943fc0 <col:39> 'int' 1     |   | |     `-IntegerLiteral 0x156943fe0 <col:43> 'int' 0     |   | `-CompoundStmt 0x156944188 <line:52:10, line:57:3>     |   |   `-BinaryOperator 0x156944168 <line:56:4, col:24> '<dependent type>' contains-errors '='     |   |     |-RecoveryExpr 0x156944120 <col:4, col:10> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x1569440e8 <col:4> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     |   |     `-IntegerLiteral 0x156944148 <col:24> 'int' 0     |   |-BreakStmt 0x1569441d0 <line:58:3>     |   `-DefaultStmt 0x156944200 <line:60:2, col:9>     |     `-NullStmt 0x1569441f8 <col:9>     |-CallExpr 0x156944400 <line:64:2, col:29> 'int'     | |-ImplicitCastExpr 0x1569443d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x156944360 <col:2> 'int ()' Function 0x1569442a8 'orinoco_unlock' 'int ()'     | |-ImplicitCastExpr 0x156944430 <col:17> 'struct orinoco_private *' <LValueToRValue>     | | `-DeclRefExpr 0x156944380 <col:17> 'struct orinoco_private *' lvalue Var 0x156941048 'priv' 'struct orinoco_private *'     | `-UnaryOperator 0x1569443c0 <col:23, col:24> 'unsigned long *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x1569443a0 <col:24> 'unsigned long' lvalue Var 0x156941610 'flags' 'unsigned long'     `-ReturnStmt 0x156944480 <line:65:2, col:9>       `-ImplicitCastExpr 0x156944468 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x156944448 <col:9> 'int' contains-errors lvalue Var 0x1569416a8 'ret' 'int' ","19708":"`-FunctionDecl 0x150942000  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x150942100 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150942168 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1509421d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1509420a8 <<invalid sloc>> Implicit 882 ","19634":"`-FunctionDecl 0x137902f38  line:1:1 invalid attach_slave 'int (int, int *, int)'   |-ParmVarDecl 0x137902cf0 <col:14, col:24> col:24 referenced invalid client 'int'   |-ParmVarDecl 0x137902da8 <col:32, col:53> col:53 invalid c 'int *'   |-ParmVarDecl 0x137902e40 <col:56, col:60> col:60 referenced invalid flags 'int'   `-CompoundStmt 0x141008b20 <line:2:1, line:45:1>     |-DeclStmt 0x137903078 <line:5:5, col:11>     | `-VarDecl 0x137903010 <col:5, col:9> col:9 used rc 'int'     |-BinaryOperator 0x140009c00 <line:7:5, col:68> 'int' contains-errors '='     | |-DeclRefExpr 0x137903090 <col:5> 'int' lvalue Var 0x137903010 'rc' 'int'     | `-CallExpr 0x1379033b8 <col:10, col:68> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x137903210 <col:10> 'int ()' Function 0x137903158 'dixLookupDevice' 'int ()'     |   |-UnaryOperator 0x137903380 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x137903360 <col:27> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x137903280 <col:32, col:35> '<dependent type>' contains-errors lvalue ->deviceid     |   | `-RecoveryExpr 0x137903260 <col:32> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1379032c8 <col:45> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x137903398 <col:53> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140009d20 <line:8:5, line:9:14>     | |-BinaryOperator 0x140009c98 <line:8:9, col:15> 'int' contains-errors '!='     | | |-DeclRefExpr 0x140009c20 <col:9> 'int' lvalue Var 0x137903010 'rc' 'int'     | | `-RecoveryExpr 0x140009c78 <col:15> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x140009d08 <line:9:9, col:14> 'unwind' 0x140009cb8     |-IfStmt 0x14000a0b8 <line:11:5, line:15:5>     | |-CallExpr 0x140009ea0 <line:11:9, col:21> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x140009e20 <col:9> 'int ()' Function 0x140009d68 'IsMaster' 'int ()'     | | `-RecoveryExpr 0x140009e80 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14000a090 <col:24, line:15:5>     |   |-BinaryOperator 0x140009fc0 <line:12:9, col:33> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x140009f10 <col:9, col:17> '<dependent type>' contains-errors lvalue ->errorValue     |   | | `-RecoveryExpr 0x140009ee8 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x140009ec8 <col:9> 'int' lvalue ParmVar 0x137902cf0 'client' 'int'     |   | `-CXXDependentScopeMemberExpr 0x140009f78 <col:30, col:33> '<dependent type>' contains-errors lvalue ->deviceid     |   |   `-RecoveryExpr 0x140009f58 <col:30> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14000a058 <line:13:9, col:14> 'int' contains-errors '='     |   | |-DeclRefExpr 0x140009fe0 <col:9> 'int' lvalue Var 0x137903010 'rc' 'int'     |   | `-RecoveryExpr 0x14000a038 <col:14> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14000a078 <line:14:9, col:14> 'unwind' 0x140009cb8     |-IfStmt 0x14000a498 <line:18:5, line:22:5>     | |-CallExpr 0x14000a278 <line:18:9, col:32> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14000a1b8 <col:9> 'int ()' Function 0x14000a100 'IsXTestDevice' 'int ()'     | | |-RecoveryExpr 0x14000a238 <col:23> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14000a258 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14000a470 <col:35, line:22:5>     |   |-BinaryOperator 0x14000a3a0 <line:19:9, col:33> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14000a2f0 <col:9, col:17> '<dependent type>' contains-errors lvalue ->errorValue     |   | | `-RecoveryExpr 0x14000a2c8 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14000a2a8 <col:9> 'int' lvalue ParmVar 0x137902cf0 'client' 'int'     |   | `-CXXDependentScopeMemberExpr 0x14000a358 <col:30, col:33> '<dependent type>' contains-errors lvalue ->deviceid     |   |   `-RecoveryExpr 0x14000a338 <col:30> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14000a438 <line:20:9, col:14> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14000a3c0 <col:9> 'int' lvalue Var 0x137903010 'rc' 'int'     |   | `-RecoveryExpr 0x14000a418 <col:14> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14000a458 <line:21:9, col:14> 'unwind' 0x140009cb8     |-BinaryOperator 0x14000a6c0 <line:24:5, col:73> 'int' contains-errors '='     | |-DeclRefExpr 0x14000a4b8 <col:5> 'int' lvalue Var 0x137903010 'rc' 'int'     | `-CallExpr 0x14000a680 <col:10, col:73> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14000a4d8 <col:10> 'int ()' Function 0x137903158 'dixLookupDevice' 'int ()'     |   |-UnaryOperator 0x14000a648 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14000a628 <col:27> '<dependent type>' contains-errors lvalue     |   |-CXXDependentScopeMemberExpr 0x14000a548 <col:38, col:41> '<dependent type>' contains-errors lvalue ->new_master     |   | `-RecoveryExpr 0x14000a528 <col:38> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x14000a590 <col:53> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14000a660 <col:61> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14000a790 <line:25:5, line:26:14>     | |-BinaryOperator 0x14000a758 <line:25:9, col:15> 'int' contains-errors '!='     | | |-DeclRefExpr 0x14000a6e0 <col:9> 'int' lvalue Var 0x137903010 'rc' 'int'     | | `-RecoveryExpr 0x14000a738 <col:15> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x14000a778 <line:26:9, col:14> 'unwind' 0x140009cb8     |-IfStmt 0x14000a960 <line:27:5, line:31:5>     | |-RecoveryExpr 0x14000a7d0 <line:27:9, col:28> '_Bool' contains-errors     | `-CompoundStmt 0x14000a940 <col:31, line:31:5>     |   |-BinaryOperator 0x14000a8e8 <line:28:9, col:33> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14000a838 <col:9, col:17> '<dependent type>' contains-errors lvalue ->errorValue     |   | | `-RecoveryExpr 0x14000a810 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14000a7f0 <col:9> 'int' lvalue ParmVar 0x137902cf0 'client' 'int'     |   | `-CXXDependentScopeMemberExpr 0x14000a8a0 <col:30, col:33> '<dependent type>' contains-errors lvalue ->new_master     |   |   `-RecoveryExpr 0x14000a880 <col:30> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x14000a928 <line:30:9, col:14> 'unwind' 0x140009cb8     |-IfStmt 0x141008830 <line:33:5, line:37:5>     | |-RecoveryExpr 0x14000abc0 <line:33:9, line:34:65> '_Bool' contains-errors     | `-CompoundStmt 0x141008818 <col:68, line:37:5>     |   `-GotoStmt 0x141008800 <line:36:9, col:14> 'unwind' 0x140009cb8     `-LabelStmt 0x141008b00 <line:43:2, line:44:12> 'unwind'       `-ReturnStmt 0x141008af0 <col:5, col:12>         `-ImplicitCastExpr 0x141008ad8 <col:12> 'int' <LValueToRValue>           `-DeclRefExpr 0x141008ab8 <col:12> 'int' lvalue Var 0x137903010 'rc' 'int' ","19174":"`-FunctionDecl 0x13f0d1470  col:28 implicit used calloc 'void *(unsigned long, unsigned long)' extern   |-ParmVarDecl 0x13f0d1570 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x13f0d15d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x13f0d1518 <<invalid sloc>> Implicit 868   `-AllocSizeAttr 0x13f0d1650 <col:28> Implicit 1 2 ","19716":"`-FunctionDecl 0x122028318  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x122029830 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x1220283c0 <<invalid sloc>> Implicit 873 ","19289":"`-FunctionDecl 0x105026748  line:1:1 __ip_vs_bind_svc 'int (struct ip_vs_dest *, struct ip_vs_service *)'   |-ParmVarDecl 0x10500e248 <col:18, col:37> col:37 used dest 'struct ip_vs_dest *'   |-ParmVarDecl 0x105026628 <col:43, col:65> col:65 used svc 'struct ip_vs_service *'   `-CompoundStmt 0x105026ad0 <line:2:1, line:5:1>     |-CallExpr 0x105026a08 <line:3:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x105026970 <col:2> 'int ()' Function 0x1050268b8 'atomic_inc' 'int ()'     | `-UnaryOperator 0x1050269f0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1050269c8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x105026990 <col:14> 'struct ip_vs_service *' lvalue ParmVar 0x105026628 'svc' 'struct ip_vs_service *'     `-BinaryOperator 0x105026ab0 <line:4:2, col:14> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x105026a68 <col:2, col:8> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x105026a30 <col:2> 'struct ip_vs_dest *' lvalue ParmVar 0x10500e248 'dest' 'struct ip_vs_dest *'       `-DeclRefExpr 0x105026a90 <col:14> 'struct ip_vs_service *' lvalue ParmVar 0x105026628 'svc' 'struct ip_vs_service *' ","19722":"`-FunctionDecl 0x15a9281f8  line:1:12 invalid bio_zlib_flush 'int (int *)' static   |-ParmVarDecl 0x15a928128 <col:27, col:32> col:32 invalid b 'int *'   `-CompoundStmt 0x15b009748 <line:2:2, line:48:2>     |-DeclStmt 0x15a928340 <line:4:2, col:9>     | `-VarDecl 0x15a9282d8 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x15a928578 <line:8:2, col:56>     | |-RecoveryExpr 0x15a928528 <col:5, col:46> '_Bool' contains-errors     | `-ReturnStmt 0x15a928568 <col:49, col:56>     |   `-IntegerLiteral 0x15a928548 <col:56> 'int' 1     |-CallExpr 0x15a9287b0 <line:10:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a928770 <col:2> 'int ()' Function 0x15a9286b8 'BIO_clear_retry_flags' 'int ()'     | `-RecoveryExpr 0x15a928790 <col:24> '<dependent type>' contains-errors lvalue     `-ForStmt 0x15b009710 <line:14:2, line:47:3>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       `-CompoundStmt 0x15b0096e8 <line:15:3, line:47:3>         |-WhileStmt 0x15b008f58 <line:17:3, line:27:4>         | |-CXXDependentScopeMemberExpr 0x15b0088a0 <line:17:9, col:14> '<dependent type>' contains-errors lvalue ->ocount         | | `-RecoveryExpr 0x15b008880 <col:9> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x15b008f38 <line:18:4, line:27:4>         |   |-BinaryOperator 0x15b008c90 <line:19:4, col:55> 'int' contains-errors '='         |   | |-DeclRefExpr 0x15b0088e8 <col:4> 'int' lvalue Var 0x15a9282d8 'ret' 'int'         |   | `-CallExpr 0x15b008c58 <col:10, col:55> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x15b0089e8 <col:10> 'int ()' Function 0x15b008930 'BIO_write' 'int ()'         |   |   |-CXXDependentScopeMemberExpr 0x15b008a28 <col:20, col:23> '<dependent type>' contains-errors lvalue ->next_bio         |   |   | `-RecoveryExpr 0x15b008a08 <col:20> '<dependent type>' contains-errors lvalue         |   |   |-CXXDependentScopeMemberExpr 0x15b008ba8 <col:33, col:38> '<dependent type>' contains-errors lvalue ->optr         |   |   | `-RecoveryExpr 0x15b008b88 <col:33> '<dependent type>' contains-errors lvalue         |   |   `-CXXDependentScopeMemberExpr 0x15b008c10 <col:44, col:49> '<dependent type>' contains-errors lvalue ->ocount         |   |     `-RecoveryExpr 0x15b008bf0 <col:44> '<dependent type>' contains-errors lvalue         |   `-IfStmt 0x15b008ed8 <line:20:4, line:24:5>         |     |-BinaryOperator 0x15b008d08 <line:20:7, col:14> 'int' '<='         |     | |-ImplicitCastExpr 0x15b008cf0 <col:7> 'int' <LValueToRValue>         |     | | `-DeclRefExpr 0x15b008cb0 <col:7> 'int' lvalue Var 0x15a9282d8 'ret' 'int'         |     | `-IntegerLiteral 0x15b008cd0 <col:14> 'int' 0         |     `-CompoundStmt 0x15b008eb8 <line:21:5, line:24:5>         |       |-CallExpr 0x15b008e48 <line:22:5, col:26> '<dependent type>' contains-errors         |       | |-DeclRefExpr 0x15b008e08 <col:5> 'int ()' Function 0x15b008d50 'BIO_copy_next_retry' 'int ()'         |       | `-RecoveryExpr 0x15b008e28 <col:25> '<dependent type>' contains-errors lvalue         |       `-ReturnStmt 0x15b008ea8 <line:23:5, col:12>         |         `-ImplicitCastExpr 0x15b008e90 <col:12> 'int' <LValueToRValue>         |           `-DeclRefExpr 0x15b008e70 <col:12> 'int' lvalue Var 0x15a9282d8 'ret' 'int'         |-IfStmt 0x15b008fc8 <line:28:3, col:25>         | |-RecoveryExpr 0x15b008f78 <col:6, col:11> '_Bool' contains-errors         | `-ReturnStmt 0x15b008fb8 <col:18, col:25>         |   `-IntegerLiteral 0x15b008f98 <col:25> 'int' 1         `-IfStmt 0x15b0096b8 <line:38:3, line:45:4> has_else           |-RecoveryExpr 0x15b009128 <line:38:6, col:13> '_Bool' contains-errors           |-NullStmt 0x15b0096b0 <col:27>           `-IfStmt 0x15b009690 <line:39:8, line:45:4>             |-RecoveryExpr 0x15b009188 <line:39:11, col:18> '_Bool' contains-errors             `-CompoundStmt 0x15b009670 <line:40:4, line:45:4>               |-CallExpr 0x15b0095f0 <line:43:4, col:44> 'int'               | |-ImplicitCastExpr 0x15b0095d8 <col:4> 'int (*)()' <FunctionToPointerDecay>               | | `-DeclRefExpr 0x15b009388 <col:4> 'int ()' Function 0x15b0092d0 'ERR_add_error_data' 'int ()'               | |-IntegerLiteral 0x15b0093a8 <col:23> 'int' 2               | |-ImplicitCastExpr 0x15b009628 <col:26> 'char *' <ArrayToPointerDecay>               | | `-StringLiteral 0x15b009410 <col:26> 'char[4]' lvalue \"STR\"               | `-CallExpr 0x15b009598 <col:33, col:43> 'int'               |   |-ImplicitCastExpr 0x15b009580 <col:33> 'int (*)()' <FunctionToPointerDecay>               |   | `-DeclRefExpr 0x15b009510 <col:33> 'int ()' Function 0x15b009458 'zError' 'int ()'               |   `-ImplicitCastExpr 0x15b0095c0 <col:40> 'int' <LValueToRValue>               |     `-DeclRefExpr 0x15b009530 <col:40> 'int' lvalue Var 0x15a9282d8 'ret' 'int'               `-ReturnStmt 0x15b009660 <line:44:4, col:11>                 `-IntegerLiteral 0x15b009640 <col:11> 'int' 0 ","19508":"`-FunctionDecl 0x128008238  line:1:1 invalid vg_resource_attach_backing 'int (int *, struct virtio_gpu_ctrl_command *)'   |-ParmVarDecl 0x11f00dd28 <col:28, col:35> col:35 invalid g 'int *'   |-ParmVarDecl 0x11f00e318 <line:2:28, col:60> col:60 used cmd 'struct virtio_gpu_ctrl_command *'   `-CompoundStmt 0x11f80cff8 <line:3:1, line:26:1>     |-DeclStmt 0x1280084d8 <line:4:5, col:43>     | |-RecordDecl 0x1280082f0 <col:5, col:12> col:12 struct virtio_gpu_simple_resource     | `-VarDecl 0x128008458 <col:5, col:40> col:40 used res 'struct virtio_gpu_simple_resource *'     |-DeclStmt 0x128008668 <line:5:5, col:49>     | |-RecordDecl 0x1280084f0 <col:5, col:12> col:12 struct virtio_gpu_resource_attach_backing     | `-VarDecl 0x1280085e8 <col:5, col:47> col:47 invalid ab 'struct virtio_gpu_resource_attach_backing'     |-DeclStmt 0x128008700 <line:6:5, col:12>     | `-VarDecl 0x128008698 <col:5, col:9> col:9 used ret 'int'     |-CallExpr 0x1280088b0 <line:8:5, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128008870 <col:5> 'int ()' Function 0x1280087b8 'VUGPU_FILL_CMD' 'int ()'     | `-RecoveryExpr 0x128008890 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x128008a70 <line:9:5, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1280089b8 <col:5> 'int ()' Function 0x128008900 'virtio_gpu_bswap_32' 'int ()'     | |-UnaryOperator 0x1280089f8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1280089d8 <col:26> '<dependent type>' contains-errors lvalue     | `-UnaryExprOrTypeTraitExpr 0x128008a50 <col:30, col:39> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x128008a30 <col:36, col:39> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x128008a10 <col:37> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x128008c78 <line:11:5, col:53> 'struct virtio_gpu_simple_resource *' contains-errors '='     | |-DeclRefExpr 0x128008aa0 <col:5> 'struct virtio_gpu_simple_resource *' lvalue Var 0x128008458 'res' 'struct virtio_gpu_simple_resource *'     | `-CallExpr 0x128008c48 <col:11, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128008ba0 <col:11> 'int ()' Function 0x128008ae8 'virtio_gpu_find_resource' 'int ()'     |   |-RecoveryExpr 0x128008bc0 <col:36> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x128008c00 <col:39, col:42> '<dependent type>' contains-errors lvalue .resource_id     |     `-RecoveryExpr 0x128008be0 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1280090d0 <line:12:5, line:17:5>     | |-UnaryOperator 0x128008cd0 <line:12:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x128008cb8 <col:10> 'struct virtio_gpu_simple_resource *' <LValueToRValue>     | |   `-DeclRefExpr 0x128008c98 <col:10> 'struct virtio_gpu_simple_resource *' lvalue Var 0x128008458 'res' 'struct virtio_gpu_simple_resource *'     | `-CompoundStmt 0x1280090a8 <col:15, line:17:5>     |   |-CallExpr 0x128008f88 <line:13:9, line:14:44> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x128008dc8 <line:13:9> 'int ()' Function 0x128008d10 'g_critical' 'int ()'     |   | |-StringLiteral 0x128008e30 <col:20> 'char[4]' lvalue \"STR\"     |   | |-PredefinedExpr 0x128008f08 <line:14:20> 'const char[27]' lvalue __func__     |   | | `-StringLiteral 0x128008ed0 <col:20> 'const char[27]' lvalue \"vg_resource_attach_backing\"     |   | `-CXXDependentScopeMemberExpr 0x128008f40 <col:30, col:33> '<dependent type>' contains-errors lvalue .resource_id     |   |   `-RecoveryExpr 0x128008f20 <col:30> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x128009078 <line:15:9, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x128008ff8 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x128008fc0 <col:9> 'struct virtio_gpu_ctrl_command *' lvalue ParmVar 0x11f00e318 'cmd' 'struct virtio_gpu_ctrl_command *'     |   | `-RecoveryExpr 0x128009058 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x128009098 <line:16:9>     |-BinaryOperator 0x11f80cd50 <line:19:5, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x1280090f0 <col:5> 'int' lvalue Var 0x128008698 'ret' 'int'     | `-CallExpr 0x11f80cd10 <col:11, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f80cc00 <col:11> 'int ()' Function 0x128009138 'vg_create_mapping_iov' 'int ()'     |   |-RecoveryExpr 0x11f80cc20 <col:33> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x11f80cc60 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x11f80cc40 <col:37> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x11f80cc78 <col:41> 'struct virtio_gpu_ctrl_command *' lvalue ParmVar 0x11f00e318 'cmd' 'struct virtio_gpu_ctrl_command *'     |   `-UnaryOperator 0x11f80ccf8 <col:46, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x11f80ccd0 <col:47, col:52> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f80cc98 <col:47> 'struct virtio_gpu_simple_resource *' lvalue Var 0x128008458 'res' 'struct virtio_gpu_simple_resource *'     |-IfStmt 0x11f80cef0 <line:20:5, line:23:5>     | |-BinaryOperator 0x11f80cdc8 <line:20:9, col:16> 'int' '!='     | | |-ImplicitCastExpr 0x11f80cdb0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x11f80cd70 <col:9> 'int' lvalue Var 0x128008698 'ret' 'int'     | | `-IntegerLiteral 0x11f80cd90 <col:16> 'int' 0     | `-CompoundStmt 0x11f80ced0 <col:19, line:23:5>     |   |-BinaryOperator 0x11f80cea0 <line:21:9, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x11f80ce20 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x11f80cde8 <col:9> 'struct virtio_gpu_ctrl_command *' lvalue ParmVar 0x11f00e318 'cmd' 'struct virtio_gpu_ctrl_command *'     |   | `-RecoveryExpr 0x11f80ce80 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x11f80cec0 <line:22:9>     `-BinaryOperator 0x11f80cfd8 <line:25:5, col:23> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x11f80cf48 <col:5, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x11f80cf10 <col:5> 'struct virtio_gpu_simple_resource *' lvalue Var 0x128008458 'res' 'struct virtio_gpu_simple_resource *'       `-CXXDependentScopeMemberExpr 0x11f80cf90 <col:20, col:23> '<dependent type>' contains-errors lvalue .nr_entries         `-RecoveryExpr 0x11f80cf70 <col:20> '<dependent type>' contains-errors lvalue ","19740":"`-FunctionDecl 0x15a141bc0  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x15a141cc0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x15a141c68 <<invalid sloc>> Implicit 903   `-FormatAttr 0x15a141d30 <col:3> Implicit printf 1 2 ","19617":"`-FunctionDecl 0x11e928750  line:1:13 start_sw_tscdeadline 'void (struct kvm_lapic *)' static   |-ParmVarDecl 0x11e928648 <col:34, col:52> col:52 used apic 'struct kvm_lapic *'   `-CompoundStmt 0x11e943228 <line:2:1, line:32:1>     |-DeclStmt 0x11e940cb0 <line:3:2, col:47>     | |-RecordDecl 0x11e940a48 <col:2, col:9> col:9 struct kvm_timer     | `-VarDecl 0x11e940bb8 <col:2, col:36> col:20 used ktimer 'struct kvm_timer *' cinit     |   `-UnaryOperator 0x11e940c80 <col:29, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x11e940c58 <col:30, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11e940c20 <col:30> 'struct kvm_lapic *' lvalue ParmVar 0x11e928648 'apic' 'struct kvm_lapic *'     |-ImplicitCastExpr 0x11e940d00 <line:6:2> 'struct kvm_timer *' contains-errors <LValueToRValue>     | `-DeclRefExpr 0x11e940ce0 <col:2> 'struct kvm_timer *' contains-errors lvalue Var 0x11e940bb8 'ktimer' 'struct kvm_timer *'     |-DeclStmt 0x11e940f68 <line:7:2, col:36>     | |-RecordDecl 0x11e940d18 <col:2, col:9> col:9 struct kvm_vcpu     | `-VarDecl 0x11e940e88 <col:2, col:32> col:19 used vcpu 'struct kvm_vcpu *' cinit     |   `-RecoveryExpr 0x11e940f28 <col:26, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11e940ef0 <col:26> 'struct kvm_lapic *' lvalue ParmVar 0x11e928648 'apic' 'struct kvm_lapic *'     |-DeclStmt 0x11e9410a8 <line:8:2, col:57>     | `-VarDecl 0x11e940f98 <col:2, col:42> col:16 used this_tsc_khz 'unsigned long' cinit     |   `-CXXDependentScopeMemberExpr 0x11e941060 <col:31, col:42> '<dependent type>' contains-errors lvalue .virtual_tsc_khz     |     `-RecoveryExpr 0x11e941038 <col:31, col:37> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11e941000 <col:31> 'struct kvm_vcpu *' contains-errors lvalue Var 0x11e940e88 'vcpu' 'struct kvm_vcpu *'     |-DeclStmt 0x11e941140 <line:9:2, col:21>     | `-VarDecl 0x11e9410d8 <col:2, col:16> col:16 used flags 'unsigned long'     |-ImplicitCastExpr 0x11e941178 <line:10:2> 'struct kvm_timer *' contains-errors <LValueToRValue>     | `-DeclRefExpr 0x11e941158 <col:2> 'struct kvm_timer *' contains-errors lvalue Var 0x11e940bb8 'ktimer' 'struct kvm_timer *'     |-IfStmt 0x11e941478 <line:12:2, line:13:3>     | |-CallExpr 0x11e941440 <line:12:6, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11e9412a0 <col:6> 'int ()' Function 0x11e9411e8 'unlikely' 'int ()'     | | `-BinaryOperator 0x11e941420 <col:15, col:32> 'int' contains-errors '||'     | |   |-UnaryOperator 0x11e9413d8 <col:15, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   | `-ImplicitCastExpr 0x11e9413c0 <col:16> '<dependent type>' contains-errors <LValueToRValue>     | |   |   `-RecoveryExpr 0x11e9413a0 <col:16> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x11e941408 <col:31, col:32> 'int' contains-errors prefix '!' cannot overflow     | |     `-ImplicitCastExpr 0x11e9413f0 <col:32> 'unsigned long' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x11e941308 <col:32> 'unsigned long' contains-errors lvalue Var 0x11e940f98 'this_tsc_khz' 'unsigned long'     | `-ReturnStmt 0x11e941468 <line:13:3>     |-CallExpr 0x11e941608 <line:15:2, col:22> 'int'     | |-ImplicitCastExpr 0x11e9415f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11e941578 <col:2> 'int ()' Function 0x11e9414c0 'local_irq_save' 'int ()'     | `-ImplicitCastExpr 0x11e941630 <col:17> 'unsigned long' <LValueToRValue>     |   `-DeclRefExpr 0x11e941598 <col:17> 'unsigned long' lvalue Var 0x11e9410d8 'flags' 'unsigned long'     |-IfStmt 0x11e943080 <line:23:2, line:29:3> has_else     | |-RecoveryExpr 0x11e942b50 <line:23:6, line:24:52> '_Bool' contains-errors     | |-CompoundStmt 0x11e942f48 <col:55, line:28:2>     | `-NullStmt 0x11e943078 <line:29:3>     `-CallExpr 0x11e9431e8 <line:31:2, col:25> 'int'       |-ImplicitCastExpr 0x11e9431d0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x11e943190 <col:2> 'int ()' Function 0x11e9430d8 'local_irq_restore' 'int ()'       `-ImplicitCastExpr 0x11e943210 <col:20> 'unsigned long' <LValueToRValue>         `-DeclRefExpr 0x11e9431b0 <col:20> 'unsigned long' lvalue Var 0x11e9410d8 'flags' 'unsigned long' ","19384":"`-FunctionDecl 0x130029a40  col:26 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x130029b40 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x130029ba8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x130029ae8 <<invalid sloc>> Implicit 887 ","19717":"`-FunctionDecl 0x122941800  line:1:10 invalid MemoryClose 'int (struct _cms_io_handler *)'   |-ParmVarDecl 0x122928668 <col:22, col:46> col:46 used iohandler 'struct _cms_io_handler *'   `-CompoundStmt 0x122942000 <line:2:1, line:14:1>     |-IfStmt 0x122941db0 <line:5:5, line:8:5>     | |-CXXDependentScopeMemberExpr 0x122941960 <line:5:9, col:19> '<dependent type>' contains-errors lvalue ->FreeBlockOnClose     | | `-RecoveryExpr 0x122941940 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x122941d98 <col:37, line:8:5>     |   `-IfStmt 0x122941d78 <line:7:9, col:77>     |     |-CXXDependentScopeMemberExpr 0x122941a28 <col:13, col:23> '<dependent type>' contains-errors lvalue ->Block     |     | `-RecoveryExpr 0x122941a08 <col:13> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x122941d48 <col:30, col:77> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x122941bd0 <col:30> 'int ()' Function 0x122941b18 '_cmsFree' 'int ()'     |       |-RecoveryExpr 0x122941c28 <col:39, col:51> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x122941bf0 <col:39> 'struct _cms_io_handler *' lvalue ParmVar 0x122928668 'iohandler' 'struct _cms_io_handler *'     |       `-CXXDependentScopeMemberExpr 0x122941d00 <col:62, col:72> '<dependent type>' contains-errors lvalue ->Block     |         `-RecoveryExpr 0x122941ce0 <col:62> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122941eb8 <line:10:5, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122941dd0 <col:5> 'int ()' Function 0x122941b18 '_cmsFree' 'int ()'     | |-RecoveryExpr 0x122941e28 <col:14, col:26> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122941df0 <col:14> 'struct _cms_io_handler *' lvalue ParmVar 0x122928668 'iohandler' 'struct _cms_io_handler *'     | `-RecoveryExpr 0x122941e98 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122941f88 <line:11:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122941ee8 <col:5> 'int ()' Function 0x122941b18 '_cmsFree' 'int ()'     | |-RecoveryExpr 0x122941f40 <col:14, col:26> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122941f08 <col:14> 'struct _cms_io_handler *' lvalue ParmVar 0x122928668 'iohandler' 'struct _cms_io_handler *'     | `-DeclRefExpr 0x122941f68 <col:37> 'struct _cms_io_handler *' lvalue ParmVar 0x122928668 'iohandler' 'struct _cms_io_handler *'     `-ReturnStmt 0x122941ff0 <line:13:5, col:12>       `-RecoveryExpr 0x122941fd0 <col:12> '<dependent type>' contains-errors lvalue ","19352":"`-FunctionDecl 0x1589283e8  line:1:1 invalid poppler_attachment_save_to_callback 'int (int *, int, int, int **)'   |-ParmVarDecl 0x158928128 <col:38, col:66> col:66 invalid attachment 'int *'   |-ParmVarDecl 0x1589281a8 <line:2:10, col:38> col:38 invalid save_func 'int'   |-ParmVarDecl 0x158928228 <line:3:10, col:38> col:38 invalid user_data 'int'   |-ParmVarDecl 0x1589282e0 <line:4:10, col:38> col:38 invalid error 'int **'   `-CompoundStmt 0x159009338 <line:5:1, line:41:1>     |-DeclStmt 0x158928558 <line:7:3, col:22>     | `-VarDecl 0x1589284f0 <col:3, col:9> col:9 referenced invalid buf 'char'     |-DeclStmt 0x1589285f0 <line:8:3, col:8>     | `-VarDecl 0x158928588 <col:3, col:7> col:7 used i 'int'     |-CallExpr 0x159008988 <line:11:3, col:66> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158928760 <col:3> 'int ()' Function 0x1589286a8 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x1590088f8 <col:25, col:58> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1590088b8 <col:25> 'int ()' Function 0x159008800 'POPPLER_IS_ATTACHMENT' 'int ()'     | | `-RecoveryExpr 0x1590088d8 <col:48> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x159008968 <col:61> '<dependent type>' contains-errors lvalue     `-DoStmt 0x159009318 <line:16:3, line:37:23>       |-CompoundStmt 0x1590092d0 <line:17:5, line:36:5>       | |-DeclStmt 0x159008c30 <line:18:7, col:15>       | | `-VarDecl 0x159008bc8 <col:7, col:11> col:11 used data 'int'       | |-ForStmt 0x1590090d8 <line:20:7, line:29:2>       | | |-BinaryOperator 0x159008c88 <line:20:12, col:16> 'int' '='       | | | |-DeclRefExpr 0x159008c48 <col:12> 'int' lvalue Var 0x158928588 'i' 'int'       | | | `-IntegerLiteral 0x159008c68 <col:16> 'int' 0       | | |-<<<NULL>>>       | | |-BinaryOperator 0x159008d20 <col:19, col:23> 'int' contains-errors '<'       | | | |-DeclRefExpr 0x159008ca8 <col:19> 'int' lvalue Var 0x158928588 'i' 'int'       | | | `-RecoveryExpr 0x159008d00 <col:23> '<dependent type>' contains-errors lvalue       | | |-UnaryOperator 0x159008d60 <col:33, col:34> 'int' postfix '++'       | | | `-DeclRefExpr 0x159008d40 <col:33> 'int' lvalue Var 0x158928588 'i' 'int'       | | `-CompoundStmt 0x1590090b0 <line:21:2, line:29:2>       | |   |-BinaryOperator 0x159008ec0 <line:22:4, col:28> 'int' contains-errors '='       | |   | |-DeclRefExpr 0x159008d78 <col:4> 'int' lvalue Var 0x159008bc8 'data' 'int'       | |   | `-CallExpr 0x159008ea0 <col:11, col:28> '<dependent type>' contains-errors       | |   |   `-CXXDependentScopeMemberExpr 0x159008e58 <col:11, col:19> '<dependent type>' contains-errors lvalue ->getChar       | |   |     `-RecoveryExpr 0x159008e38 <col:11> '<dependent type>' contains-errors lvalue       | |   |-IfStmt 0x159008f98 <line:23:4, line:27:6>       | |   | |-BinaryOperator 0x159008f58 <line:23:8, col:16> 'int' contains-errors '=='       | |   | | |-DeclRefExpr 0x159008ee0 <col:8> 'int' lvalue Var 0x159008bc8 'data' 'int'       | |   | | `-RecoveryExpr 0x159008f38 <col:16> '<dependent type>' contains-errors lvalue       | |   | `-CompoundStmt 0x159008f80 <line:24:6, line:27:6>       | |   |   `-BreakStmt 0x159008f78 <line:26:8>       | |   `-BinaryOperator 0x159009090 <line:28:4, col:13> '<dependent type>' contains-errors '='       | |     |-ArraySubscriptExpr 0x159009050 <col:4, col:9> '<dependent type>' contains-errors lvalue       | |     | |-ImplicitCastExpr 0x159009020 <col:4> '<dependent type>' contains-errors <LValueToRValue>       | |     | | `-RecoveryExpr 0x159008fd8 <col:4> '<dependent type>' contains-errors lvalue       | |     | |   `-DeclRefExpr 0x159008fb8 <col:4> 'char' lvalue Var 0x1589284f0 'buf' 'char'       | |     | `-ImplicitCastExpr 0x159009038 <col:8> 'int' <LValueToRValue>       | |     |   `-DeclRefExpr 0x159009000 <col:8> 'int' lvalue Var 0x158928588 'i' 'int'       | |     `-DeclRefExpr 0x159009070 <col:13> 'int' lvalue Var 0x159008bc8 'data' 'int'       | `-IfStmt 0x1590092b0 <line:31:7, line:35:2>       |   |-BinaryOperator 0x159009168 <line:31:11, col:15> 'int' '>'       |   | |-ImplicitCastExpr 0x159009150 <col:11> 'int' <LValueToRValue>       |   | | `-DeclRefExpr 0x159009110 <col:11> 'int' lvalue Var 0x158928588 'i' 'int'       |   | `-IntegerLiteral 0x159009130 <col:15> 'int' 0       |   `-CompoundStmt 0x1590092a0 <line:32:2, line:35:2>       `-RecoveryExpr 0x1590092f8 <line:37:10, col:12> '_Bool' contains-errors ","20176":"`-FunctionDecl 0x12900e108  line:1:3 invalid Item_ref_null_helper 'int (int *, int *, int *, int **, const char *, const char *)'   |-ParmVarDecl 0x12900dd28 <col:24, col:29> col:29 invalid thd 'int *'   |-ParmVarDecl 0x12900dda8 <col:34, col:59> col:59 invalid context_arg 'int *'   |-ParmVarDecl 0x12900de28 <line:2:24, col:43> col:43 invalid master 'int *'   |-ParmVarDecl 0x12900dee0 <col:51, col:58> col:58 invalid item 'int **'   |-ParmVarDecl 0x12900df60 <line:3:10, col:22> col:22 table_name_arg 'const char *'   |-ParmVarDecl 0x12900dfe0 <col:38, col:50> col:50 field_name_arg 'const char *'   `-CompoundStmt 0x12900e1e0 <line:5:19, col:20> ","19235":"`-FunctionDecl 0x132941c18  col:9 implicit used strtoul 'unsigned long (const char *, char **, int)' extern   |-ParmVarDecl 0x132941d18 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x132941d80 <<invalid sloc>> <invalid sloc> 'char **'   |-ParmVarDecl 0x132941de8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x132941cc0 <<invalid sloc>> Implicit 879 ","19433":"`-FunctionDecl 0x12d81f438  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x12d81f358 <col:8> col:8 EncryptionUtilTest 'int'   |-ParmVarDecl 0x12d81f2d8 <col:28> col:28 sm4_test_by_case 'int'   `-CompoundStmt 0x12d844dc0 <col:46, line:27:1>     |-RecoveryExpr 0x12d81f580 <line:2:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12d81f5d0 <line:4:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12d81f620 <line:7:5> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12d8447b0 <line:8:5, col:83>     | `-VarDecl 0x12d81f658 <col:5, col:82> col:9 length_1 'int' cinit     |   `-CallExpr 0x12d844778 <col:20, col:82> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12d81f7d0 <col:20> 'int ()' Function 0x12d81f718 'base64_decode' 'int ()'     |     |-CallExpr 0x12d844648 <col:34, col:47> '<dependent type>' contains-errors     |     | `-CXXDependentScopeMemberExpr 0x12d844600 <col:34, col:41> '<dependent type>' contains-errors lvalue .c_str     |     |   `-RecoveryExpr 0x12d81f9a8 <col:34> '<dependent type>' contains-errors lvalue     |     |-CallExpr 0x12d8446d0 <col:50, col:64> '<dependent type>' contains-errors     |     | `-CXXDependentScopeMemberExpr 0x12d844688 <col:50, col:57> '<dependent type>' contains-errors lvalue .length     |     |   `-RecoveryExpr 0x12d844668 <col:50> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x12d844758 <col:67, col:81> '<dependent type>' contains-errors     |       `-CXXDependentScopeMemberExpr 0x12d844710 <col:67, col:77> '<dependent type>' contains-errors lvalue .get     |         `-RecoveryExpr 0x12d8446f0 <col:67> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12d8447f8 <line:9:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12d844848 <line:10:5> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12d8448e8 <line:11:5, line:13:93>     | `-VarDecl 0x12d844880 <line:11:5, col:9> col:9 used ret_code 'int'     |-CallExpr 0x12d844ac8 <line:14:5, col:29> 'int'     | |-ImplicitCastExpr 0x12d844ab0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d8449e0 <col:5> 'int ()' Function 0x12d844928 'ASSERT_TRUE' 'int ()'     | `-BinaryOperator 0x12d844a58 <col:17, col:28> 'int' '>'     |   |-ImplicitCastExpr 0x12d844a40 <col:17> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x12d844a00 <col:17> 'int' lvalue Var 0x12d844880 'ret_code' 'int'     |   `-IntegerLiteral 0x12d844a20 <col:28> 'int' 0     |-DeclStmt 0x12d844c90 <line:19:5, col:83>     | `-VarDecl 0x12d844c08 <col:5, col:9> col:9 length_2 'int'     `-CallExpr 0x12d844d78 <line:24:5, col:29> 'int'       |-ImplicitCastExpr 0x12d844d60 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12d844cc8 <col:5> 'int ()' Function 0x12d844928 'ASSERT_TRUE' 'int ()'       `-BinaryOperator 0x12d844d40 <col:17, col:28> 'int' '>'         |-ImplicitCastExpr 0x12d844d28 <col:17> 'int' <LValueToRValue>         | `-DeclRefExpr 0x12d844ce8 <col:17> 'int' lvalue Var 0x12d844880 'ret_code' 'int'         `-IntegerLiteral 0x12d844d08 <col:28> 'int' 0 ","20180":"`-FunctionDecl 0x1481283a8  line:1:1 invalid compile_tree_empty_check 'int (int *, int *, int, int *)'   |-ParmVarDecl 0x148128128 <col:26, col:32> col:32 invalid node 'int *'   |-ParmVarDecl 0x1481281a8 <col:38, col:47> col:47 referenced invalid reg 'int *'   |-ParmVarDecl 0x148128228 <col:52, col:56> col:56 used empty_info 'int'   |-ParmVarDecl 0x1481282a8 <col:68, col:77> col:77 invalid env 'int *'   `-CompoundStmt 0x1481419f8 <line:2:1, line:28:1>     |-DeclStmt 0x1481284f0 <line:3:3, col:8>     | `-VarDecl 0x148128488 <col:3, col:7> col:7 used r 'int'     |-DeclStmt 0x1481285f0 <line:4:3, col:49>     | `-VarDecl 0x148128520 <col:3, col:35> col:7 used saved_num_null_check 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x1481285a8 <col:30, col:35> '<dependent type>' contains-errors lvalue ->num_null_check     |     `-RecoveryExpr 0x148128588 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140809be8 <line:6:3, line:11:3>     | |-BinaryOperator 0x148128680 <line:6:7, col:21> 'int' contains-errors '!='     | | |-DeclRefExpr 0x148128608 <col:7> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'     | | `-RecoveryExpr 0x148128660 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140809bb8 <col:40, line:11:3>     |   |-BinaryOperator 0x1408097b0 <line:7:5, col:41> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1481286a0 <col:5> 'int' lvalue Var 0x148128488 'r' 'int'     |   | `-CallExpr 0x140809780 <col:9, col:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1408096b8 <col:9> 'int ()' Function 0x140809600 'add_op' 'int ()'     |   |   |-RecoveryExpr 0x1408096d8 <col:16> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x140809760 <col:21> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x140809890 <line:8:5, col:24>     |   | |-BinaryOperator 0x140809828 <col:9, col:14> 'int' '!='     |   | | |-ImplicitCastExpr 0x140809810 <col:9> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1408097d0 <col:9> 'int' lvalue Var 0x148128488 'r' 'int'     |   | | `-IntegerLiteral 0x1408097f0 <col:14> 'int' 0     |   | `-ReturnStmt 0x140809880 <col:17, col:24>     |   |   `-ImplicitCastExpr 0x140809868 <col:24> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x140809848 <col:24> 'int' lvalue Var 0x148128488 'r' 'int'     |   |-BinaryOperator 0x140809af0 <line:9:5, col:44> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x140809a40 <col:5, col:33> '<dependent type>' contains-errors lvalue .mem     |   | | `-CXXDependentScopeMemberExpr 0x1408099f8 <col:5, col:15> '<dependent type>' contains-errors lvalue ->empty_check_start     |   | |   `-CallExpr 0x1408099d0 <col:5, col:12> '<dependent type>' contains-errors     |   | |     |-DeclRefExpr 0x140809990 <col:5> 'int ()' Function 0x1408098d8 'COP' 'int ()'     |   | |     `-RecoveryExpr 0x1408099b0 <col:9> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x140809aa8 <col:39, col:44> '<dependent type>' contains-errors lvalue ->num_null_check     |   |   `-RecoveryExpr 0x140809a88 <col:39> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x140809ba0 <line:10:5, col:24> '<dependent type>' contains-errors postfix '++' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x140809b58 <col:5, col:10> '<dependent type>' contains-errors lvalue ->num_null_check     |       `-RecoveryExpr 0x140809b30 <col:5> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x140809b10 <col:5> 'int *' lvalue ParmVar 0x1481281a8 'reg' 'int *'     |-BinaryOperator 0x140809dc0 <line:13:3, col:34> 'int' contains-errors '='     | |-DeclRefExpr 0x140809c08 <col:3> 'int' lvalue Var 0x148128488 'r' 'int'     | `-CallExpr 0x140809d88 <col:7, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x140809d08 <col:7> 'int ()' Function 0x140809c50 'compile_tree' 'int ()'     |   |-RecoveryExpr 0x140809d28 <col:20> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x140809d48 <col:26> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x140809d68 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140809ea0 <line:14:3, col:22>     | |-BinaryOperator 0x140809e38 <col:7, col:12> 'int' '!='     | | |-ImplicitCastExpr 0x140809e20 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x140809de0 <col:7> 'int' lvalue Var 0x148128488 'r' 'int'     | | `-IntegerLiteral 0x140809e00 <col:12> 'int' 0     | `-ReturnStmt 0x140809e90 <col:15, col:22>     |   `-ImplicitCastExpr 0x140809e78 <col:22> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x140809e58 <col:22> 'int' lvalue Var 0x148128488 'r' 'int'     |-IfStmt 0x148141990 <line:16:3, line:26:3>     | |-BinaryOperator 0x140809f38 <line:16:7, col:21> 'int' contains-errors '!='     | | |-DeclRefExpr 0x140809ec0 <col:7> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'     | | `-RecoveryExpr 0x140809f18 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x148141968 <col:40, line:26:3>     |   |-IfStmt 0x14080a518 <line:17:5, line:22:52> has_else     |   | |-BinaryOperator 0x140809fd0 <line:17:9, col:23> 'int' contains-errors '=='     |   | | |-DeclRefExpr 0x140809f58 <col:9> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'     |   | | `-RecoveryExpr 0x140809fb0 <col:23> '<dependent type>' contains-errors lvalue     |   | |-BinaryOperator 0x14080a108 <line:18:7, col:41> 'int' contains-errors '='     |   | | |-DeclRefExpr 0x140809ff0 <col:7> 'int' lvalue Var 0x148128488 'r' 'int'     |   | | `-CallExpr 0x14080a0d8 <col:11, col:41> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x14080a010 <col:11> 'int ()' Function 0x140809600 'add_op' 'int ()'     |   | |   |-RecoveryExpr 0x14080a030 <col:18> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x14080a0b8 <col:23> '<dependent type>' contains-errors lvalue     |   | `-IfStmt 0x14080a4e8 <line:19:10, line:22:52> has_else     |   |   |-BinaryOperator 0x14080a1a0 <line:19:14, col:28> 'int' contains-errors '=='     |   |   | |-DeclRefExpr 0x14080a128 <col:14> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'     |   |   | `-RecoveryExpr 0x14080a180 <col:28> '<dependent type>' contains-errors lvalue     |   |   |-BinaryOperator 0x14080a2d8 <line:20:7, col:47> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x14080a1c0 <col:7> 'int' lvalue Var 0x148128488 'r' 'int'     |   |   | `-CallExpr 0x14080a2a8 <col:11, col:47> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x14080a1e0 <col:11> 'int ()' Function 0x140809600 'add_op' 'int ()'     |   |   |   |-RecoveryExpr 0x14080a200 <col:18> '<dependent type>' contains-errors lvalue     |   |   |   `-RecoveryExpr 0x14080a288 <col:23> '<dependent type>' contains-errors lvalue     |   |   `-IfStmt 0x14080a4c8 <line:21:10, line:22:52>     |   |     |-BinaryOperator 0x14080a370 <line:21:14, col:28> 'int' contains-errors '=='     |   |     | |-DeclRefExpr 0x14080a2f8 <col:14> 'int' lvalue ParmVar 0x148128228 'empty_info' 'int'     |   |     | `-RecoveryExpr 0x14080a350 <col:28> '<dependent type>' contains-errors lvalue     |   |     `-BinaryOperator 0x14080a4a8 <line:22:7, col:52> 'int' contains-errors '='     |   |       |-DeclRefExpr 0x14080a390 <col:7> 'int' lvalue Var 0x148128488 'r' 'int'     |   |       `-CallExpr 0x14080a478 <col:11, col:52> '<dependent type>' contains-errors     |   |         |-DeclRefExpr 0x14080a3b0 <col:11> 'int ()' Function 0x140809600 'add_op' 'int ()'     |   |         |-RecoveryExpr 0x14080a3d0 <col:18> '<dependent type>' contains-errors lvalue     |   |         `-RecoveryExpr 0x14080a458 <col:23> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x148141810 <line:24:5, col:24>     |   | |-BinaryOperator 0x14080a5a0 <col:9, col:14> 'int' '!='     |   | | |-ImplicitCastExpr 0x14080a588 <col:9> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x14080a548 <col:9> 'int' lvalue Var 0x148128488 'r' 'int'     |   | | `-IntegerLiteral 0x14080a568 <col:14> 'int' 0     |   | `-ReturnStmt 0x148141800 <col:17, col:24>     |   |   `-ImplicitCastExpr 0x14080a5e0 <col:24> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x14080a5c0 <col:24> 'int' lvalue Var 0x148128488 'r' 'int'     |   `-BinaryOperator 0x148141948 <line:25:5, col:37> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x1481418e0 <col:5, col:31> '<dependent type>' contains-errors lvalue .mem     |     | `-CXXDependentScopeMemberExpr 0x148141898 <col:5, col:15> '<dependent type>' contains-errors lvalue ->empty_check_end     |     |   `-CallExpr 0x148141870 <col:5, col:12> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x148141830 <col:5> 'int ()' Function 0x1408098d8 'COP' 'int ()'     |     |     `-RecoveryExpr 0x148141850 <col:9> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148141928 <col:37> 'int' contains-errors lvalue Var 0x148128520 'saved_num_null_check' 'int'     `-ReturnStmt 0x1481419e8 <line:27:3, col:10>       `-ImplicitCastExpr 0x1481419d0 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x1481419b0 <col:10> 'int' lvalue Var 0x148128488 'r' 'int' ","20160":"`-FunctionDecl 0x15200dda8  line:1:13 invalid dangerous_hardlinks 'int (void)' static   `-CompoundStmt 0x152028550 <col:39, line:25:1>     |-DeclStmt 0x15200df08 <line:3:9, col:31>     | `-VarDecl 0x15200de68 <col:9, col:30> col:20 used cached 'int' static cinit     |   `-UnaryOperator 0x15200def0 <col:29, col:30> 'int' prefix '-'     |     `-IntegerLiteral 0x15200ded0 <col:30> 'int' 1     |-DeclStmt 0x15200dfa0 <line:4:9, col:14>     | `-VarDecl 0x15200df38 <col:9, col:13> col:13 used r 'int'     |-IfStmt 0x15200e078 <line:8:9, line:9:24>     | |-BinaryOperator 0x15200e010 <line:8:13, col:23> 'int' '>='     | | |-ImplicitCastExpr 0x15200dff8 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15200dfb8 <col:13> 'int' lvalue Var 0x15200de68 'cached' 'int'     | | `-IntegerLiteral 0x15200dfd8 <col:23> 'int' 0     | `-ReturnStmt 0x15200e068 <line:9:17, col:24>     |   `-ImplicitCastExpr 0x15200e050 <col:24> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x15200e030 <col:24> 'int' lvalue Var 0x15200de68 'cached' 'int'     |-BinaryOperator 0x15200e378 <line:11:9, col:45> 'int' contains-errors '='     | |-DeclRefExpr 0x15200e098 <col:9> 'int' lvalue Var 0x15200df38 'r' 'int'     | `-CallExpr 0x15200e348 <col:13, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15200e210 <col:13> 'int ()' Function 0x15200e158 'read_one_line_file' 'int ()'     |   |-StringLiteral 0x15200e270 <col:32> 'char[4]' lvalue \"STR\"     |   `-UnaryOperator 0x15200e330 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15200e310 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152028070 <line:12:9, line:15:9>     | |-BinaryOperator 0x152027e00 <line:12:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x15200e3d8 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15200e398 <col:13> 'int' lvalue Var 0x15200df38 'r' 'int'     | | `-IntegerLiteral 0x15200e3b8 <col:17> 'int' 0     | `-CompoundStmt 0x152028050 <col:20, line:15:9>     |   |-CallExpr 0x152027fa8 <line:13:17, col:41> 'int'     |   | |-ImplicitCastExpr 0x152027f90 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x152027f00 <col:17> 'int ()' Function 0x152027e48 'log_debug_errno' 'int ()'     |   | |-ImplicitCastExpr 0x152027fd8 <col:33> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x152027f20 <col:33> 'int' lvalue Var 0x15200df38 'r' 'int'     |   | `-ImplicitCastExpr 0x152027ff0 <col:36> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x152027f40 <col:36> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x152028040 <line:14:17, col:24>     |     `-RecoveryExpr 0x152028020 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x152028258 <line:17:9, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x152028090 <col:9> 'int' lvalue Var 0x15200df38 'r' 'int'     | `-CallExpr 0x152028230 <col:13, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152028190 <col:13> 'int ()' Function 0x1520280d8 'parse_boolean' 'int ()'     |   `-RecoveryExpr 0x152028210 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152028430 <line:18:9, line:21:9>     | |-BinaryOperator 0x1520282d0 <line:18:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x1520282b8 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x152028278 <col:13> 'int' lvalue Var 0x15200df38 'r' 'int'     | | `-IntegerLiteral 0x152028298 <col:17> 'int' 0     | `-CompoundStmt 0x152028410 <col:20, line:21:9>     |   |-CallExpr 0x152028368 <line:19:17, col:41> 'int'     |   | |-ImplicitCastExpr 0x152028350 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1520282f0 <col:17> 'int ()' Function 0x152027e48 'log_debug_errno' 'int ()'     |   | |-ImplicitCastExpr 0x152028398 <col:33> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x152028310 <col:33> 'int' lvalue Var 0x15200df38 'r' 'int'     |   | `-ImplicitCastExpr 0x1520283b0 <col:36> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x152028330 <col:36> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x152028400 <line:20:17, col:24>     |     `-RecoveryExpr 0x1520283e0 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1520284e8 <line:23:9, col:23> 'int' '='     | |-DeclRefExpr 0x152028450 <col:9> 'int' lvalue Var 0x15200de68 'cached' 'int'     | `-BinaryOperator 0x1520284c8 <col:18, col:23> 'int' '=='     |   |-ImplicitCastExpr 0x1520284b0 <col:18> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x152028470 <col:18> 'int' lvalue Var 0x15200df38 'r' 'int'     |   `-IntegerLiteral 0x152028490 <col:23> 'int' 0     `-ReturnStmt 0x152028540 <line:24:9, col:16>       `-ImplicitCastExpr 0x152028528 <col:16> 'int' <LValueToRValue>         `-DeclRefExpr 0x152028508 <col:16> 'int' lvalue Var 0x15200de68 'cached' 'int' ","19175":"`-FunctionDecl 0x1288084b8  line:1:1 invalid strncat_from_utf8_libarchive2 'int (struct archive_string *, const void *, int, struct archive_string_conv *)'   |-ParmVarDecl 0x12800e248 <col:31, col:54> col:54 used as 'struct archive_string *'   |-ParmVarDecl 0x12800e2f8 <line:2:5, col:17> col:17 used _p 'const void *'   |-ParmVarDecl 0x12800e390 <col:21, col:28> col:28 referenced invalid len 'int'   |-ParmVarDecl 0x128808368 <col:33, col:61> col:61 used sc 'struct archive_string_conv *'   `-CompoundStmt 0x12880ac50 <line:3:1, line:60:1>     |-DeclStmt 0x128808600 <line:4:2, col:15>     | `-VarDecl 0x128808598 <col:2, col:14> col:14 used s 'const char *'     |-DeclStmt 0x128808698 <line:5:2, col:7>     | `-VarDecl 0x128808630 <col:2, col:6> col:6 used n 'int'     |-DeclStmt 0x128808730 <line:6:2, col:9>     | `-VarDecl 0x1288086c8 <col:2, col:8> col:8 used p 'char *'     |-DeclStmt 0x1288087c8 <line:7:2, col:11>     | `-VarDecl 0x128808760 <col:2, col:8> col:8 used end 'char *'     |-CallExpr 0x1288089e0 <line:15:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128808940 <col:2> 'int ()' Function 0x128808888 'wctomb' 'int ()'     | |-RecoveryExpr 0x1288089c0 <col:9> '<dependent type>' contains-errors lvalue     | `-CharacterLiteral 0x128808978 <col:15> 'int' 0     |-CStyleCastExpr 0x128808a58 <line:17:2, col:8> 'void' <ToVoid>     | `-ImplicitCastExpr 0x128808a40 <col:8> 'struct archive_string_conv *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x128808a10 <col:8> 'struct archive_string_conv *' lvalue ParmVar 0x128808368 'sc' 'struct archive_string_conv *'     |-IfStmt 0x128808d90 <line:19:2, line:20:13>     | |-BinaryOperator 0x128808d08 <line:19:6, col:57> 'int' contains-errors '=='     | | |-CallExpr 0x128808c80 <col:6, col:52> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x128808b60 <col:6> 'int ()' Function 0x128808aa8 'archive_string_ensure' 'int ()'     | | | |-DeclRefExpr 0x128808b80 <col:28> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     | | | `-BinaryOperator 0x128808c60 <col:32, col:51> '<dependent type>' contains-errors '+'     | | |   |-BinaryOperator 0x128808c20 <col:32, col:45> '<dependent type>' contains-errors '+'     | | |   | |-RecoveryExpr 0x128808bd8 <col:32, col:36> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x128808ba0 <col:32> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     | | |   | `-RecoveryExpr 0x128808c00 <col:45> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x128808c40 <col:51> 'int' 1     | | `-RecoveryExpr 0x128808ce8 <col:57> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x128808d80 <line:20:3, col:13>     |   `-ParenExpr 0x128808d60 <col:10, col:13> 'int'     |     `-UnaryOperator 0x128808d48 <col:11, col:12> 'int' prefix '-'     |       `-IntegerLiteral 0x128808d28 <col:12> 'int' 1     |-BinaryOperator 0x128808e48 <line:22:2, col:20> 'const char *' '='     | |-DeclRefExpr 0x128808db0 <col:2> 'const char *' lvalue Var 0x128808598 's' 'const char *'     | `-CStyleCastExpr 0x128808e20 <col:6, col:20> 'const char *' <BitCast>     |   `-ImplicitCastExpr 0x128808e08 <col:20> 'const void *' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x128808dd0 <col:20> 'const void *' lvalue ParmVar 0x12800e2f8 '_p' 'const void *'     |-BinaryOperator 0x128808f68 <line:23:2, col:18> 'char *' contains-errors '='     | |-DeclRefExpr 0x128808e68 <col:2> 'char *' lvalue Var 0x1288086c8 'p' 'char *'     | `-BinaryOperator 0x128808f48 <col:6, col:18> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x128808ec0 <col:6, col:10> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x128808e88 <col:6> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   `-RecoveryExpr 0x128808f20 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x128808ee8 <col:14> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |-BinaryOperator 0x128809180 <line:24:2, col:48> 'char *' contains-errors '='     | |-DeclRefExpr 0x128808f88 <col:2> 'char *' lvalue Var 0x128808760 'end' 'char *'     | `-BinaryOperator 0x128809160 <col:8, col:48> '<dependent type>' contains-errors '-'     |   |-BinaryOperator 0x128809140 <col:8, col:36> '<dependent type>' contains-errors '-'     |   | |-BinaryOperator 0x128809068 <col:8, col:20> '<dependent type>' contains-errors '+'     |   | | |-RecoveryExpr 0x128808fe0 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x128808fa8 <col:8> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   | | `-RecoveryExpr 0x128809040 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x128809008 <col:16> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   | `-RecoveryExpr 0x128809120 <col:36> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1288090c0 <col:48> 'int' 1     |-WhileStmt 0x128809f70 <line:25:2, line:56:2>     | |-RecoveryExpr 0x1288093c0 <line:25:9, col:53> '_Bool' contains-errors     | `-CompoundStmt 0x128809f30 <col:56, line:56:2>     |   |-IfStmt 0x128809a88 <line:28:3, line:36:3>     |   | |-BinaryOperator 0x128809450 <line:28:7, col:12> 'int' '>='     |   | | |-ImplicitCastExpr 0x128809420 <col:7> 'char *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x1288093e0 <col:7> 'char *' lvalue Var 0x1288086c8 'p' 'char *'     |   | | `-ImplicitCastExpr 0x128809438 <col:12> 'char *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x128809400 <col:12> 'char *' lvalue Var 0x128808760 'end' 'char *'     |   | `-CompoundStmt 0x128809a60 <col:17, line:36:3>     |   |   |-BinaryOperator 0x128809570 <line:29:4, col:25> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x1288094a8 <col:4, col:8> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x128809470 <col:4> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   |   | `-BinaryOperator 0x128809550 <col:17, col:25> '<dependent type>' contains-errors '-'     |   |   |   |-DeclRefExpr 0x1288094d0 <col:17> 'char *' lvalue Var 0x1288086c8 'p' 'char *'     |   |   |   `-RecoveryExpr 0x128809528 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x1288094f0 <col:21> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   |   |-IfStmt 0x128809800 <line:31:4, line:33:15>     |   |   | |-BinaryOperator 0x128809778 <line:31:8, line:32:37> 'int' contains-errors '=='     |   |   | | |-CallExpr 0x1288096f0 <line:31:8, line:32:32> '<dependent type>' contains-errors     |   |   | | | |-DeclRefExpr 0x128809590 <line:31:8> 'int ()' Function 0x128808aa8 'archive_string_ensure' 'int ()'     |   |   | | | |-DeclRefExpr 0x1288095b0 <col:30> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   |   | | | `-BinaryOperator 0x1288096d0 <line:32:8, col:31> '<dependent type>' contains-errors '+'     |   |   | | |   |-BinaryOperator 0x128809690 <col:8, col:27> '<dependent type>' contains-errors '+'     |   |   | | |   | |-RecoveryExpr 0x128809608 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   |   | | |   | | `-DeclRefExpr 0x1288095d0 <col:8> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   |   | | |   | `-BinaryOperator 0x128809670 <col:21, col:27> '<dependent type>' contains-errors '*'     |   |   | | |   |   |-RecoveryExpr 0x128809630 <col:21> '<dependent type>' contains-errors lvalue     |   |   | | |   |   `-IntegerLiteral 0x128809650 <col:27> 'int' 2     |   |   | | |   `-IntegerLiteral 0x1288096b0 <col:31> 'int' 1     |   |   | | `-RecoveryExpr 0x128809758 <col:37> '<dependent type>' contains-errors lvalue     |   |   | `-ReturnStmt 0x1288097f0 <line:33:5, col:15>     |   |   |   `-ParenExpr 0x1288097d0 <col:12, col:15> 'int'     |   |   |     `-UnaryOperator 0x1288097b8 <col:13, col:14> 'int' prefix '-'     |   |   |       `-IntegerLiteral 0x128809798 <col:14> 'int' 1     |   |   `-BinaryOperator 0x128809920 <line:34:4, col:20> 'char *' contains-errors '='     |   |     |-DeclRefExpr 0x128809820 <col:4> 'char *' lvalue Var 0x1288086c8 'p' 'char *'     |   |     `-BinaryOperator 0x128809900 <col:8, col:20> '<dependent type>' contains-errors '+'     |   |       |-RecoveryExpr 0x128809878 <col:8, col:12> '<dependent type>' contains-errors lvalue     |   |       | `-DeclRefExpr 0x128809840 <col:8> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   |       `-RecoveryExpr 0x1288098d8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x1288098a0 <col:16> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |   |-IfStmt 0x128809be0 <line:39:3, line:43:4> has_else     |   | |-BinaryOperator 0x128809b00 <line:39:7, col:11> 'int' '<'     |   | | |-ImplicitCastExpr 0x128809ae8 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x128809aa8 <col:7> 'int' lvalue Var 0x128808630 'n' 'int'     |   | | `-IntegerLiteral 0x128809ac8 <col:11> 'int' 0     |   | |-CompoundStmt 0x128809bc0 <col:14, line:42:3>     |   | | `-CompoundAssignOperator 0x128809b78 <line:40:4, col:10> 'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'     |   | |   |-DeclRefExpr 0x128809b20 <col:4> 'int' lvalue Var 0x128808630 'n' 'int'     |   | |   `-UnaryOperator 0x128809b60 <col:9, col:10> 'int' prefix '-'     |   | |     `-IntegerLiteral 0x128809b40 <col:10> 'int' 1     |   | `-NullStmt 0x128809bd8 <line:43:4>     |   |-CompoundAssignOperator 0x128809c68 <line:45:3, col:8> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   | |-DeclRefExpr 0x128809c10 <col:3> 'const char *' lvalue Var 0x128808598 's' 'const char *'     |   | `-ImplicitCastExpr 0x128809c50 <col:8> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x128809c30 <col:8> 'int' lvalue Var 0x128808630 'n' 'int'     |   |-CompoundAssignOperator 0x128809d00 <line:46:3, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-RecoveryExpr 0x128809cb8 <col:3> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x128809c98 <col:3> 'int' lvalue ParmVar 0x12800e390 'len' 'int'     |   | `-DeclRefExpr 0x128809ce0 <col:10> 'int' lvalue Var 0x128808630 'n' 'int'     |   |-IfStmt 0x128809e88 <line:53:3, line:54:14>     |   | |-BinaryOperator 0x128809e00 <line:53:7, col:13> 'int' '=='     |   | | |-ImplicitCastExpr 0x128809de8 <col:7> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x128809d90 <col:7> 'int' lvalue Var 0x128808630 'n' 'int'     |   | | `-UnaryOperator 0x128809dd0 <col:12, col:13> 'int' prefix '-'     |   | |   `-IntegerLiteral 0x128809db0 <col:13> 'int' 1     |   | `-ReturnStmt 0x128809e78 <line:54:4, col:14>     |   |   `-ParenExpr 0x128809e58 <col:11, col:14> 'int'     |   |     `-UnaryOperator 0x128809e40 <col:12, col:13> 'int' prefix '-'     |   |       `-IntegerLiteral 0x128809e20 <col:13> 'int' 1     |   `-CompoundAssignOperator 0x128809f00 <line:55:3, col:8> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |     |-DeclRefExpr 0x128809ea8 <col:3> 'char *' lvalue Var 0x1288086c8 'p' 'char *'     |     `-ImplicitCastExpr 0x128809ee8 <col:8> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x128809ec8 <col:8> 'int' lvalue Var 0x128808630 'n' 'int'     |-BinaryOperator 0x12880a090 <line:57:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x128809fc8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x128809f90 <col:2> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     | `-BinaryOperator 0x12880a070 <col:15, col:23> '<dependent type>' contains-errors '-'     |   |-DeclRefExpr 0x128809ff0 <col:15> 'char *' lvalue Var 0x1288086c8 'p' 'char *'     |   `-RecoveryExpr 0x12880a048 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12880a010 <col:19> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     |-BinaryOperator 0x12880a1d8 <line:58:2, col:22> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x12880a1a0 <col:2, col:18> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x12880a170 <col:2, col:6> '<dependent type>' contains-errors <LValueToRValue>     | | | `-RecoveryExpr 0x12880a0e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x12880a0b0 <col:2> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     | | `-ImplicitCastExpr 0x12880a188 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12880a148 <col:8, col:12> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12880a110 <col:8> 'struct archive_string *' lvalue ParmVar 0x12800e248 'as' 'struct archive_string *'     | `-CharacterLiteral 0x12880a1c0 <col:22> 'int' 0     `-ReturnStmt 0x12880ac40 <line:59:2, col:11>       `-ParenExpr 0x12880ac20 <col:9, col:11> 'int'         `-IntegerLiteral 0x12880ac00 <col:10> 'int' 0 ","19905":"`-FunctionDecl 0x133144e98  line:1:5 invalid ocfs2_extend_no_holes 'int (struct inode *, struct buffer_head *, int, int)'   |-ParmVarDecl 0x133128648 <col:27, col:41> col:41 used inode 'struct inode *'   |-ParmVarDecl 0x133144c28 <col:48, col:68> col:68 used di_bh 'struct buffer_head *'   |-ParmVarDecl 0x133144cc0 <line:2:6, col:10> col:10 invalid new_i_size 'int'   |-ParmVarDecl 0x133144d40 <col:22, col:26> col:26 invalid zero_to 'int'   `-CompoundStmt 0x133147178 <line:3:1, line:34:1>     |-DeclStmt 0x133144fe0 <line:4:2, col:9>     | `-VarDecl 0x133144f78 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x133145428 <line:6:2, col:46>     | |-RecordDecl 0x133144ff8 <col:2, col:9> col:9 struct ocfs2_inode_info     | `-VarDecl 0x133145168 <col:2, col:45> col:27 used oi 'struct ocfs2_inode_info *' cinit     |   `-ImplicitCastExpr 0x1331453f8 <col:32, col:45> 'struct ocfs2_inode_info *' <IntegralToPointer>     |     `-CallExpr 0x1331453b8 <col:32, col:45> 'int'     |       |-ImplicitCastExpr 0x1331453a0 <col:32> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x133145330 <col:32> 'int ()' Function 0x133145278 'OCFS2_I' 'int ()'     |       `-ImplicitCastExpr 0x1331453e0 <col:40> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x133145350 <col:40> 'struct inode *' lvalue ParmVar 0x133128648 'inode' 'struct inode *'     |-CallExpr 0x133145740 <line:9:2, col:49> 'int'     | |-ImplicitCastExpr 0x133145728 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x133145520 <col:2> 'int ()' Function 0x133145468 'BUG_ON' 'int ()'     | `-BinaryOperator 0x133145708 <col:9, col:48> 'int' '&&'     |   |-UnaryOperator 0x133145578 <col:9, col:10> 'int' prefix '!' cannot overflow     |   | `-ImplicitCastExpr 0x133145560 <col:10> 'struct buffer_head *' <LValueToRValue>     |   |   `-DeclRefExpr 0x133145540 <col:10> 'struct buffer_head *' lvalue ParmVar 0x133144c28 'di_bh' 'struct buffer_head *'     |   `-CallExpr 0x1331456c8 <col:19, col:48> 'int'     |     |-ImplicitCastExpr 0x1331456b0 <col:19> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x133145670 <col:19> 'int ()' Function 0x1331455b8 'ocfs2_is_refcount_inode' 'int ()'     |     `-ImplicitCastExpr 0x1331456f0 <col:43> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x133145690 <col:43> 'struct inode *' lvalue ParmVar 0x133128648 'inode' 'struct inode *'     |-IfStmt 0x133146de8 <line:18:2, line:25:2>     | |-RecoveryExpr 0x133145b90 <line:18:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133146dd0 <col:23, line:25:2>     |   `-IfStmt 0x133146db0 <line:21:3, line:24:3>     |     |-ImplicitCastExpr 0x133146b98 <line:21:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x133146b78 <col:7> 'int' lvalue Var 0x133144f78 'ret' 'int'     |     `-CompoundStmt 0x133146d90 <col:12, line:24:3>     |       |-CallExpr 0x133146ce8 <line:22:4, col:18> 'int'     |       | |-ImplicitCastExpr 0x133146cd0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x133146c90 <col:4> 'int ()' Function 0x133146bd8 'mlog_errno' 'int ()'     |       | `-ImplicitCastExpr 0x133146d10 <col:15> 'int' <LValueToRValue>     |       |   `-DeclRefExpr 0x133146cb0 <col:15> 'int' lvalue Var 0x133144f78 'ret' 'int'     |       `-GotoStmt 0x133146d78 <line:23:4, col:9> 'out' 0x133146d28     |-BinaryOperator 0x133146fc0 <line:28:2, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x133146e08 <col:2> 'int' lvalue Var 0x133144f78 'ret' 'int'     | `-CallExpr 0x133146f88 <col:8, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133146f08 <col:8> 'int ()' Function 0x133146e50 'ocfs2_zero_extend' 'int ()'     |   |-DeclRefExpr 0x133146f28 <col:26> 'struct inode *' lvalue ParmVar 0x133128648 'inode' 'struct inode *'     |   |-DeclRefExpr 0x133146f48 <col:33> 'struct buffer_head *' lvalue ParmVar 0x133144c28 'di_bh' 'struct buffer_head *'     |   `-RecoveryExpr 0x133146f68 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1331470f0 <line:29:2, line:30:17>     | |-BinaryOperator 0x133147038 <line:29:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x133147020 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x133146fe0 <col:6> 'int' lvalue Var 0x133144f78 'ret' 'int'     | | `-IntegerLiteral 0x133147000 <col:12> 'int' 0     | `-CallExpr 0x1331470b0 <line:30:3, col:17> 'int'     |   |-ImplicitCastExpr 0x133147098 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x133147058 <col:3> 'int ()' Function 0x133146bd8 'mlog_errno' 'int ()'     |   `-ImplicitCastExpr 0x1331470d8 <col:14> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x133147078 <col:14> 'int' lvalue Var 0x133144f78 'ret' 'int'     `-LabelStmt 0x133147158 <line:32:1, line:33:9> 'out'       `-ReturnStmt 0x133147148 <col:2, col:9>         `-ImplicitCastExpr 0x133147130 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x133147110 <col:9> 'int' lvalue Var 0x133144f78 'ret' 'int' ","19509":"`-FunctionDecl 0x154944d28  line:1:1 compat_get_entries 'int (struct net *, struct compat_ip6t_get_entries)'   |-ParmVarDecl 0x154928648 <col:20, col:32> col:32 used net 'struct net *'   |-ParmVarDecl 0x154944c00 <col:37, col:68> col:68 invalid __user 'struct compat_ip6t_get_entries'   `-CompoundStmt 0x15494a700 <line:3:1, line:45:1>     |-DeclStmt 0x154944ea8 <line:4:2, col:9>     | `-VarDecl 0x154944e40 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x154944f78 <line:5:2, col:36>     | `-VarDecl 0x154944f10 <col:2, col:33> col:33 invalid get 'struct compat_ip6t_get_entries'     |-DeclStmt 0x154945178 <line:6:2, col:20>     | |-RecordDecl 0x154944f90 <col:2, col:9> col:9 struct xt_table     | `-VarDecl 0x1549450f8 <col:2, col:19> col:19 used t 'struct xt_table *'     |-IfStmt 0x1549456a0 <line:8:2, line:11:2>     | |-BinaryOperator 0x1549452c0 <line:8:6, col:23> 'int' contains-errors '<'     | | |-UnaryOperator 0x1549452a8 <col:6, col:7> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x154945290 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x154945270 <col:7> '<dependent type>' contains-errors lvalue     | | `-UnaryExprOrTypeTraitExpr 0x154945230 <col:13, col:23> 'unsigned long' contains-errors sizeof     | |   `-ParenExpr 0x154945210 <col:19, col:23> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x1549451f0 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x154945680 <col:26, line:11:2>     |   |-CallExpr 0x1549455a0 <line:9:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1549453f0 <col:3> 'int ()' Function 0x154945338 'duprintf' 'int ()'     |   | |-StringLiteral 0x154945450 <col:12> 'char[4]' lvalue \"STR\"     |   | |-UnaryOperator 0x154945588 <col:19, col:20> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x154945570 <col:20> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x154945550 <col:20> '<dependent type>' contains-errors lvalue     |   | `-UnaryExprOrTypeTraitExpr 0x1549454f8 <col:25, col:35> 'unsigned long' contains-errors sizeof     |   |   `-ParenExpr 0x1549454d8 <col:31, col:35> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x1549454b8 <col:32> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x154945670 <line:10:3, col:11>     |     `-UnaryOperator 0x154945658 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x154945640 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x154945620 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154945a08 <line:13:2, line:14:11>     | |-BinaryOperator 0x154945940 <line:13:6, col:49> 'int' contains-errors '!='     | | |-CallExpr 0x154945908 <col:6, col:44> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1549457a0 <col:6> 'int ()' Function 0x1549456e8 'copy_from_user' 'int ()'     | | | |-UnaryOperator 0x1549457e0 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x1549457c0 <col:22> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x1549458e8 <col:27> '<dependent type>' contains-errors lvalue     | | | `-UnaryExprOrTypeTraitExpr 0x154945850 <col:33, col:43> 'unsigned long' contains-errors sizeof     | | |   `-ParenExpr 0x154945830 <col:39, col:43> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x154945810 <col:40> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1549458a8 <col:49> 'int' 0     | `-ReturnStmt 0x1549459f8 <line:14:3, col:11>     |   `-UnaryOperator 0x1549459e0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1549459c8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1549459a8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154948410 <line:16:2, line:20:2>     | |-RecoveryExpr 0x154945af8 <line:16:6, col:59> '_Bool' contains-errors     | `-CompoundStmt 0x1549483f0 <col:65, line:20:2>     |   |-CallExpr 0x154948310 <line:17:3, line:18:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x154945b18 <line:17:3> 'int ()' Function 0x154945338 'duprintf' 'int ()'     |   | |-StringLiteral 0x154945b38 <col:12> 'char[4]' lvalue \"STR\"     |   | |-UnaryOperator 0x1549482f8 <line:18:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x1549482e0 <col:6> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x1549482c0 <col:6> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x154948268 <col:11, col:29> '<dependent type>' contains-errors '+'     |   |   |-UnaryExprOrTypeTraitExpr 0x154945be0 <col:11, col:21> 'unsigned long' contains-errors sizeof     |   |   | `-ParenExpr 0x154945bc0 <col:17, col:21> '<dependent type>' contains-errors lvalue     |   |   |   `-RecoveryExpr 0x154945ba0 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-CXXDependentScopeMemberExpr 0x154948220 <col:25, col:29> '<dependent type>' contains-errors lvalue .size     |   |     `-RecoveryExpr 0x154948200 <col:25> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x1549483e0 <line:19:3, col:11>     |     `-UnaryOperator 0x1549483c8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1549483b0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x154948390 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x154948590 <line:22:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154948510 <col:2> 'int ()' Function 0x154948458 'xt_compat_lock' 'int ()'     | `-RecoveryExpr 0x154948570 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154948828 <line:23:2, col:48> 'struct xt_table *' contains-errors '='     | |-DeclRefExpr 0x1549485b8 <col:2> 'struct xt_table *' lvalue Var 0x1549450f8 't' 'struct xt_table *'     | `-CallExpr 0x1549487f0 <col:6, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1549486b8 <col:6> 'int ()' Function 0x154948600 'xt_find_table_lock' 'int ()'     |   |-DeclRefExpr 0x1549486d8 <col:25> 'struct net *' lvalue ParmVar 0x154928648 'net' 'struct net *'     |   |-RecoveryExpr 0x1549487d0 <col:30> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x154948730 <col:40, col:44> '<dependent type>' contains-errors lvalue .name     |     `-RecoveryExpr 0x154948710 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15494a588 <line:24:2, line:41:3> has_else     | |-BinaryOperator 0x154948a48 <line:24:6, col:20> 'int' '&&'     | | |-ImplicitCastExpr 0x154948a30 <col:6> 'struct xt_table *' <LValueToRValue>     | | | `-DeclRefExpr 0x154948848 <col:6> 'struct xt_table *' lvalue Var 0x1549450f8 't' 'struct xt_table *'     | | `-UnaryOperator 0x154948a18 <col:11, col:20> 'int' prefix '!' cannot overflow     | |   `-CallExpr 0x1549489d8 <col:12, col:20> 'int'     | |     |-ImplicitCastExpr 0x1549489c0 <col:12> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x154948948 <col:12> 'int ()' Function 0x154948890 'IS_ERR' 'int ()'     | |     `-ImplicitCastExpr 0x154948a00 <col:19> 'struct xt_table *' <LValueToRValue>     | |       `-DeclRefExpr 0x154948968 <col:19> 'struct xt_table *' lvalue Var 0x1549450f8 't' 'struct xt_table *'     | |-CompoundStmt 0x15494a380 <col:23, line:40:2>     | | |-DeclStmt 0x154948cb8 <line:25:3, col:51>     | | | |-RecordDecl 0x154948a68 <col:9, col:16> col:16 struct xt_table_info     | | | `-VarDecl 0x154948bd8 <col:3, col:44> col:31 used private 'const struct xt_table_info *' cinit     | | |   `-RecoveryExpr 0x154948c78 <col:41, col:44> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x154948c40 <col:41> 'struct xt_table *' lvalue Var 0x1549450f8 't' 'struct xt_table *'     | | |-DeclStmt 0x154948d88 <line:26:3, col:28>     | | | `-VarDecl 0x154948d20 <col:3, col:24> col:24 invalid info 'struct xt_table_info'     | | |-CallExpr 0x154948e40 <line:27:3, col:34> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x154948da0 <col:3> 'int ()' Function 0x154945338 'duprintf' 'int ()'     | | | |-StringLiteral 0x154948dc0 <col:12> 'char[4]' lvalue \"STR\"     | | | `-RecoveryExpr 0x154948e18 <col:19, col:28> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x154948de0 <col:19> 'const struct xt_table_info *' contains-errors lvalue Var 0x154948bd8 'private' 'const struct xt_table_info *'     | | |-BinaryOperator 0x154949018 <line:28:3, col:41> 'int' contains-errors '='     | | | |-DeclRefExpr 0x154948e70 <col:3> 'int' lvalue Var 0x154944e40 'ret' 'int'     | | | `-CallExpr 0x154948fe8 <col:9, col:41> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x154948f70 <col:9> 'int ()' Function 0x154948eb8 'compat_table_info' 'int ()'     | | |   |-DeclRefExpr 0x154948f90 <col:27> 'const struct xt_table_info *' contains-errors lvalue Var 0x154948bd8 'private' 'const struct xt_table_info *'     | | |   `-UnaryOperator 0x154948fd0 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x154948fb0 <col:37> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x154949f50 <line:29:3, line:36:3> has_else     | | | |-BinaryOperator 0x154949178 <line:29:7, col:32> 'int' contains-errors '&&'     | | | | |-UnaryOperator 0x154949070 <col:7, col:8> 'int' prefix '!' cannot overflow     | | | | | `-ImplicitCastExpr 0x154949058 <col:8> 'int' <LValueToRValue>     | | | | |   `-DeclRefExpr 0x154949038 <col:8> 'int' lvalue Var 0x154944e40 'ret' 'int'     | | | | `-BinaryOperator 0x154949158 <col:15, col:32> 'int' contains-errors '=='     | | | |   |-CXXDependentScopeMemberExpr 0x1549490a8 <col:15, col:19> '<dependent type>' contains-errors lvalue .size     | | | |   | `-RecoveryExpr 0x154949088 <col:15> '<dependent type>' contains-errors lvalue     | | | |   `-CXXDependentScopeMemberExpr 0x154949110 <col:27, col:32> '<dependent type>' contains-errors lvalue .size     | | | |     `-RecoveryExpr 0x1549490f0 <col:27> '<dependent type>' contains-errors lvalue     | | | |-CompoundStmt 0x154949d58 <col:38, line:32:3>     | | | `-IfStmt 0x154949f30 <col:10, line:36:3>     | | |   |-UnaryOperator 0x154949da0 <line:32:14, col:15> 'int' prefix '!' cannot overflow     | | |   | `-ImplicitCastExpr 0x154949d88 <col:15> 'int' <LValueToRValue>     | | |   |   `-DeclRefExpr 0x154949d68 <col:15> 'int' lvalue Var 0x154944e40 'ret' 'int'     | | |   `-CompoundStmt 0x154949f18 <col:20, line:36:3>     | | |     `-CallExpr 0x154949ec0 <line:33:4, line:34:29> '<dependent type>' contains-errors     | | |       |-DeclRefExpr 0x154949db8 <line:33:4> 'int ()' Function 0x154945338 'duprintf' 'int ()'     | | |       |-StringLiteral 0x154949dd8 <col:13> 'char[4]' lvalue \"STR\"     | | |       |-RecoveryExpr 0x154949e30 <line:34:6, col:15> '<dependent type>' contains-errors lvalue     | | |       | `-DeclRefExpr 0x154949df8 <col:6> 'const struct xt_table_info *' contains-errors lvalue Var 0x154948bd8 'private' 'const struct xt_table_info *'     | | |       `-CXXDependentScopeMemberExpr 0x154949e78 <col:21, col:25> '<dependent type>' contains-errors lvalue .size     | | |         `-RecoveryExpr 0x154949e58 <col:21> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x15494a1e0 <line:38:3, col:19> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15494a160 <col:3> 'int ()' Function 0x15494a0a8 'module_put' 'int ()'     | | | `-RecoveryExpr 0x15494a1b8 <col:14, col:17> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x15494a180 <col:14> 'struct xt_table *' lvalue Var 0x1549450f8 't' 'struct xt_table *'     | | `-CallExpr 0x15494a340 <line:39:3, col:20> 'int'     | |   |-ImplicitCastExpr 0x15494a328 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x15494a2e8 <col:3> 'int ()' Function 0x15494a230 'xt_table_unlock' 'int ()'     | |   `-ImplicitCastExpr 0x15494a368 <col:19> 'struct xt_table *' <LValueToRValue>     | |     `-DeclRefExpr 0x15494a308 <col:19> 'struct xt_table *' lvalue Var 0x1549450f8 't' 'struct xt_table *'     | `-NullStmt 0x15494a580 <line:41:3>     `-ReturnStmt 0x15494a6f0 <line:44:2, col:9>       `-ImplicitCastExpr 0x15494a6d8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15494a6b8 <col:9> 'int' lvalue Var 0x154944e40 'ret' 'int' ","19979":"`-FunctionDecl 0x12210e968  line:2:9 invalid fpar_New 'int *()'   `-CompoundStmt 0x12210ec78 <line:3:1, line:5:23>     `-CallExpr 0x12210ec30 <line:4:2, col:61> '<dependent type>' contains-errors       |-DeclRefExpr 0x12210eb70 <col:2> 'int ()' Function 0x12210eab8 'ISOM_DECL_BOX_ALLOC' 'int ()'       |-RecoveryExpr 0x12210ebf0 <col:22> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12210ec10 <col:40> '<dependent type>' contains-errors lvalue ","19141":"`-FunctionDecl 0x1321410a8  line:1:12 hns_nic_maybe_stop_tso 'int (struct sk_buff **, int *, struct hnae_ring *)' static   |-ParmVarDecl 0x132128aa8 <line:2:2, col:19> col:19 used out_skb 'struct sk_buff **'   |-ParmVarDecl 0x132128b58 <col:28, col:33> col:33 used bnum 'int *'   |-ParmVarDecl 0x132140f68 <col:39, col:57> col:57 used ring 'struct hnae_ring *'   `-CompoundStmt 0x132143e08 <line:3:1, line:39:1>     |-DeclStmt 0x132141230 <line:4:2, col:7>     | `-VarDecl 0x1321411c8 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x1321412c8 <line:5:2, col:10>     | `-VarDecl 0x132141260 <col:2, col:6> col:6 used size 'int'     |-DeclStmt 0x132141360 <line:6:2, col:13>     | `-VarDecl 0x1321412f8 <col:2, col:6> col:6 used buf_num 'int'     |-DeclStmt 0x1321413f8 <line:7:2, col:14>     | `-VarDecl 0x132141390 <col:2, col:6> col:6 used frag_num 'int'     |-DeclStmt 0x132141568 <line:8:2, col:32>     | `-VarDecl 0x132141498 <col:2, col:25> col:18 used skb 'struct sk_buff *' cinit     |   `-ImplicitCastExpr 0x132141550 <col:24, col:25> 'struct sk_buff *' <LValueToRValue>     |     `-UnaryOperator 0x132141538 <col:24, col:25> 'struct sk_buff *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x132141520 <col:25> 'struct sk_buff **' <LValueToRValue>     |         `-DeclRefExpr 0x132141500 <col:25> 'struct sk_buff **' lvalue ParmVar 0x132128aa8 'out_skb' 'struct sk_buff **'     |-DeclStmt 0x132141660 <line:9:2, col:32>     | `-VarDecl 0x1321415a8 <col:2, col:28> col:18 used new_skb 'struct sk_buff *' cinit     |   `-RecoveryExpr 0x132141640 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132141868 <line:10:2, col:30>     | |-RecordDecl 0x132141678 <col:2, col:9> col:9 struct skb_frag_struct     | `-VarDecl 0x1321417e8 <col:2, col:26> col:26 used frag 'struct skb_frag_struct *'     |-BinaryOperator 0x132141a78 <line:12:2, col:24> 'int' '='     | |-DeclRefExpr 0x132141880 <col:2> 'int' lvalue Var 0x132141260 'size' 'int'     | `-CallExpr 0x132141a38 <col:9, col:24> 'int'     |   |-ImplicitCastExpr 0x132141a20 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1321419b0 <col:9> 'int ()' Function 0x1321418f8 'skb_headlen' 'int ()'     |   `-ImplicitCastExpr 0x132141a60 <col:21> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x1321419d0 <col:21> 'struct sk_buff *' lvalue Var 0x132141498 'skb' 'struct sk_buff *'     |-BinaryOperator 0x132141d28 <line:15:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x132141b68 <col:2> 'int' lvalue Var 0x132141390 'frag_num' 'int'     | `-RecoveryExpr 0x132141d00 <col:13, col:30> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x132141cc0 <col:13, col:27> 'int'     |     |-ImplicitCastExpr 0x132141ca8 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x132141c68 <col:13> 'int ()' Function 0x132141bb0 'skb_shinfo' 'int ()'     |     `-ImplicitCastExpr 0x132141ce8 <col:24> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x132141c88 <col:24> 'struct sk_buff *' lvalue Var 0x132141498 'skb' 'struct sk_buff *'     |-ForStmt 0x1321430a0 <line:16:2, line:20:2>     | |-BinaryOperator 0x132141d88 <line:16:7, col:11> 'int' '='     | | |-DeclRefExpr 0x132141d48 <col:7> 'int' lvalue Var 0x1321411c8 'i' 'int'     | | `-IntegerLiteral 0x132141d68 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x132142c18 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x132141de8 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x132141da8 <col:14> 'int' lvalue Var 0x1321411c8 'i' 'int'     | | `-ImplicitCastExpr 0x132142c00 <col:18> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x132141dc8 <col:18> 'int' lvalue Var 0x132141390 'frag_num' 'int'     | |-UnaryOperator 0x132142c58 <col:28, col:29> 'int' postfix '++'     | | `-DeclRefExpr 0x132142c38 <col:28> 'int' lvalue Var 0x1321411c8 'i' 'int'     | `-CompoundStmt 0x132143080 <col:33, line:20:2>     |   |-BinaryOperator 0x132142dd8 <line:17:3, col:35> 'struct skb_frag_struct *' contains-errors '='     |   | |-DeclRefExpr 0x132142c70 <col:3> 'struct skb_frag_struct *' lvalue Var 0x1321417e8 'frag' 'struct skb_frag_struct *'     |   | `-UnaryOperator 0x132142dc0 <col:10, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ArraySubscriptExpr 0x132142da0 <col:11, col:35> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x132142d70 <col:11, col:28> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x132142d28 <col:11, col:28> '<dependent type>' contains-errors lvalue     |   |     |   `-CallExpr 0x132142ce8 <col:11, col:25> 'int'     |   |     |     |-ImplicitCastExpr 0x132142cd0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |     |     | `-DeclRefExpr 0x132142c90 <col:11> 'int ()' Function 0x132141bb0 'skb_shinfo' 'int ()'     |   |     |     `-ImplicitCastExpr 0x132142d10 <col:22> 'struct sk_buff *' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x132142cb0 <col:22> 'struct sk_buff *' lvalue Var 0x132141498 'skb' 'struct sk_buff *'     |   |     `-ImplicitCastExpr 0x132142d88 <col:34> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x132142d50 <col:34> 'int' lvalue Var 0x1321411c8 'i' 'int'     |   `-BinaryOperator 0x132142f90 <line:18:3, col:28> 'int' '='     |     |-DeclRefExpr 0x132142df8 <col:3> 'int' lvalue Var 0x132141260 'size' 'int'     |     `-CallExpr 0x132142f50 <col:10, col:28> 'int'     |       |-ImplicitCastExpr 0x132142f38 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x132142ef8 <col:10> 'int ()' Function 0x132142e40 'skb_frag_size' 'int ()'     |       `-ImplicitCastExpr 0x132142f78 <col:24> 'struct skb_frag_struct *' <LValueToRValue>     |         `-DeclRefExpr 0x132142f18 <col:24> 'struct skb_frag_struct *' lvalue Var 0x1321417e8 'frag' 'struct skb_frag_struct *'     |-IfStmt 0x132143d00 <line:22:2, line:35:2> has_else     | |-CallExpr 0x132143278 <line:22:6, col:51> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1321431b8 <col:6> 'int ()' Function 0x132143100 'unlikely' 'int ()'     | | `-BinaryOperator 0x132143258 <col:15, col:31> 'int' contains-errors '>'     | |   |-DeclRefExpr 0x1321431d8 <col:15> 'int' lvalue Var 0x1321412f8 'buf_num' 'int'     | |   `-RecoveryExpr 0x132143230 <col:25, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1321431f8 <col:25> 'struct hnae_ring *' lvalue ParmVar 0x132140f68 'ring' 'struct hnae_ring *'     | |-CompoundStmt 0x132143b98 <col:54, line:33:2>     | | |-IfStmt 0x132143628 <line:24:3, line:25:12>     | | | |-BinaryOperator 0x132143560 <line:24:7, col:26> 'int' '<'     | | | | |-CallExpr 0x1321434e8 <col:7, col:22> 'int'     | | | | | |-ImplicitCastExpr 0x1321434d0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | | | `-DeclRefExpr 0x132143490 <col:7> 'int ()' Function 0x1321433d8 'ring_space' 'int ()'     | | | | | `-ImplicitCastExpr 0x132143510 <col:18> 'struct hnae_ring *' <LValueToRValue>     | | | | |   `-DeclRefExpr 0x1321434b0 <col:18> 'struct hnae_ring *' lvalue ParmVar 0x132140f68 'ring' 'struct hnae_ring *'     | | | | `-ImplicitCastExpr 0x132143548 <col:26> 'int' <LValueToRValue>     | | | |   `-DeclRefExpr 0x132143528 <col:26> 'int' lvalue Var 0x1321412f8 'buf_num' 'int'     | | | `-ReturnStmt 0x132143618 <line:25:4, col:12>     | | |   `-UnaryOperator 0x132143600 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |     `-ImplicitCastExpr 0x1321435e8 <col:12> '<dependent type>' contains-errors <LValueToRValue>     | | |       `-RecoveryExpr 0x1321435c8 <col:12> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x132143840 <line:27:3, col:37> 'struct sk_buff *' contains-errors '='     | | | |-DeclRefExpr 0x132143648 <col:3> 'struct sk_buff *' contains-errors lvalue Var 0x1321415a8 'new_skb' 'struct sk_buff *'     | | | `-CallExpr 0x132143810 <col:13, col:37> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x132143748 <col:13> 'int ()' Function 0x132143690 'skb_copy' 'int ()'     | | |   |-DeclRefExpr 0x132143768 <col:22> 'struct sk_buff *' lvalue Var 0x132141498 'skb' 'struct sk_buff *'     | | |   `-RecoveryExpr 0x1321437f0 <col:27> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x132143958 <line:28:3, line:29:12>     | | | |-UnaryOperator 0x132143898 <line:28:7, col:8> 'int' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x132143880 <col:8> 'struct sk_buff *' contains-errors <LValueToRValue>     | | | |   `-DeclRefExpr 0x132143860 <col:8> 'struct sk_buff *' contains-errors lvalue Var 0x1321415a8 'new_skb' 'struct sk_buff *'     | | | `-ReturnStmt 0x132143948 <line:29:4, col:12>     | | |   `-UnaryOperator 0x132143930 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |     `-ImplicitCastExpr 0x132143918 <col:12> '<dependent type>' contains-errors <LValueToRValue>     | | |       `-RecoveryExpr 0x1321438f8 <col:12> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x132143ab0 <line:30:3, col:24> 'int'     | | | |-ImplicitCastExpr 0x132143a98 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x132143a58 <col:3> 'int ()' Function 0x1321439a0 'dev_kfree_skb_any' 'int ()'     | | | `-ImplicitCastExpr 0x132143ad8 <col:21> 'struct sk_buff *' <LValueToRValue>     | | |   `-DeclRefExpr 0x132143a78 <col:21> 'struct sk_buff *' lvalue Var 0x132141498 'skb' 'struct sk_buff *'     | | `-BinaryOperator 0x132143b78 <line:31:3, col:14> 'struct sk_buff *' contains-errors '='     | |   |-UnaryOperator 0x132143b28 <col:3, col:4> 'struct sk_buff *' lvalue prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x132143b10 <col:4> 'struct sk_buff **' <LValueToRValue>     | |   |   `-DeclRefExpr 0x132143af0 <col:4> 'struct sk_buff **' lvalue ParmVar 0x132128aa8 'out_skb' 'struct sk_buff **'     | |   `-ImplicitCastExpr 0x132143b60 <col:14> 'struct sk_buff *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x132143b40 <col:14> 'struct sk_buff *' contains-errors lvalue Var 0x1321415a8 'new_skb' 'struct sk_buff *'     | `-IfStmt 0x132143ce0 <line:33:9, line:35:2>     |   |-BinaryOperator 0x132143cb0 <line:33:13, col:32> 'int' '<'     |   | |-CallExpr 0x132143c38 <col:13, col:28> 'int'     |   | | |-ImplicitCastExpr 0x132143c20 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x132143bd0 <col:13> 'int ()' Function 0x1321433d8 'ring_space' 'int ()'     |   | | `-ImplicitCastExpr 0x132143c60 <col:24> 'struct hnae_ring *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x132143c00 <col:24> 'struct hnae_ring *' lvalue ParmVar 0x132140f68 'ring' 'struct hnae_ring *'     |   | `-ImplicitCastExpr 0x132143c98 <col:32> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x132143c78 <col:32> 'int' lvalue Var 0x1321412f8 'buf_num' 'int'     |   `-CompoundStmt 0x132143cd0 <col:41, line:35:2>     |-BinaryOperator 0x132143db8 <line:37:2, col:10> 'int' '='     | |-UnaryOperator 0x132143d68 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x132143d50 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x132143d30 <col:3> 'int *' lvalue ParmVar 0x132128b58 'bnum' 'int *'     | `-ImplicitCastExpr 0x132143da0 <col:10> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x132143d80 <col:10> 'int' lvalue Var 0x1321412f8 'buf_num' 'int'     `-ReturnStmt 0x132143df8 <line:38:2, col:9>       `-IntegerLiteral 0x132143dd8 <col:9> 'int' 0 ","20140":"`-FunctionDecl 0x15205c3f8  line:1:1 invalid ExecAssignScanTypeFromOuterPlan 'int (int *)'   |-ParmVarDecl 0x15205c328 <col:33, col:44> col:44 referenced invalid scanstate 'int *'   `-CompoundStmt 0x1518d4030 <line:2:1, line:10:1>     |-BinaryOperator 0x15205c548 <line:3:2, col:14> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x15205c4c8 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15205c4a8 <col:2> 'int *' lvalue ParmVar 0x15205c328 'scanstate' 'int *'     | `-RecoveryExpr 0x15205c528 <col:14> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1518d4000 <line:9:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x15205c948 <col:2> 'int ()' Function 0x15205c890 'ExecAssignScanType' 'int ()'       |-RecoveryExpr 0x15205c968 <col:21> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x15205c9d0 <col:32> '<dependent type>' contains-errors lvalue ","19918":"`-FunctionDecl 0x15a928358  line:1:1 referenced invalid e_ews_autodiscover_ws_url_finish 'int (int *, int *, int **)'   |-ParmVarDecl 0x15a928128 <col:35, col:53> col:53 invalid settings 'int *'   |-ParmVarDecl 0x15a9281a8 <line:2:35, col:49> col:49 invalid result 'int *'   |-ParmVarDecl 0x15a928260 <line:3:35, col:44> col:44 invalid error 'int **'   `-CompoundStmt 0x15a9433b8 <line:4:1, line:39:1>     |-DeclStmt 0x15a928618 <line:6:2, col:31>     | |-RecordDecl 0x15a928430 <col:2, col:9> col:9 struct _autodiscover_data     | `-VarDecl 0x15a928598 <col:2, col:29> col:29 used ad 'struct _autodiscover_data *'     |-CallExpr 0x15a941b70 <line:8:2, line:11:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a928790 <line:8:2> 'int ()' Function 0x15a9286d8 'g_return_val_if_fail' 'int ()'     | |-CallExpr 0x15a941b18 <line:9:3, line:11:28> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a9418b8 <line:9:3> 'int ()' Function 0x15a941800 'g_simple_async_result_is_valid' 'int ()'     | | |-RecoveryExpr 0x15a9418d8 <line:10:3> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x15a941a18 <col:11, col:29> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15a9419d8 <col:11> 'int ()' Function 0x15a941920 'G_OBJECT' 'int ()'     | | | `-RecoveryExpr 0x15a9419f8 <col:21> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15a941af8 <line:11:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15a941b50 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15a941eb0 <line:14:2, col:56> 'struct _autodiscover_data *' contains-errors '='     | |-DeclRefExpr 0x15a941ce8 <col:2> 'struct _autodiscover_data *' lvalue Var 0x15a928598 'ad' 'struct _autodiscover_data *'     | `-CallExpr 0x15a941e88 <col:7, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a941de8 <col:7> 'int ()' Function 0x15a941d30 'g_simple_async_result_get_op_res_gpointer' 'int ()'     |   `-RecoveryExpr 0x15a941e68 <col:50> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a9420d0 <line:16:2, line:17:10>     | |-CallExpr 0x15a942058 <line:16:6, col:58> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a941fb0 <col:6> 'int ()' Function 0x15a941ef8 'g_simple_async_result_propagate_error' 'int ()'     | | |-RecoveryExpr 0x15a942038 <col:45> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15a941fe8 <col:53> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a9420c0 <line:17:3, col:10>     |   `-RecoveryExpr 0x15a9420a0 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a942450 <line:22:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a9423b0 <col:2> 'int ()' Function 0x15a9422f8 'camel_ews_settings_set_hosturl' 'int ()'     | |-RecoveryExpr 0x15a9423d0 <col:34> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15a942428 <col:44, col:48> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15a9423f0 <col:44> 'struct _autodiscover_data *' lvalue Var 0x15a928598 'ad' 'struct _autodiscover_data *'     `-IfStmt 0x15a943388 <line:24:2, line:36:2> has_else       |-UnaryOperator 0x15a942670 <line:24:6, col:42> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x15a942640 <col:7, col:42> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x15a942560 <col:7> 'int ()' Function 0x15a9424a8 'has_suffix_icmp' 'int ()'       |   |-RecoveryExpr 0x15a9425b8 <col:24, col:28> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x15a942580 <col:24> 'struct _autodiscover_data *' lvalue Var 0x15a928598 'ad' 'struct _autodiscover_data *'       |   `-StringLiteral 0x15a942620 <col:37> 'char[4]' lvalue \"STR\"       |-CompoundStmt 0x15a943290 <col:45, line:34:2>       `-CompoundStmt 0x15a943370 <col:9, line:36:2>         `-CallExpr 0x15a943340 <line:35:3, col:55> '<dependent type>' contains-errors           |-DeclRefExpr 0x15a9432a0 <col:3> 'int ()' Function 0x15a943098 'camel_ews_settings_set_oaburl' 'int ()'           |-RecoveryExpr 0x15a9432c0 <col:34> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x15a943318 <col:44, col:48> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x15a9432e0 <col:44> 'struct _autodiscover_data *' lvalue Var 0x15a928598 'ad' 'struct _autodiscover_data *' ","19578":"`-FunctionDecl 0x151913f58  line:1:24 dx_node_limit 'unsigned int (struct inode *)' static inline   |-ParmVarDecl 0x151913e48 <col:38, col:52> col:52 used dir 'struct inode *'   `-CompoundStmt 0x15192c6a8 <line:2:1, line:5:1>     `-DeclStmt 0x15192c570 <line:3:2, col:69>       `-VarDecl 0x15192c268 <col:2, col:68> col:11 used entry_space 'unsigned int' cinit         `-BinaryOperator 0x15192c550 <col:25, col:68> '<dependent type>' contains-errors '-'           |-CXXDependentScopeMemberExpr 0x15192c330 <col:25, col:36> '<dependent type>' contains-errors lvalue ->s_blocksize           | `-RecoveryExpr 0x15192c308 <col:25, col:30> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x15192c2d0 <col:25> 'struct inode *' lvalue ParmVar 0x151913e48 'dir' 'struct inode *'           `-CallExpr 0x15192c528 <col:50, col:68> 'int'             |-ImplicitCastExpr 0x15192c510 <col:50> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x15192c4a0 <col:50> 'int ()' Function 0x15192c3e8 'EXT4_DIR_REC_LEN' 'int ()'             `-IntegerLiteral 0x15192c4c0 <col:67> 'int' 0 ","19563":"`-FunctionDecl 0x15a00ddc8  line:1:14 invalid ConvertTempo 'int (int)' static   |-ParmVarDecl 0x15a00dcf0 <col:27, col:34> col:34 invalid ciaSpeed 'int'   `-CompoundStmt 0x15a00e0e8 <line:2:1, line:5:1>     `-ReturnStmt 0x15a00e0d8 <line:4:2, col:42>       `-CallExpr 0x15a00e0b0 <col:9, col:42> '<dependent type>' contains-errors         |-DeclRefExpr 0x15a00dfd0 <col:9> 'int ()' Function 0x15a00df18 'TEMPO' 'int ()'         `-BinaryOperator 0x15a00e090 <col:15, col:34> '<dependent type>' contains-errors '\/'           |-ParenExpr 0x15a00e050 <col:15, col:30> 'double'           | `-BinaryOperator 0x15a00e030 <col:16, col:24> 'double' '*'           |   |-FloatingLiteral 0x15a00dff0 <col:16> 'double' 1.250000e+02           |   `-FloatingLiteral 0x15a00e010 <col:24> 'double' 3.546000e+03           `-RecoveryExpr 0x15a00e070 <col:34> '<dependent type>' contains-errors lvalue ","19920":"`-FunctionDecl 0x129928288  line:1:1 invalid redraw_buf_later 'int (int *, int)'   |-ParmVarDecl 0x129928128 <col:18, col:25> col:25 invalid buf 'int *'   |-ParmVarDecl 0x1299281a8 <col:30, col:34> col:34 used type 'int'   `-CompoundStmt 0x12a808c88 <line:2:1, line:15:1>     |-CallExpr 0x129928530 <line:5:5, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1299284b0 <col:5> 'int ()' Function 0x1299283f8 'FOR_ALL_WINDOWS' 'int ()'     | `-RecoveryExpr 0x129928510 <col:21> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x12a808c70 <line:6:5, line:9:5>       `-IfStmt 0x12a808c50 <line:7:2, line:8:31>         |-BinaryOperator 0x129928660 <line:7:6, col:22> 'int' contains-errors '=='         | |-CXXDependentScopeMemberExpr 0x129928618 <col:6, col:10> '<dependent type>' contains-errors lvalue ->w_buffer         | | `-RecoveryExpr 0x1299285f8 <col:6> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x1299285b8 <col:22> '<dependent type>' contains-errors lvalue         `-CallExpr 0x12a808c20 <line:8:6, col:31> '<dependent type>' contains-errors           |-DeclRefExpr 0x129928760 <col:6> 'int ()' Function 0x1299286a8 'redraw_win_later' 'int ()'           |-RecoveryExpr 0x12a808c00 <col:23> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x129928798 <col:27> 'int' lvalue ParmVar 0x1299281a8 'type' 'int' ","19549":"`-FunctionDecl 0x1379203f0  line:1:13 invalid MP4_FreeBox_ctts 'void (int *)' static   |-ParmVarDecl 0x137920328 <col:31, col:42> col:42 invalid p_box 'int *'   `-CompoundStmt 0x137920880 <line:2:1, line:5:1>     |-CallExpr 0x137920718 <line:3:5, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137920600 <col:5> 'int ()' Function 0x137920548 'FREENULL' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1379206d0 <col:15, col:35> '<dependent type>' contains-errors lvalue ->pi_sample_count     |   `-CXXDependentScopeMemberExpr 0x137920688 <col:15, col:27> '<dependent type>' contains-errors lvalue .p_ctts     |     `-CXXDependentScopeMemberExpr 0x137920640 <col:15, col:22> '<dependent type>' contains-errors lvalue ->data     |       `-RecoveryExpr 0x137920620 <col:15> '<dependent type>' contains-errors lvalue     `-CallExpr 0x137920858 <line:4:5, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x137920740 <col:5> 'int ()' Function 0x137920548 'FREENULL' 'int ()'       `-CXXDependentScopeMemberExpr 0x137920810 <col:15, col:35> '<dependent type>' contains-errors lvalue ->pi_sample_offset         `-CXXDependentScopeMemberExpr 0x1379207c8 <col:15, col:27> '<dependent type>' contains-errors lvalue .p_ctts           `-CXXDependentScopeMemberExpr 0x137920780 <col:15, col:22> '<dependent type>' contains-errors lvalue ->data             `-RecoveryExpr 0x137920760 <col:15> '<dependent type>' contains-errors lvalue ","20043":"`-FunctionDecl 0x131928750  line:1:13 veth_setup 'void (struct net_device *)' static   |-ParmVarDecl 0x131928648 <col:24, col:43> col:43 used dev 'struct net_device *'   `-CompoundStmt 0x1319411e0 <line:2:1, line:11:1>     |-CallExpr 0x131940bf8 <line:3:2, col:17> 'int'     | |-ImplicitCastExpr 0x131940be0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x131940b70 <col:2> 'int ()' Function 0x131940ab8 'ether_setup' 'int ()'     | `-ImplicitCastExpr 0x131940c20 <col:14> 'struct net_device *' <LValueToRValue>     |   `-DeclRefExpr 0x131940b90 <col:14> 'struct net_device *' lvalue ParmVar 0x131928648 'dev' 'struct net_device *'     |-BinaryOperator 0x131940d20 <line:5:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x131940c70 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x131940c38 <col:2> 'struct net_device *' lvalue ParmVar 0x131928648 'dev' 'struct net_device *'     | `-UnaryOperator 0x131940d08 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x131940ce8 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x131940e28 <line:6:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x131940d78 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x131940d40 <col:2> 'struct net_device *' lvalue ParmVar 0x131928648 'dev' 'struct net_device *'     | `-UnaryOperator 0x131940e10 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x131940df0 <col:22> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x131940f10 <line:7:2, col:19> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x131940e80 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x131940e48 <col:2> 'struct net_device *' lvalue ParmVar 0x131928648 'dev' 'struct net_device *'     | `-RecoveryExpr 0x131940ef0 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x131940ff8 <line:8:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x131940f78 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x131940f40 <col:2> 'struct net_device *' lvalue ParmVar 0x131928648 'dev' 'struct net_device *'     | `-RecoveryExpr 0x131940fd8 <col:20> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1319411c0 <line:10:2, col:52> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x131941050 <col:2, col:7> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x131941018 <col:2> 'struct net_device *' lvalue ParmVar 0x131928648 'dev' 'struct net_device *'       `-BinaryOperator 0x1319411a0 <col:21, col:52> '<dependent type>' contains-errors '|'         |-BinaryOperator 0x131941160 <col:21, col:39> '<dependent type>' contains-errors '|'         | |-RecoveryExpr 0x131941120 <col:21> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x131941140 <col:39> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x131941180 <col:52> '<dependent type>' contains-errors lvalue ","19313":"`-FunctionDecl 0x11f928758  line:1:1 ath10k_usb_alloc_urb_from_pipe 'int (struct ath10k_usb_pipe *)'   |-ParmVarDecl 0x11f928648 <col:32, col:56> col:56 used pipe 'struct ath10k_usb_pipe *'   `-CompoundStmt 0x11f9417b0 <line:2:1, line:16:1>     |-DeclStmt 0x11f940c88 <line:3:2, col:47>     | |-RecordDecl 0x11f940a50 <col:2, col:9> col:9 struct ath10k_urb_context     | `-VarDecl 0x11f940bb8 <col:2, col:43> col:29 used urb_context 'struct ath10k_urb_context *' cinit     |   `-RecoveryExpr 0x11f940c50 <col:43> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x11f940d20 <line:4:2, col:21>     | `-VarDecl 0x11f940cb8 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x11f940f50 <line:6:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f940e50 <col:2> 'int ()' Function 0x11f940d98 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x11f940f18 <col:20, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x11f940ed0 <col:21, col:35> '<dependent type>' contains-errors lvalue ->cs_lock     | |   `-RecoveryExpr 0x11f940ea8 <col:21, col:27> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f940e70 <col:21> 'struct ath10k_usb_pipe *' lvalue ParmVar 0x11f928648 'pipe' 'struct ath10k_usb_pipe *'     | `-DeclRefExpr 0x11f940f30 <col:44> 'unsigned long' lvalue Var 0x11f940cb8 'flags' 'unsigned long'     |-IfStmt 0x11f941520 <line:7:2, line:12:2>     | |-UnaryOperator 0x11f941120 <line:7:6, col:38> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x11f9410f8 <col:7, col:38> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11f941060 <col:7> 'int ()' Function 0x11f940fa8 'list_empty' 'int ()'     | |   `-UnaryOperator 0x11f9410e0 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x11f9410b8 <col:19, col:25> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x11f941080 <col:19> 'struct ath10k_usb_pipe *' lvalue ParmVar 0x11f928648 'pipe' 'struct ath10k_usb_pipe *'     | `-CompoundStmt 0x11f941500 <col:41, line:12:2>     |   |-CallExpr 0x11f941460 <line:10:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x11f9413c8 <col:3> 'int ()' Function 0x11f941310 'list_del' 'int ()'     |   | `-UnaryOperator 0x11f941448 <col:12, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x11f941420 <col:13, col:26> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x11f9413e8 <col:13> 'struct ath10k_urb_context *' contains-errors lvalue Var 0x11f940bb8 'urb_context' 'struct ath10k_urb_context *'     |   `-UnaryOperator 0x11f9414e8 <line:11:3, col:16> '<dependent type>' contains-errors postfix '--' cannot overflow     |     `-RecoveryExpr 0x11f9414c0 <col:3, col:9> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x11f941488 <col:3> 'struct ath10k_usb_pipe *' lvalue ParmVar 0x11f928648 'pipe' 'struct ath10k_usb_pipe *'     |-CallExpr 0x11f941720 <line:13:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f941620 <col:2> 'int ()' Function 0x11f941568 'spin_unlock_irqrestore' 'int ()'     | |-UnaryOperator 0x11f9416e8 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x11f9416a0 <col:26, col:40> '<dependent type>' contains-errors lvalue ->cs_lock     | |   `-RecoveryExpr 0x11f941678 <col:26, col:32> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x11f941640 <col:26> 'struct ath10k_usb_pipe *' lvalue ParmVar 0x11f928648 'pipe' 'struct ath10k_usb_pipe *'     | `-DeclRefExpr 0x11f941700 <col:49> 'unsigned long' lvalue Var 0x11f940cb8 'flags' 'unsigned long'     `-ReturnStmt 0x11f9417a0 <line:15:2, col:9>       `-ImplicitCastExpr 0x11f941788 <col:9> 'int' contains-errors <PointerToIntegral>         `-ImplicitCastExpr 0x11f941770 <col:9> 'struct ath10k_urb_context *' contains-errors <LValueToRValue>           `-DeclRefExpr 0x11f941750 <col:9> 'struct ath10k_urb_context *' contains-errors lvalue Var 0x11f940bb8 'urb_context' 'struct ath10k_urb_context *' ","20128":"`-FunctionDecl 0x1278ad6d0  line:1:13 invalid bpf_adj_branches 'void (struct bpf_prog *, int, int)' static   |-ParmVarDecl 0x127895248 <col:30, col:47> col:47 used prog 'struct bpf_prog *'   |-ParmVarDecl 0x1278952e0 <col:53, col:57> col:57 invalid pos 'int'   |-ParmVarDecl 0x127895360 <col:62, col:66> col:66 invalid delta 'int'   `-CompoundStmt 0x1278ae9c0 <line:2:1, line:36:1>     |-DeclStmt 0x1278ad9d8 <line:3:2, col:38>     | |-RecordDecl 0x1278ad790 <col:2, col:9> col:9 struct bpf_insn     | `-VarDecl 0x1278ad8f8 <col:2, col:32> col:19 used insn 'struct bpf_insn *' cinit     |   `-RecoveryExpr 0x1278ad998 <col:26, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1278ad960 <col:26> 'struct bpf_prog *' lvalue ParmVar 0x127895248 'prog' 'struct bpf_prog *'     |-DeclStmt 0x1278ada70 <line:7:2, col:9>     | `-VarDecl 0x1278ada08 <col:2, col:6> col:6 used off 'int'     `-ForStmt 0x1278ae988 <line:9:2, line:35:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x1278adb70 <line:9:14, col:18> 'int' contains-errors '<'       | |-RecoveryExpr 0x1278adb30 <col:14> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1278adb50 <col:18> '<dependent type>' contains-errors lvalue       |-BinaryOperator 0x1278adc60 <col:28, col:37> '<dependent type>' contains-errors ','       | |-UnaryOperator 0x1278adc48 <col:28, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow       | | `-RecoveryExpr 0x1278adc28 <col:28> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1278adbe0 <col:33, col:37> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1278adbc0 <col:33> 'struct bpf_insn *' contains-errors lvalue Var 0x1278ad8f8 'insn' 'struct bpf_insn *'       `-CompoundStmt 0x1278ae950 <col:41, line:35:2>         |-IfStmt 0x1278adf68 <line:11:3, line:12:4>         | |-BinaryOperator 0x1278adf40 <line:11:7, col:26> 'int' contains-errors '!='         | | |-CallExpr 0x1278adef8 <col:7, col:21> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x1278ade40 <col:7> 'int ()' Function 0x1278add88 'BPF_CLASS' 'int ()'         | | | `-RecoveryExpr 0x1278aded8 <col:17> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x1278adf20 <col:26> '<dependent type>' contains-errors lvalue         | `-ContinueStmt 0x1278adf60 <line:12:4>         |-IfStmt 0x1278ae190 <line:13:3, line:14:4>         | |-BinaryOperator 0x1278ae168 <line:13:7, col:23> 'int' contains-errors '=='         | | |-CallExpr 0x1278ae120 <col:7, col:18> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x1278ae068 <col:7> 'int ()' Function 0x1278adfb0 'BPF_OP' 'int ()'         | | | `-RecoveryExpr 0x1278ae100 <col:14> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x1278ae148 <col:23> '<dependent type>' contains-errors lvalue         | `-ContinueStmt 0x1278ae188 <line:14:4>         |-IfStmt 0x1278ae3b8 <line:15:3, line:22:3> has_else         | |-BinaryOperator 0x1278ae2b0 <line:15:7, col:23> 'int' contains-errors '=='         | | |-CallExpr 0x1278ae268 <col:7, col:18> '<dependent type>' contains-errors         | | | |-DeclRefExpr 0x1278ae1b0 <col:7> 'int ()' Function 0x1278adfb0 'BPF_OP' 'int ()'         | | | `-RecoveryExpr 0x1278ae248 <col:14> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x1278ae290 <col:23> '<dependent type>' contains-errors lvalue         | |-CompoundStmt 0x1278ae390 <col:33, line:20:3>         | | `-IfStmt 0x1278ae360 <line:16:4, line:19:5> has_else         | |   |-RecoveryExpr 0x1278ae330 <line:16:8, col:25> '_Bool' contains-errors         | |   |-NullStmt 0x1278ae358 <line:17:5>         | |   `-ContinueStmt 0x1278ae350 <line:19:5>         | `-CompoundStmt 0x1278ae3a8 <line:20:10, line:22:3>         |-IfStmt 0x1278ae790 <line:26:3, line:29:11> has_else         | |-RecoveryExpr 0x1278ae548 <line:26:7, col:32> '_Bool' contains-errors         | |-CompoundAssignOperator 0x1278ae5a8 <line:27:4, col:11> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         | | |-DeclRefExpr 0x1278ae568 <col:4> 'int' lvalue Var 0x1278ada08 'off' 'int'         | | `-RecoveryExpr 0x1278ae588 <col:11> '<dependent type>' contains-errors lvalue         | `-IfStmt 0x1278ae770 <line:28:8, line:29:11>         |   |-RecoveryExpr 0x1278ae6e0 <line:28:12, col:52> '_Bool' contains-errors         |   `-CompoundAssignOperator 0x1278ae740 <line:29:4, col:11> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'         |     |-DeclRefExpr 0x1278ae700 <col:4> 'int' lvalue Var 0x1278ada08 'off' 'int'         |     `-RecoveryExpr 0x1278ae720 <col:11> '<dependent type>' contains-errors lvalue         `-IfStmt 0x1278ae920 <line:31:3, line:34:16> has_else           |-RecoveryExpr 0x1278ae7c0 <line:31:7> '_Bool' contains-errors           |-BinaryOperator 0x1278ae860 <line:32:4, col:16> '<dependent type>' contains-errors '='           | |-RecoveryExpr 0x1278ae818 <col:4, col:10> '<dependent type>' contains-errors lvalue           | | `-DeclRefExpr 0x1278ae7e0 <col:4> 'struct bpf_insn *' contains-errors lvalue Var 0x1278ad8f8 'insn' 'struct bpf_insn *'           | `-DeclRefExpr 0x1278ae840 <col:16> 'int' lvalue Var 0x1278ada08 'off' 'int'           `-BinaryOperator 0x1278ae900 <line:34:4, col:16> '<dependent type>' contains-errors '='             |-RecoveryExpr 0x1278ae8b8 <col:4, col:10> '<dependent type>' contains-errors lvalue             | `-DeclRefExpr 0x1278ae880 <col:4> 'struct bpf_insn *' contains-errors lvalue Var 0x1278ad8f8 'insn' 'struct bpf_insn *'             `-DeclRefExpr 0x1278ae8e0 <col:16> 'int' lvalue Var 0x1278ada08 'off' 'int' ","19328":"`-FunctionDecl 0x151128190  line:1:13 test_memslot_invalid_addresses 'void (void)' static   `-CompoundStmt 0x151141800 <line:2:1, line:8:1>     |-CallExpr 0x1511284b8 <line:3:5, col:39> 'int'     | |-ImplicitCastExpr 0x1511284a0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1511283b0 <col:5> 'int ()' Function 0x1511282f8 'g_test_trap_subprocess' 'int ()'     | |-ImplicitCastExpr 0x1511284f0 <col:28> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x151128410 <col:28> 'char[4]' lvalue \"STR\"     | |-IntegerLiteral 0x151128430 <col:35> 'int' 0     | `-IntegerLiteral 0x151128450 <col:38> 'int' 0     |-CallExpr 0x151128640 <line:4:5, col:36> 'int'     | |-ImplicitCastExpr 0x151128628 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1511285e8 <col:5> 'int ()' Function 0x151128530 'g_test_trap_assert_stderr' 'int ()'     | `-ImplicitCastExpr 0x151128668 <col:31> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x151128608 <col:31> 'char[4]' lvalue \"STR\"     |-CallExpr 0x151128718 <line:6:5, col:39> 'int'     | |-ImplicitCastExpr 0x151128700 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x151128680 <col:5> 'int ()' Function 0x1511282f8 'g_test_trap_subprocess' 'int ()'     | |-ImplicitCastExpr 0x151128750 <col:28> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x1511286a0 <col:28> 'char[4]' lvalue \"STR\"     | |-IntegerLiteral 0x1511286c0 <col:35> 'int' 0     | `-IntegerLiteral 0x1511286e0 <col:38> 'int' 0     `-CallExpr 0x1511287c0 <line:7:5, col:36> 'int'       |-ImplicitCastExpr 0x1511287a8 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x151128768 <col:5> 'int ()' Function 0x151128530 'g_test_trap_assert_stderr' 'int ()'       `-ImplicitCastExpr 0x1511287e8 <col:31> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x151128788 <col:31> 'char[4]' lvalue \"STR\" ","19658":"`-FunctionDecl 0x13800df18  line:1:1 invalid date_s_rfc3339 'int (int, int *, int)'   |-ParmVarDecl 0x13800dcd8 <col:16, col:20> col:20 used argc 'int'   |-ParmVarDecl 0x13800dda8 <col:26, col:33> col:33 invalid argv 'int *'   |-ParmVarDecl 0x13800de28 <col:39, col:45> col:45 invalid klass 'int'   `-CompoundStmt 0x1380287d0 <line:2:1, line:18:1>     |-CallExpr 0x13800e308 <line:5:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13800e130 <col:5> 'int ()' Function 0x13800e078 'rb_scan_args' 'int ()'     | |-DeclRefExpr 0x13800e150 <col:18> 'int' lvalue ParmVar 0x13800dcd8 'argc' 'int'     | |-RecoveryExpr 0x13800e170 <col:24> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x13800e1d0 <col:30> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x13800e2b8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13800e298 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13800e2f0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13800e2d0 <col:44> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x13800e388 <line:7:5, line:12:5>     | |-ImplicitCastExpr 0x13800e370 <line:7:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13800e350 <col:13> 'int' lvalue ParmVar 0x13800dcd8 'argc' 'int'     | `-CompoundStmt 0x138028588 <col:19, line:12:5>     |   |-CaseStmt 0x138028200 <line:8:7, <invalid sloc>>     |   | |-ConstantExpr 0x13800e3d0 <col:12> 'int'     |   | | `-IntegerLiteral 0x13800e3b0 <col:12> 'int' 0     |   | `-NullStmt 0x1380283d8 <<invalid sloc>>     |   `-CaseStmt 0x138028418 <line:10:7, <invalid sloc>>     |     |-ConstantExpr 0x138028400 <col:12> 'int'     |     | `-IntegerLiteral 0x1380283e0 <col:12> 'int' 1     |     `-NullStmt 0x138028580 <<invalid sloc>>     `-CompoundStmt 0x1380287b8 <line:14:5, line:17:5>       `-ReturnStmt 0x1380287a8 <line:16:2, col:39>         `-CallExpr 0x138028770 <col:9, col:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x138028688 <col:9> 'int ()' Function 0x1380285d0 'd_new_by_frags' 'int ()'           |-RecoveryExpr 0x1380286a8 <col:24> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x138028730 <col:31> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x138028750 <col:37> '<dependent type>' contains-errors lvalue ","20082":"`-FunctionDecl 0x15a027438  line:1:19 invalid fm10k_maybe_stop_tx 'int (struct fm10k_ring *, int)' static inline   |-ParmVarDecl 0x15a00e248 <col:39, col:58> col:58 used tx_ring 'struct fm10k_ring *'   |-ParmVarDecl 0x15a00e2e0 <col:67, col:71> col:71 invalid size 'int'   `-CompoundStmt 0x15a027a50 <line:2:1, line:6:1>     |-IfStmt 0x15a0278b0 <line:3:2, line:4:10>     | |-CallExpr 0x15a027858 <line:3:6, col:47> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x15a027650 <col:6> 'int ()' Function 0x15a027598 'likely' 'int ()'     | | `-BinaryOperator 0x15a027838 <col:13, col:43> 'int' contains-errors '>='     | |   |-CallExpr 0x15a0277d8 <col:13, col:38> 'int'     | |   | |-ImplicitCastExpr 0x15a0277c0 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x15a027750 <col:13> 'int ()' Function 0x15a027698 'fm10k_desc_unused' 'int ()'     | |   | `-ImplicitCastExpr 0x15a027800 <col:31> 'struct fm10k_ring *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x15a027770 <col:31> 'struct fm10k_ring *' lvalue ParmVar 0x15a00e248 'tx_ring' 'struct fm10k_ring *'     | |   `-RecoveryExpr 0x15a027818 <col:43> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15a0278a0 <line:4:3, col:10>     |   `-IntegerLiteral 0x15a027880 <col:10> 'int' 0     `-ReturnStmt 0x15a027a40 <line:5:2, col:44>       `-CallExpr 0x15a027a10 <col:9, col:44> '<dependent type>' contains-errors         |-DeclRefExpr 0x15a0279b0 <col:9> 'int ()' Function 0x15a0278f8 '__fm10k_maybe_stop_tx' 'int ()'         |-DeclRefExpr 0x15a0279d0 <col:31> 'struct fm10k_ring *' lvalue ParmVar 0x15a00e248 'tx_ring' 'struct fm10k_ring *'         `-RecoveryExpr 0x15a0279f0 <col:40> '<dependent type>' contains-errors lvalue ","20118":"`-FunctionDecl 0x13f80dfd8  line:1:12 invalid decode_unit 'int (int *, int *, unsigned int, unsigned int *)' static   |-ParmVarDecl 0x13f80dd28 <col:24, col:37> col:37 invalid s 'int *'   |-ParmVarDecl 0x13f80dda8 <col:40, col:52> col:52 referenced invalid pixel 'int *'   |-ParmVarDecl 0x13f80de28 <col:59, col:68> col:68 used step 'unsigned int'   |-ParmVarDecl 0x13f80ded8 <col:74, col:84> col:84 used rval 'unsigned int *'   `-CompoundStmt 0x13f82ae30 <line:2:1, line:58:1>     |-DeclStmt 0x13f80e2b8 <line:5:5, col:39>     | `-VarDecl 0x13f80e1e8 <col:5, col:29> col:14 used totfr 'unsigned int' cinit     |   `-CXXDependentScopeMemberExpr 0x13f80e270 <col:22, col:29> '<dependent type>' contains-errors lvalue ->total_freq     |     `-RecoveryExpr 0x13f80e250 <col:22> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13f8275b0 <line:6:5, col:48>     | |-VarDecl 0x13f80e2e8 <col:5, col:14> col:14 used value 'unsigned int'     | |-VarDecl 0x13f80e368 <col:5, col:25> col:21 used x 'unsigned int' cinit     | | `-ImplicitCastExpr 0x13f827400 <col:25> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x13f80e3d0 <col:25> 'int' 0     | |-VarDecl 0x13f827430 <col:5, col:36> col:28 used cumfr 'unsigned int' cinit     | | `-ImplicitCastExpr 0x13f8274b8 <col:36> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x13f827498 <col:36> 'int' 0     | `-VarDecl 0x13f8274e8 <col:5, col:47> col:39 used cnt_x 'unsigned int' cinit     |   `-ImplicitCastExpr 0x13f827570 <col:47> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x13f827550 <col:47> 'int' 0     |-DeclStmt 0x13f827878 <line:7:5, col:28>     | |-VarDecl 0x13f8275e0 <col:5, col:9> col:9 used i 'int'     | |-VarDecl 0x13f827660 <col:5, col:12> col:12 used j 'int'     | |-VarDecl 0x13f8276e0 <col:5, col:15> col:15 used ret 'int'     | |-VarDecl 0x13f827760 <col:5, col:20> col:20 used c 'int'     | `-VarDecl 0x13f8277e0 <col:5, col:23> col:23 used cnt_c 'int'     |-IfStmt 0x13f827a68 <line:9:5, line:10:16>     | |-RecoveryExpr 0x13f827a00 <line:9:9, col:50> '_Bool' contains-errors     | `-ReturnStmt 0x13f827a58 <line:10:9, col:16>     |   `-ImplicitCastExpr 0x13f827a40 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13f827a20 <col:16> 'int' lvalue Var 0x13f8276e0 'ret' 'int'     |-WhileStmt 0x13f827e38 <line:12:5, line:19:5>     | |-BinaryOperator 0x13f827af8 <line:12:12, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x13f827ac8 <col:12> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x13f827a88 <col:12> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'     | | `-ImplicitCastExpr 0x13f827ae0 <col:16> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x13f827aa8 <col:16> 'int' 16     | `-CompoundStmt 0x13f827e10 <col:20, line:19:5>     |   |-BinaryOperator 0x13f827c10 <line:13:9, col:32> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x13f827b18 <col:9> 'unsigned int' lvalue Var 0x13f8274e8 'cnt_x' 'unsigned int'     |   | `-ArraySubscriptExpr 0x13f827bf0 <col:17, col:32> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x13f827bc0 <col:17, col:24> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x13f827b58 <col:17, col:24> '<dependent type>' contains-errors lvalue ->lookup     |   |   |   `-RecoveryExpr 0x13f827b38 <col:17> '<dependent type>' contains-errors lvalue     |   |   `-ImplicitCastExpr 0x13f827bd8 <col:31> 'unsigned int' <LValueToRValue>     |   |     `-DeclRefExpr 0x13f827ba0 <col:31> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'     |   |-IfStmt 0x13f827da8 <line:14:9, line:17:13> has_else     |   | |-BinaryOperator 0x13f827cf8 <line:14:13, col:30> 'int' '>='     |   | | |-ImplicitCastExpr 0x13f827ce0 <col:13> 'unsigned int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13f827c30 <col:13> 'unsigned int' lvalue Var 0x13f80e2e8 'value' 'unsigned int'     |   | | `-BinaryOperator 0x13f827cc0 <col:22, col:30> 'unsigned int' '+'     |   | |   |-ImplicitCastExpr 0x13f827c90 <col:22> 'unsigned int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x13f827c50 <col:22> 'unsigned int' lvalue Var 0x13f827430 'cumfr' 'unsigned int'     |   | |   `-ImplicitCastExpr 0x13f827ca8 <col:30> 'unsigned int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x13f827c70 <col:30> 'unsigned int' lvalue Var 0x13f8274e8 'cnt_x' 'unsigned int'     |   | |-CompoundAssignOperator 0x13f827d70 <line:15:13, col:22> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |   | | |-DeclRefExpr 0x13f827d18 <col:13> 'unsigned int' lvalue Var 0x13f827430 'cumfr' 'unsigned int'     |   | | `-ImplicitCastExpr 0x13f827d58 <col:22> 'unsigned int' <LValueToRValue>     |   | |   `-DeclRefExpr 0x13f827d38 <col:22> 'unsigned int' lvalue Var 0x13f8274e8 'cnt_x' 'unsigned int'     |   | `-BreakStmt 0x13f827da0 <line:17:13>     |   `-UnaryOperator 0x13f827df8 <line:18:9, col:10> 'unsigned int' postfix '++'     |     `-DeclRefExpr 0x13f827dd8 <col:9> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'     |-BinaryOperator 0x13f827f20 <line:21:5, col:13> 'int' '='     | |-DeclRefExpr 0x13f827e58 <col:5> 'int' lvalue Var 0x13f827760 'c' 'int'     | `-ImplicitCastExpr 0x13f827f08 <col:9, col:13> 'int' <IntegralCast>     |   `-BinaryOperator 0x13f827ee8 <col:9, col:13> 'unsigned int' '*'     |     |-ImplicitCastExpr 0x13f827eb8 <col:9> 'unsigned int' <LValueToRValue>     |     | `-DeclRefExpr 0x13f827e78 <col:9> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'     |     `-ImplicitCastExpr 0x13f827ed0 <col:13> 'unsigned int' <IntegralCast>     |       `-IntegerLiteral 0x13f827e98 <col:13> 'int' 16     |-BinaryOperator 0x13f827f80 <line:22:5, col:13> 'int' '='     | |-DeclRefExpr 0x13f827f40 <col:5> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'     | `-IntegerLiteral 0x13f827f60 <col:13> 'int' 0     |-WhileStmt 0x13f828368 <line:23:5, line:30:5>     | |-BinaryOperator 0x13f827ff8 <line:23:12, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x13f827fe0 <col:12> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13f827fa0 <col:12> 'int' lvalue Var 0x13f827760 'c' 'int'     | | `-IntegerLiteral 0x13f827fc0 <col:16> 'int' 256     | `-CompoundStmt 0x13f828340 <col:21, line:30:5>     |   |-BinaryOperator 0x13f828110 <line:24:9, col:30> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13f828018 <col:9> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'     |   | `-ArraySubscriptExpr 0x13f8280f0 <col:17, col:30> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x13f8280c0 <col:17, col:24> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-CXXDependentScopeMemberExpr 0x13f828058 <col:17, col:24> '<dependent type>' contains-errors lvalue ->freq     |   |   |   `-RecoveryExpr 0x13f828038 <col:17> '<dependent type>' contains-errors lvalue     |   |   `-ImplicitCastExpr 0x13f8280d8 <col:29> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x13f8280a0 <col:29> 'int' lvalue Var 0x13f827760 'c' 'int'     |   |-IfStmt 0x13f8282d8 <line:25:9, line:28:13> has_else     |   | |-BinaryOperator 0x13f828210 <line:25:13, col:30> 'int' '>='     |   | | |-ImplicitCastExpr 0x13f8281f8 <col:13> 'unsigned int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13f828130 <col:13> 'unsigned int' lvalue Var 0x13f80e2e8 'value' 'unsigned int'     |   | | `-BinaryOperator 0x13f8281d8 <col:22, col:30> 'unsigned int' '+'     |   | |   |-ImplicitCastExpr 0x13f828190 <col:22> 'unsigned int' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x13f828150 <col:22> 'unsigned int' lvalue Var 0x13f827430 'cumfr' 'unsigned int'     |   | |   `-ImplicitCastExpr 0x13f8281c0 <col:30> 'unsigned int' <IntegralCast>     |   | |     `-ImplicitCastExpr 0x13f8281a8 <col:30> 'int' <LValueToRValue>     |   | |       `-DeclRefExpr 0x13f828170 <col:30> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'     |   | |-CompoundAssignOperator 0x13f8282a0 <line:26:13, col:22> 'unsigned int' '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |   | | |-DeclRefExpr 0x13f828230 <col:13> 'unsigned int' lvalue Var 0x13f827430 'cumfr' 'unsigned int'     |   | | `-ImplicitCastExpr 0x13f828288 <col:22> 'unsigned int' <IntegralCast>     |   | |   `-ImplicitCastExpr 0x13f828270 <col:22> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x13f828250 <col:22> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'     |   | `-BreakStmt 0x13f8282d0 <line:28:13>     |   `-UnaryOperator 0x13f828328 <line:29:9, col:10> 'int' postfix '++'     |     `-DeclRefExpr 0x13f828308 <col:9> 'int' lvalue Var 0x13f827760 'c' 'int'     |-IfStmt 0x13f8293c8 <line:32:5, line:33:16>     | |-RecoveryExpr 0x13f829360 <line:32:9, col:58> '_Bool' contains-errors     | `-ReturnStmt 0x13f8293b8 <line:33:9, col:16>     |   `-ImplicitCastExpr 0x13f8293a0 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13f829380 <col:16> 'int' lvalue Var 0x13f8276e0 'ret' 'int'     |-BinaryOperator 0x13f829590 <line:35:5, col:30> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x13f8294c8 <col:5, col:18> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x13f829498 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x13f829430 <col:5, col:12> '<dependent type>' contains-errors lvalue ->freq     | | |   `-RecoveryExpr 0x13f829408 <col:5> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x13f8293e8 <col:5> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'     | | `-ImplicitCastExpr 0x13f8294b0 <col:17> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x13f829478 <col:17> 'int' lvalue Var 0x13f827760 'c' 'int'     | `-BinaryOperator 0x13f829570 <col:22, col:30> 'unsigned int' '+'     |   |-ImplicitCastExpr 0x13f829558 <col:22> 'unsigned int' <IntegralCast>     |   | `-ImplicitCastExpr 0x13f829528 <col:22> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x13f8294e8 <col:22> 'int' lvalue Var 0x13f8277e0 'cnt_c' 'int'     |   `-ImplicitCastExpr 0x13f829540 <col:30> 'unsigned int' <LValueToRValue>     |     `-DeclRefExpr 0x13f829508 <col:30> 'unsigned int' lvalue ParmVar 0x13f80de28 'step' 'unsigned int'     |-BinaryOperator 0x13f829740 <line:36:5, col:32> '<dependent type>' contains-errors '='     | |-ArraySubscriptExpr 0x13f829690 <col:5, col:20> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x13f829660 <col:5, col:12> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x13f8295f8 <col:5, col:12> '<dependent type>' contains-errors lvalue ->lookup     | | |   `-RecoveryExpr 0x13f8295d0 <col:5> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x13f8295b0 <col:5> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'     | | `-ImplicitCastExpr 0x13f829678 <col:19> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x13f829640 <col:19> 'unsigned int' lvalue Var 0x13f80e368 'x' 'unsigned int'     | `-BinaryOperator 0x13f829720 <col:24, col:32> 'unsigned int' '+'     |   |-ImplicitCastExpr 0x13f8296f0 <col:24> 'unsigned int' <LValueToRValue>     |   | `-DeclRefExpr 0x13f8296b0 <col:24> 'unsigned int' lvalue Var 0x13f8274e8 'cnt_x' 'unsigned int'     |   `-ImplicitCastExpr 0x13f829708 <col:32> 'unsigned int' <LValueToRValue>     |     `-DeclRefExpr 0x13f8296d0 <col:32> 'unsigned int' lvalue ParmVar 0x13f80de28 'step' 'unsigned int'     |-CompoundAssignOperator 0x13f8297b8 <line:37:5, col:14> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     | |-DeclRefExpr 0x13f829760 <col:5> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'     | `-ImplicitCastExpr 0x13f8297a0 <col:14> 'unsigned int' <LValueToRValue>     |   `-DeclRefExpr 0x13f829780 <col:14> 'unsigned int' lvalue ParmVar 0x13f80de28 'step' 'unsigned int'     |-IfStmt 0x13f82abf8 <line:38:5, line:52:5>     | |-BinaryOperator 0x13f829860 <line:38:9, col:17> 'int' contains-errors '>'     | | |-DeclRefExpr 0x13f8297e8 <col:9> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'     | | `-RecoveryExpr 0x13f829840 <col:17> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f82abd0 <col:22, line:52:5>     |   |-BinaryOperator 0x13f8298d8 <line:39:9, col:17> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x13f829880 <col:9> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'     |   | `-ImplicitCastExpr 0x13f8298c0 <col:17> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x13f8298a0 <col:17> 'int' 0     |   |-ForStmt 0x13f829e08 <line:40:9, line:44:9>     |   | |-BinaryOperator 0x13f829938 <line:40:14, col:18> 'int' '='     |   | | |-DeclRefExpr 0x13f8298f8 <col:14> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |   | | `-IntegerLiteral 0x13f829918 <col:18> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x13f8299b0 <col:21, col:25> 'int' '<'     |   | | |-ImplicitCastExpr 0x13f829998 <col:21> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x13f829958 <col:21> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |   | | `-IntegerLiteral 0x13f829978 <col:25> 'int' 256     |   | |-UnaryOperator 0x13f8299f0 <col:30, col:31> 'int' postfix '++'     |   | | `-DeclRefExpr 0x13f8299d0 <col:30> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |   | `-CompoundStmt 0x13f829de0 <col:35, line:44:9>     |   |   |-DeclStmt 0x13f829c00 <line:41:13, col:52>     |   |   | `-VarDecl 0x13f829a20 <col:13, col:51> col:22 used nc 'unsigned int' cinit     |   |   |   `-BinaryOperator 0x13f829be0 <col:27, col:51> '<dependent type>' contains-errors '+'     |   |   |     |-ParenExpr 0x13f829ba0 <col:27, col:47> '<dependent type>' contains-errors     |   |   |     | `-BinaryOperator 0x13f829b80 <col:28, col:46> '<dependent type>' contains-errors '>>'     |   |   |     |   |-ArraySubscriptExpr 0x13f829b40 <col:28, col:41> '<dependent type>' contains-errors lvalue     |   |   |     |   | |-ImplicitCastExpr 0x13f829b10 <col:28, col:35> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     |   | | `-CXXDependentScopeMemberExpr 0x13f829aa8 <col:28, col:35> '<dependent type>' contains-errors lvalue ->freq     |   |   |     |   | |   `-RecoveryExpr 0x13f829a88 <col:28> '<dependent type>' contains-errors lvalue     |   |   |     |   | `-ImplicitCastExpr 0x13f829b28 <col:40> 'int' <LValueToRValue>     |   |   |     |   |   `-DeclRefExpr 0x13f829af0 <col:40> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |   |   |     |   `-IntegerLiteral 0x13f829b60 <col:46> 'int' 1     |   |   |     `-IntegerLiteral 0x13f829bc0 <col:51> 'int' 1     |   |   |-BinaryOperator 0x13f829d38 <line:42:13, col:30> '<dependent type>' contains-errors '='     |   |   | |-ArraySubscriptExpr 0x13f829cf8 <col:13, col:26> '<dependent type>' contains-errors lvalue     |   |   | | |-ImplicitCastExpr 0x13f829cc8 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | | `-CXXDependentScopeMemberExpr 0x13f829c60 <col:13, col:20> '<dependent type>' contains-errors lvalue ->freq     |   |   | | |   `-RecoveryExpr 0x13f829c38 <col:13> '<dependent type>' contains-errors lvalue     |   |   | | |     `-DeclRefExpr 0x13f829c18 <col:13> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'     |   |   | | `-ImplicitCastExpr 0x13f829ce0 <col:25> 'int' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x13f829ca8 <col:25> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |   |   | `-DeclRefExpr 0x13f829d18 <col:30> 'unsigned int' contains-errors lvalue Var 0x13f829a20 'nc' 'unsigned int'     |   |   `-CompoundAssignOperator 0x13f829db0 <line:43:13, col:22> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |   |     |-DeclRefExpr 0x13f829d58 <col:13> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'     |   |     `-ImplicitCastExpr 0x13f829d98 <col:22> 'unsigned int' contains-errors <LValueToRValue>     |   |       `-DeclRefExpr 0x13f829d78 <col:22> 'unsigned int' contains-errors lvalue Var 0x13f829a20 'nc' 'unsigned int'     |   `-ForStmt 0x13f82ab98 <line:45:9, line:51:9>     |     |-BinaryOperator 0x13f829e80 <line:45:14, col:18> 'int' '='     |     | |-DeclRefExpr 0x13f829e40 <col:14> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |     | `-IntegerLiteral 0x13f829e60 <col:18> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x13f829ef8 <col:21, col:25> 'int' '<'     |     | |-ImplicitCastExpr 0x13f829ee0 <col:21> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x13f829ea0 <col:21> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |     | `-IntegerLiteral 0x13f829ec0 <col:25> 'int' 16     |     |-UnaryOperator 0x13f829f38 <col:29, col:30> 'int' postfix '++'     |     | `-DeclRefExpr 0x13f829f18 <col:29> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |     `-CompoundStmt 0x13f82ab68 <col:34, line:51:9>     |       |-DeclStmt 0x13f82a008 <line:46:13, col:29>     |       | `-VarDecl 0x13f829f68 <col:13, col:28> col:22 used sum 'unsigned int' cinit     |       |   `-ImplicitCastExpr 0x13f829ff0 <col:28> 'unsigned int' <IntegralCast>     |       |     `-IntegerLiteral 0x13f829fd0 <col:28> 'int' 0     |       |-DeclStmt 0x13f82a130 <line:47:13, col:37>     |       | `-VarDecl 0x13f82a038 <col:13, col:36> col:22 used i16_17 'unsigned int' cinit     |       |   `-ImplicitCastExpr 0x13f82a118 <col:31, col:36> 'unsigned int' <IntegralCast>     |       |     `-BinaryOperator 0x13f82a0f8 <col:31, col:36> 'int' '<<'     |       |       |-ImplicitCastExpr 0x13f82a0e0 <col:31> 'int' <LValueToRValue>     |       |       | `-DeclRefExpr 0x13f82a0a0 <col:31> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |       |       `-IntegerLiteral 0x13f82a0c0 <col:36> 'int' 4     |       |-ForStmt 0x13f82a9f0 <line:48:13, line:49:46>     |       | |-BinaryOperator 0x13f82a188 <line:48:18, col:22> 'int' '='     |       | | |-DeclRefExpr 0x13f82a148 <col:18> 'int' lvalue Var 0x13f827660 'j' 'int'     |       | | `-IntegerLiteral 0x13f82a168 <col:22> 'int' 0     |       | |-<<<NULL>>>     |       | |-BinaryOperator 0x13f82a800 <col:25, col:29> 'int' '<'     |       | | |-ImplicitCastExpr 0x13f82a1e8 <col:25> 'int' <LValueToRValue>     |       | | | `-DeclRefExpr 0x13f82a1a8 <col:25> 'int' lvalue Var 0x13f827660 'j' 'int'     |       | | `-IntegerLiteral 0x13f82a1c8 <col:29> 'int' 16     |       | |-UnaryOperator 0x13f82a840 <col:33, col:34> 'int' postfix '++'     |       | | `-DeclRefExpr 0x13f82a820 <col:33> 'int' lvalue Var 0x13f827660 'j' 'int'     |       | `-CompoundAssignOperator 0x13f82a9c0 <line:49:17, col:46> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |       |   |-DeclRefExpr 0x13f82a858 <col:17> 'unsigned int' lvalue Var 0x13f829f68 'sum' 'unsigned int'     |       |   `-ArraySubscriptExpr 0x13f82a9a0 <col:24, col:46> '<dependent type>' contains-errors lvalue     |       |     |-ImplicitCastExpr 0x13f82a988 <col:24, col:31> '<dependent type>' contains-errors <LValueToRValue>     |       |     | `-CXXDependentScopeMemberExpr 0x13f82a898 <col:24, col:31> '<dependent type>' contains-errors lvalue ->freq     |       |     |   `-RecoveryExpr 0x13f82a878 <col:24> '<dependent type>' contains-errors lvalue     |       |     `-BinaryOperator 0x13f82a968 <col:36, col:45> 'unsigned int' '+'     |       |       |-ImplicitCastExpr 0x13f82a920 <col:36> 'unsigned int' <LValueToRValue>     |       |       | `-DeclRefExpr 0x13f82a8e0 <col:36> 'unsigned int' lvalue Var 0x13f82a038 'i16_17' 'unsigned int'     |       |       `-ImplicitCastExpr 0x13f82a950 <col:45> 'unsigned int' <IntegralCast>     |       |         `-ImplicitCastExpr 0x13f82a938 <col:45> 'int' <LValueToRValue>     |       |           `-DeclRefExpr 0x13f82a900 <col:45> 'int' lvalue Var 0x13f827660 'j' 'int'     |       `-BinaryOperator 0x13f82ab48 <line:50:13, col:32> '<dependent type>' contains-errors '='     |         |-ArraySubscriptExpr 0x13f82ab08 <col:13, col:28> '<dependent type>' contains-errors lvalue     |         | |-ImplicitCastExpr 0x13f82aad8 <col:13, col:20> '<dependent type>' contains-errors <LValueToRValue>     |         | | `-CXXDependentScopeMemberExpr 0x13f82aa70 <col:13, col:20> '<dependent type>' contains-errors lvalue ->lookup     |         | |   `-RecoveryExpr 0x13f82aa48 <col:13> '<dependent type>' contains-errors lvalue     |         | |     `-DeclRefExpr 0x13f82aa28 <col:13> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'     |         | `-ImplicitCastExpr 0x13f82aaf0 <col:27> 'int' <LValueToRValue>     |         |   `-DeclRefExpr 0x13f82aab8 <col:27> 'int' lvalue Var 0x13f8275e0 'i' 'int'     |         `-DeclRefExpr 0x13f82ab28 <col:32> 'unsigned int' lvalue Var 0x13f829f68 'sum' 'unsigned int'     |-BinaryOperator 0x13f82acc8 <line:53:5, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f82ac60 <col:5, col:12> '<dependent type>' contains-errors lvalue ->total_freq     | | `-RecoveryExpr 0x13f82ac38 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f82ac18 <col:5> 'int *' lvalue ParmVar 0x13f80dda8 'pixel' 'int *'     | `-DeclRefExpr 0x13f82aca8 <col:25> 'unsigned int' contains-errors lvalue Var 0x13f80e1e8 'totfr' 'unsigned int'     |-BinaryOperator 0x13f82ade0 <line:55:5, col:20> 'unsigned int' contains-errors '='     | |-UnaryOperator 0x13f82ad20 <col:5, col:6> 'unsigned int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13f82ad08 <col:6> 'unsigned int *' <LValueToRValue>     | |   `-DeclRefExpr 0x13f82ace8 <col:6> 'unsigned int *' lvalue ParmVar 0x13f80ded8 'rval' 'unsigned int *'     | `-BinaryOperator 0x13f82adc0 <col:13, col:20> '<dependent type>' contains-errors '&'     |   |-DeclRefExpr 0x13f82ad38 <col:13> 'int' lvalue Var 0x13f827760 'c' 'int'     |   `-CXXDependentScopeMemberExpr 0x13f82ad78 <col:17, col:20> '<dependent type>' contains-errors lvalue ->cbits     |     `-RecoveryExpr 0x13f82ad58 <col:17> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13f82ae20 <line:57:5, col:12>       `-IntegerLiteral 0x13f82ae00 <col:12> 'int' 0 ","19383":"`-FunctionDecl 0x154128288  line:1:14 invalid MaxEval 'int (int *, int *)'   |-ParmVarDecl 0x154128128 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x1541281a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x1541421b0 <col:64, line:29:1>     |-DeclStmt 0x154128478 <line:2:3, col:73>     | `-VarDecl 0x154128358 <col:3, col:9> col:9 used params 'int *' auto     |-DeclStmt 0x154141a00 <line:6:3, col:57>     | `-VarDecl 0x154141800 <col:3, col:23> col:23 invalid input 'const int *'     `-SwitchStmt 0x154141a98 <line:7:3, line:27:3>       |-ImplicitCastExpr 0x154141a80 <line:7:11, col:18> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x154141a38 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x154141a18 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x154142178 <col:24, line:27:3>         |-BreakStmt 0x154141bb0 <line:10:7>         |-BreakStmt 0x154141c78 <line:14:7>         |-BreakStmt 0x154141d40 <line:18:7>         |-BreakStmt 0x154141e08 <line:22:7>         `-DefaultStmt 0x154142158 <line:23:5, line:25:56>           `-CallExpr 0x154142120 <line:24:7, line:25:56> '<dependent type>' contains-errors             |-DeclRefExpr 0x154141ef0 <line:24:7> 'int ()' Function 0x154141e38 'TF_LITE_KERNEL_LOG' 'int ()'             |-RecoveryExpr 0x154141f10 <col:26> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x154141f70 <col:35> 'char[4]' lvalue \"STR\"             `-CallExpr 0x1541420f8 <line:25:26, col:55> '<dependent type>' contains-errors               |-DeclRefExpr 0x154142070 <col:26> 'int ()' Function 0x154141fb8 'TfLiteTypeGetName' 'int ()'               `-CXXDependentScopeMemberExpr 0x1541420b0 <col:44, col:51> '<dependent type>' contains-errors lvalue ->type                 `-RecoveryExpr 0x154142090 <col:44> '<dependent type>' contains-errors lvalue ","19616":"`-FunctionDecl 0x13a928a58  line:1:1 invalid pattern_apply_fallback 'int (int, int)'   |-ParmVarDecl 0x13a9288f0 <col:25, col:34> col:34 invalid data 'int'   |-ParmVarDecl 0x13a928970 <col:40, col:49> col:49 invalid fallback_data 'int'   `-CompoundStmt 0x13a942350 <line:2:1, line:47:1>     |-IfStmt 0x13a928e38 <line:9:5, line:12:5>     | |-BinaryOperator 0x13a928d90 <line:9:9, col:37> 'int' contains-errors '&&'     | | |-UnaryOperator 0x13a928d10 <col:9, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x13a928cf8 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x13a928cb0 <col:10, col:19> '<dependent type>' contains-errors lvalue ->hasx     | | |     `-RecoveryExpr 0x13a928c90 <col:10> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x13a928d48 <col:27, col:37> '<dependent type>' contains-errors lvalue ->hasx     | |   `-RecoveryExpr 0x13a928d28 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a928e28 <col:43, line:12:5>     |-IfStmt 0x13a9420b0 <line:13:5, line:16:5>     | |-BinaryOperator 0x13a942068 <line:13:9, col:37> 'int' contains-errors '&&'     | | |-UnaryOperator 0x13a928fe8 <col:9, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x13a928fd0 <col:10, col:19> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x13a928f88 <col:10, col:19> '<dependent type>' contains-errors lvalue ->hasy     | | |     `-RecoveryExpr 0x13a928f68 <col:10> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x13a942020 <col:27, col:37> '<dependent type>' contains-errors lvalue ->hasy     | |   `-RecoveryExpr 0x13a942000 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a9420a0 <col:43, line:16:5>     |-IfStmt 0x13a942100 <line:17:5, line:20:5>     | |-RecoveryExpr 0x13a9420d0 <line:17:9, col:41> '_Bool' contains-errors     | `-CompoundStmt 0x13a9420f0 <col:51, line:20:5>     |-IfStmt 0x13a942150 <line:21:5, line:24:5>     | |-RecoveryExpr 0x13a942120 <line:21:9, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x13a942140 <col:53, line:24:5>     |-IfStmt 0x13a9421a0 <line:25:5, line:28:5>     | |-RecoveryExpr 0x13a942170 <line:25:9, col:45> '_Bool' contains-errors     | `-CompoundStmt 0x13a942190 <col:59, line:28:5>     |-IfStmt 0x13a9421f0 <line:29:5, line:31:5>     | |-RecoveryExpr 0x13a9421c0 <line:29:9, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x13a9421e0 <col:49, line:31:5>     |-IfStmt 0x13a942240 <line:32:5, line:35:5>     | |-RecoveryExpr 0x13a942210 <line:32:9, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x13a942230 <col:53, line:35:5>     |-IfStmt 0x13a942290 <line:36:5, line:39:5>     | |-RecoveryExpr 0x13a942260 <line:36:9, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x13a942280 <col:49, line:39:5>     |-IfStmt 0x13a9422e0 <line:40:5, line:43:5>     | |-RecoveryExpr 0x13a9422b0 <line:40:9, col:40> '_Bool' contains-errors     | `-CompoundStmt 0x13a9422d0 <col:49, line:43:5>     `-IfStmt 0x13a942330 <line:44:5, line:46:5>       |-RecoveryExpr 0x13a942300 <line:44:9, col:68> '_Bool' contains-errors       `-CompoundStmt 0x13a942320 <col:73, line:46:5> ","19842":"`-FunctionDecl 0x147008408  line:1:1 send_sig_info 'int (int, struct siginfo *, struct task_struct *)'   |-ParmVarDecl 0x14600dcd8 <col:15, col:19> col:19 used sig 'int'   |-ParmVarDecl 0x14600e2c8 <col:24, col:40> col:40 used info 'struct siginfo *'   |-ParmVarDecl 0x1470082c8 <col:46, col:66> col:66 used p 'struct task_struct *'   `-CompoundStmt 0x147008a10 <line:2:1, line:8:1>     |-IfStmt 0x1470087c8 <line:4:2, line:5:11>     | |-UnaryOperator 0x147008708 <line:4:6, col:23> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1470086c8 <col:7, col:23> 'int'     | |   |-ImplicitCastExpr 0x1470086b0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x147008640 <col:7> 'int ()' Function 0x147008588 'valid_signal' 'int ()'     | |   `-ImplicitCastExpr 0x1470086f0 <col:20> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x147008660 <col:20> 'int' lvalue ParmVar 0x14600dcd8 'sig' 'int'     | `-ReturnStmt 0x1470087b8 <line:5:3, col:11>     |   `-UnaryOperator 0x1470087a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x147008788 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x147008768 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x147008a00 <line:7:2, col:45>       `-CallExpr 0x1470089c0 <col:9, col:45> '<dependent type>' contains-errors         |-DeclRefExpr 0x1470088c8 <col:9> 'int ()' Function 0x147008810 'do_send_sig_info' 'int ()'         |-DeclRefExpr 0x1470088e8 <col:26> 'int' lvalue ParmVar 0x14600dcd8 'sig' 'int'         |-DeclRefExpr 0x147008908 <col:31> 'struct siginfo *' lvalue ParmVar 0x14600e2c8 'info' 'struct siginfo *'         |-DeclRefExpr 0x147008928 <col:37> 'struct task_struct *' lvalue ParmVar 0x1470082c8 'p' 'struct task_struct *'         `-RecoveryExpr 0x1470089a0 <col:40> '<dependent type>' contains-errors lvalue ","19839":"`-FunctionDecl 0x13e00df18  line:1:5 invalid ssh_scp_write 'int (int, const void *, int)'   |-ParmVarDecl 0x13e00dcf0 <col:19, col:27> col:27 referenced invalid scp 'int'   |-ParmVarDecl 0x13e00dda8 <col:32, col:44> col:44 used buffer 'const void *'   |-ParmVarDecl 0x13e00de28 <col:52, col:59> col:59 referenced invalid len 'int'   `-CompoundStmt 0x13e028310 <col:63, line:51:1>     |-DeclStmt 0x13e00e058 <line:2:3, col:8>     | `-VarDecl 0x13e00dff0 <col:3, col:7> col:7 used w 'int'     |-DeclStmt 0x13e00e0f0 <line:3:3, col:8>     | `-VarDecl 0x13e00e088 <col:3, col:7> col:7 used r 'int'     |-IfStmt 0x13e00e1e8 <line:5:3, line:6:14>     | |-BinaryOperator 0x13e00e180 <line:5:6, col:11> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13e00e108 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13e00e160 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13e00e1d8 <line:6:7, col:14>     |   `-RecoveryExpr 0x13e00e1b8 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d922eb8 <line:7:3, line:10:3>     | |-BinaryOperator 0x13e00e2c8 <line:7:6, col:20> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x13e00e228 <col:6, col:11> '<dependent type>' contains-errors lvalue ->state     | | | `-RecoveryExpr 0x13e00e208 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13e00e2a8 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d922e98 <col:42, line:10:3>     |   |-CallExpr 0x13d922e18 <line:8:5, col:47> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13d922cb8 <col:5> 'int ()' Function 0x13d922c00 'ssh_set_error' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x13d922cf8 <col:19, col:24> '<dependent type>' contains-errors lvalue ->session     |   | | `-RecoveryExpr 0x13d922cd8 <col:19> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x13d922df8 <col:32> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x13d922da0 <col:42> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x13d922e88 <line:9:5, col:12>     |     `-RecoveryExpr 0x13d922e68 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d923200 <line:11:3, line:12:50>     | |-BinaryOperator 0x13d922fe8 <line:11:6, col:34> 'int' contains-errors '>'     | | |-BinaryOperator 0x13d922f60 <col:6, col:23> '<dependent type>' contains-errors '+'     | | | |-CXXDependentScopeMemberExpr 0x13d922ef8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->processed     | | | | `-RecoveryExpr 0x13d922ed8 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x13d922f40 <col:23> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x13d922fa0 <col:29, col:34> '<dependent type>' contains-errors lvalue ->filelen     | |   `-RecoveryExpr 0x13d922f80 <col:29> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x13d9231e0 <line:12:5, col:50> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13d923028 <col:5> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13d923008 <col:5> 'int' lvalue ParmVar 0x13e00de28 'len' 'int'     |   `-CallExpr 0x13d9231b8 <col:11, col:50> '<dependent type>' contains-errors     |     |-ParenExpr 0x13d9230a8 <col:11, col:18> '<overloaded function type>' lvalue     |     | `-UnresolvedLookupExpr 0x13d923068 <col:12> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty     |     `-BinaryOperator 0x13d923198 <col:21, col:41> '<dependent type>' contains-errors '-'     |       |-CXXDependentScopeMemberExpr 0x13d9230e8 <col:21, col:26> '<dependent type>' contains-errors lvalue ->filelen     |       | `-RecoveryExpr 0x13d9230c8 <col:21> '<dependent type>' contains-errors lvalue     |       `-CXXDependentScopeMemberExpr 0x13d923150 <col:36, col:41> '<dependent type>' contains-errors lvalue ->processed     |         `-RecoveryExpr 0x13d923130 <col:36> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d9233f8 <line:14:3, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x13d923220 <col:3> 'int' lvalue Var 0x13e00e088 'r' 'int'     | `-CallExpr 0x13d9233c8 <col:7, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d923320 <col:7> 'int ()' Function 0x13d923268 'ssh_channel_poll' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x13d923360 <col:24, col:29> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x13d923340 <col:24> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13d9233a8 <col:38> 'int' 0     |-IfStmt 0x13d923620 <line:15:3, line:18:3>     | |-BinaryOperator 0x13d923490 <line:15:7, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x13d923418 <col:7> 'int' lvalue Var 0x13e00e088 'r' 'int'     | | `-RecoveryExpr 0x13d923470 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d923600 <col:23, line:18:3>     |   |-BinaryOperator 0x13d923598 <line:16:7, col:20> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13d9234f8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->state     |   | | `-RecoveryExpr 0x13d9234d0 <col:7> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13d9234b0 <col:7> 'int' lvalue ParmVar 0x13e00dcf0 'scp' 'int'     |   | `-RecoveryExpr 0x13d923578 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13d9235f0 <line:17:7, col:14>     |     `-RecoveryExpr 0x13d9235d0 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d923840 <line:19:3, col:46> 'int' contains-errors '='     | |-DeclRefExpr 0x13d923640 <col:3> 'int' lvalue Var 0x13e00dff0 'w' 'int'     | `-CallExpr 0x13d923808 <col:5, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d923740 <col:5> 'int ()' Function 0x13d923688 'ssh_channel_write' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x13d923780 <col:23, col:28> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x13d923760 <col:23> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x13d9237c8 <col:36> 'const void *' lvalue ParmVar 0x13e00dda8 'buffer' 'const void *'     |   `-RecoveryExpr 0x13d9237e8 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d923b48 <line:20:3, line:26:3> has_else     | |-BinaryOperator 0x13d9238d8 <line:20:6, col:11> 'int' contains-errors '!='     | | |-DeclRefExpr 0x13d923860 <col:6> 'int' lvalue Var 0x13e00dff0 'w' 'int'     | | `-RecoveryExpr 0x13d9238b8 <col:11> '<dependent type>' contains-errors lvalue     | |-CompoundAssignOperator 0x13d9239a8 <line:21:5, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | |-CXXDependentScopeMemberExpr 0x13d923940 <col:5, col:10> '<dependent type>' contains-errors lvalue ->processed     | | | `-RecoveryExpr 0x13d923918 <col:5> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x13d9238f8 <col:5> 'int' lvalue ParmVar 0x13e00dcf0 'scp' 'int'     | | `-DeclRefExpr 0x13d923988 <col:23> 'int' lvalue Var 0x13e00dff0 'w' 'int'     | `-CompoundStmt 0x13d923b28 <line:22:8, line:26:3>     |   |-BinaryOperator 0x13d923ac0 <line:23:5, col:16> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13d923a20 <col:5, col:10> '<dependent type>' contains-errors lvalue ->state     |   | | `-RecoveryExpr 0x13d9239f8 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13d9239d8 <col:5> 'int' lvalue ParmVar 0x13e00dcf0 'scp' 'int'     |   | `-RecoveryExpr 0x13d923aa0 <col:16> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13d923b18 <line:25:5, col:12>     |     `-RecoveryExpr 0x13d923af8 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13e027898 <line:28:3, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x13d923b78 <col:3> 'int' lvalue Var 0x13e00e088 'r' 'int'     | `-CallExpr 0x13e027868 <col:7, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d923b98 <col:7> 'int ()' Function 0x13d923268 'ssh_channel_poll' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x13e027800 <col:24, col:29> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x13d923bb8 <col:24> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13e027848 <col:37> 'int' 0     |-IfStmt 0x13e027df0 <line:29:3, line:38:3>     | |-BinaryOperator 0x13e027910 <line:29:6, col:10> 'int' '>'     | | |-ImplicitCastExpr 0x13e0278f8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13e0278b8 <col:6> 'int' lvalue Var 0x13e00e088 'r' 'int'     | | `-IntegerLiteral 0x13e0278d8 <col:10> 'int' 0     | `-CompoundStmt 0x13e027dc8 <col:12, line:38:3>     |   |-BinaryOperator 0x13e027c00 <line:30:5, col:51> 'int' contains-errors '='     |   | |-DeclRefExpr 0x13e027930 <col:5> 'int' lvalue Var 0x13e00e088 'r' 'int'     |   | `-CallExpr 0x13e027bc0 <col:9, col:51> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13e027a30 <col:9> 'int ()' Function 0x13e027978 'ssh_channel_read' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x13e027a70 <col:26, col:31> '<dependent type>' contains-errors lvalue ->channel     |   |   | `-RecoveryExpr 0x13e027a50 <col:26> '<dependent type>' contains-errors lvalue     |   |   |-UnaryOperator 0x13e027ba8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x13e027b88 <col:41> '<dependent type>' contains-errors lvalue     |   |   |-IntegerLiteral 0x13e027ae8 <col:47> 'int' 1     |   |   `-IntegerLiteral 0x13e027b08 <col:50> 'int' 0     |   |-IfStmt 0x13e027c70 <line:31:5, line:33:5>     |   | |-RecoveryExpr 0x13e027c40 <line:31:8, col:13> '_Bool' contains-errors     |   | `-CompoundStmt 0x13e027c60 <col:23, line:33:5>     |   `-IfStmt 0x13e027da8 <line:34:5, line:37:5>     |     |-RecoveryExpr 0x13e027cd0 <line:34:8, col:29> '_Bool' contains-errors     |     `-CompoundStmt 0x13e027d98 <col:31, line:37:5>     `-IfStmt 0x13e0282f0 <line:40:3, line:49:3>       |-BinaryOperator 0x13e027ee0 <line:40:6, col:29> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x13e027e30 <col:6, col:11> '<dependent type>' contains-errors lvalue ->processed       | | `-RecoveryExpr 0x13e027e10 <col:6> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x13e027e98 <col:24, col:29> '<dependent type>' contains-errors lvalue ->filelen       |   `-RecoveryExpr 0x13e027e78 <col:24> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13e0282d0 <col:38, line:49:3>         |-IfStmt 0x13e0280c8 <line:43:5, line:46:5>         | |-RecoveryExpr 0x13e028008 <line:43:8, col:13> '_Bool' contains-errors         | `-CompoundStmt 0x13e0280b8 <col:23, line:46:5>         `-BinaryOperator 0x13e028220 <line:47:5, col:33> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x13e028130 <col:5, col:10> '<dependent type>' contains-errors lvalue ->processed           | `-RecoveryExpr 0x13e028108 <col:5> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x13e0280e8 <col:5> 'int' lvalue ParmVar 0x13e00dcf0 'scp' 'int'           `-BinaryOperator 0x13e028200 <col:20, col:33> '<dependent type>' contains-errors '='             |-CXXDependentScopeMemberExpr 0x13e028198 <col:20, col:25> '<dependent type>' contains-errors lvalue ->filelen             | `-RecoveryExpr 0x13e028178 <col:20> '<dependent type>' contains-errors lvalue             `-IntegerLiteral 0x13e0281e0 <col:33> 'int' 0 ","19161":"`-FunctionDecl 0x13000e358  line:1:12 eb_copy_relocations 'int (const struct i915_execbuffer *)' static   |-ParmVarDecl 0x13000e248 <col:32, col:62> col:62 used eb 'const struct i915_execbuffer *'   `-CompoundStmt 0x13812b690 <line:2:1, line:70:1>     |-DeclStmt 0x130026730 <line:3:2, col:45>     | `-VarDecl 0x130026668 <col:2, col:33> col:21 used count 'const unsigned int' cinit     |   `-RecoveryExpr 0x130026708 <col:29, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1300266d0 <col:29> 'const struct i915_execbuffer *' lvalue ParmVar 0x13000e248 'eb' 'const struct i915_execbuffer *'     |-DeclStmt 0x1300267c8 <line:4:2, col:16>     | `-VarDecl 0x130026760 <col:2, col:15> col:15 used i 'unsigned int'     |-DeclStmt 0x130026860 <line:5:2, col:9>     | `-VarDecl 0x1300267f8 <col:2, col:6> col:6 used err 'int'     |-ForStmt 0x13812af58 <line:7:2, line:58:2>     | |-BinaryOperator 0x1300268d0 <line:7:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x130026878 <col:7> 'unsigned int' lvalue Var 0x130026760 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x1300268b8 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x130026898 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x130026960 <col:14, col:18> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x130026930 <col:14> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x1300268f0 <col:14> 'unsigned int' lvalue Var 0x130026760 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x130026948 <col:18> 'unsigned int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x130026910 <col:18> 'const unsigned int' contains-errors lvalue Var 0x130026668 'count' 'const unsigned int'     | |-UnaryOperator 0x1300269a0 <col:25, col:26> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x130026980 <col:25> 'unsigned int' lvalue Var 0x130026760 'i' 'unsigned int'     | `-CompoundStmt 0x13812aed0 <col:30, line:58:2>     |   |-DeclStmt 0x130026b50 <line:8:3, col:59>     |   | `-VarDecl 0x1300269d0 <col:3, col:43> col:22 used nreloc 'const unsigned int' cinit     |   |   `-CXXDependentScopeMemberExpr 0x130026b08 <col:31, col:43> '<dependent type>' contains-errors lvalue .relocation_count     |   |     `-ArraySubscriptExpr 0x130026ae8 <col:31, col:41> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x130026ab8 <col:31, col:35> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-RecoveryExpr 0x130026a70 <col:31, col:35> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x130026a38 <col:31> 'const struct i915_execbuffer *' lvalue ParmVar 0x13000e248 'eb' 'const struct i915_execbuffer *'     |   |       `-ImplicitCastExpr 0x130026ad0 <col:40> 'unsigned int' <LValueToRValue>     |   |         `-DeclRefExpr 0x130026a98 <col:40> 'unsigned int' lvalue Var 0x130026760 'i' 'unsigned int'     |   |-DeclStmt 0x130026ce8 <line:9:3, col:47>     |   | |-RecordDecl 0x130026b68 <col:3, col:10> col:10 struct drm_i915_gem_relocation_entry     |   | `-VarDecl 0x130026c68 <col:3, col:40> col:40 invalid __user 'struct drm_i915_gem_relocation_entry'     |   |-DeclStmt 0x130026e20 <line:10:3, col:47>     |   | `-VarDecl 0x130026db8 <col:3, col:41> col:41 used relocs 'struct drm_i915_gem_relocation_entry *'     |   |-DeclStmt 0x130026eb8 <line:11:3, col:21>     |   | `-VarDecl 0x130026e50 <col:3, col:17> col:17 used size 'unsigned long'     |   |-DeclStmt 0x130026f50 <line:12:3, col:23>     |   | `-VarDecl 0x130026ee8 <col:3, col:17> col:17 used copied 'unsigned long'     |   |-IfStmt 0x130027000 <line:14:3, line:15:4>     |   | |-BinaryOperator 0x130026fd8 <line:14:7, col:17> 'int' contains-errors '=='     |   | | |-ImplicitCastExpr 0x130026fa8 <col:7> 'unsigned int' contains-errors <LValueToRValue>     |   | | | `-DeclRefExpr 0x130026f68 <col:7> 'const unsigned int' contains-errors lvalue Var 0x1300269d0 'nreloc' 'const unsigned int'     |   | | `-ImplicitCastExpr 0x130026fc0 <col:17> 'unsigned int' <IntegralCast>     |   | |   `-IntegerLiteral 0x130026f88 <col:17> 'int' 0     |   | `-ContinueStmt 0x130026ff8 <line:15:4>     |   |-BinaryOperator 0x1300272a0 <line:17:3, col:39> 'int' contains-errors '='     |   | |-DeclRefExpr 0x130027020 <col:3> 'int' lvalue Var 0x1300267f8 'err' 'int'     |   | `-CallExpr 0x130027278 <col:9, col:39> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x130027170 <col:9> 'int ()' Function 0x1300270b8 'check_relocations' 'int ()'     |   |   `-UnaryOperator 0x130027260 <col:27, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-ArraySubscriptExpr 0x130027240 <col:28, col:38> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x130027210 <col:28, col:32> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-RecoveryExpr 0x1300271c8 <col:28, col:32> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x130027190 <col:28> 'const struct i915_execbuffer *' lvalue ParmVar 0x13000e248 'eb' 'const struct i915_execbuffer *'     |   |       `-ImplicitCastExpr 0x130027228 <col:37> 'unsigned int' <LValueToRValue>     |   |         `-DeclRefExpr 0x1300271f0 <col:37> 'unsigned int' lvalue Var 0x130026760 'i' 'unsigned int'     |   |-IfStmt 0x130027360 <line:18:3, line:19:9>     |   | |-ImplicitCastExpr 0x1300272e0 <line:18:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1300272c0 <col:7> 'int' lvalue Var 0x1300267f8 'err' 'int'     |   | `-GotoStmt 0x130027348 <line:19:4, col:9> 'err' 0x1300272f8     |   |-BinaryOperator 0x1300275e0 <line:21:3, col:51> 'struct drm_i915_gem_relocation_entry *' contains-errors '='     |   | |-DeclRefExpr 0x130027380 <col:3> 'struct drm_i915_gem_relocation_entry *' lvalue Var 0x130026db8 'relocs' 'struct drm_i915_gem_relocation_entry *'     |   | `-CallExpr 0x1300275b8 <col:13, col:51> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x130027480 <col:13> 'int ()' Function 0x1300273c8 'u64_to_user_ptr' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x130027570 <col:29, col:41> '<dependent type>' contains-errors lvalue .relocs_ptr     |   |     `-ArraySubscriptExpr 0x130027550 <col:29, col:39> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x130027520 <col:29, col:33> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-RecoveryExpr 0x1300274d8 <col:29, col:33> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x1300274a0 <col:29> 'const struct i915_execbuffer *' lvalue ParmVar 0x13000e248 'eb' 'const struct i915_execbuffer *'     |   |       `-ImplicitCastExpr 0x130027538 <col:38> 'unsigned int' <LValueToRValue>     |   |         `-DeclRefExpr 0x130027500 <col:38> 'unsigned int' lvalue Var 0x130026760 'i' 'unsigned int'     |   |-BinaryOperator 0x1381228d8 <line:24:3, col:46> 'struct drm_i915_gem_relocation_entry *' contains-errors '='     |   | |-DeclRefExpr 0x1381226b0 <col:3> 'struct drm_i915_gem_relocation_entry *' lvalue Var 0x130026db8 'relocs' 'struct drm_i915_gem_relocation_entry *'     |   | `-CallExpr 0x1381228a0 <col:12, col:46> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1381227b0 <col:12> 'int ()' Function 0x1381226f8 'kvmalloc_array' 'int ()'     |   |   |-DeclRefExpr 0x1381227d0 <col:27> 'unsigned long' lvalue Var 0x130026e50 'size' 'unsigned long'     |   |   |-IntegerLiteral 0x1381227f0 <col:33> 'int' 1     |   |   `-RecoveryExpr 0x138122880 <col:36> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x138122a78 <line:25:3, line:28:3>     |   | |-UnaryOperator 0x138122930 <line:25:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x138122918 <col:8> 'struct drm_i915_gem_relocation_entry *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1381228f8 <col:8> 'struct drm_i915_gem_relocation_entry *' lvalue Var 0x130026db8 'relocs' 'struct drm_i915_gem_relocation_entry *'     |   | `-CompoundStmt 0x138122a58 <col:16, line:28:3>     |   |   |-BinaryOperator 0x138122a20 <line:26:4, col:11> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x138122948 <col:4> 'int' lvalue Var 0x1300267f8 'err' 'int'     |   |   | `-UnaryOperator 0x138122a08 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x1381229f0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x1381229d0 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-GotoStmt 0x138122a40 <line:27:4, col:9> 'err' 0x1300272f8     |   |-BinaryOperator 0x138122af0 <line:31:3, col:12> 'unsigned long' '='     |   | |-DeclRefExpr 0x138122a98 <col:3> 'unsigned long' lvalue Var 0x130026ee8 'copied' 'unsigned long'     |   | `-ImplicitCastExpr 0x138122ad8 <col:12> 'unsigned long' <IntegralCast>     |   |   `-IntegerLiteral 0x138122ab8 <col:12> 'int' 0     |   |-DoStmt 0x13812a958 <line:32:3, line:47:25>     |   | |-CompoundStmt 0x13812a8a0 <line:32:6, line:47:3>     |   | | |-DeclStmt 0x138122ff0 <line:33:4, line:34:43>     |   | | | `-VarDecl 0x138122b28 <line:33:4, line:34:42> line:33:17 used len 'unsigned int' cinit     |   | | |   `-CallExpr 0x138122fb8 <line:34:5, col:42> '<dependent type>' contains-errors     |   | | |     |-DeclRefExpr 0x138122c70 <col:5> 'int ()' Function 0x138122bb8 'min_t' 'int ()'     |   | | |     |-RecoveryExpr 0x138122f08 <col:11> '<dependent type>' contains-errors lvalue     |   | | |     |-CallExpr 0x138122f40 <col:16, col:26> 'int'     |   | | |     | |-ImplicitCastExpr 0x138122f28 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | | |     | | `-DeclRefExpr 0x138122d88 <col:16> 'int ()' Function 0x138122cd0 'BIT_ULL' 'int ()'     |   | | |     | `-IntegerLiteral 0x138122da8 <col:24> 'int' 31     |   | | |     `-BinaryOperator 0x138122f98 <col:29, col:36> 'unsigned long' '-'     |   | | |       |-ImplicitCastExpr 0x138122f68 <col:29> 'unsigned long' <LValueToRValue>     |   | | |       | `-DeclRefExpr 0x138122e40 <col:29> 'unsigned long' lvalue Var 0x130026e50 'size' 'unsigned long'     |   | | |       `-ImplicitCastExpr 0x138122f80 <col:36> 'unsigned long' <LValueToRValue>     |   | | |         `-DeclRefExpr 0x138122e60 <col:36> 'unsigned long' lvalue Var 0x130026ee8 'copied' 'unsigned long'     |   | | |-IfStmt 0x1381235e0 <line:36:4, line:44:4>     |   | | | |-RecoveryExpr 0x138123240 <line:36:8, line:38:14> '_Bool' contains-errors     |   | | | `-CompoundStmt 0x1381235b8 <col:17, line:44:4>     |   | | |   |-LabelStmt 0x1381233e8 <line:39:1, line:40:21> 'end_user'     |   | | |   | `-CallExpr 0x138123378 <col:5, col:21> 'int'     |   | | |   |   `-ImplicitCastExpr 0x138123360 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | | |   |     `-DeclRefExpr 0x138123340 <col:5> 'int ()' Function 0x138123288 'user_access_end' 'int ()'     |   | | |   |-CallExpr 0x138123540 <line:41:5, col:18> 'int'     |   | | |   | |-ImplicitCastExpr 0x138123528 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | | `-DeclRefExpr 0x1381234e8 <col:5> 'int ()' Function 0x138123430 'kvfree' 'int ()'     |   | | |   | `-ImplicitCastExpr 0x138123568 <col:12> 'struct drm_i915_gem_relocation_entry *' <LValueToRValue>     |   | | |   |   `-DeclRefExpr 0x138123508 <col:12> 'struct drm_i915_gem_relocation_entry *' lvalue Var 0x130026db8 'relocs' 'struct drm_i915_gem_relocation_entry *'     |   | | |   `-GotoStmt 0x1381235a0 <line:43:5, col:10> 'err' 0x1300272f8     |   | | `-CompoundAssignOperator 0x13812a870 <line:46:4, col:14> 'unsigned long' contains-errors '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     |   | |   |-DeclRefExpr 0x13812a800 <col:4> 'unsigned long' lvalue Var 0x130026ee8 'copied' 'unsigned long'     |   | |   `-ImplicitCastExpr 0x13812a858 <col:14> 'unsigned long' contains-errors <IntegralCast>     |   | |     `-ImplicitCastExpr 0x13812a840 <col:14> 'unsigned int' contains-errors <LValueToRValue>     |   | |       `-DeclRefExpr 0x13812a820 <col:14> 'unsigned int' contains-errors lvalue Var 0x138122b28 'len' 'unsigned int'     |   | `-BinaryOperator 0x13812a938 <line:47:12, col:21> 'int' '<'     |   |   |-ImplicitCastExpr 0x13812a908 <col:12> 'unsigned long' <LValueToRValue>     |   |   | `-DeclRefExpr 0x13812a8c8 <col:12> 'unsigned long' lvalue Var 0x130026ee8 'copied' 'unsigned long'     |   |   `-ImplicitCastExpr 0x13812a920 <col:21> 'unsigned long' <LValueToRValue>     |   |     `-DeclRefExpr 0x13812a8e8 <col:21> 'unsigned long' lvalue Var 0x130026e50 'size' 'unsigned long'     |   |-CallExpr 0x13812aa90 <line:50:3, col:21> 'int'     |   | `-ImplicitCastExpr 0x13812aa78 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x13812aa58 <col:3> 'int ()' Function 0x13812a9a0 'user_access_begin' 'int ()'     |   `-CallExpr 0x13812ad98 <line:55:3, col:19> 'int'     |     `-ImplicitCastExpr 0x13812ad80 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x13812ad60 <col:3> 'int ()' Function 0x138123288 'user_access_end' 'int ()'     |-ReturnStmt 0x13812afb0 <line:60:2, col:9>     | `-IntegerLiteral 0x13812af90 <col:9> 'int' 0     |-LabelStmt 0x13812b628 <line:62:1, line:68:2> 'err'     | `-WhileStmt 0x13812b608 <line:63:2, line:68:2>     |   |-UnaryOperator 0x13812afe0 <line:63:9, col:10> 'unsigned int' postfix '--'     |   | `-DeclRefExpr 0x13812afc0 <col:9> 'unsigned int' lvalue Var 0x130026760 'i' 'unsigned int'     |   `-CompoundStmt 0x13812b5e8 <col:14, line:68:2>     |     |-DeclStmt 0x13812b400 <line:64:3, line:65:55>     |     | |-RecordDecl 0x13812aff8 <line:64:3, col:10> col:10 struct drm_i915_gem_relocation_entry     |     | `-VarDecl 0x13812b168 <col:3, col:41> col:41 used relocs 'struct drm_i915_gem_relocation_entry *'     |     `-IfStmt 0x13812b5c8 <line:66:3, line:67:17>     |       |-CXXDependentScopeMemberExpr 0x13812b4e8 <line:66:7, col:19> '<dependent type>' contains-errors lvalue .relocation_count     |       | `-ArraySubscriptExpr 0x13812b4c8 <col:7, col:17> '<dependent type>' contains-errors lvalue     |       |   |-ImplicitCastExpr 0x13812b498 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     |       |   | `-RecoveryExpr 0x13812b450 <col:7, col:11> '<dependent type>' contains-errors lvalue     |       |   |   `-DeclRefExpr 0x13812b418 <col:7> 'const struct i915_execbuffer *' lvalue ParmVar 0x13000e248 'eb' 'const struct i915_execbuffer *'     |       |   `-ImplicitCastExpr 0x13812b4b0 <col:16> 'unsigned int' <LValueToRValue>     |       |     `-DeclRefExpr 0x13812b478 <col:16> 'unsigned int' lvalue Var 0x130026760 'i' 'unsigned int'     |       `-CallExpr 0x13812b588 <line:67:4, col:17> 'int'     |         |-ImplicitCastExpr 0x13812b570 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x13812b530 <col:4> 'int ()' Function 0x138123430 'kvfree' 'int ()'     |         `-ImplicitCastExpr 0x13812b5b0 <col:11> 'struct drm_i915_gem_relocation_entry *' <LValueToRValue>     |           `-DeclRefExpr 0x13812b550 <col:11> 'struct drm_i915_gem_relocation_entry *' lvalue Var 0x13812b168 'relocs' 'struct drm_i915_gem_relocation_entry *'     `-ReturnStmt 0x13812b680 <line:69:2, col:9>       `-ImplicitCastExpr 0x13812b668 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13812b648 <col:9> 'int' lvalue Var 0x1300267f8 'err' 'int' ","19261":"`-FunctionDecl 0x16000ddc8  line:1:8 invalid zmalloc_size 'int (void *)'   |-ParmVarDecl 0x16000dcf0 <col:21, col:27> col:27 used ptr 'void *'   `-CompoundStmt 0x1600294a8 <col:32, line:7:1>     |-DeclStmt 0x16000e098 <line:2:5, col:43>     | `-VarDecl 0x16000de90 <col:5, col:32> col:11 realptr 'void *' cinit     |   `-BinaryOperator 0x16000e078 <col:21, col:32> '<dependent type>' contains-errors '-'     |     |-CStyleCastExpr 0x16000e030 <col:21, col:28> 'char *' <BitCast>     |     | `-ImplicitCastExpr 0x16000e018 <col:28> 'void *' <LValueToRValue> part_of_explicit_cast     |     |   `-DeclRefExpr 0x16000def8 <col:28> 'void *' lvalue ParmVar 0x16000dcf0 'ptr' 'void *'     |     `-RecoveryExpr 0x16000e058 <col:32> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x160029498 <line:6:5, col:17>       `-BinaryOperator 0x160029478 <col:12, col:17> '<dependent type>' contains-errors '+'         |-RecoveryExpr 0x160029438 <col:12> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x160029458 <col:17> '<dependent type>' contains-errors lvalue ","19730":"`-FunctionDecl 0x141943200  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x141943300 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x141943368 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1419433d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1419432a8 <<invalid sloc>> Implicit 882 ","19963":"`-FunctionDecl 0x11f00df18  line:1:19 referenced invalid UT64_ADD 'int (int *, int, int)' static inline   |-ParmVarDecl 0x11f00dd28 <col:28, col:34> col:34 invalid r 'int *'   |-ParmVarDecl 0x11f00dda8 <col:37, col:42> col:42 invalid a 'int'   |-ParmVarDecl 0x11f00de28 <col:45, col:50> col:50 invalid b 'int'   `-CompoundStmt 0x11f00e2b0 <col:53, line:9:1>     |-IfStmt 0x11f00e138 <line:2:2, line:4:2>     | |-BinaryOperator 0x11f00e0d0 <line:2:6, col:21> 'int' contains-errors '<'     | | |-BinaryOperator 0x11f00e0b0 <col:6, col:17> '<dependent type>' contains-errors '-'     | | | |-RecoveryExpr 0x11f00e090 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x11f00dff0 <col:17> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x11f00e030 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f00e120 <col:24, line:4:2>     |   `-ReturnStmt 0x11f00e110 <line:3:3, col:10>     |     `-IntegerLiteral 0x11f00e0f0 <col:10> 'int' 0     |-IfStmt 0x11f00e260 <line:5:2, line:7:2>     | |-RecoveryExpr 0x11f00e158 <line:5:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11f00e248 <col:9, line:7:2>     |   `-BinaryOperator 0x11f00e228 <line:6:3, col:12> '<dependent type>' contains-errors '='     |     |-UnaryOperator 0x11f00e1b0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x11f00e198 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x11f00e178 <col:4> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x11f00e208 <col:8, col:12> '<dependent type>' contains-errors '+'     |       |-RecoveryExpr 0x11f00e1c8 <col:8> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x11f00e1e8 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11f00e2a0 <line:8:2, col:9>       `-IntegerLiteral 0x11f00e280 <col:9> 'int' 1 ","19310":"`-FunctionDecl 0x155015e58  line:1:1 invalid vterm_malloc 'int (int, void *)'   |-ParmVarDecl 0x155015cf0 <col:14, col:21> col:21 invalid size 'int'   |-ParmVarDecl 0x155015d70 <col:27, col:33> col:33 data 'void *'   `-CompoundStmt 0x155016170 <line:2:1, line:4:1>     `-ReturnStmt 0x155016160 <line:3:5, col:39>       `-CallExpr 0x155016138 <col:12, col:39> 'int' contains-errors         |-ImplicitCastExpr 0x155016120 <col:12> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x155016070 <col:12> 'int ()' Function 0x155015fb8 'alloc_clear' 'int ()'         `-CStyleCastExpr 0x1550160c8 <col:24, col:35> 'unsigned int' contains-errors <Dependent>           `-RecoveryExpr 0x155016090 <col:35> '<dependent type>' contains-errors lvalue ","19518":"`-FunctionDecl 0x149822df0  col:2 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x149822ef0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x149822e98 <<invalid sloc>> Implicit 903   `-FormatAttr 0x149822f60 <col:2> Implicit printf 1 2 ","20103":"`-FunctionDecl 0x13480de80  line:1:6 invalid ass_shaper_set_base_direction 'void (int *, int)'   |-ParmVarDecl 0x13480dd28 <col:36, col:48> col:48 referenced invalid shaper 'int *'   |-ParmVarDecl 0x13480dda8 <col:56, col:71> col:71 invalid dir 'int'   `-CompoundStmt 0x13480e008 <line:2:1, line:4:1>     `-BinaryOperator 0x13480dfe8 <line:3:5, col:30> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x13480df80 <col:5, col:13> '<dependent type>' contains-errors lvalue ->base_direction       | `-RecoveryExpr 0x13480df58 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13480df38 <col:5> 'int *' lvalue ParmVar 0x13480dd28 'shaper' 'int *'       `-RecoveryExpr 0x13480dfc8 <col:30> '<dependent type>' contains-errors lvalue ","19142":"`-FunctionDecl 0x12481f488  line:1:5 invalid wav_parse 'int (int *, int *)'   |-ParmVarDecl 0x12481f328 <col:15, col:29> col:29 referenced invalid reader 'int *'   |-ParmVarDecl 0x12481f3a8 <col:37, col:46> col:46 invalid data_length 'int *'   `-CompoundStmt 0x124839ee8 <line:2:1, line:31:1>     |-BinaryOperator 0x12481f5b0 <line:5:5, col:20> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x12481f578 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12481f560 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12481f540 <col:6> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12481f590 <col:20> 'int' 0     |-CallExpr 0x1248383a0 <line:7:5, line:8:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12481f8b0 <line:7:5> 'int ()' Function 0x12481f7f8 'ENSURE' 'int ()'     | `-BinaryOperator 0x124838380 <col:12, line:8:52> 'int' contains-errors '||'     |   |-BinaryOperator 0x1248382c8 <line:7:12, col:52> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x124838250 <col:12> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x124838288 <col:25, col:52> 'int'     |   |   |-ImplicitCastExpr 0x124838270 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12481f9c8 <col:25> 'int ()' Function 0x12481f910 'RIFF_FOURCC' 'int ()'     |   |   |-CharacterLiteral 0x12481f9e8 <col:37> 'int' 82     |   |   |-CharacterLiteral 0x124838000 <col:41> 'int' 73     |   |   |-CharacterLiteral 0x124838018 <col:45> 'int' 70     |   |   `-CharacterLiteral 0x124838030 <col:49> 'int' 70     |   `-BinaryOperator 0x124838360 <line:8:12, col:52> 'int' contains-errors '=='     |     |-RecoveryExpr 0x1248382e8 <col:12> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x124838320 <col:25, col:52> 'int'     |       |-ImplicitCastExpr 0x124838308 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x124838110 <col:25> 'int ()' Function 0x12481f910 'RIFF_FOURCC' 'int ()'     |       |-CharacterLiteral 0x124838130 <col:37> 'int' 82     |       |-CharacterLiteral 0x124838148 <col:41> 'int' 70     |       |-CharacterLiteral 0x124838160 <col:45> 'int' 54     |       `-CharacterLiteral 0x124838178 <col:49> 'int' 52     |-CallExpr 0x124838738 <line:9:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1248384a8 <col:5> 'int ()' Function 0x1248383f0 'TRY_IO' 'int ()'     | `-CallExpr 0x124838708 <col:12, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1248385a8 <col:12> 'int ()' Function 0x1248384f0 'pcm_read32le' 'int ()'     |   |-UnaryOperator 0x124838630 <col:25, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x1248385e8 <col:26, col:34> '<dependent type>' contains-errors lvalue ->io     |   |   `-RecoveryExpr 0x1248385c8 <col:26> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1248386f0 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1248386d0 <col:39> '<dependent type>' contains-errors lvalue     |-CallExpr 0x124838950 <line:10:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124838760 <col:5> 'int ()' Function 0x12481f7f8 'ENSURE' 'int ()'     | `-BinaryOperator 0x124838930 <col:12, col:46> 'int' contains-errors '=='     |   |-RecoveryExpr 0x1248388b8 <col:12> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1248388f0 <col:19, col:46> 'int'     |     |-ImplicitCastExpr 0x1248388d8 <col:19> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x124838798 <col:19> 'int ()' Function 0x12481f910 'RIFF_FOURCC' 'int ()'     |     |-CharacterLiteral 0x1248387b8 <col:31> 'int' 87     |     |-CharacterLiteral 0x1248387d0 <col:35> 'int' 65     |     |-CharacterLiteral 0x1248387e8 <col:39> 'int' 86     |     `-CharacterLiteral 0x124838800 <col:43> 'int' 69     |-IfStmt 0x124838c90 <line:12:5, line:13:38>     | |-BinaryOperator 0x124838b00 <line:12:9, col:49> 'int' contains-errors '=='     | | |-RecoveryExpr 0x124838a88 <col:9> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x124838ac0 <col:22, col:49> 'int'     | |   |-ImplicitCastExpr 0x124838aa8 <col:22> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x124838990 <col:22> 'int ()' Function 0x12481f910 'RIFF_FOURCC' 'int ()'     | |   |-CharacterLiteral 0x1248389b0 <col:34> 'int' 82     | |   |-CharacterLiteral 0x1248389c8 <col:38> 'int' 70     | |   |-CharacterLiteral 0x1248389e0 <col:42> 'int' 54     | |   `-CharacterLiteral 0x1248389f8 <col:46> 'int' 52     | `-CallExpr 0x124838c60 <line:13:9, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124838c00 <col:9> 'int ()' Function 0x124838b48 'riff_ds64' 'int ()'     |   |-RecoveryExpr 0x124838c20 <col:19> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x124838c40 <col:27> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x124839d18 <line:14:5, line:26:5>     | |-RecoveryExpr 0x124838da8 <line:14:12, col:60> '_Bool' contains-errors     | `-CompoundStmt 0x124839d00 <col:63, line:26:5>     |   `-IfStmt 0x124839cd0 <line:15:9, line:25:9> has_else     |     |-BinaryOperator 0x124838f50 <line:15:13, col:47> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x124838ed8 <col:13> '<dependent type>' contains-errors lvalue     |     | `-CallExpr 0x124838f10 <col:20, col:47> 'int'     |     |   |-ImplicitCastExpr 0x124838ef8 <col:20> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x124838de0 <col:20> 'int ()' Function 0x12481f910 'RIFF_FOURCC' 'int ()'     |     |   |-CharacterLiteral 0x124838e00 <col:32> 'int' 102     |     |   |-CharacterLiteral 0x124838e18 <col:36> 'int' 109     |     |   |-CharacterLiteral 0x124838e30 <col:40> 'int' 116     |     |   `-CharacterLiteral 0x124838e48 <col:44> 'int' 32     |     |-CompoundStmt 0x1248395c0 <col:50, line:18:9>     |     | `-IfStmt 0x1248395a0 <line:16:13, line:17:22>     |     |   |-RecoveryExpr 0x124839518 <line:16:17, col:47> '_Bool' contains-errors     |     |   `-GotoStmt 0x124839588 <line:17:17, col:22> 'FAIL' 0x124839538     |     `-IfStmt 0x124839ca0 <line:18:16, line:25:9> has_else     |       |-RecoveryExpr 0x1248396b0 <line:18:20, col:54> '_Bool' contains-errors     |       |-CompoundStmt 0x124839a78 <col:57, line:23:9>     |       | |-BinaryOperator 0x124839a50 <line:21:13, col:55> '<dependent type>' contains-errors '='     |       | | |-CXXDependentScopeMemberExpr 0x124839860 <col:13, col:21> '<dependent type>' contains-errors lvalue ->data_offset     |       | | | `-RecoveryExpr 0x124839838 <col:13> '<dependent type>' contains-errors lvalue     |       | | |   `-DeclRefExpr 0x124839818 <col:13> 'int *' lvalue ParmVar 0x12481f328 'reader' 'int *'     |       | | `-CallExpr 0x124839a28 <col:35, col:55> '<dependent type>' contains-errors     |       | |   |-DeclRefExpr 0x124839988 <col:35> 'int ()' Function 0x1248398d0 'pcm_tell' 'int ()'     |       | |   `-UnaryOperator 0x124839a10 <col:44, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | |     `-CXXDependentScopeMemberExpr 0x1248399c8 <col:45, col:53> '<dependent type>' contains-errors lvalue ->io     |       | |       `-RecoveryExpr 0x1248399a8 <col:45> '<dependent type>' contains-errors lvalue     |       | `-BreakStmt 0x124839a70 <line:22:13>     |       `-CompoundStmt 0x124839c90 <line:23:16, line:25:9>     |-IfStmt 0x124839e60 <line:27:5, line:28:16>     | |-RecoveryExpr 0x124839e10 <line:27:9, col:43> '_Bool' contains-errors     | `-ReturnStmt 0x124839e50 <line:28:9, col:16>     |   `-IntegerLiteral 0x124839e30 <col:16> 'int' 0     `-LabelStmt 0x124839ec8 <line:29:1, line:30:13> 'FAIL'       `-ReturnStmt 0x124839eb8 <col:5, col:13>         `-UnaryOperator 0x124839ea0 <col:12, col:13> 'int' prefix '-'           `-IntegerLiteral 0x124839e80 <col:13> 'int' 1 ","19645":"`-FunctionDecl 0x142009298  col:38 implicit used malloc 'void *(unsigned long)' extern   |-ParmVarDecl 0x142009398 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x142009340 <<invalid sloc>> Implicit 871   `-AllocSizeAttr 0x142009408 <col:38> Implicit 1 ","20114":"`-FunctionDecl 0x1568c2158  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1568c2258 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1568c22c0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1568c2328 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1568c2200 <<invalid sloc>> Implicit 900 ","19886":"`-FunctionDecl 0x12f0298c8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12f0299c8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12f029970 <<invalid sloc>> Implicit 873 ","19826":"`-FunctionDecl 0x13c928288  line:1:20 invalid var_same_kind 'int (int *, int *)' static inline   |-ParmVarDecl 0x13c928128 <col:34, col:49> col:49 invalid a 'int *'   |-ParmVarDecl 0x13c9281a8 <col:52, col:67> col:67 invalid b 'int *'   `-CompoundStmt 0x13c928550 <col:70, line:3:1>     `-ReturnStmt 0x13c928540 <line:2:2, col:46>       `-BinaryOperator 0x13c928520 <col:9, col:46> 'int' contains-errors '&&'         |-BinaryOperator 0x13c928410 <col:9, col:23> 'int' contains-errors '=='         | |-CXXDependentScopeMemberExpr 0x13c928360 <col:9, col:12> '<dependent type>' contains-errors lvalue ->kind         | | `-RecoveryExpr 0x13c928340 <col:9> '<dependent type>' contains-errors lvalue         | `-CXXDependentScopeMemberExpr 0x13c9283c8 <col:20, col:23> '<dependent type>' contains-errors lvalue ->kind         |   `-RecoveryExpr 0x13c9283a8 <col:20> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x13c928500 <col:31, col:46> 'int' contains-errors '=='           |-CXXDependentScopeMemberExpr 0x13c928450 <col:31, col:34> '<dependent type>' contains-errors lvalue ->isarg           | `-RecoveryExpr 0x13c928430 <col:31> '<dependent type>' contains-errors lvalue           `-CXXDependentScopeMemberExpr 0x13c9284b8 <col:43, col:46> '<dependent type>' contains-errors lvalue ->isarg             `-RecoveryExpr 0x13c928498 <col:43> '<dependent type>' contains-errors lvalue ","19251":"`-FunctionDecl 0x135928150  line:1:6 sev_vm_destroy 'void (struct kvm *)'   |-ParmVarDecl 0x135928048 <col:21, col:33> col:33 used kvm 'struct kvm *'   `-CompoundStmt 0x137009478 <line:2:1, line:27:1>     |-DeclStmt 0x135944a70 <line:3:2, col:55>     | |-RecordDecl 0x135944648 <col:2, col:9> col:9 struct kvm_sev_info     | `-VarDecl 0x1359447b8 <col:2, col:47> col:23 used sev 'struct kvm_sev_info *' cinit     |   `-UnaryOperator 0x135944a40 <col:29, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x135944a18 <col:30, col:47> '<dependent type>' contains-errors lvalue     |       `-CallExpr 0x1359449d8 <col:30, col:44> 'int'     |         |-ImplicitCastExpr 0x1359449c0 <col:30> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x135944950 <col:30> 'int ()' Function 0x135944898 'to_kvm_svm' 'int ()'     |         `-ImplicitCastExpr 0x135944a00 <col:41> 'struct kvm *' <LValueToRValue>     |           `-DeclRefExpr 0x135944970 <col:41> 'struct kvm *' lvalue ParmVar 0x135928048 'kvm' 'struct kvm *'     |-DeclStmt 0x135944cf0 <line:4:2, col:45>     | |-RecordDecl 0x135944a88 <col:2, col:9> col:9 struct list_head     | `-VarDecl 0x135944bf8 <col:2, col:33> col:20 used head 'struct list_head *' cinit     |   `-UnaryOperator 0x135944cc0 <col:27, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x135944c98 <col:28, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x135944c60 <col:28> 'struct kvm_sev_info *' contains-errors lvalue Var 0x1359447b8 'sev' 'struct kvm_sev_info *'     |-DeclStmt 0x135944ea8 <line:5:2, col:27>     | |-VarDecl 0x135944d98 <col:2, col:20> col:20 used pos 'struct list_head *'     | `-VarDecl 0x135944e28 <col:2, col:26> col:26 used q 'struct list_head *'     |-IfStmt 0x135945060 <line:7:2, line:8:3>     | |-UnaryOperator 0x135945038 <line:7:6, col:20> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x135944ff8 <col:7, col:20> 'int'     | |   |-ImplicitCastExpr 0x135944fe0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x135944fa0 <col:7> 'int ()' Function 0x135944ee8 'sev_guest' 'int ()'     | |   `-ImplicitCastExpr 0x135945020 <col:17> 'struct kvm *' <LValueToRValue>     | |     `-DeclRefExpr 0x135944fc0 <col:17> 'struct kvm *' lvalue ParmVar 0x135928048 'kvm' 'struct kvm *'     | `-ReturnStmt 0x135945050 <line:8:3>     |-CallExpr 0x1359451f8 <line:10:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x135945160 <col:2> 'int ()' Function 0x1359450a8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x1359451e0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1359451b8 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x135945180 <col:14> 'struct kvm *' lvalue ParmVar 0x135928048 'kvm' 'struct kvm *'     |-CallExpr 0x135945338 <line:13:2, col:21> 'int'     | `-ImplicitCastExpr 0x135945320 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x135945300 <col:2> 'int ()' Function 0x135945248 'wbinvd_on_all_cpus' 'int ()'     |-IfStmt 0x137008f80 <line:16:2, line:21:2>     | |-UnaryOperator 0x1359454d0 <line:16:6, col:22> 'int' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x135945490 <col:7, col:22> 'int' contains-errors     | |   |-ImplicitCastExpr 0x135945478 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x135945438 <col:7> 'int ()' Function 0x135945380 'list_empty' 'int ()'     | |   `-ImplicitCastExpr 0x1359454b8 <col:18> 'struct list_head *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x135945458 <col:18> 'struct list_head *' contains-errors lvalue Var 0x135944bf8 'head' 'struct list_head *'     | `-CompoundStmt 0x137008f60 <col:25, line:21:2>     |   |-CallExpr 0x137008c78 <line:17:3, col:34> 'int' contains-errors     |   | |-ImplicitCastExpr 0x137008c60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1359455c8 <col:3> 'int ()' Function 0x135945510 'list_for_each_safe' 'int ()'     |   | |-ImplicitCastExpr 0x137008cb0 <col:22> 'struct list_head *' <LValueToRValue>     |   | | `-DeclRefExpr 0x137008c00 <col:22> 'struct list_head *' lvalue Var 0x135944d98 'pos' 'struct list_head *'     |   | |-ImplicitCastExpr 0x137008cc8 <col:27> 'struct list_head *' <LValueToRValue>     |   | | `-DeclRefExpr 0x137008c20 <col:27> 'struct list_head *' lvalue Var 0x135944e28 'q' 'struct list_head *'     |   | `-ImplicitCastExpr 0x137008ce0 <col:30> 'struct list_head *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x137008c40 <col:30> 'struct list_head *' contains-errors lvalue Var 0x135944bf8 'head' 'struct list_head *'     |   `-CompoundStmt 0x137008f50 <col:36, line:20:3>     |-CallExpr 0x137009118 <line:23:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137009080 <col:2> 'int ()' Function 0x137008fc8 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x137009100 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1370090d8 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1370090a0 <col:16> 'struct kvm *' lvalue ParmVar 0x135928048 'kvm' 'struct kvm *'     |-CallExpr 0x1370092c0 <line:25:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137009220 <col:2> 'int ()' Function 0x137009168 'sev_unbind_asid' 'int ()'     | |-DeclRefExpr 0x137009240 <col:18> 'struct kvm *' lvalue ParmVar 0x135928048 'kvm' 'struct kvm *'     | `-RecoveryExpr 0x137009298 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137009260 <col:23> 'struct kvm_sev_info *' contains-errors lvalue Var 0x1359447b8 'sev' 'struct kvm_sev_info *'     `-CallExpr 0x137009450 <line:26:2, col:25> '<dependent type>' contains-errors       |-DeclRefExpr 0x1370093d0 <col:2> 'int ()' Function 0x137009318 'sev_asid_free' 'int ()'       `-RecoveryExpr 0x137009428 <col:16, col:21> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x1370093f0 <col:16> 'struct kvm_sev_info *' contains-errors lvalue Var 0x1359447b8 'sev' 'struct kvm_sev_info *' ","19903":"`-FunctionDecl 0x153035b08  line:1:20 invalid __udp_is_mcast_sock 'int (struct net *, struct sock *, int, int, int, int, int, unsigned short)' static inline   |-ParmVarDecl 0x153018268 <col:40, col:52> col:52 used net 'struct net *'   |-ParmVarDecl 0x153035658 <col:57, col:70> col:70 used sk 'struct sock *'   |-ParmVarDecl 0x1530356d8 <line:2:12, col:19> col:19 invalid loc_port 'int'   |-ParmVarDecl 0x153035758 <col:29, col:36> col:36 invalid loc_addr 'int'   |-ParmVarDecl 0x1530357d8 <line:3:12, col:19> col:19 invalid rmt_port 'int'   |-ParmVarDecl 0x153035858 <col:29, col:36> col:36 invalid rmt_addr 'int'   |-ParmVarDecl 0x1530358d8 <line:4:12, col:16> col:16 used dif 'int'   |-ParmVarDecl 0x153035958 <col:21, col:36> col:36 used hnum 'unsigned short'   `-CompoundStmt 0x1560be630 <line:5:1, line:19:1>     `-DeclStmt 0x153036018 <line:6:2, col:38>       |-RecordDecl 0x153035bf0 <col:2, col:9> col:9 struct inet_sock       `-VarDecl 0x153035d58 <col:2, col:37> col:20 used inet 'struct inet_sock *' cinit         `-ImplicitCastExpr 0x153035fe8 <col:27, col:37> 'struct inet_sock *' <IntegralToPointer>           `-CallExpr 0x153035fa8 <col:27, col:37> 'int'             |-ImplicitCastExpr 0x153035f90 <col:27> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x153035f20 <col:27> 'int ()' Function 0x153035e68 'inet_sk' 'int ()'             `-ImplicitCastExpr 0x153035fd0 <col:35> 'struct sock *' <LValueToRValue>               `-DeclRefExpr 0x153035f40 <col:35> 'struct sock *' lvalue ParmVar 0x153035658 'sk' 'struct sock *' ","19302":"`-FunctionDecl 0x13f008348  line:1:12 pipe_rcv_status 'int (struct sock *, struct sk_buff *)' static   |-ParmVarDecl 0x13e928648 <col:28, col:41> col:41 used sk 'struct sock *'   |-ParmVarDecl 0x13f008228 <col:45, col:61> col:61 used skb 'struct sk_buff *'   `-CompoundStmt 0x148008898 <line:2:1, line:51:1>     |-DeclStmt 0x13f008848 <line:3:2, col:34>     | |-RecordDecl 0x13f008448 <col:2, col:9> col:9 struct pep_sock     | `-VarDecl 0x13f0085b8 <col:2, col:33> col:19 used pn 'struct pep_sock *' cinit     |   `-ImplicitCastExpr 0x13f008818 <col:24, col:33> 'struct pep_sock *' <IntegralToPointer>     |     `-CallExpr 0x13f0087d8 <col:24, col:33> 'int'     |       |-ImplicitCastExpr 0x13f0087c0 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13f008750 <col:24> 'int ()' Function 0x13f008698 'pep_sk' 'int ()'     |       `-ImplicitCastExpr 0x13f008800 <col:31> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x13f008770 <col:31> 'struct sock *' lvalue ParmVar 0x13e928648 'sk' 'struct sock *'     |-DeclStmt 0x13f008a48 <line:4:2, col:23>     | |-RecordDecl 0x13f008860 <col:2, col:9> col:9 struct pnpipehdr     | `-VarDecl 0x13f0089c8 <col:2, col:20> col:20 used hdr 'struct pnpipehdr *'     |-DeclStmt 0x13f008b00 <line:5:2, col:14>     | `-VarDecl 0x13f008a78 <col:2, col:13> col:6 used wake 'int' cinit     |   `-IntegerLiteral 0x13f008ae0 <col:13> 'int' 0     |-IfStmt 0x13f008d90 <line:7:2, line:8:11>     | |-RecoveryExpr 0x13f008cc8 <line:7:6, col:42> '_Bool' contains-errors     | `-ReturnStmt 0x13f008d80 <line:8:3, col:11>     |   `-UnaryOperator 0x13f008d68 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13f008d50 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13f008d30 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f008f60 <line:10:2, col:19> 'struct pnpipehdr *' '='     | |-DeclRefExpr 0x13f008db0 <col:2> 'struct pnpipehdr *' lvalue Var 0x13f0089c8 'hdr' 'struct pnpipehdr *'     | `-ImplicitCastExpr 0x13f008f48 <col:8, col:19> 'struct pnpipehdr *' <IntegralToPointer>     |   `-CallExpr 0x13f008f08 <col:8, col:19> 'int'     |     |-ImplicitCastExpr 0x13f008ef0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13f008eb0 <col:8> 'int ()' Function 0x13f008df8 'pnp_hdr' 'int ()'     |     `-ImplicitCastExpr 0x13f008f30 <col:16> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x13f008ed0 <col:16> 'struct sk_buff *' lvalue ParmVar 0x13f008228 'skb' 'struct sk_buff *'     |-IfStmt 0x13f00b190 <line:11:2, line:15:2>     | |-BinaryOperator 0x13f009038 <line:11:6, col:23> 'int' contains-errors '!='     | | |-RecoveryExpr 0x13f008fb8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13f008f80 <col:6> 'struct pnpipehdr *' lvalue Var 0x13f0089c8 'hdr' 'struct pnpipehdr *'     | | `-RecoveryExpr 0x13f009018 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f00b170 <col:43, line:15:2>     |   |-CallExpr 0x13f00b080 <line:12:3, line:13:36> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13f00b068 <line:12:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13f009138 <col:3> 'int ()' Function 0x13f009080 'net_dbg_ratelimited' 'int ()'     |   | |-ImplicitCastExpr 0x13f00b0b0 <col:23> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x13f0091a0 <col:23> 'char[4]' lvalue \"STR\"     |   | `-CStyleCastExpr 0x13f00b040 <line:13:9, col:28> 'unsigned int' contains-errors <Dependent>     |   |   `-RecoveryExpr 0x13f00b000 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13f0091c0 <col:23> 'struct pnpipehdr *' lvalue Var 0x13f0089c8 'hdr' 'struct pnpipehdr *'     |   `-ReturnStmt 0x13f00b160 <line:14:3, col:11>     |     `-UnaryOperator 0x13f00b148 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x13f00b130 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x13f00b110 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x13f00b280 <line:17:2, line:47:2>     | |-ImplicitCastExpr 0x13f00b268 <line:17:10, col:21> '<dependent type>' contains-errors <LValueToRValue>     | | `-ArraySubscriptExpr 0x13f00b248 <col:10, col:21> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x13f00b230 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x13f00b1e8 <col:10, col:15> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x13f00b1b0 <col:10> 'struct pnpipehdr *' lvalue Var 0x13f0089c8 'hdr' 'struct pnpipehdr *'     | |   `-IntegerLiteral 0x13f00b210 <col:20> 'int' 0     | `-CompoundStmt 0x13f00bf28 <col:24, line:47:2>     |   |-SwitchStmt 0x13f00b338 <line:19:3, line:34:3>     |   | |-ImplicitCastExpr 0x13f00b320 <line:19:11, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-RecoveryExpr 0x13f00b2f8 <col:11, col:15> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13f00b2c0 <col:11> 'struct pep_sock *' lvalue Var 0x13f0085b8 'pn' 'struct pep_sock *'     |   | `-CompoundStmt 0x13f00b9e8 <col:22, line:34:3>     |   |   |-SwitchStmt 0x13f00b448 <line:21:4, line:28:4>     |   |   | |-ImplicitCastExpr 0x13f00b430 <line:21:12, col:23> '<dependent type>' contains-errors <LValueToRValue>     |   |   | | `-ArraySubscriptExpr 0x13f00b410 <col:12, col:23> '<dependent type>' contains-errors lvalue     |   |   | |   |-ImplicitCastExpr 0x13f00b3f8 <col:12, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   |   | |   | `-RecoveryExpr 0x13f00b3b0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |   | |   |   `-DeclRefExpr 0x13f00b378 <col:12> 'struct pnpipehdr *' lvalue Var 0x13f0089c8 'hdr' 'struct pnpipehdr *'     |   |   | |   `-IntegerLiteral 0x13f00b3d8 <col:22> 'int' 3     |   |   | `-CompoundStmt 0x13f00b788 <col:26, line:28:4>     |   |   |   |-CallExpr 0x13f00b620 <line:23:5, col:34> '<dependent type>' contains-errors     |   |   |   | |-DeclRefExpr 0x13f00b568 <col:5> 'int ()' Function 0x13f00b4b0 'atomic_set' 'int ()'     |   |   |   | |-UnaryOperator 0x13f00b5e8 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   | | `-RecoveryExpr 0x13f00b5c0 <col:17, col:21> '<dependent type>' contains-errors lvalue     |   |   |   | |   `-DeclRefExpr 0x13f00b588 <col:17> 'struct pep_sock *' lvalue Var 0x13f0085b8 'pn' 'struct pep_sock *'     |   |   |   | `-IntegerLiteral 0x13f00b600 <col:33> 'int' 0     |   |   |   |-BreakStmt 0x13f00b650 <line:24:5>     |   |   |   |-CallExpr 0x13f00b750 <line:26:5, col:41> '<dependent type>' contains-errors     |   |   |   | |-DeclRefExpr 0x13f00b658 <col:5> 'int ()' Function 0x13f00b4b0 'atomic_set' 'int ()'     |   |   |   | |-UnaryOperator 0x13f00b6d8 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   | | `-RecoveryExpr 0x13f00b6b0 <col:17, col:21> '<dependent type>' contains-errors lvalue     |   |   |   | |   `-DeclRefExpr 0x13f00b678 <col:17> 'struct pep_sock *' lvalue Var 0x13f0085b8 'pn' 'struct pep_sock *'     |   |   |   | `-BinaryOperator 0x13f00b730 <col:33, col:40> 'int' '='     |   |   |   |   |-DeclRefExpr 0x13f00b6f0 <col:33> 'int' lvalue Var 0x13f008a78 'wake' 'int'     |   |   |   |   `-IntegerLiteral 0x13f00b710 <col:40> 'int' 1     |   |   |   `-BreakStmt 0x13f00b780 <line:27:5>     |   |   |-BreakStmt 0x13f00b7b8 <line:29:4>     |   |   |-IfStmt 0x13f00b9c0 <line:31:4, line:32:41>     |   |   | |-RecoveryExpr 0x13f00b878 <line:31:8, col:24> '_Bool' contains-errors     |   |   | `-CallExpr 0x13f00b990 <line:32:5, col:41> '<dependent type>' contains-errors     |   |   |   |-DeclRefExpr 0x13f00b898 <col:5> 'int ()' Function 0x13f00b4b0 'atomic_set' 'int ()'     |   |   |   |-UnaryOperator 0x13f00b918 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |   | `-RecoveryExpr 0x13f00b8f0 <col:17, col:21> '<dependent type>' contains-errors lvalue     |   |   |   |   `-DeclRefExpr 0x13f00b8b8 <col:17> 'struct pep_sock *' lvalue Var 0x13f0085b8 'pn' 'struct pep_sock *'     |   |   |   `-BinaryOperator 0x13f00b970 <col:33, col:40> 'int' '='     |   |   |     |-DeclRefExpr 0x13f00b930 <col:33> 'int' lvalue Var 0x13f008a78 'wake' 'int'     |   |   |     `-IntegerLiteral 0x13f00b950 <col:40> 'int' 1     |   |   `-BreakStmt 0x13f00b9e0 <line:33:4>     |   |-BreakStmt 0x13f00ba18 <line:35:3>     |   |-IfStmt 0x13f00baa8 <line:38:3, line:39:4>     |   | |-RecoveryExpr 0x13f00ba80 <line:38:7, col:20> '_Bool' contains-errors     |   | `-BreakStmt 0x13f00baa0 <line:39:4>     |   |-CallExpr 0x13f00bd38 <line:40:3, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13f00bba8 <col:3> 'int ()' Function 0x13f00baf0 'atomic_add' 'int ()'     |   | |-BinaryOperator 0x13f00bca0 <col:14, col:32> 'int' contains-errors '='     |   | | |-DeclRefExpr 0x13f00bbc8 <col:14> 'int' lvalue Var 0x13f008a78 'wake' 'int'     |   | | `-ArraySubscriptExpr 0x13f00bc80 <col:21, col:32> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x13f00bc68 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-RecoveryExpr 0x13f00bc20 <col:21, col:26> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x13f00bbe8 <col:21> 'struct pnpipehdr *' lvalue Var 0x13f0089c8 'hdr' 'struct pnpipehdr *'     |   | |   `-IntegerLiteral 0x13f00bc48 <col:31> 'int' 3     |   | `-UnaryOperator 0x13f00bd20 <col:35, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x13f00bcf8 <col:36, col:40> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13f00bcc0 <col:36> 'struct pep_sock *' lvalue Var 0x13f0085b8 'pn' 'struct pep_sock *'     |   |-BreakStmt 0x13f00bd68 <line:41:3>     |   `-DefaultStmt 0x13f00bf08 <line:43:2, line:45:35>     |     `-CallExpr 0x13f00bec0 <line:44:3, line:45:35> 'int' contains-errors     |       |-ImplicitCastExpr 0x13f00bea8 <line:44:3> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13f00bd70 <col:3> 'int ()' Function 0x13f009080 'net_dbg_ratelimited' 'int ()'     |       |-ImplicitCastExpr 0x13f00bef0 <col:23> 'char *' <ArrayToPointerDecay>     |       | `-StringLiteral 0x13f00bd90 <col:23> 'char[4]' lvalue \"STR\"     |       `-CStyleCastExpr 0x13f00be80 <line:45:9, col:34> 'unsigned int' contains-errors <Dependent>     |         `-ArraySubscriptExpr 0x13f00be48 <col:23, col:34> '<dependent type>' contains-errors lvalue     |           |-ImplicitCastExpr 0x13f00be30 <col:23, col:28> '<dependent type>' contains-errors <LValueToRValue>     |           | `-RecoveryExpr 0x13f00bde8 <col:23, col:28> '<dependent type>' contains-errors lvalue     |           |   `-DeclRefExpr 0x13f00bdb0 <col:23> 'struct pnpipehdr *' lvalue Var 0x13f0089c8 'hdr' 'struct pnpipehdr *'     |           `-IntegerLiteral 0x13f00be10 <col:33> 'int' 0     |-IfStmt 0x148008848 <line:48:2, line:49:24>     | |-ImplicitCastExpr 0x13f00bf88 <line:48:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13f00bf68 <col:6> 'int' lvalue Var 0x13f008a78 'wake' 'int'     | `-CallExpr 0x148008820 <line:49:3, col:24> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x13f00bfd8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13f00bfa0 <col:3> 'struct sock *' lvalue ParmVar 0x13e928648 'sk' 'struct sock *'     |   `-DeclRefExpr 0x148008800 <col:22> 'struct sock *' lvalue ParmVar 0x13e928648 'sk' 'struct sock *'     `-ReturnStmt 0x148008888 <line:50:2, col:9>       `-IntegerLiteral 0x148008868 <col:9> 'int' 0 ","19393":"`-FunctionDecl 0x14882dcd8  line:1:1 invalid _archive_write_data 'int (struct archive *, const void *, int)'   |-ParmVarDecl 0x148818a48 <col:21, col:37> col:37 used _a 'struct archive *'   |-ParmVarDecl 0x148818af8 <col:41, col:53> col:53 used buff 'const void *'   |-ParmVarDecl 0x148818b90 <col:59, col:66> col:66 invalid s 'int'   `-CompoundStmt 0x14882e6b8 <line:2:1, line:8:1>     |-DeclStmt 0x14882e070 <line:3:2, col:54>     | |-RecordDecl 0x14882dd98 <col:2, col:9> col:9 struct archive_write     | `-VarDecl 0x14882df08 <col:2, col:52> col:24 used a 'struct archive_write *' cinit     |   `-CStyleCastExpr 0x14882e030 <col:28, col:52> 'struct archive_write *' <BitCast>     |     `-ImplicitCastExpr 0x14882e018 <col:52> 'struct archive *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x14882df70 <col:52> 'struct archive *' lvalue ParmVar 0x148818a48 '_a' 'struct archive *'     |-CallExpr 0x14882e390 <line:4:2, line:5:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14882e1e0 <line:4:2> 'int ()' Function 0x14882e128 'archive_check_magic' 'int ()'     | |-UnaryOperator 0x14882e260 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14882e238 <col:23, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14882e200 <col:23> 'struct archive_write *' lvalue Var 0x14882df08 'a' 'struct archive_write *'     | |-RecoveryExpr 0x14882e350 <col:35> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14882e370 <line:5:6> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x14882e2f0 <col:26> 'char[4]' lvalue \"STR\"     |-CallExpr 0x14882e548 <line:6:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14882e4b0 <col:2> 'int ()' Function 0x14882e3f8 'archive_clear_error' 'int ()'     | `-UnaryOperator 0x14882e530 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14882e508 <col:23, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14882e4d0 <col:23> 'struct archive_write *' lvalue Var 0x14882df08 'a' 'struct archive_write *'     `-ReturnStmt 0x14882e6a8 <line:7:2, col:44>       `-ParenExpr 0x14882e688 <col:9, col:44> '<dependent type>' contains-errors         `-CallExpr 0x14882e650 <col:10, col:43> '<dependent type>' contains-errors           |-ParenExpr 0x14882e5d0 <col:10, col:31> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x14882e5a8 <col:11, col:14> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x14882e570 <col:11> 'struct archive_write *' lvalue Var 0x14882df08 'a' 'struct archive_write *'           |-DeclRefExpr 0x14882e5f0 <col:33> 'struct archive_write *' lvalue Var 0x14882df08 'a' 'struct archive_write *'           |-DeclRefExpr 0x14882e610 <col:36> 'const void *' lvalue ParmVar 0x148818af8 'buff' 'const void *'           `-RecoveryExpr 0x14882e630 <col:42> '<dependent type>' contains-errors lvalue ","19503":"`-FunctionDecl 0x130941cb0  col:7 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x130941db0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x130941e18 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x130941d58 <<invalid sloc>> Implicit 887 ","19942":"`-FunctionDecl 0x13d8f9a88  line:1:13 invalid rdp_write_demand_active 'int (int *, int *)' static   |-ParmVarDecl 0x13d8f9928 <col:37, col:46> col:46 invalid s 'int *'   |-ParmVarDecl 0x13d8f99a8 <col:49, col:62> col:62 invalid settings 'int *'   `-CompoundStmt 0x13d9159d8 <line:2:1, line:73:1>     |-BinaryOperator 0x13d8f9c88 <line:3:2, col:17> '<dependent type>' contains-errors ','     | |-BinaryOperator 0x13d8f9c48 <col:2, col:13> '<dependent type>' contains-errors ','     | | |-UnaryExprOrTypeTraitExpr 0x13d8f9c08 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | | `-RecoveryExpr 0x13d8f9be8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d8f9c28 <col:13> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13d8f9c68 <col:17> '<dependent type>' contains-errors lvalue     |-UnaryExprOrTypeTraitExpr 0x13d8f9d00 <line:5:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13d8f9ce0 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d8f9f70 <line:7:2, line:8:10>     | |-UnaryOperator 0x13d8f9f10 <line:7:6, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13d8f9ee0 <col:7, col:43> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13d8f9e80 <col:7> 'int ()' Function 0x13d8f9dc8 'Stream_EnsureRemainingCapacity' 'int ()'     | |   |-RecoveryExpr 0x13d8f9ea0 <col:38> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x13d8f9ec0 <col:41> 'int' 64     | `-ReturnStmt 0x13d8f9f60 <line:8:3, col:10>     |   `-RecoveryExpr 0x13d8f9f40 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d913160 <line:10:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d9130b8 <col:2> 'int ()' Function 0x13d913000 'Stream_Write_UINT32' 'int ()'     | |-RecoveryExpr 0x13d9130d8 <col:22> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x13d913118 <col:25, col:35> '<dependent type>' contains-errors lvalue ->ShareId     |   `-RecoveryExpr 0x13d9130f8 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d9132d0 <line:11:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d913270 <col:2> 'int ()' Function 0x13d9131b8 'Stream_Write_UINT16' 'int ()'     | |-RecoveryExpr 0x13d913290 <col:22> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13d9132b0 <col:25> 'int' 4     |-CallExpr 0x13d913568 <line:13:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d913528 <col:2> 'int ()' Function 0x13d913470 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x13d913548 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d913730 <line:14:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d913670 <col:2> 'int ()' Function 0x13d9135b8 'Stream_Write' 'int ()'     | |-RecoveryExpr 0x13d913690 <col:15> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x13d9136f0 <col:18> 'char[4]' lvalue \"STR\"     | `-IntegerLiteral 0x13d913710 <col:25> 'int' 4     |-CallExpr 0x13d913810 <line:16:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d9137d0 <col:2> 'int ()' Function 0x13d913470 'Stream_Seek_UINT16' 'int ()'     | `-RecoveryExpr 0x13d9137f0 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d913898 <line:17:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d913838 <col:2> 'int ()' Function 0x13d9131b8 'Stream_Write_UINT16' 'int ()'     | |-RecoveryExpr 0x13d913858 <col:22> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x13d913878 <col:25> 'int' 0     |-IfStmt 0x13d915078 <line:20:2, line:36:2>     | |-BinaryOperator 0x13d915048 <line:20:6, line:33:61> 'int' contains-errors '||'     | | |-BinaryOperator 0x13d914ea0 <line:20:6, line:32:57> 'int' contains-errors '||'     | | | |-BinaryOperator 0x13d914cf8 <line:20:6, line:31:60> 'int' contains-errors '||'     | | | | |-BinaryOperator 0x13d914b50 <line:20:6, line:30:63> 'int' contains-errors '||'     | | | | | |-BinaryOperator 0x13d9149a8 <line:20:6, line:29:57> 'int' contains-errors '||'     | | | | | | |-BinaryOperator 0x13d914800 <line:20:6, line:28:64> 'int' contains-errors '||'     | | | | | | | |-BinaryOperator 0x13d914658 <line:20:6, line:27:48> 'int' contains-errors '||'     | | | | | | | | |-BinaryOperator 0x13d9144b0 <line:20:6, line:26:49> 'int' contains-errors '||'     | | | | | | | | | |-BinaryOperator 0x13d914308 <line:20:6, line:25:59> 'int' contains-errors '||'     | | | | | | | | | | |-BinaryOperator 0x13d914160 <line:20:6, line:24:49> 'int' contains-errors '||'     | | | | | | | | | | | |-BinaryOperator 0x13d913f48 <line:20:6, line:23:51> 'int' contains-errors '||'     | | | | | | | | | | | | |-BinaryOperator 0x13d913da0 <line:20:6, line:22:49> 'int' contains-errors '||'     | | | | | | | | | | | | | |-BinaryOperator 0x13d913bf8 <line:20:6, line:21:50> 'int' contains-errors '||'     | | | | | | | | | | | | | | |-UnaryOperator 0x13d913a58 <line:20:6, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | | | | `-CallExpr 0x13d913a28 <col:7, col:51> '<dependent type>' contains-errors     | | | | | | | | | | | | | | |   |-DeclRefExpr 0x13d9139c8 <col:7> 'int ()' Function 0x13d913910 'rdp_write_general_capability_set' 'int ()'     | | | | | | | | | | | | | | |   |-RecoveryExpr 0x13d9139e8 <col:40> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | |   `-RecoveryExpr 0x13d913a08 <col:43> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | | `-UnaryOperator 0x13d913be0 <line:21:6, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | | |   `-CallExpr 0x13d913bb0 <col:7, col:50> '<dependent type>' contains-errors     | | | | | | | | | | | | | |     |-DeclRefExpr 0x13d913b50 <col:7> 'int ()' Function 0x13d913a98 'rdp_write_bitmap_capability_set' 'int ()'     | | | | | | | | | | | | | |     |-RecoveryExpr 0x13d913b70 <col:39> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | |     `-RecoveryExpr 0x13d913b90 <col:42> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | | `-UnaryOperator 0x13d913d88 <line:22:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | | |   `-CallExpr 0x13d913d58 <col:7, col:49> '<dependent type>' contains-errors     | | | | | | | | | | | | |     |-DeclRefExpr 0x13d913cf8 <col:7> 'int ()' Function 0x13d913c40 'rdp_write_order_capability_set' 'int ()'     | | | | | | | | | | | | |     |-RecoveryExpr 0x13d913d18 <col:38> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | |     `-RecoveryExpr 0x13d913d38 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | | `-UnaryOperator 0x13d913f30 <line:23:6, col:51> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | | |   `-CallExpr 0x13d913f00 <col:7, col:51> '<dependent type>' contains-errors     | | | | | | | | | | | |     |-DeclRefExpr 0x13d913ea0 <col:7> 'int ()' Function 0x13d913de8 'rdp_write_pointer_capability_set' 'int ()'     | | | | | | | | | | | |     |-RecoveryExpr 0x13d913ec0 <col:40> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | |     `-RecoveryExpr 0x13d913ee0 <col:43> '<dependent type>' contains-errors lvalue     | | | | | | | | | | | `-UnaryOperator 0x13d914148 <line:24:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | | |   `-CallExpr 0x13d914118 <col:7, col:49> '<dependent type>' contains-errors     | | | | | | | | | | |     |-DeclRefExpr 0x13d9140b8 <col:7> 'int ()' Function 0x13d914000 'rdp_write_input_capability_set' 'int ()'     | | | | | | | | | | |     |-RecoveryExpr 0x13d9140d8 <col:38> '<dependent type>' contains-errors lvalue     | | | | | | | | | | |     `-RecoveryExpr 0x13d9140f8 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | | | `-UnaryOperator 0x13d9142f0 <line:25:6, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | | |   `-CallExpr 0x13d9142c0 <col:7, col:59> '<dependent type>' contains-errors     | | | | | | | | | |     |-DeclRefExpr 0x13d914260 <col:7> 'int ()' Function 0x13d9141a8 'rdp_write_virtual_channel_capability_set' 'int ()'     | | | | | | | | | |     |-RecoveryExpr 0x13d914280 <col:48> '<dependent type>' contains-errors lvalue     | | | | | | | | | |     `-RecoveryExpr 0x13d9142a0 <col:51> '<dependent type>' contains-errors lvalue     | | | | | | | | | `-UnaryOperator 0x13d914498 <line:26:6, col:49> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | | |   `-CallExpr 0x13d914468 <col:7, col:49> '<dependent type>' contains-errors     | | | | | | | | |     |-DeclRefExpr 0x13d914408 <col:7> 'int ()' Function 0x13d914350 'rdp_write_share_capability_set' 'int ()'     | | | | | | | | |     |-RecoveryExpr 0x13d914428 <col:38> '<dependent type>' contains-errors lvalue     | | | | | | | | |     `-RecoveryExpr 0x13d914448 <col:41> '<dependent type>' contains-errors lvalue     | | | | | | | | `-UnaryOperator 0x13d914640 <line:27:6, col:48> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | | |   `-CallExpr 0x13d914610 <col:7, col:48> '<dependent type>' contains-errors     | | | | | | | |     |-DeclRefExpr 0x13d9145b0 <col:7> 'int ()' Function 0x13d9144f8 'rdp_write_font_capability_set' 'int ()'     | | | | | | | |     |-RecoveryExpr 0x13d9145d0 <col:37> '<dependent type>' contains-errors lvalue     | | | | | | | |     `-RecoveryExpr 0x13d9145f0 <col:40> '<dependent type>' contains-errors lvalue     | | | | | | | `-UnaryOperator 0x13d9147e8 <line:28:6, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | | |   `-CallExpr 0x13d9147b8 <col:7, col:64> '<dependent type>' contains-errors     | | | | | | |     |-DeclRefExpr 0x13d914758 <col:7> 'int ()' Function 0x13d9146a0 'rdp_write_multifragment_update_capability_set' 'int ()'     | | | | | | |     |-RecoveryExpr 0x13d914778 <col:53> '<dependent type>' contains-errors lvalue     | | | | | | |     `-RecoveryExpr 0x13d914798 <col:56> '<dependent type>' contains-errors lvalue     | | | | | | `-UnaryOperator 0x13d914990 <line:29:6, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | |   `-CallExpr 0x13d914960 <col:7, col:57> '<dependent type>' contains-errors     | | | | | |     |-DeclRefExpr 0x13d914900 <col:7> 'int ()' Function 0x13d914848 'rdp_write_large_pointer_capability_set' 'int ()'     | | | | | |     |-RecoveryExpr 0x13d914920 <col:46> '<dependent type>' contains-errors lvalue     | | | | | |     `-RecoveryExpr 0x13d914940 <col:49> '<dependent type>' contains-errors lvalue     | | | | | `-UnaryOperator 0x13d914b38 <line:30:6, col:63> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | |   `-CallExpr 0x13d914b08 <col:7, col:63> '<dependent type>' contains-errors     | | | | |     |-DeclRefExpr 0x13d914aa8 <col:7> 'int ()' Function 0x13d9149f0 'rdp_write_desktop_composition_capability_set' 'int ()'     | | | | |     |-RecoveryExpr 0x13d914ac8 <col:52> '<dependent type>' contains-errors lvalue     | | | | |     `-RecoveryExpr 0x13d914ae8 <col:55> '<dependent type>' contains-errors lvalue     | | | | `-UnaryOperator 0x13d914ce0 <line:31:6, col:60> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | |   `-CallExpr 0x13d914cb0 <col:7, col:60> '<dependent type>' contains-errors     | | | |     |-DeclRefExpr 0x13d914c50 <col:7> 'int ()' Function 0x13d914b98 'rdp_write_surface_commands_capability_set' 'int ()'     | | | |     |-RecoveryExpr 0x13d914c70 <col:49> '<dependent type>' contains-errors lvalue     | | | |     `-RecoveryExpr 0x13d914c90 <col:52> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x13d914e88 <line:32:6, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-CallExpr 0x13d914e58 <col:7, col:57> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x13d914df8 <col:7> 'int ()' Function 0x13d914d40 'rdp_write_bitmap_codecs_capability_set' 'int ()'     | | |     |-RecoveryExpr 0x13d914e18 <col:46> '<dependent type>' contains-errors lvalue     | | |     `-RecoveryExpr 0x13d914e38 <col:49> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x13d915030 <line:33:6, col:61> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x13d915000 <col:7, col:61> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x13d914fa0 <col:7> 'int ()' Function 0x13d914ee8 'rdp_write_frame_acknowledge_capability_set' 'int ()'     | |     |-RecoveryExpr 0x13d914fc0 <col:50> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x13d914fe0 <col:53> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d915068 <line:34:2, line:36:2>     |-IfStmt 0x13d915298 <line:38:2, line:44:2>     | |-CXXDependentScopeMemberExpr 0x13d9150b8 <line:38:6, col:16> '<dependent type>' contains-errors lvalue ->BitmapCachePersistEnabled     | | `-RecoveryExpr 0x13d915098 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d915288 <line:39:2, line:44:2>     |-IfStmt 0x13d915680 <line:46:2, line:53:2>     | |-CXXDependentScopeMemberExpr 0x13d9152d8 <line:46:6, col:16> '<dependent type>' contains-errors lvalue ->RemoteApplicationMode     | | `-RecoveryExpr 0x13d9152b8 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d915670 <line:47:2, line:53:2>     `-CallExpr 0x13d9159a8 <line:71:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d915948 <col:2> 'int ()' Function 0x13d913000 'Stream_Write_UINT32' 'int ()'       |-RecoveryExpr 0x13d915968 <col:22> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x13d915988 <col:25> 'int' 0 ","19832":"`-FunctionDecl 0x12d940ba8  line:1:1 vhost_user_reset_owner 'int (struct virtio_net **, struct VhostUserMsg *)'   |-ParmVarDecl 0x12d9286a8 <col:24, col:44> col:44 used pdev 'struct virtio_net **'   |-ParmVarDecl 0x12d940a88 <line:2:4, col:25> col:25 msg 'struct VhostUserMsg *'   `-CompoundStmt 0x12d941378 <line:4:1, line:11:1>     |-DeclStmt 0x12d940e08 <line:5:2, col:32>     | `-VarDecl 0x12d940d38 <col:2, col:28> col:21 used dev 'struct virtio_net *' cinit     |   `-ImplicitCastExpr 0x12d940df0 <col:27, col:28> 'struct virtio_net *' <LValueToRValue>     |     `-UnaryOperator 0x12d940dd8 <col:27, col:28> 'struct virtio_net *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x12d940dc0 <col:28> 'struct virtio_net **' <LValueToRValue>     |         `-DeclRefExpr 0x12d940da0 <col:28> 'struct virtio_net **' lvalue ParmVar 0x12d9286a8 'pdev' 'struct virtio_net **'     |-CallExpr 0x12d940fd8 <line:6:2, col:33> 'int'     | |-ImplicitCastExpr 0x12d940fc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d940f50 <col:2> 'int ()' Function 0x12d940e98 'vhost_destroy_device_notify' 'int ()'     | `-ImplicitCastExpr 0x12d941000 <col:30> 'struct virtio_net *' <LValueToRValue>     |   `-DeclRefExpr 0x12d940f70 <col:30> 'struct virtio_net *' lvalue Var 0x12d940d38 'dev' 'struct virtio_net *'     |-CallExpr 0x12d941170 <line:8:2, col:23> 'int'     | |-ImplicitCastExpr 0x12d941158 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d9410f8 <col:2> 'int ()' Function 0x12d941040 'cleanup_device' 'int ()'     | |-ImplicitCastExpr 0x12d9411a0 <col:17> 'struct virtio_net *' <LValueToRValue>     | | `-DeclRefExpr 0x12d941118 <col:17> 'struct virtio_net *' lvalue Var 0x12d940d38 'dev' 'struct virtio_net *'     | `-IntegerLiteral 0x12d941138 <col:22> 'int' 0     |-CallExpr 0x12d9412f0 <line:9:2, col:18> 'int'     | |-ImplicitCastExpr 0x12d9412d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12d941298 <col:2> 'int ()' Function 0x12d9411e0 'reset_device' 'int ()'     | `-ImplicitCastExpr 0x12d941318 <col:15> 'struct virtio_net *' <LValueToRValue>     |   `-DeclRefExpr 0x12d9412b8 <col:15> 'struct virtio_net *' lvalue Var 0x12d940d38 'dev' 'struct virtio_net *'     `-ReturnStmt 0x12d941368 <line:10:2, col:9>       `-RecoveryExpr 0x12d941348 <col:9> '<dependent type>' contains-errors lvalue ","20046":"`-FunctionDecl 0x14b80ddf8  line:1:1 invalid free_side 'int (int *)'   |-ParmVarDecl 0x14b80dd28 <col:12, col:23> col:23 invalid side 'int *'   `-CompoundStmt 0x14b827de0 <line:2:1, line:15:1>     |-CallExpr 0x14b80e0a0 <line:3:3, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b80e000 <col:3> 'int ()' Function 0x14b80df48 'g_clear_object' 'int ()'     | `-UnaryOperator 0x14b80e088 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b80e040 <col:20, col:26> '<dependent type>' contains-errors lvalue ->connection     |     `-RecoveryExpr 0x14b80e020 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b80e2b0 <line:4:3, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b80e1a8 <col:3> 'int ()' Function 0x14b80e0f0 'g_clear_pointer' 'int ()'     | |-UnaryOperator 0x14b80e230 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x14b80e1e8 <col:21, col:27> '<dependent type>' contains-errors lvalue ->extra_input_data     | |   `-RecoveryExpr 0x14b80e1c8 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b80e290 <col:45> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b827af8 <line:9:3, line:10:38>     | |-CXXDependentScopeMemberExpr 0x14b827920 <line:9:7, col:13> '<dependent type>' contains-errors lvalue ->in_source     | | `-RecoveryExpr 0x14b827900 <col:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14b827ad0 <line:10:5, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b827a48 <col:5> 'int ()' Function 0x14b827990 'g_source_destroy' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14b827a88 <col:23, col:29> '<dependent type>' contains-errors lvalue ->in_source     |     `-RecoveryExpr 0x14b827a68 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b827c30 <line:11:3, line:12:39>     | |-CXXDependentScopeMemberExpr 0x14b827b38 <line:11:7, col:13> '<dependent type>' contains-errors lvalue ->out_source     | | `-RecoveryExpr 0x14b827b18 <col:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14b827c08 <line:12:5, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b827b80 <col:5> 'int ()' Function 0x14b827990 'g_source_destroy' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14b827bc0 <col:23, col:29> '<dependent type>' contains-errors lvalue ->out_source     |     `-RecoveryExpr 0x14b827ba0 <col:23> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14b827db8 <line:14:3, col:47> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b827d30 <col:3> 'int ()' Function 0x14b827c78 'g_hash_table_destroy' 'int ()'       `-CXXDependentScopeMemberExpr 0x14b827d70 <col:25, col:31> '<dependent type>' contains-errors lvalue ->expected_replies         `-RecoveryExpr 0x14b827d50 <col:25> '<dependent type>' contains-errors lvalue ","19931":"`-FunctionDecl 0x140142080  line:1:12 invalid asn1_check_tlen 'int (long *, int *, unsigned char *, char *, char *, const unsigned char **, long, int, int, char, int *)' static   |-ParmVarDecl 0x140128908 <col:28, col:34> col:34 used olen 'long *'   |-ParmVarDecl 0x1401289b8 <col:40, col:45> col:45 used otag 'int *'   |-ParmVarDecl 0x140128a68 <col:51, col:66> col:66 used oclass 'unsigned char *'   |-ParmVarDecl 0x140128ae8 <line:2:28, col:34> col:34 used inf 'char *'   |-ParmVarDecl 0x140128b68 <col:39, col:45> col:45 used cst 'char *'   |-ParmVarDecl 0x140128c50 <line:3:28, col:50> col:50 used in 'const unsigned char **'   |-ParmVarDecl 0x140128cd0 <col:54, col:59> col:59 used len 'long'   |-ParmVarDecl 0x140128d50 <line:4:28, col:32> col:32 used exptag 'int'   |-ParmVarDecl 0x140128dd0 <col:40, col:44> col:44 used expclass 'int'   |-ParmVarDecl 0x140128e48 <col:54, col:59> col:59 used opt 'char'   |-ParmVarDecl 0x140128ee0 <col:64, col:74> col:74 referenced invalid ctx 'int *'   `-CompoundStmt 0x140145810 <line:5:1, line:75:1>     |-DeclStmt 0x140142200 <line:6:5, col:10>     | `-VarDecl 0x140142198 <col:5, col:9> col:9 used i 'int'     |-DeclStmt 0x140142330 <line:7:5, col:21>     | |-VarDecl 0x140142230 <col:5, col:9> col:9 used ptag 'int'     | `-VarDecl 0x1401422b0 <col:5, col:15> col:15 used pclass 'int'     |-DeclStmt 0x1401423c8 <line:8:5, col:14>     | `-VarDecl 0x140142360 <col:5, col:10> col:10 used plen 'long'     |-DeclStmt 0x1401424f8 <line:9:5, col:31>     | |-VarDecl 0x1401423f8 <col:5, col:26> col:26 used p 'const unsigned char *'     | `-VarDecl 0x140142478 <col:5, col:30> col:30 used q 'const unsigned char *'     |-BinaryOperator 0x140142598 <line:10:5, col:10> 'const unsigned char *' '='     | |-DeclRefExpr 0x140142510 <col:5> 'const unsigned char *' lvalue Var 0x1401423f8 'p' 'const unsigned char *'     | `-ImplicitCastExpr 0x140142580 <col:9, col:10> 'const unsigned char *' <LValueToRValue>     |   `-UnaryOperator 0x140142568 <col:9, col:10> 'const unsigned char *' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x140142550 <col:10> 'const unsigned char **' <LValueToRValue>     |       `-DeclRefExpr 0x140142530 <col:10> 'const unsigned char **' lvalue ParmVar 0x140128c50 'in' 'const unsigned char **'     |-BinaryOperator 0x140142610 <line:11:5, col:9> 'const unsigned char *' '='     | |-DeclRefExpr 0x1401425b8 <col:5> 'const unsigned char *' lvalue Var 0x140142478 'q' 'const unsigned char *'     | `-ImplicitCastExpr 0x1401425f8 <col:9> 'const unsigned char *' <LValueToRValue>     |   `-DeclRefExpr 0x1401425d8 <col:9> 'const unsigned char *' lvalue Var 0x1401423f8 'p' 'const unsigned char *'     |-IfStmt 0x140143978 <line:13:5, line:35:5> has_else     | |-BinaryOperator 0x1401426b8 <line:13:9, col:21> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x140142630 <col:9> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x140142670 <col:16, col:21> '<dependent type>' contains-errors lvalue ->valid     | |   `-RecoveryExpr 0x140142650 <col:16> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x140142a30 <col:28, line:19:5>     | | |-BinaryOperator 0x140142760 <line:14:9, col:18> 'int' contains-errors '='     | | | |-DeclRefExpr 0x1401426d8 <col:9> 'int' lvalue Var 0x140142198 'i' 'int'     | | | `-CXXDependentScopeMemberExpr 0x140142718 <col:13, col:18> '<dependent type>' contains-errors lvalue ->ret     | | |   `-RecoveryExpr 0x1401426f8 <col:13> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x140142808 <line:15:9, col:21> 'long' contains-errors '='     | | | |-DeclRefExpr 0x140142780 <col:9> 'long' lvalue Var 0x140142360 'plen' 'long'     | | | `-CXXDependentScopeMemberExpr 0x1401427c0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->plen     | | |   `-RecoveryExpr 0x1401427a0 <col:16> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x1401428b0 <line:16:9, col:23> 'int' contains-errors '='     | | | |-DeclRefExpr 0x140142828 <col:9> 'int' lvalue Var 0x1401422b0 'pclass' 'int'     | | | `-CXXDependentScopeMemberExpr 0x140142868 <col:18, col:23> '<dependent type>' contains-errors lvalue ->pclass     | | |   `-RecoveryExpr 0x140142848 <col:18> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x140142958 <line:17:9, col:21> 'int' contains-errors '='     | | | |-DeclRefExpr 0x1401428d0 <col:9> 'int' lvalue Var 0x140142230 'ptag' 'int'     | | | `-CXXDependentScopeMemberExpr 0x140142910 <col:16, col:21> '<dependent type>' contains-errors lvalue ->ptag     | | |   `-RecoveryExpr 0x1401428f0 <col:16> '<dependent type>' contains-errors lvalue     | | `-CompoundAssignOperator 0x140142a00 <line:18:9, col:19> 'const unsigned char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |-DeclRefExpr 0x140142978 <col:9> 'const unsigned char *' lvalue Var 0x1401423f8 'p' 'const unsigned char *'     | |   `-CXXDependentScopeMemberExpr 0x1401429b8 <col:14, col:19> '<dependent type>' contains-errors lvalue ->hdrlen     | |     `-RecoveryExpr 0x140142998 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140143958 <line:19:12, line:35:5>     |   |-BinaryOperator 0x140142da8 <line:20:9, col:59> 'int' '='     |   | |-DeclRefExpr 0x140142a68 <col:9> 'int' lvalue Var 0x140142198 'i' 'int'     |   | `-CallExpr 0x140142d48 <col:13, col:59> 'int'     |   |   |-ImplicitCastExpr 0x140142d30 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x140142be0 <col:13> 'int ()' Function 0x140142b28 'ASN1_get_object' 'int ()'     |   |   |-UnaryOperator 0x140142c20 <col:29, col:30> 'const unsigned char **' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x140142c00 <col:30> 'const unsigned char *' lvalue Var 0x1401423f8 'p' 'const unsigned char *'     |   |   |-UnaryOperator 0x140142c58 <col:33, col:34> 'long *' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x140142c38 <col:34> 'long' lvalue Var 0x140142360 'plen' 'long'     |   |   |-UnaryOperator 0x140142c90 <col:40, col:41> 'int *' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x140142c70 <col:41> 'int' lvalue Var 0x140142230 'ptag' 'int'     |   |   |-UnaryOperator 0x140142cc8 <col:47, col:48> 'int *' prefix '&' cannot overflow     |   |   | `-DeclRefExpr 0x140142ca8 <col:48> 'int' lvalue Var 0x1401422b0 'pclass' 'int'     |   |   `-ImplicitCastExpr 0x140142d90 <col:56> 'long' <LValueToRValue>     |   |     `-DeclRefExpr 0x140142ce0 <col:56> 'long' lvalue ParmVar 0x140128cd0 'len' 'long'     |   `-IfStmt 0x140143938 <line:21:9, line:34:9>     |     |-RecoveryExpr 0x140142dc8 <line:21:13> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x1401438f0 <col:18, line:34:9>     |       |-BinaryOperator 0x140142e98 <line:22:13, col:24> '<dependent type>' contains-errors '='     |       | |-CXXDependentScopeMemberExpr 0x140142e30 <col:13, col:18> '<dependent type>' contains-errors lvalue ->ret     |       | | `-RecoveryExpr 0x140142e08 <col:13> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x140142de8 <col:13> 'int *' lvalue ParmVar 0x140128ee0 'ctx' 'int *'     |       | `-DeclRefExpr 0x140142e78 <col:24> 'int' lvalue Var 0x140142198 'i' 'int'     |       |-BinaryOperator 0x140142f68 <line:23:13, col:25> '<dependent type>' contains-errors '='     |       | |-CXXDependentScopeMemberExpr 0x140142f00 <col:13, col:18> '<dependent type>' contains-errors lvalue ->plen     |       | | `-RecoveryExpr 0x140142ed8 <col:13> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x140142eb8 <col:13> 'int *' lvalue ParmVar 0x140128ee0 'ctx' 'int *'     |       | `-DeclRefExpr 0x140142f48 <col:25> 'long' lvalue Var 0x140142360 'plen' 'long'     |       |-BinaryOperator 0x140143068 <line:24:13, col:27> '<dependent type>' contains-errors '='     |       | |-CXXDependentScopeMemberExpr 0x140143000 <col:13, col:18> '<dependent type>' contains-errors lvalue ->pclass     |       | | `-RecoveryExpr 0x140142fa8 <col:13> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x140142f88 <col:13> 'int *' lvalue ParmVar 0x140128ee0 'ctx' 'int *'     |       | `-DeclRefExpr 0x140143048 <col:27> 'int' lvalue Var 0x1401422b0 'pclass' 'int'     |       |-BinaryOperator 0x140143138 <line:25:13, col:25> '<dependent type>' contains-errors '='     |       | |-CXXDependentScopeMemberExpr 0x1401430d0 <col:13, col:18> '<dependent type>' contains-errors lvalue ->ptag     |       | | `-RecoveryExpr 0x1401430a8 <col:13> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x140143088 <col:13> 'int *' lvalue ParmVar 0x140128ee0 'ctx' 'int *'     |       | `-DeclRefExpr 0x140143118 <col:25> 'int' lvalue Var 0x140142230 'ptag' 'int'     |       |-BinaryOperator 0x140143278 <line:26:13, col:31> '<dependent type>' contains-errors '='     |       | |-CXXDependentScopeMemberExpr 0x1401431a0 <col:13, col:18> '<dependent type>' contains-errors lvalue ->hdrlen     |       | | `-RecoveryExpr 0x140143178 <col:13> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x140143158 <col:13> 'int *' lvalue ParmVar 0x140128ee0 'ctx' 'int *'     |       | `-BinaryOperator 0x140143258 <col:27, col:31> 'long' '-'     |       |   |-ImplicitCastExpr 0x140143228 <col:27> 'const unsigned char *' <LValueToRValue>     |       |   | `-DeclRefExpr 0x1401431e8 <col:27> 'const unsigned char *' lvalue Var 0x1401423f8 'p' 'const unsigned char *'     |       |   `-ImplicitCastExpr 0x140143240 <col:31> 'const unsigned char *' <LValueToRValue>     |       |     `-DeclRefExpr 0x140143208 <col:31> 'const unsigned char *' lvalue Var 0x140142478 'q' 'const unsigned char *'     |       |-BinaryOperator 0x140143348 <line:27:13, col:26> '<dependent type>' contains-errors '='     |       | |-CXXDependentScopeMemberExpr 0x1401432e0 <col:13, col:18> '<dependent type>' contains-errors lvalue ->valid     |       | | `-RecoveryExpr 0x1401432b8 <col:13> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x140143298 <col:13> 'int *' lvalue ParmVar 0x140128ee0 'ctx' 'int *'     |       | `-IntegerLiteral 0x140143328 <col:26> 'int' 1     |       `-IfStmt 0x1401438d0 <line:29:13, line:33:13>     |         |-BinaryOperator 0x140143540 <line:29:17, col:59> 'int' contains-errors '&&'     |         | |-UnaryOperator 0x140143400 <col:17, col:27> 'int' prefix '!' cannot overflow     |         | | `-ParenExpr 0x1401433e0 <col:18, col:27> 'int'     |         | |   `-BinaryOperator 0x1401433c0 <col:19, col:23> 'int' '&'     |         | |     |-ImplicitCastExpr 0x1401433a8 <col:19> 'int' <LValueToRValue>     |         | |     | `-DeclRefExpr 0x140143368 <col:19> 'int' lvalue Var 0x140142198 'i' 'int'     |         | |     `-IntegerLiteral 0x140143388 <col:23> 'int' 129     |         | `-ParenExpr 0x140143520 <col:32, col:59> 'int' contains-errors     |         |   `-BinaryOperator 0x140143500 <col:33, col:56> 'int' contains-errors '>'     |         |     |-ParenExpr 0x1401434c0 <col:33, col:52> '<dependent type>' contains-errors     |         |     | `-BinaryOperator 0x1401434a0 <col:34, col:46> '<dependent type>' contains-errors '+'     |         |     |   |-DeclRefExpr 0x140143418 <col:34> 'long' lvalue Var 0x140142360 'plen' 'long'     |         |     |   `-CXXDependentScopeMemberExpr 0x140143458 <col:41, col:46> '<dependent type>' contains-errors lvalue ->hdrlen     |         |     |     `-RecoveryExpr 0x140143438 <col:41> '<dependent type>' contains-errors lvalue     |         |     `-DeclRefExpr 0x1401434e0 <col:56> 'long' lvalue ParmVar 0x140128cd0 'len' 'long'     |         `-CompoundStmt 0x1401438a8 <col:62, line:33:13>     |           |-CallExpr 0x140143700 <line:30:17, col:64> '<dependent type>' contains-errors     |           | |-DeclRefExpr 0x140143640 <col:17> 'int ()' Function 0x140143588 'ASN1err' 'int ()'     |           | |-RecoveryExpr 0x1401436c0 <col:25> '<dependent type>' contains-errors lvalue     |           | `-RecoveryExpr 0x1401436e0 <col:49> '<dependent type>' contains-errors lvalue     |           |-CallExpr 0x140143850 <line:31:17, col:35> '<dependent type>' contains-errors     |           | |-DeclRefExpr 0x140143810 <col:17> 'int ()' Function 0x140143758 'asn1_tlc_clear' 'int ()'     |           | `-RecoveryExpr 0x140143830 <col:32> '<dependent type>' contains-errors lvalue     |           `-ReturnStmt 0x140143898 <line:32:17, col:24>     |             `-IntegerLiteral 0x140143878 <col:24> 'int' 0     |-IfStmt 0x140143bd0 <line:37:5, line:41:5>     | |-BinaryOperator 0x140143a00 <line:37:9, col:13> 'int' '&'     | | |-ImplicitCastExpr 0x1401439e8 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1401439a8 <col:9> 'int' lvalue Var 0x140142198 'i' 'int'     | | `-IntegerLiteral 0x1401439c8 <col:13> 'int' 128     | `-CompoundStmt 0x140143ba8 <col:19, line:41:5>     |   |-CallExpr 0x140143ae0 <line:38:9, col:65> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x140143a20 <col:9> 'int ()' Function 0x140143588 'ASN1err' 'int ()'     |   | |-RecoveryExpr 0x140143aa0 <col:17> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x140143ac0 <col:41> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x140143b50 <line:39:9, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x140143b10 <col:9> 'int ()' Function 0x140143758 'asn1_tlc_clear' 'int ()'     |   | `-RecoveryExpr 0x140143b30 <col:24> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x140143b98 <line:40:9, col:16>     |     `-IntegerLiteral 0x140143b78 <col:16> 'int' 0     |-IfStmt 0x140144ee8 <line:42:5, line:53:5>     | |-BinaryOperator 0x140143c48 <line:42:9, col:19> 'int' '>='     | | |-ImplicitCastExpr 0x140143c30 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x140143bf0 <col:9> 'int' lvalue ParmVar 0x140128d50 'exptag' 'int'     | | `-IntegerLiteral 0x140143c10 <col:19> 'int' 0     | `-CompoundStmt 0x140144ec8 <col:22, line:53:5>     |   |-IfStmt 0x140144e40 <line:43:9, line:50:9>     |   | |-BinaryOperator 0x140143dc8 <line:43:13, col:52> 'int' '||'     |   | | |-ParenExpr 0x140143cf8 <col:13, col:28> 'int'     |   | | | `-BinaryOperator 0x140143cd8 <col:14, col:24> 'int' '!='     |   | | |   |-ImplicitCastExpr 0x140143ca8 <col:14> 'int' <LValueToRValue>     |   | | |   | `-DeclRefExpr 0x140143c68 <col:14> 'int' lvalue ParmVar 0x140128d50 'exptag' 'int'     |   | | |   `-ImplicitCastExpr 0x140143cc0 <col:24> 'int' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x140143c88 <col:24> 'int' lvalue Var 0x140142230 'ptag' 'int'     |   | | `-ParenExpr 0x140143da8 <col:33, col:52> 'int'     |   | |   `-BinaryOperator 0x140143d88 <col:34, col:46> 'int' '!='     |   | |     |-ImplicitCastExpr 0x140143d58 <col:34> 'int' <LValueToRValue>     |   | |     | `-DeclRefExpr 0x140143d18 <col:34> 'int' lvalue ParmVar 0x140128dd0 'expclass' 'int'     |   | |     `-ImplicitCastExpr 0x140143d70 <col:46> 'int' <LValueToRValue>     |   | |       `-DeclRefExpr 0x140143d38 <col:46> 'int' lvalue Var 0x1401422b0 'pclass' 'int'     |   | `-CompoundStmt 0x140144e10 <col:55, line:50:9>     |   |   |-IfStmt 0x140143e68 <line:45:13, line:46:25>     |   |   | |-ImplicitCastExpr 0x140143e08 <line:45:17> 'char' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x140143de8 <col:17> 'char' lvalue ParmVar 0x140128e48 'opt' 'char'     |   |   | `-ReturnStmt 0x140143e58 <line:46:17, col:25>     |   |   |   `-UnaryOperator 0x140143e40 <col:24, col:25> 'int' prefix '-'     |   |   |     `-IntegerLiteral 0x140143e20 <col:25> 'int' 1     |   |   |-CallExpr 0x140143ec8 <line:47:13, col:31> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x140143e88 <col:13> 'int ()' Function 0x140143758 'asn1_tlc_clear' 'int ()'     |   |   | `-RecoveryExpr 0x140143ea8 <col:28> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x140143fb0 <line:48:13, col:61> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x140143ef0 <col:13> 'int ()' Function 0x140143588 'ASN1err' 'int ()'     |   |   | |-RecoveryExpr 0x140143f70 <col:21> '<dependent type>' contains-errors lvalue     |   |   | `-RecoveryExpr 0x140143f90 <col:45> '<dependent type>' contains-errors lvalue     |   |   `-ReturnStmt 0x140144e00 <line:49:13, col:20>     |   |     `-IntegerLiteral 0x140143fe0 <col:20> 'int' 0     |   `-CallExpr 0x140144ea0 <line:52:9, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x140144e60 <col:9> 'int ()' Function 0x140143758 'asn1_tlc_clear' 'int ()'     |     `-RecoveryExpr 0x140144e80 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1401450c8 <line:55:5, line:56:28>     | |-BinaryOperator 0x140144f60 <line:55:9, col:13> 'int' '&'     | | |-ImplicitCastExpr 0x140144f48 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x140144f08 <col:9> 'int' lvalue Var 0x140142198 'i' 'int'     | | `-IntegerLiteral 0x140144f28 <col:13> 'int' 1     | `-BinaryOperator 0x1401450a8 <line:56:9, col:28> 'long' '='     |   |-DeclRefExpr 0x140144f80 <col:9> 'long' lvalue Var 0x140142360 'plen' 'long'     |   `-BinaryOperator 0x140145088 <col:16, col:28> 'long' '-'     |     |-ImplicitCastExpr 0x140145070 <col:16> 'long' <LValueToRValue>     |     | `-DeclRefExpr 0x140144fa0 <col:16> 'long' lvalue ParmVar 0x140128cd0 'len' 'long'     |     `-ParenExpr 0x140145050 <col:22, col:28> 'long'     |       `-BinaryOperator 0x140145030 <col:23, col:27> 'long' '-'     |         |-ImplicitCastExpr 0x140145000 <col:23> 'const unsigned char *' <LValueToRValue>     |         | `-DeclRefExpr 0x140144fc0 <col:23> 'const unsigned char *' lvalue Var 0x1401423f8 'p' 'const unsigned char *'     |         `-ImplicitCastExpr 0x140145018 <col:27> 'const unsigned char *' <LValueToRValue>     |           `-DeclRefExpr 0x140144fe0 <col:27> 'const unsigned char *' lvalue Var 0x140142478 'q' 'const unsigned char *'     |-IfStmt 0x140145220 <line:58:5, line:59:20>     | |-ImplicitCastExpr 0x140145108 <line:58:9> 'char *' <LValueToRValue>     | | `-DeclRefExpr 0x1401450e8 <col:9> 'char *' lvalue ParmVar 0x140128ae8 'inf' 'char *'     | `-BinaryOperator 0x140145200 <line:59:9, col:20> 'char' '='     |   |-UnaryOperator 0x140145158 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x140145140 <col:10> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x140145120 <col:10> 'char *' lvalue ParmVar 0x140128ae8 'inf' 'char *'     |   `-ImplicitCastExpr 0x1401451e8 <col:16, col:20> 'char' <IntegralCast>     |     `-BinaryOperator 0x1401451c8 <col:16, col:20> 'int' '&'     |       |-ImplicitCastExpr 0x1401451b0 <col:16> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x140145170 <col:16> 'int' lvalue Var 0x140142198 'i' 'int'     |       `-IntegerLiteral 0x140145190 <col:20> 'int' 1     |-IfStmt 0x140145400 <line:61:5, line:62:20>     | |-ImplicitCastExpr 0x140145260 <line:61:9> 'char *' <LValueToRValue>     | | `-DeclRefExpr 0x140145240 <col:9> 'char *' lvalue ParmVar 0x140128b68 'cst' 'char *'     | `-BinaryOperator 0x1401453e0 <line:62:9, col:20> 'char' contains-errors '='     |   |-UnaryOperator 0x140145388 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x140145370 <col:10> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x140145278 <col:10> 'char *' lvalue ParmVar 0x140128b68 'cst' 'char *'     |   `-BinaryOperator 0x1401453c0 <col:16, col:20> '<dependent type>' contains-errors '&'     |     |-DeclRefExpr 0x1401452c8 <col:16> 'int' lvalue Var 0x140142198 'i' 'int'     |     `-RecoveryExpr 0x1401453a0 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140145500 <line:64:5, line:65:17>     | |-ImplicitCastExpr 0x140145440 <line:64:9> 'long *' <LValueToRValue>     | | `-DeclRefExpr 0x140145420 <col:9> 'long *' lvalue ParmVar 0x140128908 'olen' 'long *'     | `-BinaryOperator 0x1401454e0 <line:65:9, col:17> 'long' '='     |   |-UnaryOperator 0x140145490 <col:9, col:10> 'long' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x140145478 <col:10> 'long *' <LValueToRValue>     |   |   `-DeclRefExpr 0x140145458 <col:10> 'long *' lvalue ParmVar 0x140128908 'olen' 'long *'     |   `-ImplicitCastExpr 0x1401454c8 <col:17> 'long' <LValueToRValue>     |     `-DeclRefExpr 0x1401454a8 <col:17> 'long' lvalue Var 0x140142360 'plen' 'long'     |-IfStmt 0x140145618 <line:67:5, line:68:19>     | |-ImplicitCastExpr 0x140145540 <line:67:9> 'unsigned char *' <LValueToRValue>     | | `-DeclRefExpr 0x140145520 <col:9> 'unsigned char *' lvalue ParmVar 0x140128a68 'oclass' 'unsigned char *'     | `-BinaryOperator 0x1401455f8 <line:68:9, col:19> 'unsigned char' '='     |   |-UnaryOperator 0x140145590 <col:9, col:10> 'unsigned char' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x140145578 <col:10> 'unsigned char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x140145558 <col:10> 'unsigned char *' lvalue ParmVar 0x140128a68 'oclass' 'unsigned char *'     |   `-ImplicitCastExpr 0x1401455e0 <col:19> 'unsigned char' <IntegralCast>     |     `-ImplicitCastExpr 0x1401455c8 <col:19> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1401455a8 <col:19> 'int' lvalue Var 0x1401422b0 'pclass' 'int'     |-IfStmt 0x140145718 <line:70:5, line:71:17>     | |-ImplicitCastExpr 0x140145658 <line:70:9> 'int *' <LValueToRValue>     | | `-DeclRefExpr 0x140145638 <col:9> 'int *' lvalue ParmVar 0x1401289b8 'otag' 'int *'     | `-BinaryOperator 0x1401456f8 <line:71:9, col:17> 'int' '='     |   |-UnaryOperator 0x1401456a8 <col:9, col:10> 'int' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x140145690 <col:10> 'int *' <LValueToRValue>     |   |   `-DeclRefExpr 0x140145670 <col:10> 'int *' lvalue ParmVar 0x1401289b8 'otag' 'int *'     |   `-ImplicitCastExpr 0x1401456e0 <col:17> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1401456c0 <col:17> 'int' lvalue Var 0x140142230 'ptag' 'int'     |-BinaryOperator 0x1401457c0 <line:73:5, col:11> 'const unsigned char *' '='     | |-UnaryOperator 0x140145770 <col:5, col:6> 'const unsigned char *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x140145758 <col:6> 'const unsigned char **' <LValueToRValue>     | |   `-DeclRefExpr 0x140145738 <col:6> 'const unsigned char **' lvalue ParmVar 0x140128c50 'in' 'const unsigned char **'     | `-ImplicitCastExpr 0x1401457a8 <col:11> 'const unsigned char *' <LValueToRValue>     |   `-DeclRefExpr 0x140145788 <col:11> 'const unsigned char *' lvalue Var 0x1401423f8 'p' 'const unsigned char *'     `-ReturnStmt 0x140145800 <line:74:5, col:12>       `-IntegerLiteral 0x1401457e0 <col:12> 'int' 1 ","19733":"`-FunctionDecl 0x13d928ba8  line:1:1 invalid njs_promise_perform_all_settled_handler 'int (int *, int *, int *, int)'   |-ParmVarDecl 0x13d928928 <col:41, col:51> col:51 invalid vm 'int *'   |-ParmVarDecl 0x13d9289a8 <col:55, col:76> col:76 referenced invalid args 'int *'   |-ParmVarDecl 0x13d928a28 <line:2:5, col:18> col:18 invalid value 'int *'   |-ParmVarDecl 0x13d928aa8 <col:25, col:33> col:33 invalid index 'int'   `-CompoundStmt 0x13d9428a8 <line:3:1, line:64:1>     |-IfStmt 0x13d942268 <line:21:5, line:23:5>     | |-RecoveryExpr 0x13d942238 <line:21:9, col:39> '_Bool' contains-errors     | `-CompoundStmt 0x13d942258 <col:42, line:23:5>     |-IfStmt 0x13d9423f8 <line:27:5, line:29:5>     | |-RecoveryExpr 0x13d9423c8 <line:27:9, col:43> '_Bool' contains-errors     | `-CompoundStmt 0x13d9423e8 <col:46, line:29:5>     |-IfStmt 0x13d942518 <line:40:5, line:42:5>     | |-RecoveryExpr 0x13d9424e8 <line:40:9, col:42> '_Bool' contains-errors     | `-CompoundStmt 0x13d942508 <col:45, line:42:5>     `-IfStmt 0x13d942888 <line:59:5, line:61:5>       |-RecoveryExpr 0x13d942858 <line:59:9, col:39> '_Bool' contains-errors       `-CompoundStmt 0x13d942878 <col:42, line:61:5> ","19994":"`-FunctionDecl 0x1268094f0  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1268095f0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x126809658 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1268096c0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x126809598 <<invalid sloc>> Implicit 882 ","19608":"`-FunctionDecl 0x1541283e8  line:1:12 invalid iccalternatespace 'int (int *, int *, int **, int *)' static   |-ParmVarDecl 0x154128128 <col:30, col:40> col:40 invalid i_ctx_p 'int *'   |-ParmVarDecl 0x1541281a8 <col:49, col:54> col:54 invalid space 'int *'   |-ParmVarDecl 0x154128260 <col:61, col:67> col:67 invalid r 'int **'   |-ParmVarDecl 0x1541282e0 <col:70, col:75> col:75 used CIESubst 'int *'   `-CompoundStmt 0x154144428 <line:2:1, line:44:1>     |-DeclStmt 0x1541285e8 <line:3:5, col:29>     | |-VarDecl 0x1541284c8 <col:5, col:9> col:9 used components 'int'     | `-VarDecl 0x154128548 <col:5, col:28> col:21 used code 'int' cinit     |   `-IntegerLiteral 0x1541285b0 <col:28> 'int' 0     |-IfStmt 0x1541419a0 <line:6:5, line:7:40>     | |-UnaryOperator 0x154141800 <line:6:9, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1541287d0 <col:10, col:26> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x154128790 <col:10> 'int ()' Function 0x1541286d8 'r_is_array' 'int ()'     | |   `-RecoveryExpr 0x1541287b0 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x154141978 <line:7:9, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1541418f8 <col:9> 'int ()' Function 0x154141840 'return_error' 'int ()'     |   `-RecoveryExpr 0x154141958 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154141bf0 <line:9:5, line:10:41>     | |-BinaryOperator 0x154141b28 <line:9:9, col:26> 'int' contains-errors '!='     | | |-CallExpr 0x154141ae0 <col:9, col:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x154141aa0 <col:9> 'int ()' Function 0x1541419e8 'r_size' 'int ()'     | | | `-RecoveryExpr 0x154141ac0 <col:16> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x154141b08 <col:26> 'int' 2     | `-CallExpr 0x154141bc8 <line:10:9, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154141b48 <col:9> 'int ()' Function 0x154141840 'return_error' 'int ()'     |   `-RecoveryExpr 0x154141ba8 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154141eb0 <line:12:5, col:49> 'int' contains-errors '='     | |-DeclRefExpr 0x154141c10 <col:5> 'int' lvalue Var 0x154128548 'code' 'int'     | `-CallExpr 0x154141e70 <col:12, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154141d10 <col:12> 'int ()' Function 0x154141c58 'array_get' 'int ()'     |   |-RecoveryExpr 0x154141e18 <col:22> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x154141d48 <col:31> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x154141d68 <col:38> 'int' 1     |   `-UnaryOperator 0x154141e58 <col:41, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x154141e38 <col:42> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154141f90 <line:13:5, line:14:16>     | |-BinaryOperator 0x154141f28 <line:13:9, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x154141f10 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x154141ed0 <col:9> 'int' lvalue Var 0x154128548 'code' 'int'     | | `-IntegerLiteral 0x154141ef0 <col:16> 'int' 0     | `-ReturnStmt 0x154141f80 <line:14:9, col:16>     |   `-ImplicitCastExpr 0x154141f68 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x154141f48 <col:16> 'int' lvalue Var 0x154128548 'code' 'int'     |-BinaryOperator 0x154142290 <line:16:5, col:54> 'int' contains-errors '='     | |-DeclRefExpr 0x154141fb0 <col:5> 'int' lvalue Var 0x154128548 'code' 'int'     | `-CallExpr 0x154142258 <col:12, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1541420b0 <col:12> 'int ()' Function 0x154141ff8 'dict_find_string' 'int ()'     |   |-UnaryOperator 0x154142208 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1541421e8 <col:30> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x154142140 <col:39> 'char[4]' lvalue \"STR\"     |   `-UnaryOperator 0x154142240 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x154142220 <col:47> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154142370 <line:17:5, line:18:16>     | |-BinaryOperator 0x154142308 <line:17:9, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x1541422f0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1541422b0 <col:9> 'int' lvalue Var 0x154128548 'code' 'int'     | | `-IntegerLiteral 0x1541422d0 <col:16> 'int' 0     | `-ReturnStmt 0x154142360 <line:18:9, col:16>     |   `-ImplicitCastExpr 0x154142348 <col:16> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x154142328 <col:16> 'int' lvalue Var 0x154128548 'code' 'int'     |-IfStmt 0x1541425a0 <line:19:5, line:20:48>     | |-BinaryOperator 0x1541423e8 <line:19:9, col:17> 'int' '=='     | | |-ImplicitCastExpr 0x1541423d0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x154142390 <col:9> 'int' lvalue Var 0x154128548 'code' 'int'     | | `-IntegerLiteral 0x1541423b0 <col:17> 'int' 0     | `-ReturnStmt 0x154142590 <line:20:9, col:48>     |   `-CallExpr 0x154142568 <col:16, col:48> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1541424e8 <col:16> 'int ()' Function 0x154142430 'gs_note_error' 'int ()'     |     `-RecoveryExpr 0x154142548 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154142758 <line:22:5, col:33> 'int' contains-errors '='     | |-DeclRefExpr 0x1541425c0 <col:5> 'int' lvalue Var 0x1541284c8 'components' 'int'     | `-CXXDependentScopeMemberExpr 0x154142710 <col:18, col:33> '<dependent type>' contains-errors lvalue .intval     |   `-CXXDependentScopeMemberExpr 0x1541426c8 <col:18, col:27> '<dependent type>' contains-errors lvalue ->value     |     `-RecoveryExpr 0x1541426a8 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154144320 <line:25:5, line:41:5> has_else     | |-RecoveryExpr 0x154143d58 <line:25:9, col:48> '_Bool' contains-errors     | |-CompoundStmt 0x154143dc8 <col:51, line:27:5>     | `-CompoundStmt 0x154144308 <col:12, line:41:5>     |   `-SwitchStmt 0x154143e10 <line:28:9, line:40:9>     |     |-ImplicitCastExpr 0x154143df8 <line:28:17> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x154143dd8 <col:17> 'int' lvalue Var 0x1541284c8 'components' 'int'     |     `-CompoundStmt 0x1541442c0 <col:29, line:40:9>     |       |-CaseStmt 0x154143e70 <line:29:13, <invalid sloc>>     |       | |-ConstantExpr 0x154143e58 <col:18> 'int'     |       | | `-IntegerLiteral 0x154143e38 <col:18> 'int' 1     |       | `-NullStmt 0x154144028 <<invalid sloc>>     |       |-BreakStmt 0x154144030 <line:31:17>     |       |-CaseStmt 0x154144070 <line:32:13, <invalid sloc>>     |       | |-ConstantExpr 0x154144058 <col:18> 'int'     |       | | `-IntegerLiteral 0x154144038 <col:18> 'int' 3     |       | `-NullStmt 0x154144148 <<invalid sloc>>     |       |-BreakStmt 0x154144150 <line:34:17>     |       |-CaseStmt 0x154144190 <line:35:13, <invalid sloc>>     |       | |-ConstantExpr 0x154144178 <col:18> 'int'     |       | | `-IntegerLiteral 0x154144158 <col:18> 'int' 4     |       | `-NullStmt 0x154144268 <<invalid sloc>>     |       |-BreakStmt 0x154144270 <line:37:17>     |       `-DefaultStmt 0x1541442a0 <line:38:13, col:20>     |         `-NullStmt 0x154144298 <col:20>     |-BinaryOperator 0x1541443c0 <line:42:5, col:17> 'int' '='     | |-UnaryOperator 0x154144388 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x154144370 <col:6> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x154144350 <col:6> 'int *' lvalue ParmVar 0x1541282e0 'CIESubst' 'int *'     | `-IntegerLiteral 0x1541443a0 <col:17> 'int' 1     `-ReturnStmt 0x154144418 <line:43:5, col:12>       `-ImplicitCastExpr 0x154144400 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x1541443e0 <col:12> 'int' lvalue Var 0x154128548 'code' 'int' ","19317":"`-FunctionDecl 0x14a928310  line:1:6 invalid mp_encode_lua_table_as_array 'void (int *, int *, int)'   |-ParmVarDecl 0x14a928128 <col:35, col:46> col:46 invalid L 'int *'   |-ParmVarDecl 0x14a9281a8 <col:49, col:57> col:57 invalid buf 'int *'   |-ParmVarDecl 0x14a928228 <col:62, col:66> col:66 used level 'int'   `-CompoundStmt 0x14a941fe8 <col:73, line:14:1>     |-BinaryOperator 0x14a9286e0 <line:3:5, col:36> '<dependent type>' contains-errors ','     | |-BinaryOperator 0x14a9286a0 <col:5, col:33> 'unsigned long' contains-errors '='     | | |-UnaryExprOrTypeTraitExpr 0x14a928680 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | | `-RecoveryExpr 0x14a928660 <col:12> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x14a9285d8 <col:18, col:33> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14a928560 <col:18> 'int ()' Function 0x14a9284a8 'lua_objlen' 'int ()'     | |   |-RecoveryExpr 0x14a928580 <col:29> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x14a9285c0 <col:31, col:32> 'int' prefix '-'     | |     `-IntegerLiteral 0x14a9285a0 <col:32> 'int' 1     | `-RecoveryExpr 0x14a9286c0 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a9418b0 <line:8:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a9287e0 <col:5> 'int ()' Function 0x14a928728 'mp_encode_array' 'int ()'     | |-RecoveryExpr 0x14a941800 <col:21> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14a941820 <col:23> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a941890 <col:27> '<dependent type>' contains-errors lvalue     `-ForStmt 0x14a941fb0 <line:9:5, line:13:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x14a9419d0 <line:9:17, col:22> 'int' contains-errors '<='       | |-RecoveryExpr 0x14a941990 <col:17> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14a9419b0 <col:22> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x14a941a40 <col:27, col:28> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x14a941a20 <col:27> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14a941f88 <col:32, line:13:5>         |-CallExpr 0x14a941be0 <line:10:9, col:27> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a941b38 <col:9> 'int ()' Function 0x14a941a80 'lua_pushnumber' 'int ()'         | |-RecoveryExpr 0x14a941b58 <col:24> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x14a941bc0 <col:26> '<dependent type>' contains-errors lvalue         |-CallExpr 0x14a941d68 <line:11:9, col:26> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14a941cf0 <col:9> 'int ()' Function 0x14a941c38 'lua_gettable' 'int ()'         | |-RecoveryExpr 0x14a941d10 <col:22> '<dependent type>' contains-errors lvalue         | `-UnaryOperator 0x14a941d50 <col:24, col:25> 'int' prefix '-'         |   `-IntegerLiteral 0x14a941d30 <col:25> 'int' 2         `-CallExpr 0x14a941f50 <line:12:9, col:41> '<dependent type>' contains-errors           |-DeclRefExpr 0x14a941e78 <col:9> 'int ()' Function 0x14a941dc0 'mp_encode_lua_type' 'int ()'           |-RecoveryExpr 0x14a941e98 <col:28> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x14a941eb8 <col:30> '<dependent type>' contains-errors lvalue           `-BinaryOperator 0x14a941f30 <col:34, col:40> 'int' '+'             |-ImplicitCastExpr 0x14a941f18 <col:34> 'int' <LValueToRValue>             | `-DeclRefExpr 0x14a941ed8 <col:34> 'int' lvalue ParmVar 0x14a928228 'level' 'int'             `-IntegerLiteral 0x14a941ef8 <col:40> 'int' 1 ","19807":"`-FunctionDecl 0x11c928258  line:1:20 decode_twos_comp 'long (long, int)' static inline   |-ParmVarDecl 0x11c9280f0 <col:37, col:43> col:43 used c 'long'   |-ParmVarDecl 0x11c928170 <col:46, col:50> col:50 used prec 'int'   `-CompoundStmt 0x11c940df8 <line:2:1, line:9:1>     |-DeclStmt 0x11c9283d8 <line:3:2, col:13>     | `-VarDecl 0x11c928370 <col:2, col:7> col:7 used result 'long'     |-CallExpr 0x11c9285e8 <line:4:2, col:18> 'int'     | |-ImplicitCastExpr 0x11c9285d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11c928500 <col:2> 'int ()' Function 0x11c928448 'assert' 'int ()'     | `-BinaryOperator 0x11c928578 <col:9, col:17> 'int' '>='     |   |-ImplicitCastExpr 0x11c928560 <col:9> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x11c928520 <col:9> 'int' lvalue ParmVar 0x11c928170 'prec' 'int'     |   `-IntegerLiteral 0x11c928540 <col:17> 'int' 2     |-CallExpr 0x11c928788 <line:5:2, col:19> 'int'     | |-ImplicitCastExpr 0x11c928770 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11c9286f0 <col:2> 'int ()' Function 0x11c928638 'jas_eprintf' 'int ()'     | `-ImplicitCastExpr 0x11c9287b0 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x11c928750 <col:14> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x11c940d90 <line:7:2, col:65> 'long' '='     | |-DeclRefExpr 0x11c9287c8 <col:2> 'long' lvalue Var 0x11c928370 'result' 'long'     | `-BinaryOperator 0x11c940d70 <col:11, col:65> 'long' '-'     |   |-ParenExpr 0x11c940bc8 <col:11, col:39> 'long'     |   | `-BinaryOperator 0x11c940ba8 <col:12, col:38> 'long' '&'     |   |   |-ImplicitCastExpr 0x11c940b78 <col:12> 'long' <LValueToRValue>     |   |   | `-DeclRefExpr 0x11c940a00 <col:12> 'long' lvalue ParmVar 0x11c9280f0 'c' 'long'     |   |   `-ImplicitCastExpr 0x11c940b90 <col:16, col:38> 'long' <IntegralCast>     |   |     `-ParenExpr 0x11c940b58 <col:16, col:38> 'int'     |   |       `-BinaryOperator 0x11c940b38 <col:17, col:37> 'int' '-'     |   |         |-ParenExpr 0x11c940af8 <col:17, col:33> 'int'     |   |         | `-BinaryOperator 0x11c940ad8 <col:18, col:32> 'int' '<<'     |   |         |   |-IntegerLiteral 0x11c940a20 <col:18> 'int' 1     |   |         |   `-ParenExpr 0x11c940ab8 <col:23, col:32> 'int'     |   |         |     `-BinaryOperator 0x11c940a98 <col:24, col:31> 'int' '-'     |   |         |       |-ImplicitCastExpr 0x11c940a80 <col:24> 'int' <LValueToRValue>     |   |         |       | `-DeclRefExpr 0x11c940a40 <col:24> 'int' lvalue ParmVar 0x11c928170 'prec' 'int'     |   |         |       `-IntegerLiteral 0x11c940a60 <col:31> 'int' 1     |   |         `-IntegerLiteral 0x11c940b18 <col:37> 'int' 1     |   `-ParenExpr 0x11c940d50 <col:43, col:65> 'long'     |     `-BinaryOperator 0x11c940d30 <col:44, col:64> 'long' '&'     |       |-ImplicitCastExpr 0x11c940d00 <col:44> 'long' <LValueToRValue>     |       | `-DeclRefExpr 0x11c940be8 <col:44> 'long' lvalue ParmVar 0x11c9280f0 'c' 'long'     |       `-ImplicitCastExpr 0x11c940d18 <col:48, col:64> 'long' <IntegralCast>     |         `-ParenExpr 0x11c940ce0 <col:48, col:64> 'int'     |           `-BinaryOperator 0x11c940cc0 <col:49, col:63> 'int' '<<'     |             |-IntegerLiteral 0x11c940c08 <col:49> 'int' 1     |             `-ParenExpr 0x11c940ca0 <col:54, col:63> 'int'     |               `-BinaryOperator 0x11c940c80 <col:55, col:62> 'int' '-'     |                 |-ImplicitCastExpr 0x11c940c68 <col:55> 'int' <LValueToRValue>     |                 | `-DeclRefExpr 0x11c940c28 <col:55> 'int' lvalue ParmVar 0x11c928170 'prec' 'int'     |                 `-IntegerLiteral 0x11c940c48 <col:62> 'int' 1     `-ReturnStmt 0x11c940de8 <line:8:2, col:9>       `-ImplicitCastExpr 0x11c940dd0 <col:9> 'long' <LValueToRValue>         `-DeclRefExpr 0x11c940db0 <col:9> 'long' lvalue Var 0x11c928370 'result' 'long' ","19228":"`-FunctionDecl 0x14582b7f8  line:1:5 invalid kvm_read_guest_page 'int (struct kvm *, int, void *, int, int)'   |-ParmVarDecl 0x14580e248 <col:25, col:37> col:37 used kvm 'struct kvm *'   |-ParmVarDecl 0x14580e2e0 <col:42, col:48> col:48 invalid gfn 'int'   |-ParmVarDecl 0x14580e360 <col:53, col:59> col:59 used data 'void *'   |-ParmVarDecl 0x14582b600 <col:65, col:69> col:69 used offset 'int'   |-ParmVarDecl 0x14582b680 <line:2:4, col:8> col:8 used len 'int'   `-CompoundStmt 0x14582c250 <line:3:1, line:14:1>     |-DeclStmt 0x14582b948 <line:4:2, col:7>     | `-VarDecl 0x14582b8e0 <col:2, col:6> col:6 used r 'int'     |-DeclStmt 0x14582b9e0 <line:5:2, col:20>     | `-VarDecl 0x14582b978 <col:2, col:16> col:16 used addr 'unsigned long'     |-BinaryOperator 0x14582bc00 <line:7:2, col:28> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x14582b9f8 <col:2> 'unsigned long' lvalue Var 0x14582b978 'addr' 'unsigned long'     | `-CallExpr 0x14582bbd0 <col:9, col:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14582bb70 <col:9> 'int ()' Function 0x14582bab8 'gfn_to_hva' 'int ()'     |   |-DeclRefExpr 0x14582bb90 <col:20> 'struct kvm *' lvalue ParmVar 0x14580e248 'kvm' 'struct kvm *'     |   `-RecoveryExpr 0x14582bbb0 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14582be70 <line:8:2, line:9:11>     | |-CallExpr 0x14582bd88 <line:8:6, col:27> 'int'     | | |-ImplicitCastExpr 0x14582bd70 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14582bd00 <col:6> 'int ()' Function 0x14582bc48 'kvm_is_error_hva' 'int ()'     | | `-ImplicitCastExpr 0x14582bdb0 <col:23> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x14582bd20 <col:23> 'unsigned long' lvalue Var 0x14582b978 'addr' 'unsigned long'     | `-ReturnStmt 0x14582be60 <line:9:3, col:11>     |   `-UnaryOperator 0x14582be48 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14582be30 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14582be10 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14582c100 <line:10:2, col:60> 'int' contains-errors '='     | |-DeclRefExpr 0x14582be90 <col:2> 'int' lvalue Var 0x14582b8e0 'r' 'int'     | `-CallExpr 0x14582c0c8 <col:6, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14582bf90 <col:6> 'int ()' Function 0x14582bed8 'copy_from_user' 'int ()'     |   |-DeclRefExpr 0x14582bfb0 <col:21> 'void *' lvalue ParmVar 0x14580e360 'data' 'void *'     |   |-RecoveryExpr 0x14582c078 <col:27, col:49> '<dependent type>' contains-errors lvalue     |   | |-CStyleCastExpr 0x14582c018 <col:27, col:42> 'void' <ToVoid>     |   | | `-ImplicitCastExpr 0x14582c000 <col:42> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |   | |   `-DeclRefExpr 0x14582bfd0 <col:42> 'unsigned long' lvalue Var 0x14582b978 'addr' 'unsigned long'     |   | `-DeclRefExpr 0x14582c040 <col:49> 'int' lvalue ParmVar 0x14582b600 'offset' 'int'     |   `-DeclRefExpr 0x14582c0a8 <col:57> 'int' lvalue ParmVar 0x14582b680 'len' 'int'     |-IfStmt 0x14582c200 <line:11:2, line:12:11>     | |-ImplicitCastExpr 0x14582c140 <line:11:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14582c120 <col:6> 'int' lvalue Var 0x14582b8e0 'r' 'int'     | `-ReturnStmt 0x14582c1f0 <line:12:3, col:11>     |   `-UnaryOperator 0x14582c1d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14582c1c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14582c1a0 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14582c240 <line:13:2, col:9>       `-IntegerLiteral 0x14582c220 <col:9> 'int' 0 ","19348":"`-FunctionDecl 0x14d031ba8  line:1:12 invalid local_name_to_path 'int (int *, int *, const char *, int *)' static   |-ParmVarDecl 0x14d031928 <col:31, col:42> col:42 invalid ctx 'int *'   |-ParmVarDecl 0x14d0319a8 <col:47, col:57> col:57 invalid dir_path 'int *'   |-ParmVarDecl 0x14d031a28 <line:2:31, col:43> col:43 used name 'const char *'   |-ParmVarDecl 0x14d031aa8 <col:49, col:59> col:59 invalid target 'int *'   `-CompoundStmt 0x14d054cb0 <line:3:1, line:10:1>     |-IfStmt 0x14d054c50 <line:4:5, line:8:5> has_else     | |-RecoveryExpr 0x14d031c70 <line:4:9> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x14d031f58 <col:19, line:6:5>     | | `-CallExpr 0x14d031f18 <line:5:9, col:62> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14d031df0 <col:9> 'int ()' Function 0x14d031d38 'v9fs_path_sprintf' 'int ()'     | |   |-RecoveryExpr 0x14d031e10 <col:27> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x14d031e70 <col:35> 'char[4]' lvalue \"STR\"     | |   |-CXXDependentScopeMemberExpr 0x14d031eb0 <col:42, col:52> '<dependent type>' contains-errors lvalue ->data     | |   | `-RecoveryExpr 0x14d031e90 <col:42> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14d031ef8 <col:58> 'const char *' lvalue ParmVar 0x14d031a28 'name' 'const char *'     | `-CompoundStmt 0x14d054c38 <line:6:12, line:8:5>     |   `-CallExpr 0x14d054c00 <line:7:9, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d031f70 <col:9> 'int ()' Function 0x14d031d38 'v9fs_path_sprintf' 'int ()'     |     |-RecoveryExpr 0x14d031f90 <col:27> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x14d031fb0 <col:35> 'char[4]' lvalue \"STR\"     |     `-DeclRefExpr 0x14d031fd0 <col:42> 'const char *' lvalue ParmVar 0x14d031a28 'name' 'const char *'     `-ReturnStmt 0x14d054ca0 <line:9:5, col:12>       `-IntegerLiteral 0x14d054c80 <col:12> 'int' 0 ","19721":"`-FunctionDecl 0x133941890  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x133941990 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1339419f8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x133941a60 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x133941938 <<invalid sloc>> Implicit 882 ","19300":"`-FunctionDecl 0x148928360  line:1:15 invalid launch 'void (int *, int, const int)' static   |-ParmVarDecl 0x148928128 <col:22, col:39> col:39 invalid context 'int *'   |-ParmVarDecl 0x1489281a8 <col:48, col:53> col:53 invalid cudnn_use_autotune 'int'   |-ParmVarDecl 0x148928228 <line:2:22, <invalid sloc>> col:34 invalid 'const int'   `-CompoundStmt 0x1489287d8 <line:5:64, line:19:3>     `-RecoveryExpr 0x1489287b8 <line:15:5> '<dependent type>' contains-errors lvalue ","19831":"`-FunctionDecl 0x152940b48  line:1:12 addr_doit 'int (struct sk_buff *, struct nlmsghdr *)' static   |-ParmVarDecl 0x152928648 <col:22, col:38> col:38 used skb 'struct sk_buff *'   |-ParmVarDecl 0x152940a28 <col:43, col:60> col:60 used nlh 'struct nlmsghdr *'   `-CompoundStmt 0x1529481a0 <line:2:1, line:41:1>     |-DeclStmt 0x152941010 <line:3:2, col:37>     | |-RecordDecl 0x152940c48 <col:2, col:9> col:9 struct net     | `-VarDecl 0x152940db8 <col:2, col:36> col:14 used net 'struct net *' cinit     |   `-CallExpr 0x152940fd0 <col:20, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x152940f50 <col:20> 'int ()' Function 0x152940e98 'sock_net' 'int ()'     |     `-RecoveryExpr 0x152940fa8 <col:29, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x152940f70 <col:29> 'struct sk_buff *' lvalue ParmVar 0x152928648 'skb' 'struct sk_buff *'     |-DeclStmt 0x152941278 <line:4:2, col:30>     | |-RecordDecl 0x152941028 <col:2, col:9> col:9 struct nlattr     | `-VarDecl 0x1529411f8 <col:2, col:17> col:17 invalid tb 'struct nlattr *'     |-DeclStmt 0x152941478 <line:5:2, col:24>     | |-RecordDecl 0x152941290 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x1529413f8 <col:2, col:21> col:21 used dev 'struct net_device *'     |-DeclStmt 0x152941678 <line:6:2, col:23>     | |-RecordDecl 0x152941490 <col:2, col:9> col:9 struct ifaddrmsg     | `-VarDecl 0x1529415f8 <col:2, col:20> col:20 used ifm 'struct ifaddrmsg *'     |-DeclStmt 0x152941710 <line:7:2, col:9>     | `-VarDecl 0x1529416a8 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x152941988 <line:10:2, line:11:11>     | |-UnaryOperator 0x1529418c8 <line:10:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1529418a0 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x152941808 <col:7> 'int ()' Function 0x152941750 'capable' 'int ()'     | |   `-RecoveryExpr 0x152941880 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152941978 <line:11:3, col:11>     |   `-UnaryOperator 0x152941960 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x152941948 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152941928 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152946b48 <line:13:2, line:14:11>     | |-UnaryOperator 0x152946a88 <line:13:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x152946a60 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1529419a8 <col:7> 'int ()' Function 0x152941750 'capable' 'int ()'     | |   `-RecoveryExpr 0x152946a40 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x152946b38 <line:14:3, col:11>     |   `-UnaryOperator 0x152946b20 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x152946b08 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152946ae8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x152946cb8 <line:16:2, col:14> 'int'     | `-ImplicitCastExpr 0x152946ca0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x152946c48 <col:2> 'int ()' Function 0x152946b90 'ASSERT_RTNL' 'int ()'     |-IfStmt 0x152946f98 <line:19:2, line:20:10>     | |-BinaryOperator 0x152946f30 <line:19:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x152946f18 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x152946ed8 <col:6> 'int' lvalue Var 0x1529416a8 'err' 'int'     | | `-IntegerLiteral 0x152946ef8 <col:12> 'int' 0     | `-ReturnStmt 0x152946f88 <line:20:3, col:10>     |   `-ImplicitCastExpr 0x152946f70 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x152946f50 <col:10> 'int' lvalue Var 0x1529416a8 'err' 'int'     |-BinaryOperator 0x152947168 <line:22:2, col:22> 'struct ifaddrmsg *' '='     | |-DeclRefExpr 0x152946fb8 <col:2> 'struct ifaddrmsg *' lvalue Var 0x1529415f8 'ifm' 'struct ifaddrmsg *'     | `-ImplicitCastExpr 0x152947150 <col:8, col:22> 'struct ifaddrmsg *' <IntegralToPointer>     |   `-CallExpr 0x152947110 <col:8, col:22> 'int'     |     |-ImplicitCastExpr 0x1529470f8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1529470b8 <col:8> 'int ()' Function 0x152947000 'nlmsg_data' 'int ()'     |     `-ImplicitCastExpr 0x152947138 <col:19> 'struct nlmsghdr *' <LValueToRValue>     |       `-DeclRefExpr 0x1529470d8 <col:19> 'struct nlmsghdr *' lvalue ParmVar 0x152940a28 'nlh' 'struct nlmsghdr *'     |-IfStmt 0x1529472a0 <line:23:2, line:24:11>     | |-RecoveryExpr 0x1529471d8 <line:23:6, col:23> '_Bool' contains-errors     | `-ReturnStmt 0x152947290 <line:24:3, col:11>     |   `-UnaryOperator 0x152947278 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x152947260 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x152947240 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1529475f0 <line:30:2, col:46> 'struct net_device *' contains-errors '='     | |-DeclRefExpr 0x152947420 <col:2> 'struct net_device *' lvalue Var 0x1529413f8 'dev' 'struct net_device *'     | `-CallExpr 0x1529475c0 <col:8, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x152947520 <col:8> 'int ()' Function 0x152947468 '__dev_get_by_index' 'int ()'     |   |-DeclRefExpr 0x152947540 <col:27> 'struct net *' contains-errors lvalue Var 0x152940db8 'net' 'struct net *'     |   `-RecoveryExpr 0x152947598 <col:32, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152947560 <col:32> 'struct ifaddrmsg *' lvalue Var 0x1529415f8 'ifm' 'struct ifaddrmsg *'     `-ReturnStmt 0x152948190 <line:40:2, col:9>       `-ImplicitCastExpr 0x152948178 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x152948158 <col:9> 'int' lvalue Var 0x1529416a8 'err' 'int' ","19816":"`-FunctionDecl 0x148027758  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x148027858 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1480278c0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x148027928 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x148027800 <<invalid sloc>> Implicit 900 ","19240":"`-FunctionDecl 0x13b928288  line:1:5 invalid enc_untrusted_sys_futex_wake 'int (int *, int)'   |-ParmVarDecl 0x13b928128 <col:34, col:43> col:43 invalid futex 'int *'   |-ParmVarDecl 0x13b9281a8 <col:50, col:58> col:58 invalid num 'int'   `-CompoundStmt 0x13b941d80 <col:63, line:21:1>     |-IfStmt 0x13b928440 <line:2:3, line:6:3>     | |-UnaryOperator 0x13b9283c0 <line:2:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13b9283a8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13b928388 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b928428 <col:69, line:6:3>     |   `-RecoveryExpr 0x13b928408 <line:3:5> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13b9287e0 <line:12:3, line:13:65>     | `-VarDecl 0x13b928598 <line:12:3, col:14> col:14 used status 'const int' auto     |-DeclStmt 0x13b941a20 <line:15:3, col:34>     | `-VarDecl 0x13b9419b8 <col:3, col:7> col:7 used result 'int'     |-DeclStmt 0x13b941ab8 <line:16:3, col:40>     | `-VarDecl 0x13b941a50 <col:3, col:7> col:7 used klinux_errno 'int'     |-IfStmt 0x13b941d18 <line:17:3, line:19:3>     | |-BinaryOperator 0x13b941b40 <line:17:7, col:18> 'int' '=='     | | |-ImplicitCastExpr 0x13b941b28 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13b941ad0 <col:7> 'int' lvalue Var 0x13b9419b8 'result' 'int'     | | `-UnaryOperator 0x13b941b10 <col:17, col:18> 'int' prefix '-'     | |   `-IntegerLiteral 0x13b941af0 <col:18> 'int' 1     | `-CompoundStmt 0x13b941d08 <col:21, line:19:3>     `-ReturnStmt 0x13b941d70 <line:20:3, col:10>       `-ImplicitCastExpr 0x13b941d58 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x13b941d38 <col:10> 'int' lvalue Var 0x13b9419b8 'result' 'int' ","19543":"`-FunctionDecl 0x11f1281a8  line:1:1 fmgr_internal_validator 'int (int)'   |-ParmVarDecl 0x11f1280d8 <col:25> col:25 PG_FUNCTION_ARGS 'int'   `-CompoundStmt 0x11f141728 <line:2:1, line:29:1>     |-DeclStmt 0x11f128338 <line:7:2, col:17>     | `-VarDecl 0x11f1282d0 <col:2, col:11> col:11 used prosrc 'char *'     |-IfStmt 0x11f140c18 <line:12:2, line:13:29>     | |-UnaryOperator 0x11f1287a8 <line:12:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x11f128780 <col:7, col:29> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11f1286e8 <col:7> 'int ()' Function 0x11f128630 'HeapTupleIsValid' 'int ()'     | |   `-RecoveryExpr 0x11f128760 <col:24> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x11f140be0 <line:13:3, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x11f140ab8 <col:3> 'int ()' Function 0x11f140a00 'elog' 'int ()'     |   |-RecoveryExpr 0x11f140ba0 <col:8> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x11f140b30 <col:15> 'char[4]' lvalue \"STR\"     |   `-RecoveryExpr 0x11f140bc0 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x11f141708 <line:28:2, col:17> 'int'       `-ImplicitCastExpr 0x11f1416f0 <col:2> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x11f1416d0 <col:2> 'int ()' Function 0x11f141618 'PG_RETURN_VOID' 'int ()' ","19458":"`-FunctionDecl 0x11e13e418  line:1:19 invalid ___skb_get_hash 'int (const struct sk_buff *, struct flow_keys *, int)' static inline   |-ParmVarDecl 0x11e125068 <col:35, col:57> col:57 used skb 'const struct sk_buff *'   |-ParmVarDecl 0x11e13e258 <line:2:7, col:25> col:25 used keys 'struct flow_keys *'   |-ParmVarDecl 0x11e13e2d8 <col:31, col:35> col:35 invalid keyval 'int'   `-CompoundStmt 0x11e13e8b8 <line:3:1, line:8:1>     |-CallExpr 0x11e13e700 <line:4:2, line:5:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e13e630 <line:4:2> 'int ()' Function 0x11e13e578 'skb_flow_dissect_flow_keys' 'int ()'     | |-DeclRefExpr 0x11e13e650 <col:29> 'const struct sk_buff *' lvalue ParmVar 0x11e125068 'skb' 'const struct sk_buff *'     | |-DeclRefExpr 0x11e13e670 <col:34> 'struct flow_keys *' lvalue ParmVar 0x11e13e258 'keys' 'struct flow_keys *'     | `-RecoveryExpr 0x11e13e6e0 <line:5:8> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11e13e8a8 <line:7:2, col:43>       `-CallExpr 0x11e13e878 <col:9, col:43> '<dependent type>' contains-errors         |-DeclRefExpr 0x11e13e818 <col:9> 'int ()' Function 0x11e13e760 '__flow_hash_from_keys' 'int ()'         |-DeclRefExpr 0x11e13e838 <col:31> 'struct flow_keys *' lvalue ParmVar 0x11e13e258 'keys' 'struct flow_keys *'         `-RecoveryExpr 0x11e13e858 <col:37> '<dependent type>' contains-errors lvalue ","19324":"`-FunctionDecl 0x12380de88  line:1:13 invalid printAnalPaths 'int (int *, int *)' static   |-ParmVarDecl 0x12380dd28 <col:28, col:44> col:44 invalid p 'int *'   |-ParmVarDecl 0x12380dda8 <col:47, col:51> col:51 invalid pj 'int *'   `-CompoundStmt 0x123827e80 <col:55, line:24:1>     |-IfStmt 0x12380e370 <line:4:2, line:8:2> has_else     | |-RecoveryExpr 0x12380df70 <line:4:6> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12380e158 <col:10, line:6:2>     | | `-CallExpr 0x12380e130 <line:5:3, col:11> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12380e0f0 <col:3> 'int ()' Function 0x12380e038 'pj_a' 'int ()'     | |   `-RecoveryExpr 0x12380e110 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12380e358 <line:6:9, line:8:2>     |   `-CallExpr 0x12380e318 <line:7:3, col:23> 'int'     |     |-ImplicitCastExpr 0x12380e300 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12380e250 <col:3> 'int ()' Function 0x12380e198 'r_cons_printf' 'int ()'     |     `-ImplicitCastExpr 0x12380e340 <col:18> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x12380e2b0 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1238275e8 <line:10:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1238274b8 <col:2> 'int ()' Function 0x123827400 'r_list_foreach' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1238274f8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->path     | | `-RecoveryExpr 0x1238274d8 <col:18> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1238275a8 <col:27> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1238275c8 <col:33> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x123827a50 <col:39, line:16:2>     | `-IfStmt 0x123827a20 <line:11:3, line:15:3> has_else     |   |-RecoveryExpr 0x123827620 <line:11:7> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x123827888 <col:11, line:13:3>     |   | `-CallExpr 0x123827858 <line:12:4, col:24> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x123827720 <col:4> 'int ()' Function 0x123827668 'pj_n' 'int ()'     |   |   |-RecoveryExpr 0x123827740 <col:10> '<dependent type>' contains-errors lvalue     |   |   `-CXXDependentScopeMemberExpr 0x123827810 <col:14, col:20> '<dependent type>' contains-errors lvalue ->addr     |   |     `-RecoveryExpr 0x1238277f0 <col:14> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x123827a08 <line:13:10, line:15:3>     |     `-CallExpr 0x1238279d8 <line:14:4, col:36> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1238278a0 <col:4> 'int ()' Function 0x12380e198 'r_cons_printf' 'int ()'     |       |-StringLiteral 0x1238278c0 <col:19> 'char[4]' lvalue \"STR\"     |       `-CXXDependentScopeMemberExpr 0x123827990 <col:26, col:32> '<dependent type>' contains-errors lvalue ->addr     |         `-RecoveryExpr 0x123827970 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123827c98 <line:18:2, line:22:2> has_else     | |-RecoveryExpr 0x123827a68 <line:18:5> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x123827bd0 <col:9, line:20:2>     | | `-CallExpr 0x123827ba8 <line:19:3, col:13> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x123827b68 <col:3> 'int ()' Function 0x123827ab0 'pj_end' 'int ()'     | |   `-RecoveryExpr 0x123827b88 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x123827c80 <line:20:9, line:22:2>     |   `-CallExpr 0x123827c40 <line:21:3, col:23> 'int'     |     |-ImplicitCastExpr 0x123827c28 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x123827be8 <col:3> 'int ()' Function 0x12380e198 'r_cons_printf' 'int ()'     |     `-ImplicitCastExpr 0x123827c68 <col:18> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x123827c08 <col:18> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x123827e70 <line:23:2, col:40>       `-ParenExpr 0x123827e50 <col:9, col:40> 'int' contains-errors         `-BinaryOperator 0x123827e30 <col:10, col:39> 'int' contains-errors '||'           |-BinaryOperator 0x123827d50 <col:10, col:21> 'int' contains-errors '<'           | |-CXXDependentScopeMemberExpr 0x123827ce8 <col:10, col:13> '<dependent type>' contains-errors lvalue ->count           | | `-RecoveryExpr 0x123827cc8 <col:10> '<dependent type>' contains-errors lvalue           | `-IntegerLiteral 0x123827d30 <col:21> 'int' 1           `-BinaryOperator 0x123827e10 <col:26, col:39> 'int' contains-errors '>'             |-UnaryOperator 0x123827dd8 <col:26, col:31> '<dependent type>' contains-errors prefix '--' cannot overflow             | `-CXXDependentScopeMemberExpr 0x123827d90 <col:28, col:31> '<dependent type>' contains-errors lvalue ->count             |   `-RecoveryExpr 0x123827d70 <col:28> '<dependent type>' contains-errors lvalue             `-IntegerLiteral 0x123827df0 <col:39> 'int' 0 ","19410":"`-FunctionDecl 0x148928500  line:1:20 ModulateHSI 'void (const double, const double, const double, double *, double *, double *)' static inline   |-ParmVarDecl 0x1489280d8 <col:32, col:45> col:45 used percent_hue 'const double'   |-ParmVarDecl 0x148928158 <line:2:3, col:16> col:16 used percent_saturation 'const double'   |-ParmVarDecl 0x1489281d8 <col:35, col:48> col:48 used percent_intensity 'const double'   |-ParmVarDecl 0x148928288 <col:66, col:74> col:74 used red 'double *'   |-ParmVarDecl 0x148928308 <line:3:3, col:11> col:11 used green 'double *'   |-ParmVarDecl 0x148928388 <col:17, col:25> col:25 used blue 'double *'   `-CompoundStmt 0x148942370 <line:4:1, line:20:1>     |-DeclStmt 0x1489287c0 <line:5:3, line:8:15>     | |-VarDecl 0x148928638 <line:5:3, line:6:5> col:5 used intensity 'double'     | |-VarDecl 0x1489286b8 <line:5:3, line:7:5> col:5 used hue 'double'     | `-VarDecl 0x148928738 <line:5:3, line:8:5> col:5 used saturation 'double'     |-CallExpr 0x148941b18 <line:11:3, col:64> 'int'     | |-ImplicitCastExpr 0x148941b00 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x148941910 <col:3> 'int ()' Function 0x148941858 'ConvertRGBToHSI' 'int ()'     | |-ImplicitCastExpr 0x148941b68 <col:19, col:20> 'double' <LValueToRValue>     | | `-UnaryOperator 0x148941968 <col:19, col:20> 'double' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x148941950 <col:20> 'double *' <LValueToRValue>     | |     `-DeclRefExpr 0x148941930 <col:20> 'double *' lvalue ParmVar 0x148928288 'red' 'double *'     | |-ImplicitCastExpr 0x148941b80 <col:24, col:25> 'double' <LValueToRValue>     | | `-UnaryOperator 0x1489419b8 <col:24, col:25> 'double' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x1489419a0 <col:25> 'double *' <LValueToRValue>     | |     `-DeclRefExpr 0x148941980 <col:25> 'double *' lvalue ParmVar 0x148928308 'green' 'double *'     | |-ImplicitCastExpr 0x148941b98 <col:31, col:32> 'double' <LValueToRValue>     | | `-UnaryOperator 0x148941a08 <col:31, col:32> 'double' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x1489419f0 <col:32> 'double *' <LValueToRValue>     | |     `-DeclRefExpr 0x1489419d0 <col:32> 'double *' lvalue ParmVar 0x148928388 'blue' 'double *'     | |-UnaryOperator 0x148941a40 <col:37, col:38> 'double *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x148941a20 <col:38> 'double' lvalue Var 0x1489286b8 'hue' 'double'     | |-UnaryOperator 0x148941a78 <col:42, col:43> 'double *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x148941a58 <col:43> 'double' lvalue Var 0x148928738 'saturation' 'double'     | `-UnaryOperator 0x148941ab0 <col:54, col:55> 'double *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x148941a90 <col:55> 'double' lvalue Var 0x148928638 'intensity' 'double'     |-CompoundAssignOperator 0x148941ce8 <line:12:3, col:33> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'     | |-DeclRefExpr 0x148941bb0 <col:3> 'double' lvalue Var 0x1489286b8 'hue' 'double'     | `-BinaryOperator 0x148941cc8 <col:8, col:33> 'double' '*'     |   |-FloatingLiteral 0x148941bd0 <col:8> 'double' 5.000000e-01     |   `-ParenExpr 0x148941ca8 <col:12, col:33> 'double'     |     `-BinaryOperator 0x148941c88 <col:13, col:30> 'double' '-'     |       |-BinaryOperator 0x148941c48 <col:13, col:18> 'double' '*'     |       | |-FloatingLiteral 0x148941bf0 <col:13> 'double' 1.000000e-02     |       | `-ImplicitCastExpr 0x148941c30 <col:18> 'double' <LValueToRValue>     |       |   `-DeclRefExpr 0x148941c10 <col:18> 'const double' lvalue ParmVar 0x1489280d8 'percent_hue' 'const double'     |       `-FloatingLiteral 0x148941c68 <col:30> 'double' 1.000000e+00     |-WhileStmt 0x148941e00 <line:13:3, line:14:10>     | |-BinaryOperator 0x148941d70 <line:13:10, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x148941d58 <col:10> 'double' <LValueToRValue>     | | | `-DeclRefExpr 0x148941d18 <col:10> 'double' lvalue Var 0x1489286b8 'hue' 'double'     | | `-FloatingLiteral 0x148941d38 <col:16> 'double' 0.000000e+00     | `-CompoundAssignOperator 0x148941dd0 <line:14:5, col:10> 'double' '+=' ComputeLHSTy='double' ComputeResultTy='double'     |   |-DeclRefExpr 0x148941d90 <col:5> 'double' lvalue Var 0x1489286b8 'hue' 'double'     |   `-FloatingLiteral 0x148941db0 <col:10> 'double' 1.000000e+00     |-WhileStmt 0x148941f08 <line:15:3, line:16:10>     | |-BinaryOperator 0x148941e78 <line:15:10, col:16> 'int' '>'     | | |-ImplicitCastExpr 0x148941e60 <col:10> 'double' <LValueToRValue>     | | | `-DeclRefExpr 0x148941e20 <col:10> 'double' lvalue Var 0x1489286b8 'hue' 'double'     | | `-FloatingLiteral 0x148941e40 <col:16> 'double' 1.000000e+00     | `-CompoundAssignOperator 0x148941ed8 <line:16:5, col:10> 'double' '-=' ComputeLHSTy='double' ComputeResultTy='double'     |   |-DeclRefExpr 0x148941e98 <col:5> 'double' lvalue Var 0x1489286b8 'hue' 'double'     |   `-FloatingLiteral 0x148941eb8 <col:10> 'double' 1.000000e+00     |-CompoundAssignOperator 0x148941fc0 <line:17:3, col:20> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'     | |-DeclRefExpr 0x148941f28 <col:3> 'double' lvalue Var 0x148928738 'saturation' 'double'     | `-BinaryOperator 0x148941fa0 <col:15, col:20> 'double' '*'     |   |-FloatingLiteral 0x148941f48 <col:15> 'double' 1.000000e-02     |   `-ImplicitCastExpr 0x148941f88 <col:20> 'double' <LValueToRValue>     |     `-DeclRefExpr 0x148941f68 <col:20> 'const double' lvalue ParmVar 0x148928158 'percent_saturation' 'const double'     |-CompoundAssignOperator 0x148942088 <line:18:3, col:19> 'double' '*=' ComputeLHSTy='double' ComputeResultTy='double'     | |-DeclRefExpr 0x148941ff0 <col:3> 'double' lvalue Var 0x148928638 'intensity' 'double'     | `-BinaryOperator 0x148942068 <col:14, col:19> 'double' '*'     |   |-FloatingLiteral 0x148942010 <col:14> 'double' 1.000000e-02     |   `-ImplicitCastExpr 0x148942050 <col:19> 'double' <LValueToRValue>     |     `-DeclRefExpr 0x148942030 <col:19> 'const double' lvalue ParmVar 0x1489281d8 'percent_intensity' 'const double'     `-CallExpr 0x148942290 <line:19:3, col:58> 'int'       |-ImplicitCastExpr 0x148942278 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x148942198 <col:3> 'int ()' Function 0x1489420e0 'ConvertHSIToRGB' 'int ()'       |-ImplicitCastExpr 0x1489422e0 <col:19> 'double' <LValueToRValue>       | `-DeclRefExpr 0x1489421b8 <col:19> 'double' lvalue Var 0x1489286b8 'hue' 'double'       |-ImplicitCastExpr 0x1489422f8 <col:23> 'double' <LValueToRValue>       | `-DeclRefExpr 0x1489421d8 <col:23> 'double' lvalue Var 0x148928738 'saturation' 'double'       |-ImplicitCastExpr 0x148942310 <col:34> 'double' <LValueToRValue>       | `-DeclRefExpr 0x1489421f8 <col:34> 'double' lvalue Var 0x148928638 'intensity' 'double'       |-ImplicitCastExpr 0x148942328 <col:44> 'double *' <LValueToRValue>       | `-DeclRefExpr 0x148942218 <col:44> 'double *' lvalue ParmVar 0x148928288 'red' 'double *'       |-ImplicitCastExpr 0x148942340 <col:48> 'double *' <LValueToRValue>       | `-DeclRefExpr 0x148942238 <col:48> 'double *' lvalue ParmVar 0x148928308 'green' 'double *'       `-ImplicitCastExpr 0x148942358 <col:54> 'double *' <LValueToRValue>         `-DeclRefExpr 0x148942258 <col:54> 'double *' lvalue ParmVar 0x148928388 'blue' 'double *' ","19318":"`-FunctionDecl 0x132928238  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x132928158 <col:8> col:8 Http2MetadataIntegrationTest 'int'   |-ParmVarDecl 0x1329280d8 <col:38> col:38 TestAddEncodedMetadata 'int'   `-CompoundStmt 0x132943020 <col:62, line:37:1>     |-DeclStmt 0x132940ae8 <line:10:3, col:83>     | `-VarDecl 0x1329286e0 <col:3, col:82> col:8 used response 'int' auto cinit     |   `-CallExpr 0x132940ab8 <col:19, col:82> '<dependent type>' contains-errors     |     |-CXXDependentScopeMemberExpr 0x132940a50 <col:19, col:34> '<dependent type>' contains-errors lvalue ->makeRequestWithBody     |     | `-RecoveryExpr 0x132940a30 <col:19> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x132940a98 <col:54> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1329287c0 <col:80> 'int' 10     |-CallExpr 0x132940c18 <line:11:3, col:30> 'int'     | `-ImplicitCastExpr 0x132940c00 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x132940be0 <col:3> 'int ()' Function 0x132940b28 'waitForNextUpstreamRequest' 'int ()'     |-DeclStmt 0x132940cd8 <line:13:3, col:23>     | `-VarDecl 0x132940c50 <col:3, col:21> col:13 used count 'const int' cinit     |   `-IntegerLiteral 0x132940cb8 <col:21> 'int' 70     |-DeclStmt 0x132940d90 <line:14:3, col:24>     | `-VarDecl 0x132940d08 <col:3, col:20> col:13 used size 'const int' cinit     |   `-IntegerLiteral 0x132940d70 <col:20> 'int' 1000     |-DeclStmt 0x132940e48 <line:15:3, col:40>     | `-VarDecl 0x132940dc0 <col:3, col:39> col:13 used added_decoded_data_size 'const int' cinit     |   `-IntegerLiteral 0x132940e28 <col:39> 'int' 1     |-ForStmt 0x132941168 <line:22:3, line:24:3>     | |-DeclStmt 0x132940fc0 <line:22:8, col:17>     | | `-VarDecl 0x132940f38 <col:8, col:16> col:12 used i 'int' cinit     | |   `-IntegerLiteral 0x132940fa0 <col:16> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x132941088 <col:19, col:31> 'int' '<'     | | |-ImplicitCastExpr 0x132941070 <col:19> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x132940fd8 <col:19> 'int' lvalue Var 0x132940f38 'i' 'int'     | | `-BinaryOperator 0x132941050 <col:23, col:31> 'int' '-'     | |   |-ImplicitCastExpr 0x132941038 <col:23> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x132940ff8 <col:23> 'const int' lvalue Var 0x132940c50 'count' 'const int'     | |   `-IntegerLiteral 0x132941018 <col:31> 'int' 1     | |-UnaryOperator 0x132941120 <col:34, col:35> 'int' postfix '++'     | | `-DeclRefExpr 0x132941100 <col:34> 'int' lvalue Var 0x132940f38 'i' 'int'     | `-CompoundStmt 0x132941158 <col:39, line:24:3>     |-CallExpr 0x132941220 <line:30:3, col:30> '<dependent type>' contains-errors     | `-RecoveryExpr 0x1329411f8 <col:3, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1329411c0 <col:3> 'int' contains-errors lvalue Var 0x1329286e0 'response' 'int'     |-CallExpr 0x1329413c0 <line:31:3, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132941320 <col:3> 'int ()' Function 0x132941268 'ASSERT_TRUE' 'int ()'     | `-CallExpr 0x1329413a0 <col:15, col:34> '<dependent type>' contains-errors     |   `-RecoveryExpr 0x132941378 <col:15, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x132941340 <col:15> 'int' contains-errors lvalue Var 0x1329286e0 'response' 'int'     |-CallExpr 0x132941980 <line:35:3, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132941858 <col:3> 'int ()' Function 0x132941410 'EXPECT_EQ' 'int ()'     | |-CallExpr 0x132941940 <col:13, col:43> '<dependent type>' contains-errors     | | `-CXXDependentScopeMemberExpr 0x1329418f8 <col:13, col:38> '<dependent type>' contains-errors lvalue .size     | |   `-CallExpr 0x1329418d8 <col:13, col:36> '<dependent type>' contains-errors     | |     `-RecoveryExpr 0x1329418b0 <col:13, col:23> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x132941878 <col:13> 'int' contains-errors lvalue Var 0x1329286e0 'response' 'int'     | `-IntegerLiteral 0x132941960 <col:46> 'int' 3     `-CallExpr 0x132942ff0 <line:36:3, col:80> '<dependent type>' contains-errors       |-DeclRefExpr 0x1329419b0 <col:3> 'int ()' Function 0x132941410 'EXPECT_EQ' 'int ()'       |-BinaryOperator 0x132942ee8 <col:13, col:54> 'int' '+'       | |-BinaryOperator 0x132942e50 <col:13, col:21> 'int' '*'       | | |-ImplicitCastExpr 0x132942e20 <col:13> 'int' <LValueToRValue>       | | | `-DeclRefExpr 0x1329419d0 <col:13> 'const int' lvalue Var 0x132940c50 'count' 'const int'       | | `-ImplicitCastExpr 0x132942e38 <col:21> 'int' <LValueToRValue>       | |   `-DeclRefExpr 0x132942e00 <col:21> 'const int' lvalue Var 0x132940d08 'size' 'const int'       | `-BinaryOperator 0x132942ec8 <col:28, col:54> 'int' '*'       |   |-ImplicitCastExpr 0x132942eb0 <col:28> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x132942e70 <col:28> 'const int' lvalue Var 0x132940dc0 'added_decoded_data_size' 'const int'       |   `-IntegerLiteral 0x132942e90 <col:54> 'int' 2       `-CallExpr 0x132942fd0 <col:57, col:79> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x132942f88 <col:57, col:74> '<dependent type>' contains-errors lvalue .size           `-CallExpr 0x132942f68 <col:57, col:72> '<dependent type>' contains-errors             `-RecoveryExpr 0x132942f40 <col:57, col:67> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x132942f08 <col:57> 'int' contains-errors lvalue Var 0x1329286e0 'response' 'int' ","19377":"`-FunctionDecl 0x14f928338  line:1:1 asn1_get_integer 'int (unsigned char **, unsigned char *, unsigned int)'   |-ParmVarDecl 0x14f928140 <line:2:5, col:21> col:21 used buffer 'unsigned char **'   |-ParmVarDecl 0x14f9281c0 <line:3:5, col:20> col:20 used bufend 'unsigned char *'   |-ParmVarDecl 0x14f928240 <line:4:5, col:19> col:19 used length 'unsigned int'   `-CompoundStmt 0x14f941f60 <line:5:1, line:21:1>     |-DeclStmt 0x14f9284c0 <line:6:3, col:12>     | `-VarDecl 0x14f928458 <col:3, col:7> col:7 used value 'int'     |-IfStmt 0x14f9286c8 <line:9:3, line:13:3>     | |-BinaryOperator 0x14f928560 <line:9:7, col:26> 'int' '>'     | | |-ImplicitCastExpr 0x14f928548 <col:7> 'unsigned long' <IntegralCast>     | | | `-ImplicitCastExpr 0x14f928530 <col:7> 'unsigned int' <LValueToRValue>     | | |   `-DeclRefExpr 0x14f9284d8 <col:7> 'unsigned int' lvalue ParmVar 0x14f928240 'length' 'unsigned int'     | | `-UnaryExprOrTypeTraitExpr 0x14f928510 <col:16, col:26> 'unsigned long' sizeof 'int'     | `-CompoundStmt 0x14f9286a8 <line:10:3, line:13:3>     |   |-CompoundAssignOperator 0x14f928628 <line:11:5, col:18> 'unsigned char *' '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'     |   | |-ParenExpr 0x14f9285d0 <col:5, col:13> 'unsigned char *' lvalue     |   | | `-UnaryOperator 0x14f9285b8 <col:6, col:7> 'unsigned char *' lvalue prefix '*' cannot overflow     |   | |   `-ImplicitCastExpr 0x14f9285a0 <col:7> 'unsigned char **' <LValueToRValue>     |   | |     `-DeclRefExpr 0x14f928580 <col:7> 'unsigned char **' lvalue ParmVar 0x14f928140 'buffer' 'unsigned char **'     |   | `-ImplicitCastExpr 0x14f928610 <col:18> 'unsigned int' <LValueToRValue>     |   |   `-DeclRefExpr 0x14f9285f0 <col:18> 'unsigned int' lvalue ParmVar 0x14f928240 'length' 'unsigned int'     |   `-ReturnStmt 0x14f928698 <line:12:5, col:14>     |     `-ParenExpr 0x14f928678 <col:12, col:14> 'int'     |       `-IntegerLiteral 0x14f928658 <col:13> 'int' 0     |-ForStmt 0x14f941ec0 <line:15:3, line:18:30>     | |-BinaryOperator 0x14f941aa8 <line:15:8, col:41> 'int' '='     | | |-DeclRefExpr 0x14f9286e8 <col:8> 'int' lvalue Var 0x14f928458 'value' 'int'     | | `-ConditionalOperator 0x14f941a78 <col:16, col:41> 'int'     | |   |-ParenExpr 0x14f941a00 <col:16, col:32> 'int'     | |   | `-BinaryOperator 0x14f9287d8 <col:17, col:28> 'int' '&'     | |   |   |-ImplicitCastExpr 0x14f9287c0 <col:17, col:19> 'int' <IntegralCast>     | |   |   | `-ImplicitCastExpr 0x14f9287a8 <col:17, col:19> 'unsigned char' <LValueToRValue>     | |   |   |   `-UnaryOperator 0x14f928770 <col:17, col:19> 'unsigned char' lvalue prefix '*' cannot overflow     | |   |   |     `-ImplicitCastExpr 0x14f928758 <col:18, col:19> 'unsigned char *' <LValueToRValue>     | |   |   |       `-UnaryOperator 0x14f928740 <col:18, col:19> 'unsigned char *' lvalue prefix '*' cannot overflow     | |   |   |         `-ImplicitCastExpr 0x14f928728 <col:19> 'unsigned char **' <LValueToRValue>     | |   |   |           `-DeclRefExpr 0x14f928708 <col:19> 'unsigned char **' lvalue ParmVar 0x14f928140 'buffer' 'unsigned char **'     | |   |   `-IntegerLiteral 0x14f928788 <col:28> 'int' 128     | |   |-UnaryOperator 0x14f941a40 <col:36, col:37> 'int' prefix '-'     | |   | `-IntegerLiteral 0x14f941a20 <col:37> 'int' 1     | |   `-IntegerLiteral 0x14f941a58 <col:41> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14f941c18 <line:16:8, col:32> 'int' '&&'     | | |-BinaryOperator 0x14f941b38 <col:8, col:17> 'int' '>'     | | | |-ImplicitCastExpr 0x14f941b08 <col:8> 'unsigned int' <LValueToRValue>     | | | | `-DeclRefExpr 0x14f941ac8 <col:8> 'unsigned int' lvalue ParmVar 0x14f928240 'length' 'unsigned int'     | | | `-ImplicitCastExpr 0x14f941b20 <col:17> 'unsigned int' <IntegralCast>     | | |   `-IntegerLiteral 0x14f941ae8 <col:17> 'int' 0     | | `-BinaryOperator 0x14f941bf8 <col:22, col:32> 'int' '<'     | |   |-ImplicitCastExpr 0x14f941bc8 <col:22, col:23> 'unsigned char *' <LValueToRValue>     | |   | `-UnaryOperator 0x14f941b90 <col:22, col:23> 'unsigned char *' lvalue prefix '*' cannot overflow     | |   |   `-ImplicitCastExpr 0x14f941b78 <col:23> 'unsigned char **' <LValueToRValue>     | |   |     `-DeclRefExpr 0x14f941b58 <col:23> 'unsigned char **' lvalue ParmVar 0x14f928140 'buffer' 'unsigned char **'     | |   `-ImplicitCastExpr 0x14f941be0 <col:32> 'unsigned char *' <LValueToRValue>     | |     `-DeclRefExpr 0x14f941ba8 <col:32> 'unsigned char *' lvalue ParmVar 0x14f9281c0 'bufend' 'unsigned char *'     | |-BinaryOperator 0x14f941cf8 <line:17:8, col:29> 'unsigned char *' ','     | | |-UnaryOperator 0x14f941c58 <col:8, col:15> 'unsigned int' postfix '--'     | | | `-DeclRefExpr 0x14f941c38 <col:8> 'unsigned int' lvalue ParmVar 0x14f928240 'length' 'unsigned int'     | | `-UnaryOperator 0x14f941ce0 <col:19, col:29> 'unsigned char *' postfix '++'     | |   `-ParenExpr 0x14f941cc0 <col:19, col:27> 'unsigned char *' lvalue     | |     `-UnaryOperator 0x14f941ca8 <col:20, col:21> 'unsigned char *' lvalue prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x14f941c90 <col:21> 'unsigned char **' <LValueToRValue>     | |         `-DeclRefExpr 0x14f941c70 <col:21> 'unsigned char **' lvalue ParmVar 0x14f928140 'buffer' 'unsigned char **'     | `-BinaryOperator 0x14f941ea0 <line:18:5, col:30> 'int' '='     |   |-DeclRefExpr 0x14f941d18 <col:5> 'int' lvalue Var 0x14f928458 'value' 'int'     |   `-BinaryOperator 0x14f941e80 <col:13, col:30> 'int' '|'     |     |-ParenExpr 0x14f941db0 <col:13, col:24> 'int'     |     | `-BinaryOperator 0x14f941d90 <col:14, col:23> 'int' '<<'     |     |   |-ImplicitCastExpr 0x14f941d78 <col:14> 'int' <LValueToRValue>     |     |   | `-DeclRefExpr 0x14f941d38 <col:14> 'int' lvalue Var 0x14f928458 'value' 'int'     |     |   `-IntegerLiteral 0x14f941d58 <col:23> 'int' 8     |     `-ImplicitCastExpr 0x14f941e68 <col:28, col:30> 'int' <IntegralCast>     |       `-ImplicitCastExpr 0x14f941e50 <col:28, col:30> 'unsigned char' <LValueToRValue>     |         `-UnaryOperator 0x14f941e38 <col:28, col:30> 'unsigned char' lvalue prefix '*' cannot overflow     |           `-ImplicitCastExpr 0x14f941e20 <col:29, col:30> 'unsigned char *' <LValueToRValue>     |             `-UnaryOperator 0x14f941e08 <col:29, col:30> 'unsigned char *' lvalue prefix '*' cannot overflow     |               `-ImplicitCastExpr 0x14f941df0 <col:30> 'unsigned char **' <LValueToRValue>     |                 `-DeclRefExpr 0x14f941dd0 <col:30> 'unsigned char **' lvalue ParmVar 0x14f928140 'buffer' 'unsigned char **'     `-ReturnStmt 0x14f941f50 <line:20:3, col:16>       `-ImplicitCastExpr 0x14f941f38 <col:10, col:16> 'int' <LValueToRValue>         `-ParenExpr 0x14f941f18 <col:10, col:16> 'int' lvalue           `-DeclRefExpr 0x14f941ef8 <col:11> 'int' lvalue Var 0x14f928458 'value' 'int' ","19845":"`-FunctionDecl 0x13400df10  line:1:13 invalid do_client_file_xfer 'void (int *, int *, int *)' static   |-ParmVarDecl 0x13400dd28 <col:33, col:45> col:45 invalid vport 'int *'   |-ParmVarDecl 0x13400dda8 <line:2:33, col:49> col:49 invalid message_header 'int *'   |-ParmVarDecl 0x13400de28 <line:3:33, col:42> col:42 invalid data 'int *'   `-CompoundStmt 0x133924a00 <line:4:1, line:60:1>     |-SwitchStmt 0x13400e068 <line:8:5, line:45:5>     | |-ImplicitCastExpr 0x13400e050 <line:8:13, col:29> '<dependent type>' contains-errors <LValueToRValue>     | | `-CXXDependentScopeMemberExpr 0x13400e008 <col:13, col:29> '<dependent type>' contains-errors lvalue ->type     | |   `-RecoveryExpr 0x13400dfe8 <col:13> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x133924428 <col:35, line:45:5>     |   |-CompoundStmt 0x133924240 <line:9:36, line:30:5>     |   | |-IfStmt 0x133924008 <line:11:9, line:24:9> has_else     |   | | |-UnaryOperator 0x13400e158 <line:11:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | | `-ImplicitCastExpr 0x13400e140 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   `-RecoveryExpr 0x13400e120 <col:14> '<dependent type>' contains-errors lvalue     |   | | |-CompoundStmt 0x133923b90 <col:35, line:17:9>     |   | | | |-CallExpr 0x133923b30 <line:12:13, line:15:79> '<dependent type>' contains-errors     |   | | | | |-DeclRefExpr 0x13400e2d0 <line:12:13> 'int ()' Function 0x13400e218 'send_file_xfer_status' 'int ()'     |   | | | | |-RecoveryExpr 0x13400e2f0 <col:35> '<dependent type>' contains-errors lvalue     |   | | | | |-StringLiteral 0x13400e350 <line:13:16, line:14:16> 'char[7]' lvalue \"STRSTR\"     |   | | | | |-CXXDependentScopeMemberExpr 0x133923aa8 <line:15:16, col:19> '<dependent type>' contains-errors lvalue ->id     |   | | | | | `-RecoveryExpr 0x133923a88 <col:16> '<dependent type>' contains-errors lvalue     |   | | | | |-RecoveryExpr 0x133923af0 <col:23> '<dependent type>' contains-errors lvalue     |   | | | | |-RecoveryExpr 0x133923b10 <col:72> '<dependent type>' contains-errors lvalue     |   | | | | `-IntegerLiteral 0x133923a18 <col:78> 'int' 0     |   | | | `-ReturnStmt 0x133923b80 <line:16:13>     |   | | `-IfStmt 0x133923fe8 <line:17:16, line:24:9>     |   | |   |-CallExpr 0x133923d10 <line:17:20, col:63> '<dependent type>' contains-errors     |   | |   | |-DeclRefExpr 0x133923c90 <col:20> 'int ()' Function 0x133923bd8 'session_info_session_is_locked' 'int ()'     |   | |   | `-RecoveryExpr 0x133923cf0 <col:51> '<dependent type>' contains-errors lvalue     |   | |   `-CompoundStmt 0x133923fc8 <col:66, line:24:9>     |   | |     |-CallExpr 0x133923f00 <line:18:13, col:36> '<dependent type>' contains-errors     |   | |     | |-DeclRefExpr 0x133923e18 <col:13> 'int ()' Function 0x133923d60 'syslog' 'int ()'     |   | |     | |-RecoveryExpr 0x133923ee0 <col:20> '<dependent type>' contains-errors lvalue     |   | |     | `-StringLiteral 0x133923e90 <col:31> 'char[4]' lvalue \"STR\"     |   | |     `-ReturnStmt 0x133923fb8 <line:23:13>     |   | `-BreakStmt 0x133924238 <line:29:9>     |   |-CompoundStmt 0x133924268 <line:31:37, line:36:5>     |   | `-BreakStmt 0x133924260 <line:35:9>     |   |-CompoundStmt 0x133924288 <line:37:35, line:42:5>     |   | `-BreakStmt 0x133924280 <line:41:9>     |   `-DefaultStmt 0x133924408 <line:43:5, line:44:29>     |     `-CallExpr 0x1339243e8 <col:9, col:29> 'int'     |       `-ImplicitCastExpr 0x1339243d0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x133924380 <col:9> 'int ()' Function 0x1339242c8 'g_return_if_reached' 'int ()'     |-IfStmt 0x133924620 <line:48:5, line:52:5>     | |-RecoveryExpr 0x133924578 <line:48:9, col:10> '_Bool' contains-errors     | `-CompoundStmt 0x133924608 <col:16, line:52:5>     |   `-ReturnStmt 0x1339245f8 <line:51:9>     `-IfStmt 0x1339249c0 <line:57:5, line:59:5>       |-RecoveryExpr 0x133924870 <line:57:9, col:33> '_Bool' contains-errors       `-CompoundStmt 0x1339249b0 <col:60, line:59:5> ","19298":"`-FunctionDecl 0x129140a00  line:1:13 synic_update_vector 'void (struct kvm_vcpu_hv_synic *, int)' static   |-ParmVarDecl 0x129128648 <col:33, col:59> col:59 used synic 'struct kvm_vcpu_hv_synic *'   |-ParmVarDecl 0x1291286c8 <line:2:5, col:9> col:9 used vector 'int'   `-CompoundStmt 0x129141510 <line:3:1, line:16:1>     |-IfStmt 0x129140bc0 <line:4:2, line:5:3>     | |-BinaryOperator 0x129140b90 <line:4:6, col:15> 'int' contains-errors '<'     | | |-DeclRefExpr 0x129140b00 <col:6> 'int' lvalue ParmVar 0x1291286c8 'vector' 'int'     | | `-RecoveryExpr 0x129140b70 <col:15> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x129140bb0 <line:5:3>     |-IfStmt 0x129141158 <line:7:2, line:10:40> has_else     | |-CallExpr 0x129140d98 <line:7:6, col:46> 'int'     | | |-ImplicitCastExpr 0x129140d80 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x129140cf0 <col:6> 'int ()' Function 0x129140c38 'synic_has_vector_connected' 'int ()'     | | |-ImplicitCastExpr 0x129140dc8 <col:33> 'struct kvm_vcpu_hv_synic *' <LValueToRValue>     | | | `-DeclRefExpr 0x129140d10 <col:33> 'struct kvm_vcpu_hv_synic *' lvalue ParmVar 0x129128648 'synic' 'struct kvm_vcpu_hv_synic *'     | | `-ImplicitCastExpr 0x129140de0 <col:40> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x129140d30 <col:40> 'int' lvalue ParmVar 0x1291286c8 'vector' 'int'     | |-CallExpr 0x129140f78 <line:8:3, col:38> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x129140ed8 <col:3> 'int ()' Function 0x129140e20 '__set_bit' 'int ()'     | | |-DeclRefExpr 0x129140ef8 <col:13> 'int' lvalue ParmVar 0x1291286c8 'vector' 'int'     | | `-RecoveryExpr 0x129140f50 <col:21, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x129140f18 <col:21> 'struct kvm_vcpu_hv_synic *' lvalue ParmVar 0x129128648 'synic' 'struct kvm_vcpu_hv_synic *'     | `-CallExpr 0x129141128 <line:10:3, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129141088 <col:3> 'int ()' Function 0x129140fd0 '__clear_bit' 'int ()'     |   |-DeclRefExpr 0x1291410a8 <col:15> 'int' lvalue ParmVar 0x1291286c8 'vector' 'int'     |   `-RecoveryExpr 0x129141100 <col:23, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1291410c8 <col:23> 'struct kvm_vcpu_hv_synic *' lvalue ParmVar 0x129128648 'synic' 'struct kvm_vcpu_hv_synic *'     `-IfStmt 0x1291414e0 <line:12:2, line:15:45> has_else       |-CallExpr 0x1291412e0 <line:12:6, col:45> 'int'       | |-ImplicitCastExpr 0x1291412c8 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x129141268 <col:6> 'int ()' Function 0x1291411b0 'synic_has_vector_auto_eoi' 'int ()'       | |-ImplicitCastExpr 0x129141310 <col:32> 'struct kvm_vcpu_hv_synic *' <LValueToRValue>       | | `-DeclRefExpr 0x129141288 <col:32> 'struct kvm_vcpu_hv_synic *' lvalue ParmVar 0x129128648 'synic' 'struct kvm_vcpu_hv_synic *'       | `-ImplicitCastExpr 0x129141328 <col:39> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x1291412a8 <col:39> 'int' lvalue ParmVar 0x1291286c8 'vector' 'int'       |-CallExpr 0x1291413e0 <line:13:3, col:43> '<dependent type>' contains-errors       | |-DeclRefExpr 0x129141340 <col:3> 'int ()' Function 0x129140e20 '__set_bit' 'int ()'       | |-DeclRefExpr 0x129141360 <col:13> 'int' lvalue ParmVar 0x1291286c8 'vector' 'int'       | `-RecoveryExpr 0x1291413b8 <col:21, col:28> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x129141380 <col:21> 'struct kvm_vcpu_hv_synic *' lvalue ParmVar 0x129128648 'synic' 'struct kvm_vcpu_hv_synic *'       `-CallExpr 0x1291414b0 <line:15:3, col:45> '<dependent type>' contains-errors         |-DeclRefExpr 0x129141410 <col:3> 'int ()' Function 0x129140fd0 '__clear_bit' 'int ()'         |-DeclRefExpr 0x129141430 <col:15> 'int' lvalue ParmVar 0x1291286c8 'vector' 'int'         `-RecoveryExpr 0x129141488 <col:23, col:30> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x129141450 <col:23> 'struct kvm_vcpu_hv_synic *' lvalue ParmVar 0x129128648 'synic' 'struct kvm_vcpu_hv_synic *' ","19476":"`-FunctionDecl 0x13c827400  line:1:6 invalid chrdev_show 'void (struct seq_file *, int)'   |-ParmVarDecl 0x13c80e248 <col:18, col:35> col:35 used f 'struct seq_file *'   |-ParmVarDecl 0x13c80e2e0 <col:38, col:44> col:44 invalid offset 'int'   `-CompoundStmt 0x13c828098 <line:2:1, line:11:1>     |-DeclStmt 0x13c8276a8 <line:3:2, col:31>     | |-RecordDecl 0x13c8274b8 <col:2, col:9> col:9 struct char_device_struct     | `-VarDecl 0x13c827628 <col:2, col:29> col:29 used cd 'struct char_device_struct *'     |-CallExpr 0x13c8278d0 <line:5:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c827820 <col:2> 'int ()' Function 0x13c827768 'mutex_lock' 'int ()'     | `-UnaryOperator 0x13c8278b8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13c827898 <col:14> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13c827ea8 <line:6:2, line:9:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x13c827a98 <line:6:45> 'struct char_device_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x13c827a78 <col:45> 'struct char_device_struct *' lvalue Var 0x13c827628 'cd' 'struct char_device_struct *'     | |-BinaryOperator 0x13c827b30 <col:49, col:58> 'struct char_device_struct *' contains-errors '='     | | |-DeclRefExpr 0x13c827ab0 <col:49> 'struct char_device_struct *' lvalue Var 0x13c827628 'cd' 'struct char_device_struct *'     | | `-RecoveryExpr 0x13c827b08 <col:54, col:58> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13c827ad0 <col:54> 'struct char_device_struct *' lvalue Var 0x13c827628 'cd' 'struct char_device_struct *'     | `-CompoundStmt 0x13c827e90 <col:64, line:9:2>     |   `-IfStmt 0x13c827e70 <line:7:3, line:8:44>     |     |-BinaryOperator 0x13c827bd0 <line:7:7, col:20> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x13c827b88 <col:7, col:11> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x13c827b50 <col:7> 'struct char_device_struct *' lvalue Var 0x13c827628 'cd' 'struct char_device_struct *'     |     | `-RecoveryExpr 0x13c827bb0 <col:20> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x13c827e30 <line:8:4, col:44> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x13c827cd0 <col:4> 'int ()' Function 0x13c827c18 'seq_printf' 'int ()'     |       |-DeclRefExpr 0x13c827cf0 <col:15> 'struct seq_file *' lvalue ParmVar 0x13c80e248 'f' 'struct seq_file *'     |       |-StringLiteral 0x13c827d50 <col:18> 'char[4]' lvalue \"STR\"     |       |-RecoveryExpr 0x13c827da8 <col:25, col:29> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x13c827d70 <col:25> 'struct char_device_struct *' lvalue Var 0x13c827628 'cd' 'struct char_device_struct *'     |       `-RecoveryExpr 0x13c827e08 <col:36, col:40> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13c827dd0 <col:36> 'struct char_device_struct *' lvalue Var 0x13c827628 'cd' 'struct char_device_struct *'     `-CallExpr 0x13c828070 <line:10:2, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c827fc0 <col:2> 'int ()' Function 0x13c827f08 'mutex_unlock' 'int ()'       `-UnaryOperator 0x13c828058 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x13c828038 <col:16> '<dependent type>' contains-errors lvalue ","19315":"`-FunctionDecl 0x133128280  line:1:6 invalid close_log_table 'void (int *, int *)'   |-ParmVarDecl 0x133128128 <col:22, col:27> col:27 invalid thd 'int *'   |-ParmVarDecl 0x1331281a8 <col:32, col:52> col:52 invalid backup 'int *'   `-CompoundStmt 0x133128520 <line:2:1, line:4:1>     `-CallExpr 0x1331284f0 <line:3:3, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x133128490 <col:3> 'int ()' Function 0x1331283d8 'close_system_tables' 'int ()'       |-RecoveryExpr 0x1331284b0 <col:23> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1331284d0 <col:28> '<dependent type>' contains-errors lvalue ","20085":"`-FunctionDecl 0x12e80df18  line:1:1 invalid append_acs0 'int (int *, int, int)'   |-ParmVarDecl 0x12e80dd28 <col:13, col:27> col:27 invalid dst 'int *'   |-ParmVarDecl 0x12e80dda8 <col:32, col:36> col:36 used code 'int'   |-ParmVarDecl 0x12e80de28 <col:42, col:46> col:46 used src 'int'   `-CompoundStmt 0x12e828698 <line:2:1, line:10:1>     `-IfStmt 0x12e828678 <line:3:5, line:9:5>       |-BinaryOperator 0x12e80e030 <line:3:9, col:16> 'int' '!='       | |-ImplicitCastExpr 0x12e80e018 <col:9> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x12e80dfd8 <col:9> 'int' lvalue ParmVar 0x12e80de28 'src' 'int'       | `-IntegerLiteral 0x12e80dff8 <col:16> 'int' 0       `-CompoundStmt 0x12e828640 <col:19, line:9:5>         |-DeclStmt 0x12e80e158 <line:4:2, col:14>         | `-VarDecl 0x12e80e0f0 <col:2, col:13> col:7 used temp 'char[3]'         |-BinaryOperator 0x12e80e258 <line:5:2, col:19> 'char' '='         | |-ArraySubscriptExpr 0x12e80e1c8 <col:2, col:8> 'char' lvalue         | | |-ImplicitCastExpr 0x12e80e1b0 <col:2> 'char *' <ArrayToPointerDecay>         | | | `-DeclRefExpr 0x12e80e170 <col:2> 'char[3]' lvalue Var 0x12e80e0f0 'temp' 'char[3]'         | | `-IntegerLiteral 0x12e80e190 <col:7> 'int' 0         | `-CStyleCastExpr 0x12e80e230 <col:12, col:19> 'char' <IntegralCast>         |   `-ImplicitCastExpr 0x12e80e218 <col:19> 'int' <LValueToRValue> part_of_explicit_cast         |     `-DeclRefExpr 0x12e80e1e8 <col:19> 'int' lvalue ParmVar 0x12e80dda8 'code' 'int'         |-BinaryOperator 0x12e80e360 <line:6:2, col:19> 'char' '='         | |-ArraySubscriptExpr 0x12e80e2d0 <col:2, col:8> 'char' lvalue         | | |-ImplicitCastExpr 0x12e80e2b8 <col:2> 'char *' <ArrayToPointerDecay>         | | | `-DeclRefExpr 0x12e80e278 <col:2> 'char[3]' lvalue Var 0x12e80e0f0 'temp' 'char[3]'         | | `-IntegerLiteral 0x12e80e298 <col:7> 'int' 1         | `-CStyleCastExpr 0x12e80e338 <col:12, col:19> 'char' <IntegralCast>         |   `-ImplicitCastExpr 0x12e80e320 <col:19> 'int' <LValueToRValue> part_of_explicit_cast         |     `-DeclRefExpr 0x12e80e2f0 <col:19> 'int' lvalue ParmVar 0x12e80de28 'src' 'int'         |-BinaryOperator 0x12e828438 <line:7:2, col:12> 'char' '='         | |-ArraySubscriptExpr 0x12e80e3d8 <col:2, col:8> 'char' lvalue         | | |-ImplicitCastExpr 0x12e80e3c0 <col:2> 'char *' <ArrayToPointerDecay>         | | | `-DeclRefExpr 0x12e80e380 <col:2> 'char[3]' lvalue Var 0x12e80e0f0 'temp' 'char[3]'         | | `-IntegerLiteral 0x12e80e3a0 <col:7> 'int' 2         | `-ImplicitCastExpr 0x12e828420 <col:12> 'char' <IntegralCast>         |   `-IntegerLiteral 0x12e828400 <col:12> 'int' 0         `-CallExpr 0x12e828610 <line:8:2, col:27> '<dependent type>' contains-errors           |-DeclRefExpr 0x12e8285b0 <col:2> 'int ()' Function 0x12e8284f8 '_nc_safe_strcat' 'int ()'           |-RecoveryExpr 0x12e8285d0 <col:18> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x12e8285f0 <col:23> 'char[3]' lvalue Var 0x12e80e0f0 'temp' 'char[3]' ","19354":"`-FunctionDecl 0x13000de88  line:1:14 invalid GreaterEqualEval 'int (int *, int *)'   |-ParmVarDecl 0x13000dd28 <col:31, col:46> col:46 referenced invalid context 'int *'   |-ParmVarDecl 0x13000dda8 <col:55, col:67> col:67 invalid node 'int *'   `-CompoundStmt 0x1300278b0 <col:73, line:34:1>     |-DeclStmt 0x13000e1d0 <line:2:3, col:70>     | `-VarDecl 0x13000df58 <col:3, col:23> col:23 invalid input1 'const int *'     |-DeclStmt 0x13000e318 <line:3:3, col:70>     | `-VarDecl 0x13000e200 <col:3, col:23> col:23 invalid input2 'const int *'     `-SwitchStmt 0x1300275e8 <line:6:3, line:32:3>       |-ImplicitCastExpr 0x1300275d0 <line:6:11, col:19> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x130027588 <col:11, col:19> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x130027568 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x130027870 <col:25, line:32:3>         |-BreakStmt 0x130027628 <line:10:7>         |-BreakStmt 0x130027678 <line:14:7>         |-BreakStmt 0x130027680 <line:18:7>         |-BreakStmt 0x130027688 <line:22:7>         |-BreakStmt 0x130027690 <line:26:7>         `-DefaultStmt 0x130027850 <line:27:5, line:30:40>           `-CallExpr 0x130027818 <line:28:7, line:30:40> '<dependent type>' contains-errors             |-CXXDependentScopeMemberExpr 0x1300276e0 <line:28:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError             | `-RecoveryExpr 0x1300276b8 <col:7> '<dependent type>' contains-errors lvalue             |   `-DeclRefExpr 0x130027698 <col:7> 'int *' lvalue ParmVar 0x13000dd28 'context' 'int *'             |-RecoveryExpr 0x130027728 <col:28> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x130027790 <line:29:28> 'char[4]' lvalue \"STR\"             `-CXXDependentScopeMemberExpr 0x1300277d0 <line:30:28, col:36> '<dependent type>' contains-errors lvalue ->type               `-RecoveryExpr 0x1300277b0 <col:28> '<dependent type>' contains-errors lvalue ","19973":"`-FunctionDecl 0x14802a8b8  line:1:21 audit_tree_lookup 'struct audit_chunk *(const struct inode *)'   |-ParmVarDecl 0x14800e2e8 <col:39, col:59> col:59 used inode 'const struct inode *'   `-CompoundStmt 0x14802b420 <line:2:1, line:13:1>     |-DeclStmt 0x14802ada8 <line:3:2, col:44>     | |-RecordDecl 0x14802a9b0 <col:2, col:9> col:9 struct list_head     | `-VarDecl 0x14802ab18 <col:2, col:43> col:20 used list 'struct list_head *' cinit     |   `-ImplicitCastExpr 0x14802ad78 <col:27, col:43> 'struct list_head *' <IntegralToPointer>     |     `-CallExpr 0x14802ad38 <col:27, col:43> 'int'     |       |-ImplicitCastExpr 0x14802ad20 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14802acb0 <col:27> 'int ()' Function 0x14802abf8 'chunk_hash' 'int ()'     |       `-ImplicitCastExpr 0x14802ad60 <col:38> 'const struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x14802acd0 <col:38> 'const struct inode *' lvalue ParmVar 0x14800e2e8 'inode' 'const struct inode *'     |-DeclStmt 0x14802aeb0 <line:4:2, col:23>     | `-VarDecl 0x14802ae48 <col:2, col:22> col:22 used p 'struct audit_chunk *'     |-CallExpr 0x14802b078 <line:6:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14802afa8 <col:2> 'int ()' Function 0x14802aef0 'list_for_each_entry_rcu' 'int ()'     | |-DeclRefExpr 0x14802afc8 <col:26> 'struct audit_chunk *' lvalue Var 0x14802ae48 'p' 'struct audit_chunk *'     | |-DeclRefExpr 0x14802afe8 <col:29> 'struct list_head *' lvalue Var 0x14802ab18 'list' 'struct list_head *'     | `-RecoveryExpr 0x14802b058 <col:35> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x14802b3c0 <col:41, line:11:2>     | `-IfStmt 0x14802b3a0 <line:7:3, line:10:3>     |   |-BinaryOperator 0x14802b178 <line:7:7, col:25> 'int' contains-errors '=='     |   | |-CXXDependentScopeMemberExpr 0x14802b110 <col:7, col:16> '<dependent type>' contains-errors lvalue .inode     |   | | `-RecoveryExpr 0x14802b0e8 <col:7, col:10> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14802b0b0 <col:7> 'struct audit_chunk *' lvalue Var 0x14802ae48 'p' 'struct audit_chunk *'     |   | `-DeclRefExpr 0x14802b158 <col:25> 'const struct inode *' lvalue ParmVar 0x14800e2e8 'inode' 'const struct inode *'     |   `-CompoundStmt 0x14802b380 <col:32, line:10:3>     |     |-CallExpr 0x14802b310 <line:8:4, col:31> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x14802b278 <col:4> 'int ()' Function 0x14802b1c0 'get_inotify_watch' 'int ()'     |     | `-UnaryOperator 0x14802b2f8 <col:22, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-RecoveryExpr 0x14802b2d0 <col:23, col:26> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14802b298 <col:23> 'struct audit_chunk *' lvalue Var 0x14802ae48 'p' 'struct audit_chunk *'     |     `-ReturnStmt 0x14802b370 <line:9:4, col:11>     |       `-ImplicitCastExpr 0x14802b358 <col:11> 'struct audit_chunk *' <LValueToRValue>     |         `-DeclRefExpr 0x14802b338 <col:11> 'struct audit_chunk *' lvalue Var 0x14802ae48 'p' 'struct audit_chunk *'     `-ReturnStmt 0x14802b410 <line:12:2, col:9>       `-RecoveryExpr 0x14802b3f0 <col:9> '<dependent type>' contains-errors lvalue ","19361":"`-FunctionDecl 0x125809838  col:2 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x125809938 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1258098e0 <<invalid sloc>> Implicit 869 ","19258":"`-FunctionDecl 0x15a92f008  line:1:1 i915_gem_execbuffer2 'int (struct drm_device *, void *, struct drm_file *)'   |-ParmVarDecl 0x14a80e248 <col:22, col:41> col:41 used dev 'struct drm_device *'   |-ParmVarDecl 0x14a80e2c8 <col:46, col:52> col:52 used data 'void *'   |-ParmVarDecl 0x15a92eec8 <line:2:8, col:25> col:25 used file 'struct drm_file *'   `-CompoundStmt 0x15a932f88 <line:3:1, line:51:1>     |-DeclStmt 0x15a92f348 <line:4:2, col:46>     | |-RecordDecl 0x15a92f110 <col:2, col:9> col:9 struct drm_i915_gem_execbuffer2     | `-VarDecl 0x15a92f278 <col:2, col:42> col:35 used args 'struct drm_i915_gem_execbuffer2 *' cinit     |   `-ImplicitCastExpr 0x15a92f318 <col:42> 'struct drm_i915_gem_execbuffer2 *' <BitCast>     |     `-ImplicitCastExpr 0x15a92f300 <col:42> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x15a92f2e0 <col:42> 'void *' lvalue ParmVar 0x14a80e2c8 'data' 'void *'     |-DeclStmt 0x15a92f598 <line:5:2, col:53>     | |-RecordDecl 0x15a92f360 <col:2, col:9> col:9 struct drm_i915_gem_exec_object2     | `-VarDecl 0x15a92f4c8 <col:2, col:49> col:36 used exec2_list 'struct drm_i915_gem_exec_object2 *' cinit     |   `-RecoveryExpr 0x15a92f560 <col:49> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a92f630 <line:6:2, col:9>     | `-VarDecl 0x15a92f5c8 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x15a92f9d8 <line:8:2, line:11:2>     | |-BinaryOperator 0x15a92f6c8 <line:8:6, col:27> 'int' contains-errors '<'     | | |-RecoveryExpr 0x15a92f680 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15a92f648 <col:6> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x15a92f278 'args' 'struct drm_i915_gem_execbuffer2 *'     | | `-IntegerLiteral 0x15a92f6a8 <col:27> 'int' 1     | `-CompoundStmt 0x15a92f9b8 <col:30, line:11:2>     |   |-CallExpr 0x15a92f8e0 <line:9:3, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a92f800 <col:3> 'int ()' Function 0x15a92f748 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x15a92f860 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x15a92f8b8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15a92f880 <col:20> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x15a92f278 'args' 'struct drm_i915_gem_execbuffer2 *'     |   `-ReturnStmt 0x15a92f9a8 <line:10:3, col:11>     |     `-UnaryOperator 0x15a92f990 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x15a92f978 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x15a92f958 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a931d30 <line:18:2, line:22:2>     | |-BinaryOperator 0x15a931b78 <line:18:6, col:20> 'int' contains-errors '=='     | | |-DeclRefExpr 0x15a931b00 <col:6> 'struct drm_i915_gem_exec_object2 *' contains-errors lvalue Var 0x15a92f4c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     | | `-RecoveryExpr 0x15a931b58 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a931d10 <col:26, line:22:2>     |   |-CallExpr 0x15a931c38 <line:19:3, line:20:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a931b98 <line:19:3> 'int ()' Function 0x15a92f748 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x15a931bb8 <col:13> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x15a931c10 <line:20:6, col:12> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15a931bd8 <col:6> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x15a92f278 'args' 'struct drm_i915_gem_execbuffer2 *'     |   `-ReturnStmt 0x15a931d00 <line:21:3, col:11>     |     `-UnaryOperator 0x15a931ce8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x15a931cd0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x15a931cb0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a932338 <line:27:2, line:32:2>     | |-BinaryOperator 0x15a932058 <line:27:6, col:13> 'int' '!='     | | |-ImplicitCastExpr 0x15a932040 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15a932000 <col:6> 'int' lvalue Var 0x15a92f5c8 'ret' 'int'     | | `-IntegerLiteral 0x15a932020 <col:13> 'int' 0     | `-CompoundStmt 0x15a932318 <col:16, line:32:2>     |   |-CallExpr 0x15a932138 <line:28:3, line:29:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15a932078 <line:28:3> 'int ()' Function 0x15a92f748 'DRM_DEBUG' 'int ()'     |   | |-StringLiteral 0x15a932098 <col:13> 'char[4]' lvalue \"STR\"     |   | |-RecoveryExpr 0x15a9320f0 <line:29:6, col:12> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15a9320b8 <col:6> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x15a92f278 'args' 'struct drm_i915_gem_execbuffer2 *'     |   | `-DeclRefExpr 0x15a932118 <col:26> 'int' lvalue Var 0x15a92f5c8 'ret' 'int'     |   `-CallExpr 0x15a9322d8 <line:30:3, col:28> 'int' contains-errors     |     |-ImplicitCastExpr 0x15a9322c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15a932250 <col:3> 'int ()' Function 0x15a932198 'drm_free_large' 'int ()'     |     `-ImplicitCastExpr 0x15a932300 <col:18> 'struct drm_i915_gem_exec_object2 *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x15a932270 <col:18> 'struct drm_i915_gem_exec_object2 *' contains-errors lvalue Var 0x15a92f4c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     |-BinaryOperator 0x15a9325f0 <line:34:2, col:64> 'int' contains-errors '='     | |-DeclRefExpr 0x15a932358 <col:2> 'int' lvalue Var 0x15a92f5c8 'ret' 'int'     | `-CallExpr 0x15a932530 <col:8, col:64> 'int' contains-errors     |   |-ImplicitCastExpr 0x15a932518 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x15a932458 <col:8> 'int ()' Function 0x15a9323a0 'i915_gem_do_execbuffer' 'int ()'     |   |-ImplicitCastExpr 0x15a932578 <col:31> 'struct drm_device *' <LValueToRValue>     |   | `-DeclRefExpr 0x15a932478 <col:31> 'struct drm_device *' lvalue ParmVar 0x14a80e248 'dev' 'struct drm_device *'     |   |-ImplicitCastExpr 0x15a932590 <col:36> 'void *' <LValueToRValue>     |   | `-DeclRefExpr 0x15a932498 <col:36> 'void *' lvalue ParmVar 0x14a80e2c8 'data' 'void *'     |   |-ImplicitCastExpr 0x15a9325a8 <col:42> 'struct drm_file *' <LValueToRValue>     |   | `-DeclRefExpr 0x15a9324b8 <col:42> 'struct drm_file *' lvalue ParmVar 0x15a92eec8 'file' 'struct drm_file *'     |   |-ImplicitCastExpr 0x15a9325c0 <col:48> 'struct drm_i915_gem_execbuffer2 *' <LValueToRValue>     |   | `-DeclRefExpr 0x15a9324d8 <col:48> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x15a92f278 'args' 'struct drm_i915_gem_execbuffer2 *'     |   `-ImplicitCastExpr 0x15a9325d8 <col:54> 'struct drm_i915_gem_exec_object2 *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x15a9324f8 <col:54> 'struct drm_i915_gem_exec_object2 *' contains-errors lvalue Var 0x15a92f4c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     |-IfStmt 0x15a932e88 <line:35:2, line:47:2>     | |-UnaryOperator 0x15a932648 <line:35:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15a932630 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x15a932610 <col:7> 'int' lvalue Var 0x15a92f5c8 'ret' 'int'     | `-CompoundStmt 0x15a932e70 <col:12, line:47:2>     |   `-IfStmt 0x15a932e50 <line:41:3, line:46:3>     |     |-ImplicitCastExpr 0x15a932890 <line:41:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15a932870 <col:7> 'int' lvalue Var 0x15a92f5c8 'ret' 'int'     |     `-CompoundStmt 0x15a932e38 <col:12, line:46:3>     |       `-CallExpr 0x15a932e00 <line:43:4, line:45:30> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x15a9328c8 <line:43:4> 'int ()' Function 0x15a92f748 'DRM_DEBUG' 'int ()'     |         |-StringLiteral 0x15a932930 <col:14, line:44:7> 'char[7]' lvalue \"STRSTR\"     |         |-RecoveryExpr 0x15a932990 <line:45:7, col:13> '<dependent type>' contains-errors lvalue     |         | `-DeclRefExpr 0x15a932958 <col:7> 'struct drm_i915_gem_execbuffer2 *' lvalue Var 0x15a92f278 'args' 'struct drm_i915_gem_execbuffer2 *'     |         `-DeclRefExpr 0x15a9329b8 <col:27> 'int' lvalue Var 0x15a92f5c8 'ret' 'int'     |-CallExpr 0x15a932f00 <line:49:2, col:27> 'int' contains-errors     | |-ImplicitCastExpr 0x15a932ee8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15a932ea8 <col:2> 'int ()' Function 0x15a932198 'drm_free_large' 'int ()'     | `-ImplicitCastExpr 0x15a932f28 <col:17> 'struct drm_i915_gem_exec_object2 *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x15a932ec8 <col:17> 'struct drm_i915_gem_exec_object2 *' contains-errors lvalue Var 0x15a92f4c8 'exec2_list' 'struct drm_i915_gem_exec_object2 *'     `-ReturnStmt 0x15a932f78 <line:50:2, col:9>       `-ImplicitCastExpr 0x15a932f60 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15a932f40 <col:9> 'int' lvalue Var 0x15a92f5c8 'ret' 'int' ","19542":"`-FunctionDecl 0x13290a968  line:1:31 radeon_atombios_get_ss_info 'struct radeon_atom_ss *(struct radeon_encoder *, int)' static   |-ParmVarDecl 0x1328f24e8 <col:59, line:3:11> col:11 used encoder 'struct radeon_encoder *'   |-ParmVarDecl 0x1328f2568 <line:4:10, col:14> col:14 used id 'int'   `-CompoundStmt 0x131830630 <line:5:1, line:44:1>     |-DeclStmt 0x13290ad00 <line:6:2, col:44>     | |-RecordDecl 0x13290aa68 <col:2, col:9> col:9 struct drm_device     | `-VarDecl 0x13290abd8 <col:2, col:41> col:21 used dev 'struct drm_device *' cinit     |   `-CXXDependentScopeMemberExpr 0x13290aca0 <col:27, col:41> '<dependent type>' contains-errors lvalue .dev     |     `-RecoveryExpr 0x13290ac78 <col:27, col:36> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13290ac40 <col:27> 'struct radeon_encoder *' lvalue ParmVar 0x1328f24e8 'encoder' 'struct radeon_encoder *'     |-DeclStmt 0x13290af68 <line:7:2, col:47>     | |-RecordDecl 0x13290ad18 <col:2, col:9> col:9 struct radeon_device     | `-VarDecl 0x13290ae88 <col:2, col:36> col:24 used rdev 'struct radeon_device *' cinit     |   `-RecoveryExpr 0x13290af28 <col:31, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13290aef0 <col:31> 'struct drm_device *' contains-errors lvalue Var 0x13290abd8 'dev' 'struct drm_device *'     |-DeclStmt 0x13290b1e0 <line:8:2, col:55>     | |-RecordDecl 0x13290af80 <col:2, col:9> col:9 struct radeon_mode_info     | `-VarDecl 0x13290b0e8 <col:2, col:46> col:27 used mode_info 'struct radeon_mode_info *' cinit     |   `-UnaryOperator 0x13290b1b0 <col:39, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13290b188 <col:40, col:46> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13290b150 <col:40> 'struct radeon_device *' contains-errors lvalue Var 0x13290ae88 'rdev' 'struct radeon_device *'     |-DeclStmt 0x13290b490 <line:9:2, col:57>     | `-VarDecl 0x13290b210 <col:2, col:56> col:6 used index 'int' cinit     |   `-CallExpr 0x13290b460 <col:14, col:56> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13290b3a0 <col:14> 'int ()' Function 0x13290b2e8 'GetIndexIntoMasterTable' 'int ()'     |     |-RecoveryExpr 0x13290b420 <col:38> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x13290b440 <col:44> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13290b698 <line:11:2, col:44>     | |-RecordDecl 0x13290b4a8 <col:2, col:9> col:9 struct _ATOM_SPREAD_SPECTRUM_INFO     | `-VarDecl 0x13290b618 <col:2, col:37> col:37 used ss_info 'struct _ATOM_SPREAD_SPECTRUM_INFO *'     |-DeclStmt 0x13290b7d8 <line:13:2, col:34>     | `-VarDecl 0x13290b738 <col:2, col:30> col:25 used ss 'struct radeon_atom_ss *' cinit     |   `-RecoveryExpr 0x13290b7b8 <col:30> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132012480 <line:14:2, col:7>     | `-VarDecl 0x132012418 <col:2, col:6> col:6 used i 'int'     |-IfStmt 0x132012578 <line:16:2, line:17:10>     | |-BinaryOperator 0x132012510 <line:16:6, col:11> 'int' contains-errors '>'     | | |-DeclRefExpr 0x132012498 <col:6> 'int' lvalue ParmVar 0x1328f2568 'id' 'int'     | | `-RecoveryExpr 0x1320124f0 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x132012568 <line:17:3, col:10>     |   `-RecoveryExpr 0x132012548 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1318305c8 <line:19:2, line:42:2>     | |-CallExpr 0x1320128d8 <line:19:6, line:20:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x132012678 <line:19:6> 'int ()' Function 0x1320125c0 'atom_parse_data_header' 'int ()'     | | |-RecoveryExpr 0x1320126d0 <col:29, col:40> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x132012698 <col:29> 'struct radeon_mode_info *' contains-errors lvalue Var 0x13290b0e8 'mode_info' 'struct radeon_mode_info *'     | | |-DeclRefExpr 0x1320126f8 <col:54> 'int' contains-errors lvalue Var 0x13290b210 'index' 'int'     | | |-RecoveryExpr 0x132012810 <col:61> '<dependent type>' contains-errors lvalue     | | |-UnaryOperator 0x132012850 <line:20:8, col:9> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x132012830 <col:9> '<dependent type>' contains-errors lvalue     | | |-UnaryOperator 0x132012888 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x132012868 <col:16> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1320128c0 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1320128a0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1318305b8 <col:37, line:42:2>     `-ReturnStmt 0x131830620 <line:43:2, col:9>       `-ImplicitCastExpr 0x131830608 <col:9> 'struct radeon_atom_ss *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1318305e8 <col:9> 'struct radeon_atom_ss *' contains-errors lvalue Var 0x13290b738 'ss' 'struct radeon_atom_ss *' ","20141":"`-FunctionDecl 0x1410f1a38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x1410f1958 <col:8> col:8 used HttpConnectionManagerConfigTest 'int'   |-ParmVarDecl 0x1410f18d8 <col:41> col:41 ServerPassThrough 'int'   `-CompoundStmt 0x137836b90 <col:60, line:20:1>     |-ImplicitCastExpr 0x1410f1b70 <line:14:3> 'int' <LValueToRValue>     | `-DeclRefExpr 0x1410f1b50 <col:3> 'int' lvalue ParmVar 0x1410f1958 'HttpConnectionManagerConfigTest' 'int'     `-CallExpr 0x137836a00 <col:31, line:17:69> '<dependent type>' contains-errors       |-DeclRefExpr 0x1410f1ca0 <line:14:31> 'int ()' Function 0x1410f1be8 'config' 'int ()'       |-CallExpr 0x1410f1f08 <col:38, col:84> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1410f1da0 <col:38> 'int ()' Function 0x1410f1ce8 'parseHttpConnectionManagerFromYaml' 'int ()'       | `-RecoveryExpr 0x1410f1ee8 <col:73> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1410f1f30 <col:87> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1410f1f50 <line:15:38> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1410f1f70 <col:54> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1410f1f90 <line:16:38> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x1410f1fb0 <col:78> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1410f1fd0 <line:17:38> '<dependent type>' contains-errors lvalue ","19720":"`-FunctionDecl 0x14f80dd68  line:1:9 invalid tpay_New 'int *()'   `-CompoundStmt 0x14f80e078 <line:2:1, line:5:1>     `-CallExpr 0x14f80e030 <line:3:2, col:55> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f80df70 <col:2> 'int ()' Function 0x14f80deb8 'ISOM_DECL_BOX_ALLOC' 'int ()'       |-RecoveryExpr 0x14f80dff0 <col:22> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14f80e010 <col:34> '<dependent type>' contains-errors lvalue ","19160":"`-FunctionDecl 0x1499281a8  line:1:19 invalid EVP_aes_256_cbc_hmac_sha1 'const int *(void)'   `-CompoundStmt 0x1499282e8 <line:2:2, line:5:2> ","19144":"`-FunctionDecl 0x128928258  line:1:1 invalid ossl_cipher_initialize 'int (int, int)'   |-ParmVarDecl 0x1289280f0 <col:24, col:30> col:30 invalid self 'int'   |-ParmVarDecl 0x128928170 <col:36, col:42> col:42 invalid str 'int'   `-CompoundStmt 0x128942480 <line:2:1, line:22:1>     |-DeclStmt 0x1289283a8 <line:4:5, col:29>     | `-VarDecl 0x128928340 <col:5, col:23> col:23 invalid cipher 'const int *'     |-DeclStmt 0x128928440 <line:5:5, col:15>     | `-VarDecl 0x1289283d8 <col:5, col:11> col:11 used name 'char *'     |-DeclStmt 0x128928558 <line:6:5, col:56>     | `-VarDecl 0x128928488 <col:5, col:19> col:19 invalid dummy_key 'unsigned char'     |-BinaryOperator 0x128928758 <line:8:5, col:31> 'char *' contains-errors '='     | |-DeclRefExpr 0x128928570 <col:5> 'char *' lvalue Var 0x1289283d8 'name' 'char *'     | `-CallExpr 0x128928730 <col:12, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1289286f0 <col:12> 'int ()' Function 0x128928638 'StringValueCStr' 'int ()'     |   `-RecoveryExpr 0x128928710 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x128941960 <line:9:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1289418b8 <col:5> 'int ()' Function 0x128941800 'GetCipherInit' 'int ()'     | |-RecoveryExpr 0x1289418d8 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x128941940 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128941bd8 <line:10:5, line:12:5>     | |-RecoveryExpr 0x1289419a8 <line:10:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x128941bc0 <col:14, line:12:5>     |   `-CallExpr 0x128941b90 <line:11:2, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x128941aa8 <col:2> 'int ()' Function 0x1289419f0 'ossl_raise' 'int ()'     |     |-RecoveryExpr 0x128941b70 <col:13> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x128941b20 <col:31> 'char[4]' lvalue \"STR\"     |-CallExpr 0x128941d80 <line:13:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128941cd8 <col:5> 'int ()' Function 0x128941c20 'AllocCipher' 'int ()'     | |-RecoveryExpr 0x128941cf8 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x128941d60 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1289420f0 <line:14:5, line:16:5>     | |-UnaryOperator 0x128941fb8 <line:14:9, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ParenExpr 0x128941f98 <col:10, col:46> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x128941f78 <col:11, col:45> '<dependent type>' contains-errors '='     | |     |-RecoveryExpr 0x128941db0 <col:11> '<dependent type>' contains-errors lvalue     | |     `-CallExpr 0x128941f38 <col:20, col:45> 'int'     | |       |-ImplicitCastExpr 0x128941f20 <col:20> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x128941eb0 <col:20> 'int ()' Function 0x128941df8 'EVP_get_cipherbyname' 'int ()'     | |       `-ImplicitCastExpr 0x128941f60 <col:41> 'char *' <LValueToRValue>     | |         `-DeclRefExpr 0x128941ed0 <col:41> 'char *' lvalue Var 0x1289283d8 'name' 'char *'     | `-CompoundStmt 0x1289420d8 <col:49, line:16:5>     |   `-CallExpr 0x1289420a0 <line:15:2, col:41> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x128941fd0 <col:2> 'int ()' Function 0x1289419f0 'ossl_raise' 'int ()'     |     |-RecoveryExpr 0x128942080 <col:13> '<dependent type>' contains-errors lvalue     |     |-StringLiteral 0x128942008 <col:31> 'char[4]' lvalue \"STR\"     |     `-RecoveryExpr 0x128942028 <col:38> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x128942470 <line:21:5, col:12>       `-RecoveryExpr 0x128942450 <col:12> '<dependent type>' contains-errors lvalue ","20045":"`-FunctionDecl 0x14a819ff8  line:1:1 invalid free_conversation 'int (int *)'   |-ParmVarDecl 0x14a819f28 <col:20, col:44> col:44 invalid conversation 'int *'   `-CompoundStmt 0x14b009ec0 <line:2:1, line:14:1>     |-IfStmt 0x14a81a410 <line:3:9, line:5:9>     | |-BinaryOperator 0x14a81a168 <line:3:13, col:34> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x14a81a0c8 <col:13, col:27> '<dependent type>' contains-errors lvalue ->job     | | | `-RecoveryExpr 0x14a81a0a8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14a81a148 <col:34> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a81a3f8 <col:40, line:5:9>     |   `-CallExpr 0x14a81a3c8 <line:4:17, col:61> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a81a2e0 <col:17> 'int ()' Function 0x14a81a228 'g_warning' 'int ()'     |     |-StringLiteral 0x14a81a340 <col:28> 'char[4]' lvalue \"STR\"     |     `-CXXDependentScopeMemberExpr 0x14a81a380 <col:35, col:49> '<dependent type>' contains-errors lvalue ->service_name     |       `-RecoveryExpr 0x14a81a360 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a81a598 <line:7:9, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a81a510 <col:9> 'int ()' Function 0x14a81a458 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x14a81a550 <col:17, col:31> '<dependent type>' contains-errors lvalue ->service_name     |   `-RecoveryExpr 0x14a81a530 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b009a48 <line:8:9, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a81a5c0 <col:9> 'int ()' Function 0x14a81a458 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x14b009a00 <col:17, col:31> '<dependent type>' contains-errors lvalue ->starting_username     |   `-RecoveryExpr 0x14a81a5e0 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b009af8 <line:9:9, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b009a70 <col:9> 'int ()' Function 0x14a81a458 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x14b009ab0 <col:17, col:31> '<dependent type>' contains-errors lvalue ->session_id     |   `-RecoveryExpr 0x14b009a90 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b009ca0 <line:10:9, col:64> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b009c00 <col:9> 'int ()' Function 0x14b009b48 'g_clear_object' 'int ()'     | `-UnaryOperator 0x14b009c88 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b009c40 <col:26, col:40> '<dependent type>' contains-errors lvalue ->worker_manager_interface     |     `-RecoveryExpr 0x14b009c20 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b009d68 <line:11:9, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b009cc8 <col:9> 'int ()' Function 0x14b009b48 'g_clear_object' 'int ()'     | `-UnaryOperator 0x14b009d50 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b009d08 <col:26, col:40> '<dependent type>' contains-errors lvalue ->worker_proxy     |     `-RecoveryExpr 0x14b009ce8 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b009e30 <line:12:9, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b009d90 <col:9> 'int ()' Function 0x14b009b48 'g_clear_object' 'int ()'     | `-UnaryOperator 0x14b009e18 <col:25, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b009dd0 <col:26, col:40> '<dependent type>' contains-errors lvalue ->session     |     `-RecoveryExpr 0x14b009db0 <col:26> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14b009e98 <line:13:9, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x14b009e58 <col:9> 'int ()' Function 0x14a81a458 'g_free' 'int ()'       `-RecoveryExpr 0x14b009e78 <col:17> '<dependent type>' contains-errors lvalue ","19904":"`-FunctionDecl 0x13f80dfa8  line:1:15 invalid db_connect 'int *(char *, char *, char *, char *)' static   |-ParmVarDecl 0x13f80dcf0 <col:26, col:32> col:32 used host 'char *'   |-ParmVarDecl 0x13f80dd70 <col:38, col:44> col:44 used database 'char *'   |-ParmVarDecl 0x13f80ddf0 <line:2:26, col:32> col:32 used user 'char *'   |-ParmVarDecl 0x13f80de70 <col:38, col:44> col:44 used passwd 'char *'   `-CompoundStmt 0x13f828610 <line:3:1, line:55:1>     |-IfStmt 0x13f80e340 <line:5:3, line:6:26>     | |-RecoveryExpr 0x13f80e0a0 <line:5:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13f80e310 <line:6:5, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f80e220 <col:5> 'int ()' Function 0x13f80e168 'fprintf' 'int ()'     |   |-RecoveryExpr 0x13f80e2f0 <col:13> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x13f80e2a0 <col:21> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13f827ba0 <line:7:3, line:8:12>     | |-RecoveryExpr 0x13f827b38 <line:7:7, col:32> '_Bool' contains-errors     | `-ReturnStmt 0x13f827b90 <line:8:5, col:12>     |   `-ImplicitCastExpr 0x13f827b78 <col:12> 'int *' <NullToPointer>     |     `-IntegerLiteral 0x13f827b58 <col:12> 'int' 0     |-IfStmt 0x13f827e10 <line:9:3, line:10:49>     | |-RecoveryExpr 0x13f827bd8 <line:9:7> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13f827dd8 <line:10:5, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13f827cd8 <col:5> 'int ()' Function 0x13f827c20 'mysql_options' 'int ()'     |   |-RecoveryExpr 0x13f827d78 <col:19> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x13f827d98 <col:25> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13f827db8 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f8283a0 <line:39:3, line:45:3>     | |-RecoveryExpr 0x13f828250 <line:39:7, line:41:30> '_Bool' contains-errors     | `-CompoundStmt 0x13f828390 <line:42:3, line:45:3>     `-IfStmt 0x13f8285f0 <line:49:3, line:53:3>       |-RecoveryExpr 0x13f828580 <line:49:7, col:38> '_Bool' contains-errors       `-CompoundStmt 0x13f8285e0 <line:50:3, line:53:3> ","19337":"`-FunctionDecl 0x14a128280  line:1:13 referenced invalid fix_prepare_info_in_table_list 'void (int *, int *)' static   |-ParmVarDecl 0x14a128128 <col:44, col:49> col:49 referenced invalid thd 'int *'   |-ParmVarDecl 0x14a1281a8 <col:54, col:66> col:66 referenced invalid tbl 'int *'   `-CompoundStmt 0x14a808d20 <line:2:1, line:16:1>     `-ForStmt 0x14a808ce8 <line:3:3, line:15:3>       |-<<<NULL>>>       |-<<<NULL>>>       |-RecoveryExpr 0x14a128338 <line:3:10> '<dependent type>' contains-errors lvalue       |-BinaryOperator 0x14a1283e0 <col:15, col:25> '<dependent type>' contains-errors '='       | |-RecoveryExpr 0x14a128358 <col:15> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x14a128398 <col:20, col:25> '<dependent type>' contains-errors lvalue ->next_local       |   `-RecoveryExpr 0x14a128378 <col:20> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14a808cc8 <line:4:3, line:15:3>         |-IfStmt 0x14a8088d0 <line:5:5, line:9:5>         | |-BinaryOperator 0x14a128500 <line:5:9, col:31> 'int' contains-errors '&&'         | | |-CXXDependentScopeMemberExpr 0x14a128420 <col:9, col:14> '<dependent type>' contains-errors lvalue ->on_expr         | | | `-RecoveryExpr 0x14a128400 <col:9> '<dependent type>' contains-errors lvalue         | | `-UnaryOperator 0x14a1284e8 <col:25, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow         | |   `-ImplicitCastExpr 0x14a1284d0 <col:26, col:31> '<dependent type>' contains-errors <LValueToRValue>         | |     `-CXXDependentScopeMemberExpr 0x14a128488 <col:26, col:31> '<dependent type>' contains-errors lvalue ->prep_on_expr         | |       `-RecoveryExpr 0x14a128468 <col:26> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x14a8088b0 <line:6:5, line:9:5>         |   |-CallExpr 0x14a1286b0 <line:7:7, col:74> '<dependent type>' contains-errors         |   | |-CXXDependentScopeMemberExpr 0x14a128568 <col:7, col:12> '<dependent type>' contains-errors lvalue ->check_and_register_item_tree         |   | | `-RecoveryExpr 0x14a128540 <col:7> '<dependent type>' contains-errors lvalue         |   | |   `-DeclRefExpr 0x14a128520 <col:7> 'int *' lvalue ParmVar 0x14a128128 'thd' 'int *'         |   | |-UnaryOperator 0x14a128618 <col:41, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow         |   | | `-CXXDependentScopeMemberExpr 0x14a1285d0 <col:42, col:47> '<dependent type>' contains-errors lvalue ->prep_on_expr         |   | |   `-RecoveryExpr 0x14a1285b0 <col:42> '<dependent type>' contains-errors lvalue         |   | `-UnaryOperator 0x14a128698 <col:61, col:67> '<dependent type>' contains-errors prefix '&' cannot overflow         |   |   `-CXXDependentScopeMemberExpr 0x14a128650 <col:62, col:67> '<dependent type>' contains-errors lvalue ->on_expr         |   |     `-RecoveryExpr 0x14a128630 <col:62> '<dependent type>' contains-errors lvalue         |   `-BinaryOperator 0x14a808890 <line:8:7, col:59> '<dependent type>' contains-errors '='         |     |-CXXDependentScopeMemberExpr 0x14a128728 <col:7, col:12> '<dependent type>' contains-errors lvalue ->on_expr         |     | `-RecoveryExpr 0x14a128700 <col:7> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x14a1286e0 <col:7> 'int *' lvalue ParmVar 0x14a1281a8 'tbl' 'int *'         |     `-CallExpr 0x14a808868 <col:21, col:59> '<dependent type>' contains-errors         |       |-CXXDependentScopeMemberExpr 0x14a808800 <col:21, col:35> '<dependent type>' contains-errors lvalue ->copy_andor_structure         |       | `-CXXDependentScopeMemberExpr 0x14a128790 <col:21, col:26> '<dependent type>' contains-errors lvalue ->on_expr         |       |   `-RecoveryExpr 0x14a128770 <col:21> '<dependent type>' contains-errors lvalue         |       `-RecoveryExpr 0x14a808848 <col:56> '<dependent type>' contains-errors lvalue         `-IfStmt 0x14a808ca8 <line:10:5, line:14:5>           |-BinaryOperator 0x14a808a00 <line:10:9, col:61> 'int' contains-errors '&&'           | |-CallExpr 0x14a808958 <col:9, col:33> '<dependent type>' contains-errors           | | `-CXXDependentScopeMemberExpr 0x14a808910 <col:9, col:14> '<dependent type>' contains-errors lvalue ->is_view_or_derived           | |   `-RecoveryExpr 0x14a8088f0 <col:9> '<dependent type>' contains-errors lvalue           | `-CallExpr 0x14a8089e0 <col:38, col:61> '<dependent type>' contains-errors           |   `-CXXDependentScopeMemberExpr 0x14a808998 <col:38, col:43> '<dependent type>' contains-errors lvalue ->is_merged_derived           |     `-RecoveryExpr 0x14a808978 <col:38> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x14a808c90 <line:11:5, line:14:5>             `-CallExpr 0x14a808c60 <line:13:7, col:64> '<dependent type>' contains-errors               |-RecoveryExpr 0x14a808ae0 <col:7> '<dependent type>' contains-errors lvalue               | `-DeclRefExpr 0x14a808ac0 <col:7> 'void (int *, int *)' Function 0x14a128280 'fix_prepare_info_in_table_list' 'void (int *, int *)'               |-RecoveryExpr 0x14a808b08 <col:38> '<dependent type>' contains-errors lvalue               `-CallExpr 0x14a808c40 <col:43, col:63> '<dependent type>' contains-errors                 `-CXXDependentScopeMemberExpr 0x14a808bf8 <col:43, col:48> '<dependent type>' contains-errors lvalue ->get_table_list                   `-RecoveryExpr 0x14a808bd8 <col:43> '<dependent type>' contains-errors lvalue ","19603":"`-FunctionDecl 0x126128238  line:1:12 getStrrtokenPos 'int (char *, int)' static   |-ParmVarDecl 0x1261280d8 <col:28, col:34> col:34 used str 'char *'   |-ParmVarDecl 0x126128158 <col:39, col:43> col:43 used savedPos 'int'   `-CompoundStmt 0x126141e88 <line:2:1, line:23:1>     |-DeclStmt 0x1261283f0 <line:3:2, col:16>     | `-VarDecl 0x126128350 <col:2, col:15> col:6 used result 'int' cinit     |   `-UnaryOperator 0x1261283d8 <col:14, col:15> 'int' prefix '-'     |     `-IntegerLiteral 0x1261283b8 <col:15> 'int' 1     |-DeclStmt 0x126128488 <line:4:2, col:7>     | `-VarDecl 0x126128420 <col:2, col:6> col:6 used i 'int'     |-ForStmt 0x126141ce0 <line:6:2, line:17:2>     | |-BinaryOperator 0x126128538 <line:6:6, col:17> 'int' '='     | | |-DeclRefExpr 0x1261284a0 <col:6> 'int' lvalue Var 0x126128420 'i' 'int'     | | `-BinaryOperator 0x126128518 <col:8, col:17> 'int' '-'     | |   |-ImplicitCastExpr 0x126128500 <col:8> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x1261284c0 <col:8> 'int' lvalue ParmVar 0x126128158 'savedPos' 'int'     | |   `-IntegerLiteral 0x1261284e0 <col:17> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x1261285b0 <col:20, col:23> 'int' '>='     | | |-ImplicitCastExpr 0x126128598 <col:20> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x126128558 <col:20> 'int' lvalue Var 0x126128420 'i' 'int'     | | `-IntegerLiteral 0x126128578 <col:23> 'int' 0     | |-UnaryOperator 0x1261285f0 <col:26, col:27> 'int' postfix '--'     | | `-DeclRefExpr 0x1261285d0 <col:26> 'int' lvalue Var 0x126128420 'i' 'int'     | `-CompoundStmt 0x126141cc8 <col:31, line:17:2>     |   `-IfStmt 0x126141ca8 <line:7:3, line:16:3>     |     |-CallExpr 0x126141868 <line:7:6, col:28> 'int'     |     | |-ImplicitCastExpr 0x126141850 <col:6> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x126128730 <col:6> 'int ()' Function 0x126128678 'isIDSeparator' 'int ()'     |     | `-ImplicitCastExpr 0x1261418a8 <col:20, col:27> 'int' <IntegralCast>     |     |   `-ImplicitCastExpr 0x126141890 <col:20, col:27> 'char' <LValueToRValue>     |     |     `-UnaryOperator 0x126141800 <col:20, col:27> 'char' lvalue prefix '*' cannot overflow     |     |       `-ParenExpr 0x1261287e0 <col:21, col:27> 'char *'     |     |         `-BinaryOperator 0x1261287c0 <col:22, col:26> 'char *' '+'     |     |           |-ImplicitCastExpr 0x126128790 <col:22> 'char *' <LValueToRValue>     |     |           | `-DeclRefExpr 0x126128750 <col:22> 'char *' lvalue ParmVar 0x1261280d8 'str' 'char *'     |     |           `-ImplicitCastExpr 0x1261287a8 <col:26> 'int' <LValueToRValue>     |     |             `-DeclRefExpr 0x126128770 <col:26> 'int' lvalue Var 0x126128420 'i' 'int'     |     `-CompoundStmt 0x126141c88 <col:31, line:16:3>     |       |-IfStmt 0x126141c50 <line:9:4, line:14:4> has_else     |       | |-BinaryOperator 0x126141ad0 <line:9:7, col:39> 'int' '&&'     |       | | |-BinaryOperator 0x126141918 <col:7, col:10> 'int' '>='     |       | | | |-ImplicitCastExpr 0x126141900 <col:7> 'int' <LValueToRValue>     |       | | | | `-DeclRefExpr 0x1261418c0 <col:7> 'int' lvalue Var 0x126128420 'i' 'int'     |       | | | `-IntegerLiteral 0x1261418e0 <col:10> 'int' 2     |       | | `-CallExpr 0x126141a78 <col:15, col:39> 'int'     |       | |   |-ImplicitCastExpr 0x126141a60 <col:15> 'int (*)()' <FunctionToPointerDecay>     |       | |   | `-DeclRefExpr 0x126141938 <col:15> 'int ()' Function 0x126128678 'isIDSeparator' 'int ()'     |       | |   `-ImplicitCastExpr 0x126141ab8 <col:29, col:38> 'int' <IntegralCast>     |       | |     `-ImplicitCastExpr 0x126141aa0 <col:29, col:38> 'char' <LValueToRValue>     |       | |       `-UnaryOperator 0x126141a48 <col:29, col:38> 'char' lvalue prefix '*' cannot overflow     |       | |         `-ParenExpr 0x126141a28 <col:30, col:38> 'char *'     |       | |           `-BinaryOperator 0x126141a08 <col:31, col:37> 'char *' '-'     |       | |             |-BinaryOperator 0x1261419c8 <col:31, col:35> 'char *' '+'     |       | |             | |-ImplicitCastExpr 0x126141998 <col:31> 'char *' <LValueToRValue>     |       | |             | | `-DeclRefExpr 0x126141958 <col:31> 'char *' lvalue ParmVar 0x1261280d8 'str' 'char *'     |       | |             | `-ImplicitCastExpr 0x1261419b0 <col:35> 'int' <LValueToRValue>     |       | |             |   `-DeclRefExpr 0x126141978 <col:35> 'int' lvalue Var 0x126128420 'i' 'int'     |       | |             `-IntegerLiteral 0x1261419e8 <col:37> 'int' 2     |       | |-CompoundStmt 0x126141ba8 <col:42, line:12:4>     |       | | `-BinaryOperator 0x126141b88 <line:11:5, col:16> 'int' '='     |       | |   |-DeclRefExpr 0x126141af0 <col:5> 'int' lvalue Var 0x126128350 'result' 'int'     |       | |   `-BinaryOperator 0x126141b68 <col:14, col:16> 'int' '-'     |       | |     |-ImplicitCastExpr 0x126141b50 <col:14> 'int' <LValueToRValue>     |       | |     | `-DeclRefExpr 0x126141b10 <col:14> 'int' lvalue Var 0x126128420 'i' 'int'     |       | |     `-IntegerLiteral 0x126141b30 <col:16> 'int' 2     |       | `-CompoundStmt 0x126141c38 <line:12:11, line:14:4>     |       |   `-BinaryOperator 0x126141c18 <line:13:5, col:14> 'int' '='     |       |     |-DeclRefExpr 0x126141bc0 <col:5> 'int' lvalue Var 0x126128350 'result' 'int'     |       |     `-ImplicitCastExpr 0x126141c00 <col:14> 'int' <LValueToRValue>     |       |       `-DeclRefExpr 0x126141be0 <col:14> 'int' lvalue Var 0x126128420 'i' 'int'     |       `-BreakStmt 0x126141c80 <line:15:4>     |-IfStmt 0x126141e20 <line:18:2, line:21:2>     | |-BinaryOperator 0x126141d70 <line:18:5, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x126141d58 <col:5> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x126141d18 <col:5> 'int' lvalue Var 0x126128350 'result' 'int'     | | `-IntegerLiteral 0x126141d38 <col:14> 'int' 1     | `-CompoundStmt 0x126141e08 <col:16, line:21:2>     |   `-BinaryOperator 0x126141de8 <line:20:3, col:12> 'int' '='     |     |-DeclRefExpr 0x126141d90 <col:3> 'int' lvalue Var 0x126128350 'result' 'int'     |     `-UnaryOperator 0x126141dd0 <col:11, col:12> 'int' prefix '-'     |       `-IntegerLiteral 0x126141db0 <col:12> 'int' 1     `-ReturnStmt 0x126141e78 <line:22:2, col:9>       `-ImplicitCastExpr 0x126141e60 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x126141e40 <col:9> 'int' lvalue Var 0x126128350 'result' 'int' ","19444":"`-FunctionDecl 0x15b928758  line:1:12 handle_invalid_op 'int (struct kvm_vcpu *)' static   |-ParmVarDecl 0x15b928648 <col:30, col:47> col:47 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x15c008488 <line:2:1, line:5:1>     |-CallExpr 0x15c008428 <line:3:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c008380 <col:2> 'int ()' Function 0x15c0082c8 'kvm_queue_exception' 'int ()'     | |-DeclRefExpr 0x15c0083a0 <col:22> 'struct kvm_vcpu *' lvalue ParmVar 0x15b928648 'vcpu' 'struct kvm_vcpu *'     | `-RecoveryExpr 0x15c008408 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x15c008478 <line:4:2, col:9>       `-IntegerLiteral 0x15c008458 <col:9> 'int' 1 ","19226":"`-FunctionDecl 0x14f928310  line:1:13 invalid tcp_chr_update_read_handler 'void (int *, int *, int)' static   |-ParmVarDecl 0x14f928128 <col:41, col:58> col:58 referenced invalid chr 'int *'   |-ParmVarDecl 0x14f9281a8 <line:2:41, col:55> col:55 invalid context 'int *'   |-ParmVarDecl 0x14f928228 <line:3:41, col:45> col:45 tag 'int'   `-CompoundStmt 0x14f941c78 <line:4:1, line:18:1>     |-IfStmt 0x14f9285a0 <line:7:5, line:9:5>     | |-UnaryOperator 0x14f928560 <line:7:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14f928548 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x14f928500 <col:10, col:13> '<dependent type>' contains-errors lvalue ->connected     | |     `-RecoveryExpr 0x14f9284e0 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14f928588 <col:24, line:9:5>     |   `-ReturnStmt 0x14f928578 <line:8:9>     |-CallExpr 0x14f928760 <line:11:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f928720 <col:5> 'int ()' Function 0x14f928668 'remove_fd_in_watch' 'int ()'     | `-RecoveryExpr 0x14f928740 <col:24> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14f941c58 <line:12:5, line:17:5>       |-CXXDependentScopeMemberExpr 0x14f941820 <line:12:9, col:12> '<dependent type>' contains-errors lvalue ->ioc       | `-RecoveryExpr 0x14f941800 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14f941c40 <col:17, line:17:5>         `-BinaryOperator 0x14f941c20 <line:13:9, line:16:51> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x14f9418b0 <line:13:9, col:14> '<dependent type>' contains-errors lvalue ->fd_in_tag           | `-RecoveryExpr 0x14f941888 <col:9> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x14f941868 <col:9> 'int *' lvalue ParmVar 0x14f928128 'chr' 'int *'           `-CallExpr 0x14f941bd8 <col:26, line:16:51> '<dependent type>' contains-errors             |-DeclRefExpr 0x14f9419d8 <line:13:26> 'int ()' Function 0x14f941920 'io_add_watch_poll' 'int ()'             |-CXXDependentScopeMemberExpr 0x14f941b50 <col:44, col:47> '<dependent type>' contains-errors lvalue ->ioc             | `-RecoveryExpr 0x14f941b30 <col:44> '<dependent type>' contains-errors lvalue             |-RecoveryExpr 0x14f941b98 <line:14:44> '<dependent type>' contains-errors lvalue             |-RecoveryExpr 0x14f941bb8 <line:15:44> '<dependent type>' contains-errors lvalue             |-RecoveryExpr 0x14f941a88 <col:58> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x14f941aa8 <line:16:44> '<dependent type>' contains-errors lvalue ","19199":"`-FunctionDecl 0x141860400  line:1:13 invalid tcp_undo_cwnd_reduction 'void (struct sock *, int)' static   |-ParmVarDecl 0x141847248 <col:37, col:50> col:50 used sk 'struct sock *'   |-ParmVarDecl 0x1418472e0 <col:54, col:59> col:59 invalid unmark_loss 'int'   `-CompoundStmt 0x141863240 <line:2:1, line:34:1>     |-DeclStmt 0x1418608e8 <line:3:2, col:34>     | |-RecordDecl 0x1418604b8 <col:2, col:9> col:9 struct tcp_sock     | `-VarDecl 0x141860628 <col:2, col:33> col:19 used tp 'struct tcp_sock *' cinit     |   `-ImplicitCastExpr 0x1418608b8 <col:24, col:33> 'struct tcp_sock *' <IntegralToPointer>     |     `-CallExpr 0x141860878 <col:24, col:33> 'int'     |       |-ImplicitCastExpr 0x141860860 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1418607f0 <col:24> 'int ()' Function 0x141860738 'tcp_sk' 'int ()'     |       `-ImplicitCastExpr 0x1418608a0 <col:31> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x141860810 <col:31> 'struct sock *' lvalue ParmVar 0x141847248 'sk' 'struct sock *'     |-IfStmt 0x1418622b0 <line:5:2, line:15:2>     | |-RecoveryExpr 0x141860900 <line:5:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141862278 <col:19, line:15:2>     |   |-DeclStmt 0x141860b08 <line:6:3, col:22>     |   | |-RecordDecl 0x141860920 <col:3, col:10> col:10 struct sk_buff     |   | `-VarDecl 0x141860a88 <col:3, col:19> col:19 used skb 'struct sk_buff *'     |   |-CallExpr 0x141860c78 <line:8:3, col:30> 'int'     |   | |-ImplicitCastExpr 0x141860c60 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x141860c00 <col:3> 'int ()' Function 0x141860b48 'tcp_for_write_queue' 'int ()'     |   | |-ImplicitCastExpr 0x141860ca8 <col:23> 'struct sk_buff *' <LValueToRValue>     |   | | `-DeclRefExpr 0x141860c20 <col:23> 'struct sk_buff *' lvalue Var 0x141860a88 'skb' 'struct sk_buff *'     |   | `-ImplicitCastExpr 0x141860cc0 <col:28> 'struct sock *' <LValueToRValue>     |   |   `-DeclRefExpr 0x141860c40 <col:28> 'struct sock *' lvalue ParmVar 0x141847248 'sk' 'struct sock *'     |   |-CompoundStmt 0x141861230 <col:32, line:12:3>     |   | `-CompoundAssignOperator 0x141861200 <line:11:4, col:32> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |   |-RecoveryExpr 0x141861188 <col:4, col:21> '<dependent type>' contains-errors lvalue     |   |   | `-CallExpr 0x141861148 <col:4, col:18> 'int'     |   |   |   |-ImplicitCastExpr 0x141861130 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x141860fa0 <col:4> 'int ()' Function 0x141860ee8 'TCP_SKB_CB' 'int ()'     |   |   |   `-ImplicitCastExpr 0x141861170 <col:15> 'struct sk_buff *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x141860fc0 <col:15> 'struct sk_buff *' lvalue Var 0x141860a88 'skb' 'struct sk_buff *'     |   |   `-UnaryOperator 0x1418611e8 <col:31, col:32> '<dependent type>' contains-errors prefix '~' cannot overflow     |   |     `-ImplicitCastExpr 0x1418611d0 <col:32> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x1418611b0 <col:32> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1418612c8 <line:13:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x141861280 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x141861248 <col:3> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     |   | `-IntegerLiteral 0x1418612a8 <col:18> 'int' 0     |   `-CallExpr 0x141862238 <line:14:3, col:33> 'int'     |     |-ImplicitCastExpr 0x141862220 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1418613c8 <col:3> 'int ()' Function 0x141861310 'tcp_clear_all_retrans_hints' 'int ()'     |     `-ImplicitCastExpr 0x141862260 <col:31> 'struct tcp_sock *' <LValueToRValue>     |       `-DeclRefExpr 0x141862200 <col:31> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     |-IfStmt 0x141863100 <line:17:2, line:31:2> has_else     | |-RecoveryExpr 0x141862308 <line:17:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1418622d0 <col:6> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |-CompoundStmt 0x141862f30 <col:26, line:29:2>     | | |-DeclStmt 0x1418626a8 <line:18:3, col:57>     | | | |-RecordDecl 0x141862330 <col:9, col:16> col:16 struct inet_connection_sock     | | | `-VarDecl 0x141862498 <col:3, col:56> col:38 used icsk 'const struct inet_connection_sock *' cinit     | | |   `-ImplicitCastExpr 0x141862678 <col:45, col:56> 'const struct inet_connection_sock *' <IntegralToPointer>     | | |     `-CallExpr 0x141862638 <col:45, col:56> 'int'     | | |       |-ImplicitCastExpr 0x141862620 <col:45> 'int (*)()' <FunctionToPointerDecay>     | | |       | `-DeclRefExpr 0x1418625e0 <col:45> 'int ()' Function 0x141862528 'inet_csk' 'int ()'     | | |       `-ImplicitCastExpr 0x141862660 <col:54> 'struct sock *' <LValueToRValue>     | | |         `-DeclRefExpr 0x141862600 <col:54> 'struct sock *' lvalue ParmVar 0x141847248 'sk' 'struct sock *'     | | |-IfStmt 0x141862b88 <line:20:3, line:23:58> has_else     | | | |-CXXDependentScopeMemberExpr 0x141862720 <line:20:7, col:26> '<dependent type>' contains-errors lvalue ->undo_cwnd     | | | | `-RecoveryExpr 0x1418626f8 <col:7, col:13> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x1418626c0 <col:7> 'const struct inet_connection_sock *' lvalue Var 0x141862498 'icsk' 'const struct inet_connection_sock *'     | | | |-BinaryOperator 0x1418628b8 <line:21:4, col:50> '<dependent type>' contains-errors '='     | | | | |-RecoveryExpr 0x1418627a0 <col:4, col:8> '<dependent type>' contains-errors lvalue     | | | | | `-DeclRefExpr 0x141862768 <col:4> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | | | | `-CallExpr 0x141862890 <col:19, col:50> '<dependent type>' contains-errors     | | | |   |-CXXDependentScopeMemberExpr 0x141862828 <col:19, col:38> '<dependent type>' contains-errors lvalue ->undo_cwnd     | | | |   | `-RecoveryExpr 0x141862800 <col:19, col:25> '<dependent type>' contains-errors lvalue     | | | |   |   `-DeclRefExpr 0x1418627c8 <col:19> 'const struct inet_connection_sock *' lvalue Var 0x141862498 'icsk' 'const struct inet_connection_sock *'     | | | |   `-DeclRefExpr 0x141862870 <col:48> 'struct sock *' lvalue ParmVar 0x141847248 'sk' 'struct sock *'     | | | `-BinaryOperator 0x141862b68 <line:23:4, col:58> '<dependent type>' contains-errors '='     | | |   |-RecoveryExpr 0x141862910 <col:4, col:8> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x1418628d8 <col:4> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | | |   `-CallExpr 0x141862b38 <col:19, col:58> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x141862a18 <col:19> 'int ()' Function 0x141862960 'max' 'int ()'     | | |     |-RecoveryExpr 0x141862a70 <col:23, col:27> '<dependent type>' contains-errors lvalue     | | |     | `-DeclRefExpr 0x141862a38 <col:23> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | | |     `-BinaryOperator 0x141862b18 <col:37, col:57> '<dependent type>' contains-errors '<<'     | | |       |-RecoveryExpr 0x141862ad0 <col:37, col:41> '<dependent type>' contains-errors lvalue     | | |       | `-DeclRefExpr 0x141862a98 <col:37> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | | |       `-IntegerLiteral 0x141862af8 <col:57> 'int' 1     | | `-IfStmt 0x141862f10 <line:25:3, line:28:3>     | |   |-BinaryOperator 0x141862c78 <line:25:7, col:32> 'int' contains-errors '>'     | |   | |-RecoveryExpr 0x141862bf0 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |   | | `-DeclRefExpr 0x141862bb8 <col:7> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |   | `-RecoveryExpr 0x141862c50 <col:28, col:32> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x141862c18 <col:28> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |   `-CompoundStmt 0x141862ef0 <col:46, line:28:3>     | |     |-BinaryOperator 0x141862d58 <line:26:4, col:27> '<dependent type>' contains-errors '='     | |     | |-RecoveryExpr 0x141862cd0 <col:4, col:8> '<dependent type>' contains-errors lvalue     | |     | | `-DeclRefExpr 0x141862c98 <col:4> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |     | `-RecoveryExpr 0x141862d30 <col:23, col:27> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x141862cf8 <col:23> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | |     `-CallExpr 0x141862eb0 <line:27:4, col:27> 'int'     | |       |-ImplicitCastExpr 0x141862e98 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x141862e58 <col:4> 'int ()' Function 0x141862da0 'tcp_ecn_withdraw_cwr' 'int ()'     | |       `-ImplicitCastExpr 0x141862ed8 <col:25> 'struct tcp_sock *' <LValueToRValue>     | |         `-DeclRefExpr 0x141862e78 <col:25> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     | `-CompoundStmt 0x1418630e8 <line:29:9, line:31:2>     |   `-BinaryOperator 0x1418630c8 <line:30:3, col:52> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x141862f90 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x141862f58 <col:3> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     |     `-CallExpr 0x141863098 <col:18, col:52> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x141862fb8 <col:18> 'int ()' Function 0x141862960 'max' 'int ()'     |       |-RecoveryExpr 0x141863010 <col:22, col:26> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x141862fd8 <col:22> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     |       `-RecoveryExpr 0x141863070 <col:36, col:40> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x141863038 <col:36> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'     `-BinaryOperator 0x141863220 <line:33:2, col:20> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x1418631c8 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x141863190 <col:2> 'struct tcp_sock *' lvalue Var 0x141860628 'tp' 'struct tcp_sock *'       `-IntegerLiteral 0x141863200 <col:20> 'int' 0 ","19497":"`-FunctionDecl 0x13b0266b8  line:1:19 dcn20_hwseq_create 'struct dce_hwseq *(struct dc_context *)'   |-ParmVarDecl 0x13b00e2e8 <line:2:2, col:21> col:21 used ctx 'struct dc_context *'   `-CompoundStmt 0x13b026ec8 <line:3:1, line:13:1>     |-DeclStmt 0x13b026a28 <line:4:2, col:71>     | `-VarDecl 0x13b026838 <col:2, col:20> col:20 used hws 'struct dce_hwseq *'     |-IfStmt 0x13b026e60 <line:6:2, line:11:2>     | |-ImplicitCastExpr 0x13b026a60 <line:6:6> 'struct dce_hwseq *' <LValueToRValue>     | | `-DeclRefExpr 0x13b026a40 <col:6> 'struct dce_hwseq *' lvalue Var 0x13b026838 'hws' 'struct dce_hwseq *'     | `-CompoundStmt 0x13b026e30 <col:11, line:11:2>     |   |-BinaryOperator 0x13b026af8 <line:7:3, col:14> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13b026ab0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13b026a78 <col:3> 'struct dce_hwseq *' lvalue Var 0x13b026838 'hws' 'struct dce_hwseq *'     |   | `-DeclRefExpr 0x13b026ad8 <col:14> 'struct dc_context *' lvalue ParmVar 0x13b00e2e8 'ctx' 'struct dc_context *'     |   |-BinaryOperator 0x13b026c00 <line:8:3, col:16> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13b026b50 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13b026b18 <col:3> 'struct dce_hwseq *' lvalue Var 0x13b026838 'hws' 'struct dce_hwseq *'     |   | `-UnaryOperator 0x13b026be8 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x13b026bc8 <col:16> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x13b026d08 <line:9:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x13b026c58 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13b026c20 <col:3> 'struct dce_hwseq *' lvalue Var 0x13b026838 'hws' 'struct dce_hwseq *'     |   | `-UnaryOperator 0x13b026cf0 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x13b026cd0 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x13b026e10 <line:10:3, col:17> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x13b026d60 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13b026d28 <col:3> 'struct dce_hwseq *' lvalue Var 0x13b026838 'hws' 'struct dce_hwseq *'     |     `-UnaryOperator 0x13b026df8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x13b026dd8 <col:17> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13b026eb8 <line:12:2, col:9>       `-ImplicitCastExpr 0x13b026ea0 <col:9> 'struct dce_hwseq *' <LValueToRValue>         `-DeclRefExpr 0x13b026e80 <col:9> 'struct dce_hwseq *' lvalue Var 0x13b026838 'hws' 'struct dce_hwseq *' ","20090":"`-FunctionDecl 0x141115638  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x141115558 <col:8> col:8 AccessControlTest 'int'   |-ParmVarDecl 0x1411154d8 <col:27> col:27 validate_topic_access_ok_no_partitions 'int'   `-CompoundStmt 0x14112e400 <line:2:1, line:14:1>     |-CallExpr 0x141115940 <line:6:5, col:80> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1411158c0 <col:5> 'int ()' Function 0x141115808 'fill_subscriber_participant_security_attributes' 'int ()'     | `-RecoveryExpr 0x141115920 <col:53> '<dependent type>' contains-errors lvalue     |-CallExpr 0x141115b08 <line:7:5, col:61> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141115a48 <col:5> 'int ()' Function 0x141115990 'check_local_datareader' 'int ()'     | |-RecoveryExpr 0x141115ac8 <col:28> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x141115ae8 <col:57> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14112df78 <line:8:5, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14112deb8 <col:5> 'int ()' Function 0x14112de00 'check_remote_datareader' 'int ()'     | |-RecoveryExpr 0x14112df38 <col:29> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14112df58 <col:58> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14112e108 <line:11:5, col:78> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14112e088 <col:5> 'int ()' Function 0x14112dfd0 'fill_publisher_participant_security_attributes' 'int ()'     | `-RecoveryExpr 0x14112e0e8 <col:52> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14112e2d0 <line:12:5, col:60> '<dependent type>' contains-errors       |-DeclRefExpr 0x14112e210 <col:5> 'int ()' Function 0x14112e158 'check_local_datawriter' 'int ()'       |-RecoveryExpr 0x14112e290 <col:28> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14112e2b0 <col:56> '<dependent type>' contains-errors lvalue ","19853":"`-FunctionDecl 0x14d0288d0  col:9 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x14d0289d0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14d028a38 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x14d028978 <<invalid sloc>> Implicit 893 ","19747":"`-FunctionDecl 0x144945b48  line:1:10 invalid psi_trigger_poll 'int (void **, struct file *, int *)'   |-ParmVarDecl 0x144928128 <col:27, col:34> col:34 used trigger_ptr 'void **'   |-ParmVarDecl 0x144928718 <line:2:5, col:18> col:18 used file 'struct file *'   |-ParmVarDecl 0x144945a00 <col:24, col:36> col:36 invalid wait 'int *'   `-CompoundStmt 0x145009198 <line:3:1, line:29:1>     |-DeclStmt 0x144945df8 <line:5:2, col:23>     | |-RecordDecl 0x144945c08 <col:2, col:9> col:9 struct psi_trigger     | `-VarDecl 0x144945d78 <col:2, col:22> col:22 used t 'struct psi_trigger *'     |-IfStmt 0x144946180 <line:7:2, line:8:40>     | |-CallExpr 0x144946020 <line:7:6, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x144945f70 <col:6> 'int ()' Function 0x144945eb8 'static_branch_likely' 'int ()'     | | `-UnaryOperator 0x144946008 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x144945fe8 <col:28> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x144946170 <line:8:3, col:40>     |   `-BinaryOperator 0x144946150 <col:10, col:40> '<dependent type>' contains-errors '|'     |     |-BinaryOperator 0x144946110 <col:10, col:29> '<dependent type>' contains-errors '|'     |     | |-RecoveryExpr 0x1449460d0 <col:10> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x1449460f0 <col:29> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x144946130 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1449462e8 <line:10:2, col:16> 'int'     | `-ImplicitCastExpr 0x1449462d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x144946280 <col:2> 'int ()' Function 0x1449461c8 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x1449464e8 <line:12:2, col:57> 'struct psi_trigger *' contains-errors '='     | |-DeclRefExpr 0x144946308 <col:2> 'struct psi_trigger *' lvalue Var 0x144945d78 't' 'struct psi_trigger *'     | `-CallExpr 0x1449464c0 <col:6, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144946408 <col:6> 'int ()' Function 0x144946350 'rcu_dereference' 'int ()'     |   `-RecoveryExpr 0x144946498 <col:22, col:46> '<dependent type>' contains-errors lvalue     |     `-CStyleCastExpr 0x144946470 <col:23, col:46> 'void' <ToVoid>     |       `-ImplicitCastExpr 0x144946458 <col:46> 'void **' <LValueToRValue> part_of_explicit_cast     |         `-DeclRefExpr 0x144946428 <col:46> 'void **' lvalue ParmVar 0x144928128 'trigger_ptr' 'void **'     |-IfStmt 0x1449467e8 <line:13:2, line:16:2>     | |-UnaryOperator 0x144946540 <line:13:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x144946528 <col:7> 'struct psi_trigger *' <LValueToRValue>     | |   `-DeclRefExpr 0x144946508 <col:7> 'struct psi_trigger *' lvalue Var 0x144945d78 't' 'struct psi_trigger *'     | `-CompoundStmt 0x1449467c8 <col:10, line:16:2>     |   |-CallExpr 0x144946670 <line:14:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x144946658 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x144946638 <col:3> 'int ()' Function 0x144946580 'rcu_read_unlock' 'int ()'     |   `-ReturnStmt 0x1449467b8 <line:15:3, col:40>     |     `-BinaryOperator 0x144946798 <col:10, col:40> '<dependent type>' contains-errors '|'     |       |-BinaryOperator 0x144946758 <col:10, col:29> '<dependent type>' contains-errors '|'     |       | |-RecoveryExpr 0x144946718 <col:10> '<dependent type>' contains-errors lvalue     |       | `-RecoveryExpr 0x144946738 <col:29> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x144946778 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x144946980 <line:17:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1449468e8 <col:2> 'int ()' Function 0x144946830 'kref_get' 'int ()'     | `-UnaryOperator 0x144946968 <col:11, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x144946940 <col:12, col:15> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x144946908 <col:12> 'struct psi_trigger *' lvalue Var 0x144945d78 't' 'struct psi_trigger *'     |-CallExpr 0x1449469e0 <line:19:2, col:18> 'int'     | `-ImplicitCastExpr 0x1449469c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1449469a8 <col:2> 'int ()' Function 0x144946580 'rcu_read_unlock' 'int ()'     `-CallExpr 0x145008db8 <line:21:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x145008ce0 <col:2> 'int ()' Function 0x145008c28 'poll_wait' 'int ()'       |-DeclRefExpr 0x145008d00 <col:12> 'struct file *' lvalue ParmVar 0x144928718 'file' 'struct file *'       |-UnaryOperator 0x145008d80 <col:18, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x145008d58 <col:19, col:22> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x145008d20 <col:19> 'struct psi_trigger *' lvalue Var 0x144945d78 't' 'struct psi_trigger *'       `-RecoveryExpr 0x145008d98 <col:34> '<dependent type>' contains-errors lvalue ","19172":"`-FunctionDecl 0x12380e188  line:1:12 invalid syscall_authenc_enc_final 'int (unsigned long, const void *, int, void *, int *, void *, int *)'   |-ParmVarDecl 0x12380dcf0 <col:38, col:52> col:52 used state 'unsigned long'   |-ParmVarDecl 0x12380dda8 <line:2:4, col:16> col:16 used src_data 'const void *'   |-ParmVarDecl 0x12380de28 <col:26, col:33> col:33 invalid src_len 'int'   |-ParmVarDecl 0x12380dea8 <col:42, col:48> col:48 used dst_data 'void *'   |-ParmVarDecl 0x12380df58 <line:3:4, col:14> col:14 invalid dst_len 'int *'   |-ParmVarDecl 0x12380dfd8 <col:23, col:29> col:29 used tag 'void *'   |-ParmVarDecl 0x12380e058 <col:34, col:44> col:44 invalid tag_len 'int *'   `-CompoundStmt 0x123124178 <line:4:1, line:84:1>     |-DeclStmt 0x123827480 <line:6:2, col:27>     | |-RecordDecl 0x12380e268 <col:2, col:9> col:9 struct tee_cryp_state     | `-VarDecl 0x123827400 <col:2, col:25> col:25 used cs 'struct tee_cryp_state *'     |-DeclStmt 0x123827688 <line:7:2, col:29>     | |-RecordDecl 0x123827498 <col:2, col:9> col:9 struct tee_ta_session     | `-VarDecl 0x123827608 <col:2, col:25> col:25 used sess 'struct tee_ta_session *'     |-RecoveryExpr 0x123827780 <line:8:2, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x123827760 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x123827740 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1238276d8 <col:16> 'int' 0     |-RecoveryExpr 0x123827890 <line:9:2, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x123827870 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x123827850 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1238277e8 <col:16> 'int' 0     |-IfStmt 0x123827c48 <line:12:2, line:13:10>     | |-BinaryOperator 0x123827be0 <line:12:6, col:13> 'int' contains-errors '!='     | | |-RecoveryExpr 0x123827ba0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x123827bc0 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x123827c38 <line:13:3, col:10>     |   `-RecoveryExpr 0x123827c18 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123123a58 <line:32:2, line:46:2> has_else     | |-UnaryOperator 0x1231237d8 <line:32:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1231237c0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1231237a0 <col:7> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x123123810 <col:16, line:34:2>     | `-CompoundStmt 0x123123a48 <col:9, line:46:2>     |-IfStmt 0x123123b48 <line:48:2, line:51:2>     | |-RecoveryExpr 0x123123aa8 <line:48:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x123123b30 <col:22, line:51:2>     |   `-GotoStmt 0x123123b18 <line:50:3, col:8> 'out' 0x123123ac8     `-LabelStmt 0x123124158 <line:68:1, line:81:2> 'out'       `-IfStmt 0x123124138 <line:69:2, line:81:2>         |-RecoveryExpr 0x123123ef0 <line:69:6, col:35> '_Bool' contains-errors         `-CompoundStmt 0x123124120 <col:59, line:81:2>           `-IfStmt 0x1231240a0 <line:72:3, line:76:3>             |-RecoveryExpr 0x123123f30 <line:72:7, col:18> '_Bool' contains-errors             `-CompoundStmt 0x123124090 <col:24, line:76:3> ","20071":"`-FunctionDecl 0x12480dd98  line:1:12 hardware_enable 'int (void)' static   `-CompoundStmt 0x124827f68 <line:2:1, line:27:1>     |-DeclStmt 0x12480e0b8 <line:3:2, col:34>     | `-VarDecl 0x12480dea0 <col:2, col:33> col:6 used cpu 'int' cinit     |   `-CallExpr 0x12480e098 <col:12, col:33> 'int'     |     `-ImplicitCastExpr 0x12480e080 <col:12> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x12480e030 <col:12> 'int ()' Function 0x12480df78 'raw_smp_processor_id' 'int ()'     |-DeclStmt 0x12480e150 <line:5:2, col:7>     | `-VarDecl 0x12480e0e8 <col:2, col:6> col:6 used r 'int'     |-IfStmt 0x124827440 <line:7:2, line:8:11>     | |-BinaryOperator 0x12480e368 <line:7:6, col:26> '<dependent type>' contains-errors '&'     | | |-CallExpr 0x12480e328 <col:6, col:22> 'int'     | | | `-ImplicitCastExpr 0x12480e310 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x12480e248 <col:6> 'int ()' Function 0x12480e190 'cr4_read_shadow' 'int ()'     | | `-RecoveryExpr 0x12480e348 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x124827430 <line:8:3, col:11>     |   `-UnaryOperator 0x124827418 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x124827400 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12480e3d0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x124827900 <line:11:2, line:13:11>     | |-BinaryOperator 0x124827838 <line:11:6, line:12:32> 'int' contains-errors '&&'     | | |-CallExpr 0x1248277a0 <line:11:6, col:42> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x124827540 <col:6> 'int ()' Function 0x124827488 'static_branch_unlikely' 'int ()'     | | | `-UnaryOperator 0x124827788 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x124827768 <col:30> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x124827820 <line:12:6, col:32> 'int' prefix '!' cannot overflow     | |   `-CallExpr 0x1248277e0 <col:7, col:32> 'int'     | |     |-ImplicitCastExpr 0x1248277c8 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x124827698 <col:7> 'int ()' Function 0x1248275e0 'hv_get_vp_assist_page' 'int ()'     | |     `-ImplicitCastExpr 0x124827808 <col:29> 'int' <LValueToRValue>     | |       `-DeclRefExpr 0x1248276b8 <col:29> 'int' lvalue Var 0x12480dea0 'cpu' 'int'     | `-ReturnStmt 0x1248278f0 <line:13:3, col:11>     |   `-UnaryOperator 0x1248278d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1248278c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1248278a0 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x124827a58 <line:15:2, col:23> 'int'     | |-ImplicitCastExpr 0x124827a40 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124827a00 <col:2> 'int ()' Function 0x124827948 'intel_pt_handle_vmx' 'int ()'     | `-IntegerLiteral 0x124827a20 <col:22> 'int' 1     |-BinaryOperator 0x124827c48 <line:17:2, col:29> 'int' contains-errors '='     | |-DeclRefExpr 0x124827a80 <col:2> 'int' lvalue Var 0x12480e0e8 'r' 'int'     | `-CallExpr 0x124827c20 <col:6, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x124827b80 <col:6> 'int ()' Function 0x124827ac8 'kvm_cpu_vmxon' 'int ()'     |   `-RecoveryExpr 0x124827c00 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x124827d88 <line:18:2, line:21:2>     | |-ImplicitCastExpr 0x124827c88 <line:18:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x124827c68 <col:6> 'int' lvalue Var 0x12480e0e8 'r' 'int'     | `-CompoundStmt 0x124827d68 <col:9, line:21:2>     |   |-CallExpr 0x124827cf8 <line:19:3, col:24> 'int'     |   | |-ImplicitCastExpr 0x124827ce0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x124827ca0 <col:3> 'int ()' Function 0x124827948 'intel_pt_handle_vmx' 'int ()'     |   | `-IntegerLiteral 0x124827cc0 <col:23> 'int' 0     |   `-ReturnStmt 0x124827d58 <line:20:3, col:10>     |     `-ImplicitCastExpr 0x124827d40 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x124827d20 <col:10> 'int' lvalue Var 0x12480e0e8 'r' 'int'     |-IfStmt 0x124827f18 <line:23:2, line:24:19>     | |-RecoveryExpr 0x124827dc0 <line:23:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x124827ef8 <line:24:3, col:19> 'int'     |   `-ImplicitCastExpr 0x124827ee0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x124827ec0 <col:3> 'int ()' Function 0x124827e08 'ept_sync_global' 'int ()'     `-ReturnStmt 0x124827f58 <line:26:2, col:9>       `-IntegerLiteral 0x124827f38 <col:9> 'int' 0 ","19548":"`-FunctionDecl 0x13005c480  line:1:13 invalid funcinfo 'void (int *, int *)' static   |-ParmVarDecl 0x13005c328 <col:23, col:34> col:34 referenced invalid ar 'int *'   |-ParmVarDecl 0x13005c3a8 <col:38, col:47> col:47 invalid cl 'int *'   `-CompoundStmt 0x130076ca0 <col:51, line:24:1>     |-IfStmt 0x130076a00 <line:2:3, line:22:3> has_else     | |-CallExpr 0x13005c6d0 <line:2:7, col:22> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13005c690 <col:7> 'int ()' Function 0x13005c5d8 'noLuaClosure' 'int ()'     | | `-RecoveryExpr 0x13005c6b0 <col:20> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x130075d18 <col:25, line:8:3>     | | |-BinaryOperator 0x13005c7f0 <line:3:5, col:18> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x13005c740 <col:5, col:9> '<dependent type>' contains-errors lvalue ->source     | | | | `-RecoveryExpr 0x13005c718 <col:5> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13005c6f8 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | | | `-StringLiteral 0x13005c7d0 <col:18> 'char[4]' lvalue \"STR\"     | | |-BinaryOperator 0x130075a58 <line:4:5, col:26> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x13005c858 <col:5, col:9> '<dependent type>' contains-errors lvalue ->srclen     | | | | `-RecoveryExpr 0x13005c830 <col:5> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x13005c810 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | | | `-CallExpr 0x130075a18 <col:18, col:26> 'int'     | | |   |-ImplicitCastExpr 0x130075a00 <col:18> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x13005c980 <col:18> 'int ()' Function 0x13005c8c8 'LL' 'int ()'     | | |   `-ImplicitCastExpr 0x130075a40 <col:21> 'char *' <ArrayToPointerDecay>     | | |     `-StringLiteral 0x13005c9a0 <col:21> 'char[4]' lvalue \"STR\"     | | |-BinaryOperator 0x130075b40 <line:5:5, col:24> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x130075ac0 <col:5, col:9> '<dependent type>' contains-errors lvalue ->linedefined     | | | | `-RecoveryExpr 0x130075a98 <col:5> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x130075a78 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | | | `-UnaryOperator 0x130075b28 <col:23, col:24> 'int' prefix '-'     | | |   `-IntegerLiteral 0x130075b08 <col:24> 'int' 1     | | |-BinaryOperator 0x130075c28 <line:6:5, col:28> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x130075ba8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->lastlinedefined     | | | | `-RecoveryExpr 0x130075b80 <col:5> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x130075b60 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | | | `-UnaryOperator 0x130075c10 <col:27, col:28> 'int' prefix '-'     | | |   `-IntegerLiteral 0x130075bf0 <col:28> 'int' 1     | | `-BinaryOperator 0x130075cf8 <line:7:5, col:16> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x130075c90 <col:5, col:9> '<dependent type>' contains-errors lvalue ->what     | |   | `-RecoveryExpr 0x130075c68 <col:5> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x130075c48 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     | |   `-StringLiteral 0x130075cd8 <col:16> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x1300769b0 <line:9:8, line:22:3>     |   |-DeclStmt 0x130075e80 <line:10:5, col:29>     |   | `-VarDecl 0x130075d68 <col:5, col:18> col:18 invalid p 'const int *'     |   |-IfStmt 0x1300765d8 <line:11:5, line:18:5> has_else     |   | |-CXXDependentScopeMemberExpr 0x130075eb8 <line:11:9, col:12> '<dependent type>' contains-errors lvalue ->source     |   | | `-RecoveryExpr 0x130075e98 <col:9> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x130076380 <col:20, line:14:5>     |   | | |-BinaryOperator 0x130076120 <line:12:7, col:36> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x130075f48 <col:7, col:11> '<dependent type>' contains-errors lvalue ->source     |   | | | | `-RecoveryExpr 0x130075f20 <col:7> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x130075f00 <col:7> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   | | | `-CallExpr 0x1300760f8 <col:20, col:36> '<dependent type>' contains-errors     |   | | |   |-DeclRefExpr 0x130076070 <col:20> 'int ()' Function 0x130075fb8 'getstr' 'int ()'     |   | | |   `-CXXDependentScopeMemberExpr 0x1300760b0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->source     |   | | |     `-RecoveryExpr 0x130076090 <col:27> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x130076360 <line:13:7, col:36> '<dependent type>' contains-errors '='     |   | |   |-CXXDependentScopeMemberExpr 0x130076188 <col:7, col:11> '<dependent type>' contains-errors lvalue ->srclen     |   | |   | `-RecoveryExpr 0x130076160 <col:7> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x130076140 <col:7> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   | |   `-CallExpr 0x130076338 <col:20, col:36> '<dependent type>' contains-errors     |   | |     |-DeclRefExpr 0x1300762b0 <col:20> 'int ()' Function 0x1300761f8 'tsslen' 'int ()'     |   | |     `-CXXDependentScopeMemberExpr 0x1300762f0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->source     |   | |       `-RecoveryExpr 0x1300762d0 <col:27> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x1300765b8 <line:15:10, line:18:5>     |   |   |-BinaryOperator 0x130076450 <line:16:7, col:20> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x1300763e8 <col:7, col:11> '<dependent type>' contains-errors lvalue ->source     |   |   | | `-RecoveryExpr 0x1300763c0 <col:7> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x1300763a0 <col:7> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   |   | `-StringLiteral 0x130076430 <col:20> 'char[4]' lvalue \"STR\"     |   |   `-BinaryOperator 0x130076598 <line:17:7, col:28> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x1300764b8 <col:7, col:11> '<dependent type>' contains-errors lvalue ->srclen     |   |     | `-RecoveryExpr 0x130076490 <col:7> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x130076470 <col:7> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   |     `-CallExpr 0x130076558 <col:20, col:28> 'int'     |   |       |-ImplicitCastExpr 0x130076540 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x130076500 <col:20> 'int ()' Function 0x13005c8c8 'LL' 'int ()'     |   |       `-ImplicitCastExpr 0x130076580 <col:23> 'char *' <ArrayToPointerDecay>     |   |         `-StringLiteral 0x130076520 <col:23> 'char[4]' lvalue \"STR\"     |   |-BinaryOperator 0x130076700 <line:19:5, col:26> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x130076650 <col:5, col:9> '<dependent type>' contains-errors lvalue ->linedefined     |   | | `-RecoveryExpr 0x130076628 <col:5> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x130076608 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |   | `-CXXDependentScopeMemberExpr 0x1300766b8 <col:23, col:26> '<dependent type>' contains-errors lvalue ->linedefined     |   |   `-RecoveryExpr 0x130076698 <col:23> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x130076818 <line:20:5, col:30> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x130076768 <col:5, col:9> '<dependent type>' contains-errors lvalue ->lastlinedefined     |     | `-RecoveryExpr 0x130076740 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x130076720 <col:5> 'int *' lvalue ParmVar 0x13005c328 'ar' 'int *'     |     `-CXXDependentScopeMemberExpr 0x1300767d0 <col:27, col:30> '<dependent type>' contains-errors lvalue ->lastlinedefined     |       `-RecoveryExpr 0x1300767b0 <col:27> '<dependent type>' contains-errors lvalue     `-CallExpr 0x130076c68 <line:23:3, col:53> '<dependent type>' contains-errors       |-DeclRefExpr 0x130076b10 <col:3> 'int ()' Function 0x130076a58 'luaO_chunkid' 'int ()'       |-CXXDependentScopeMemberExpr 0x130076b50 <col:16, col:20> '<dependent type>' contains-errors lvalue ->short_src       | `-RecoveryExpr 0x130076b30 <col:16> '<dependent type>' contains-errors lvalue       |-CXXDependentScopeMemberExpr 0x130076bb8 <col:31, col:35> '<dependent type>' contains-errors lvalue ->source       | `-RecoveryExpr 0x130076b98 <col:31> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x130076c20 <col:43, col:47> '<dependent type>' contains-errors lvalue ->srclen         `-RecoveryExpr 0x130076c00 <col:43> '<dependent type>' contains-errors lvalue ","19827":"`-FunctionDecl 0x14801c838  line:1:12 referenced checksoftirq2 'int (int, int)' static   |-ParmVarDecl 0x14801c6d8 <col:26, col:30> col:30 used force 'int'   |-ParmVarDecl 0x14801c758 <col:36, col:40> col:40 used cpu 'int'   `-CompoundStmt 0x1488e9210 <col:44, line:49:1>     |-DeclStmt 0x14801ca48 <line:2:3, col:17>     | `-VarDecl 0x14801c9e0 <col:3, col:16> col:8 used name 'char[500]'     |-IfStmt 0x14801cb58 <line:5:3, col:22>     | |-BinaryOperator 0x14801cb08 <col:6, col:12> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14801cae8 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14801cab0 <col:11, col:12> 'int' prefix '-'     | |   `-IntegerLiteral 0x14801ca90 <col:12> 'int' 1     | `-ReturnStmt 0x14801cb48 <col:15, col:22>     |   `-IntegerLiteral 0x14801cb28 <col:22> 'int' 0     `-CompoundStmt 0x1488e91e0 <line:8:3, line:48:3>       |-DeclStmt 0x14801cdb8 <line:9:5, col:39>       | `-VarDecl 0x14801cb90 <col:5, col:38> col:9 used policy 'int' cinit       |   `-CallExpr 0x14801cd90 <col:16, col:38> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x14801cd10 <col:16> 'int ()' Function 0x14801cc58 'sched_getscheduler' 'int ()'       |     `-RecoveryExpr 0x14801cd70 <col:35> '<dependent type>' contains-errors lvalue       |-DeclStmt 0x1488e75f0 <line:10:5, col:39>       | `-VarDecl 0x1488e7400 <col:5, col:38> col:9 used priority 'int' cinit       |   `-CallExpr 0x1488e75c8 <col:18, col:38> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x1488e7548 <col:18> 'int ()' Function 0x1488e7490 'get_pid_priority' 'int ()'       |     `-RecoveryExpr 0x1488e75a8 <col:35> '<dependent type>' contains-errors lvalue       |-IfStmt 0x1488e9190 <line:12:5, line:44:7>       | |-BinaryOperator 0x1488e78a8 <line:12:8, line:13:19> 'int' contains-errors '||'       | | |-BinaryOperator 0x1488e7848 <line:12:8, col:50> 'int' contains-errors '<'       | | | |-DeclRefExpr 0x1488e7608 <col:8> 'int' contains-errors lvalue Var 0x1488e7400 'priority' 'int'       | | | `-CallExpr 0x1488e7820 <col:17, col:50> '<dependent type>' contains-errors       | | |   |-DeclRefExpr 0x1488e7708 <col:17> 'int ()' Function 0x1488e7650 'sched_get_priority_max' 'int ()'       | | |   `-RecoveryExpr 0x1488e7800 <col:40> '<dependent type>' contains-errors lvalue       | | `-BinaryOperator 0x1488e7888 <line:13:11, col:19> 'int' contains-errors '=='       | |   |-DeclRefExpr 0x1488e7788 <col:11> 'int' contains-errors lvalue Var 0x14801cb90 'policy' 'int'       | |   `-RecoveryExpr 0x1488e7868 <col:19> '<dependent type>' contains-errors lvalue       | `-CompoundStmt 0x1488e9160 <line:15:7, line:44:7>       |   |-IfStmt 0x1488e7ff8 <line:17:2, line:21:2>       |   | |-ImplicitCastExpr 0x1488e78e8 <line:17:5> 'int' <LValueToRValue>       |   | | `-DeclRefExpr 0x1488e78c8 <col:5> 'int' lvalue ParmVar 0x14801c6d8 'force' 'int'       |   | `-CompoundStmt 0x1488e7fd0 <col:11, line:21:2>       |   |   |-CallExpr 0x1488e7ba8 <line:18:4, col:68> '<dependent type>' contains-errors       |   |   | |-DeclRefExpr 0x1488e79e0 <col:4> 'int ()' Function 0x1488e7928 'print_error' 'int ()'       |   |   | |-RecoveryExpr 0x1488e7b40 <col:16> '<dependent type>' contains-errors lvalue       |   |   | |-StringLiteral 0x1488e7a60 <col:23> 'char[4]' lvalue \"STR\"       |   |   | |-DeclRefExpr 0x1488e7a80 <col:29> 'char[500]' lvalue Var 0x14801c9e0 'name' 'char[500]'       |   |   | `-CallExpr 0x1488e7b80 <col:34, col:67> '<dependent type>' contains-errors       |   |   |   |-DeclRefExpr 0x1488e7aa0 <col:34> 'int ()' Function 0x1488e7650 'sched_get_priority_max' 'int ()'       |   |   |   `-RecoveryExpr 0x1488e7b60 <col:57> '<dependent type>' contains-errors lvalue       |   |   |-CallExpr 0x1488e7e88 <line:19:4, col:81> '<dependent type>' contains-errors       |   |   | |-DeclRefExpr 0x1488e7cc8 <col:4> 'int ()' Function 0x1488e7c10 'set_pid_priority' 'int ()'       |   |   | |-RecoveryExpr 0x1488e7e00 <col:21> '<dependent type>' contains-errors lvalue       |   |   | |-RecoveryExpr 0x1488e7e20 <col:25> '<dependent type>' contains-errors lvalue       |   |   | |-CallExpr 0x1488e7e60 <col:36, col:69> '<dependent type>' contains-errors       |   |   | | |-DeclRefExpr 0x1488e7d18 <col:36> 'int ()' Function 0x1488e7650 'sched_get_priority_max' 'int ()'       |   |   | | `-RecoveryExpr 0x1488e7e40 <col:59> '<dependent type>' contains-errors lvalue       |   |   | |-StringLiteral 0x1488e7d78 <col:71> 'char[4]' lvalue \"STR\"       |   |   | `-DeclRefExpr 0x1488e7d98 <col:77> 'char[500]' lvalue Var 0x14801c9e0 'name' 'char[500]'       |   |   `-ReturnStmt 0x1488e7fc0 <line:20:4, col:30>       |   |     `-CallExpr 0x1488e7f78 <col:11, col:30> 'int'       |   |       |-ImplicitCastExpr 0x1488e7f60 <col:11> 'int (*)(int, int)' <FunctionToPointerDecay>       |   |       | `-DeclRefExpr 0x1488e7ed0 <col:11> 'int (int, int)' Function 0x14801c838 'checksoftirq2' 'int (int, int)'       |   |       |-IntegerLiteral 0x1488e7ef0 <col:25> 'int' 0       |   |       `-ImplicitCastExpr 0x1488e7fa8 <col:27> 'int' <LValueToRValue>       |   |         `-DeclRefExpr 0x1488e7f10 <col:27> 'int' lvalue ParmVar 0x14801c758 'cpu' 'int'       |   |-IfStmt 0x1488e8360 <line:24:2, line:31:9>       |   | |-BinaryOperator 0x1488e8100 <line:24:5, col:47> 'int' contains-errors '<'       |   | | |-DeclRefExpr 0x1488e8018 <col:5> 'int' contains-errors lvalue Var 0x1488e7400 'priority' 'int'       |   | | `-CallExpr 0x1488e80d8 <col:14, col:47> '<dependent type>' contains-errors       |   | |   |-DeclRefExpr 0x1488e8038 <col:14> 'int ()' Function 0x1488e7650 'sched_get_priority_max' 'int ()'       |   | |   `-RecoveryExpr 0x1488e80b8 <col:37> '<dependent type>' contains-errors lvalue       |   | `-CallExpr 0x1488e8318 <line:25:4, line:31:9> '<dependent type>' contains-errors       |   |   |-DeclRefExpr 0x1488e8120 <line:25:4> 'int ()' Function 0x1488e7928 'print_error' 'int ()'       |   |   |-RecoveryExpr 0x1488e82b0 <col:16> '<dependent type>' contains-errors lvalue       |   |   |-StringLiteral 0x1488e81a0 <line:26:9, line:27:9> 'char[7]' lvalue \"STRSTR\"       |   |   |-DeclRefExpr 0x1488e81c8 <line:28:9> 'char[500]' lvalue Var 0x14801c9e0 'name' 'char[500]'       |   |   |-DeclRefExpr 0x1488e81e8 <line:29:9> 'int' contains-errors lvalue Var 0x1488e7400 'priority' 'int'       |   |   `-CallExpr 0x1488e82f0 <line:30:9, col:42> '<dependent type>' contains-errors       |   |     |-DeclRefExpr 0x1488e8208 <col:9> 'int ()' Function 0x1488e7650 'sched_get_priority_max' 'int ()'       |   |     `-RecoveryExpr 0x1488e82d0 <col:32> '<dependent type>' contains-errors lvalue       |   |-IfStmt 0x1488e90f8 <line:39:2, line:42:2>       |   | |-RecoveryExpr 0x1488e9048 <line:39:5> '_Bool' contains-errors       |   | `-CompoundStmt 0x1488e90e8 <col:14, line:42:2>       |   `-ReturnStmt 0x1488e9150 <line:43:2, col:10>       |     `-UnaryOperator 0x1488e9138 <col:9, col:10> 'int' prefix '-'       |       `-IntegerLiteral 0x1488e9118 <col:10> 'int' 1       `-ReturnStmt 0x1488e91d0 <line:47:5, col:12>         `-IntegerLiteral 0x1488e91b0 <col:12> 'int' 1 ","19950":"`-FunctionDecl 0x15700de58  line:1:20 invalid section_covers_addr 'int (const int *, int)' static inline   |-ParmVarDecl 0x15700dcf0 <col:40, col:67> col:67 invalid section 'const int *'   |-ParmVarDecl 0x15700dd70 <line:2:40, col:47> col:47 invalid addr 'int'   `-CompoundStmt 0x1570274b0 <line:3:1, line:8:1>     `-ReturnStmt 0x1570274a0 <line:5:5, line:7:63>       `-BinaryOperator 0x157027480 <line:5:12, line:7:63> 'int' contains-errors '||'         |-CallExpr 0x15700e0f8 <line:5:12, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15700e070 <col:12> 'int ()' Function 0x15700dfb8 'int128_gethi' 'int ()'         | `-CXXDependentScopeMemberExpr 0x15700e0b0 <col:25, col:34> '<dependent type>' contains-errors lvalue ->size         |   `-RecoveryExpr 0x15700e090 <col:25> '<dependent type>' contains-errors lvalue         `-CallExpr 0x157027448 <line:6:12, line:7:63> '<dependent type>' contains-errors           |-DeclRefExpr 0x15700e200 <line:6:12> 'int ()' Function 0x15700e148 'range_covers_byte' 'int ()'           |-CXXDependentScopeMemberExpr 0x15700e240 <col:30, col:39> '<dependent type>' contains-errors lvalue ->offset_within_address_space           | `-RecoveryExpr 0x15700e220 <col:30> '<dependent type>' contains-errors lvalue           |-CallExpr 0x157027400 <line:7:30, col:56> '<dependent type>' contains-errors           | |-DeclRefExpr 0x15700e368 <col:30> 'int ()' Function 0x15700e2b0 'int128_getlo' 'int ()'           | `-CXXDependentScopeMemberExpr 0x15700e3a8 <col:43, col:52> '<dependent type>' contains-errors lvalue ->size           |   `-RecoveryExpr 0x15700e388 <col:43> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x157027428 <col:59> '<dependent type>' contains-errors lvalue ","19264":"`-FunctionDecl 0x153903c88  line:2:8 invalid trak_AddBox 'int (int *, int *)'   |-ParmVarDecl 0x153903b28 <col:20, col:28> col:28 invalid s 'int *'   |-ParmVarDecl 0x153903ba8 <col:31, col:39> col:39 invalid a 'int *'   `-CompoundStmt 0x15402dce0 <line:3:1, line:48:15>     |-IfStmt 0x153903e08 <line:5:2, col:17>     | |-UnaryOperator 0x153903da8 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x153903d90 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x153903d70 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x153903df8 <col:10, col:17>     |   `-RecoveryExpr 0x153903dd8 <col:17> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x153903ea8 <line:6:2, line:47:2>       |-ImplicitCastExpr 0x153903e90 <line:6:9, col:12> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x153903e48 <col:9, col:12> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x153903e28 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15402dca8 <col:18, line:47:2>         |-IfStmt 0x15402d600 <line:8:3, col:50>         | |-CXXDependentScopeMemberExpr 0x153903f68 <col:7, col:12> '<dependent type>' contains-errors lvalue ->Header         | | `-RecoveryExpr 0x153903f48 <col:7> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x1539041b8 <col:20, col:50> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x153904110 <col:20> 'int ()' Function 0x153904058 'ERROR_ON_DUPLICATED_BOX' 'int ()'         |   |-RecoveryExpr 0x153904130 <col:44> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x153904198 <col:47> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x15402d670 <line:10:3, col:10>         | `-RecoveryExpr 0x15402d650 <col:10> '<dependent type>' contains-errors lvalue         |-IfStmt 0x15402d838 <line:12:3, col:51>         | |-CXXDependentScopeMemberExpr 0x15402d718 <col:7, col:12> '<dependent type>' contains-errors lvalue ->editBox         | | `-RecoveryExpr 0x15402d6f8 <col:7> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x15402d808 <col:21, col:51> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x15402d760 <col:21> 'int ()' Function 0x153904058 'ERROR_ON_DUPLICATED_BOX' 'int ()'         |   |-RecoveryExpr 0x15402d780 <col:45> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x15402d7e8 <col:48> '<dependent type>' contains-errors lvalue         |-IfStmt 0x15402dbc8 <line:40:3, line:43:3>         | |-RecoveryExpr 0x15402db58 <line:40:7, col:49> '_Bool' contains-errors         | `-CompoundStmt 0x15402dbb8 <col:72, line:43:3>         `-DefaultStmt 0x15402dc88 <line:45:2, line:46:38>           `-ReturnStmt 0x15402dc78 <col:3, col:38>             `-CallExpr 0x15402dc48 <col:10, col:38> '<dependent type>' contains-errors               |-DeclRefExpr 0x15402dbe8 <col:10> 'int ()' Function 0x15402da60 'gf_isom_box_add_default' 'int ()'               |-RecoveryExpr 0x15402dc08 <col:34> '<dependent type>' contains-errors lvalue               `-RecoveryExpr 0x15402dc28 <col:37> '<dependent type>' contains-errors lvalue ","19944":"`-FunctionDecl 0x146128118  line:1:1 SYSCALL_DEFINE1 'int ()'   `-CompoundStmt 0x14680a380 <line:2:1, line:39:1>     |-DeclStmt 0x1461283f8 <line:3:2, col:30>     | |-RecordDecl 0x146128208 <col:2, col:9> col:9 struct fsnotify_group     | `-VarDecl 0x146128378 <col:2, col:25> col:25 used group 'struct fsnotify_group *'     |-DeclStmt 0x1461285f8 <line:4:2, col:26>     | |-RecordDecl 0x146128410 <col:2, col:9> col:9 struct user_struct     | `-VarDecl 0x146128578 <col:2, col:22> col:22 used user 'struct user_struct *'     |-DeclStmt 0x146128690 <line:5:2, col:9>     | `-VarDecl 0x146128628 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x146140aa8 <line:8:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1461287a0 <col:2> 'int ()' Function 0x1461286e8 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x146140a88 <col:15, col:29> 'int' contains-errors '!='     |   |-RecoveryExpr 0x146140a48 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146140a68 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x146140bc8 <line:9:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146140ad0 <col:2> 'int ()' Function 0x1461286e8 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x146140ba8 <col:15, col:30> 'int' contains-errors '!='     |   |-RecoveryExpr 0x146140b68 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x146140b88 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146140d20 <line:11:2, line:12:11>     | |-RecoveryExpr 0x146140c58 <line:11:6, col:40> '_Bool' contains-errors     | `-ReturnStmt 0x146140d10 <line:12:3, col:11>     |   `-UnaryOperator 0x146140cf8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x146140ce0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x146140cc0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x146141300 <line:14:2, col:26> 'struct user_struct *' '='     | |-DeclRefExpr 0x146140d40 <col:2> 'struct user_struct *' lvalue Var 0x146128578 'user' 'struct user_struct *'     | `-ImplicitCastExpr 0x146140ec8 <col:9, col:26> 'struct user_struct *' <IntegralToPointer>     |   `-CallExpr 0x146140ea8 <col:9, col:26> 'int'     |     `-ImplicitCastExpr 0x146140e90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x146140e40 <col:9> 'int ()' Function 0x146140d88 'get_current_user' 'int ()'     |-IfStmt 0x146141808 <line:15:2, line:19:2>     | |-CallExpr 0x146141660 <line:15:6, line:16:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x146141400 <line:15:6> 'int ()' Function 0x146141348 'unlikely' 'int ()'     | | `-BinaryOperator 0x146141640 <col:15, line:16:4> 'int' contains-errors '>='     | |   |-CallExpr 0x146141598 <line:15:15, col:46> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x146141500 <col:15> 'int ()' Function 0x146141448 'atomic_read' 'int ()'     | |   | `-UnaryOperator 0x146141580 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   |   `-RecoveryExpr 0x146141558 <col:28, col:34> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x146141520 <col:28> 'struct user_struct *' lvalue Var 0x146128578 'user' 'struct user_struct *'     | |   `-RecoveryExpr 0x146141620 <line:16:4> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1461417e8 <col:33, line:19:2>     |   |-BinaryOperator 0x146141760 <line:17:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x146141688 <col:3> 'int' lvalue Var 0x146128628 'ret' 'int'     |   | `-UnaryOperator 0x146141748 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x146141730 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x146141710 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1461417d0 <line:18:3, col:8> 'out_free_uid' 0x146141780     |-BinaryOperator 0x146809830 <line:22:2, col:59> 'struct fsnotify_group *' contains-errors '='     | |-DeclRefExpr 0x146141828 <col:2> 'struct fsnotify_group *' lvalue Var 0x146128378 'group' 'struct fsnotify_group *'     | `-CallExpr 0x146809800 <col:10, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146141928 <col:10> 'int ()' Function 0x146141870 'inotify_new_group' 'int ()'     |   |-DeclRefExpr 0x146141948 <col:28> 'struct user_struct *' lvalue Var 0x146128578 'user' 'struct user_struct *'     |   `-RecoveryExpr 0x1461419d0 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146809bb8 <line:23:2, line:26:2>     | |-CallExpr 0x146809988 <line:23:6, col:18> 'int'     | | |-ImplicitCastExpr 0x146809970 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x146809930 <col:6> 'int ()' Function 0x146809878 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x1468099b0 <col:13> 'struct fsnotify_group *' <LValueToRValue>     | |   `-DeclRefExpr 0x146809950 <col:13> 'struct fsnotify_group *' lvalue Var 0x146128378 'group' 'struct fsnotify_group *'     | `-CompoundStmt 0x146809b98 <col:21, line:26:2>     |   |-BinaryOperator 0x146809b60 <line:24:3, col:22> 'int' '='     |   | |-DeclRefExpr 0x1468099c8 <col:3> 'int' lvalue Var 0x146128628 'ret' 'int'     |   | `-CallExpr 0x146809b20 <col:9, col:22> 'int'     |   |   |-ImplicitCastExpr 0x146809b08 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x146809ac8 <col:9> 'int ()' Function 0x146809a10 'PTR_ERR' 'int ()'     |   |   `-ImplicitCastExpr 0x146809b48 <col:17> 'struct fsnotify_group *' <LValueToRValue>     |   |     `-DeclRefExpr 0x146809ae8 <col:17> 'struct fsnotify_group *' lvalue Var 0x146128378 'group' 'struct fsnotify_group *'     |   `-GotoStmt 0x146809b80 <line:25:3, col:8> 'out_free_uid' 0x146141780     |-CallExpr 0x146809d50 <line:28:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x146809cb8 <col:2> 'int ()' Function 0x146809c00 'atomic_inc' 'int ()'     | `-UnaryOperator 0x146809d38 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x146809d10 <col:14, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x146809cd8 <col:14> 'struct user_struct *' lvalue Var 0x146128578 'user' 'struct user_struct *'     |-IfStmt 0x146809fe0 <line:32:2, line:33:10>     | |-BinaryOperator 0x146809f78 <line:32:6, col:13> 'int' '>='     | | |-ImplicitCastExpr 0x146809f60 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146809f20 <col:6> 'int' lvalue Var 0x146128628 'ret' 'int'     | | `-IntegerLiteral 0x146809f40 <col:13> 'int' 0     | `-ReturnStmt 0x146809fd0 <line:33:3, col:10>     |   `-ImplicitCastExpr 0x146809fb8 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x146809f98 <col:10> 'int' lvalue Var 0x146128628 'ret' 'int'     |-CallExpr 0x14680a178 <line:35:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14680a0e0 <col:2> 'int ()' Function 0x14680a028 'atomic_dec' 'int ()'     | `-UnaryOperator 0x14680a160 <col:13, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14680a138 <col:14, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14680a100 <col:14> 'struct user_struct *' lvalue Var 0x146128578 'user' 'struct user_struct *'     |-LabelStmt 0x14680a318 <line:36:1, line:37:15> 'out_free_uid'     | `-CallExpr 0x14680a2d8 <col:2, col:15> 'int'     |   |-ImplicitCastExpr 0x14680a2c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14680a280 <col:2> 'int ()' Function 0x14680a1c8 'free_uid' 'int ()'     |   `-ImplicitCastExpr 0x14680a300 <col:11> 'struct user_struct *' <LValueToRValue>     |     `-DeclRefExpr 0x14680a2a0 <col:11> 'struct user_struct *' lvalue Var 0x146128578 'user' 'struct user_struct *'     `-ReturnStmt 0x14680a370 <line:38:2, col:9>       `-ImplicitCastExpr 0x14680a358 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14680a338 <col:9> 'int' lvalue Var 0x146128628 'ret' 'int' ","19866":"`-FunctionDecl 0x140928c88  line:1:5 invalid virtio_load 'int (int *, int *)'   |-ParmVarDecl 0x140928b28 <col:17, col:31> col:31 referenced invalid vdev 'int *'   |-ParmVarDecl 0x140928ba8 <col:37, col:47> col:47 invalid f 'int *'   `-CompoundStmt 0x140946090 <line:2:1, line:69:1>     |-DeclStmt 0x140928ee0 <line:3:5, col:20>     | |-VarDecl 0x140928d58 <col:5, col:9> col:9 used num 'int'     | |-VarDecl 0x140928dd8 <col:5, col:14> col:14 used i 'int'     | `-VarDecl 0x140928e58 <col:5, col:17> col:17 used ret 'int'     |-IfStmt 0x140942750 <line:9:5, line:13:5>     | |-CXXDependentScopeMemberExpr 0x1409423d8 <line:9:9, col:12> '<dependent type>' contains-errors lvalue ->load_config     | | `-RecoveryExpr 0x1409423b8 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140942730 <col:25, line:13:5>     |   |-BinaryOperator 0x140942670 <line:10:9, col:45> 'int' contains-errors '='     |   | |-DeclRefExpr 0x140942420 <col:9> 'int' lvalue Var 0x140928e58 'ret' 'int'     |   | `-CallExpr 0x140942640 <col:15, col:45> '<dependent type>' contains-errors     |   |   |-CXXDependentScopeMemberExpr 0x140942590 <col:15, col:18> '<dependent type>' contains-errors lvalue ->load_config     |   |   | `-RecoveryExpr 0x140942570 <col:15> '<dependent type>' contains-errors lvalue     |   |   |-CXXDependentScopeMemberExpr 0x1409425f8 <col:30, col:36> '<dependent type>' contains-errors lvalue ->parent     |   |   | `-RecoveryExpr 0x1409425d8 <col:30> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x140942500 <col:44> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x140942710 <line:11:9, line:12:20>     |     |-ImplicitCastExpr 0x1409426b0 <line:11:13> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x140942690 <col:13> 'int' lvalue Var 0x140928e58 'ret' 'int'     |     `-ReturnStmt 0x140942700 <line:12:13, col:20>     |       `-ImplicitCastExpr 0x1409426e8 <col:20> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x1409426c8 <col:20> 'int' lvalue Var 0x140928e58 'ret' 'int'     |-CallExpr 0x140942910 <line:15:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140942850 <col:5> 'int ()' Function 0x140942798 'qemu_get_8s' 'int ()'     | |-RecoveryExpr 0x140942870 <col:17> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1409428f8 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1409428b0 <col:21, col:27> '<dependent type>' contains-errors lvalue ->status     |     `-RecoveryExpr 0x140942890 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x140942a00 <line:16:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140942940 <col:5> 'int ()' Function 0x140942798 'qemu_get_8s' 'int ()'     | |-RecoveryExpr 0x140942960 <col:17> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1409429e8 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x1409429a0 <col:21, col:27> '<dependent type>' contains-errors lvalue ->isr     |     `-RecoveryExpr 0x140942980 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x140942bd0 <line:17:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140942b10 <col:5> 'int ()' Function 0x140942a58 'qemu_get_be16s' 'int ()'     | |-RecoveryExpr 0x140942b30 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x140942bb8 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x140942b70 <col:24, col:30> '<dependent type>' contains-errors lvalue ->queue_sel     |     `-RecoveryExpr 0x140942b50 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x140942db8 <line:18:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140942ce0 <col:5> 'int ()' Function 0x140942c28 'qemu_get_be32s' 'int ()'     | |-RecoveryExpr 0x140942d00 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x140942da0 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x140942d80 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140943110 <line:20:5, line:25:5>     | |-RecoveryExpr 0x140942f28 <line:20:9, col:47> '_Bool' contains-errors     | `-CompoundStmt 0x1409430f8 <col:50, line:25:5>     |   `-ReturnStmt 0x1409430e8 <line:24:9, col:17>     |     `-UnaryOperator 0x1409430d0 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x1409430b0 <col:17> 'int' 1     |-BinaryOperator 0x140943d20 <line:26:5, col:39> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x140943178 <col:5, col:11> '<dependent type>' contains-errors lvalue ->config_len     | | `-RecoveryExpr 0x140943150 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x140943130 <col:5> 'int *' lvalue ParmVar 0x140928b28 'vdev' 'int *'     | `-CallExpr 0x140943cf8 <col:24, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x140943cb8 <col:24> 'int ()' Function 0x140943c00 'qemu_get_be32' 'int ()'     |   `-RecoveryExpr 0x140943cd8 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x140943f30 <line:27:5, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140943e20 <col:5> 'int ()' Function 0x140943d68 'qemu_get_buffer' 'int ()'     | |-RecoveryExpr 0x140943e40 <col:21> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x140943e80 <col:24, col:30> '<dependent type>' contains-errors lvalue ->config     | | `-RecoveryExpr 0x140943e60 <col:24> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x140943ee8 <col:38, col:44> '<dependent type>' contains-errors lvalue ->config_len     |   `-RecoveryExpr 0x140943ec8 <col:38> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x140943ff0 <line:29:5, col:26> 'int' contains-errors '='     | |-DeclRefExpr 0x140943f68 <col:5> 'int' lvalue Var 0x140928d58 'num' 'int'     | `-CallExpr 0x140943fc8 <col:11, col:26> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x140943f88 <col:11> 'int ()' Function 0x140943c00 'qemu_get_be32' 'int ()'     |   `-RecoveryExpr 0x140943fa8 <col:25> '<dependent type>' contains-errors lvalue     |-ForStmt 0x140945f08 <line:31:5, line:65:5>     | |-BinaryOperator 0x140944050 <line:31:10, col:14> 'int' '='     | | |-DeclRefExpr 0x140944010 <col:10> 'int' lvalue Var 0x140928dd8 'i' 'int'     | | `-IntegerLiteral 0x140944030 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1409440e0 <col:17, col:21> 'int' '<'     | | |-ImplicitCastExpr 0x1409440b0 <col:17> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x140944070 <col:17> 'int' lvalue Var 0x140928dd8 'i' 'int'     | | `-ImplicitCastExpr 0x1409440c8 <col:21> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x140944090 <col:21> 'int' lvalue Var 0x140928d58 'num' 'int'     | |-UnaryOperator 0x140944120 <col:26, col:27> 'int' postfix '++'     | | `-DeclRefExpr 0x140944100 <col:26> 'int' lvalue Var 0x140928dd8 'i' 'int'     | `-CompoundStmt 0x140945ec8 <col:31, line:65:5>     |   |-BinaryOperator 0x140944330 <line:32:9, col:48> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x140944280 <col:9, col:27> '<dependent type>' contains-errors lvalue .num     |   | | `-CXXDependentScopeMemberExpr 0x140944238 <col:9, col:21> '<dependent type>' contains-errors lvalue .vring     |   | |   `-ArraySubscriptExpr 0x140944218 <col:9, col:19> '<dependent type>' contains-errors lvalue     |   | |     |-ImplicitCastExpr 0x1409441e8 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | `-CXXDependentScopeMemberExpr 0x140944180 <col:9, col:15> '<dependent type>' contains-errors lvalue ->vq     |   | |     |   `-RecoveryExpr 0x140944158 <col:9> '<dependent type>' contains-errors lvalue     |   | |     |     `-DeclRefExpr 0x140944138 <col:9> 'int *' lvalue ParmVar 0x140928b28 'vdev' 'int *'     |   | |     `-ImplicitCastExpr 0x140944200 <col:18> 'int' <LValueToRValue>     |   | |       `-DeclRefExpr 0x1409441c8 <col:18> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   | `-CallExpr 0x140944308 <col:33, col:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1409442c8 <col:33> 'int ()' Function 0x140943c00 'qemu_get_be32' 'int ()'     |   |   `-RecoveryExpr 0x1409442e8 <col:47> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x1409445a0 <line:33:9, line:35:9>     |   | |-RecoveryExpr 0x140944350 <line:33:13, col:16> '_Bool' contains-errors     |   | `-CompoundStmt 0x140944588 <col:46, line:35:9>     |   |   `-BinaryOperator 0x140944568 <line:34:13, col:54> '<dependent type>' contains-errors '='     |   |     |-CXXDependentScopeMemberExpr 0x1409444b8 <col:13, col:31> '<dependent type>' contains-errors lvalue .align     |   |     | `-CXXDependentScopeMemberExpr 0x140944470 <col:13, col:25> '<dependent type>' contains-errors lvalue .vring     |   |     |   `-ArraySubscriptExpr 0x140944450 <col:13, col:23> '<dependent type>' contains-errors lvalue     |   |     |     |-ImplicitCastExpr 0x140944420 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>     |   |     |     | `-CXXDependentScopeMemberExpr 0x1409443b8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->vq     |   |     |     |   `-RecoveryExpr 0x140944390 <col:13> '<dependent type>' contains-errors lvalue     |   |     |     |     `-DeclRefExpr 0x140944370 <col:13> 'int *' lvalue ParmVar 0x140928b28 'vdev' 'int *'     |   |     |     `-ImplicitCastExpr 0x140944438 <col:22> 'int' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x140944400 <col:22> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   |     `-CallExpr 0x140944540 <col:39, col:54> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x140944500 <col:39> 'int ()' Function 0x140943c00 'qemu_get_be32' 'int ()'     |   |       `-RecoveryExpr 0x140944520 <col:53> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x140944850 <line:36:9, col:41> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1409446c0 <col:9, col:21> '<dependent type>' contains-errors lvalue .pa     |   | | `-ArraySubscriptExpr 0x1409446a0 <col:9, col:19> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x140944670 <col:9, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-CXXDependentScopeMemberExpr 0x140944608 <col:9, col:15> '<dependent type>' contains-errors lvalue ->vq     |   | |   |   `-RecoveryExpr 0x1409445e0 <col:9> '<dependent type>' contains-errors lvalue     |   | |   |     `-DeclRefExpr 0x1409445c0 <col:9> 'int *' lvalue ParmVar 0x140928b28 'vdev' 'int *'     |   | |   `-ImplicitCastExpr 0x140944688 <col:18> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x140944650 <col:18> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   | `-CallExpr 0x140944828 <col:26, col:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1409447e8 <col:26> 'int ()' Function 0x140944730 'qemu_get_be64' 'int ()'     |   |   `-RecoveryExpr 0x140944808 <col:40> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1409449e8 <line:37:9, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x140944870 <col:9> 'int ()' Function 0x140942a58 'qemu_get_be16s' 'int ()'     |   | |-RecoveryExpr 0x140944890 <col:24> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1409449d0 <col:27, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x140944988 <col:28, col:40> '<dependent type>' contains-errors lvalue .last_avail_idx     |   |     `-ArraySubscriptExpr 0x140944968 <col:28, col:38> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x140944938 <col:28, col:34> '<dependent type>' contains-errors <LValueToRValue>     |   |       | `-CXXDependentScopeMemberExpr 0x1409448d0 <col:28, col:34> '<dependent type>' contains-errors lvalue ->vq     |   |       |   `-RecoveryExpr 0x1409448b0 <col:28> '<dependent type>' contains-errors lvalue     |   |       `-ImplicitCastExpr 0x140944950 <col:37> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x140944918 <col:37> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   |-IfStmt 0x140945d40 <line:41:9, line:59:2> has_else     |   | |-CXXDependentScopeMemberExpr 0x140944d90 <line:41:13, col:25> '<dependent type>' contains-errors lvalue .pa     |   | | `-ArraySubscriptExpr 0x140944d70 <col:13, col:23> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x140944d40 <col:13, col:19> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-CXXDependentScopeMemberExpr 0x140944cd8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->vq     |   | |   |   `-RecoveryExpr 0x140944cb8 <col:13> '<dependent type>' contains-errors lvalue     |   | |   `-ImplicitCastExpr 0x140944d58 <col:22> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x140944d20 <col:22> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   | |-CompoundStmt 0x1409459b8 <col:29, line:54:9>     |   | | |-CallExpr 0x140944fc8 <line:43:13, col:40> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x140944eb8 <col:13> 'int ()' Function 0x140944e00 'virtqueue_init' 'int ()'     |   | | | `-UnaryOperator 0x140944fb0 <col:28, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | |   `-ArraySubscriptExpr 0x140944f90 <col:29, col:39> '<dependent type>' contains-errors lvalue     |   | | |     |-ImplicitCastExpr 0x140944f60 <col:29, col:35> '<dependent type>' contains-errors <LValueToRValue>     |   | | |     | `-CXXDependentScopeMemberExpr 0x140944ef8 <col:29, col:35> '<dependent type>' contains-errors lvalue ->vq     |   | | |     |   `-RecoveryExpr 0x140944ed8 <col:29> '<dependent type>' contains-errors lvalue     |   | | |     `-ImplicitCastExpr 0x140944f78 <col:38> 'int' <LValueToRValue>     |   | | |       `-DeclRefExpr 0x140944f40 <col:38> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   | | `-IfStmt 0x140945998 <line:46:13, line:53:13>     |   | |   |-RecoveryExpr 0x1409454b0 <line:46:17, col:44> '_Bool' contains-errors     |   | |   `-CompoundStmt 0x140945980 <col:49, line:53:13>     |   | |     `-ReturnStmt 0x140945970 <line:52:17, col:25>     |   | |       `-UnaryOperator 0x140945958 <col:24, col:25> 'int' prefix '-'     |   | |         `-IntegerLiteral 0x140945938 <col:25> 'int' 1     |   | `-IfStmt 0x140945d20 <line:54:16, line:59:2>     |   |   |-CXXDependentScopeMemberExpr 0x140945ab0 <line:54:20, col:32> '<dependent type>' contains-errors lvalue .last_avail_idx     |   |   | `-ArraySubscriptExpr 0x140945a90 <col:20, col:30> '<dependent type>' contains-errors lvalue     |   |   |   |-ImplicitCastExpr 0x140945a60 <col:20, col:26> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | `-CXXDependentScopeMemberExpr 0x1409459f8 <col:20, col:26> '<dependent type>' contains-errors lvalue ->vq     |   |   |   |   `-RecoveryExpr 0x1409459d8 <col:20> '<dependent type>' contains-errors lvalue     |   |   |   `-ImplicitCastExpr 0x140945a78 <col:29> 'int' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x140945a40 <col:29> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   |   `-CompoundStmt 0x140945d00 <col:48, line:59:2>     |   |     |-CallExpr 0x140945c80 <line:55:13, line:57:55> '<dependent type>' contains-errors     |   |     | |-DeclRefExpr 0x140945af8 <line:55:13> 'int ()' Function 0x140942f70 'error_report' 'int ()'     |   |     | |-StringLiteral 0x140945b18 <col:26, line:56:26> 'char[7]' lvalue \"STRSTR\"     |   |     | |-DeclRefExpr 0x140945b40 <line:57:26> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   |     | `-CXXDependentScopeMemberExpr 0x140945c38 <col:29, col:41> '<dependent type>' contains-errors lvalue .last_avail_idx     |   |     |   `-ArraySubscriptExpr 0x140945c18 <col:29, col:39> '<dependent type>' contains-errors lvalue     |   |     |     |-ImplicitCastExpr 0x140945be8 <col:29, col:35> '<dependent type>' contains-errors <LValueToRValue>     |   |     |     | `-CXXDependentScopeMemberExpr 0x140945b80 <col:29, col:35> '<dependent type>' contains-errors lvalue ->vq     |   |     |     |   `-RecoveryExpr 0x140945b60 <col:29> '<dependent type>' contains-errors lvalue     |   |     |     `-ImplicitCastExpr 0x140945c00 <col:38> 'int' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x140945bc8 <col:38> 'int' lvalue Var 0x140928dd8 'i' 'int'     |   |     `-ReturnStmt 0x140945cf0 <line:58:17, col:25>     |   |       `-UnaryOperator 0x140945cd8 <col:24, col:25> 'int' prefix '-'     |   |         `-IntegerLiteral 0x140945cb8 <col:25> 'int' 1     |   `-IfStmt 0x140945ea8 <line:60:9, line:64:9>     |     |-RecoveryExpr 0x140945d70 <line:60:13, col:16> '_Bool' contains-errors     |     `-CompoundStmt 0x140945e90 <col:28, line:64:9>     |       `-IfStmt 0x140945e70 <line:62:13, line:63:24>     |         |-ImplicitCastExpr 0x140945e10 <line:62:17> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x140945df0 <col:17> 'int' lvalue Var 0x140928e58 'ret' 'int'     |         `-ReturnStmt 0x140945e60 <line:63:17, col:24>     |           `-ImplicitCastExpr 0x140945e48 <col:24> 'int' <LValueToRValue>     |             `-DeclRefExpr 0x140945e28 <col:24> 'int' lvalue Var 0x140928e58 'ret' 'int'     `-ReturnStmt 0x140946080 <line:68:5, col:12>       `-IntegerLiteral 0x140946060 <col:12> 'int' 0 ","19935":"`-FunctionDecl 0x11f141d20  col:7 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x11f141e20 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x11f141e88 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x11f141ef0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x11f141dc8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x11f141f70 <col:7> Implicit printf 3 4 ","19216":"`-FunctionDecl 0x13980de90  line:1:13 referenced invalid Mul 'void (const int *, const int)' inline   |-ParmVarDecl 0x13980dcf0 <col:17, col:30> col:30 invalid input1_data 'const int *'   |-ParmVarDecl 0x13980dd70 <col:43, <invalid sloc>> col:53 invalid 'const int'   `-CompoundStmt 0x1398274c0 <line:3:65, line:10:1>     |-RecoveryExpr 0x13980df78 <line:4:3> '<dependent type>' contains-errors lvalue     `-CallExpr 0x139827468 <line:7:3, line:9:18> '<dependent type>' contains-errors       |-RecoveryExpr 0x13980dfb8 <line:7:3> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13980df98 <col:3> 'void (const int *, const int)' Function 0x13980de90 'Mul' 'void (const int *, const int)'       |-RecoveryExpr 0x13980e318 <col:7> '<dependent type>' contains-errors lvalue       |-CallExpr 0x13980e358 <col:18, col:41> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13980e150 <col:18> 'int ()' Function 0x13980e098 'DimsToShape' 'int ()'       | `-RecoveryExpr 0x13980e338 <col:30> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13980e1b0 <col:44> '<dependent type>' contains-errors lvalue       |-CallExpr 0x13980e3a0 <line:8:7, col:30> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13980e1d0 <col:7> 'int ()' Function 0x13980e098 'DimsToShape' 'int ()'       | `-RecoveryExpr 0x13980e380 <col:19> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x13980e3c8 <col:33> '<dependent type>' contains-errors lvalue       |-CallExpr 0x139827420 <col:46, col:69> '<dependent type>' contains-errors       | |-DeclRefExpr 0x13980e248 <col:46> 'int ()' Function 0x13980e098 'DimsToShape' 'int ()'       | `-RecoveryExpr 0x139827400 <col:58> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x139827448 <line:9:7> '<dependent type>' contains-errors lvalue ","19780":"`-FunctionDecl 0x1279281f8  line:1:1 invalid zfs_znode_acl_version 'int (int *)'   |-ParmVarDecl 0x127928128 <col:23, col:32> col:32 invalid zp 'int *'   `-CompoundStmt 0x127941b98 <line:2:1, line:21:1>     `-IfStmt 0x127941b68 <line:5:2, line:20:2> has_else       |-CXXDependentScopeMemberExpr 0x1279282c8 <line:5:6, col:10> '<dependent type>' contains-errors lvalue ->z_is_sa       | `-RecoveryExpr 0x1279282a8 <col:6> '<dependent type>' contains-errors lvalue       |-NullStmt 0x127941b60 <line:6:3>       `-CompoundStmt 0x127941b40 <line:7:7, line:20:2>         |-DeclStmt 0x1279283a8 <line:8:3, col:12>         | `-VarDecl 0x127928340 <col:3, col:7> col:7 used error 'int'         `-IfStmt 0x127941b10 <line:11:3, line:19:3> has_else           |-RecoveryExpr 0x1279287c0 <line:11:7, line:13:41> '_Bool' contains-errors           |-NullStmt 0x127941b08 <line:14:4>           `-CompoundStmt 0x127941af0 <line:15:8, line:19:3>             `-CallExpr 0x127941ab0 <line:17:4, col:41> '<dependent type>' contains-errors               |-DeclRefExpr 0x127941928 <col:4> 'int ()' Function 0x127941870 'VERIFY' 'int ()'               `-BinaryOperator 0x127941a90 <col:11, col:35> 'int' contains-errors '&&'                 |-CXXDependentScopeMemberExpr 0x127941968 <col:11, col:15> '<dependent type>' contains-errors lvalue ->z_is_sa                 | `-RecoveryExpr 0x127941948 <col:11> '<dependent type>' contains-errors lvalue                 `-BinaryOperator 0x127941a70 <col:26, col:35> 'int' contains-errors '=='                   |-DeclRefExpr 0x1279419b0 <col:26> 'int' lvalue Var 0x127928340 'error' 'int'                   `-RecoveryExpr 0x127941a50 <col:35> '<dependent type>' contains-errors lvalue ","19404":"`-FunctionDecl 0x14e00de88  line:1:1 invalid top_define_method 'int (int *, int)'   |-ParmVarDecl 0x14e00dd28 <col:19, col:30> col:30 invalid mrb 'int *'   |-ParmVarDecl 0x14e00dda8 <col:35, col:45> col:45 invalid self 'int'   `-CompoundStmt 0x14e00e2b0 <line:2:1, line:4:1>     `-ReturnStmt 0x14e00e2a0 <line:3:3, col:65>       `-CallExpr 0x14e00e270 <col:10, col:65> '<dependent type>' contains-errors         |-DeclRefExpr 0x14e00e0a0 <col:10> 'int ()' Function 0x14e00dfe8 'mod_define_method' 'int ()'         |-RecoveryExpr 0x14e00e0c0 <col:28> '<dependent type>' contains-errors lvalue         `-CallExpr 0x14e00e248 <col:33, col:64> '<dependent type>' contains-errors           |-DeclRefExpr 0x14e00e1c0 <col:33> 'int ()' Function 0x14e00e108 'mrb_obj_value' 'int ()'           `-CXXDependentScopeMemberExpr 0x14e00e200 <col:47, col:52> '<dependent type>' contains-errors lvalue ->object_class             `-RecoveryExpr 0x14e00e1e0 <col:47> '<dependent type>' contains-errors lvalue ","19280":"`-FunctionDecl 0x1219283a8  line:1:1 invalid e_ews_connection_get_oal_list 'int (int *, int *, int, int)'   |-ParmVarDecl 0x121928128 <col:32, col:48> col:48 invalid cnc 'int *'   |-ParmVarDecl 0x1219281a8 <line:2:32, col:46> col:46 invalid cancellable 'int *'   |-ParmVarDecl 0x121928228 <line:3:32, col:52> col:52 invalid callback 'int'   |-ParmVarDecl 0x1219282a8 <line:4:32, col:41> col:41 invalid user_data 'int'   `-CompoundStmt 0x12200a158 <line:5:1, line:41:1>     |-DeclStmt 0x121928688 <line:8:2, col:28>     | |-RecordDecl 0x1219284a0 <col:2, col:9> col:9 struct _oal_req_data     | `-VarDecl 0x121928608 <col:2, col:24> col:24 used data 'struct _oal_req_data *'     |-CallExpr 0x122008420 <line:11:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1220082b8 <col:2> 'int ()' Function 0x122008200 'g_return_if_fail' 'int ()'     | `-CallExpr 0x1220083f8 <col:20, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1220083b8 <col:20> 'int ()' Function 0x122008300 'E_IS_EWS_CONNECTION' 'int ()'     |   `-RecoveryExpr 0x1220083d8 <col:41> '<dependent type>' contains-errors lvalue     |-IfStmt 0x122008c60 <line:19:2, line:23:2>     | |-RecoveryExpr 0x122008a18 <line:19:6, col:7> '_Bool' contains-errors     | `-CompoundStmt 0x122008c48 <col:21, line:23:2>     |   `-ReturnStmt 0x122008c38 <line:22:3>     |-BinaryOperator 0x122008f48 <line:26:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x122008dd8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122008da0 <col:2> 'struct _oal_req_data *' lvalue Var 0x121928608 'data' 'struct _oal_req_data *'     | `-CallExpr 0x122008f20 <col:14, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x122008ee0 <col:14> 'int ()' Function 0x122008e28 'g_object_ref' 'int ()'     |   `-RecoveryExpr 0x122008f00 <col:28> '<dependent type>' contains-errors lvalue     `-IfStmt 0x122009ef8 <line:29:2, line:35:2>       |-CallExpr 0x1220090e8 <line:29:6, col:35> '<dependent type>' contains-errors       | |-DeclRefExpr 0x1220090a8 <col:6> 'int ()' Function 0x122008ff0 'G_IS_CANCELLABLE' 'int ()'       | `-RecoveryExpr 0x1220090c8 <col:24> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x122009ee0 <col:38, line:35:2>         `-BinaryOperator 0x1220091d8 <line:30:3, col:48> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x122009148 <col:3, col:9> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x122009110 <col:3> 'struct _oal_req_data *' lvalue Var 0x121928608 'data' 'struct _oal_req_data *'           `-CallExpr 0x1220091b0 <col:23, col:48> '<dependent type>' contains-errors             |-DeclRefExpr 0x122009170 <col:23> 'int ()' Function 0x122008e28 'g_object_ref' 'int ()'             `-RecoveryExpr 0x122009190 <col:37> '<dependent type>' contains-errors lvalue ","19965":"`-FunctionDecl 0x15a928288  line:8:23 invalid get_base_ds 'int *(int *, int *)' static   |-ParmVarDecl 0x15a928128 <col:35, col:49> col:49 invalid ctx 'int *'   |-ParmVarDecl 0x15a9281a8 <col:54, col:69> col:69 invalid for_ds 'int *'   `-CompoundStmt 0x15a928650 <line:9:1, line:12:35>     `-IfStmt 0x15a928420 <line:11:2, col:30>       |-UnaryOperator 0x15a9283c0 <col:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x15a9283a8 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x15a928360 <col:7, col:15> '<dependent type>' contains-errors lvalue ->dep_id       |     `-RecoveryExpr 0x15a928340 <col:7> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x15a928410 <col:23, col:30>         `-RecoveryExpr 0x15a9283f0 <col:30> '<dependent type>' contains-errors lvalue ","19593":"`-FunctionDecl 0x12b140c18  line:1:12 do_i2c_loop 'int (struct cmd_tbl *, int, int, char *const *)' static   |-ParmVarDecl 0x12b128648 <col:24, col:40> col:40 cmdtp 'struct cmd_tbl *'   |-ParmVarDecl 0x12b1286c8 <col:47, col:51> col:51 flag 'int'   |-ParmVarDecl 0x12b128748 <col:57, col:61> col:61 used argc 'int'   |-ParmVarDecl 0x12b140ac0 <line:2:10, col:27> col:22 used argv 'char *const *'   `-CompoundStmt 0x12b1448b8 <line:3:1, line:58:1>     |-DeclStmt 0x12b140dc0 <line:4:2, col:11>     | `-VarDecl 0x12b140d58 <col:2, col:7> col:7 used chip 'int'     |-DeclStmt 0x12b140e58 <line:5:2, col:10>     | `-VarDecl 0x12b140df0 <col:2, col:6> col:6 used alen 'int'     |-DeclStmt 0x12b140ef0 <line:6:2, col:11>     | `-VarDecl 0x12b140e88 <col:2, col:7> col:7 used addr 'int'     |-DeclStmt 0x12b140f88 <line:7:2, col:13>     | `-VarDecl 0x12b140f20 <col:2, col:7> col:7 used length 'int'     |-DeclStmt 0x12b1410a8 <line:8:2, col:18>     | `-VarDecl 0x12b141040 <col:2, col:17> col:9 used bytes 'char[16]'     |-DeclStmt 0x12b141140 <line:9:2, col:11>     | `-VarDecl 0x12b1410d8 <col:2, col:6> col:6 used delay 'int'     |-DeclStmt 0x12b1411d8 <line:10:2, col:9>     | `-VarDecl 0x12b141170 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x12b1412b0 <line:15:2, line:16:10>     | |-BinaryOperator 0x12b141248 <line:15:6, col:13> 'int' '<'     | | |-ImplicitCastExpr 0x12b141230 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12b1411f0 <col:6> 'int' lvalue ParmVar 0x12b128748 'argc' 'int'     | | `-IntegerLiteral 0x12b141210 <col:13> 'int' 3     | `-ReturnStmt 0x12b1412a0 <line:16:3, col:10>     |   `-RecoveryExpr 0x12b141280 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b1415c0 <line:19:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x12b1412d0 <col:2> 'int' lvalue Var 0x12b140d58 'chip' 'int'     | `-CallExpr 0x12b141590 <col:9, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b141400 <col:9> 'int ()' Function 0x12b141348 'hextoul' 'int ()'     |   |-ArraySubscriptExpr 0x12b141550 <col:17, col:23> 'char *const' lvalue     |   | |-ImplicitCastExpr 0x12b141538 <col:17> 'char *const *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12b141420 <col:17> 'char *const *' lvalue ParmVar 0x12b140ac0 'argv' 'char *const *'     |   | `-IntegerLiteral 0x12b141440 <col:22> 'int' 1     |   `-RecoveryExpr 0x12b141570 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b1417c0 <line:22:2, col:30> 'int' contains-errors '='     | |-DeclRefExpr 0x12b1415e0 <col:2> 'int' lvalue Var 0x12b140e88 'addr' 'int'     | `-CallExpr 0x12b141790 <col:9, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b141600 <col:9> 'int ()' Function 0x12b141348 'hextoul' 'int ()'     |   |-ArraySubscriptExpr 0x12b141750 <col:17, col:23> 'char *const' lvalue     |   | |-ImplicitCastExpr 0x12b141738 <col:17> 'char *const *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12b141620 <col:17> 'char *const *' lvalue ParmVar 0x12b140ac0 'argv' 'char *const *'     |   | `-IntegerLiteral 0x12b141640 <col:22> 'int' 2     |   `-RecoveryExpr 0x12b141770 <col:26> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b1434a8 <line:23:2, col:43> 'int' contains-errors '='     | |-DeclRefExpr 0x12b1417e0 <col:2> 'int' lvalue Var 0x12b140df0 'alen' 'int'     | `-CallExpr 0x12b143478 <col:9, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b1418e0 <col:9> 'int ()' Function 0x12b141828 'get_alen' 'int ()'     |   |-ArraySubscriptExpr 0x12b143438 <col:18, col:24> 'char *const' lvalue     |   | |-ImplicitCastExpr 0x12b143420 <col:18> 'char *const *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12b141900 <col:18> 'char *const *' lvalue ParmVar 0x12b140ac0 'argv' 'char *const *'     |   | `-IntegerLiteral 0x12b141920 <col:23> 'int' 2     |   `-RecoveryExpr 0x12b143458 <col:27> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b143588 <line:24:2, line:25:10>     | |-BinaryOperator 0x12b143520 <line:24:6, col:13> 'int' '>'     | | |-ImplicitCastExpr 0x12b143508 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12b1434c8 <col:6> 'int' lvalue Var 0x12b140df0 'alen' 'int'     | | `-IntegerLiteral 0x12b1434e8 <col:13> 'int' 3     | `-ReturnStmt 0x12b143578 <line:25:3, col:10>     |   `-RecoveryExpr 0x12b143558 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b1435e8 <line:35:2, col:11> 'int' '='     | |-DeclRefExpr 0x12b1435a8 <col:2> 'int' lvalue Var 0x12b140f20 'length' 'int'     | `-IntegerLiteral 0x12b1435c8 <col:11> 'int' 1     |-BinaryOperator 0x12b1437e8 <line:36:2, col:32> 'int' contains-errors '='     | |-DeclRefExpr 0x12b143608 <col:2> 'int' lvalue Var 0x12b140f20 'length' 'int'     | `-CallExpr 0x12b1437b8 <col:11, col:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b143628 <col:11> 'int ()' Function 0x12b141348 'hextoul' 'int ()'     |   |-ArraySubscriptExpr 0x12b143778 <col:19, col:25> 'char *const' lvalue     |   | |-ImplicitCastExpr 0x12b143760 <col:19> 'char *const *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12b143648 <col:19> 'char *const *' lvalue ParmVar 0x12b140ac0 'argv' 'char *const *'     |   | `-IntegerLiteral 0x12b143668 <col:24> 'int' 3     |   `-RecoveryExpr 0x12b143798 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b143990 <line:37:2, line:38:24>     | |-BinaryOperator 0x12b1438b8 <line:37:6, col:27> 'int' '>'     | | |-ImplicitCastExpr 0x12b1438a0 <col:6> 'unsigned long' <IntegralCast>     | | | `-ImplicitCastExpr 0x12b143888 <col:6> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x12b143808 <col:6> 'int' lvalue Var 0x12b140f20 'length' 'int'     | | `-UnaryExprOrTypeTraitExpr 0x12b143868 <col:15, col:27> 'unsigned long' sizeof     | |   `-ParenExpr 0x12b143848 <col:21, col:27> 'char[16]' lvalue     | |     `-DeclRefExpr 0x12b143828 <col:22> 'char[16]' lvalue Var 0x12b141040 'bytes' 'char[16]' non_odr_use_unevaluated     | `-BinaryOperator 0x12b143970 <line:38:3, col:24> 'int' '='     |   |-DeclRefExpr 0x12b1438d8 <col:3> 'int' lvalue Var 0x12b140f20 'length' 'int'     |   `-ImplicitCastExpr 0x12b143958 <col:12, col:24> 'int' <IntegralCast>     |     `-UnaryExprOrTypeTraitExpr 0x12b143938 <col:12, col:24> 'unsigned long' sizeof     |       `-ParenExpr 0x12b143918 <col:18, col:24> 'char[16]' lvalue     |         `-DeclRefExpr 0x12b1438f8 <col:19> 'char[16]' lvalue Var 0x12b141040 'bytes' 'char[16]' non_odr_use_unevaluated     |-BinaryOperator 0x12b1439f0 <line:41:2, col:10> 'int' '='     | |-DeclRefExpr 0x12b1439b0 <col:2> 'int' lvalue Var 0x12b1410d8 'delay' 'int'     | `-IntegerLiteral 0x12b1439d0 <col:10> 'int' 1000     |-IfStmt 0x12b143d68 <line:42:2, line:43:32>     | |-BinaryOperator 0x12b143a68 <line:42:6, col:13> 'int' '>'     | | |-ImplicitCastExpr 0x12b143a50 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12b143a10 <col:6> 'int' lvalue ParmVar 0x12b128748 'argc' 'int'     | | `-IntegerLiteral 0x12b143a30 <col:13> 'int' 3     | `-BinaryOperator 0x12b143d48 <line:43:3, col:32> 'int' contains-errors '='     |   |-DeclRefExpr 0x12b143a88 <col:3> 'int' lvalue Var 0x12b1410d8 'delay' 'int'     |   `-CallExpr 0x12b143d18 <col:11, col:32> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12b143b88 <col:11> 'int ()' Function 0x12b143ad0 'dectoul' 'int ()'     |     |-ArraySubscriptExpr 0x12b143cd8 <col:19, col:25> 'char *const' lvalue     |     | |-ImplicitCastExpr 0x12b143cc0 <col:19> 'char *const *' <LValueToRValue>     |     | | `-DeclRefExpr 0x12b143ba8 <col:19> 'char *const *' lvalue ParmVar 0x12b140ac0 'argv' 'char *const *'     |     | `-IntegerLiteral 0x12b143bc8 <col:24> 'int' 4     |     `-RecoveryExpr 0x12b143cf8 <col:28> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x12b144868 <line:45:2, line:54:2>     | |-IntegerLiteral 0x12b143d88 <line:45:9> 'int' 1     | `-CompoundStmt 0x12b144840 <col:12, line:54:2>     |   |-BinaryOperator 0x12b144078 <line:49:3, col:49> 'int' '='     |   | |-DeclRefExpr 0x12b143da8 <col:3> 'int' lvalue Var 0x12b141170 'ret' 'int'     |   | `-CallExpr 0x12b143fb8 <col:9, col:49> 'int'     |   |   |-ImplicitCastExpr 0x12b143fa0 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12b143ea8 <col:9> 'int ()' Function 0x12b143df0 'i2c_read' 'int ()'     |   |   |-ImplicitCastExpr 0x12b144000 <col:18> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12b143ec8 <col:18> 'int' lvalue Var 0x12b140d58 'chip' 'int'     |   |   |-ImplicitCastExpr 0x12b144018 <col:24> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12b143ee8 <col:24> 'int' lvalue Var 0x12b140e88 'addr' 'int'     |   |   |-ImplicitCastExpr 0x12b144030 <col:30> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x12b143f08 <col:30> 'int' lvalue Var 0x12b140df0 'alen' 'int'     |   |   |-ImplicitCastExpr 0x12b144048 <col:36> 'char *' <ArrayToPointerDecay>     |   |   | `-DeclRefExpr 0x12b143f28 <col:36> 'char[16]' lvalue Var 0x12b141040 'bytes' 'char[16]'     |   |   `-ImplicitCastExpr 0x12b144060 <col:43> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x12b143f48 <col:43> 'int' lvalue Var 0x12b140f20 'length' 'int'     |   |-IfStmt 0x12b144288 <line:51:3, line:52:36>     |   | |-ImplicitCastExpr 0x12b1440b8 <line:51:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x12b144098 <col:7> 'int' lvalue Var 0x12b141170 'ret' 'int'     |   | `-CallExpr 0x12b144258 <line:52:4, col:36> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12b1441b0 <col:4> 'int ()' Function 0x12b1440f8 'i2c_report_err' 'int ()'     |   |   |-DeclRefExpr 0x12b1441d0 <col:19> 'int' lvalue Var 0x12b141170 'ret' 'int'     |   |   `-RecoveryExpr 0x12b144238 <col:24> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x12b144800 <line:53:3, col:15> 'int'     |     |-ImplicitCastExpr 0x12b1443c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x12b144388 <col:3> 'int ()' Function 0x12b1442d0 'udelay' 'int ()'     |     `-ImplicitCastExpr 0x12b144828 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12b1443a8 <col:10> 'int' lvalue Var 0x12b1410d8 'delay' 'int'     `-ReturnStmt 0x12b1448a8 <line:57:2, col:9>       `-IntegerLiteral 0x12b144888 <col:9> 'int' 0 ","19334":"`-FunctionDecl 0x15700ddc8  col:7 invalid NullThreadLocalOverloadState 'int (int)'   |-ParmVarDecl 0x15700dcf0 <col:36, <invalid sloc>> col:41 invalid 'int'   `-CompoundStmt 0x15700de78 <col:93, col:94> ","19351":"`-FunctionDecl 0x13a094ba8  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13a094ca8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13a094c50 <<invalid sloc>> Implicit 873 ","19485":"`-FunctionDecl 0x12a940a88  line:1:5 watermark_scale_factor_sysctl_handler 'int (struct ctl_table *, int, int)'   |-ParmVarDecl 0x12a928648 <col:43, col:61> col:61 used table 'struct ctl_table *'   |-ParmVarDecl 0x12a9286c8 <col:68, col:72> col:72 used write 'int'   |-ParmVarDecl 0x12a928740 <line:2:2, col:7> col:7 __user 'int'   `-CompoundStmt 0x12a9411d8 <line:3:1, line:14:1>     |-DeclStmt 0x12a940c10 <line:4:2, col:8>     | `-VarDecl 0x12a940ba8 <col:2, col:6> col:6 used rc 'int'     |-BinaryOperator 0x12a940f28 <line:6:2, col:62> 'int' contains-errors '='     | |-DeclRefExpr 0x12a940c28 <col:2> 'int' lvalue Var 0x12a940ba8 'rc' 'int'     | `-CallExpr 0x12a940ee0 <col:7, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a940d70 <col:7> 'int ()' Function 0x12a940cb8 'proc_dointvec_minmax' 'int ()'     |   |-DeclRefExpr 0x12a940d90 <col:28> 'struct ctl_table *' lvalue ParmVar 0x12a928648 'table' 'struct ctl_table *'     |   |-DeclRefExpr 0x12a940db0 <col:35> 'int' lvalue ParmVar 0x12a9286c8 'write' 'int'     |   |-RecoveryExpr 0x12a940e80 <col:42> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x12a940ea0 <col:50> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a940ec0 <col:58> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a940fc8 <line:7:2, line:8:10>     | |-ImplicitCastExpr 0x12a940f68 <line:7:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12a940f48 <col:6> 'int' lvalue Var 0x12a940ba8 'rc' 'int'     | `-ReturnStmt 0x12a940fb8 <line:8:3, col:10>     |   `-ImplicitCastExpr 0x12a940fa0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x12a940f80 <col:10> 'int' lvalue Var 0x12a940ba8 'rc' 'int'     |-IfStmt 0x12a941188 <line:10:2, line:11:25>     | |-ImplicitCastExpr 0x12a941008 <line:10:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12a940fe8 <col:6> 'int' lvalue ParmVar 0x12a9286c8 'write' 'int'     | `-CallExpr 0x12a941168 <line:11:3, col:25> 'int'     |   `-ImplicitCastExpr 0x12a941150 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x12a941100 <col:3> 'int ()' Function 0x12a941048 'setup_per_zone_wmarks' 'int ()'     `-ReturnStmt 0x12a9411c8 <line:13:2, col:9>       `-IntegerLiteral 0x12a9411a8 <col:9> 'int' 0 ","19703":"`-FunctionDecl 0x151141aa8  line:1:16 invalid aio_read 'int (struct kiocb *, const struct iocb *, int, int)' static   |-ParmVarDecl 0x151128668 <col:25, col:39> col:39 used req 'struct kiocb *'   |-ParmVarDecl 0x151141858 <col:44, col:63> col:63 used iocb 'const struct iocb *'   |-ParmVarDecl 0x1511418d8 <line:2:4, col:9> col:9 invalid vectored 'int'   |-ParmVarDecl 0x151141958 <col:19, col:24> col:24 invalid compat 'int'   `-CompoundStmt 0x1511476b8 <line:3:1, line:32:1>     |-DeclStmt 0x151141d08 <line:4:2, col:48>     | |-RecordDecl 0x151141b70 <col:2, col:9> col:9 struct iovec     | `-VarDecl 0x151141c88 <col:2, col:15> col:15 invalid inline_vecs 'struct iovec'     |-DeclStmt 0x151141e98 <line:5:2, col:22>     | |-RecordDecl 0x151141d20 <col:2, col:9> col:9 struct iov_iter     | `-VarDecl 0x151141e18 <col:2, col:18> col:18 invalid iter 'struct iov_iter'     |-DeclStmt 0x151142098 <line:6:2, col:19>     | |-RecordDecl 0x151141eb0 <col:2, col:9> col:9 struct file     | `-VarDecl 0x151142018 <col:2, col:15> col:15 used file 'struct file *'     |-BinaryOperator 0x151142350 <line:9:2, col:29> 'struct kiocb *' '='     | |-DeclRefExpr 0x1511420b0 <col:2> 'struct kiocb *' lvalue ParmVar 0x151128668 'req' 'struct kiocb *'     | `-ImplicitCastExpr 0x151142338 <col:8, col:29> 'struct kiocb *' <IntegralToPointer>     |   `-CallExpr 0x1511422d8 <col:8, col:29> 'int'     |     |-ImplicitCastExpr 0x1511422c0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x151142230 <col:8> 'int ()' Function 0x151142178 'aio_prep_rw' 'int ()'     |     |-ImplicitCastExpr 0x151142308 <col:20> 'struct kiocb *' <LValueToRValue>     |     | `-DeclRefExpr 0x151142250 <col:20> 'struct kiocb *' lvalue ParmVar 0x151128668 'req' 'struct kiocb *'     |     `-ImplicitCastExpr 0x151142320 <col:25> 'const struct iocb *' <LValueToRValue>     |       `-DeclRefExpr 0x151142270 <col:25> 'const struct iocb *' lvalue ParmVar 0x151141858 'iocb' 'const struct iocb *'     |-IfStmt 0x151142420 <line:10:2, line:11:10>     | |-DeclRefExpr 0x151142388 <line:10:6> 'struct kiocb *' lvalue ParmVar 0x151128668 'req' 'struct kiocb *'     | `-ReturnStmt 0x151142410 <line:11:3, col:10>     |   `-ImplicitCastExpr 0x1511423f8 <col:10> 'int' <PointerToIntegral>     |     `-ImplicitCastExpr 0x1511423e0 <col:10> 'struct kiocb *' <LValueToRValue>     |       `-DeclRefExpr 0x1511423c0 <col:10> 'struct kiocb *' lvalue ParmVar 0x151128668 'req' 'struct kiocb *'     |-BinaryOperator 0x1511424c0 <line:12:2, col:14> 'struct file *' contains-errors '='     | |-DeclRefExpr 0x151142440 <col:2> 'struct file *' lvalue Var 0x151142018 'file' 'struct file *'     | `-RecoveryExpr 0x151142498 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x151142460 <col:9> 'struct kiocb *' lvalue ParmVar 0x151128668 'req' 'struct kiocb *'     |-BinaryOperator 0x1511425b8 <line:14:2, col:9> 'struct kiocb *' contains-errors '='     | |-DeclRefExpr 0x1511424e0 <col:2> 'struct kiocb *' lvalue ParmVar 0x151128668 'req' 'struct kiocb *'     | `-UnaryOperator 0x1511425a0 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x151142588 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x151142568 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151146a00 <line:15:2, line:16:8>     | |-RecoveryExpr 0x151142770 <line:15:6, col:43> '_Bool' contains-errors     | `-GotoStmt 0x1511427e0 <line:16:3, col:8> 'out_fput' 0x151142790     |-IfStmt 0x151146b78 <line:18:2, line:19:8>     | |-CallExpr 0x151146b38 <line:18:6, col:37> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x151146a40 <col:6> 'int ()' Function 0x151142600 'unlikely' 'int ()'     | | `-UnaryOperator 0x151146b20 <col:15, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x151146b08 <col:16, col:28> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x151146ac0 <col:16, col:28> '<dependent type>' contains-errors lvalue ->read_iter     | |       `-RecoveryExpr 0x151146a98 <col:16, col:22> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x151146a60 <col:16> 'struct file *' lvalue Var 0x151142018 'file' 'struct file *'     | `-GotoStmt 0x151146b60 <line:19:3, col:8> 'out_fput' 0x151142790     |-IfStmt 0x151146d68 <line:22:2, line:23:8>     | |-RecoveryExpr 0x151146d30 <line:22:6> '_Bool' contains-errors     | `-GotoStmt 0x151146d50 <line:23:3, col:8> 'out_fput' 0x151142790     |-IfStmt 0x1511473a0 <line:25:2, line:26:52>     | |-RecoveryExpr 0x151147080 <line:25:6, col:7> '_Bool' contains-errors     | `-CallExpr 0x151147370 <line:26:3, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151147180 <col:3> 'int ()' Function 0x1511470c8 'aio_rw_done' 'int ()'     |   |-DeclRefExpr 0x1511471a0 <col:15> 'struct kiocb *' lvalue ParmVar 0x151128668 'req' 'struct kiocb *'     |   `-CallExpr 0x151147338 <col:20, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1511472a0 <col:20> 'int ()' Function 0x1511471e8 'call_read_iter' 'int ()'     |     |-DeclRefExpr 0x1511472c0 <col:35> 'struct file *' lvalue Var 0x151142018 'file' 'struct file *'     |     |-DeclRefExpr 0x1511472e0 <col:41> 'struct kiocb *' lvalue ParmVar 0x151128668 'req' 'struct kiocb *'     |     `-UnaryOperator 0x151147320 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x151147300 <col:47> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x151147698 <line:28:1, line:30:12> 'out_fput'       `-IfStmt 0x151147678 <line:29:2, line:30:12>         |-RecoveryExpr 0x1511474e0 <line:29:6, col:18> '_Bool' contains-errors         `-CallExpr 0x151147638 <line:30:3, col:12> 'int'           |-ImplicitCastExpr 0x151147620 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x1511475e0 <col:3> 'int ()' Function 0x151147528 'fput' 'int ()'           `-ImplicitCastExpr 0x151147660 <col:8> 'struct file *' <LValueToRValue>             `-DeclRefExpr 0x151147600 <col:8> 'struct file *' lvalue Var 0x151142018 'file' 'struct file *' ","19607":"`-FunctionDecl 0x124145a38  line:1:12 invalid init_ov_sensor 'int (struct sd *, int)' static   |-ParmVarDecl 0x124128648 <col:27, col:38> col:38 used sd 'struct sd *'   |-ParmVarDecl 0x1241286e0 <col:42, col:45> col:45 invalid slave 'int'   `-CompoundStmt 0x1241488d0 <line:2:1, line:33:1>     |-DeclStmt 0x124145b70 <line:3:2, col:7>     | `-VarDecl 0x124145b08 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x124145e60 <line:4:2, col:54>     | |-RecordDecl 0x124145b88 <col:2, col:9> col:9 struct gspca_dev     | `-VarDecl 0x124145cf8 <col:2, col:52> col:20 used gspca_dev 'struct gspca_dev *' cinit     |   `-CStyleCastExpr 0x124145e20 <col:32, col:52> 'struct gspca_dev *' <BitCast>     |     `-ImplicitCastExpr 0x124145e08 <col:52> 'struct sd *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x124145d60 <col:52> 'struct sd *' lvalue ParmVar 0x124128648 'sd' 'struct sd *'     |-CallExpr 0x124146030 <line:6:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124145fd0 <col:2> 'int ()' Function 0x124145f18 'ov51x_set_slave_ids' 'int ()'     | |-DeclRefExpr 0x124145ff0 <col:22> 'struct sd *' lvalue ParmVar 0x124128648 'sd' 'struct sd *'     | `-RecoveryExpr 0x124146010 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x124146208 <line:9:2, col:22> 'int'     | |-ImplicitCastExpr 0x1241461f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124146140 <col:2> 'int ()' Function 0x124146088 'i2c_w' 'int ()'     | |-ImplicitCastExpr 0x124146240 <col:8> 'struct sd *' <LValueToRValue>     | | `-DeclRefExpr 0x124146160 <col:8> 'struct sd *' lvalue ParmVar 0x124128648 'sd' 'struct sd *'     | |-IntegerLiteral 0x124146180 <col:12> 'int' 18     | `-IntegerLiteral 0x1241461a0 <col:18> 'int' 128     |-CallExpr 0x124146390 <line:12:2, col:12> 'int'     | |-ImplicitCastExpr 0x124146378 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x124146338 <col:2> 'int ()' Function 0x124146280 'msleep' 'int ()'     | `-IntegerLiteral 0x124146358 <col:9> 'int' 150     |-ForStmt 0x124148850 <line:14:2, line:31:2>     | |-BinaryOperator 0x1241463f8 <line:14:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1241463b8 <col:7> 'int' lvalue Var 0x124145b08 'i' 'int'     | | `-IntegerLiteral 0x1241463d8 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x124146490 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x124146418 <col:14> 'int' lvalue Var 0x124145b08 'i' 'int'     | | `-RecoveryExpr 0x124146470 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1241464d0 <col:36, col:37> 'int' postfix '++'     | | `-DeclRefExpr 0x1241464b0 <col:36> 'int' lvalue Var 0x124145b08 'i' 'int'     | `-CompoundStmt 0x124148820 <col:41, line:31:2>     |   |-IfStmt 0x124148530 <line:15:3, line:20:3>     |   | |-BinaryOperator 0x124146858 <line:15:7, line:16:39> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x1241467c8 <line:15:7, col:40> 'int' contains-errors '=='     |   | | | |-CallExpr 0x124146798 <col:7, col:35> '<dependent type>' contains-errors     |   | | | | |-DeclRefExpr 0x1241465c8 <col:7> 'int ()' Function 0x124146510 'i2c_r' 'int ()'     |   | | | | |-DeclRefExpr 0x1241465e8 <col:13> 'struct sd *' lvalue ParmVar 0x124128648 'sd' 'struct sd *'     |   | | | | `-RecoveryExpr 0x124146778 <col:17> '<dependent type>' contains-errors lvalue     |   | | | `-IntegerLiteral 0x124146650 <col:40> 'int' 127     |   | | `-BinaryOperator 0x124146838 <line:16:7, col:39> 'int' contains-errors '=='     |   | |   |-CallExpr 0x124146808 <col:7, col:34> '<dependent type>' contains-errors     |   | |   | |-DeclRefExpr 0x124146690 <col:7> 'int ()' Function 0x124146510 'i2c_r' 'int ()'     |   | |   | |-DeclRefExpr 0x1241466b0 <col:13> 'struct sd *' lvalue ParmVar 0x124128648 'sd' 'struct sd *'     |   | |   | `-RecoveryExpr 0x1241467e8 <col:17> '<dependent type>' contains-errors lvalue     |   | |   `-IntegerLiteral 0x124146718 <col:39> 'int' 162     |   | `-CompoundStmt 0x124148510 <col:45, line:20:3>     |   |   |-CallExpr 0x1241484a0 <line:17:4, line:18:8> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x124146958 <line:17:4> 'int ()' Function 0x1241468a0 'gspca_dbg' 'int ()'     |   |   | |-DeclRefExpr 0x124146978 <col:14> 'struct gspca_dev *' lvalue Var 0x124145cf8 'gspca_dev' 'struct gspca_dev *'     |   |   | |-RecoveryExpr 0x124148480 <col:25> '<dependent type>' contains-errors lvalue     |   |   | |-StringLiteral 0x124148400 <col:34> 'char[4]' lvalue \"STR\"     |   |   | `-DeclRefExpr 0x124148420 <line:18:7> 'int' lvalue Var 0x124145b08 'i' 'int'     |   |   `-ReturnStmt 0x124148500 <line:19:4, col:11>     |   |     `-IntegerLiteral 0x1241484e0 <col:11> 'int' 0     |   |-CallExpr 0x1241485e8 <line:23:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x1241485d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x124148550 <col:3> 'int ()' Function 0x124146088 'i2c_w' 'int ()'     |   | |-ImplicitCastExpr 0x124148620 <col:9> 'struct sd *' <LValueToRValue>     |   | | `-DeclRefExpr 0x124148570 <col:9> 'struct sd *' lvalue ParmVar 0x124128648 'sd' 'struct sd *'     |   | |-IntegerLiteral 0x124148590 <col:13> 'int' 18     |   | `-IntegerLiteral 0x1241485b0 <col:19> 'int' 128     |   |-CallExpr 0x124148690 <line:26:3, col:13> 'int'     |   | |-ImplicitCastExpr 0x124148678 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x124148638 <col:3> 'int ()' Function 0x124146280 'msleep' 'int ()'     |   | `-IntegerLiteral 0x124148658 <col:10> 'int' 150     |   `-IfStmt 0x124148800 <line:29:3, line:30:12>     |     |-BinaryOperator 0x124148798 <line:29:7, col:25> 'int' '<'     |     | |-CallExpr 0x124148730 <col:7, col:21> 'int'     |     | | |-ImplicitCastExpr 0x124148718 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | | `-DeclRefExpr 0x1241486b8 <col:7> 'int ()' Function 0x124146510 'i2c_r' 'int ()'     |     | | |-ImplicitCastExpr 0x124148760 <col:13> 'struct sd *' <LValueToRValue>     |     | | | `-DeclRefExpr 0x1241486d8 <col:13> 'struct sd *' lvalue ParmVar 0x124128648 'sd' 'struct sd *'     |     | | `-IntegerLiteral 0x1241486f8 <col:17> 'int' 0     |     | `-IntegerLiteral 0x124148778 <col:25> 'int' 0     |     `-ReturnStmt 0x1241487f0 <line:30:4, col:12>     |       `-UnaryOperator 0x1241487d8 <col:11, col:12> 'int' prefix '-'     |         `-IntegerLiteral 0x1241487b8 <col:12> 'int' 1     `-ReturnStmt 0x1241488c0 <line:32:2, col:10>       `-UnaryOperator 0x1241488a8 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x124148888 <col:10> 'int' 1 ","19741":"`-FunctionDecl 0x155128388  line:1:19 invalid spl_object_storage_get_gc 'int *(int *, int ***, int *)' static   |-ParmVarDecl 0x155128128 <col:45, col:51> col:51 invalid obj 'int *'   |-ParmVarDecl 0x155128210 <col:56, col:64> col:64 invalid table 'int ***'   |-ParmVarDecl 0x155128290 <col:71, col:76> col:76 used n 'int *'   `-CompoundStmt 0x155141cf0 <line:2:1, line:39:1>     |-BinaryOperator 0x1551286c0 <line:12:2, col:11> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x155128688 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x155128670 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1551285b8 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1551286a0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x155128750 <line:13:2, col:7> 'int' '='     | |-UnaryOperator 0x155128718 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x155128700 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x1551286e0 <col:3> 'int *' lvalue ParmVar 0x155128290 'n' 'int *'     | `-IntegerLiteral 0x155128730 <col:7> 'int' 0     `-WhileStmt 0x155141cd0 <line:32:2, line:36:2>       |-RecoveryExpr 0x155141a80 <line:32:9, col:85> '_Bool' contains-errors       `-CompoundStmt 0x155141cc0 <col:94, line:36:2> ","19360":"`-FunctionDecl 0x15200de88  line:1:1 invalid updateSelectOption 'int (int *, int *)'   |-ParmVarDecl 0x15200dd28 <col:20, col:34> col:34 invalid fi 'int *'   |-ParmVarDecl 0x15200dda8 <col:38, col:60> col:60 referenced invalid item 'int *'   `-CompoundStmt 0x152027ab0 <line:2:1, line:13:1>     |-DeclStmt 0x15200dfc0 <line:3:5, col:10>     | `-VarDecl 0x15200df58 <col:5, col:9> col:9 used i 'int'     |-IfStmt 0x15200e158 <line:5:5, line:6:2>     | |-BinaryOperator 0x15200e128 <line:5:9, col:31> 'int' contains-errors '||'     | | |-BinaryOperator 0x15200e0c8 <col:9, col:15> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x15200dfd8 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x15200e0a8 <col:15> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x15200e108 <col:23, col:31> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x15200e030 <col:23> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x15200e0e8 <col:31> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15200e148 <line:6:2>     `-ForStmt 0x152027a78 <line:7:5, line:12:5>       |-BinaryOperator 0x15200e1b8 <line:7:10, col:14> 'int' '='       | |-DeclRefExpr 0x15200e178 <col:10> 'int' lvalue Var 0x15200df58 'i' 'int'       | `-IntegerLiteral 0x15200e198 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x15200e250 <col:17, col:25> 'int' contains-errors '!='       | |-RecoveryExpr 0x15200e1d8 <col:17> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x15200e230 <col:25> '<dependent type>' contains-errors lvalue       |-BinaryOperator 0x15200e350 <col:31, col:49> '<dependent type>' contains-errors ','       | |-UnaryOperator 0x15200e290 <col:31, col:32> 'int' postfix '++'       | | `-DeclRefExpr 0x15200e270 <col:31> 'int' lvalue Var 0x15200df58 'i' 'int'       | `-BinaryOperator 0x15200e330 <col:36, col:49> '<dependent type>' contains-errors '='       |   |-RecoveryExpr 0x15200e2a8 <col:36> '<dependent type>' contains-errors lvalue       |   `-CXXDependentScopeMemberExpr 0x15200e2e8 <col:43, col:49> '<dependent type>' contains-errors lvalue ->next       |     `-RecoveryExpr 0x15200e2c8 <col:43> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x152027a60 <col:55, line:12:5>         `-IfStmt 0x152027a30 <line:8:2, line:11:22> has_else           |-BinaryOperator 0x152027800 <line:8:6, col:15> 'int' contains-errors '=='           | |-DeclRefExpr 0x15200e370 <col:6> 'int' lvalue Var 0x15200df58 'i' 'int'           | `-CXXDependentScopeMemberExpr 0x15200e3b0 <col:11, col:15> '<dependent type>' contains-errors lvalue ->selected           |   `-RecoveryExpr 0x15200e390 <col:11> '<dependent type>' contains-errors lvalue           |-BinaryOperator 0x152027908 <line:9:6, col:22> '<dependent type>' contains-errors '='           | |-CXXDependentScopeMemberExpr 0x152027868 <col:6, col:12> '<dependent type>' contains-errors lvalue ->checked           | | `-RecoveryExpr 0x152027840 <col:6> '<dependent type>' contains-errors lvalue           | |   `-DeclRefExpr 0x152027820 <col:6> 'int *' lvalue ParmVar 0x15200dda8 'item' 'int *'           | `-RecoveryExpr 0x1520278e8 <col:22> '<dependent type>' contains-errors lvalue           `-BinaryOperator 0x152027a10 <line:11:6, col:22> '<dependent type>' contains-errors '='             |-CXXDependentScopeMemberExpr 0x152027970 <col:6, col:12> '<dependent type>' contains-errors lvalue ->checked             | `-RecoveryExpr 0x152027948 <col:6> '<dependent type>' contains-errors lvalue             |   `-DeclRefExpr 0x152027928 <col:6> 'int *' lvalue ParmVar 0x15200dda8 'item' 'int *'             `-RecoveryExpr 0x1520279f0 <col:22> '<dependent type>' contains-errors lvalue ","19567":"`-FunctionDecl 0x13b81dfc0  line:1:8 invalid combine_list 'void (int)'   |-ParmVarDecl 0x13b81def0 <col:21, <invalid sloc>> col:28 invalid 'int'   `-CompoundStmt 0x13b81e570 <line:2:3, line:16:3>     |-DeclStmt 0x13b81e128 <line:5:5, col:23>     | `-VarDecl 0x13b81e088 <col:5, col:22> col:18 used s 'const char *' cinit     |   `-ImplicitCastExpr 0x13b81e110 <col:22> 'const char *' <NullToPointer>     |     `-IntegerLiteral 0x13b81e0f0 <col:22> 'int' 0     `-WhileStmt 0x13b81e3f0 <line:6:5, line:14:5>       |-RecoveryExpr 0x13b81e198 <line:6:13, col:33> '_Bool' contains-errors       `-CompoundStmt 0x13b81e3d8 <line:7:5, line:14:5>         `-ForStmt 0x13b81e388 <line:8:7, line:12:7>           |-<<<NULL>>>           |-<<<NULL>>>           |-ImplicitCastExpr 0x13b81e208 <line:8:14, col:15> 'char' <LValueToRValue>           | `-UnaryOperator 0x13b81e1f0 <col:14, col:15> 'const char' lvalue prefix '*' cannot overflow           |   `-ImplicitCastExpr 0x13b81e1d8 <col:15> 'const char *' <LValueToRValue>           |     `-DeclRefExpr 0x13b81e1b8 <col:15> 'const char *' lvalue Var 0x13b81e088 's' 'const char *'           |-UnaryOperator 0x13b81e240 <col:18, col:20> 'const char *' prefix '++'           | `-DeclRefExpr 0x13b81e220 <col:20> 'const char *' lvalue Var 0x13b81e088 's' 'const char *'           `-CompoundStmt 0x13b81e378 <col:23, line:12:7> ","19971":"`-FunctionDecl 0x1589281a8  line:1:7 ipc_rcu_alloc 'void *(int)'   |-ParmVarDecl 0x1589280d8 <col:21, col:25> col:25 used size 'int'   `-CompoundStmt 0x158941fe8 <line:2:1, line:22:1>     |-DeclStmt 0x158928320 <line:3:2, col:11>     | `-VarDecl 0x1589282b8 <col:2, col:8> col:8 used out 'void *'     |-IfStmt 0x158941f70 <line:5:2, line:19:2> has_else     | |-CallExpr 0x1589284e8 <line:5:6, col:26> 'int'     | | |-ImplicitCastExpr 0x1589284d0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x158928460 <col:6> 'int ()' Function 0x1589283a8 'rcu_use_vmalloc' 'int ()'     | | `-ImplicitCastExpr 0x158928510 <col:22> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x158928480 <col:22> 'int' lvalue ParmVar 0x1589280d8 'size' 'int'     | |-CompoundStmt 0x158941a88 <col:29, line:12:2>     | | |-BinaryOperator 0x158928750 <line:6:3, col:38> 'void *' contains-errors '='     | | | |-DeclRefExpr 0x158928528 <col:3> 'void *' lvalue Var 0x1589282b8 'out' 'void *'     | | | `-CallExpr 0x158928728 <col:9, col:38> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x158928628 <col:9> 'int ()' Function 0x158928570 'vmalloc' 'int ()'     | | |   `-BinaryOperator 0x158928708 <col:17, col:34> '<dependent type>' contains-errors '+'     | | |     |-RecoveryExpr 0x1589286e8 <col:17> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x158928660 <col:34> 'int' lvalue ParmVar 0x1589280d8 'size' 'int'     | | `-IfStmt 0x158941a68 <line:7:3, line:11:3>     | |   |-ImplicitCastExpr 0x158928790 <line:7:7> 'void *' <LValueToRValue>     | |   | `-DeclRefExpr 0x158928770 <col:7> 'void *' lvalue Var 0x1589282b8 'out' 'void *'     | |   `-CompoundStmt 0x158941a50 <col:12, line:11:3>     | |     `-CompoundAssignOperator 0x158941850 <line:8:4, col:11> 'void *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |       |-DeclRefExpr 0x1589287a8 <col:4> 'void *' lvalue Var 0x1589282b8 'out' 'void *'     | |       `-RecoveryExpr 0x158941830 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x158941f50 <line:12:9, line:19:2>     |   |-BinaryOperator 0x158941d18 <line:13:3, col:50> 'void *' contains-errors '='     |   | |-DeclRefExpr 0x158941aa8 <col:3> 'void *' lvalue Var 0x1589282b8 'out' 'void *'     |   | `-CallExpr 0x158941ce8 <col:9, col:50> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x158941ba8 <col:9> 'int ()' Function 0x158941af0 'kmalloc' 'int ()'     |   |   |-BinaryOperator 0x158941ca8 <col:17, col:34> '<dependent type>' contains-errors '+'     |   |   | |-RecoveryExpr 0x158941c88 <col:17> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x158941be0 <col:34> 'int' lvalue ParmVar 0x1589280d8 'size' 'int'     |   |   `-RecoveryExpr 0x158941cc8 <col:40> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x158941f30 <line:14:3, line:18:3>     |     |-ImplicitCastExpr 0x158941d58 <line:14:7> 'void *' <LValueToRValue>     |     | `-DeclRefExpr 0x158941d38 <col:7> 'void *' lvalue Var 0x1589282b8 'out' 'void *'     |     `-CompoundStmt 0x158941f18 <col:12, line:18:3>     |       `-CompoundAssignOperator 0x158941df8 <line:15:4, col:11> 'void *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |         |-DeclRefExpr 0x158941d70 <col:4> 'void *' lvalue Var 0x1589282b8 'out' 'void *'     |         `-RecoveryExpr 0x158941dd8 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x158941fd8 <line:21:2, col:9>       `-ImplicitCastExpr 0x158941fc0 <col:9> 'void *' <LValueToRValue>         `-DeclRefExpr 0x158941fa0 <col:9> 'void *' lvalue Var 0x1589282b8 'out' 'void *' ","19938":"`-FunctionDecl 0x139128558  line:1:1 invalid Assign 'int (int *, int, int, int, int, int, int *)'   |-ParmVarDecl 0x139128128 <col:8, col:19> col:19 invalid targets 'int *'   |-ParmVarDecl 0x1391281a8 <col:28, col:36> col:36 invalid value 'int'   |-ParmVarDecl 0x139128228 <col:43, col:47> col:47 used lineno 'int'   |-ParmVarDecl 0x1391282a8 <col:55, col:59> col:59 used col_offset 'int'   |-ParmVarDecl 0x139128328 <col:71, line:2:8> col:8 used end_lineno 'int'   |-ParmVarDecl 0x1391283a8 <col:20, col:24> col:24 used end_col_offset 'int'   |-ParmVarDecl 0x139128428 <col:40, col:49> col:49 invalid arena 'int *'   `-CompoundStmt 0x139141b78 <line:3:1, line:21:1>     |-IfStmt 0x139141968 <line:5:5, line:9:5>     | |-UnaryOperator 0x139128670 <line:5:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x139128658 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x139128638 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x139141948 <col:17, line:9:5>     |   |-CallExpr 0x1391418d0 <line:6:9, line:7:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1391287e0 <line:6:9> 'int ()' Function 0x139128728 'PyErr_SetString' 'int ()'     |   | |-RecoveryExpr 0x1391418b0 <col:25> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x139141860 <line:7:25> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x139141938 <line:8:9, col:16>     |     `-RecoveryExpr 0x139141918 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x139141a80 <line:11:5, line:12:16>       |-UnaryOperator 0x139141a20 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x139141a08 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x1391419e8 <col:10> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x139141a70 <line:12:9, col:16>         `-RecoveryExpr 0x139141a50 <col:16> '<dependent type>' contains-errors lvalue ","19165":"`-FunctionDecl 0x13980dd98  line:1:1 pq_peekbyte 'int (void)'   `-CompoundStmt 0x13980e1b8 <line:2:1, line:9:1>     `-WhileStmt 0x13980e168 <line:3:2, line:7:2>       |-BinaryOperator 0x13980df30 <line:3:9, col:26> 'int' contains-errors '>='       | |-RecoveryExpr 0x13980def0 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13980df10 <col:26> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13980e150 <line:4:2, line:7:2>         `-IfStmt 0x13980e130 <line:5:3, line:6:11>           |-CallExpr 0x13980e0c8 <line:5:7, col:18> 'int'           | `-ImplicitCastExpr 0x13980e0b0 <col:7> 'int (*)()' <FunctionToPointerDecay>           |   `-DeclRefExpr 0x13980e060 <col:7> 'int ()' Function 0x13980dfa8 'pq_recvbuf' 'int ()'           `-ReturnStmt 0x13980e120 <line:6:4, col:11>             `-RecoveryExpr 0x13980e100 <col:11> '<dependent type>' contains-errors lvalue ","19489":"`-FunctionDecl 0x136128c88  line:1:1 invalid ngx_http_lua_set_content_length_header 'int (int *, int)'   |-ParmVarDecl 0x136128b28 <col:40, col:60> col:60 referenced invalid r 'int *'   |-ParmVarDecl 0x136128ba8 <col:63, col:69> col:69 invalid len 'int'   `-CompoundStmt 0x1361447d8 <line:2:1, line:91:1>     |-DeclStmt 0x136128e20 <line:4:5, col:39>     | `-VarDecl 0x136128db8 <col:5, col:38> col:38 used p 'char *'     |-BinaryOperator 0x136128f60 <line:9:5, col:38> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x136128ef8 <col:5, col:19> '<dependent type>' contains-errors lvalue .content_length_n     | | `-CXXDependentScopeMemberExpr 0x136128eb0 <col:5, col:8> '<dependent type>' contains-errors lvalue ->headers_in     | |   `-RecoveryExpr 0x136128e88 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x136128e68 <col:5> 'int *' lvalue ParmVar 0x136128b28 'r' 'int *'     | `-RecoveryExpr 0x136128f40 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136142318 <line:11:5, line:15:5>     | |-RecoveryExpr 0x136142298 <line:11:9, line:12:51> '_Bool' contains-errors     | `-CompoundStmt 0x136142300 <line:13:5, line:15:5>     |   `-ReturnStmt 0x1361422f0 <line:14:9, col:16>     |     `-RecoveryExpr 0x1361422d0 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1361425e8 <line:18:5, line:20:5>     | |-BinaryOperator 0x1361425b8 <line:18:9, col:14> 'int' contains-errors '=='     | | |-RecoveryExpr 0x136142578 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x136142598 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1361425d8 <col:20, line:20:5>     |-IfStmt 0x1361427a0 <line:24:5, line:26:5>     | |-RecoveryExpr 0x136142770 <line:24:9, col:27> '_Bool' contains-errors     | `-CompoundStmt 0x136142790 <col:33, line:26:5>     |-IfStmt 0x136142b70 <line:33:5, line:35:5>     | |-RecoveryExpr 0x136142b40 <line:33:9, col:14> '_Bool' contains-errors     | `-CompoundStmt 0x136142b60 <col:20, line:35:5>     |-CallExpr 0x136143110 <line:49:5, line:51:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136142e10 <line:49:5> 'int ()' Function 0x136142d58 'dd' 'int ()'     | |-StringLiteral 0x136142e30 <col:8> 'char[4]' lvalue \"STR\"     | |-CStyleCastExpr 0x136142fa8 <line:50:8, col:50> 'int' contains-errors <Dependent>     | | `-CXXDependentScopeMemberExpr 0x136142f48 <col:14, col:50> '<dependent type>' contains-errors lvalue .len     | |   `-CXXDependentScopeMemberExpr 0x136142f00 <col:14, col:44> '<dependent type>' contains-errors lvalue ->value     | |     `-CXXDependentScopeMemberExpr 0x136142eb8 <col:14, col:28> '<dependent type>' contains-errors lvalue .content_length     | |       `-CXXDependentScopeMemberExpr 0x136142e70 <col:14, col:17> '<dependent type>' contains-errors lvalue ->headers_in     | |         `-RecoveryExpr 0x136142e50 <col:14> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1361430c8 <line:51:8, col:44> '<dependent type>' contains-errors lvalue .data     |   `-CXXDependentScopeMemberExpr 0x136143080 <col:8, col:38> '<dependent type>' contains-errors lvalue ->value     |     `-CXXDependentScopeMemberExpr 0x136143038 <col:8, col:22> '<dependent type>' contains-errors lvalue .content_length     |       `-CXXDependentScopeMemberExpr 0x136142ff0 <col:8, col:11> '<dependent type>' contains-errors lvalue ->headers_in     |         `-RecoveryExpr 0x136142fd0 <col:8> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1361431e0 <line:55:5, line:57:5>     | |-RecoveryExpr 0x1361431b0 <line:55:9, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x1361431d0 <col:21, line:57:5>     `-ForStmt 0x1361447a0 <line:64:5, line:88:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       `-CompoundStmt 0x136144778 <line:64:24, line:88:5>         |-IfStmt 0x1361442d8 <line:66:9, line:74:9>         | |-RecoveryExpr 0x136144220 <line:66:13, col:24> '_Bool' contains-errors         | `-CompoundStmt 0x1361442c0 <col:31, line:74:9>         |   `-IfStmt 0x136144280 <line:67:13, line:69:13>         |     |-RecoveryExpr 0x136144240 <line:67:17, col:31> '_Bool' contains-errors         |     `-CompoundStmt 0x136144268 <col:37, line:69:13>         |       `-BreakStmt 0x136144260 <line:68:17>         |-IfStmt 0x1361445c8 <line:76:9, line:81:9>         | |-RecoveryExpr 0x136144588 <line:76:13, line:78:54> '_Bool' contains-errors         | `-CompoundStmt 0x1361445b0 <line:79:9, line:81:9>         |   `-ContinueStmt 0x1361445a8 <line:80:13>         `-IfStmt 0x136144758 <line:83:9, line:87:9>           |-RecoveryExpr 0x136144728 <line:83:13, line:84:66> '_Bool' contains-errors           `-CompoundStmt 0x136144748 <line:85:9, line:87:9> ","19422":"`-FunctionDecl 0x15000de88  line:1:12 invalid cli_get_container_intermediate 'int (int *, int)'   |-ParmVarDecl 0x15000dd28 <col:43, col:52> col:52 invalid ctx 'int *'   |-ParmVarDecl 0x15000dda8 <col:57, col:61> col:61 used index 'int'   `-CompoundStmt 0x15000e3d8 <line:2:1, line:8:1>     |-IfStmt 0x15000e0e0 <line:3:4, line:4:35>     | |-BinaryOperator 0x15000df98 <line:3:8, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x15000df80 <col:8> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15000df40 <col:8> 'int' lvalue ParmVar 0x15000dda8 'index' 'int'     | | `-IntegerLiteral 0x15000df60 <col:16> 'int' 0     | `-BinaryOperator 0x15000e0c0 <line:4:2, col:35> 'int' contains-errors '='     |   |-DeclRefExpr 0x15000dfb8 <col:2> 'int' lvalue ParmVar 0x15000dda8 'index' 'int'     |   `-BinaryOperator 0x15000e0a0 <col:10, col:35> '<dependent type>' contains-errors '+'     |     |-BinaryOperator 0x15000e060 <col:10, col:27> '<dependent type>' contains-errors '+'     |     | |-CXXDependentScopeMemberExpr 0x15000dff8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->recursion     |     | | `-RecoveryExpr 0x15000dfd8 <col:10> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15000e040 <col:27> 'int' lvalue ParmVar 0x15000dda8 'index' 'int'     |     `-IntegerLiteral 0x15000e080 <col:35> 'int' 1     |-IfStmt 0x15000e370 <line:5:5, line:6:32>     | |-BinaryOperator 0x15000e220 <line:5:9, col:37> 'int' contains-errors '&&'     | | |-BinaryOperator 0x15000e158 <col:9, col:18> 'int' '>='     | | | |-ImplicitCastExpr 0x15000e140 <col:9> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x15000e100 <col:9> 'int' lvalue ParmVar 0x15000dda8 'index' 'int'     | | | `-IntegerLiteral 0x15000e120 <col:18> 'int' 0     | | `-BinaryOperator 0x15000e200 <col:23, col:37> 'int' contains-errors '<='     | |   |-DeclRefExpr 0x15000e178 <col:23> 'int' lvalue ParmVar 0x15000dda8 'index' 'int'     | |   `-CXXDependentScopeMemberExpr 0x15000e1b8 <col:32, col:37> '<dependent type>' contains-errors lvalue ->recursion     | |     `-RecoveryExpr 0x15000e198 <col:32> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15000e360 <line:6:2, col:32>     |   `-CXXDependentScopeMemberExpr 0x15000e318 <col:9, col:32> '<dependent type>' contains-errors lvalue .type     |     `-ArraySubscriptExpr 0x15000e2f8 <col:9, col:30> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x15000e2c8 <col:9, col:14> '<dependent type>' contains-errors <LValueToRValue>     |       | `-CXXDependentScopeMemberExpr 0x15000e260 <col:9, col:14> '<dependent type>' contains-errors lvalue ->containers     |       |   `-RecoveryExpr 0x15000e240 <col:9> '<dependent type>' contains-errors lvalue     |       `-ImplicitCastExpr 0x15000e2e0 <col:25> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x15000e2a8 <col:25> 'int' lvalue ParmVar 0x15000dda8 'index' 'int'     `-ReturnStmt 0x15000e3c8 <line:7:5, col:12>       `-RecoveryExpr 0x15000e3a8 <col:12> '<dependent type>' contains-errors lvalue ","19136":"`-FunctionDecl 0x12d1282e8  line:1:1 referenced invalid rfbSendServerCutText 'int (int, char *, int)'   |-ParmVarDecl 0x12d1280f0 <col:22, col:39> col:39 invalid rfbScreen 'int'   |-ParmVarDecl 0x12d128170 <col:49, col:55> col:55 used str 'char *'   |-ParmVarDecl 0x12d1281f0 <col:60, col:64> col:64 used len 'int'   `-CompoundStmt 0x12d142250 <line:2:1, line:24:1>     `-WhileStmt 0x12d142130 <line:8:5, line:22:5>       |-RecoveryExpr 0x12d1286f8 <line:8:12, col:54> '_Bool' contains-errors       `-CompoundStmt 0x12d142110 <col:60, line:22:5>         |-IfStmt 0x12d141e20 <line:11:9, line:16:9>         | |-RecoveryExpr 0x12d141b20 <line:11:13, line:12:50> '_Bool' contains-errors         | `-CompoundStmt 0x12d141e00 <col:53, line:16:9>         |   |-CallExpr 0x12d141cb8 <line:13:13, col:31> 'int'         |   | |-ImplicitCastExpr 0x12d141ca0 <col:13> 'int (*)()' <FunctionToPointerDecay>         |   | | `-DeclRefExpr 0x12d141c20 <col:13> 'int ()' Function 0x12d141b68 'rfbLogPerror' 'int ()'         |   | `-ImplicitCastExpr 0x12d141ce0 <col:26> 'char *' <ArrayToPointerDecay>         |   |   `-StringLiteral 0x12d141c80 <col:26> 'char[4]' lvalue \"STR\"         |   `-ContinueStmt 0x12d141df8 <line:15:13>         `-IfStmt 0x12d141fb0 <line:17:9, line:20:9>           |-RecoveryExpr 0x12d141ec0 <line:17:13, col:43> '_Bool' contains-errors           `-CompoundStmt 0x12d141f98 <col:46, line:20:9>             `-CallExpr 0x12d141f38 <line:18:13, col:31> 'int'               |-ImplicitCastExpr 0x12d141f20 <col:13> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x12d141ee0 <col:13> 'int ()' Function 0x12d141b68 'rfbLogPerror' 'int ()'               `-ImplicitCastExpr 0x12d141f60 <col:26> 'char *' <ArrayToPointerDecay>                 `-StringLiteral 0x12d141f00 <col:26> 'char[4]' lvalue \"STR\" ","19675":"`-FunctionDecl 0x11d81dbe8  line:1:1 Curl_ssl_connect 'int (struct Curl_easy *, struct connectdata *, int)'   |-ParmVarDecl 0x11c8ff848 <col:18, col:36> col:36 used data 'struct Curl_easy *'   |-ParmVarDecl 0x11d81da28 <col:42, col:62> col:62 used conn 'struct connectdata *'   |-ParmVarDecl 0x11d81daa8 <line:2:18, col:22> col:22 used sockindex 'int'   `-CompoundStmt 0x11c9180c0 <line:3:1, line:29:1>     |-IfStmt 0x11d81e0f0 <line:7:3, line:11:3>     | |-ArraySubscriptExpr 0x11d81de00 <line:7:6, col:46> '<dependent type>' contains-errors lvalue     | | |-ImplicitCastExpr 0x11d81ddd0 <col:6, col:17> '<dependent type>' contains-errors <LValueToRValue>     | | | `-CXXDependentScopeMemberExpr 0x11d81dd68 <col:6, col:17> '<dependent type>' contains-errors lvalue .proxy_ssl_connected     | | |   `-RecoveryExpr 0x11d81dd40 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x11d81dd08 <col:6> 'struct connectdata *' lvalue ParmVar 0x11d81da28 'conn' 'struct connectdata *'     | | `-ImplicitCastExpr 0x11d81dde8 <col:37> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x11d81ddb0 <col:37> 'int' lvalue ParmVar 0x11d81daa8 'sockindex' 'int'     | `-CompoundStmt 0x11d81e0d8 <col:49, line:11:3>     |   `-IfStmt 0x11d81e0b8 <line:9:5, line:10:14>     |     |-RecoveryExpr 0x11d81e050 <line:9:8> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x11d81e0a8 <line:10:7, col:14>     |       `-RecoveryExpr 0x11d81e088 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11d81e2e8 <line:14:3, line:15:12>     | |-UnaryOperator 0x11d81e288 <line:14:6, col:27> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x11d81e248 <col:7, col:27> 'int'     | |   |-ImplicitCastExpr 0x11d81e230 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x11d81e1f0 <col:7> 'int ()' Function 0x11d81e138 'ssl_prefs_check' 'int ()'     | |   `-ImplicitCastExpr 0x11d81e270 <col:23> 'struct Curl_easy *' <LValueToRValue>     | |     `-DeclRefExpr 0x11d81e210 <col:23> 'struct Curl_easy *' lvalue ParmVar 0x11c8ff848 'data' 'struct Curl_easy *'     | `-ReturnStmt 0x11d81e2d8 <line:15:5, col:12>     |   `-RecoveryExpr 0x11d81e2b8 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11d81e5a8 <line:18:3, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11d81e540 <col:3, col:24> '<dependent type>' contains-errors lvalue .use     | | `-ArraySubscriptExpr 0x11d81e520 <col:3, col:22> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x11d81e4f0 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x11d81e340 <col:3, col:9> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x11d81e308 <col:3> 'struct connectdata *' lvalue ParmVar 0x11d81da28 'conn' 'struct connectdata *'     | |   `-ImplicitCastExpr 0x11d81e508 <col:13> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x11d81e368 <col:13> 'int' lvalue ParmVar 0x11d81daa8 'sockindex' 'int'     | `-RecoveryExpr 0x11d81e588 <col:30> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x11d81e868 <line:19:3, col:32> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x11d81e800 <col:3, col:24> '<dependent type>' contains-errors lvalue .state     | | `-ArraySubscriptExpr 0x11d81e7e0 <col:3, col:22> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x11d81e7b0 <col:3, col:9> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x11d81e600 <col:3, col:9> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x11d81e5c8 <col:3> 'struct connectdata *' lvalue ParmVar 0x11d81da28 'conn' 'struct connectdata *'     | |   `-ImplicitCastExpr 0x11d81e7c8 <col:13> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x11d81e628 <col:13> 'int' lvalue ParmVar 0x11d81daa8 'sockindex' 'int'     | `-RecoveryExpr 0x11d81e848 <col:32> '<dependent type>' contains-errors lvalue     `-IfStmt 0x11c918090 <line:23:3, line:26:32> has_else       |-UnaryOperator 0x11c917c00 <line:23:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x11d81e9e8 <col:7> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x11d81e9c8 <col:7> '<dependent type>' contains-errors lvalue       |-CallExpr 0x11c917da0 <line:24:5, col:41> '<dependent type>' contains-errors       | |-DeclRefExpr 0x11c917cf8 <col:5> 'int ()' Function 0x11c917c40 'Curl_pgrsTime' 'int ()'       | |-DeclRefExpr 0x11c917d18 <col:19> 'struct Curl_easy *' lvalue ParmVar 0x11c8ff848 'data' 'struct Curl_easy *'       | `-RecoveryExpr 0x11c917d80 <col:25> '<dependent type>' contains-errors lvalue       `-BinaryOperator 0x11c918070 <line:26:5, col:32> '<dependent type>' contains-errors '='         |-CXXDependentScopeMemberExpr 0x11c918008 <col:5, col:26> '<dependent type>' contains-errors lvalue .use         | `-ArraySubscriptExpr 0x11c917fe8 <col:5, col:24> '<dependent type>' contains-errors lvalue         |   |-ImplicitCastExpr 0x11c917fb8 <col:5, col:11> '<dependent type>' contains-errors <LValueToRValue>         |   | `-RecoveryExpr 0x11c917e08 <col:5, col:11> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x11c917dd0 <col:5> 'struct connectdata *' lvalue ParmVar 0x11d81da28 'conn' 'struct connectdata *'         |   `-ImplicitCastExpr 0x11c917fd0 <col:15> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x11c917e30 <col:15> 'int' lvalue ParmVar 0x11d81daa8 'sockindex' 'int'         `-RecoveryExpr 0x11c918050 <col:32> '<dependent type>' contains-errors lvalue ","20144":"`-FunctionDecl 0x13f827250  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13f827350 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13f8273b8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13f827420 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13f8272f8 <<invalid sloc>> Implicit 882 ","20002":"`-FunctionDecl 0x1339281a8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x1339280d8 <col:14> col:14 ldap_t61_to_8859 'int'   `-CompoundStmt 0x1339284a8 <line:2:1, line:4:1>     `-CallExpr 0x133928478 <line:3:2, col:59> '<dependent type>' contains-errors       |-DeclRefExpr 0x1339283d0 <col:2> 'int ()' Function 0x133928318 'php_ldap_do_translate' 'int ()'       |-RecoveryExpr 0x133928458 <col:24> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x133928408 <col:58> 'int' 0 ","19910":"`-FunctionDecl 0x14a928468  line:1:1 invalid term_and_job_init 'int (int *, int *, char **, int *, int *)'   |-ParmVarDecl 0x14a928128 <line:2:2, col:14> col:14 referenced invalid term 'int *'   |-ParmVarDecl 0x14a9281a8 <line:3:2, col:15> col:15 invalid argvar 'int *'   |-ParmVarDecl 0x14a928258 <line:4:2, col:13> col:13 used argv 'char **'   |-ParmVarDecl 0x14a9282d8 <line:5:2, col:15> col:15 invalid opt 'int *'   |-ParmVarDecl 0x14a928358 <line:6:2, col:15> col:15 invalid orig_opt 'int *'   `-CompoundStmt 0x14b008f20 <line:7:1, line:25:1>     |-CallExpr 0x14a9287a0 <line:8:5, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a928690 <col:5> 'int ()' Function 0x14a9285d8 'create_vterm' 'int ()'     | |-RecoveryExpr 0x14a9286b0 <col:18> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x14a9286f0 <col:24, col:30> '<dependent type>' contains-errors lvalue ->tl_rows     | | `-RecoveryExpr 0x14a9286d0 <col:24> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x14a928758 <col:39, col:45> '<dependent type>' contains-errors lvalue ->tl_cols     |   `-RecoveryExpr 0x14a928738 <col:39> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b0088a8 <line:18:5, col:53> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14b008628 <col:5, col:11> '<dependent type>' contains-errors lvalue ->tl_job     | | `-RecoveryExpr 0x14b008600 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a9287d8 <col:5> 'int *' lvalue ParmVar 0x14a928128 'term' 'int *'     | `-CallExpr 0x14b008868 <col:20, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b008750 <col:20> 'int ()' Function 0x14b008698 'job_start' 'int ()'     |   |-RecoveryExpr 0x14b008770 <col:30> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x14b008790 <col:38> 'char **' lvalue ParmVar 0x14a928258 'argv' 'char **'     |   |-RecoveryExpr 0x14b0087b0 <col:44> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14b008848 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b008a70 <line:19:5, line:20:18>     | |-BinaryOperator 0x14b008988 <line:19:9, col:25> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x14b0088e8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->tl_job     | | | `-RecoveryExpr 0x14b0088c8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14b008968 <col:25> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x14b008a58 <line:20:2, col:18> '<dependent type>' contains-errors prefix '++' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14b008a10 <col:4, col:18> '<dependent type>' contains-errors lvalue ->jv_refcount     |     `-CXXDependentScopeMemberExpr 0x14b0089c8 <col:4, col:10> '<dependent type>' contains-errors lvalue ->tl_job     |       `-RecoveryExpr 0x14b0089a8 <col:4> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14b008f10 <line:22:5, line:24:50>       `-ConditionalOperator 0x14b008ee0 <line:22:12, line:24:50> '<dependent type>' contains-errors         |-BinaryOperator 0x14b008e80 <line:22:12, line:24:32> 'int' contains-errors '&&'         | |-BinaryOperator 0x14b008e20 <line:22:12, line:23:33> 'int' contains-errors '&&'         | | |-BinaryOperator 0x14b008dc0 <line:22:12, col:28> 'int' contains-errors '!='         | | | |-CXXDependentScopeMemberExpr 0x14b008ab0 <col:12, col:18> '<dependent type>' contains-errors lvalue ->tl_job         | | | | `-RecoveryExpr 0x14b008a90 <col:12> '<dependent type>' contains-errors lvalue         | | | `-RecoveryExpr 0x14b008da0 <col:28> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x14b008e00 <line:23:5, col:33> 'int' contains-errors '!='         | |   |-CXXDependentScopeMemberExpr 0x14b008b98 <col:5, col:19> '<dependent type>' contains-errors lvalue ->jv_channel         | |   | `-CXXDependentScopeMemberExpr 0x14b008b50 <col:5, col:11> '<dependent type>' contains-errors lvalue ->tl_job         | |   |   `-RecoveryExpr 0x14b008b30 <col:5> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x14b008de0 <col:33> '<dependent type>' contains-errors lvalue         | `-BinaryOperator 0x14b008e60 <line:24:5, col:32> 'int' contains-errors '!='         |   |-CXXDependentScopeMemberExpr 0x14b008ca0 <col:5, col:19> '<dependent type>' contains-errors lvalue ->jv_status         |   | `-CXXDependentScopeMemberExpr 0x14b008c58 <col:5, col:11> '<dependent type>' contains-errors lvalue ->tl_job         |   |   `-RecoveryExpr 0x14b008c38 <col:5> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x14b008e40 <col:32> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x14b008ea0 <col:45> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14b008ec0 <col:50> '<dependent type>' contains-errors lvalue ","19614":"`-FunctionDecl 0x14b00e358  line:1:1 irc_server_valid 'int (struct t_irc_server *)'   |-ParmVarDecl 0x14b00e248 <col:19, col:40> col:40 used server 'struct t_irc_server *'   `-CompoundStmt 0x14b026af8 <line:2:1, line:17:1>     |-DeclStmt 0x14b026740 <line:3:5, col:36>     | `-VarDecl 0x14b0266d8 <col:5, col:26> col:26 used ptr_server 'struct t_irc_server *'     |-IfStmt 0x14b0267d8 <line:5:5, line:6:16>     | |-UnaryOperator 0x14b026790 <line:5:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b026778 <col:10> 'struct t_irc_server *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b026758 <col:10> 'struct t_irc_server *' lvalue ParmVar 0x14b00e248 'server' 'struct t_irc_server *'     | `-ReturnStmt 0x14b0267c8 <line:6:9, col:16>     |   `-IntegerLiteral 0x14b0267a8 <col:16> 'int' 0     |-ForStmt 0x14b026a90 <line:8:5, line:13:5>     | |-BinaryOperator 0x14b0268a0 <line:8:10, col:23> 'struct t_irc_server *' '='     | | |-DeclRefExpr 0x14b0267f8 <col:10> 'struct t_irc_server *' lvalue Var 0x14b0266d8 'ptr_server' 'struct t_irc_server *'     | | `-ImplicitCastExpr 0x14b026888 <col:23> 'struct t_irc_server *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b026868 <col:23> 'struct t_irc_server *' lvalue Var 0x14b0266d8 'ptr_server' 'struct t_irc_server *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x14b0268e0 <col:36> 'struct t_irc_server *' <LValueToRValue>     | | `-DeclRefExpr 0x14b0268c0 <col:36> 'struct t_irc_server *' lvalue Var 0x14b0266d8 'ptr_server' 'struct t_irc_server *'     | |-BinaryOperator 0x14b026978 <line:9:10, col:35> 'struct t_irc_server *' contains-errors '='     | | |-DeclRefExpr 0x14b0268f8 <col:10> 'struct t_irc_server *' lvalue Var 0x14b0266d8 'ptr_server' 'struct t_irc_server *'     | | `-RecoveryExpr 0x14b026950 <col:23, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b026918 <col:23> 'struct t_irc_server *' lvalue Var 0x14b0266d8 'ptr_server' 'struct t_irc_server *'     | `-CompoundStmt 0x14b026a78 <line:10:5, line:13:5>     |   `-IfStmt 0x14b026a58 <line:11:9, line:12:20>     |     |-BinaryOperator 0x14b026a08 <line:11:13, col:27> 'int' '=='     |     | |-ImplicitCastExpr 0x14b0269d8 <col:13> 'struct t_irc_server *' <LValueToRValue>     |     | | `-DeclRefExpr 0x14b026998 <col:13> 'struct t_irc_server *' lvalue Var 0x14b0266d8 'ptr_server' 'struct t_irc_server *'     |     | `-ImplicitCastExpr 0x14b0269f0 <col:27> 'struct t_irc_server *' <LValueToRValue>     |     |   `-DeclRefExpr 0x14b0269b8 <col:27> 'struct t_irc_server *' lvalue ParmVar 0x14b00e248 'server' 'struct t_irc_server *'     |     `-ReturnStmt 0x14b026a48 <line:12:13, col:20>     |       `-IntegerLiteral 0x14b026a28 <col:20> 'int' 1     `-ReturnStmt 0x14b026ae8 <line:16:5, col:12>       `-IntegerLiteral 0x14b026ac8 <col:12> 'int' 0 ","19200":"`-FunctionDecl 0x12b127708  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12b127808 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12b127870 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12b1278d8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12b1277b0 <<invalid sloc>> Implicit 882 ","19168":"`-FunctionDecl 0x1390304d0  col:12 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1390305d0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x139030638 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1390306a0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x139030578 <<invalid sloc>> Implicit 883 ","19534":"`-FunctionDecl 0x158128388  line:1:12 clone_file 'int (const char *, const char *, const char **, int)' static   |-ParmVarDecl 0x1581280d8 <col:23, col:35> col:35 used from 'const char *'   |-ParmVarDecl 0x158128158 <col:41, col:53> col:53 used to 'const char *'   |-ParmVarDecl 0x158128208 <line:2:23, col:36> col:36 used err_status 'const char **'   |-ParmVarDecl 0x158128288 <col:48, col:52> col:52 used copy_if_rename_fails 'int'   `-CompoundStmt 0x1581448a8 <col:74, line:58:1>     |-DeclStmt 0x1581285f0 <line:4:5, col:21>     | `-VarDecl 0x158128588 <col:5, col:10> col:10 invalid buf 'char'     |-UnaryExprOrTypeTraitExpr 0x158128660 <line:5:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x158128640 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x158128738 <line:6:5, col:20>     | `-VarDecl 0x158128698 <col:5, col:19> col:9 used result 'int' cinit     |   `-UnaryOperator 0x158128720 <col:18, col:19> 'int' prefix '-'     |     `-IntegerLiteral 0x158128700 <col:19> 'int' 1     |-IfStmt 0x158142038 <line:8:5, line:9:16>     | |-BinaryOperator 0x158141fe8 <line:8:9, col:29> 'int' '=='     | | |-CallExpr 0x158141f68 <col:9, col:24> 'int'     | | | |-ImplicitCastExpr 0x158141f50 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x158141eb8 <col:9> 'int ()' Function 0x158141e00 'rename' 'int ()'     | | | |-ImplicitCastExpr 0x158141f98 <col:16> 'const char *' <LValueToRValue>     | | | | `-DeclRefExpr 0x158141ed8 <col:16> 'const char *' lvalue ParmVar 0x1581280d8 'from' 'const char *'     | | | `-ImplicitCastExpr 0x158141fb0 <col:22> 'const char *' <LValueToRValue>     | | |   `-DeclRefExpr 0x158141ef8 <col:22> 'const char *' lvalue ParmVar 0x158128158 'to' 'const char *'     | | `-IntegerLiteral 0x158141fc8 <col:29> 'int' 0     | `-ReturnStmt 0x158142028 <line:9:9, col:16>     |   `-IntegerLiteral 0x158142008 <col:16> 'int' 0     |-IfStmt 0x1581422f8 <line:10:5, line:13:5>     | |-RecoveryExpr 0x158142168 <line:10:9, col:48> '_Bool' contains-errors     | `-CompoundStmt 0x1581422d8 <col:70, line:13:5>     |   |-BinaryOperator 0x158142270 <line:11:9, col:23> 'const char *' '='     |   | |-UnaryOperator 0x1581421c0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x1581421a8 <col:10> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x158142188 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'     |   | `-ImplicitCastExpr 0x158142258 <col:23> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x158142240 <col:23> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x158142220 <col:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1581422c8 <line:12:9, col:17>     |     `-UnaryOperator 0x1581422b0 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x158142290 <col:17> 'int' 1     |-IfStmt 0x158142670 <line:16:5, line:19:5>     | |-RecoveryExpr 0x158142508 <line:16:9, col:39> '_Bool' contains-errors     | `-CompoundStmt 0x158142650 <col:42, line:19:5>     |   |-BinaryOperator 0x1581425c8 <line:17:9, col:23> 'const char *' '='     |   | |-UnaryOperator 0x158142560 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x158142548 <col:10> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x158142528 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'     |   | `-ImplicitCastExpr 0x1581425b0 <col:23> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x158142598 <col:23> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x158142578 <col:23> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x158142638 <line:18:9, col:14> 'done' 0x1581425e8     |-IfStmt 0x1581428b8 <line:21:5, line:24:5>     | |-RecoveryExpr 0x1581427a0 <line:21:9, col:35> '_Bool' contains-errors     | `-CompoundStmt 0x158142898 <col:38, line:24:5>     |   |-BinaryOperator 0x158142860 <line:22:9, col:23> 'const char *' '='     |   | |-UnaryOperator 0x1581427f8 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x1581427e0 <col:10> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1581427c0 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'     |   | `-ImplicitCastExpr 0x158142848 <col:23> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x158142830 <col:23> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x158142810 <col:23> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x158142880 <line:23:9, col:14> 'done' 0x1581425e8     |-IfStmt 0x158142b50 <line:26:5, line:27:14>     | |-BinaryOperator 0x158142b18 <line:26:9, col:59> 'int' contains-errors '<'     | | |-CallExpr 0x158142ae0 <col:9, col:55> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1581429b8 <col:9> 'int ()' Function 0x158142900 'transfer_file_attrs' 'int ()'     | | | |-RecoveryExpr 0x158142aa0 <col:29> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x158142ac0 <col:38> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x158142a08 <col:45> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'     | | `-IntegerLiteral 0x158142a60 <col:59> 'int' 0     | `-GotoStmt 0x158142b38 <line:27:9, col:14> 'done' 0x1581425e8     |-WhileStmt 0x158143a68 <line:29:5, line:34:5>     | |-RecoveryExpr 0x158142ce8 <line:29:12, col:53> '_Bool' contains-errors     | `-CompoundStmt 0x158143a50 <col:56, line:34:5>     |   `-IfStmt 0x158143a30 <line:30:9, line:33:9>     |     |-RecoveryExpr 0x158143918 <line:30:13, col:43> '_Bool' contains-errors     |     `-CompoundStmt 0x158143a10 <col:48, line:33:9>     |       |-BinaryOperator 0x1581439d8 <line:31:13, col:27> 'const char *' '='     |       | |-UnaryOperator 0x158143970 <col:13, col:14> 'const char *' lvalue prefix '*' cannot overflow     |       | | `-ImplicitCastExpr 0x158143958 <col:14> 'const char **' <LValueToRValue>     |       | |   `-DeclRefExpr 0x158143938 <col:14> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'     |       | `-ImplicitCastExpr 0x1581439c0 <col:27> 'const char *' <NoOp>     |       |   `-ImplicitCastExpr 0x1581439a8 <col:27> 'char *' <ArrayToPointerDecay>     |       |     `-StringLiteral 0x158143988 <col:27> 'char[4]' lvalue \"STR\"     |       `-GotoStmt 0x1581439f8 <line:32:13, col:18> 'done' 0x1581425e8     |-IfStmt 0x158143ca0 <line:35:5, line:38:5>     | |-RecoveryExpr 0x158143b88 <line:35:9, col:23> '_Bool' contains-errors     | `-CompoundStmt 0x158143c80 <col:26, line:38:5>     |   |-BinaryOperator 0x158143c48 <line:36:9, col:23> 'const char *' '='     |   | |-UnaryOperator 0x158143be0 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x158143bc8 <col:10> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x158143ba8 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'     |   | `-ImplicitCastExpr 0x158143c30 <col:23> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x158143c18 <col:23> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x158143bf8 <col:23> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x158143c68 <line:37:9, col:14> 'done' 0x1581425e8     |-IfStmt 0x158143ef8 <line:39:5, line:42:5>     | |-RecoveryExpr 0x158143de0 <line:39:9, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x158143ed8 <col:29, line:42:5>     |   |-BinaryOperator 0x158143ea0 <line:40:9, col:23> 'const char *' '='     |   | |-UnaryOperator 0x158143e38 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x158143e20 <col:10> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x158143e00 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'     |   | `-ImplicitCastExpr 0x158143e88 <col:23> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x158143e70 <col:23> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x158143e50 <col:23> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x158143ec0 <line:41:9, col:14> 'done' 0x1581425e8     |-IfStmt 0x158144250 <line:43:5, line:46:5>     | |-RecoveryExpr 0x158144138 <line:43:9, col:32> '_Bool' contains-errors     | `-CompoundStmt 0x158144230 <col:35, line:46:5>     |   |-BinaryOperator 0x1581441f8 <line:44:9, col:23> 'const char *' '='     |   | |-UnaryOperator 0x158144190 <col:9, col:10> 'const char *' lvalue prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x158144178 <col:10> 'const char **' <LValueToRValue>     |   | |   `-DeclRefExpr 0x158144158 <col:10> 'const char **' lvalue ParmVar 0x158128208 'err_status' 'const char **'     |   | `-ImplicitCastExpr 0x1581441e0 <col:23> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x1581441c8 <col:23> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x1581441a8 <col:23> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x158144218 <line:45:9, col:14> 'done' 0x1581425e8     |-BinaryOperator 0x1581442b0 <line:47:5, col:14> 'int' '='     | |-DeclRefExpr 0x158144270 <col:5> 'int' lvalue Var 0x158128698 'result' 'int'     | `-IntegerLiteral 0x158144290 <col:14> 'int' 0     |-LabelStmt 0x1581443f8 <line:48:2, col:6> 'done'     | `-NullStmt 0x1581443f0 <col:6>     |-IfStmt 0x1581444f0 <line:51:5, line:52:19>     | |-RecoveryExpr 0x158144458 <line:51:9, col:43> '_Bool' contains-errors     | `-BinaryOperator 0x1581444d0 <line:52:9, col:19> 'int' '='     |   |-DeclRefExpr 0x158144478 <col:9> 'int' lvalue Var 0x158128698 'result' 'int'     |   `-UnaryOperator 0x1581444b8 <col:18, col:19> 'int' prefix '-'     |     `-IntegerLiteral 0x158144498 <col:19> 'int' 1     |-IfStmt 0x158144700 <line:53:5, line:54:18>     | |-BinaryOperator 0x158144568 <line:53:9, col:19> 'int' '!='     | | |-ImplicitCastExpr 0x158144550 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x158144510 <col:9> 'int' lvalue Var 0x158128698 'result' 'int'     | | `-IntegerLiteral 0x158144530 <col:19> 'int' 0     | `-CallExpr 0x1581446c0 <line:54:9, col:18> 'int'     |   |-ImplicitCastExpr 0x1581446a8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x158144668 <col:9> 'int ()' Function 0x1581445b0 'unlink' 'int ()'     |   `-ImplicitCastExpr 0x1581446e8 <col:16> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x158144688 <col:16> 'const char *' lvalue ParmVar 0x158128158 'to' 'const char *'     |-IfStmt 0x158144840 <line:55:5, line:56:20>     | |-BinaryOperator 0x158144778 <line:55:9, col:19> 'int' '=='     | | |-ImplicitCastExpr 0x158144760 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x158144720 <col:9> 'int' lvalue Var 0x158128698 'result' 'int'     | | `-IntegerLiteral 0x158144740 <col:19> 'int' 0     | `-CallExpr 0x158144800 <line:56:9, col:20> 'int'     |   |-ImplicitCastExpr 0x1581447d8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x158144798 <col:9> 'int ()' Function 0x1581445b0 'unlink' 'int ()'     |   `-ImplicitCastExpr 0x158144828 <col:16> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x1581447b8 <col:16> 'const char *' lvalue ParmVar 0x1581280d8 'from' 'const char *'     `-ReturnStmt 0x158144898 <line:57:5, col:12>       `-ImplicitCastExpr 0x158144880 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x158144860 <col:12> 'int' lvalue Var 0x158128698 'result' 'int' ","19341":"`-FunctionDecl 0x13f944348  col:4 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13f944448 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13f9444b0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13f944518 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13f9443f0 <<invalid sloc>> Implicit 900 ","19818":"`-FunctionDecl 0x134928288  line:1:33 invalid get_header_for_realm 'int *(const int *, const int *)' static   |-ParmVarDecl 0x1349280f0 <col:54, col:71> col:71 invalid hdr_list 'const int *'   |-ParmVarDecl 0x134928170 <line:2:12, col:28> col:28 invalid realm 'const int *'   `-CompoundStmt 0x134941998 <line:3:1, line:14:1>     |-WhileStmt 0x134941930 <line:7:5, line:11:5>     | |-RecoveryExpr 0x1349283a0 <line:7:12, col:43> '_Bool' contains-errors     | `-CompoundStmt 0x134941918 <col:53, line:11:5>     |   `-IfStmt 0x134941898 <line:8:2, line:9:13>     |     |-BinaryOperator 0x134941830 <line:8:6, col:54> 'int' contains-errors '=='     |     | |-CallExpr 0x134941800 <col:6, col:51> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x134928520 <col:6> 'int ()' Function 0x134928468 'pj_stricmp' 'int ()'     |     | | |-UnaryOperator 0x1349287d0 <col:17, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | | `-CXXDependentScopeMemberExpr 0x134928788 <col:18, col:39> '<dependent type>' contains-errors lvalue .realm     |     | | |   `-CXXDependentScopeMemberExpr 0x134928740 <col:18, col:32> '<dependent type>' contains-errors lvalue .digest     |     | | |     `-CXXDependentScopeMemberExpr 0x1349286f8 <col:18, col:21> '<dependent type>' contains-errors lvalue ->credential     |     | | |       `-RecoveryExpr 0x1349286d8 <col:18> '<dependent type>' contains-errors lvalue     |     | | `-RecoveryExpr 0x134928648 <col:46> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x134928698 <col:54> 'int' 0     |     `-ReturnStmt 0x134941888 <line:9:6, col:13>     |       `-RecoveryExpr 0x134941868 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x134941988 <line:13:5, col:12>       `-RecoveryExpr 0x134941968 <col:12> '<dependent type>' contains-errors lvalue ","19463":"`-FunctionDecl 0x12b027728  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x12b027828 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12b027890 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12b0277d0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x12b027908 <col:9> Implicit printf 2 3 ","19986":"`-FunctionDecl 0x12480df18  line:1:6 invalid ber_read_bit_string 'int (int *, int *, int *)'   |-ParmVarDecl 0x12480dd28 <col:26, col:35> col:35 invalid s 'int *'   |-ParmVarDecl 0x12480dda8 <col:38, col:43> col:43 used length 'int *'   |-ParmVarDecl 0x12480de28 <col:51, col:57> col:57 invalid padding 'int *'   `-CompoundStmt 0x1248288b0 <line:2:1, line:11:1>     |-IfStmt 0x1248284b8 <line:3:2, line:5:10>     | |-BinaryOperator 0x124828450 <line:3:5, line:4:29> 'int' contains-errors '||'     | | |-UnaryOperator 0x124828438 <line:3:5, col:57> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-CallExpr 0x124828400 <col:6, col:57> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x12480e130 <col:6> 'int ()' Function 0x12480e078 'ber_read_universal_tag' 'int ()'     | | |   |-RecoveryExpr 0x12480e150 <col:29> '<dependent type>' contains-errors lvalue     | | |   |-RecoveryExpr 0x12480e398 <col:32> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x12480e3b8 <col:52> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12480e360 <line:4:3, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x12480e330 <col:4, col:29> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12480e2d0 <col:4> 'int ()' Function 0x12480e218 'ber_read_length' 'int ()'     | |     |-RecoveryExpr 0x12480e2f0 <col:20> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12480e310 <col:23> 'int *' lvalue ParmVar 0x12480dda8 'length' 'int *'     | `-ReturnStmt 0x1248284a8 <line:5:3, col:10>     |   `-RecoveryExpr 0x124828488 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1248286a8 <line:7:2, line:8:10>     | |-BinaryOperator 0x124828640 <line:7:5, col:36> 'int' contains-errors '<'     | | |-CallExpr 0x1248285f8 <col:5, col:32> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1248285b8 <col:5> 'int ()' Function 0x124828500 'Stream_GetRemainingLength' 'int ()'     | | | `-RecoveryExpr 0x1248285d8 <col:31> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x124828620 <col:36> 'int' 1     | `-ReturnStmt 0x124828698 <line:8:3, col:10>     |   `-RecoveryExpr 0x124828678 <col:10> '<dependent type>' contains-errors lvalue     |-CallExpr 0x124828838 <line:9:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1248287a8 <col:2> 'int ()' Function 0x1248286f0 'Stream_Read_UINT8' 'int ()'     | |-RecoveryExpr 0x1248287c8 <col:20> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x124828820 <col:23, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x124828808 <col:24> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x1248287e8 <col:24> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1248288a0 <line:10:2, col:9>       `-RecoveryExpr 0x124828880 <col:9> '<dependent type>' contains-errors lvalue ","20159":"`-FunctionDecl 0x12b941838  line:1:16 invalid ucma_migrate_id 'int (struct ucma_file *, const char)' static   |-ParmVarDecl 0x12b928668 <col:32, col:50> col:50 used new_file 'struct ucma_file *'   |-ParmVarDecl 0x12b9286e0 <line:2:11, col:22> col:22 __user 'const char'   `-CompoundStmt 0x12c009cb0 <line:4:1, line:62:1>     |-DeclStmt 0x12b941a68 <line:5:2, col:32>     | |-RecordDecl 0x12b9418f0 <col:2, col:9> col:9 struct rdma_ucm_migrate_id     | `-VarDecl 0x12b9419e8 <col:2, col:29> col:29 invalid cmd 'struct rdma_ucm_migrate_id'     |-DeclStmt 0x12b941bf8 <line:6:2, col:35>     | |-RecordDecl 0x12b941a80 <col:2, col:9> col:9 struct rdma_ucm_migrate_resp     | `-VarDecl 0x12b941b78 <col:2, col:31> col:31 referenced invalid resp 'struct rdma_ucm_migrate_resp'     |-DeclStmt 0x12b941df8 <line:7:2, col:26>     | |-RecordDecl 0x12b941c10 <col:2, col:9> col:9 struct ucma_context     | `-VarDecl 0x12b941d78 <col:2, col:23> col:23 used ctx 'struct ucma_context *'     |-DeclStmt 0x12b941f88 <line:8:2, col:13>     | |-RecordDecl 0x12b941e10 <col:2, col:9> col:9 struct fd     | `-VarDecl 0x12b941f08 <col:2, col:12> col:12 referenced invalid f 'struct fd'     |-DeclStmt 0x12b942090 <line:9:2, col:28>     | `-VarDecl 0x12b942028 <col:2, col:20> col:20 used cur_file 'struct ucma_file *'     |-DeclStmt 0x12b942148 <line:10:2, col:13>     | `-VarDecl 0x12b9420c0 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x12b942128 <col:12> 'int' 0     |-IfStmt 0x12b9424c8 <line:12:2, line:13:11>     | |-CallExpr 0x12b9423e8 <line:12:6, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12b9422c0 <col:6> 'int ()' Function 0x12b942208 'copy_from_user' 'int ()'     | | |-UnaryOperator 0x12b942300 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x12b9422e0 <col:22> '<dependent type>' contains-errors lvalue     | | |-RecoveryExpr 0x12b9423c8 <col:27> '<dependent type>' contains-errors lvalue     | | `-UnaryExprOrTypeTraitExpr 0x12b942370 <col:34, col:44> 'unsigned long' contains-errors sizeof     | |   `-ParenExpr 0x12b942350 <col:40, col:44> '<dependent type>' contains-errors lvalue     | |     `-RecoveryExpr 0x12b942330 <col:41> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12b9424b8 <line:13:3, col:11>     |   `-UnaryOperator 0x12b9424a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12b942488 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12b942468 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b9426c0 <line:16:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12b942508 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12b9424e8 <col:2> 'struct fd' lvalue Var 0x12b941f08 'f' 'struct fd'     | `-CallExpr 0x12b942698 <col:6, col:18> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b942610 <col:6> 'int ()' Function 0x12b942558 'fdget' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12b942650 <col:12, col:16> '<dependent type>' contains-errors lvalue .fd     |     `-RecoveryExpr 0x12b942630 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b942e28 <line:17:2, line:18:11>     | |-UnaryOperator 0x12b942760 <line:17:6, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12b942748 <col:7, col:9> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12b942700 <col:7, col:9> '<dependent type>' contains-errors lvalue .file     | |     `-RecoveryExpr 0x12b9426e0 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12b942e18 <line:18:3, col:11>     |   `-UnaryOperator 0x12b942e00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12b9427e0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12b9427c0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b943120 <line:19:2, line:22:2>     | |-BinaryOperator 0x12b942f80 <line:19:6, col:23> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12b942eb0 <col:6, col:14> '<dependent type>' contains-errors lvalue ->f_op     | | | `-CXXDependentScopeMemberExpr 0x12b942e68 <col:6, col:8> '<dependent type>' contains-errors lvalue .file     | | |   `-RecoveryExpr 0x12b942e48 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12b942f68 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x12b942f48 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b943100 <col:34, line:22:2>     |   |-BinaryOperator 0x12b943078 <line:20:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12b942fa0 <col:3> 'int' lvalue Var 0x12b9420c0 'ret' 'int'     |   | `-UnaryOperator 0x12b943060 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x12b943048 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x12b943028 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x12b9430e8 <line:21:3, col:8> 'file_put' 0x12b943098     |-BinaryOperator 0x12b9433a8 <line:25:2, col:49> 'struct ucma_context *' contains-errors '='     | |-DeclRefExpr 0x12b943140 <col:2> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     | `-CallExpr 0x12b943378 <col:8, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12b943240 <col:8> 'int ()' Function 0x12b943188 'ucma_get_ctx' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12b9432c8 <col:21, col:29> '<dependent type>' contains-errors lvalue ->private_data     |   | `-CXXDependentScopeMemberExpr 0x12b943280 <col:21, col:23> '<dependent type>' contains-errors lvalue .file     |   |   `-RecoveryExpr 0x12b943260 <col:21> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x12b943330 <col:43, col:47> '<dependent type>' contains-errors lvalue .id     |     `-RecoveryExpr 0x12b943310 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12b943768 <line:26:2, line:29:2>     | |-CallExpr 0x12b943538 <line:26:6, col:16> 'int'     | | |-ImplicitCastExpr 0x12b943520 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12b9434a8 <col:6> 'int ()' Function 0x12b9433f0 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x12b943560 <col:13> 'struct ucma_context *' <LValueToRValue>     | |   `-DeclRefExpr 0x12b9434c8 <col:13> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     | `-CompoundStmt 0x12b943748 <col:19, line:29:2>     |   |-BinaryOperator 0x12b943710 <line:27:3, col:20> 'int' '='     |   | |-DeclRefExpr 0x12b943578 <col:3> 'int' lvalue Var 0x12b9420c0 'ret' 'int'     |   | `-CallExpr 0x12b9436d0 <col:9, col:20> 'int'     |   |   |-ImplicitCastExpr 0x12b9436b8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12b943678 <col:9> 'int ()' Function 0x12b9435c0 'PTR_ERR' 'int ()'     |   |   `-ImplicitCastExpr 0x12b9436f8 <col:17> 'struct ucma_context *' <LValueToRValue>     |   |     `-DeclRefExpr 0x12b943698 <col:17> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     |   `-GotoStmt 0x12b943730 <line:28:3, col:8> 'file_put' 0x12b943098     |-CallExpr 0x12b9438e8 <line:31:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12b943868 <col:2> 'int ()' Function 0x12b9437b0 'rdma_lock_handler' 'int ()'     | `-RecoveryExpr 0x12b9438c0 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b943888 <col:20> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     |-BinaryOperator 0x12b943990 <line:32:2, col:18> 'struct ucma_file *' contains-errors '='     | |-DeclRefExpr 0x12b943910 <col:2> 'struct ucma_file *' lvalue Var 0x12b942028 'cur_file' 'struct ucma_file *'     | `-RecoveryExpr 0x12b943968 <col:13, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12b943930 <col:13> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     |-IfStmt 0x12c008938 <line:33:2, line:38:2>     | |-BinaryOperator 0x12b943a20 <line:33:6, col:18> 'int' '=='     | | |-ImplicitCastExpr 0x12b9439f0 <col:6> 'struct ucma_file *' <LValueToRValue>     | | | `-DeclRefExpr 0x12b9439b0 <col:6> 'struct ucma_file *' lvalue Var 0x12b942028 'cur_file' 'struct ucma_file *'     | | `-ImplicitCastExpr 0x12b943a08 <col:18> 'struct ucma_file *' <LValueToRValue>     | |   `-DeclRefExpr 0x12b9439d0 <col:18> 'struct ucma_file *' lvalue ParmVar 0x12b928668 'new_file' 'struct ucma_file *'     | `-CompoundStmt 0x12c008908 <col:28, line:38:2>     |   |-CallExpr 0x12b943bb8 <line:34:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b943b20 <col:3> 'int ()' Function 0x12b943a68 'mutex_lock' 'int ()'     |   | `-UnaryOperator 0x12b943ba0 <col:14, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12b943b78 <col:15, col:25> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12b943b40 <col:15> 'struct ucma_file *' lvalue Var 0x12b942028 'cur_file' 'struct ucma_file *'     |   |-BinaryOperator 0x12b943cd0 <line:35:3, col:31> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12b943c28 <col:3, col:8> '<dependent type>' contains-errors lvalue .events_reported     |   | | `-RecoveryExpr 0x12b943c00 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12b943be0 <col:3> 'struct rdma_ucm_migrate_resp' lvalue Var 0x12b941b78 'resp' 'struct rdma_ucm_migrate_resp'     |   | `-RecoveryExpr 0x12b943ca8 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12b943c70 <col:26> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     |   |-CallExpr 0x12c008878 <line:36:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12b943dd0 <col:3> 'int ()' Function 0x12b943d18 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x12c008860 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x12c008838 <col:17, col:27> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x12c008800 <col:17> 'struct ucma_file *' lvalue Var 0x12b942028 'cur_file' 'struct ucma_file *'     |   `-GotoStmt 0x12c0088f0 <line:37:3, col:8> 'response' 0x12c0088a0     |-CallExpr 0x12c008ab0 <line:41:2, col:36> 'int'     | |-ImplicitCastExpr 0x12c008a98 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c008a38 <col:2> 'int ()' Function 0x12c008980 'ucma_lock_files' 'int ()'     | |-ImplicitCastExpr 0x12c008ae0 <col:18> 'struct ucma_file *' <LValueToRValue>     | | `-DeclRefExpr 0x12c008a58 <col:18> 'struct ucma_file *' lvalue Var 0x12b942028 'cur_file' 'struct ucma_file *'     | `-ImplicitCastExpr 0x12c008af8 <col:28> 'struct ucma_file *' <LValueToRValue>     |   `-DeclRefExpr 0x12c008a78 <col:28> 'struct ucma_file *' lvalue ParmVar 0x12b928668 'new_file' 'struct ucma_file *'     |-CallExpr 0x12c008e00 <line:44:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c008cf0 <col:2> 'int ()' Function 0x12c008c38 'list_move_tail' 'int ()'     | |-UnaryOperator 0x12c008d70 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12c008d48 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c008d10 <col:18> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     | `-UnaryOperator 0x12c008de8 <col:29, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12c008dc0 <col:30, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c008d88 <col:30> 'struct ucma_file *' lvalue ParmVar 0x12b928668 'new_file' 'struct ucma_file *'     |-CallExpr 0x12c008f88 <line:45:2, col:32> 'int'     | |-ImplicitCastExpr 0x12c008f70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c008f10 <col:2> 'int ()' Function 0x12c008e58 'ucma_move_events' 'int ()'     | |-ImplicitCastExpr 0x12c008fb8 <col:19> 'struct ucma_context *' <LValueToRValue>     | | `-DeclRefExpr 0x12c008f30 <col:19> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     | `-ImplicitCastExpr 0x12c008fd0 <col:24> 'struct ucma_file *' <LValueToRValue>     |   `-DeclRefExpr 0x12c008f50 <col:24> 'struct ucma_file *' lvalue ParmVar 0x12b928668 'new_file' 'struct ucma_file *'     |-BinaryOperator 0x12c009068 <line:46:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12c009020 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12c008fe8 <col:2> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     | `-DeclRefExpr 0x12c009048 <col:14> 'struct ucma_file *' lvalue ParmVar 0x12b928668 'new_file' 'struct ucma_file *'     |-BinaryOperator 0x12c009178 <line:47:2, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12c0090d0 <col:2, col:7> '<dependent type>' contains-errors lvalue .events_reported     | | `-RecoveryExpr 0x12c0090a8 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c009088 <col:2> 'struct rdma_ucm_migrate_resp' lvalue Var 0x12b941b78 'resp' 'struct rdma_ucm_migrate_resp'     | `-RecoveryExpr 0x12c009150 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c009118 <col:25> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     |-CallExpr 0x12c0093f0 <line:50:2, col:38> 'int'     | |-ImplicitCastExpr 0x12c0093d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c009378 <col:2> 'int ()' Function 0x12c0092c0 'ucma_unlock_files' 'int ()'     | |-ImplicitCastExpr 0x12c009420 <col:20> 'struct ucma_file *' <LValueToRValue>     | | `-DeclRefExpr 0x12c009398 <col:20> 'struct ucma_file *' lvalue Var 0x12b942028 'cur_file' 'struct ucma_file *'     | `-ImplicitCastExpr 0x12c009438 <col:30> 'struct ucma_file *' <LValueToRValue>     |   `-DeclRefExpr 0x12c0093b8 <col:30> 'struct ucma_file *' lvalue ParmVar 0x12b928668 'new_file' 'struct ucma_file *'     |-LabelStmt 0x12c0097d8 <line:52:1, col:9> 'response'     | `-NullStmt 0x12c0097d0 <col:9>     |-CallExpr 0x12c009960 <line:57:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c0098e0 <col:2> 'int ()' Function 0x12c009828 'rdma_unlock_handler' 'int ()'     | `-RecoveryExpr 0x12c009938 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c009900 <col:22> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     |-CallExpr 0x12c009ac0 <line:58:2, col:18> 'int'     | |-ImplicitCastExpr 0x12c009aa8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c009a68 <col:2> 'int ()' Function 0x12c0099b0 'ucma_put_ctx' 'int ()'     | `-ImplicitCastExpr 0x12c009ae8 <col:15> 'struct ucma_context *' <LValueToRValue>     |   `-DeclRefExpr 0x12c009a88 <col:15> 'struct ucma_context *' lvalue Var 0x12b941d78 'ctx' 'struct ucma_context *'     |-LabelStmt 0x12c009c48 <line:59:1, line:60:9> 'file_put'     | `-CallExpr 0x12c009c20 <col:2, col:9> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c009be0 <col:2> 'int ()' Function 0x12c009b28 'fdput' 'int ()'     |   `-RecoveryExpr 0x12c009c00 <col:8> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c009ca0 <line:61:2, col:9>       `-ImplicitCastExpr 0x12c009c88 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c009c68 <col:9> 'int' lvalue Var 0x12b9420c0 'ret' 'int' ","20020":"`-FunctionDecl 0x148928750  line:1:13 kick_hub_wq 'void (struct usb_hub *)' static   |-ParmVarDecl 0x148928648 <col:25, col:41> col:41 used hub 'struct usb_hub *'   `-CompoundStmt 0x148942800 <line:2:1, line:19:1>     |-DeclStmt 0x148940c38 <line:3:2, col:28>     | |-RecordDecl 0x148940a48 <col:2, col:9> col:9 struct usb_interface     | `-VarDecl 0x148940bb8 <col:2, col:24> col:24 used intf 'struct usb_interface *'     |-IfStmt 0x148940ed0 <line:5:2, line:6:3>     | |-BinaryOperator 0x148940ea0 <line:5:6, col:52> 'int' contains-errors '||'     | | |-RecoveryExpr 0x148940c88 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x148940c50 <col:6> 'struct usb_hub *' lvalue ParmVar 0x148928648 'hub' 'struct usb_hub *'     | | `-CallExpr 0x148940e78 <col:27, col:52> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x148940de0 <col:27> 'int ()' Function 0x148940d28 'work_pending' 'int ()'     | |   `-UnaryOperator 0x148940e60 <col:40, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x148940e38 <col:41, col:46> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x148940e00 <col:41> 'struct usb_hub *' lvalue ParmVar 0x148928648 'hub' 'struct usb_hub *'     | `-ReturnStmt 0x148940ec0 <line:6:3>     |-BinaryOperator 0x148941098 <line:9:2, col:38> 'struct usb_interface *' contains-errors '='     | |-DeclRefExpr 0x148940ef0 <col:2> 'struct usb_interface *' lvalue Var 0x148940bb8 'intf' 'struct usb_interface *'     | `-CallExpr 0x148941070 <col:9, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x148940ff0 <col:9> 'int ()' Function 0x148940f38 'to_usb_interface' 'int ()'     |   `-RecoveryExpr 0x148941048 <col:26, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148941010 <col:26> 'struct usb_hub *' lvalue ParmVar 0x148928648 'hub' 'struct usb_hub *'     |-CallExpr 0x148941228 <line:10:2, col:41> 'int'     | |-ImplicitCastExpr 0x148941210 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x148941198 <col:2> 'int ()' Function 0x1489410e0 'usb_autopm_get_interface_no_resume' 'int ()'     | `-ImplicitCastExpr 0x148941250 <col:37> 'struct usb_interface *' <LValueToRValue>     |   `-DeclRefExpr 0x1489411b8 <col:37> 'struct usb_interface *' lvalue Var 0x148940bb8 'intf' 'struct usb_interface *'     |-CallExpr 0x1489413e0 <line:11:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x148941348 <col:2> 'int ()' Function 0x148941290 'kref_get' 'int ()'     | `-UnaryOperator 0x1489413c8 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1489413a0 <col:12, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148941368 <col:12> 'struct usb_hub *' lvalue ParmVar 0x148928648 'hub' 'struct usb_hub *'     |-IfStmt 0x148941628 <line:13:2, line:14:3>     | |-CallExpr 0x1489415e8 <line:13:6, col:37> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1489414e8 <col:6> 'int ()' Function 0x148941430 'queue_work' 'int ()'     | | |-RecoveryExpr 0x1489415c8 <col:17> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x148941580 <col:25, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x148941558 <col:26, col:31> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x148941520 <col:26> 'struct usb_hub *' lvalue ParmVar 0x148928648 'hub' 'struct usb_hub *'     | `-ReturnStmt 0x148941618 <line:14:3>     |-CallExpr 0x148941780 <line:17:2, col:37> 'int'     | |-ImplicitCastExpr 0x148941768 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x148941728 <col:2> 'int ()' Function 0x148941670 'usb_autopm_put_interface_async' 'int ()'     | `-ImplicitCastExpr 0x1489417a8 <col:33> 'struct usb_interface *' <LValueToRValue>     |   `-DeclRefExpr 0x148941748 <col:33> 'struct usb_interface *' lvalue Var 0x148940bb8 'intf' 'struct usb_interface *'     `-CallExpr 0x1489419a0 <line:18:2, col:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x1489418a0 <col:2> 'int ()' Function 0x1489417e8 'kref_put' 'int ()'       |-UnaryOperator 0x148941920 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x1489418f8 <col:12, col:17> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1489418c0 <col:12> 'struct usb_hub *' lvalue ParmVar 0x148928648 'hub' 'struct usb_hub *'       `-RecoveryExpr 0x148941980 <col:23> '<dependent type>' contains-errors lvalue ","19516":"`-FunctionDecl 0x13e9281f0  line:4:13 invalid tidy_doc_update_properties 'void (int *)' static   |-ParmVarDecl 0x13e928128 <col:40, col:52> col:52 invalid obj 'int *'   `-CompoundStmt 0x13e942370 <line:5:1, line:23:87>     |-CallExpr 0x13e9284c0 <line:10:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e928410 <col:2> 'int ()' Function 0x13e928358 'tidyBufInit' 'int ()'     | `-UnaryOperator 0x13e9284a8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13e928488 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e928730 <line:11:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e9285c8 <col:2> 'int ()' Function 0x13e928510 'tidySaveBuffer' 'int ()'     | |-CXXDependentScopeMemberExpr 0x13e928650 <col:18, col:30> '<dependent type>' contains-errors lvalue ->doc     | | `-CXXDependentScopeMemberExpr 0x13e928608 <col:18, col:23> '<dependent type>' contains-errors lvalue ->ptdoc     | |   `-RecoveryExpr 0x13e9285e8 <col:18> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x13e928718 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13e9286f8 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13e941e78 <line:13:2, line:17:2>     | |-CXXDependentScopeMemberExpr 0x13e941800 <line:13:6, col:13> '<dependent type>' contains-errors lvalue .size     | | `-RecoveryExpr 0x13e9287c0 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e941e60 <col:19, line:17:2>     |   `-CallExpr 0x13e9419a8 <line:14:3, col:21> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e941928 <col:3> 'int ()' Function 0x13e941870 'MAKE_STD_ZVAL' 'int ()'     |     `-RecoveryExpr 0x13e941988 <col:17> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13e942350 <line:21:2, line:23:87>       |-CXXDependentScopeMemberExpr 0x13e942048 <line:21:6, col:26> '<dependent type>' contains-errors lvalue ->size       | `-CXXDependentScopeMemberExpr 0x13e942000 <col:6, col:18> '<dependent type>' contains-errors lvalue ->errbuf       |   `-CXXDependentScopeMemberExpr 0x13e941fb8 <col:6, col:11> '<dependent type>' contains-errors lvalue ->ptdoc       |     `-RecoveryExpr 0x13e941f98 <col:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13e942340 <col:32, line:23:87> ","19565":"`-FunctionDecl 0x14682a948  line:1:12 referenced if6_seq_open 'int (struct inode *, struct file *)' static   |-ParmVarDecl 0x14680e248 <col:25, col:39> col:39 used inode 'struct inode *'   |-ParmVarDecl 0x14682a828 <col:46, col:59> col:59 used file 'struct file *'   `-CompoundStmt 0x14682ad98 <line:2:1, line:5:1> ","19784":"`-FunctionDecl 0x13f1281a8  line:1:7 xdg_cache_home 'char *(const char *)'   |-ParmVarDecl 0x13f1280d8 <col:22, col:34> col:34 used filename 'const char *'   `-CompoundStmt 0x13f1421f8 <line:2:1, line:14:1>     |-DeclStmt 0x13f1283b8 <line:3:2, col:31>     | |-VarDecl 0x13f1282b8 <col:2, col:14> col:14 used home 'const char *'     | `-VarDecl 0x13f128338 <col:2, col:21> col:21 used cache_home 'const char *'     |-CallExpr 0x13f128588 <line:5:2, col:17> 'int'     | |-ImplicitCastExpr 0x13f128570 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13f128500 <col:2> 'int ()' Function 0x13f128448 'assert' 'int ()'     | `-ImplicitCastExpr 0x13f1285b0 <col:9> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x13f128520 <col:9> 'const char *' lvalue ParmVar 0x13f1280d8 'filename' 'const char *'     |-BinaryOperator 0x13f141bf0 <line:6:2, col:27> 'const char *' '='     | |-DeclRefExpr 0x13f1285c8 <col:2> 'const char *' lvalue Var 0x13f128338 'cache_home' 'const char *'     | `-ImplicitCastExpr 0x13f1287a8 <col:15, col:27> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x13f128768 <col:15, col:27> 'int'     |     |-ImplicitCastExpr 0x13f128750 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13f1286c8 <col:15> 'int ()' Function 0x13f128610 'getenv' 'int ()'     |     `-ImplicitCastExpr 0x13f128790 <col:22> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x13f128730 <col:22> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13f141f08 <line:7:2, line:8:47>     | |-BinaryOperator 0x13f141cc8 <line:7:6, col:21> 'int' '&&'     | | |-ImplicitCastExpr 0x13f141c80 <col:6> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x13f141c10 <col:6> 'const char *' lvalue Var 0x13f128338 'cache_home' 'const char *'     | | `-ImplicitCastExpr 0x13f141cb0 <col:20, col:21> 'int' <IntegralCast>     | |   `-ImplicitCastExpr 0x13f141c98 <col:20, col:21> 'char' <LValueToRValue>     | |     `-UnaryOperator 0x13f141c68 <col:20, col:21> 'const char' lvalue prefix '*' cannot overflow     | |       `-ImplicitCastExpr 0x13f141c50 <col:21> 'const char *' <LValueToRValue>     | |         `-DeclRefExpr 0x13f141c30 <col:21> 'const char *' lvalue Var 0x13f128338 'cache_home' 'const char *'     | `-ReturnStmt 0x13f141ef8 <line:8:3, col:47>     |   `-ImplicitCastExpr 0x13f141ee0 <col:10, col:47> 'char *' <IntegralToPointer>     |     `-CallExpr 0x13f141e60 <col:10, col:47> 'int'     |       |-ImplicitCastExpr 0x13f141e48 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13f141dc8 <col:10> 'int ()' Function 0x13f141d10 'mkpathdup' 'int ()'     |       |-ImplicitCastExpr 0x13f141e98 <col:20> 'char *' <ArrayToPointerDecay>     |       | `-StringLiteral 0x13f141de8 <col:20> 'char[4]' lvalue \"STR\"     |       |-ImplicitCastExpr 0x13f141eb0 <col:27> 'const char *' <LValueToRValue>     |       | `-DeclRefExpr 0x13f141e08 <col:27> 'const char *' lvalue Var 0x13f128338 'cache_home' 'const char *'     |       `-ImplicitCastExpr 0x13f141ec8 <col:39> 'const char *' <LValueToRValue>     |         `-DeclRefExpr 0x13f141e28 <col:39> 'const char *' lvalue ParmVar 0x13f1280d8 'filename' 'const char *'     |-BinaryOperator 0x13f141ff8 <line:10:2, col:21> 'const char *' '='     | |-DeclRefExpr 0x13f141f28 <col:2> 'const char *' lvalue Var 0x13f1282b8 'home' 'const char *'     | `-ImplicitCastExpr 0x13f141fe0 <col:9, col:21> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x13f141fa0 <col:9, col:21> 'int'     |     |-ImplicitCastExpr 0x13f141f88 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13f141f48 <col:9> 'int ()' Function 0x13f128610 'getenv' 'int ()'     |     `-ImplicitCastExpr 0x13f141fc8 <col:16> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x13f141f68 <col:16> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13f142190 <line:11:2, line:12:41>     | |-ImplicitCastExpr 0x13f142038 <line:11:6> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x13f142018 <col:6> 'const char *' lvalue Var 0x13f1282b8 'home' 'const char *'     | `-ReturnStmt 0x13f142180 <line:12:3, col:41>     |   `-ImplicitCastExpr 0x13f142168 <col:10, col:41> 'char *' <IntegralToPointer>     |     `-CallExpr 0x13f1420e8 <col:10, col:41> 'int'     |       |-ImplicitCastExpr 0x13f1420d0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13f142050 <col:10> 'int ()' Function 0x13f141d10 'mkpathdup' 'int ()'     |       |-ImplicitCastExpr 0x13f142120 <col:20> 'char *' <ArrayToPointerDecay>     |       | `-StringLiteral 0x13f142070 <col:20> 'char[4]' lvalue \"STR\"     |       |-ImplicitCastExpr 0x13f142138 <col:27> 'const char *' <LValueToRValue>     |       | `-DeclRefExpr 0x13f142090 <col:27> 'const char *' lvalue Var 0x13f1282b8 'home' 'const char *'     |       `-ImplicitCastExpr 0x13f142150 <col:33> 'const char *' <LValueToRValue>     |         `-DeclRefExpr 0x13f1420b0 <col:33> 'const char *' lvalue ParmVar 0x13f1280d8 'filename' 'const char *'     `-ReturnStmt 0x13f1421e8 <line:13:2, col:9>       `-RecoveryExpr 0x13f1421c8 <col:9> '<dependent type>' contains-errors lvalue ","19288":"`-FunctionDecl 0x156928338  line:1:25 invalid TIFFSeekCustomStream 'int (const int, const int, void *)' static   |-ParmVarDecl 0x1569280f0 <col:46, col:69> col:69 invalid offset 'const int'   |-ParmVarDecl 0x156928170 <line:2:3, col:13> col:13 used whence 'const int'   |-ParmVarDecl 0x1569281f0 <col:20, col:26> col:26 user_data 'void *'   `-CompoundStmt 0x157008a18 <line:3:1, line:35:1>     `-SwitchStmt 0x156928460 <line:8:3, line:32:3>       |-ImplicitCastExpr 0x156928448 <line:8:11> 'int' <LValueToRValue>       | `-DeclRefExpr 0x156928428 <col:11> 'const int' lvalue ParmVar 0x156928170 'whence' 'const int'       `-CompoundStmt 0x157008990 <line:9:3, line:32:3>         |-DefaultStmt 0x1569285d0 <line:11:5, line:17:5>         | `-CompoundStmt 0x1569285b0 <line:12:5, line:17:5>         |   |-IfStmt 0x156928568 <line:13:7, line:14:18>         |   | |-BinaryOperator 0x1569284e0 <line:13:11, col:20> 'int' contains-errors '<'         |   | | |-RecoveryExpr 0x1569284a0 <col:11> '<dependent type>' contains-errors lvalue         |   | | `-IntegerLiteral 0x1569284c0 <col:20> 'int' 0         |   | `-ReturnStmt 0x156928558 <line:14:9, col:18>         |   |   `-ParenExpr 0x156928538 <col:15, col:18> 'int'         |   |     `-UnaryOperator 0x156928520 <col:16, col:17> 'int' prefix '-'         |   |       `-IntegerLiteral 0x156928500 <col:17> 'int' 1         |   `-BreakStmt 0x1569285a8 <line:16:7>         |-CompoundStmt 0x156928798 <line:19:5, line:24:5>         | |-IfStmt 0x156928750 <line:20:7, line:21:18>         | | |-RecoveryExpr 0x1569286c8 <line:20:11, col:38> '_Bool' contains-errors         | | `-ReturnStmt 0x156928740 <line:21:9, col:18>         | |   `-ParenExpr 0x156928720 <col:15, col:18> 'int'         | |     `-UnaryOperator 0x156928708 <col:16, col:17> 'int' prefix '-'         | |       `-IntegerLiteral 0x1569286e8 <col:17> 'int' 1         | `-BreakStmt 0x156928790 <line:23:7>         `-CompoundStmt 0x157008970 <line:26:5, line:31:5>           |-IfStmt 0x1570088a8 <line:27:7, line:28:18>           | |-RecoveryExpr 0x157008820 <line:27:11, col:57> '_Bool' contains-errors           | `-ReturnStmt 0x157008898 <line:28:9, col:18>           |   `-ParenExpr 0x157008878 <col:15, col:18> 'int'           |     `-UnaryOperator 0x157008860 <col:16, col:17> 'int' prefix '-'           |       `-IntegerLiteral 0x157008840 <col:17> 'int' 1           `-BreakStmt 0x157008968 <line:30:7> ","19229":"`-FunctionDecl 0x151809c78  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x151809d78 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x151809de0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x151809e48 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x151809d20 <<invalid sloc>> Implicit 882 ","19177":"`-FunctionDecl 0x126944150  col:13 implicit used strcasecmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x126944250 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1269442b8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1269441f8 <<invalid sloc>> Implicit 957 ","19424":"`-FunctionDecl 0x12d9281c8  line:1:21 invalid rfbDefaultGetCursorPtr 'int (int)' static   |-ParmVarDecl 0x12d9280f0 <col:44, col:57> col:57 invalid cl 'int'   `-CompoundStmt 0x12d928358 <line:2:1, line:4:1>     `-ReturnStmt 0x12d928348 <line:3:4, col:29>       `-ParenExpr 0x12d928328 <col:10, col:29> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x12d9282e0 <col:11, col:23> '<dependent type>' contains-errors lvalue ->cursor           `-CXXDependentScopeMemberExpr 0x12d928298 <col:11, col:15> '<dependent type>' contains-errors lvalue ->screen             `-RecoveryExpr 0x12d928278 <col:11> '<dependent type>' contains-errors lvalue ","20084":"`-FunctionDecl 0x12b00df18  line:1:5 invalid ssh_scp_write 'int (int, const void *, int)'   |-ParmVarDecl 0x12b00dcf0 <col:19, col:27> col:27 referenced invalid scp 'int'   |-ParmVarDecl 0x12b00dda8 <col:32, col:44> col:44 used buffer 'const void *'   |-ParmVarDecl 0x12b00de28 <col:52, col:59> col:59 referenced invalid len 'int'   `-CompoundStmt 0x12b027f30 <line:2:1, line:66:1>     |-DeclStmt 0x12b00e058 <line:3:5, col:10>     | `-VarDecl 0x12b00dff0 <col:5, col:9> col:9 used w 'int'     |-DeclStmt 0x12b00e0f0 <line:4:5, col:11>     | `-VarDecl 0x12b00e088 <col:5, col:9> col:9 used rc 'int'     |-IfStmt 0x12b00e200 <line:7:5, line:9:5>     | |-BinaryOperator 0x12b00e180 <line:7:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12b00e108 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12b00e160 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b00e1e8 <col:22, line:9:5>     |   `-ReturnStmt 0x12b00e1d8 <line:8:9, col:16>     |     `-RecoveryExpr 0x12b00e1b8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a9230b8 <line:11:5, line:15:5>     | |-BinaryOperator 0x12b00e2e0 <line:11:9, col:23> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12b00e240 <col:9, col:14> '<dependent type>' contains-errors lvalue ->state     | | | `-RecoveryExpr 0x12b00e220 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12b00e2c0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a923098 <col:46, line:15:5>     |   |-CallExpr 0x12a923018 <line:12:9, line:13:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12a922eb8 <line:12:9> 'int ()' Function 0x12a922e00 'ssh_set_error' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x12a922ef8 <col:23, col:28> '<dependent type>' contains-errors lvalue ->session     |   | | `-RecoveryExpr 0x12a922ed8 <col:23> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x12a922ff8 <col:37> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x12a922fa0 <line:13:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12a923088 <line:14:9, col:16>     |     `-RecoveryExpr 0x12a923068 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a923418 <line:17:5, line:19:5>     | |-BinaryOperator 0x12a9231e8 <line:17:9, col:37> 'int' contains-errors '>'     | | |-BinaryOperator 0x12a923160 <col:9, col:26> '<dependent type>' contains-errors '+'     | | | |-CXXDependentScopeMemberExpr 0x12a9230f8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->processed     | | | | `-RecoveryExpr 0x12a9230d8 <col:9> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12a923140 <col:26> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x12a9231a0 <col:32, col:37> '<dependent type>' contains-errors lvalue ->filelen     | |   `-RecoveryExpr 0x12a923180 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a923400 <col:46, line:19:5>     |   `-BinaryOperator 0x12a9233e0 <line:18:9, col:54> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x12a923228 <col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x12a923208 <col:9> 'int' lvalue ParmVar 0x12b00de28 'len' 'int'     |     `-CallExpr 0x12a9233b8 <col:15, col:54> '<dependent type>' contains-errors     |       |-ParenExpr 0x12a9232a8 <col:15, col:22> '<overloaded function type>' lvalue     |       | `-UnresolvedLookupExpr 0x12a923268 <col:16> '<overloaded function type>' lvalue (no ADL) = 'size_t' empty     |       `-BinaryOperator 0x12a923398 <col:25, col:45> '<dependent type>' contains-errors '-'     |         |-CXXDependentScopeMemberExpr 0x12a9232e8 <col:25, col:30> '<dependent type>' contains-errors lvalue ->filelen     |         | `-RecoveryExpr 0x12a9232c8 <col:25> '<dependent type>' contains-errors lvalue     |         `-CXXDependentScopeMemberExpr 0x12a923350 <col:40, col:45> '<dependent type>' contains-errors lvalue ->processed     |           `-RecoveryExpr 0x12a923330 <col:40> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12a923610 <line:22:5, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x12a923438 <col:5> 'int' lvalue Var 0x12b00e088 'rc' 'int'     | `-CallExpr 0x12a9235e0 <col:10, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a923538 <col:10> 'int ()' Function 0x12a923480 'ssh_channel_poll' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12a923578 <col:27, col:32> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x12a923558 <col:27> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12a9235c0 <col:41> 'int' 0     |-IfStmt 0x12a923838 <line:23:5, line:26:5>     | |-BinaryOperator 0x12a9236a8 <line:23:9, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12a923630 <col:9> 'int' lvalue Var 0x12b00e088 'rc' 'int'     | | `-RecoveryExpr 0x12a923688 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a923818 <col:26, line:26:5>     |   |-BinaryOperator 0x12a9237b0 <line:24:9, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12a923710 <col:9, col:14> '<dependent type>' contains-errors lvalue ->state     |   | | `-RecoveryExpr 0x12a9236e8 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12a9236c8 <col:9> 'int' lvalue ParmVar 0x12b00dcf0 'scp' 'int'     |   | `-RecoveryExpr 0x12a923790 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12a923808 <line:25:9, col:16>     |     `-RecoveryExpr 0x12a9237e8 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12a923a58 <line:28:5, col:52> 'int' contains-errors '='     | |-DeclRefExpr 0x12a923858 <col:5> 'int' lvalue Var 0x12b00dff0 'w' 'int'     | `-CallExpr 0x12a923a20 <col:9, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a923958 <col:9> 'int ()' Function 0x12a9238a0 'ssh_channel_write' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12a923998 <col:27, col:32> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x12a923978 <col:27> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x12a9239e0 <col:41> 'const void *' lvalue ParmVar 0x12b00dda8 'buffer' 'const void *'     |   `-RecoveryExpr 0x12a923a00 <col:49> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a923d78 <line:29:5, line:35:5> has_else     | |-BinaryOperator 0x12a923af0 <line:29:9, col:14> 'int' contains-errors '!='     | | |-DeclRefExpr 0x12a923a78 <col:9> 'int' lvalue Var 0x12b00dff0 'w' 'int'     | | `-RecoveryExpr 0x12a923ad0 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12a923bf0 <col:25, line:31:5>     | | `-CompoundAssignOperator 0x12a923bc0 <line:30:9, col:27> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |   |-CXXDependentScopeMemberExpr 0x12a923b58 <col:9, col:14> '<dependent type>' contains-errors lvalue ->processed     | |   | `-RecoveryExpr 0x12a923b30 <col:9> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x12a923b10 <col:9> 'int' lvalue ParmVar 0x12b00dcf0 'scp' 'int'     | |   `-DeclRefExpr 0x12a923ba0 <col:27> 'int' lvalue Var 0x12b00dff0 'w' 'int'     | `-CompoundStmt 0x12a923d58 <line:31:12, line:35:5>     |   |-BinaryOperator 0x12a923cf0 <line:32:9, col:22> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12a923c50 <col:9, col:14> '<dependent type>' contains-errors lvalue ->state     |   | | `-RecoveryExpr 0x12a923c28 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12a923c08 <col:9> 'int' lvalue ParmVar 0x12b00dcf0 'scp' 'int'     |   | `-RecoveryExpr 0x12a923cd0 <col:22> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12a923d48 <line:34:9, col:16>     |     `-RecoveryExpr 0x12a923d28 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12b0274b8 <line:38:5, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x12a923da8 <col:5> 'int' lvalue Var 0x12b00e088 'rc' 'int'     | `-CallExpr 0x12b027488 <col:10, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a923dc8 <col:10> 'int ()' Function 0x12a923480 'ssh_channel_poll' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x12b027420 <col:27, col:32> '<dependent type>' contains-errors lvalue ->channel     |   | `-RecoveryExpr 0x12b027400 <col:27> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12b027468 <col:41> 'int' 0     |-IfStmt 0x12b027a10 <line:39:5, line:50:5>     | |-BinaryOperator 0x12b027530 <line:39:9, col:14> 'int' '>'     | | |-ImplicitCastExpr 0x12b027518 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12b0274d8 <col:9> 'int' lvalue Var 0x12b00e088 'rc' 'int'     | | `-IntegerLiteral 0x12b0274f8 <col:14> 'int' 0     | `-CompoundStmt 0x12b0279e8 <col:17, line:50:5>     |   |-BinaryOperator 0x12b027820 <line:40:9, col:56> 'int' contains-errors '='     |   | |-DeclRefExpr 0x12b027550 <col:9> 'int' lvalue Var 0x12b00e088 'rc' 'int'     |   | `-CallExpr 0x12b0277e0 <col:14, col:56> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x12b027650 <col:14> 'int ()' Function 0x12b027598 'ssh_channel_read' 'int ()'     |   |   |-CXXDependentScopeMemberExpr 0x12b027690 <col:31, col:36> '<dependent type>' contains-errors lvalue ->channel     |   |   | `-RecoveryExpr 0x12b027670 <col:31> '<dependent type>' contains-errors lvalue     |   |   |-UnaryOperator 0x12b0277c8 <col:45, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x12b0277a8 <col:46> '<dependent type>' contains-errors lvalue     |   |   |-IntegerLiteral 0x12b027708 <col:52> 'int' 1     |   |   `-IntegerLiteral 0x12b027728 <col:55> 'int' 0     |   |-IfStmt 0x12b027890 <line:41:9, line:43:9>     |   | |-RecoveryExpr 0x12b027860 <line:41:13, col:19> '_Bool' contains-errors     |   | `-CompoundStmt 0x12b027880 <col:30, line:43:9>     |   `-IfStmt 0x12b0279c8 <line:45:9, line:49:9>     |     |-RecoveryExpr 0x12b0278f0 <line:45:13, col:34> '_Bool' contains-errors     |     `-CompoundStmt 0x12b0279b8 <col:37, line:49:9>     `-IfStmt 0x12b027f10 <line:53:5, line:63:5>       |-BinaryOperator 0x12b027b00 <line:53:9, col:32> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x12b027a50 <col:9, col:14> '<dependent type>' contains-errors lvalue ->processed       | | `-RecoveryExpr 0x12b027a30 <col:9> '<dependent type>' contains-errors lvalue       | `-CXXDependentScopeMemberExpr 0x12b027ab8 <col:27, col:32> '<dependent type>' contains-errors lvalue ->filelen       |   `-RecoveryExpr 0x12b027a98 <col:27> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12b027ef0 <col:41, line:63:5>         |-IfStmt 0x12b027ce8 <line:56:9, line:59:9>         | |-RecoveryExpr 0x12b027c28 <line:56:13, col:18> '_Bool' contains-errors         | `-CompoundStmt 0x12b027cd8 <col:29, line:59:9>         `-BinaryOperator 0x12b027e40 <line:61:9, col:41> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x12b027d50 <col:9, col:14> '<dependent type>' contains-errors lvalue ->processed           | `-RecoveryExpr 0x12b027d28 <col:9> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x12b027d08 <col:9> 'int' lvalue ParmVar 0x12b00dcf0 'scp' 'int'           `-BinaryOperator 0x12b027e20 <col:26, col:41> '<dependent type>' contains-errors '='             |-CXXDependentScopeMemberExpr 0x12b027db8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->filelen             | `-RecoveryExpr 0x12b027d98 <col:26> '<dependent type>' contains-errors lvalue             `-IntegerLiteral 0x12b027e00 <col:41> 'int' 0 ","19718":"`-FunctionDecl 0x1501281f8  line:1:1 invalid CHUNK_WRITE_PTR 'int (int *)'   |-ParmVarDecl 0x150128128 <col:17, col:26> col:26 invalid chunk 'int *'   `-CompoundStmt 0x1501283a8 <line:2:1, line:4:1>     `-ReturnStmt 0x150128398 <line:3:3, col:31>       `-BinaryOperator 0x150128378 <col:10, col:31> '<dependent type>' contains-errors '+'         |-CXXDependentScopeMemberExpr 0x1501282c8 <col:10, col:17> '<dependent type>' contains-errors lvalue ->data         | `-RecoveryExpr 0x1501282a8 <col:10> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x150128330 <col:24, col:31> '<dependent type>' contains-errors lvalue ->datalen           `-RecoveryExpr 0x150128310 <col:24> '<dependent type>' contains-errors lvalue ","20185":"`-FunctionDecl 0x13000df18  line:1:1 invalid psf_fgets 'int (char *, int, int *)'   |-ParmVarDecl 0x13000dcd8 <col:12, col:18> col:18 used buffer 'char *'   |-ParmVarDecl 0x13000dd70 <col:26, col:37> col:37 invalid bufsize 'int'   |-ParmVarDecl 0x13000de28 <col:46, col:58> col:58 invalid psf 'int *'   `-CompoundStmt 0x1300282c8 <line:2:1, line:23:1>     |-WhileStmt 0x130028200 <line:5:2, line:18:3>     | |-BinaryOperator 0x13000e090 <line:5:9, col:23> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13000e070 <col:9> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x13000e030 <col:13, col:23> '<dependent type>' contains-errors '-'     | |   |-RecoveryExpr 0x13000dff0 <col:13> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x13000e010 <col:23> 'int' 1     | `-CompoundStmt 0x1300281d8 <line:6:2, line:18:3>     |   |-IfStmt 0x1300280a8 <line:8:3, line:14:4>     |   | |-BinaryOperator 0x13000e3c8 <line:8:7, col:17> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x13000e3a8 <col:7> '<dependent type>' contains-errors lvalue     |   | | `-UnaryOperator 0x13000e370 <col:16, col:17> 'int' prefix '-'     |   | |   `-IntegerLiteral 0x13000e350 <col:17> 'int' 1     |   | `-CompoundStmt 0x130028080 <line:9:3, line:14:4>     |   |   |-IfStmt 0x130027ea0 <line:9:5, line:10:5>     |   |   | |-BinaryOperator 0x130027e78 <line:9:9, col:18> 'int' contains-errors '=='     |   |   | | |-RecoveryExpr 0x130027e38 <col:9> '<dependent type>' contains-errors lvalue     |   |   | | `-RecoveryExpr 0x130027e58 <col:18> '<dependent type>' contains-errors lvalue     |   |   | `-ContinueStmt 0x130027e98 <line:10:5>     |   |   |-CallExpr 0x130028048 <line:12:4, col:30> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x130027fa0 <col:4> 'int ()' Function 0x130027ee8 'psf_log_syserr' 'int ()'     |   |   | |-RecoveryExpr 0x130027fc0 <col:20> '<dependent type>' contains-errors lvalue     |   |   | `-RecoveryExpr 0x130028028 <col:25> '<dependent type>' contains-errors lvalue     |   |   `-BreakStmt 0x130028078 <line:13:4>     |   |-NullStmt 0x1300280c8 <line:14:6>     |   `-IfStmt 0x1300281b8 <line:16:3, line:17:4>     |     |-RecoveryExpr 0x130028190 <line:16:7, col:37> '_Bool' contains-errors     |     `-BreakStmt 0x1300281b0 <line:17:4>     |-NullStmt 0x130028220 <line:18:5>     `-ReturnStmt 0x1300282b8 <line:22:2, col:9>       `-RecoveryExpr 0x130028298 <col:9> '<dependent type>' contains-errors lvalue ","19561":"`-FunctionDecl 0x12f00e358  line:1:12 sd_resume 'int (struct device *)' static   |-ParmVarDecl 0x12f00e248 <col:22, col:37> col:37 used dev 'struct device *'   `-CompoundStmt 0x12f027260 <line:2:1, line:15:1>     |-DeclStmt 0x12f026a48 <line:3:2, col:54>     | |-RecordDecl 0x12f026650 <col:2, col:9> col:9 struct scsi_disk     | `-VarDecl 0x12f0267b8 <col:2, col:53> col:20 used sdkp 'struct scsi_disk *' cinit     |   `-ImplicitCastExpr 0x12f026a18 <col:27, col:53> 'struct scsi_disk *' <IntegralToPointer>     |     `-CallExpr 0x12f0269d8 <col:27, col:53> 'int'     |       |-ImplicitCastExpr 0x12f0269c0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12f026950 <col:27> 'int ()' Function 0x12f026898 'scsi_disk_get_from_dev' 'int ()'     |       `-ImplicitCastExpr 0x12f026a00 <col:50> 'struct device *' <LValueToRValue>     |         `-DeclRefExpr 0x12f026970 <col:50> 'struct device *' lvalue ParmVar 0x12f00e248 'dev' 'struct device *'     |-DeclStmt 0x12f026b00 <line:4:2, col:13>     | `-VarDecl 0x12f026a78 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x12f026ae0 <col:12> 'int' 0     |-IfStmt 0x12f026c58 <line:6:2, line:7:8>     | |-UnaryOperator 0x12f026bd8 <line:6:6, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f026bc0 <col:7, col:21> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x12f026b78 <col:7, col:21> '<dependent type>' contains-errors lvalue ->manage_start_stop     | |     `-RecoveryExpr 0x12f026b50 <col:7, col:13> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12f026b18 <col:7> 'struct scsi_disk *' lvalue Var 0x12f0267b8 'sdkp' 'struct scsi_disk *'     | `-GotoStmt 0x12f026c40 <line:7:3, col:8> 'done' 0x12f026bf0     |-CallExpr 0x12f026e68 <line:9:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f026d58 <col:2> 'int ()' Function 0x12f026ca0 'sd_printk' 'int ()'     | |-RecoveryExpr 0x12f026e48 <col:12> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x12f026d90 <col:25> 'struct scsi_disk *' lvalue Var 0x12f0267b8 'sdkp' 'struct scsi_disk *'     | `-StringLiteral 0x12f026df0 <col:31> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x12f027060 <line:10:2, col:36> 'int' '='     | |-DeclRefExpr 0x12f026ea0 <col:2> 'int' lvalue Var 0x12f026a78 'ret' 'int'     | `-CallExpr 0x12f027018 <col:8, col:36> 'int'     |   |-ImplicitCastExpr 0x12f027000 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f026fa0 <col:8> 'int ()' Function 0x12f026ee8 'sd_start_stop_device' 'int ()'     |   |-ImplicitCastExpr 0x12f027048 <col:29> 'struct scsi_disk *' <LValueToRValue>     |   | `-DeclRefExpr 0x12f026fc0 <col:29> 'struct scsi_disk *' lvalue Var 0x12f0267b8 'sdkp' 'struct scsi_disk *'     |   `-IntegerLiteral 0x12f026fe0 <col:35> 'int' 1     |-LabelStmt 0x12f0271f8 <line:12:1, line:13:20> 'done'     | `-CallExpr 0x12f0271b8 <col:2, col:20> 'int'     |   |-ImplicitCastExpr 0x12f0271a0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f027160 <col:2> 'int ()' Function 0x12f0270a8 'scsi_disk_put' 'int ()'     |   `-ImplicitCastExpr 0x12f0271e0 <col:16> 'struct scsi_disk *' <LValueToRValue>     |     `-DeclRefExpr 0x12f027180 <col:16> 'struct scsi_disk *' lvalue Var 0x12f0267b8 'sdkp' 'struct scsi_disk *'     `-ReturnStmt 0x12f027250 <line:14:2, col:9>       `-ImplicitCastExpr 0x12f027238 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12f027218 <col:9> 'int' lvalue Var 0x12f026a78 'ret' 'int' ","19978":"`-FunctionDecl 0x14c00c438  line:1:17 invalid sock_poll 'int (struct file *, int *)' static   |-ParmVarDecl 0x14b128668 <col:27, col:40> col:40 used file 'struct file *'   |-ParmVarDecl 0x14b128718 <col:46, col:58> col:58 invalid wait 'int *'   `-CompoundStmt 0x14c00d390 <line:2:1, line:15:1>     |-DeclStmt 0x14c00c738 <line:3:2, col:42>     | |-RecordDecl 0x14c00c4f0 <col:2, col:9> col:9 struct socket     | `-VarDecl 0x14c00c658 <col:2, col:30> col:17 used sock 'struct socket *' cinit     |   `-RecoveryExpr 0x14c00c6f8 <col:24, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c00c6c0 <col:24> 'struct file *' lvalue ParmVar 0x14b128668 'file' 'struct file *'     |-IfStmt 0x14c00d0d8 <line:6:2, line:12:2> has_else     | |-CXXDependentScopeMemberExpr 0x14c00c7b0 <line:6:6, col:17> '<dependent type>' contains-errors lvalue ->poll     | | `-RecoveryExpr 0x14c00c788 <col:6, col:12> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c00c750 <col:6> 'struct socket *' contains-errors lvalue Var 0x14c00c658 'sock' 'struct socket *'     | |-CompoundStmt 0x14c00cb68 <col:23, line:9:2>     | | `-CallExpr 0x14c00c9f8 <line:7:3, col:35> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14c00c950 <col:3> 'int ()' Function 0x14c00c898 'sock_poll_busy_loop' 'int ()'     | |   |-DeclRefExpr 0x14c00c970 <col:23> 'struct socket *' contains-errors lvalue Var 0x14c00c658 'sock' 'struct socket *'     | |   `-RecoveryExpr 0x14c00c9d8 <col:29> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x14c00d0b8 <line:9:9, line:12:2>     |   |-CXXDependentScopeMemberExpr 0x14c00cbe0 <line:9:13, col:24> '<dependent type>' contains-errors lvalue ->poll_mask     |   | `-RecoveryExpr 0x14c00cbb8 <col:13, col:19> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14c00cb80 <col:13> 'struct socket *' contains-errors lvalue Var 0x14c00c658 'sock' 'struct socket *'     |   `-CompoundStmt 0x14c00d0a0 <col:35, line:12:2>     |     `-CallExpr 0x14c00cf58 <line:10:3, col:62> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14c00cd08 <col:3> 'int ()' Function 0x14c00cc50 'sock_poll_wait' 'int ()'     |       |-DeclRefExpr 0x14c00cd28 <col:18> 'struct file *' lvalue ParmVar 0x14b128668 'file' 'struct file *'     |       |-CallExpr 0x14c00cf28 <col:24, col:55> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14c00ce28 <col:24> 'int ()' Function 0x14c00cd70 'sock_get_poll_head' 'int ()'     |       | |-DeclRefExpr 0x14c00ce48 <col:43> 'struct file *' lvalue ParmVar 0x14b128668 'file' 'struct file *'     |       | `-RecoveryExpr 0x14c00cf08 <col:49> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x14c00ceb0 <col:58> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14c00d380 <line:14:2, col:40>       `-BinaryOperator 0x14c00d360 <col:9, col:40> '<dependent type>' contains-errors '|'         |-RecoveryExpr 0x14c00d2e8 <col:9> '<dependent type>' contains-errors lvalue         `-CallExpr 0x14c00d320 <col:16, col:40> 'int' contains-errors           |-ImplicitCastExpr 0x14c00d308 <col:16> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14c00d200 <col:16> 'int ()' Function 0x14c00d148 'sock_poll_busy_flag' 'int ()'           `-ImplicitCastExpr 0x14c00d348 <col:36> 'struct socket *' contains-errors <LValueToRValue>             `-DeclRefExpr 0x14c00d220 <col:36> 'struct socket *' contains-errors lvalue Var 0x14c00c658 'sock' 'struct socket *' ","19248":"`-FunctionDecl 0x102827e78  col:17 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x102827f78 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x102827fe0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x102828048 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x102827f20 <<invalid sloc>> Implicit 884 ","19343":"`-FunctionDecl 0x12c944c00  line:2:13 kvm_uevent_notify_change 'void (unsigned int, struct kvm *)' static   |-ParmVarDecl 0x12c9280d8 <col:38, col:51> col:51 used type 'unsigned int'   |-ParmVarDecl 0x12c9286c8 <col:57, col:69> col:69 used kvm 'struct kvm *'   `-CompoundStmt 0x12d008d50 <line:3:1, line:49:13>     |-DeclStmt 0x12c944ee8 <line:4:2, col:29>     | |-RecordDecl 0x12c944d00 <col:2, col:9> col:9 struct kobj_uevent_env     | `-VarDecl 0x12c944e68 <col:2, col:26> col:26 used env 'struct kobj_uevent_env *'     |-DeclStmt 0x12c945018 <line:5:2, col:36>     | |-VarDecl 0x12c944f18 <col:2, col:21> col:21 used created 'unsigned long long'     | `-VarDecl 0x12c944f98 <col:2, col:30> col:30 used active 'unsigned long long'     |-IfStmt 0x12c945240 <line:7:2, line:8:3>     | |-BinaryOperator 0x12c945210 <line:7:6, col:31> 'int' contains-errors '||'     | | |-UnaryOperator 0x12c9451c8 <col:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x12c9451b0 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-CXXDependentScopeMemberExpr 0x12c945168 <col:7, col:15> '<dependent type>' contains-errors lvalue .this_device     | | |     `-RecoveryExpr 0x12c945148 <col:7> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12c9451f8 <col:30, col:31> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12c9451e0 <col:31> 'struct kvm *' <LValueToRValue>     | |     `-DeclRefExpr 0x12c9450d8 <col:31> 'struct kvm *' lvalue ParmVar 0x12c9286c8 'kvm' 'struct kvm *'     | `-ReturnStmt 0x12c945230 <line:8:3>     |-CallExpr 0x12c945420 <line:10:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c945370 <col:2> 'int ()' Function 0x12c9452b8 'mutex_lock' 'int ()'     | `-UnaryOperator 0x12c945408 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12c9453e8 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c9455b8 <line:11:2, line:16:2> has_else     | |-BinaryOperator 0x12c9454c0 <line:11:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12c945448 <col:6> 'unsigned int' lvalue ParmVar 0x12c9280d8 'type' 'unsigned int'     | | `-RecoveryExpr 0x12c9454a0 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12c9454e0 <col:35, line:14:2>     | `-IfStmt 0x12c945598 <col:9, line:16:2>     |   |-BinaryOperator 0x12c945568 <line:14:13, col:21> 'int' contains-errors '=='     |   | |-DeclRefExpr 0x12c9454f0 <col:13> 'unsigned int' lvalue ParmVar 0x12c9280d8 'type' 'unsigned int'     |   | `-RecoveryExpr 0x12c945548 <col:21> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x12c945588 <col:43, line:16:2>     |-BinaryOperator 0x12c945660 <line:17:2, col:12> 'unsigned long long' contains-errors '='     | |-DeclRefExpr 0x12c9455e8 <col:2> 'unsigned long long' lvalue Var 0x12c944f18 'created' 'unsigned long long'     | `-RecoveryExpr 0x12c945640 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c9456f8 <line:18:2, col:11> 'unsigned long long' contains-errors '='     | |-DeclRefExpr 0x12c945680 <col:2> 'unsigned long long' lvalue Var 0x12c944f98 'active' 'unsigned long long'     | `-RecoveryExpr 0x12c9456d8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c9458a8 <line:19:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c9457f8 <col:2> 'int ()' Function 0x12c945740 'mutex_unlock' 'int ()'     | `-UnaryOperator 0x12c945890 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12c945870 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c945ad8 <line:22:2, line:23:3>     | |-UnaryOperator 0x12c945ab0 <line:22:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c945a98 <col:7> 'struct kobj_uevent_env *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c945a78 <col:7> 'struct kobj_uevent_env *' lvalue Var 0x12c944e68 'env' 'struct kobj_uevent_env *'     | `-ReturnStmt 0x12c945ac8 <line:23:3>     |-CallExpr 0x12c9470e8 <line:25:2, col:36> 'int'     | |-ImplicitCastExpr 0x12c9470d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c945bd8 <col:2> 'int ()' Function 0x12c945b20 'add_uevent_var' 'int ()'     | |-ImplicitCastExpr 0x12c947120 <col:17> 'struct kobj_uevent_env *' <LValueToRValue>     | | `-DeclRefExpr 0x12c947000 <col:17> 'struct kobj_uevent_env *' lvalue Var 0x12c944e68 'env' 'struct kobj_uevent_env *'     | |-ImplicitCastExpr 0x12c947138 <col:22> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x12c947060 <col:22> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x12c947150 <col:29> 'unsigned long long' <LValueToRValue>     |   `-DeclRefExpr 0x12c947080 <col:29> 'unsigned long long' lvalue Var 0x12c944f18 'created' 'unsigned long long'     |-CallExpr 0x12c947200 <line:26:2, col:35> 'int'     | |-ImplicitCastExpr 0x12c9471e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c947168 <col:2> 'int ()' Function 0x12c945b20 'add_uevent_var' 'int ()'     | |-ImplicitCastExpr 0x12c947238 <col:17> 'struct kobj_uevent_env *' <LValueToRValue>     | | `-DeclRefExpr 0x12c947188 <col:17> 'struct kobj_uevent_env *' lvalue Var 0x12c944e68 'env' 'struct kobj_uevent_env *'     | |-ImplicitCastExpr 0x12c947250 <col:22> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x12c9471a8 <col:22> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x12c947268 <col:29> 'unsigned long long' <LValueToRValue>     |   `-DeclRefExpr 0x12c9471c8 <col:29> 'unsigned long long' lvalue Var 0x12c944f98 'active' 'unsigned long long'     |-IfStmt 0x12c947788 <line:28:2, line:33:2> has_else     | |-BinaryOperator 0x12c9472f8 <line:28:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12c947280 <col:6> 'unsigned int' lvalue ParmVar 0x12c9280d8 'type' 'unsigned int'     | | `-RecoveryExpr 0x12c9472d8 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x12c947618 <col:35, line:31:2>     | | |-CallExpr 0x12c947390 <line:29:3, col:28> 'int'     | | | |-ImplicitCastExpr 0x12c947378 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x12c947318 <col:3> 'int ()' Function 0x12c945b20 'add_uevent_var' 'int ()'     | | | |-ImplicitCastExpr 0x12c9473c0 <col:18> 'struct kobj_uevent_env *' <LValueToRValue>     | | | | `-DeclRefExpr 0x12c947338 <col:18> 'struct kobj_uevent_env *' lvalue Var 0x12c944e68 'env' 'struct kobj_uevent_env *'     | | | `-ImplicitCastExpr 0x12c9473d8 <col:23> 'char *' <ArrayToPointerDecay>     | | |   `-StringLiteral 0x12c947358 <col:23> 'char[4]' lvalue \"STR\"     | | `-BinaryOperator 0x12c9475f8 <line:30:3, col:43> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x12c947428 <col:3, col:8> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x12c9473f0 <col:3> 'struct kvm *' lvalue ParmVar 0x12c9286c8 'kvm' 'struct kvm *'     | |   `-CallExpr 0x12c9475d0 <col:24, col:43> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x12c947530 <col:24> 'int ()' Function 0x12c947478 'task_pid_nr' 'int ()'     | |     `-RecoveryExpr 0x12c9475b0 <col:36> '<dependent type>' contains-errors lvalue     | `-IfStmt 0x12c947768 <line:31:9, line:33:2>     |   |-RecoveryExpr 0x12c947658 <line:31:13, col:21> '_Bool' contains-errors     |   `-CompoundStmt 0x12c947750 <col:43, line:33:2>     |     `-CallExpr 0x12c9476f0 <line:32:3, col:28> 'int'     |       |-ImplicitCastExpr 0x12c9476d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x12c947678 <col:3> 'int ()' Function 0x12c945b20 'add_uevent_var' 'int ()'     |       |-ImplicitCastExpr 0x12c947720 <col:18> 'struct kobj_uevent_env *' <LValueToRValue>     |       | `-DeclRefExpr 0x12c947698 <col:18> 'struct kobj_uevent_env *' lvalue Var 0x12c944e68 'env' 'struct kobj_uevent_env *'     |       `-ImplicitCastExpr 0x12c947738 <col:23> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x12c9476b8 <col:23> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12c947878 <line:34:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c9477b8 <col:2> 'int ()' Function 0x12c945b20 'add_uevent_var' 'int ()'     | |-DeclRefExpr 0x12c9477d8 <col:17> 'struct kobj_uevent_env *' lvalue Var 0x12c944e68 'env' 'struct kobj_uevent_env *'     | |-StringLiteral 0x12c9477f8 <col:22> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x12c947850 <col:29, col:34> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c947818 <col:29> 'struct kvm *' lvalue ParmVar 0x12c9286c8 'kvm' 'struct kvm *'     |-IfStmt 0x12d008a28 <line:36:2, line:45:2>     | |-UnaryOperator 0x12c947a38 <line:36:6, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12c947a10 <col:7, col:33> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c947990 <col:7> 'int ()' Function 0x12c9478d8 'IS_ERR' 'int ()'     | |   `-RecoveryExpr 0x12c9479e8 <col:14, col:19> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12c9479b0 <col:14> 'struct kvm *' lvalue ParmVar 0x12c9286c8 'kvm' 'struct kvm *'     | `-CompoundStmt 0x12d008a08 <col:36, line:45:2>     |   |-DeclStmt 0x12c947c68 <line:37:3, col:56>     |   | |-VarDecl 0x12c947a68 <col:3, col:9> col:9 used tmp 'char *'     |   | `-VarDecl 0x12c947ae8 <col:3, col:15> col:15 used p 'char *'     |   `-IfStmt 0x12d0089e8 <line:39:3, line:44:3>     |     |-ImplicitCastExpr 0x12c947ca0 <line:39:7> 'char *' <LValueToRValue>     |     | `-DeclRefExpr 0x12c947c80 <col:7> 'char *' lvalue Var 0x12c947ae8 'p' 'char *'     |     `-CompoundStmt 0x12d0089c8 <col:10, line:44:3>     |       |-IfStmt 0x12d008830 <line:41:4, line:42:35>     |       | |-UnaryOperator 0x12c947ef0 <line:41:8, col:19> 'int' prefix '!' cannot overflow     |       | | `-CallExpr 0x12c947eb0 <col:9, col:19> 'int'     |       | |   |-ImplicitCastExpr 0x12c947e98 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | |   | `-DeclRefExpr 0x12c947e58 <col:9> 'int ()' Function 0x12c9478d8 'IS_ERR' 'int ()'     |       | |   `-ImplicitCastExpr 0x12c947ed8 <col:16> 'char *' <LValueToRValue>     |       | |     `-DeclRefExpr 0x12c947e78 <col:16> 'char *' lvalue Var 0x12c947a68 'tmp' 'char *'     |       | `-CallExpr 0x12c947fa0 <line:42:5, col:35> 'int'     |       |   |-ImplicitCastExpr 0x12c947f88 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       |   | `-DeclRefExpr 0x12c947f08 <col:5> 'int ()' Function 0x12c945b20 'add_uevent_var' 'int ()'     |       |   |-ImplicitCastExpr 0x12c947fd8 <col:20> 'struct kobj_uevent_env *' <LValueToRValue>     |       |   | `-DeclRefExpr 0x12c947f28 <col:20> 'struct kobj_uevent_env *' lvalue Var 0x12c944e68 'env' 'struct kobj_uevent_env *'     |       |   |-ImplicitCastExpr 0x12d008800 <col:25> 'char *' <ArrayToPointerDecay>     |       |   | `-StringLiteral 0x12c947f48 <col:25> 'char[4]' lvalue \"STR\"     |       |   `-ImplicitCastExpr 0x12d008818 <col:32> 'char *' <LValueToRValue>     |       |     `-DeclRefExpr 0x12c947f68 <col:32> 'char *' lvalue Var 0x12c947a68 'tmp' 'char *'     |       `-CallExpr 0x12d008988 <line:43:4, col:11> 'int'     |         |-ImplicitCastExpr 0x12d008970 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x12d008930 <col:4> 'int ()' Function 0x12d008878 'kfree' 'int ()'     |         `-ImplicitCastExpr 0x12d0089b0 <col:10> 'char *' <LValueToRValue>     |           `-DeclRefExpr 0x12d008950 <col:10> 'char *' lvalue Var 0x12c947ae8 'p' 'char *'     `-CallExpr 0x12d008d10 <line:49:2, col:11> 'int'       |-ImplicitCastExpr 0x12d008cf8 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12d008cb8 <col:2> 'int ()' Function 0x12d008878 'kfree' 'int ()'       `-ImplicitCastExpr 0x12d008d38 <col:8> 'struct kobj_uevent_env *' <LValueToRValue>         `-DeclRefExpr 0x12d008cd8 <col:8> 'struct kobj_uevent_env *' lvalue Var 0x12c944e68 'env' 'struct kobj_uevent_env *' ","19556":"`-FunctionDecl 0x13d928118  line:1:1 SYSCALL_DEFINE2 'int ()'   `-CompoundStmt 0x13d940f78 <line:2:1, line:47:1>     |-DeclStmt 0x13d928288 <line:3:2, col:9>     | `-VarDecl 0x13d928220 <col:2, col:6> col:6 used ufd 'int'     |-DeclStmt 0x13d928488 <line:4:2, col:25>     | |-RecordDecl 0x13d9282a0 <col:2, col:9> col:9 struct timerfd_ctx     | `-VarDecl 0x13d928408 <col:2, col:22> col:22 used ctx 'struct timerfd_ctx *'     |-CallExpr 0x13d928690 <line:7:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d928598 <col:2> 'int ()' Function 0x13d9284e0 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x13d928670 <col:15, col:30> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13d928630 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13d928650 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d9287b0 <line:8:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d9286b8 <col:2> 'int ()' Function 0x13d9284e0 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x13d928790 <col:15, col:31> 'int' contains-errors '!='     |   |-RecoveryExpr 0x13d928750 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13d928770 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d942b40 <line:10:2, line:16:11>     | |-RecoveryExpr 0x13d942a78 <line:10:6, line:15:38> '_Bool' contains-errors     | `-ReturnStmt 0x13d942b30 <line:16:3, col:11>     |   `-UnaryOperator 0x13d942b18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13d942b00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13d942ae0 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d942fd8 <line:27:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d942f40 <col:2> 'int ()' Function 0x13d942e88 'init_waitqueue_head' 'int ()'     | `-UnaryOperator 0x13d942fc0 <col:22, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d942f98 <col:23, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d942f60 <col:23> 'struct timerfd_ctx *' lvalue Var 0x13d928408 'ctx' 'struct timerfd_ctx *'     |-CallExpr 0x13d943178 <line:28:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d9430e0 <col:2> 'int ()' Function 0x13d943028 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x13d943160 <col:17, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d943138 <col:18, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d943100 <col:18> 'struct timerfd_ctx *' lvalue Var 0x13d928408 'ctx' 'struct timerfd_ctx *'     |-BinaryOperator 0x13d940b60 <line:39:2, col:35> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13d9437c0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d943788 <col:2> 'struct timerfd_ctx *' lvalue Var 0x13d928408 'ctx' 'struct timerfd_ctx *'     | `-CallExpr 0x13d940b38 <col:15, col:35> 'int'     |   |-ImplicitCastExpr 0x13d940b20 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13d940ae0 <col:15> 'int ()' Function 0x13d940a28 'ktime_mono_to_real' 'int ()'     |   `-IntegerLiteral 0x13d940b00 <col:34> 'int' 0     |-IfStmt 0x13d940f10 <line:43:2, line:44:12>     | |-BinaryOperator 0x13d940d78 <line:43:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x13d940d60 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13d940d20 <col:6> 'int' lvalue Var 0x13d928220 'ufd' 'int'     | | `-IntegerLiteral 0x13d940d40 <col:12> 'int' 0     | `-CallExpr 0x13d940ed0 <line:44:3, col:12> 'int'     |   |-ImplicitCastExpr 0x13d940eb8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13d940e78 <col:3> 'int ()' Function 0x13d940dc0 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x13d940ef8 <col:9> 'struct timerfd_ctx *' <LValueToRValue>     |     `-DeclRefExpr 0x13d940e98 <col:9> 'struct timerfd_ctx *' lvalue Var 0x13d928408 'ctx' 'struct timerfd_ctx *'     `-ReturnStmt 0x13d940f68 <line:46:2, col:9>       `-ImplicitCastExpr 0x13d940f50 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13d940f30 <col:9> 'int' lvalue Var 0x13d928220 'ufd' 'int' ","19751":"`-FunctionDecl 0x154110208  line:1:10 invalid check_index_ordering 'int (const int)'   |-ParmVarDecl 0x1541100f0 <col:31, <invalid sloc>> col:43 invalid 'const int'   `-CompoundStmt 0x15412a638 <col:54, line:14:3>     |-DeclStmt 0x1541103b8 <line:2:5, col:40>     | `-VarDecl 0x1541102d0 <col:5, col:10> col:10 used findices 'int' auto     |-ForStmt 0x15412a5b0 <line:4:5, line:11:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x15412a150 <line:4:29, col:57> 'int' contains-errors '<'     | | |-RecoveryExpr 0x15412a130 <col:29> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x15412a0f0 <col:33, col:57> '<dependent type>' contains-errors '-'     | |   |-CallExpr 0x15412a0a8 <col:33, col:53> '<dependent type>' contains-errors     | |   | |-RecoveryExpr 0x15412a060 <col:33, col:42> '<dependent type>' contains-errors lvalue     | |   | | `-DeclRefExpr 0x154110400 <col:33> 'int' lvalue Var 0x1541102d0 'findices' 'int'     | |   | `-IntegerLiteral 0x15412a088 <col:52> 'int' 0     | |   `-IntegerLiteral 0x15412a0d0 <col:57> 'int' 1     | |-UnaryOperator 0x15412a1c0 <col:60, col:62> '<dependent type>' contains-errors prefix '++' cannot overflow     | | `-RecoveryExpr 0x15412a1a0 <col:62> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15412a598 <col:65, line:11:5>     |   `-IfStmt 0x15412a3e8 <line:5:7, line:7:7>     |     |-BinaryOperator 0x15412a3a8 <line:5:11, col:39> 'int' contains-errors '<'     |     | |-CallExpr 0x15412a318 <col:11, col:21> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x15412a1d8 <col:11> 'int' lvalue Var 0x1541102d0 'findices' 'int'     |     | | `-RecoveryExpr 0x15412a2f8 <col:20> '<dependent type>' contains-errors lvalue     |     | `-CallExpr 0x15412a380 <col:25, col:39> '<dependent type>' contains-errors     |     |   |-DeclRefExpr 0x15412a238 <col:25> 'int' lvalue Var 0x1541102d0 'findices' 'int'     |     |   `-BinaryOperator 0x15412a360 <col:34, col:38> '<dependent type>' contains-errors '+'     |     |     |-RecoveryExpr 0x15412a340 <col:34> '<dependent type>' contains-errors lvalue     |     |     `-IntegerLiteral 0x15412a270 <col:38> 'int' 1     |     `-CompoundStmt 0x15412a3d0 <col:42, line:7:7>     |       `-ContinueStmt 0x15412a3c8 <line:6:9>     |-ReturnStmt 0x15412a620 <line:13:5, col:12>     | `-RecoveryExpr 0x15412a600 <col:12> '<dependent type>' contains-errors lvalue     `-NullStmt 0x15412a630 <col:24> ","19335":"`-FunctionDecl 0x141808b88  line:1:1 invalid glue 'int (int (*)(), int)'   |-ParmVarDecl 0x142927b80 <col:6, <invalid sloc>> col:6 invalid glue 'int (*)()'   |-ParmVarDecl 0x142927c00 <col:52> col:52 _16 'int'   `-CompoundStmt 0x141809378 <line:8:1, line:27:1>     |-DeclStmt 0x141808d58 <line:9:5, col:12>     | |-VarDecl 0x141808c58 <col:5, col:9> col:9 used x 'int'     | `-VarDecl 0x141808cd8 <col:5, col:11> col:11 used y 'int'     |-IfStmt 0x141808e58 <line:14:5, line:16:5>     | |-RecoveryExpr 0x141808e10 <line:14:9, col:55> '_Bool' contains-errors     | `-CompoundStmt 0x141808e40 <col:58, line:16:5>     |   `-ReturnStmt 0x141808e30 <line:15:9>     `-ForStmt 0x141809340 <line:18:5, line:26:5>       |-BinaryOperator 0x141808eb8 <line:18:10, col:14> 'int' '='       | |-DeclRefExpr 0x141808e78 <col:10> 'int' lvalue Var 0x141808cd8 'y' 'int'       | `-IntegerLiteral 0x141808e98 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x141808f50 <col:17, col:21> 'int' contains-errors '<'       | |-DeclRefExpr 0x141808ed8 <col:17> 'int' lvalue Var 0x141808cd8 'y' 'int'       | `-RecoveryExpr 0x141808f30 <col:21> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x141808f90 <col:32, col:33> 'int' postfix '++'       | `-DeclRefExpr 0x141808f70 <col:32> 'int' lvalue Var 0x141808cd8 'y' 'int'       `-CompoundStmt 0x141809328 <col:37, line:26:5>         `-ForStmt 0x1418092f0 <line:19:9, line:23:9>           |-BinaryOperator 0x141808fe8 <line:19:14, col:18> 'int' '='           | |-DeclRefExpr 0x141808fa8 <col:14> 'int' lvalue Var 0x141808c58 'x' 'int'           | `-IntegerLiteral 0x141808fc8 <col:18> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x141809080 <col:21, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x141809008 <col:21> 'int' lvalue Var 0x141808c58 'x' 'int'           | `-RecoveryExpr 0x141809060 <col:25> '<dependent type>' contains-errors lvalue           |-CompoundAssignOperator 0x1418090e0 <col:35, col:38> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'           | |-DeclRefExpr 0x1418090a0 <col:35> 'int' lvalue Var 0x141808c58 'x' 'int'           | `-IntegerLiteral 0x1418090c0 <col:38> 'int' 2           `-CompoundStmt 0x1418092e0 <col:41, line:23:9> ","19911":"`-FunctionDecl 0x14d80de58  line:1:1 invalid rb_dir_s_empty_p 'int (int, int)'   |-ParmVarDecl 0x14d80dcf0 <col:18, col:24> col:24 invalid obj 'int'   |-ParmVarDecl 0x14d80dd70 <col:29, col:35> col:35 referenced invalid dirname 'int'   `-CompoundStmt 0x14d8281f8 <line:2:1, line:38:1>     |-DeclStmt 0x14d80df90 <line:4:5, col:21>     | `-VarDecl 0x14d80df28 <col:5, col:17> col:17 used path 'const char *'     |-DeclStmt 0x14d80e108 <line:5:5, col:31>     | `-EnumDecl 0x14d80dfa8 <col:5, col:30> col:5     |   `-EnumConstantDecl 0x14d80e0b0 <col:11, col:29> col:11 false_on_notdir 'int'     |     `-ConstantExpr 0x14d80e090 <col:29> 'int'     |       |-value: Int 1     |       `-IntegerLiteral 0x14d80e070 <col:29> 'int' 1     |-CallExpr 0x14d80e328 <line:7:5, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14d80e280 <col:5> 'int ()' Function 0x14d80e1c8 'GlobPathValue' 'int ()'     | |-RecoveryExpr 0x14d80e2a0 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14d80e308 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d827cb0 <line:9:5, col:43> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d827b40 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d827b20 <col:5> 'int' lvalue ParmVar 0x14d80dd70 'dirname' 'int'     | `-CallExpr 0x14d827c88 <col:15, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d827c48 <col:15> 'int ()' Function 0x14d827b90 'rb_str_encode_ospath' 'int ()'     |   `-RecoveryExpr 0x14d827c68 <col:36> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d827d80 <line:10:5, col:40> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d827cf0 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d827cd0 <col:5> 'int' lvalue ParmVar 0x14d80dd70 'dirname' 'int'     | `-CallExpr 0x14d827d58 <col:15, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d827d18 <col:15> 'int ()' Function 0x14d827a00 'rb_str_dup_frozen' 'int ()'     |   `-RecoveryExpr 0x14d827d38 <col:33> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d827f08 <line:11:5, col:31> 'const char *' contains-errors '='     | |-DeclRefExpr 0x14d827da0 <col:5> 'const char *' lvalue Var 0x14d80df28 'path' 'const char *'     | `-CallExpr 0x14d827ee0 <col:12, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d827ea0 <col:12> 'int ()' Function 0x14d827de8 'RSTRING_PTR' 'int ()'     |   `-RecoveryExpr 0x14d827ec0 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d828190 <line:34:5, line:36:5>     | |-BinaryOperator 0x14d827fd0 <line:34:9, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x14d827f90 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14d827fb0 <col:19> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14d828178 <col:27, line:36:5>     |   `-CallExpr 0x14d828150 <line:35:2, col:23> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14d8280d0 <col:2> 'int ()' Function 0x14d828018 'rb_sys_fail_path' 'int ()'     |     `-RecoveryExpr 0x14d828130 <col:19> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14d8281e8 <line:37:5, col:12>       `-RecoveryExpr 0x14d8281c8 <col:12> '<dependent type>' contains-errors lvalue ","19471":"`-FunctionDecl 0x151928438  line:1:5 invalid vnc_tight_send_framebuffer_update 'int (int *, int, int, int, int)'   |-ParmVarDecl 0x151928128 <col:39, col:49> col:49 referenced invalid vs 'int *'   |-ParmVarDecl 0x1519281a8 <col:53, col:57> col:57 used x 'int'   |-ParmVarDecl 0x151928228 <col:60, col:64> col:64 used y 'int'   |-ParmVarDecl 0x1519282a8 <line:2:39, col:43> col:43 used w 'int'   |-ParmVarDecl 0x151928328 <col:46, col:50> col:50 used h 'int'   `-CompoundStmt 0x1519418d8 <line:3:1, line:6:1>     |-BinaryOperator 0x151928638 <line:4:5, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x151928598 <col:5, col:15> '<dependent type>' contains-errors lvalue .type     | | `-CXXDependentScopeMemberExpr 0x151928550 <col:5, col:9> '<dependent type>' contains-errors lvalue ->tight     | |   `-RecoveryExpr 0x151928528 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x151928508 <col:5> 'int *' lvalue ParmVar 0x151928128 'vs' 'int *'     | `-RecoveryExpr 0x151928618 <col:22> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1519418c8 <line:5:5, col:56>       `-CallExpr 0x151941880 <col:12, col:56> '<dependent type>' contains-errors         |-DeclRefExpr 0x1519287b0 <col:12> 'int ()' Function 0x1519286f8 'tight_send_framebuffer_update' 'int ()'         |-RecoveryExpr 0x1519287d0 <col:42> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x151941800 <col:46> 'int' lvalue ParmVar 0x1519281a8 'x' 'int'         |-DeclRefExpr 0x151941820 <col:49> 'int' lvalue ParmVar 0x151928228 'y' 'int'         |-DeclRefExpr 0x151941840 <col:52> 'int' lvalue ParmVar 0x1519282a8 'w' 'int'         `-DeclRefExpr 0x151941860 <col:55> 'int' lvalue ParmVar 0x151928328 'h' 'int' ","19594":"`-FunctionDecl 0x159928318  line:1:1 invalid memxor 'int (void *, const void *, int)'   |-ParmVarDecl 0x1599280d8 <col:8, col:14> col:14 used dst_in 'void *'   |-ParmVarDecl 0x159928188 <col:22, col:34> col:34 used src_in 'const void *'   |-ParmVarDecl 0x159928220 <col:42, col:49> col:49 referenced invalid n 'int'   `-CompoundStmt 0x1599435f0 <line:2:1, line:34:1>     |-DeclStmt 0x1599284e0 <line:3:3, col:30>     | `-VarDecl 0x159928428 <col:3, col:24> col:18 used dst 'unsigned char *' cinit     |   `-ImplicitCastExpr 0x1599284c8 <col:24> 'unsigned char *' <BitCast>     |     `-ImplicitCastExpr 0x1599284b0 <col:24> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x159928490 <col:24> 'void *' lvalue ParmVar 0x1599280d8 'dst_in' 'void *'     |-DeclStmt 0x159928600 <line:4:3, col:36>     | `-VarDecl 0x159928548 <col:3, col:30> col:24 used src 'const unsigned char *' cinit     |   `-ImplicitCastExpr 0x1599285e8 <col:30> 'const unsigned char *' <BitCast>     |     `-ImplicitCastExpr 0x1599285d0 <col:30> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x1599285b0 <col:30> 'const void *' lvalue ParmVar 0x159928188 'src_in' 'const void *'     |-IfStmt 0x1599422e8 <line:6:3, line:26:5>     | |-BinaryOperator 0x159928690 <line:6:7, col:12> 'int' contains-errors '>='     | | |-RecoveryExpr 0x159928618 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x159928670 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1599422b0 <line:7:5, line:26:5>     |   |-DeclStmt 0x159928730 <line:8:7, col:17>     |   | `-VarDecl 0x1599286c8 <col:7, col:16> col:16 used i 'unsigned int'     |   |-DeclStmt 0x1599287c8 <line:9:7, col:22>     |   | `-VarDecl 0x159928760 <col:7, col:16> col:16 used offset 'unsigned int'     |   |-UnaryExprOrTypeTraitExpr 0x159941840 <line:10:7, col:14> 'unsigned long' contains-errors sizeof     |   | `-RecoveryExpr 0x159941820 <col:14> '<dependent type>' contains-errors lvalue     |   |-ForStmt 0x159941d40 <line:12:7, line:16:2>     |   | |-BinaryOperator 0x159941a88 <line:12:12, col:36> 'unsigned int' contains-errors '='     |   | | |-DeclRefExpr 0x159941860 <col:12> 'unsigned int' lvalue Var 0x1599286c8 'i' 'unsigned int'     |   | | `-CallExpr 0x159941a60 <col:16, col:36> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x1599419e0 <col:16> 'int ()' Function 0x159941928 'ALIGN_OFFSET' 'int ()'     |   | |   `-BinaryOperator 0x159941a40 <col:29, col:35> '<dependent type>' contains-errors '+'     |   | |     |-DeclRefExpr 0x159941a00 <col:29> 'unsigned char *' lvalue Var 0x159928428 'dst' 'unsigned char *'     |   | |     `-RecoveryExpr 0x159941a20 <col:35> '<dependent type>' contains-errors lvalue     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x159941b18 <col:39, col:43> 'int' '>'     |   | | |-ImplicitCastExpr 0x159941ae8 <col:39> 'unsigned int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x159941aa8 <col:39> 'unsigned int' lvalue Var 0x1599286c8 'i' 'unsigned int'     |   | | `-ImplicitCastExpr 0x159941b00 <col:43> 'unsigned int' <IntegralCast>     |   | |   `-IntegerLiteral 0x159941ac8 <col:43> 'int' 0     |   | |-UnaryOperator 0x159941b58 <col:46, col:47> 'unsigned int' postfix '--'     |   | | `-DeclRefExpr 0x159941b38 <col:46> 'unsigned int' lvalue Var 0x1599286c8 'i' 'unsigned int'     |   | `-CompoundStmt 0x159941d20 <line:13:2, line:16:2>     |   |   |-UnaryOperator 0x159941bb8 <line:14:4, col:5> '<dependent type>' contains-errors postfix '--' cannot overflow     |   |   | `-RecoveryExpr 0x159941b90 <col:4> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x159941b70 <col:4> 'int' lvalue ParmVar 0x159928220 'n' 'int'     |   |   `-CompoundAssignOperator 0x159941cf0 <line:15:4, col:19> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |     |-ArraySubscriptExpr 0x159941c40 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |     | |-ImplicitCastExpr 0x159941c10 <col:4> 'unsigned char *' <LValueToRValue>     |   |     | | `-DeclRefExpr 0x159941bd0 <col:4> 'unsigned char *' lvalue Var 0x159928428 'dst' 'unsigned char *'     |   |     | `-ImplicitCastExpr 0x159941c28 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   `-RecoveryExpr 0x159941bf0 <col:8> '<dependent type>' contains-errors lvalue     |   |     `-ArraySubscriptExpr 0x159941cd0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |       |-ImplicitCastExpr 0x159941ca0 <col:14> 'const unsigned char *' <LValueToRValue>     |   |       | `-DeclRefExpr 0x159941c60 <col:14> 'const unsigned char *' lvalue Var 0x159928548 'src' 'const unsigned char *'     |   |       `-ImplicitCastExpr 0x159941cb8 <col:18> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x159941c80 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x159941e40 <line:17:7, col:36> 'unsigned int' contains-errors '='     |     |-DeclRefExpr 0x159941d78 <col:7> 'unsigned int' lvalue Var 0x159928760 'offset' 'unsigned int'     |     `-CallExpr 0x159941e18 <col:16, col:36> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x159941d98 <col:16> 'int ()' Function 0x159941928 'ALIGN_OFFSET' 'int ()'     |       `-BinaryOperator 0x159941df8 <col:29, col:35> '<dependent type>' contains-errors '+'     |         |-DeclRefExpr 0x159941db8 <col:29> 'const unsigned char *' lvalue Var 0x159928548 'src' 'const unsigned char *'     |         `-RecoveryExpr 0x159941dd8 <col:35> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x159942538 <line:27:3, line:31:5>     | |-BinaryOperator 0x159942348 <line:27:10, col:14> 'int' contains-errors '>'     | | |-RecoveryExpr 0x159942308 <col:10> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x159942328 <col:14> 'int' 0     | `-CompoundStmt 0x159942518 <line:28:5, line:31:5>     |   |-UnaryOperator 0x1599423b0 <line:29:7, col:8> '<dependent type>' contains-errors postfix '--' cannot overflow     |   | `-RecoveryExpr 0x159942388 <col:7> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x159942368 <col:7> 'int' lvalue ParmVar 0x159928220 'n' 'int'     |   `-CompoundAssignOperator 0x1599424e8 <line:30:7, col:22> '<dependent type>' contains-errors '^=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-ArraySubscriptExpr 0x159942438 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     | |-ImplicitCastExpr 0x159942408 <col:7> 'unsigned char *' <LValueToRValue>     |     | | `-DeclRefExpr 0x1599423c8 <col:7> 'unsigned char *' lvalue Var 0x159928428 'dst' 'unsigned char *'     |     | `-ImplicitCastExpr 0x159942420 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x1599423e8 <col:11> '<dependent type>' contains-errors lvalue     |     `-ArraySubscriptExpr 0x1599424c8 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x159942498 <col:17> 'const unsigned char *' <LValueToRValue>     |       | `-DeclRefExpr 0x159942458 <col:17> 'const unsigned char *' lvalue Var 0x159928548 'src' 'const unsigned char *'     |       `-ImplicitCastExpr 0x1599424b0 <col:21> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x159942478 <col:21> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1599435e0 <line:33:3, col:10>       `-ImplicitCastExpr 0x159942590 <col:10> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x159942578 <col:10> 'unsigned char *' <LValueToRValue>           `-DeclRefExpr 0x159942558 <col:10> 'unsigned char *' lvalue Var 0x159928428 'dst' 'unsigned char *' ","19651":"`-FunctionDecl 0x14980de90  line:1:13 hexToDigit 'void (unsigned int *, const unsigned char *)' static   |-ParmVarDecl 0x14980dd08 <col:24, col:39> col:39 used val 'unsigned int *'   |-ParmVarDecl 0x14980ddb8 <col:44, col:66> col:66 used hex 'const unsigned char *'   `-CompoundStmt 0x149826bc8 <line:2:1, line:11:1>     |-DeclStmt 0x14980e010 <line:3:5, col:19>     | `-VarDecl 0x14980dfa8 <col:5, col:18> col:18 used i 'unsigned int'     `-ForStmt 0x149826b90 <line:4:5, line:10:5>       |-BinaryOperator 0x14980e080 <line:4:10, col:12> 'unsigned int' '='       | |-DeclRefExpr 0x14980e028 <col:10> 'unsigned int' lvalue Var 0x14980dfa8 'i' 'unsigned int'       | `-ImplicitCastExpr 0x14980e068 <col:12> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x14980e048 <col:12> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x14980e110 <col:14, col:16> 'int' '<'       | |-ImplicitCastExpr 0x14980e0e0 <col:14> 'unsigned int' <LValueToRValue>       | | `-DeclRefExpr 0x14980e0a0 <col:14> 'unsigned int' lvalue Var 0x14980dfa8 'i' 'unsigned int'       | `-ImplicitCastExpr 0x14980e0f8 <col:16> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x14980e0c0 <col:16> 'int' 4       |-UnaryOperator 0x14980e150 <col:18, col:19> 'unsigned int' postfix '++'       | `-DeclRefExpr 0x14980e130 <col:18> 'unsigned int' lvalue Var 0x14980dfa8 'i' 'unsigned int'       `-CompoundStmt 0x149826b58 <col:23, line:10:5>         |-DeclStmt 0x14980e290 <line:5:9, col:33>         | `-VarDecl 0x14980e180 <col:9, col:32> col:23 used c 'unsigned char' cinit         |   `-ImplicitCastExpr 0x14980e278 <col:27, col:32> 'unsigned char' <LValueToRValue>         |     `-ArraySubscriptExpr 0x14980e258 <col:27, col:32> 'const unsigned char' lvalue         |       |-ImplicitCastExpr 0x14980e228 <col:27> 'const unsigned char *' <LValueToRValue>         |       | `-DeclRefExpr 0x14980e1e8 <col:27> 'const unsigned char *' lvalue ParmVar 0x14980ddb8 'hex' 'const unsigned char *'         |       `-ImplicitCastExpr 0x14980e240 <col:31> 'unsigned int' <LValueToRValue>         |         `-DeclRefExpr 0x14980e208 <col:31> 'unsigned int' lvalue Var 0x14980dfa8 'i' 'unsigned int'         |-IfStmt 0x149826698 <line:6:9, col:41>         | |-BinaryOperator 0x14980e310 <col:13, col:18> 'int' '>='         | | |-ImplicitCastExpr 0x14980e2f8 <col:13> 'int' <IntegralCast>         | | | `-ImplicitCastExpr 0x14980e2e0 <col:13> 'unsigned char' <LValueToRValue>         | | |   `-DeclRefExpr 0x14980e2a8 <col:13> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'         | | `-CharacterLiteral 0x14980e2c8 <col:18> 'int' 65         | `-BinaryOperator 0x149826678 <col:23, col:41> 'unsigned char' '='         |   |-DeclRefExpr 0x14980e330 <col:23> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'         |   `-ImplicitCastExpr 0x149826660 <col:27, col:41> 'unsigned char' <IntegralCast>         |     `-BinaryOperator 0x149826640 <col:27, col:41> 'int' '-'         |       |-ParenExpr 0x149826600 <col:27, col:37> 'int'         |       | `-BinaryOperator 0x14980e3d8 <col:28, col:33> 'int' '&'         |       |   |-ImplicitCastExpr 0x14980e3c0 <col:28> 'int' <IntegralCast>         |       |   | `-ImplicitCastExpr 0x14980e3a8 <col:28> 'unsigned char' <LValueToRValue>         |       |   |   `-DeclRefExpr 0x14980e350 <col:28> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'         |       |   `-UnaryOperator 0x14980e390 <col:32, col:33> 'int' prefix '~' cannot overflow         |       |     `-IntegerLiteral 0x14980e370 <col:33> 'int' 32         |       `-IntegerLiteral 0x149826620 <col:41> 'int' 7         |-CompoundAssignOperator 0x1498266f0 <line:7:9, col:14> 'unsigned char' '-=' ComputeLHSTy='int' ComputeResultTy='int'         | |-DeclRefExpr 0x1498266b8 <col:9> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'         | `-CharacterLiteral 0x1498266d8 <col:14> 'int' 48         |-CallExpr 0x149826988 <line:8:9, col:27> 'int'         | |-ImplicitCastExpr 0x149826970 <col:9> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x149826850 <col:9> 'int ()' Function 0x149826798 'assert' 'int ()'         | `-UnaryOperator 0x149826920 <col:16, col:26> 'int' prefix '!' cannot overflow         |   `-ParenExpr 0x149826900 <col:17, col:26> 'int'         |     `-BinaryOperator 0x1498268e0 <col:18, col:22> 'int' '&'         |       |-ImplicitCastExpr 0x1498268c8 <col:18> 'int' <IntegralCast>         |       | `-ImplicitCastExpr 0x1498268b0 <col:18> 'unsigned char' <LValueToRValue>         |       |   `-DeclRefExpr 0x149826870 <col:18> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char'         |       `-IntegerLiteral 0x149826890 <col:22> 'int' 240         `-BinaryOperator 0x149826b38 <line:9:9, col:30> 'unsigned int' '='           |-UnaryOperator 0x1498269e8 <col:9, col:10> 'unsigned int' lvalue prefix '*' cannot overflow           | `-ImplicitCastExpr 0x1498269d0 <col:10> 'unsigned int *' <LValueToRValue>           |   `-DeclRefExpr 0x1498269b0 <col:10> 'unsigned int *' lvalue ParmVar 0x14980dd08 'val' 'unsigned int *'           `-BinaryOperator 0x149826b18 <col:16, col:30> 'unsigned int' '|'             |-ParenExpr 0x149826aa8 <col:16, col:26> 'unsigned int'             | `-BinaryOperator 0x149826a88 <col:17, col:25> 'unsigned int' '<<'             |   |-ImplicitCastExpr 0x149826a70 <col:17, col:18> 'unsigned int' <LValueToRValue>             |   | `-UnaryOperator 0x149826a38 <col:17, col:18> 'unsigned int' lvalue prefix '*' cannot overflow             |   |   `-ImplicitCastExpr 0x149826a20 <col:18> 'unsigned int *' <LValueToRValue>             |   |     `-DeclRefExpr 0x149826a00 <col:18> 'unsigned int *' lvalue ParmVar 0x14980dd08 'val' 'unsigned int *'             |   `-IntegerLiteral 0x149826a50 <col:25> 'int' 4             `-ImplicitCastExpr 0x149826b00 <col:30> 'unsigned int' <IntegralCast>               `-ImplicitCastExpr 0x149826ae8 <col:30> 'unsigned char' <LValueToRValue>                 `-DeclRefExpr 0x149826ac8 <col:30> 'unsigned char' lvalue Var 0x14980e180 'c' 'unsigned char' ","19630":"`-FunctionDecl 0x15b910a90  col:48 implicit used strndup 'char *(const char *, unsigned long)' extern   |-ParmVarDecl 0x15b910b90 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x15b910bf8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15b910b38 <<invalid sloc>> Implicit 951 ","20068":"`-FunctionDecl 0x14d80de80  line:1:13 invalid sysbus_ahci_class_init 'void (int *, void *)' static   |-ParmVarDecl 0x14d80dd28 <col:36, col:49> col:49 invalid klass 'int *'   |-ParmVarDecl 0x14d80dda8 <col:56, col:62> col:62 data 'void *'   `-CompoundStmt 0x14d122c00 <line:2:1, line:10:1>     `-CallExpr 0x14d80e3c0 <line:9:5, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x14d80e270 <col:5> 'int ()' Function 0x14d80e1b8 'set_bit' 'int ()'       |-RecoveryExpr 0x14d80e338 <col:13> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x14d80e378 <col:38, col:42> '<dependent type>' contains-errors lvalue ->categories         `-RecoveryExpr 0x14d80e358 <col:38> '<dependent type>' contains-errors lvalue ","20083":"`-FunctionDecl 0x14c949118  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14c949218 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14c949280 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14c9492e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14c9491c0 <<invalid sloc>> Implicit 882 ","19558":"`-FunctionDecl 0x11d1281f0  line:1:13 invalid rtl8139_set_next_tctr_time 'void (int *)' static   |-ParmVarDecl 0x11d128128 <col:40, col:54> col:54 referenced invalid s 'int *'   `-CompoundStmt 0x11d8090b0 <line:2:1, line:21:1>     |-DeclStmt 0x11d128338 <line:3:5, col:62>     | `-VarDecl 0x11d1282b8 <col:5, col:20> col:20 invalid ns_per_period 'const int'     |-CallExpr 0x11d128578 <line:5:5, col:18> 'int'     | |-ImplicitCastExpr 0x11d128560 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11d1284b0 <col:5> 'int ()' Function 0x11d1283f8 'DPRINTF' 'int ()'     | `-ImplicitCastExpr 0x11d1285a0 <col:13> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x11d128510 <col:13> 'char[4]' lvalue \"STR\"     |-WhileStmt 0x11d808940 <line:8:5, line:10:5>     | |-BinaryOperator 0x11d808828 <line:8:12, col:80> 'int' contains-errors '<='     | | |-BinaryOperator 0x11d128640 <col:12, col:27> '<dependent type>' contains-errors '+'     | | | |-CXXDependentScopeMemberExpr 0x11d1285d8 <col:12, col:15> '<dependent type>' contains-errors lvalue ->TCTR_base     | | | | `-RecoveryExpr 0x11d1285b8 <col:12> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x11d128620 <col:27> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x11d808800 <col:44, col:80> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11d128740 <col:44> 'int ()' Function 0x11d128688 'qemu_clock_get_ns' 'int ()'     | |   `-RecoveryExpr 0x11d1287c0 <col:62> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11d808928 <col:83, line:10:5>     |   `-CompoundAssignOperator 0x11d8088f8 <line:9:9, col:25> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-CXXDependentScopeMemberExpr 0x11d808890 <col:9, col:12> '<dependent type>' contains-errors lvalue ->TCTR_base     |     | `-RecoveryExpr 0x11d808868 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x11d808848 <col:9> 'int *' lvalue ParmVar 0x11d128128 's' 'int *'     |     `-RecoveryExpr 0x11d8088d8 <col:25> '<dependent type>' contains-errors lvalue     `-IfStmt 0x11d809080 <line:12:5, line:20:5> has_else       |-UnaryOperator 0x11d8089e0 <line:12:9, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x11d8089c8 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>       |   `-CXXDependentScopeMemberExpr 0x11d808980 <col:10, col:13> '<dependent type>' contains-errors lvalue ->TimerInt       |     `-RecoveryExpr 0x11d808960 <col:10> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x11d808b88 <col:23, line:14:5>       | `-CallExpr 0x11d808b60 <line:13:9, col:27> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x11d808ad8 <col:9> 'int ()' Function 0x11d808a20 'timer_del' 'int ()'       |   `-CXXDependentScopeMemberExpr 0x11d808b18 <col:19, col:22> '<dependent type>' contains-errors lvalue ->timer       |     `-RecoveryExpr 0x11d808af8 <col:19> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x11d809060 <line:14:12, line:20:5>         |-IfStmt 0x11d808d98 <line:16:9, line:18:9>         | |-BinaryOperator 0x11d808d48 <line:16:13, col:73> 'int' contains-errors '<='         | | |-BinaryOperator 0x11d808ce0 <col:13, col:28> '<dependent type>' contains-errors '+'         | | | |-CXXDependentScopeMemberExpr 0x11d808bc0 <col:13, col:16> '<dependent type>' contains-errors lvalue ->TCTR_base         | | | | `-RecoveryExpr 0x11d808ba0 <col:13> '<dependent type>' contains-errors lvalue         | | | `-RecoveryExpr 0x11d808cc0 <col:28> '<dependent type>' contains-errors lvalue         | | `-CallExpr 0x11d808d20 <col:37, col:73> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x11d808c40 <col:37> 'int ()' Function 0x11d128688 'qemu_clock_get_ns' 'int ()'         | |   `-RecoveryExpr 0x11d808d00 <col:55> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x11d808d88 <col:76, line:18:9>         `-CallExpr 0x11d809030 <line:19:9, col:49> '<dependent type>' contains-errors           |-DeclRefExpr 0x11d808e98 <col:9> 'int ()' Function 0x11d808de0 'timer_mod' 'int ()'           |-CXXDependentScopeMemberExpr 0x11d808ed8 <col:19, col:22> '<dependent type>' contains-errors lvalue ->timer           | `-RecoveryExpr 0x11d808eb8 <col:19> '<dependent type>' contains-errors lvalue           `-BinaryOperator 0x11d809010 <col:29, col:44> '<dependent type>' contains-errors '+'             |-CXXDependentScopeMemberExpr 0x11d808f40 <col:29, col:32> '<dependent type>' contains-errors lvalue ->TCTR_base             | `-RecoveryExpr 0x11d808f20 <col:29> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x11d808ff0 <col:44> '<dependent type>' contains-errors lvalue ","19991":"`-FunctionDecl 0x14000e0e0  line:22:3 assert_false_rule 'int ()' ","19151":"`-FunctionDecl 0x127009028  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x127009128 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x127009190 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1270091f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1270090d0 <<invalid sloc>> Implicit 882 ","19183":"`-FunctionDecl 0x159128750  line:1:6 altivec_unavailable_exception 'void (struct pt_regs *)'   |-ParmVarDecl 0x159128648 <col:36, col:52> col:52 used regs 'struct pt_regs *'   `-CompoundStmt 0x159141238 <line:2:1, line:13:1>     |-IfStmt 0x159140ed8 <line:4:2, line:8:2>     | |-CallExpr 0x159140bf8 <line:4:6, col:20> 'int'     | | |-ImplicitCastExpr 0x159140be0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x159140b70 <col:6> 'int ()' Function 0x159140ab8 'user_mode' 'int ()'     | | `-ImplicitCastExpr 0x159140c20 <col:16> 'struct pt_regs *' <LValueToRValue>     | |   `-DeclRefExpr 0x159140b90 <col:16> 'struct pt_regs *' lvalue ParmVar 0x159128648 'regs' 'struct pt_regs *'     | `-CompoundStmt 0x159140eb8 <col:23, line:8:2>     |   |-CallExpr 0x159140e68 <line:6:3, col:49> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x159140d18 <col:3> 'int ()' Function 0x159140c60 '_exception' 'int ()'     |   | |-RecoveryExpr 0x159140e28 <col:14> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x159140d50 <col:22> 'struct pt_regs *' lvalue ParmVar 0x159128648 'regs' 'struct pt_regs *'     |   | |-RecoveryExpr 0x159140e48 <col:28> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x159140dc0 <col:40, col:46> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x159140d88 <col:40> 'struct pt_regs *' lvalue ParmVar 0x159128648 'regs' 'struct pt_regs *'     |   `-ReturnStmt 0x159140ea8 <line:7:3>     `-CallExpr 0x159141200 <line:12:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x1591410f0 <col:2> 'int ()' Function 0x159141038 'die' 'int ()'       |-StringLiteral 0x159141150 <col:6> 'char[4]' lvalue \"STR\"       |-DeclRefExpr 0x159141170 <col:13> 'struct pt_regs *' lvalue ParmVar 0x159128648 'regs' 'struct pt_regs *'       `-RecoveryExpr 0x1591411e0 <col:19> '<dependent type>' contains-errors lvalue ","19133":"`-FunctionDecl 0x12a80dd38  line:1:8 invalid pause_clearing 'int ()'   `-CompoundStmt 0x12a80e170 <col:25, line:11:3>     |-RecoveryExpr 0x12a80de10 <line:2:5> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12a80e050 <line:3:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a80df58 <col:5> 'int ()' Function 0x12a80dea0 'assert' 'int ()'     | `-BinaryOperator 0x12a80e030 <col:12, col:22> 'int' contains-errors '=='     |   |-RecoveryExpr 0x12a80dff0 <col:12> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12a80e010 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12a80e0f0 <line:4:5, line:8:5>     | |-RecoveryExpr 0x12a80e090 <line:4:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12a80e0e0 <col:24, line:8:5>     `-ReturnStmt 0x12a80e160 <line:10:5, col:12>       `-RecoveryExpr 0x12a80e140 <col:12> '<dependent type>' contains-errors lvalue ","19681":"`-FunctionDecl 0x140928280  line:1:13 invalid write_reply_cb 'void (int *, void *)' static   |-ParmVarDecl 0x140928128 <col:28, col:41> col:41 invalid message 'int *'   |-ParmVarDecl 0x1409281a8 <col:50, col:56> col:56 used user_data 'void *'   `-CompoundStmt 0x140944a88 <line:2:1, line:44:1>     |-DeclStmt 0x140928578 <line:3:2, col:35>     | |-RecordDecl 0x140928338 <col:2, col:9> col:9 struct pending_op     | `-VarDecl 0x1409284a8 <col:2, col:26> col:21 used op 'struct pending_op *' cinit     |   `-ImplicitCastExpr 0x140928548 <col:26> 'struct pending_op *' <BitCast>     |     `-ImplicitCastExpr 0x140928530 <col:26> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x140928510 <col:26> 'void *' lvalue ParmVar 0x1409281a8 'user_data' 'void *'     |-DeclStmt 0x140928778 <line:4:2, col:28>     | |-RecordDecl 0x140928590 <col:2, col:9> col:9 struct external_chrc     | `-VarDecl 0x1409286f8 <col:2, col:24> col:24 used chrc 'struct external_chrc *'     |-DeclStmt 0x1409419e8 <line:5:2, col:28>     | |-RecordDecl 0x140941800 <col:2, col:9> col:9 struct external_desc     | `-VarDecl 0x140941968 <col:2, col:24> col:24 used desc 'struct external_desc *'     |-IfStmt 0x140942148 <line:10:2, line:13:2>     | |-UnaryOperator 0x140941ea0 <line:10:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x140941e88 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x140941e60 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x140941a00 <col:7> 'struct pending_op *' lvalue Var 0x1409284a8 'op' 'struct pending_op *'     | `-CompoundStmt 0x140942128 <col:24, line:13:2>     |   |-CallExpr 0x1409420d8 <line:11:3, col:12> 'int'     |   | |-ImplicitCastExpr 0x1409420c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x140942010 <col:3> 'int ()' Function 0x140941f58 'DBG' 'int ()'     |   | `-ImplicitCastExpr 0x140942100 <col:7> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x140942070 <col:7> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x140942118 <line:12:3>     |-CallExpr 0x1409422f8 <line:15:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140942248 <col:2> 'int ()' Function 0x140942190 'dbus_error_init' 'int ()'     | `-UnaryOperator 0x1409422e0 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1409422c0 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140943fc8 <line:17:2, line:23:2>     | |-BinaryOperator 0x140942560 <line:17:6, col:52> 'int' contains-errors '=='     | | |-CallExpr 0x140942510 <col:6, col:47> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x140942400 <col:6> 'int ()' Function 0x140942348 'dbus_set_error_from_message' 'int ()'     | | | |-UnaryOperator 0x1409424f8 <col:34, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x1409424d8 <col:35> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x140942450 <col:40> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x140942540 <col:52> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140943fa0 <col:58, line:23:2>     |   |-CallExpr 0x140942788 <line:18:3, col:35> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x140942580 <col:3> 'int ()' Function 0x140941f58 'DBG' 'int ()'     |   | |-StringLiteral 0x1409425a0 <col:7> 'char[4]' lvalue \"STR\"     |   | |-CXXDependentScopeMemberExpr 0x1409426d8 <col:14, col:18> '<dependent type>' contains-errors lvalue .name     |   | | `-RecoveryExpr 0x1409426b8 <col:14> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x140942740 <col:24, col:28> '<dependent type>' contains-errors lvalue .message     |   |   `-RecoveryExpr 0x140942720 <col:24> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x140943f10 <line:21:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x140943e60 <col:3> 'int ()' Function 0x140943da8 'dbus_error_free' 'int ()'     |   | `-UnaryOperator 0x140943ef8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x140943ed8 <col:20> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x140943f88 <line:22:3, col:8> 'done' 0x140943f38     |-IfStmt 0x140944490 <line:25:2, line:33:2>     | |-RecoveryExpr 0x140944020 <line:25:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140943fe8 <col:6> 'struct pending_op *' lvalue Var 0x1409284a8 'op' 'struct pending_op *'     | `-CompoundStmt 0x140944478 <col:26, line:33:2>     |   `-IfStmt 0x140944448 <line:26:3, line:32:3> has_else     |     |-RecoveryExpr 0x140944080 <line:26:7, col:11> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x140944048 <col:7> 'struct pending_op *' lvalue Var 0x1409284a8 'op' 'struct pending_op *'     |     |-CompoundStmt 0x1409442d0 <col:30, line:29:3>     |     | `-BinaryOperator 0x140944250 <line:27:4, col:53> 'struct external_chrc *' contains-errors '='     |     |   |-DeclRefExpr 0x1409440a8 <col:4> 'struct external_chrc *' lvalue Var 0x1409286f8 'chrc' 'struct external_chrc *'     |     |   `-CallExpr 0x140944228 <col:11, col:53> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x1409441a8 <col:11> 'int ()' Function 0x1409440f0 'gatt_db_attribute_get_user_data' 'int ()'     |     |     `-RecoveryExpr 0x140944200 <col:43, col:47> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x1409441c8 <col:43> 'struct pending_op *' lvalue Var 0x1409284a8 'op' 'struct pending_op *'     |     `-CompoundStmt 0x140944430 <line:29:10, line:32:3>     |       `-BinaryOperator 0x1409443b0 <line:30:4, col:53> 'struct external_desc *' contains-errors '='     |         |-DeclRefExpr 0x1409442e8 <col:4> 'struct external_desc *' lvalue Var 0x140941968 'desc' 'struct external_desc *'     |         `-CallExpr 0x140944388 <col:11, col:53> '<dependent type>' contains-errors     |           |-DeclRefExpr 0x140944308 <col:11> 'int ()' Function 0x1409440f0 'gatt_db_attribute_get_user_data' 'int ()'     |           `-RecoveryExpr 0x140944360 <col:43, col:47> '<dependent type>' contains-errors lvalue     |             `-DeclRefExpr 0x140944328 <col:43> 'struct pending_op *' lvalue Var 0x1409284a8 'op' 'struct pending_op *'     |-IfStmt 0x140944880 <line:36:2, line:40:2>     | |-RecoveryExpr 0x1409446d0 <line:36:6, col:38> '_Bool' contains-errors     | `-CompoundStmt 0x140944868 <col:41, line:40:2>     |   `-CallExpr 0x140944828 <line:39:3, col:14> 'int'     |     |-ImplicitCastExpr 0x140944810 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1409447d0 <col:3> 'int ()' Function 0x140944718 'error' 'int ()'     |     `-ImplicitCastExpr 0x140944850 <col:9> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x1409447f0 <col:9> 'char[4]' lvalue \"STR\"     `-LabelStmt 0x140944a68 <line:42:1, col:5> 'done'       `-NullStmt 0x140944a60 <col:5> ","20054":"`-FunctionDecl 0x11c928288  line:1:23 invalid cfg_getint 'int (int *, const char *)'   |-ParmVarDecl 0x11c928128 <col:34, col:41> col:41 invalid cfg 'int *'   |-ParmVarDecl 0x11c9281a8 <col:46, col:58> col:58 used name 'const char *'   `-CompoundStmt 0x11c928568 <line:2:1, line:4:1>     `-ReturnStmt 0x11c928558 <line:3:2, col:33>       `-CallExpr 0x11c928520 <col:9, col:33> '<dependent type>' contains-errors         |-DeclRefExpr 0x11c9284a0 <col:9> 'int ()' Function 0x11c9283e8 'cfg_getnint' 'int ()'         |-RecoveryExpr 0x11c9284c0 <col:21> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x11c9284e0 <col:26> 'const char *' lvalue ParmVar 0x11c9281a8 'name' 'const char *'         `-IntegerLiteral 0x11c928500 <col:32> 'int' 0 ","19633":"`-FunctionDecl 0x147829958  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x147829a58 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x147829a00 <<invalid sloc>> Implicit 873 ","20148":"`-FunctionDecl 0x12c928318  line:1:12 invalid update_prepare_order_info 'int (int *, int *, int)' static   |-ParmVarDecl 0x12c928128 <col:38, col:50> col:50 invalid context 'int *'   |-ParmVarDecl 0x12c9281a8 <col:59, col:71> col:71 referenced invalid orderInfo 'int *'   |-ParmVarDecl 0x12c928228 <col:82, col:89> col:89 invalid orderType 'int'   `-CompoundStmt 0x12c941c18 <line:2:1, line:12:1>     |-DeclStmt 0x12c928478 <line:3:2, col:16>     | `-VarDecl 0x12c9283f0 <col:2, col:15> col:6 used length 'int' cinit     |   `-IntegerLiteral 0x12c928458 <col:15> 'int' 1     |-BinaryOperator 0x12c928540 <line:4:2, col:26> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12c9284d8 <col:2, col:13> '<dependent type>' contains-errors lvalue ->fieldFlags     | | `-RecoveryExpr 0x12c9284b0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c928490 <col:2> 'int *' lvalue ParmVar 0x12c9281a8 'orderInfo' 'int *'     | `-IntegerLiteral 0x12c928520 <col:26> 'int' 0     |-BinaryOperator 0x12c928610 <line:5:2, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12c9285a8 <col:2, col:13> '<dependent type>' contains-errors lvalue ->orderType     | | `-RecoveryExpr 0x12c928580 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c928560 <col:2> 'int *' lvalue ParmVar 0x12c9281a8 'orderInfo' 'int *'     | `-RecoveryExpr 0x12c9285f0 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c928718 <line:6:2, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12c928678 <col:2, col:13> '<dependent type>' contains-errors lvalue ->controlFlags     | | `-RecoveryExpr 0x12c928650 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c928630 <col:2> 'int *' lvalue ParmVar 0x12c9281a8 'orderInfo' 'int *'     | `-RecoveryExpr 0x12c9286f8 <col:28> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x12c941850 <line:7:2, col:29> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x12c928780 <col:2, col:13> '<dependent type>' contains-errors lvalue ->controlFlags     | | `-RecoveryExpr 0x12c928758 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12c928738 <col:2> 'int *' lvalue ParmVar 0x12c9281a8 'orderInfo' 'int *'     | `-RecoveryExpr 0x12c941830 <col:29> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x12c9418c0 <line:8:2, col:12> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x12c941880 <col:2> 'int' lvalue Var 0x12c9283f0 'length' 'int'     | `-IntegerLiteral 0x12c9418a0 <col:12> 'int' 1     |-CompoundAssignOperator 0x12c941ba0 <line:10:2, col:52> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x12c941990 <col:2> 'int' lvalue Var 0x12c9283f0 'length' 'int'     | `-CallExpr 0x12c941b70 <col:12, col:52> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c941b10 <col:12> 'int ()' Function 0x12c941a58 'update_prepare_bounds' 'int ()'     |   |-RecoveryExpr 0x12c941b30 <col:34> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12c941b50 <col:43> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c941c08 <line:11:2, col:9>       `-ImplicitCastExpr 0x12c941bf0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c941bd0 <col:9> 'int' lvalue Var 0x12c9283f0 'length' 'int' ","19981":"`-FunctionDecl 0x10700dfa8  line:1:1 invalid make_weights 'int (int *, int, double, double)'   |-ParmVarDecl 0x10700dd28 <col:15, col:33> col:33 invalid filter 'int *'   |-ParmVarDecl 0x10700dda8 <line:2:8, col:26> col:26 invalid interp_type 'int'   |-ParmVarDecl 0x10700de28 <line:3:8, col:26> col:26 used scale_x 'double'   |-ParmVarDecl 0x10700dea8 <line:4:8, col:26> col:26 used scale_y 'double'   `-CompoundStmt 0x107027bf0 <line:5:1, line:27:1>     `-SwitchStmt 0x10700e0a8 <line:6:3, line:26:5>       |-ImplicitCastExpr 0x10700e090 <line:6:11> '<dependent type>' contains-errors <LValueToRValue>       | `-RecoveryExpr 0x10700e070 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x107027b88 <line:7:5, line:26:5>         |-CallExpr 0x10700e2a8 <line:9:7, col:29> 'int'         | `-ImplicitCastExpr 0x10700e290 <col:7> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x10700e240 <col:7> 'int ()' Function 0x10700e188 'g_assert_not_reached' 'int ()'         |-BreakStmt 0x10700e2c8 <line:10:7>         |-CallExpr 0x1070274a0 <line:13:7, col:45> '<dependent type>' contains-errors         | |-DeclRefExpr 0x10700e3c8 <col:7> 'int ()' Function 0x10700e310 'tile_make_weights' 'int ()'         | |-UnaryOperator 0x107027468 <col:26, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x107027420 <col:27, col:35> '<dependent type>' contains-errors lvalue ->x         | |   `-RecoveryExpr 0x107027400 <col:27> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x107027480 <col:38> 'double' lvalue ParmVar 0x10700de28 'scale_x' 'double'         |-CallExpr 0x107027590 <line:14:7, col:45> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1070274d0 <col:7> 'int ()' Function 0x10700e310 'tile_make_weights' 'int ()'         | |-UnaryOperator 0x107027558 <col:26, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x107027510 <col:27, col:35> '<dependent type>' contains-errors lvalue ->y         | |   `-RecoveryExpr 0x1070274f0 <col:27> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x107027570 <col:38> 'double' lvalue ParmVar 0x10700dea8 'scale_y' 'double'         |-BreakStmt 0x1070275c0 <line:15:7>         |-CallExpr 0x107027780 <line:18:7, col:57> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1070276c0 <col:7> 'int ()' Function 0x107027608 'bilinear_magnify_make_weights' 'int ()'         | |-UnaryOperator 0x107027748 <col:38, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x107027700 <col:39, col:47> '<dependent type>' contains-errors lvalue ->x         | |   `-RecoveryExpr 0x1070276e0 <col:39> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x107027760 <col:50> 'double' lvalue ParmVar 0x10700de28 'scale_x' 'double'         |-CallExpr 0x107027870 <line:19:7, col:57> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1070277b0 <col:7> 'int ()' Function 0x107027608 'bilinear_magnify_make_weights' 'int ()'         | |-UnaryOperator 0x107027838 <col:38, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x1070277f0 <col:39, col:47> '<dependent type>' contains-errors lvalue ->y         | |   `-RecoveryExpr 0x1070277d0 <col:39> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x107027850 <col:50> 'double' lvalue ParmVar 0x10700dea8 'scale_y' 'double'         |-BreakStmt 0x1070278a0 <line:20:7>         |-CallExpr 0x107027a60 <line:23:7, col:53> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1070279a0 <col:7> 'int ()' Function 0x1070278e8 'bilinear_box_make_weights' 'int ()'         | |-UnaryOperator 0x107027a28 <col:34, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x1070279e0 <col:35, col:43> '<dependent type>' contains-errors lvalue ->x         | |   `-RecoveryExpr 0x1070279c0 <col:35> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x107027a40 <col:46> 'double' lvalue ParmVar 0x10700de28 'scale_x' 'double'         |-CallExpr 0x107027b50 <line:24:7, col:53> '<dependent type>' contains-errors         | |-DeclRefExpr 0x107027a90 <col:7> 'int ()' Function 0x1070278e8 'bilinear_box_make_weights' 'int ()'         | |-UnaryOperator 0x107027b18 <col:34, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x107027ad0 <col:35, col:43> '<dependent type>' contains-errors lvalue ->y         | |   `-RecoveryExpr 0x107027ab0 <col:35> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x107027b30 <col:46> 'double' lvalue ParmVar 0x10700dea8 'scale_y' 'double'         `-BreakStmt 0x107027b80 <line:25:7> ","19440":"`-FunctionDecl 0x14c8266b0  line:1:13 copy_workqueue_attrs 'void (struct workqueue_attrs *, const struct workqueue_attrs *)' static   |-ParmVarDecl 0x14c80e248 <col:34, col:58> col:58 used to 'struct workqueue_attrs *'   |-ParmVarDecl 0x14c80e368 <line:2:6, col:36> col:36 used from 'const struct workqueue_attrs *'   `-CompoundStmt 0x14c826bb0 <line:3:1, line:8:1>     |-BinaryOperator 0x14c826870 <line:4:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14c8267e8 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c8267b0 <col:2> 'struct workqueue_attrs *' lvalue ParmVar 0x14c80e248 'to' 'struct workqueue_attrs *'     | `-RecoveryExpr 0x14c826848 <col:13, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c826810 <col:13> 'const struct workqueue_attrs *' lvalue ParmVar 0x14c80e368 'from' 'const struct workqueue_attrs *'     |-CallExpr 0x14c826aa0 <line:5:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c8269c0 <col:2> 'int ()' Function 0x14c826908 'cpumask_copy' 'int ()'     | |-RecoveryExpr 0x14c826a18 <col:15, col:19> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14c8269e0 <col:15> 'struct workqueue_attrs *' lvalue ParmVar 0x14c80e248 'to' 'struct workqueue_attrs *'     | `-RecoveryExpr 0x14c826a78 <col:28, col:34> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14c826a40 <col:28> 'const struct workqueue_attrs *' lvalue ParmVar 0x14c80e368 'from' 'const struct workqueue_attrs *'     `-BinaryOperator 0x14c826b90 <line:7:2, col:22> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x14c826b08 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x14c826ad0 <col:2> 'struct workqueue_attrs *' lvalue ParmVar 0x14c80e248 'to' 'struct workqueue_attrs *'       `-RecoveryExpr 0x14c826b68 <col:16, col:22> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x14c826b30 <col:16> 'const struct workqueue_attrs *' lvalue ParmVar 0x14c80e368 'from' 'const struct workqueue_attrs *' ","19273":"`-FunctionDecl 0x15700df18  line:1:23 invalid read_cache_accel 'int *(int *, int *, int *)' static   |-ParmVarDecl 0x15700dd28 <col:40, col:49> col:49 invalid cache_buf 'int *'   |-ParmVarDecl 0x15700dda8 <col:60, col:73> col:73 invalid hdr 'int *'   |-ParmVarDecl 0x15700de28 <col:78, col:91> col:91 invalid maps 'int *'   `-CompoundStmt 0x157026bc8 <col:97, line:32:1>     |-IfStmt 0x15700e268 <line:2:2, line:4:2>     | |-BinaryOperator 0x15700e1e8 <line:2:6, col:62> 'int' contains-errors '||'     | | |-BinaryOperator 0x15700e130 <col:6, col:34> 'int' contains-errors '||'     | | | |-BinaryOperator 0x15700e078 <col:6, col:21> 'int' contains-errors '||'     | | | | |-UnaryOperator 0x15700e010 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | | `-ImplicitCastExpr 0x15700dff8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | | | | |   `-RecoveryExpr 0x15700dfd8 <col:7> '<dependent type>' contains-errors lvalue     | | | | `-UnaryOperator 0x15700e060 <col:20, col:21> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | |   `-ImplicitCastExpr 0x15700e048 <col:21> '<dependent type>' contains-errors <LValueToRValue>     | | | |     `-RecoveryExpr 0x15700e028 <col:21> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x15700e118 <col:28, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x15700e100 <col:29, col:34> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-CXXDependentScopeMemberExpr 0x15700e0b8 <col:29, col:34> '<dependent type>' contains-errors lvalue ->accelerateInfoSize     | | |       `-RecoveryExpr 0x15700e098 <col:29> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x15700e1d0 <col:56, col:62> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x15700e1b8 <col:57, col:62> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x15700e170 <col:57, col:62> '<dependent type>' contains-errors lvalue ->accelerateInfoAddr     | |       `-RecoveryExpr 0x15700e150 <col:57> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15700e250 <col:82, line:4:2>     |   `-ReturnStmt 0x15700e240 <line:3:3, col:10>     |     `-RecoveryExpr 0x15700e220 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15700e380 <line:7:2, line:9:2>     | |-UnaryOperator 0x15700e308 <line:7:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15700e2f0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x15700e2d0 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15700e368 <col:15, line:9:2>     |   `-ReturnStmt 0x15700e358 <line:8:3, col:10>     |     `-RecoveryExpr 0x15700e338 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157026868 <line:13:2, line:15:2>     | |-UnaryOperator 0x1570267f0 <line:13:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1570267d8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1570267b8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x157026850 <col:14, line:15:2>     |   `-ReturnStmt 0x157026840 <line:14:3, col:10>     |     `-RecoveryExpr 0x157026820 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x157026ba8 <line:17:2, line:20:2>       |-RecoveryExpr 0x157026a78 <line:17:6, col:68> '_Bool' contains-errors       `-CompoundStmt 0x157026b98 <col:74, line:20:2> ","19640":"`-FunctionDecl 0x14a940ef0  col:3 implicit used strncpy 'char *(char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x14a940ff0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x14a941058 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14a9410c0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a940f98 <<invalid sloc>> Implicit 886 ","19899":"`-FunctionDecl 0x149928198  line:1:1 flatpak_dir_get_user 'int (void)'   `-CompoundStmt 0x1499287a8 <line:2:1, line:5:1>     |-CallExpr 0x149928430 <line:3:3, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1499283b0 <col:3> 'int ()' Function 0x1499282f8 'g_autoptr' 'int ()'     | `-RecoveryExpr 0x149928410 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x149928798 <line:4:3, col:37>       `-CallExpr 0x149928768 <col:10, col:37> '<dependent type>' contains-errors         |-DeclRefExpr 0x1499286a8 <col:10> 'int ()' Function 0x1499285f0 'flatpak_dir_new' 'int ()'         |-RecoveryExpr 0x149928728 <col:27> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x149928748 <col:33> '<dependent type>' contains-errors lvalue ","19735":"`-FunctionDecl 0x13d8bdbd8  line:1:14 ToS 'short (unsigned char *)' static   |-ParmVarDecl 0x13d8bdb08 <col:18, col:33> col:33 used puffer 'unsigned char *'   `-CompoundStmt 0x13d8bdf30 <line:2:1, line:4:1>     `-ReturnStmt 0x13d8bdf20 <line:3:3, col:46>       `-ParenExpr 0x13d8bdf00 <col:10, col:46> 'short'         `-CStyleCastExpr 0x13d8bded8 <col:11, col:45> 'short' <IntegralCast>           `-ParenExpr 0x13d8bdeb8 <col:18, col:45> 'int'             `-BinaryOperator 0x13d8bde60 <col:19, col:44> 'int' '|'               |-ImplicitCastExpr 0x13d8bde48 <col:19, col:27> 'int' <IntegralCast>               | `-ImplicitCastExpr 0x13d8bde30 <col:19, col:27> 'unsigned char' <LValueToRValue>               |   `-ArraySubscriptExpr 0x13d8bdd28 <col:19, col:27> 'unsigned char' lvalue               |     |-ImplicitCastExpr 0x13d8bdd10 <col:19> 'unsigned char *' <LValueToRValue>               |     | `-DeclRefExpr 0x13d8bdcd0 <col:19> 'unsigned char *' lvalue ParmVar 0x13d8bdb08 'puffer' 'unsigned char *'               |     `-IntegerLiteral 0x13d8bdcf0 <col:26> 'int' 0               `-BinaryOperator 0x13d8bde10 <col:31, col:44> 'int' '<<'                 |-ImplicitCastExpr 0x13d8bddf8 <col:31, col:39> 'int' <IntegralCast>                 | `-ImplicitCastExpr 0x13d8bdde0 <col:31, col:39> 'unsigned char' <LValueToRValue>                 |   `-ArraySubscriptExpr 0x13d8bdda0 <col:31, col:39> 'unsigned char' lvalue                 |     |-ImplicitCastExpr 0x13d8bdd88 <col:31> 'unsigned char *' <LValueToRValue>                 |     | `-DeclRefExpr 0x13d8bdd48 <col:31> 'unsigned char *' lvalue ParmVar 0x13d8bdb08 'puffer' 'unsigned char *'                 |     `-IntegerLiteral 0x13d8bdd68 <col:38> 'int' 1                 `-IntegerLiteral 0x13d8bddc0 <col:44> 'int' 8 ","19819":"`-FunctionDecl 0x121928318  line:1:1 invalid datetime_s_rfc3339 'int (int, int *, int)'   |-ParmVarDecl 0x1219280d8 <col:20, col:24> col:24 used argc 'int'   |-ParmVarDecl 0x1219281a8 <col:30, col:37> col:37 invalid argv 'int *'   |-ParmVarDecl 0x121928228 <col:43, col:49> col:49 invalid klass 'int'   `-CompoundStmt 0x1219421d0 <line:2:1, line:18:1>     |-CallExpr 0x121928708 <line:5:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x121928530 <col:5> 'int ()' Function 0x121928478 'rb_scan_args' 'int ()'     | |-DeclRefExpr 0x121928550 <col:18> 'int' lvalue ParmVar 0x1219280d8 'argc' 'int'     | |-RecoveryExpr 0x121928570 <col:24> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x1219285d0 <col:30> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x1219286b8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x121928698 <col:38> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1219286f0 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1219286d0 <col:44> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x121928788 <line:7:5, line:12:5>     | |-ImplicitCastExpr 0x121928770 <line:7:13> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x121928750 <col:13> 'int' lvalue ParmVar 0x1219280d8 'argc' 'int'     | `-CompoundStmt 0x121941f88 <col:19, line:12:5>     |   |-CaseStmt 0x121941c00 <line:8:7, <invalid sloc>>     |   | |-ConstantExpr 0x1219287d0 <col:12> 'int'     |   | | `-IntegerLiteral 0x1219287b0 <col:12> 'int' 0     |   | `-NullStmt 0x121941dd8 <<invalid sloc>>     |   `-CaseStmt 0x121941e18 <line:10:7, <invalid sloc>>     |     |-ConstantExpr 0x121941e00 <col:12> 'int'     |     | `-IntegerLiteral 0x121941de0 <col:12> 'int' 1     |     `-NullStmt 0x121941f80 <<invalid sloc>>     `-CompoundStmt 0x1219421b8 <line:14:5, line:17:5>       `-ReturnStmt 0x1219421a8 <line:16:2, col:40>         `-CallExpr 0x121942170 <col:9, col:40> '<dependent type>' contains-errors           |-DeclRefExpr 0x121942088 <col:9> 'int ()' Function 0x121941fd0 'dt_new_by_frags' 'int ()'           |-RecoveryExpr 0x1219420a8 <col:25> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x121942130 <col:32> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x121942150 <col:38> '<dependent type>' contains-errors lvalue ","19738":"`-FunctionDecl 0x129141800  line:1:19 invalid vmx_exit_handlers_fastpath 'int (struct kvm_vcpu *)' static   |-ParmVarDecl 0x129128668 <col:46, col:63> col:63 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x129141f58 <line:2:1, line:11:1>     `-SwitchStmt 0x129141b60 <line:3:2, line:10:2>       |-ImplicitCastExpr 0x129141b48 <line:3:10, col:36> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x129141b00 <col:10, col:36> '<dependent type>' contains-errors lvalue .basic       |   `-RecoveryExpr 0x129141ad8 <col:10, col:24> '<dependent type>' contains-errors lvalue       |     `-CallExpr 0x129141a98 <col:10, col:21> 'int'       |       |-ImplicitCastExpr 0x129141a80 <col:10> 'int (*)()' <FunctionToPointerDecay>       |       | `-DeclRefExpr 0x129141a10 <col:10> 'int ()' Function 0x129141958 'to_vmx' 'int ()'       |       `-ImplicitCastExpr 0x129141ac0 <col:17> 'struct kvm_vcpu *' <LValueToRValue>       |         `-DeclRefExpr 0x129141a30 <col:17> 'struct kvm_vcpu *' lvalue ParmVar 0x129128668 'vcpu' 'struct kvm_vcpu *'       `-CompoundStmt 0x129141f30 <col:43, line:10:2>         |-ReturnStmt 0x129141d18 <line:5:3, col:45>         | `-CallExpr 0x129141cd8 <col:10, col:45> 'int'         |   |-ImplicitCastExpr 0x129141cc0 <col:10> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x129141c80 <col:10> 'int ()' Function 0x129141bc8 'handle_fastpath_set_msr_irqoff' 'int ()'         |   `-ImplicitCastExpr 0x129141d00 <col:41> 'struct kvm_vcpu *' <LValueToRValue>         |     `-DeclRefExpr 0x129141ca0 <col:41> 'struct kvm_vcpu *' lvalue ParmVar 0x129128668 'vcpu' 'struct kvm_vcpu *'         |-ReturnStmt 0x129141eb8 <line:7:3, col:47>         | `-CallExpr 0x129141e78 <col:10, col:47> 'int'         |   |-ImplicitCastExpr 0x129141e60 <col:10> 'int (*)()' <FunctionToPointerDecay>         |   | `-DeclRefExpr 0x129141e20 <col:10> 'int ()' Function 0x129141d68 'handle_fastpath_preemption_timer' 'int ()'         |   `-ImplicitCastExpr 0x129141ea0 <col:43> 'struct kvm_vcpu *' <LValueToRValue>         |     `-DeclRefExpr 0x129141e40 <col:43> 'struct kvm_vcpu *' lvalue ParmVar 0x129128668 'vcpu' 'struct kvm_vcpu *'         `-DefaultStmt 0x129141f10 <line:8:2, line:9:10>           `-ReturnStmt 0x129141f00 <col:3, col:10>             `-RecoveryExpr 0x129141ee0 <col:10> '<dependent type>' contains-errors lvalue ","19311":"`-FunctionDecl 0x14c00de88  line:1:20 invalid update_write_color_quad 'int (int *, int)' static   |-ParmVarDecl 0x14c00dd28 <col:44, col:53> col:53 invalid s 'int *'   |-ParmVarDecl 0x14c00dda8 <col:56, col:63> col:63 invalid color 'int'   `-CompoundStmt 0x14c027518 <line:2:1, line:10:1>     |-CallExpr 0x14c00e208 <line:5:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c00e160 <col:2> 'int ()' Function 0x14c00e0a8 'Stream_Write_UINT8' 'int ()'     | |-RecoveryExpr 0x14c00e180 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c00e1e8 <col:24> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c00e3a0 <line:7:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c00e2f8 <col:2> 'int ()' Function 0x14c00e0a8 'Stream_Write_UINT8' 'int ()'     | |-RecoveryExpr 0x14c00e318 <col:21> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c00e380 <col:24> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14c0274e8 <line:9:2, col:28> '<dependent type>' contains-errors       |-DeclRefExpr 0x14c027440 <col:2> 'int ()' Function 0x14c00e0a8 'Stream_Write_UINT8' 'int ()'       |-RecoveryExpr 0x14c027460 <col:21> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x14c0274c8 <col:24> '<dependent type>' contains-errors lvalue ","20067":"`-FunctionDecl 0x13200de08  line:1:28 invalid ScaleQuantumToMap 'unsigned int (const int)' static inline   |-ParmVarDecl 0x13200dcf0 <col:46, col:60> col:60 referenced invalid quantum 'const int'   `-CompoundStmt 0x132028a78 <line:2:1, line:13:1>     |-IfStmt 0x13200df80 <line:3:3, line:4:15>     | |-BinaryOperator 0x13200def8 <line:3:7, col:17> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13200deb8 <col:7> '<dependent type>' contains-errors lvalue     | | `-FloatingLiteral 0x13200ded8 <col:17> 'double' 0.000000e+00     | `-ReturnStmt 0x13200df70 <line:4:5, col:15>     |   `-ImplicitCastExpr 0x13200df58 <col:11, col:15> 'unsigned int' <IntegralCast>     |     `-ParenExpr 0x13200df38 <col:11, col:15> 'unsigned long'     |       `-IntegerLiteral 0x13200df18 <col:12> 'unsigned long' 0     `-ReturnStmt 0x132028a68 <line:8:3, line:9:30>       `-ParenExpr 0x132028a48 <line:8:9, line:9:30> 'unsigned int' contains-errors         `-CStyleCastExpr 0x132028a20 <line:8:10, line:9:29> 'unsigned int' contains-errors <Dependent>           `-ParenExpr 0x132028a00 <line:8:25, line:9:29> '<dependent type>' contains-errors             `-BinaryOperator 0x13200e390 <line:8:26, line:9:28> '<dependent type>' contains-errors '\/'               |-ParenExpr 0x13200e2f0 <line:8:26, col:59> '<dependent type>' contains-errors               | `-BinaryOperator 0x13200e2d0 <col:27, col:58> '<dependent type>' contains-errors '+'               |   |-RecoveryExpr 0x13200e0a8 <col:27> '<dependent type>' contains-errors lvalue               |   `-CallExpr 0x13200e2a8 <col:35, col:58> 'int'               |     |-ImplicitCastExpr 0x13200e290 <col:35> 'int (*)()' <FunctionToPointerDecay>               |     | `-DeclRefExpr 0x13200e220 <col:35> 'int ()' Function 0x13200e168 'MagickULLConstant' 'int ()'               |     `-IntegerLiteral 0x13200e240 <col:53> 'int' 32768               `-CallExpr 0x13200e368 <line:9:5, col:28> 'int'                 |-ImplicitCastExpr 0x13200e350 <col:5> 'int (*)()' <FunctionToPointerDecay>                 | `-DeclRefExpr 0x13200e310 <col:5> 'int ()' Function 0x13200e168 'MagickULLConstant' 'int ()'                 `-IntegerLiteral 0x13200e330 <col:23> 'int' 65537 ","19432":"`-FunctionDecl 0x14280df68  line:1:1 invalid ATExecEnableDisableRule 'int (int, char *, char, int)'   |-ParmVarDecl 0x14280dcf0 <col:25, col:34> col:34 invalid rel 'int'   |-ParmVarDecl 0x14280dd70 <col:39, col:45> col:45 used trigname 'char *'   |-ParmVarDecl 0x14280dde8 <line:2:7, col:12> col:12 used fires_when 'char'   |-ParmVarDecl 0x14280de68 <col:24, col:33> col:33 invalid lockmode 'int'   `-CompoundStmt 0x14280e248 <line:3:1, line:5:1>     `-CallExpr 0x14280e210 <line:4:2, col:45> '<dependent type>' contains-errors       |-DeclRefExpr 0x14280e190 <col:2> 'int ()' Function 0x14280e0d8 'EnableDisableRule' 'int ()'       |-RecoveryExpr 0x14280e1b0 <col:20> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x14280e1d0 <col:25> 'char *' lvalue ParmVar 0x14280dd70 'trigname' 'char *'       `-DeclRefExpr 0x14280e1f0 <col:35> 'char' lvalue ParmVar 0x14280dde8 'fires_when' 'char' ","19762":"`-FunctionDecl 0x121140a78  line:1:12 match_entries 'int (struct entry *, struct entry *)' static   |-ParmVarDecl 0x121128648 <col:26, col:40> col:40 used entry1 'struct entry *'   |-ParmVarDecl 0x121128738 <col:48, col:62> col:62 used entry2 'struct entry *'   `-CompoundStmt 0x121140f68 <line:2:1, line:7:1>     `-ReturnStmt 0x121140f58 <line:3:2, line:6:35>       `-BinaryOperator 0x121140f38 <line:3:9, line:6:35> 'int' contains-errors '&&'         |-BinaryOperator 0x121140e38 <line:3:9, line:5:40> 'int' contains-errors '&&'         | |-BinaryOperator 0x121140d38 <line:3:9, line:4:40> 'int' contains-errors '&&'         | | |-BinaryOperator 0x121140c38 <line:3:9, col:40> 'int' contains-errors '=='         | | | |-RecoveryExpr 0x121140bb0 <col:9, col:17> '<dependent type>' contains-errors lvalue         | | | | `-DeclRefExpr 0x121140b78 <col:9> 'struct entry *' lvalue ParmVar 0x121128648 'entry1' 'struct entry *'         | | | `-RecoveryExpr 0x121140c10 <col:32, col:40> '<dependent type>' contains-errors lvalue         | | |   `-DeclRefExpr 0x121140bd8 <col:32> 'struct entry *' lvalue ParmVar 0x121128738 'entry2' 'struct entry *'         | | `-BinaryOperator 0x121140d18 <line:4:9, col:40> 'int' contains-errors '=='         | |   |-RecoveryExpr 0x121140c90 <col:9, col:17> '<dependent type>' contains-errors lvalue         | |   | `-DeclRefExpr 0x121140c58 <col:9> 'struct entry *' lvalue ParmVar 0x121128648 'entry1' 'struct entry *'         | |   `-RecoveryExpr 0x121140cf0 <col:32, col:40> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x121140cb8 <col:32> 'struct entry *' lvalue ParmVar 0x121128738 'entry2' 'struct entry *'         | `-BinaryOperator 0x121140e18 <line:5:9, col:40> 'int' contains-errors '=='         |   |-RecoveryExpr 0x121140d90 <col:9, col:17> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x121140d58 <col:9> 'struct entry *' lvalue ParmVar 0x121128648 'entry1' 'struct entry *'         |   `-RecoveryExpr 0x121140df0 <col:32, col:40> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x121140db8 <col:32> 'struct entry *' lvalue ParmVar 0x121128738 'entry2' 'struct entry *'         `-BinaryOperator 0x121140f18 <line:6:9, col:35> 'int' contains-errors '=='           |-RecoveryExpr 0x121140e90 <col:9, col:17> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x121140e58 <col:9> 'struct entry *' lvalue ParmVar 0x121128648 'entry1' 'struct entry *'           `-RecoveryExpr 0x121140ef0 <col:27, col:35> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x121140eb8 <col:27> 'struct entry *' lvalue ParmVar 0x121128738 'entry2' 'struct entry *' ","19395":"`-FunctionDecl 0x1369281f8  line:1:1 invalid e1000e_intrmgr_rearm_timer 'int (int *)'   |-ParmVarDecl 0x136928128 <col:28, col:49> col:49 referenced invalid timer 'int *'   `-CompoundStmt 0x136941a50 <line:2:1, line:11:1>     |-CallExpr 0x136928530 <line:6:5, col:65> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136928400 <col:5> 'int ()' Function 0x136928348 'trace_e1000e_irq_rearm_timer' 'int ()'     | |-BinaryOperator 0x1369284a8 <col:34, col:54> '<dependent type>' contains-errors '<<'     | | |-CXXDependentScopeMemberExpr 0x136928440 <col:34, col:41> '<dependent type>' contains-errors lvalue ->delay_reg     | | | `-RecoveryExpr 0x136928420 <col:34> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x136928488 <col:54> 'int' 2     | `-RecoveryExpr 0x136928510 <col:57> '<dependent type>' contains-errors lvalue     |-CallExpr 0x136941918 <line:8:5, col:77> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136928640 <col:5> 'int ()' Function 0x136928588 'timer_mod' 'int ()'     | |-CXXDependentScopeMemberExpr 0x136928680 <col:15, col:22> '<dependent type>' contains-errors lvalue ->timer     | | `-RecoveryExpr 0x136928660 <col:15> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1369418f8 <col:29, col:69> '<dependent type>' contains-errors '+'     |   |-CallExpr 0x1369418b0 <col:29, col:65> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1369287a8 <col:29> 'int ()' Function 0x1369286f0 'qemu_clock_get_ns' 'int ()'     |   | `-RecoveryExpr 0x136941890 <col:47> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1369418d8 <col:69> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x136941a30 <line:10:5, col:22> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x136941990 <col:5, col:12> '<dependent type>' contains-errors lvalue ->running       | `-RecoveryExpr 0x136941968 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x136941948 <col:5> 'int *' lvalue ParmVar 0x136928128 'timer' 'int *'       `-RecoveryExpr 0x136941a10 <col:22> '<dependent type>' contains-errors lvalue ","19397":"`-FunctionDecl 0x11f828730  col:10 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x11f828830 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x11f828898 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x11f8287d8 <<invalid sloc>> Implicit 887 ","19462":"`-FunctionDecl 0x132940e28  col:2 implicit used strlcpy 'unsigned long (char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x132940f28 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x132940f90 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x132940ff8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x132940ed0 <<invalid sloc>> Implicit 969 ","19303":"`-FunctionDecl 0x144941348  line:1:5 nfsd_setuser 'int (struct svc_rqst *, struct svc_export *)'   |-ParmVarDecl 0x144928e48 <col:18, col:35> col:35 used rqstp 'struct svc_rqst *'   |-ParmVarDecl 0x144941228 <col:42, col:61> col:61 used exp 'struct svc_export *'   `-CompoundStmt 0x14600a4e8 <line:2:1, line:73:1>     |-DeclStmt 0x144941638 <line:3:2, col:25>     | |-RecordDecl 0x144941448 <col:2, col:9> col:9 struct group_info     | `-VarDecl 0x1449415b8 <col:2, col:21> col:21 used rqgi 'struct group_info *'     |-DeclStmt 0x144941740 <line:4:2, col:23>     | `-VarDecl 0x1449416d8 <col:2, col:21> col:21 used gi 'struct group_info *'     |-DeclStmt 0x144941948 <line:5:2, col:18>     | |-RecordDecl 0x144941758 <col:2, col:9> col:9 struct cred     | `-VarDecl 0x1449418c8 <col:2, col:15> col:15 used new 'struct cred *'     |-DeclStmt 0x1449419e0 <line:6:2, col:7>     | `-VarDecl 0x144941978 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x144941ca8 <line:7:2, col:38>     | `-VarDecl 0x144941a10 <col:2, col:37> col:6 used flags 'int' cinit     |   `-CallExpr 0x144941c48 <col:14, col:37> 'int'     |     |-ImplicitCastExpr 0x144941c30 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x144941ba0 <col:14> 'int ()' Function 0x144941ae8 'nfsexp_flags' 'int ()'     |     |-ImplicitCastExpr 0x144941c78 <col:27> 'struct svc_rqst *' <LValueToRValue>     |     | `-DeclRefExpr 0x144941bc0 <col:27> 'struct svc_rqst *' lvalue ParmVar 0x144928e48 'rqstp' 'struct svc_rqst *'     |     `-ImplicitCastExpr 0x144941c90 <col:34> 'struct svc_export *' <LValueToRValue>     |       `-DeclRefExpr 0x144941be0 <col:34> 'struct svc_export *' lvalue ParmVar 0x144941228 'exp' 'struct svc_export *'     |-CallExpr 0x144941dd8 <line:9:2, col:25> 'int'     | `-ImplicitCastExpr 0x144941dc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x144941da0 <col:2> 'int ()' Function 0x144941ce8 'validate_process_creds' 'int ()'     |-CallExpr 0x144942188 <line:12:2, col:44> 'int'     | |-ImplicitCastExpr 0x144942170 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144941ed8 <col:2> 'int ()' Function 0x144941e20 'revert_creds' 'int ()'     | `-CallExpr 0x144942148 <col:15, col:43> 'int'     |   |-ImplicitCastExpr 0x144942130 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x144941fd8 <col:15> 'int ()' Function 0x144941f20 'get_cred' 'int ()'     |   `-CallExpr 0x144942110 <col:24, col:42> 'int'     |     `-ImplicitCastExpr 0x1449420f8 <col:24> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x1449420d8 <col:24> 'int ()' Function 0x144942020 'current_real_cred' 'int ()'     |-BinaryOperator 0x144943128 <line:13:2, col:22> 'struct cred *' '='     | |-DeclRefExpr 0x1449421b0 <col:2> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | `-ImplicitCastExpr 0x144943110 <col:8, col:22> 'struct cred *' <IntegralToPointer>     |   `-CallExpr 0x1449430f0 <col:8, col:22> 'int'     |     `-ImplicitCastExpr 0x1449430d8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x1449430b8 <col:8> 'int ()' Function 0x144943000 'prepare_creds' 'int ()'     |-IfStmt 0x144943240 <line:14:2, line:15:11>     | |-UnaryOperator 0x144943180 <line:14:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x144943168 <col:7> 'struct cred *' <LValueToRValue>     | |   `-DeclRefExpr 0x144943148 <col:7> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | `-ReturnStmt 0x144943230 <line:15:3, col:11>     |   `-UnaryOperator 0x144943218 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x144943200 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1449431e0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144943368 <line:17:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x144943298 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x144943260 <col:2> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | `-CXXDependentScopeMemberExpr 0x144943320 <col:15, col:30> '<dependent type>' contains-errors lvalue .cr_uid     |   `-RecoveryExpr 0x1449432f8 <col:15, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1449432c0 <col:15> 'struct svc_rqst *' lvalue ParmVar 0x144928e48 'rqstp' 'struct svc_rqst *'     |-BinaryOperator 0x144943490 <line:18:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1449433c0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x144943388 <col:2> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | `-CXXDependentScopeMemberExpr 0x144943448 <col:15, col:30> '<dependent type>' contains-errors lvalue .cr_gid     |   `-RecoveryExpr 0x144943420 <col:15, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1449433e8 <col:15> 'struct svc_rqst *' lvalue ParmVar 0x144928e48 'rqstp' 'struct svc_rqst *'     |-BinaryOperator 0x144943578 <line:20:2, col:24> 'struct group_info *' contains-errors '='     | |-DeclRefExpr 0x1449434b0 <col:2> 'struct group_info *' lvalue Var 0x1449415b8 'rqgi' 'struct group_info *'     | `-CXXDependentScopeMemberExpr 0x144943530 <col:9, col:24> '<dependent type>' contains-errors lvalue .cr_group_info     |   `-RecoveryExpr 0x144943508 <col:9, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1449434d0 <col:9> 'struct svc_rqst *' lvalue ParmVar 0x144928e48 'rqstp' 'struct svc_rqst *'     |-IfStmt 0x146009318 <line:22:2, line:49:2> has_else     | |-BinaryOperator 0x144943610 <line:22:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x144943598 <col:6> 'int' lvalue Var 0x144941a10 'flags' 'int'     | | `-RecoveryExpr 0x1449435f0 <col:14> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x144943a80 <col:32, line:28:2>     | | |-BinaryOperator 0x1449436f0 <line:23:3, col:21> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x144943668 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x144943630 <col:3> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | | | `-RecoveryExpr 0x1449436c8 <col:16, col:21> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x144943690 <col:16> 'struct svc_export *' lvalue ParmVar 0x144941228 'exp' 'struct svc_export *'     | | |-BinaryOperator 0x1449437d0 <line:24:3, col:21> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x144943748 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x144943710 <col:3> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | | | `-RecoveryExpr 0x1449437a8 <col:16, col:21> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x144943770 <col:16> 'struct svc_export *' lvalue ParmVar 0x144941228 'exp' 'struct svc_export *'     | | |-BinaryOperator 0x144943988 <line:25:3, col:22> 'struct group_info *' '='     | | | |-DeclRefExpr 0x1449437f0 <col:3> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     | | | `-ImplicitCastExpr 0x144943970 <col:8, col:22> 'struct group_info *' <IntegralToPointer>     | | |   `-CallExpr 0x144943948 <col:8, col:22> 'int'     | | |     |-ImplicitCastExpr 0x144943930 <col:8> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x1449438f0 <col:8> 'int ()' Function 0x144943838 'groups_alloc' 'int ()'     | | |     `-IntegerLiteral 0x144943910 <col:21> 'int' 0     | | `-IfStmt 0x144943a60 <line:26:3, line:27:9>     | |   |-UnaryOperator 0x1449439e0 <line:26:7, col:8> 'int' prefix '!' cannot overflow     | |   | `-ImplicitCastExpr 0x1449439c8 <col:8> 'struct group_info *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x1449439a8 <col:8> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     | |   `-GotoStmt 0x144943a48 <line:27:4, col:9> 'oom' 0x1449439f8     | `-IfStmt 0x1460092e8 <line:28:9, line:49:2> has_else     |   |-RecoveryExpr 0x144943ad0 <line:28:13, col:21> '_Bool' contains-errors     |   |-CompoundStmt 0x1460090c8 <col:40, line:47:2>     |   | |-IfStmt 0x144943d50 <line:29:3, line:30:22>     |   | | |-RecoveryExpr 0x144943c50 <line:29:7, col:41> '_Bool' contains-errors     |   | | `-BinaryOperator 0x144943d30 <line:30:4, col:22> '<dependent type>' contains-errors '='     |   | |   |-RecoveryExpr 0x144943ca8 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x144943c70 <col:4> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |   | |   `-RecoveryExpr 0x144943d08 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x144943cd0 <col:17> 'struct svc_export *' lvalue ParmVar 0x144941228 'exp' 'struct svc_export *'     |   | |-IfStmt 0x144943fd0 <line:31:3, line:32:22>     |   | | |-RecoveryExpr 0x144943ed0 <line:31:7, col:41> '_Bool' contains-errors     |   | | `-BinaryOperator 0x144943fb0 <line:32:4, col:22> '<dependent type>' contains-errors '='     |   | |   |-RecoveryExpr 0x144943f28 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x144943ef0 <col:4> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |   | |   `-RecoveryExpr 0x144943f88 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x144943f50 <col:17> 'struct svc_export *' lvalue ParmVar 0x144941228 'exp' 'struct svc_export *'     |   | |-BinaryOperator 0x1460088c8 <line:34:3, col:34> 'struct group_info *' contains-errors '='     |   | | |-DeclRefExpr 0x146008800 <col:3> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     |   | | `-CallExpr 0x1460088a0 <col:8, col:34> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x146008820 <col:8> 'int ()' Function 0x144943838 'groups_alloc' 'int ()'     |   | |   `-RecoveryExpr 0x146008878 <col:21, col:27> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x146008840 <col:21> 'struct group_info *' lvalue Var 0x1449415b8 'rqgi' 'struct group_info *'     |   | |-IfStmt 0x146008950 <line:35:3, line:36:9>     |   | | |-UnaryOperator 0x146008920 <line:35:7, col:8> 'int' prefix '!' cannot overflow     |   | | | `-ImplicitCastExpr 0x146008908 <col:8> 'struct group_info *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x1460088e8 <col:8> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     |   | | `-GotoStmt 0x146008938 <line:36:4, col:9> 'oom' 0x1449439f8     |   | `-ForStmt 0x146009090 <line:38:3, line:46:3>     |   |   |-BinaryOperator 0x1460089b0 <line:38:8, col:12> 'int' '='     |   |   | |-DeclRefExpr 0x146008970 <col:8> 'int' lvalue Var 0x144941978 'i' 'int'     |   |   | `-IntegerLiteral 0x146008990 <col:12> 'int' 0     |   |   |-<<<NULL>>>     |   |   |-BinaryOperator 0x146008a50 <col:15, col:25> 'int' contains-errors '<'     |   |   | |-DeclRefExpr 0x1460089d0 <col:15> 'int' lvalue Var 0x144941978 'i' 'int'     |   |   | `-RecoveryExpr 0x146008a28 <col:19, col:25> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x1460089f0 <col:19> 'struct group_info *' lvalue Var 0x1449415b8 'rqgi' 'struct group_info *'     |   |   |-UnaryOperator 0x146008a90 <col:34, col:35> 'int' postfix '++'     |   |   | `-DeclRefExpr 0x146008a70 <col:34> 'int' lvalue Var 0x144941978 'i' 'int'     |   |   `-CompoundStmt 0x146009070 <col:39, line:46:3>     |   |     |-IfStmt 0x146008ec8 <line:39:4, line:42:29> has_else     |   |     | |-RecoveryExpr 0x146008b98 <line:39:8, col:44> '_Bool' contains-errors     |   |     | |-BinaryOperator 0x146008ce8 <line:40:5, col:23> '<dependent type>' contains-errors '='     |   |     | | |-ArraySubscriptExpr 0x146008c68 <col:5, col:14> '<dependent type>' contains-errors lvalue     |   |     | | | |-ImplicitCastExpr 0x146008c38 <col:5, col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     | | | | `-RecoveryExpr 0x146008bf0 <col:5, col:9> '<dependent type>' contains-errors lvalue     |   |     | | | |   `-DeclRefExpr 0x146008bb8 <col:5> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     |   |     | | | `-ImplicitCastExpr 0x146008c50 <col:13> 'int' <LValueToRValue>     |   |     | | |   `-DeclRefExpr 0x146008c18 <col:13> 'int' lvalue Var 0x144941978 'i' 'int'     |   |     | | `-RecoveryExpr 0x146008cc0 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   |     | |   `-DeclRefExpr 0x146008c88 <col:18> 'struct svc_export *' lvalue ParmVar 0x144941228 'exp' 'struct svc_export *'     |   |     | `-BinaryOperator 0x146008ea8 <line:42:5, col:29> '<dependent type>' contains-errors '='     |   |     |   |-ArraySubscriptExpr 0x146008db8 <col:5, col:14> '<dependent type>' contains-errors lvalue     |   |     |   | |-ImplicitCastExpr 0x146008d88 <col:5, col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     |   | | `-RecoveryExpr 0x146008d40 <col:5, col:9> '<dependent type>' contains-errors lvalue     |   |     |   | |   `-DeclRefExpr 0x146008d08 <col:5> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     |   |     |   | `-ImplicitCastExpr 0x146008da0 <col:13> 'int' <LValueToRValue>     |   |     |   |   `-DeclRefExpr 0x146008d68 <col:13> 'int' lvalue Var 0x144941978 'i' 'int'     |   |     |   `-ArraySubscriptExpr 0x146008e88 <col:18, col:29> '<dependent type>' contains-errors lvalue     |   |     |     |-ImplicitCastExpr 0x146008e58 <col:18, col:24> '<dependent type>' contains-errors <LValueToRValue>     |   |     |     | `-RecoveryExpr 0x146008e10 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |     |     |   `-DeclRefExpr 0x146008dd8 <col:18> 'struct group_info *' lvalue Var 0x1449415b8 'rqgi' 'struct group_info *'     |   |     |     `-ImplicitCastExpr 0x146008e70 <col:28> 'int' <LValueToRValue>     |   |     |       `-DeclRefExpr 0x146008e38 <col:28> 'int' lvalue Var 0x144941978 'i' 'int'     |   |     `-CallExpr 0x146009030 <line:45:4, col:18> 'int'     |   |       |-ImplicitCastExpr 0x146009018 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x146008fd8 <col:4> 'int ()' Function 0x146008f20 'groups_sort' 'int ()'     |   |       `-ImplicitCastExpr 0x146009058 <col:16> 'struct group_info *' <LValueToRValue>     |   |         `-DeclRefExpr 0x146008ff8 <col:16> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     |   `-CompoundStmt 0x1460092d0 <line:47:9, line:49:2>     |     `-BinaryOperator 0x1460092b0 <line:48:3, col:27> 'struct group_info *' '='     |       |-DeclRefExpr 0x146009100 <col:3> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     |       `-ImplicitCastExpr 0x146009298 <col:8, col:27> 'struct group_info *' <IntegralToPointer>     |         `-CallExpr 0x146009258 <col:8, col:27> 'int'     |           |-ImplicitCastExpr 0x146009240 <col:8> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x146009200 <col:8> 'int ()' Function 0x146009148 'get_group_info' 'int ()'     |           `-ImplicitCastExpr 0x146009280 <col:23> 'struct group_info *' <LValueToRValue>     |             `-DeclRefExpr 0x146009220 <col:23> 'struct group_info *' lvalue Var 0x1449415b8 'rqgi' 'struct group_info *'     |-IfStmt 0x1460094c8 <line:51:2, line:52:21>     | |-RecoveryExpr 0x1460093c8 <line:51:6, col:36> '_Bool' contains-errors     | `-BinaryOperator 0x1460094a8 <line:52:3, col:21> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x146009420 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1460093e8 <col:3> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |   `-RecoveryExpr 0x146009480 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x146009448 <col:16> 'struct svc_export *' lvalue ParmVar 0x144941228 'exp' 'struct svc_export *'     |-IfStmt 0x146009668 <line:53:2, line:54:21>     | |-RecoveryExpr 0x146009568 <line:53:6, col:36> '_Bool' contains-errors     | `-BinaryOperator 0x146009648 <line:54:3, col:21> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x1460095c0 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x146009588 <col:3> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |   `-RecoveryExpr 0x146009620 <col:16, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1460095e8 <col:16> 'struct svc_export *' lvalue ParmVar 0x144941228 'exp' 'struct svc_export *'     |-CallExpr 0x146009800 <line:56:2, col:20> 'int'     | |-ImplicitCastExpr 0x1460097c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x146009768 <col:2> 'int ()' Function 0x1460096b0 'set_groups' 'int ()'     | |-ImplicitCastExpr 0x146009830 <col:13> 'struct cred *' <LValueToRValue>     | | `-DeclRefExpr 0x146009788 <col:13> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | `-ImplicitCastExpr 0x146009848 <col:18> 'struct group_info *' <LValueToRValue>     |   `-DeclRefExpr 0x1460097a8 <col:18> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     |-CallExpr 0x146009998 <line:57:2, col:19> 'int'     | |-ImplicitCastExpr 0x146009980 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x146009940 <col:2> 'int ()' Function 0x146009888 'put_group_info' 'int ()'     | `-ImplicitCastExpr 0x1460099c0 <col:17> 'struct group_info *' <LValueToRValue>     |   `-DeclRefExpr 0x146009960 <col:17> 'struct group_info *' lvalue Var 0x1449416d8 'gi' 'struct group_info *'     |-IfStmt 0x146009ef0 <line:59:2, line:63:26> has_else     | |-RecoveryExpr 0x146009a58 <line:59:6, col:41> '_Bool' contains-errors     | |-BinaryOperator 0x146009c60 <line:60:3, col:60> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x146009ab0 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x146009a78 <col:3> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | | `-CallExpr 0x146009c38 <col:24, col:60> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x146009bb8 <col:24> 'int ()' Function 0x146009b00 'cap_drop_nfsd_set' 'int ()'     | |   `-RecoveryExpr 0x146009c10 <col:42, col:47> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x146009bd8 <col:42> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     | `-BinaryOperator 0x146009ed0 <line:62:3, line:63:26> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x146009cb8 <line:62:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x146009c80 <col:3> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |   `-CallExpr 0x146009ea0 <col:24, line:63:26> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x146009dc0 <line:62:24> 'int ()' Function 0x146009d08 'cap_raise_nfsd_set' 'int ()'     |     |-RecoveryExpr 0x146009e18 <col:43, col:48> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x146009de0 <col:43> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |     `-RecoveryExpr 0x146009e78 <line:63:8, col:13> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x146009e40 <col:8> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |-CallExpr 0x146009f58 <line:64:2, col:25> 'int'     | `-ImplicitCastExpr 0x146009f40 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x146009f20 <col:2> 'int ()' Function 0x144941ce8 'validate_process_creds' 'int ()'     |-CallExpr 0x14600a208 <line:65:2, col:30> 'int'     | |-ImplicitCastExpr 0x14600a1f0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14600a058 <col:2> 'int ()' Function 0x146009fa0 'put_cred' 'int ()'     | `-CallExpr 0x14600a1b0 <col:11, col:29> 'int'     |   |-ImplicitCastExpr 0x14600a198 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14600a158 <col:11> 'int ()' Function 0x14600a0a0 'override_creds' 'int ()'     |   `-ImplicitCastExpr 0x14600a1d8 <col:26> 'struct cred *' <LValueToRValue>     |     `-DeclRefExpr 0x14600a178 <col:26> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |-CallExpr 0x14600a288 <line:66:2, col:14> 'int'     | |-ImplicitCastExpr 0x14600a270 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14600a230 <col:2> 'int ()' Function 0x146009fa0 'put_cred' 'int ()'     | `-ImplicitCastExpr 0x14600a2b0 <col:11> 'struct cred *' <LValueToRValue>     |   `-DeclRefExpr 0x14600a250 <col:11> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *'     |-CallExpr 0x14600a300 <line:67:2, col:25> 'int'     | `-ImplicitCastExpr 0x14600a2e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14600a2c8 <col:2> 'int ()' Function 0x144941ce8 'validate_process_creds' 'int ()'     |-ReturnStmt 0x14600a340 <line:68:2, col:9>     | `-IntegerLiteral 0x14600a320 <col:9> 'int' 0     `-LabelStmt 0x14600a4c8 <line:70:1, line:71:17> 'oom'       `-CallExpr 0x14600a488 <col:2, col:17> 'int'         |-ImplicitCastExpr 0x14600a470 <col:2> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14600a430 <col:2> 'int ()' Function 0x14600a378 'abort_creds' 'int ()'         `-ImplicitCastExpr 0x14600a4b0 <col:14> 'struct cred *' <LValueToRValue>           `-DeclRefExpr 0x14600a450 <col:14> 'struct cred *' lvalue Var 0x1449418c8 'new' 'struct cred *' ","19891":"`-FunctionDecl 0x14b00e158  line:1:17 invalid opj_j2k_write_sod 'int (int *, int *, int *, int *, int, const int *, int *)' static   |-ParmVarDecl 0x14b00dd28 <col:35, col:46> col:46 invalid p_j2k 'int *'   |-ParmVarDecl 0x14b00dda8 <line:2:35, col:47> col:47 referenced invalid p_tile_coder 'int *'   |-ParmVarDecl 0x14b00de28 <line:3:35, col:46> col:46 referenced invalid p_data 'int *'   |-ParmVarDecl 0x14b00dea8 <line:4:35, col:48> col:48 invalid p_data_written 'int *'   |-ParmVarDecl 0x14b00df28 <line:5:35, col:46> col:46 invalid total_data_size 'int'   |-ParmVarDecl 0x14b00dfa8 <line:6:35, col:63> col:63 invalid p_stream 'const int *'   |-ParmVarDecl 0x14b00e028 <line:7:35, col:53> col:53 invalid p_manager 'int *'   `-CompoundStmt 0x14a924510 <line:9:1, line:75:1>     |-CallExpr 0x14a922e60 <line:14:5, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b00e3d0 <col:5> 'int ()' Function 0x14b00e318 'assert' 'int ()'     | `-BinaryOperator 0x14a922e40 <col:12, col:21> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14a922e00 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14a922e20 <col:21> 'int' 0     |-CallExpr 0x14a922f08 <line:15:5, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a922e88 <col:5> 'int ()' Function 0x14b00e318 'assert' 'int ()'     | `-BinaryOperator 0x14a922ee8 <col:12, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14a922ea8 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14a922ec8 <col:25> 'int' 0     |-CallExpr 0x14a922fb0 <line:16:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a922f30 <col:5> 'int ()' Function 0x14b00e318 'assert' 'int ()'     | `-BinaryOperator 0x14a922f90 <col:12, col:24> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14a922f50 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14a922f70 <col:24> 'int' 0     |-CallExpr 0x14a9230f8 <line:18:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a9230b8 <col:5> 'int ()' Function 0x14a923000 'OPJ_UNUSED' 'int ()'     | `-RecoveryExpr 0x14a9230d8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a923418 <line:20:5, line:24:5>     | |-BinaryOperator 0x14a923160 <line:20:9, col:27> 'int' contains-errors '<'     | | |-RecoveryExpr 0x14a923120 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14a923140 <col:27> 'int' 4     | `-CompoundStmt 0x14a9233f8 <col:30, line:24:5>     |   |-CallExpr 0x14a923378 <line:21:9, line:22:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a923260 <line:21:9> 'int ()' Function 0x14a9231a8 'opj_event_msg' 'int ()'     |   | |-RecoveryExpr 0x14a923280 <col:23> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14a923358 <col:34> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x14a923300 <line:22:23> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14a9233e8 <line:23:9, col:16>     |     `-RecoveryExpr 0x14a9233c8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a9235e8 <line:26:5, line:27:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a923518 <line:26:5> 'int ()' Function 0x14a923460 'opj_write_bytes' 'int ()'     | |-RecoveryExpr 0x14a923538 <col:21> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14a9235c8 <col:29> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14a923570 <line:27:21> 'int' 2     |-CompoundAssignOperator 0x14a923688 <line:28:5, col:15> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x14a923640 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a923620 <col:5> 'int *' lvalue ParmVar 0x14b00de28 'p_data' 'int *'     | `-IntegerLiteral 0x14a923668 <col:15> 'int' 2     |-BinaryOperator 0x14a9238a0 <line:34:5, line:35:43> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14a923760 <line:34:5, col:19> '<dependent type>' contains-errors lvalue ->tp_num     | | `-RecoveryExpr 0x14a923738 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a923718 <col:5> 'int *' lvalue ParmVar 0x14b00dda8 'p_tile_coder' 'int *'     | `-CXXDependentScopeMemberExpr 0x14a923858 <line:35:9, col:43> '<dependent type>' contains-errors lvalue .m_current_poc_tile_part_number     |   `-CXXDependentScopeMemberExpr 0x14a923810 <col:9, col:33> '<dependent type>' contains-errors lvalue .m_encoder     |     `-CXXDependentScopeMemberExpr 0x14a9237c8 <col:9, col:16> '<dependent type>' contains-errors lvalue ->m_specific_param     |       `-RecoveryExpr 0x14a9237a8 <col:9> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a923a48 <line:36:5, line:37:43> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x14a923908 <line:36:5, col:19> '<dependent type>' contains-errors lvalue ->cur_tp_num     | | `-RecoveryExpr 0x14a9238e0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a9238c0 <col:5> 'int *' lvalue ParmVar 0x14b00dda8 'p_tile_coder' 'int *'     | `-CXXDependentScopeMemberExpr 0x14a923a00 <line:37:9, col:43> '<dependent type>' contains-errors lvalue .m_current_tile_part_number     |   `-CXXDependentScopeMemberExpr 0x14a9239b8 <col:9, col:33> '<dependent type>' contains-errors lvalue .m_encoder     |     `-CXXDependentScopeMemberExpr 0x14a923970 <col:9, col:16> '<dependent type>' contains-errors lvalue ->m_specific_param     |       `-RecoveryExpr 0x14a923950 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a923d18 <line:54:5, line:61:5>     | |-BinaryOperator 0x14a923b80 <line:54:9, col:73> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14a923b18 <col:9, col:43> '<dependent type>' contains-errors lvalue .m_current_tile_part_number     | | | `-CXXDependentScopeMemberExpr 0x14a923ad0 <col:9, col:33> '<dependent type>' contains-errors lvalue .m_encoder     | | |   `-CXXDependentScopeMemberExpr 0x14a923a88 <col:9, col:16> '<dependent type>' contains-errors lvalue ->m_specific_param     | | |     `-RecoveryExpr 0x14a923a68 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14a923b60 <col:73> 'int' 0     | `-CompoundStmt 0x14a923d00 <col:76, line:61:5>     |   `-BinaryOperator 0x14a923ce0 <line:55:9, col:50> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14a923c78 <col:9, col:41> '<dependent type>' contains-errors lvalue ->packno     |     | `-CXXDependentScopeMemberExpr 0x14a923c30 <col:9, col:34> '<dependent type>' contains-errors lvalue ->tiles     |     |   `-CXXDependentScopeMemberExpr 0x14a923be8 <col:9, col:23> '<dependent type>' contains-errors lvalue ->tcd_image     |     |     `-RecoveryExpr 0x14a923bc0 <col:9> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x14a923ba0 <col:9> 'int *' lvalue ParmVar 0x14b00dda8 'p_tile_coder' 'int *'     |     `-IntegerLiteral 0x14a923cc0 <col:50> 'int' 0     |-BinaryOperator 0x14a923da8 <line:63:5, col:23> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x14a923d70 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14a923d58 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14a923d38 <col:6> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14a923d88 <col:23> 'int' 0     |-IfStmt 0x14a924450 <line:65:5, line:70:5>     | |-RecoveryExpr 0x14a9243c0 <line:65:9, line:67:40> '_Bool' contains-errors     | `-CompoundStmt 0x14a924440 <col:43, line:70:5>     `-CompoundAssignOperator 0x14a9244e0 <line:72:5, col:24> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |-UnaryOperator 0x14a9244a8 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x14a924490 <col:6> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x14a924470 <col:6> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x14a9244c0 <col:24> 'int' 2 ","19865":"`-FunctionDecl 0x13000e350  line:1:13 kvm_make_mclock_inprogress_request 'void (struct kvm *)' static   |-ParmVarDecl 0x13000e248 <col:48, col:60> col:60 used kvm 'struct kvm *'   `-CompoundStmt 0x13002aa48 <line:2:1, line:4:1>     `-CallExpr 0x13002aa18 <line:3:2, col:58> '<dependent type>' contains-errors       |-DeclRefExpr 0x13002a970 <col:2> 'int ()' Function 0x13002a8b8 'kvm_make_all_cpus_request' 'int ()'       |-DeclRefExpr 0x13002a990 <col:28> 'struct kvm *' lvalue ParmVar 0x13000e248 'kvm' 'struct kvm *'       `-RecoveryExpr 0x13002a9f8 <col:33> '<dependent type>' contains-errors lvalue ","20061":"`-FunctionDecl 0x13b0105f8  line:1:1 invalid listener_check_activation 'int (int *)'   |-ParmVarDecl 0x13b010528 <col:28, col:40> col:40 invalid listener 'int *'   `-CompoundStmt 0x139920470 <line:2:1, line:26:1>     |-CallExpr 0x13b0108c8 <line:6:9, col:24> 'int'     | |-ImplicitCastExpr 0x13b0108b0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13b010800 <col:9> 'int ()' Function 0x13b010748 'gs_debug' 'int ()'     | `-ImplicitCastExpr 0x13b0108f0 <col:19> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13b010860 <col:19> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13b010a48 <line:8:9, line:10:9>     | |-UnaryOperator 0x13b0109d0 <line:8:13, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13b0109b8 <col:15, col:31> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13b010970 <col:15, col:31> '<dependent type>' contains-errors lvalue ->activation_enabled     | |     `-CXXDependentScopeMemberExpr 0x13b010928 <col:15, col:25> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x13b010908 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b010a30 <col:51, line:10:9>     |   `-ReturnStmt 0x13b010a20 <line:9:17, col:24>     |     `-RecoveryExpr 0x13b010a00 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13b010ba8 <line:12:9, line:14:9>     | |-UnaryOperator 0x13b010b30 <line:12:13, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13b010b18 <col:15, col:31> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13b010ad0 <col:15, col:31> '<dependent type>' contains-errors lvalue ->session_idle     | |     `-CXXDependentScopeMemberExpr 0x13b010a88 <col:15, col:25> '<dependent type>' contains-errors lvalue ->priv     | |       `-RecoveryExpr 0x13b010a68 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b010b90 <col:45, line:14:9>     |   `-ReturnStmt 0x13b010b80 <line:13:17, col:24>     |     `-RecoveryExpr 0x13b010b60 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139920408 <line:20:9, line:23:9>     | |-UnaryOperator 0x1399201d8 <line:20:13, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1399201c0 <col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1399201a0 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1399203f0 <col:26, line:23:9>     |   `-CallExpr 0x139920248 <line:21:17, col:32> 'int'     |     |-ImplicitCastExpr 0x139920230 <col:17> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1399201f0 <col:17> 'int ()' Function 0x13b010748 'gs_debug' 'int ()'     |     `-ImplicitCastExpr 0x139920270 <col:27> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x139920210 <col:27> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x139920460 <line:25:9, col:16>       `-RecoveryExpr 0x139920440 <col:16> '<dependent type>' contains-errors lvalue ","20132":"`-FunctionDecl 0x13480b228  col:2 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x13480b328 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x13480b2d0 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x13480b398 <col:2> Implicit ","20096":"`-FunctionDecl 0x12600de88  line:1:16 invalid conditional 'int *(int *, int)' static   |-ParmVarDecl 0x12600dd28 <col:28, col:38> col:38 invalid J 'int *'   |-ParmVarDecl 0x12600dda8 <col:41, col:45> col:45 used notin 'int'   `-CompoundStmt 0x125922c38 <line:2:1, line:12:1>     |-IfStmt 0x125922bd0 <line:5:2, line:10:2>     | |-CallExpr 0x12600e308 <line:5:6, col:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12600e2b0 <col:6> 'int ()' Function 0x12600e1f8 'jsP_accept' 'int ()'     | | |-RecoveryExpr 0x12600e2d0 <col:17> '<dependent type>' contains-errors lvalue     | | `-CharacterLiteral 0x12600e2f0 <col:20> 'int' 63     | `-CompoundStmt 0x125922bb0 <col:26, line:10:2>     |   |-CallExpr 0x125922880 <line:7:3, col:20> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x125922828 <col:3> 'int ()' Function 0x125922770 'jsP_expect' 'int ()'     |   | |-RecoveryExpr 0x125922848 <col:14> '<dependent type>' contains-errors lvalue     |   | `-CharacterLiteral 0x125922868 <col:17> 'int' 58     |   `-ReturnStmt 0x125922ba0 <line:9:3, col:28>     |     `-CallExpr 0x125922b60 <col:10, col:28> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x125922a20 <col:10> 'int ()' Function 0x125922968 'EXP3' 'int ()'     |       |-RecoveryExpr 0x125922ae0 <col:15> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x125922b00 <col:21> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x125922b20 <col:24> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x125922b40 <col:27> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x125922c28 <line:11:2, col:9>       `-RecoveryExpr 0x125922c08 <col:9> '<dependent type>' contains-errors lvalue ","19817":"`-FunctionDecl 0x12604bc28  line:1:17 invalid opj_j2k_get_end_header 'int (int *, struct opj_stream_private *, struct opj_event_mgr *)' static   |-ParmVarDecl 0x12601e928 <col:40, col:51> col:51 referenced invalid p_j2k 'int *'   |-ParmVarDecl 0x12601ef18 <line:2:57, col:84> col:84 used p_stream 'struct opj_stream_private *'   |-ParmVarDecl 0x12604bae8 <line:3:57, col:80> col:80 used p_manager 'struct opj_event_mgr *'   `-CompoundStmt 0x12604c3b8 <line:4:1, line:13:1>     |-CallExpr 0x12604bec0 <line:6:9, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12604be40 <col:9> 'int ()' Function 0x12604bd88 'assert' 'int ()'     | `-BinaryOperator 0x12604bea0 <col:16, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x12604be60 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x12604be80 <col:25> 'int' 0     |-CallExpr 0x12604bfe8 <line:7:9, col:31> 'int'     | |-ImplicitCastExpr 0x12604bfd0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12604bee8 <col:9> 'int ()' Function 0x12604bd88 'assert' 'int ()'     | `-BinaryOperator 0x12604bf78 <col:16, col:29> 'int' '!='     |   |-ImplicitCastExpr 0x12604bf48 <col:16> 'struct opj_event_mgr *' <LValueToRValue>     |   | `-DeclRefExpr 0x12604bf08 <col:16> 'struct opj_event_mgr *' lvalue ParmVar 0x12604bae8 'p_manager' 'struct opj_event_mgr *'     |   `-ImplicitCastExpr 0x12604bf60 <col:29> 'struct opj_event_mgr *' <NullToPointer>     |     `-IntegerLiteral 0x12604bf28 <col:29> 'int' 0     |-CallExpr 0x12604c0d8 <line:8:9, col:30> 'int'     | |-ImplicitCastExpr 0x12604c0c0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12604c010 <col:9> 'int ()' Function 0x12604bd88 'assert' 'int ()'     | `-BinaryOperator 0x12604c0a0 <col:16, col:28> 'int' '!='     |   |-ImplicitCastExpr 0x12604c070 <col:16> 'struct opj_stream_private *' <LValueToRValue>     |   | `-DeclRefExpr 0x12604c030 <col:16> 'struct opj_stream_private *' lvalue ParmVar 0x12601ef18 'p_stream' 'struct opj_stream_private *'     |   `-ImplicitCastExpr 0x12604c088 <col:28> 'struct opj_stream_private *' <NullToPointer>     |     `-IntegerLiteral 0x12604c050 <col:28> 'int' 0     |-BinaryOperator 0x12604c350 <line:10:9, col:68> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12604c190 <col:9, col:28> '<dependent type>' contains-errors lvalue ->main_head_end     | | `-CXXDependentScopeMemberExpr 0x12604c148 <col:9, col:16> '<dependent type>' contains-errors lvalue ->cstr_index     | |   `-RecoveryExpr 0x12604c120 <col:9> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12604c100 <col:9> 'int *' lvalue ParmVar 0x12601e928 'p_j2k' 'int *'     | `-CallExpr 0x12604c310 <col:44, col:68> 'int'     |   |-ImplicitCastExpr 0x12604c2f8 <col:44> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12604c2b8 <col:44> 'int ()' Function 0x12604c200 'opj_stream_tell' 'int ()'     |   `-ImplicitCastExpr 0x12604c338 <col:60> 'struct opj_stream_private *' <LValueToRValue>     |     `-DeclRefExpr 0x12604c2d8 <col:60> 'struct opj_stream_private *' lvalue ParmVar 0x12601ef18 'p_stream' 'struct opj_stream_private *'     `-ReturnStmt 0x12604c3a8 <line:12:9, col:16>       `-RecoveryExpr 0x12604c388 <col:16> '<dependent type>' contains-errors lvalue ","20033":"`-FunctionDecl 0x11e93a548  line:1:1 i915_gem_execbuffer_relocate_object 'int (struct drm_i915_gem_object *, struct eb_objects *)'   |-ParmVarDecl 0x11e922048 <col:37, col:65> col:65 used obj 'struct drm_i915_gem_object *'   |-ParmVarDecl 0x11e93a428 <line:2:9, col:28> col:28 used eb 'struct eb_objects *'   `-CompoundStmt 0x11e93b808 <line:3:1, line:28:1>     |-DeclStmt 0x11e93a7c8 <line:4:2, col:46>     | |-RecordDecl 0x11e93a648 <col:2, col:9> col:9 struct drm_i915_gem_relocation_entry     | `-VarDecl 0x11e93a748 <col:2, col:39> col:39 invalid __user 'struct drm_i915_gem_relocation_entry'     |-DeclStmt 0x11e93aa28 <line:5:2, col:59>     | |-RecordDecl 0x11e93a7e0 <col:2, col:9> col:9 struct drm_i915_gem_exec_object2     | `-VarDecl 0x11e93a948 <col:2, col:49> col:36 used entry 'struct drm_i915_gem_exec_object2 *' cinit     |   `-RecoveryExpr 0x11e93a9e8 <col:44, col:49> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x11e93a9b0 <col:44> 'struct drm_i915_gem_object *' lvalue ParmVar 0x11e922048 'obj' 'struct drm_i915_gem_object *'     |-DeclStmt 0x11e93ab58 <line:6:2, col:12>     | |-VarDecl 0x11e93aa58 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x11e93aad8 <col:2, col:9> col:9 used ret 'int'     |-ForStmt 0x11e93b7a0 <line:9:2, line:25:2>     | |-BinaryOperator 0x11e93ac10 <line:9:7, col:11> 'int' '='     | | |-DeclRefExpr 0x11e93abd0 <col:7> 'int' lvalue Var 0x11e93aa58 'i' 'int'     | | `-IntegerLiteral 0x11e93abf0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x11e93acb0 <col:14, col:25> 'int' contains-errors '<'     | | |-DeclRefExpr 0x11e93ac30 <col:14> 'int' lvalue Var 0x11e93aa58 'i' 'int'     | | `-RecoveryExpr 0x11e93ac88 <col:18, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x11e93ac50 <col:18> 'struct drm_i915_gem_exec_object2 *' contains-errors lvalue Var 0x11e93a948 'entry' 'struct drm_i915_gem_exec_object2 *'     | |-UnaryOperator 0x11e93acf0 <col:43, col:44> 'int' postfix '++'     | | `-DeclRefExpr 0x11e93acd0 <col:43> 'int' lvalue Var 0x11e93aa58 'i' 'int'     | `-CompoundStmt 0x11e93b768 <col:48, line:25:2>     |   |-DeclStmt 0x11e93adc8 <line:10:3, col:45>     |   | `-VarDecl 0x11e93ad60 <col:3, col:40> col:40 invalid reloc 'struct drm_i915_gem_relocation_entry'     |   |-IfStmt 0x11e93b158 <line:12:3, line:15:12>     |   | |-CallExpr 0x11e93b078 <line:12:7, line:14:25> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x11e93aef0 <line:12:7> 'int ()' Function 0x11e93ae38 '__copy_from_user_inatomic' 'int ()'     |   | | |-UnaryOperator 0x11e93af30 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | | `-RecoveryExpr 0x11e93af10 <col:34> '<dependent type>' contains-errors lvalue     |   | | |-BinaryOperator 0x11e93b058 <line:13:12, col:24> '<dependent type>' contains-errors '+'     |   | | | |-RecoveryExpr 0x11e93b038 <col:12> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x11e93af60 <col:24> 'int' lvalue Var 0x11e93aa58 'i' 'int'     |   | | `-UnaryExprOrTypeTraitExpr 0x11e93afe0 <line:14:12, col:24> 'unsigned long' contains-errors sizeof     |   | |   `-ParenExpr 0x11e93afc0 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   | |     `-RecoveryExpr 0x11e93afa0 <col:19> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x11e93b148 <line:15:4, col:12>     |   |   `-UnaryOperator 0x11e93b130 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x11e93b118 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x11e93b0f8 <col:12> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x11e93b348 <line:17:3, col:59> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11e93b178 <col:3> 'int' lvalue Var 0x11e93aad8 'ret' 'int'     |   | `-CallExpr 0x11e93b310 <col:9, col:59> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11e93b278 <col:9> 'int ()' Function 0x11e93b1c0 'i915_gem_execbuffer_relocate_entry' 'int ()'     |   |   |-DeclRefExpr 0x11e93b298 <col:44> 'struct drm_i915_gem_object *' lvalue ParmVar 0x11e922048 'obj' 'struct drm_i915_gem_object *'     |   |   |-DeclRefExpr 0x11e93b2b8 <col:49> 'struct eb_objects *' lvalue ParmVar 0x11e93a428 'eb' 'struct eb_objects *'     |   |   `-UnaryOperator 0x11e93b2f8 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x11e93b2d8 <col:54> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x11e93b400 <line:18:3, line:19:11>     |   | |-ImplicitCastExpr 0x11e93b388 <line:18:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x11e93b368 <col:7> 'int' lvalue Var 0x11e93aad8 'ret' 'int'     |   | `-ReturnStmt 0x11e93b3d8 <line:19:4, col:11>     |   |   `-ImplicitCastExpr 0x11e93b3c0 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x11e93b3a0 <col:11> 'int' lvalue Var 0x11e93aad8 'ret' 'int'     |   `-IfStmt 0x11e93b748 <line:21:3, line:24:12>     |     |-RecoveryExpr 0x11e93b680 <line:21:7, line:23:39> '_Bool' contains-errors     |     `-ReturnStmt 0x11e93b738 <line:24:4, col:12>     |       `-UnaryOperator 0x11e93b720 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x11e93b708 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x11e93b6e8 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11e93b7f8 <line:27:2, col:9>       `-IntegerLiteral 0x11e93b7d8 <col:9> 'int' 0 ","19917":"`-FunctionDecl 0x126128758  line:1:1 do_data_copy_dequeue 'int (struct vhost_virtqueue *)'   |-ParmVarDecl 0x126128648 <col:22, col:46> col:46 used vq 'struct vhost_virtqueue *'   `-CompoundStmt 0x1261411b0 <line:2:1, line:11:1>     |-DeclStmt 0x126140c98 <line:3:2, col:53>     | |-RecordDecl 0x126140a50 <col:2, col:9> col:9 struct batch_copy_elem     | `-VarDecl 0x126140bb8 <col:2, col:37> col:26 used elem 'struct batch_copy_elem *' cinit     |   `-RecoveryExpr 0x126140c58 <col:33, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x126140c20 <col:33> 'struct vhost_virtqueue *' lvalue ParmVar 0x126128648 'vq' 'struct vhost_virtqueue *'     |-DeclStmt 0x126140d48 <line:5:2, col:7>     | `-VarDecl 0x126140ce0 <col:2, col:6> col:6 used i 'int'     `-BinaryOperator 0x126141190 <line:10:2, col:28> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x126141148 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x126141110 <col:2> 'struct vhost_virtqueue *' lvalue ParmVar 0x126128648 'vq' 'struct vhost_virtqueue *'       `-IntegerLiteral 0x126141170 <col:28> 'int' 0 ","19218":"`-FunctionDecl 0x144128750  line:2:13 netdev_adjacent_del_links 'void (struct net_device *)' static   |-ParmVarDecl 0x144128648 <col:39, col:58> col:58 used dev 'struct net_device *'   `-CompoundStmt 0x1441470f8 <line:3:1, line:24:3>     |-DeclStmt 0x144140c38 <line:4:2, col:30>     | |-RecordDecl 0x144140a48 <col:2, col:9> col:9 struct netdev_adjacent     | `-VarDecl 0x144140bb8 <col:2, col:26> col:26 used iter 'struct netdev_adjacent *'     |-DeclStmt 0x144141048 <line:6:2, col:32>     | |-RecordDecl 0x144140c50 <col:2, col:9> col:9 struct net     | `-VarDecl 0x144140db8 <col:2, col:31> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x144141018 <col:20, col:31> 'struct net *' <IntegralToPointer>     |     `-CallExpr 0x144140fd8 <col:20, col:31> 'int'     |       |-ImplicitCastExpr 0x144140fc0 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x144140f50 <col:20> 'int ()' Function 0x144140e98 'dev_net' 'int ()'     |       `-ImplicitCastExpr 0x144141000 <col:28> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x144140f70 <col:28> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'     |-CallExpr 0x1441412b0 <line:8:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144141140 <col:2> 'int ()' Function 0x144141088 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x144141160 <col:22> 'struct netdev_adjacent *' lvalue Var 0x144140bb8 'iter' 'struct netdev_adjacent *'     | |-UnaryOperator 0x144141228 <col:28, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1441411e0 <col:29, col:43> '<dependent type>' contains-errors lvalue .upper     | |   `-RecoveryExpr 0x1441411b8 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x144141180 <col:29> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'     | `-RecoveryExpr 0x144141290 <col:50> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x1441419d8 <col:56, line:15:2>     | |-CallExpr 0x1441417c0 <line:11:3, line:12:34> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1441415d8 <line:11:3> 'int ()' Function 0x144141520 'netdev_adjacent_sysfs_del' 'int ()'     | | |-RecoveryExpr 0x144141630 <col:29, col:35> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1441415f8 <col:29> 'struct netdev_adjacent *' lvalue Var 0x144140bb8 'iter' 'struct netdev_adjacent *'     | | |-RecoveryExpr 0x144141690 <col:40, col:45> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x144141658 <col:40> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'     | | `-UnaryOperator 0x1441417a8 <line:12:8, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x144141760 <col:9, col:29> '<dependent type>' contains-errors lvalue .lower     | |     `-CXXDependentScopeMemberExpr 0x144141718 <col:9, col:20> '<dependent type>' contains-errors lvalue ->adj_list     | |       `-RecoveryExpr 0x1441416f0 <col:9, col:15> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x1441416b8 <col:9> 'struct netdev_adjacent *' lvalue Var 0x144140bb8 'iter' 'struct netdev_adjacent *'     | `-CallExpr 0x1441419a0 <line:13:3, line:14:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1441417f8 <line:13:3> 'int ()' Function 0x144141520 'netdev_adjacent_sysfs_del' 'int ()'     |   |-DeclRefExpr 0x144141818 <col:29> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'     |   |-CXXDependentScopeMemberExpr 0x144141898 <col:34, col:45> '<dependent type>' contains-errors lvalue ->name     |   | `-RecoveryExpr 0x144141870 <col:34, col:40> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x144141838 <col:34> 'struct netdev_adjacent *' lvalue Var 0x144140bb8 'iter' 'struct netdev_adjacent *'     |   `-UnaryOperator 0x144141988 <line:14:8, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x144141940 <col:9, col:23> '<dependent type>' contains-errors lvalue .upper     |       `-RecoveryExpr 0x144141918 <col:9, col:14> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1441418e0 <col:9> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'     |-CallExpr 0x144146b70 <line:17:2, col:54> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144146a00 <col:2> 'int ()' Function 0x144141088 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x144146a20 <col:22> 'struct netdev_adjacent *' lvalue Var 0x144140bb8 'iter' 'struct netdev_adjacent *'     | |-UnaryOperator 0x144146ae8 <col:28, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x144146aa0 <col:29, col:43> '<dependent type>' contains-errors lvalue .lower     | |   `-RecoveryExpr 0x144146a78 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x144146a40 <col:29> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'     | `-RecoveryExpr 0x144146b50 <col:50> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x1441470d8 <col:56, line:24:2>       |-CallExpr 0x144146ec0 <line:20:3, line:21:34> '<dependent type>' contains-errors       | |-DeclRefExpr 0x144146cd8 <line:20:3> 'int ()' Function 0x144141520 'netdev_adjacent_sysfs_del' 'int ()'       | |-RecoveryExpr 0x144146d30 <col:29, col:35> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x144146cf8 <col:29> 'struct netdev_adjacent *' lvalue Var 0x144140bb8 'iter' 'struct netdev_adjacent *'       | |-RecoveryExpr 0x144146d90 <col:40, col:45> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x144146d58 <col:40> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'       | `-UnaryOperator 0x144146ea8 <line:21:8, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-CXXDependentScopeMemberExpr 0x144146e60 <col:9, col:29> '<dependent type>' contains-errors lvalue .upper       |     `-CXXDependentScopeMemberExpr 0x144146e18 <col:9, col:20> '<dependent type>' contains-errors lvalue ->adj_list       |       `-RecoveryExpr 0x144146df0 <col:9, col:15> '<dependent type>' contains-errors lvalue       |         `-DeclRefExpr 0x144146db8 <col:9> 'struct netdev_adjacent *' lvalue Var 0x144140bb8 'iter' 'struct netdev_adjacent *'       `-CallExpr 0x1441470a0 <line:22:3, line:23:28> '<dependent type>' contains-errors         |-DeclRefExpr 0x144146ef8 <line:22:3> 'int ()' Function 0x144141520 'netdev_adjacent_sysfs_del' 'int ()'         |-DeclRefExpr 0x144146f18 <col:29> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *'         |-CXXDependentScopeMemberExpr 0x144146f98 <col:34, col:45> '<dependent type>' contains-errors lvalue ->name         | `-RecoveryExpr 0x144146f70 <col:34, col:40> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x144146f38 <col:34> 'struct netdev_adjacent *' lvalue Var 0x144140bb8 'iter' 'struct netdev_adjacent *'         `-UnaryOperator 0x144147088 <line:23:8, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow           `-CXXDependentScopeMemberExpr 0x144147040 <col:9, col:23> '<dependent type>' contains-errors lvalue .lower             `-RecoveryExpr 0x144147018 <col:9, col:14> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x144146fe0 <col:9> 'struct net_device *' lvalue ParmVar 0x144128648 'dev' 'struct net_device *' ","19786":"`-FunctionDecl 0x14a80de88  line:1:1 invalid ipvs_group_remove_entry 'int (int *, int *)'   |-ParmVarDecl 0x14a80dd28 <col:25, col:43> col:43 invalid vs 'int *'   |-ParmVarDecl 0x14a80dda8 <col:47, col:77> col:77 invalid vsge 'int *'   `-CompoundStmt 0x14a8285a8 <line:2:1, line:39:1>     |-CallExpr 0x14a80e1c8 <line:9:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a80e0b0 <col:2> 'int ()' Function 0x14a80dff8 'ipvs_set_srule' 'int ()'     | |-RecoveryExpr 0x14a80e170 <col:17> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x14a80e1b0 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14a80e190 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a80e118 <col:47> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14a827c98 <line:16:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a827b68 <col:2> 'int ()' Function 0x14a827ab0 'LIST_FOREACH' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14a827ba8 <col:15, col:19> '<dependent type>' contains-errors lvalue ->rs     | | `-RecoveryExpr 0x14a827b88 <col:15> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14a827c58 <col:23> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a827c78 <col:27> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x14a8281a0 <col:30, line:29:2>     | `-IfStmt 0x14a828180 <line:17:3, line:28:3>     |   |-CXXDependentScopeMemberExpr 0x14a827d50 <line:17:7, col:11> '<dependent type>' contains-errors lvalue ->alive     |   | `-RecoveryExpr 0x14a827d30 <col:7> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x14a828168 <col:18, line:28:3>     |     `-IfStmt 0x14a828138 <line:22:4, line:27:5> has_else     |       |-CXXDependentScopeMemberExpr 0x14a827eb8 <line:22:8, col:14> '<dependent type>' contains-errors lvalue ->is_fwmark     |       | `-RecoveryExpr 0x14a827e98 <col:8> '<dependent type>' contains-errors lvalue     |       |-CompoundStmt 0x14a828000 <col:25, line:25:4>     |       `-NullStmt 0x14a828130 <line:27:5>     |-CallExpr 0x14a8282f8 <line:32:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a828298 <col:2> 'int ()' Function 0x14a8281e0 'unset_vsge_alive' 'int ()'     | |-RecoveryExpr 0x14a8282b8 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a8282d8 <col:25> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14a828588 <line:33:2, line:38:2>       |-UnaryOperator 0x14a828498 <line:33:6, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x14a828468 <col:7, col:29> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14a828408 <col:7> 'int ()' Function 0x14a828350 'is_vsge_alive' 'int ()'       |   |-RecoveryExpr 0x14a828428 <col:21> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14a828448 <col:27> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14a828578 <col:32, line:38:2> ","19374":"`-FunctionDecl 0x11f120958  line:2:5 skb_crc32c_csum_help 'int (struct sk_buff *)'   |-ParmVarDecl 0x11f120848 <col:26, col:42> col:42 used skb 'struct sk_buff *'   `-CompoundStmt 0x11e80fe18 <line:3:1, line:38:13>     |-DeclStmt 0x11f138e28 <line:5:2, col:28>     | |-VarDecl 0x11f138c80 <col:2, col:12> col:6 used ret 'int' cinit     | | `-IntegerLiteral 0x11f138ce8 <col:12> 'int' 0     | |-VarDecl 0x11f138d20 <col:2, col:15> col:15 used offset 'int'     | `-VarDecl 0x11f138da0 <col:2, col:23> col:23 used start 'int'     |-IfStmt 0x11f138f80 <line:7:2, line:8:8>     | |-BinaryOperator 0x11f138ef8 <line:7:6, col:24> 'int' contains-errors '!='     | | |-RecoveryExpr 0x11f138e78 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x11f138e40 <col:6> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'     | | `-RecoveryExpr 0x11f138ed8 <col:24> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x11f138f68 <line:8:3, col:8> 'out' 0x11f138f18     |-IfStmt 0x11f1392d0 <line:10:2, line:11:8>     | |-CallExpr 0x11f139290 <line:10:6, col:30> 'int'     | | |-ImplicitCastExpr 0x11f139278 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x11f1390b0 <col:6> 'int ()' Function 0x11f138ff8 'unlikely' 'int ()'     | | `-CallExpr 0x11f139238 <col:15, col:29> 'int'     | |   |-ImplicitCastExpr 0x11f139220 <col:15> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x11f1391b0 <col:15> 'int ()' Function 0x11f1390f8 'skb_is_gso' 'int ()'     | |   `-ImplicitCastExpr 0x11f139260 <col:26> 'struct sk_buff *' <LValueToRValue>     | |     `-DeclRefExpr 0x11f1391d0 <col:26> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'     | `-GotoStmt 0x11f1392b8 <line:11:3, col:8> 'out' 0x11f138f18     |-IfStmt 0x11f139710 <line:14:2, line:18:2>     | |-CallExpr 0x11f1394a0 <line:14:6, col:39> 'int'     | | |-ImplicitCastExpr 0x11f139488 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x11f1392f0 <col:6> 'int ()' Function 0x11f138ff8 'unlikely' 'int ()'     | | `-CallExpr 0x11f139448 <col:15, col:38> 'int'     | |   |-ImplicitCastExpr 0x11f139430 <col:15> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x11f1393f0 <col:15> 'int ()' Function 0x11f139338 'skb_has_shared_frag' 'int ()'     | |   `-ImplicitCastExpr 0x11f139470 <col:35> 'struct sk_buff *' <LValueToRValue>     | |     `-DeclRefExpr 0x11f139410 <col:35> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'     | `-CompoundStmt 0x11f1396f0 <col:42, line:18:2>     |   |-BinaryOperator 0x11f139660 <line:15:3, col:28> 'int' '='     |   | |-DeclRefExpr 0x11f1394c8 <col:3> 'int' lvalue Var 0x11f138c80 'ret' 'int'     |   | `-CallExpr 0x11f139620 <col:9, col:28> 'int'     |   |   |-ImplicitCastExpr 0x11f139608 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x11f1395c8 <col:9> 'int ()' Function 0x11f139510 '__skb_linearize' 'int ()'     |   |   `-ImplicitCastExpr 0x11f139648 <col:25> 'struct sk_buff *' <LValueToRValue>     |   |     `-DeclRefExpr 0x11f1395e8 <col:25> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'     |   `-IfStmt 0x11f1396d0 <line:16:3, line:17:9>     |     |-ImplicitCastExpr 0x11f1396a0 <line:16:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x11f139680 <col:7> 'int' lvalue Var 0x11f138c80 'ret' 'int'     |     `-GotoStmt 0x11f1396b8 <line:17:4, col:9> 'out' 0x11f138f18     |-BinaryOperator 0x11f1398c8 <line:19:2, col:39> 'int' '='     | |-DeclRefExpr 0x11f139730 <col:2> 'int' lvalue Var 0x11f138da0 'start' 'int'     | `-CallExpr 0x11f139888 <col:10, col:39> 'int'     |   |-ImplicitCastExpr 0x11f139870 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x11f139830 <col:10> 'int ()' Function 0x11f139778 'skb_checksum_start_offset' 'int ()'     |   `-ImplicitCastExpr 0x11f1398b0 <col:36> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x11f139850 <col:36> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'     |-IfStmt 0x11e80f2f8 <line:21:2, line:24:2>     | |-CallExpr 0x11e80f1a0 <line:21:6, col:45> 'int'     | | |-ImplicitCastExpr 0x11e80f188 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x11f139b20 <col:6> 'int ()' Function 0x11f139a68 'WARN_ON_ONCE' 'int ()'     | | `-BinaryOperator 0x11e80f168 <col:19, col:44> 'int' '>='     | |   |-ImplicitCastExpr 0x11e80f150 <col:19> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x11f139b40 <col:19> 'int' lvalue Var 0x11f138d20 'offset' 'int'     | |   `-CallExpr 0x11e80f110 <col:29, col:44> 'int'     | |     |-ImplicitCastExpr 0x11e80f0f8 <col:29> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x11e80f0b8 <col:29> 'int ()' Function 0x11e80f000 'skb_headlen' 'int ()'     | |     `-ImplicitCastExpr 0x11e80f138 <col:41> 'struct sk_buff *' <LValueToRValue>     | |       `-DeclRefExpr 0x11e80f0d8 <col:41> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'     | `-CompoundStmt 0x11e80f2d8 <col:48, line:24:2>     |   |-BinaryOperator 0x11e80f2a0 <line:22:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11e80f1c8 <col:3> 'int' lvalue Var 0x11f138c80 'ret' 'int'     |   | `-UnaryOperator 0x11e80f288 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x11e80f270 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x11e80f250 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x11e80f2c0 <line:23:3, col:8> 'out' 0x11f138f18     |-IfStmt 0x11e80f910 <line:25:2, line:30:2>     | |-RecoveryExpr 0x11e80f5e8 <line:25:6, line:26:54> '_Bool' contains-errors     | `-CompoundStmt 0x11e80f8f0 <col:57, line:30:2>     |   |-BinaryOperator 0x11e80f860 <line:27:3, col:47> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11e80f608 <col:3> 'int' lvalue Var 0x11f138c80 'ret' 'int'     |   | `-CallExpr 0x11e80f820 <col:9, col:47> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11e80f708 <col:9> 'int ()' Function 0x11e80f650 'pskb_expand_head' 'int ()'     |   |   |-DeclRefExpr 0x11e80f728 <col:26> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'     |   |   |-IntegerLiteral 0x11e80f748 <col:31> 'int' 0     |   |   |-IntegerLiteral 0x11e80f768 <col:34> 'int' 0     |   |   `-RecoveryExpr 0x11e80f800 <col:37> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x11e80f8d0 <line:28:3, line:29:9>     |     |-ImplicitCastExpr 0x11e80f8a0 <line:28:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x11e80f880 <col:7> 'int' lvalue Var 0x11f138c80 'ret' 'int'     |     `-GotoStmt 0x11e80f8b8 <line:29:4, col:9> 'out' 0x11f138f18     |-BinaryOperator 0x11e80fd90 <line:36:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x11e80fd48 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x11e80fd10 <col:2> 'struct sk_buff *' lvalue ParmVar 0x11f120848 'skb' 'struct sk_buff *'     | `-IntegerLiteral 0x11e80fd70 <col:23> 'int' 0     `-LabelStmt 0x11e80fdf8 <line:37:1, line:38:9> 'out'       `-ReturnStmt 0x11e80fde8 <col:2, col:9>         `-ImplicitCastExpr 0x11e80fdd0 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x11e80fdb0 <col:9> 'int' lvalue Var 0x11f138c80 'ret' 'int' ","19745":"`-FunctionDecl 0x14c00df18  line:1:1 invalid init_copy 'int (int *, int, int)'   |-ParmVarDecl 0x14c00dd28 <col:11, col:22> col:22 invalid mrb 'int *'   |-ParmVarDecl 0x14c00dda8 <col:27, col:37> col:37 invalid dest 'int'   |-ParmVarDecl 0x14c00de28 <col:43, col:53> col:53 invalid obj 'int'   `-CompoundStmt 0x14c027dd0 <line:2:1, line:25:1>     |-SwitchStmt 0x14c00e198 <line:3:3, line:23:3>     | |-CallExpr 0x14c00e170 <line:3:11, col:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14c00e130 <col:11> 'int ()' Function 0x14c00e078 'mrb_type' 'int ()'     | | `-RecoveryExpr 0x14c00e150 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c027b90 <col:26, line:23:3>     |   |-CallExpr 0x14c00e350 <line:6:7, col:32> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c00e2d0 <col:7> 'int ()' Function 0x14c00e218 'copy_class' 'int ()'     |   | |-RecoveryExpr 0x14c00e2f0 <col:18> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14c00e310 <col:23> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14c00e330 <col:29> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14c027538 <line:7:7, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c0274b8 <col:7> 'int ()' Function 0x14c027400 'mrb_iv_copy' 'int ()'     |   | |-RecoveryExpr 0x14c0274d8 <col:19> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14c0274f8 <col:24> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14c027518 <col:30> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14c027860 <line:8:7, col:58> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c027650 <col:7> 'int ()' Function 0x14c027598 'mrb_iv_remove' 'int ()'     |   | |-RecoveryExpr 0x14c027670 <col:21> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14c027690 <col:26> '<dependent type>' contains-errors lvalue     |   | `-CallExpr 0x14c027830 <col:32, col:57> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14c027790 <col:32> 'int ()' Function 0x14c0276d8 'mrb_intern_lit' 'int ()'     |   |   |-RecoveryExpr 0x14c0277b0 <col:47> '<dependent type>' contains-errors lvalue     |   |   `-StringLiteral 0x14c027810 <col:52> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x14c027898 <line:9:7>     |   |-CallExpr 0x14c027998 <line:15:7, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c027918 <col:7> 'int ()' Function 0x14c027400 'mrb_iv_copy' 'int ()'     |   | |-RecoveryExpr 0x14c027938 <col:19> '<dependent type>' contains-errors lvalue     |   | |-RecoveryExpr 0x14c027958 <col:24> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14c027978 <col:30> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x14c0279d0 <line:16:7>     |   |-CallExpr 0x14c027b30 <line:18:7, col:33> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14c027ad0 <col:7> 'int ()' Function 0x14c027a18 'mrb_istruct_copy' 'int ()'     |   | |-RecoveryExpr 0x14c027af0 <col:24> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14c027b10 <col:30> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x14c027b60 <line:19:7>     |   `-DefaultStmt 0x14c027b70 <line:21:5, line:22:7>     |     `-BreakStmt 0x14c027b68 <col:7>     `-CallExpr 0x14c027d88 <line:24:3, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x14c027cc8 <col:3> 'int ()' Function 0x14c027c10 'mrb_funcall' 'int ()'       |-RecoveryExpr 0x14c027ce8 <col:15> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x14c027d08 <col:20> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x14c027d28 <col:26> 'char[4]' lvalue \"STR\"       |-IntegerLiteral 0x14c027d48 <col:33> 'int' 1       `-RecoveryExpr 0x14c027d68 <col:36> '<dependent type>' contains-errors lvalue ","20072":"`-FunctionDecl 0x150008488  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x150008588 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1500085f0 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x150008658 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x150008530 <<invalid sloc>> Implicit 900 ","19976":"`-FunctionDecl 0x150140b48  line:1:5 au1100fb_fb_mmap 'int (struct fb_info *, struct vm_area_struct *)'   |-ParmVarDecl 0x150128648 <col:22, col:38> col:38 used fbi 'struct fb_info *'   |-ParmVarDecl 0x150140a28 <col:43, col:66> col:66 used vma 'struct vm_area_struct *'   `-CompoundStmt 0x150143910 <line:2:1, line:35:1>     |-DeclStmt 0x150140e38 <line:3:2, col:31>     | |-RecordDecl 0x150140c48 <col:2, col:9> col:9 struct au1100fb_device     | `-VarDecl 0x150140db8 <col:2, col:26> col:26 used fbdev 'struct au1100fb_device *'     |-DeclStmt 0x150140ed0 <line:4:2, col:18>     | `-VarDecl 0x150140e68 <col:2, col:15> col:15 used len 'unsigned int'     |-DeclStmt 0x150141038 <line:5:2, col:28>     | |-VarDecl 0x150140f00 <col:2, col:22> col:16 used start 'unsigned long' cinit     | | `-ImplicitCastExpr 0x150140f88 <col:22> 'unsigned long' <IntegralCast>     | |   `-IntegerLiteral 0x150140f68 <col:22> 'int' 0     | `-VarDecl 0x150140fb8 <col:2, col:25> col:25 used off 'unsigned long'     |-BinaryOperator 0x150141280 <line:7:2, col:32> 'struct au1100fb_device *' '='     | |-DeclRefExpr 0x150141050 <col:2> 'struct au1100fb_device *' lvalue Var 0x150140db8 'fbdev' 'struct au1100fb_device *'     | `-ImplicitCastExpr 0x150141268 <col:10, col:32> 'struct au1100fb_device *' <IntegralToPointer>     |   `-CallExpr 0x150141228 <col:10, col:32> 'int'     |     |-ImplicitCastExpr 0x150141210 <col:10> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1501411a0 <col:10> 'int ()' Function 0x1501410e8 'to_au1100fb_device' 'int ()'     |     `-ImplicitCastExpr 0x150141250 <col:29> 'struct fb_info *' <LValueToRValue>     |       `-DeclRefExpr 0x1501411c0 <col:29> 'struct fb_info *' lvalue ParmVar 0x150128648 'fbi' 'struct fb_info *'     |-IfStmt 0x150141450 <line:9:2, line:11:2>     | |-RecoveryExpr 0x150141370 <line:9:6, col:41> '_Bool' contains-errors     | `-CompoundStmt 0x150141438 <col:44, line:11:2>     |   `-ReturnStmt 0x150141428 <line:10:3, col:11>     |     `-UnaryOperator 0x150141410 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x1501413f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x1501413d8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x150141588 <line:13:2, col:27> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x150141470 <col:2> 'unsigned long' lvalue Var 0x150140f00 'start' 'unsigned long'     | `-BinaryOperator 0x150141568 <col:10, col:27> '<dependent type>' contains-errors '&'     |   |-RecoveryExpr 0x1501414c8 <col:10, col:17> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x150141490 <col:10> 'struct au1100fb_device *' lvalue Var 0x150140db8 'fbdev' 'struct au1100fb_device *'     |   `-RecoveryExpr 0x150141548 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1501418c8 <line:16:2, col:25> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x1501417b0 <col:2> 'unsigned long' lvalue Var 0x150140fb8 'off' 'unsigned long'     | `-BinaryOperator 0x1501418a8 <col:8, col:25> '<dependent type>' contains-errors '<<'     |   |-RecoveryExpr 0x150141808 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1501417d0 <col:8> 'struct vm_area_struct *' lvalue ParmVar 0x150140a28 'vma' 'struct vm_area_struct *'     |   `-DeclRefExpr 0x150141888 <col:25> 'int ()' Function 0x1501415f0 'PAGE_ALIGN' 'int ()'     |-IfStmt 0x150142f40 <line:18:2, line:20:2>     | |-BinaryOperator 0x150142e60 <line:18:6, col:44> 'int' contains-errors '>'     | | |-ParenExpr 0x150142e20 <col:6, col:40> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x150142e00 <col:7, col:37> '<dependent type>' contains-errors '+'     | | |   |-BinaryOperator 0x1501419a8 <col:7, col:26> '<dependent type>' contains-errors '-'     | | |   | |-RecoveryExpr 0x150141920 <col:7, col:12> '<dependent type>' contains-errors lvalue     | | |   | | `-DeclRefExpr 0x1501418e8 <col:7> 'struct vm_area_struct *' lvalue ParmVar 0x150140a28 'vma' 'struct vm_area_struct *'     | | |   | `-RecoveryExpr 0x150141980 <col:21, col:26> '<dependent type>' contains-errors lvalue     | | |   |   `-DeclRefExpr 0x150141948 <col:21> 'struct vm_area_struct *' lvalue ParmVar 0x150140a28 'vma' 'struct vm_area_struct *'     | | |   `-DeclRefExpr 0x1501419c8 <col:37> 'unsigned long' lvalue Var 0x150140fb8 'off' 'unsigned long'     | | `-DeclRefExpr 0x150142e40 <col:44> 'unsigned int' lvalue Var 0x150140e68 'len' 'unsigned int'     | `-CompoundStmt 0x150142f28 <col:49, line:20:2>     |   `-ReturnStmt 0x150142f18 <line:19:3, col:11>     |     `-UnaryOperator 0x150142f00 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x150142ee8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x150142ec8 <col:11> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x150142fb8 <line:22:2, col:9> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     | |-DeclRefExpr 0x150142f60 <col:2> 'unsigned long' lvalue Var 0x150140fb8 'off' 'unsigned long'     | `-ImplicitCastExpr 0x150142fa0 <col:9> 'unsigned long' <LValueToRValue>     |   `-DeclRefExpr 0x150142f80 <col:9> 'unsigned long' lvalue Var 0x150140f00 'start' 'unsigned long'     |-BinaryOperator 0x150143150 <line:23:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x150143020 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x150142fe8 <col:2> 'struct vm_area_struct *' lvalue ParmVar 0x150140a28 'vma' 'struct vm_area_struct *'     | `-BinaryOperator 0x150143130 <col:18, col:25> '<dependent type>' contains-errors '>>'     |   |-DeclRefExpr 0x150143048 <col:18> 'unsigned long' lvalue Var 0x150140fb8 'off' 'unsigned long'     |   `-RecoveryExpr 0x150143110 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x150143358 <line:25:2, col:56> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1501431a8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x150143170 <col:2> 'struct vm_area_struct *' lvalue ParmVar 0x150140a28 'vma' 'struct vm_area_struct *'     | `-CallExpr 0x150143330 <col:22, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1501432b0 <col:22> 'int ()' Function 0x1501431f8 'pgprot_noncached' 'int ()'     |   `-RecoveryExpr 0x150143308 <col:39, col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1501432d0 <col:39> 'struct vm_area_struct *' lvalue ParmVar 0x150140a28 'vma' 'struct vm_area_struct *'     |-CompoundAssignOperator 0x150143580 <line:26:2, col:42> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CallExpr 0x1501434d8 <col:2, col:30> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x150143458 <col:2> 'int ()' Function 0x1501433a0 'pgprot_val' 'int ()'     | | `-RecoveryExpr 0x1501434b0 <col:13, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x150143478 <col:13> 'struct vm_area_struct *' lvalue ParmVar 0x150140a28 'vma' 'struct vm_area_struct *'     | `-ParenExpr 0x150143560 <col:35, col:42> 'int'     |   `-BinaryOperator 0x150143540 <col:36, col:41> 'int' '<<'     |     |-IntegerLiteral 0x150143500 <col:36> 'int' 6     |     `-IntegerLiteral 0x150143520 <col:41> 'int' 9     |-IfStmt 0x1501438c0 <line:28:2, line:32:2>     | |-RecoveryExpr 0x150143890 <line:28:6, line:30:22> '_Bool' contains-errors     | `-CompoundStmt 0x1501438b0 <col:25, line:32:2>     `-ReturnStmt 0x150143900 <line:34:2, col:9>       `-IntegerLiteral 0x1501438e0 <col:9> 'int' 0 ","19803":"`-FunctionDecl 0x13400de68  line:1:7 load_device_tree 'void *(const char *, int *)'   |-ParmVarDecl 0x13400dcd8 <col:24, col:36> col:36 used filename_path 'const char *'   |-ParmVarDecl 0x13400dd88 <col:51, col:56> col:56 used sizep 'int *'   `-CompoundStmt 0x13402a178 <line:2:1, line:47:1>     |-DeclStmt 0x13400dfe8 <line:3:5, col:16>     | `-VarDecl 0x13400df80 <col:5, col:9> col:9 used dt_size 'int'     |-DeclStmt 0x13400e080 <line:4:5, col:26>     | `-VarDecl 0x13400e018 <col:5, col:9> col:9 used dt_file_load_size 'int'     |-DeclStmt 0x13400e118 <line:5:5, col:12>     | `-VarDecl 0x13400e0b0 <col:5, col:9> col:9 used ret 'int'     |-DeclStmt 0x13400e200 <line:6:5, col:21>     | `-VarDecl 0x13400e148 <col:5, col:17> col:11 used fdt 'void *' cinit     |   `-RecoveryExpr 0x13400e1e0 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13400e288 <line:8:5, col:14> 'int' '='     | |-UnaryOperator 0x13400e250 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13400e238 <col:6> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x13400e218 <col:6> 'int *' lvalue ParmVar 0x13400dd88 'sizep' 'int *'     | `-IntegerLiteral 0x13400e268 <col:14> 'int' 0     |-BinaryOperator 0x1340278a8 <line:9:5, col:43> 'int' '='     | |-DeclRefExpr 0x13400e2a8 <col:5> 'int' lvalue Var 0x13400df80 'dt_size' 'int'     | `-CallExpr 0x134027868 <col:15, col:43> 'int'     |   |-ImplicitCastExpr 0x134027850 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13400e3e0 <col:15> 'int ()' Function 0x13400e328 'get_image_size' 'int ()'     |   `-ImplicitCastExpr 0x134027890 <col:30> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x134027800 <col:30> 'const char *' lvalue ParmVar 0x13400dcd8 'filename_path' 'const char *'     |-IfStmt 0x134027bc0 <line:10:5, line:14:5>     | |-BinaryOperator 0x134027920 <line:10:9, col:19> 'int' '<'     | | |-ImplicitCastExpr 0x134027908 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1340278c8 <col:9> 'int' lvalue Var 0x13400df80 'dt_size' 'int'     | | `-IntegerLiteral 0x1340278e8 <col:19> 'int' 0     | `-CompoundStmt 0x134027ba0 <col:22, line:14:5>     |   |-CallExpr 0x134027ad8 <line:11:9, line:12:35> 'int'     |   | |-ImplicitCastExpr 0x134027ac0 <line:11:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x134027a20 <col:9> 'int ()' Function 0x134027968 'error_report' 'int ()'     |   | |-ImplicitCastExpr 0x134027b08 <col:22> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x134027a80 <col:22> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x134027b20 <line:12:22> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x134027aa0 <col:22> 'const char *' lvalue ParmVar 0x13400dcd8 'filename_path' 'const char *'     |   `-GotoStmt 0x134027b88 <line:13:9, col:14> 'fail' 0x134027b38     |-CompoundAssignOperator 0x134027c20 <line:17:5, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x134027be0 <col:5> 'int' lvalue Var 0x13400df80 'dt_size' 'int'     | `-IntegerLiteral 0x134027c00 <col:16> 'int' 10000     |-CompoundAssignOperator 0x134027c90 <line:18:5, col:16> 'int' '*=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x134027c50 <col:5> 'int' lvalue Var 0x13400df80 'dt_size' 'int'     | `-IntegerLiteral 0x134027c70 <col:16> 'int' 2     |-BinaryOperator 0x134028290 <line:20:5, col:28> 'void *' contains-errors '='     | |-DeclRefExpr 0x134027cc0 <col:5> 'void *' contains-errors lvalue Var 0x13400e148 'fdt' 'void *'     | `-ImplicitCastExpr 0x134027e58 <col:11, col:28> 'void *' <IntegralToPointer>     |   `-CallExpr 0x134027e18 <col:11, col:28> 'int'     |     |-ImplicitCastExpr 0x134027e00 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x134027dc0 <col:11> 'int ()' Function 0x134027d08 'g_malloc0' 'int ()'     |     `-ImplicitCastExpr 0x134027e40 <col:21> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x134027de0 <col:21> 'int' lvalue Var 0x13400df80 'dt_size' 'int'     |-BinaryOperator 0x1340284c8 <line:22:5, col:68> 'int' contains-errors '='     | |-DeclRefExpr 0x1340282b0 <col:5> 'int' lvalue Var 0x13400e018 'dt_file_load_size' 'int'     | `-CallExpr 0x134028448 <col:25, col:68> 'int' contains-errors     |   |-ImplicitCastExpr 0x134028430 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1340283b0 <col:25> 'int ()' Function 0x1340282f8 'load_image_size' 'int ()'     |   |-ImplicitCastExpr 0x134028480 <col:41> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x1340283d0 <col:41> 'const char *' lvalue ParmVar 0x13400dcd8 'filename_path' 'const char *'     |   |-ImplicitCastExpr 0x134028498 <col:56> 'void *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x1340283f0 <col:56> 'void *' contains-errors lvalue Var 0x13400e148 'fdt' 'void *'     |   `-ImplicitCastExpr 0x1340284b0 <col:61> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x134028410 <col:61> 'int' lvalue Var 0x13400df80 'dt_size' 'int'     |-IfStmt 0x134028670 <line:23:5, line:27:5>     | |-BinaryOperator 0x134028540 <line:23:9, col:29> 'int' '<'     | | |-ImplicitCastExpr 0x134028528 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1340284e8 <col:9> 'int' lvalue Var 0x13400e018 'dt_file_load_size' 'int'     | | `-IntegerLiteral 0x134028508 <col:29> 'int' 0     | `-CompoundStmt 0x134028650 <col:32, line:27:5>     |   |-CallExpr 0x1340285d8 <line:24:9, line:25:35> 'int'     |   | |-ImplicitCastExpr 0x1340285c0 <line:24:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x134028560 <col:9> 'int ()' Function 0x134027968 'error_report' 'int ()'     |   | |-ImplicitCastExpr 0x134028608 <col:22> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x134028580 <col:22> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x134028620 <line:25:22> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1340285a0 <col:22> 'const char *' lvalue ParmVar 0x13400dcd8 'filename_path' 'const char *'     |   `-GotoStmt 0x134028638 <line:26:9, col:14> 'fail' 0x134027b38     |-BinaryOperator 0x134029ab8 <line:29:5, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x134028690 <col:5> 'int' lvalue Var 0x13400e0b0 'ret' 'int'     | `-CallExpr 0x134029a38 <col:11, col:42> 'int' contains-errors     |   |-ImplicitCastExpr 0x134029a20 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x134028790 <col:11> 'int ()' Function 0x1340286d8 'fdt_open_into' 'int ()'     |   |-ImplicitCastExpr 0x134029a70 <col:25> 'void *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x1340287b0 <col:25> 'void *' contains-errors lvalue Var 0x13400e148 'fdt' 'void *'     |   |-ImplicitCastExpr 0x134029a88 <col:30> 'void *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x1340287d0 <col:30> 'void *' contains-errors lvalue Var 0x13400e148 'fdt' 'void *'     |   `-ImplicitCastExpr 0x134029aa0 <col:35> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x134029a00 <col:35> 'int' lvalue Var 0x13400df80 'dt_size' 'int'     |-IfStmt 0x134029be0 <line:30:5, line:33:5>     | |-ImplicitCastExpr 0x134029af8 <line:30:9> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x134029ad8 <col:9> 'int' lvalue Var 0x13400e0b0 'ret' 'int'     | `-CompoundStmt 0x134029bc0 <col:14, line:33:5>     |   |-CallExpr 0x134029b68 <line:31:9, col:27> 'int'     |   | |-ImplicitCastExpr 0x134029b50 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x134029b10 <col:9> 'int ()' Function 0x134027968 'error_report' 'int ()'     |   | `-ImplicitCastExpr 0x134029b90 <col:22> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x134029b30 <col:22> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x134029ba8 <line:32:9, col:14> 'fail' 0x134027b38     |-IfStmt 0x134029e88 <line:36:5, line:40:5>     | |-CallExpr 0x134029d38 <line:36:9, col:29> 'int' contains-errors     | | |-ImplicitCastExpr 0x134029d20 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x134029ce0 <col:9> 'int ()' Function 0x134029c28 'fdt_check_header' 'int ()'     | | `-ImplicitCastExpr 0x134029d60 <col:26> 'void *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x134029d00 <col:26> 'void *' contains-errors lvalue Var 0x13400e148 'fdt' 'void *'     | `-CompoundStmt 0x134029e68 <col:32, line:40:5>     |   |-CallExpr 0x134029df0 <line:37:9, line:38:35> 'int'     |   | |-ImplicitCastExpr 0x134029dd8 <line:37:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x134029d78 <col:9> 'int ()' Function 0x134027968 'error_report' 'int ()'     |   | |-ImplicitCastExpr 0x134029e20 <col:22> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x134029d98 <col:22> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x134029e38 <line:38:22> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x134029db8 <col:22> 'const char *' lvalue ParmVar 0x13400dcd8 'filename_path' 'const char *'     |   `-GotoStmt 0x134029e50 <line:39:9, col:14> 'fail' 0x134027b38     |-BinaryOperator 0x134029f30 <line:41:5, col:14> 'int' '='     | |-UnaryOperator 0x134029ee0 <col:5, col:6> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x134029ec8 <col:6> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x134029ea8 <col:6> 'int *' lvalue ParmVar 0x13400dd88 'sizep' 'int *'     | `-ImplicitCastExpr 0x134029f18 <col:14> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x134029ef8 <col:14> 'int' lvalue Var 0x13400df80 'dt_size' 'int'     |-ReturnStmt 0x134029f88 <line:42:5, col:12>     | `-ImplicitCastExpr 0x134029f70 <col:12> 'void *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x134029f50 <col:12> 'void *' contains-errors lvalue Var 0x13400e148 'fdt' 'void *'     |-LabelStmt 0x13402a110 <line:44:1, line:45:15> 'fail'     | `-CallExpr 0x13402a0d0 <col:5, col:15> 'int' contains-errors     |   |-ImplicitCastExpr 0x13402a0b8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13402a078 <col:5> 'int ()' Function 0x134029fc0 'g_free' 'int ()'     |   `-ImplicitCastExpr 0x13402a0f8 <col:12> 'void *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x13402a098 <col:12> 'void *' contains-errors lvalue Var 0x13400e148 'fdt' 'void *'     `-ReturnStmt 0x13402a168 <line:46:5, col:12>       `-RecoveryExpr 0x13402a148 <col:12> '<dependent type>' contains-errors lvalue ","19544":"`-FunctionDecl 0x145128288  line:1:12 invalid php_snmp_write_oid_output_format 'int (int *, int *)' static   |-ParmVarDecl 0x145128128 <col:45, col:62> col:62 referenced invalid snmp_object 'int *'   |-ParmVarDecl 0x1451281a8 <col:75, col:81> col:81 referenced invalid newval 'int *'   `-CompoundStmt 0x1458092c0 <line:2:1, line:31:1>     |-DeclStmt 0x1451283f8 <line:4:2, col:19>     | `-VarDecl 0x145128358 <col:2, col:12> col:6 used ret 'int' cinit     |   `-RecoveryExpr 0x1451283d8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x145808b30 <line:5:2, line:10:2>     | |-BinaryOperator 0x145128630 <line:5:6, col:26> 'int' contains-errors '!='     | | |-CallExpr 0x1451285b0 <col:6, col:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x145128570 <col:6> 'int ()' Function 0x1451284b8 'Z_TYPE_P' 'int ()'     | | | `-RecoveryExpr 0x145128590 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x145128610 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145808b08 <col:35, line:10:2>     |   |-CallExpr 0x145808838 <line:7:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x145128780 <col:3> 'int ()' Function 0x1451286c8 'zval_copy_ctor' 'int ()'     |   | `-UnaryOperator 0x145808820 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x145808800 <col:19> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1458089f0 <line:8:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x145808940 <col:3> 'int ()' Function 0x145808888 'convert_to_long' 'int ()'     |   | `-UnaryOperator 0x1458089d8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1458089b8 <col:20> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x145808ae8 <line:9:3, col:13> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x145808a38 <col:3> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x145808a18 <col:3> 'int *' lvalue ParmVar 0x1451281a8 'newval' 'int *'     |     `-UnaryOperator 0x145808ad0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x145808ab0 <col:13> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x145808c98 <line:12:2, line:25:2>     | |-CallExpr 0x145808c70 <line:12:9, col:24> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x145808c30 <col:9> 'int ()' Function 0x145808b78 'Z_LVAL_P' 'int ()'     | | `-RecoveryExpr 0x145808c50 <col:18> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145809088 <col:27, line:25:2>     |   |-BinaryOperator 0x145808e48 <line:19:4, col:52> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x145808d98 <col:4, col:17> '<dependent type>' contains-errors lvalue ->oid_output_format     |   | | `-RecoveryExpr 0x145808d70 <col:4> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x145808d50 <col:4> 'int *' lvalue ParmVar 0x145128128 'snmp_object' 'int *'     |   | `-CallExpr 0x145808e20 <col:37, col:52> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x145808de0 <col:37> 'int ()' Function 0x145808b78 'Z_LVAL_P' 'int ()'     |   |   `-RecoveryExpr 0x145808e00 <col:46> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x145808e68 <line:20:4>     |   |-DefaultStmt 0x145809040 <line:21:3, col:10>     |   | `-NullStmt 0x145809038 <col:10>     |   `-BreakStmt 0x145809080 <line:24:4>     |-IfStmt 0x145809258 <line:27:2, line:29:2>     | |-RecoveryExpr 0x1458090d8 <line:27:6, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x145809240 <col:23, line:29:2>     |   `-CallExpr 0x145809218 <line:28:3, col:19> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1458091d8 <col:3> 'int ()' Function 0x145809120 'zval_dtor' 'int ()'     |     `-RecoveryExpr 0x1458091f8 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1458092b0 <line:30:2, col:9>       `-ImplicitCastExpr 0x145809298 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x145809278 <col:9> 'int' contains-errors lvalue Var 0x145128358 'ret' 'int' ","19206":"`-FunctionDecl 0x14e1281f8  line:1:30 invalid pdfConformanceFromString 'int (int *)' static   |-ParmVarDecl 0x14e128128 <col:55, col:66> col:66 invalid pdfSubtypeVersion 'int *'   `-CompoundStmt 0x14e141ae8 <col:85, line:33:1>     |-RecoveryExpr 0x14e1282d8 <line:3:3> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14e141ac8 <line:8:3, line:30:3>       |-RecoveryExpr 0x14e128310 <line:8:7> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14e141ab0 <col:51, line:30:3>         `-IfStmt 0x14e141a80 <line:12:5, line:28:5> has_else           |-BinaryOperator 0x14e128518 <line:12:9, col:27> 'int' contains-errors '=='           | |-CallExpr 0x14e1284f0 <col:9, col:24> '<dependent type>' contains-errors           | | |-CXXDependentScopeMemberExpr 0x14e1284a8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->cmp           | | | `-RecoveryExpr 0x14e128488 <col:9> '<dependent type>' contains-errors lvalue           | | `-StringLiteral 0x14e128400 <col:19> 'char[4]' lvalue \"STR\"           | `-IntegerLiteral 0x14e128448 <col:27> 'int' 0           |-CompoundStmt 0x14e128550 <col:30, line:14:5>           `-IfStmt 0x14e141a50 <col:12, line:28:5> has_else             |-BinaryOperator 0x14e1286d8 <line:14:16, col:34> 'int' contains-errors '=='             | |-CallExpr 0x14e1286b0 <col:16, col:31> '<dependent type>' contains-errors             | | |-CXXDependentScopeMemberExpr 0x14e128668 <col:16, col:22> '<dependent type>' contains-errors lvalue ->cmp             | | | `-RecoveryExpr 0x14e128648 <col:16> '<dependent type>' contains-errors lvalue             | | `-StringLiteral 0x14e1285c0 <col:26> 'char[4]' lvalue \"STR\"             | `-IntegerLiteral 0x14e128608 <col:34> 'int' 0             |-CompoundStmt 0x14e1286f8 <col:37, line:16:5>             `-IfStmt 0x14e141a20 <col:12, line:28:5> has_else               |-RecoveryExpr 0x14e128748 <line:16:16, col:34> '_Bool' contains-errors               |-CompoundStmt 0x14e128768 <col:37, line:18:5>               `-IfStmt 0x14e1419f0 <col:12, line:28:5> has_else                 |-RecoveryExpr 0x14e1287b8 <line:18:16, col:34> '_Bool' contains-errors                 |-CompoundStmt 0x14e1287d8 <col:37, line:20:5>                 `-IfStmt 0x14e1419c0 <col:12, line:28:5> has_else                   |-RecoveryExpr 0x14e141840 <line:20:16, col:34> '_Bool' contains-errors                   |-CompoundStmt 0x14e141860 <col:37, line:22:5>                   `-IfStmt 0x14e141990 <col:12, line:28:5> has_else                     |-RecoveryExpr 0x14e1418b0 <line:22:16, col:34> '_Bool' contains-errors                     |-CompoundStmt 0x14e1418d0 <col:37, line:24:5>                     `-IfStmt 0x14e141960 <col:12, line:28:5> has_else                       |-RecoveryExpr 0x14e141920 <line:24:16, col:34> '_Bool' contains-errors                       |-CompoundStmt 0x14e141940 <col:37, line:26:5>                       `-CompoundStmt 0x14e141950 <col:12, line:28:5> ","19150":"`-FunctionDecl 0x1558455a8  line:1:12 fdc_pre_load 'int (void *)' static   |-ParmVarDecl 0x1558454d8 <col:25, col:31> col:31 used opaque 'void *'   `-CompoundStmt 0x155845738 <line:2:1, line:6:1>     `-ReturnStmt 0x155845728 <line:5:5, col:12>       `-IntegerLiteral 0x155845708 <col:12> 'int' 0 ","19412":"`-FunctionDecl 0x13b140ab8  line:2:28 cache_kset 'struct kset *(struct kmem_cache *)' static inline   |-ParmVarDecl 0x13b1286e8 <col:39, col:58> col:58 s 'struct kmem_cache *'   `-CompoundStmt 0x13b140c10 <line:3:1, line:8:19>     `-ReturnStmt 0x13b140c00 <col:2, col:9>       `-RecoveryExpr 0x13b140be0 <col:9> '<dependent type>' contains-errors lvalue ","19413":"`-FunctionDecl 0x122928750  line:1:13 tun_free_netdev 'void (struct net_device *)' static   |-ParmVarDecl 0x122928648 <col:29, col:48> col:48 used dev 'struct net_device *'   `-CompoundStmt 0x122940fe8 <line:2:1, line:6:1>     |-DeclStmt 0x122940e48 <line:3:2, col:43>     | |-RecordDecl 0x122940a48 <col:2, col:9> col:9 struct tun_struct     | `-VarDecl 0x122940bb8 <col:2, col:42> col:21 used tun 'struct tun_struct *' cinit     |   `-ImplicitCastExpr 0x122940e18 <col:27, col:42> 'struct tun_struct *' <IntegralToPointer>     |     `-CallExpr 0x122940dd8 <col:27, col:42> 'int'     |       |-ImplicitCastExpr 0x122940dc0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x122940d50 <col:27> 'int ()' Function 0x122940c98 'netdev_priv' 'int ()'     |       `-ImplicitCastExpr 0x122940e00 <col:39> 'struct net_device *' <LValueToRValue>     |         `-DeclRefExpr 0x122940d70 <col:39> 'struct net_device *' lvalue ParmVar 0x122928648 'dev' 'struct net_device *'     `-CallExpr 0x122940fc0 <line:5:2, col:18> '<dependent type>' contains-errors       |-DeclRefExpr 0x122940f40 <col:2> 'int ()' Function 0x122940e88 'sock_put' 'int ()'       `-RecoveryExpr 0x122940f98 <col:11, col:16> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x122940f60 <col:11> 'struct tun_struct *' lvalue Var 0x122940bb8 'tun' 'struct tun_struct *' ","19785":"`-FunctionDecl 0x12c027c70  col:6 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12c027d70 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12c027dd8 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12c027e40 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12c027d18 <<invalid sloc>> Implicit 883 ","20074":"`-FunctionDecl 0x154140a88  line:1:12 vt_io_ioctl 'int (struct vc_data *, unsigned int, int)' static   |-ParmVarDecl 0x154128648 <col:24, col:40> col:40 used vc 'struct vc_data *'   |-ParmVarDecl 0x1541286c8 <col:44, col:57> col:57 used cmd 'unsigned int'   |-ParmVarDecl 0x154128740 <col:62, col:67> col:67 __user 'int'   `-CompoundStmt 0x1541444c8 <line:3:1, line:80:1>     |-DeclStmt 0x154140d08 <line:4:2, col:27>     | |-RecordDecl 0x154140b90 <col:2, col:9> col:9 struct console_font_op     | `-VarDecl 0x154140c88 <col:2, col:25> col:25 referenced invalid op 'struct console_font_op'     |-SwitchStmt 0x154140d58 <line:6:2, line:77:2>     | |-ImplicitCastExpr 0x154140d40 <line:6:10> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x154140d20 <col:10> 'unsigned int' lvalue ParmVar 0x1541286c8 'cmd' 'unsigned int'     | `-CompoundStmt 0x154144400 <col:15, line:77:2>     |   |-IfStmt 0x154140ef0 <line:8:3, line:9:12>     |   | |-UnaryOperator 0x154140e30 <line:8:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x154140e18 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x154140df8 <col:8> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x154140ee0 <line:9:4, col:12>     |   |   `-UnaryOperator 0x154140ec8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x154140eb0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x154140e90 <col:12> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x154140ff8 <line:10:3, col:11> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x154140f58 <col:3, col:6> '<dependent type>' contains-errors lvalue .op     |   | | `-RecoveryExpr 0x154140f30 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x154140f10 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-RecoveryExpr 0x154140fd8 <col:11> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x154141178 <line:11:3, col:33> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x154141060 <col:3, col:6> '<dependent type>' contains-errors lvalue .flags     |   | | `-RecoveryExpr 0x154141038 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x154141018 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-BinaryOperator 0x154141158 <col:14, col:33> '<dependent type>' contains-errors '|'     |   |   |-RecoveryExpr 0x154141118 <col:14> '<dependent type>' contains-errors lvalue     |   |   `-RecoveryExpr 0x154141138 <col:33> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x154141248 <line:12:3, col:14> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1541411e0 <col:3, col:6> '<dependent type>' contains-errors lvalue .width     |   | | `-RecoveryExpr 0x1541411b8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x154141198 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-IntegerLiteral 0x154141228 <col:14> 'int' 8     |   |-BinaryOperator 0x154141318 <line:13:3, col:15> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1541412b0 <col:3, col:6> '<dependent type>' contains-errors lvalue .height     |   | | `-RecoveryExpr 0x154141288 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x154141268 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-IntegerLiteral 0x1541412f8 <col:15> 'int' 0     |   |-BinaryOperator 0x1541413e8 <line:14:3, col:18> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x154141380 <col:3, col:6> '<dependent type>' contains-errors lvalue .charcount     |   | | `-RecoveryExpr 0x154141358 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x154141338 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-IntegerLiteral 0x1541413c8 <col:18> 'int' 256     |   |-BinaryOperator 0x1541414f0 <line:15:3, col:13> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x154141450 <col:3, col:6> '<dependent type>' contains-errors lvalue .data     |   | | `-RecoveryExpr 0x154141428 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x154141408 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-RecoveryExpr 0x1541414d0 <col:13> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1541417a8 <line:19:3, col:11> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x154141708 <col:3, col:6> '<dependent type>' contains-errors lvalue .op     |   | | `-RecoveryExpr 0x1541416e0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1541416c0 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-RecoveryExpr 0x154141788 <col:11> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1541418b0 <line:20:3, col:14> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x154141810 <col:3, col:6> '<dependent type>' contains-errors lvalue .flags     |   | | `-RecoveryExpr 0x1541417e8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1541417c8 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-RecoveryExpr 0x154141890 <col:14> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x154141980 <line:21:3, col:14> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x154141918 <col:3, col:6> '<dependent type>' contains-errors lvalue .width     |   | | `-RecoveryExpr 0x1541418f0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1541418d0 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-IntegerLiteral 0x154141960 <col:14> 'int' 8     |   |-BinaryOperator 0x154143468 <line:22:3, col:15> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x154143400 <col:3, col:6> '<dependent type>' contains-errors lvalue .height     |   | | `-RecoveryExpr 0x1541419c0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1541419a0 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-IntegerLiteral 0x154143448 <col:15> 'int' 32     |   |-BinaryOperator 0x154143538 <line:23:3, col:18> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1541434d0 <col:3, col:6> '<dependent type>' contains-errors lvalue .charcount     |   | | `-RecoveryExpr 0x1541434a8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x154143488 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-IntegerLiteral 0x154143518 <col:18> 'int' 256     |   |-BinaryOperator 0x154143640 <line:24:3, col:13> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1541435a0 <col:3, col:6> '<dependent type>' contains-errors lvalue .data     |   | | `-RecoveryExpr 0x154143578 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x154143558 <col:3> 'struct console_font_op' lvalue Var 0x154140c88 'op' 'struct console_font_op'     |   | `-RecoveryExpr 0x154143620 <col:13> '<dependent type>' contains-errors lvalue     |   |-ReturnStmt 0x154143c18 <line:47:3, col:29>     |   | `-CallExpr 0x154143bf0 <col:10, col:29> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x154143b98 <col:10> 'int ()' Function 0x154143ae0 'vt_io_fontreset' 'int ()'     |   |   `-UnaryOperator 0x154143bd8 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x154143bb8 <col:27> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1541441f8 <line:68:3, col:22> 'int'     |   | |-ImplicitCastExpr 0x1541441e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x154144168 <col:3> 'int ()' Function 0x1541440b0 'con_clear_unimap' 'int ()'     |   | `-ImplicitCastExpr 0x154144220 <col:20> 'struct vc_data *' <LValueToRValue>     |   |   `-DeclRefExpr 0x154144188 <col:20> 'struct vc_data *' lvalue ParmVar 0x154128648 'vc' 'struct vc_data *'     |   |-BreakStmt 0x154144238 <line:69:3>     |   `-DefaultStmt 0x154144388 <line:75:2, col:9>     |     `-NullStmt 0x154144380 <col:9>     `-ReturnStmt 0x1541444b8 <line:79:2, col:9>       `-IntegerLiteral 0x154144498 <col:9> 'int' 0 ","20150":"`-FunctionDecl 0x13b00dfa8  line:1:19 copy_fs_struct 'struct fs_struct *(struct fs_struct *)'   |-ParmVarDecl 0x13b00de18 <col:34, col:52> col:52 used old 'struct fs_struct *'   `-CompoundStmt 0x13b0268e0 <line:2:1, line:4:1>     `-ReturnStmt 0x13b0268d0 <line:3:2, col:29>       `-ImplicitCastExpr 0x13b00e298 <col:9, col:29> 'struct fs_struct *' <IntegralToPointer>         `-CallExpr 0x13b00e258 <col:9, col:29> 'int'           |-ImplicitCastExpr 0x13b00e240 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x13b00e1d0 <col:9> 'int ()' Function 0x13b00e118 '__copy_fs_struct' 'int ()'           `-ImplicitCastExpr 0x13b00e280 <col:26> 'struct fs_struct *' <LValueToRValue>             `-DeclRefExpr 0x13b00e1f0 <col:26> 'struct fs_struct *' lvalue ParmVar 0x13b00de18 'old' 'struct fs_struct *' ","19999":"`-FunctionDecl 0x136928750  line:1:13 aio_fsync_work 'void (struct work_struct *)' static   |-ParmVarDecl 0x136928648 <col:28, col:48> col:48 used work 'struct work_struct *'   `-CompoundStmt 0x1369413c8 <line:2:1, line:9:1>     |-DeclStmt 0x136940dc8 <line:3:2, col:70>     | |-RecordDecl 0x136940a48 <col:2, col:9> col:9 struct fsync_iocb     | `-VarDecl 0x136940bb8 <col:2, col:21> col:21 used req 'struct fsync_iocb *'     |-DeclStmt 0x136940e60 <line:4:2, col:9>     | `-VarDecl 0x136940df8 <col:2, col:6> col:6 used ret 'int'     |-BinaryOperator 0x136941088 <line:6:2, col:42> 'int' contains-errors '='     | |-DeclRefExpr 0x136940e78 <col:2> 'int' lvalue Var 0x136940df8 'ret' 'int'     | `-CallExpr 0x136941058 <col:8, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x136940f78 <col:8> 'int ()' Function 0x136940ec0 'vfs_fsync' 'int ()'     |   |-RecoveryExpr 0x136940fd0 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x136940f98 <col:18> 'struct fsync_iocb *' lvalue Var 0x136940bb8 'req' 'struct fsync_iocb *'     |   `-RecoveryExpr 0x136941030 <col:29, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x136940ff8 <col:29> 'struct fsync_iocb *' lvalue Var 0x136940bb8 'req' 'struct fsync_iocb *'     `-CallExpr 0x136941208 <line:7:2, col:16> '<dependent type>' contains-errors       |-DeclRefExpr 0x136941188 <col:2> 'int ()' Function 0x1369410d0 'fput' 'int ()'       `-RecoveryExpr 0x1369411e0 <col:7, col:12> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x1369411a8 <col:7> 'struct fsync_iocb *' lvalue Var 0x136940bb8 'req' 'struct fsync_iocb *' ","20031":"`-FunctionDecl 0x154128138  col:12 invalid range 'int ()' ","19375":"`-FunctionDecl 0x155140b48  line:1:12 sr9700_rx_fixup 'int (struct usbnet *, struct sk_buff *)' static   |-ParmVarDecl 0x155128648 <col:28, col:43> col:43 used dev 'struct usbnet *'   |-ParmVarDecl 0x155140a28 <col:48, col:64> col:64 used skb 'struct sk_buff *'   `-CompoundStmt 0x1551435e0 <line:2:1, line:47:1>     |-DeclStmt 0x155140d40 <line:3:2, col:24>     | `-VarDecl 0x155140cd8 <col:2, col:18> col:18 used sr_skb 'struct sk_buff *'     |-DeclStmt 0x155140dd8 <line:4:2, col:9>     | `-VarDecl 0x155140d70 <col:2, col:6> col:6 used len 'int'     |-IfStmt 0x1551412b0 <line:7:2, line:10:2>     | |-CallExpr 0x155141040 <line:7:6, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x155140f20 <col:6> 'int ()' Function 0x155140e68 'unlikely' 'int ()'     | | `-BinaryOperator 0x155141020 <col:15, col:26> 'int' contains-errors '<'     | |   |-RecoveryExpr 0x155140f78 <col:15, col:20> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x155140f40 <col:15> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     | |   `-RecoveryExpr 0x155141000 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x155141290 <col:43, line:10:2>     |   |-CallExpr 0x155141230 <line:8:3, col:29> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x155141148 <col:3> 'int ()' Function 0x155141090 'netdev_err' 'int ()'     |   | |-RecoveryExpr 0x1551411a0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x155141168 <col:14> 'struct usbnet *' lvalue ParmVar 0x155128648 'dev' 'struct usbnet *'     |   | `-StringLiteral 0x155141210 <col:24> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x155141280 <line:9:3, col:10>     |     `-IntegerLiteral 0x155141260 <col:10> 'int' 0     |-WhileStmt 0x155143590 <line:13:2, line:44:2>     | |-BinaryOperator 0x155141388 <line:13:9, col:20> 'int' contains-errors '>'     | | |-RecoveryExpr 0x155141308 <col:9, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1551412d0 <col:9> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     | | `-RecoveryExpr 0x155141368 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x155143530 <col:36, line:44:2>     |   |-IfStmt 0x1551414d0 <line:14:3, line:15:11>     |   | |-BinaryOperator 0x155141480 <line:14:7, col:23> 'int' contains-errors '!='     |   | | |-ArraySubscriptExpr 0x155141440 <col:7, col:18> '<dependent type>' contains-errors lvalue     |   | | | |-ImplicitCastExpr 0x155141428 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     |   | | | | `-RecoveryExpr 0x1551413e0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x1551413a8 <col:7> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   | | | `-IntegerLiteral 0x155141408 <col:17> 'int' 0     |   | | `-IntegerLiteral 0x155141460 <col:23> 'int' 64     |   | `-ReturnStmt 0x1551414c0 <line:15:4, col:11>     |   |   `-IntegerLiteral 0x1551414a0 <col:11> 'int' 0     |   |-BinaryOperator 0x155141760 <line:18:3, col:48> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1551414f0 <col:3> 'int' lvalue Var 0x155140d70 'len' 'int'     |   | `-BinaryOperator 0x155141740 <col:9, col:48> '<dependent type>' contains-errors '-'     |   |   |-ParenExpr 0x155141700 <col:9, col:44> '<dependent type>' contains-errors     |   |   | `-BinaryOperator 0x1551416e0 <col:10, col:43> '<dependent type>' contains-errors '|'     |   |   |   |-ArraySubscriptExpr 0x1551415a8 <col:10, col:21> '<dependent type>' contains-errors lvalue     |   |   |   | |-ImplicitCastExpr 0x155141590 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   |   |   | | `-RecoveryExpr 0x155141548 <col:10, col:15> '<dependent type>' contains-errors lvalue     |   |   |   | |   `-DeclRefExpr 0x155141510 <col:10> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   |   | `-IntegerLiteral 0x155141570 <col:20> 'int' 1     |   |   |   `-ParenExpr 0x1551416c0 <col:25, col:43> '<dependent type>' contains-errors     |   |   |     `-BinaryOperator 0x1551416a0 <col:26, col:42> '<dependent type>' contains-errors '<<'     |   |   |       |-ArraySubscriptExpr 0x155141660 <col:26, col:37> '<dependent type>' contains-errors lvalue     |   |   |       | |-ImplicitCastExpr 0x155141648 <col:26, col:31> '<dependent type>' contains-errors <LValueToRValue>     |   |   |       | | `-RecoveryExpr 0x155141600 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   |   |       | |   `-DeclRefExpr 0x1551415c8 <col:26> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   |       | `-IntegerLiteral 0x155141628 <col:36> 'int' 2     |   |   |       `-IntegerLiteral 0x155141680 <col:42> 'int' 8     |   |   `-IntegerLiteral 0x155141720 <col:48> 'int' 4     |   |-IfStmt 0x155141848 <line:20:3, line:21:11>     |   | |-BinaryOperator 0x1551417f8 <line:20:7, col:13> 'int' contains-errors '>'     |   | | |-DeclRefExpr 0x155141780 <col:7> 'int' lvalue Var 0x155140d70 'len' 'int'     |   | | `-RecoveryExpr 0x1551417d8 <col:13> '<dependent type>' contains-errors lvalue     |   | `-ReturnStmt 0x155141838 <line:21:4, col:11>     |   |   `-IntegerLiteral 0x155141818 <col:11> 'int' 0     |   |-IfStmt 0x155142d08 <line:24:3, line:30:3>     |   | |-RecoveryExpr 0x155141920 <line:24:7, col:40> '_Bool' contains-errors     |   | `-CompoundStmt 0x155142cd8 <col:43, line:30:3>     |   |   |-CallExpr 0x155142968 <line:25:4, col:19> 'int'     |   |   | |-ImplicitCastExpr 0x155142950 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x1551428b8 <col:4> 'int ()' Function 0x155142800 'skb_pull' 'int ()'     |   |   | |-ImplicitCastExpr 0x155142998 <col:13> 'struct sk_buff *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x1551428d8 <col:13> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   | `-IntegerLiteral 0x1551428f8 <col:18> 'int' 3     |   |   |-BinaryOperator 0x155142a30 <line:26:4, col:15> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x1551429e8 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x1551429b0 <col:4> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   | `-DeclRefExpr 0x155142a10 <col:15> 'int' lvalue Var 0x155140d70 'len' 'int'     |   |   |-CallExpr 0x155142ba8 <line:27:4, col:33> 'int'     |   |   | |-ImplicitCastExpr 0x155142b90 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x155142b30 <col:4> 'int ()' Function 0x155142a78 'skb_set_tail_pointer' 'int ()'     |   |   | |-ImplicitCastExpr 0x155142bd8 <col:25> 'struct sk_buff *' <LValueToRValue>     |   |   | | `-DeclRefExpr 0x155142b50 <col:25> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   | `-ImplicitCastExpr 0x155142bf0 <col:30> 'int' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x155142b70 <col:30> 'int' lvalue Var 0x155140d70 'len' 'int'     |   |   `-ReturnStmt 0x155142cc8 <line:29:4, col:11>     |   |     `-IntegerLiteral 0x155142ca8 <col:11> 'int' 2     |   |-BinaryOperator 0x155142f20 <line:33:3, col:37> 'struct sk_buff *' contains-errors '='     |   | |-DeclRefExpr 0x155142d28 <col:3> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-CallExpr 0x155142ef0 <col:12, col:37> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x155142e28 <col:12> 'int ()' Function 0x155142d70 'skb_clone' 'int ()'     |   |   |-DeclRefExpr 0x155142e48 <col:22> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   `-RecoveryExpr 0x155142ed0 <col:27> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x155142fc0 <line:34:3, line:35:11>     |   | |-UnaryOperator 0x155142f78 <line:34:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x155142f60 <col:8> 'struct sk_buff *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x155142f40 <col:8> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-ReturnStmt 0x155142fb0 <line:35:4, col:11>     |   |   `-IntegerLiteral 0x155142f90 <col:11> 'int' 0     |   |-BinaryOperator 0x155143060 <line:37:3, col:17> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x155143018 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x155142fe0 <col:3> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-DeclRefExpr 0x155143040 <col:17> 'int' lvalue Var 0x155140d70 'len' 'int'     |   |-BinaryOperator 0x155143180 <line:38:3, col:30> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1551430b8 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x155143080 <col:3> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-BinaryOperator 0x155143160 <col:18, col:30> '<dependent type>' contains-errors '+'     |   |   |-RecoveryExpr 0x155143118 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x1551430e0 <col:18> 'struct sk_buff *' lvalue ParmVar 0x155140a28 'skb' 'struct sk_buff *'     |   |   `-IntegerLiteral 0x155143140 <col:30> 'int' 3     |   |-CallExpr 0x155143218 <line:39:3, col:35> 'int'     |   | |-ImplicitCastExpr 0x155143200 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1551431a0 <col:3> 'int ()' Function 0x155142a78 'skb_set_tail_pointer' 'int ()'     |   | |-ImplicitCastExpr 0x155143248 <col:24> 'struct sk_buff *' <LValueToRValue>     |   | | `-DeclRefExpr 0x1551431c0 <col:24> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     |   | `-ImplicitCastExpr 0x155143260 <col:32> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x1551431e0 <col:32> 'int' lvalue Var 0x155140d70 'len' 'int'     |   `-CallExpr 0x155143470 <line:41:3, col:32> 'int'     |     |-ImplicitCastExpr 0x155143458 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1551433f8 <col:3> 'int ()' Function 0x155143340 'usbnet_skb_return' 'int ()'     |     |-ImplicitCastExpr 0x1551434a0 <col:21> 'struct usbnet *' <LValueToRValue>     |     | `-DeclRefExpr 0x155143418 <col:21> 'struct usbnet *' lvalue ParmVar 0x155128648 'dev' 'struct usbnet *'     |     `-ImplicitCastExpr 0x1551434b8 <col:26> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x155143438 <col:26> 'struct sk_buff *' lvalue Var 0x155140cd8 'sr_skb' 'struct sk_buff *'     `-ReturnStmt 0x1551435d0 <line:46:2, col:9>       `-IntegerLiteral 0x1551435b0 <col:9> 'int' 0 ","19420":"`-FunctionDecl 0x15100e350  line:1:13 referenced delayed_mntput 'void (struct work_struct *)' static   |-ParmVarDecl 0x15100e248 <col:28, col:48> col:48 unused 'struct work_struct *'   `-CompoundStmt 0x151027158 <line:2:1, line:8:1>     |-DeclStmt 0x151026b10 <line:3:2, col:63>     | |-RecordDecl 0x151026648 <col:2, col:9> col:9 struct llist_node     | `-VarDecl 0x1510267b8 <col:2, col:62> col:21 used node 'struct llist_node *' cinit     |   `-ImplicitCastExpr 0x151026ae0 <col:28, col:62> 'struct llist_node *' <IntegralToPointer>     |     `-CallExpr 0x151026ab8 <col:28, col:62> 'int'     |       |-ImplicitCastExpr 0x151026aa0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x151026950 <col:28> 'int ()' Function 0x151026898 'llist_del_all' 'int ()'     |       `-UnaryOperator 0x151026a50 <col:42, col:43> 'void (*)(struct work_struct *)' prefix '&' cannot overflow     |         `-DeclRefExpr 0x1510269c8 <col:43> 'void (struct work_struct *)' Function 0x15100e350 'delayed_mntput' 'void (struct work_struct *)'     |-DeclStmt 0x151026db0 <line:4:2, col:21>     | |-RecordDecl 0x151026b28 <col:2, col:9> col:9 struct mount     | |-VarDecl 0x151026c98 <col:2, col:16> col:16 used m 'struct mount *'     | `-VarDecl 0x151026d28 <col:2, col:20> col:20 used t 'struct mount *'     |-CallExpr 0x151026fa0 <line:6:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151026ea8 <col:2> 'int ()' Function 0x151026df0 'llist_for_each_entry_safe' 'int ()'     | |-DeclRefExpr 0x151026ec8 <col:28> 'struct mount *' lvalue Var 0x151026c98 'm' 'struct mount *'     | |-DeclRefExpr 0x151026ee8 <col:31> 'struct mount *' lvalue Var 0x151026d28 't' 'struct mount *'     | |-DeclRefExpr 0x151026f08 <col:34> 'struct llist_node *' lvalue Var 0x1510267b8 'node' 'struct llist_node *'     | `-RecoveryExpr 0x151026f80 <col:40> '<dependent type>' contains-errors lvalue     `-CallExpr 0x151027118 <line:7:3, col:16> 'int'       |-ImplicitCastExpr 0x151027100 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1510270c0 <col:3> 'int ()' Function 0x151027008 'cleanup_mnt' 'int ()'       `-ImplicitCastExpr 0x151027140 <col:15> 'struct mount *' <LValueToRValue>         `-DeclRefExpr 0x1510270e0 <col:15> 'struct mount *' lvalue Var 0x151026c98 'm' 'struct mount *' ","19809":"`-FunctionDecl 0x14081f088  line:1:1 invalid __nlmsg_put 'int (struct sk_buff *, int, int, int, int, int)'   |-ParmVarDecl 0x141103248 <col:13, col:29> col:29 used skb 'struct sk_buff *'   |-ParmVarDecl 0x1411032e0 <col:34, col:38> col:38 invalid pid 'int'   |-ParmVarDecl 0x141103360 <col:43, col:47> col:47 invalid seq 'int'   |-ParmVarDecl 0x14081ee00 <col:52, col:56> col:56 used type 'int'   |-ParmVarDecl 0x14081ee80 <col:62, col:66> col:66 used len 'int'   |-ParmVarDecl 0x14081ef00 <col:71, col:75> col:75 used flags 'int'   `-CompoundStmt 0x14081fd90 <line:2:1, line:13:1>     |-DeclStmt 0x14081f348 <line:3:2, col:22>     | |-RecordDecl 0x14081f160 <col:2, col:9> col:9 struct nlmsghdr     | `-VarDecl 0x14081f2c8 <col:2, col:19> col:19 used nlh 'struct nlmsghdr *'     |-DeclStmt 0x14081f608 <line:4:2, col:30>     | `-VarDecl 0x14081f378 <col:2, col:29> col:6 used size 'int' cinit     |   `-CallExpr 0x14081f5c8 <col:13, col:29> 'int'     |     |-ImplicitCastExpr 0x14081f5b0 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14081f540 <col:13> 'int ()' Function 0x14081f488 'NLMSG_LENGTH' 'int ()'     |     `-ImplicitCastExpr 0x14081f5f0 <col:26> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14081f560 <col:26> 'int' lvalue ParmVar 0x14081ee80 'len' 'int'     |-BinaryOperator 0x14081f9f0 <line:6:2, col:56> 'struct nlmsghdr *' '='     | |-DeclRefExpr 0x14081f620 <col:2> 'struct nlmsghdr *' lvalue Var 0x14081f2c8 'nlh' 'struct nlmsghdr *'     | `-CStyleCastExpr 0x14081f9c8 <col:8, col:56> 'struct nlmsghdr *' <IntegralToPointer>     |   `-CallExpr 0x14081f8f0 <col:26, col:56> 'int'     |     |-ImplicitCastExpr 0x14081f8d8 <col:26> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14081f720 <col:26> 'int ()' Function 0x14081f668 'skb_put' 'int ()'     |     |-ImplicitCastExpr 0x14081f920 <col:34> 'struct sk_buff *' <LValueToRValue>     |     | `-DeclRefExpr 0x14081f740 <col:34> 'struct sk_buff *' lvalue ParmVar 0x141103248 'skb' 'struct sk_buff *'     |     `-CallExpr 0x14081f898 <col:39, col:55> 'int'     |       |-ImplicitCastExpr 0x14081f880 <col:39> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14081f840 <col:39> 'int ()' Function 0x14081f788 'NLMSG_ALIGN' 'int ()'     |       `-ImplicitCastExpr 0x14081f8c0 <col:51> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14081f860 <col:51> 'int' lvalue Var 0x14081f378 'size' 'int'     |-BinaryOperator 0x14081fa90 <line:7:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14081fa48 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14081fa10 <col:2> 'struct nlmsghdr *' lvalue Var 0x14081f2c8 'nlh' 'struct nlmsghdr *'     | `-DeclRefExpr 0x14081fa70 <col:20> 'int' lvalue ParmVar 0x14081ee00 'type' 'int'     |-BinaryOperator 0x14081fb30 <line:8:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14081fae8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14081fab0 <col:2> 'struct nlmsghdr *' lvalue Var 0x14081f2c8 'nlh' 'struct nlmsghdr *'     | `-DeclRefExpr 0x14081fb10 <col:19> 'int' lvalue Var 0x14081f378 'size' 'int'     |-BinaryOperator 0x14081fbd0 <line:9:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14081fb88 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14081fb50 <col:2> 'struct nlmsghdr *' lvalue Var 0x14081f2c8 'nlh' 'struct nlmsghdr *'     | `-DeclRefExpr 0x14081fbb0 <col:21> 'int' lvalue ParmVar 0x14081ef00 'flags' 'int'     |-BinaryOperator 0x14081fc70 <line:10:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14081fc28 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14081fbf0 <col:2> 'struct nlmsghdr *' lvalue Var 0x14081f2c8 'nlh' 'struct nlmsghdr *'     | `-RecoveryExpr 0x14081fc50 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14081fd10 <line:11:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14081fcc8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14081fc90 <col:2> 'struct nlmsghdr *' lvalue Var 0x14081f2c8 'nlh' 'struct nlmsghdr *'     | `-RecoveryExpr 0x14081fcf0 <col:19> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14081fd80 <line:12:2, col:9>       `-ImplicitCastExpr 0x14081fd68 <col:9> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x14081fd50 <col:9> 'struct nlmsghdr *' <LValueToRValue>           `-DeclRefExpr 0x14081fd30 <col:9> 'struct nlmsghdr *' lvalue Var 0x14081f2c8 'nlh' 'struct nlmsghdr *' ","19753":"`-FunctionDecl 0x12b80df18  line:1:23 invalid spl_filesystem_tree_get_iterator 'int *(int *, int *, int)'   |-ParmVarDecl 0x12b80dd28 <col:56, col:74> col:74 invalid ce 'int *'   |-ParmVarDecl 0x12b80dda8 <col:78, col:84> col:84 invalid object 'int *'   |-ParmVarDecl 0x12b80de28 <col:92, col:96> col:96 used by_ref 'int'   `-CompoundStmt 0x12c808fe0 <line:2:1, line:20:1>     |-IfStmt 0x12b80e2d8 <line:6:2, line:8:2>     | |-ImplicitCastExpr 0x12b80e028 <line:6:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x12b80e008 <col:6> 'int' lvalue ParmVar 0x12b80de28 'by_ref' 'int'     | `-CompoundStmt 0x12b80e2c0 <col:14, line:8:2>     |   `-CallExpr 0x12b80e290 <line:7:3, col:28> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12b80e1a0 <col:3> 'int ()' Function 0x12b80e0e8 'zend_error' 'int ()'     |     |-RecoveryExpr 0x12b80e270 <col:14> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x12b80e220 <col:23> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12c808e60 <line:13:2, line:16:2>     | |-BinaryOperator 0x12c808e10 <line:13:6, col:31> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x12c808da8 <col:6, col:23> '<dependent type>' contains-errors lvalue .data     | | | `-CXXDependentScopeMemberExpr 0x12c808d60 <col:6, col:16> '<dependent type>' contains-errors lvalue ->intern     | | |   `-RecoveryExpr 0x12c808d40 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c808df0 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c808e50 <col:37, line:16:2>     `-CallExpr 0x12c808fb8 <line:17:2, col:22> '<dependent type>' contains-errors       |-DeclRefExpr 0x12c808f60 <col:2> 'int ()' Function 0x12c808ea8 'zval_add_ref' 'int ()'       `-UnaryOperator 0x12c808fa0 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x12c808f80 <col:16> '<dependent type>' contains-errors lvalue ","19541":"`-FunctionDecl 0x14f0fadc8  line:1:15 invalid FromV8 'int (int)' static   |-ParmVarDecl 0x14f0facf0 <col:22, <invalid sloc>> col:24 invalid 'int'   `-CompoundStmt 0x14f114698 <line:3:61, line:22:3>     |-RecoveryExpr 0x14f0faea8 <line:5:5> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14f114668 <line:8:5, line:20:5> has_else       |-BinaryOperator 0x14f0fb290 <line:8:9, col:17> 'int' contains-errors '=='       | |-RecoveryExpr 0x14f0fb270 <col:9> '<dependent type>' contains-errors lvalue       | `-StringLiteral 0x14f0fb230 <col:17> 'char[4]' lvalue \"STR\"       |-CompoundStmt 0x14f0fb3c0 <col:24, line:10:5>       | `-BinaryOperator 0x14f0fb3a0 <line:9:7, col:14> '<dependent type>' contains-errors '='       |   |-UnaryOperator 0x14f0fb368 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow       |   | `-ImplicitCastExpr 0x14f0fb350 <col:8> '<dependent type>' contains-errors <LValueToRValue>       |   |   `-RecoveryExpr 0x14f0fb330 <col:8> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x14f0fb380 <col:14> '<dependent type>' contains-errors lvalue       `-IfStmt 0x14f114638 <line:10:12, line:20:5> has_else         |-BinaryOperator 0x14f114460 <line:10:16, col:24> 'int' contains-errors '=='         | |-RecoveryExpr 0x14f114440 <col:16> '<dependent type>' contains-errors lvalue         | `-StringLiteral 0x14f114400 <col:24> 'char[4]' lvalue \"STR\"         |-CompoundStmt 0x14f114590 <col:31, line:12:5>         | `-BinaryOperator 0x14f114570 <line:11:7, col:14> '<dependent type>' contains-errors '='         |   |-UnaryOperator 0x14f114538 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow         |   | `-ImplicitCastExpr 0x14f114520 <col:8> '<dependent type>' contains-errors <LValueToRValue>         |   |   `-RecoveryExpr 0x14f114500 <col:8> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x14f114550 <col:14> '<dependent type>' contains-errors lvalue         `-IfStmt 0x14f114608 <line:12:12, line:20:5> has_else           |-RecoveryExpr 0x14f1145c8 <line:12:16, col:24> '_Bool' contains-errors           |-CompoundStmt 0x14f1145e8 <col:31, line:18:5>           `-CompoundStmt 0x14f1145f8 <col:12, line:20:5> ","19465":"`-FunctionDecl 0x13002c2a8  col:14 implicit used sscanf 'int (const char *restrict, const char *restrict, ...)' extern   |-ParmVarDecl 0x13002c3a8 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-ParmVarDecl 0x13002c410 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-BuiltinAttr 0x13002c350 <<invalid sloc>> Implicit 913   `-FormatAttr 0x13002c488 <col:14> Implicit scanf 2 3 ","19154":"`-FunctionDecl 0x152940c48  line:1:1 invalid archive_mstring_get_wcs 'int (struct archive *, struct archive_mstring *, const int **)'   |-ParmVarDecl 0x152928648 <col:25, col:41> col:41 used a 'struct archive *'   |-ParmVarDecl 0x152940a28 <col:44, col:68> col:68 used aes 'struct archive_mstring *'   |-ParmVarDecl 0x152940b00 <line:2:5, col:21> col:21 invalid wp 'const int **'   `-CompoundStmt 0x152944110 <line:3:1, line:26:1>     |-DeclStmt 0x152940e40 <line:4:2, col:16>     | |-VarDecl 0x152940d20 <col:2, col:6> col:6 used r 'int'     | `-VarDecl 0x152940da0 <col:2, col:15> col:9 used ret 'int' cinit     |   `-IntegerLiteral 0x152940e08 <col:15> 'int' 0     |-CStyleCastExpr 0x152940ea0 <line:6:2, col:8> 'void' <ToVoid>     | `-ImplicitCastExpr 0x152940e88 <col:8> 'struct archive *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x152940e58 <col:8> 'struct archive *' lvalue ParmVar 0x152928648 'a' 'struct archive *'     |-IfStmt 0x152941140 <line:8:2, line:11:2>     | |-BinaryOperator 0x152940f80 <line:8:6, col:21> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x152940f00 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x152940ec8 <col:6> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     | | `-RecoveryExpr 0x152940f60 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152941120 <col:34, line:11:2>     |   |-BinaryOperator 0x152941098 <line:9:3, col:22> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x152940fd8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x152940fc0 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x152940fa0 <col:4> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x152941050 <col:9, col:22> '<dependent type>' contains-errors lvalue .s     |   |   `-RecoveryExpr 0x152941028 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x152940ff0 <col:9> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   `-ReturnStmt 0x152941110 <line:10:3, col:14>     |     `-ImplicitCastExpr 0x1529410f8 <col:10, col:14> 'int' <LValueToRValue>     |       `-ParenExpr 0x1529410d8 <col:10, col:14> 'int' lvalue     |         `-DeclRefExpr 0x1529410b8 <col:11> 'int' lvalue Var 0x152940da0 'ret' 'int'     |-BinaryOperator 0x152941268 <line:13:2, col:8> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x152941230 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x152941218 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x152941160 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x152941248 <col:8> '<dependent type>' contains-errors lvalue     |-IfStmt 0x152944088 <line:15:2, line:24:2>     | |-BinaryOperator 0x152941340 <line:15:6, col:21> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x1529412c0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x152941288 <col:6> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     | | `-RecoveryExpr 0x152941320 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x152944060 <col:34, line:24:2>     |   |-CallExpr 0x152941578 <line:16:3, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1529414c0 <col:3> 'int ()' Function 0x152941408 'archive_wstring_empty' 'int ()'     |   | `-UnaryOperator 0x152941560 <col:25, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-ParenExpr 0x152941540 <col:26, col:39> '<dependent type>' contains-errors lvalue     |   |     `-RecoveryExpr 0x152941518 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1529414e0 <col:27> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   |-BinaryOperator 0x1529418e0 <line:17:3, line:18:42> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1529415a0 <line:17:3> 'int' lvalue Var 0x152940d20 'r' 'int'     |   | `-CallExpr 0x1529418a8 <col:7, line:18:42> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1529416a0 <line:17:7> 'int ()' Function 0x1529415e8 'archive_wstring_append_from_mbs' 'int ()'     |   |   |-UnaryOperator 0x152941740 <col:39, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-ParenExpr 0x152941720 <col:40, col:53> '<dependent type>' contains-errors lvalue     |   |   |   `-RecoveryExpr 0x1529416f8 <col:41, col:46> '<dependent type>' contains-errors lvalue     |   |   |     `-DeclRefExpr 0x1529416c0 <col:41> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   |   |-CXXDependentScopeMemberExpr 0x1529417b8 <line:18:7, col:20> '<dependent type>' contains-errors lvalue .s     |   |   | `-RecoveryExpr 0x152941790 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x152941758 <col:7> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   |   `-CXXDependentScopeMemberExpr 0x152941860 <col:23, col:36> '<dependent type>' contains-errors lvalue .length     |   |     `-RecoveryExpr 0x152941838 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x152941800 <col:23> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |   `-IfStmt 0x152944030 <line:19:3, line:23:11> has_else     |     |-BinaryOperator 0x152941958 <line:19:7, col:12> 'int' '=='     |     | |-ImplicitCastExpr 0x152941940 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x152941900 <col:7> 'int' lvalue Var 0x152940d20 'r' 'int'     |     | `-IntegerLiteral 0x152941920 <col:12> 'int' 0     |     |-CompoundStmt 0x152943f98 <col:15, line:22:3>     |     | |-CompoundAssignOperator 0x152943e50 <line:20:4, col:20> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     | | |-RecoveryExpr 0x1529419b0 <col:4, col:9> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x152941978 <col:4> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |     | | `-RecoveryExpr 0x152943e30 <col:20> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x152943f78 <line:21:4, col:23> '<dependent type>' contains-errors '='     |     |   |-UnaryOperator 0x152943eb8 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   | `-ImplicitCastExpr 0x152943ea0 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |     |   |   `-RecoveryExpr 0x152943e80 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-CXXDependentScopeMemberExpr 0x152943f30 <col:10, col:23> '<dependent type>' contains-errors lvalue .s     |     |     `-RecoveryExpr 0x152943f08 <col:10, col:15> '<dependent type>' contains-errors lvalue     |     |       `-DeclRefExpr 0x152943ed0 <col:10> 'struct archive_mstring *' lvalue ParmVar 0x152940a28 'aes' 'struct archive_mstring *'     |     `-BinaryOperator 0x152944010 <line:23:4, col:11> 'int' '='     |       |-DeclRefExpr 0x152943fb8 <col:4> 'int' lvalue Var 0x152940da0 'ret' 'int'     |       `-UnaryOperator 0x152943ff8 <col:10, col:11> 'int' prefix '-'     |         `-IntegerLiteral 0x152943fd8 <col:11> 'int' 1     `-ReturnStmt 0x152944100 <line:25:2, col:13>       `-ImplicitCastExpr 0x1529440e8 <col:9, col:13> 'int' <LValueToRValue>         `-ParenExpr 0x1529440c8 <col:9, col:13> 'int' lvalue           `-DeclRefExpr 0x1529440a8 <col:10> 'int' lvalue Var 0x152940da0 'ret' 'int' ","19450":"`-FunctionDecl 0x1429281a8  line:1:7 uwsgi_chomp 'char *(char *)'   |-ParmVarDecl 0x1429280d8 <col:19, col:25> col:25 used str 'char *'   `-CompoundStmt 0x142928758 <col:30, line:16:1>     |-IfStmt 0x142928398 <line:3:2, line:4:10>     | |-UnaryOperator 0x142928338 <line:3:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142928320 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x142928300 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x142928388 <line:4:3, col:10>     |   `-ImplicitCastExpr 0x142928370 <col:10> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x142928350 <col:10> 'char *' lvalue ParmVar 0x1429280d8 'str' 'char *'     |-ForStmt 0x1429286d8 <line:6:2, line:13:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x142928480 <line:6:17, col:22> 'int' contains-errors '>='     | | |-RecoveryExpr 0x142928460 <col:17> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x142928420 <col:22> 'int' 0     | |-UnaryOperator 0x1429284f0 <col:25, col:26> '<dependent type>' contains-errors postfix '--' cannot overflow     | | `-RecoveryExpr 0x1429284d0 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1429286c0 <col:30, line:13:2>     |   `-IfStmt 0x142928690 <line:7:3, line:12:3> has_else     |     |-RecoveryExpr 0x1429285a8 <line:7:7, col:35> '_Bool' contains-errors     |     |-CompoundStmt 0x142928620 <col:41, line:9:3>     |     `-CompoundStmt 0x142928678 <line:10:8, line:12:3>     |       `-ReturnStmt 0x142928668 <line:11:4, col:11>     |         `-ImplicitCastExpr 0x142928650 <col:11> 'char *' <LValueToRValue>     |           `-DeclRefExpr 0x142928630 <col:11> 'char *' lvalue ParmVar 0x1429280d8 'str' 'char *'     `-ReturnStmt 0x142928748 <line:15:2, col:9>       `-ImplicitCastExpr 0x142928730 <col:9> 'char *' <LValueToRValue>         `-DeclRefExpr 0x142928710 <col:9> 'char *' lvalue ParmVar 0x1429280d8 'str' 'char *' ","19434":"`-FunctionDecl 0x14a008538  line:1:5 invalid nfc_data_exchange 'int (struct nfc_dev *, int, struct sk_buff *, int, void *)'   |-ParmVarDecl 0x15a128648 <col:23, col:39> col:39 used dev 'struct nfc_dev *'   |-ParmVarDecl 0x15a1286e0 <col:44, col:48> col:48 invalid target_idx 'int'   |-ParmVarDecl 0x14a0082c8 <col:60, col:76> col:76 used skb 'struct sk_buff *'   |-ParmVarDecl 0x14a008348 <line:2:9, col:28> col:28 invalid cb 'int'   |-ParmVarDecl 0x14a0083c8 <col:32, col:38> col:38 used cb_context 'void *'   `-CompoundStmt 0x15a142b38 <line:3:1, line:45:1>     |-DeclStmt 0x14a008688 <line:4:2, col:8>     | `-VarDecl 0x14a008620 <col:2, col:6> col:6 used rc 'int'     |-CallExpr 0x14a008aa0 <line:6:2, line:7:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a008800 <line:6:2> 'int ()' Function 0x14a008748 'pr_debug' 'int ()'     | |-StringLiteral 0x14a008860 <col:11> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x14a0089f8 <line:7:4, col:22> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14a008960 <col:4> 'int ()' Function 0x14a0088a8 'dev_name' 'int ()'     | | `-UnaryOperator 0x14a0089e0 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x14a0089b8 <col:14, col:19> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14a008980 <col:14> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | |-RecoveryExpr 0x14a008a20 <col:25> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a008a78 <col:37, col:42> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a008a40 <col:37> 'struct sk_buff *' lvalue ParmVar 0x14a0082c8 'skb' 'struct sk_buff *'     |-CallExpr 0x14a008c58 <line:9:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a008bc0 <col:2> 'int ()' Function 0x14a008b08 'device_lock' 'int ()'     | `-UnaryOperator 0x14a008c40 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14a008c18 <col:15, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a008be0 <col:15> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     |-IfStmt 0x14a009168 <line:11:2, line:15:2>     | |-UnaryOperator 0x14a008e20 <line:11:6, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14a008df8 <col:7, col:37> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14a008d60 <col:7> 'int ()' Function 0x14a008ca8 'device_is_registered' 'int ()'     | |   `-UnaryOperator 0x14a008de0 <col:28, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x14a008db8 <col:29, col:34> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14a008d80 <col:29> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | `-CompoundStmt 0x14a009140 <col:40, line:15:2>     |   |-BinaryOperator 0x14a008f10 <line:12:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14a008e38 <col:3> 'int' lvalue Var 0x14a008620 'rc' 'int'     |   | `-UnaryOperator 0x14a008ef8 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14a008ee0 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14a008ec0 <col:9> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14a009098 <line:13:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x14a009080 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14a009010 <col:3> 'int ()' Function 0x14a008f58 'kfree_skb' 'int ()'     |   | `-ImplicitCastExpr 0x14a0090c0 <col:13> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14a009030 <col:13> 'struct sk_buff *' lvalue ParmVar 0x14a0082c8 'skb' 'struct sk_buff *'     |   `-GotoStmt 0x14a009128 <line:14:3, col:8> 'error' 0x14a0090d8     |-IfStmt 0x15a142900 <line:17:2, line:39:2> has_else     | |-BinaryOperator 0x15a141958 <line:17:6, col:64> 'int' contains-errors '&&'     | | |-BinaryOperator 0x15a1418f8 <col:6, col:22> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x14a0091c0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x14a009188 <col:6> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | | | `-RecoveryExpr 0x15a1418d8 <col:22> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x15a141938 <col:42, col:64> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x15a141858 <col:42, col:47> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x15a141820 <col:42> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | |   `-RecoveryExpr 0x15a141918 <col:64> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x15a142508 <col:70, line:33:2>     | | |-IfStmt 0x15a141c30 <line:18:3, line:22:3>     | | | |-BinaryOperator 0x15a141a40 <line:18:7, col:34> 'int' contains-errors '!='     | | | | |-CXXDependentScopeMemberExpr 0x15a1419d8 <col:7, col:27> '<dependent type>' contains-errors lvalue ->idx     | | | | | `-RecoveryExpr 0x15a1419b0 <col:7, col:12> '<dependent type>' contains-errors lvalue     | | | | |   `-DeclRefExpr 0x15a141978 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | | | | `-RecoveryExpr 0x15a141a20 <col:34> '<dependent type>' contains-errors lvalue     | | | `-CompoundStmt 0x15a141c08 <col:46, line:22:3>     | | |   |-BinaryOperator 0x15a141b38 <line:19:4, col:10> 'int' contains-errors '='     | | |   | |-DeclRefExpr 0x15a141a60 <col:4> 'int' lvalue Var 0x14a008620 'rc' 'int'     | | |   | `-UnaryOperator 0x15a141b20 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     | | |   |   `-ImplicitCastExpr 0x15a141b08 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   |     `-RecoveryExpr 0x15a141ae8 <col:10> '<dependent type>' contains-errors lvalue     | | |   |-CallExpr 0x15a141bb0 <line:20:4, col:17> 'int'     | | |   | |-ImplicitCastExpr 0x15a141b98 <col:4> 'int (*)()' <FunctionToPointerDecay>     | | |   | | `-DeclRefExpr 0x15a141b58 <col:4> 'int ()' Function 0x14a008f58 'kfree_skb' 'int ()'     | | |   | `-ImplicitCastExpr 0x15a141bd8 <col:14> 'struct sk_buff *' <LValueToRValue>     | | |   |   `-DeclRefExpr 0x15a141b78 <col:14> 'struct sk_buff *' lvalue ParmVar 0x14a0082c8 'skb' 'struct sk_buff *'     | | |   `-GotoStmt 0x15a141bf0 <line:21:4, col:9> 'error' 0x14a0090d8     | | |-IfStmt 0x15a141e98 <line:24:3, line:25:41>     | | | |-CXXDependentScopeMemberExpr 0x15a141cb0 <line:24:7, col:17> '<dependent type>' contains-errors lvalue ->check_presence     | | | | `-RecoveryExpr 0x15a141c88 <col:7, col:12> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x15a141c50 <col:7> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | | | `-CallExpr 0x15a141e70 <line:25:4, col:41> '<dependent type>' contains-errors     | | |   |-DeclRefExpr 0x15a141dd8 <col:4> 'int ()' Function 0x15a141d20 'del_timer_sync' 'int ()'     | | |   `-UnaryOperator 0x15a141e58 <col:19, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |     `-RecoveryExpr 0x15a141e30 <col:20, col:25> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x15a141df8 <col:20> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | | `-BinaryOperator 0x15a1420a8 <line:27:3, line:28:21> 'int' contains-errors '='     | |   |-DeclRefExpr 0x15a141eb8 <line:27:3> 'int' lvalue Var 0x14a008620 'rc' 'int'     | |   `-CallExpr 0x15a142060 <col:8, line:28:21> '<dependent type>' contains-errors     | |     |-CXXDependentScopeMemberExpr 0x15a141f38 <line:27:8, col:18> '<dependent type>' contains-errors lvalue ->im_transceive     | |     | `-RecoveryExpr 0x15a141f10 <col:8, col:13> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x15a141ed8 <col:8> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | |     |-DeclRefExpr 0x15a141f80 <col:32> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | |     |-RecoveryExpr 0x15a141fd8 <col:37, col:42> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x15a141fa0 <col:37> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     | |     |-DeclRefExpr 0x15a142000 <col:57> 'struct sk_buff *' lvalue ParmVar 0x14a0082c8 'skb' 'struct sk_buff *'     | |     |-RecoveryExpr 0x15a142020 <col:62> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15a142040 <line:28:11> 'void *' lvalue ParmVar 0x14a0083c8 'cb_context' 'void *'     | `-IfStmt 0x15a1428d0 <line:33:9, line:39:2> has_else     |   |-RecoveryExpr 0x15a142638 <line:33:13, col:67> '_Bool' contains-errors     |   |-CompoundStmt 0x15a1427b0 <col:73, line:35:2>     |   | `-BinaryOperator 0x15a142790 <line:34:3, col:34> 'int' contains-errors '='     |   |   |-DeclRefExpr 0x15a142658 <col:3> 'int' lvalue Var 0x14a008620 'rc' 'int'     |   |   `-CallExpr 0x15a142760 <col:8, col:34> '<dependent type>' contains-errors     |   |     |-CXXDependentScopeMemberExpr 0x15a1426d8 <col:8, col:18> '<dependent type>' contains-errors lvalue ->tm_send     |   |     | `-RecoveryExpr 0x15a1426b0 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x15a142678 <col:8> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     |   |     |-DeclRefExpr 0x15a142720 <col:26> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     |   |     `-DeclRefExpr 0x15a142740 <col:31> 'struct sk_buff *' lvalue ParmVar 0x14a0082c8 'skb' 'struct sk_buff *'     |   `-CompoundStmt 0x15a1428b0 <line:35:9, line:39:2>     |     |-CallExpr 0x15a142858 <line:37:3, col:16> 'int'     |     | |-ImplicitCastExpr 0x15a142840 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x15a142800 <col:3> 'int ()' Function 0x14a008f58 'kfree_skb' 'int ()'     |     | `-ImplicitCastExpr 0x15a142880 <col:13> 'struct sk_buff *' <LValueToRValue>     |     |   `-DeclRefExpr 0x15a142820 <col:13> 'struct sk_buff *' lvalue ParmVar 0x14a0082c8 'skb' 'struct sk_buff *'     |     `-GotoStmt 0x15a142898 <line:38:3, col:8> 'error' 0x14a0090d8     |-LabelStmt 0x15a142ad0 <line:42:1, line:43:25> 'error'     | `-CallExpr 0x15a142aa8 <col:2, col:25> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a142a10 <col:2> 'int ()' Function 0x15a142958 'device_unlock' 'int ()'     |   `-UnaryOperator 0x15a142a90 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x15a142a68 <col:17, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15a142a30 <col:17> 'struct nfc_dev *' lvalue ParmVar 0x15a128648 'dev' 'struct nfc_dev *'     `-ReturnStmt 0x15a142b28 <line:44:2, col:9>       `-ImplicitCastExpr 0x15a142b10 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15a142af0 <col:9> 'int' lvalue Var 0x14a008620 'rc' 'int' ","19704":"`-FunctionDecl 0x14e80de88  line:1:8 invalid tmax_Read 'int (int *, int *)'   |-ParmVarDecl 0x14e80dd28 <col:18, col:26> col:26 invalid s 'int *'   |-ParmVarDecl 0x14e80dda8 <col:29, col:43> col:43 invalid bs 'int *'   `-CompoundStmt 0x14e80e180 <line:2:1, line:6:1>     `-ReturnStmt 0x14e80e170 <line:5:2, col:9>       `-RecoveryExpr 0x14e80e150 <col:9> '<dependent type>' contains-errors lvalue ","19864":"`-FunctionDecl 0x12c128dd8  line:1:10 invalid ValidateInputsGenerateOutputs 'int (int *, const int **, const int **, int **, int *, int *, int *)'   |-ParmVarDecl 0x12c128928 <line:2:7, col:24> col:24 invalid ctx 'int *'   |-ParmVarDecl 0x12c1289e0 <col:29, col:44> col:44 invalid inputs 'const int **'   |-ParmVarDecl 0x12c128a68 <col:52, col:67> col:67 invalid seq_len 'const int **'   |-ParmVarDecl 0x12c128b20 <line:3:7, col:16> col:16 invalid log_prob 'int **'   |-ParmVarDecl 0x12c128ba0 <col:26, col:40> col:40 invalid decoded_indices 'int *'   |-ParmVarDecl 0x12c128c20 <line:4:7, col:21> col:21 invalid decoded_values 'int *'   `-ParmVarDecl 0x12c128ca0 <col:37, col:51> col:51 invalid decoded_shape 'int *' ","19146":"`-FunctionDecl 0x14300dd98  line:1:1 rsvg_new_symbol 'int (void)'   `-CompoundStmt 0x143026610 <line:2:1, line:11:1>     |-CallExpr 0x14300e278 <line:5:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14300e138 <col:5> 'int ()' Function 0x14300e080 '_rsvg_node_init' 'int ()'     | `-UnaryOperator 0x14300e260 <col:22, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x14300e218 <col:23, col:31> '<dependent type>' contains-errors lvalue ->super     |     `-RecoveryExpr 0x14300e1f8 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x143026600 <line:10:5, col:21>       `-UnaryOperator 0x14300e3e0 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x14300e398 <col:13, col:21> '<dependent type>' contains-errors lvalue ->super           `-RecoveryExpr 0x14300e378 <col:13> '<dependent type>' contains-errors lvalue ","19184":"`-FunctionDecl 0x157940f60  line:1:6 arm_iommu_unmap_sg 'void (struct device *, struct scatterlist *, int, enum dma_data_direction, struct dma_attrs *)'   |-ParmVarDecl 0x157928648 <col:25, col:40> col:40 used dev 'struct device *'   |-ParmVarDecl 0x157940a28 <col:45, col:65> col:65 used sg 'struct scatterlist *'   |-ParmVarDecl 0x157940aa8 <col:69, col:73> col:73 used nents 'int'   |-ParmVarDecl 0x157940c28 <line:2:4, col:28> col:28 invalid dir 'enum dma_data_direction'   |-ParmVarDecl 0x157940df8 <col:33, col:51> col:51 used attrs 'struct dma_attrs *'   `-CompoundStmt 0x157941338 <line:3:1, line:5:1>     `-CallExpr 0x1579412e8 <line:4:2, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x1579411a0 <col:2> 'int ()' Function 0x1579410e8 '__iommu_unmap_sg' 'int ()'       |-DeclRefExpr 0x1579411c0 <col:19> 'struct device *' lvalue ParmVar 0x157928648 'dev' 'struct device *'       |-DeclRefExpr 0x1579411e0 <col:24> 'struct scatterlist *' lvalue ParmVar 0x157940a28 'sg' 'struct scatterlist *'       |-DeclRefExpr 0x157941200 <col:28> 'int' lvalue ParmVar 0x157940aa8 'nents' 'int'       |-RecoveryExpr 0x157941220 <col:35> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x157941240 <col:40> 'struct dma_attrs *' lvalue ParmVar 0x157940df8 'attrs' 'struct dma_attrs *'       `-RecoveryExpr 0x1579412c8 <col:47> '<dependent type>' contains-errors lvalue ","19429":"`-FunctionDecl 0x11f00dd98  line:1:10 avcodec_version 'unsigned int (void)'   `-CompoundStmt 0x11f0279c8 <line:2:1, line:16:1>     |-CallExpr 0x11f00e090 <line:4:5, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f00dfb0 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f00e070 <col:16, col:43> 'int' contains-errors '=='     |   |-RecoveryExpr 0x11f00e050 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x11f00dfe8 <col:43> 'int' 65563     |-CallExpr 0x11f00e198 <line:5:5, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f00e0b8 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f00e178 <col:16, col:40> 'int' contains-errors '=='     |   |-RecoveryExpr 0x11f00e158 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x11f00e0f0 <col:40> 'int' 69660     |-CallExpr 0x11f00e2a0 <line:7:5, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f00e1c0 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f00e280 <col:16, col:33> 'int' contains-errors '=='     |   |-RecoveryExpr 0x11f00e260 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x11f00e1f8 <col:33> 'int' 94216     |-CallExpr 0x11f00e3a8 <line:8:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f00e2c8 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f00e388 <col:16, col:44> 'int' contains-errors '>='     |   |-RecoveryExpr 0x11f00e368 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x11f00e300 <col:44> 'int' 100     |-CallExpr 0x11f0274d8 <line:10:5, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f00e3d0 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f0274b8 <col:16, col:33> 'int' contains-errors '=='     |   |-RecoveryExpr 0x11f027478 <col:16> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x11f027498 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f0275f8 <line:11:5, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f027500 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f0275d8 <col:16, col:42> 'int' contains-errors '=='     |   |-RecoveryExpr 0x11f027598 <col:16> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x11f0275b8 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f027718 <line:12:5, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f027620 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f0276f8 <col:16, col:42> 'int' contains-errors '=='     |   |-RecoveryExpr 0x11f0276b8 <col:16> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x11f0276d8 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f027838 <line:13:5, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f027740 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f027818 <col:16, col:33> 'int' contains-errors '=='     |   |-RecoveryExpr 0x11f0277d8 <col:16> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x11f0277f8 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f027958 <line:14:5, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f027860 <col:5> 'int ()' Function 0x11f00def8 'av_assert0' 'int ()'     | `-BinaryOperator 0x11f027938 <col:16, col:32> 'int' contains-errors '=='     |   |-RecoveryExpr 0x11f0278f8 <col:16> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x11f027918 <col:32> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11f0279b8 <line:15:5, col:12>       `-RecoveryExpr 0x11f027998 <col:12> '<dependent type>' contains-errors lvalue ","19167":"`-FunctionDecl 0x158128288  line:1:1 invalid write_card8 'int (int *, int)'   |-ParmVarDecl 0x158128128 <col:14, col:24> col:24 invalid ofp 'int *'   |-ParmVarDecl 0x1581281a8 <line:2:14, col:24> col:24 invalid c 'int'   `-CompoundStmt 0x158128610 <line:3:1, line:5:1>     `-CallExpr 0x1581285e0 <line:4:3, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x1581284a0 <col:3> 'int ()' Function 0x1581283e8 'putc' 'int ()'       |-CStyleCastExpr 0x158128598 <col:9, col:26> 'int' contains-errors <Dependent>       | `-ParenExpr 0x158128578 <col:15, col:26> '<dependent type>' contains-errors       |   `-BinaryOperator 0x158128520 <col:16, col:22> '<dependent type>' contains-errors '&'       |     |-ParenExpr 0x1581284e0 <col:16, col:18> '<dependent type>' contains-errors lvalue       |     | `-RecoveryExpr 0x1581284c0 <col:17> '<dependent type>' contains-errors lvalue       |     `-IntegerLiteral 0x158128500 <col:22> 'int' 255       `-RecoveryExpr 0x1581285c0 <col:29> '<dependent type>' contains-errors lvalue ","19502":"`-FunctionDecl 0x1478fa518  line:1:14 invalid lsr_translate_coords 'int (int *, int, int)' static   |-ParmVarDecl 0x1478fa328 <col:35, col:50> col:50 invalid lsr 'int *'   |-ParmVarDecl 0x1478fa3a8 <col:55, col:59> col:59 invalid val 'int'   |-ParmVarDecl 0x1478fa428 <col:64, col:68> col:68 invalid nb_bits 'int'   `-CompoundStmt 0x147030818 <line:2:1, line:22:1>     `-IfStmt 0x1470307e8 <line:15:2, line:20:2> has_else       |-BinaryOperator 0x1478fa678 <line:15:6, col:23> '<dependent type>' contains-errors '>>'       | |-RecoveryExpr 0x1478fa5d8 <col:6> '<dependent type>' contains-errors lvalue       | `-ParenExpr 0x1478fa658 <col:13, col:23> '<dependent type>' contains-errors       |   `-BinaryOperator 0x1478fa638 <col:14, col:22> '<dependent type>' contains-errors '-'       |     |-RecoveryExpr 0x1478fa5f8 <col:14> '<dependent type>' contains-errors lvalue       |     `-IntegerLiteral 0x1478fa618 <col:22> 'int' 1       |-CompoundStmt 0x147030688 <col:27, line:18:2>       | `-ReturnStmt 0x147030678 <line:17:3, col:49>       |   `-CallExpr 0x147030648 <col:10, col:49> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x1478fa7f0 <col:10> 'int ()' Function 0x1478fa738 'gf_divfix' 'int ()'       |     |-CallExpr 0x147030620 <col:20, col:31> '<dependent type>' contains-errors       |     | |-DeclRefExpr 0x1478fa8f0 <col:20> 'int ()' Function 0x1478fa838 'INT2FIX' 'int ()'       |     | `-RecoveryExpr 0x147030600 <col:28> '<dependent type>' contains-errors lvalue       |     `-CXXDependentScopeMemberExpr 0x1478fa970 <col:34, col:39> '<dependent type>' contains-errors lvalue ->res_factor       |       `-RecoveryExpr 0x1478fa950 <col:34> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1470307d0 <line:18:9, line:20:2>         `-ReturnStmt 0x1470307c0 <line:19:3, col:49>           `-CallExpr 0x147030790 <col:10, col:49> '<dependent type>' contains-errors             |-DeclRefExpr 0x1470306a0 <col:10> 'int ()' Function 0x1478fa738 'gf_divfix' 'int ()'             |-CallExpr 0x147030700 <col:20, col:31> '<dependent type>' contains-errors             | |-DeclRefExpr 0x1470306c0 <col:20> 'int ()' Function 0x1478fa838 'INT2FIX' 'int ()'             | `-RecoveryExpr 0x1470306e0 <col:28> '<dependent type>' contains-errors lvalue             `-CXXDependentScopeMemberExpr 0x147030748 <col:34, col:39> '<dependent type>' contains-errors lvalue ->res_factor               `-RecoveryExpr 0x147030728 <col:34> '<dependent type>' contains-errors lvalue ","19820":"`-FunctionDecl 0x14180df18  line:1:5 invalid rand_pool_add_end 'int (int *, int, int)'   |-ParmVarDecl 0x14180dd28 <col:23, col:34> col:34 referenced invalid pool 'int *'   |-ParmVarDecl 0x14180dda8 <col:40, col:47> col:47 invalid len 'int'   |-ParmVarDecl 0x14180de28 <col:52, col:59> col:59 invalid entropy 'int'   `-CompoundStmt 0x141828050 <line:2:1, line:14:1>     |-IfStmt 0x14180e3a0 <line:3:5, line:6:5>     | |-BinaryOperator 0x14180e0e8 <line:3:9, col:37> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14180dfd8 <col:9> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x14180e0c8 <col:15, col:37> '<dependent type>' contains-errors '-'     | |   |-CXXDependentScopeMemberExpr 0x14180e018 <col:15, col:21> '<dependent type>' contains-errors lvalue ->max_len     | |   | `-RecoveryExpr 0x14180dff8 <col:15> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x14180e080 <col:31, col:37> '<dependent type>' contains-errors lvalue ->len     | |     `-RecoveryExpr 0x14180e060 <col:31> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14180e380 <col:42, line:6:5>     |   |-CallExpr 0x14180e320 <line:4:9, col:70> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14180e260 <col:9> 'int ()' Function 0x14180e1a8 'RANDerr' 'int ()'     |   | |-RecoveryExpr 0x14180e2e0 <col:17> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x14180e300 <col:43> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14180e370 <line:5:9, col:16>     |     `-IntegerLiteral 0x14180e350 <col:16> 'int' 0     |-IfStmt 0x141828000 <line:8:5, line:11:5>     | |-BinaryOperator 0x141827e00 <line:8:9, col:15> 'int' contains-errors '>'     | | |-RecoveryExpr 0x14180e3c0 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14180e3e0 <col:15> 'int' 0     | `-CompoundStmt 0x141827fe0 <col:18, line:11:5>     |   |-CompoundAssignOperator 0x141827ed0 <line:9:9, col:22> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-CXXDependentScopeMemberExpr 0x141827e68 <col:9, col:15> '<dependent type>' contains-errors lvalue ->len     |   | | `-RecoveryExpr 0x141827e40 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x141827e20 <col:9> 'int *' lvalue ParmVar 0x14180dd28 'pool' 'int *'     |   | `-RecoveryExpr 0x141827eb0 <col:22> '<dependent type>' contains-errors lvalue     |   `-CompoundAssignOperator 0x141827fb0 <line:10:9, col:26> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-CXXDependentScopeMemberExpr 0x141827f48 <col:9, col:15> '<dependent type>' contains-errors lvalue ->entropy     |     | `-RecoveryExpr 0x141827f20 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x141827f00 <col:9> 'int *' lvalue ParmVar 0x14180dd28 'pool' 'int *'     |     `-RecoveryExpr 0x141827f90 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x141828040 <line:13:5, col:12>       `-IntegerLiteral 0x141828020 <col:12> 'int' 1 ","20113":"`-FunctionDecl 0x136128208  line:1:23 invalid ClampToQuantum 'int (const int)' static inline   |-ParmVarDecl 0x1361280f0 <col:38, col:59> col:59 invalid value 'const int'   `-CompoundStmt 0x136128418 <line:2:1, line:12:1> ","19224":"`-FunctionDecl 0x13780ddf8  line:1:1 invalid rsvg_state_finalize 'int (int *)'   |-ParmVarDecl 0x13780dd28 <col:22, col:34> col:34 referenced invalid state 'int *'   `-CompoundStmt 0x137827928 <line:2:1, line:15:1>     |-CallExpr 0x13780e088 <line:3:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13780e000 <col:5> 'int ()' Function 0x13780df48 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13780e040 <col:13, col:20> '<dependent type>' contains-errors lvalue ->font_family     |   `-RecoveryExpr 0x13780e020 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13780e138 <line:4:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13780e0b0 <col:5> 'int ()' Function 0x13780df48 'g_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13780e0f0 <col:13, col:20> '<dependent type>' contains-errors lvalue ->lang     |   `-RecoveryExpr 0x13780e0d0 <col:13> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13780e2c8 <line:5:5, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13780e240 <col:5> 'int ()' Function 0x13780e188 'rsvg_paint_server_unref' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13780e280 <col:30, col:37> '<dependent type>' contains-errors lvalue ->fill     |   `-RecoveryExpr 0x13780e260 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13780e378 <line:6:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13780e2f0 <col:5> 'int ()' Function 0x13780e188 'rsvg_paint_server_unref' 'int ()'     | `-CXXDependentScopeMemberExpr 0x13780e330 <col:30, col:37> '<dependent type>' contains-errors lvalue ->stroke     |   `-RecoveryExpr 0x13780e310 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1378275c8 <line:8:5, line:9:33>     | |-BinaryOperator 0x1378274b0 <line:8:9, col:31> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x137827448 <col:9, col:21> '<dependent type>' contains-errors lvalue .n_dash     | | | `-CXXDependentScopeMemberExpr 0x137827400 <col:9, col:16> '<dependent type>' contains-errors lvalue ->dash     | | |   `-RecoveryExpr 0x13780e3a0 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x137827490 <col:31> 'int' 0     | `-CallExpr 0x1378275a0 <line:9:9, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1378274d0 <col:9> 'int ()' Function 0x13780df48 'g_free' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x137827558 <col:17, col:29> '<dependent type>' contains-errors lvalue .dash     |     `-CXXDependentScopeMemberExpr 0x137827510 <col:17, col:24> '<dependent type>' contains-errors lvalue ->dash     |       `-RecoveryExpr 0x1378274f0 <col:17> '<dependent type>' contains-errors lvalue     `-IfStmt 0x137827908 <line:11:5, line:14:5>       |-CXXDependentScopeMemberExpr 0x137827608 <line:11:9, col:16> '<dependent type>' contains-errors lvalue ->styles       | `-RecoveryExpr 0x1378275e8 <col:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1378278e8 <col:24, line:14:5>         |-CallExpr 0x1378277b8 <line:12:9, col:42> '<dependent type>' contains-errors         | |-DeclRefExpr 0x137827730 <col:9> 'int ()' Function 0x137827678 'g_hash_table_unref' 'int ()'         | `-CXXDependentScopeMemberExpr 0x137827770 <col:29, col:36> '<dependent type>' contains-errors lvalue ->styles         |   `-RecoveryExpr 0x137827750 <col:29> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x1378278c8 <line:13:9, col:25> '<dependent type>' contains-errors '='           |-CXXDependentScopeMemberExpr 0x137827828 <col:9, col:16> '<dependent type>' contains-errors lvalue ->styles           | `-RecoveryExpr 0x137827800 <col:9> '<dependent type>' contains-errors lvalue           |   `-DeclRefExpr 0x1378277e0 <col:9> 'int *' lvalue ParmVar 0x13780dd28 'state' 'int *'           `-RecoveryExpr 0x1378278a8 <col:25> '<dependent type>' contains-errors lvalue ","19484":"`-FunctionDecl 0x142141800  line:1:13 invalid r_bin_mdmp_init_directory 'int (struct r_bin_mdmp_obj *)' static   |-ParmVarDecl 0x142128668 <col:39, col:62> col:62 used obj 'struct r_bin_mdmp_obj *'   `-CompoundStmt 0x142142750 <col:67, line:21:1>     |-DeclStmt 0x142141930 <line:2:2, col:7>     | `-VarDecl 0x1421418c8 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x142141b48 <line:4:2, col:34>     | |-RecordDecl 0x142141960 <col:2, col:9> col:9 struct minidump_directory     | `-VarDecl 0x142141ac8 <col:2, col:29> col:29 used entry 'struct minidump_directory *'     |-CallExpr 0x142141fd8 <line:8:2, line:9:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141e30 <line:8:2> 'int ()' Function 0x142141d78 'sdb_num_set' 'int ()'     | |-RecoveryExpr 0x142141e88 <col:15, col:20> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142141e50 <col:15> 'struct r_bin_mdmp_obj *' lvalue ParmVar 0x142128668 'obj' 'struct r_bin_mdmp_obj *'     | |-StringLiteral 0x142141ef0 <col:24> 'char[4]' lvalue \"STR\"     | |-CXXDependentScopeMemberExpr 0x142141f70 <line:9:4, col:14> '<dependent type>' contains-errors lvalue ->stream_directory_rva     | | `-RecoveryExpr 0x142141f48 <col:4, col:9> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x142141f10 <col:4> 'struct r_bin_mdmp_obj *' lvalue ParmVar 0x142128668 'obj' 'struct r_bin_mdmp_obj *'     | `-IntegerLiteral 0x142141fb8 <col:36> 'int' 0     |-CallExpr 0x142142210 <line:10:2, line:12:12> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1421420f8 <line:10:2> 'int ()' Function 0x142142040 'sdb_set' 'int ()'     | |-RecoveryExpr 0x142142150 <col:11, col:16> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x142142118 <col:11> 'struct r_bin_mdmp_obj *' lvalue ParmVar 0x142128668 'obj' 'struct r_bin_mdmp_obj *'     | |-StringLiteral 0x1421421c0 <col:20, line:12:4> 'char[10]' lvalue \"STRSTRSTR\"     | `-IntegerLiteral 0x1421421f0 <col:11> 'int' 0     |-ForStmt 0x1421426d0 <line:15:2, line:18:2>     | |-BinaryOperator 0x142142288 <line:15:7, col:11> 'int' '='     | | |-DeclRefExpr 0x142142248 <col:7> 'int' lvalue Var 0x1421418c8 'i' 'int'     | | `-IntegerLiteral 0x142142268 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1421423c8 <col:14, col:33> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x1421423b0 <col:14> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1421422a8 <col:14> 'int' lvalue Var 0x1421418c8 'i' 'int'     | | `-CStyleCastExpr 0x142142388 <col:18, col:33> 'int' contains-errors <Dependent>     | |   `-CXXDependentScopeMemberExpr 0x142142328 <col:23, col:33> '<dependent type>' contains-errors lvalue ->number_of_streams     | |     `-RecoveryExpr 0x142142300 <col:23, col:28> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1421422c8 <col:23> 'struct r_bin_mdmp_obj *' lvalue ParmVar 0x142128668 'obj' 'struct r_bin_mdmp_obj *'     | |-UnaryOperator 0x142142408 <col:52, col:53> 'int' postfix '++'     | | `-DeclRefExpr 0x1421423e8 <col:52> 'int' lvalue Var 0x1421418c8 'i' 'int'     | `-CompoundStmt 0x1421426b8 <col:57, line:18:2>     |   `-CallExpr 0x142142658 <line:17:3, col:46> 'int'     |     |-ImplicitCastExpr 0x142142640 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1421425b0 <col:3> 'int ()' Function 0x1421424f8 'r_bin_mdmp_init_directory_entry' 'int ()'     |     |-ImplicitCastExpr 0x142142688 <col:36> 'struct r_bin_mdmp_obj *' <LValueToRValue>     |     | `-DeclRefExpr 0x1421425d0 <col:36> 'struct r_bin_mdmp_obj *' lvalue ParmVar 0x142128668 'obj' 'struct r_bin_mdmp_obj *'     |     `-ImplicitCastExpr 0x1421426a0 <col:41> 'struct minidump_directory *' <LValueToRValue>     |       `-DeclRefExpr 0x1421425f0 <col:41> 'struct minidump_directory *' lvalue Var 0x142141ac8 'entry' 'struct minidump_directory *'     `-ReturnStmt 0x142142740 <line:20:2, col:9>       `-RecoveryExpr 0x142142720 <col:9> '<dependent type>' contains-errors lvalue ","19930":"`-FunctionDecl 0x147141c18  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x147141d18 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x147141d80 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x147141cc0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x147141df8 <col:9> Implicit printf 2 3 ","19916":"`-FunctionDecl 0x13900df68  line:1:1 invalid spnego_gss_process_context_token 'int (int *, const int, const int)'   |-ParmVarDecl 0x13900dd28 <line:2:5, col:16> col:16 invalid minor_status 'int *'   |-ParmVarDecl 0x13900dda8 <line:3:5, col:24> col:24 invalid context_handle 'const int'   |-ParmVarDecl 0x13900de28 <line:4:5, col:24> col:24 invalid token_buffer 'const int'   `-CompoundStmt 0x13900e250 <line:5:1, line:12:1> ","20115":"`-FunctionDecl 0x13802c218  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13802c318 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13802c380 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13802c3e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13802c2c0 <<invalid sloc>> Implicit 900 ","19267":"`-FunctionDecl 0x11e1281c8  line:1:13 invalid needs_glob 'int (int)' static   |-ParmVarDecl 0x11e1280f0 <col:24, col:33> col:33 invalid t 'int'   `-CompoundStmt 0x11e1418b0 <col:36, line:18:1>     `-ReturnStmt 0x11e1418a0 <line:2:9, line:17:46>       `-CallExpr 0x11e141800 <line:2:16, line:17:46> '<dependent type>' contains-errors         |-DeclRefExpr 0x11e1283d0 <line:2:16> 'int ()' Function 0x11e128318 'IN_SET' 'int ()'         |-RecoveryExpr 0x11e1283f0 <col:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128618 <line:3:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128638 <line:4:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128658 <line:5:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128678 <line:6:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128698 <line:7:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e1286b8 <line:8:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e1286d8 <line:9:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e1286f8 <line:10:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128718 <line:11:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128738 <line:12:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128758 <line:13:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128778 <line:14:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e128798 <line:15:23> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x11e1287b8 <line:16:23> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x11e1287d8 <line:17:23> '<dependent type>' contains-errors lvalue ","19791":"`-FunctionDecl 0x11f928280  line:1:6 invalid qemu_spice_destroy_primary_surface 'void (int *, int)'   |-ParmVarDecl 0x11f928128 <col:41, col:61> col:61 referenced invalid ssd 'int *'   |-ParmVarDecl 0x11f9281a8 <col:66, col:75> col:75 invalid id 'int'   `-CompoundStmt 0x11f9284c8 <line:2:1, line:4:1>     `-CallExpr 0x11f928498 <line:3:5, col:57> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x11f9283c8 <col:5, col:18> '<dependent type>' contains-errors lvalue ->destroy_primary_surface       | `-CXXDependentScopeMemberExpr 0x11f928380 <col:5, col:10> '<dependent type>' contains-errors lvalue ->worker       |   `-RecoveryExpr 0x11f928358 <col:5> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x11f928338 <col:5> 'int *' lvalue ParmVar 0x11f928128 'ssd' 'int *'       |-CXXDependentScopeMemberExpr 0x11f928430 <col:42, col:47> '<dependent type>' contains-errors lvalue ->worker       | `-RecoveryExpr 0x11f928410 <col:42> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x11f928478 <col:55> '<dependent type>' contains-errors lvalue ","20122":"`-FunctionDecl 0x12180de88  line:1:5 invalid rdbSaveBinaryDoubleValue 'int (int *, double)'   |-ParmVarDecl 0x12180dd28 <col:30, col:35> col:35 invalid rdb 'int *'   |-ParmVarDecl 0x12180dda8 <col:40, col:47> col:47 used val 'double'   `-CompoundStmt 0x12180e3a0 <col:52, line:4:1>     |-CallExpr 0x12180e178 <line:2:5, col:22> 'int'     | |-ImplicitCastExpr 0x12180e160 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12180e0a0 <col:5> 'int ()' Function 0x12180dfe8 'memrev64ifbe' 'int ()'     | `-UnaryOperator 0x12180e110 <col:18, col:19> 'double *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x12180e0c0 <col:19> 'double' lvalue ParmVar 0x12180dda8 'val' 'double'     `-ReturnStmt 0x12180e390 <line:3:5, col:44>       `-CallExpr 0x12180e358 <col:12, col:44> '<dependent type>' contains-errors         |-DeclRefExpr 0x12180e280 <col:12> 'int ()' Function 0x12180e1c8 'rdbWriteRaw' 'int ()'         |-RecoveryExpr 0x12180e2a0 <col:24> '<dependent type>' contains-errors lvalue         |-UnaryOperator 0x12180e2e0 <col:28, col:29> 'double *' prefix '&' cannot overflow         | `-DeclRefExpr 0x12180e2c0 <col:29> 'double' lvalue ParmVar 0x12180dda8 'val' 'double'         `-UnaryExprOrTypeTraitExpr 0x12180e338 <col:33, col:43> 'unsigned long' sizeof           `-ParenExpr 0x12180e318 <col:39, col:43> 'double' lvalue             `-DeclRefExpr 0x12180e2f8 <col:40> 'double' lvalue ParmVar 0x12180dda8 'val' 'double' non_odr_use_unevaluated ","19714":"`-FunctionDecl 0x13f928288  line:1:12 invalid jas_iccattrtab_resize 'int (int *, int)' static   |-ParmVarDecl 0x13f928128 <col:34, col:52> col:52 referenced invalid tab 'int *'   |-ParmVarDecl 0x13f9281a8 <col:57, col:61> col:61 used maxents 'int'   `-CompoundStmt 0x13f941c18 <line:2:1, line:12:1>     |-CallExpr 0x13f928578 <line:4:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f9284b0 <col:2> 'int ()' Function 0x13f9283f8 'assert' 'int ()'     | `-BinaryOperator 0x13f928558 <col:9, col:25> 'int' contains-errors '>='     |   |-DeclRefExpr 0x13f9284d0 <col:9> 'int' lvalue ParmVar 0x13f9281a8 'maxents' 'int'     |   `-CXXDependentScopeMemberExpr 0x13f928510 <col:20, col:25> '<dependent type>' contains-errors lvalue ->numattrs     |     `-RecoveryExpr 0x13f9284f0 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13f9419f0 <line:7:2, line:8:11>     | |-UnaryOperator 0x13f941990 <line:7:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13f941978 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13f941958 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13f9419e0 <line:8:3, col:11>     |   `-UnaryOperator 0x13f9419c8 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x13f9419a8 <col:11> 'int' 1     |-BinaryOperator 0x13f941af8 <line:9:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f941a58 <col:2, col:7> '<dependent type>' contains-errors lvalue ->attrs     | | `-RecoveryExpr 0x13f941a30 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f941a10 <col:2> 'int *' lvalue ParmVar 0x13f928128 'tab' 'int *'     | `-RecoveryExpr 0x13f941ad8 <col:15> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13f941bc8 <line:10:2, col:18> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13f941b60 <col:2, col:7> '<dependent type>' contains-errors lvalue ->maxattrs     | | `-RecoveryExpr 0x13f941b38 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13f941b18 <col:2> 'int *' lvalue ParmVar 0x13f928128 'tab' 'int *'     | `-DeclRefExpr 0x13f941ba8 <col:18> 'int' lvalue ParmVar 0x13f9281a8 'maxents' 'int'     `-ReturnStmt 0x13f941c08 <line:11:2, col:9>       `-IntegerLiteral 0x13f941be8 <col:9> 'int' 0 ","19441":"`-FunctionDecl 0x14d140a00  line:1:6 inc_harakiri 'void (struct wsgi_request *, int)'   |-ParmVarDecl 0x14d128648 <col:19, col:40> col:40 used wsgi_req 'struct wsgi_request *'   |-ParmVarDecl 0x14d1286c8 <col:50, col:54> col:54 used sec 'int'   `-CompoundStmt 0x14d141050 <col:59, line:8:1>     `-IfStmt 0x14d141020 <line:2:2, line:7:2> has_else       |-CXXDependentScopeMemberExpr 0x14d140b98 <line:2:6, col:12> '<dependent type>' contains-errors lvalue .master_process       | `-RecoveryExpr 0x14d140b78 <col:6> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x14d140cc0 <col:28, line:4:2>       `-CompoundStmt 0x14d141008 <line:5:7, line:7:2>         `-CallExpr 0x14d140fe0 <line:6:3, col:45> '<dependent type>' contains-errors           |-DeclRefExpr 0x14d140de0 <col:3> 'int ()' Function 0x14d140d28 'alarm' 'int ()'           `-BinaryOperator 0x14d140fc0 <col:9, col:42> '<dependent type>' contains-errors '+'             |-CXXDependentScopeMemberExpr 0x14d140f78 <col:9, col:32> '<dependent type>' contains-errors lvalue .workers             | `-CXXDependentScopeMemberExpr 0x14d140f30 <col:9, col:15> '<dependent type>' contains-errors lvalue .harakiri_options             |   `-RecoveryExpr 0x14d140f10 <col:9> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x14d140ea8 <col:42> 'int' lvalue ParmVar 0x14d1286c8 'sec' 'int' ","19860":"`-FunctionDecl 0x14b8d84a8  col:9 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x14b8d85a8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x14b8d8550 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x14b8d8618 <col:9> Implicit ","19475":"`-FunctionDecl 0x13c1282c8  line:1:1 invalid node_new_no_newline 'int (int **, int *)'   |-ParmVarDecl 0x13c128160 <col:21, col:28> col:28 referenced invalid node 'int **'   |-ParmVarDecl 0x13c1281e0 <col:34, col:43> col:43 invalid env 'int *'   `-CompoundStmt 0x13c1418f0 <line:2:1, line:9:1>     |-BinaryOperator 0x13c128420 <line:3:3, col:9> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x13c1283a0 <col:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13c128380 <col:3> 'int **' lvalue ParmVar 0x13c128160 'node' 'int **'     | `-RecoveryExpr 0x13c128400 <col:9> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13c128760 <line:6:3, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c1286e0 <col:3> 'int ()' Function 0x13c128628 'CHECK_NULL_RETURN_MEMERR' 'int ()'     | `-RecoveryExpr 0x13c128740 <col:28> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13c1418a0 <line:7:3, col:11> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13c141868 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13c141850 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13c128788 <col:4> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13c141880 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13c1418e0 <line:8:3, col:10>       `-IntegerLiteral 0x13c1418c0 <col:10> 'int' 0 ","19734":"`-FunctionDecl 0x13d928258  line:1:1 invalid get_word_gray_row 'int (int, int)'   |-ParmVarDecl 0x13d9280f0 <col:19, col:34> col:34 invalid cinfo 'int'   |-ParmVarDecl 0x13d928170 <col:41, col:58> col:58 invalid sinfo 'int'   `-CompoundStmt 0x13d9427b0 <line:3:1, line:24:1>     |-DeclStmt 0x13d928390 <line:5:3, col:24>     | `-VarDecl 0x13d928328 <col:3, col:21> col:21 referenced invalid ptr 'int' register     |-DeclStmt 0x13d928460 <line:6:3, col:29>     | `-VarDecl 0x13d9283f8 <col:3, col:20> col:20 referenced invalid bufferptr 'int *' register     |-DeclStmt 0x13d928558 <line:7:3, col:46>     | `-VarDecl 0x13d928490 <col:3, col:21> col:21 invalid rescale 'int *' register     |-DeclStmt 0x13d9286b8 <line:9:3, col:39>     | `-VarDecl 0x13d928588 <col:3, col:33> col:16 used maxval 'unsigned int' cinit     |   `-CXXDependentScopeMemberExpr 0x13d928670 <col:25, col:33> '<dependent type>' contains-errors lvalue ->maxval     |     `-RecoveryExpr 0x13d928650 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d941e18 <line:11:3, line:12:34>     | |-UnaryOperator 0x13d941c48 <line:11:7, col:77> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13d941c10 <col:8, col:77> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13d9418b8 <col:8> 'int ()' Function 0x13d941800 'ReadOK' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x13d941af8 <col:15, col:27> '<dependent type>' contains-errors lvalue .input_file     | |   | `-CXXDependentScopeMemberExpr 0x13d941ab0 <col:15, col:23> '<dependent type>' contains-errors lvalue ->pub     | |   |   `-RecoveryExpr 0x13d941a90 <col:15> '<dependent type>' contains-errors lvalue     | |   |-CXXDependentScopeMemberExpr 0x13d941b60 <col:39, col:47> '<dependent type>' contains-errors lvalue ->iobuffer     | |   | `-RecoveryExpr 0x13d941b40 <col:39> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x13d941bc8 <col:57, col:65> '<dependent type>' contains-errors lvalue ->buffer_width     | |     `-RecoveryExpr 0x13d941ba8 <col:57> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13d941de8 <line:12:5, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d941d40 <col:5> 'int ()' Function 0x13d941c88 'ERREXIT' 'int ()'     |   |-RecoveryExpr 0x13d941d60 <col:13> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x13d941dc8 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13d942078 <line:14:3, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13d941f68 <col:3> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d941f48 <col:3> 'int *' lvalue Var 0x13d9283f8 'bufferptr' 'int *'     | `-CXXDependentScopeMemberExpr 0x13d942030 <col:15, col:23> '<dependent type>' contains-errors lvalue ->iobuffer     |   `-RecoveryExpr 0x13d942010 <col:15> '<dependent type>' contains-errors lvalue     |-ForStmt 0x13d942748 <line:15:3, line:22:3>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13d9421b0 <line:15:34, col:40> 'int' contains-errors '>'     | | |-RecoveryExpr 0x13d942190 <col:34> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13d942150 <col:40> 'int' 0     | |-<<<NULL>>>     | `-CompoundStmt 0x13d942718 <col:50, line:22:3>     |   |-DeclStmt 0x13d942250 <line:16:5, col:31>     |   | `-VarDecl 0x13d9421e8 <col:5, col:27> col:27 used temp 'unsigned int' register     |   |-BinaryOperator 0x13d942440 <line:17:5, col:34> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x13d942268 <col:5> 'unsigned int' lvalue Var 0x13d9421e8 'temp' 'unsigned int'     |   | `-BinaryOperator 0x13d942420 <col:13, col:34> '<dependent type>' contains-errors '<<'     |   |   |-CallExpr 0x13d9423d8 <col:13, col:29> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x13d942368 <col:13> 'int ()' Function 0x13d9422b0 'UCH' 'int ()'     |   |   | `-UnaryOperator 0x13d9423c0 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   |   `-UnaryOperator 0x13d9423a8 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |   |     `-RecoveryExpr 0x13d942388 <col:18> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x13d942400 <col:34> 'int' 8     |   |-CompoundAssignOperator 0x13d942518 <line:18:5, col:29> 'unsigned int' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x13d942460 <col:5> 'unsigned int' lvalue Var 0x13d9421e8 'temp' 'unsigned int'     |   | `-CallExpr 0x13d9424f0 <col:13, col:29> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13d942480 <col:13> 'int ()' Function 0x13d9422b0 'UCH' 'int ()'     |   |   `-UnaryOperator 0x13d9424d8 <col:17, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |     `-UnaryOperator 0x13d9424c0 <col:18, col:27> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |       `-RecoveryExpr 0x13d9424a0 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x13d9426f8 <line:21:5, col:26> '<dependent type>' contains-errors '='     |     |-UnaryOperator 0x13d942650 <col:5, col:9> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-UnaryOperator 0x13d942638 <col:6, col:9> '<dependent type>' contains-errors postfix '++' cannot overflow     |     |   `-RecoveryExpr 0x13d942618 <col:6> '<dependent type>' contains-errors lvalue     |     `-ArraySubscriptExpr 0x13d9426d8 <col:14, col:26> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x13d9426a8 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |       | `-RecoveryExpr 0x13d942668 <col:14> '<dependent type>' contains-errors lvalue     |       `-ImplicitCastExpr 0x13d9426c0 <col:22> 'unsigned int' <LValueToRValue>     |         `-DeclRefExpr 0x13d942688 <col:22> 'unsigned int' lvalue Var 0x13d9421e8 'temp' 'unsigned int'     `-ReturnStmt 0x13d9427a0 <line:23:3, col:10>       `-IntegerLiteral 0x13d942780 <col:10> 'int' 1 ","19875":"`-FunctionDecl 0x14800ddf0  line:1:6 invalid rvcc_box_del 'void (int *)'   |-ParmVarDecl 0x14800dd28 <col:19, col:27> col:27 invalid s 'int *'   `-CompoundStmt 0x14800e068 <line:2:1, line:4:1>     `-CallExpr 0x14800e040 <line:3:2, col:11> '<dependent type>' contains-errors       |-DeclRefExpr 0x14800e000 <col:2> 'int ()' Function 0x14800df48 'gf_free' 'int ()'       `-RecoveryExpr 0x14800e020 <col:10> '<dependent type>' contains-errors lvalue ","19569":"`-FunctionDecl 0x150008530  line:1:13 tftp_udp_output 'void (struct tftp_session *, struct mbuf *, struct tftp_t *)' static   |-ParmVarDecl 0x158128648 <col:29, col:50> col:50 used spt 'struct tftp_session *'   |-ParmVarDecl 0x150008228 <col:55, col:68> col:68 used m 'struct mbuf *'   |-ParmVarDecl 0x1500083f8 <line:2:29, col:44> col:44 used recv_tp 'struct tftp_t *'   `-CompoundStmt 0x15000bbb8 <line:3:1, line:23:1>     `-IfStmt 0x15000bb88 <line:4:5, line:22:5> has_else       |-BinaryOperator 0x150008750 <line:4:9, col:39> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x150008698 <col:9, col:26> '<dependent type>' contains-errors lvalue .ss_family       | | `-RecoveryExpr 0x150008670 <col:9, col:14> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x150008638 <col:9> 'struct tftp_session *' lvalue ParmVar 0x158128648 'spt' 'struct tftp_session *'       | `-RecoveryExpr 0x150008730 <col:39> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x15000b040 <col:49, line:13:5>       | |-DeclStmt 0x150008978 <line:5:9, col:37>       | | |-RecordDecl 0x150008770 <col:9, col:16> col:16 struct sockaddr_in6       | | |-VarDecl 0x150008868 <col:9, col:29> col:29 referenced invalid sa6 'struct sockaddr_in6'       | | `-VarDecl 0x1500088f0 <col:9, col:34> col:34 referenced invalid da6 'struct sockaddr_in6'       | |-BinaryOperator 0x150008ac8 <line:7:9, col:37> '<dependent type>' contains-errors '='       | | |-CXXDependentScopeMemberExpr 0x1500089d8 <col:9, col:13> '<dependent type>' contains-errors lvalue .sin6_addr       | | | `-RecoveryExpr 0x1500089b0 <col:9> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x150008990 <col:9> 'struct sockaddr_in6' lvalue Var 0x150008868 'sa6' 'struct sockaddr_in6'       | | `-CXXDependentScopeMemberExpr 0x150008a80 <col:25, col:37> '<dependent type>' contains-errors lvalue ->vhost_addr6       | |   `-RecoveryExpr 0x150008a58 <col:25, col:30> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x150008a20 <col:25> 'struct tftp_session *' lvalue ParmVar 0x158128648 'spt' 'struct tftp_session *'       | |-BinaryOperator 0x150008c20 <line:8:9, col:38> '<dependent type>' contains-errors '='       | | |-CXXDependentScopeMemberExpr 0x150008b30 <col:9, col:13> '<dependent type>' contains-errors lvalue .sin6_port       | | | `-RecoveryExpr 0x150008b08 <col:9> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x150008ae8 <col:9> 'struct sockaddr_in6' lvalue Var 0x150008868 'sa6' 'struct sockaddr_in6'       | | `-CXXDependentScopeMemberExpr 0x150008bd8 <col:25, col:38> '<dependent type>' contains-errors lvalue .uh_dport       | |   `-RecoveryExpr 0x150008bb0 <col:25, col:34> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x150008b78 <col:25> 'struct tftp_t *' lvalue ParmVar 0x1500083f8 'recv_tp' 'struct tftp_t *'       | |-BinaryOperator 0x150008e78 <line:9:9, col:69> '<dependent type>' contains-errors '='       | | |-CXXDependentScopeMemberExpr 0x150008c88 <col:9, col:13> '<dependent type>' contains-errors lvalue .sin6_addr       | | | `-RecoveryExpr 0x150008c60 <col:9> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x150008c40 <col:9> 'struct sockaddr_in6' lvalue Var 0x1500088f0 'da6' 'struct sockaddr_in6'       | | `-RecoveryExpr 0x150008e50 <col:25, col:69> '<dependent type>' contains-errors lvalue       | |   `-ParenExpr 0x150008e30 <col:25, col:66> 'struct sockaddr_in6 *' contains-errors       | |     `-CStyleCastExpr 0x150008e08 <col:26, col:55> 'struct sockaddr_in6 *' contains-errors <Dependent>       | |       `-UnaryOperator 0x150008d30 <col:49, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow       | |         `-RecoveryExpr 0x150008d08 <col:50, col:55> '<dependent type>' contains-errors lvalue       | |           `-DeclRefExpr 0x150008cd0 <col:50> 'struct tftp_session *' lvalue ParmVar 0x158128648 'spt' 'struct tftp_session *'       | |-BinaryOperator 0x150008f88 <line:10:9, col:30> '<dependent type>' contains-errors '='       | | |-CXXDependentScopeMemberExpr 0x150008ee0 <col:9, col:13> '<dependent type>' contains-errors lvalue .sin6_port       | | | `-RecoveryExpr 0x150008eb8 <col:9> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x150008e98 <col:9> 'struct sockaddr_in6' lvalue Var 0x1500088f0 'da6' 'struct sockaddr_in6'       | | `-RecoveryExpr 0x150008f60 <col:25, col:30> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x150008f28 <col:25> 'struct tftp_session *' lvalue ParmVar 0x158128648 'spt' 'struct tftp_session *'       | `-CallExpr 0x15000b000 <line:12:9, col:40> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x1500090c0 <col:9> 'int ()' Function 0x150009008 'udp6_output' 'int ()'       |   |-RecoveryExpr 0x1500091c8 <col:21> '<dependent type>' contains-errors lvalue       |   |-DeclRefExpr 0x1500090f8 <col:27> 'struct mbuf *' lvalue ParmVar 0x150008228 'm' 'struct mbuf *'       |   |-UnaryOperator 0x150009138 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow       |   | `-RecoveryExpr 0x150009118 <col:31> '<dependent type>' contains-errors lvalue       |   `-UnaryOperator 0x150009170 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x150009150 <col:37> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15000bb48 <line:13:12, line:22:5>         |-DeclStmt 0x15000b288 <line:14:9, col:36>         | |-RecordDecl 0x15000b080 <col:9, col:16> col:16 struct sockaddr_in         | |-VarDecl 0x15000b178 <col:9, col:28> col:28 referenced invalid sa4 'struct sockaddr_in'         | `-VarDecl 0x15000b200 <col:9, col:33> col:33 referenced invalid da4 'struct sockaddr_in'         |-BinaryOperator 0x15000b3d8 <line:16:9, col:36> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x15000b2e8 <col:9, col:13> '<dependent type>' contains-errors lvalue .sin_addr         | | `-RecoveryExpr 0x15000b2c0 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x15000b2a0 <col:9> 'struct sockaddr_in' lvalue Var 0x15000b178 'sa4' 'struct sockaddr_in'         | `-CXXDependentScopeMemberExpr 0x15000b390 <col:24, col:36> '<dependent type>' contains-errors lvalue ->vhost_addr         |   `-RecoveryExpr 0x15000b368 <col:24, col:29> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x15000b330 <col:24> 'struct tftp_session *' lvalue ParmVar 0x158128648 'spt' 'struct tftp_session *'         |-BinaryOperator 0x15000b530 <line:17:9, col:37> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x15000b440 <col:9, col:13> '<dependent type>' contains-errors lvalue .sin_port         | | `-RecoveryExpr 0x15000b418 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x15000b3f8 <col:9> 'struct sockaddr_in' lvalue Var 0x15000b178 'sa4' 'struct sockaddr_in'         | `-CXXDependentScopeMemberExpr 0x15000b4e8 <col:24, col:37> '<dependent type>' contains-errors lvalue .uh_dport         |   `-RecoveryExpr 0x15000b4c0 <col:24, col:33> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x15000b488 <col:24> 'struct tftp_t *' lvalue ParmVar 0x1500083f8 'recv_tp' 'struct tftp_t *'         |-BinaryOperator 0x15000b788 <line:18:9, col:67> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x15000b598 <col:9, col:13> '<dependent type>' contains-errors lvalue .sin_addr         | | `-RecoveryExpr 0x15000b570 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x15000b550 <col:9> 'struct sockaddr_in' lvalue Var 0x15000b200 'da4' 'struct sockaddr_in'         | `-RecoveryExpr 0x15000b760 <col:24, col:67> '<dependent type>' contains-errors lvalue         |   `-ParenExpr 0x15000b740 <col:24, col:64> 'struct sockaddr_in *' contains-errors         |     `-CStyleCastExpr 0x15000b718 <col:25, col:53> 'struct sockaddr_in *' contains-errors <Dependent>         |       `-UnaryOperator 0x15000b640 <col:47, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow         |         `-RecoveryExpr 0x15000b618 <col:48, col:53> '<dependent type>' contains-errors lvalue         |           `-DeclRefExpr 0x15000b5e0 <col:48> 'struct tftp_session *' lvalue ParmVar 0x158128648 'spt' 'struct tftp_session *'         |-BinaryOperator 0x15000b898 <line:19:9, col:29> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x15000b7f0 <col:9, col:13> '<dependent type>' contains-errors lvalue .sin_port         | | `-RecoveryExpr 0x15000b7c8 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x15000b7a8 <col:9> 'struct sockaddr_in' lvalue Var 0x15000b200 'da4' 'struct sockaddr_in'         | `-RecoveryExpr 0x15000b870 <col:24, col:29> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x15000b838 <col:24> 'struct tftp_session *' lvalue ParmVar 0x158128648 'spt' 'struct tftp_session *'         `-CallExpr 0x15000bb00 <line:21:9, col:55> '<dependent type>' contains-errors           |-DeclRefExpr 0x15000b998 <col:9> 'int ()' Function 0x15000b8e0 'udp_output' 'int ()'           |-RecoveryExpr 0x15000bac0 <col:20> '<dependent type>' contains-errors lvalue           |-DeclRefExpr 0x15000b9d0 <col:26> 'struct mbuf *' lvalue ParmVar 0x150008228 'm' 'struct mbuf *'           |-UnaryOperator 0x15000ba10 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow           | `-RecoveryExpr 0x15000b9f0 <col:30> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x15000ba48 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow           | `-RecoveryExpr 0x15000ba28 <col:36> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x15000bae0 <col:41> '<dependent type>' contains-errors lvalue ","19857":"`-FunctionDecl 0x131128238  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x131128158 <col:6> col:6 used HeaderMapImplTest 'int'   |-ParmVarDecl 0x1311280d8 <col:25> col:25 AddReferenceKey 'int'   `-CompoundStmt 0x131142e00 <col:42, line:7:1>     |-ImplicitCastExpr 0x131128370 <line:2:3> 'int' <LValueToRValue>     | `-DeclRefExpr 0x131128350 <col:3> 'int' lvalue ParmVar 0x131128158 'HeaderMapImplTest' 'int'     |-CallExpr 0x131142960 <line:5:3, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x131128510 <col:3> 'int ()' Function 0x131128458 'EXPECT_NE' 'int ()'     | |-StringLiteral 0x131128530 <col:13> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x131142940 <col:20, col:67> '<dependent type>' contains-errors     |   `-CXXDependentScopeMemberExpr 0x1311428f8 <col:20, col:62> '<dependent type>' contains-errors lvalue .data     |     `-CallExpr 0x1311428d8 <col:20, col:60> '<dependent type>' contains-errors     |       `-CXXDependentScopeMemberExpr 0x131142890 <col:20, col:46> '<dependent type>' contains-errors lvalue .getStringView     |         `-CallExpr 0x131142870 <col:20, col:44> '<dependent type>' contains-errors     |           `-CXXDependentScopeMemberExpr 0x131142828 <col:20, col:38> '<dependent type>' contains-errors lvalue ->value     |             `-CallExpr 0x131142800 <col:20, col:35> '<dependent type>' contains-errors     |               |-CXXDependentScopeMemberExpr 0x131128778 <col:20, col:28> '<dependent type>' contains-errors lvalue .get     |               | `-RecoveryExpr 0x131128758 <col:20> '<dependent type>' contains-errors lvalue     |               `-RecoveryExpr 0x1311287c0 <col:32> '<dependent type>' contains-errors lvalue     `-CallExpr 0x131142dd0 <line:6:3, col:61> '<dependent type>' contains-errors       |-DeclRefExpr 0x131142a70 <col:3> 'int ()' Function 0x1311429b8 'EXPECT_EQ' 'int ()'       |-StringLiteral 0x131142a90 <col:13> 'char[4]' lvalue \"STR\"       `-CallExpr 0x131142db0 <col:20, col:60> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x131142d68 <col:20, col:46> '<dependent type>' contains-errors lvalue .getStringView           `-CallExpr 0x131142d48 <col:20, col:44> '<dependent type>' contains-errors             `-CXXDependentScopeMemberExpr 0x131142d00 <col:20, col:38> '<dependent type>' contains-errors lvalue ->value               `-CallExpr 0x131142cd8 <col:20, col:35> '<dependent type>' contains-errors                 |-CXXDependentScopeMemberExpr 0x131142c70 <col:20, col:28> '<dependent type>' contains-errors lvalue .get                 | `-RecoveryExpr 0x131142c50 <col:20> '<dependent type>' contains-errors lvalue                 `-RecoveryExpr 0x131142cb8 <col:32> '<dependent type>' contains-errors lvalue ","19665":"`-FunctionDecl 0x13e80de38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x13e80dd58 <col:12> col:12 SplFileInfo 'int'   |-ParmVarDecl 0x13e80dcd8 <col:25> col:25 setFileClass 'int'   `-CompoundStmt 0x13e122720 <line:2:1, line:14:1>     `-IfStmt 0x13e122600 <line:9:2, line:11:2>       |-RecoveryExpr 0x13e80e3c0 <line:9:6, col:70> '_Bool' contains-errors       `-CompoundStmt 0x13e80e3e0 <col:79, line:11:2> ","19649":"`-FunctionDecl 0x1329281c8  line:1:1 invalid gx_dc_pattern2_color_has_bbox 'int (const int *)'   |-ParmVarDecl 0x1329280f0 <col:31, col:55> col:55 invalid pdevc 'const int *'   `-CompoundStmt 0x1329284a8 <line:2:1, line:7:1>     |-DeclStmt 0x1329283d0 <line:4:5, col:53>     | `-VarDecl 0x1329282c0 <col:5, col:25> col:25 invalid psh 'const int *'     `-ReturnStmt 0x132928498 <line:6:5, col:24>       `-CXXDependentScopeMemberExpr 0x132928450 <col:12, col:24> '<dependent type>' contains-errors lvalue .have_BBox         `-CXXDependentScopeMemberExpr 0x132928408 <col:12, col:17> '<dependent type>' contains-errors lvalue ->params           `-RecoveryExpr 0x1329283e8 <col:12> '<dependent type>' contains-errors lvalue ","19290":"`-FunctionDecl 0x152928198  line:1:1 rsvg_term 'int (void)'   `-CompoundStmt 0x152928438 <line:2:1, line:8:1>     `-CallExpr 0x152928418 <line:7:5, col:23> 'int'       `-ImplicitCastExpr 0x152928400 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x1529283b0 <col:5> 'int ()' Function 0x1529282f8 'xmlCleanupParser' 'int ()' ","19821":"`-FunctionDecl 0x14a144d48  line:1:12 minix_statfs 'int (struct dentry *, struct kstatfs *)' static   |-ParmVarDecl 0x14a128648 <col:25, col:40> col:40 used dentry 'struct dentry *'   |-ParmVarDecl 0x14a144c28 <col:48, col:64> col:64 used buf 'struct kstatfs *'   `-CompoundStmt 0x14a146b70 <line:2:1, line:13:1>     |-DeclStmt 0x14a145210 <line:3:2, col:52>     | |-RecordDecl 0x14a144e48 <col:2, col:9> col:9 struct minix_sb_info     | `-VarDecl 0x14a144fb8 <col:2, col:51> col:24 used sbi 'struct minix_sb_info *' cinit     |   `-CallExpr 0x14a1451d0 <col:30, col:51> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14a145150 <col:30> 'int ()' Function 0x14a145098 'minix_sb' 'int ()'     |     `-RecoveryExpr 0x14a1451a8 <col:39, col:47> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14a145170 <col:39> 'struct dentry *' lvalue ParmVar 0x14a128648 'dentry' 'struct dentry *'     |-BinaryOperator 0x14a145330 <line:4:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a145260 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145228 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-CXXDependentScopeMemberExpr 0x14a1452e8 <col:16, col:30> '<dependent type>' contains-errors lvalue ->s_magic     |   `-RecoveryExpr 0x14a1452c0 <col:16, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a145288 <col:16> 'struct dentry *' lvalue ParmVar 0x14a128648 'dentry' 'struct dentry *'     |-BinaryOperator 0x14a145458 <line:5:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a145388 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145350 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-CXXDependentScopeMemberExpr 0x14a145410 <col:17, col:31> '<dependent type>' contains-errors lvalue ->s_blocksize     |   `-RecoveryExpr 0x14a1453e8 <col:17, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a1453b0 <col:17> 'struct dentry *' lvalue ParmVar 0x14a128648 'dentry' 'struct dentry *'     |-BinaryOperator 0x14a145658 <line:6:2, col:65> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a1454b0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145478 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-BinaryOperator 0x14a145638 <col:18, col:65> '<dependent type>' contains-errors '<<'     |   |-ParenExpr 0x14a1455b8 <col:18, col:55> '<dependent type>' contains-errors     |   | `-BinaryOperator 0x14a145598 <col:19, col:40> '<dependent type>' contains-errors '-'     |   |   |-RecoveryExpr 0x14a145510 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14a1454d8 <col:19> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |   |   `-RecoveryExpr 0x14a145570 <col:35, col:40> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14a145538 <col:35> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |   `-RecoveryExpr 0x14a145610 <col:60, col:65> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14a1455d8 <col:60> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |-BinaryOperator 0x14a145888 <line:7:2, col:44> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a1456b0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145678 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-CallExpr 0x14a145848 <col:17, col:44> 'int' contains-errors     |   |-ImplicitCastExpr 0x14a145830 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a1457b8 <col:17> 'int ()' Function 0x14a145700 'minix_count_free_blocks' 'int ()'     |   `-ImplicitCastExpr 0x14a145870 <col:41> 'struct minix_sb_info *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14a1457d8 <col:41> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |-BinaryOperator 0x14a145968 <line:8:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a1458e0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a1458a8 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-RecoveryExpr 0x14a145940 <col:18, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a145908 <col:18> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     |-BinaryOperator 0x14a145a48 <line:9:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a1459c0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145988 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-RecoveryExpr 0x14a145a20 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a1459e8 <col:17> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |-BinaryOperator 0x14a146a40 <line:10:2, col:44> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a145aa0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a145a68 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-CallExpr 0x14a146a00 <col:17, col:44> 'int' contains-errors     |   |-ImplicitCastExpr 0x14a145be8 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a145ba8 <col:17> 'int ()' Function 0x14a145af0 'minix_count_free_inodes' 'int ()'     |   `-ImplicitCastExpr 0x14a146a28 <col:41> 'struct minix_sb_info *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14a145bc8 <col:41> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     |-BinaryOperator 0x14a146b20 <line:11:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a146a98 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a146a60 <col:2> 'struct kstatfs *' lvalue ParmVar 0x14a144c28 'buf' 'struct kstatfs *'     | `-RecoveryExpr 0x14a146af8 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a146ac0 <col:19> 'struct minix_sb_info *' contains-errors lvalue Var 0x14a144fb8 'sbi' 'struct minix_sb_info *'     `-ReturnStmt 0x14a146b60 <line:12:2, col:9>       `-IntegerLiteral 0x14a146b40 <col:9> 'int' 0 ","20097":"`-FunctionDecl 0x15c1465a8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15c1466a8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15c146710 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15c146778 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15c146650 <<invalid sloc>> Implicit 882 ","20136":"`-FunctionDecl 0x15180ddc8  line:1:10 invalid GetZoomLevel 'double (int)'   |-ParmVarDecl 0x15180dcf0 <col:23, <invalid sloc>> col:25 invalid 'int'   `-CompoundStmt 0x151827e10 <col:45, line:12:3>     |-DeclStmt 0x15180df18 <line:2:5, col:24>     | `-VarDecl 0x15180de90 <col:5, col:21> col:12 used result 'double' cinit     |   `-FloatingLiteral 0x15180def8 <col:21> 'double' 0.000000e+00     |-RecoveryExpr 0x15180df60 <line:3:5> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15180e2f0 <line:4:5, line:5:14>     | |-UnaryOperator 0x15180e290 <line:4:9, col:59> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15180e258 <col:10, col:59> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15180e0e0 <col:10> 'int ()' Function 0x15180e028 'MaybeGetRenderFrame' 'int ()'     | |   |-RecoveryExpr 0x15180e200 <col:30> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x15180e160 <col:39> 'char[4]' lvalue \"STR\"     | |   `-UnaryOperator 0x15180e240 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x15180e220 <col:47> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15180e2e0 <line:5:7, col:14>     |   `-ImplicitCastExpr 0x15180e2c8 <col:14> 'double' <LValueToRValue>     |     `-DeclRefExpr 0x15180e2a8 <col:14> 'double' lvalue Var 0x15180de90 'result' 'double'     `-ReturnStmt 0x151827e00 <line:11:5, col:12>       `-ImplicitCastExpr 0x15180e3e8 <col:12> 'double' <LValueToRValue>         `-DeclRefExpr 0x15180e3c8 <col:12> 'double' lvalue Var 0x15180de90 'result' 'double' ","19643":"`-FunctionDecl 0x138940b68  line:1:31 fpm_scoreboard_proc_get 'struct fpm_scoreboard_proc_s *(struct fpm_scoreboard_s *, int)'   |-ParmVarDecl 0x1389286e8 <col:55, col:80> col:80 used scoreboard 'struct fpm_scoreboard_s *'   |-ParmVarDecl 0x138928768 <col:92, col:96> col:96 used child_index 'int'   `-CompoundStmt 0x1389412c0 <line:2:1, line:20:1>     |-IfStmt 0x138940d98 <line:3:2, line:5:2>     | |-UnaryOperator 0x138940ca0 <line:3:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138940c88 <col:7> 'struct fpm_scoreboard_s *' <LValueToRValue>     | |   `-DeclRefExpr 0x138940c68 <col:7> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x1389286e8 'scoreboard' 'struct fpm_scoreboard_s *'     | `-CompoundStmt 0x138940d80 <col:19, line:5:2>     |   `-BinaryOperator 0x138940d60 <line:4:3, col:16> 'struct fpm_scoreboard_s *' '='     |     |-DeclRefExpr 0x138940cb8 <col:3> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x1389286e8 'scoreboard' 'struct fpm_scoreboard_s *'     |     `-ImplicitCastExpr 0x138940d48 <col:16> 'struct fpm_scoreboard_s *' <LValueToRValue>     |       `-DeclRefExpr 0x138940d28 <col:16> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x1389286e8 'scoreboard' 'struct fpm_scoreboard_s *'     |-IfStmt 0x138940e68 <line:7:2, line:9:2>     | |-UnaryOperator 0x138940df0 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x138940dd8 <col:7> 'struct fpm_scoreboard_s *' <LValueToRValue>     | |   `-DeclRefExpr 0x138940db8 <col:7> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x1389286e8 'scoreboard' 'struct fpm_scoreboard_s *'     | `-CompoundStmt 0x138940e50 <col:19, line:9:2>     |   `-ReturnStmt 0x138940e40 <line:8:3, col:10>     |     `-RecoveryExpr 0x138940e20 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138940fb0 <line:11:2, line:13:2>     | |-BinaryOperator 0x138940ee0 <line:11:6, col:20> 'int' '<'     | | |-ImplicitCastExpr 0x138940ec8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x138940e88 <col:6> 'int' lvalue ParmVar 0x138928768 'child_index' 'int'     | | `-IntegerLiteral 0x138940ea8 <col:20> 'int' 0     | `-CompoundStmt 0x138940f98 <col:23, line:13:2>     |   `-BinaryOperator 0x138940f78 <line:12:3, col:17> 'int' contains-errors '='     |     |-DeclRefExpr 0x138940f00 <col:3> 'int' lvalue ParmVar 0x138928768 'child_index' 'int'     |     `-RecoveryExpr 0x138940f58 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1389411c0 <line:15:2, line:17:2>     | |-BinaryOperator 0x138941140 <line:15:6, col:66> 'int' contains-errors '||'     | | |-BinaryOperator 0x138941028 <col:6, col:20> 'int' '<'     | | | |-ImplicitCastExpr 0x138941010 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x138940fd0 <col:6> 'int' lvalue ParmVar 0x138928768 'child_index' 'int'     | | | `-IntegerLiteral 0x138940ff0 <col:20> 'int' 0     | | `-BinaryOperator 0x138941120 <col:25, col:66> 'int' contains-errors '>='     | |   |-CStyleCastExpr 0x138941098 <col:25, col:39> 'unsigned int' <IntegralCast>     | |   | `-ImplicitCastExpr 0x138941080 <col:39> 'int' <LValueToRValue> part_of_explicit_cast     | |   |   `-DeclRefExpr 0x138941048 <col:39> 'int' lvalue ParmVar 0x138928768 'child_index' 'int'     | |   `-RecoveryExpr 0x1389410f8 <col:54, col:66> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1389410c0 <col:54> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x1389286e8 'scoreboard' 'struct fpm_scoreboard_s *'     | `-CompoundStmt 0x1389411a8 <col:74, line:17:2>     |   `-ReturnStmt 0x138941198 <line:16:3, col:10>     |     `-RecoveryExpr 0x138941178 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1389412b0 <line:19:2, col:38>       `-ArraySubscriptExpr 0x138941290 <col:9, col:38> '<dependent type>' contains-errors lvalue         |-ImplicitCastExpr 0x138941260 <col:9, col:21> '<dependent type>' contains-errors <LValueToRValue>         | `-RecoveryExpr 0x138941218 <col:9, col:21> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1389411e0 <col:9> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x1389286e8 'scoreboard' 'struct fpm_scoreboard_s *'         `-ImplicitCastExpr 0x138941278 <col:27> 'int' <LValueToRValue>           `-DeclRefExpr 0x138941240 <col:27> 'int' lvalue ParmVar 0x138928768 'child_index' 'int' ","19592":"`-FunctionDecl 0x133026758  line:1:12 snd_ctl_elem_user_tlv 'int (struct snd_kcontrol *, int, unsigned int, unsigned int)' static   |-ParmVarDecl 0x13300e248 <col:34, col:55> col:55 used kctl 'struct snd_kcontrol *'   |-ParmVarDecl 0x13300e2c8 <col:61, col:65> col:65 used op_flag 'int'   |-ParmVarDecl 0x13300e348 <line:2:6, col:19> col:19 used size 'unsigned int'   |-ParmVarDecl 0x133026600 <col:25, col:38> col:38 __user 'unsigned int'   `-CompoundStmt 0x133026d70 <line:3:1, line:8:1>     `-IfStmt 0x133026d40 <line:4:2, line:7:39> has_else       |-BinaryOperator 0x1330268f8 <line:4:6, col:17> 'int' contains-errors '=='       | |-DeclRefExpr 0x133026868 <col:6> 'int' lvalue ParmVar 0x13300e2c8 'op_flag' 'int'       | `-RecoveryExpr 0x1330268d8 <col:17> '<dependent type>' contains-errors lvalue       |-ReturnStmt 0x133026b38 <line:5:3, col:42>       | `-CallExpr 0x133026b00 <col:10, col:42> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x133026a30 <col:10> 'int ()' Function 0x133026978 'replace_user_tlv' 'int ()'       |   |-DeclRefExpr 0x133026a50 <col:27> 'struct snd_kcontrol *' lvalue ParmVar 0x13300e248 'kctl' 'struct snd_kcontrol *'       |   |-RecoveryExpr 0x133026ae0 <col:33> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x133026a88 <col:38> 'unsigned int' lvalue ParmVar 0x13300e348 'size' 'unsigned int'       `-ReturnStmt 0x133026d30 <line:7:3, col:39>         `-CallExpr 0x133026cf8 <col:10, col:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x133026c28 <col:10> 'int ()' Function 0x133026b70 'read_user_tlv' 'int ()'           |-DeclRefExpr 0x133026c48 <col:24> 'struct snd_kcontrol *' lvalue ParmVar 0x13300e248 'kctl' 'struct snd_kcontrol *'           |-RecoveryExpr 0x133026cd8 <col:30> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x133026c80 <col:35> 'unsigned int' lvalue ParmVar 0x13300e348 'size' 'unsigned int' ","19888":"`-FunctionDecl 0x12c00ddf8  line:1:1 invalid xbstream_close 'int (int *)'   |-ParmVarDecl 0x12c00dd28 <col:16, col:27> col:27 invalid file 'int *'   `-CompoundStmt 0x12c027828 <line:2:1, line:13:1>     |-DeclStmt 0x12c00df60 <line:4:2, col:14>     | `-VarDecl 0x12c00ded8 <col:2, col:13> col:8 used rc 'int' cinit     |   `-IntegerLiteral 0x12c00df40 <col:13> 'int' 0     |-BinaryOperator 0x12c00e268 <line:8:2, col:55> 'int' contains-errors '='     | |-DeclRefExpr 0x12c00df90 <col:2> 'int' lvalue Var 0x12c00ded8 'rc' 'int'     | `-CallExpr 0x12c00e240 <col:7, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c00e110 <col:7> 'int ()' Function 0x12c00e058 'xb_stream_write_close' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x12c00e1f8 <col:29, col:42> '<dependent type>' contains-errors lvalue ->xbstream_file     |     `-RecoveryExpr 0x12c00e1d8 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c00e3a8 <line:10:2, col:14> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c00e368 <col:2> 'int ()' Function 0x12c00e2b0 'my_free' 'int ()'     | `-RecoveryExpr 0x12c00e388 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c027818 <line:12:2, col:9>       `-ImplicitCastExpr 0x12c027800 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c00e3d0 <col:9> 'int' lvalue Var 0x12c00ded8 'rc' 'int' ","19344":"`-FunctionDecl 0x10500dda0  line:1:20 __flush_tlb_one_user 'void (unsigned long)' static inline   |-ParmVarDecl 0x10500dcd8 <col:41, col:55> col:55 used addr 'unsigned long'   `-CompoundStmt 0x10500e128 <line:2:1, line:4:1>     `-CallExpr 0x10500e0f8 <line:3:2, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x10500dfc0 <col:2> 'int ()' Function 0x10500df08 'PVOP_VCALL1' 'int ()'       |-CXXDependentScopeMemberExpr 0x10500e0b0 <col:14, col:18> '<dependent type>' contains-errors lvalue .flush_tlb_one_user       | `-RecoveryExpr 0x10500e090 <col:14> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x10500e040 <col:38> 'unsigned long' lvalue ParmVar 0x10500dcd8 'addr' 'unsigned long' ","20169":"`-FunctionDecl 0x13280e030  line:1:6 invalid lcdSetPixels_ArrayBuffer_flat 'void (int *, short, short, short, unsigned int)'   |-ParmVarDecl 0x13280dd28 <col:36, col:48> col:48 invalid gfx 'int *'   |-ParmVarDecl 0x13280dda8 <col:53, col:59> col:59 used x 'short'   |-ParmVarDecl 0x13280de28 <col:62, col:68> col:68 used y 'short'   |-ParmVarDecl 0x13280dea8 <col:71, col:77> col:77 used pixelCount 'short'   |-ParmVarDecl 0x13280df28 <col:89, col:102> col:102 used col 'unsigned int'   `-CompoundStmt 0x13282b208 <col:107, line:44:1>     |-DeclStmt 0x13280e258 <line:2:3, col:56>     | `-VarDecl 0x13280e148 <col:3, col:45> col:18 used ptr 'unsigned char *' cinit     |   `-CStyleCastExpr 0x13280e230 <col:24, col:45> 'unsigned char *' contains-errors <Dependent>     |     `-CXXDependentScopeMemberExpr 0x13280e1d0 <col:40, col:45> '<dependent type>' contains-errors lvalue ->backendData     |       `-RecoveryExpr 0x13280e1b0 <col:40> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132828598 <line:3:3, col:70>     | `-VarDecl 0x13280e288 <col:3, col:69> col:16 used idx 'unsigned int' cinit     |   `-CallExpr 0x132828558 <col:22, col:69> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1328284b8 <col:22> 'int ()' Function 0x132828400 'lcdGetPixelIndex_ArrayBuffer' 'int ()'     |     |-RecoveryExpr 0x1328284d8 <col:51> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x1328284f8 <col:55> 'short' lvalue ParmVar 0x13280dda8 'x' 'short'     |     |-DeclRefExpr 0x132828518 <col:57> 'short' lvalue ParmVar 0x13280de28 'y' 'short'     |     `-DeclRefExpr 0x132828538 <col:59> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'     |-CompoundAssignOperator 0x132828648 <line:4:3, col:15> 'unsigned char *' contains-errors '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'     | |-DeclRefExpr 0x1328285b0 <col:3> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'     | `-BinaryOperator 0x132828628 <col:10, col:15> 'unsigned int' contains-errors '>>'     |   |-ImplicitCastExpr 0x132828610 <col:10> 'unsigned int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x1328285d0 <col:10> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'     |   `-IntegerLiteral 0x1328285f0 <col:15> 'int' 3     |-DeclStmt 0x132828848 <line:6:3, col:49>     | `-VarDecl 0x132828690 <col:3, col:48> col:16 whiteMask 'unsigned int' cinit     |   `-BinaryOperator 0x132828828 <col:28, col:48> '<dependent type>' contains-errors '-'     |     |-ParenExpr 0x1328287e8 <col:28, col:46> '<dependent type>' contains-errors     |     | `-BinaryOperator 0x1328287c8 <col:29, col:43> '<dependent type>' contains-errors '<<'     |     |   |-IntegerLiteral 0x1328286f8 <col:29> 'unsigned int' 1     |     |   `-CXXDependentScopeMemberExpr 0x132828780 <col:33, col:43> '<dependent type>' contains-errors lvalue .bpp     |     |     `-CXXDependentScopeMemberExpr 0x132828738 <col:33, col:38> '<dependent type>' contains-errors lvalue ->data     |     |       `-RecoveryExpr 0x132828718 <col:33> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x132828808 <col:48> 'int' 1     `-WhileStmt 0x13282b1e8 <line:9:3, line:43:3>       |-UnaryOperator 0x132828880 <line:9:10, col:20> 'short' postfix '--' cannot overflow       | `-DeclRefExpr 0x132828860 <col:10> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'       `-CompoundStmt 0x13282b1d0 <col:24, line:43:3>         `-IfStmt 0x13282b1a0 <line:10:5, line:42:5> has_else           |-BinaryOperator 0x132828968 <line:10:9, col:23> '<dependent type>' contains-errors '&'           | |-CXXDependentScopeMemberExpr 0x132828900 <col:9, col:19> '<dependent type>' contains-errors lvalue .bpp           | | `-CXXDependentScopeMemberExpr 0x1328288b8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->data           | |   `-RecoveryExpr 0x132828898 <col:9> '<dependent type>' contains-errors lvalue           | `-IntegerLiteral 0x132828948 <col:23> 'int' 7           |-CompoundStmt 0x13282acb8 <col:26, line:36:5>           | |-BinaryOperator 0x132828a38 <line:11:7, col:19> 'unsigned int' contains-errors '='           | | |-DeclRefExpr 0x132828988 <col:7> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'           | | `-BinaryOperator 0x132828a18 <col:13, col:19> 'unsigned int' contains-errors '&'           | |   |-ImplicitCastExpr 0x1328289e8 <col:13> 'unsigned int' contains-errors <LValueToRValue>           | |   | `-DeclRefExpr 0x1328289a8 <col:13> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'           | |   `-ImplicitCastExpr 0x132828a00 <col:19> 'unsigned int' <IntegralCast>           | |     `-IntegerLiteral 0x1328289c8 <col:19> 'int' 7           | |-IfStmt 0x132829ed0 <line:12:7, line:25:7>           | | |-BinaryOperator 0x132828b90 <line:12:11, col:28> 'int' contains-errors '&&'           | | | |-RecoveryExpr 0x132828b20 <col:11> '<dependent type>' contains-errors lvalue           | | | `-BinaryOperator 0x132828b70 <col:23, col:28> 'int' contains-errors '=='           | | |   |-ImplicitCastExpr 0x132828b40 <col:23> 'unsigned int' contains-errors <LValueToRValue>           | | |   | `-DeclRefExpr 0x132828a70 <col:23> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'           | | |   `-ImplicitCastExpr 0x132828b58 <col:28> 'unsigned int' <IntegralCast>           | | |     `-IntegerLiteral 0x132828a90 <col:28> 'int' 0           | | `-CompoundStmt 0x132829eb0 <col:31, line:25:7>           | |   |-DeclStmt 0x132828e10 <line:15:9, col:61>           | |   | `-VarDecl 0x132828bc8 <col:9, col:60> col:13 used wholeBytes 'int' cinit           | |   |   `-BinaryOperator 0x132828df0 <col:26, col:60> '<dependent type>' contains-errors '>>'           | |   |     |-ParenExpr 0x132828db0 <col:26, col:55> '<dependent type>' contains-errors           | |   |     | `-BinaryOperator 0x132828d90 <col:27, col:54> '<dependent type>' contains-errors '*'           | |   |     |   |-CXXDependentScopeMemberExpr 0x132828c98 <col:27, col:37> '<dependent type>' contains-errors lvalue .bpp           | |   |     |   | `-CXXDependentScopeMemberExpr 0x132828c50 <col:27, col:32> '<dependent type>' contains-errors lvalue ->data           | |   |     |   |   `-RecoveryExpr 0x132828c30 <col:27> '<dependent type>' contains-errors lvalue           | |   |     |   `-ParenExpr 0x132828d70 <col:41, col:54> 'int'           | |   |     |     `-BinaryOperator 0x132828d50 <col:42, col:53> 'int' '+'           | |   |     |       |-ImplicitCastExpr 0x132828d38 <col:42> 'int' <IntegralCast>           | |   |     |       | `-ImplicitCastExpr 0x132828d20 <col:42> 'short' <LValueToRValue>           | |   |     |       |   `-DeclRefExpr 0x132828ce0 <col:42> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'           | |   |     |       `-IntegerLiteral 0x132828d00 <col:53> 'int' 1           | |   |     `-IntegerLiteral 0x132828dd0 <col:60> 'int' 3           | |   `-IfStmt 0x132829e90 <line:16:9, line:24:9>           | |     |-ImplicitCastExpr 0x132828e48 <line:16:13> 'int' contains-errors <LValueToRValue>           | |     | `-DeclRefExpr 0x132828e28 <col:13> 'int' contains-errors lvalue Var 0x132828bc8 'wholeBytes' 'int'           | |     `-CompoundStmt 0x132829e60 <col:25, line:24:9>           | |       |-DeclStmt 0x132828ff8 <line:17:11, col:38>           | |       | `-VarDecl 0x132828e70 <col:11, col:37> col:16 used c 'char' cinit           | |       |   `-CStyleCastExpr 0x132828fd0 <col:20, col:37> 'char' <IntegralCast>           | |       |     `-ParenExpr 0x132828fb0 <col:26, col:37> 'int'           | |       |       `-ConditionalOperator 0x132828f50 <col:27, col:36> 'int'           | |       |         |-ImplicitCastExpr 0x132828f38 <col:27> 'unsigned int' <LValueToRValue>           | |       |         | `-DeclRefExpr 0x132828ed8 <col:27> 'unsigned int' lvalue ParmVar 0x13280df28 'col' 'unsigned int'           | |       |         |-IntegerLiteral 0x132828ef8 <col:31> 'int' 255           | |       |         `-IntegerLiteral 0x132828f18 <col:36> 'int' 0           | |       |-BinaryOperator 0x1328292c8 <line:18:11, col:75> 'short' contains-errors '='           | |       | |-DeclRefExpr 0x132829010 <col:11> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'           | |       | `-CStyleCastExpr 0x1328292a0 <col:24, col:75> 'short' contains-errors <Dependent>           | |       |   `-ParenExpr 0x132829280 <col:31, col:75> '<dependent type>' contains-errors           | |       |     `-BinaryOperator 0x132829228 <col:32, col:74> '<dependent type>' contains-errors '-'           | |       |       |-BinaryOperator 0x1328290a0 <col:32, col:43> 'int' '+'           | |       |       | |-ImplicitCastExpr 0x132829088 <col:32> 'int' <IntegralCast>           | |       |       | | `-ImplicitCastExpr 0x132829070 <col:32> 'short' <LValueToRValue>           | |       |       | |   `-DeclRefExpr 0x132829030 <col:32> 'short' lvalue ParmVar 0x13280dea8 'pixelCount' 'short'           | |       |       | `-IntegerLiteral 0x132829050 <col:43> 'int' 1           | |       |       `-ParenExpr 0x132829208 <col:47, col:74> '<dependent type>' contains-errors           | |       |         `-BinaryOperator 0x1328291e8 <col:48, col:71> '<dependent type>' contains-errors '\/'           | |       |           |-BinaryOperator 0x132829118 <col:48, col:59> 'int' contains-errors '*'           | |       |           | |-ImplicitCastExpr 0x132829100 <col:48> 'int' contains-errors <LValueToRValue>           | |       |           | | `-DeclRefExpr 0x1328290c0 <col:48> 'int' contains-errors lvalue Var 0x132828bc8 'wholeBytes' 'int'           | |       |           | `-IntegerLiteral 0x1328290e0 <col:59> 'int' 8           | |       |           `-CXXDependentScopeMemberExpr 0x1328291a0 <col:61, col:71> '<dependent type>' contains-errors lvalue .bpp           | |       |             `-CXXDependentScopeMemberExpr 0x132829158 <col:61, col:66> '<dependent type>' contains-errors lvalue ->data           | |       |               `-RecoveryExpr 0x132829138 <col:61> '<dependent type>' contains-errors lvalue           | |       |-WhileStmt 0x132829e38 <line:19:11, line:22:11>           | |       | |-UnaryOperator 0x132829308 <line:19:18, col:28> 'int' contains-errors postfix '--'           | |       | | `-DeclRefExpr 0x1328292e8 <col:18> 'int' contains-errors lvalue Var 0x132828bc8 'wholeBytes' 'int'           | |       | `-CompoundStmt 0x132829e18 <col:32, line:22:11>           | |       |   |-BinaryOperator 0x1328293c0 <line:20:13, col:20> 'unsigned char' contains-errors '='           | |       |   | |-UnaryOperator 0x132829358 <col:13, col:14> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow           | |       |   | | `-ImplicitCastExpr 0x132829340 <col:14> 'unsigned char *' contains-errors <LValueToRValue>           | |       |   | |   `-DeclRefExpr 0x132829320 <col:14> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'           | |       |   | `-ImplicitCastExpr 0x1328293a8 <col:20> 'unsigned char' <IntegralCast>           | |       |   |   `-ImplicitCastExpr 0x132829390 <col:20> 'char' <LValueToRValue>           | |       |   |     `-DeclRefExpr 0x132829370 <col:20> 'char' lvalue Var 0x132828e70 'c' 'char'           | |       |   `-UnaryOperator 0x132829e00 <line:21:13, col:16> 'unsigned char *' contains-errors postfix '++'           | |       |     `-DeclRefExpr 0x1328293e0 <col:13> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'           | |       `-ContinueStmt 0x132829e58 <line:23:11>           | |-DeclStmt 0x13282a138 <line:26:7, col:61>           | | `-VarDecl 0x132829f08 <col:7, col:60> col:20 used mask 'unsigned int' cinit           | |   `-BinaryOperator 0x13282a118 <col:27, col:60> 'unsigned int' contains-errors '-'           | |     |-CStyleCastExpr 0x13282a0b8 <col:27, col:58> 'unsigned int' contains-errors <Dependent>           | |     | `-ParenExpr 0x13282a098 <col:41, col:58> '<dependent type>' contains-errors           | |     |   `-BinaryOperator 0x13282a040 <col:42, col:55> '<dependent type>' contains-errors '<<'           | |     |     |-IntegerLiteral 0x132829f70 <col:42> 'int' 1           | |     |     `-CXXDependentScopeMemberExpr 0x132829ff8 <col:45, col:55> '<dependent type>' contains-errors lvalue .bpp           | |     |       `-CXXDependentScopeMemberExpr 0x132829fb0 <col:45, col:50> '<dependent type>' contains-errors lvalue ->data           | |     |         `-RecoveryExpr 0x132829f90 <col:45> '<dependent type>' contains-errors lvalue           | |     `-ImplicitCastExpr 0x13282a100 <col:60> 'unsigned int' <IntegralCast>           | |       `-IntegerLiteral 0x13282a0e0 <col:60> 'int' 1           | |-DeclStmt 0x13282a278 <line:27:7, col:49>           | | `-VarDecl 0x13282a168 <col:7, col:46> col:20 used existing 'unsigned int' cinit           | |   `-CStyleCastExpr 0x13282a250 <col:31, col:46> 'unsigned int' contains-errors <IntegralCast>           | |     `-ImplicitCastExpr 0x13282a238 <col:45, col:46> 'unsigned char' contains-errors <LValueToRValue> part_of_explicit_cast           | |       `-UnaryOperator 0x13282a208 <col:45, col:46> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow           | |         `-ImplicitCastExpr 0x13282a1f0 <col:46> 'unsigned char *' contains-errors <LValueToRValue>           | |           `-DeclRefExpr 0x13282a1d0 <col:46> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'           | |-DeclStmt 0x13282a568 <line:28:7, col:110>           | | `-VarDecl 0x13282a2a8 <col:7, col:20> col:20 used bitIdx 'unsigned int'           | |-BinaryOperator 0x13282a8e8 <line:29:7, col:70> 'unsigned char' contains-errors '='           | | |-UnaryOperator 0x13282a5b8 <col:7, col:8> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow           | | | `-ImplicitCastExpr 0x13282a5a0 <col:8> 'unsigned char *' contains-errors <LValueToRValue>           | | |   `-DeclRefExpr 0x13282a580 <col:8> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'           | | `-ImplicitCastExpr 0x13282a8d0 <col:14, col:70> 'unsigned char' contains-errors <IntegralCast>           | |   `-CStyleCastExpr 0x13282a8a8 <col:14, col:70> 'char' contains-errors <IntegralCast>           | |     `-ParenExpr 0x13282a888 <col:20, col:70> 'unsigned int' contains-errors           | |       `-BinaryOperator 0x13282a838 <col:21, col:69> 'unsigned int' contains-errors '|'           | |         |-ParenExpr 0x13282a6f0 <col:21, col:46> 'unsigned int' contains-errors           | |         | `-BinaryOperator 0x13282a6d0 <col:22, col:45> 'unsigned int' contains-errors '&'           | |         |   |-ImplicitCastExpr 0x13282a6b8 <col:22> 'unsigned int' contains-errors <LValueToRValue>           | |         |   | `-DeclRefExpr 0x13282a5d0 <col:22> 'unsigned int' contains-errors lvalue Var 0x13282a168 'existing' 'unsigned int'           | |         |   `-UnaryOperator 0x13282a6a0 <col:31, col:45> 'unsigned int' contains-errors prefix '~' cannot overflow           | |         |     `-ParenExpr 0x13282a680 <col:32, col:45> 'unsigned int' contains-errors           | |         |       `-BinaryOperator 0x13282a660 <col:33, col:39> 'unsigned int' contains-errors '<<'           | |         |         |-ImplicitCastExpr 0x13282a630 <col:33> 'unsigned int' contains-errors <LValueToRValue>           | |         |         | `-DeclRefExpr 0x13282a5f0 <col:33> 'unsigned int' contains-errors lvalue Var 0x132829f08 'mask' 'unsigned int'           | |         |         `-ImplicitCastExpr 0x13282a648 <col:39> 'unsigned int' <LValueToRValue>           | |         |           `-DeclRefExpr 0x13282a610 <col:39> 'unsigned int' lvalue Var 0x13282a2a8 'bitIdx' 'unsigned int'           | |         `-ParenExpr 0x13282a818 <col:50, col:69> 'unsigned int' contains-errors           | |           `-BinaryOperator 0x13282a7f8 <col:51, col:63> 'unsigned int' contains-errors '<<'           | |             |-ParenExpr 0x13282a7a0 <col:51, col:60> 'unsigned int' contains-errors           | |             | `-BinaryOperator 0x13282a780 <col:52, col:56> 'unsigned int' contains-errors '&'           | |             |   |-ImplicitCastExpr 0x13282a750 <col:52> 'unsigned int' <LValueToRValue>           | |             |   | `-DeclRefExpr 0x13282a710 <col:52> 'unsigned int' lvalue ParmVar 0x13280df28 'col' 'unsigned int'           | |             |   `-ImplicitCastExpr 0x13282a768 <col:56> 'unsigned int' contains-errors <LValueToRValue>           | |             |     `-DeclRefExpr 0x13282a730 <col:56> 'unsigned int' contains-errors lvalue Var 0x132829f08 'mask' 'unsigned int'           | |             `-ImplicitCastExpr 0x13282a7e0 <col:63> 'unsigned int' <LValueToRValue>           | |               `-DeclRefExpr 0x13282a7c0 <col:63> 'unsigned int' lvalue Var 0x13282a2a8 'bitIdx' 'unsigned int'           | `-IfStmt 0x13282ac88 <line:30:7, line:35:7> has_else           |   |-BinaryOperator 0x13282aa10 <line:30:11, col:29> '<dependent type>' contains-errors '&'           |   | |-CXXDependentScopeMemberExpr 0x13282a970 <col:11, col:21> '<dependent type>' contains-errors lvalue .flags           |   | | `-CXXDependentScopeMemberExpr 0x13282a928 <col:11, col:16> '<dependent type>' contains-errors lvalue ->data           |   | |   `-RecoveryExpr 0x13282a908 <col:11> '<dependent type>' contains-errors lvalue           |   | `-RecoveryExpr 0x13282a9f0 <col:29> '<dependent type>' contains-errors lvalue           |   |-CompoundStmt 0x13282aa68 <col:72, line:32:7>           |   | `-UnaryOperator 0x13282aa50 <line:31:9, col:12> 'unsigned char *' contains-errors postfix '++'           |   |   `-DeclRefExpr 0x13282aa30 <col:9> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'           |   `-CompoundStmt 0x13282ac68 <line:32:14, line:35:7>           |     |-CompoundAssignOperator 0x13282ab50 <line:33:9, col:26> 'unsigned int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |     | |-DeclRefExpr 0x13282aa80 <col:9> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'           |     | `-CXXDependentScopeMemberExpr 0x13282ab08 <col:16, col:26> '<dependent type>' contains-errors lvalue .bpp           |     |   `-CXXDependentScopeMemberExpr 0x13282aac0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->data           |     |     `-RecoveryExpr 0x13282aaa0 <col:16> '<dependent type>' contains-errors lvalue           |     `-IfStmt 0x13282ac48 <line:34:9, col:24>           |       |-BinaryOperator 0x13282abf0 <col:13, col:18> 'int' contains-errors '>='           |       | |-ImplicitCastExpr 0x13282abc0 <col:13> 'unsigned int' contains-errors <LValueToRValue>           |       | | `-DeclRefExpr 0x13282ab80 <col:13> 'unsigned int' contains-errors lvalue Var 0x13280e288 'idx' 'unsigned int'           |       | `-ImplicitCastExpr 0x13282abd8 <col:18> 'unsigned int' <IntegralCast>           |       |   `-IntegerLiteral 0x13282aba0 <col:18> 'int' 8           |       `-UnaryOperator 0x13282ac30 <col:21, col:24> 'unsigned char *' contains-errors postfix '++'           |         `-DeclRefExpr 0x13282ac10 <col:21> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'           `-CompoundStmt 0x13282b180 <line:36:12, line:42:5>             |-DeclStmt 0x13282ad80 <line:37:7, col:12>             | `-VarDecl 0x13282ad18 <col:7, col:11> col:11 used i 'int'             `-ForStmt 0x13282b148 <line:38:7, line:41:7>               |-BinaryOperator 0x13282add8 <line:38:12, col:14> 'int' '='               | |-DeclRefExpr 0x13282ad98 <col:12> 'int' lvalue Var 0x13282ad18 'i' 'int'               | `-IntegerLiteral 0x13282adb8 <col:14> 'int' 0               |-<<<NULL>>>               |-BinaryOperator 0x13282aed0 <col:16, col:28> 'int' contains-errors '<'               | |-DeclRefExpr 0x13282ae00 <col:16> 'int' lvalue Var 0x13282ad18 'i' 'int'               | `-CXXDependentScopeMemberExpr 0x13282ae88 <col:18, col:28> '<dependent type>' contains-errors lvalue .bpp               |   `-CXXDependentScopeMemberExpr 0x13282ae40 <col:18, col:23> '<dependent type>' contains-errors lvalue ->data               |     `-RecoveryExpr 0x13282ae20 <col:18> '<dependent type>' contains-errors lvalue               |-CompoundAssignOperator 0x13282af30 <col:32, col:35> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'               | |-DeclRefExpr 0x13282aef0 <col:32> 'int' lvalue Var 0x13282ad18 'i' 'int'               | `-IntegerLiteral 0x13282af10 <col:35> 'int' 8               `-CompoundStmt 0x13282b128 <col:38, line:41:7>                 |-BinaryOperator 0x13282b0d0 <line:39:9, col:31> 'unsigned char' contains-errors '='                 | |-UnaryOperator 0x13282af98 <col:9, col:10> 'unsigned char' contains-errors lvalue prefix '*' cannot overflow                 | | `-ImplicitCastExpr 0x13282af80 <col:10> 'unsigned char *' contains-errors <LValueToRValue>                 | |   `-DeclRefExpr 0x13282af60 <col:10> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *'                 | `-ImplicitCastExpr 0x13282b0b8 <col:16, col:31> 'unsigned char' <IntegralCast>                 |   `-CStyleCastExpr 0x13282b090 <col:16, col:31> 'char' <IntegralCast>                 |     `-ParenExpr 0x13282b070 <col:22, col:31> 'unsigned int'                 |       `-BinaryOperator 0x13282b020 <col:23, col:30> 'unsigned int' '>>'                 |         |-ImplicitCastExpr 0x13282aff0 <col:23> 'unsigned int' <LValueToRValue>                 |         | `-DeclRefExpr 0x13282afb0 <col:23> 'unsigned int' lvalue ParmVar 0x13280df28 'col' 'unsigned int'                 |         `-ImplicitCastExpr 0x13282b008 <col:30> 'int' <LValueToRValue>                 |           `-DeclRefExpr 0x13282afd0 <col:30> 'int' lvalue Var 0x13282ad18 'i' 'int'                 `-UnaryOperator 0x13282b110 <line:40:9, col:12> 'unsigned char *' contains-errors postfix '++'                   `-DeclRefExpr 0x13282b0f0 <col:9> 'unsigned char *' contains-errors lvalue Var 0x13280e148 'ptr' 'unsigned char *' ","19604":"`-FunctionDecl 0x14000dda8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x14000dcd8 <col:14> col:14 unserialize 'int'   `-CompoundStmt 0x140028108 <line:2:1, line:27:1>     |-DeclStmt 0x14000df70 <line:3:2, col:18>     | `-VarDecl 0x14000deb8 <col:2, col:14> col:8 used buf 'char *' cinit     |   `-RecoveryExpr 0x14000df50 <col:14> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14000e008 <line:4:2, col:13>     | `-VarDecl 0x14000dfa0 <col:2, col:6> col:6 used buf_len 'int'     |-DeclStmt 0x14000e0d0 <line:5:2, col:24>     | `-VarDecl 0x14000e068 <col:2, col:23> col:23 used p 'const unsigned char *'     |-IfStmt 0x14000e3d0 <line:8:2, line:10:2>     | |-RecoveryExpr 0x14000e3a0 <line:8:6, col:81> '_Bool' contains-errors     | `-CompoundStmt 0x14000e3c0 <col:90, line:10:2>     |-IfStmt 0x140027488 <line:12:2, line:14:2>     | |-BinaryOperator 0x140027458 <line:12:6, col:17> 'int' '=='     | | |-ImplicitCastExpr 0x140027440 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x140027400 <col:6> 'int' lvalue Var 0x14000dfa0 'buf_len' 'int'     | | `-IntegerLiteral 0x140027420 <col:17> 'int' 0     | `-CompoundStmt 0x140027478 <col:20, line:14:2>     |-BinaryOperator 0x140027540 <line:16:2, col:29> 'const unsigned char *' contains-errors '='     | |-DeclRefExpr 0x1400274a8 <col:2> 'const unsigned char *' lvalue Var 0x14000e068 'p' 'const unsigned char *'     | `-CStyleCastExpr 0x140027518 <col:6, col:29> 'const unsigned char *' contains-errors <BitCast>     |   `-ImplicitCastExpr 0x140027500 <col:29> 'char *' contains-errors <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x1400274c8 <col:29> 'char *' contains-errors lvalue Var 0x14000deb8 'buf' 'char *'     |-CallExpr 0x1400276c0 <line:17:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140027640 <col:2> 'int ()' Function 0x140027588 'PHP_VAR_UNSERIALIZE_INIT' 'int ()'     | `-RecoveryExpr 0x1400276a0 <col:27> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1400280c8 <line:18:2, line:25:2>       |-RecoveryExpr 0x140027948 <line:18:6, col:78> '_Bool' contains-errors       `-CompoundStmt 0x1400280a0 <col:81, line:25:2>         |-CallExpr 0x140027ac8 <line:19:3, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x140027a48 <col:3> 'int ()' Function 0x140027990 'PHP_VAR_UNSERIALIZE_DESTROY' 'int ()'         | `-RecoveryExpr 0x140027aa8 <col:31> '<dependent type>' contains-errors lvalue         |-CallExpr 0x140027c50 <line:20:3, col:25> '<dependent type>' contains-errors         | |-DeclRefExpr 0x140027bd0 <col:3> 'int ()' Function 0x140027b18 'zval_dtor' 'int ()'         | `-RecoveryExpr 0x140027c30 <col:13> '<dependent type>' contains-errors lvalue         `-IfStmt 0x140028080 <line:21:3, line:23:3>           |-RecoveryExpr 0x140027d78 <line:21:7, col:20> '_Bool' contains-errors           `-CompoundStmt 0x140028070 <col:23, line:23:3> ","19438":"`-FunctionDecl 0x14b82abe8  line:1:26 invalid nft_table_lookup_byhandle 'struct nft_table *(const struct net *, const struct nlattr *, int, int)' static   |-ParmVarDecl 0x14b80e2e8 <col:52, col:70> col:70 used net 'const struct net *'   |-ParmVarDecl 0x14b82a8c8 <line:2:10, col:31> col:31 used nla 'const struct nlattr *'   |-ParmVarDecl 0x14b82a960 <line:3:10, col:13> col:13 invalid genmask 'int'   |-ParmVarDecl 0x14b82a9e0 <col:22, col:26> col:26 invalid nlpid 'int'   `-CompoundStmt 0x14b82dbb0 <line:4:1, line:21:1>     |-DeclStmt 0x14b82ae98 <line:5:2, col:33>     | |-RecordDecl 0x14b82acb0 <col:2, col:9> col:9 struct nftables_pernet     | `-VarDecl 0x14b82ae18 <col:2, col:26> col:26 used nft_net 'struct nftables_pernet *'     |-DeclStmt 0x14b82afa0 <line:6:2, col:25>     | `-VarDecl 0x14b82af38 <col:2, col:20> col:20 used table 'struct nft_table *'     |-BinaryOperator 0x14b82b210 <line:8:2, col:26> 'struct nftables_pernet *' '='     | |-DeclRefExpr 0x14b82afb8 <col:2> 'struct nftables_pernet *' lvalue Var 0x14b82ae18 'nft_net' 'struct nftables_pernet *'     | `-ImplicitCastExpr 0x14b82b1f8 <col:12, col:26> 'struct nftables_pernet *' <IntegralToPointer>     |   `-CallExpr 0x14b82b1b8 <col:12, col:26> 'int'     |     |-ImplicitCastExpr 0x14b82b1a0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14b82b130 <col:12> 'int ()' Function 0x14b82b078 'nft_pernet' 'int ()'     |     `-ImplicitCastExpr 0x14b82b1e0 <col:23> 'const struct net *' <LValueToRValue>     |       `-DeclRefExpr 0x14b82b150 <col:23> 'const struct net *' lvalue ParmVar 0x14b80e2e8 'net' 'const struct net *'     |-CallExpr 0x14b82b438 <line:9:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b82b310 <col:2> 'int ()' Function 0x14b82b258 'list_for_each_entry' 'int ()'     | |-DeclRefExpr 0x14b82b330 <col:22> 'struct nft_table *' lvalue Var 0x14b82af38 'table' 'struct nft_table *'     | |-UnaryOperator 0x14b82b3b0 <col:29, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14b82b388 <col:30, col:39> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14b82b350 <col:30> 'struct nftables_pernet *' lvalue Var 0x14b82ae18 'nft_net' 'struct nftables_pernet *'     | `-RecoveryExpr 0x14b82b418 <col:47> '<dependent type>' contains-errors lvalue     |-CompoundStmt 0x14b82da80 <col:53, line:18:2>     | `-IfStmt 0x14b82da60 <line:10:3, line:17:3>     |   |-BinaryOperator 0x14b82d548 <line:10:7, line:11:40> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x14b82b788 <line:10:7, col:48> 'int' contains-errors '=='     |   | | |-CallExpr 0x14b82b700 <col:7, col:36> 'int'     |   | | | |-ImplicitCastExpr 0x14b82b6e8 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x14b82b550 <col:7> 'int ()' Function 0x14b82b498 'be64_to_cpu' 'int ()'     |   | | | `-CallExpr 0x14b82b6a8 <col:19, col:35> 'int'     |   | | |   |-ImplicitCastExpr 0x14b82b690 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | `-DeclRefExpr 0x14b82b650 <col:19> 'int ()' Function 0x14b82b598 'nla_get_be64' 'int ()'     |   | | |   `-ImplicitCastExpr 0x14b82b6d0 <col:32> 'const struct nlattr *' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x14b82b670 <col:32> 'const struct nlattr *' lvalue ParmVar 0x14b82a8c8 'nla' 'const struct nlattr *'     |   | | `-RecoveryExpr 0x14b82b760 <col:41, col:48> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14b82b728 <col:41> 'struct nft_table *' lvalue Var 0x14b82af38 'table' 'struct nft_table *'     |   | `-CallExpr 0x14b82d518 <line:11:7, col:40> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14b82d4b8 <col:7> 'int ()' Function 0x14b82d400 'nft_active_genmask' 'int ()'     |   |   |-DeclRefExpr 0x14b82d4d8 <col:26> 'struct nft_table *' lvalue Var 0x14b82af38 'table' 'struct nft_table *'     |   |   `-RecoveryExpr 0x14b82d4f8 <col:33> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x14b82da40 <col:43, line:17:3>     |     |-IfStmt 0x14b82d9d8 <line:12:4, line:14:26>     |     | |-BinaryOperator 0x14b82d7c0 <line:12:8, line:13:33> 'int' contains-errors '&&'     |     | | |-BinaryOperator 0x14b82d700 <line:12:8, line:13:8> 'int' contains-errors '&&'     |     | | | |-CallExpr 0x14b82d6a0 <line:12:8, col:33> 'int'     |     | | | | |-ImplicitCastExpr 0x14b82d688 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | | | | | `-DeclRefExpr 0x14b82d648 <col:8> 'int ()' Function 0x14b82d590 'nft_table_has_owner' 'int ()'     |     | | | | `-ImplicitCastExpr 0x14b82d6c8 <col:28> 'struct nft_table *' <LValueToRValue>     |     | | | |   `-DeclRefExpr 0x14b82d668 <col:28> 'struct nft_table *' lvalue Var 0x14b82af38 'table' 'struct nft_table *'     |     | | | `-RecoveryExpr 0x14b82d6e0 <line:13:8> '<dependent type>' contains-errors lvalue     |     | | `-BinaryOperator 0x14b82d7a0 <col:17, col:33> 'int' contains-errors '!='     |     | |   |-RecoveryExpr 0x14b82d758 <col:17, col:24> '<dependent type>' contains-errors lvalue     |     | |   | `-DeclRefExpr 0x14b82d720 <col:17> 'struct nft_table *' lvalue Var 0x14b82af38 'table' 'struct nft_table *'     |     | |   `-RecoveryExpr 0x14b82d780 <col:33> '<dependent type>' contains-errors lvalue     |     | `-ReturnStmt 0x14b82d9c8 <line:14:5, col:26>     |     |   `-CallExpr 0x14b82d9a0 <col:12, col:26> '<dependent type>' contains-errors     |     |     |-DeclRefExpr 0x14b82d8c0 <col:12> 'int ()' Function 0x14b82d808 'ERR_PTR' 'int ()'     |     |     `-UnaryOperator 0x14b82d988 <col:20, col:21> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |       `-ImplicitCastExpr 0x14b82d970 <col:21> '<dependent type>' contains-errors <LValueToRValue>     |     |         `-RecoveryExpr 0x14b82d950 <col:21> '<dependent type>' contains-errors lvalue     |     `-ReturnStmt 0x14b82da30 <line:16:4, col:11>     |       `-ImplicitCastExpr 0x14b82da18 <col:11> 'struct nft_table *' <LValueToRValue>     |         `-DeclRefExpr 0x14b82d9f8 <col:11> 'struct nft_table *' lvalue Var 0x14b82af38 'table' 'struct nft_table *'     `-ReturnStmt 0x14b82dba0 <line:20:2, col:24>       `-CallExpr 0x14b82db78 <col:9, col:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x14b82da98 <col:9> 'int ()' Function 0x14b82d808 'ERR_PTR' 'int ()'         `-UnaryOperator 0x14b82db60 <col:17, col:18> '<dependent type>' contains-errors prefix '-' cannot overflow           `-ImplicitCastExpr 0x14b82db48 <col:18> '<dependent type>' contains-errors <LValueToRValue>             `-RecoveryExpr 0x14b82db28 <col:18> '<dependent type>' contains-errors lvalue ","19882":"`-FunctionDecl 0x16000df18  line:1:12 invalid parseDontUseCopy 'int (int *, int *, int *)' static   |-ParmVarDecl 0x16000dd28 <line:2:2, col:13> col:13 referenced invalid op 'int *'   |-ParmVarDecl 0x16000dda8 <line:3:2, col:13> col:13 referenced invalid rs 'int *'   |-ParmVarDecl 0x16000de28 <line:4:2, col:15> col:15 invalid ctrl 'int *'   `-CompoundStmt 0x160027aa8 <line:5:1, line:28:1>     |-IfStmt 0x16000e238 <line:6:2, line:9:2>     | |-BinaryOperator 0x16000e098 <line:6:7, col:28> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x16000dff8 <col:7, col:11> '<dependent type>' contains-errors lvalue ->o_dontUseCopy     | | | `-RecoveryExpr 0x16000dfd8 <col:7> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x16000e078 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x16000e218 <col:48, line:9:2>     |   |-BinaryOperator 0x16000e1b0 <line:7:3, col:17> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x16000e100 <col:3, col:7> '<dependent type>' contains-errors lvalue ->sr_text     |   | | `-RecoveryExpr 0x16000e0d8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x16000e0b8 <col:3> 'int *' lvalue ParmVar 0x16000dda8 'rs' 'int *'     |   | `-StringLiteral 0x16000e190 <col:17> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x16000e208 <line:8:3, col:10>     |     `-RecoveryExpr 0x16000e1e8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1600275d8 <line:11:2, line:14:2>     | |-UnaryOperator 0x160027488 <line:11:7, col:41> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x160027460 <col:8, col:41> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x16000e3b0 <col:8> 'int ()' Function 0x16000e2f8 'BER_BVISNULL' 'int ()'     | |   `-UnaryOperator 0x160027448 <col:22, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x160027400 <col:23, col:29> '<dependent type>' contains-errors lvalue ->ldctl_value     | |       `-RecoveryExpr 0x16000e3d0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1600275b8 <col:44, line:14:2>     |   |-BinaryOperator 0x160027550 <line:12:3, col:17> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1600274e8 <col:3, col:7> '<dependent type>' contains-errors lvalue ->sr_text     |   | | `-RecoveryExpr 0x1600274c0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x1600274a0 <col:3> 'int *' lvalue ParmVar 0x16000dda8 'rs' 'int *'     |   | `-StringLiteral 0x160027530 <col:17> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1600275a8 <line:13:3, col:10>     |     `-RecoveryExpr 0x160027588 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x160027838 <line:16:2, line:21:2>     | |-RecoveryExpr 0x1600276e0 <line:16:7, line:17:13> '_Bool' contains-errors     | `-CompoundStmt 0x160027818 <line:18:2, line:21:2>     |   |-BinaryOperator 0x1600277b0 <line:19:3, col:17> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x160027748 <col:3, col:7> '<dependent type>' contains-errors lvalue ->sr_text     |   | | `-RecoveryExpr 0x160027720 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x160027700 <col:3> 'int *' lvalue ParmVar 0x16000dda8 'rs' 'int *'     |   | `-StringLiteral 0x160027790 <col:17> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x160027808 <line:20:3, col:10>     |     `-RecoveryExpr 0x1600277e8 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x160027a40 <line:23:2, line:25:5> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1600278a0 <line:23:2, col:6> '<dependent type>' contains-errors lvalue ->o_dontUseCopy     | | `-RecoveryExpr 0x160027878 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x160027858 <col:2> 'int *' lvalue ParmVar 0x16000dd28 'op' 'int *'     | `-ConditionalOperator 0x160027a10 <col:22, line:25:5> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x160027908 <line:23:22, col:28> '<dependent type>' contains-errors lvalue ->ldctl_iscritical     |   | `-RecoveryExpr 0x1600278e8 <col:22> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1600279d0 <line:24:5> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1600279f0 <line:25:5> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x160027a98 <line:27:2, col:9>       `-RecoveryExpr 0x160027a78 <col:9> '<dependent type>' contains-errors lvalue ","19849":"`-FunctionDecl 0x150128348  line:1:1 skip_vimgrep_pat 'int (char *, char **, int *)'   |-ParmVarDecl 0x1501280f0 <col:18, col:26> col:26 used p 'char *'   |-ParmVarDecl 0x1501281a8 <col:29, col:38> col:38 used s 'char **'   |-ParmVarDecl 0x150128258 <col:41, col:46> col:46 used flags 'int *'   `-CompoundStmt 0x1501286f0 <line:2:1, line:4:1>     `-ReturnStmt 0x1501286e0 <line:3:5, col:56>       `-CallExpr 0x150128698 <col:12, col:56> '<dependent type>' contains-errors         |-DeclRefExpr 0x150128560 <col:12> 'int ()' Function 0x1501284a8 'skip_vimgrep_pat_ext' 'int ()'         |-DeclRefExpr 0x150128580 <col:33> 'char *' lvalue ParmVar 0x1501280f0 'p' 'char *'         |-DeclRefExpr 0x1501285a0 <col:36> 'char **' lvalue ParmVar 0x1501281a8 's' 'char **'         |-DeclRefExpr 0x1501285c0 <col:39> 'int *' lvalue ParmVar 0x150128258 'flags' 'int *'         |-RecoveryExpr 0x150128658 <col:46> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x150128678 <col:52> '<dependent type>' contains-errors lvalue ","19601":"`-FunctionDecl 0x13e04a950  line:1:13 rfcomm_dev_destruct 'void (struct tty_port *)' static   |-ParmVarDecl 0x13e04a848 <col:33, col:50> col:50 used port 'struct tty_port *'   `-CompoundStmt 0x13e065e88 <line:2:1, line:25:1>     |-DeclStmt 0x13e062fc8 <line:3:2, col:70>     | |-RecordDecl 0x13e062c48 <col:2, col:9> col:9 struct rfcomm_dev     | `-VarDecl 0x13e062db8 <col:2, col:21> col:21 used dev 'struct rfcomm_dev *'     |-DeclStmt 0x13e063228 <line:4:2, col:35>     | |-RecordDecl 0x13e062fe0 <col:2, col:9> col:9 struct rfcomm_dlc     | `-VarDecl 0x13e063148 <col:2, col:32> col:21 used dlc 'struct rfcomm_dlc *' cinit     |   `-RecoveryExpr 0x13e0631e8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13e0631b0 <col:27> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     |-CallExpr 0x13e063428 <line:6:2, col:24> 'int' contains-errors     | |-ImplicitCastExpr 0x13e063410 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e063320 <col:2> 'int ()' Function 0x13e063268 'BT_DBG' 'int ()'     | |-ImplicitCastExpr 0x13e063460 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x13e063380 <col:9> 'char[4]' lvalue \"STR\"     | |-ImplicitCastExpr 0x13e063478 <col:16> 'struct rfcomm_dev *' <LValueToRValue>     | | `-DeclRefExpr 0x13e0633a0 <col:16> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     | `-ImplicitCastExpr 0x13e063490 <col:21> 'struct rfcomm_dlc *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e0633c0 <col:21> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |-CallExpr 0x13e063760 <line:9:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e063588 <col:2> 'int ()' Function 0x13e0634d0 'BUG_ON' 'int ()'     | `-UnaryOperator 0x13e063748 <col:9, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x13e063720 <col:10, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13e063688 <col:10> 'int ()' Function 0x13e0635d0 'list_empty' 'int ()'     |     `-UnaryOperator 0x13e063708 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x13e0636e0 <col:22, col:27> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13e0636a8 <col:22> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     |-CallExpr 0x13e0638c0 <line:11:2, col:21> 'int' contains-errors     | |-ImplicitCastExpr 0x13e0638a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e063868 <col:2> 'int ()' Function 0x13e0637b0 'rfcomm_dlc_lock' 'int ()'     | `-ImplicitCastExpr 0x13e0638e8 <col:18> 'struct rfcomm_dlc *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e063888 <col:18> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |-IfStmt 0x13e063a78 <line:13:2, line:14:16>     | |-BinaryOperator 0x13e063980 <line:13:6, col:20> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13e063938 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13e063900 <col:6> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     | | `-DeclRefExpr 0x13e063960 <col:20> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     | `-BinaryOperator 0x13e063a58 <line:14:3, col:16> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13e0639d8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13e0639a0 <col:3> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |   `-RecoveryExpr 0x13e063a38 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e063bd0 <line:15:2, col:23> 'int' contains-errors     | |-ImplicitCastExpr 0x13e063bb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e063b78 <col:2> 'int ()' Function 0x13e063ac0 'rfcomm_dlc_unlock' 'int ()'     | `-ImplicitCastExpr 0x13e065800 <col:20> 'struct rfcomm_dlc *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e063b98 <col:20> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |-CallExpr 0x13e065950 <line:17:2, col:20> 'int' contains-errors     | |-ImplicitCastExpr 0x13e065938 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e0658f8 <col:2> 'int ()' Function 0x13e065840 'rfcomm_dlc_put' 'int ()'     | `-ImplicitCastExpr 0x13e065978 <col:17> 'struct rfcomm_dlc *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x13e065918 <col:17> 'struct rfcomm_dlc *' contains-errors lvalue Var 0x13e063148 'dlc' 'struct rfcomm_dlc *'     |-CallExpr 0x13e065b58 <line:19:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e065a70 <col:2> 'int ()' Function 0x13e0659b8 'tty_unregister_device' 'int ()'     | |-RecoveryExpr 0x13e065b38 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x13e065ae0 <col:43, col:48> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13e065aa8 <col:43> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     |-CallExpr 0x13e065cc0 <line:21:2, col:11> 'int'     | |-ImplicitCastExpr 0x13e065ca8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e065c68 <col:2> 'int ()' Function 0x13e065bb0 'kfree' 'int ()'     | `-ImplicitCastExpr 0x13e065ce8 <col:8> 'struct rfcomm_dev *' <LValueToRValue>     |   `-DeclRefExpr 0x13e065c88 <col:8> 'struct rfcomm_dev *' lvalue Var 0x13e062db8 'dev' 'struct rfcomm_dev *'     `-CallExpr 0x13e065e60 <line:24:2, col:24> '<dependent type>' contains-errors       |-DeclRefExpr 0x13e065de0 <col:2> 'int ()' Function 0x13e065d28 'module_put' 'int ()'       `-RecoveryExpr 0x13e065e40 <col:13> '<dependent type>' contains-errors lvalue ","19539":"`-FunctionDecl 0x11f80df18  line:1:1 invalid gdm_session_constructor 'int (int, int, int *)'   |-ParmVarDecl 0x11f80dcf0 <col:26, col:49> col:49 invalid type 'int'   |-ParmVarDecl 0x11f80dd70 <line:2:26, col:49> col:49 invalid n_construct_properties 'int'   |-ParmVarDecl 0x11f80de28 <line:3:26, col:49> col:49 invalid construct_properties 'int *'   `-CompoundStmt 0x11f122770 <line:4:1, line:11:1>     `-ReturnStmt 0x11f122760 <line:10:9, col:30>       `-CallExpr 0x11f122738 <col:16, col:30> '<dependent type>' contains-errors         |-DeclRefExpr 0x11f1226b8 <col:16> 'int ()' Function 0x11f122600 'G_OBJECT' 'int ()'         `-RecoveryExpr 0x11f122718 <col:26> '<dependent type>' contains-errors lvalue ","19145":"`-FunctionDecl 0x14b00dda8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x14b00dcd8 <col:14> col:14 rmdir 'int'   `-CompoundStmt 0x14a9229e8 <line:2:1, line:15:1>     |-DeclStmt 0x14b00df20 <line:3:2, col:11>     | `-VarDecl 0x14b00deb8 <col:2, col:8> col:8 used dir 'char *'     |-DeclStmt 0x14b00dfb8 <line:4:2, col:13>     | `-VarDecl 0x14b00df50 <col:2, col:6> col:6 dir_len 'int'     |-IfStmt 0x14b00e310 <line:8:2, line:10:2>     | |-RecoveryExpr 0x14b00e2e0 <line:8:6, col:92> '_Bool' contains-errors     | `-CompoundStmt 0x14b00e300 <col:101, line:10:2>     `-CallExpr 0x14a9229c0 <line:14:2, col:59> '<dependent type>' contains-errors       |-DeclRefExpr 0x14a922778 <col:2> 'int ()' Function 0x14a9226c0 'RETURN_BOOL' 'int ()'       `-CallExpr 0x14a922988 <col:14, col:58> '<dependent type>' contains-errors         |-DeclRefExpr 0x14a922878 <col:14> 'int ()' Function 0x14a9227c0 'php_stream_rmdir' 'int ()'         |-DeclRefExpr 0x14a922898 <col:31> 'char *' lvalue Var 0x14b00deb8 'dir' 'char *'         |-RecoveryExpr 0x14a922948 <col:36> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x14a922968 <col:51> '<dependent type>' contains-errors lvalue ","19967":"`-FunctionDecl 0x14500a758  line:1:1 invalid dirserv_get_status_impl 'int (const char *, const char *, int, int, const char *, const char **, int)'   |-ParmVarDecl 0x14500a2d8 <col:25, col:37> col:37 used id_digest 'const char *'   |-ParmVarDecl 0x14500a358 <col:48, col:60> col:60 used nickname 'const char *'   |-ParmVarDecl 0x14500a3f0 <line:2:25, col:34> col:34 invalid addr 'int'   |-ParmVarDecl 0x14500a470 <col:40, col:49> col:49 invalid or_port 'int'   |-ParmVarDecl 0x14500a4f0 <line:3:25, col:37> col:37 used platform 'const char *'   |-ParmVarDecl 0x14500a5a8 <col:47, col:60> col:60 used msg 'const char **'   |-ParmVarDecl 0x14500a628 <col:65, col:69> col:69 used severity 'int'   `-CompoundStmt 0x1460092d8 <line:4:1, line:58:1>     |-CallExpr 0x144927550 <line:11:3, line:13:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144927028 <line:11:3> 'int ()' Function 0x144926f70 'log_debug' 'int ()'     | |-RecoveryExpr 0x144927410 <col:13> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x1449270a0 <col:25> 'char[4]' lvalue \"STR\"     | |-CallExpr 0x144927498 <line:12:13, col:53> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1449271a0 <col:13> 'int ()' Function 0x1449270e8 'strmap_size' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x144927450 <col:25, col:43> '<dependent type>' contains-errors lvalue ->fp_by_name     | |   `-RecoveryExpr 0x144927430 <col:25> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x144927528 <line:13:13, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144927328 <col:13> 'int ()' Function 0x144927270 'digestmap_size' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x1449274e0 <col:28, col:46> '<dependent type>' contains-errors lvalue ->status_by_digest     |     `-RecoveryExpr 0x1449274c0 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144927938 <line:16:3, line:20:3>     | |-BinaryOperator 0x144927798 <line:16:7, col:56> 'int' '&&'     | | |-ImplicitCastExpr 0x144927780 <col:7> 'const char *' <LValueToRValue>     | | | `-DeclRefExpr 0x144927590 <col:7> 'const char *' lvalue ParmVar 0x14500a4f0 'platform' 'const char *'     | | `-UnaryOperator 0x144927768 <col:19, col:56> 'int' prefix '!' cannot overflow     | |   `-CallExpr 0x144927708 <col:20, col:56> 'int'     | |     |-ImplicitCastExpr 0x1449276f0 <col:20> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x144927690 <col:20> 'int ()' Function 0x1449275d8 'tor_version_as_new_as' 'int ()'     | |     |-ImplicitCastExpr 0x144927738 <col:42> 'const char *' <LValueToRValue>     | |     | `-DeclRefExpr 0x1449276b0 <col:42> 'const char *' lvalue ParmVar 0x14500a4f0 'platform' 'const char *'     | |     `-ImplicitCastExpr 0x144927750 <col:51> 'char *' <ArrayToPointerDecay>     | |       `-StringLiteral 0x1449276d0 <col:51> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x144927918 <col:59, line:20:3>     |   |-IfStmt 0x1449278b0 <line:17:5, line:18:14>     |   | |-ImplicitCastExpr 0x1449277d8 <line:17:9> 'const char **' <LValueToRValue>     |   | | `-DeclRefExpr 0x1449277b8 <col:9> 'const char **' lvalue ParmVar 0x14500a5a8 'msg' 'const char **'     |   | `-BinaryOperator 0x144927890 <line:18:7, col:14> 'const char *' '='     |   |   |-UnaryOperator 0x144927828 <col:7, col:8> 'const char *' lvalue prefix '*' cannot overflow     |   |   | `-ImplicitCastExpr 0x144927810 <col:8> 'const char **' <LValueToRValue>     |   |   |   `-DeclRefExpr 0x1449277f0 <col:8> 'const char **' lvalue ParmVar 0x14500a5a8 'msg' 'const char **'     |   |   `-ImplicitCastExpr 0x144927878 <col:14> 'const char *' <NoOp>     |   |     `-ImplicitCastExpr 0x144927860 <col:14> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x144927840 <col:14> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x144927908 <line:19:5, col:12>     |     `-RecoveryExpr 0x1449278e8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146008800 <line:27:3, line:34:3> has_else     | |-RecoveryExpr 0x144927b28 <line:27:7, col:16> '_Bool' contains-errors     | |-CompoundStmt 0x144927c60 <col:27, line:31:3>     | | `-IfStmt 0x144927c40 <line:28:5, line:29:14>     | |   |-ImplicitCastExpr 0x144927b68 <line:28:9> 'const char **' <LValueToRValue>     | |   | `-DeclRefExpr 0x144927b48 <col:9> 'const char **' lvalue ParmVar 0x14500a5a8 'msg' 'const char **'     | |   `-BinaryOperator 0x144927c20 <line:29:7, col:14> 'const char *' '='     | |     |-UnaryOperator 0x144927bb8 <col:7, col:8> 'const char *' lvalue prefix '*' cannot overflow     | |     | `-ImplicitCastExpr 0x144927ba0 <col:8> 'const char **' <LValueToRValue>     | |     |   `-DeclRefExpr 0x144927b80 <col:8> 'const char **' lvalue ParmVar 0x14500a5a8 'msg' 'const char **'     | |     `-ImplicitCastExpr 0x144927c08 <col:14> 'const char *' <NoOp>     | |       `-ImplicitCastExpr 0x144927bf0 <col:14> 'char *' <ArrayToPointerDecay>     | |         `-StringLiteral 0x144927bd0 <col:14> 'char[4]' lvalue \"STR\"     | `-IfStmt 0x144927dc8 <line:31:10, line:34:3>     |   |-RecoveryExpr 0x144927c78 <line:31:14, col:23> '_Bool' contains-errors     |   `-CompoundStmt 0x144927db0 <col:35, line:34:3>     |     `-IfStmt 0x144927d90 <line:32:5, line:33:14>     |       |-ImplicitCastExpr 0x144927cb8 <line:32:9> 'const char **' <LValueToRValue>     |       | `-DeclRefExpr 0x144927c98 <col:9> 'const char **' lvalue ParmVar 0x14500a5a8 'msg' 'const char **'     |       `-BinaryOperator 0x144927d70 <line:33:7, col:14> 'const char *' '='     |         |-UnaryOperator 0x144927d08 <col:7, col:8> 'const char *' lvalue prefix '*' cannot overflow     |         | `-ImplicitCastExpr 0x144927cf0 <col:8> 'const char **' <LValueToRValue>     |         |   `-DeclRefExpr 0x144927cd0 <col:8> 'const char **' lvalue ParmVar 0x14500a5a8 'msg' 'const char **'     |         `-ImplicitCastExpr 0x144927d58 <col:14> 'const char *' <NoOp>     |           `-ImplicitCastExpr 0x144927d40 <col:14> 'char *' <ArrayToPointerDecay>     |             `-StringLiteral 0x144927d20 <col:14> 'char[4]' lvalue \"STR\"     |-IfStmt 0x146008c58 <line:36:3, line:41:3>     | |-CallExpr 0x146008970 <line:36:7, col:51> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x146008910 <col:7> 'int ()' Function 0x146008858 'authdir_policy_badexit_address' 'int ()'     | | |-RecoveryExpr 0x146008930 <col:38> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x146008950 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x146008c48 <col:54, line:41:3>     |-IfStmt 0x146009018 <line:43:3, line:49:3>     | |-UnaryOperator 0x146008de8 <line:43:7, col:52> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x146008db8 <col:8, col:52> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x146008d58 <col:8> 'int ()' Function 0x146008ca0 'authdir_policy_permits_address' 'int ()'     | |   |-RecoveryExpr 0x146008d78 <col:39> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x146008d98 <col:45> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x146009000 <col:55, line:49:3>     |   `-IfStmt 0x146008fe0 <line:46:5, line:47:14>     |     |-ImplicitCastExpr 0x146008f08 <line:46:9> 'const char **' <LValueToRValue>     |     | `-DeclRefExpr 0x146008ee8 <col:9> 'const char **' lvalue ParmVar 0x14500a5a8 'msg' 'const char **'     |     `-BinaryOperator 0x146008fc0 <line:47:7, col:14> 'const char *' '='     |       |-UnaryOperator 0x146008f58 <col:7, col:8> 'const char *' lvalue prefix '*' cannot overflow     |       | `-ImplicitCastExpr 0x146008f40 <col:8> 'const char **' <LValueToRValue>     |       |   `-DeclRefExpr 0x146008f20 <col:8> 'const char **' lvalue ParmVar 0x14500a5a8 'msg' 'const char **'     |       `-ImplicitCastExpr 0x146008fa8 <col:14> 'const char *' <NoOp>     |         `-ImplicitCastExpr 0x146008f90 <col:14> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x146008f70 <col:14> 'char[4]' lvalue \"STR\"     `-IfStmt 0x1460092b8 <line:50:3, line:55:3>       |-UnaryOperator 0x1460091a8 <line:50:7, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x146009178 <col:8, col:50> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x146009118 <col:8> 'int ()' Function 0x146009060 'authdir_policy_valid_address' 'int ()'       |   |-RecoveryExpr 0x146009138 <col:37> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x146009158 <col:43> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x1460092a8 <col:53, line:55:3> ","19559":"`-FunctionDecl 0x13a017510  line:1:6 fpm_request_finished 'void ()'   `-CompoundStmt 0x13a02e7e8 <line:2:1, line:17:1>     |-DeclStmt 0x13a0177e8 <line:3:2, col:36>     | |-RecordDecl 0x13a017600 <col:2, col:9> col:9 struct fpm_scoreboard_proc_s     | `-VarDecl 0x13a017768 <col:2, col:32> col:32 used proc 'struct fpm_scoreboard_proc_s *'     |-DeclStmt 0x13a02ddb8 <line:4:2, col:20>     | |-RecordDecl 0x13a017800 <col:2, col:9> col:9 struct timeval     | `-VarDecl 0x13a0178f8 <col:2, col:17> col:17 invalid now 'struct timeval'     |-CallExpr 0x13a02df58 <line:6:2, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13a02df00 <col:2> 'int ()' Function 0x13a02de48 'fpm_clock_get' 'int ()'     | `-UnaryOperator 0x13a02df40 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13a02df20 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a02e1c0 <line:8:2, col:48> 'struct fpm_scoreboard_proc_s *' contains-errors '='     | |-DeclRefExpr 0x13a02df80 <col:2> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x13a017768 'proc' 'struct fpm_scoreboard_proc_s *'     | `-CallExpr 0x13a02e188 <col:9, col:48> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13a02e080 <col:9> 'int ()' Function 0x13a02dfc8 'fpm_scoreboard_proc_acquire' 'int ()'     |   |-RecoveryExpr 0x13a02e168 <col:37> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x13a02e0d8 <col:43, col:44> 'int' prefix '-'     |   | `-IntegerLiteral 0x13a02e0b8 <col:44> 'int' 1     |   `-IntegerLiteral 0x13a02e0f0 <col:47> 'int' 0     |-IfStmt 0x13a02e4a0 <line:9:2, line:12:2>     | |-BinaryOperator 0x13a02e258 <line:9:6, col:14> 'int' contains-errors '=='     | | |-DeclRefExpr 0x13a02e1e0 <col:6> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x13a017768 'proc' 'struct fpm_scoreboard_proc_s *'     | | `-RecoveryExpr 0x13a02e238 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a02e480 <col:20, line:12:2>     |   |-CallExpr 0x13a02e440 <line:10:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a02e358 <col:3> 'int ()' Function 0x13a02e2a0 'zlog' 'int ()'     |   | |-RecoveryExpr 0x13a02e420 <col:8> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x13a02e3d0 <col:22> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x13a02e470 <line:11:3>     |-BinaryOperator 0x13a02e578 <line:14:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a02e4f8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a02e4c0 <col:2> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x13a017768 'proc' 'struct fpm_scoreboard_proc_s *'     | `-RecoveryExpr 0x13a02e558 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a02e618 <line:15:2, col:13> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a02e5d0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a02e598 <col:2> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x13a017768 'proc' 'struct fpm_scoreboard_proc_s *'     | `-RecoveryExpr 0x13a02e5f8 <col:13> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13a02e7a8 <line:16:2, col:34> 'int'       |-ImplicitCastExpr 0x13a02e790 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x13a02e718 <col:2> 'int ()' Function 0x13a02e660 'fpm_scoreboard_proc_release' 'int ()'       `-ImplicitCastExpr 0x13a02e7d0 <col:30> 'struct fpm_scoreboard_proc_s *' <LValueToRValue>         `-DeclRefExpr 0x13a02e738 <col:30> 'struct fpm_scoreboard_proc_s *' lvalue Var 0x13a017768 'proc' 'struct fpm_scoreboard_proc_s *' ","19255":"`-FunctionDecl 0x14c026758  line:1:1 invalid xfs_file_fsync 'int (struct file *, int, int, int)'   |-ParmVarDecl 0x14c00e248 <line:2:2, col:16> col:16 used file 'struct file *'   |-ParmVarDecl 0x14c00e2e0 <line:3:2, col:11> col:11 invalid start 'int'   |-ParmVarDecl 0x14c00e360 <line:4:2, col:11> col:11 invalid end 'int'   |-ParmVarDecl 0x14c026600 <line:5:2, col:8> col:8 used datasync 'int'   `-CompoundStmt 0x14c029238 <line:6:1, line:53:1>     |-DeclStmt 0x14c026ab0 <line:7:2, col:46>     | |-RecordDecl 0x14c026820 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x14c026988 <col:2, col:42> col:17 used inode 'struct inode *' cinit     |   `-CXXDependentScopeMemberExpr 0x14c026a50 <col:25, col:42> '<dependent type>' contains-errors lvalue ->host     |     `-RecoveryExpr 0x14c026a28 <col:25, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14c0269f0 <col:25> 'struct file *' lvalue ParmVar 0x14c00e248 'file' 'struct file *'     |-DeclStmt 0x14c026ef8 <line:8:2, col:37>     | |-RecordDecl 0x14c026ac8 <col:2, col:9> col:9 struct xfs_inode     | `-VarDecl 0x14c026c38 <col:2, col:36> col:20 used ip 'struct xfs_inode *' cinit     |   `-ImplicitCastExpr 0x14c026ec8 <col:25, col:36> 'struct xfs_inode *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x14c026e88 <col:25, col:36> 'int' contains-errors     |       |-ImplicitCastExpr 0x14c026e70 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14c026e00 <col:25> 'int ()' Function 0x14c026d48 'XFS_I' 'int ()'     |       `-ImplicitCastExpr 0x14c026eb0 <col:31> 'struct inode *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14c026e20 <col:31> 'struct inode *' contains-errors lvalue Var 0x14c026988 'inode' 'struct inode *'     |-DeclStmt 0x14c027158 <line:9:2, col:36>     | |-RecordDecl 0x14c026f10 <col:2, col:9> col:9 struct xfs_mount     | `-VarDecl 0x14c027078 <col:2, col:29> col:20 used mp 'struct xfs_mount *' cinit     |   `-RecoveryExpr 0x14c027118 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c0270e0 <col:25> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     |-DeclStmt 0x14c027210 <line:10:2, col:17>     | `-VarDecl 0x14c027188 <col:2, col:16> col:8 used error 'int' cinit     |   `-IntegerLiteral 0x14c0271f0 <col:16> 'int' 0     |-DeclStmt 0x14c0272c8 <line:11:2, col:23>     | `-VarDecl 0x14c027240 <col:2, col:22> col:8 used log_flushed 'int' cinit     |   `-IntegerLiteral 0x14c0272a8 <col:22> 'int' 0     |-CallExpr 0x14c027418 <line:14:2, col:25> 'int' contains-errors     | |-ImplicitCastExpr 0x14c027400 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c0273c0 <col:2> 'int ()' Function 0x14c027308 'trace_xfs_file_fsync' 'int ()'     | `-ImplicitCastExpr 0x14c027440 <col:23> 'struct xfs_inode *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x14c0273e0 <col:23> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     |-BinaryOperator 0x14c80ce58 <line:16:2, col:67> 'int' contains-errors '='     | |-DeclRefExpr 0x14c027458 <col:2> 'int' lvalue Var 0x14c027188 'error' 'int'     | `-CallExpr 0x14c80ce20 <col:10, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c027558 <col:10> 'int ()' Function 0x14c0274a0 'filemap_write_and_wait_range' 'int ()'     |   |-RecoveryExpr 0x14c0275b0 <col:39, col:46> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c027578 <col:39> 'struct inode *' contains-errors lvalue Var 0x14c026988 'inode' 'struct inode *'     |   |-RecoveryExpr 0x14c0275d8 <col:57> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x14c80ce00 <col:64> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c80cef8 <line:17:2, line:18:10>     | |-ImplicitCastExpr 0x14c80ce98 <line:17:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14c80ce78 <col:6> 'int' lvalue Var 0x14c027188 'error' 'int'     | `-ReturnStmt 0x14c80cee8 <line:18:3, col:10>     |   `-ImplicitCastExpr 0x14c80ced0 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14c80ceb0 <col:10> 'int' lvalue Var 0x14c027188 'error' 'int'     |-IfStmt 0x14c80d138 <line:20:2, line:21:11>     | |-CallExpr 0x14c80d050 <line:20:6, col:28> 'int' contains-errors     | | |-ImplicitCastExpr 0x14c80d038 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14c80cff8 <col:6> 'int ()' Function 0x14c80cf40 'XFS_FORCED_SHUTDOWN' 'int ()'     | | `-ImplicitCastExpr 0x14c80d078 <col:26> 'struct xfs_mount *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x14c80d018 <col:26> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     | `-ReturnStmt 0x14c80d128 <line:21:3, col:11>     |   `-UnaryOperator 0x14c80d110 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14c80d0f8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14c80d0d8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c80d2e0 <line:23:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c80d238 <col:2> 'int ()' Function 0x14c80d180 'xfs_iflags_clear' 'int ()'     | |-DeclRefExpr 0x14c80d258 <col:19> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     | `-RecoveryExpr 0x14c80d2c0 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c80d8d8 <line:25:2, line:31:2>     | |-BinaryOperator 0x14c80d3c8 <line:25:6, col:20> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14c80d348 <col:6, col:10> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14c80d310 <col:6> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     | | `-RecoveryExpr 0x14c80d3a8 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c80d8c0 <col:39, line:31:2>     |   `-IfStmt 0x14c80d890 <line:27:3, line:30:43> has_else     |     |-CallExpr 0x14c80d520 <line:27:7, col:31> 'int' contains-errors     |     | |-ImplicitCastExpr 0x14c80d508 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | | `-DeclRefExpr 0x14c80d4c8 <col:7> 'int ()' Function 0x14c80d410 'XFS_IS_REALTIME_INODE' 'int ()'     |     | `-ImplicitCastExpr 0x14c80d548 <col:29> 'struct xfs_inode *' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x14c80d4e8 <col:29> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     |     |-CallExpr 0x14c80d6c0 <line:28:4, col:44> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x14c80d640 <col:4> 'int ()' Function 0x14c80d588 'xfs_blkdev_issue_flush' 'int ()'     |     | `-RecoveryExpr 0x14c80d698 <col:27, col:31> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14c80d660 <col:27> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     |     `-IfStmt 0x14c80d870 <line:29:8, line:30:43>     |       |-BinaryOperator 0x14c80d7a8 <line:29:12, col:38> 'int' contains-errors '!='     |       | |-RecoveryExpr 0x14c80d720 <col:12, col:16> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x14c80d6e8 <col:12> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     |       | `-RecoveryExpr 0x14c80d780 <col:34, col:38> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14c80d748 <col:34> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     |       `-CallExpr 0x14c80d848 <line:30:4, col:43> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x14c80d7c8 <col:4> 'int ()' Function 0x14c80d588 'xfs_blkdev_issue_flush' 'int ()'     |         `-RecoveryExpr 0x14c80d820 <col:27, col:31> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x14c80d7e8 <col:27> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     |-IfStmt 0x14c80dd60 <line:35:2, line:39:2>     | |-CallExpr 0x14c80db50 <line:35:6, col:22> 'int' contains-errors     | | |-ImplicitCastExpr 0x14c80db38 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14c80daf8 <col:6> 'int ()' Function 0x14c80da40 'xfs_ipincount' 'int ()'     | | `-ImplicitCastExpr 0x14c80db78 <col:20> 'struct xfs_inode *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x14c80db18 <col:20> 'struct xfs_inode *' contains-errors lvalue Var 0x14c026c38 'ip' 'struct xfs_inode *'     | `-CompoundStmt 0x14c80dd50 <col:25, line:39:2>     |-IfStmt 0x14c0291d0 <line:46:2, line:50:42>     | |-RecoveryExpr 0x14c029108 <line:46:6, line:49:7> '_Bool' contains-errors     | `-CallExpr 0x14c0291a8 <line:50:3, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c029128 <col:3> 'int ()' Function 0x14c80d588 'xfs_blkdev_issue_flush' 'int ()'     |   `-RecoveryExpr 0x14c029180 <col:26, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c029148 <col:26> 'struct xfs_mount *' contains-errors lvalue Var 0x14c027078 'mp' 'struct xfs_mount *'     `-ReturnStmt 0x14c029228 <line:52:2, col:9>       `-ImplicitCastExpr 0x14c029210 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14c0291f0 <col:9> 'int' lvalue Var 0x14c027188 'error' 'int' ","19252":"`-FunctionDecl 0x12800e350  line:1:13 free_mnt_ns 'void (struct mnt_namespace *)' static   |-ParmVarDecl 0x12800e248 <col:25, col:47> col:47 used ns 'struct mnt_namespace *'   `-CompoundStmt 0x128026ce8 <line:2:1, line:7:1>     |-CallExpr 0x128026808 <line:3:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128026770 <col:2> 'int ()' Function 0x1280266b8 'ns_free_inum' 'int ()'     | `-UnaryOperator 0x1280267f0 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1280267c8 <col:16, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x128026790 <col:16> 'struct mnt_namespace *' lvalue ParmVar 0x12800e248 'ns' 'struct mnt_namespace *'     |-CallExpr 0x128026990 <line:4:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128026910 <col:2> 'int ()' Function 0x128026858 'dec_mnt_namespaces' 'int ()'     | `-RecoveryExpr 0x128026968 <col:21, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x128026930 <col:21> 'struct mnt_namespace *' lvalue ParmVar 0x12800e248 'ns' 'struct mnt_namespace *'     |-CallExpr 0x128026b18 <line:5:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128026a98 <col:2> 'int ()' Function 0x1280269e0 'put_user_ns' 'int ()'     | `-RecoveryExpr 0x128026af0 <col:14, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x128026ab8 <col:14> 'struct mnt_namespace *' lvalue ParmVar 0x12800e248 'ns' 'struct mnt_namespace *'     `-CallExpr 0x128026ca8 <line:6:2, col:10> 'int'       |-ImplicitCastExpr 0x128026c90 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x128026c20 <col:2> 'int ()' Function 0x128026b68 'kfree' 'int ()'       `-ImplicitCastExpr 0x128026cd0 <col:8> 'struct mnt_namespace *' <LValueToRValue>         `-DeclRefExpr 0x128026c40 <col:8> 'struct mnt_namespace *' lvalue ParmVar 0x12800e248 'ns' 'struct mnt_namespace *' ","19962":"`-FunctionDecl 0x13687b5f0  line:1:13 invalid init_custom_qm 'void (int *)' static   |-ParmVarDecl 0x13687b528 <col:28, col:43> col:43 referenced invalid s 'int *'   `-CompoundStmt 0x1370c5f30 <line:2:1, line:27:1>     |-DeclStmt 0x13687b7b8 <line:3:5, col:27>     | |-VarDecl 0x13687b6b8 <col:5, col:9> col:9 used level 'int'     | `-VarDecl 0x13687b738 <col:5, col:16> col:16 used orientation 'int'     `-IfStmt 0x1370c5f00 <line:5:5, line:26:5> has_else       |-BinaryOperator 0x13687b890 <line:5:9, col:28> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x13687b7f0 <col:9, col:12> '<dependent type>' contains-errors lvalue ->quant_matrix       | | `-RecoveryExpr 0x13687b7d0 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13687b870 <col:28> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x1370c5448 <col:40, line:14:5>       | `-ForStmt 0x1370c5410 <line:6:9, line:13:9>       |   |-BinaryOperator 0x13687b8f0 <line:6:14, col:22> 'int' '='       |   | |-DeclRefExpr 0x13687b8b0 <col:14> 'int' lvalue Var 0x13687b6b8 'level' 'int'       |   | `-IntegerLiteral 0x13687b8d0 <col:22> 'int' 0       |   |-<<<NULL>>>       |   |-BinaryOperator 0x13687b998 <col:25, col:36> 'int' contains-errors '<'       |   | |-DeclRefExpr 0x13687b910 <col:25> 'int' lvalue Var 0x13687b6b8 'level' 'int'       |   | `-CXXDependentScopeMemberExpr 0x13687b950 <col:33, col:36> '<dependent type>' contains-errors lvalue ->wavelet_depth       |   |   `-RecoveryExpr 0x13687b930 <col:33> '<dependent type>' contains-errors lvalue       |   |-UnaryOperator 0x13687b9d8 <col:51, col:56> 'int' postfix '++'       |   | `-DeclRefExpr 0x13687b9b8 <col:51> 'int' lvalue Var 0x13687b6b8 'level' 'int'       |   `-CompoundStmt 0x1370c53f8 <col:60, line:13:9>       |     `-ForStmt 0x1370c53c0 <line:7:13, line:12:13>       |       |-BinaryOperator 0x13687ba30 <line:7:18, col:32> 'int' '='       |       | |-DeclRefExpr 0x13687b9f0 <col:18> 'int' lvalue Var 0x13687b738 'orientation' 'int'       |       | `-IntegerLiteral 0x13687ba10 <col:32> 'int' 0       |       |-<<<NULL>>>       |       |-BinaryOperator 0x13687baa8 <col:35, col:49> 'int' '<'       |       | |-ImplicitCastExpr 0x13687ba90 <col:35> 'int' <LValueToRValue>       |       | | `-DeclRefExpr 0x13687ba50 <col:35> 'int' lvalue Var 0x13687b738 'orientation' 'int'       |       | `-IntegerLiteral 0x13687ba70 <col:49> 'int' 4       |       |-UnaryOperator 0x13687bae8 <col:52, col:63> 'int' postfix '++'       |       | `-DeclRefExpr 0x13687bac8 <col:52> 'int' lvalue Var 0x13687b738 'orientation' 'int'       |       `-CompoundStmt 0x1370c53b0 <col:67, line:12:13>       `-IfStmt 0x1370c5ed0 <line:14:12, line:26:5> has_else         |-BinaryOperator 0x1370c5520 <line:14:16, col:35> 'int' contains-errors '=='         | |-CXXDependentScopeMemberExpr 0x1370c5480 <col:16, col:19> '<dependent type>' contains-errors lvalue ->quant_matrix         | | `-RecoveryExpr 0x1370c5460 <col:16> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x1370c5500 <col:35> '<dependent type>' contains-errors lvalue         |-CompoundStmt 0x1370c59f0 <col:47, line:20:5>         | `-ForStmt 0x1370c59b8 <line:15:9, line:19:9>         |   |-BinaryOperator 0x1370c5580 <line:15:14, col:22> 'int' '='         |   | |-DeclRefExpr 0x1370c5540 <col:14> 'int' lvalue Var 0x13687b6b8 'level' 'int'         |   | `-IntegerLiteral 0x1370c5560 <col:22> 'int' 0         |   |-<<<NULL>>>         |   |-BinaryOperator 0x1370c5628 <col:25, col:36> 'int' contains-errors '<'         |   | |-DeclRefExpr 0x1370c55a0 <col:25> 'int' lvalue Var 0x13687b6b8 'level' 'int'         |   | `-CXXDependentScopeMemberExpr 0x1370c55e0 <col:33, col:36> '<dependent type>' contains-errors lvalue ->wavelet_depth         |   |   `-RecoveryExpr 0x1370c55c0 <col:33> '<dependent type>' contains-errors lvalue         |   |-UnaryOperator 0x1370c5668 <col:51, col:56> 'int' postfix '++'         |   | `-DeclRefExpr 0x1370c5648 <col:51> 'int' lvalue Var 0x13687b6b8 'level' 'int'         |   `-CompoundStmt 0x1370c59a0 <col:60, line:19:9>         |     `-ForStmt 0x1370c5968 <line:16:13, line:18:13>         |       |-BinaryOperator 0x1370c56c0 <line:16:18, col:32> 'int' '='         |       | |-DeclRefExpr 0x1370c5680 <col:18> 'int' lvalue Var 0x13687b738 'orientation' 'int'         |       | `-IntegerLiteral 0x1370c56a0 <col:32> 'int' 0         |       |-<<<NULL>>>         |       |-BinaryOperator 0x1370c5738 <col:35, col:49> 'int' '<'         |       | |-ImplicitCastExpr 0x1370c5720 <col:35> 'int' <LValueToRValue>         |       | | `-DeclRefExpr 0x1370c56e0 <col:35> 'int' lvalue Var 0x13687b738 'orientation' 'int'         |       | `-IntegerLiteral 0x1370c5700 <col:49> 'int' 4         |       |-UnaryOperator 0x1370c5778 <col:52, col:63> 'int' postfix '++'         |       | `-DeclRefExpr 0x1370c5758 <col:52> 'int' lvalue Var 0x13687b738 'orientation' 'int'         |       `-CompoundStmt 0x1370c5958 <col:67, line:18:13>         `-CompoundStmt 0x1370c5eb8 <line:20:12, line:26:5>           `-ForStmt 0x1370c5e80 <line:21:9, line:25:9>             |-BinaryOperator 0x1370c5a48 <line:21:14, col:22> 'int' '='             | |-DeclRefExpr 0x1370c5a08 <col:14> 'int' lvalue Var 0x13687b6b8 'level' 'int'             | `-IntegerLiteral 0x1370c5a28 <col:22> 'int' 0             |-<<<NULL>>>             |-BinaryOperator 0x1370c5af0 <col:25, col:36> 'int' contains-errors '<'             | |-DeclRefExpr 0x1370c5a68 <col:25> 'int' lvalue Var 0x13687b6b8 'level' 'int'             | `-CXXDependentScopeMemberExpr 0x1370c5aa8 <col:33, col:36> '<dependent type>' contains-errors lvalue ->wavelet_depth             |   `-RecoveryExpr 0x1370c5a88 <col:33> '<dependent type>' contains-errors lvalue             |-UnaryOperator 0x1370c5b30 <col:51, col:56> 'int' postfix '++'             | `-DeclRefExpr 0x1370c5b10 <col:51> 'int' lvalue Var 0x13687b6b8 'level' 'int'             `-CompoundStmt 0x1370c5e68 <col:60, line:25:9>               `-ForStmt 0x1370c5e30 <line:22:13, line:24:13>                 |-BinaryOperator 0x1370c5b88 <line:22:18, col:32> 'int' '='                 | |-DeclRefExpr 0x1370c5b48 <col:18> 'int' lvalue Var 0x13687b738 'orientation' 'int'                 | `-IntegerLiteral 0x1370c5b68 <col:32> 'int' 0                 |-<<<NULL>>>                 |-BinaryOperator 0x1370c5c00 <col:35, col:49> 'int' '<'                 | |-ImplicitCastExpr 0x1370c5be8 <col:35> 'int' <LValueToRValue>                 | | `-DeclRefExpr 0x1370c5ba8 <col:35> 'int' lvalue Var 0x13687b738 'orientation' 'int'                 | `-IntegerLiteral 0x1370c5bc8 <col:49> 'int' 4                 |-UnaryOperator 0x1370c5c40 <col:52, col:63> 'int' postfix '++'                 | `-DeclRefExpr 0x1370c5c20 <col:52> 'int' lvalue Var 0x13687b738 'orientation' 'int'                 `-CompoundStmt 0x1370c5e20 <col:67, line:24:13> ","20197":"`-FunctionDecl 0x15b026638  line:1:5 fpm_scoreboard_proc_alloc 'int (struct fpm_scoreboard_s *, int *)'   |-ParmVarDecl 0x15b00e248 <col:31, col:56> col:56 used scoreboard 'struct fpm_scoreboard_s *'   |-ParmVarDecl 0x15b00e2f8 <col:68, col:73> col:73 used child_index 'int *'   `-CompoundStmt 0x15b029d88 <line:2:1, line:42:1>     |-DeclStmt 0x15b0267f0 <line:3:2, col:12>     | `-VarDecl 0x15b026750 <col:2, col:11> col:6 used i 'int' cinit     |   `-UnaryOperator 0x15b0267d8 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x15b0267b8 <col:11> 'int' 1     |-IfStmt 0x15b026928 <line:5:2, line:7:2>     | |-BinaryOperator 0x15b0268a8 <line:5:6, col:22> 'int' '||'     | | |-UnaryOperator 0x15b026840 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x15b026828 <col:7> 'struct fpm_scoreboard_s *' <LValueToRValue>     | | |   `-DeclRefExpr 0x15b026808 <col:7> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     | | `-UnaryOperator 0x15b026890 <col:21, col:22> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x15b026878 <col:22> 'int *' <LValueToRValue>     | |     `-DeclRefExpr 0x15b026858 <col:22> 'int *' lvalue ParmVar 0x15b00e2f8 'child_index' 'int *'     | `-CompoundStmt 0x15b026910 <col:35, line:7:2>     |   `-ReturnStmt 0x15b026900 <line:6:3, col:11>     |     `-UnaryOperator 0x15b0268e8 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x15b0268c8 <col:11> 'int' 1     |-IfStmt 0x15b026ed0 <line:10:2, line:14:2>     | |-BinaryOperator 0x15b026b08 <line:10:6, col:86> 'int' contains-errors '&&'     | | |-BinaryOperator 0x15b0269c8 <col:6, col:31> 'int' contains-errors '>='     | | | |-RecoveryExpr 0x15b026980 <col:6, col:18> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x15b026948 <col:6> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     | | | `-IntegerLiteral 0x15b0269a8 <col:31> 'int' 0     | | `-BinaryOperator 0x15b026ae8 <col:36, col:86> 'int' contains-errors '<'     | |   |-CStyleCastExpr 0x15b026a60 <col:36, col:62> 'unsigned int' contains-errors <Dependent>     | |   | `-RecoveryExpr 0x15b026a20 <col:50, col:62> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x15b0269e8 <col:50> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     | |   `-RecoveryExpr 0x15b026ac0 <col:74, col:86> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15b026a88 <col:74> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     | `-CompoundStmt 0x15b026eb8 <col:94, line:14:2>     |   `-IfStmt 0x15b026e98 <line:11:3, line:13:3>     |     |-BinaryOperator 0x15b026dc0 <line:11:7, col:94> 'int' contains-errors '&&'     |     | |-ArraySubscriptExpr 0x15b026c18 <col:7, col:46> '<dependent type>' contains-errors lvalue     |     | | |-ImplicitCastExpr 0x15b026be8 <col:7, col:19> '<dependent type>' contains-errors <LValueToRValue>     |     | | | `-RecoveryExpr 0x15b026b60 <col:7, col:19> '<dependent type>' contains-errors lvalue     |     | | |   `-DeclRefExpr 0x15b026b28 <col:7> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |     | | `-ImplicitCastExpr 0x15b026c00 <col:25, col:37> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x15b026bc0 <col:25, col:37> '<dependent type>' contains-errors lvalue     |     | |     `-DeclRefExpr 0x15b026b88 <col:25> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |     | `-UnaryOperator 0x15b026da8 <col:51, col:94> '<dependent type>' contains-errors prefix '!' cannot overflow     |     |   `-ImplicitCastExpr 0x15b026d90 <col:52, col:94> '<dependent type>' contains-errors <LValueToRValue>     |     |     `-CXXDependentScopeMemberExpr 0x15b026d48 <col:52, col:94> '<dependent type>' contains-errors lvalue ->used     |     |       `-ArraySubscriptExpr 0x15b026d28 <col:52, col:91> '<dependent type>' contains-errors lvalue     |     |         |-ImplicitCastExpr 0x15b026cf8 <col:52, col:64> '<dependent type>' contains-errors <LValueToRValue>     |     |         | `-RecoveryExpr 0x15b026c70 <col:52, col:64> '<dependent type>' contains-errors lvalue     |     |         |   `-DeclRefExpr 0x15b026c38 <col:52> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |     |         `-ImplicitCastExpr 0x15b026d10 <col:70, col:82> '<dependent type>' contains-errors <LValueToRValue>     |     |           `-RecoveryExpr 0x15b026cd0 <col:70, col:82> '<dependent type>' contains-errors lvalue     |     |             `-DeclRefExpr 0x15b026c98 <col:70> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |     `-CompoundStmt 0x15b026e80 <col:100, line:13:3>     |       `-BinaryOperator 0x15b026e60 <line:12:4, col:20> 'int' contains-errors '='     |         |-DeclRefExpr 0x15b026de0 <col:4> 'int' lvalue Var 0x15b026750 'i' 'int'     |         `-RecoveryExpr 0x15b026e38 <col:8, col:20> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x15b026e00 <col:8> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |-IfStmt 0x15b0294a8 <line:16:2, line:23:2>     | |-BinaryOperator 0x15b026f48 <line:16:6, col:10> 'int' '<'     | | |-ImplicitCastExpr 0x15b026f30 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15b026ef0 <col:6> 'int' lvalue Var 0x15b026750 'i' 'int'     | | `-IntegerLiteral 0x15b026f10 <col:10> 'int' 0     | `-CompoundStmt 0x15b029488 <col:13, line:23:2>     |   |-CallExpr 0x15b0271e8 <line:17:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15b027090 <col:3> 'int ()' Function 0x15b026fd8 'zlog' 'int ()'     |   | |-RecoveryExpr 0x15b0271c8 <col:8> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x15b027110 <col:20> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x15b027168 <col:27, col:39> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15b027130 <col:27> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |   `-ForStmt 0x15b029450 <line:18:3, line:22:3>     |     |-BinaryOperator 0x15b027260 <line:18:8, col:12> 'int' '='     |     | |-DeclRefExpr 0x15b027220 <col:8> 'int' lvalue Var 0x15b026750 'i' 'int'     |     | `-IntegerLiteral 0x15b027240 <col:12> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x15b027358 <col:15, col:36> 'int' contains-errors '<'     |     | |-ImplicitCastExpr 0x15b027340 <col:15> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x15b027280 <col:15> 'int' lvalue Var 0x15b026750 'i' 'int'     |     | `-CStyleCastExpr 0x15b027318 <col:19, col:36> 'int' contains-errors <Dependent>     |     |   `-RecoveryExpr 0x15b0272d8 <col:24, col:36> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x15b0272a0 <col:24> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |     |-UnaryOperator 0x15b027398 <col:44, col:45> 'int' postfix '++'     |     | `-DeclRefExpr 0x15b027378 <col:44> 'int' lvalue Var 0x15b026750 'i' 'int'     |     `-CompoundStmt 0x15b029438 <col:49, line:22:3>     |       `-IfStmt 0x15b029418 <line:19:4, line:21:4>     |         |-BinaryOperator 0x15b0275c8 <line:19:8, col:55> 'int' contains-errors '&&'     |         | |-ArraySubscriptExpr 0x15b027460 <col:8, col:27> '<dependent type>' contains-errors lvalue     |         | | |-ImplicitCastExpr 0x15b027430 <col:8, col:20> '<dependent type>' contains-errors <LValueToRValue>     |         | | | `-RecoveryExpr 0x15b0273e8 <col:8, col:20> '<dependent type>' contains-errors lvalue     |         | | |   `-DeclRefExpr 0x15b0273b0 <col:8> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |         | | `-ImplicitCastExpr 0x15b027448 <col:26> 'int' <LValueToRValue>     |         | |   `-DeclRefExpr 0x15b027410 <col:26> 'int' lvalue Var 0x15b026750 'i' 'int'     |         | `-UnaryOperator 0x15b0275b0 <col:32, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow     |         |   `-ImplicitCastExpr 0x15b027598 <col:33, col:55> '<dependent type>' contains-errors <LValueToRValue>     |         |     `-CXXDependentScopeMemberExpr 0x15b027550 <col:33, col:55> '<dependent type>' contains-errors lvalue ->used     |         |       `-ArraySubscriptExpr 0x15b027530 <col:33, col:52> '<dependent type>' contains-errors lvalue     |         |         |-ImplicitCastExpr 0x15b027500 <col:33, col:45> '<dependent type>' contains-errors <LValueToRValue>     |         |         | `-RecoveryExpr 0x15b0274b8 <col:33, col:45> '<dependent type>' contains-errors lvalue     |         |         |   `-DeclRefExpr 0x15b027480 <col:33> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |         |         `-ImplicitCastExpr 0x15b027518 <col:51> 'int' <LValueToRValue>     |         |           `-DeclRefExpr 0x15b0274e0 <col:51> 'int' lvalue Var 0x15b026750 'i' 'int'     |         `-CompoundStmt 0x15b029400 <col:61, line:21:4>     |           `-BreakStmt 0x15b0275e8 <line:20:5>     |-IfStmt 0x15b029808 <line:26:2, line:29:2>     | |-BinaryOperator 0x15b029638 <line:26:6, col:37> 'int' contains-errors '||'     | | |-BinaryOperator 0x15b029520 <col:6, col:10> 'int' '<'     | | | |-ImplicitCastExpr 0x15b029508 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x15b0294c8 <col:6> 'int' lvalue Var 0x15b026750 'i' 'int'     | | | `-IntegerLiteral 0x15b0294e8 <col:10> 'int' 0     | | `-BinaryOperator 0x15b029618 <col:15, col:37> 'int' contains-errors '>='     | |   |-ImplicitCastExpr 0x15b029600 <col:15> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x15b029540 <col:15> 'int' lvalue Var 0x15b026750 'i' 'int'     | |   `-CStyleCastExpr 0x15b0295d8 <col:20, col:37> 'int' contains-errors <Dependent>     | |     `-RecoveryExpr 0x15b029598 <col:25, col:37> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x15b029560 <col:25> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     | `-CompoundStmt 0x15b0297e8 <col:45, line:29:2>     |   |-CallExpr 0x15b029768 <line:27:3, col:43> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15b029658 <col:3> 'int ()' Function 0x15b026fd8 'zlog' 'int ()'     |   | |-RecoveryExpr 0x15b029748 <col:8> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x15b029690 <col:20> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x15b0296e8 <col:27, col:39> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x15b0296b0 <col:27> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |   `-ReturnStmt 0x15b0297d8 <line:28:3, col:11>     |     `-UnaryOperator 0x15b0297c0 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x15b0297a0 <col:11> 'int' 1     |-BinaryOperator 0x15b029960 <line:31:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15b0298f8 <col:2, col:24> '<dependent type>' contains-errors lvalue ->used     | | `-ArraySubscriptExpr 0x15b0298d8 <col:2, col:21> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x15b0298a8 <col:2, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x15b029860 <col:2, col:14> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x15b029828 <col:2> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     | |   `-ImplicitCastExpr 0x15b0298c0 <col:20> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x15b029888 <col:20> 'int' lvalue Var 0x15b026750 'i' 'int'     | `-IntegerLiteral 0x15b029940 <col:31> 'int' 1     |-BinaryOperator 0x15b029a08 <line:32:2, col:17> 'int' '='     | |-UnaryOperator 0x15b0299b8 <col:2, col:3> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x15b0299a0 <col:3> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x15b029980 <col:3> 'int *' lvalue ParmVar 0x15b00e2f8 'child_index' 'int *'     | `-ImplicitCastExpr 0x15b0299f0 <col:17> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x15b0299d0 <col:17> 'int' lvalue Var 0x15b026750 'i' 'int'     |-IfStmt 0x15b029d28 <line:35:2, line:39:2> has_else     | |-BinaryOperator 0x15b029b40 <line:35:6, col:32> 'int' contains-errors '>='     | | |-BinaryOperator 0x15b029a80 <col:6, col:10> 'int' '+'     | | | |-ImplicitCastExpr 0x15b029a68 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x15b029a28 <col:6> 'int' lvalue Var 0x15b026750 'i' 'int'     | | | `-IntegerLiteral 0x15b029a48 <col:10> 'int' 1     | | `-CStyleCastExpr 0x15b029b18 <col:15, col:32> 'int' contains-errors <Dependent>     | |   `-RecoveryExpr 0x15b029ad8 <col:20, col:32> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15b029aa0 <col:20> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     | |-CompoundStmt 0x15b029c00 <col:40, line:37:2>     | | `-BinaryOperator 0x15b029be0 <line:36:3, col:27> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x15b029b98 <col:3, col:15> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x15b029b60 <col:3> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     | |   `-IntegerLiteral 0x15b029bc0 <col:27> 'int' 0     | `-CompoundStmt 0x15b029d10 <line:37:9, line:39:2>     |   `-BinaryOperator 0x15b029cf0 <line:38:3, col:31> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x15b029c50 <col:3, col:15> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15b029c18 <col:3> 'struct fpm_scoreboard_s *' lvalue ParmVar 0x15b00e248 'scoreboard' 'struct fpm_scoreboard_s *'     |     `-BinaryOperator 0x15b029cd0 <col:27, col:31> 'int' '+'     |       |-ImplicitCastExpr 0x15b029cb8 <col:27> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x15b029c78 <col:27> 'int' lvalue Var 0x15b026750 'i' 'int'     |       `-IntegerLiteral 0x15b029c98 <col:31> 'int' 1     `-ReturnStmt 0x15b029d78 <line:41:2, col:9>       `-IntegerLiteral 0x15b029d58 <col:9> 'int' 0 ","19283":"`-FunctionDecl 0x15800de88  line:1:20 invalid r_read_at_le16 'int (const void *, int)' static inline   |-ParmVarDecl 0x15800dd28 <col:35, col:47> col:47 src 'const void *'   |-ParmVarDecl 0x15800dda8 <col:52, col:59> col:59 invalid offset 'int'   `-CompoundStmt 0x15800e1a8 <col:67, line:4:1>     |-DeclStmt 0x15800dfc0 <line:2:2, col:41>     | `-VarDecl 0x15800df58 <col:2, col:13> col:13 invalid s 'const int *'     `-ReturnStmt 0x15800e198 <line:3:2, col:23>       `-CallExpr 0x15800e170 <col:9, col:23> '<dependent type>' contains-errors         |-DeclRefExpr 0x15800e130 <col:9> 'int ()' Function 0x15800e078 'r_read_le16' 'int ()'         `-RecoveryExpr 0x15800e150 <col:22> '<dependent type>' contains-errors lvalue ","20116":"`-FunctionDecl 0x14c01f488  line:1:1 invalid get_glyph_class 'int (int, int *)'   |-ParmVarDecl 0x14c01f2f0 <col:18, col:29> col:29 invalid charcode 'int'   |-ParmVarDecl 0x14c01f3a8 <line:2:4, col:15> col:15 invalid class 'int *'   `-CompoundStmt 0x14c9048c8 <line:3:1, line:23:1>     |-IfStmt 0x14c01f7a8 <line:5:3, line:7:12>     | |-BinaryOperator 0x14c01f740 <line:5:7, line:6:48> 'int' contains-errors '||'     | | |-ParenExpr 0x14c01f620 <line:5:7, col:48> 'int' contains-errors     | | | `-BinaryOperator 0x14c01f600 <col:8, col:42> 'int' contains-errors '&&'     | | |   |-BinaryOperator 0x14c01f580 <col:8, col:20> 'int' contains-errors '>='     | | |   | |-RecoveryExpr 0x14c01f540 <col:8> '<dependent type>' contains-errors lvalue     | | |   | `-IntegerLiteral 0x14c01f560 <col:20> 'int' 64336     | | |   `-BinaryOperator 0x14c01f5e0 <col:30, col:42> 'int' contains-errors '<='     | | |     |-RecoveryExpr 0x14c01f5a0 <col:30> '<dependent type>' contains-errors lvalue     | | |     `-IntegerLiteral 0x14c01f5c0 <col:42> 'int' 65023     | | `-ParenExpr 0x14c01f720 <line:6:7, col:48> 'int' contains-errors     | |   `-BinaryOperator 0x14c01f700 <col:8, col:42> 'int' contains-errors '&&'     | |     |-BinaryOperator 0x14c01f680 <col:8, col:20> 'int' contains-errors '>='     | |     | |-RecoveryExpr 0x14c01f640 <col:8> '<dependent type>' contains-errors lvalue     | |     | `-IntegerLiteral 0x14c01f660 <col:20> 'int' 65136     | |     `-BinaryOperator 0x14c01f6e0 <col:30, col:42> 'int' contains-errors '<='     | |       |-RecoveryExpr 0x14c01f6a0 <col:30> '<dependent type>' contains-errors lvalue     | |       `-IntegerLiteral 0x14c01f6c0 <col:42> 'int' 65279     | `-ReturnStmt 0x14c01f798 <line:7:5, col:12>     |   `-RecoveryExpr 0x14c01f778 <col:12> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x14c01f9c8 <line:9:3, line:22:5>       |-CStyleCastExpr 0x14c01f9a0 <line:9:11, col:41> 'int' contains-errors <Dependent>       | `-CallExpr 0x14c01f960 <col:17, col:41> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x14c01f920 <col:17> 'int ()' Function 0x14c01f868 'g_unichar_type' 'int ()'       |   `-RecoveryExpr 0x14c01f940 <col:33> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14c904890 <line:10:5, line:22:5>         |-BinaryOperator 0x14c9046b8 <line:14:7, col:16> '<dependent type>' contains-errors '='         | |-UnaryOperator 0x14c904680 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x14c904668 <col:8> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x14c904648 <col:8> '<dependent type>' contains-errors lvalue         | `-IntegerLiteral 0x14c904698 <col:16> 'int' 3         |-ReturnStmt 0x14c904710 <line:15:7, col:14>         | `-RecoveryExpr 0x14c9046f0 <col:14> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x14c904788 <line:18:7, col:14>         | `-RecoveryExpr 0x14c904768 <col:14> '<dependent type>' contains-errors lvalue         |-DefaultStmt 0x14c904828 <line:19:5, line:20:16>         | `-BinaryOperator 0x14c904808 <col:7, col:16> '<dependent type>' contains-errors '='         |   |-UnaryOperator 0x14c9047d0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow         |   | `-ImplicitCastExpr 0x14c9047b8 <col:8> '<dependent type>' contains-errors <LValueToRValue>         |   |   `-RecoveryExpr 0x14c904798 <col:8> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x14c9047e8 <col:16> 'int' 1         `-ReturnStmt 0x14c904880 <line:21:7, col:14>           `-RecoveryExpr 0x14c904860 <col:14> '<dependent type>' contains-errors lvalue ","19636":"`-FunctionDecl 0x13d940a00  line:1:13 nfs4_locku_done 'void (struct rpc_task *, void *)' static   |-ParmVarDecl 0x13d928648 <col:29, col:46> col:46 used task 'struct rpc_task *'   |-ParmVarDecl 0x13d9286c8 <col:52, col:58> col:58 used data 'void *'   `-CompoundStmt 0x13f008b70 <line:2:1, line:44:1>     |-DeclStmt 0x13d940d38 <line:3:2, col:41>     | |-RecordDecl 0x13d940b00 <col:2, col:9> col:9 struct nfs4_unlockdata     | `-VarDecl 0x13d940c68 <col:2, col:37> col:26 used calldata 'struct nfs4_unlockdata *' cinit     |   `-ImplicitCastExpr 0x13d940d08 <col:37> 'struct nfs4_unlockdata *' <BitCast>     |     `-ImplicitCastExpr 0x13d940cf0 <col:37> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x13d940cd0 <col:37> 'void *' lvalue ParmVar 0x13d9286c8 'data' 'void *'     |-DeclStmt 0x13d941148 <line:4:2, line:7:3>     | |-RecordDecl 0x13d940d50 <line:4:2, col:9> col:9 struct nfs4_exception     | `-VarDecl 0x13d940e48 <col:2, col:24> col:24 invalid exception 'struct nfs4_exception'     |-IfStmt 0x13d9413e8 <line:9:2, line:10:3>     | |-UnaryOperator 0x13d9413c0 <line:9:6, col:54> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13d941390 <col:7, col:54> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13d941290 <col:7> 'int ()' Function 0x13d9411d8 'nfs4_sequence_done' 'int ()'     | |   |-DeclRefExpr 0x13d9412b0 <col:26> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     | |   `-UnaryOperator 0x13d941378 <col:32, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x13d941330 <col:33, col:47> '<dependent type>' contains-errors lvalue .seq_res     | |       `-RecoveryExpr 0x13d941308 <col:33, col:43> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x13d9412d0 <col:33> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     | `-ReturnStmt 0x13d9413d8 <line:10:3>     |-SwitchStmt 0x13d941480 <line:11:2, line:42:2>     | |-ImplicitCastExpr 0x13d941468 <line:11:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x13d941440 <col:10, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13d941408 <col:10> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     | `-CompoundStmt 0x13f008940 <col:27, line:42:2>     |   |-CaseStmt 0x13d9414c8 <line:12:3, line:13:53>     |   | |-IntegerLiteral 0x13d9414a8 <line:12:8> 'int' 0     |   | `-CallExpr 0x13d9416b0 <line:13:4, col:53> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13d9415d0 <col:4> 'int ()' Function 0x13d941518 'renew_lease' 'int ()'     |   |   |-RecoveryExpr 0x13d941628 <col:16, col:26> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x13d9415f0 <col:16> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   |   `-RecoveryExpr 0x13d941688 <col:34, col:44> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13d941650 <col:34> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   |-CallExpr 0x13d941948 <line:14:4, col:71> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13d9417c0 <col:4> 'int ()' Function 0x13d941708 'locks_lock_inode_wait' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x13d941888 <col:26, col:51> '<dependent type>' contains-errors lvalue ->inode     |   | | `-CXXDependentScopeMemberExpr 0x13d941840 <col:26, col:41> '<dependent type>' contains-errors lvalue ->ls_state     |   | |   `-RecoveryExpr 0x13d941818 <col:26, col:36> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x13d9417e0 <col:26> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | `-UnaryOperator 0x13d941930 <col:58, col:69> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x13d941908 <col:59, col:69> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13d9418d0 <col:59> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   |-IfStmt 0x13d942230 <line:15:4, line:17:5>     |   | |-CallExpr 0x13d9421f8 <line:15:8, line:16:28> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x13d9420b8 <line:15:8> 'int ()' Function 0x13d942000 'nfs4_update_lock_stateid' 'int ()'     |   | | |-RecoveryExpr 0x13d942110 <col:33, col:43> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x13d9420d8 <col:33> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | | `-UnaryOperator 0x13d9421e0 <line:16:6, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   `-CXXDependentScopeMemberExpr 0x13d942198 <col:7, col:21> '<dependent type>' contains-errors lvalue .stateid     |   | |     `-RecoveryExpr 0x13d942170 <col:7, col:17> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x13d942138 <col:7> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | `-BreakStmt 0x13d942228 <line:17:5>     |   |-CallExpr 0x13d9425a8 <line:21:4, line:23:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13d9423c0 <line:21:4> 'int ()' Function 0x13d942308 'nfs4_free_revoked_stateid' 'int ()'     |   | |-RecoveryExpr 0x13d942418 <col:30, col:40> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13d9423e0 <col:30> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | |-UnaryOperator 0x13d9424e8 <line:22:6, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x13d9424a0 <col:7, col:21> '<dependent type>' contains-errors lvalue .stateid     |   | |   `-RecoveryExpr 0x13d942478 <col:7, col:17> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x13d942440 <col:7> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | `-CXXDependentScopeMemberExpr 0x13d942560 <line:23:6, col:19> '<dependent type>' contains-errors lvalue .rpc_cred     |   |   `-RecoveryExpr 0x13d942538 <col:6, col:12> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13d942500 <col:6> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     |   |-IfStmt 0x13d9429d8 <line:27:4, line:29:34>     |   | |-CallExpr 0x13d942800 <line:27:8, line:28:20> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x13d9426c0 <line:27:8> 'int ()' Function 0x13d942608 'nfs4_sync_lock_stateid' 'int ()'     |   | | |-UnaryOperator 0x13d942788 <col:31, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | | `-CXXDependentScopeMemberExpr 0x13d942740 <col:32, col:46> '<dependent type>' contains-errors lvalue .stateid     |   | | |   `-RecoveryExpr 0x13d942718 <col:32, col:42> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x13d9426e0 <col:32> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | | `-RecoveryExpr 0x13d9427d8 <line:28:7, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13d9427a0 <col:7> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | `-CallExpr 0x13d942998 <line:29:5, col:34> 'int'     |   |   |-ImplicitCastExpr 0x13d942980 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x13d942910 <col:5> 'int ()' Function 0x13d942858 'rpc_restart_call_prepare' 'int ()'     |   |   `-ImplicitCastExpr 0x13d9429c0 <col:30> 'struct rpc_task *' <LValueToRValue>     |   |     `-DeclRefExpr 0x13d942930 <col:30> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     |   |-BreakStmt 0x13d9429f8 <line:30:4>     |   |-IfStmt 0x13d942ce8 <line:32:4, line:34:34>     |   | |-CallExpr 0x13d942c20 <line:32:8, line:33:20> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x13d942ae0 <line:32:8> 'int ()' Function 0x13d942a28 'nfs4_refresh_lock_old_stateid' 'int ()'     |   | | |-UnaryOperator 0x13d942ba8 <col:38, col:53> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | | `-CXXDependentScopeMemberExpr 0x13d942b60 <col:39, col:53> '<dependent type>' contains-errors lvalue .stateid     |   | | |   `-RecoveryExpr 0x13d942b38 <col:39, col:49> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x13d942b00 <col:39> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | | `-RecoveryExpr 0x13d942bf8 <line:33:7, col:17> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13d942bc0 <col:7> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   | `-CallExpr 0x13d942ca8 <line:34:5, col:34> 'int'     |   |   |-ImplicitCastExpr 0x13d942c90 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x13d942c50 <col:5> 'int ()' Function 0x13d942858 'rpc_restart_call_prepare' 'int ()'     |   |   `-ImplicitCastExpr 0x13d942cd0 <col:30> 'struct rpc_task *' <LValueToRValue>     |   |     `-DeclRefExpr 0x13d942c70 <col:30> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     |   |-BreakStmt 0x13d942d08 <line:35:4>     |   |-DefaultStmt 0x13f008800 <line:36:3, line:39:16>     |   | `-BinaryOperator 0x13d942fc8 <line:37:4, line:39:16> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x13d942d48 <line:37:4, col:10> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x13d942d10 <col:4> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     |   |   `-CallExpr 0x13d942f88 <col:22, line:39:16> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x13d942e50 <line:37:22> 'int ()' Function 0x13d942d98 'nfs4_async_handle_exception' 'int ()'     |   |     |-DeclRefExpr 0x13d942e70 <col:50> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     |   |     |-RecoveryExpr 0x13d942ec8 <line:38:6, col:16> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x13d942e90 <col:6> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *'     |   |     |-RecoveryExpr 0x13d942f28 <col:24, col:30> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x13d942ef0 <col:24> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     |   |     `-UnaryOperator 0x13d942f70 <line:39:6, col:7> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |       `-RecoveryExpr 0x13d942f50 <col:7> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x13f008920 <line:40:4, line:41:34>     |     |-CXXDependentScopeMemberExpr 0x13f008840 <line:40:8, col:18> '<dependent type>' contains-errors lvalue .retry     |     | `-RecoveryExpr 0x13f008820 <col:8> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x13f0088e0 <line:41:5, col:34> 'int'     |       |-ImplicitCastExpr 0x13f0088c8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13f008888 <col:5> 'int ()' Function 0x13d942858 'rpc_restart_call_prepare' 'int ()'     |       `-ImplicitCastExpr 0x13f008908 <col:30> 'struct rpc_task *' <LValueToRValue>     |         `-DeclRefExpr 0x13f0088a8 <col:30> 'struct rpc_task *' lvalue ParmVar 0x13d928648 'task' 'struct rpc_task *'     `-CallExpr 0x13f008b48 <line:43:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x13f008a80 <col:2> 'int ()' Function 0x13f0089c8 'nfs_release_seqid' 'int ()'       `-CXXDependentScopeMemberExpr 0x13f008b00 <col:20, col:34> '<dependent type>' contains-errors lvalue .seqid         `-RecoveryExpr 0x13f008ad8 <col:20, col:30> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x13f008aa0 <col:20> 'struct nfs4_unlockdata *' lvalue Var 0x13d940c68 'calldata' 'struct nfs4_unlockdata *' ","19481":"`-FunctionDecl 0x13800ddf8  line:1:1 invalid httpGetState 'int (int *)'   |-ParmVarDecl 0x13800dd28 <col:14, col:22> col:22 invalid http 'int *'   `-CompoundStmt 0x13800df78 <line:2:1, line:4:1> ","19241":"`-FunctionDecl 0x14580ddf8  line:1:1 invalid g_keyfile_settings_backend_init 'int (int *)'   |-ParmVarDecl 0x14580dd28 <col:34, col:59> col:59 invalid kfsb 'int *'   `-CompoundStmt 0x14580dea8 <line:2:1, line:3:1> ","19642":"`-FunctionDecl 0x147140be8  line:1:1 generate_ns_check 'int (struct module_qstate *, struct iter_qstate *, int)'   |-ParmVarDecl 0x147128648 <col:19, col:41> col:41 used qstate 'struct module_qstate *'   |-ParmVarDecl 0x147140a28 <col:49, col:69> col:69 used iq 'struct iter_qstate *'   |-ParmVarDecl 0x147140aa8 <col:73, col:77> col:77 used id 'int'   `-CompoundStmt 0x147144a48 <line:2:1, line:48:1>     |-DeclStmt 0x1471410a8 <line:3:2, col:66>     | |-RecordDecl 0x147140cf0 <col:2, col:9> col:9 struct iter_env     | `-VarDecl 0x147140e58 <col:2, col:65> col:19 used ie 'struct iter_env *' cinit     |   `-CStyleCastExpr 0x147141068 <col:24, col:65> 'struct iter_env *' contains-errors <Dependent>     |     `-ArraySubscriptExpr 0x147140fb8 <col:42, col:65> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x147140f88 <col:42, col:55> '<dependent type>' contains-errors <LValueToRValue>     |       | `-CXXDependentScopeMemberExpr 0x147140f20 <col:42, col:55> '<dependent type>' contains-errors lvalue ->modinfo     |       |   `-RecoveryExpr 0x147140ef8 <col:42, col:50> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x147140ec0 <col:42> 'struct module_qstate *' lvalue ParmVar 0x147128648 'qstate' 'struct module_qstate *'     |       `-ImplicitCastExpr 0x147140fa0 <col:63> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x147140f68 <col:63> 'int' lvalue ParmVar 0x147140aa8 'id' 'int'     |-DeclStmt 0x1471411b0 <line:4:2, col:28>     | `-VarDecl 0x147141148 <col:2, col:24> col:24 used subq 'struct module_qstate *'     |-CallExpr 0x147141370 <line:5:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1471412f0 <col:2> 'int ()' Function 0x147141238 'log_assert' 'int ()'     | `-RecoveryExpr 0x147141348 <col:13, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x147141310 <col:13> 'struct iter_qstate *' lvalue ParmVar 0x147140a28 'iq' 'struct iter_qstate *'     |-IfStmt 0x147141488 <line:7:2, line:8:3>     | |-BinaryOperator 0x147141458 <line:7:5, col:22> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1471413d0 <col:5, col:9> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x147141398 <col:5> 'struct iter_qstate *' lvalue ParmVar 0x147140a28 'iq' 'struct iter_qstate *'     | | `-RecoveryExpr 0x147141430 <col:18, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1471413f8 <col:18> 'struct iter_env *' contains-errors lvalue Var 0x147140e58 'ie' 'struct iter_env *'     | `-ReturnStmt 0x147141478 <line:8:3>     |-IfStmt 0x147141908 <line:9:2, line:11:3>     | |-UnaryOperator 0x1471418e0 <line:9:5, line:10:26> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x147141898 <line:9:6, line:10:26> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x147141588 <line:9:6> 'int ()' Function 0x1471414d0 'can_have_last_resort' 'int ()'     | |   |-RecoveryExpr 0x1471415e0 <col:27, col:35> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x1471415a8 <col:27> 'struct module_qstate *' lvalue ParmVar 0x147128648 'qstate' 'struct module_qstate *'     | |   |-CXXDependentScopeMemberExpr 0x147141668 <col:40, col:48> '<dependent type>' contains-errors lvalue ->name     | |   | `-RecoveryExpr 0x147141640 <col:40, col:44> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x147141608 <col:40> 'struct iter_qstate *' lvalue ParmVar 0x147140a28 'iq' 'struct iter_qstate *'     | |   |-CXXDependentScopeMemberExpr 0x147141710 <col:54, col:62> '<dependent type>' contains-errors lvalue ->namelen     | |   | `-RecoveryExpr 0x1471416e8 <col:54, col:58> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x1471416b0 <col:54> 'struct iter_qstate *' lvalue ParmVar 0x147140a28 'iq' 'struct iter_qstate *'     | |   |-CXXDependentScopeMemberExpr 0x1471417b8 <line:10:3, col:14> '<dependent type>' contains-errors lvalue .qclass     | |   | `-RecoveryExpr 0x147141790 <col:3, col:7> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x147141758 <col:3> 'struct iter_qstate *' lvalue ParmVar 0x147140a28 'iq' 'struct iter_qstate *'     | |   `-RecoveryExpr 0x147141878 <col:22> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1471418f8 <line:11:3>     |-IfStmt 0x147808e78 <line:13:2, line:19:2>     | |-RecoveryExpr 0x147808bf8 <line:13:5, line:15:63> '_Bool' contains-errors     | `-CompoundStmt 0x147808e58 <col:65, line:19:2>     |   |-CallExpr 0x147808dc8 <line:17:3, col:39> 'int'     |   | |-ImplicitCastExpr 0x147808db0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x147808cf8 <col:3> 'int ()' Function 0x147808c40 'generate_a_aaaa_check' 'int ()'     |   | |-ImplicitCastExpr 0x147808e00 <col:25> 'struct module_qstate *' <LValueToRValue>     |   | | `-DeclRefExpr 0x147808d18 <col:25> 'struct module_qstate *' lvalue ParmVar 0x147128648 'qstate' 'struct module_qstate *'     |   | |-ImplicitCastExpr 0x147808e18 <col:33> 'struct iter_qstate *' <LValueToRValue>     |   | | `-DeclRefExpr 0x147808d38 <col:33> 'struct iter_qstate *' lvalue ParmVar 0x147140a28 'iq' 'struct iter_qstate *'     |   | `-ImplicitCastExpr 0x147808e30 <col:37> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x147808d58 <col:37> 'int' lvalue ParmVar 0x147140aa8 'id' 'int'     |   `-ReturnStmt 0x147808e48 <line:18:3>     |-IfStmt 0x147808f70 <line:21:2, line:22:3>     | |-RecoveryExpr 0x147808f40 <line:21:5, col:28> '_Bool' contains-errors     | `-ReturnStmt 0x147808f60 <line:22:3>     |-IfStmt 0x1478097c0 <line:26:2, line:31:2>     | |-RecoveryExpr 0x147809658 <line:26:5, line:28:47> '_Bool' contains-errors     | `-CompoundStmt 0x1478097a8 <col:50, line:31:2>     |   `-ReturnStmt 0x147809798 <line:30:3>     `-IfStmt 0x147144a28 <line:32:2, line:47:2>       |-ImplicitCastExpr 0x147143e00 <line:32:5> 'struct module_qstate *' <LValueToRValue>       | `-DeclRefExpr 0x1478097e0 <col:5> 'struct module_qstate *' lvalue Var 0x147141148 'subq' 'struct module_qstate *'       `-CompoundStmt 0x1471449f8 <col:11, line:47:2>         |-DeclStmt 0x147144030 <line:33:3, line:34:40>         | `-VarDecl 0x147143ea8 <line:33:3, line:34:39> line:33:23 used subiq 'struct iter_qstate *' cinit         |   `-CStyleCastExpr 0x147144008 <line:34:4, col:39> 'struct iter_qstate *' contains-errors <Dependent>         |     `-ArraySubscriptExpr 0x147143fc0 <col:25, col:39> '<dependent type>' contains-errors lvalue         |       |-ImplicitCastExpr 0x147143f90 <col:25, col:31> '<dependent type>' contains-errors <LValueToRValue>         |       | `-RecoveryExpr 0x147143f48 <col:25, col:31> '<dependent type>' contains-errors lvalue         |       |   `-DeclRefExpr 0x147143f10 <col:25> 'struct module_qstate *' lvalue Var 0x147141148 'subq' 'struct module_qstate *'         |       `-ImplicitCastExpr 0x147143fa8 <col:37> 'int' <LValueToRValue>         |         `-DeclRefExpr 0x147143f70 <col:37> 'int' lvalue ParmVar 0x147140aa8 'id' 'int'         |-BinaryOperator 0x1471440c8 <line:38:3, col:25> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x147144080 <col:3, col:10> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x147144048 <col:3> 'struct iter_qstate *' contains-errors lvalue Var 0x147143ea8 'subiq' 'struct iter_qstate *'         | `-IntegerLiteral 0x1471440a8 <col:25> 'int' 1         |-BinaryOperator 0x147144338 <line:39:3, col:48> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x147144120 <col:3, col:10> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x1471440e8 <col:3> 'struct iter_qstate *' contains-errors lvalue Var 0x147143ea8 'subiq' 'struct iter_qstate *'         | `-CallExpr 0x147144308 <col:15, col:48> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x147144228 <col:15> 'int ()' Function 0x147144170 'delegpt_copy' 'int ()'         |   |-RecoveryExpr 0x147144280 <col:28, col:32> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x147144248 <col:28> 'struct iter_qstate *' lvalue ParmVar 0x147140a28 'iq' 'struct iter_qstate *'         |   `-RecoveryExpr 0x1471442e0 <col:36, col:42> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x1471442a8 <col:36> 'struct module_qstate *' lvalue Var 0x147141148 'subq' 'struct module_qstate *'         `-IfStmt 0x1471449d8 <line:40:3, line:46:3>           |-UnaryOperator 0x1471443d0 <line:40:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow           | `-ImplicitCastExpr 0x1471443b8 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>           |   `-RecoveryExpr 0x147144390 <col:7, col:14> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x147144358 <col:7> 'struct iter_qstate *' contains-errors lvalue Var 0x147143ea8 'subiq' 'struct iter_qstate *'           `-CompoundStmt 0x1471449a8 <col:18, line:46:3>             |-CallExpr 0x147144520 <line:41:4, col:17> 'int'             | |-ImplicitCastExpr 0x147144508 <col:4> 'int (*)()' <FunctionToPointerDecay>             | | `-DeclRefExpr 0x1471444c8 <col:4> 'int ()' Function 0x147144410 'log_err' 'int ()'             | `-ImplicitCastExpr 0x147144548 <col:12> 'char *' <ArrayToPointerDecay>             |   `-StringLiteral 0x1471444e8 <col:12> 'char[4]' lvalue \"STR\"             |-CallExpr 0x147144830 <line:42:4, line:43:27> '<dependent type>' contains-errors             | |-DeclRefExpr 0x147144640 <line:42:4> 'int ()' Function 0x147144588 'fptr_ok' 'int ()'             | `-CallExpr 0x147144808 <col:12, line:43:26> '<dependent type>' contains-errors             |   |-DeclRefExpr 0x147144740 <line:42:12> 'int ()' Function 0x147144688 'fptr_whitelist_modenv_kill_sub' 'int ()'             |   `-CXXDependentScopeMemberExpr 0x1471447c0 <line:43:5, col:18> '<dependent type>' contains-errors lvalue ->kill_sub             |     `-RecoveryExpr 0x147144798 <col:5, col:13> '<dependent type>' contains-errors lvalue             |       `-DeclRefExpr 0x147144760 <col:5> 'struct module_qstate *' lvalue ParmVar 0x147128648 'qstate' 'struct module_qstate *'             |-CallExpr 0x147144970 <line:44:4, col:33> '<dependent type>' contains-errors             | |-ParenExpr 0x147144930 <col:4, col:27> '<dependent type>' contains-errors             | | `-UnaryOperator 0x147144918 <col:5, col:19> '<dependent type>' contains-errors prefix '*' cannot overflow             | |   `-ImplicitCastExpr 0x147144900 <col:6, col:19> '<dependent type>' contains-errors <LValueToRValue>             | |     `-CXXDependentScopeMemberExpr 0x1471448b8 <col:6, col:19> '<dependent type>' contains-errors lvalue ->kill_sub             | |       `-RecoveryExpr 0x147144890 <col:6, col:14> '<dependent type>' contains-errors lvalue             | |         `-DeclRefExpr 0x147144858 <col:6> 'struct module_qstate *' lvalue ParmVar 0x147128648 'qstate' 'struct module_qstate *'             | `-DeclRefExpr 0x147144950 <col:29> 'struct module_qstate *' lvalue Var 0x147141148 'subq' 'struct module_qstate *'             `-ReturnStmt 0x147144998 <line:45:4> ","19612":"`-FunctionDecl 0x146124b48  col:3 implicit used memmove 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x146124c48 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x146124cb0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x146124d18 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x146124bf0 <<invalid sloc>> Implicit 884 ","19998":"`-FunctionDecl 0x15b00df10  line:1:13 invalid sasl_step 'void (int *, const char *, const char *)' static   |-ParmVarDecl 0x15b00dd28 <col:23, col:39> col:39 referenced invalid server 'int *'   |-ParmVarDecl 0x15b00dda8 <col:47, col:59> col:59 used data 'const char *'   |-ParmVarDecl 0x15b00de28 <col:65, col:77> col:77 from 'const char *'   `-CompoundStmt 0x15b027e10 <line:2:1, line:23:1>     |-IfStmt 0x15b00e3a0 <line:6:2, line:9:2>     | |-BinaryOperator 0x15b00e088 <line:6:6, col:30> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x15b00e020 <col:6, col:14> '<dependent type>' contains-errors lvalue ->sasl_timeout     | | | `-RecoveryExpr 0x15b00e000 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x15b00e068 <col:30> 'int' 0     | `-CompoundStmt 0x15b00e380 <col:33, line:9:2>     |   |-CallExpr 0x15b00e288 <line:7:3, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15b00e200 <col:3> 'int ()' Function 0x15b00e148 'g_source_remove' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x15b00e240 <col:19, col:27> '<dependent type>' contains-errors lvalue ->sasl_timeout     |   |   `-RecoveryExpr 0x15b00e220 <col:19> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x15b00e360 <line:8:3, col:26> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x15b00e2f8 <col:3, col:11> '<dependent type>' contains-errors lvalue ->sasl_timeout     |     | `-RecoveryExpr 0x15b00e2d0 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x15b00e2b0 <col:3> 'int *' lvalue ParmVar 0x15b00dd28 'server' 'int *'     |     `-IntegerLiteral 0x15b00e340 <col:26> 'int' 0     |-IfStmt 0x15b027798 <line:11:2, line:14:2>     | |-UnaryOperator 0x15b027608 <line:11:6, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15b0275d0 <col:7, col:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15b0274b8 <col:7> 'int ()' Function 0x15b027400 'sasl_reassemble_incoming' 'int ()'     | |   |-RecoveryExpr 0x15b0274d8 <col:32> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x15b0274f8 <col:40> 'const char *' lvalue ParmVar 0x15b00dda8 'data' 'const char *'     | |   `-UnaryOperator 0x15b0275b8 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x15b027598 <col:47> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15b027778 <col:53, line:14:2>     |   |-CallExpr 0x15b027740 <line:12:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15b027700 <col:3> 'int ()' Function 0x15b027648 'sasl_step_fail' 'int ()'     |   | `-RecoveryExpr 0x15b027720 <col:18> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x15b027768 <line:13:3>     `-IfStmt 0x15b027c10 <line:16:2, line:19:2>       |-BinaryOperator 0x15b027848 <line:16:6, col:13> 'int' contains-errors '!='       | |-RecoveryExpr 0x15b027808 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x15b027828 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15b027bf0 <col:19, line:19:2>         |-CallExpr 0x15b0279f0 <line:17:3, col:33> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15b027948 <col:3> 'int ()' Function 0x15b027890 'sasl_step_complete' 'int ()'         | |-RecoveryExpr 0x15b027968 <col:22> '<dependent type>' contains-errors lvalue         | `-RecoveryExpr 0x15b0279d0 <col:30> '<dependent type>' contains-errors lvalue         `-CallExpr 0x15b027bc0 <line:18:3, col:26> '<dependent type>' contains-errors           |-DeclRefExpr 0x15b027b00 <col:3> 'int ()' Function 0x15b027a48 'g_string_free' 'int ()'           |-RecoveryExpr 0x15b027b80 <col:17> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x15b027ba0 <col:22> '<dependent type>' contains-errors lvalue ","19423":"`-FunctionDecl 0x155827678  line:1:5 invalid gfs2_alloc_blocks 'int (struct gfs2_inode *, int *, unsigned int *, int, int *)'   |-ParmVarDecl 0x15580e248 <col:23, col:42> col:42 used ip 'struct gfs2_inode *'   |-ParmVarDecl 0x15580e318 <col:46, col:51> col:51 invalid bn 'int *'   |-ParmVarDecl 0x155827400 <col:55, col:69> col:69 used nblocks 'unsigned int *'   |-ParmVarDecl 0x155827480 <line:2:9, col:14> col:14 invalid dinode 'int'   |-ParmVarDecl 0x155827500 <col:22, col:27> col:27 invalid generation 'int *'   `-CompoundStmt 0x1548f7be0 <line:3:1, line:81:1>     |-DeclStmt 0x155827b58 <line:4:2, col:46>     | |-RecordDecl 0x155827748 <col:2, col:9> col:9 struct gfs2_sbd     | `-VarDecl 0x1558278b8 <col:2, col:45> col:19 used sdp 'struct gfs2_sbd *' cinit     |   `-CallExpr 0x155827b18 <col:25, col:45> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x155827a80 <col:25> 'int ()' Function 0x1558279c8 'GFS2_SB' 'int ()'     |     `-UnaryOperator 0x155827b00 <col:33, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x155827ad8 <col:34, col:38> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x155827aa0 <col:34> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     |-DeclStmt 0x155827d58 <line:5:2, col:26>     | |-RecordDecl 0x155827b70 <col:2, col:9> col:9 struct buffer_head     | `-VarDecl 0x155827cd8 <col:2, col:22> col:22 used dibh 'struct buffer_head *'     |-DeclStmt 0x155827fd0 <line:6:2, col:45>     | |-RecordDecl 0x155827d70 <col:2, col:9> col:9 struct gfs2_rbm     | `-VarDecl 0x155827e68 <col:2, col:18> col:18 referenced invalid rbm 'struct gfs2_rbm'     |-DeclStmt 0x155828068 <line:7:2, col:20>     | `-VarDecl 0x155828000 <col:2, col:15> col:15 used ndata 'unsigned int'     |-DeclStmt 0x155828100 <line:9:2, col:11>     | `-VarDecl 0x155828098 <col:2, col:6> col:6 used error 'int'     |-CallExpr 0x155828290 <line:11:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1558281f8 <col:2> 'int ()' Function 0x155828140 'gfs2_set_alloc_start' 'int ()'     | |-UnaryOperator 0x155828238 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x155828218 <col:24> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x155828250 <col:29> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     | `-RecoveryExpr 0x155828270 <col:33> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1548f25b0 <line:12:2, col:62> 'int' contains-errors '='     | |-DeclRefExpr 0x1558282c8 <col:2> 'int' lvalue Var 0x155828098 'error' 'int'     | `-CallExpr 0x1548f2568 <col:10, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1558283c8 <col:10> 'int ()' Function 0x155828310 'gfs2_rbm_find' 'int ()'     |   |-UnaryOperator 0x1548f2420 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1548f2400 <col:25> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1548f2508 <col:30> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1548f2528 <col:47> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x1548f2468 <col:53> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     |   `-RecoveryExpr 0x1548f2548 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1548f29e0 <line:14:2, line:17:2>     | |-BinaryOperator 0x1548f26a8 <line:14:6, col:16> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1548f25d0 <col:6> 'int' lvalue Var 0x155828098 'error' 'int'     | | `-UnaryOperator 0x1548f2690 <col:15, col:16> '<dependent type>' contains-errors prefix '-' cannot overflow     | |   `-ImplicitCastExpr 0x1548f2678 <col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x1548f2658 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1548f29c0 <col:24, line:17:2>     |   |-CallExpr 0x1548f2760 <line:15:3, col:40> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1548f26c8 <col:3> 'int ()' Function 0x155828140 'gfs2_set_alloc_start' 'int ()'     |   | |-UnaryOperator 0x1548f2708 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x1548f26e8 <col:25> '<dependent type>' contains-errors lvalue     |   | |-DeclRefExpr 0x1548f2720 <col:30> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     |   | `-RecoveryExpr 0x1548f2740 <col:34> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1548f29a0 <line:16:3, col:65> 'int' contains-errors '='     |     |-DeclRefExpr 0x1548f2798 <col:3> 'int' lvalue Var 0x155828098 'error' 'int'     |     `-CallExpr 0x1548f2958 <col:11, col:65> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1548f27b8 <col:11> 'int ()' Function 0x155828310 'gfs2_rbm_find' 'int ()'     |       |-UnaryOperator 0x1548f27f8 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |       | `-RecoveryExpr 0x1548f27d8 <col:26> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x1548f28d8 <col:31> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x1548f28f8 <col:48> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x1548f2918 <col:54> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x1548f2938 <col:60> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1548f3010 <line:20:2, line:26:2>     | |-ImplicitCastExpr 0x1548f2a20 <line:20:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1548f2a00 <col:6> 'int' lvalue Var 0x155828098 'error' 'int'     | `-CompoundStmt 0x1548f2ff8 <col:13, line:26:2>     |   `-GotoStmt 0x1548f2fe0 <line:25:3, col:8> 'rgrp_error' 0x1548f2f90     |-CallExpr 0x1548f31a8 <line:28:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1548f3110 <col:2> 'int ()' Function 0x1548f3058 'gfs2_alloc_extent' 'int ()'     | |-UnaryOperator 0x1548f3150 <col:20, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x1548f3130 <col:21> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1548f3168 <col:26> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x1548f3188 <col:34> 'unsigned int *' lvalue ParmVar 0x155827400 'nblocks' 'unsigned int *'     |-IfStmt 0x1548f4e78 <line:31:2, line:32:45>     | |-CallExpr 0x1548f4c70 <line:31:6, col:31> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1548f4bd8 <col:6> 'int ()' Function 0x1548f4b20 'gfs2_rs_active' 'int ()'     | | `-UnaryOperator 0x1548f4c58 <col:21, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1548f4c30 <col:22, col:26> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1548f4bf8 <col:22> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     | `-CallExpr 0x1548f4e40 <line:32:3, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1548f4d78 <col:3> 'int ()' Function 0x1548f4cc0 'gfs2_adjust_reservation' 'int ()'     |   |-DeclRefExpr 0x1548f4d98 <col:27> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     |   |-UnaryOperator 0x1548f4dd8 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1548f4db8 <col:32> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1548f4e28 <col:37, col:38> 'unsigned int' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x1548f4e10 <col:38> 'unsigned int *' <LValueToRValue>     |       `-DeclRefExpr 0x1548f4df0 <col:38> 'unsigned int *' lvalue ParmVar 0x155827400 'nblocks' 'unsigned int *'     |-BinaryOperator 0x1548f4f20 <line:33:2, col:11> 'unsigned int' '='     | |-DeclRefExpr 0x1548f4e98 <col:2> 'unsigned int' lvalue Var 0x155828000 'ndata' 'unsigned int'     | `-ImplicitCastExpr 0x1548f4f08 <col:10, col:11> 'unsigned int' <LValueToRValue>     |   `-UnaryOperator 0x1548f4ef0 <col:10, col:11> 'unsigned int' lvalue prefix '*' cannot overflow     |     `-ImplicitCastExpr 0x1548f4ed8 <col:11> 'unsigned int *' <LValueToRValue>     |       `-DeclRefExpr 0x1548f4eb8 <col:11> 'unsigned int *' lvalue ParmVar 0x155827400 'nblocks' 'unsigned int *'     |-IfStmt 0x1548f4f98 <line:34:2, line:35:8>     | |-RecoveryExpr 0x1548f4f40 <line:34:6> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x1548f4f80 <line:35:3, col:8> 'unsigned int' postfix '--'     |   `-DeclRefExpr 0x1548f4f60 <col:3> 'unsigned int' lvalue Var 0x155828000 'ndata' 'unsigned int'     |-IfStmt 0x1548f5d88 <line:37:2, line:48:2>     | |-UnaryOperator 0x1548f4ff0 <line:37:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1548f4fd8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1548f4fb8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1548f5d68 <col:15, line:48:2>     |   |-BinaryOperator 0x1548f5320 <line:39:3, col:43> 'int' '='     |   | |-DeclRefExpr 0x1548f50a8 <col:3> 'int' lvalue Var 0x155828098 'error' 'int'     |   | `-CallExpr 0x1548f52d8 <col:11, col:43> 'int'     |   |   |-ImplicitCastExpr 0x1548f52c0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1548f51a8 <col:11> 'int ()' Function 0x1548f50f0 'gfs2_meta_inode_buffer' 'int ()'     |   |   |-ImplicitCastExpr 0x1548f5308 <col:34> 'struct gfs2_inode *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1548f51c8 <col:34> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     |   |   `-UnaryOperator 0x1548f5270 <col:38, col:39> 'struct buffer_head **' prefix '&' cannot overflow     |   |     `-DeclRefExpr 0x1548f51e8 <col:39> 'struct buffer_head *' lvalue Var 0x155827cd8 'dibh' 'struct buffer_head *'     |   `-IfStmt 0x1548f5d48 <line:40:3, line:47:3>     |     |-BinaryOperator 0x1548f5398 <line:40:7, col:16> 'int' '=='     |     | |-ImplicitCastExpr 0x1548f5380 <col:7> 'int' <LValueToRValue>     |     | | `-DeclRefExpr 0x1548f5340 <col:7> 'int' lvalue Var 0x155828098 'error' 'int'     |     | `-IntegerLiteral 0x1548f5360 <col:16> 'int' 0     |     `-CompoundStmt 0x1548f5d18 <col:19, line:47:3>     |       |-DeclStmt 0x1548f56b8 <line:41:4, line:42:39>     |       | |-RecordDecl 0x1548f53b8 <line:41:4, col:11> col:11 struct gfs2_dinode     |       | `-VarDecl 0x1548f5528 <col:4, line:42:33> line:41:24 used di 'struct gfs2_dinode *' cinit     |       |   `-CStyleCastExpr 0x1548f5678 <line:42:5, col:33> 'struct gfs2_dinode *' contains-errors <Dependent>     |       |     `-RecoveryExpr 0x1548f55c8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x1548f5590 <col:27> 'struct buffer_head *' lvalue Var 0x155827cd8 'dibh' 'struct buffer_head *'     |       |-CallExpr 0x1548f5850 <line:43:4, col:38> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1548f57b0 <col:4> 'int ()' Function 0x1548f56f8 'gfs2_trans_add_meta' 'int ()'     |       | |-RecoveryExpr 0x1548f5808 <col:24, col:28> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x1548f57d0 <col:24> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     |       | `-DeclRefExpr 0x1548f5830 <col:34> 'struct buffer_head *' lvalue Var 0x155827cd8 'dibh' 'struct buffer_head *'     |       |-BinaryOperator 0x1548f5b80 <line:44:4, line:45:27> '<dependent type>' contains-errors '='     |       | |-RecoveryExpr 0x1548f58b8 <line:44:4, col:8> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x1548f5880 <col:4> 'struct gfs2_dinode *' contains-errors lvalue Var 0x1548f5528 'di' 'struct gfs2_dinode *'     |       | `-BinaryOperator 0x1548f5b60 <col:23, line:45:27> '<dependent type>' contains-errors '='     |       |   |-RecoveryExpr 0x1548f5918 <line:44:23, col:27> '<dependent type>' contains-errors lvalue     |       |   | `-DeclRefExpr 0x1548f58e0 <col:23> 'struct gfs2_dinode *' contains-errors lvalue Var 0x1548f5528 'di' 'struct gfs2_dinode *'     |       |   `-CallExpr 0x1548f5b38 <line:45:5, col:27> '<dependent type>' contains-errors     |       |     |-DeclRefExpr 0x1548f5ab8 <col:5> 'int ()' Function 0x1548f5a00 'cpu_to_be64' 'int ()'     |       |     `-RecoveryExpr 0x1548f5b10 <col:17, col:21> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x1548f5ad8 <col:17> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     |       `-CallExpr 0x1548f5cd8 <line:46:4, col:15> 'int'     |         |-ImplicitCastExpr 0x1548f5cc0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x1548f5c80 <col:4> 'int ()' Function 0x1548f5bc8 'brelse' 'int ()'     |         `-ImplicitCastExpr 0x1548f5d00 <col:11> 'struct buffer_head *' <LValueToRValue>     |           `-DeclRefExpr 0x1548f5ca0 <col:11> 'struct buffer_head *' lvalue Var 0x155827cd8 'dibh' 'struct buffer_head *'     |-IfStmt 0x1548f60e8 <line:49:2, line:52:2>     | |-BinaryOperator 0x1548f5ea8 <line:49:6, col:26> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x1548f5e10 <col:6, col:15> '<dependent type>' contains-errors lvalue ->rd_free     | | | `-CXXDependentScopeMemberExpr 0x1548f5dc8 <col:6, col:10> '<dependent type>' contains-errors lvalue .rgd     | | |   `-RecoveryExpr 0x1548f5da8 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x1548f5e90 <col:25, col:26> 'unsigned int' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x1548f5e78 <col:26> 'unsigned int *' <LValueToRValue>     | |     `-DeclRefExpr 0x1548f5e58 <col:26> 'unsigned int *' lvalue ParmVar 0x155827400 'nblocks' 'unsigned int *'     | `-CompoundStmt 0x1548f60c8 <col:35, line:52:2>     |   |-CallExpr 0x1548f6050 <line:50:3, col:26> 'int'     |   | |-ImplicitCastExpr 0x1548f6038 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1548f5fa8 <col:3> 'int ()' Function 0x1548f5ef0 'pr_warn' 'int ()'     |   | |-ImplicitCastExpr 0x1548f6080 <col:11> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x1548f5fc8 <col:11> 'char[4]' lvalue \"STR\"     |   | `-ImplicitCastExpr 0x1548f6098 <col:18, col:19> 'unsigned int' <LValueToRValue>     |   |   `-UnaryOperator 0x1548f6020 <col:18, col:19> 'unsigned int' lvalue prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x1548f6008 <col:19> 'unsigned int *' <LValueToRValue>     |   |       `-DeclRefExpr 0x1548f5fe8 <col:19> 'unsigned int *' lvalue ParmVar 0x155827400 'nblocks' 'unsigned int *'     |   `-GotoStmt 0x1548f60b0 <line:51:3, col:8> 'rgrp_error' 0x1548f2f90     |-CompoundAssignOperator 0x1548f6230 <line:54:2, col:23> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x1548f6198 <col:2, col:11> '<dependent type>' contains-errors lvalue ->rd_free     | | `-CXXDependentScopeMemberExpr 0x1548f6150 <col:2, col:6> '<dependent type>' contains-errors lvalue .rgd     | |   `-RecoveryExpr 0x1548f6128 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1548f6108 <col:2> 'struct gfs2_rbm' lvalue Var 0x155827e68 'rbm' 'struct gfs2_rbm'     | `-UnaryOperator 0x1548f6218 <col:22, col:23> 'unsigned int' lvalue prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x1548f6200 <col:23> 'unsigned int *' <LValueToRValue>     |     `-DeclRefExpr 0x1548f61e0 <col:23> 'unsigned int *' lvalue ParmVar 0x155827400 'nblocks' 'unsigned int *'     |-IfStmt 0x1548f66b8 <line:55:2, line:60:2>     | |-RecoveryExpr 0x1548f6260 <line:55:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1548f6690 <col:14, line:60:2>     |   |-UnaryOperator 0x1548f6358 <line:56:3, col:22> '<dependent type>' contains-errors postfix '++' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x1548f6310 <col:3, col:12> '<dependent type>' contains-errors lvalue ->rd_dinodes     |   |   `-CXXDependentScopeMemberExpr 0x1548f62c8 <col:3, col:7> '<dependent type>' contains-errors lvalue .rgd     |   |     `-RecoveryExpr 0x1548f62a0 <col:3> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x1548f6280 <col:3> 'struct gfs2_rbm' lvalue Var 0x155827e68 'rbm' 'struct gfs2_rbm'     |   |-BinaryOperator 0x1548f6488 <line:57:3, col:40> '<dependent type>' contains-errors '='     |   | |-UnaryOperator 0x1548f63a8 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | | `-ImplicitCastExpr 0x1548f6390 <col:4> '<dependent type>' contains-errors <LValueToRValue>     |   | |   `-RecoveryExpr 0x1548f6370 <col:4> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1548f6470 <col:17, col:40> '<dependent type>' contains-errors postfix '++' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x1548f6428 <col:17, col:26> '<dependent type>' contains-errors lvalue ->rd_igeneration     |   |     `-CXXDependentScopeMemberExpr 0x1548f63e0 <col:17, col:21> '<dependent type>' contains-errors lvalue .rgd     |   |       `-RecoveryExpr 0x1548f63c0 <col:17> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x1548f6670 <line:58:3, line:59:41>     |     |-BinaryOperator 0x1548f6518 <line:58:7, col:22> 'int' contains-errors '=='     |     | |-UnaryOperator 0x1548f64e0 <col:7, col:8> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | | `-ImplicitCastExpr 0x1548f64c8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |     | |   `-RecoveryExpr 0x1548f64a8 <col:8> '<dependent type>' contains-errors lvalue     |     | `-IntegerLiteral 0x1548f64f8 <col:22> 'int' 0     |     `-BinaryOperator 0x1548f6650 <line:59:4, col:41> '<dependent type>' contains-errors '='     |       |-UnaryOperator 0x1548f6570 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | `-ImplicitCastExpr 0x1548f6558 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |       |   `-RecoveryExpr 0x1548f6538 <col:5> '<dependent type>' contains-errors lvalue     |       `-UnaryOperator 0x1548f6638 <col:18, col:41> '<dependent type>' contains-errors postfix '++' cannot overflow     |         `-CXXDependentScopeMemberExpr 0x1548f65f0 <col:18, col:27> '<dependent type>' contains-errors lvalue ->rd_igeneration     |           `-CXXDependentScopeMemberExpr 0x1548f65a8 <col:18, col:22> '<dependent type>' contains-errors lvalue .rgd     |             `-RecoveryExpr 0x1548f6588 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1548f68f8 <line:62:2, col:63> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1548f66d8 <col:2> 'int ()' Function 0x1548f56f8 'gfs2_trans_add_meta' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1548f6760 <col:22, col:31> '<dependent type>' contains-errors lvalue ->rd_gl     | | `-CXXDependentScopeMemberExpr 0x1548f6718 <col:22, col:26> '<dependent type>' contains-errors lvalue .rgd     | |   `-RecoveryExpr 0x1548f66f8 <col:22> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1548f68b0 <col:38, col:58> '<dependent type>' contains-errors lvalue .bi_bh     |   `-ArraySubscriptExpr 0x1548f6890 <col:38, col:56> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x1548f6878 <col:38, col:47> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x1548f6810 <col:38, col:47> '<dependent type>' contains-errors lvalue ->rd_bits     |     |   `-CXXDependentScopeMemberExpr 0x1548f67c8 <col:38, col:42> '<dependent type>' contains-errors lvalue .rgd     |     |     `-RecoveryExpr 0x1548f67a8 <col:38> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1548f6858 <col:55> 'int' 0     |-CallExpr 0x1548f6c30 <line:63:2, col:58> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1548f6a10 <col:2> 'int ()' Function 0x1548f6950 'gfs2_rgrp_out' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1548f6a50 <col:16, col:20> '<dependent type>' contains-errors lvalue .rgd     | | `-RecoveryExpr 0x1548f6a30 <col:16> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1548f6be8 <col:25, col:52> '<dependent type>' contains-errors lvalue ->b_data     |   `-CXXDependentScopeMemberExpr 0x1548f6ba0 <col:25, col:45> '<dependent type>' contains-errors lvalue .bi_bh     |     `-ArraySubscriptExpr 0x1548f6b80 <col:25, col:43> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x1548f6b68 <col:25, col:34> '<dependent type>' contains-errors <LValueToRValue>     |       | `-CXXDependentScopeMemberExpr 0x1548f6b00 <col:25, col:34> '<dependent type>' contains-errors lvalue ->rd_bits     |       |   `-CXXDependentScopeMemberExpr 0x1548f6ab8 <col:25, col:29> '<dependent type>' contains-errors lvalue .rgd     |       |     `-RecoveryExpr 0x1548f6a98 <col:25> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x1548f6b48 <col:42> 'int' 0     |-CallExpr 0x1548f6fa8 <line:64:2, col:73> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1548f6d40 <col:2> 'int ()' Function 0x1548f6c88 'gfs2_rgrp_ondisk2lvb' 'int ()'     | |-CXXDependentScopeMemberExpr 0x1548f6dc8 <col:23, col:32> '<dependent type>' contains-errors lvalue ->rd_rgl     | | `-CXXDependentScopeMemberExpr 0x1548f6d80 <col:23, col:27> '<dependent type>' contains-errors lvalue .rgd     | |   `-RecoveryExpr 0x1548f6d60 <col:23> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1548f6f60 <col:40, col:67> '<dependent type>' contains-errors lvalue ->b_data     |   `-CXXDependentScopeMemberExpr 0x1548f6f18 <col:40, col:60> '<dependent type>' contains-errors lvalue .bi_bh     |     `-ArraySubscriptExpr 0x1548f6ef8 <col:40, col:58> '<dependent type>' contains-errors lvalue     |       |-ImplicitCastExpr 0x1548f6ee0 <col:40, col:49> '<dependent type>' contains-errors <LValueToRValue>     |       | `-CXXDependentScopeMemberExpr 0x1548f6e78 <col:40, col:49> '<dependent type>' contains-errors lvalue ->rd_bits     |       |   `-CXXDependentScopeMemberExpr 0x1548f6e30 <col:40, col:44> '<dependent type>' contains-errors lvalue .rgd     |       |     `-RecoveryExpr 0x1548f6e10 <col:40> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x1548f6ec0 <col:57> 'int' 0     |-CallExpr 0x1548f7618 <line:70:2, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1548f7438 <col:2> 'int ()' Function 0x1548f7380 'gfs2_quota_change' 'int ()'     | |-DeclRefExpr 0x1548f7458 <col:20> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     | |-UnaryOperator 0x1548f74b0 <col:24, col:25> 'unsigned int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1548f7498 <col:25> 'unsigned int *' <LValueToRValue>     | |   `-DeclRefExpr 0x1548f7478 <col:25> 'unsigned int *' lvalue ParmVar 0x155827400 'nblocks' 'unsigned int *'     | |-CXXDependentScopeMemberExpr 0x1548f7528 <col:34, col:46> '<dependent type>' contains-errors lvalue .i_uid     | | `-RecoveryExpr 0x1548f7500 <col:34, col:38> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1548f74c8 <col:34> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     | `-CXXDependentScopeMemberExpr 0x1548f75d0 <col:53, col:65> '<dependent type>' contains-errors lvalue .i_gid     |   `-RecoveryExpr 0x1548f75a8 <col:53, col:57> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1548f7570 <col:53> 'struct gfs2_inode *' lvalue ParmVar 0x15580e248 'ip' 'struct gfs2_inode *'     |-CompoundAssignOperator 0x1548f7780 <line:72:2, col:29> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x1548f76e8 <col:2, col:11> '<dependent type>' contains-errors lvalue ->rd_free_clone     | | `-CXXDependentScopeMemberExpr 0x1548f76a0 <col:2, col:6> '<dependent type>' contains-errors lvalue .rgd     | |   `-RecoveryExpr 0x1548f7678 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1548f7658 <col:2> 'struct gfs2_rbm' lvalue Var 0x155827e68 'rbm' 'struct gfs2_rbm'     | `-UnaryOperator 0x1548f7768 <col:28, col:29> 'unsigned int' lvalue prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x1548f7750 <col:29> 'unsigned int *' <LValueToRValue>     |     `-DeclRefExpr 0x1548f7730 <col:29> 'unsigned int *' lvalue ParmVar 0x155827400 'nblocks' 'unsigned int *'     |-ReturnStmt 0x1548f7a20 <line:76:2, col:9>     | `-IntegerLiteral 0x1548f7a00 <col:9> 'int' 0     `-LabelStmt 0x1548f7bc0 <line:78:1, line:79:25> 'rgrp_error'       `-CallExpr 0x1548f7b98 <col:2, col:25> '<dependent type>' contains-errors         |-DeclRefExpr 0x1548f7b10 <col:2> 'int ()' Function 0x1548f7a58 'gfs2_rgrp_error' 'int ()'         `-CXXDependentScopeMemberExpr 0x1548f7b50 <col:18, col:22> '<dependent type>' contains-errors lvalue .rgd           `-RecoveryExpr 0x1548f7b30 <col:18> '<dependent type>' contains-errors lvalue ","19602":"`-FunctionDecl 0x149928ba8  line:1:1 invalid mp_dss_print 'int (int *, const char *, int, char)'   |-ParmVarDecl 0x149928928 <col:14, col:34> col:34 invalid ndo 'int *'   |-ParmVarDecl 0x1499289a8 <line:2:14, col:28> col:28 used opt 'const char *'   |-ParmVarDecl 0x149928a28 <col:33, col:39> col:39 invalid opt_len 'int'   |-ParmVarDecl 0x149928aa0 <col:48, col:55> col:55 used flags 'char'   `-CompoundStmt 0x14a00cb68 <line:3:1, line:43:1>     |-DeclStmt 0x149928f40 <line:4:9, col:64>     | |-RecordDecl 0x149928c70 <col:15, col:22> col:22 struct mp_dss     | `-VarDecl 0x149928dd8 <col:9, col:61> col:30 used mdss 'const struct mp_dss *' cinit     |   `-CStyleCastExpr 0x149928f00 <col:37, col:61> 'const struct mp_dss *' <BitCast>     |     `-ImplicitCastExpr 0x149928ee8 <col:61> 'const char *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x149928e40 <col:61> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |-IfStmt 0x14a00a8b8 <line:6:9, line:8:24>     | |-BinaryOperator 0x14a00a868 <line:6:13, line:7:57> 'int' contains-errors '||'     | | |-ParenExpr 0x14a00a808 <line:6:13, line:7:44> 'int' contains-errors     | | | `-BinaryOperator 0x14a00a7e8 <line:6:14, line:7:43> 'int' contains-errors '&&'     | | |   |-BinaryOperator 0x14a00a748 <line:6:14, col:43> 'int' contains-errors '!='     | | |   | |-RecoveryExpr 0x149928f58 <col:14> '<dependent type>' contains-errors lvalue     | | |   | `-CallExpr 0x14a00a700 <col:25, col:43> 'int'     | | |   |   |-ImplicitCastExpr 0x14a00a6e8 <col:25> 'int (*)()' <FunctionToPointerDecay>     | | |   |   | `-DeclRefExpr 0x14a00a2e0 <col:25> 'int ()' Function 0x14a00a228 'mp_dss_len' 'int ()'     | | |   |   |-ImplicitCastExpr 0x14a00a730 <col:36> 'const struct mp_dss *' <LValueToRValue>     | | |   |   | `-DeclRefExpr 0x14a00a300 <col:36> 'const struct mp_dss *' lvalue Var 0x149928dd8 'mdss' 'const struct mp_dss *'     | | |   |   `-IntegerLiteral 0x14a00a320 <col:42> 'int' 1     | | |   `-BinaryOperator 0x14a00a7c8 <line:7:14, col:43> 'int' contains-errors '!='     | | |     |-RecoveryExpr 0x14a00a3f0 <col:14> '<dependent type>' contains-errors lvalue     | | |     `-CallExpr 0x14a00a780 <col:25, col:43> 'int'     | | |       |-ImplicitCastExpr 0x14a00a768 <col:25> 'int (*)()' <FunctionToPointerDecay>     | | |       | `-DeclRefExpr 0x14a00a410 <col:25> 'int ()' Function 0x14a00a228 'mp_dss_len' 'int ()'     | | |       |-ImplicitCastExpr 0x14a00a7b0 <col:36> 'const struct mp_dss *' <LValueToRValue>     | | |       | `-DeclRefExpr 0x14a00a430 <col:36> 'const struct mp_dss *' lvalue Var 0x149928dd8 'mdss' 'const struct mp_dss *'     | | |       `-IntegerLiteral 0x14a00a450 <col:42> 'int' 0     | | `-BinaryOperator 0x14a00a848 <col:49, col:57> '<dependent type>' contains-errors '&'     | |   |-DeclRefExpr 0x14a00a530 <col:49> 'char' lvalue ParmVar 0x149928aa0 'flags' 'char'     | |   `-RecoveryExpr 0x14a00a828 <col:57> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14a00a8a8 <line:8:17, col:24>     |   `-IntegerLiteral 0x14a00a888 <col:24> 'int' 0     |-IfStmt 0x14a00afb8 <line:10:9, line:11:38>     | |-BinaryOperator 0x14a00adb0 <line:10:13, col:27> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14a00ad30 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14a00a8d8 <col:13> 'const struct mp_dss *' lvalue Var 0x149928dd8 'mdss' 'const struct mp_dss *'     | | `-RecoveryExpr 0x14a00ad90 <col:27> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14a00af90 <line:11:17, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a00aeb0 <col:17> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |   `-ParenExpr 0x14a00af70 <col:26, col:37> 'char[4]' contains-errors     |     `-BinaryOperator 0x14a00af50 <col:27, col:32> 'char[4]' contains-errors ','     |       |-RecoveryExpr 0x14a00aed0 <col:27> '<dependent type>' contains-errors lvalue     |       `-StringLiteral 0x14a00af30 <col:32> 'char[4]' lvalue \"STR\"     |-CompoundAssignOperator 0x14a00b018 <line:13:9, col:16> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     | |-DeclRefExpr 0x14a00afd8 <col:9> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     | `-IntegerLiteral 0x14a00aff8 <col:16> 'int' 4     |-IfStmt 0x14b008d50 <line:14:9, line:23:9>     | |-BinaryOperator 0x14a00b100 <line:14:13, col:27> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14a00b080 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14a00b048 <col:13> 'const struct mp_dss *' lvalue Var 0x149928dd8 'mdss' 'const struct mp_dss *'     | | `-RecoveryExpr 0x14a00b0e0 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14b008d30 <col:37, line:23:9>     |   |-CallExpr 0x14a00b1c0 <line:15:17, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a00b120 <col:17> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x14a00b1a0 <col:26, col:37> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x14a00b180 <col:27, col:32> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x14a00b140 <col:27> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x14a00b160 <col:32> 'char[4]' lvalue \"STR\"     |   `-IfStmt 0x14b008d00 <line:16:17, line:22:17> has_else     |     |-BinaryOperator 0x14b0088b8 <line:16:21, col:35> '<dependent type>' contains-errors '&'     |     | |-RecoveryExpr 0x14b008838 <col:21, col:27> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x14b008800 <col:21> 'const struct mp_dss *' lvalue Var 0x149928dd8 'mdss' 'const struct mp_dss *'     |     | `-RecoveryExpr 0x14b008898 <col:35> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x14b0089f0 <col:45, line:19:17>     |     | |-CallExpr 0x14b008958 <line:17:25, col:74> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x14b0088d8 <col:25> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |     | | `-BinaryOperator 0x14b008938 <col:35, col:40> 'char[4]' contains-errors ','     |     | |   |-RecoveryExpr 0x14b0088f8 <col:35> '<dependent type>' contains-errors lvalue     |     | |   `-StringLiteral 0x14b008918 <col:40> 'char[4]' lvalue \"STR\"     |     | `-CompoundAssignOperator 0x14b0089c0 <line:18:25, col:32> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |     |   |-DeclRefExpr 0x14b008980 <col:25> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |     |   `-IntegerLiteral 0x14b0089a0 <col:32> 'int' 8     |     `-CompoundStmt 0x14b008ce0 <line:19:24, line:22:17>     |       |-CallExpr 0x14b008c48 <line:20:25, col:67> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x14b008a10 <col:25> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |       | `-ParenExpr 0x14b008c28 <col:34, col:66> 'int' contains-errors     |       |   `-BinaryOperator 0x14b008c08 <col:35, col:65> 'int' contains-errors ','     |       |     |-BinaryOperator 0x14b008a70 <col:35, col:40> 'char[4]' contains-errors ','     |       |     | |-RecoveryExpr 0x14b008a30 <col:35> '<dependent type>' contains-errors lvalue     |       |     | `-StringLiteral 0x14b008a50 <col:40> 'char[4]' lvalue \"STR\"     |       |     `-CallExpr 0x14b008bc8 <col:47, col:65> 'int'     |       |       |-ImplicitCastExpr 0x14b008bb0 <col:47> 'int (*)()' <FunctionToPointerDecay>     |       |       | `-DeclRefExpr 0x14b008b70 <col:47> 'int ()' Function 0x14b008ab8 'EXTRACT_32BITS' 'int ()'     |       |       `-ImplicitCastExpr 0x14b008bf0 <col:62> 'const char *' <LValueToRValue>     |       |         `-DeclRefExpr 0x14b008b90 <col:62> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |       `-CompoundAssignOperator 0x14b008cb0 <line:21:25, col:32> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |         |-DeclRefExpr 0x14b008c70 <col:25> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |         `-IntegerLiteral 0x14b008c90 <col:32> 'int' 4     |-IfStmt 0x14a00cb18 <line:25:9, line:41:9>     | |-BinaryOperator 0x14b008e28 <line:25:13, col:27> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x14b008da8 <col:13, col:19> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14b008d70 <col:13> 'const struct mp_dss *' lvalue Var 0x149928dd8 'mdss' 'const struct mp_dss *'     | | `-RecoveryExpr 0x14b008e08 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14a00cad0 <col:37, line:41:9>     |   |-CallExpr 0x14b008ee8 <line:26:17, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b008e48 <col:17> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x14b008ec8 <col:26, col:37> 'char[4]' contains-errors     |   |   `-BinaryOperator 0x14b008ea8 <col:27, col:32> 'char[4]' contains-errors ','     |   |     |-RecoveryExpr 0x14b008e68 <col:27> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x14b008e88 <col:32> 'char[4]' lvalue \"STR\"     |   |-IfStmt 0x14b009330 <line:27:17, line:33:17> has_else     |   | |-BinaryOperator 0x14b008fc8 <line:27:21, col:35> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x14b008f48 <col:21, col:27> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x14b008f10 <col:21> 'const struct mp_dss *' lvalue Var 0x149928dd8 'mdss' 'const struct mp_dss *'     |   | | `-RecoveryExpr 0x14b008fa8 <col:35> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x14b009100 <col:45, line:30:17>     |   | | |-CallExpr 0x14b009068 <line:28:25, col:74> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x14b008fe8 <col:25> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |   | | | `-BinaryOperator 0x14b009048 <col:35, col:40> 'char[4]' contains-errors ','     |   | | |   |-RecoveryExpr 0x14b009008 <col:35> '<dependent type>' contains-errors lvalue     |   | | |   `-StringLiteral 0x14b009028 <col:40> 'char[4]' lvalue \"STR\"     |   | | `-CompoundAssignOperator 0x14b0090d0 <line:29:25, col:32> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   | |   |-DeclRefExpr 0x14b009090 <col:25> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |   | |   `-IntegerLiteral 0x14b0090b0 <col:32> 'int' 8     |   | `-CompoundStmt 0x14b009310 <line:30:24, line:33:17>     |   |   |-CallExpr 0x14b009278 <line:31:25, col:67> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x14b009120 <col:25> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |   |   | `-ParenExpr 0x14b009258 <col:34, col:66> 'int' contains-errors     |   |   |   `-BinaryOperator 0x14b009238 <col:35, col:65> 'int' contains-errors ','     |   |   |     |-BinaryOperator 0x14b009180 <col:35, col:40> 'char[4]' contains-errors ','     |   |   |     | |-RecoveryExpr 0x14b009140 <col:35> '<dependent type>' contains-errors lvalue     |   |   |     | `-StringLiteral 0x14b009160 <col:40> 'char[4]' lvalue \"STR\"     |   |   |     `-CallExpr 0x14b0091f8 <col:47, col:65> 'int'     |   |   |       |-ImplicitCastExpr 0x14b0091e0 <col:47> 'int (*)()' <FunctionToPointerDecay>     |   |   |       | `-DeclRefExpr 0x14b0091a0 <col:47> 'int ()' Function 0x14b008ab8 'EXTRACT_32BITS' 'int ()'     |   |   |       `-ImplicitCastExpr 0x14b009220 <col:62> 'const char *' <LValueToRValue>     |   |   |         `-DeclRefExpr 0x14b0091c0 <col:62> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |   |   `-CompoundAssignOperator 0x14b0092e0 <line:32:25, col:32> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   |     |-DeclRefExpr 0x14b0092a0 <col:25> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |   |     `-IntegerLiteral 0x14b0092c0 <col:32> 'int' 4     |   |-CallExpr 0x14b0094b8 <line:34:17, col:59> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b009360 <col:17> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x14b009498 <col:26, col:58> 'int' contains-errors     |   |   `-BinaryOperator 0x14b009478 <col:27, col:57> 'int' contains-errors ','     |   |     |-BinaryOperator 0x14b0093c0 <col:27, col:32> 'char[4]' contains-errors ','     |   |     | |-RecoveryExpr 0x14b009380 <col:27> '<dependent type>' contains-errors lvalue     |   |     | `-StringLiteral 0x14b0093a0 <col:32> 'char[4]' lvalue \"STR\"     |   |     `-CallExpr 0x14b009438 <col:39, col:57> 'int'     |   |       |-ImplicitCastExpr 0x14b009420 <col:39> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x14b0093e0 <col:39> 'int ()' Function 0x14b008ab8 'EXTRACT_32BITS' 'int ()'     |   |       `-ImplicitCastExpr 0x14b009460 <col:54> 'const char *' <LValueToRValue>     |   |         `-DeclRefExpr 0x14b009400 <col:54> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |   |-CompoundAssignOperator 0x14b009520 <line:35:17, col:24> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   | |-DeclRefExpr 0x14b0094e0 <col:17> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |   | `-IntegerLiteral 0x14b009500 <col:24> 'int' 4     |   |-CallExpr 0x14b009788 <line:36:17, col:59> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b009550 <col:17> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |   | `-ParenExpr 0x14b009768 <col:26, col:58> 'int' contains-errors     |   |   `-BinaryOperator 0x14b009748 <col:27, col:57> 'int' contains-errors ','     |   |     |-BinaryOperator 0x14b0095b0 <col:27, col:32> 'char[4]' contains-errors ','     |   |     | |-RecoveryExpr 0x14b009570 <col:27> '<dependent type>' contains-errors lvalue     |   |     | `-StringLiteral 0x14b009590 <col:32> 'char[4]' lvalue \"STR\"     |   |     `-CallExpr 0x14b009708 <col:39, col:57> 'int'     |   |       |-ImplicitCastExpr 0x14b0096f0 <col:39> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x14b0096b0 <col:39> 'int ()' Function 0x14b0095f8 'EXTRACT_16BITS' 'int ()'     |   |       `-ImplicitCastExpr 0x14b009730 <col:54> 'const char *' <LValueToRValue>     |   |         `-DeclRefExpr 0x14b0096d0 <col:54> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |   |-CompoundAssignOperator 0x14a00c800 <line:37:17, col:24> 'const char *' '+=' ComputeLHSTy='const char *' ComputeResultTy='const char *'     |   | |-DeclRefExpr 0x14b0097b0 <col:17> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     |   | `-IntegerLiteral 0x14b0097d0 <col:24> 'int' 2     |   `-IfStmt 0x14a00cab0 <line:39:17, line:40:67>     |     |-BinaryOperator 0x14a00c910 <line:39:21, col:50> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x14a00c830 <col:21> '<dependent type>' contains-errors lvalue     |     | `-CallExpr 0x14a00c8c8 <col:32, col:50> 'int'     |     |   |-ImplicitCastExpr 0x14a00c8b0 <col:32> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x14a00c850 <col:32> 'int ()' Function 0x14a00a228 'mp_dss_len' 'int ()'     |     |   |-ImplicitCastExpr 0x14a00c8f8 <col:43> 'const struct mp_dss *' <LValueToRValue>     |     |   | `-DeclRefExpr 0x14a00c870 <col:43> 'const struct mp_dss *' lvalue Var 0x149928dd8 'mdss' 'const struct mp_dss *'     |     |   `-IntegerLiteral 0x14a00c890 <col:49> 'int' 1     |     `-CallExpr 0x14a00ca88 <line:40:25, col:67> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14a00c930 <col:25> 'int ()' Function 0x14a00adf8 'ND_PRINT' 'int ()'     |       `-ParenExpr 0x14a00ca68 <col:34, col:66> 'int' contains-errors     |         `-BinaryOperator 0x14a00ca48 <col:35, col:65> 'int' contains-errors ','     |           |-BinaryOperator 0x14a00c990 <col:35, col:40> 'char[4]' contains-errors ','     |           | |-RecoveryExpr 0x14a00c950 <col:35> '<dependent type>' contains-errors lvalue     |           | `-StringLiteral 0x14a00c970 <col:40> 'char[4]' lvalue \"STR\"     |           `-CallExpr 0x14a00ca08 <col:47, col:65> 'int'     |             |-ImplicitCastExpr 0x14a00c9f0 <col:47> 'int (*)()' <FunctionToPointerDecay>     |             | `-DeclRefExpr 0x14a00c9b0 <col:47> 'int ()' Function 0x14b0095f8 'EXTRACT_16BITS' 'int ()'     |             `-ImplicitCastExpr 0x14a00ca30 <col:62> 'const char *' <LValueToRValue>     |               `-DeclRefExpr 0x14a00c9d0 <col:62> 'const char *' lvalue ParmVar 0x1499289a8 'opt' 'const char *'     `-ReturnStmt 0x14a00cb58 <line:42:9, col:16>       `-IntegerLiteral 0x14a00cb38 <col:16> 'int' 1 ","20040":"`-FunctionDecl 0x14009b9f8  line:1:15 hugetlb_get_unmapped_area 'unsigned long (struct file *, unsigned long, unsigned long, unsigned long, unsigned long)'   |-ParmVarDecl 0x140081a48 <col:41, col:54> col:54 used file 'struct file *'   |-ParmVarDecl 0x140081ac8 <col:60, col:74> col:74 used addr 'unsigned long'   |-ParmVarDecl 0x140081b48 <line:2:3, col:17> col:17 used len 'unsigned long'   |-ParmVarDecl 0x14009b800 <col:22, col:36> col:36 used pgoff 'unsigned long'   |-ParmVarDecl 0x14009b880 <col:43, col:57> col:57 used flags 'unsigned long'   `-CompoundStmt 0x1380b2040 <line:3:1, line:32:1>     |-DeclStmt 0x14009bf08 <line:4:2, col:38>     | |-RecordDecl 0x14009bb10 <col:2, col:9> col:9 struct hstate     | `-VarDecl 0x14009bc78 <col:2, col:37> col:17 used h 'struct hstate *' cinit     |   `-ImplicitCastExpr 0x14009bed8 <col:21, col:37> 'struct hstate *' <IntegralToPointer>     |     `-CallExpr 0x14009be98 <col:21, col:37> 'int'     |       |-ImplicitCastExpr 0x14009be80 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14009be10 <col:21> 'int ()' Function 0x14009bd58 'hstate_file' 'int ()'     |       `-ImplicitCastExpr 0x14009bec0 <col:33> 'struct file *' <LValueToRValue>     |         `-DeclRefExpr 0x14009be30 <col:33> 'struct file *' lvalue ParmVar 0x140081a48 'file' 'struct file *'     |-DeclStmt 0x14009c1d0 <line:5:2, col:36>     | |-RecordDecl 0x14009bf20 <col:2, col:9> col:9 struct mm_struct     | `-VarDecl 0x14009c088 <col:2, col:34> col:20 used mm 'struct mm_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x14009c170 <col:25, col:34> '<dependent type>' contains-errors lvalue ->mm     |     `-RecoveryExpr 0x14009c150 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14009c3d8 <line:6:2, col:28>     | |-RecordDecl 0x14009c1e8 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x14009c358 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-IfStmt 0x14009c698 <line:8:2, line:9:11>     | |-BinaryOperator 0x14009c5d0 <line:8:6, col:29> 'unsigned long' '&'     | | |-ImplicitCastExpr 0x14009c5a0 <col:6> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x14009c3f0 <col:6> 'unsigned long' lvalue ParmVar 0x140081b48 'len' 'unsigned long'     | | `-ImplicitCastExpr 0x14009c5b8 <col:12, col:29> 'unsigned long' <IntegralCast>     | |   `-UnaryOperator 0x14009c588 <col:12, col:29> 'int' prefix '~' cannot overflow     | |     `-CallExpr 0x14009c548 <col:13, col:29> 'int'     | |       |-ImplicitCastExpr 0x14009c530 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |       | `-DeclRefExpr 0x14009c4f0 <col:13> 'int ()' Function 0x14009c438 'huge_page_mask' 'int ()'     | |       `-ImplicitCastExpr 0x14009c570 <col:28> 'struct hstate *' <LValueToRValue>     | |         `-DeclRefExpr 0x14009c510 <col:28> 'struct hstate *' lvalue Var 0x14009bc78 'h' 'struct hstate *'     | `-ReturnStmt 0x14009c688 <line:9:3, col:11>     |   `-UnaryOperator 0x14009c670 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14009c658 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14009c638 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14009e200 <line:10:2, line:11:11>     | |-BinaryOperator 0x14009c730 <line:10:6, col:12> 'int' contains-errors '>'     | | |-DeclRefExpr 0x14009c6b8 <col:6> 'unsigned long' lvalue ParmVar 0x140081b48 'len' 'unsigned long'     | | `-RecoveryExpr 0x14009c710 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14009c7e8 <line:11:3, col:11>     |   `-UnaryOperator 0x14009c7d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14009c7b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14009c798 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14009e5e0 <line:13:2, line:17:2>     | |-BinaryOperator 0x14009e298 <line:13:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x14009e220 <col:6> 'unsigned long' lvalue ParmVar 0x14009b880 'flags' 'unsigned long'     | | `-RecoveryExpr 0x14009e278 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14009e5c0 <col:25, line:17:2>     |   |-IfStmt 0x14009e558 <line:14:3, line:15:12>     |   | |-CallExpr 0x14009e430 <line:14:7, col:45> 'int'     |   | | |-ImplicitCastExpr 0x14009e418 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | | | `-DeclRefExpr 0x14009e398 <col:7> 'int ()' Function 0x14009e2e0 'prepare_hugepage_range' 'int ()'     |   | | |-ImplicitCastExpr 0x14009e468 <col:30> 'struct file *' <LValueToRValue>     |   | | | `-DeclRefExpr 0x14009e3b8 <col:30> 'struct file *' lvalue ParmVar 0x140081a48 'file' 'struct file *'     |   | | |-ImplicitCastExpr 0x14009e480 <col:36> 'unsigned long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x14009e3d8 <col:36> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     |   | | `-ImplicitCastExpr 0x14009e498 <col:42> 'unsigned long' <LValueToRValue>     |   | |   `-DeclRefExpr 0x14009e3f8 <col:42> 'unsigned long' lvalue ParmVar 0x140081b48 'len' 'unsigned long'     |   | `-ReturnStmt 0x14009e548 <line:15:4, col:12>     |   |   `-UnaryOperator 0x14009e530 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |     `-ImplicitCastExpr 0x14009e518 <col:12> '<dependent type>' contains-errors <LValueToRValue>     |   |       `-RecoveryExpr 0x14009e4f8 <col:12> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x14009e5b0 <line:16:3, col:10>     |     `-ImplicitCastExpr 0x14009e598 <col:10> 'unsigned long' <LValueToRValue>     |       `-DeclRefExpr 0x14009e578 <col:10> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     |-IfStmt 0x14009f0a0 <line:19:2, line:25:2>     | |-ImplicitCastExpr 0x14009e620 <line:19:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x14009e600 <col:6> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     | `-CompoundStmt 0x14009f078 <col:12, line:25:2>     |   |-BinaryOperator 0x14009e968 <line:20:3, col:39> 'unsigned long' '='     |   | |-DeclRefExpr 0x14009e638 <col:3> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     |   | `-ImplicitCastExpr 0x14009e950 <col:10, col:39> 'unsigned long' <IntegralCast>     |   |   `-CallExpr 0x14009e908 <col:10, col:39> 'int'     |   |     |-ImplicitCastExpr 0x14009e8f0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14009e738 <col:10> 'int ()' Function 0x14009e680 'ALIGN' 'int ()'     |   |     |-ImplicitCastExpr 0x14009e938 <col:16> 'unsigned long' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14009e758 <col:16> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     |   |     `-CallExpr 0x14009e8b0 <col:22, col:38> 'int'     |   |       |-ImplicitCastExpr 0x14009e898 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x14009e858 <col:22> 'int ()' Function 0x14009e7a0 'huge_page_size' 'int ()'     |   |       `-ImplicitCastExpr 0x14009e8d8 <col:37> 'struct hstate *' <LValueToRValue>     |   |         `-DeclRefExpr 0x14009e878 <col:37> 'struct hstate *' lvalue Var 0x14009bc78 'h' 'struct hstate *'     |   |-BinaryOperator 0x14009eb78 <line:21:3, col:26> 'struct vm_area_struct *' contains-errors '='     |   | |-DeclRefExpr 0x14009e988 <col:3> 'struct vm_area_struct *' lvalue Var 0x14009c358 'vma' 'struct vm_area_struct *'     |   | `-ImplicitCastExpr 0x14009eb60 <col:9, col:26> 'struct vm_area_struct *' contains-errors <IntegralToPointer>     |   |   `-CallExpr 0x14009eb00 <col:9, col:26> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x14009eae8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14009ea88 <col:9> 'int ()' Function 0x14009e9d0 'find_vma' 'int ()'     |   |     |-ImplicitCastExpr 0x14009eb30 <col:18> 'struct mm_struct *' contains-errors <LValueToRValue>     |   |     | `-DeclRefExpr 0x14009eaa8 <col:18> 'struct mm_struct *' contains-errors lvalue Var 0x14009c088 'mm' 'struct mm_struct *'     |   |     `-ImplicitCastExpr 0x14009eb48 <col:22> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x14009eac8 <col:22> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     |   `-IfStmt 0x14009f058 <line:22:3, line:24:11>     |     |-BinaryOperator 0x14009eff0 <line:22:7, line:23:43> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x14009eef0 <line:22:7, col:26> 'int' contains-errors '>='     |     | | |-BinaryOperator 0x14009eed0 <col:7, col:19> '<dependent type>' contains-errors '-'     |     | | | |-RecoveryExpr 0x14009eeb0 <col:7> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x14009ebb0 <col:19> 'unsigned long' lvalue ParmVar 0x140081b48 'len' 'unsigned long'     |     | | `-DeclRefExpr 0x14009ebf0 <col:26> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     |     | `-ParenExpr 0x14009efd0 <line:23:7, col:43> 'int' contains-errors     |     |   `-BinaryOperator 0x14009efb0 <col:8, col:35> 'int' contains-errors '||'     |     |     |-UnaryOperator 0x14009ef28 <col:8, col:9> 'int' prefix '!' cannot overflow     |     |     | `-ImplicitCastExpr 0x14009ef10 <col:9> 'struct vm_area_struct *' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x14009ec30 <col:9> 'struct vm_area_struct *' lvalue Var 0x14009c358 'vma' 'struct vm_area_struct *'     |     |     `-BinaryOperator 0x14009ef90 <col:16, col:35> 'int' contains-errors '<='     |     |       |-BinaryOperator 0x14009ef70 <col:16, col:23> 'unsigned long' '+'     |     |       | |-ImplicitCastExpr 0x14009ef40 <col:16> 'unsigned long' <LValueToRValue>     |     |       | | `-DeclRefExpr 0x14009ec80 <col:16> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     |     |       | `-ImplicitCastExpr 0x14009ef58 <col:23> 'unsigned long' <LValueToRValue>     |     |       |   `-DeclRefExpr 0x14009eca0 <col:23> 'unsigned long' lvalue ParmVar 0x140081b48 'len' 'unsigned long'     |     |       `-RecoveryExpr 0x14009ed48 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x14009ed10 <col:30> 'struct vm_area_struct *' lvalue Var 0x14009c358 'vma' 'struct vm_area_struct *'     |     `-ReturnStmt 0x14009f048 <line:24:4, col:11>     |       `-ImplicitCastExpr 0x14009f030 <col:11> 'unsigned long' <LValueToRValue>     |         `-DeclRefExpr 0x14009f010 <col:11> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'     `-IfStmt 0x1380b2010 <line:26:2, line:31:17> has_else       |-BinaryOperator 0x1380b1ab0 <line:26:6, col:40> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x1380b1a48 <col:6, col:19> '<dependent type>' contains-errors lvalue ->get_unmapped_area       | | `-CXXDependentScopeMemberExpr 0x1380b1a00 <col:6, col:15> '<dependent type>' contains-errors lvalue ->mm       | |   `-RecoveryExpr 0x14009f1a0 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x1380b1a90 <col:40> '<dependent type>' contains-errors lvalue       |-ReturnStmt 0x1380b1d60 <line:27:3, line:28:17>       | `-ImplicitCastExpr 0x1380b1d48 <line:27:10, line:28:17> 'unsigned long' <IntegralCast>       |   `-CallExpr 0x1380b1c88 <line:27:10, line:28:17> 'int'       |     |-ImplicitCastExpr 0x1380b1c70 <line:27:10> 'int (*)()' <FunctionToPointerDecay>       |     | `-DeclRefExpr 0x1380b1bb0 <col:10> 'int ()' Function 0x1380b1af8 'hugetlb_get_unmapped_area_bottomup' 'int ()'       |     |-ImplicitCastExpr 0x1380b1cd0 <col:45> 'struct file *' <LValueToRValue>       |     | `-DeclRefExpr 0x1380b1bd0 <col:45> 'struct file *' lvalue ParmVar 0x140081a48 'file' 'struct file *'       |     |-ImplicitCastExpr 0x1380b1ce8 <col:51> 'unsigned long' <LValueToRValue>       |     | `-DeclRefExpr 0x1380b1bf0 <col:51> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'       |     |-ImplicitCastExpr 0x1380b1d00 <col:57> 'unsigned long' <LValueToRValue>       |     | `-DeclRefExpr 0x1380b1c10 <col:57> 'unsigned long' lvalue ParmVar 0x140081b48 'len' 'unsigned long'       |     |-ImplicitCastExpr 0x1380b1d18 <line:28:5> 'unsigned long' <LValueToRValue>       |     | `-DeclRefExpr 0x1380b1c30 <col:5> 'unsigned long' lvalue ParmVar 0x14009b800 'pgoff' 'unsigned long'       |     `-ImplicitCastExpr 0x1380b1d30 <col:12> 'unsigned long' <LValueToRValue>       |       `-DeclRefExpr 0x1380b1c50 <col:12> 'unsigned long' lvalue ParmVar 0x14009b880 'flags' 'unsigned long'       `-ReturnStmt 0x1380b2000 <line:30:3, line:31:17>         `-ImplicitCastExpr 0x1380b1fe8 <line:30:10, line:31:17> 'unsigned long' <IntegralCast>           `-CallExpr 0x1380b1f28 <line:30:10, line:31:17> 'int'             |-ImplicitCastExpr 0x1380b1f10 <line:30:10> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x1380b1e50 <col:10> 'int ()' Function 0x1380b1d98 'hugetlb_get_unmapped_area_topdown' 'int ()'             |-ImplicitCastExpr 0x1380b1f70 <col:44> 'struct file *' <LValueToRValue>             | `-DeclRefExpr 0x1380b1e70 <col:44> 'struct file *' lvalue ParmVar 0x140081a48 'file' 'struct file *'             |-ImplicitCastExpr 0x1380b1f88 <col:50> 'unsigned long' <LValueToRValue>             | `-DeclRefExpr 0x1380b1e90 <col:50> 'unsigned long' lvalue ParmVar 0x140081ac8 'addr' 'unsigned long'             |-ImplicitCastExpr 0x1380b1fa0 <col:56> 'unsigned long' <LValueToRValue>             | `-DeclRefExpr 0x1380b1eb0 <col:56> 'unsigned long' lvalue ParmVar 0x140081b48 'len' 'unsigned long'             |-ImplicitCastExpr 0x1380b1fb8 <line:31:5> 'unsigned long' <LValueToRValue>             | `-DeclRefExpr 0x1380b1ed0 <col:5> 'unsigned long' lvalue ParmVar 0x14009b800 'pgoff' 'unsigned long'             `-ImplicitCastExpr 0x1380b1fd0 <col:12> 'unsigned long' <LValueToRValue>               `-DeclRefExpr 0x1380b1ef0 <col:12> 'unsigned long' lvalue ParmVar 0x14009b880 'flags' 'unsigned long' ","20151":"`-FunctionDecl 0x13d940be8  line:1:12 tcp_peek_sndq 'int (struct sock *, struct msghdr *, int)' static   |-ParmVarDecl 0x13d928648 <col:26, col:39> col:39 used sk 'struct sock *'   |-ParmVarDecl 0x13d940a28 <col:43, col:58> col:58 used msg 'struct msghdr *'   |-ParmVarDecl 0x13d940aa8 <col:63, col:67> col:67 len 'int'   `-CompoundStmt 0x13e808950 <line:2:1, line:24:1>     |-DeclStmt 0x13d940ed8 <line:3:2, col:21>     | |-RecordDecl 0x13d940cf0 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x13d940e58 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-DeclStmt 0x13d941048 <line:4:2, col:25>     | |-VarDecl 0x13d940f08 <col:2, col:15> col:6 used copied 'int' cinit     | | `-IntegerLiteral 0x13d940f70 <col:15> 'int' 0     | `-VarDecl 0x13d940fa8 <col:2, col:24> col:18 used err 'int' cinit     |   `-IntegerLiteral 0x13d941010 <col:24> 'int' 0     |-CallExpr 0x13d941248 <line:8:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d941190 <col:2> 'int ()' Function 0x13d9410d8 'skb_rbtree_walk' 'int ()'     | |-DeclRefExpr 0x13d9411b0 <col:18> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'     | `-UnaryOperator 0x13d941230 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d941208 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d9411d0 <col:24> 'struct sock *' lvalue ParmVar 0x13d928648 'sk' 'struct sock *'     |-CompoundStmt 0x13d941608 <col:43, line:13:2>     | |-BinaryOperator 0x13d941498 <line:9:3, col:52> 'int' contains-errors '='     | | |-DeclRefExpr 0x13d941278 <col:3> 'int' lvalue Var 0x13d940fa8 'err' 'int'     | | `-CallExpr 0x13d941458 <col:9, col:52> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13d941378 <col:9> 'int ()' Function 0x13d9412c0 'skb_copy_datagram_msg' 'int ()'     | |   |-DeclRefExpr 0x13d941398 <col:31> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'     | |   |-IntegerLiteral 0x13d9413b8 <col:36> 'int' 0     | |   |-DeclRefExpr 0x13d9413d8 <col:39> 'struct msghdr *' lvalue ParmVar 0x13d940a28 'msg' 'struct msghdr *'     | |   `-RecoveryExpr 0x13d941430 <col:44, col:49> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13d9413f8 <col:44> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'     | |-IfStmt 0x13d941538 <line:10:3, line:11:11>     | | |-ImplicitCastExpr 0x13d9414d8 <line:10:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13d9414b8 <col:7> 'int' lvalue Var 0x13d940fa8 'err' 'int'     | | `-ReturnStmt 0x13d941528 <line:11:4, col:11>     | |   `-ImplicitCastExpr 0x13d941510 <col:11> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x13d9414f0 <col:11> 'int' lvalue Var 0x13d940fa8 'err' 'int'     | `-CompoundAssignOperator 0x13d9415d8 <line:12:3, col:18> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-DeclRefExpr 0x13d941558 <col:3> 'int' lvalue Var 0x13d940f08 'copied' 'int'     |   `-RecoveryExpr 0x13d9415b0 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d941578 <col:13> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'     |-CallExpr 0x13d9417c8 <line:15:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d941710 <col:2> 'int ()' Function 0x13d941658 'skb_queue_walk' 'int ()'     | |-UnaryOperator 0x13d941790 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13d941768 <col:18, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13d941730 <col:18> 'struct sock *' lvalue ParmVar 0x13d928648 'sk' 'struct sock *'     | `-DeclRefExpr 0x13d9417a8 <col:38> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'     |-CompoundStmt 0x13e808858 <col:43, line:21:2>     | |-BinaryOperator 0x13d941938 <line:16:3, col:52> 'int' contains-errors '='     | | |-DeclRefExpr 0x13d9417f8 <col:3> 'int' lvalue Var 0x13d940fa8 'err' 'int'     | | `-CallExpr 0x13d9418f8 <col:9, col:52> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13d941818 <col:9> 'int ()' Function 0x13d9412c0 'skb_copy_datagram_msg' 'int ()'     | |   |-DeclRefExpr 0x13d941838 <col:31> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'     | |   |-IntegerLiteral 0x13d941858 <col:36> 'int' 0     | |   |-DeclRefExpr 0x13d941878 <col:39> 'struct msghdr *' lvalue ParmVar 0x13d940a28 'msg' 'struct msghdr *'     | |   `-RecoveryExpr 0x13d9418d0 <col:44, col:49> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13d941898 <col:44> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'     | `-CompoundAssignOperator 0x13e808828 <line:20:3, col:18> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-DeclRefExpr 0x13d941990 <col:3> 'int' lvalue Var 0x13d940f08 'copied' 'int'     |   `-RecoveryExpr 0x13e808800 <col:13, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d9419b0 <col:13> 'struct sk_buff *' lvalue Var 0x13d940e58 'skb' 'struct sk_buff *'     `-ReturnStmt 0x13e808940 <line:23:2, col:16>       `-BinaryConditionalOperator 0x13e808900 <col:9, col:16> 'int'         |-ImplicitCastExpr 0x13e8088b8 <col:9> 'int' <LValueToRValue>         | `-DeclRefExpr 0x13e808878 <col:9> 'int' lvalue Var 0x13d940fa8 'err' 'int'         |-OpaqueValueExpr 0x13e8088d0 <col:9> 'int'         | `-ImplicitCastExpr 0x13e8088b8 <col:9> 'int' <LValueToRValue>         |   `-DeclRefExpr 0x13e808878 <col:9> 'int' lvalue Var 0x13d940fa8 'err' 'int'         |-OpaqueValueExpr 0x13e8088d0 <col:9> 'int'         | `-ImplicitCastExpr 0x13e8088b8 <col:9> 'int' <LValueToRValue>         |   `-DeclRefExpr 0x13e808878 <col:9> 'int' lvalue Var 0x13d940fa8 'err' 'int'         `-ImplicitCastExpr 0x13e8088e8 <col:16> 'int' <LValueToRValue>           `-DeclRefExpr 0x13e808898 <col:16> 'int' lvalue Var 0x13d940f08 'copied' 'int' ","19225":"`-FunctionDecl 0x13400ddf8  line:1:20 invalid red_stream_ssl_accept 'int (int *)'   |-ParmVarDecl 0x13400dd28 <col:42, col:53> col:53 referenced invalid stream 'int *'   `-CompoundStmt 0x134028a18 <line:2:1, line:27:1>     |-DeclStmt 0x13400df28 <line:3:5, col:18>     | `-VarDecl 0x13400dec0 <col:5, col:9> col:9 used ssl_error 'int'     |-DeclStmt 0x13400dfc0 <line:4:5, col:20>     | `-VarDecl 0x13400df58 <col:5, col:9> col:9 used return_code 'int'     |-BinaryOperator 0x13400e248 <line:6:5, col:47> 'int' contains-errors '='     | |-DeclRefExpr 0x13400dfd8 <col:5> 'int' lvalue Var 0x13400df58 'return_code' 'int'     | `-CallExpr 0x13400e220 <col:19, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13400e150 <col:19> 'int ()' Function 0x13400e098 'SSL_accept' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x13400e1d8 <col:30, col:44> '<dependent type>' contains-errors lvalue ->ssl     |     `-CXXDependentScopeMemberExpr 0x13400e190 <col:30, col:38> '<dependent type>' contains-errors lvalue ->priv     |       `-RecoveryExpr 0x13400e170 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13400e340 <line:7:5, line:9:5>     | |-BinaryOperator 0x13400e2c0 <line:7:9, col:24> 'int' '=='     | | |-ImplicitCastExpr 0x13400e2a8 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13400e268 <col:9> 'int' lvalue Var 0x13400df58 'return_code' 'int'     | | `-IntegerLiteral 0x13400e288 <col:24> 'int' 1     | `-CompoundStmt 0x13400e328 <col:27, line:9:5>     |   `-ReturnStmt 0x13400e318 <line:8:9, col:16>     |     `-RecoveryExpr 0x13400e2f8 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x134027fd8 <line:11:5, col:61> 'int' contains-errors '='     | |-DeclRefExpr 0x13400e360 <col:5> 'int' lvalue Var 0x13400dec0 'ssl_error' 'int'     | `-CallExpr 0x134027fa8 <col:17, col:61> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x134027eb8 <col:17> 'int ()' Function 0x134027e00 'SSL_get_error' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x134027f40 <col:31, col:45> '<dependent type>' contains-errors lvalue ->ssl     |   | `-CXXDependentScopeMemberExpr 0x134027ef8 <col:31, col:39> '<dependent type>' contains-errors lvalue ->priv     |   |   `-RecoveryExpr 0x134027ed8 <col:31> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x134027f88 <col:50> 'int' lvalue Var 0x13400df58 'return_code' 'int'     |-IfStmt 0x134028318 <line:12:5, line:19:5>     | |-RecoveryExpr 0x134028158 <line:12:9, line:13:64> '_Bool' contains-errors     | `-CompoundStmt 0x134028300 <col:67, line:19:5>     |   `-IfStmt 0x1340282d0 <line:14:9, line:18:9> has_else     |     |-BinaryOperator 0x1340281f0 <line:14:13, col:26> 'int' contains-errors '=='     |     | |-DeclRefExpr 0x134028178 <col:13> 'int' lvalue Var 0x13400dec0 'ssl_error' 'int'     |     | `-RecoveryExpr 0x1340281d0 <col:26> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x134028258 <col:47, line:16:9>     |     | `-ReturnStmt 0x134028248 <line:15:13, col:20>     |     |   `-RecoveryExpr 0x134028228 <col:20> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x1340282b8 <line:16:16, line:18:9>     |       `-ReturnStmt 0x1340282a8 <line:17:13, col:20>     |         `-RecoveryExpr 0x134028288 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x134028488 <line:21:5, col:29> 'int'     | `-ImplicitCastExpr 0x134028470 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x134028418 <col:5> 'int ()' Function 0x134028360 'red_dump_openssl_errors' 'int ()'     |-CallExpr 0x134028648 <line:22:5, col:35> 'int'     | |-ImplicitCastExpr 0x134028630 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x134028588 <col:5> 'int ()' Function 0x1340284d0 'spice_warning' 'int ()'     | |-ImplicitCastExpr 0x134028678 <col:19> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x1340285f0 <col:19> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x134028690 <col:26> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x134028610 <col:26> 'int' lvalue Var 0x13400dec0 'ssl_error' 'int'     |-CallExpr 0x134028858 <line:23:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134028788 <col:5> 'int ()' Function 0x1340286d0 'SSL_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x134028810 <col:14, col:28> '<dependent type>' contains-errors lvalue ->ssl     |   `-CXXDependentScopeMemberExpr 0x1340287c8 <col:14, col:22> '<dependent type>' contains-errors lvalue ->priv     |     `-RecoveryExpr 0x1340287a8 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1340289b0 <line:24:5, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x134028910 <col:5, col:19> '<dependent type>' contains-errors lvalue ->ssl     | | `-CXXDependentScopeMemberExpr 0x1340288c8 <col:5, col:13> '<dependent type>' contains-errors lvalue ->priv     | |   `-RecoveryExpr 0x1340288a0 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x134028880 <col:5> 'int *' lvalue ParmVar 0x13400dd28 'stream' 'int *'     | `-RecoveryExpr 0x134028990 <col:25> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x134028a08 <line:26:5, col:12>       `-RecoveryExpr 0x1340289e8 <col:12> '<dependent type>' contains-errors lvalue ","19685":"`-FunctionDecl 0x13900df18  line:1:5 invalid jbd2_journal_start_reserved 'int (int *, unsigned int, unsigned int)'   |-ParmVarDecl 0x13900dd28 <col:33, col:43> col:43 referenced invalid handle 'int *'   |-ParmVarDecl 0x13900dda8 <col:51, col:64> col:64 used type 'unsigned int'   |-ParmVarDecl 0x13900de28 <line:2:5, col:18> col:18 used line_no 'unsigned int'   `-CompoundStmt 0x139028060 <line:3:1, line:29:1>     |-DeclStmt 0x13900e170 <line:5:2, col:16>     | `-VarDecl 0x13900e070 <col:2, col:13> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x13900e158 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13900e140 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13900e120 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139027588 <line:7:2, line:11:2>     | |-CallExpr 0x13900e398 <line:7:6, col:33> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13900e2e0 <col:6> 'int ()' Function 0x13900e228 'WARN_ON' 'int ()'     | | `-UnaryOperator 0x13900e380 <col:14, col:23> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x13900e368 <col:15, col:23> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x13900e320 <col:15, col:23> '<dependent type>' contains-errors lvalue ->h_reserved     | |       `-RecoveryExpr 0x13900e300 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x139027568 <col:36, line:11:2>     |   |-CallExpr 0x1390274f8 <line:9:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1390274b8 <col:3> 'int ()' Function 0x139027400 'jbd2_journal_stop' 'int ()'     |   | `-RecoveryExpr 0x1390274d8 <col:21> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x139027558 <line:10:3, col:10>     |     `-ImplicitCastExpr 0x139027540 <col:10> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x139027520 <col:10> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     |-IfStmt 0x139027890 <line:13:2, line:16:2>     | |-CallExpr 0x1390276b8 <line:13:6, col:35> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1390275a8 <col:6> 'int ()' Function 0x13900e228 'WARN_ON' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x139027670 <col:14, col:23> '<dependent type>' contains-errors lvalue ->journal_info     | |   `-RecoveryExpr 0x139027650 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x139027870 <col:38, line:16:2>     |   |-CallExpr 0x139027800 <line:14:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1390277c0 <col:3> 'int ()' Function 0x139027708 'jbd2_journal_free_reserved' 'int ()'     |   | `-RecoveryExpr 0x1390277e0 <col:30> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x139027860 <line:15:3, col:10>     |     `-ImplicitCastExpr 0x139027848 <col:10> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x139027828 <col:10> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     |-BinaryOperator 0x139027998 <line:18:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1390278f8 <col:2, col:10> '<dependent type>' contains-errors lvalue ->h_journal     | | `-RecoveryExpr 0x1390278d0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1390278b0 <col:2> 'int *' lvalue ParmVar 0x13900dd28 'handle' 'int *'     | `-RecoveryExpr 0x139027978 <col:22> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x139027bf8 <line:20:2, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x1390279b8 <col:2> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     | `-CallExpr 0x139027bc0 <col:8, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x139027ab8 <col:8> 'int ()' Function 0x139027a00 'start_this_handle' 'int ()'     |   |-RecoveryExpr 0x139027b80 <col:26> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x139027af0 <col:35> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x139027ba0 <col:43> '<dependent type>' contains-errors lvalue     |-IfStmt 0x139027e70 <line:21:2, line:25:2>     | |-BinaryOperator 0x139027c70 <line:21:6, col:12> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x139027c58 <col:6> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x139027c18 <col:6> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     | | `-IntegerLiteral 0x139027c38 <col:12> 'int' 0     | `-CompoundStmt 0x139027e48 <col:15, line:25:2>     |   |-BinaryOperator 0x139027d78 <line:22:3, col:23> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x139027cd8 <col:3, col:11> '<dependent type>' contains-errors lvalue ->h_journal     |   | | `-RecoveryExpr 0x139027cb0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x139027c90 <col:3> 'int *' lvalue ParmVar 0x13900dd28 'handle' 'int *'     |   | `-RecoveryExpr 0x139027d58 <col:23> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x139027dd8 <line:23:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x139027d98 <col:3> 'int ()' Function 0x139027708 'jbd2_journal_free_reserved' 'int ()'     |   | `-RecoveryExpr 0x139027db8 <col:30> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x139027e38 <line:24:3, col:10>     |     `-ImplicitCastExpr 0x139027e20 <col:10> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x139027e00 <col:10> 'int' contains-errors lvalue Var 0x13900e070 'ret' 'int'     |-BinaryOperator 0x139027f40 <line:26:2, col:19> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x139027ed8 <col:2, col:10> '<dependent type>' contains-errors lvalue ->h_type     | | `-RecoveryExpr 0x139027eb0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x139027e90 <col:2> 'int *' lvalue ParmVar 0x13900dd28 'handle' 'int *'     | `-DeclRefExpr 0x139027f20 <col:19> 'unsigned int' lvalue ParmVar 0x13900dda8 'type' 'unsigned int'     |-BinaryOperator 0x139028010 <line:27:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x139027fa8 <col:2, col:10> '<dependent type>' contains-errors lvalue ->h_line_no     | | `-RecoveryExpr 0x139027f80 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x139027f60 <col:2> 'int *' lvalue ParmVar 0x13900dd28 'handle' 'int *'     | `-DeclRefExpr 0x139027ff0 <col:22> 'unsigned int' lvalue ParmVar 0x13900de28 'line_no' 'unsigned int'     `-ReturnStmt 0x139028050 <line:28:2, col:9>       `-IntegerLiteral 0x139028030 <col:9> 'int' 0 ","19162":"`-FunctionDecl 0x127026688  line:1:1 __ctnetlink_change_status 'int (struct nf_conn *, unsigned long, unsigned long)'   |-ParmVarDecl 0x12700e248 <col:27, col:43> col:43 used ct 'struct nf_conn *'   |-ParmVarDecl 0x12700e2c8 <col:47, col:61> col:61 used on 'unsigned long'   |-ParmVarDecl 0x12700e348 <line:2:6, col:20> col:20 used off 'unsigned long'   `-CompoundStmt 0x127027228 <line:3:1, line:16:1>     |-DeclStmt 0x127026810 <line:4:2, col:18>     | `-VarDecl 0x1270267a8 <col:2, col:15> col:15 used bit 'unsigned int'     |-CompoundAssignOperator 0x127026928 <line:7:2, col:9> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x127026828 <col:2> 'unsigned long' lvalue ParmVar 0x12700e2c8 'on' 'unsigned long'     | `-UnaryOperator 0x127026910 <col:8, col:9> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x1270268f8 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x1270268d8 <col:9> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x127026a40 <line:8:2, col:10> 'unsigned long' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x127026958 <col:2> 'unsigned long' lvalue ParmVar 0x12700e348 'off' 'unsigned long'     | `-UnaryOperator 0x127026a28 <col:9, col:10> '<dependent type>' contains-errors prefix '~' cannot overflow     |   `-ImplicitCastExpr 0x127026a10 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x1270269f0 <col:10> '<dependent type>' contains-errors lvalue     `-ForStmt 0x1270271f0 <line:10:2, line:15:2>       |-BinaryOperator 0x127026ac8 <line:10:7, col:13> 'unsigned int' '='       | |-DeclRefExpr 0x127026a70 <col:7> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'       | `-ImplicitCastExpr 0x127026ab0 <col:13> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x127026a90 <col:13> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x127026b60 <col:16, col:22> 'int' contains-errors '<'       | |-DeclRefExpr 0x127026ae8 <col:16> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'       | `-RecoveryExpr 0x127026b40 <col:22> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x127026ba0 <col:37, col:40> 'unsigned int' postfix '++'       | `-DeclRefExpr 0x127026b80 <col:37> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'       `-CompoundStmt 0x1270271d8 <col:44, line:15:2>         `-IfStmt 0x1270271a8 <line:11:3, line:14:30> has_else           |-BinaryOperator 0x127026ca0 <line:11:7, col:21> 'unsigned long' '&'           | |-ImplicitCastExpr 0x127026c70 <col:7> 'unsigned long' <LValueToRValue>           | | `-DeclRefExpr 0x127026bb8 <col:7> 'unsigned long' lvalue ParmVar 0x12700e2c8 'on' 'unsigned long'           | `-ImplicitCastExpr 0x127026c88 <col:12, col:21> 'unsigned long' <IntegralCast>           |   `-ParenExpr 0x127026c50 <col:12, col:21> 'int'           |     `-BinaryOperator 0x127026c30 <col:13, col:18> 'int' '<<'           |       |-IntegerLiteral 0x127026bd8 <col:13> 'int' 1           |       `-ImplicitCastExpr 0x127026c18 <col:18> 'unsigned int' <LValueToRValue>           |         `-DeclRefExpr 0x127026bf8 <col:18> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'           |-CallExpr 0x127026e88 <line:12:4, col:28> '<dependent type>' contains-errors           | |-DeclRefExpr 0x127026dd0 <col:4> 'int ()' Function 0x127026d18 'set_bit' 'int ()'           | |-DeclRefExpr 0x127026df0 <col:12> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'           | `-UnaryOperator 0x127026e70 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow           |   `-RecoveryExpr 0x127026e48 <col:18, col:22> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x127026e10 <col:18> 'struct nf_conn *' lvalue ParmVar 0x12700e248 'ct' 'struct nf_conn *'           `-IfStmt 0x127027188 <line:13:8, line:14:30>             |-BinaryOperator 0x127026fa0 <line:13:12, col:27> 'unsigned long' '&'             | |-ImplicitCastExpr 0x127026f70 <col:12> 'unsigned long' <LValueToRValue>             | | `-DeclRefExpr 0x127026eb8 <col:12> 'unsigned long' lvalue ParmVar 0x12700e348 'off' 'unsigned long'             | `-ImplicitCastExpr 0x127026f88 <col:18, col:27> 'unsigned long' <IntegralCast>             |   `-ParenExpr 0x127026f50 <col:18, col:27> 'int'             |     `-BinaryOperator 0x127026f30 <col:19, col:24> 'int' '<<'             |       |-IntegerLiteral 0x127026ed8 <col:19> 'int' 1             |       `-ImplicitCastExpr 0x127026f18 <col:24> 'unsigned int' <LValueToRValue>             |         `-DeclRefExpr 0x127026ef8 <col:24> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'             `-CallExpr 0x127027158 <line:14:4, col:30> '<dependent type>' contains-errors               |-DeclRefExpr 0x1270270a0 <col:4> 'int ()' Function 0x127026fe8 'clear_bit' 'int ()'               |-DeclRefExpr 0x1270270c0 <col:14> 'unsigned int' lvalue Var 0x1270267a8 'bit' 'unsigned int'               `-UnaryOperator 0x127027140 <col:19, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow                 `-RecoveryExpr 0x127027118 <col:20, col:24> '<dependent type>' contains-errors lvalue                   `-DeclRefExpr 0x1270270e0 <col:20> 'struct nf_conn *' lvalue ParmVar 0x12700e248 'ct' 'struct nf_conn *' ","19933":"`-FunctionDecl 0x1338082d8  line:1:1 invalid hugetlb_vmdelete_list 'int (struct rb_root *, int, int)'   |-ParmVarDecl 0x132085e48 <col:23, col:39> col:39 used root 'struct rb_root *'   |-ParmVarDecl 0x132085ee0 <col:45, col:53> col:53 invalid start 'int'   |-ParmVarDecl 0x132085f60 <col:60, col:68> col:68 referenced invalid end 'int'   `-CompoundStmt 0x132818b70 <line:2:1, line:25:1>     |-DeclStmt 0x133808588 <line:3:2, col:28>     | |-RecordDecl 0x133808398 <col:2, col:9> col:9 struct vm_area_struct     | `-VarDecl 0x133808508 <col:2, col:25> col:25 used vma 'struct vm_area_struct *'     |-CallExpr 0x133808898 <line:6:2, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133808700 <col:2> 'int ()' Function 0x133808648 'vma_interval_tree_foreach' 'int ()'     | |-DeclRefExpr 0x133808720 <col:28> 'struct vm_area_struct *' lvalue Var 0x133808508 'vma' 'struct vm_area_struct *'     | |-DeclRefExpr 0x133808740 <col:33> 'struct rb_root *' lvalue ParmVar 0x132085e48 'root' 'struct rb_root *'     | |-RecoveryExpr 0x133808760 <col:39> '<dependent type>' contains-errors lvalue     | `-ConditionalOperator 0x133808868 <col:46, col:58> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x133808780 <col:46> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1338087a0 <col:52> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x133808848 <col:58> '<dependent type>' contains-errors lvalue     `-CompoundStmt 0x132818b40 <col:69, line:24:2>       |-DeclStmt 0x133808958 <line:7:3, col:25>       | `-VarDecl 0x1338088f0 <col:3, col:17> col:17 used v_offset 'unsigned long'       |-IfStmt 0x133808c20 <line:10:3, line:13:15> has_else       | |-BinaryOperator 0x1338089f0 <line:10:7, col:23> 'int' contains-errors '<'       | | |-RecoveryExpr 0x1338089a8 <col:7, col:12> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x133808970 <col:7> 'struct vm_area_struct *' lvalue Var 0x133808508 'vma' 'struct vm_area_struct *'       | | `-RecoveryExpr 0x1338089d0 <col:23> '<dependent type>' contains-errors lvalue       | |-BinaryOperator 0x133808b88 <line:11:4, col:42> 'unsigned long' contains-errors '='       | | |-DeclRefExpr 0x133808a10 <col:4> 'unsigned long' lvalue Var 0x1338088f0 'v_offset' 'unsigned long'       | | `-BinaryOperator 0x133808b68 <col:15, col:42> '<dependent type>' contains-errors '<<'       | |   |-ParenExpr 0x133808ad0 <col:15, col:37> '<dependent type>' contains-errors       | |   | `-BinaryOperator 0x133808ab0 <col:16, col:29> '<dependent type>' contains-errors '-'       | |   |   |-RecoveryExpr 0x133808a30 <col:16> '<dependent type>' contains-errors lvalue       | |   |   `-RecoveryExpr 0x133808a88 <col:24, col:29> '<dependent type>' contains-errors lvalue       | |   |     `-DeclRefExpr 0x133808a50 <col:24> 'struct vm_area_struct *' lvalue Var 0x133808508 'vma' 'struct vm_area_struct *'       | |   `-RecoveryExpr 0x133808b48 <col:42> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x133808c00 <line:13:4, col:15> 'unsigned long' '='       |   |-DeclRefExpr 0x133808ba8 <col:4> 'unsigned long' lvalue Var 0x1338088f0 'v_offset' 'unsigned long'       |   `-ImplicitCastExpr 0x133808be8 <col:15> 'unsigned long' <IntegralCast>       |     `-IntegerLiteral 0x133808bc8 <col:15> 'int' 0       |-IfStmt 0x133809058 <line:15:3, line:21:15> has_else       | |-RecoveryExpr 0x133808c50 <line:15:7> '<dependent type>' contains-errors lvalue       | |-CompoundStmt 0x133808f78 <col:12, line:20:3>       | | `-IfStmt 0x133808f58 <line:18:4, line:19:16>       | |   |-BinaryOperator 0x133808e70 <line:18:8, col:19> 'int' contains-errors '>'       | |   | |-RecoveryExpr 0x133808df0 <col:8> '<dependent type>' contains-errors lvalue       | |   | `-RecoveryExpr 0x133808e48 <col:14, col:19> '<dependent type>' contains-errors lvalue       | |   |   `-DeclRefExpr 0x133808e10 <col:14> 'struct vm_area_struct *' lvalue Var 0x133808508 'vma' 'struct vm_area_struct *'       | |   `-BinaryOperator 0x133808f38 <line:19:5, col:16> '<dependent type>' contains-errors '='       | |     |-RecoveryExpr 0x133808eb0 <col:5> '<dependent type>' contains-errors lvalue       | |     | `-DeclRefExpr 0x133808e90 <col:5> 'int' lvalue ParmVar 0x132085f60 'end' 'int'       | |     `-RecoveryExpr 0x133808f10 <col:11, col:16> '<dependent type>' contains-errors lvalue       | |       `-DeclRefExpr 0x133808ed8 <col:11> 'struct vm_area_struct *' lvalue Var 0x133808508 'vma' 'struct vm_area_struct *'       | `-BinaryOperator 0x133809038 <line:21:4, col:15> '<dependent type>' contains-errors '='       |   |-RecoveryExpr 0x133808fb0 <col:4> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x133808f90 <col:4> 'int' lvalue ParmVar 0x132085f60 'end' 'int'       |   `-RecoveryExpr 0x133809010 <col:10, col:15> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x133808fd8 <col:10> 'struct vm_area_struct *' lvalue Var 0x133808508 'vma' 'struct vm_area_struct *'       `-CallExpr 0x132818b00 <line:23:3, col:64> '<dependent type>' contains-errors         |-DeclRefExpr 0x133809168 <col:3> 'int ()' Function 0x1338090b0 'unmap_hugepage_range' 'int ()'         |-DeclRefExpr 0x133809188 <col:24> 'struct vm_area_struct *' lvalue Var 0x133808508 'vma' 'struct vm_area_struct *'         |-BinaryOperator 0x132818a48 <col:29, col:45> '<dependent type>' contains-errors '+'         | |-RecoveryExpr 0x132818a00 <col:29, col:34> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x1338091a8 <col:29> 'struct vm_area_struct *' lvalue Var 0x133808508 'vma' 'struct vm_area_struct *'         | `-DeclRefExpr 0x132818a28 <col:45> 'unsigned long' lvalue Var 0x1338088f0 'v_offset' 'unsigned long'         |-RecoveryExpr 0x132818a68 <col:55> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x132818ae0 <col:60> '<dependent type>' contains-errors lvalue ","20011":"`-FunctionDecl 0x156027730  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x156027830 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x156027898 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x156027900 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1560277d8 <<invalid sloc>> Implicit 900 ","19996":"`-FunctionDecl 0x14200ddf8  line:1:5 invalid YAMLParser 'int (int *)'   |-ParmVarDecl 0x14200dd28 <col:16, col:33> col:33 invalid _fs 'int *'   `-CompoundStmt 0x14200dea8 <line:2:5, line:3:5> ","19615":"`-FunctionDecl 0x14b8280c0  col:6 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x14b8281c0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14b828228 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14b828168 <<invalid sloc>> Implicit 887 ","20076":"`-FunctionDecl 0x13680de38  line:1:12 do_vm86_irq_handling 'int (int, int)' static   |-ParmVarDecl 0x13680dcd8 <col:33, col:37> col:37 used subfunction 'int'   |-ParmVarDecl 0x13680dd58 <col:50, col:54> col:54 used irqnumber 'int'   `-CompoundStmt 0x136122720 <line:2:1, line:33:1>     |-DeclStmt 0x13680dfb8 <line:3:2, col:9>     | `-VarDecl 0x13680df50 <col:2, col:6> col:6 used ret 'int'     `-SwitchStmt 0x13680e008 <line:4:2, line:31:2>       |-ImplicitCastExpr 0x13680dff0 <line:4:10> 'int' <LValueToRValue>       | `-DeclRefExpr 0x13680dfd0 <col:10> 'int' lvalue ParmVar 0x13680dcd8 'subfunction' 'int'       `-CompoundStmt 0x1361226f0 <col:23, line:31:2>         |-CompoundStmt 0x13680e248 <line:5:32, line:7:3>         | `-ReturnStmt 0x13680e238 <line:6:4, col:38>         |   `-CallExpr 0x13680e1f8 <col:11, col:38> 'int'         |     |-ImplicitCastExpr 0x13680e1e0 <col:11> 'int (*)()' <FunctionToPointerDecay>         |     | `-DeclRefExpr 0x13680e170 <col:11> 'int ()' Function 0x13680e0b8 'get_and_reset_irq' 'int ()'         |     `-ImplicitCastExpr 0x13680e220 <col:29> 'int' <LValueToRValue>         |       `-DeclRefExpr 0x13680e190 <col:29> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'         |-CompoundStmt 0x13680e2c0 <line:8:27, line:10:3>         | `-ReturnStmt 0x13680e2b0 <line:9:4, col:11>         |   `-RecoveryExpr 0x13680e290 <col:11> '<dependent type>' contains-errors lvalue         |-CompoundStmt 0x136828550 <line:11:26, line:23:3>         | |-DeclStmt 0x13680e3e8 <line:12:4, col:28>         | | `-VarDecl 0x13680e308 <col:4, col:27> col:8 used sig 'int' cinit         | |   `-BinaryOperator 0x13680e3c8 <col:14, col:27> 'int' '>>'         | |     |-ImplicitCastExpr 0x13680e3b0 <col:14> 'int' <LValueToRValue>         | |     | `-DeclRefExpr 0x13680e370 <col:14> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'         | |     `-IntegerLiteral 0x13680e390 <col:27> 'int' 8         | |-DeclStmt 0x1368278f8 <line:13:4, col:29>         | | `-VarDecl 0x136827818 <col:4, col:26> col:8 used irq 'int' cinit         | |   `-BinaryOperator 0x1368278d8 <col:14, col:26> 'int' '&'         | |     |-ImplicitCastExpr 0x1368278c0 <col:14> 'int' <LValueToRValue>         | |     | `-DeclRefExpr 0x136827880 <col:14> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'         | |     `-IntegerLiteral 0x1368278a0 <col:26> 'int' 255         | |-IfStmt 0x136827b70 <line:14:4, col:41>         | | |-UnaryOperator 0x136827ab0 <col:8, col:30> '<dependent type>' contains-errors prefix '!' cannot overflow         | | | `-CallExpr 0x136827a88 <col:9, col:30> '<dependent type>' contains-errors         | | |   |-DeclRefExpr 0x1368279f0 <col:9> 'int ()' Function 0x136827938 'capable' 'int ()'         | | |   `-RecoveryExpr 0x136827a68 <col:17> '<dependent type>' contains-errors lvalue         | | `-ReturnStmt 0x136827b60 <col:33, col:41>         | |   `-UnaryOperator 0x136827b48 <col:40, col:41> '<dependent type>' contains-errors prefix '-' cannot overflow         | |     `-ImplicitCastExpr 0x136827b30 <col:41> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x136827b10 <col:41> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x136827d80 <line:15:4, col:46>         | | |-RecoveryExpr 0x136827cb8 <col:8, col:35> '_Bool' contains-errors         | | `-ReturnStmt 0x136827d70 <col:38, col:46>         | |   `-UnaryOperator 0x136827d58 <col:45, col:46> '<dependent type>' contains-errors prefix '-' cannot overflow         | |     `-ImplicitCastExpr 0x136827d40 <col:46> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x136827d20 <col:46> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x136827fc0 <line:16:4, col:39>         | | |-CallExpr 0x136827ed8 <col:8, col:28> 'int'         | | | |-ImplicitCastExpr 0x136827ec0 <col:8> 'int (*)()' <FunctionToPointerDecay>         | | | | `-DeclRefExpr 0x136827e80 <col:8> 'int ()' Function 0x136827dc8 'invalid_vm86_irq' 'int ()'         | | | `-ImplicitCastExpr 0x136827f00 <col:25> 'int' <LValueToRValue>         | | |   `-DeclRefExpr 0x136827ea0 <col:25> 'int' lvalue Var 0x136827818 'irq' 'int'         | | `-ReturnStmt 0x136827fb0 <col:31, col:39>         | |   `-UnaryOperator 0x136827f98 <col:38, col:39> '<dependent type>' contains-errors prefix '-' cannot overflow         | |     `-ImplicitCastExpr 0x136827f80 <col:39> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x136827f60 <col:39> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x1368280e0 <line:17:4, col:36>         | | |-RecoveryExpr 0x136828018 <col:8, col:23> '_Bool' contains-errors         | | `-ReturnStmt 0x1368280d0 <col:28, col:36>         | |   `-UnaryOperator 0x1368280b8 <col:35, col:36> '<dependent type>' contains-errors prefix '-' cannot overflow         | |     `-ImplicitCastExpr 0x1368280a0 <col:36> '<dependent type>' contains-errors <LValueToRValue>         | |       `-RecoveryExpr 0x136828080 <col:36> '<dependent type>' contains-errors lvalue         | |-BinaryOperator 0x1368283e8 <line:18:4, col:62> 'int' contains-errors '='         | | |-DeclRefExpr 0x136828100 <col:4> 'int' lvalue Var 0x13680df50 'ret' 'int'         | | `-CallExpr 0x1368283a0 <col:10, col:62> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x136828200 <col:10> 'int ()' Function 0x136828148 'request_irq' 'int ()'         | |   |-DeclRefExpr 0x136828220 <col:22> 'int' lvalue Var 0x136827818 'irq' 'int'         | |   |-UnaryOperator 0x136828348 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow         | |   | `-RecoveryExpr 0x136828328 <col:28> '<dependent type>' contains-errors lvalue         | |   |-IntegerLiteral 0x136828270 <col:41> 'int' 0         | |   |-RecoveryExpr 0x136828360 <col:44> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x136828380 <col:58> '<dependent type>' contains-errors lvalue         | |-IfStmt 0x136828488 <line:19:4, col:20>         | | |-ImplicitCastExpr 0x136828428 <col:8> 'int' <LValueToRValue>         | | | `-DeclRefExpr 0x136828408 <col:8> 'int' lvalue Var 0x13680df50 'ret' 'int'         | | `-ReturnStmt 0x136828478 <col:13, col:20>         | |   `-ImplicitCastExpr 0x136828460 <col:20> 'int' <LValueToRValue>         | |     `-DeclRefExpr 0x136828440 <col:20> 'int' lvalue Var 0x13680df50 'ret' 'int'         | `-ReturnStmt 0x136828540 <line:22:4, col:11>         |   `-ImplicitCastExpr 0x136828528 <col:11> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x136828508 <col:11> 'int' lvalue Var 0x136827818 'irq' 'int'         `-CompoundStmt 0x1361226c8 <line:24:24, line:30:3>           |-IfStmt 0x1368286b0 <line:26:4, col:42>           | |-RecoveryExpr 0x136828660 <col:8, col:30> '_Bool' contains-errors           | `-ReturnStmt 0x1368286a0 <col:35, col:42>           |   `-IntegerLiteral 0x136828680 <col:42> 'int' 0           |-CallExpr 0x136122658 <line:28:4, col:27> 'int'           | |-ImplicitCastExpr 0x136122640 <col:4> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x136122600 <col:4> 'int ()' Function 0x136828738 'free_vm86_irq' 'int ()'           | `-ImplicitCastExpr 0x136122680 <col:18> 'int' <LValueToRValue>           |   `-DeclRefExpr 0x136122620 <col:18> 'int' lvalue ParmVar 0x13680dd58 'irqnumber' 'int'           `-ReturnStmt 0x1361226b8 <line:29:4, col:11>             `-IntegerLiteral 0x136122698 <col:11> 'int' 0 ","19654":"`-FunctionDecl 0x11f00de58  line:1:1 invalid pub_queue_ready_read 'int (int, void *)'   |-ParmVarDecl 0x11f00dcf0 <col:22, col:32> col:32 invalid ready 'int'   |-ParmVarDecl 0x11f00dd70 <col:39, col:45> col:45 ctx 'void *'   `-CompoundStmt 0x11f027eb0 <col:50, line:10:1>     |-CallExpr 0x11f00e1b0 <line:5:5, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f00e070 <col:5> 'int ()' Function 0x11f00dfb8 'agoo_queue_release' 'int ()'     | `-UnaryOperator 0x11f00e198 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x11f00e150 <col:25, col:31> '<dependent type>' contains-errors lvalue ->pub_queue     |     `-RecoveryExpr 0x11f00e130 <col:25> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x11f027e48 <line:6:5, line:8:5>     | |-RecoveryExpr 0x11f00e220 <line:6:12, col:73> '_Bool' contains-errors     | `-CompoundStmt 0x11f027e30 <col:76, line:8:5>     |   `-CallExpr 0x11f027e00 <line:7:2, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11f00e320 <col:2> 'int ()' Function 0x11f00e268 'process_pub_con' 'int ()'     |     |-RecoveryExpr 0x11f00e3a0 <col:18> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x11f00e3c0 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11f027ea0 <line:9:5, col:12>       `-RecoveryExpr 0x11f027e80 <col:12> '<dependent type>' contains-errors lvalue ","19686":"`-FunctionDecl 0x157826938  line:1:1 nfsd4_write 'int (struct svc_rqst *, struct nfsd4_compound_state *, struct nfsd4_write *)'   |-ParmVarDecl 0x15780e248 <col:13, col:30> col:30 used rqstp 'struct svc_rqst *'   |-ParmVarDecl 0x157826628 <col:37, col:66> col:66 used cstate 'struct nfsd4_compound_state *'   |-ParmVarDecl 0x1578267f8 <line:2:6, col:26> col:26 used write 'struct nfsd4_write *'   `-CompoundStmt 0x15782a920 <line:3:1, line:35:1>     |-DeclStmt 0x157826d30 <line:5:2, col:26>     | |-RecordDecl 0x157826b08 <col:2, col:9> col:9 struct file     | `-VarDecl 0x157826c78 <col:2, col:22> col:15 used filp 'struct file *' cinit     |   `-RecoveryExpr 0x157826cf8 <col:22> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x157826dc8 <line:7:2, col:19>     | `-VarDecl 0x157826d60 <col:2, col:16> col:16 used cnt 'unsigned long'     |-DeclStmt 0x157826e60 <line:8:2, col:11>     | `-VarDecl 0x157826df8 <col:2, col:6> col:6 used nvecs 'int'     |-IfStmt 0x157826f98 <line:10:2, line:11:10>     | |-BinaryOperator 0x157826f30 <line:10:6, col:26> 'int' contains-errors '>='     | | |-RecoveryExpr 0x157826eb0 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x157826e78 <col:6> 'struct nfsd4_write *' lvalue ParmVar 0x1578267f8 'write' 'struct nfsd4_write *'     | | `-RecoveryExpr 0x157826f10 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x157826f88 <line:11:3, col:10>     |   `-RecoveryExpr 0x157826f68 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x157827590 <line:15:2, line:18:2>     | |-RecoveryExpr 0x157827320 <line:15:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x157827570 <col:14, line:18:2>     |   |-CallExpr 0x1578274e8 <line:16:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x1578274d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x157827420 <col:3> 'int ()' Function 0x157827368 'dprintk' 'int ()'     |   | `-ImplicitCastExpr 0x157827510 <col:11> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x157827480 <col:11> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x157827560 <line:17:3, col:10>     |     `-RecoveryExpr 0x157827540 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x157829a40 <line:20:2, col:15> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x1578275b0 <col:2> 'unsigned long' lvalue Var 0x157826d60 'cnt' 'unsigned long'     | `-RecoveryExpr 0x157829a18 <col:8, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1578275d0 <col:8> 'struct nfsd4_write *' lvalue ParmVar 0x1578267f8 'write' 'struct nfsd4_write *'     |-BinaryOperator 0x157829b20 <line:21:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x157829a98 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x157829a60 <col:2> 'struct nfsd4_write *' lvalue ParmVar 0x1578267f8 'write' 'struct nfsd4_write *'     | `-RecoveryExpr 0x157829af8 <col:26, col:33> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x157829ac0 <col:26> 'struct nfsd4_write *' lvalue ParmVar 0x1578267f8 'write' 'struct nfsd4_write *'     |-CallExpr 0x157829e30 <line:22:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x157829c20 <col:2> 'int ()' Function 0x157829b68 'gen_boot_verifier' 'int ()'     | |-UnaryOperator 0x157829ca0 <col:20, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x157829c78 <col:21, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x157829c40 <col:21> 'struct nfsd4_write *' lvalue ParmVar 0x1578267f8 'write' 'struct nfsd4_write *'     | `-CallExpr 0x157829df0 <col:41, col:54> 'int'     |   |-ImplicitCastExpr 0x157829dd8 <col:41> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157829d98 <col:41> 'int ()' Function 0x157829ce0 'SVC_NET' 'int ()'     |   `-ImplicitCastExpr 0x157829e18 <col:49> 'struct svc_rqst *' <LValueToRValue>     |     `-DeclRefExpr 0x157829db8 <col:49> 'struct svc_rqst *' lvalue ParmVar 0x15780e248 'rqstp' 'struct svc_rqst *'     |-BinaryOperator 0x15782a030 <line:24:2, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x157829e60 <col:2> 'int' lvalue Var 0x157826df8 'nvecs' 'int'     | `-CallExpr 0x15782a000 <col:10, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x157829f60 <col:10> 'int ()' Function 0x157829ea8 'fill_in_write_vector' 'int ()'     |   |-RecoveryExpr 0x157829fb8 <col:31, col:38> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x157829f80 <col:31> 'struct svc_rqst *' lvalue ParmVar 0x15780e248 'rqstp' 'struct svc_rqst *'     |   `-DeclRefExpr 0x157829fe0 <col:46> 'struct nfsd4_write *' lvalue ParmVar 0x1578267f8 'write' 'struct nfsd4_write *'     |-CallExpr 0x15782a318 <line:25:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15782a130 <col:2> 'int ()' Function 0x15782a078 'WARN_ON_ONCE' 'int ()'     | `-BinaryOperator 0x15782a2f8 <col:15, col:47> 'int' contains-errors '>'     |   |-DeclRefExpr 0x15782a150 <col:15> 'int' lvalue Var 0x157826df8 'nvecs' 'int'     |   `-CallExpr 0x15782a2d0 <col:23, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15782a250 <col:23> 'int ()' Function 0x15782a198 'ARRAY_SIZE' 'int ()'     |     `-RecoveryExpr 0x15782a2a8 <col:34, col:41> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15782a270 <col:34> 'struct svc_rqst *' lvalue ParmVar 0x15780e248 'rqstp' 'struct svc_rqst *'     |-CallExpr 0x15782a840 <line:30:2, col:11> 'int' contains-errors     | |-ImplicitCastExpr 0x15782a828 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15782a7e8 <col:2> 'int ()' Function 0x15782a730 'fput' 'int ()'     | `-ImplicitCastExpr 0x15782a868 <col:7> 'struct file *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x15782a808 <col:7> 'struct file *' contains-errors lvalue Var 0x157826c78 'filp' 'struct file *'     `-BinaryOperator 0x15782a900 <line:32:2, col:28> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x15782a8b8 <col:2, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x15782a880 <col:2> 'struct nfsd4_write *' lvalue ParmVar 0x1578267f8 'write' 'struct nfsd4_write *'       `-DeclRefExpr 0x15782a8e0 <col:28> 'unsigned long' lvalue Var 0x157826d60 'cnt' 'unsigned long' ","20093":"`-FunctionDecl 0x12c141e68  line:1:12 invalid tc_chain_notify_delete 'int (const struct tcf_proto_ops *, void *, int, struct tcf_block *, struct sk_buff *, int, int, int)' static   |-ParmVarDecl 0x12c128648 <col:35, col:63> col:63 used tmplt_ops 'const struct tcf_proto_ops *'   |-ParmVarDecl 0x12c1286c8 <line:2:7, col:13> col:13 used tmplt_priv 'void *'   |-ParmVarDecl 0x12c128760 <col:25, col:29> col:29 invalid chain_index 'int'   |-ParmVarDecl 0x12c141968 <line:3:7, col:25> col:25 used block 'struct tcf_block *'   |-ParmVarDecl 0x12c141b38 <col:32, col:48> col:48 oskb 'struct sk_buff *'   |-ParmVarDecl 0x12c141bb8 <line:4:7, col:11> col:11 invalid seq 'int'   |-ParmVarDecl 0x12c141c38 <col:16, col:20> col:20 invalid flags 'int'   |-ParmVarDecl 0x12c141cb8 <col:27, col:32> col:32 invalid unicast 'int'   `-CompoundStmt 0x12c1473e0 <line:5:1, line:24:1>     |-DeclStmt 0x12c142198 <line:7:2, col:30>     | |-RecordDecl 0x12c141f50 <col:2, col:9> col:9 struct net     | `-VarDecl 0x12c1420b8 <col:2, col:27> col:14 used net 'struct net *' cinit     |   `-RecoveryExpr 0x12c142158 <col:20, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c142120 <col:20> 'struct tcf_block *' lvalue ParmVar 0x12c141968 'block' 'struct tcf_block *'     |-DeclStmt 0x12c1422a0 <line:8:2, col:21>     | `-VarDecl 0x12c142238 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-BinaryOperator 0x12c142540 <line:10:2, col:44> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x12c1422b8 <col:2> 'struct sk_buff *' lvalue Var 0x12c142238 'skb' 'struct sk_buff *'     | `-CallExpr 0x12c142510 <col:8, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c142430 <col:8> 'int ()' Function 0x12c142378 'alloc_skb' 'int ()'     |   |-RecoveryExpr 0x12c1424d0 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12c1424f0 <col:34> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c142658 <line:11:2, line:12:11>     | |-UnaryOperator 0x12c142598 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12c142580 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c142560 <col:7> 'struct sk_buff *' lvalue Var 0x12c142238 'skb' 'struct sk_buff *'     | `-ReturnStmt 0x12c142648 <line:12:3, col:11>     |   `-UnaryOperator 0x12c142630 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x12c142618 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x12c1425f8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c146ea0 <line:14:2, line:18:2>     | |-BinaryOperator 0x12c146c10 <line:14:6, line:15:55> 'int' contains-errors '<='     | | |-CallExpr 0x12c146ba0 <line:14:6, line:15:50> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12c142758 <line:14:6> 'int ()' Function 0x12c1426a0 'tc_chain_fill_node' 'int ()'     | | | |-DeclRefExpr 0x12c142778 <col:25> 'const struct tcf_proto_ops *' lvalue ParmVar 0x12c128648 'tmplt_ops' 'const struct tcf_proto_ops *'     | | | |-DeclRefExpr 0x12c142798 <col:36> 'void *' lvalue ParmVar 0x12c1286c8 'tmplt_priv' 'void *'     | | | |-RecoveryExpr 0x12c1427b8 <col:48> '<dependent type>' contains-errors lvalue     | | | |-DeclRefExpr 0x12c1427d8 <col:61> 'struct net *' contains-errors lvalue Var 0x12c1420b8 'net' 'struct net *'     | | | |-DeclRefExpr 0x12c146a00 <col:66> 'struct sk_buff *' lvalue Var 0x12c142238 'skb' 'struct sk_buff *'     | | | |-DeclRefExpr 0x12c146a20 <line:15:11> 'struct tcf_block *' lvalue ParmVar 0x12c141968 'block' 'struct tcf_block *'     | | | |-RecoveryExpr 0x12c146b60 <col:18> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x12c146a58 <col:26> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x12c146a78 <col:31> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12c146b80 <col:38> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x12c146b20 <col:55> 'int' 0     | `-CompoundStmt 0x12c146e80 <col:58, line:18:2>     |   |-CallExpr 0x12c146d98 <line:16:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x12c146d80 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12c146d10 <col:3> 'int ()' Function 0x12c146c58 'kfree_skb' 'int ()'     |   | `-ImplicitCastExpr 0x12c146dc0 <col:13> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x12c146d30 <col:13> 'struct sk_buff *' lvalue Var 0x12c142238 'skb' 'struct sk_buff *'     |   `-ReturnStmt 0x12c146e70 <line:17:3, col:11>     |     `-UnaryOperator 0x12c146e58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x12c146e40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x12c146e20 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c1470d8 <line:20:2, line:21:39>     | |-RecoveryExpr 0x12c146ec0 <line:20:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12c1470c8 <line:21:3, col:39>     |   `-CallExpr 0x12c147090 <col:10, col:39> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12c146fc0 <col:10> 'int ()' Function 0x12c146f08 'rtnl_unicast' 'int ()'     |     |-DeclRefExpr 0x12c146fe0 <col:23> 'struct sk_buff *' lvalue Var 0x12c142238 'skb' 'struct sk_buff *'     |     |-DeclRefExpr 0x12c147000 <col:28> 'struct net *' contains-errors lvalue Var 0x12c1420b8 'net' 'struct net *'     |     `-RecoveryExpr 0x12c147070 <col:33> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c1473d0 <line:23:2, col:72>       `-CallExpr 0x12c147388 <col:9, col:72> '<dependent type>' contains-errors         |-DeclRefExpr 0x12c1471d8 <col:9> 'int ()' Function 0x12c147120 'rtnetlink_send' 'int ()'         |-DeclRefExpr 0x12c1471f8 <col:24> 'struct sk_buff *' lvalue Var 0x12c142238 'skb' 'struct sk_buff *'         |-DeclRefExpr 0x12c147218 <col:29> 'struct net *' contains-errors lvalue Var 0x12c1420b8 'net' 'struct net *'         |-RecoveryExpr 0x12c147308 <col:34> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x12c147328 <col:42> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x12c147368 <col:54, col:62> '<dependent type>' contains-errors '&'           |-RecoveryExpr 0x12c147268 <col:54> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x12c147348 <col:62> '<dependent type>' contains-errors lvalue ","19415":"`-FunctionDecl 0x125027258  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x125027358 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x125027300 <<invalid sloc>> Implicit 873 ","19173":"`-FunctionDecl 0x143941548  line:1:12 sfq_change 'int (struct Qdisc *, struct nlattr *)' static   |-ParmVarDecl 0x143929048 <col:23, col:37> col:37 used sch 'struct Qdisc *'   |-ParmVarDecl 0x143941428 <col:42, col:57> col:57 used opt 'struct nlattr *'   `-CompoundStmt 0x14400b820 <line:2:1, line:76:1>     |-DeclStmt 0x143941a48 <line:3:2, col:44>     | |-RecordDecl 0x143941648 <col:2, col:9> col:9 struct sfq_sched_data     | `-VarDecl 0x1439417b8 <col:2, col:43> col:25 used q 'struct sfq_sched_data *' cinit     |   `-ImplicitCastExpr 0x143941a18 <col:29, col:43> 'struct sfq_sched_data *' <IntegralToPointer>     |     `-CallExpr 0x1439419d8 <col:29, col:43> 'int'     |       |-ImplicitCastExpr 0x1439419c0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x143941950 <col:29> 'int ()' Function 0x143941898 'qdisc_priv' 'int ()'     |       `-ImplicitCastExpr 0x143941a00 <col:40> 'struct Qdisc *' <LValueToRValue>     |         `-DeclRefExpr 0x143941970 <col:40> 'struct Qdisc *' lvalue ParmVar 0x143929048 'sch' 'struct Qdisc *'     |-DeclStmt 0x143941dd8 <line:4:2, col:41>     | |-RecordDecl 0x143941a60 <col:2, col:9> col:9 struct tc_sfq_qopt     | `-VarDecl 0x143941bc8 <col:2, col:40> col:22 used ctl 'struct tc_sfq_qopt *' cinit     |   `-ImplicitCastExpr 0x143941da8 <col:28, col:40> 'struct tc_sfq_qopt *' <IntegralToPointer>     |     `-CallExpr 0x143941d68 <col:28, col:40> 'int'     |       |-ImplicitCastExpr 0x143941d50 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x143941d10 <col:28> 'int ()' Function 0x143941c58 'nla_data' 'int ()'     |       `-ImplicitCastExpr 0x143941d90 <col:37> 'struct nlattr *' <LValueToRValue>     |         `-DeclRefExpr 0x143941d30 <col:37> 'struct nlattr *' lvalue ParmVar 0x143941428 'opt' 'struct nlattr *'     |-DeclStmt 0x143942010 <line:5:2, col:38>     | |-RecordDecl 0x143941df0 <col:2, col:9> col:9 struct tc_sfq_qopt_v1     | `-VarDecl 0x143941f58 <col:2, col:34> col:25 used ctl_v1 'struct tc_sfq_qopt_v1 *' cinit     |   `-RecoveryExpr 0x143941fd8 <col:34> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x143942178 <line:6:2, col:32>     | |-VarDecl 0x143942040 <col:2, col:15> col:15 used qlen 'unsigned int'     | `-VarDecl 0x1439420c0 <col:2, col:31> col:21 used dropped 'unsigned int' cinit     |   `-ImplicitCastExpr 0x143942148 <col:31> 'unsigned int' <IntegralCast>     |     `-IntegerLiteral 0x143942128 <col:31> 'int' 0     |-DeclStmt 0x1439423b0 <line:7:2, col:28>     | |-RecordDecl 0x143942190 <col:2, col:9> col:9 struct red_parms     | `-VarDecl 0x1439422f8 <col:2, col:24> col:20 used p 'struct red_parms *' cinit     |   `-RecoveryExpr 0x143942378 <col:24> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x143943a20 <line:8:2, col:32>     | |-RecordDecl 0x143943800 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x143943968 <col:2, col:28> col:18 used to_free 'struct sk_buff *' cinit     |   `-RecoveryExpr 0x1439439e8 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x143943b68 <line:9:2, col:29>     | `-VarDecl 0x143943ac8 <col:2, col:25> col:18 used tail 'struct sk_buff *' cinit     |   `-RecoveryExpr 0x143943b48 <col:25> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143943e18 <line:11:2, line:12:11>     | |-RecoveryExpr 0x143943d50 <line:11:6, col:47> '_Bool' contains-errors     | `-ReturnStmt 0x143943e08 <line:12:3, col:11>     |   `-UnaryOperator 0x143943df0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x143943dd8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x143943db8 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143944038 <line:13:2, line:14:24>     | |-RecoveryExpr 0x143943f28 <line:13:6, col:51> '_Bool' contains-errors     | `-BinaryOperator 0x143944018 <line:14:3, col:24> 'struct tc_sfq_qopt_v1 *' contains-errors '='     |   |-DeclRefExpr 0x143943f48 <col:3> 'struct tc_sfq_qopt_v1 *' contains-errors lvalue Var 0x143941f58 'ctl_v1' 'struct tc_sfq_qopt_v1 *'     |   `-ImplicitCastExpr 0x143944000 <col:12, col:24> 'struct tc_sfq_qopt_v1 *' <IntegralToPointer>     |     `-CallExpr 0x143943fc0 <col:12, col:24> 'int'     |       |-ImplicitCastExpr 0x143943fa8 <col:12> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x143943f68 <col:12> 'int ()' Function 0x143941c58 'nla_data' 'int ()'     |       `-ImplicitCastExpr 0x143943fe8 <col:21> 'struct nlattr *' <LValueToRValue>     |         `-DeclRefExpr 0x143943f88 <col:21> 'struct nlattr *' lvalue ParmVar 0x143941428 'opt' 'struct nlattr *'     |-IfStmt 0x143944400 <line:15:2, line:17:11>     | |-BinaryOperator 0x143944338 <line:15:6, line:16:59> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x143944090 <line:15:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x143944058 <col:6> 'struct tc_sfq_qopt *' lvalue Var 0x143941bc8 'ctl' 'struct tc_sfq_qopt *'     | | `-ParenExpr 0x143944318 <line:16:6, col:59> 'int' contains-errors     | |   `-BinaryOperator 0x1439442f8 <col:7, col:54> 'int' contains-errors '||'     | |     |-UnaryOperator 0x143944240 <col:7, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow     | |     | `-CallExpr 0x143944218 <col:8, col:34> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x143944198 <col:8> 'int ()' Function 0x1439440e0 'is_power_of_2' 'int ()'     | |     |   `-RecoveryExpr 0x1439441f0 <col:22, col:27> '<dependent type>' contains-errors lvalue     | |     |     `-DeclRefExpr 0x1439441b8 <col:22> 'struct tc_sfq_qopt *' lvalue Var 0x143941bc8 'ctl' 'struct tc_sfq_qopt *'     | |     `-BinaryOperator 0x1439442d8 <col:39, col:54> 'int' contains-errors '>'     | |       |-RecoveryExpr 0x143944290 <col:39, col:44> '<dependent type>' contains-errors lvalue     | |       | `-DeclRefExpr 0x143944258 <col:39> 'struct tc_sfq_qopt *' lvalue Var 0x143941bc8 'ctl' 'struct tc_sfq_qopt *'     | |       `-IntegerLiteral 0x1439442b8 <col:54> 'int' 65536     | `-ReturnStmt 0x1439443f0 <line:17:3, col:11>     |   `-UnaryOperator 0x1439443d8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1439443c0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x1439443a0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144008da8 <line:21:2, line:25:2>     | |-BinaryOperator 0x143944750 <line:21:6, col:24> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x1439446d0 <col:6> 'struct tc_sfq_qopt_v1 *' contains-errors lvalue Var 0x143941f58 'ctl_v1' 'struct tc_sfq_qopt_v1 *'     | | `-RecoveryExpr 0x143944728 <col:16, col:24> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1439446f0 <col:16> 'struct tc_sfq_qopt_v1 *' contains-errors lvalue Var 0x143941f58 'ctl_v1' 'struct tc_sfq_qopt_v1 *'     | `-CompoundStmt 0x144008d98 <col:33, line:25:2>     |-CallExpr 0x144008f00 <line:26:2, col:19> 'int'     | |-ImplicitCastExpr 0x144008ee8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x144008ea8 <col:2> 'int ()' Function 0x144008df0 'sch_tree_lock' 'int ()'     | `-ImplicitCastExpr 0x144008f28 <col:16> 'struct Qdisc *' <LValueToRValue>     |   `-DeclRefExpr 0x144008ec8 <col:16> 'struct Qdisc *' lvalue ParmVar 0x143929048 'sch' 'struct Qdisc *'     |-IfStmt 0x1440092a8 <line:27:2, line:30:2>     | |-RecoveryExpr 0x144008f78 <line:27:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x144008f40 <col:6> 'struct tc_sfq_qopt *' lvalue Var 0x143941bc8 'ctl' 'struct tc_sfq_qopt *'     | `-CompoundStmt 0x144009288 <col:20, line:30:2>     |   |-BinaryOperator 0x144009060 <line:28:3, col:21> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x144008fd8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x144008fa0 <col:3> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |   | `-RecoveryExpr 0x144009038 <col:16, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x144009000 <col:16> 'struct tc_sfq_qopt *' lvalue Var 0x143941bc8 'ctl' 'struct tc_sfq_qopt *'     |   `-BinaryOperator 0x144009268 <line:29:3, col:48> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x1440090b8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x144009080 <col:3> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |     `-CallExpr 0x144009240 <col:23, col:48> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x1440091c0 <col:23> 'int ()' Function 0x144009108 'SFQ_ALLOT_SIZE' 'int ()'     |       `-RecoveryExpr 0x144009218 <col:38, col:41> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1440091e0 <col:38> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |-IfStmt 0x144009840 <line:34:2, line:37:2>     | |-RecoveryExpr 0x1440095e0 <line:34:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1440095a8 <col:6> 'struct tc_sfq_qopt *' lvalue Var 0x143941bc8 'ctl' 'struct tc_sfq_qopt *'     | `-CompoundStmt 0x144009828 <col:20, line:37:2>     |   `-BinaryOperator 0x1440096c8 <line:35:3, col:21> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x144009640 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x144009608 <col:3> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |     `-RecoveryExpr 0x1440096a0 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x144009668 <col:16> 'struct tc_sfq_qopt *' lvalue Var 0x143941bc8 'ctl' 'struct tc_sfq_qopt *'     |-IfStmt 0x14400a198 <line:38:2, line:52:2>     | |-ImplicitCastExpr 0x144009880 <line:38:6> 'struct tc_sfq_qopt_v1 *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x144009860 <col:6> 'struct tc_sfq_qopt_v1 *' contains-errors lvalue Var 0x143941f58 'ctl_v1' 'struct tc_sfq_qopt_v1 *'     | `-CompoundStmt 0x14400a170 <col:14, line:52:2>     |   |-IfStmt 0x144009f90 <line:41:3, line:49:3>     |   | |-ImplicitCastExpr 0x1440099f8 <line:41:7> 'struct red_parms *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x1440099d8 <col:7> 'struct red_parms *' contains-errors lvalue Var 0x1439422f8 'p' 'struct red_parms *'     |   | `-CompoundStmt 0x144009f78 <col:10, line:49:3>     |   |   `-CallExpr 0x144009b90 <line:42:4, col:24> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x144009af0 <col:4> 'int ()' Function 0x144009a38 'swap' 'int ()'     |   |     |-RecoveryExpr 0x144009b48 <col:9, col:12> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x144009b10 <col:9> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |   |     `-DeclRefExpr 0x144009b70 <col:23> 'struct red_parms *' contains-errors lvalue Var 0x1439422f8 'p' 'struct red_parms *'     |   |-BinaryOperator 0x14400a070 <line:50:3, col:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x144009fe8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x144009fb0 <col:3> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |   | `-RecoveryExpr 0x14400a048 <col:14, col:22> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14400a010 <col:14> 'struct tc_sfq_qopt_v1 *' contains-errors lvalue Var 0x143941f58 'ctl_v1' 'struct tc_sfq_qopt_v1 *'     |   `-BinaryOperator 0x14400a150 <line:51:3, col:25> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x14400a0c8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14400a090 <col:3> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |     `-RecoveryExpr 0x14400a128 <col:17, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14400a0f0 <col:17> 'struct tc_sfq_qopt_v1 *' contains-errors lvalue Var 0x143941f58 'ctl_v1' 'struct tc_sfq_qopt_v1 *'     |-IfStmt 0x14400a528 <line:53:2, line:56:2>     | |-RecoveryExpr 0x14400a1f0 <line:53:6, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14400a1b8 <col:6> 'struct tc_sfq_qopt *' lvalue Var 0x143941bc8 'ctl' 'struct tc_sfq_qopt *'     | `-CompoundStmt 0x14400a518 <col:18, line:56:2>     |-BinaryOperator 0x14400a610 <line:58:2, col:16> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x14400a548 <col:2> 'unsigned int' lvalue Var 0x143942040 'qlen' 'unsigned int'     | `-CXXDependentScopeMemberExpr 0x14400a5c8 <col:9, col:16> '<dependent type>' contains-errors lvalue .qlen     |   `-RecoveryExpr 0x14400a5a0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14400a568 <col:9> 'struct Qdisc *' lvalue ParmVar 0x143929048 'sch' 'struct Qdisc *'     |-WhileStmt 0x14400aae8 <line:59:2, line:63:2>     | |-BinaryOperator 0x14400a738 <line:59:9, col:26> 'int' contains-errors '>'     | | |-CXXDependentScopeMemberExpr 0x14400a690 <col:9, col:16> '<dependent type>' contains-errors lvalue .qlen     | | | `-RecoveryExpr 0x14400a668 <col:9, col:14> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14400a630 <col:9> 'struct Qdisc *' lvalue ParmVar 0x143929048 'sch' 'struct Qdisc *'     | | `-RecoveryExpr 0x14400a710 <col:23, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14400a6d8 <col:23> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     | `-CompoundStmt 0x14400aac8 <col:33, line:63:2>     |   |-CompoundAssignOperator 0x14400a9b0 <line:60:3, col:36> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     |   | |-DeclRefExpr 0x14400a758 <col:3> 'unsigned int' lvalue Var 0x1439420c0 'dropped' 'unsigned int'     |   | `-ImplicitCastExpr 0x14400a998 <col:14, col:36> 'unsigned int' contains-errors <IntegralCast>     |   |   `-CallExpr 0x14400a950 <col:14, col:36> 'int' contains-errors     |   |     |-ImplicitCastExpr 0x14400a938 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14400a858 <col:14> 'int ()' Function 0x14400a7a0 'sfq_drop' 'int ()'     |   |     |-ImplicitCastExpr 0x14400a980 <col:23> 'struct Qdisc *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14400a878 <col:23> 'struct Qdisc *' lvalue ParmVar 0x143929048 'sch' 'struct Qdisc *'     |   |     `-UnaryOperator 0x14400a920 <col:28, col:29> 'struct sk_buff **' contains-errors prefix '&' cannot overflow     |   |       `-DeclRefExpr 0x14400a898 <col:29> 'struct sk_buff *' contains-errors lvalue Var 0x143943968 'to_free' 'struct sk_buff *'     |   `-IfStmt 0x14400aaa8 <line:61:3, line:62:11>     |     |-UnaryOperator 0x14400aa18 <line:61:7, col:8> 'int' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x14400aa00 <col:8> 'struct sk_buff *' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x14400a9e0 <col:8> 'struct sk_buff *' contains-errors lvalue Var 0x143943ac8 'tail' 'struct sk_buff *'     |     `-BinaryOperator 0x14400aa88 <line:62:4, col:11> 'struct sk_buff *' contains-errors '='     |       |-DeclRefExpr 0x14400aa30 <col:4> 'struct sk_buff *' contains-errors lvalue Var 0x143943ac8 'tail' 'struct sk_buff *'     |       `-ImplicitCastExpr 0x14400aa70 <col:11> 'struct sk_buff *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14400aa50 <col:11> 'struct sk_buff *' contains-errors lvalue Var 0x143943968 'to_free' 'struct sk_buff *'     |-CallExpr 0x14400ac78 <line:65:2, col:31> 'int' contains-errors     | |-ImplicitCastExpr 0x14400ac60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14400ac00 <col:2> 'int ()' Function 0x14400ab30 'rtnl_kfree_skbs' 'int ()'     | |-ImplicitCastExpr 0x14400aca8 <col:18> 'struct sk_buff *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14400ac20 <col:18> 'struct sk_buff *' contains-errors lvalue Var 0x143943968 'to_free' 'struct sk_buff *'     | `-ImplicitCastExpr 0x14400acc0 <col:27> 'struct sk_buff *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x14400ac40 <col:27> 'struct sk_buff *' contains-errors lvalue Var 0x143943ac8 'tail' 'struct sk_buff *'     |-CallExpr 0x14400af00 <line:66:2, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14400adb8 <col:2> 'int ()' Function 0x14400ad00 'qdisc_tree_reduce_backlog' 'int ()'     | |-DeclRefExpr 0x14400add8 <col:28> 'struct Qdisc *' lvalue ParmVar 0x143929048 'sch' 'struct Qdisc *'     | |-BinaryOperator 0x14400aec0 <col:33, col:47> '<dependent type>' contains-errors '-'     | | |-DeclRefExpr 0x14400adf8 <col:33> 'unsigned int' lvalue Var 0x143942040 'qlen' 'unsigned int'     | | `-CXXDependentScopeMemberExpr 0x14400ae78 <col:40, col:47> '<dependent type>' contains-errors lvalue .qlen     | |   `-RecoveryExpr 0x14400ae50 <col:40, col:45> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14400ae18 <col:40> 'struct Qdisc *' lvalue ParmVar 0x143929048 'sch' 'struct Qdisc *'     | `-DeclRefExpr 0x14400aee0 <col:53> 'unsigned int' lvalue Var 0x1439420c0 'dropped' 'unsigned int'     |-CallExpr 0x14400b0b0 <line:68:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14400b018 <col:2> 'int ()' Function 0x14400af60 'del_timer' 'int ()'     | `-UnaryOperator 0x14400b098 <col:12, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14400b070 <col:13, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14400b038 <col:13> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |-IfStmt 0x14400b4e0 <line:69:2, line:72:2>     | |-RecoveryExpr 0x14400b110 <line:69:6, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14400b0d8 <col:6> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     | `-CompoundStmt 0x14400b4c8 <col:25, line:72:2>     |   `-BinaryOperator 0x14400b4a8 <line:71:3, col:33> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x14400b348 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14400b310 <col:3> 'struct sfq_sched_data *' lvalue Var 0x1439417b8 'q' 'struct sfq_sched_data *'     |     `-CallExpr 0x14400b488 <col:21, col:33> 'int'     |       `-ImplicitCastExpr 0x14400b470 <col:21> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x14400b450 <col:21> 'int ()' Function 0x14400b398 'prandom_u32' 'int ()'     |-CallExpr 0x14400b638 <line:73:2, col:21> 'int'     | |-ImplicitCastExpr 0x14400b620 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14400b5e0 <col:2> 'int ()' Function 0x14400b528 'sch_tree_unlock' 'int ()'     | `-ImplicitCastExpr 0x14400b660 <col:18> 'struct Qdisc *' <LValueToRValue>     |   `-DeclRefExpr 0x14400b600 <col:18> 'struct Qdisc *' lvalue ParmVar 0x143929048 'sch' 'struct Qdisc *'     |-CallExpr 0x14400b7b0 <line:74:2, col:9> 'int' contains-errors     | |-ImplicitCastExpr 0x14400b798 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14400b758 <col:2> 'int ()' Function 0x14400b6a0 'kfree' 'int ()'     | `-ImplicitCastExpr 0x14400b7d8 <col:8> 'struct red_parms *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x14400b778 <col:8> 'struct red_parms *' contains-errors lvalue Var 0x1439422f8 'p' 'struct red_parms *'     `-ReturnStmt 0x14400b810 <line:75:2, col:9>       `-IntegerLiteral 0x14400b7f0 <col:9> 'int' 0 ","19907":"`-FunctionDecl 0x12d008408  line:1:5 invalid crypt_activate_by_token 'int (struct crypt_device *, const char *, int, void *, int)'   |-ParmVarDecl 0x12c00e248 <col:29, col:50> col:50 used cd 'struct crypt_device *'   |-ParmVarDecl 0x12c00e2c8 <line:2:2, col:14> col:14 used name 'const char *'   |-ParmVarDecl 0x12c00e348 <col:20, col:24> col:24 used token 'int'   |-ParmVarDecl 0x12d008200 <col:31, col:37> col:37 used usrptr 'void *'   |-ParmVarDecl 0x12d008298 <col:45, col:54> col:54 invalid flags 'int'   `-CompoundStmt 0x12d008850 <line:3:1, line:5:1>     `-ReturnStmt 0x12d008840 <line:4:2, col:82>       `-CallExpr 0x12d0087e0 <col:9, col:82> '<dependent type>' contains-errors         |-DeclRefExpr 0x12d008630 <col:9> 'int ()' Function 0x12d008578 'crypt_activate_by_token_pin' 'int ()'         |-DeclRefExpr 0x12d008650 <col:37> 'struct crypt_device *' lvalue ParmVar 0x12c00e248 'cd' 'struct crypt_device *'         |-DeclRefExpr 0x12d008670 <col:41> 'const char *' lvalue ParmVar 0x12c00e2c8 'name' 'const char *'         |-RecoveryExpr 0x12d0087a0 <col:47> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x12d0086a8 <col:53> 'int' lvalue ParmVar 0x12c00e348 'token' 'int'         |-RecoveryExpr 0x12d0087c0 <col:60> '<dependent type>' contains-errors lvalue         |-IntegerLiteral 0x12d0086e0 <col:66> 'int' 0         |-DeclRefExpr 0x12d008700 <col:69> 'void *' lvalue ParmVar 0x12d008200 'usrptr' 'void *'         `-RecoveryExpr 0x12d008720 <col:77> '<dependent type>' contains-errors lvalue ","19951":"`-FunctionDecl 0x13610fc58  line:1:1 invalid php_libxml_input_buffer_noload 'int (const char *, int)'   |-ParmVarDecl 0x13610fad8 <col:32, col:44> col:44 URI 'const char *'   |-ParmVarDecl 0x13610fb70 <col:49, col:65> col:65 invalid enc 'int'   `-CompoundStmt 0x13610fd58 <line:2:1, line:4:1>     `-ReturnStmt 0x13610fd48 <line:3:2, col:9>       `-RecoveryExpr 0x13610fd28 <col:9> '<dependent type>' contains-errors lvalue ","19178":"`-FunctionDecl 0x154928110  line:1:6 main_init 'void ()'   `-CompoundStmt 0x154942548 <col:18, line:37:1>     |-IfStmt 0x1549285b8 <line:17:5, line:18:20>     | |-CallExpr 0x1549283d8 <line:17:8, col:17> 'int'     | | `-ImplicitCastExpr 0x1549283c0 <col:8> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x154928370 <col:8> 'int ()' Function 0x1549282b8 'ssl_init' 'int ()'     | `-CallExpr 0x154928578 <line:18:9, col:20> 'int'     |   |-ImplicitCastExpr 0x154928560 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1549284d8 <col:9> 'int ()' Function 0x154928420 'fatal' 'int ()'     |   `-ImplicitCastExpr 0x1549285a0 <col:15> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x154928540 <col:15> 'char[4]' lvalue \"STR\"     |-IfStmt 0x1549287a8 <line:19:5, line:20:20>     | |-CallExpr 0x1549286f0 <line:19:8, col:22> 'int'     | | `-ImplicitCastExpr 0x1549286d8 <col:8> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x1549286b8 <col:8> 'int ()' Function 0x154928600 'sthreads_init' 'int ()'     | `-CallExpr 0x154928768 <line:20:9, col:20> 'int'     |   |-ImplicitCastExpr 0x154928750 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x154928710 <col:9> 'int ()' Function 0x154928420 'fatal' 'int ()'     |   `-ImplicitCastExpr 0x154928790 <col:15> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x154928730 <col:15> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1549418f0 <line:21:5, col:22> 'int'     | `-ImplicitCastExpr 0x1549418d8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1549418b8 <col:5> 'int ()' Function 0x154941800 'options_defaults' 'int ()'     |-CallExpr 0x154941a28 <line:22:5, col:19> 'int'     | `-ImplicitCastExpr 0x154941a10 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x1549419f0 <col:5> 'int ()' Function 0x154941938 'options_apply' 'int ()'     |-CallExpr 0x154941b60 <line:24:5, col:16> 'int'     | `-ImplicitCastExpr 0x154941b48 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x154941b28 <col:5> 'int ()' Function 0x154941a70 'get_limits' 'int ()'     |-IfStmt 0x154941f50 <line:27:5, line:29:18>     | |-CallExpr 0x154941e40 <line:27:8, col:36> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x154941d98 <col:8> 'int ()' Function 0x154941ce0 'pipe_init' 'int ()'     | | |-RecoveryExpr 0x154941e20 <col:18> '<dependent type>' contains-errors lvalue     | | `-StringLiteral 0x154941dd0 <col:31> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x154941f10 <line:28:9, line:29:18> 'int'     |   |-ImplicitCastExpr 0x154941ef8 <line:28:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x154941e70 <col:9> 'int ()' Function 0x154928420 'fatal' 'int ()'     |   `-ImplicitCastExpr 0x154941f38 <col:15, line:29:13> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x154941ed0 <line:28:15, line:29:13> 'char[7]' lvalue \"STRSTR\"     |-IfStmt 0x1549420e8 <line:30:5, line:32:18>     | |-CallExpr 0x154942018 <line:30:8, col:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x154941f70 <col:8> 'int ()' Function 0x154941ce0 'pipe_init' 'int ()'     | | |-RecoveryExpr 0x154941ff8 <col:18> '<dependent type>' contains-errors lvalue     | | `-StringLiteral 0x154941fa8 <col:34> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x1549420a8 <line:31:9, line:32:18> 'int'     |   |-ImplicitCastExpr 0x154942090 <line:31:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x154942048 <col:9> 'int ()' Function 0x154928420 'fatal' 'int ()'     |   `-ImplicitCastExpr 0x1549420d0 <col:15, line:32:13> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x154942068 <line:31:15, line:32:13> 'char[7]' lvalue \"STRSTR\"     |-CallExpr 0x154942268 <line:33:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1549421e8 <col:5> 'int ()' Function 0x154942130 'stunnel_info' 'int ()'     | `-RecoveryExpr 0x154942248 <col:18> '<dependent type>' contains-errors lvalue     `-IfStmt 0x154942528 <line:34:5, line:36:24>       |-BinaryOperator 0x154942308 <line:34:8, col:20> 'int' contains-errors '>'       | |-RecoveryExpr 0x1549422e8 <col:8> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x1549422a8 <col:20> 'int' 0       `-CallExpr 0x1549424f0 <line:35:9, line:36:24> '<dependent type>' contains-errors         |-DeclRefExpr 0x154942408 <line:35:9> 'int ()' Function 0x154942350 's_log' 'int ()'         |-RecoveryExpr 0x1549424b0 <col:15> '<dependent type>' contains-errors lvalue         |-StringLiteral 0x154942440 <col:25> 'char[4]' lvalue \"STR\"         `-RecoveryExpr 0x1549424d0 <line:36:13> '<dependent type>' contains-errors lvalue ","19523":"`-FunctionDecl 0x125008488  col:3 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x125008588 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1250085f0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x125008530 <<invalid sloc>> Implicit 906   `-FormatAttr 0x125008668 <col:3> Implicit printf 2 3 ","20048":"`-FunctionDecl 0x13b9281a0  line:1:7 Tick 'void (int)'   |-ParmVarDecl 0x13b9280d8 <col:12> col:12 time_t 'int'   `-CompoundStmt 0x13b9285e8 <line:2:2, line:15:2>     `-IfStmt 0x13b9285c8 <line:3:3, line:14:3>       |-RecoveryExpr 0x13b928388 <line:3:7, col:49> '_Bool' contains-errors       `-CompoundStmt 0x13b9285b0 <line:4:3, line:14:3>         `-IfStmt 0x13b928560 <line:6:4, line:11:4>           |-RecoveryExpr 0x13b928468 <line:6:8, col:44> '_Bool' contains-errors           `-CompoundStmt 0x13b928550 <line:7:4, line:11:4> ","20157":"`-FunctionDecl 0x12500e358  line:1:12 ip_mc_check_iphdr 'int (struct sk_buff *)' static   |-ParmVarDecl 0x12500e248 <col:30, col:46> col:46 used skb 'struct sk_buff *'   `-CompoundStmt 0x125029ca0 <line:2:1, line:32:1>     |-DeclStmt 0x125026838 <line:3:2, col:25>     | |-RecordDecl 0x125026650 <col:8, col:15> col:15 struct iphdr     | `-VarDecl 0x1250267b8 <col:2, col:22> col:22 used iph 'const struct iphdr *'     |-DeclStmt 0x1250268d0 <line:4:2, col:18>     | `-VarDecl 0x125026868 <col:2, col:15> col:15 used len 'unsigned int'     |-DeclStmt 0x125026bc8 <line:5:2, col:62>     | `-VarDecl 0x125026900 <col:2, col:15> col:15 used offset 'unsigned int'     |-IfStmt 0x125026e58 <line:7:2, line:8:11>     | |-UnaryOperator 0x125026d98 <line:7:6, col:32> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x125026d38 <col:7, col:32> 'int'     | |   |-ImplicitCastExpr 0x125026d20 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x125026cc0 <col:7> 'int ()' Function 0x125026c08 'pskb_may_pull' 'int ()'     | |   |-ImplicitCastExpr 0x125026d68 <col:21> 'struct sk_buff *' <LValueToRValue>     | |   | `-DeclRefExpr 0x125026ce0 <col:21> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     | |   `-ImplicitCastExpr 0x125026d80 <col:26> 'unsigned int' <LValueToRValue>     | |     `-DeclRefExpr 0x125026d00 <col:26> 'unsigned int' lvalue Var 0x125026900 'offset' 'unsigned int'     | `-ReturnStmt 0x125026e48 <line:8:3, col:11>     |   `-UnaryOperator 0x125026e30 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x125026e18 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x125026df8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x125027028 <line:10:2, col:18> 'const struct iphdr *' '='     | |-DeclRefExpr 0x125026e78 <col:2> 'const struct iphdr *' lvalue Var 0x1250267b8 'iph' 'const struct iphdr *'     | `-ImplicitCastExpr 0x125027010 <col:8, col:18> 'const struct iphdr *' <IntegralToPointer>     |   `-CallExpr 0x125026fd0 <col:8, col:18> 'int'     |     |-ImplicitCastExpr 0x125026fb8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x125026f78 <col:8> 'int ()' Function 0x125026ec0 'ip_hdr' 'int ()'     |     `-ImplicitCastExpr 0x125026ff8 <col:15> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x125026f98 <col:15> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     |-IfStmt 0x125027398 <line:12:2, line:13:11>     | |-RecoveryExpr 0x1250272d0 <line:12:6, col:55> '_Bool' contains-errors     | `-ReturnStmt 0x125027388 <line:13:3, col:11>     |   `-UnaryOperator 0x125027370 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x125027358 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x125027338 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125029278 <line:17:2, line:18:11>     | |-UnaryOperator 0x1250275b8 <line:17:6, col:32> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x125027558 <col:7, col:32> 'int'     | |   |-ImplicitCastExpr 0x125027540 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1250274e0 <col:7> 'int ()' Function 0x125026c08 'pskb_may_pull' 'int ()'     | |   |-ImplicitCastExpr 0x125027588 <col:21> 'struct sk_buff *' <LValueToRValue>     | |   | `-DeclRefExpr 0x125027500 <col:21> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     | |   `-ImplicitCastExpr 0x1250275a0 <col:26> 'unsigned int' <LValueToRValue>     | |     `-DeclRefExpr 0x125027520 <col:26> 'unsigned int' lvalue Var 0x125026900 'offset' 'unsigned int'     | `-ReturnStmt 0x125029268 <line:18:3, col:11>     |   `-UnaryOperator 0x125029250 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x125029238 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x125029218 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x125029368 <line:20:2, col:18> 'const struct iphdr *' '='     | |-DeclRefExpr 0x125029298 <col:2> 'const struct iphdr *' lvalue Var 0x1250267b8 'iph' 'const struct iphdr *'     | `-ImplicitCastExpr 0x125029350 <col:8, col:18> 'const struct iphdr *' <IntegralToPointer>     |   `-CallExpr 0x125029310 <col:8, col:18> 'int'     |     |-ImplicitCastExpr 0x1250292f8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1250292b8 <col:8> 'int ()' Function 0x125026ec0 'ip_hdr' 'int ()'     |     `-ImplicitCastExpr 0x125029338 <col:15> 'struct sk_buff *' <LValueToRValue>     |       `-DeclRefExpr 0x1250292d8 <col:15> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     |-IfStmt 0x1250296c8 <line:22:2, line:23:11>     | |-RecoveryExpr 0x125029600 <line:22:6, col:48> '_Bool' contains-errors     | `-ReturnStmt 0x1250296b8 <line:23:3, col:11>     |   `-UnaryOperator 0x1250296a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x125029688 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x125029668 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x125029948 <line:25:2, col:52> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x1250296e8 <col:2> 'unsigned int' lvalue Var 0x125026868 'len' 'unsigned int'     | `-BinaryOperator 0x125029928 <col:8, col:52> '<dependent type>' contains-errors '+'     |   |-CallExpr 0x125029760 <col:8, col:30> 'int'     |   | |-ImplicitCastExpr 0x125029748 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x125029708 <col:8> 'int ()' Function 0x1250269d8 'skb_network_offset' 'int ()'     |   | `-ImplicitCastExpr 0x125029788 <col:27> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x125029728 <col:27> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     |   `-CallExpr 0x125029900 <col:34, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x125029880 <col:34> 'int ()' Function 0x1250297c8 'ntohs' 'int ()'     |     `-RecoveryExpr 0x1250298d8 <col:40, col:45> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1250298a0 <col:40> 'const struct iphdr *' lvalue Var 0x1250267b8 'iph' 'const struct iphdr *'     |-CallExpr 0x125029c10 <line:29:2, col:38> 'int'     | |-ImplicitCastExpr 0x125029bf8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x125029b98 <col:2> 'int ()' Function 0x125029ae0 'skb_set_transport_header' 'int ()'     | |-ImplicitCastExpr 0x125029c40 <col:27> 'struct sk_buff *' <LValueToRValue>     | | `-DeclRefExpr 0x125029bb8 <col:27> 'struct sk_buff *' lvalue ParmVar 0x12500e248 'skb' 'struct sk_buff *'     | `-ImplicitCastExpr 0x125029c58 <col:32> 'unsigned int' <LValueToRValue>     |   `-DeclRefExpr 0x125029bd8 <col:32> 'unsigned int' lvalue Var 0x125026900 'offset' 'unsigned int'     `-ReturnStmt 0x125029c90 <line:31:2, col:9>       `-IntegerLiteral 0x125029c70 <col:9> 'int' 0 ","19726":"`-FunctionDecl 0x13902b5c0  col:2 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x13902b6c0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x13902b728 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13902b668 <<invalid sloc>> Implicit 885 ","20086":"`-FunctionDecl 0x12300e350  line:1:6 kvm_lapic_sync_to_vapic 'void (struct kvm_vcpu *)'   |-ParmVarDecl 0x12300e248 <col:30, col:47> col:47 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x1229234f8 <line:2:1, line:25:1>     |-DeclStmt 0x123026778 <line:4:2, col:22>     | |-VarDecl 0x123026678 <col:2, col:6> col:6 used max_irr 'int'     | `-VarDecl 0x1230266f8 <col:2, col:15> col:15 used max_isr 'int'     |-DeclStmt 0x123026a20 <line:5:2, col:42>     | |-RecordDecl 0x123026790 <col:2, col:9> col:9 struct kvm_lapic     | `-VarDecl 0x1230268f8 <col:2, col:38> col:20 used apic 'struct kvm_lapic *' cinit     |   `-CXXDependentScopeMemberExpr 0x1230269c0 <col:27, col:38> '<dependent type>' contains-errors lvalue .apic     |     `-RecoveryExpr 0x123026998 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x123026960 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x12300e248 'vcpu' 'struct kvm_vcpu *'     |-DeclStmt 0x123026ab8 <line:6:2, col:13>     | `-VarDecl 0x123026a50 <col:2, col:8> col:8 used vapic 'void *'     |-CallExpr 0x123026c88 <line:8:2, col:38> 'int' contains-errors     | |-ImplicitCastExpr 0x123026c70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x123026be0 <col:2> 'int ()' Function 0x123026b28 'apic_sync_pv_eoi_to_guest' 'int ()'     | |-ImplicitCastExpr 0x123026cb8 <col:28> 'struct kvm_vcpu *' <LValueToRValue>     | | `-DeclRefExpr 0x123026c00 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x12300e248 'vcpu' 'struct kvm_vcpu *'     | `-ImplicitCastExpr 0x123026cd0 <col:34> 'struct kvm_lapic *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x123026c20 <col:34> 'struct kvm_lapic *' contains-errors lvalue Var 0x1230268f8 'apic' 'struct kvm_lapic *'     |-IfStmt 0x123026f80 <line:10:2, line:11:3>     | |-UnaryOperator 0x123026f58 <line:10:6, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x123026f28 <col:7, col:64> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x123026dc8 <col:7> 'int ()' Function 0x123026d10 'test_bit' 'int ()'     | |   |-RecoveryExpr 0x123026f08 <col:16> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x123026ea8 <col:38, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x123026e60 <col:39, col:50> '<dependent type>' contains-errors lvalue .apic_attention     | |       `-RecoveryExpr 0x123026e38 <col:39, col:45> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x123026e00 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x12300e248 'vcpu' 'struct kvm_vcpu *'     | `-ReturnStmt 0x123026f70 <line:11:3>     |-BinaryOperator 0x1230272e0 <line:14:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x123027148 <col:2> 'int' lvalue Var 0x123026678 'max_irr' 'int'     | `-CallExpr 0x1230272a0 <col:12, col:38> 'int' contains-errors     |   |-ImplicitCastExpr 0x123027288 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x123027248 <col:12> 'int ()' Function 0x123027190 'apic_find_highest_irr' 'int ()'     |   `-ImplicitCastExpr 0x1230272c8 <col:34> 'struct kvm_lapic *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x123027268 <col:34> 'struct kvm_lapic *' contains-errors lvalue Var 0x1230268f8 'apic' 'struct kvm_lapic *'     |-IfStmt 0x1230273d8 <line:15:2, line:16:13>     | |-BinaryOperator 0x123027358 <line:15:6, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x123027340 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x123027300 <col:6> 'int' lvalue Var 0x123026678 'max_irr' 'int'     | | `-IntegerLiteral 0x123027320 <col:16> 'int' 0     | `-BinaryOperator 0x1230273b8 <line:16:3, col:13> 'int' '='     |   |-DeclRefExpr 0x123027378 <col:3> 'int' lvalue Var 0x123026678 'max_irr' 'int'     |   `-IntegerLiteral 0x123027398 <col:13> 'int' 0     |-BinaryOperator 0x123027590 <line:17:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x1230273f8 <col:2> 'int' lvalue Var 0x1230266f8 'max_isr' 'int'     | `-CallExpr 0x123027550 <col:12, col:38> 'int' contains-errors     |   |-ImplicitCastExpr 0x123027538 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1230274f8 <col:12> 'int ()' Function 0x123027440 'apic_find_highest_isr' 'int ()'     |   `-ImplicitCastExpr 0x123027578 <col:34> 'struct kvm_lapic *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x123027518 <col:34> 'struct kvm_lapic *' contains-errors lvalue Var 0x1230268f8 'apic' 'struct kvm_lapic *'     |-IfStmt 0x122922c98 <line:18:2, line:19:13>     | |-BinaryOperator 0x122922c18 <line:18:6, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x122922c00 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1230275b0 <col:6> 'int' lvalue Var 0x1230266f8 'max_isr' 'int'     | | `-IntegerLiteral 0x1230275d0 <col:16> 'int' 0     | `-BinaryOperator 0x122922c78 <line:19:3, col:13> 'int' '='     |   |-DeclRefExpr 0x122922c38 <col:3> 'int' lvalue Var 0x1230266f8 'max_isr' 'int'     |   `-IntegerLiteral 0x122922c58 <col:13> 'int' 0     |-BinaryOperator 0x1229230d8 <line:22:2, col:49> 'void *' contains-errors '='     | |-DeclRefExpr 0x122922ea0 <col:2> 'void *' lvalue Var 0x123026a50 'vapic' 'void *'     | `-CallExpr 0x1229230b0 <col:10, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x122922fa0 <col:10> 'int ()' Function 0x122922ee8 'kmap_atomic' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x122923068 <col:22, col:39> '<dependent type>' contains-errors lvalue ->vapic_page     |     `-CXXDependentScopeMemberExpr 0x122923020 <col:22, col:33> '<dependent type>' contains-errors lvalue .apic     |       `-RecoveryExpr 0x122922ff8 <col:22, col:28> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x122922fc0 <col:22> 'struct kvm_vcpu *' lvalue ParmVar 0x12300e248 'vcpu' 'struct kvm_vcpu *'     `-CallExpr 0x1229234b8 <line:24:2, col:21> 'int'       |-ImplicitCastExpr 0x1229234a0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x122923460 <col:2> 'int ()' Function 0x1229233a8 'kunmap_atomic' 'int ()'       `-ImplicitCastExpr 0x1229234e0 <col:16> 'void *' <LValueToRValue>         `-DeclRefExpr 0x122923480 <col:16> 'void *' lvalue Var 0x123026a50 'vapic' 'void *' ","19683":"`-FunctionDecl 0x11d928258  line:1:12 invalid install_relocation_handler 'int (int, int)' static   |-ParmVarDecl 0x11d9280d8 <col:39, col:43> col:43 used num_cpus 'int'   |-ParmVarDecl 0x11d928170 <col:53, col:60> col:60 invalid save_state_size 'int'   `-CompoundStmt 0x11d942098 <line:2:1, line:21:1>     |-DeclStmt 0x11d941a88 <line:3:2, line:9:3>     | |-RecordDecl 0x11d928310 <line:3:2, col:9> col:9 struct smm_loader_params     | `-VarDecl 0x11d928408 <col:2, col:27> col:27 invalid smm_params 'struct smm_loader_params'     |-IfStmt 0x11d941ee8 <line:15:2, line:16:11>     | |-CallExpr 0x11d941e78 <line:15:6, col:46> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x11d941e20 <col:6> 'int ()' Function 0x11d941d68 'smm_setup_relocation_handler' 'int ()'     | | `-UnaryOperator 0x11d941e60 <col:35, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x11d941e40 <col:36> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x11d941ed8 <line:16:3, col:11>     |   `-UnaryOperator 0x11d941ec0 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x11d941ea0 <col:11> 'int' 1     |-CallExpr 0x11d942040 <line:18:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11d941fe8 <col:2> 'int ()' Function 0x11d941f30 'adjust_smm_apic_id_map' 'int ()'     | `-UnaryOperator 0x11d942028 <col:25, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11d942008 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x11d942088 <line:20:2, col:9>       `-IntegerLiteral 0x11d942068 <col:9> 'int' 0 ","19767":"`-FunctionDecl 0x124828758  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12482a458 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12482a4c0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12482a528 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12482a400 <<invalid sloc>> Implicit 882 ","19195":"`-FunctionDecl 0x14180da60  col:14 implicit used scanf 'int (const char *restrict, ...)' extern   |-ParmVarDecl 0x14180db60 <<invalid sloc>> <invalid sloc> 'const char *restrict'   |-BuiltinAttr 0x14180db08 <<invalid sloc>> Implicit 911   `-FormatAttr 0x14180dbd0 <col:14> Implicit scanf 1 2 ","20008":"`-FunctionDecl 0x147923408  col:5 implicit used _exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x147923508 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x1479234b0 <<invalid sloc>> Implicit 959 ","19988":"`-FunctionDecl 0x13a827400  line:1:10 invalid dm_get_size 'int (struct mapped_device *)'   |-ParmVarDecl 0x13a80e268 <col:22, col:44> col:44 used md 'struct mapped_device *'   `-CompoundStmt 0x13a8276c8 <line:2:1, line:4:1>     `-ReturnStmt 0x13a8276b8 <line:3:2, col:30>       `-CallExpr 0x13a827690 <col:9, col:30> '<dependent type>' contains-errors         |-DeclRefExpr 0x13a827610 <col:9> 'int ()' Function 0x13a827558 'get_capacity' 'int ()'         `-RecoveryExpr 0x13a827668 <col:22, col:26> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x13a827630 <col:22> 'struct mapped_device *' lvalue ParmVar 0x13a80e268 'md' 'struct mapped_device *' ","19347":"`-FunctionDecl 0x14800ddf8  line:1:1 invalid load_get 'int (int *)'   |-ParmVarDecl 0x14800dd28 <col:10, col:27> col:27 invalid self 'int *'   `-CompoundStmt 0x148028c80 <line:2:1, line:33:1>     |-DeclStmt 0x14800df88 <line:6:5, col:12>     | `-VarDecl 0x14800df20 <col:5, col:11> col:11 used s 'char *'     |-IfStmt 0x14800e290 <line:8:5, line:9:17>     | |-RecoveryExpr 0x14800e228 <line:8:9, col:49> '_Bool' contains-errors     | `-ReturnStmt 0x14800e280 <line:9:9, col:17>     |   `-UnaryOperator 0x14800e268 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x14800e248 <col:17> 'int' 1     |-IfStmt 0x148027f58 <line:10:5, line:11:29>     | |-BinaryOperator 0x14800e328 <line:10:9, col:15> 'int' contains-errors '<'     | | |-RecoveryExpr 0x14800e308 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14800e2c8 <col:15> 'int' 2     | `-ReturnStmt 0x148027f48 <line:11:9, col:29>     |   `-CallExpr 0x148027f28 <col:16, col:29> 'int'     |     `-ImplicitCastExpr 0x148027f10 <col:16> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x148027eb8 <col:16> 'int ()' Function 0x148027e00 'bad_readline' 'int ()'     |-IfStmt 0x148028200 <line:14:5, line:15:17>     | |-BinaryOperator 0x148028198 <line:14:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x148028158 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x148028178 <col:16> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1480281f0 <line:15:9, col:17>     |   `-UnaryOperator 0x1480281d8 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x1480281b8 <col:17> 'int' 1     |-IfStmt 0x148028720 <line:17:5, line:20:5>     | |-BinaryOperator 0x1480285a0 <line:17:9, col:37> 'int' contains-errors '&&'     | | |-BinaryOperator 0x148028548 <col:9, col:17> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x148028528 <col:9> '<dependent type>' contains-errors lvalue     | | | `-UnaryOperator 0x148028398 <col:16, col:17> 'int' prefix '-'     | | |   `-IntegerLiteral 0x148028378 <col:17> 'int' 1     | | `-CallExpr 0x148028580 <col:22, col:37> 'int'     | |   `-ImplicitCastExpr 0x148028568 <col:22> 'int (*)()' <FunctionToPointerDecay>     | |     `-DeclRefExpr 0x1480284b0 <col:22> 'int ()' Function 0x1480283f8 'PyErr_Occurred' 'int ()'     | `-CompoundStmt 0x148028708 <col:40, line:20:5>     |   `-ReturnStmt 0x1480286f8 <line:19:9, col:17>     |     `-UnaryOperator 0x1480286e0 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x1480286c0 <col:17> 'int' 1     |-IfStmt 0x148028a70 <line:23:5, line:28:5>     | |-RecoveryExpr 0x148028860 <line:23:9, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x148028a58 <col:24, line:28:5>     |   `-ReturnStmt 0x148028a48 <line:27:9, col:17>     |     `-UnaryOperator 0x148028a30 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x148028a10 <col:17> 'int' 1     `-ReturnStmt 0x148028c70 <line:32:5, col:12>       `-IntegerLiteral 0x148028c50 <col:12> 'int' 0 ","19265":"`-FunctionDecl 0x13e80dfa8  line:1:1 invalid mysql_select 'int (int *, int *, int, int)'   |-ParmVarDecl 0x13e80dd28 <col:14, col:19> col:19 referenced invalid thd 'int *'   |-ParmVarDecl 0x13e80dda8 <line:2:7, col:19> col:19 invalid tables 'int *'   |-ParmVarDecl 0x13e80de28 <col:27, col:32> col:32 used wild_num 'int'   |-ParmVarDecl 0x13e80dea8 <col:42, <invalid sloc>> col:46 invalid 'int'   `-CompoundStmt 0x13c907988 <line:7:1, line:92:1>     |-DeclStmt 0x13e80e110 <line:8:3, col:13>     | `-VarDecl 0x13e80e088 <col:3, col:12> col:7 used err 'int' cinit     |   `-IntegerLiteral 0x13e80e0f0 <col:12> 'int' 0     |-CallExpr 0x13e80e348 <line:10:3, col:19> 'int'     | |-ImplicitCastExpr 0x13e80e330 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e80e280 <col:3> 'int ()' Function 0x13e80e1c8 'DBUG_ENTER' 'int ()'     | `-ImplicitCastExpr 0x13e80e370 <col:14> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x13e80e2e0 <col:14> 'char[4]' lvalue \"STR\"     |-IfStmt 0x13d035ca8 <line:14:3, line:60:3> has_else     | |-BinaryOperator 0x13d0350f0 <line:14:7, col:27> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x13d0350a8 <col:7, col:19> '<dependent type>' contains-errors lvalue ->join     | | | `-RecoveryExpr 0x13d035088 <col:7> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13d035048 <col:27> 'int' 0     | |-CompoundStmt 0x13d0356a8 <line:15:3, line:40:3>     | | `-IfStmt 0x13d035668 <line:18:5, line:37:5>     | |   |-RecoveryExpr 0x13d035258 <line:18:9, line:19:35> '_Bool' contains-errors     | |   `-CompoundStmt 0x13d035650 <line:20:5, line:37:5>     | |     `-IfStmt 0x13d035620 <line:21:7, line:36:7> has_else     | |       |-BinaryOperator 0x13d035398 <line:21:11, col:34> 'int' contains-errors '!='     | |       | |-CXXDependentScopeMemberExpr 0x13d035330 <col:11, col:23> '<dependent type>' contains-errors lvalue ->linkage     | |       | | `-RecoveryExpr 0x13d035310 <col:11> '<dependent type>' contains-errors lvalue     | |       | `-RecoveryExpr 0x13d035378 <col:34> '<dependent type>' contains-errors lvalue     | |       |-CompoundStmt 0x13d0354d8 <line:22:7, line:27:7>     | |       `-CompoundStmt 0x13d035608 <line:29:7, line:36:7>     | |         `-IfStmt 0x13d0355e8 <line:30:9, line:35:2>     | |           |-RecoveryExpr 0x13d035548 <line:30:13, line:32:62> '_Bool' contains-errors     | |           `-CompoundStmt 0x13d0355d0 <line:33:2, line:35:2>     | |             `-GotoStmt 0x13d0355b8 <line:34:4, col:9> 'err' 0x13d035568     | `-CompoundStmt 0x13d035c88 <line:42:3, line:60:3>     |   |-BinaryOperator 0x13d035b98 <line:53:5, col:27> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13d035b30 <col:5, col:15> '<dependent type>' contains-errors lvalue ->used_tables     |   | | `-CXXDependentScopeMemberExpr 0x13d035ae8 <col:5, col:10> '<dependent type>' contains-errors lvalue ->lex     |   | |   `-RecoveryExpr 0x13d035ac0 <col:5> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x13d035aa0 <col:5> 'int *' lvalue ParmVar 0x13e80dd28 'thd' 'int *'     |   | `-IntegerLiteral 0x13d035b78 <col:27> 'int' 0     |   `-IfStmt 0x13d035c68 <line:54:5, line:59:5>     |     |-RecoveryExpr 0x13d035c18 <line:54:9, line:56:46> '_Bool' contains-errors     |     `-CompoundStmt 0x13d035c50 <line:57:5, line:59:5>     |       `-GotoStmt 0x13d035c38 <line:58:7, col:12> 'err' 0x13d035568     |-IfStmt 0x13d035d48 <line:62:3, line:65:3>     | |-RecoveryExpr 0x13d035cf8 <line:62:7, col:29> '_Bool' contains-errors     | `-CompoundStmt 0x13d035d30 <line:63:3, line:65:3>     |   `-GotoStmt 0x13d035d18 <line:64:5, col:10> 'err' 0x13d035568     |-IfStmt 0x13d035e48 <line:67:3, line:71:3>     | |-RecoveryExpr 0x13d035e18 <line:67:7, col:28> '_Bool' contains-errors     | `-CompoundStmt 0x13d035e38 <line:68:3, line:71:3>     |-IfStmt 0x13c907640 <line:73:3, line:74:10>     | |-CallExpr 0x13c907600 <line:73:7, col:31> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13d035f48 <col:7> 'int ()' Function 0x13d035e90 'unlikely' 'int ()'     | | `-CallExpr 0x13d035fd0 <col:16, col:30> '<dependent type>' contains-errors     | |   `-CXXDependentScopeMemberExpr 0x13d035f88 <col:16, col:21> '<dependent type>' contains-errors lvalue ->is_error     | |     `-RecoveryExpr 0x13d035f68 <col:16> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x13c907628 <line:74:5, col:10> 'err' 0x13d035568     |-IfStmt 0x13c907740 <line:78:3, line:82:3>     | |-RecoveryExpr 0x13c907710 <line:78:7, col:28> '_Bool' contains-errors     | `-CompoundStmt 0x13c907730 <line:79:3, line:82:3>     `-LabelStmt 0x13c907928 <line:84:1, line:90:3> 'err'       `-IfStmt 0x13c907908 <line:85:3, line:90:3>         |-RecoveryExpr 0x13c907760 <line:85:7> '_Bool' contains-errors         `-CompoundStmt 0x13c9078f0 <line:86:3, line:90:3>           `-CallExpr 0x13c9078c8 <line:89:5, col:39> '<dependent type>' contains-errors             |-DeclRefExpr 0x13c9077e0 <col:5> 'int ()' Function 0x13d035400 'DBUG_RETURN' 'int ()'             `-BinaryOperator 0x13c9078a8 <col:17, col:38> 'int' contains-errors '||'               |-DeclRefExpr 0x13c907800 <col:17> 'int' lvalue Var 0x13e80e088 'err' 'int'               `-CallExpr 0x13c907888 <col:24, col:38> '<dependent type>' contains-errors                 `-CXXDependentScopeMemberExpr 0x13c907840 <col:24, col:29> '<dependent type>' contains-errors lvalue ->is_error                   `-RecoveryExpr 0x13c907820 <col:24> '<dependent type>' contains-errors lvalue ","20196":"`-FunctionDecl 0x14a026600  line:1:13 construct_get_dest_keyring 'void (struct key **)' static   |-ParmVarDecl 0x14a00e2a8 <col:40, col:53> col:53 used _dest_keyring 'struct key **'   `-CompoundStmt 0x14a02eae8 <line:2:1, line:68:1>     |-DeclStmt 0x14a0268e8 <line:3:2, col:30>     | |-RecordDecl 0x14a0266f8 <col:2, col:9> col:9 struct request_key_auth     | `-VarDecl 0x14a026868 <col:2, col:27> col:27 used rka 'struct request_key_auth *'     |-DeclStmt 0x14a026cb8 <line:4:2, col:42>     | |-RecordDecl 0x14a026900 <col:8, col:15> col:15 struct cred     | `-VarDecl 0x14a026a68 <col:2, col:41> col:21 used cred 'const struct cred *' cinit     |   `-ImplicitCastExpr 0x14a026c88 <col:28, col:41> 'const struct cred *' <IntegralToPointer>     |     `-CallExpr 0x14a026c68 <col:28, col:41> 'int'     |       `-ImplicitCastExpr 0x14a026c50 <col:28> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x14a026c00 <col:28> 'int ()' Function 0x14a026b48 'current_cred' 'int ()'     |-DeclStmt 0x14a026ed0 <line:5:2, col:53>     | |-VarDecl 0x14a026d58 <col:2, col:30> col:14 used dest_keyring 'struct key *' cinit     | | `-ImplicitCastExpr 0x14a026e10 <col:29, col:30> 'struct key *' <LValueToRValue>     | |   `-UnaryOperator 0x14a026df8 <col:29, col:30> 'struct key *' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x14a026de0 <col:30> 'struct key **' <LValueToRValue>     | |       `-DeclRefExpr 0x14a026dc0 <col:30> 'struct key **' lvalue ParmVar 0x14a00e2a8 '_dest_keyring' 'struct key **'     | `-VarDecl 0x14a026e50 <col:2, col:46> col:46 used authkey 'struct key *'     |-CallExpr 0x14a027088 <line:7:2, col:28> 'int'     | |-ImplicitCastExpr 0x14a027070 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a026fc8 <col:2> 'int ()' Function 0x14a026f10 'kenter' 'int ()'     | |-ImplicitCastExpr 0x14a0270b8 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x14a027030 <col:9> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x14a0270d0 <col:16> 'struct key *' <LValueToRValue>     |   `-DeclRefExpr 0x14a027050 <col:16> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |-IfStmt 0x14a02e708 <line:10:2, line:63:2> has_else     | |-ImplicitCastExpr 0x14a027108 <line:10:6> 'struct key *' <LValueToRValue>     | | `-DeclRefExpr 0x14a0270e8 <col:6> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     | |-CompoundStmt 0x14a027298 <col:20, line:13:2>     | | `-CallExpr 0x14a027258 <line:12:3, col:23> 'int'     | |   |-ImplicitCastExpr 0x14a027240 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14a027200 <col:3> 'int ()' Function 0x14a027148 'key_get' 'int ()'     | |   `-ImplicitCastExpr 0x14a027280 <col:11> 'struct key *' <LValueToRValue>     | |     `-DeclRefExpr 0x14a027220 <col:11> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     | `-CompoundStmt 0x14a02e6f0 <line:13:9, line:63:2>     |   `-SwitchStmt 0x14a027328 <line:15:3, line:62:3>     |     |-ImplicitCastExpr 0x14a027310 <line:15:11, col:17> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x14a0272e8 <col:11, col:17> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14a0272b0 <col:11> 'const struct cred *' lvalue Var 0x14a026a68 'cred' 'const struct cred *'     |     `-CompoundStmt 0x14a02e670 <col:30, line:62:3>     |       |-IfStmt 0x14a02daf0 <line:18:4, line:29:4>     |       | |-RecoveryExpr 0x14a0273b8 <line:18:8, col:14> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x14a027380 <col:8> 'const struct cred *' lvalue Var 0x14a026a68 'cred' 'const struct cred *'     |       | `-CompoundStmt 0x14a02dab0 <col:32, line:29:4>     |       |   |-BinaryOperator 0x14a027460 <line:19:5, col:21> 'struct key *' contains-errors '='     |       |   | |-DeclRefExpr 0x14a0273e0 <col:5> 'struct key *' lvalue Var 0x14a026e50 'authkey' 'struct key *'     |       |   | `-RecoveryExpr 0x14a027438 <col:15, col:21> '<dependent type>' contains-errors lvalue     |       |   |   `-DeclRefExpr 0x14a027400 <col:15> 'const struct cred *' lvalue Var 0x14a026a68 'cred' 'const struct cred *'     |       |   |-CallExpr 0x14a02d400 <line:20:5, col:28> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x14a027560 <col:5> 'int ()' Function 0x14a0274a8 'down_read' 'int ()'     |       |   | `-UnaryOperator 0x14a0275e0 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   |   `-RecoveryExpr 0x14a0275b8 <col:16, col:25> '<dependent type>' contains-errors lvalue     |       |   |     `-DeclRefExpr 0x14a027580 <col:16> 'struct key *' lvalue Var 0x14a026e50 'authkey' 'struct key *'     |       |   |-BinaryOperator 0x14a02d548 <line:21:5, col:34> 'struct request_key_auth *' contains-errors '='     |       |   | |-DeclRefExpr 0x14a02d428 <col:5> 'struct request_key_auth *' lvalue Var 0x14a026868 'rka' 'struct request_key_auth *'     |       |   | `-ArraySubscriptExpr 0x14a02d528 <col:11, col:34> '<dependent type>' contains-errors lvalue     |       |   |   |-ImplicitCastExpr 0x14a02d510 <col:11, col:28> '<dependent type>' contains-errors <LValueToRValue>     |       |   |   | `-CXXDependentScopeMemberExpr 0x14a02d4a8 <col:11, col:28> '<dependent type>' contains-errors lvalue .data     |       |   |   |   `-RecoveryExpr 0x14a02d480 <col:11, col:20> '<dependent type>' contains-errors lvalue     |       |   |   |     `-DeclRefExpr 0x14a02d448 <col:11> 'struct key *' lvalue Var 0x14a026e50 'authkey' 'struct key *'     |       |   |   `-IntegerLiteral 0x14a02d4f0 <col:33> 'int' 0     |       |   |-IfStmt 0x14a02d890 <line:22:5, line:25:32>     |       |   | |-UnaryOperator 0x14a02d790 <line:22:9, line:23:27> '<dependent type>' contains-errors prefix '!' cannot overflow     |       |   | | `-CallExpr 0x14a02d760 <line:22:10, line:23:27> '<dependent type>' contains-errors     |       |   | |   |-DeclRefExpr 0x14a02d648 <line:22:10> 'int ()' Function 0x14a02d590 'test_bit' 'int ()'     |       |   | |   |-RecoveryExpr 0x14a02d740 <col:19> '<dependent type>' contains-errors lvalue     |       |   | |   `-UnaryOperator 0x14a02d6e0 <line:23:12, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   | |     `-RecoveryExpr 0x14a02d6b8 <col:13, col:22> '<dependent type>' contains-errors lvalue     |       |   | |       `-DeclRefExpr 0x14a02d680 <col:13> 'struct key *' lvalue Var 0x14a026e50 'authkey' 'struct key *'     |       |   | `-BinaryOperator 0x14a02d870 <line:24:6, line:25:32> 'struct key *' contains-errors '='     |       |   |   |-DeclRefExpr 0x14a02d7a8 <line:24:6> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       |   |   `-CallExpr 0x14a02d848 <line:25:7, col:32> '<dependent type>' contains-errors     |       |   |     |-DeclRefExpr 0x14a02d7c8 <col:7> 'int ()' Function 0x14a027148 'key_get' 'int ()'     |       |   |     `-RecoveryExpr 0x14a02d820 <col:15, col:20> '<dependent type>' contains-errors lvalue     |       |   |       `-DeclRefExpr 0x14a02d7e8 <col:15> 'struct request_key_auth *' lvalue Var 0x14a026868 'rka' 'struct request_key_auth *'     |       |   |-CallExpr 0x14a02da28 <line:26:5, col:26> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x14a02d990 <col:5> 'int ()' Function 0x14a02d8d8 'up_read' 'int ()'     |       |   | `-UnaryOperator 0x14a02da10 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   |   `-RecoveryExpr 0x14a02d9e8 <col:14, col:23> '<dependent type>' contains-errors lvalue     |       |   |     `-DeclRefExpr 0x14a02d9b0 <col:14> 'struct key *' lvalue Var 0x14a026e50 'authkey' 'struct key *'     |       |   `-IfStmt 0x14a02da90 <line:27:5, line:28:6>     |       |     |-ImplicitCastExpr 0x14a02da70 <line:27:9> 'struct key *' <LValueToRValue>     |       |     | `-DeclRefExpr 0x14a02da50 <col:9> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       |     `-BreakStmt 0x14a02da88 <line:28:6>     |       |-BinaryOperator 0x14a02dbf0 <line:32:4, col:47> 'struct key *' contains-errors '='     |       | |-DeclRefExpr 0x14a02db28 <col:4> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       | `-CallExpr 0x14a02dbc8 <col:19, col:47> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x14a02db48 <col:19> 'int ()' Function 0x14a027148 'key_get' 'int ()'     |       |   `-RecoveryExpr 0x14a02dba0 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x14a02db68 <col:27> 'const struct cred *' lvalue Var 0x14a026a68 'cred' 'const struct cred *'     |       |-IfStmt 0x14a02dc50 <line:33:4, line:34:5>     |       | |-ImplicitCastExpr 0x14a02dc30 <line:33:8> 'struct key *' <LValueToRValue>     |       | | `-DeclRefExpr 0x14a02dc10 <col:8> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       | `-BreakStmt 0x14a02dc48 <line:34:5>     |       |-BinaryOperator 0x14a02dd38 <line:37:4, col:48> 'struct key *' contains-errors '='     |       | |-DeclRefExpr 0x14a02dc70 <col:4> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       | `-CallExpr 0x14a02dd10 <col:19, col:48> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x14a02dc90 <col:19> 'int ()' Function 0x14a027148 'key_get' 'int ()'     |       |   `-RecoveryExpr 0x14a02dce8 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x14a02dcb0 <col:27> 'const struct cred *' lvalue Var 0x14a026a68 'cred' 'const struct cred *'     |       |-IfStmt 0x14a02dd98 <line:38:4, line:39:5>     |       | |-ImplicitCastExpr 0x14a02dd78 <line:38:8> 'struct key *' <LValueToRValue>     |       | | `-DeclRefExpr 0x14a02dd58 <col:8> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       | `-BreakStmt 0x14a02dd90 <line:39:5>     |       |-CallExpr 0x14a02ded0 <line:42:4, col:18> 'int'     |       | `-ImplicitCastExpr 0x14a02deb8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       |   `-DeclRefExpr 0x14a02de98 <col:4> 'int ()' Function 0x14a02dde0 'rcu_read_lock' 'int ()'     |       |-BinaryOperator 0x14a02e0e0 <line:43:4, line:44:43> 'struct key *' contains-errors '='     |       | |-DeclRefExpr 0x14a02def0 <line:43:4> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       | `-CallExpr 0x14a02e0b8 <col:19, line:44:43> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x14a02df10 <line:43:19> 'int ()' Function 0x14a027148 'key_get' 'int ()'     |       |   `-CallExpr 0x14a02e090 <line:44:5, col:42> '<dependent type>' contains-errors     |       |     |-DeclRefExpr 0x14a02e010 <col:5> 'int ()' Function 0x14a02df58 'rcu_dereference' 'int ()'     |       |     `-RecoveryExpr 0x14a02e068 <col:21, col:27> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x14a02e030 <col:21> 'const struct cred *' lvalue Var 0x14a026a68 'cred' 'const struct cred *'     |       |-CallExpr 0x14a02e218 <line:45:4, col:20> 'int'     |       | `-ImplicitCastExpr 0x14a02e200 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       |   `-DeclRefExpr 0x14a02e1e0 <col:4> 'int ()' Function 0x14a02e128 'rcu_read_unlock' 'int ()'     |       |-IfStmt 0x14a02e278 <line:47:4, line:48:5>     |       | |-ImplicitCastExpr 0x14a02e258 <line:47:8> 'struct key *' <LValueToRValue>     |       | | `-DeclRefExpr 0x14a02e238 <col:8> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       | `-BreakStmt 0x14a02e270 <line:48:5>     |       |-BinaryOperator 0x14a02e3a8 <line:51:4, line:52:40> 'struct key *' contains-errors '='     |       | |-DeclRefExpr 0x14a02e298 <line:51:4> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       | `-CallExpr 0x14a02e380 <line:52:5, col:40> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x14a02e2b8 <col:5> 'int ()' Function 0x14a027148 'key_get' 'int ()'     |       |   `-CXXDependentScopeMemberExpr 0x14a02e338 <col:13, col:25> '<dependent type>' contains-errors lvalue ->session_keyring     |       |     `-RecoveryExpr 0x14a02e310 <col:13, col:19> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x14a02e2d8 <col:13> 'const struct cred *' lvalue Var 0x14a026a68 'cred' 'const struct cred *'     |       |-BreakStmt 0x14a02e3c8 <line:53:4>     |       |-BinaryOperator 0x14a02e4f0 <line:56:4, col:50> 'struct key *' contains-errors '='     |       | |-DeclRefExpr 0x14a02e3d0 <col:4> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |       | `-CallExpr 0x14a02e4c8 <col:19, col:50> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x14a02e400 <col:19> 'int ()' Function 0x14a027148 'key_get' 'int ()'     |       |   `-CXXDependentScopeMemberExpr 0x14a02e480 <col:27, col:39> '<dependent type>' contains-errors lvalue ->uid_keyring     |       |     `-RecoveryExpr 0x14a02e458 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x14a02e420 <col:27> 'const struct cred *' lvalue Var 0x14a026a68 'cred' 'const struct cred *'     |       |-BreakStmt 0x14a02e510 <line:57:4>     |       `-DefaultStmt 0x14a02e650 <line:60:3, line:61:8>     |         `-CallExpr 0x14a02e630 <col:4, col:8> 'int'     |           `-ImplicitCastExpr 0x14a02e618 <col:4> 'int (*)()' <FunctionToPointerDecay>     |             `-DeclRefExpr 0x14a02e5f8 <col:4> 'int ()' Function 0x14a02e540 'BUG' 'int ()'     |-BinaryOperator 0x14a02e7c0 <line:65:2, col:19> 'struct key *' '='     | |-UnaryOperator 0x14a02e770 <col:2, col:3> 'struct key *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14a02e758 <col:3> 'struct key **' <LValueToRValue>     | |   `-DeclRefExpr 0x14a02e738 <col:3> 'struct key **' lvalue ParmVar 0x14a00e2a8 '_dest_keyring' 'struct key **'     | `-ImplicitCastExpr 0x14a02e7a8 <col:19> 'struct key *' <LValueToRValue>     |   `-DeclRefExpr 0x14a02e788 <col:19> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     |-CallExpr 0x14a02ea90 <line:66:2, col:40> 'int'     | |-ImplicitCastExpr 0x14a02ea78 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a02e8c0 <col:2> 'int ()' Function 0x14a02e808 'kleave' 'int ()'     | |-ImplicitCastExpr 0x14a02eac0 <col:9> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x14a02e8e0 <col:9> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x14a02ea38 <col:16, col:39> 'int'     |   |-ImplicitCastExpr 0x14a02ea20 <col:16> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a02e9e0 <col:16> 'int ()' Function 0x14a02e928 'key_serial' 'int ()'     |   `-ImplicitCastExpr 0x14a02ea60 <col:27> 'struct key *' <LValueToRValue>     |     `-DeclRefExpr 0x14a02ea00 <col:27> 'struct key *' lvalue Var 0x14a026d58 'dest_keyring' 'struct key *'     `-ReturnStmt 0x14a02ead8 <line:67:2> ","19913":"`-FunctionDecl 0x14600dd68  col:15 invalid get_thd 'int *()' inline ","19447":"`-FunctionDecl 0x13f128758  line:1:12 is_lan_addr 'int (struct ipmi_addr *)' static   |-ParmVarDecl 0x13f128648 <col:24, col:42> col:42 used addr 'struct ipmi_addr *'   `-CompoundStmt 0x13f140b50 <line:2:1, line:4:1>     `-ReturnStmt 0x13f140b40 <line:3:2, col:28>       `-BinaryOperator 0x13f140b20 <col:9, col:28> 'int' contains-errors '=='         |-RecoveryExpr 0x13f140a88 <col:9, col:15> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x13f140a50 <col:9> 'struct ipmi_addr *' lvalue ParmVar 0x13f128648 'addr' 'struct ipmi_addr *'         `-RecoveryExpr 0x13f140b00 <col:28> '<dependent type>' contains-errors lvalue ","19181":"`-FunctionDecl 0x15c128288  line:1:1 invalid AllocateSequenceSlot 'int (int *, int *)'   |-ParmVarDecl 0x15c128128 <line:2:8, col:25> col:25 invalid newHandle 'int *'   |-ParmVarDecl 0x15c1281a8 <line:3:8, col:25> col:25 invalid auth 'int *'   `-CompoundStmt 0x14c808d18 <line:5:1, line:33:1>     |-CallExpr 0x14c808898 <line:11:5, col:83> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c1284d0 <col:5> 'int ()' Function 0x15c128418 'cAssert' 'int ()'     | `-BinaryOperator 0x14c808878 <col:13, col:82> 'int' contains-errors '=='     |   |-CallExpr 0x15c128788 <col:13, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15c1285d0 <col:13> 'int ()' Function 0x15c128518 'offsetof' 'int ()'     |   | |-RecoveryExpr 0x15c128768 <col:22> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x15c128608 <col:35> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14c808848 <col:44, col:82> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15c128658 <col:44> 'int ()' Function 0x15c128518 'offsetof' 'int ()'     |     |-RecoveryExpr 0x15c1287b8 <col:53> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x14c808800 <col:61, col:72> '<dependent type>' contains-errors lvalue .authPolicy     |       `-RecoveryExpr 0x15c1287d8 <col:61> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14c808cf8 <line:12:5, line:31:2>       |-BinaryOperator 0x14c808950 <line:12:8, col:18> 'int' contains-errors '!='       | |-RecoveryExpr 0x14c808910 <col:8> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14c808930 <col:18> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14c808ce8 <line:13:2, line:31:2> ","19193":"`-FunctionDecl 0x13f9281f0  line:1:13 invalid do_cmd 'void (int *)' static   |-ParmVarDecl 0x13f928128 <col:20, col:30> col:30 referenced invalid s 'int *'   `-CompoundStmt 0x13f9419b8 <line:2:1, line:15:1>     |-UnaryOperator 0x13f928330 <line:6:5, col:26> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-CXXDependentScopeMemberExpr 0x13f9282e8 <col:5, col:8> '<dependent type>' contains-errors lvalue ->cmdfifo_cdb_offset     |   `-RecoveryExpr 0x13f9282c0 <col:5> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f9282a0 <col:5> 'int *' lvalue ParmVar 0x13f928128 's' 'int *'     |-IfStmt 0x13f9287e0 <line:9:5, line:12:5>     | |-CXXDependentScopeMemberExpr 0x13f928368 <line:9:9, col:12> '<dependent type>' contains-errors lvalue ->cmdfifo_cdb_offset     | | `-RecoveryExpr 0x13f928348 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f9287c0 <col:32, line:12:5>     |   |-CallExpr 0x13f9286b8 <line:10:9, col:61> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13f928510 <col:9> 'int ()' Function 0x13f928458 'fifo8_pop_buf' 'int ()'     |   | |-UnaryOperator 0x13f928598 <col:23, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x13f928550 <col:24, col:27> '<dependent type>' contains-errors lvalue ->cmdfifo     |   | |   `-RecoveryExpr 0x13f928530 <col:24> '<dependent type>' contains-errors lvalue     |   | |-CXXDependentScopeMemberExpr 0x13f9285d0 <col:36, col:39> '<dependent type>' contains-errors lvalue ->cmdfifo_cdb_offset     |   | | `-RecoveryExpr 0x13f9285b0 <col:36> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x13f9286a0 <col:59, col:60> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x13f928680 <col:60> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x13f9287a0 <line:11:9, col:33> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x13f928738 <col:9, col:12> '<dependent type>' contains-errors lvalue ->cmdfifo_cdb_offset     |     | `-RecoveryExpr 0x13f928710 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x13f9286f0 <col:9> 'int *' lvalue ParmVar 0x13f928128 's' 'int *'     |     `-IntegerLiteral 0x13f928780 <col:33> 'int' 0     `-CallExpr 0x13f941988 <line:14:5, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x13f9418e0 <col:5> 'int ()' Function 0x13f941828 'do_busid_cmd' 'int ()'       |-RecoveryExpr 0x13f941900 <col:18> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x13f941968 <col:21> '<dependent type>' contains-errors lvalue ","19661":"`-FunctionDecl 0x132141860  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x132141960 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1321419c8 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x132141a30 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x132141908 <<invalid sloc>> Implicit 900 ","19980":"`-FunctionDecl 0x13a00dfa8  line:1:1 invalid rewind_conditionals 'int (int *, int, int, int *)'   |-ParmVarDecl 0x13a00dd28 <line:2:5, col:17> col:17 invalid cstack 'int *'   |-ParmVarDecl 0x13a00dda8 <line:3:5, col:10> col:10 used idx 'int'   |-ParmVarDecl 0x13a00de28 <line:4:5, col:10> col:10 used cond_type 'int'   |-ParmVarDecl 0x13a00dea8 <line:5:5, col:11> col:11 used cond_level 'int *'   `-CompoundStmt 0x13a0279a8 <line:6:1, line:15:1>     `-WhileStmt 0x13a027988 <line:7:5, line:14:5>       |-BinaryOperator 0x13a00e0f8 <line:7:12, col:29> 'int' contains-errors '>'       | |-CXXDependentScopeMemberExpr 0x13a00e090 <col:12, col:20> '<dependent type>' contains-errors lvalue ->cs_idx       | | `-RecoveryExpr 0x13a00e070 <col:12> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x13a00e0d8 <col:29> 'int' lvalue ParmVar 0x13a00dda8 'idx' 'int'       `-CompoundStmt 0x13a027960 <line:8:5, line:14:5>         |-IfStmt 0x13a00e2e0 <line:9:2, line:10:9>         | |-BinaryOperator 0x13a00e258 <line:9:6, col:41> '<dependent type>' contains-errors '&'         | | |-ArraySubscriptExpr 0x13a00e218 <col:6, col:37> '<dependent type>' contains-errors lvalue         | | | |-ImplicitCastExpr 0x13a00e1e8 <col:6, col:14> '<dependent type>' contains-errors <LValueToRValue>         | | | | `-CXXDependentScopeMemberExpr 0x13a00e138 <col:6, col:14> '<dependent type>' contains-errors lvalue ->cs_flags         | | | |   `-RecoveryExpr 0x13a00e118 <col:6> '<dependent type>' contains-errors lvalue         | | | `-ImplicitCastExpr 0x13a00e200 <col:23, col:31> '<dependent type>' contains-errors <LValueToRValue>         | | |   `-CXXDependentScopeMemberExpr 0x13a00e1a0 <col:23, col:31> '<dependent type>' contains-errors lvalue ->cs_idx         | | |     `-RecoveryExpr 0x13a00e180 <col:23> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x13a00e238 <col:41> 'int' lvalue ParmVar 0x13a00de28 'cond_type' 'int'         | `-UnaryOperator 0x13a00e2c8 <line:10:6, col:9> 'int' prefix '--'         |   `-UnaryOperator 0x13a00e2b0 <col:8, col:9> 'int' lvalue prefix '*' cannot overflow         |     `-ImplicitCastExpr 0x13a00e298 <col:9> 'int *' <LValueToRValue>         |       `-DeclRefExpr 0x13a00e278 <col:9> 'int *' lvalue ParmVar 0x13a00dea8 'cond_level' 'int *'         |-IfStmt 0x13a0277f8 <line:11:2, line:12:54>         | |-BinaryOperator 0x13a027518 <line:11:6, col:41> '<dependent type>' contains-errors '&'         | | |-ArraySubscriptExpr 0x13a0274d8 <col:6, col:37> '<dependent type>' contains-errors lvalue         | | | |-ImplicitCastExpr 0x13a0274a8 <col:6, col:14> '<dependent type>' contains-errors <LValueToRValue>         | | | | `-CXXDependentScopeMemberExpr 0x13a00e320 <col:6, col:14> '<dependent type>' contains-errors lvalue ->cs_flags         | | | |   `-RecoveryExpr 0x13a00e300 <col:6> '<dependent type>' contains-errors lvalue         | | | `-ImplicitCastExpr 0x13a0274c0 <col:23, col:31> '<dependent type>' contains-errors <LValueToRValue>         | | |   `-CXXDependentScopeMemberExpr 0x13a00e388 <col:23, col:31> '<dependent type>' contains-errors lvalue ->cs_idx         | | |     `-RecoveryExpr 0x13a00e368 <col:23> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x13a0274f8 <col:41> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x13a0277d0 <line:12:6, col:54> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x13a027690 <col:6> 'int ()' Function 0x13a0275d8 'free_for_info' 'int ()'         |   `-ArraySubscriptExpr 0x13a0277b0 <col:20, col:53> '<dependent type>' contains-errors lvalue         |     |-ImplicitCastExpr 0x13a027780 <col:20, col:28> '<dependent type>' contains-errors <LValueToRValue>         |     | `-CXXDependentScopeMemberExpr 0x13a0276d0 <col:20, col:28> '<dependent type>' contains-errors lvalue ->cs_forinfo         |     |   `-RecoveryExpr 0x13a0276b0 <col:20> '<dependent type>' contains-errors lvalue         |     `-ImplicitCastExpr 0x13a027798 <col:39, col:47> '<dependent type>' contains-errors <LValueToRValue>         |       `-CXXDependentScopeMemberExpr 0x13a027738 <col:39, col:47> '<dependent type>' contains-errors lvalue ->cs_idx         |         `-RecoveryExpr 0x13a027718 <col:39> '<dependent type>' contains-errors lvalue         `-CallExpr 0x13a027938 <line:13:2, col:20> '<dependent type>' contains-errors           |-DeclRefExpr 0x13a0278f8 <col:2> 'int ()' Function 0x13a027840 'leave_block' 'int ()'           `-RecoveryExpr 0x13a027918 <col:14> '<dependent type>' contains-errors lvalue ","19647":"`-FunctionDecl 0x12780e350  line:1:6 posix_cpu_timer_schedule 'void (struct k_itimer *)'   |-ParmVarDecl 0x12780e248 <col:31, col:48> col:48 used timer 'struct k_itimer *'   `-CompoundStmt 0x127829788 <line:2:1, line:47:1>     |-DeclStmt 0x127826928 <line:3:2, col:44>     | |-RecordDecl 0x127826648 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x1278267b8 <col:2, col:40> col:22 used p 'struct task_struct *' cinit     |   `-CXXDependentScopeMemberExpr 0x1278268c8 <col:26, col:40> '<dependent type>' contains-errors lvalue .task     |     `-CXXDependentScopeMemberExpr 0x127826880 <col:26, col:36> '<dependent type>' contains-errors lvalue .cpu     |       `-RecoveryExpr 0x127826858 <col:26, col:33> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x127826820 <col:26> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     |-DeclStmt 0x127826ab8 <line:4:2, col:26>     | |-RecordDecl 0x127826940 <col:2, col:8> col:8 union cpu_time_count     | `-VarDecl 0x127826a38 <col:2, col:23> col:23 invalid now 'union cpu_time_count'     |-IfStmt 0x127826d70 <line:6:2, line:8:8>     | |-CallExpr 0x127826ce0 <line:6:6, col:24> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x127826c00 <col:6> 'int ()' Function 0x127826b48 'unlikely' 'int ()'     | | `-BinaryOperator 0x127826cc0 <col:15, col:20> 'int' contains-errors '=='     | |   |-DeclRefExpr 0x127826c20 <col:15> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     | |   `-RecoveryExpr 0x127826ca0 <col:20> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x127826d58 <line:8:3, col:8> 'out' 0x127826d08     |-IfStmt 0x127829278 <line:11:2, line:35:2> has_else     | |-CallExpr 0x127826ef0 <line:11:6, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x127826e70 <col:6> 'int ()' Function 0x127826db8 'CPUCLOCK_PERTHREAD' 'int ()'     | | `-RecoveryExpr 0x127826ec8 <col:25, col:32> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127826e90 <col:25> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     | |-CompoundStmt 0x1278284a0 <col:43, line:19:2>     | | |-CallExpr 0x1278270d0 <line:12:3, col:44> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x127826ff8 <col:3> 'int ()' Function 0x127826f40 'cpu_clock_sample' 'int ()'     | | | |-RecoveryExpr 0x127827050 <col:20, col:27> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x127827018 <col:20> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     | | | |-DeclRefExpr 0x127827078 <col:37> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     | | | `-UnaryOperator 0x1278270b8 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-RecoveryExpr 0x127827098 <col:41> '<dependent type>' contains-errors lvalue     | | |-CallExpr 0x127827248 <line:13:3, col:28> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1278271e8 <col:3> 'int ()' Function 0x127827130 'bump_cpu_timer' 'int ()'     | | | |-DeclRefExpr 0x127827208 <col:18> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     | | | `-RecoveryExpr 0x127827228 <col:25> '<dependent type>' contains-errors lvalue     | | |-IfStmt 0x1278274c8 <line:14:3, line:17:3>     | | | |-CallExpr 0x1278272f8 <line:14:7, col:29> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x127827278 <col:7> 'int ()' Function 0x127826b48 'unlikely' 'int ()'     | | | | `-RecoveryExpr 0x1278272d0 <col:16, col:19> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x127827298 <col:16> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     | | | `-CompoundStmt 0x1278274a8 <col:32, line:17:3>     | | |   |-CallExpr 0x127827460 <line:15:4, col:30> '<dependent type>' contains-errors     | | |   | |-DeclRefExpr 0x127827400 <col:4> 'int ()' Function 0x127827348 'clear_dead_task' 'int ()'     | | |   | |-DeclRefExpr 0x127827420 <col:20> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     | | |   | `-RecoveryExpr 0x127827440 <col:27> '<dependent type>' contains-errors lvalue     | | |   `-GotoStmt 0x127827490 <line:16:4, col:9> 'out' 0x127826d08     | | `-CallExpr 0x127828478 <line:18:3, col:27> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1278275c8 <col:3> 'int ()' Function 0x127827510 'read_lock' 'int ()'     | |   `-UnaryOperator 0x127828460 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x127828440 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x127829248 <line:19:9, line:35:2>     |   |-CallExpr 0x127828580 <line:20:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1278284d0 <col:3> 'int ()' Function 0x127827510 'read_lock' 'int ()'     |   | `-UnaryOperator 0x127828568 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x127828548 <col:14> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x127828f98 <line:21:3, line:31:3> has_else     |   | |-CallExpr 0x1278286c8 <line:21:7, col:33> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x1278285a8 <col:7> 'int ()' Function 0x127826b48 'unlikely' 'int ()'     |   | | `-BinaryOperator 0x1278286a8 <col:16, col:29> 'int' contains-errors '=='     |   | |   |-RecoveryExpr 0x127828600 <col:16, col:19> '<dependent type>' contains-errors lvalue     |   | |   | `-DeclRefExpr 0x1278285c8 <col:16> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     |   | |   `-RecoveryExpr 0x127828688 <col:29> '<dependent type>' contains-errors lvalue     |   | |-CompoundStmt 0x127828c40 <col:36, line:27:3>     |   | | |-CallExpr 0x127828858 <line:23:4, col:21> 'int' contains-errors     |   | | | |-ImplicitCastExpr 0x127828840 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x1278287d0 <col:4> 'int ()' Function 0x127828718 'put_task_struct' 'int ()'     |   | | | `-ImplicitCastExpr 0x127828880 <col:20> 'struct task_struct *' contains-errors <LValueToRValue>     |   | | |   `-DeclRefExpr 0x1278287f0 <col:20> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     |   | | |-BinaryOperator 0x127828a40 <line:24:4, col:29> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x127828940 <col:4, col:18> '<dependent type>' contains-errors lvalue .task     |   | | | | `-CXXDependentScopeMemberExpr 0x1278288f8 <col:4, col:14> '<dependent type>' contains-errors lvalue .cpu     |   | | | |   `-RecoveryExpr 0x1278288d0 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   | | | |     `-DeclRefExpr 0x127828898 <col:4> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     |   | | | `-BinaryOperator 0x127828a20 <col:25, col:29> 'struct task_struct *' contains-errors '='     |   | | |   |-DeclRefExpr 0x127828988 <col:25> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     |   | | |   `-RecoveryExpr 0x127828a00 <col:29> '<dependent type>' contains-errors lvalue     |   | | |-BinaryOperator 0x127828bb8 <line:25:4, col:34> '<dependent type>' contains-errors '='     |   | | | |-CXXDependentScopeMemberExpr 0x127828b50 <col:4, col:26> '<dependent type>' contains-errors lvalue .sched     |   | | | | `-CXXDependentScopeMemberExpr 0x127828b08 <col:4, col:18> '<dependent type>' contains-errors lvalue .expires     |   | | | |   `-CXXDependentScopeMemberExpr 0x127828ac0 <col:4, col:14> '<dependent type>' contains-errors lvalue .cpu     |   | | | |     `-RecoveryExpr 0x127828a98 <col:4, col:11> '<dependent type>' contains-errors lvalue     |   | | | |       `-DeclRefExpr 0x127828a60 <col:4> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     |   | | | `-IntegerLiteral 0x127828b98 <col:34> 'int' 0     |   | | `-GotoStmt 0x127828c28 <line:26:4, col:9> 'out_unlock' 0x127828bd8     |   | `-IfStmt 0x127828f78 <line:27:10, line:31:3>     |   |   |-BinaryOperator 0x127828e90 <line:27:14, col:61> 'int' contains-errors '&&'     |   |   | |-CallExpr 0x127828cf0 <col:14, col:36> '<dependent type>' contains-errors     |   |   | | |-DeclRefExpr 0x127828c70 <col:14> 'int ()' Function 0x127826b48 'unlikely' 'int ()'     |   |   | | `-RecoveryExpr 0x127828cc8 <col:23, col:26> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x127828c90 <col:23> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     |   |   | `-CallExpr 0x127828e50 <col:41, col:61> 'int' contains-errors     |   |   |   |-ImplicitCastExpr 0x127828e38 <col:41> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x127828df8 <col:41> 'int ()' Function 0x127828d40 'thread_group_empty' 'int ()'     |   |   |   `-ImplicitCastExpr 0x127828e78 <col:60> 'struct task_struct *' contains-errors <LValueToRValue>     |   |   |     `-DeclRefExpr 0x127828e18 <col:60> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     |   |   `-CompoundStmt 0x127828f58 <col:64, line:31:3>     |   |     |-CallExpr 0x127828f10 <line:29:4, col:30> '<dependent type>' contains-errors     |   |     | |-DeclRefExpr 0x127828eb0 <col:4> 'int ()' Function 0x127827348 'clear_dead_task' 'int ()'     |   |     | |-DeclRefExpr 0x127828ed0 <col:20> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     |   |     | `-RecoveryExpr 0x127828ef0 <col:27> '<dependent type>' contains-errors lvalue     |   |     `-GotoStmt 0x127828f40 <line:30:4, col:9> 'out_unlock' 0x127828bd8     |   |-CallExpr 0x127829180 <line:32:3, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1278290a8 <col:3> 'int ()' Function 0x127828ff0 'cpu_clock_sample_group' 'int ()'     |   | |-RecoveryExpr 0x127829100 <col:26, col:33> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1278290c8 <col:26> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     |   | |-DeclRefExpr 0x127829128 <col:43> 'struct task_struct *' contains-errors lvalue Var 0x1278267b8 'p' 'struct task_struct *'     |   | `-UnaryOperator 0x127829168 <col:46, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x127829148 <col:47> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x127829218 <line:33:3, col:28> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1278291b8 <col:3> 'int ()' Function 0x127827130 'bump_cpu_timer' 'int ()'     |     |-DeclRefExpr 0x1278291d8 <col:18> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     |     `-RecoveryExpr 0x1278291f8 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x127829400 <line:38:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127829388 <col:2> 'int ()' Function 0x1278292d0 'arm_timer' 'int ()'     | |-DeclRefExpr 0x1278293a8 <col:12> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     | `-RecoveryExpr 0x1278293c8 <col:19> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x127829538 <line:40:1, col:11> 'out_unlock'     | `-NullStmt 0x127829530 <col:11>     |-LabelStmt 0x127829638 <line:43:1, line:44:34> 'out'     | `-BinaryOperator 0x127829618 <col:2, col:34> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x127829590 <col:2, col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x127829558 <col:2> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     |   `-RecoveryExpr 0x1278295f0 <col:27, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1278295b8 <col:27> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     |-BinaryOperator 0x1278296f0 <line:45:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127829690 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127829658 <col:2> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *'     | `-UnaryOperator 0x1278296d8 <col:22, col:23> 'int' prefix '-'     |   `-IntegerLiteral 0x1278296b8 <col:23> 'int' 1     `-UnaryOperator 0x127829770 <line:46:2, col:11> '<dependent type>' contains-errors prefix '++' cannot overflow       `-RecoveryExpr 0x127829748 <col:4, col:11> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x127829710 <col:4> 'struct k_itimer *' lvalue ParmVar 0x12780e248 'timer' 'struct k_itimer *' ","20107":"`-FunctionDecl 0x1291281a8  line:1:1 ldbm_config_backend_implement_get 'int (void *)'   |-ParmVarDecl 0x1291280d8 <col:35, col:41> col:41 used arg 'void *'   `-CompoundStmt 0x129142be8 <line:2:1, line:6:1>     |-DeclStmt 0x129128570 <line:3:5, col:49>     | |-RecordDecl 0x1291282a0 <col:5, col:12> col:12 struct ldbminfo     | `-VarDecl 0x129128408 <col:5, col:46> col:22 used li 'struct ldbminfo *' cinit     |   `-CStyleCastExpr 0x129128530 <col:27, col:46> 'struct ldbminfo *' <BitCast>     |     `-ImplicitCastExpr 0x129128518 <col:46> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x129128470 <col:46> 'void *' lvalue ParmVar 0x1291280d8 'arg' 'void *'     `-ReturnStmt 0x129142bd8 <line:5:5, col:60>       `-ImplicitCastExpr 0x129142bc0 <col:12, col:60> 'int' contains-errors <PointerToIntegral>         `-CStyleCastExpr 0x129142b98 <col:12, col:60> 'void *' contains-errors <Dependent>           `-CallExpr 0x129142b58 <col:20, col:60> '<dependent type>' contains-errors             |-DeclRefExpr 0x1291286b0 <col:20> 'int ()' Function 0x1291285f8 'slapi_ch_strdup' 'int ()'             `-RecoveryExpr 0x129142b30 <col:36, col:40> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x1291286d0 <col:36> 'struct ldbminfo *' lvalue Var 0x129128408 'li' 'struct ldbminfo *' ","19464":"`-FunctionDecl 0x126140a00  line:1:6 ring_buffer_change_overwrite 'void (struct ring_buffer *, int)'   |-ParmVarDecl 0x126128648 <col:35, col:55> col:55 used buffer 'struct ring_buffer *'   |-ParmVarDecl 0x1261286c8 <col:63, col:67> col:67 used val 'int'   `-CompoundStmt 0x126141148 <line:2:1, line:9:1>     |-CallExpr 0x126140cc8 <line:3:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126140c30 <col:2> 'int ()' Function 0x126140b78 'mutex_lock' 'int ()'     | `-UnaryOperator 0x126140cb0 <col:13, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x126140c88 <col:14, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x126140c50 <col:14> 'struct ring_buffer *' lvalue ParmVar 0x126128648 'buffer' 'struct ring_buffer *'     |-IfStmt 0x126140f78 <line:4:2, line:7:21> has_else     | |-ImplicitCastExpr 0x126140d10 <line:4:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x126140cf0 <col:6> 'int' lvalue ParmVar 0x1261286c8 'val' 'int'     | |-CompoundAssignOperator 0x126140df0 <line:5:3, col:20> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | | |-RecoveryExpr 0x126140d60 <col:3, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x126140d28 <col:3> 'struct ring_buffer *' lvalue ParmVar 0x126128648 'buffer' 'struct ring_buffer *'     | | `-RecoveryExpr 0x126140dd0 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundAssignOperator 0x126140f48 <line:7:3, col:21> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-RecoveryExpr 0x126140e58 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x126140e20 <col:3> 'struct ring_buffer *' lvalue ParmVar 0x126128648 'buffer' 'struct ring_buffer *'     |   `-UnaryOperator 0x126140f30 <col:20, col:21> '<dependent type>' contains-errors prefix '~' cannot overflow     |     `-ImplicitCastExpr 0x126140f18 <col:21> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x126140ef8 <col:21> '<dependent type>' contains-errors lvalue     `-CallExpr 0x126141120 <line:8:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x126141088 <col:2> 'int ()' Function 0x126140fd0 'mutex_unlock' 'int ()'       `-UnaryOperator 0x126141108 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x1261410e0 <col:16, col:24> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x1261410a8 <col:16> 'struct ring_buffer *' lvalue ParmVar 0x126128648 'buffer' 'struct ring_buffer *' ","19970":"`-FunctionDecl 0x13d1422d8  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13d1423d8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13d142440 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13d1424a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13d142380 <<invalid sloc>> Implicit 882 ","19536":"`-FunctionDecl 0x14c131748  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14c131848 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14c1318b0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14c131918 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14c1317f0 <<invalid sloc>> Implicit 882 ","19212":"`-FunctionDecl 0x12800de88  line:1:1 invalid file_ff_differs 'int (int *, int)'   |-ParmVarDecl 0x12800dd28 <col:17, col:24> col:24 invalid buf 'int *'   |-ParmVarDecl 0x12800dda8 <col:29, col:33> col:33 used ignore_empty 'int'   `-CompoundStmt 0x12880a728 <line:2:1, line:24:1>     |-IfStmt 0x12800e068 <line:4:5, line:5:9>     | |-BinaryOperator 0x12800e000 <line:4:9, col:24> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x12800df60 <col:9, col:14> '<dependent type>' contains-errors lvalue ->b_flags     | | | `-RecoveryExpr 0x12800df40 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12800dfe0 <col:24> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12800e058 <line:5:2, col:9>     |   `-RecoveryExpr 0x12800e038 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12880a280 <line:6:5, line:10:9>     | |-RecoveryExpr 0x12880a218 <line:6:9, line:9:49> '_Bool' contains-errors     | `-ReturnStmt 0x12880a270 <line:10:2, col:9>     |   `-RecoveryExpr 0x12880a250 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12880a408 <line:11:5, line:12:9>     | |-BinaryOperator 0x12880a3a0 <line:11:9, col:35> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x12880a2c0 <col:9, col:14> '<dependent type>' contains-errors lvalue ->b_start_ffc     | | | `-RecoveryExpr 0x12880a2a0 <col:9> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12880a388 <col:29, col:35> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x12880a370 <col:30, col:35> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x12880a328 <col:30, col:35> '<dependent type>' contains-errors lvalue ->b_p_ff     | |       `-RecoveryExpr 0x12880a308 <col:30> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12880a3f8 <line:12:2, col:9>     |   `-RecoveryExpr 0x12880a3d8 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12880a6c0 <line:13:5, line:14:9>     | |-BinaryOperator 0x12880a658 <line:13:9, col:72> 'int' contains-errors '&&'     | | |-ParenExpr 0x12880a548 <col:9, col:42> 'int' contains-errors     | | | `-BinaryOperator 0x12880a528 <col:10, col:32> 'int' contains-errors '||'     | | |   |-CXXDependentScopeMemberExpr 0x12880a448 <col:10, col:15> '<dependent type>' contains-errors lvalue ->b_p_bin     | | |   | `-RecoveryExpr 0x12880a428 <col:10> '<dependent type>' contains-errors lvalue     | | |   `-UnaryOperator 0x12880a510 <col:26, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |     `-ImplicitCastExpr 0x12880a4f8 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     | | |       `-CXXDependentScopeMemberExpr 0x12880a4b0 <col:27, col:32> '<dependent type>' contains-errors lvalue ->b_p_fixeol     | | |         `-RecoveryExpr 0x12880a490 <col:27> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x12880a638 <col:47, col:72> 'int' contains-errors '!='     | |   |-CXXDependentScopeMemberExpr 0x12880a588 <col:47, col:52> '<dependent type>' contains-errors lvalue ->b_start_eol     | |   | `-RecoveryExpr 0x12880a568 <col:47> '<dependent type>' contains-errors lvalue     | |   `-CXXDependentScopeMemberExpr 0x12880a5f0 <col:67, col:72> '<dependent type>' contains-errors lvalue ->b_p_eol     | |     `-RecoveryExpr 0x12880a5d0 <col:67> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12880a6b0 <line:14:2, col:9>     |   `-RecoveryExpr 0x12880a690 <col:9> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12880a718 <line:22:5, col:12>       `-RecoveryExpr 0x12880a6f8 <col:12> '<dependent type>' contains-errors lvalue ","19835":"`-FunctionDecl 0x1289434b8  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x1289435b8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x128943560 <<invalid sloc>> Implicit 873 ","19667":"`-FunctionDecl 0x1259418d8  line:1:12 invalid replmd_delete_link_value 'int (struct ldb_module *, struct replmd_private *, int *, struct ldb_dn *, const struct dsdb_schema *, const struct dsdb_attribute *, int, int, struct GUID *, struct dsdb_dn *, struct ldb_val *)' static   |-ParmVarDecl 0x125928648 <col:37, col:56> col:56 used module 'struct ldb_module *'   |-ParmVarDecl 0x125940a28 <line:2:9, col:32> col:32 used replmd_private 'struct replmd_private *'   |-ParmVarDecl 0x125940af8 <line:3:9, col:21> col:21 invalid mem_ctx 'int *'   |-ParmVarDecl 0x125940cc8 <line:4:9, col:24> col:24 used src_obj_dn 'struct ldb_dn *'   |-ParmVarDecl 0x125940e98 <line:5:9, col:35> col:35 used schema 'const struct dsdb_schema *'   |-ParmVarDecl 0x125941068 <line:6:9, col:38> col:38 used attr 'const struct dsdb_attribute *'   |-ParmVarDecl 0x1259410e8 <line:7:9, col:18> col:18 invalid seq_num 'int'   |-ParmVarDecl 0x125941168 <line:8:9, col:14> col:14 invalid is_active 'int'   |-ParmVarDecl 0x125941338 <line:9:9, col:22> col:22 used target_guid 'struct GUID *'   |-ParmVarDecl 0x125941508 <line:10:9, col:25> col:25 used target_dsdb_dn 'struct dsdb_dn *'   |-ParmVarDecl 0x1259416d8 <line:11:9, col:25> col:25 used output_val 'struct ldb_val *'   `-CompoundStmt 0x125947200 <line:12:1, line:44:1>     |-DeclStmt 0x126008c28 <line:13:2, col:54>     | |-RecordDecl 0x126008800 <col:2, col:9> col:9 struct ldb_context     | `-VarDecl 0x126008968 <col:2, col:53> col:22 used ldb 'struct ldb_context *' cinit     |   `-ImplicitCastExpr 0x126008bf8 <col:28, col:53> 'struct ldb_context *' <IntegralToPointer>     |     `-CallExpr 0x126008bb8 <col:28, col:53> 'int'     |       |-ImplicitCastExpr 0x126008ba0 <col:28> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x126008b30 <col:28> 'int ()' Function 0x126008a78 'ldb_module_get_ctx' 'int ()'     |       `-ImplicitCastExpr 0x126008be0 <col:47> 'struct ldb_module *' <LValueToRValue>     |         `-DeclRefExpr 0x126008b50 <col:47> 'struct ldb_module *' lvalue ParmVar 0x125928648 'module' 'struct ldb_module *'     |-DeclStmt 0x126008d98 <line:16:2, col:41>     | `-VarDecl 0x126008cf8 <col:2, col:37> col:21 used invocation_id 'const struct GUID *' cinit     |   `-RecoveryExpr 0x126008d78 <col:37> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x126008e30 <line:17:2, col:9>     | `-VarDecl 0x126008dc8 <col:2, col:6> col:6 used ret 'int'     |-CallExpr 0x126009158 <line:20:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126009068 <col:2> 'int ()' Function 0x126008fb0 'unix_to_nt_time' 'int ()'     | |-UnaryOperator 0x126009120 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x126009100 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x126009138 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126009338 <line:22:2, col:46> 'const struct GUID *' contains-errors '='     | |-DeclRefExpr 0x126009188 <col:2> 'const struct GUID *' contains-errors lvalue Var 0x126008cf8 'invocation_id' 'const struct GUID *'     | `-ImplicitCastExpr 0x126009320 <col:18, col:46> 'const struct GUID *' <IntegralToPointer>     |   `-CallExpr 0x1260092e0 <col:18, col:46> 'int'     |     |-ImplicitCastExpr 0x1260092c8 <col:18> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x126009288 <col:18> 'int ()' Function 0x1260091d0 'samdb_ntds_invocation_id' 'int ()'     |     `-ImplicitCastExpr 0x126009308 <col:43> 'struct ldb_context *' <LValueToRValue>     |       `-DeclRefExpr 0x1260092a8 <col:43> 'struct ldb_context *' lvalue Var 0x126008968 'ldb' 'struct ldb_context *'     |-IfStmt 0x126009450 <line:23:2, line:25:2>     | |-BinaryOperator 0x1260093d0 <line:23:6, col:23> 'int' contains-errors '=='     | | |-DeclRefExpr 0x126009358 <col:6> 'const struct GUID *' contains-errors lvalue Var 0x126008cf8 'invocation_id' 'const struct GUID *'     | | `-RecoveryExpr 0x1260093b0 <col:23> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126009438 <col:29, line:25:2>     |   `-ReturnStmt 0x126009428 <line:24:3, col:10>     |     `-RecoveryExpr 0x126009408 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126009760 <line:28:2, line:37:2>     | |-RecoveryExpr 0x126009470 <line:28:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126009748 <col:17, line:37:2>     |   `-IfStmt 0x126009728 <line:34:3, line:36:3>     |     |-RecoveryExpr 0x1260096a8 <line:34:7, col:14> '_Bool' contains-errors     |     `-CompoundStmt 0x126009710 <col:27, line:36:3>     |       `-ReturnStmt 0x126009700 <line:35:4, col:11>     |         `-ImplicitCastExpr 0x1260096e8 <col:11> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x1260096c8 <col:11> 'int' lvalue Var 0x126008dc8 'ret' 'int'     `-ReturnStmt 0x1259471f0 <line:43:2, col:9>       `-ImplicitCastExpr 0x1259471d8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1259471b8 <col:9> 'int' lvalue Var 0x126008dc8 'ret' 'int' ","19974":"`-FunctionDecl 0x14b80e638  line:1:1 invalid create_dir_file_monitor 'int (int *, int *, const char *, int, int)'   |-ParmVarDecl 0x14b80e328 <col:26, col:39> col:39 invalid backend 'int *'   |-ParmVarDecl 0x14b80e3a8 <line:2:26, col:48> col:48 invalid monitor_job 'int *'   |-ParmVarDecl 0x14b80e428 <line:3:26, col:38> col:38 used filename 'const char *'   |-ParmVarDecl 0x14b80e4a8 <line:4:26, col:44> col:44 invalid flags 'int'   |-ParmVarDecl 0x14b80e528 <line:5:26, col:35> col:35 invalid is_dir_monitor 'int'   `-CompoundStmt 0x14c124400 <line:6:1, line:41:1>     |-IfStmt 0x14c122dd8 <line:14:3, line:15:5>     | |-RecoveryExpr 0x14c122da8 <line:14:7, col:35> '_Bool' contains-errors     | `-ReturnStmt 0x14c122dc8 <line:15:5>     |-IfStmt 0x14c123390 <line:25:3, line:26:10>     | |-RecoveryExpr 0x14c123308 <line:25:7, col:16> '_Bool' contains-errors     | `-GotoStmt 0x14c123378 <line:26:5, col:10> 'out' 0x14c123328     `-LabelStmt 0x14c123bc8 <line:39:2, col:5> 'out'       `-NullStmt 0x14c123bc0 <col:5> ","20146":"`-FunctionDecl 0x15581f558  line:1:1 invalid dns_message_currentname 'int (int *, int, int **)'   |-ParmVarDecl 0x15581f328 <col:25, col:40> col:40 invalid msg 'int *'   |-ParmVarDecl 0x15581f3a8 <col:45, col:59> col:59 invalid section 'int'   |-ParmVarDecl 0x15581f460 <line:2:4, col:17> col:17 invalid name 'int **'   `-CompoundStmt 0x155836e78 <line:3:1, line:10:1>     |-CallExpr 0x15581f8d8 <line:4:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15581f770 <col:2> 'int ()' Function 0x15581f6b8 'REQUIRE' 'int ()'     | `-CallExpr 0x15581f8b0 <col:10, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15581f870 <col:10> 'int ()' Function 0x15581f7b8 'DNS_MESSAGE_VALID' 'int ()'     |   `-RecoveryExpr 0x15581f890 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155836868 <line:5:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15581f900 <col:2> 'int ()' Function 0x15581f6b8 'REQUIRE' 'int ()'     | `-CallExpr 0x155836840 <col:10, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x155836800 <col:10> 'int ()' Function 0x15581f948 'VALID_NAMED_SECTION' 'int ()'     |   `-RecoveryExpr 0x155836820 <col:30> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155836aa8 <line:6:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155836890 <col:2> 'int ()' Function 0x15581f6b8 'REQUIRE' 'int ()'     | `-BinaryOperator 0x155836a88 <col:10, col:35> 'int' contains-errors '&&'     |   |-BinaryOperator 0x1558369f8 <col:10, col:18> 'int' contains-errors '!='     |   | |-RecoveryExpr 0x1558368b0 <col:10> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1558369d8 <col:18> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x155836a68 <col:26, col:35> 'int' contains-errors '=='     |     |-UnaryOperator 0x155836a30 <col:26, col:27> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x155836a18 <col:27> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x155836908 <col:27> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x155836a48 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155836d08 <line:7:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155836ad0 <col:2> 'int ()' Function 0x15581f6b8 'REQUIRE' 'int ()'     | `-BinaryOperator 0x155836ce8 <col:10, col:35> 'int' contains-errors '!='     |   |-ArraySubscriptExpr 0x155836ca8 <col:10, col:30> '<dependent type>' contains-errors lvalue     |   | |-ImplicitCastExpr 0x155836c78 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>     |   | | `-CXXDependentScopeMemberExpr 0x155836b10 <col:10, col:15> '<dependent type>' contains-errors lvalue ->cursors     |   | |   `-RecoveryExpr 0x155836af0 <col:10> '<dependent type>' contains-errors lvalue     |   | `-ImplicitCastExpr 0x155836c90 <col:23> '<dependent type>' contains-errors <LValueToRValue>     |   |   `-RecoveryExpr 0x155836b58 <col:23> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x155836cc8 <col:35> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x155836e58 <line:9:2, col:30> '<dependent type>' contains-errors '='       |-UnaryOperator 0x155836d68 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow       | `-ImplicitCastExpr 0x155836d50 <col:3> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x155836d30 <col:3> '<dependent type>' contains-errors lvalue       `-ArraySubscriptExpr 0x155836e38 <col:10, col:30> '<dependent type>' contains-errors lvalue         |-ImplicitCastExpr 0x155836e08 <col:10, col:15> '<dependent type>' contains-errors <LValueToRValue>         | `-CXXDependentScopeMemberExpr 0x155836da0 <col:10, col:15> '<dependent type>' contains-errors lvalue ->cursors         |   `-RecoveryExpr 0x155836d80 <col:10> '<dependent type>' contains-errors lvalue         `-ImplicitCastExpr 0x155836e20 <col:23> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x155836de8 <col:23> '<dependent type>' contains-errors lvalue ","19955":"`-FunctionDecl 0x16102bb18  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x16102bc18 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x16102bbc0 <<invalid sloc>> Implicit 873 ","19262":"`-FunctionDecl 0x13b0bca80  line:1:6 invalid jas_matrix_setall 'void (int *, int)'   |-ParmVarDecl 0x13b0bc928 <col:24, col:38> col:38 invalid matrix 'int *'   |-ParmVarDecl 0x13b0bc9a8 <col:46, col:59> col:59 invalid val 'int'   `-CompoundStmt 0x13b0d6d00 <line:2:1, line:20:1>     |-DeclStmt 0x13b0bcbb8 <line:3:2, col:7>     | `-VarDecl 0x13b0bcb50 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x13b0bcc50 <line:4:2, col:7>     | `-VarDecl 0x13b0bcbe8 <col:2, col:6> col:6 used j 'int'     |-DeclStmt 0x13b0bcd00 <line:6:2, col:13>     | `-VarDecl 0x13b0bcc98 <col:2, col:6> col:6 used rowstep 'int'     `-IfStmt 0x13b0d6ce0 <line:9:2, line:19:2>       |-BinaryOperator 0x13b0d6160 <line:9:6, col:69> 'int' contains-errors '&&'       | |-BinaryOperator 0x13b0bcf18 <col:6, col:35> 'int' contains-errors '>'       | | |-CallExpr 0x13b0bced0 <col:6, col:31> '<dependent type>' contains-errors       | | | |-DeclRefExpr 0x13b0bce90 <col:6> 'int ()' Function 0x13b0bcdd8 'jas_matrix_numrows' 'int ()'       | | | `-RecoveryExpr 0x13b0bceb0 <col:25> '<dependent type>' contains-errors lvalue       | | `-IntegerLiteral 0x13b0bcef8 <col:35> 'int' 0       | `-BinaryOperator 0x13b0d6140 <col:40, col:69> 'int' contains-errors '>'       |   |-CallExpr 0x13b0d60f8 <col:40, col:65> '<dependent type>' contains-errors       |   | |-DeclRefExpr 0x13b0d60b8 <col:40> 'int ()' Function 0x13b0d6000 'jas_matrix_numcols' 'int ()'       |   | `-RecoveryExpr 0x13b0d60d8 <col:59> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x13b0d6120 <col:69> 'int' 0       `-CompoundStmt 0x13b0d6cb8 <col:72, line:19:2>         |-CallExpr 0x13b0d62e8 <line:10:3, col:23> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13b0d6260 <col:3> 'int ()' Function 0x13b0d61a8 'assert' 'int ()'         | `-CXXDependentScopeMemberExpr 0x13b0d62a0 <col:10, col:18> '<dependent type>' contains-errors lvalue ->rows_         |   `-RecoveryExpr 0x13b0d6280 <col:10> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x13b0d6478 <line:11:3, col:38> 'int' contains-errors '='         | |-DeclRefExpr 0x13b0d6310 <col:3> 'int' lvalue Var 0x13b0bcc98 'rowstep' 'int'         | `-CallExpr 0x13b0d6450 <col:13, col:38> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x13b0d6410 <col:13> 'int ()' Function 0x13b0d6358 'jas_matrix_rowstep' 'int ()'         |   `-RecoveryExpr 0x13b0d6430 <col:32> '<dependent type>' contains-errors lvalue         `-ForStmt 0x13b0d6c80 <line:12:3, line:18:3>           |-BinaryOperator 0x13b0d66d0 <line:12:8, col:56> 'int' contains-errors ','           | |-BinaryOperator 0x13b0d6520 <col:8, col:20> 'int' contains-errors '='           | | |-DeclRefExpr 0x13b0d6498 <col:8> 'int' lvalue Var 0x13b0bcb50 'i' 'int'           | | `-CXXDependentScopeMemberExpr 0x13b0d64d8 <col:12, col:20> '<dependent type>' contains-errors lvalue ->numrows_           | |   `-RecoveryExpr 0x13b0d64b8 <col:12> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x13b0d66b0 <col:30, col:56> 'int' contains-errors '='           |   |-DeclRefExpr 0x13b0d6658 <col:30> 'int' lvalue Var 0x13b0bcc98 'rowstep' 'int'           |   `-ArraySubscriptExpr 0x13b0d6690 <col:41, col:56> '<dependent type>' contains-errors lvalue           |     |-ImplicitCastExpr 0x13b0d6678 <col:41, col:49> '<dependent type>' contains-errors <LValueToRValue>           |     | `-CXXDependentScopeMemberExpr 0x13b0d6578 <col:41, col:49> '<dependent type>' contains-errors lvalue ->rows_           |     |   `-RecoveryExpr 0x13b0d6558 <col:41> '<dependent type>' contains-errors lvalue           |     `-IntegerLiteral 0x13b0d65c0 <col:55> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x13b0d6748 <col:59, col:63> 'int' '>'           | |-ImplicitCastExpr 0x13b0d6730 <col:59> 'int' <LValueToRValue>           | | `-DeclRefExpr 0x13b0d66f0 <col:59> 'int' lvalue Var 0x13b0bcb50 'i' 'int'           | `-IntegerLiteral 0x13b0d6710 <col:63> 'int' 0           |-BinaryOperator 0x13b0d6890 <col:66, line:13:17> 'int' ','           | |-UnaryOperator 0x13b0d6788 <line:12:66, col:68> 'int' prefix '--'           | | `-DeclRefExpr 0x13b0d6768 <col:68> 'int' lvalue Var 0x13b0bcb50 'i' 'int'           | `-CompoundAssignOperator 0x13b0d6860 <line:13:5, col:17> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'           |   |-DeclRefExpr 0x13b0d6828 <col:5> 'int' lvalue Var 0x13b0bcc98 'rowstep' 'int'           |   `-ImplicitCastExpr 0x13b0d6848 <col:17> 'int' <LValueToRValue>           |     `-DeclRefExpr 0x13b0d67b8 <col:17> 'int' lvalue Var 0x13b0bcc98 'rowstep' 'int'           `-CompoundStmt 0x13b0d6c68 <col:26, line:18:3>             `-ForStmt 0x13b0d6c30 <line:14:4, line:17:4>               |-<<<NULL>>>               |-<<<NULL>>>               |-BinaryOperator 0x13b0d6a20 <line:14:48, col:52> 'int' '>'               | |-ImplicitCastExpr 0x13b0d6a08 <col:48> 'int' <LValueToRValue>               | | `-DeclRefExpr 0x13b0d69c8 <col:48> 'int' lvalue Var 0x13b0bcbe8 'j' 'int'               | `-IntegerLiteral 0x13b0d69e8 <col:52> 'int' 0               |-BinaryOperator 0x13b0d6b00 <col:55, line:15:8> '<dependent type>' contains-errors ','               | |-UnaryOperator 0x13b0d6a60 <line:14:55, col:57> 'int' prefix '--'               | | `-DeclRefExpr 0x13b0d6a40 <col:57> 'int' lvalue Var 0x13b0bcbe8 'j' 'int'               | `-UnaryOperator 0x13b0d6ae8 <line:15:6, col:8> '<dependent type>' contains-errors prefix '++' cannot overflow               |   `-RecoveryExpr 0x13b0d6ac8 <col:8> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x13b0d6c18 <col:14, line:17:4>                 `-BinaryOperator 0x13b0d6bf8 <line:16:5, col:13> '<dependent type>' contains-errors '='                   |-UnaryOperator 0x13b0d6be0 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow                   | `-ImplicitCastExpr 0x13b0d6bc8 <col:6> '<dependent type>' contains-errors <LValueToRValue>                   |   `-RecoveryExpr 0x13b0d6ba8 <col:6> '<dependent type>' contains-errors lvalue                   `-RecoveryExpr 0x13b0d6b68 <col:13> '<dependent type>' contains-errors lvalue ","20167":"`-FunctionDecl 0x13c928750  line:1:6 ieee80211_csa_finish 'void (struct ieee80211_vif *)'   |-ParmVarDecl 0x13c928648 <col:27, col:49> col:49 used vif 'struct ieee80211_vif *'   `-CompoundStmt 0x13c9410c8 <line:2:1, line:7:1>     |-DeclStmt 0x13c940e48 <line:3:2, col:57>     | |-RecordDecl 0x13c940a48 <col:2, col:9> col:9 struct ieee80211_sub_if_data     | `-VarDecl 0x13c940bb8 <col:2, col:56> col:32 used sdata 'struct ieee80211_sub_if_data *' cinit     |   `-ImplicitCastExpr 0x13c940e18 <col:40, col:56> 'struct ieee80211_sub_if_data *' <IntegralToPointer>     |     `-CallExpr 0x13c940dd8 <col:40, col:56> 'int'     |       |-ImplicitCastExpr 0x13c940dc0 <col:40> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13c940d50 <col:40> 'int ()' Function 0x13c940c98 'vif_to_sdata' 'int ()'     |       `-ImplicitCastExpr 0x13c940e00 <col:53> 'struct ieee80211_vif *' <LValueToRValue>     |         `-DeclRefExpr 0x13c940d70 <col:53> 'struct ieee80211_vif *' lvalue ParmVar 0x13c928648 'vif' 'struct ieee80211_vif *'     `-CallExpr 0x13c941098 <line:5:2, line:6:34> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c940f40 <line:5:2> 'int ()' Function 0x13c940e88 'ieee80211_queue_work' 'int ()'       |-UnaryOperator 0x13c941008 <col:23, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-CXXDependentScopeMemberExpr 0x13c940fc0 <col:24, col:38> '<dependent type>' contains-errors lvalue ->hw       |   `-RecoveryExpr 0x13c940f98 <col:24, col:31> '<dependent type>' contains-errors lvalue       |     `-DeclRefExpr 0x13c940f60 <col:24> 'struct ieee80211_sub_if_data *' lvalue Var 0x13c940bb8 'sdata' 'struct ieee80211_sub_if_data *'       `-UnaryOperator 0x13c941080 <line:6:9, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x13c941058 <col:10, col:17> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x13c941020 <col:10> 'struct ieee80211_sub_if_data *' lvalue Var 0x13c940bb8 'sdata' 'struct ieee80211_sub_if_data *' ","19870":"`-FunctionDecl 0x12a80e078  line:1:1 invalid map_search 'int (int, int *, const int *, const int *)'   |-ParmVarDecl 0x12a80dcf0 <col:12, col:25> col:25 invalid enc 'int'   |-ParmVarDecl 0x12a80de20 <col:30, col:40> col:36 invalid map 'int *'   |-ParmVarDecl 0x12a80dea0 <line:2:12, col:25> col:25 invalid text 'const int *'   |-ParmVarDecl 0x12a80df20 <col:31, col:44> col:44 invalid text_range 'const int *'   `-CompoundStmt 0x12b0093f0 <line:3:1, line:12:1>     |-DeclStmt 0x12a80e1e0 <line:4:3, col:24>     | `-VarDecl 0x12a80e158 <col:3, col:16> col:16 referenced invalid s 'const int *'     `-WhileStmt 0x12b0093b8 <line:6:3, line:10:3>       |-BinaryOperator 0x12a80e238 <line:6:10, col:14> 'int' contains-errors '<'       | |-RecoveryExpr 0x12a80e1f8 <col:10> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12a80e218 <col:14> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12b0093a0 <col:26, line:10:3>         `-CompoundAssignOperator 0x12b009370 <line:9:5, col:23> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |-RecoveryExpr 0x12a80e338 <col:5> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x12a80e318 <col:5> 'const int *' lvalue Var 0x12a80e158 's' 'const int *'           `-CallExpr 0x12b009340 <col:10, col:23> '<dependent type>' contains-errors             |-DeclRefExpr 0x12b0092e0 <col:10> 'int ()' Function 0x12b009228 'enclen' 'int ()'             |-RecoveryExpr 0x12b009300 <col:17> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x12b009320 <col:22> '<dependent type>' contains-errors lvalue ","19411":"`-FunctionDecl 0x12f922748  line:1:5 af_alg_cmsg_send 'int (struct msghdr *, struct af_alg_control *)'   |-ParmVarDecl 0x13800e248 <col:22, col:37> col:37 used msg 'struct msghdr *'   |-ParmVarDecl 0x12f922628 <col:42, col:65> col:65 used con 'struct af_alg_control *'   `-CompoundStmt 0x138027c60 <line:2:1, line:39:1>     |-DeclStmt 0x12f922a38 <line:3:2, col:22>     | |-RecordDecl 0x12f922848 <col:2, col:9> col:9 struct cmsghdr     | `-VarDecl 0x12f9229b8 <col:2, col:18> col:18 used cmsg 'struct cmsghdr *'     |-CallExpr 0x12f922c28 <line:5:2, col:28> 'int'     | |-ImplicitCastExpr 0x12f922c10 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f922b80 <col:2> 'int ()' Function 0x12f922ac8 'for_each_cmsghdr' 'int ()'     | |-ImplicitCastExpr 0x12f922c58 <col:19> 'struct cmsghdr *' <LValueToRValue>     | | `-DeclRefExpr 0x12f922ba0 <col:19> 'struct cmsghdr *' lvalue Var 0x12f9229b8 'cmsg' 'struct cmsghdr *'     | `-ImplicitCastExpr 0x12f922c70 <col:25> 'struct msghdr *' <LValueToRValue>     |   `-DeclRefExpr 0x12f922bc0 <col:25> 'struct msghdr *' lvalue ParmVar 0x13800e248 'msg' 'struct msghdr *'     |-CompoundStmt 0x138027c10 <col:30, line:36:2>     | |-IfStmt 0x12f922f00 <line:6:3, line:7:12>     | | |-UnaryOperator 0x12f922e40 <line:6:7, col:25> 'int' prefix '!' cannot overflow     | | | `-CallExpr 0x12f922de0 <col:8, col:25> 'int'     | | |   |-ImplicitCastExpr 0x12f922dc8 <col:8> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x12f922d68 <col:8> 'int ()' Function 0x12f922cb0 'CMSG_OK' 'int ()'     | | |   |-ImplicitCastExpr 0x12f922e10 <col:16> 'struct msghdr *' <LValueToRValue>     | | |   | `-DeclRefExpr 0x12f922d88 <col:16> 'struct msghdr *' lvalue ParmVar 0x13800e248 'msg' 'struct msghdr *'     | | |   `-ImplicitCastExpr 0x12f922e28 <col:21> 'struct cmsghdr *' <LValueToRValue>     | | |     `-DeclRefExpr 0x12f922da8 <col:21> 'struct cmsghdr *' lvalue Var 0x12f9229b8 'cmsg' 'struct cmsghdr *'     | | `-ReturnStmt 0x12f922ef0 <line:7:4, col:12>     | |   `-UnaryOperator 0x12f922ed8 <col:11, col:12> '<dependent type>' contains-errors prefix '-' cannot overflow     | |     `-ImplicitCastExpr 0x12f922ec0 <col:12> '<dependent type>' contains-errors <LValueToRValue>     | |       `-RecoveryExpr 0x12f922ea0 <col:12> '<dependent type>' contains-errors lvalue     | `-SwitchStmt 0x12f923070 <line:11:3, line:35:3>     |   |-ImplicitCastExpr 0x12f923058 <line:11:11, col:17> '<dependent type>' contains-errors <LValueToRValue>     |   | `-RecoveryExpr 0x12f923030 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12f922ff8 <col:11> 'struct cmsghdr *' lvalue Var 0x12f9229b8 'cmsg' 'struct cmsghdr *'     |   `-CompoundStmt 0x138027bc8 <col:28, line:35:3>     |     |-IfStmt 0x12f9233e8 <line:13:4, line:14:13>     |     | |-BinaryOperator 0x12f923320 <line:13:8, col:50> 'int' contains-errors '<'     |     | | |-RecoveryExpr 0x12f9230e8 <col:8, col:14> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x12f9230b0 <col:8> 'struct cmsghdr *' lvalue Var 0x12f9229b8 'cmsg' 'struct cmsghdr *'     |     | | `-CallExpr 0x12f9232f8 <col:25, col:50> 'int' contains-errors     |     | |   |-ImplicitCastExpr 0x12f9232e0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |     | |   | `-DeclRefExpr 0x12f9231f0 <col:25> 'int ()' Function 0x12f923138 'CMSG_LEN' 'int ()'     |     | |   `-UnaryExprOrTypeTraitExpr 0x12f9232c0 <col:34, col:49> 'unsigned long' contains-errors sizeof     |     | |     `-ParenExpr 0x12f9232a0 <col:40, col:49> '<dependent type>' contains-errors     |     | |       `-UnaryOperator 0x12f923288 <col:41, col:47> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | |         `-ImplicitCastExpr 0x12f923270 <col:42, col:47> '<dependent type>' contains-errors <LValueToRValue>     |     | |           `-RecoveryExpr 0x12f923248 <col:42, col:47> '<dependent type>' contains-errors lvalue     |     | |             `-DeclRefExpr 0x12f923210 <col:42> 'struct af_alg_control *' lvalue ParmVar 0x12f922628 'con' 'struct af_alg_control *' non_odr_use_unevaluated     |     | `-ReturnStmt 0x12f9233d8 <line:14:5, col:13>     |     |   `-UnaryOperator 0x12f9233c0 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |     `-ImplicitCastExpr 0x12f9233a8 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x12f923388 <col:13> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x138027628 <line:15:4, col:36> '<dependent type>' contains-errors '='     |     | |-RecoveryExpr 0x12f923440 <col:4, col:9> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x12f923408 <col:4> 'struct af_alg_control *' lvalue ParmVar 0x12f922628 'con' 'struct af_alg_control *'     |     | `-CStyleCastExpr 0x138027600 <col:14, col:36> 'void *' <IntegralToPointer>     |     |   `-CallExpr 0x12f9235a0 <col:22, col:36> 'int'     |     |     |-ImplicitCastExpr 0x12f923588 <col:22> 'int (*)()' <FunctionToPointerDecay>     |     |     | `-DeclRefExpr 0x12f923548 <col:22> 'int ()' Function 0x12f923490 'CMSG_DATA' 'int ()'     |     |     `-ImplicitCastExpr 0x12f9235c8 <col:32> 'struct cmsghdr *' <LValueToRValue>     |     |       `-DeclRefExpr 0x12f923568 <col:32> 'struct cmsghdr *' lvalue Var 0x12f9229b8 'cmsg' 'struct cmsghdr *'     |     |-IfStmt 0x138027950 <line:16:4, line:18:13>     |     | |-BinaryOperator 0x138027888 <line:16:8, line:17:29> 'int' contains-errors '<'     |     | | |-RecoveryExpr 0x138027680 <line:16:8, col:14> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x138027648 <col:8> 'struct cmsghdr *' lvalue Var 0x12f9229b8 'cmsg' 'struct cmsghdr *'     |     | | `-CallExpr 0x138027860 <col:25, line:17:29> '<dependent type>' contains-errors     |     | |   |-DeclRefExpr 0x1380276a8 <line:16:25> 'int ()' Function 0x12f923138 'CMSG_LEN' 'int ()'     |     | |   `-BinaryOperator 0x138027840 <col:34, line:17:28> '<dependent type>' contains-errors '+'     |     | |     |-CXXDependentScopeMemberExpr 0x138027728 <line:16:34, col:43> '<dependent type>' contains-errors lvalue ->ivlen     |     | |     | `-RecoveryExpr 0x138027700 <col:34, col:39> '<dependent type>' contains-errors lvalue     |     | |     |   `-DeclRefExpr 0x1380276c8 <col:34> 'struct af_alg_control *' lvalue ParmVar 0x12f922628 'con' 'struct af_alg_control *'     |     | |     `-UnaryExprOrTypeTraitExpr 0x138027820 <line:17:13, col:28> 'unsigned long' contains-errors sizeof     |     | |       `-ParenExpr 0x138027800 <col:19, col:28> '<dependent type>' contains-errors     |     | |         `-UnaryOperator 0x1380277e8 <col:20, col:26> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | |           `-ImplicitCastExpr 0x1380277d0 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>     |     | |             `-RecoveryExpr 0x1380277a8 <col:21, col:26> '<dependent type>' contains-errors lvalue     |     | |               `-DeclRefExpr 0x138027770 <col:21> 'struct af_alg_control *' lvalue ParmVar 0x12f922628 'con' 'struct af_alg_control *' non_odr_use_unevaluated     |     | `-ReturnStmt 0x138027940 <line:18:5, col:13>     |     |   `-UnaryOperator 0x138027928 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |     `-ImplicitCastExpr 0x138027910 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x1380278f0 <col:13> '<dependent type>' contains-errors lvalue     |     |-BreakStmt 0x138027970 <line:19:4>     |     |-BreakStmt 0x138027a90 <line:25:4>     |     |-BreakStmt 0x138027b98 <line:31:4>     |     `-DefaultStmt 0x138027ba8 <line:33:3, col:10>     |       `-NullStmt 0x138027ba0 <col:10>     `-ReturnStmt 0x138027c50 <line:38:2, col:9>       `-IntegerLiteral 0x138027c30 <col:9> 'int' 0 ","20184":"`-FunctionDecl 0x14800a3b0  col:3 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14800a4b0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14800a518 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14800a580 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14800a458 <<invalid sloc>> Implicit 900 ","19355":"`-FunctionDecl 0x1369281c8  line:1:1 invalid _tiffSizeProc 'int (int)'   |-ParmVarDecl 0x1369280f0 <col:15, col:25> col:25 invalid hdata 'int'   `-CompoundStmt 0x1369286c8 <col:32, line:8:1>     |-CallExpr 0x1369284e8 <line:4:5, col:18> 'int'     | |-ImplicitCastExpr 0x1369284d0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x136928400 <col:5> 'int ()' Function 0x136928348 'TRACE' 'int ()'     | `-ImplicitCastExpr 0x136928510 <col:11, col:17> 'char *' <ArrayToPointerDecay>     |   `-ParenExpr 0x136928480 <col:11, col:17> 'char[4]' lvalue     |     `-StringLiteral 0x136928460 <col:12> 'char[4]' lvalue \"STR\"     `-CallExpr 0x136928688 <line:5:5, col:21> '<dependent type>' contains-errors       |-DeclRefExpr 0x136928608 <col:5> 'int ()' Function 0x136928550 'dump_state' 'int ()'       `-RecoveryExpr 0x136928668 <col:16> '<dependent type>' contains-errors lvalue ","19590":"`-FunctionDecl 0x13800e358  line:1:12 spk_ttyio_ldisc_open 'int (struct tty_struct *)' static   |-ParmVarDecl 0x13800e248 <col:33, col:52> col:52 used tty 'struct tty_struct *'   `-CompoundStmt 0x138027530 <line:2:1, line:28:1>     |-DeclStmt 0x138026838 <line:3:2, col:35>     | |-RecordDecl 0x138026650 <col:2, col:9> col:9 struct spk_ldisc_data     | `-VarDecl 0x1380267b8 <col:2, col:25> col:25 used ldisc_data 'struct spk_ldisc_data *'     |-IfStmt 0x1380269e8 <line:5:2, line:6:11>     | |-UnaryOperator 0x138026910 <line:5:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1380268f8 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x1380268b0 <col:7, col:17> '<dependent type>' contains-errors lvalue ->write     | |     `-RecoveryExpr 0x138026888 <col:7, col:12> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x138026850 <col:7> 'struct tty_struct *' lvalue ParmVar 0x13800e248 'tty' 'struct tty_struct *'     | `-ReturnStmt 0x1380269d8 <line:6:3, col:11>     |   `-UnaryOperator 0x1380269c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1380269a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x138026988 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138026bd0 <line:8:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138026b20 <col:2> 'int ()' Function 0x138026a68 'mutex_lock' 'int ()'     | `-UnaryOperator 0x138026bb8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138026b98 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x138026eb0 <line:9:2, line:12:2>     | |-RecoveryExpr 0x138026c10 <line:9:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x138026e90 <col:19, line:12:2>     |   |-CallExpr 0x138026dc0 <line:10:3, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x138026d10 <col:3> 'int ()' Function 0x138026c58 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x138026da8 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x138026d88 <col:17> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x138026e80 <line:11:3, col:11>     |     `-UnaryOperator 0x138026e68 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x138026e50 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x138026e30 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1380272a0 <line:16:2, line:20:2>     | |-UnaryOperator 0x1380270d0 <line:16:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1380270b8 <col:7> 'struct spk_ldisc_data *' <LValueToRValue>     | |   `-DeclRefExpr 0x138027098 <col:7> 'struct spk_ldisc_data *' lvalue Var 0x1380267b8 'ldisc_data' 'struct spk_ldisc_data *'     | `-CompoundStmt 0x138027280 <col:19, line:20:2>     |   |-CallExpr 0x1380271b0 <line:18:3, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x138027100 <col:3> 'int ()' Function 0x138026c58 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x138027198 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x138027178 <col:17> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x138027270 <line:19:3, col:11>     |     `-UnaryOperator 0x138027258 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x138027240 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x138027220 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138027438 <line:22:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1380273a0 <col:2> 'int ()' Function 0x1380272e8 'init_completion' 'int ()'     | `-UnaryOperator 0x138027420 <col:18, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1380273f8 <col:19, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1380273c0 <col:19> 'struct spk_ldisc_data *' lvalue Var 0x1380267b8 'ldisc_data' 'struct spk_ldisc_data *'     `-ReturnStmt 0x138027520 <line:27:2, col:9>       `-IntegerLiteral 0x138027500 <col:9> 'int' 0 ","20171":"`-FunctionDecl 0x15300df58  line:1:1 invalid TPMI_ALG_PUBLIC_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x15300dd28 <col:27, col:44> col:44 invalid target 'int *'   |-ParmVarDecl 0x15300dde0 <col:52, col:59> col:59 invalid buffer 'int **'   |-ParmVarDecl 0x15300de60 <col:67, col:74> col:74 invalid size 'int *'   `-CompoundStmt 0x1520f5d28 <line:2:1, line:28:1>     |-IfStmt 0x15300e2e8 <line:5:5, line:7:5>     | |-BinaryOperator 0x15300e0a8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15300e068 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15300e088 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15300e2d8 <col:31, line:7:5>     |-IfStmt 0x1520f5cc0 <line:8:5, line:26:5>     | |-BinaryOperator 0x15300e398 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15300e358 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15300e378 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1520f5ca8 <col:31, line:26:5>     |   `-SwitchStmt 0x1520f5c18 <line:9:2, line:25:2>     |     |-UnaryOperator 0x1520f5c00 <line:9:10, col:11> '<dependent type>' contains-errors prefix '*' cannot overflow     |     | `-ImplicitCastExpr 0x15300e3d8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x15300e3b8 <col:11> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x1520f5c88 <col:19, line:25:2>     |       |-BreakStmt 0x1520f5c40 <line:22:6>     |       `-DefaultStmt 0x1520f5c68 <line:23:4, col:11>     |         `-NullStmt 0x1520f5c60 <col:11>     `-ReturnStmt 0x1520f5d18 <line:27:5, col:12>       `-RecoveryExpr 0x1520f5cf8 <col:12> '<dependent type>' contains-errors lvalue ","20023":"`-FunctionDecl 0x13a128288  line:1:5 invalid am_check_url 'int (int *, const char *)'   |-ParmVarDecl 0x13a128128 <col:18, col:31> col:31 invalid r 'int *'   |-ParmVarDecl 0x13a1281a8 <col:34, col:46> col:46 used url 'const char *'   `-CompoundStmt 0x13a809dc0 <line:2:1, line:21:1>     |-DeclStmt 0x13a1283c0 <line:3:5, col:18>     | `-VarDecl 0x13a128358 <col:5, col:17> col:17 used i 'const char *'     |-ForStmt 0x13a809d40 <line:5:5, line:18:5>     | |-BinaryOperator 0x13a128430 <line:5:10, col:14> 'const char *' '='     | | |-DeclRefExpr 0x13a1283d8 <col:10> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'     | | `-ImplicitCastExpr 0x13a128418 <col:14> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x13a1283f8 <col:14> 'const char *' lvalue ParmVar 0x13a1281a8 'url' 'const char *'     | |-<<<NULL>>>     | |-ImplicitCastExpr 0x13a1284a0 <col:19, col:20> 'char' <LValueToRValue>     | | `-UnaryOperator 0x13a128488 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x13a128470 <col:20> 'const char *' <LValueToRValue>     | |     `-DeclRefExpr 0x13a128450 <col:20> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'     | |-UnaryOperator 0x13a1284d8 <col:23, col:24> 'const char *' postfix '++'     | | `-DeclRefExpr 0x13a1284b8 <col:23> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'     | `-CompoundStmt 0x13a809d20 <col:28, line:18:5>     |   |-IfStmt 0x13a809a28 <line:6:9, line:11:9>     |   | |-BinaryOperator 0x13a128668 <line:6:13, col:29> 'int' '&&'     |   | | |-BinaryOperator 0x13a128590 <col:13, col:19> 'int' '>='     |   | | | |-ImplicitCastExpr 0x13a128578 <col:13, col:14> 'int' <IntegralCast>     |   | | | | `-ImplicitCastExpr 0x13a128560 <col:13, col:14> 'char' <LValueToRValue>     |   | | | |   `-UnaryOperator 0x13a128528 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow     |   | | | |     `-ImplicitCastExpr 0x13a128510 <col:14> 'const char *' <LValueToRValue>     |   | | | |       `-DeclRefExpr 0x13a1284f0 <col:14> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'     |   | | | `-IntegerLiteral 0x13a128540 <col:19> 'int' 0     |   | | `-BinaryOperator 0x13a128648 <col:24, col:29> 'int' '<'     |   | |   |-ImplicitCastExpr 0x13a128630 <col:24, col:25> 'int' <IntegralCast>     |   | |   | `-ImplicitCastExpr 0x13a128618 <col:24, col:25> 'char' <LValueToRValue>     |   | |   |   `-UnaryOperator 0x13a1285e8 <col:24, col:25> 'const char' lvalue prefix '*' cannot overflow     |   | |   |     `-ImplicitCastExpr 0x13a1285d0 <col:25> 'const char *' <LValueToRValue>     |   | |   |       `-DeclRefExpr 0x13a1285b0 <col:25> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'     |   | |   `-CharacterLiteral 0x13a128600 <col:29> 'int' 32     |   | `-CompoundStmt 0x13a809a08 <col:34, line:11:9>     |   |   |-CallExpr 0x13a809978 <line:8:13, line:9:32> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x13a1287e0 <line:8:13> 'int ()' Function 0x13a128728 'AM_LOG_RERROR' 'int ()'     |   |   | |-RecoveryExpr 0x13a809918 <col:27> '<dependent type>' contains-errors lvalue     |   |   | |-RecoveryExpr 0x13a809938 <col:39> '<dependent type>' contains-errors lvalue     |   |   | |-RecoveryExpr 0x13a809958 <col:50> '<dependent type>' contains-errors lvalue     |   |   | |-RecoveryExpr 0x13a809848 <col:68> '<dependent type>' contains-errors lvalue     |   |   | `-StringLiteral 0x13a8098b0 <line:9:27> 'char[4]' lvalue \"STR\"     |   |   `-ReturnStmt 0x13a8099f8 <line:10:13, col:20>     |   |     `-RecoveryExpr 0x13a8099d8 <col:20> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x13a809d00 <line:12:9, line:17:9>     |     |-BinaryOperator 0x13a809ae0 <line:12:13, col:19> 'int' '=='     |     | |-ImplicitCastExpr 0x13a809ac8 <col:13, col:14> 'int' <IntegralCast>     |     | | `-ImplicitCastExpr 0x13a809ab0 <col:13, col:14> 'char' <LValueToRValue>     |     | |   `-UnaryOperator 0x13a809a80 <col:13, col:14> 'const char' lvalue prefix '*' cannot overflow     |     | |     `-ImplicitCastExpr 0x13a809a68 <col:14> 'const char *' <LValueToRValue>     |     | |       `-DeclRefExpr 0x13a809a48 <col:14> 'const char *' lvalue Var 0x13a128358 'i' 'const char *'     |     | `-CharacterLiteral 0x13a809a98 <col:19> 'int' 92     |     `-CompoundStmt 0x13a809ce0 <col:25, line:17:9>     |       |-CallExpr 0x13a809c50 <line:14:13, line:15:32> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x13a809b00 <line:14:13> 'int ()' Function 0x13a128728 'AM_LOG_RERROR' 'int ()'     |       | |-RecoveryExpr 0x13a809bf0 <col:27> '<dependent type>' contains-errors lvalue     |       | |-RecoveryExpr 0x13a809c10 <col:39> '<dependent type>' contains-errors lvalue     |       | |-RecoveryExpr 0x13a809c30 <col:50> '<dependent type>' contains-errors lvalue     |       | |-RecoveryExpr 0x13a809b68 <col:68> '<dependent type>' contains-errors lvalue     |       | `-StringLiteral 0x13a809b88 <line:15:27> 'char[4]' lvalue \"STR\"     |       `-ReturnStmt 0x13a809cd0 <line:16:13, col:20>     |         `-RecoveryExpr 0x13a809cb0 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13a809db0 <line:20:5, col:12>       `-RecoveryExpr 0x13a809d90 <col:12> '<dependent type>' contains-errors lvalue ","19282":"`-FunctionDecl 0x13d928750  line:1:13 hugetlb_vm_op_close 'void (struct vm_area_struct *)' static   |-ParmVarDecl 0x13d928648 <col:33, col:56> col:56 used vma 'struct vm_area_struct *'   `-CompoundStmt 0x13d9410e8 <line:2:1, line:23:1>     |-DeclStmt 0x13e008648 <line:3:2, col:36>     | |-RecordDecl 0x13e008248 <col:2, col:9> col:9 struct hstate     | `-VarDecl 0x13e0083b8 <col:2, col:35> col:17 used h 'struct hstate *' cinit     |   `-ImplicitCastExpr 0x13e008618 <col:21, col:35> 'struct hstate *' <IntegralToPointer>     |     `-CallExpr 0x13e0085d8 <col:21, col:35> 'int'     |       |-ImplicitCastExpr 0x13e0085c0 <col:21> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13e008550 <col:21> 'int ()' Function 0x13e008498 'hstate_vma' 'int ()'     |       `-ImplicitCastExpr 0x13e008600 <col:32> 'struct vm_area_struct *' <LValueToRValue>     |         `-DeclRefExpr 0x13e008570 <col:32> 'struct vm_area_struct *' lvalue ParmVar 0x13d928648 'vma' 'struct vm_area_struct *'     |-DeclStmt 0x13e0089d8 <line:4:2, col:51>     | |-RecordDecl 0x13e008660 <col:2, col:9> col:9 struct resv_map     | `-VarDecl 0x13e0087c8 <col:2, col:50> col:19 used reservations 'struct resv_map *' cinit     |   `-ImplicitCastExpr 0x13e0089a8 <col:34, col:50> 'struct resv_map *' <IntegralToPointer>     |     `-CallExpr 0x13e008968 <col:34, col:50> 'int'     |       |-ImplicitCastExpr 0x13e008950 <col:34> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13e008910 <col:34> 'int ()' Function 0x13e008858 'vma_resv_map' 'int ()'     |       `-ImplicitCastExpr 0x13e008990 <col:47> 'struct vm_area_struct *' <LValueToRValue>     |         `-DeclRefExpr 0x13e008930 <col:47> 'struct vm_area_struct *' lvalue ParmVar 0x13d928648 'vma' 'struct vm_area_struct *'     |-DeclStmt 0x13e008a70 <line:5:2, col:23>     | `-VarDecl 0x13e008a08 <col:2, col:16> col:16 used reserve 'unsigned long'     |-DeclStmt 0x13e008b08 <line:6:2, col:21>     | `-VarDecl 0x13e008aa0 <col:2, col:16> col:16 used start 'unsigned long'     |-DeclStmt 0x13e008ba0 <line:7:2, col:19>     | `-VarDecl 0x13e008b38 <col:2, col:16> col:16 used end 'unsigned long'     `-IfStmt 0x13d9410c8 <line:9:2, line:22:2>       |-ImplicitCastExpr 0x13e008bd8 <line:9:6> 'struct resv_map *' <LValueToRValue>       | `-DeclRefExpr 0x13e008bb8 <col:6> 'struct resv_map *' lvalue Var 0x13e0087c8 'reservations' 'struct resv_map *'       `-CompoundStmt 0x13d941090 <col:20, line:22:2>         |-BinaryOperator 0x13e008de8 <line:10:3, col:53> 'unsigned long' contains-errors '='         | |-DeclRefExpr 0x13e008bf0 <col:3> 'unsigned long' lvalue Var 0x13e008aa0 'start' 'unsigned long'         | `-CallExpr 0x13e008db0 <col:11, col:53> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x13e008cf0 <col:11> 'int ()' Function 0x13e008c38 'vma_hugecache_offset' 'int ()'         |   |-DeclRefExpr 0x13e008d10 <col:32> 'struct hstate *' lvalue Var 0x13e0083b8 'h' 'struct hstate *'         |   |-DeclRefExpr 0x13e008d30 <col:35> 'struct vm_area_struct *' lvalue ParmVar 0x13d928648 'vma' 'struct vm_area_struct *'         |   `-RecoveryExpr 0x13e008d88 <col:40, col:45> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x13e008d50 <col:40> 'struct vm_area_struct *' lvalue ParmVar 0x13d928648 'vma' 'struct vm_area_struct *'         |-BinaryOperator 0x13e008f20 <line:11:3, col:49> 'unsigned long' contains-errors '='         | |-DeclRefExpr 0x13e008e08 <col:3> 'unsigned long' lvalue Var 0x13e008b38 'end' 'unsigned long'         | `-CallExpr 0x13e008ee8 <col:9, col:49> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x13e008e28 <col:9> 'int ()' Function 0x13e008c38 'vma_hugecache_offset' 'int ()'         |   |-DeclRefExpr 0x13e008e48 <col:30> 'struct hstate *' lvalue Var 0x13e0083b8 'h' 'struct hstate *'         |   |-DeclRefExpr 0x13e008e68 <col:33> 'struct vm_area_struct *' lvalue ParmVar 0x13d928648 'vma' 'struct vm_area_struct *'         |   `-RecoveryExpr 0x13e008ec0 <col:38, col:43> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x13e008e88 <col:38> 'struct vm_area_struct *' lvalue ParmVar 0x13d928648 'vma' 'struct vm_area_struct *'         |-BinaryOperator 0x13d940a20 <line:13:3, line:14:51> 'unsigned long' contains-errors '='         | |-DeclRefExpr 0x13e008f40 <line:13:3> 'unsigned long' lvalue Var 0x13e008a08 'reserve' 'unsigned long'         | `-BinaryOperator 0x13d940a00 <col:13, line:14:51> '<dependent type>' contains-errors '-'         |   |-ParenExpr 0x13e008ff0 <line:13:13, col:25> 'unsigned long'         |   | `-BinaryOperator 0x13e008fd0 <col:14, col:20> 'unsigned long' '-'         |   |   |-ImplicitCastExpr 0x13e008fa0 <col:14> 'unsigned long' <LValueToRValue>         |   |   | `-DeclRefExpr 0x13e008f60 <col:14> 'unsigned long' lvalue Var 0x13e008b38 'end' 'unsigned long'         |   |   `-ImplicitCastExpr 0x13e008fb8 <col:20> 'unsigned long' <LValueToRValue>         |   |     `-DeclRefExpr 0x13e008f80 <col:20> 'unsigned long' lvalue Var 0x13e008aa0 'start' 'unsigned long'         |   `-CallExpr 0x13e0091c8 <line:14:4, col:51> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x13e0090f0 <col:4> 'int ()' Function 0x13e009038 'region_count' 'int ()'         |     |-UnaryOperator 0x13e009170 <col:17, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow         |     | `-RecoveryExpr 0x13e009148 <col:18, col:32> '<dependent type>' contains-errors lvalue         |     |   `-DeclRefExpr 0x13e009110 <col:18> 'struct resv_map *' lvalue Var 0x13e0087c8 'reservations' 'struct resv_map *'         |     |-DeclRefExpr 0x13e009188 <col:41> 'unsigned long' lvalue Var 0x13e008aa0 'start' 'unsigned long'         |     `-DeclRefExpr 0x13e0091a8 <col:48> 'unsigned long' lvalue Var 0x13e008b38 'end' 'unsigned long'         |-CallExpr 0x13d940c20 <line:16:3, col:49> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13d940b20 <col:3> 'int ()' Function 0x13d940a68 'kref_put' 'int ()'         | |-UnaryOperator 0x13d940ba0 <col:12, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-RecoveryExpr 0x13d940b78 <col:13, col:27> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x13d940b40 <col:13> 'struct resv_map *' lvalue Var 0x13e0087c8 'reservations' 'struct resv_map *'         | `-RecoveryExpr 0x13d940c00 <col:33> '<dependent type>' contains-errors lvalue         `-IfStmt 0x13d941070 <line:18:3, line:21:3>           |-ImplicitCastExpr 0x13d940c70 <line:18:7> 'unsigned long' <LValueToRValue>           | `-DeclRefExpr 0x13d940c50 <col:7> 'unsigned long' lvalue Var 0x13e008a08 'reserve' 'unsigned long'           `-CompoundStmt 0x13d941050 <col:16, line:21:3>             |-CallExpr 0x13d940e10 <line:19:4, col:35> 'int'             | |-ImplicitCastExpr 0x13d940df8 <col:4> 'int (*)()' <FunctionToPointerDecay>             | | `-DeclRefExpr 0x13d940d68 <col:4> 'int ()' Function 0x13d940cb0 'hugetlb_acct_memory' 'int ()'             | |-ImplicitCastExpr 0x13d940e40 <col:24> 'struct hstate *' <LValueToRValue>             | | `-DeclRefExpr 0x13d940d88 <col:24> 'struct hstate *' lvalue Var 0x13e0083b8 'h' 'struct hstate *'             | `-UnaryOperator 0x13d940de0 <col:27, col:28> 'unsigned long' prefix '-'             |   `-ImplicitCastExpr 0x13d940dc8 <col:28> 'unsigned long' <LValueToRValue>             |     `-DeclRefExpr 0x13d940da8 <col:28> 'unsigned long' lvalue Var 0x13e008a08 'reserve' 'unsigned long'             `-CallExpr 0x13d941020 <line:20:4, col:54> '<dependent type>' contains-errors               |-DeclRefExpr 0x13d940f38 <col:4> 'int ()' Function 0x13d940e80 'hugetlb_put_quota' 'int ()'               |-CXXDependentScopeMemberExpr 0x13d940fb8 <col:22, col:36> '<dependent type>' contains-errors lvalue ->f_mapping               | `-RecoveryExpr 0x13d940f90 <col:22, col:27> '<dependent type>' contains-errors lvalue               |   `-DeclRefExpr 0x13d940f58 <col:22> 'struct vm_area_struct *' lvalue ParmVar 0x13d928648 'vma' 'struct vm_area_struct *'               `-DeclRefExpr 0x13d941000 <col:47> 'unsigned long' lvalue Var 0x13e008a08 'reserve' 'unsigned long' ","19390":"`-FunctionDecl 0x13c1281a8  line:1:5 copy_fpstate_to_sigframe 'int (int)'   |-ParmVarDecl 0x13c1280d0 <col:30, col:35> col:35 __user 'int'   `-CompoundStmt 0x13c14a358 <line:2:1, line:46:1>     |-DeclStmt 0x13c128628 <line:3:2, col:40>     | |-RecordDecl 0x13c1282a0 <col:2, col:9> col:9 struct fpu     | `-VarDecl 0x13c128408 <col:2, col:37> col:14 used fpu 'struct fpu *' cinit     |   `-UnaryOperator 0x13c1285f8 <col:20, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x13c1285b0 <col:21, col:37> '<dependent type>' contains-errors lvalue .fpu     |       `-CXXDependentScopeMemberExpr 0x13c128568 <col:21, col:30> '<dependent type>' contains-errors lvalue ->thread     |         `-RecoveryExpr 0x13c128548 <col:21> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13c145160 <line:4:2, col:47>     | |-RecordDecl 0x13c128640 <col:2, col:9> col:9 struct xregs_state     | `-VarDecl 0x13c144c00 <col:2, col:42> col:22 used xsave 'struct xregs_state *' cinit     |   `-UnaryOperator 0x13c145130 <col:30, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x13c1450e8 <col:31, col:42> '<dependent type>' contains-errors lvalue .xsave     |       `-RecoveryExpr 0x13c1450c0 <col:31, col:36> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13c144c68 <col:31> 'struct fpu *' contains-errors lvalue Var 0x13c128408 'fpu' 'struct fpu *'     |-DeclStmt 0x13c1453a0 <line:5:2, col:35>     | |-RecordDecl 0x13c145178 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x13c1452e8 <col:2, col:28> col:22 used tsk 'struct task_struct *' cinit     |   `-RecoveryExpr 0x13c145368 <col:28> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13c145488 <line:6:2, col:36>     | `-VarDecl 0x13c1453d0 <col:2, col:6> col:6 used ia32_fxstate 'int'     |-IfStmt 0x13c1459a0 <line:11:2, line:12:11>     | |-UnaryOperator 0x13c1458e0 <line:11:6, col:40> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x13c1458a8 <col:7, col:40> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x13c145790 <col:7> 'int ()' Function 0x13c1456d8 'access_ok' 'int ()'     | |   |-RecoveryExpr 0x13c145848 <col:17> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x13c145868 <col:31> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x13c145888 <col:36> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13c145990 <line:12:3, col:11>     |   `-UnaryOperator 0x13c145978 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13c145960 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13c145940 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13c148d70 <line:19:2, line:36:2> has_else     | |-BinaryOperator 0x13c148308 <line:19:6, col:52> 'int' contains-errors '||'     | | |-RecoveryExpr 0x13c148170 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13c148138 <col:6> 'struct fpu *' contains-errors lvalue Var 0x13c128408 'fpu' 'struct fpu *'     | | `-CallExpr 0x13c1482e8 <col:29, col:52> 'int'     | |   `-ImplicitCastExpr 0x13c1482d0 <col:29> 'int (*)()' <FunctionToPointerDecay>     | |     `-DeclRefExpr 0x13c148278 <col:29> 'int ()' Function 0x13c1481c0 'using_compacted_format' 'int ()'     | |-CompoundStmt 0x13c148680 <col:55, line:26:2>     | | |-IfStmt 0x13c148490 <line:21:3, line:22:12>     | | | |-RecoveryExpr 0x13c148428 <line:21:7, col:37> '_Bool' contains-errors     | | | `-ReturnStmt 0x13c148480 <line:22:4, col:12>     | | |   `-UnaryOperator 0x13c148468 <col:11, col:12> 'int' prefix '-'     | | |     `-IntegerLiteral 0x13c148448 <col:12> 'int' 1     | | `-IfStmt 0x13c148660 <line:24:3, line:25:29>     | |   |-ImplicitCastExpr 0x13c1484d0 <line:24:7> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x13c1484b0 <col:7> 'int' lvalue Var 0x13c1453d0 'ia32_fxstate' 'int'     | |   `-CallExpr 0x13c148620 <line:25:4, col:29> 'int' contains-errors     | |     |-ImplicitCastExpr 0x13c148608 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x13c1485c8 <col:4> 'int ()' Function 0x13c148510 'copy_fxregs_to_kernel' 'int ()'     | |     `-ImplicitCastExpr 0x13c148648 <col:26> 'struct fpu *' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x13c1485e8 <col:26> 'struct fpu *' contains-errors lvalue Var 0x13c128408 'fpu' 'struct fpu *'     | `-CompoundStmt 0x13c148d48 <line:26:9, line:36:2>     |   |-IfStmt 0x13c148a08 <line:28:3, line:31:3>     |   | |-RecoveryExpr 0x13c1487a0 <line:28:7, col:38> '_Bool' contains-errors     |   | `-CompoundStmt 0x13c1489e8 <col:41, line:31:3>     |   |   |-CallExpr 0x13c148958 <line:29:4, col:22> 'int'     |   |   | |-ImplicitCastExpr 0x13c148940 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x13c1488a0 <col:4> 'int ()' Function 0x13c1487e8 'WARN_ONCE' 'int ()'     |   |   | |-IntegerLiteral 0x13c1488c0 <col:14> 'int' 1     |   |   | `-ImplicitCastExpr 0x13c148988 <col:17> 'char *' <ArrayToPointerDecay>     |   |   |   `-StringLiteral 0x13c148920 <col:17> 'char[4]' lvalue \"STR\"     |   |   `-ReturnStmt 0x13c1489d8 <line:30:4, col:12>     |   |     `-UnaryOperator 0x13c1489c0 <col:11, col:12> 'int' prefix '-'     |   |       `-IntegerLiteral 0x13c1489a0 <col:12> 'int' 1     |   |-CallExpr 0x13c148b60 <line:33:3, col:30> 'int' contains-errors     |   | |-ImplicitCastExpr 0x13c148b48 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13c148b08 <col:3> 'int ()' Function 0x13c148a50 'fpstate_sanitize_xstate' 'int ()'     |   | `-ImplicitCastExpr 0x13c148b88 <col:27> 'struct fpu *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x13c148b28 <col:27> 'struct fpu *' contains-errors lvalue Var 0x13c128408 'fpu' 'struct fpu *'     |   `-IfStmt 0x13c148d28 <line:34:3, line:35:12>     |     |-RecoveryExpr 0x13c148cc0 <line:34:7, col:57> '_Bool' contains-errors     |     `-ReturnStmt 0x13c148d18 <line:35:4, col:12>     |       `-UnaryOperator 0x13c148d00 <col:11, col:12> 'int' prefix '-'     |         `-IntegerLiteral 0x13c148ce0 <col:12> 'int' 1     |-IfStmt 0x13c14a108 <line:39:2, line:40:11>     | |-RecoveryExpr 0x13c14a0a0 <line:39:6, col:65> '_Bool' contains-errors     | `-ReturnStmt 0x13c14a0f8 <line:40:3, col:11>     |   `-UnaryOperator 0x13c14a0e0 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x13c14a0c0 <col:11> 'int' 1     |-IfStmt 0x13c14a308 <line:42:2, line:43:11>     | |-RecoveryExpr 0x13c14a2a0 <line:42:6, col:59> '_Bool' contains-errors     | `-ReturnStmt 0x13c14a2f8 <line:43:3, col:11>     |   `-UnaryOperator 0x13c14a2e0 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x13c14a2c0 <col:11> 'int' 1     `-ReturnStmt 0x13c14a348 <line:45:2, col:9>       `-IntegerLiteral 0x13c14a328 <col:9> 'int' 0 ","19134":"`-FunctionDecl 0x14780de90  line:1:6 invalid print_client_CA_list 'void (const int (*)())'   |-ParmVarDecl 0x14780dd80 <col:27, <invalid sloc>> col:33 invalid STACK_OF 'const int (*)()'   `-CompoundStmt 0x147827fa8 <col:61, line:19:1>     |-DeclStmt 0x14780dfc0 <line:2:5, col:18>     | `-VarDecl 0x14780df58 <col:5, col:11> col:11 used ca_name 'char *'     |-DeclStmt 0x14780e0f0 <line:3:5, col:13>     | |-VarDecl 0x14780dff0 <col:5, col:9> col:9 used n 'int'     | `-VarDecl 0x14780e070 <col:5, col:12> col:12 used i 'int'     |-IfStmt 0x147827460 <line:5:5, line:8:5>     | |-UnaryOperator 0x14780e1a0 <line:5:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14780e188 <col:9> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14780e168 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x147827440 <col:16, line:8:5>     |   |-CallExpr 0x147827400 <line:6:9, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14780e310 <col:9> 'int ()' Function 0x14780e258 's_log' 'int ()'     |   | |-RecoveryExpr 0x14780e3e0 <col:15> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x14780e390 <col:25> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x147827430 <line:7:9>     |-BinaryOperator 0x147827648 <line:9:5, col:29> 'int' contains-errors '='     | |-DeclRefExpr 0x147827480 <col:5> 'int' lvalue Var 0x14780dff0 'n' 'int'     | `-CallExpr 0x147827620 <col:7, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x147827580 <col:7> 'int ()' Function 0x1478274c8 'sk_X509_NAME_num' 'int ()'     |   `-RecoveryExpr 0x147827600 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1478277e8 <line:10:5, line:13:5>     | |-BinaryOperator 0x1478276c0 <line:10:8, col:11> 'int' '=='     | | |-ImplicitCastExpr 0x1478276a8 <col:8> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x147827668 <col:8> 'int' lvalue Var 0x14780dff0 'n' 'int'     | | `-IntegerLiteral 0x147827688 <col:11> 'int' 0     | `-CompoundStmt 0x1478277c8 <col:14, line:13:5>     |   |-CallExpr 0x147827788 <line:11:9, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1478276e0 <col:9> 'int ()' Function 0x14780e258 's_log' 'int ()'     |   | |-RecoveryExpr 0x147827768 <col:15> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x147827718 <col:25> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x1478277b8 <line:12:9>     `-ForStmt 0x147827f70 <line:14:5, line:18:5>       |-BinaryOperator 0x147827848 <line:14:9, col:11> 'int' '='       | |-DeclRefExpr 0x147827808 <col:9> 'int' lvalue Var 0x14780e070 'i' 'int'       | `-IntegerLiteral 0x147827828 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x1478278d8 <col:14, col:16> 'int' '<'       | |-ImplicitCastExpr 0x1478278a8 <col:14> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x147827868 <col:14> 'int' lvalue Var 0x14780e070 'i' 'int'       | `-ImplicitCastExpr 0x1478278c0 <col:16> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x147827888 <col:16> 'int' lvalue Var 0x14780dff0 'n' 'int'       |-UnaryOperator 0x147827918 <col:19, col:21> 'int' prefix '++'       | `-DeclRefExpr 0x1478278f8 <col:21> 'int' lvalue Var 0x14780e070 'i' 'int'       `-CompoundStmt 0x147827f48 <col:24, line:18:5>         |-BinaryOperator 0x147827c78 <line:15:9, col:60> 'char *' contains-errors '='         | |-DeclRefExpr 0x147827930 <col:9> 'char *' lvalue Var 0x14780df58 'ca_name' 'char *'         | `-CallExpr 0x147827c50 <col:17, col:60> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x147827a30 <col:17> 'int ()' Function 0x147827978 'X509_NAME2text' 'int ()'         |   `-CallExpr 0x147827c20 <col:32, col:59> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x147827b30 <col:32> 'int ()' Function 0x147827a78 'sk_X509_NAME_value' 'int ()'         |     |-RecoveryExpr 0x147827c00 <col:51> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x147827b68 <col:58> 'int' lvalue Var 0x14780e070 'i' 'int'         |-CallExpr 0x147827d68 <line:16:9, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x147827c98 <col:9> 'int ()' Function 0x14780e258 's_log' 'int ()'         | |-RecoveryExpr 0x147827d48 <col:15> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x147827cd0 <col:25> 'char[4]' lvalue \"STR\"         | `-DeclRefExpr 0x147827cf0 <col:32> 'char *' lvalue Var 0x14780df58 'ca_name' 'char *'         `-CallExpr 0x147827f08 <line:17:9, col:25> 'int'           |-ImplicitCastExpr 0x147827ef0 <col:9> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x147827e80 <col:9> 'int ()' Function 0x147827dc8 'str_free' 'int ()'           `-ImplicitCastExpr 0x147827f30 <col:18> 'char *' <LValueToRValue>             `-DeclRefExpr 0x147827ea0 <col:18> 'char *' lvalue Var 0x14780df58 'ca_name' 'char *' ","19846":"`-FunctionDecl 0x12d128a38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x12d128958 <col:6> col:6 CudnnRNNOpsTest 'int'   |-ParmVarDecl 0x12d1288d8 <col:23> col:23 ForwardV3Lstm_ShapeFn 'int'   `-CompoundStmt 0x12d1417c0 <col:46, line:36:1>     |-DeclStmt 0x12d128bd8 <line:2:3, col:25>     | `-VarDecl 0x12d128b50 <col:3, col:24> col:7 max_seq_length 'int' cinit     |   `-IntegerLiteral 0x12d128bb8 <col:24> 'int' 2     |-DeclStmt 0x12d128c90 <line:3:3, col:21>     | `-VarDecl 0x12d128c08 <col:3, col:20> col:7 batch_size 'int' cinit     |   `-IntegerLiteral 0x12d128c70 <col:20> 'int' 3     |-DeclStmt 0x12d128d48 <line:4:3, col:20>     | `-VarDecl 0x12d128cc0 <col:3, col:19> col:7 num_units 'int' cinit     |   `-IntegerLiteral 0x12d128d28 <col:19> 'int' 4     |-DeclStmt 0x12d128e00 <line:5:3, col:21>     | `-VarDecl 0x12d128d78 <col:3, col:20> col:7 num_layers 'int' cinit     |   `-IntegerLiteral 0x12d128de0 <col:20> 'int' 5     |-DeclStmt 0x12d128eb8 <line:6:3, col:20>     | `-VarDecl 0x12d128e30 <col:3, col:19> col:7 dir_count 'int' cinit     |   `-IntegerLiteral 0x12d128e98 <col:19> 'int' 1     |-RecoveryExpr 0x12d128f18 <line:7:3> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12d128f68 <line:8:3> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12d128fb8 <line:10:3> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12d141218 <line:12:3> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x12d141268 <line:14:3> '<dependent type>' contains-errors lvalue     `-DeclStmt 0x12d141308 <line:15:3, line:17:4>       `-VarDecl 0x12d1412a0 <line:15:3, col:8> col:8 shape_to_str 'int' auto ","19947":"`-FunctionDecl 0x13700e098  line:1:1 invalid scroll_csr_backward 'int (int, int, int, int, int, int)'   |-ParmVarDecl 0x13700dcf0 <col:21, line:2:11> col:11 invalid n 'int'   |-ParmVarDecl 0x13700dd70 <line:3:7, col:11> col:11 used top 'int'   |-ParmVarDecl 0x13700ddf0 <line:4:7, col:11> col:11 used bot 'int'   |-ParmVarDecl 0x13700de70 <line:5:7, col:11> col:11 used miny 'int'   |-ParmVarDecl 0x13700def0 <line:6:7, col:11> col:11 used maxy 'int'   |-ParmVarDecl 0x13700df70 <line:7:7, col:20> col:20 invalid blank 'int'   `-CompoundStmt 0x136923810 <line:8:1, line:61:1>     |-DeclStmt 0x13700e1f0 <line:9:5, col:10>     | `-VarDecl 0x13700e188 <col:5, col:9> col:9 used i 'int'     `-IfStmt 0x1369237e0 <line:11:5, line:48:2> has_else       |-BinaryOperator 0x137027500 <line:11:9, col:59> 'int' contains-errors '&&'       | |-BinaryOperator 0x137027490 <col:9, col:44> 'int' contains-errors '&&'       | | |-BinaryOperator 0x137027420 <col:9, col:19> 'int' contains-errors '&&'       | | | |-BinaryOperator 0x13700e248 <col:9, col:14> 'int' contains-errors '=='       | | | | |-RecoveryExpr 0x13700e208 <col:9> '<dependent type>' contains-errors lvalue       | | | | `-IntegerLiteral 0x13700e228 <col:14> 'int' 1       | | | `-RecoveryExpr 0x137027400 <col:19> '<dependent type>' contains-errors lvalue       | | `-BinaryOperator 0x137027470 <col:37, col:44> 'int' '=='       | |   |-ImplicitCastExpr 0x137027440 <col:37> 'int' <LValueToRValue>       | |   | `-DeclRefExpr 0x13700e2a0 <col:37> 'int' lvalue ParmVar 0x13700dd70 'top' 'int'       | |   `-ImplicitCastExpr 0x137027458 <col:44> 'int' <LValueToRValue>       | |     `-DeclRefExpr 0x13700e2c0 <col:44> 'int' lvalue ParmVar 0x13700de70 'miny' 'int'       | `-BinaryOperator 0x1370274e0 <col:52, col:59> 'int' '=='       |   |-ImplicitCastExpr 0x1370274b0 <col:52> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x13700e350 <col:52> 'int' lvalue ParmVar 0x13700ddf0 'bot' 'int'       |   `-ImplicitCastExpr 0x1370274c8 <col:59> 'int' <LValueToRValue>       |     `-DeclRefExpr 0x13700e370 <col:59> 'int' lvalue ParmVar 0x13700def0 'maxy' 'int'       |-CompoundStmt 0x137027a68 <col:65, line:15:5>       | |-CallExpr 0x137027840 <line:13:2, col:28> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x137027798 <col:2> 'int ()' Function 0x1370276e0 'UpdateAttrs' 'int ()'       | | |-RecoveryExpr 0x137027820 <col:14> '<dependent type>' contains-errors lvalue       | | `-RecoveryExpr 0x1370277d0 <col:23> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x137027a38 <line:14:2, col:37> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x137027950 <col:2> 'int ()' Function 0x137027898 'NCURSES_PUTP2' 'int ()'       |   |-StringLiteral 0x1370279b0 <col:16> 'char[4]' lvalue \"STR\"       |   `-RecoveryExpr 0x137027a18 <col:23> '<dependent type>' contains-errors lvalue       `-IfStmt 0x1369237b0 <line:15:12, line:48:2> has_else         |-BinaryOperator 0x137027c60 <line:15:16, col:48> 'int' contains-errors '&&'         | |-BinaryOperator 0x137027bf0 <col:16, col:26> 'int' contains-errors '&&'         | | |-BinaryOperator 0x137027ac8 <col:16, col:21> 'int' contains-errors '=='         | | | |-RecoveryExpr 0x137027a88 <col:16> '<dependent type>' contains-errors lvalue         | | | `-IntegerLiteral 0x137027aa8 <col:21> 'int' 1         | | `-RecoveryExpr 0x137027bd0 <col:26> '<dependent type>' contains-errors lvalue         | `-BinaryOperator 0x137027c40 <col:41, col:48> 'int' '=='         |   |-ImplicitCastExpr 0x137027c10 <col:41> 'int' <LValueToRValue>         |   | `-DeclRefExpr 0x137027b20 <col:41> 'int' lvalue ParmVar 0x13700ddf0 'bot' 'int'         |   `-ImplicitCastExpr 0x137027c28 <col:48> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x137027b40 <col:48> 'int' lvalue ParmVar 0x13700def0 'maxy' 'int'         |-CompoundStmt 0x137027e68 <col:54, line:19:5>         | |-CallExpr 0x137027d60 <line:17:2, col:28> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x137027cb8 <col:2> 'int ()' Function 0x1370276e0 'UpdateAttrs' 'int ()'         | | |-RecoveryExpr 0x137027d40 <col:14> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x137027cf0 <col:23> '<dependent type>' contains-errors lvalue         | `-CallExpr 0x137027e38 <line:18:2, col:34> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x137027d90 <col:2> 'int ()' Function 0x137027898 'NCURSES_PUTP2' 'int ()'         |   |-StringLiteral 0x137027db0 <col:16> 'char[4]' lvalue \"STR\"         |   `-RecoveryExpr 0x137027e18 <col:23> '<dependent type>' contains-errors lvalue         `-IfStmt 0x136923780 <line:19:12, line:48:2> has_else           |-BinaryOperator 0x1370280e0 <line:19:16, col:53> 'int' contains-errors '&&'           | |-BinaryOperator 0x137028070 <col:16, col:38> 'int' contains-errors '&&'           | | |-RecoveryExpr 0x137028000 <col:16> '<dependent type>' contains-errors lvalue           | | `-BinaryOperator 0x137028050 <col:31, col:38> 'int' '=='           | |   |-ImplicitCastExpr 0x137028020 <col:31> 'int' <LValueToRValue>           | |   | `-DeclRefExpr 0x137027ea0 <col:31> 'int' lvalue ParmVar 0x13700dd70 'top' 'int'           | |   `-ImplicitCastExpr 0x137028038 <col:38> 'int' <LValueToRValue>           | |     `-DeclRefExpr 0x137027ec0 <col:38> 'int' lvalue ParmVar 0x13700de70 'miny' 'int'           | `-BinaryOperator 0x1370280c0 <col:46, col:53> 'int' '=='           |   |-ImplicitCastExpr 0x137028090 <col:46> 'int' <LValueToRValue>           |   | `-DeclRefExpr 0x137027f50 <col:46> 'int' lvalue ParmVar 0x13700ddf0 'bot' 'int'           |   `-ImplicitCastExpr 0x1370280a8 <col:53> 'int' <LValueToRValue>           |     `-DeclRefExpr 0x137027f70 <col:53> 'int' lvalue ParmVar 0x13700def0 'maxy' 'int'           |-CompoundStmt 0x136922e70 <col:59, line:27:5>           | `-CallExpr 0x1370282e8 <line:22:2, col:19> 'int'           |   |-ImplicitCastExpr 0x1370282d0 <col:2> 'int (*)()' <FunctionToPointerDecay>           |   | `-DeclRefExpr 0x137028258 <col:2> 'int ()' Function 0x1370281a0 'TPUTS_TRACE' 'int ()'           |   `-ImplicitCastExpr 0x137028310 <col:14> 'char *' <ArrayToPointerDecay>           |     `-StringLiteral 0x137028278 <col:14> 'char[4]' lvalue \"STR\"           `-IfStmt 0x136923750 <line:27:12, line:48:2> has_else             |-RecoveryExpr 0x136922f18 <line:27:16, col:43> '_Bool' contains-errors             |-CompoundStmt 0x1369230b0 <col:49, line:35:5>             | `-CallExpr 0x136923010 <line:30:2, col:19> 'int'             |   |-ImplicitCastExpr 0x136922ff8 <col:2> 'int (*)()' <FunctionToPointerDecay>             |   | `-DeclRefExpr 0x136922fb8 <col:2> 'int ()' Function 0x1370281a0 'TPUTS_TRACE' 'int ()'             |   `-ImplicitCastExpr 0x136923038 <col:14> 'char *' <ArrayToPointerDecay>             |     `-StringLiteral 0x136922fd8 <col:14> 'char[4]' lvalue \"STR\"             `-IfStmt 0x136923720 <line:35:12, line:48:2> has_else               |-RecoveryExpr 0x1369231e8 <line:35:16, col:56> '_Bool' contains-errors               |-CompoundStmt 0x136923408 <col:62, line:41:5>               | `-ForStmt 0x1369233d0 <line:38:2, line:40:2>               |   |-BinaryOperator 0x1369232c8 <line:38:7, col:11> 'int' '='               |   | |-DeclRefExpr 0x136923288 <col:7> 'int' lvalue Var 0x13700e188 'i' 'int'               |   | `-IntegerLiteral 0x1369232a8 <col:11> 'int' 0               |   |-<<<NULL>>>               |   |-BinaryOperator 0x136923328 <col:14, col:18> 'int' contains-errors '<'               |   | |-DeclRefExpr 0x1369232e8 <col:14> 'int' lvalue Var 0x13700e188 'i' 'int'               |   | `-RecoveryExpr 0x136923308 <col:18> '<dependent type>' contains-errors lvalue               |   |-UnaryOperator 0x136923368 <col:21, col:22> 'int' postfix '++'               |   | `-DeclRefExpr 0x136923348 <col:21> 'int' lvalue Var 0x13700e188 'i' 'int'               |   `-CompoundStmt 0x1369233c0 <col:26, line:40:2>               `-IfStmt 0x1369236f0 <line:41:12, line:48:2> has_else                 |-RecoveryExpr 0x1369234b0 <line:41:16, col:38> '_Bool' contains-errors                 |-CompoundStmt 0x1369236d0 <col:44, line:47:5>                 | `-ForStmt 0x136923698 <line:44:2, line:46:2>                 |   |-BinaryOperator 0x136923590 <line:44:7, col:11> 'int' '='                 |   | |-DeclRefExpr 0x136923550 <col:7> 'int' lvalue Var 0x13700e188 'i' 'int'                 |   | `-IntegerLiteral 0x136923570 <col:11> 'int' 0                 |   |-<<<NULL>>>                 |   |-BinaryOperator 0x1369235f0 <col:14, col:18> 'int' contains-errors '<'                 |   | |-DeclRefExpr 0x1369235b0 <col:14> 'int' lvalue Var 0x13700e188 'i' 'int'                 |   | `-RecoveryExpr 0x1369235d0 <col:18> '<dependent type>' contains-errors lvalue                 |   |-UnaryOperator 0x136923630 <col:21, col:22> 'int' postfix '++'                 |   | `-DeclRefExpr 0x136923610 <col:21> 'int' lvalue Var 0x13700e188 'i' 'int'                 |   `-CompoundStmt 0x136923688 <col:26, line:46:2>                 `-NullStmt 0x1369236e8 <line:48:2> ","20138":"`-FunctionDecl 0x13e8280b8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13e8281b8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13e828220 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13e828288 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13e828160 <<invalid sloc>> Implicit 900 ","19932":"`-FunctionDecl 0x151808238  line:1:12 invalid map_id_up 'int (struct uid_gid_map *, int)' static   |-ParmVarDecl 0x15100e268 <col:22, col:42> col:42 used map 'struct uid_gid_map *'   |-ParmVarDecl 0x15100e2e8 <col:47, col:51> col:51 referenced invalid id 'int'   `-CompoundStmt 0x151808f70 <line:2:1, line:22:1>     |-DeclStmt 0x151808408 <line:3:2, col:23>     | |-VarDecl 0x151808308 <col:2, col:11> col:11 used idx 'unsigned int'     | `-VarDecl 0x151808388 <col:2, col:16> col:16 used extents 'unsigned int'     |-BinaryOperator 0x1518084a0 <line:7:2, col:17> 'unsigned int' contains-errors '='     | |-DeclRefExpr 0x151808420 <col:2> 'unsigned int' lvalue Var 0x151808388 'extents' 'unsigned int'     | `-RecoveryExpr 0x151808478 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x151808440 <col:12> 'struct uid_gid_map *' lvalue ParmVar 0x15100e268 'map' 'struct uid_gid_map *'     |-CallExpr 0x151808688 <line:8:2, col:27> 'int'     | `-ImplicitCastExpr 0x151808670 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x151808620 <col:2> 'int ()' Function 0x151808568 'smp_read_barrier_depends' 'int ()'     |-ForStmt 0x151808c40 <line:9:2, line:14:2>     | |-BinaryOperator 0x151808700 <line:9:7, col:13> 'unsigned int' '='     | | |-DeclRefExpr 0x1518086a8 <col:7> 'unsigned int' lvalue Var 0x151808308 'idx' 'unsigned int'     | | `-ImplicitCastExpr 0x1518086e8 <col:13> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x1518086c8 <col:13> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x151808790 <col:16, col:22> 'int' '<'     | | |-ImplicitCastExpr 0x151808760 <col:16> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x151808720 <col:16> 'unsigned int' lvalue Var 0x151808308 'idx' 'unsigned int'     | | `-ImplicitCastExpr 0x151808778 <col:22> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x151808740 <col:22> 'unsigned int' lvalue Var 0x151808388 'extents' 'unsigned int'     | |-UnaryOperator 0x1518087d0 <col:31, col:34> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x1518087b0 <col:31> 'unsigned int' lvalue Var 0x151808308 'idx' 'unsigned int'     | `-CompoundStmt 0x151808c28 <col:38, line:14:2>     |   `-IfStmt 0x151808c08 <line:12:3, line:13:4>     |     |-BinaryOperator 0x151808be0 <line:12:7, col:28> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x151808b80 <col:7, col:13> 'int' contains-errors '>='     |     | | |-RecoveryExpr 0x151808a90 <col:7> '<dependent type>' contains-errors lvalue     |     | | `-RecoveryExpr 0x151808b60 <col:13> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x151808bc0 <col:22, col:28> 'int' contains-errors '<='     |     |   |-RecoveryExpr 0x151808ae8 <col:22> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x151808ba0 <col:28> '<dependent type>' contains-errors lvalue     |     `-BreakStmt 0x151808c00 <line:13:4>     `-ReturnStmt 0x151808f60 <line:21:2, col:9>       `-RecoveryExpr 0x151808f40 <col:9> '<dependent type>' contains-errors lvalue ","19765":"`-FunctionDecl 0x1431281f8  line:1:1 invalid image_is_64_bit 'int (int *)'   |-ParmVarDecl 0x143128128 <col:17, col:50> col:50 invalid PEHdr 'int *'   `-CompoundStmt 0x143128498 <line:2:1, line:8:1>     |-IfStmt 0x143128448 <line:4:2, line:6:10>     | |-BinaryOperator 0x1431283f8 <line:4:6, line:5:7> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x143128358 <line:4:6, col:37> '<dependent type>' contains-errors lvalue .Magic     | | | `-CXXDependentScopeMemberExpr 0x143128310 <col:6, col:22> '<dependent type>' contains-errors lvalue .OptionalHeader     | | |   `-CXXDependentScopeMemberExpr 0x1431282c8 <col:6, col:13> '<dependent type>' contains-errors lvalue ->Pe32Plus     | | |     `-RecoveryExpr 0x1431282a8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1431283d8 <line:5:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x143128438 <line:6:3, col:10>     |   `-IntegerLiteral 0x143128418 <col:10> 'int' 1     `-ReturnStmt 0x143128488 <line:7:2, col:9>       `-IntegerLiteral 0x143128468 <col:9> 'int' 0 ","19190":"`-FunctionDecl 0x1459425e0  col:16 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x1459426e0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x145942748 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x145942688 <<invalid sloc>> Implicit 893 ","19479":"`-FunctionDecl 0x130141ca0  col:13 implicit used memcmp 'int (const void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x130141da0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x130141e08 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x130141e70 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x130141d48 <<invalid sloc>> Implicit 883 ","20005":"`-FunctionDecl 0x137941718  line:1:15 invalid move_page_tables 'unsigned long (struct vm_area_struct *, unsigned long, struct vm_area_struct *, unsigned long, unsigned long, int)'   |-ParmVarDecl 0x137929048 <col:32, col:55> col:55 used vma 'struct vm_area_struct *'   |-ParmVarDecl 0x1379290c8 <line:2:3, col:17> col:17 used old_addr 'unsigned long'   |-ParmVarDecl 0x137941400 <col:27, col:50> col:50 used new_vma 'struct vm_area_struct *'   |-ParmVarDecl 0x137941480 <line:3:3, col:17> col:17 used new_addr 'unsigned long'   |-ParmVarDecl 0x137941500 <col:27, col:41> col:41 used len 'unsigned long'   |-ParmVarDecl 0x137941598 <line:4:3, col:8> col:8 invalid need_rmap_locks 'int'   `-CompoundStmt 0x137945600 <line:5:1, line:74:1>     |-DeclStmt 0x137941990 <line:6:2, col:37>     | |-VarDecl 0x137941808 <col:2, col:16> col:16 used extent 'unsigned long'     | |-VarDecl 0x137941888 <col:2, col:24> col:24 used next 'unsigned long'     | `-VarDecl 0x137941908 <col:2, col:30> col:30 used old_end 'unsigned long'     |-DeclStmt 0x137941b28 <line:7:2, col:33>     | |-RecordDecl 0x1379419a8 <col:2, col:9> col:9 struct mmu_notifier_range     | `-VarDecl 0x137941aa8 <col:2, col:28> col:28 invalid range 'struct mmu_notifier_range'     |-BinaryOperator 0x137941cc0 <line:10:2, col:23> 'unsigned long' '='     | |-DeclRefExpr 0x137941c10 <col:2> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long'     | `-BinaryOperator 0x137941ca0 <col:12, col:23> 'unsigned long' '+'     |   |-ImplicitCastExpr 0x137941c70 <col:12> 'unsigned long' <LValueToRValue>     |   | `-DeclRefExpr 0x137941c30 <col:12> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     |   `-ImplicitCastExpr 0x137941c88 <col:23> 'unsigned long' <LValueToRValue>     |     `-DeclRefExpr 0x137941c50 <col:23> 'unsigned long' lvalue ParmVar 0x137941500 'len' 'unsigned long'     |-CallExpr 0x137941f08 <line:11:2, col:42> 'int'     | |-ImplicitCastExpr 0x137941ef0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x137941e40 <col:2> 'int ()' Function 0x137941d88 'flush_cache_range' 'int ()'     | |-ImplicitCastExpr 0x137941f40 <col:20> 'struct vm_area_struct *' <LValueToRValue>     | | `-DeclRefExpr 0x137941e60 <col:20> 'struct vm_area_struct *' lvalue ParmVar 0x137929048 'vma' 'struct vm_area_struct *'     | |-ImplicitCastExpr 0x137941f58 <col:25> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x137941e80 <col:25> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     | `-ImplicitCastExpr 0x137941f70 <col:35> 'unsigned long' <LValueToRValue>     |   `-DeclRefExpr 0x137941ea0 <col:35> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long'     |-CallExpr 0x137942230 <line:13:2, line:14:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137942068 <line:13:2> 'int ()' Function 0x137941fb0 'mmu_notifier_range_init' 'int ()'     | |-UnaryOperator 0x1379420a8 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x137942088 <col:27> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x137942210 <col:34> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x1379420d8 <col:52> 'int' 0     | |-DeclRefExpr 0x1379420f8 <col:55> 'struct vm_area_struct *' lvalue ParmVar 0x137929048 'vma' 'struct vm_area_struct *'     | |-RecoveryExpr 0x137942150 <col:60, col:65> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137942118 <col:60> 'struct vm_area_struct *' lvalue ParmVar 0x137929048 'vma' 'struct vm_area_struct *'     | |-DeclRefExpr 0x137942178 <line:14:5> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     | `-DeclRefExpr 0x137942198 <col:15> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long'     |-CallExpr 0x1379423c0 <line:15:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137942368 <col:2> 'int ()' Function 0x1379422b0 'mmu_notifier_invalidate_range_start' 'int ()'     | `-UnaryOperator 0x1379423a8 <col:38, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x137942388 <col:39> '<dependent type>' contains-errors lvalue     |-ForStmt 0x137944f38 <line:17:2, line:69:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x137943270 <line:17:9, col:20> 'int' '<'     | | |-ImplicitCastExpr 0x137943240 <col:9> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x137943200 <col:9> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     | | `-ImplicitCastExpr 0x137943258 <col:20> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x137943220 <col:20> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long'     | |-BinaryOperator 0x1379433a0 <col:29, col:61> 'unsigned long' ','     | | |-CompoundAssignOperator 0x1379432e8 <col:29, col:41> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     | | | |-DeclRefExpr 0x137943290 <col:29> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     | | | `-ImplicitCastExpr 0x1379432d0 <col:41> 'unsigned long' <LValueToRValue>     | | |   `-DeclRefExpr 0x1379432b0 <col:41> 'unsigned long' lvalue Var 0x137941808 'extent' 'unsigned long'     | | `-CompoundAssignOperator 0x137943370 <col:49, col:61> 'unsigned long' '+=' ComputeLHSTy='unsigned long' ComputeResultTy='unsigned long'     | |   |-DeclRefExpr 0x137943318 <col:49> 'unsigned long' lvalue ParmVar 0x137941480 'new_addr' 'unsigned long'     | |   `-ImplicitCastExpr 0x137943358 <col:61> 'unsigned long' <LValueToRValue>     | |     `-DeclRefExpr 0x137943338 <col:61> 'unsigned long' lvalue Var 0x137941808 'extent' 'unsigned long'     | `-CompoundStmt 0x137944ed8 <col:69, line:69:2>     |   |-CallExpr 0x1379434d8 <line:18:3, col:16> 'int'     |   | `-ImplicitCastExpr 0x1379434c0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x1379434a0 <col:3> 'int ()' Function 0x1379433e8 'cond_resched' 'int ()'     |   |-BinaryOperator 0x137943638 <line:21:3, col:19> 'unsigned long' '='     |   | |-DeclRefExpr 0x137943588 <col:3> 'unsigned long' lvalue Var 0x137941808 'extent' 'unsigned long'     |   | `-BinaryOperator 0x137943618 <col:12, col:19> 'unsigned long' '-'     |   |   |-ImplicitCastExpr 0x1379435e8 <col:12> 'unsigned long' <LValueToRValue>     |   |   | `-DeclRefExpr 0x1379435a8 <col:12> 'unsigned long' lvalue Var 0x137941888 'next' 'unsigned long'     |   |   `-ImplicitCastExpr 0x137943600 <col:19> 'unsigned long' <LValueToRValue>     |   |     `-DeclRefExpr 0x1379435c8 <col:19> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     |   |-IfStmt 0x137943810 <line:22:3, line:23:23>     |   | |-BinaryOperator 0x137943720 <line:22:7, col:26> 'int' '>'     |   | | |-ImplicitCastExpr 0x137943708 <col:7> 'unsigned long' <LValueToRValue>     |   | | | `-DeclRefExpr 0x137943658 <col:7> 'unsigned long' lvalue Var 0x137941808 'extent' 'unsigned long'     |   | | `-BinaryOperator 0x1379436e8 <col:16, col:26> 'unsigned long' '-'     |   | |   |-ImplicitCastExpr 0x1379436b8 <col:16> 'unsigned long' <LValueToRValue>     |   | |   | `-DeclRefExpr 0x137943678 <col:16> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long'     |   | |   `-ImplicitCastExpr 0x1379436d0 <col:26> 'unsigned long' <LValueToRValue>     |   | |     `-DeclRefExpr 0x137943698 <col:26> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     |   | `-BinaryOperator 0x1379437f0 <line:23:4, col:23> 'unsigned long' '='     |   |   |-DeclRefExpr 0x137943740 <col:4> 'unsigned long' lvalue Var 0x137941808 'extent' 'unsigned long'     |   |   `-BinaryOperator 0x1379437d0 <col:13, col:23> 'unsigned long' '-'     |   |     |-ImplicitCastExpr 0x1379437a0 <col:13> 'unsigned long' <LValueToRValue>     |   |     | `-DeclRefExpr 0x137943760 <col:13> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long'     |   |     `-ImplicitCastExpr 0x1379437b8 <col:23> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x137943780 <col:23> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     |   |-BinaryOperator 0x137943a00 <line:24:3, col:45> 'unsigned long' contains-errors '='     |   | |-DeclRefExpr 0x137943830 <col:3> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long'     |   | `-CallExpr 0x1379439d0 <col:13, col:45> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x137943930 <col:13> 'int ()' Function 0x137943878 'get_old_pmd' 'int ()'     |   |   |-RecoveryExpr 0x137943988 <col:25, col:30> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x137943950 <col:25> 'struct vm_area_struct *' lvalue ParmVar 0x137929048 'vma' 'struct vm_area_struct *'     |   |   `-DeclRefExpr 0x1379439b0 <col:37> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'     |   |-IfStmt 0x137943ac0 <line:25:3, line:26:4>     |   | |-UnaryOperator 0x137943aa0 <line:25:7, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x137943a88 <col:8> 'unsigned long' <LValueToRValue>     |   | |   `-DeclRefExpr 0x137943a68 <col:8> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long'     |   | `-ContinueStmt 0x137943ab8 <line:26:4>     |   |-BinaryOperator 0x137943cd8 <line:27:3, col:52> 'struct vm_area_struct *' contains-errors '='     |   | |-DeclRefExpr 0x137943ae0 <col:3> 'struct vm_area_struct *' lvalue ParmVar 0x137941400 'new_vma' 'struct vm_area_struct *'     |   | `-CallExpr 0x137943ca0 <col:13, col:52> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x137943be0 <col:13> 'int ()' Function 0x137943b28 'alloc_new_pmd' 'int ()'     |   |   |-RecoveryExpr 0x137943c38 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x137943c00 <col:27> 'struct vm_area_struct *' lvalue ParmVar 0x137929048 'vma' 'struct vm_area_struct *'     |   |   |-DeclRefExpr 0x137943c60 <col:39> 'struct vm_area_struct *' lvalue ParmVar 0x137929048 'vma' 'struct vm_area_struct *'     |   |   `-DeclRefExpr 0x137943c80 <col:44> 'unsigned long' lvalue ParmVar 0x137941480 'new_addr' 'unsigned long'     |   |-IfStmt 0x137943d20 <line:28:3, line:29:4>     |   | |-RecoveryExpr 0x137943cf8 <line:28:7, col:8> '_Bool' contains-errors     |   | `-BreakStmt 0x137943d18 <line:29:4>     |   |-IfStmt 0x1379448b8 <line:30:3, line:60:3> has_else     |   | |-RecoveryExpr 0x137943f40 <line:30:7, col:55> '_Bool' contains-errors     |   | |-CompoundStmt 0x137944828 <col:58, line:46:3>     |   | | |-IfStmt 0x137944580 <line:31:4, line:42:4>     |   | | | |-RecoveryExpr 0x137943f80 <line:31:8, col:18> '_Bool' contains-errors     |   | | | `-CompoundStmt 0x137944558 <col:34, line:42:4>     |   | | |   |-IfStmt 0x137944138 <line:34:5, line:35:25>     |   | | |   | |-RecoveryExpr 0x137943fa0 <line:34:9> '<dependent type>' contains-errors lvalue     |   | | |   | `-CallExpr 0x1379440f8 <line:35:6, col:25> 'int'     |   | | |   |   |-ImplicitCastExpr 0x1379440e0 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | | |   |   | `-DeclRefExpr 0x1379440a0 <col:6> 'int ()' Function 0x137943fe8 'take_rmap_locks' 'int ()'     |   | | |   |   `-ImplicitCastExpr 0x137944120 <col:22> 'struct vm_area_struct *' <LValueToRValue>     |   | | |   |     `-DeclRefExpr 0x1379440c0 <col:22> 'struct vm_area_struct *' lvalue ParmVar 0x137929048 'vma' 'struct vm_area_struct *'     |   | | |   |-IfStmt 0x1379444f0 <line:38:5, line:39:25>     |   | | |   | |-RecoveryExpr 0x137944358 <line:38:9> '<dependent type>' contains-errors lvalue     |   | | |   | `-CallExpr 0x1379444b0 <line:39:6, col:25> 'int'     |   | | |   |   |-ImplicitCastExpr 0x137944498 <col:6> 'int (*)()' <FunctionToPointerDecay>     |   | | |   |   | `-DeclRefExpr 0x137944458 <col:6> 'int ()' Function 0x1379443a0 'drop_rmap_locks' 'int ()'     |   | | |   |   `-ImplicitCastExpr 0x1379444d8 <col:22> 'struct vm_area_struct *' <LValueToRValue>     |   | | |   |     `-DeclRefExpr 0x137944478 <col:22> 'struct vm_area_struct *' lvalue ParmVar 0x137929048 'vma' 'struct vm_area_struct *'     |   | | |   `-IfStmt 0x137944538 <line:40:5, line:41:6>     |   | | |     |-RecoveryExpr 0x137944510 <line:40:9> '_Bool' contains-errors     |   | | |     `-ContinueStmt 0x137944530 <line:41:6>     |   | | `-IfStmt 0x137944808 <line:44:4, line:45:5>     |   | |   |-RecoveryExpr 0x1379447e0 <line:44:8, col:34> '_Bool' contains-errors     |   | |   `-ContinueStmt 0x137944800 <line:45:5>     |   | `-IfStmt 0x137944898 <line:46:10, line:60:3>     |   |   |-RecoveryExpr 0x137944868 <line:46:14, col:24> '_Bool' contains-errors     |   |   `-CompoundStmt 0x137944888 <col:34, line:60:3>     |   |-IfStmt 0x137944a70 <line:62:3, line:63:4>     |   | |-RecoveryExpr 0x137944a48 <line:62:7, col:40> '_Bool' contains-errors     |   | `-BreakStmt 0x137944a68 <line:63:4>     |   `-IfStmt 0x137944c88 <line:65:3, line:66:20>     |     |-BinaryOperator 0x137944b98 <line:65:7, col:23> 'int' '>'     |     | |-ImplicitCastExpr 0x137944b80 <col:7> 'unsigned long' <LValueToRValue>     |     | | `-DeclRefExpr 0x137944ad0 <col:7> 'unsigned long' lvalue Var 0x137941808 'extent' 'unsigned long'     |     | `-BinaryOperator 0x137944b60 <col:16, col:23> 'unsigned long' '-'     |     |   |-ImplicitCastExpr 0x137944b30 <col:16> 'unsigned long' <LValueToRValue>     |     |   | `-DeclRefExpr 0x137944af0 <col:16> 'unsigned long' lvalue Var 0x137941888 'next' 'unsigned long'     |     |   `-ImplicitCastExpr 0x137944b48 <col:23> 'unsigned long' <LValueToRValue>     |     |     `-DeclRefExpr 0x137944b10 <col:23> 'unsigned long' lvalue ParmVar 0x137941480 'new_addr' 'unsigned long'     |     `-BinaryOperator 0x137944c68 <line:66:4, col:20> 'unsigned long' '='     |       |-DeclRefExpr 0x137944bb8 <col:4> 'unsigned long' lvalue Var 0x137941808 'extent' 'unsigned long'     |       `-BinaryOperator 0x137944c48 <col:13, col:20> 'unsigned long' '-'     |         |-ImplicitCastExpr 0x137944c18 <col:13> 'unsigned long' <LValueToRValue>     |         | `-DeclRefExpr 0x137944bd8 <col:13> 'unsigned long' lvalue Var 0x137941888 'next' 'unsigned long'     |         `-ImplicitCastExpr 0x137944c30 <col:20> 'unsigned long' <LValueToRValue>     |           `-DeclRefExpr 0x137944bf8 <col:20> 'unsigned long' lvalue ParmVar 0x137941480 'new_addr' 'unsigned long'     |-CallExpr 0x1379450a8 <line:71:2, col:42> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137945050 <col:2> 'int ()' Function 0x137944f98 'mmu_notifier_invalidate_range_end' 'int ()'     | `-UnaryOperator 0x137945090 <col:36, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x137945070 <col:37> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1379451b8 <line:73:2, col:26>       `-BinaryOperator 0x137945198 <col:9, col:26> 'unsigned long' '-'         |-BinaryOperator 0x137945140 <col:9, col:15> 'unsigned long' '+'         | |-ImplicitCastExpr 0x137945110 <col:9> 'unsigned long' <LValueToRValue>         | | `-DeclRefExpr 0x1379450d0 <col:9> 'unsigned long' lvalue ParmVar 0x137941500 'len' 'unsigned long'         | `-ImplicitCastExpr 0x137945128 <col:15> 'unsigned long' <LValueToRValue>         |   `-DeclRefExpr 0x1379450f0 <col:15> 'unsigned long' lvalue ParmVar 0x1379290c8 'old_addr' 'unsigned long'         `-ImplicitCastExpr 0x137945180 <col:26> 'unsigned long' <LValueToRValue>           `-DeclRefExpr 0x137945160 <col:26> 'unsigned long' lvalue Var 0x137941908 'old_end' 'unsigned long' ","20109":"`-FunctionDecl 0x1449289f0  line:1:6 invalid credssp_send 'void (int *)'   |-ParmVarDecl 0x144928928 <col:19, col:31> col:31 invalid credssp 'int *'   `-CompoundStmt 0x144943cc8 <line:2:1, line:54:1>     |-DeclStmt 0x144928b38 <line:4:2, col:12>     | `-VarDecl 0x144928ad0 <col:2, col:6> col:6 used length 'int'     |-DeclStmt 0x144928bd0 <line:5:2, col:23>     | `-VarDecl 0x144928b68 <col:2, col:6> col:6 used ts_request_length 'int'     |-DeclStmt 0x144928c68 <line:6:2, col:24>     | `-VarDecl 0x144928c00 <col:2, col:6> col:6 used nego_tokens_length 'int'     |-DeclStmt 0x144928d00 <line:7:2, col:25>     | `-VarDecl 0x144928c98 <col:2, col:6> col:6 used pub_key_auth_length 'int'     |-DeclStmt 0x144928d98 <line:8:2, col:22>     | `-VarDecl 0x144928d30 <col:2, col:6> col:6 used auth_info_length 'int'     |-BinaryOperator 0x144942200 <line:10:2, col:117> 'int' contains-errors '='     | |-DeclRefExpr 0x144928db0 <col:2> 'int' lvalue Var 0x144928c00 'nego_tokens_length' 'int'     | `-ConditionalOperator 0x1449421d0 <col:23, col:117> '<dependent type>' contains-errors     |   |-ParenExpr 0x144928ec0 <col:23, col:55> 'int' contains-errors     |   | `-BinaryOperator 0x144928ea0 <col:24, col:54> 'int' contains-errors '>'     |   |   |-CXXDependentScopeMemberExpr 0x144928e38 <col:24, col:43> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   | `-CXXDependentScopeMemberExpr 0x144928df0 <col:24, col:33> '<dependent type>' contains-errors lvalue ->negoToken     |   |   |   `-RecoveryExpr 0x144928dd0 <col:24> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x144928e80 <col:54> 'int' 0     |   |-CallExpr 0x144942188 <col:59, col:113> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1449420b8 <col:59> 'int ()' Function 0x144942000 'credssp_sizeof_nego_tokens' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x144942140 <col:86, col:105> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   `-CXXDependentScopeMemberExpr 0x1449420f8 <col:86, col:95> '<dependent type>' contains-errors lvalue ->negoToken     |   |     `-RecoveryExpr 0x1449420d8 <col:86> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1449421b0 <col:117> 'int' 0     |-BinaryOperator 0x144942578 <line:11:2, col:121> 'int' contains-errors '='     | |-DeclRefExpr 0x144942220 <col:2> 'int' lvalue Var 0x144928c98 'pub_key_auth_length' 'int'     | `-ConditionalOperator 0x144942548 <col:24, col:121> '<dependent type>' contains-errors     |   |-ParenExpr 0x144942330 <col:24, col:57> 'int' contains-errors     |   | `-BinaryOperator 0x144942310 <col:25, col:56> 'int' contains-errors '>'     |   |   |-CXXDependentScopeMemberExpr 0x1449422a8 <col:25, col:45> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   | `-CXXDependentScopeMemberExpr 0x144942260 <col:25, col:34> '<dependent type>' contains-errors lvalue ->pubKeyAuth     |   |   |   `-RecoveryExpr 0x144942240 <col:25> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x1449422f0 <col:56> 'int' 0     |   |-CallExpr 0x144942500 <col:61, col:117> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x144942430 <col:61> 'int ()' Function 0x144942378 'credssp_sizeof_pub_key_auth' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x1449424b8 <col:89, col:109> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   `-CXXDependentScopeMemberExpr 0x144942470 <col:89, col:98> '<dependent type>' contains-errors lvalue ->pubKeyAuth     |   |     `-RecoveryExpr 0x144942450 <col:89> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x144942528 <col:121> 'int' 0     |-BinaryOperator 0x1449428f0 <line:12:2, col:111> 'int' contains-errors '='     | |-DeclRefExpr 0x144942598 <col:2> 'int' lvalue Var 0x144928d30 'auth_info_length' 'int'     | `-ConditionalOperator 0x1449428c0 <col:21, col:111> '<dependent type>' contains-errors     |   |-ParenExpr 0x1449426a8 <col:21, col:52> 'int' contains-errors     |   | `-BinaryOperator 0x144942688 <col:22, col:51> 'int' contains-errors '>'     |   |   |-CXXDependentScopeMemberExpr 0x144942620 <col:22, col:40> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   | `-CXXDependentScopeMemberExpr 0x1449425d8 <col:22, col:31> '<dependent type>' contains-errors lvalue ->authInfo     |   |   |   `-RecoveryExpr 0x1449425b8 <col:22> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x144942668 <col:51> 'int' 0     |   |-CallExpr 0x144942878 <col:56, col:107> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1449427a8 <col:56> 'int ()' Function 0x1449426f0 'credssp_sizeof_auth_info' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x144942830 <col:81, col:99> '<dependent type>' contains-errors lvalue .cbBuffer     |   |   `-CXXDependentScopeMemberExpr 0x1449427e8 <col:81, col:90> '<dependent type>' contains-errors lvalue ->authInfo     |   |     `-RecoveryExpr 0x1449427c8 <col:81> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x1449428a0 <col:111> 'int' 0     |-BinaryOperator 0x144942a18 <line:14:2, col:54> 'int' '='     | |-DeclRefExpr 0x144942910 <col:2> 'int' lvalue Var 0x144928ad0 'length' 'int'     | `-BinaryOperator 0x1449429f8 <col:11, col:54> 'int' '+'     |   |-BinaryOperator 0x1449429a0 <col:11, col:32> 'int' '+'     |   | |-ImplicitCastExpr 0x144942970 <col:11> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x144942930 <col:11> 'int' lvalue Var 0x144928c00 'nego_tokens_length' 'int'     |   | `-ImplicitCastExpr 0x144942988 <col:32> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x144942950 <col:32> 'int' lvalue Var 0x144928c98 'pub_key_auth_length' 'int'     |   `-ImplicitCastExpr 0x1449429e0 <col:54> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x1449429c0 <col:54> 'int' lvalue Var 0x144928d30 'auth_info_length' 'int'     |-BinaryOperator 0x144942c08 <line:16:2, col:54> 'int' '='     | |-DeclRefExpr 0x144942a38 <col:2> 'int' lvalue Var 0x144928b68 'ts_request_length' 'int'     | `-CallExpr 0x144942bc8 <col:22, col:54> 'int'     |   |-ImplicitCastExpr 0x144942bb0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x144942b38 <col:22> 'int ()' Function 0x144942a80 'credssp_sizeof_ts_request' 'int ()'     |   `-ImplicitCastExpr 0x144942bf0 <col:48> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x144942b58 <col:48> 'int' lvalue Var 0x144928ad0 'length' 'int'     |-CallExpr 0x145009070 <line:21:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144942fc8 <col:2> 'int ()' Function 0x144942f10 'ber_write_sequence_tag' 'int ()'     | |-RecoveryExpr 0x145009050 <col:25> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x145009000 <col:28> 'int' lvalue Var 0x144928b68 'ts_request_length' 'int'     |-CallExpr 0x145009290 <line:24:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x145009180 <col:2> 'int ()' Function 0x1450090c8 'ber_write_contextual_tag' 'int ()'     | |-RecoveryExpr 0x145009250 <col:27> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x1450091b8 <col:30> 'int' 0     | |-IntegerLiteral 0x1450091d8 <col:33> 'int' 3     | `-RecoveryExpr 0x145009270 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x145009458 <line:25:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1450093b0 <col:2> 'int ()' Function 0x1450092f8 'ber_write_integer' 'int ()'     | |-RecoveryExpr 0x145009438 <col:20> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1450093e8 <col:23> 'int' 2     |-IfStmt 0x145009e58 <line:28:2, line:36:2>     | |-BinaryOperator 0x1450094e0 <line:28:6, col:27> 'int' '>'     | | |-ImplicitCastExpr 0x1450094c8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x145009488 <col:6> 'int' lvalue Var 0x144928c00 'nego_tokens_length' 'int'     | | `-IntegerLiteral 0x1450094a8 <col:27> 'int' 0     | `-CompoundStmt 0x145009e38 <line:29:2, line:36:2>     |   |-BinaryOperator 0x145009558 <line:30:3, col:12> 'int' '='     |   | |-DeclRefExpr 0x145009500 <col:3> 'int' lvalue Var 0x144928ad0 'length' 'int'     |   | `-ImplicitCastExpr 0x145009540 <col:12> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x145009520 <col:12> 'int' lvalue Var 0x144928c00 'nego_tokens_length' 'int'     |   `-CompoundAssignOperator 0x145009960 <line:32:3, col:153> 'int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-DeclRefExpr 0x145009578 <col:3> 'int' lvalue Var 0x144928ad0 'length' 'int'     |     `-CallExpr 0x145009920 <col:13, col:153> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x145009598 <col:13> 'int ()' Function 0x1450090c8 'ber_write_contextual_tag' 'int ()'     |       |-RecoveryExpr 0x1450098e0 <col:38> '<dependent type>' contains-errors lvalue     |       |-IntegerLiteral 0x1450095d0 <col:41> 'int' 1     |       |-CallExpr 0x145009830 <col:44, col:146> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1450095f0 <col:44> 'int ()' Function 0x144942d68 'ber_sizeof_sequence' 'int ()'     |       | `-CallExpr 0x145009808 <col:64, col:145> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x145009610 <col:64> 'int ()' Function 0x144942d68 'ber_sizeof_sequence' 'int ()'     |       |   `-CallExpr 0x1450097e0 <col:84, col:144> '<dependent type>' contains-errors     |       |     |-DeclRefExpr 0x145009710 <col:84> 'int ()' Function 0x145009658 'ber_sizeof_sequence_octet_string' 'int ()'     |       |     `-CXXDependentScopeMemberExpr 0x145009798 <col:117, col:136> '<dependent type>' contains-errors lvalue .cbBuffer     |       |       `-CXXDependentScopeMemberExpr 0x145009750 <col:117, col:126> '<dependent type>' contains-errors lvalue ->negoToken     |       |         `-RecoveryExpr 0x145009730 <col:117> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x145009900 <col:149> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144943758 <line:39:2, line:43:2>     | |-BinaryOperator 0x145009ed0 <line:39:6, col:25> 'int' '>'     | | |-ImplicitCastExpr 0x145009eb8 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x145009e78 <col:6> 'int' lvalue Var 0x144928d30 'auth_info_length' 'int'     | | `-IntegerLiteral 0x145009e98 <col:25> 'int' 0     | `-CompoundStmt 0x144943740 <line:40:2, line:43:2>     |   `-BinaryOperator 0x145009f48 <line:41:3, col:12> 'int' '='     |     |-DeclRefExpr 0x145009ef0 <col:3> 'int' lvalue Var 0x144928ad0 'length' 'int'     |     `-ImplicitCastExpr 0x145009f30 <col:12> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x145009f10 <col:12> 'int' lvalue Var 0x144928d30 'auth_info_length' 'int'     `-IfStmt 0x144943a40 <line:46:2, line:50:2>       |-BinaryOperator 0x1449437d0 <line:46:6, col:28> 'int' '>'       | |-ImplicitCastExpr 0x1449437b8 <col:6> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x144943778 <col:6> 'int' lvalue Var 0x144928c98 'pub_key_auth_length' 'int'       | `-IntegerLiteral 0x144943798 <col:28> 'int' 0       `-CompoundStmt 0x144943a28 <line:47:2, line:50:2>         `-BinaryOperator 0x144943848 <line:48:3, col:12> 'int' '='           |-DeclRefExpr 0x1449437f0 <col:3> 'int' lvalue Var 0x144928ad0 'length' 'int'           `-ImplicitCastExpr 0x144943830 <col:12> 'int' <LValueToRValue>             `-DeclRefExpr 0x144943810 <col:12> 'int' lvalue Var 0x144928c98 'pub_key_auth_length' 'int' ","19646":"`-FunctionDecl 0x145141800  line:1:3 invalid Table_arena 'int (int *, enum enum_state)'   |-ParmVarDecl 0x145128128 <col:15, col:25> col:25 invalid mem_root 'int *'   |-ParmVarDecl 0x1451286c8 <col:35, col:51> col:51 invalid state_arg 'enum enum_state'   `-CompoundStmt 0x1451418b8 <line:2:43, col:44> ","20047":"`-FunctionDecl 0x14e141618  col:4 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14e141718 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14e141780 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14e1417e8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14e1416c0 <<invalid sloc>> Implicit 882 ","19946":"`-FunctionDecl 0x14a826848  line:1:1 vhost_user_set_vring_enable 'int (struct virtio_net **, struct VhostUserMsg *, int)'   |-ParmVarDecl 0x14a80e2a8 <col:29, col:49> col:49 used pdev 'struct virtio_net **'   |-ParmVarDecl 0x14a826688 <line:2:4, col:25> col:25 used msg 'struct VhostUserMsg *'   |-ParmVarDecl 0x14a826708 <line:3:4, col:8> col:8 main_fd 'int'   `-CompoundStmt 0x14a8297d0 <line:4:1, line:31:1>     |-DeclStmt 0x14a826aa8 <line:5:2, col:32>     | `-VarDecl 0x14a8269d8 <col:2, col:28> col:21 used dev 'struct virtio_net *' cinit     |   `-ImplicitCastExpr 0x14a826a90 <col:27, col:28> 'struct virtio_net *' <LValueToRValue>     |     `-UnaryOperator 0x14a826a78 <col:27, col:28> 'struct virtio_net *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x14a826a60 <col:28> 'struct virtio_net **' <LValueToRValue>     |         `-DeclRefExpr 0x14a826a40 <col:28> 'struct virtio_net **' lvalue ParmVar 0x14a80e2a8 'pdev' 'struct virtio_net **'     |-DeclStmt 0x14a826c70 <line:6:2, col:42>     | `-VarDecl 0x14a826ad8 <col:2, col:39> col:6 used enable 'int' cinit     |   `-CStyleCastExpr 0x14a826c48 <col:15, col:39> 'int' contains-errors <Dependent>     |     `-CXXDependentScopeMemberExpr 0x14a826be8 <col:20, col:39> '<dependent type>' contains-errors lvalue .num     |       `-CXXDependentScopeMemberExpr 0x14a826ba0 <col:20, col:33> '<dependent type>' contains-errors lvalue .state     |         `-RecoveryExpr 0x14a826b78 <col:20, col:25> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x14a826b40 <col:20> 'struct VhostUserMsg *' lvalue ParmVar 0x14a826688 'msg' 'struct VhostUserMsg *'     |-DeclStmt 0x14a826e38 <line:7:2, col:43>     | `-VarDecl 0x14a826ca0 <col:2, col:38> col:6 used index 'int' cinit     |   `-CStyleCastExpr 0x14a826e10 <col:14, col:38> 'int' contains-errors <Dependent>     |     `-CXXDependentScopeMemberExpr 0x14a826db0 <col:19, col:38> '<dependent type>' contains-errors lvalue .index     |       `-CXXDependentScopeMemberExpr 0x14a826d68 <col:19, col:32> '<dependent type>' contains-errors lvalue .state     |         `-RecoveryExpr 0x14a826d40 <col:19, col:24> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x14a826d08 <col:19> 'struct VhostUserMsg *' lvalue ParmVar 0x14a826688 'msg' 'struct VhostUserMsg *'     |-DeclStmt 0x14a827038 <line:8:2, col:34>     | |-RecordDecl 0x14a826e50 <col:2, col:9> col:9 struct rte_vdpa_device     | `-VarDecl 0x14a826fb8 <col:2, col:26> col:26 used vdpa_dev 'struct rte_vdpa_device *'     |-DeclStmt 0x14a827108 <line:9:2, col:14>     | `-VarDecl 0x14a827068 <col:2, col:13> col:6 used did 'int' cinit     |   `-UnaryOperator 0x14a8270f0 <col:12, col:13> 'int' prefix '-'     |     `-IntegerLiteral 0x14a8270d0 <col:13> 'int' 1     |-CallExpr 0x14a8273c8 <line:11:2, line:13:16> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a827250 <line:11:2> 'int ()' Function 0x14a827198 'RTE_LOG' 'int ()'     | |-RecoveryExpr 0x14a827388 <col:10> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14a8273a8 <col:16> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x14a8272e0 <line:12:3> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x14a827300 <line:13:3> 'int' contains-errors lvalue Var 0x14a826ad8 'enable' 'int'     | `-DeclRefExpr 0x14a827320 <col:11> 'int' contains-errors lvalue Var 0x14a826ca0 'index' 'int'     |-BinaryOperator 0x14a827490 <line:15:2, col:13> 'int' contains-errors '='     | |-DeclRefExpr 0x14a827410 <col:2> 'int' lvalue Var 0x14a827068 'did' 'int'     | `-RecoveryExpr 0x14a827468 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14a827430 <col:8> 'struct virtio_net *' lvalue Var 0x14a8269d8 'dev' 'struct virtio_net *'     |-BinaryOperator 0x14a828ea0 <line:16:2, col:36> 'struct rte_vdpa_device *' '='     | |-DeclRefExpr 0x14a8274b0 <col:2> 'struct rte_vdpa_device *' lvalue Var 0x14a826fb8 'vdpa_dev' 'struct rte_vdpa_device *'     | `-ImplicitCastExpr 0x14a828e88 <col:13, col:36> 'struct rte_vdpa_device *' <IntegralToPointer>     |   `-CallExpr 0x14a828e48 <col:13, col:36> 'int'     |     |-ImplicitCastExpr 0x14a828e30 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14a8275b0 <col:13> 'int ()' Function 0x14a8274f8 'rte_vdpa_get_device' 'int ()'     |     `-ImplicitCastExpr 0x14a828e70 <col:33> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14a8275d0 <col:33> 'int' lvalue Var 0x14a827068 'did' 'int'     |-IfStmt 0x14a829128 <line:17:2, line:18:57>     | |-BinaryOperator 0x14a828f88 <line:17:6, col:33> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x14a828ec0 <col:6> 'struct rte_vdpa_device *' lvalue Var 0x14a826fb8 'vdpa_dev' 'struct rte_vdpa_device *'     | | `-CXXDependentScopeMemberExpr 0x14a828f40 <col:18, col:33> '<dependent type>' contains-errors lvalue ->set_vring_state     | |   `-RecoveryExpr 0x14a828f18 <col:18, col:28> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14a828ee0 <col:18> 'struct rte_vdpa_device *' lvalue Var 0x14a826fb8 'vdpa_dev' 'struct rte_vdpa_device *'     | `-CallExpr 0x14a8290f0 <line:18:3, col:57> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x14a829008 <col:3, col:18> '<dependent type>' contains-errors lvalue ->set_vring_state     |   | `-RecoveryExpr 0x14a828fe0 <col:3, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14a828fa8 <col:3> 'struct rte_vdpa_device *' lvalue Var 0x14a826fb8 'vdpa_dev' 'struct rte_vdpa_device *'     |   |-RecoveryExpr 0x14a829088 <col:34, col:39> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a829050 <col:34> 'struct virtio_net *' lvalue Var 0x14a8269d8 'dev' 'struct virtio_net *'     |   |-DeclRefExpr 0x14a8290b0 <col:44> 'int' contains-errors lvalue Var 0x14a826ca0 'index' 'int'     |   `-DeclRefExpr 0x14a8290d0 <col:51> 'int' contains-errors lvalue Var 0x14a826ad8 'enable' 'int'     |-IfStmt 0x14a829370 <line:20:2, line:22:18>     | |-CXXDependentScopeMemberExpr 0x14a8291a8 <line:20:6, col:23> '<dependent type>' contains-errors lvalue ->vring_state_changed     | | `-RecoveryExpr 0x14a829180 <col:6, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a829148 <col:6> 'struct virtio_net *' lvalue Var 0x14a8269d8 'dev' 'struct virtio_net *'     | `-CallExpr 0x14a829338 <line:21:3, line:22:18> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x14a829250 <line:21:3, col:20> '<dependent type>' contains-errors lvalue ->vring_state_changed     |   | `-RecoveryExpr 0x14a829228 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14a8291f0 <col:3> 'struct virtio_net *' lvalue Var 0x14a8269d8 'dev' 'struct virtio_net *'     |   |-RecoveryExpr 0x14a8292d0 <col:40, col:45> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14a829298 <col:40> 'struct virtio_net *' lvalue Var 0x14a8269d8 'dev' 'struct virtio_net *'     |   |-DeclRefExpr 0x14a8292f8 <line:22:5> 'int' contains-errors lvalue Var 0x14a826ca0 'index' 'int'     |   `-DeclRefExpr 0x14a829318 <col:12> 'int' contains-errors lvalue Var 0x14a826ad8 'enable' 'int'     |-IfStmt 0x14a829658 <line:25:2, line:26:41>     | |-BinaryOperator 0x14a829440 <line:25:6, col:22> 'int' contains-errors '&&'     | | |-UnaryOperator 0x14a8293c8 <col:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x14a8293b0 <col:7> 'int' contains-errors <LValueToRValue>     | | |   `-DeclRefExpr 0x14a829390 <col:7> 'int' contains-errors lvalue Var 0x14a826ad8 'enable' 'int'     | | `-RecoveryExpr 0x14a829418 <col:17, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14a8293e0 <col:17> 'struct virtio_net *' lvalue Var 0x14a8269d8 'dev' 'struct virtio_net *'     | `-CallExpr 0x14a829630 <line:26:3, col:41> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a829540 <col:3> 'int ()' Function 0x14a829488 'drain_zmbuf_list' 'int ()'     |   `-ArraySubscriptExpr 0x14a829610 <col:20, col:40> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x14a8295e0 <col:20, col:25> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x14a829598 <col:20, col:25> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14a829560 <col:20> 'struct virtio_net *' lvalue Var 0x14a8269d8 'dev' 'struct virtio_net *'     |     `-ImplicitCastExpr 0x14a8295f8 <col:35> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x14a8295c0 <col:35> 'int' contains-errors lvalue Var 0x14a826ca0 'index' 'int'     `-BinaryOperator 0x14a8297b0 <line:28:2, col:35> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x14a829748 <col:2, col:25> '<dependent type>' contains-errors lvalue ->enabled       | `-ArraySubscriptExpr 0x14a829728 <col:2, col:22> '<dependent type>' contains-errors lvalue       |   |-ImplicitCastExpr 0x14a8296f8 <col:2, col:7> '<dependent type>' contains-errors <LValueToRValue>       |   | `-RecoveryExpr 0x14a8296b0 <col:2, col:7> '<dependent type>' contains-errors lvalue       |   |   `-DeclRefExpr 0x14a829678 <col:2> 'struct virtio_net *' lvalue Var 0x14a8269d8 'dev' 'struct virtio_net *'       |   `-ImplicitCastExpr 0x14a829710 <col:17> 'int' contains-errors <LValueToRValue>       |     `-DeclRefExpr 0x14a8296d8 <col:17> 'int' contains-errors lvalue Var 0x14a826ca0 'index' 'int'       `-DeclRefExpr 0x14a829790 <col:35> 'int' contains-errors lvalue Var 0x14a826ad8 'enable' 'int' ","19325":"`-FunctionDecl 0x11d80aed8  col:9 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x11d80afd8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x11d80af80 <<invalid sloc>> Implicit 873 ","20099":"`-FunctionDecl 0x1241281b8  line:1:6 invalid is_path_sep 'int (char)'   |-ParmVarDecl 0x1241280e8 <col:18, col:23> col:23 c 'char'   `-CompoundStmt 0x124141be8 <line:2:1, line:6:1>     |-DeclStmt 0x1241419e8 <line:3:2, col:54>     | `-VarDecl 0x124128280 <col:2, col:20> col:20 invalid sep 'const int' static     `-ReturnStmt 0x124141bd8 <line:5:2, col:39>       `-BinaryOperator 0x124141bb8 <col:9, col:39> 'int' contains-errors '=='         |-RecoveryExpr 0x124141a00 <col:9> '<dependent type>' contains-errors lvalue         `-CallExpr 0x124141b98 <col:16, col:39> '<dependent type>' contains-errors           `-CXXDependentScopeMemberExpr 0x124141b50 <col:16, col:24> '<dependent type>' contains-errors lvalue .make_preferred             `-CallExpr 0x124141b28 <col:16, col:22> '<dependent type>' contains-errors               |-DeclRefExpr 0x124141a20 <col:16> 'int ()' Function 0x124128388 'path' 'int ()'               `-RecoveryExpr 0x124141b08 <col:21> '<dependent type>' contains-errors lvalue ","19537":"`-FunctionDecl 0x13f128378  line:1:1 invalid virDomainSmartcardDefForeach 'int (int, int, int, void *)'   |-ParmVarDecl 0x13f1280f0 <col:30, col:46> col:46 invalid def 'int'   |-ParmVarDecl 0x13f128170 <line:2:30, col:35> col:35 invalid abortOnError 'int'   |-ParmVarDecl 0x13f1281f0 <line:3:30, col:60> col:60 invalid iter 'int'   |-ParmVarDecl 0x13f128270 <line:4:30, col:36> col:36 used opaque 'void *'   `-CompoundStmt 0x13f141ab8 <line:5:1, line:20:1>     |-UnaryExprOrTypeTraitExpr 0x13f128498 <line:6:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13f128478 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13f128558 <line:7:5, col:15>     | `-VarDecl 0x13f1284d0 <col:5, col:14> col:9 used rc 'int' cinit     |   `-IntegerLiteral 0x13f128538 <col:14> 'int' 0     |-ForStmt 0x13f141a38 <line:9:5, line:17:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13f128688 <line:9:17, col:26> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13f128668 <col:17> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x13f128600 <col:21, col:26> '<dependent type>' contains-errors lvalue ->nsmartcards     | |   `-RecoveryExpr 0x13f1285e0 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x13f1286f8 <col:39, col:40> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x13f1286d8 <col:39> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f141a18 <col:44, line:17:5>     |   |-IfStmt 0x13f1418d8 <line:10:9, line:13:19>     |   | |-RecoveryExpr 0x13f141840 <line:10:13, line:12:30> '_Bool' contains-errors     |   | `-BinaryOperator 0x13f1418b8 <line:13:13, col:19> 'int' '='     |   |   |-DeclRefExpr 0x13f141860 <col:13> 'int' lvalue Var 0x13f1284d0 'rc' 'int'     |   |   `-UnaryOperator 0x13f1418a0 <col:18, col:19> 'int' prefix '-'     |   |     `-IntegerLiteral 0x13f141880 <col:19> 'int' 1     |   `-IfStmt 0x13f1419f8 <line:15:9, line:16:20>     |     |-BinaryOperator 0x13f141990 <line:15:13, col:35> 'int' contains-errors '&&'     |     | |-RecoveryExpr 0x13f1418f8 <col:13> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x13f141970 <col:29, col:35> 'int' '!='     |     |   |-ImplicitCastExpr 0x13f141958 <col:29> 'int' <LValueToRValue>     |     |   | `-DeclRefExpr 0x13f141918 <col:29> 'int' lvalue Var 0x13f1284d0 'rc' 'int'     |     |   `-IntegerLiteral 0x13f141938 <col:35> 'int' 0     |     `-ReturnStmt 0x13f1419e8 <line:16:13, col:20>     |       `-ImplicitCastExpr 0x13f1419d0 <col:20> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x13f1419b0 <col:20> 'int' lvalue Var 0x13f1284d0 'rc' 'int'     `-ReturnStmt 0x13f141aa8 <line:19:5, col:12>       `-ImplicitCastExpr 0x13f141a90 <col:12> 'int' <LValueToRValue>         `-DeclRefExpr 0x13f141a70 <col:12> 'int' lvalue Var 0x13f1284d0 'rc' 'int' ","19777":"`-FunctionDecl 0x1229283d8  line:1:13 invalid op_attr_value_from_binary 'int (void *, const void *, int, int *)' static   |-ParmVarDecl 0x1229280f0 <col:39, col:45> col:45 used attr 'void *'   |-ParmVarDecl 0x1229281a8 <col:51, col:63> col:63 used data 'const void *'   |-ParmVarDecl 0x122928228 <line:2:11, col:18> col:18 invalid data_len 'int'   |-ParmVarDecl 0x1229282d8 <col:28, col:36> col:36 invalid offs 'int *'   `-CompoundStmt 0x122928778 <line:3:1, line:7:1>     `-ReturnStmt 0x122928768 <line:6:2, col:58>       `-CallExpr 0x122928728 <col:9, col:58> '<dependent type>' contains-errors         |-DeclRefExpr 0x122928630 <col:9> 'int ()' Function 0x122928578 'op_u32_from_binary_helper' 'int ()'         |-RecoveryExpr 0x122928708 <col:35> '<dependent type>' contains-errors lvalue         |-DeclRefExpr 0x122928668 <col:38> 'const void *' lvalue ParmVar 0x1229281a8 'data' 'const void *'         |-RecoveryExpr 0x122928688 <col:44> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x1229286a8 <col:54> '<dependent type>' contains-errors lvalue ","20026":"`-FunctionDecl 0x13a026748  line:1:5 f2fs_trim_fs 'int (struct f2fs_sb_info *, struct fstrim_range *)'   |-ParmVarDecl 0x13a00e248 <col:18, col:39> col:39 used sbi 'struct f2fs_sb_info *'   |-ParmVarDecl 0x13a026628 <col:44, col:65> col:65 used range 'struct fstrim_range *'   `-CompoundStmt 0x139924098 <line:2:1, line:57:1>     |-DeclStmt 0x13a026978 <line:5:2, col:37>     | |-VarDecl 0x13a026878 <col:2, col:15> col:15 used start_segno 'unsigned int'     | `-VarDecl 0x13a0268f8 <col:2, col:28> col:28 used end_segno 'unsigned int'     |-DeclStmt 0x13a026b08 <line:6:2, col:23>     | |-RecordDecl 0x13a026990 <col:2, col:9> col:9 struct cp_control     | `-VarDecl 0x13a026a88 <col:2, col:20> col:20 referenced invalid cpc 'struct cp_control'     |-DeclStmt 0x13a026bc0 <line:7:2, col:13>     | `-VarDecl 0x13a026b38 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x13a026ba0 <col:12> 'int' 0     |-IfStmt 0x13a027048 <line:9:2, line:10:11>     | |-BinaryOperator 0x13a026f80 <line:9:6, col:53> 'int' contains-errors '||'     | | |-BinaryOperator 0x13a026f60 <col:6, col:30> 'int' contains-errors '>='     | | | |-RecoveryExpr 0x13a026ee8 <col:6> '<dependent type>' contains-errors lvalue     | | | `-CallExpr 0x13a026f20 <col:15, col:30> 'int'     | | |   |-ImplicitCastExpr 0x13a026f08 <col:15> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x13a026d00 <col:15> 'int ()' Function 0x13a026c48 'MAX_BLKADDR' 'int ()'     | | |   `-ImplicitCastExpr 0x13a026f48 <col:27> 'struct f2fs_sb_info *' <LValueToRValue>     | | |     `-DeclRefExpr 0x13a026d20 <col:27> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     | | `-BinaryOperator 0x13a026ea8 <col:35, col:53> 'int' contains-errors '<'     | |   |-RecoveryExpr 0x13a026e20 <col:35, col:42> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x13a026de8 <col:35> 'struct fstrim_range *' lvalue ParmVar 0x13a026628 'range' 'struct fstrim_range *'     | |   `-RecoveryExpr 0x13a026e80 <col:48, col:53> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13a026e48 <col:48> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     | `-ReturnStmt 0x13a027038 <line:10:3, col:11>     |   `-UnaryOperator 0x13a027020 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13a027008 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13a026fe8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13a027118 <line:12:2, col:16> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13a0270b0 <col:2, col:6> '<dependent type>' contains-errors lvalue .trimmed     | | `-RecoveryExpr 0x13a027088 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13a027068 <col:2> 'struct cp_control' lvalue Var 0x13a026a88 'cpc' 'struct cp_control'     | `-IntegerLiteral 0x13a0270f8 <col:16> 'int' 0     |-IfStmt 0x13a0273e8 <line:13:2, line:14:8>     | |-BinaryOperator 0x13a027360 <line:13:6, col:29> 'int' contains-errors '<='     | | |-RecoveryExpr 0x13a0272e8 <col:6> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x13a027320 <col:13, col:29> 'int'     | |   |-ImplicitCastExpr 0x13a027308 <col:13> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x13a027230 <col:13> 'int ()' Function 0x13a027178 'MAIN_BLKADDR' 'int ()'     | |   `-ImplicitCastExpr 0x13a027348 <col:26> 'struct f2fs_sb_info *' <LValueToRValue>     | |     `-DeclRefExpr 0x13a027250 <col:26> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     | `-GotoStmt 0x13a0273d0 <line:14:3, col:8> 'out' 0x13a027380     |-IfStmt 0x13a029678 <line:16:2, line:20:2>     | |-CallExpr 0x13a027590 <line:16:6, col:40> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13a0274e8 <col:6> 'int ()' Function 0x13a027430 'is_sbi_flag_set' 'int ()'     | | |-DeclRefExpr 0x13a027508 <col:22> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     | | `-RecoveryExpr 0x13a027570 <col:27> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13a029658 <col:43, line:20:2>     |   |-CallExpr 0x13a029608 <line:17:3, line:18:9> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13a0294b8 <line:17:3> 'int ()' Function 0x13a029400 'f2fs_msg' 'int ()'     |   | |-RecoveryExpr 0x13a029510 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13a0294d8 <col:12> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |   | |-RecoveryExpr 0x13a0295e8 <col:21> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x13a029590 <line:18:4> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x13a029640 <line:19:3, col:8> 'out' 0x13a027380     |-ForStmt 0x139923af8 <line:30:2, line:50:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13a029f78 <line:30:9, col:24> 'int' '<='     | | |-ImplicitCastExpr 0x13a029f48 <col:9> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x13a029f08 <col:9> 'unsigned int' lvalue Var 0x13a026878 'start_segno' 'unsigned int'     | | `-ImplicitCastExpr 0x13a029f60 <col:24> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x13a029f28 <col:24> 'unsigned int' lvalue Var 0x13a0268f8 'end_segno' 'unsigned int'     | |-BinaryOperator 0x13a02a060 <col:35, col:64> 'unsigned int' contains-errors '='     | | |-DeclRefExpr 0x13a029f98 <col:35> 'unsigned int' lvalue Var 0x13a026878 'start_segno' 'unsigned int'     | | `-BinaryOperator 0x13a02a040 <col:49, col:64> '<dependent type>' contains-errors '+'     | |   |-CXXDependentScopeMemberExpr 0x13a029fd8 <col:49, col:53> '<dependent type>' contains-errors lvalue .trim_end     | |   | `-RecoveryExpr 0x13a029fb8 <col:49> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x13a02a020 <col:64> 'int' 1     | `-CompoundStmt 0x139923ab0 <col:67, line:50:2>     |   |-BinaryOperator 0x13a02a130 <line:31:3, col:20> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x13a02a0c8 <col:3, col:7> '<dependent type>' contains-errors lvalue .trim_start     |   | | `-RecoveryExpr 0x13a02a0a0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13a02a080 <col:3> 'struct cp_control' lvalue Var 0x13a026a88 'cpc' 'struct cp_control'     |   | `-DeclRefExpr 0x13a02a110 <col:20> 'unsigned int' lvalue Var 0x13a026878 'start_segno' 'unsigned int'     |   |-IfStmt 0x1399233e0 <line:33:3, line:38:4> has_else     |   | |-BinaryOperator 0x13a02a1d0 <line:33:7, col:28> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x13a02a188 <col:7, col:12> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x13a02a150 <col:7> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |   | | `-IntegerLiteral 0x13a02a1b0 <col:28> 'int' 0     |   | |-BreakStmt 0x13a02a1f0 <line:34:4>     |   | `-IfStmt 0x1399233b0 <line:35:8, line:38:4> has_else     |   |   |-BinaryOperator 0x139922c58 <line:35:12, col:55> 'int' contains-errors '<'     |   |   | |-RecoveryExpr 0x13a02a230 <col:12, col:17> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x13a02a1f8 <col:12> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |   |   | `-CallExpr 0x139922c18 <col:32, col:55> 'int'     |   |   |   |-ImplicitCastExpr 0x139922c00 <col:32> 'int (*)()' <FunctionToPointerDecay>     |   |   |   | `-DeclRefExpr 0x13a02a338 <col:32> 'int ()' Function 0x13a02a280 'BATCHED_TRIM_BLOCKS' 'int ()'     |   |   |   `-ImplicitCastExpr 0x139922c40 <col:52> 'struct f2fs_sb_info *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x13a02a358 <col:52> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |   |   |-BinaryOperator 0x139922d28 <line:36:4, col:19> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x139922cc0 <col:4, col:8> '<dependent type>' contains-errors lvalue .trim_end     |   |   | | `-RecoveryExpr 0x139922c98 <col:4> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x139922c78 <col:4> 'struct cp_control' lvalue Var 0x13a026a88 'cpc' 'struct cp_control'     |   |   | `-DeclRefExpr 0x139922d08 <col:19> 'unsigned int' lvalue Var 0x13a0268f8 'end_segno' 'unsigned int'     |   |   `-NullStmt 0x1399233a8 <line:38:4>     |   |-CallExpr 0x139923588 <line:43:3, col:28> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1399234f0 <col:3> 'int ()' Function 0x139923438 'mutex_lock' 'int ()'     |   | `-UnaryOperator 0x139923570 <col:14, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x139923548 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x139923510 <col:15> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |   |-BinaryOperator 0x139923758 <line:44:3, col:35> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1399235b0 <col:3> 'int' lvalue Var 0x13a026b38 'err' 'int'     |   | `-CallExpr 0x139923728 <col:9, col:35> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x1399236b0 <col:9> 'int ()' Function 0x1399235f8 'write_checkpoint' 'int ()'     |   |   |-DeclRefExpr 0x1399236d0 <col:26> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |   |   `-UnaryOperator 0x139923710 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x1399236f0 <col:32> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1399238f0 <line:45:3, col:30> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x139923858 <col:3> 'int ()' Function 0x1399237a0 'mutex_unlock' 'int ()'     |   | `-UnaryOperator 0x1399238d8 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1399238b0 <col:17, col:22> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x139923878 <col:17> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |   |-IfStmt 0x139923958 <line:46:3, line:47:4>     |   | |-ImplicitCastExpr 0x139923938 <line:46:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x139923918 <col:7> 'int' lvalue Var 0x13a026b38 'err' 'int'     |   | `-BreakStmt 0x139923950 <line:47:4>     |   `-CallExpr 0x139923a90 <line:49:3, col:12> 'int'     |     `-ImplicitCastExpr 0x139923a78 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x139923a58 <col:3> 'int ()' Function 0x1399239a0 'schedule' 'int ()'     |-CallExpr 0x139923c68 <line:52:2, col:28> 'int'     | |-ImplicitCastExpr 0x139923c50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x139923c10 <col:2> 'int ()' Function 0x139923b58 'mark_discard_range_all' 'int ()'     | `-ImplicitCastExpr 0x139923c90 <col:25> 'struct f2fs_sb_info *' <LValueToRValue>     |   `-DeclRefExpr 0x139923c30 <col:25> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |-CallExpr 0x139923de0 <line:53:2, col:28> 'int'     | |-ImplicitCastExpr 0x139923dc8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x139923d88 <col:2> 'int ()' Function 0x139923cd0 'f2fs_wait_discard_bios' 'int ()'     | `-ImplicitCastExpr 0x139923e08 <col:25> 'struct f2fs_sb_info *' <LValueToRValue>     |   `-DeclRefExpr 0x139923da8 <col:25> 'struct f2fs_sb_info *' lvalue ParmVar 0x13a00e248 'sbi' 'struct f2fs_sb_info *'     |-LabelStmt 0x139924030 <line:54:1, line:55:44> 'out'     | `-BinaryOperator 0x139924010 <col:2, col:44> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x139923e58 <col:2, col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x139923e20 <col:2> 'struct fstrim_range *' lvalue ParmVar 0x13a026628 'range' 'struct fstrim_range *'     |   `-CallExpr 0x139923fe8 <col:15, col:44> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x139923f60 <col:15> 'int ()' Function 0x139923ea8 'F2FS_BLK_TO_BYTES' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x139923fa0 <col:33, col:37> '<dependent type>' contains-errors lvalue .trimmed     |       `-RecoveryExpr 0x139923f80 <col:33> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x139924088 <line:56:2, col:9>       `-ImplicitCastExpr 0x139924070 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x139924050 <col:9> 'int' lvalue Var 0x13a026b38 'err' 'int' ","19874":"`-FunctionDecl 0x1278f3d48  line:1:12 cqspi_setup_flash 'int (struct cqspi_st *, struct device_node *)' static   |-ParmVarDecl 0x13780e848 <col:30, col:47> col:47 used cqspi 'struct cqspi_st *'   |-ParmVarDecl 0x1278f3c28 <col:54, col:74> col:74 used np 'struct device_node *'   `-CompoundStmt 0x137829578 <line:2:1, line:73:1>     |-DeclStmt 0x1278f4098 <line:3:2, col:44>     | |-RecordDecl 0x1278f3e48 <col:2, col:9> col:9 struct platform_device     | `-VarDecl 0x1278f3fb8 <col:2, col:40> col:26 used pdev 'struct platform_device *' cinit     |   `-RecoveryExpr 0x1278f4058 <col:33, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1278f4020 <col:33> 'struct cqspi_st *' lvalue ParmVar 0x13780e848 'cqspi' 'struct cqspi_st *'     |-DeclStmt 0x1278f4310 <line:4:2, col:33>     | |-RecordDecl 0x1278f40b0 <col:2, col:9> col:9 struct device     | `-VarDecl 0x1278f4218 <col:2, col:30> col:17 used dev 'struct device *' cinit     |   `-UnaryOperator 0x1278f42e0 <col:23, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1278f42b8 <col:24, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1278f4280 <col:24> 'struct platform_device *' contains-errors lvalue Var 0x1278f3fb8 'pdev' 'struct platform_device *'     |-DeclStmt 0x1278f4518 <line:5:2, col:35>     | |-RecordDecl 0x1278f4328 <col:2, col:9> col:9 struct cqspi_flash_pdata     | `-VarDecl 0x1278f4498 <col:2, col:28> col:28 used f_pdata 'struct cqspi_flash_pdata *'     |-DeclStmt 0x1278f4718 <line:6:2, col:21>     | |-RecordDecl 0x1278f4530 <col:2, col:9> col:9 struct spi_nor     | `-VarDecl 0x1278f4698 <col:2, col:18> col:18 used nor 'struct spi_nor *'     |-DeclStmt 0x1278f4918 <line:7:2, col:22>     | |-RecordDecl 0x1278f4730 <col:2, col:9> col:9 struct mtd_info     | `-VarDecl 0x1278f4898 <col:2, col:19> col:19 used mtd 'struct mtd_info *'     |-DeclStmt 0x1278f49b0 <line:8:2, col:17>     | `-VarDecl 0x1278f4948 <col:2, col:15> col:15 used cs 'unsigned int'     |-DeclStmt 0x1278f4ae0 <line:9:2, col:12>     | |-VarDecl 0x1278f49e0 <col:2, col:6> col:6 used i 'int'     | `-VarDecl 0x1278f4a60 <col:2, col:9> col:9 used ret 'int'     |-CallExpr 0x137827b58 <line:12:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137827ab8 <col:2> 'int ()' Function 0x137827a00 'for_each_available_child_of_node' 'int ()'     | |-RecoveryExpr 0x137827b10 <col:35, col:40> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137827ad8 <col:35> 'struct device *' contains-errors lvalue Var 0x1278f4218 'dev' 'struct device *'     | `-DeclRefExpr 0x137827b38 <col:49> 'struct device_node *' lvalue ParmVar 0x1278f3c28 'np' 'struct device_node *'     |-CompoundStmt 0x130008f78 <col:53, line:64:2>     | |-IfStmt 0x137828070 <line:13:3, line:16:3>     | | |-CallExpr 0x137827dc8 <line:13:7, col:42> 'int'     | | | |-ImplicitCastExpr 0x137827db0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x137827c68 <col:7> 'int ()' Function 0x137827bb0 'of_property_read_u32' 'int ()'     | | | |-ImplicitCastExpr 0x137827e00 <col:28> 'struct device_node *' <LValueToRValue>     | | | | `-DeclRefExpr 0x137827c88 <col:28> 'struct device_node *' lvalue ParmVar 0x1278f3c28 'np' 'struct device_node *'     | | | |-ImplicitCastExpr 0x137827e18 <col:32> 'char *' <ArrayToPointerDecay>     | | | | `-StringLiteral 0x137827cf0 <col:32> 'char[4]' lvalue \"STR\"     | | | `-UnaryOperator 0x137827d60 <col:39, col:40> 'unsigned int *' prefix '&' cannot overflow     | | |   `-DeclRefExpr 0x137827d10 <col:40> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'     | | `-CompoundStmt 0x137828050 <col:45, line:16:3>     | |   |-CallExpr 0x137827f88 <line:14:4, col:22> 'int' contains-errors     | |   | |-ImplicitCastExpr 0x137827f70 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x137827f10 <col:4> 'int ()' Function 0x137827e58 'dev_err' 'int ()'     | |   | |-ImplicitCastExpr 0x137827fb8 <col:12> 'struct device *' contains-errors <LValueToRValue>     | |   | | `-DeclRefExpr 0x137827f30 <col:12> 'struct device *' contains-errors lvalue Var 0x1278f4218 'dev' 'struct device *'     | |   | `-ImplicitCastExpr 0x137827fd0 <col:17> 'char *' <ArrayToPointerDecay>     | |   |   `-StringLiteral 0x137827f50 <col:17> 'char[4]' lvalue \"STR\"     | |   `-GotoStmt 0x137828038 <line:15:4, col:9> 'err' 0x137827fe8     | |-IfStmt 0x137828278 <line:18:3, line:21:3>     | | |-BinaryOperator 0x137828108 <line:18:7, col:12> 'int' contains-errors '>'     | | | |-DeclRefExpr 0x137828090 <col:7> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'     | | | `-RecoveryExpr 0x1378280e8 <col:12> '<dependent type>' contains-errors lvalue     | | `-CompoundStmt 0x137828258 <col:34, line:21:3>     | |   |-CallExpr 0x1378281c0 <line:19:4, col:26> 'int' contains-errors     | |   | |-ImplicitCastExpr 0x1378281a8 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x137828128 <col:4> 'int ()' Function 0x137827e58 'dev_err' 'int ()'     | |   | |-ImplicitCastExpr 0x1378281f8 <col:12> 'struct device *' contains-errors <LValueToRValue>     | |   | | `-DeclRefExpr 0x137828148 <col:12> 'struct device *' contains-errors lvalue Var 0x1278f4218 'dev' 'struct device *'     | |   | |-ImplicitCastExpr 0x137828210 <col:17> 'char *' <ArrayToPointerDecay>     | |   | | `-StringLiteral 0x137828168 <col:17> 'char[4]' lvalue \"STR\"     | |   | `-ImplicitCastExpr 0x137828228 <col:24> 'unsigned int' <LValueToRValue>     | |   |   `-DeclRefExpr 0x137828188 <col:24> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'     | |   `-GotoStmt 0x137828240 <line:20:4, col:9> 'err' 0x137827fe8     | |-BinaryOperator 0x1378283a0 <line:23:3, col:31> 'struct cqspi_flash_pdata *' contains-errors '='     | | |-DeclRefExpr 0x137828298 <col:3> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'     | | `-UnaryOperator 0x137828388 <col:13, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-ArraySubscriptExpr 0x137828368 <col:14, col:31> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x137828338 <col:14, col:21> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x1378282f0 <col:14, col:21> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x1378282b8 <col:14> 'struct cqspi_st *' lvalue ParmVar 0x13780e848 'cqspi' 'struct cqspi_st *'     | |     `-ImplicitCastExpr 0x137828350 <col:29> 'unsigned int' <LValueToRValue>     | |       `-DeclRefExpr 0x137828318 <col:29> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'     | |-BinaryOperator 0x137828440 <line:24:3, col:20> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x1378283f8 <col:3, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1378283c0 <col:3> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'     | | `-DeclRefExpr 0x137828420 <col:20> 'struct cqspi_st *' lvalue ParmVar 0x13780e848 'cqspi' 'struct cqspi_st *'     | |-BinaryOperator 0x1378284e0 <line:25:3, col:17> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x137828498 <col:3, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x137828460 <col:3> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'     | | `-DeclRefExpr 0x1378284c0 <col:17> 'unsigned int' lvalue Var 0x1278f4948 'cs' 'unsigned int'     | |-BinaryOperator 0x137828718 <line:27:3, col:51> 'int' contains-errors '='     | | |-DeclRefExpr 0x137828500 <col:3> 'int' lvalue Var 0x1278f4a60 'ret' 'int'     | | `-CallExpr 0x137828698 <col:9, col:51> 'int' contains-errors     | |   |-ImplicitCastExpr 0x137828680 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x137828600 <col:9> 'int ()' Function 0x137828548 'cqspi_of_get_flash_pdata' 'int ()'     | |   |-ImplicitCastExpr 0x1378286d0 <col:34> 'struct platform_device *' contains-errors <LValueToRValue>     | |   | `-DeclRefExpr 0x137828620 <col:34> 'struct platform_device *' contains-errors lvalue Var 0x1278f3fb8 'pdev' 'struct platform_device *'     | |   |-ImplicitCastExpr 0x1378286e8 <col:40> 'struct cqspi_flash_pdata *' <LValueToRValue>     | |   | `-DeclRefExpr 0x137828640 <col:40> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'     | |   `-ImplicitCastExpr 0x137828700 <col:49> 'struct device_node *' <LValueToRValue>     | |     `-DeclRefExpr 0x137828660 <col:49> 'struct device_node *' lvalue ParmVar 0x1278f3c28 'np' 'struct device_node *'     | |-IfStmt 0x137828788 <line:28:3, line:29:9>     | | |-ImplicitCastExpr 0x137828758 <line:28:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x137828738 <col:7> 'int' lvalue Var 0x1278f4a60 'ret' 'int'     | | `-GotoStmt 0x137828770 <line:29:4, col:9> 'err' 0x137827fe8     | |-BinaryOperator 0x137828840 <line:31:3, col:19> 'struct spi_nor *' contains-errors '='     | | |-DeclRefExpr 0x1378287a8 <col:3> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'     | | `-UnaryOperator 0x137828828 <col:9, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x137828800 <col:10, col:19> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1378287c8 <col:10> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'     | |-BinaryOperator 0x1378288f8 <line:32:3, col:15> 'struct mtd_info *' contains-errors '='     | | |-DeclRefExpr 0x137828860 <col:3> 'struct mtd_info *' lvalue Var 0x1278f4898 'mtd' 'struct mtd_info *'     | | `-UnaryOperator 0x1378288e0 <col:9, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1378288b8 <col:10, col:15> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x137828880 <col:10> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'     | |-BinaryOperator 0x137828998 <line:34:3, col:15> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x137828950 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x137828918 <col:3> 'struct mtd_info *' lvalue Var 0x1278f4898 'mtd' 'struct mtd_info *'     | | `-DeclRefExpr 0x137828978 <col:15> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'     | |-BinaryOperator 0x130008248 <line:36:3, col:14> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x130008200 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1378289b8 <col:3> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'     | | `-DeclRefExpr 0x130008228 <col:14> 'struct device *' contains-errors lvalue Var 0x1278f4218 'dev' 'struct device *'     | |-CallExpr 0x1300083c0 <line:37:3, col:33> 'int'     | | |-ImplicitCastExpr 0x1300083a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x130008348 <col:3> 'int ()' Function 0x130008290 'spi_nor_set_flash_node' 'int ()'     | | |-ImplicitCastExpr 0x1300083f0 <col:26> 'struct spi_nor *' <LValueToRValue>     | | | `-DeclRefExpr 0x130008368 <col:26> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'     | | `-ImplicitCastExpr 0x130008408 <col:31> 'struct device_node *' <LValueToRValue>     | |   `-DeclRefExpr 0x130008388 <col:31> 'struct device_node *' lvalue ParmVar 0x1278f3c28 'np' 'struct device_node *'     | |-BinaryOperator 0x1300084a0 <line:38:3, col:15> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x130008458 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x130008420 <col:3> 'struct spi_nor *' lvalue Var 0x1278f4698 'nor' 'struct spi_nor *'     | | `-DeclRefExpr 0x130008480 <col:15> 'struct cqspi_flash_pdata *' lvalue Var 0x1278f4498 'f_pdata' 'struct cqspi_flash_pdata *'     | |-IfStmt 0x130008b78 <line:50:3, line:53:3>     | | |-UnaryOperator 0x130008b10 <line:50:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x130008af8 <col:8, col:13> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x130008ad0 <col:8, col:13> '<dependent type>' contains-errors lvalue     | | |     `-DeclRefExpr 0x130008a98 <col:8> 'struct mtd_info *' lvalue Var 0x1278f4898 'mtd' 'struct mtd_info *'     | | `-CompoundStmt 0x130008b60 <col:19, line:53:3>     | |   `-GotoStmt 0x130008b48 <line:52:4, col:9> 'err' 0x137827fe8     | |-IfStmt 0x130008d28 <line:56:3, line:57:9>     | | |-ImplicitCastExpr 0x130008cf8 <line:56:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x130008cd8 <col:7> 'int' lvalue Var 0x1278f4a60 'ret' 'int'     | | `-GotoStmt 0x130008d10 <line:57:4, col:9> 'err' 0x137827fe8     | `-IfStmt 0x130008ef8 <line:60:3, line:61:9>     |   |-ImplicitCastExpr 0x130008ec8 <line:60:7> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x130008ea8 <col:7> 'int' lvalue Var 0x1278f4a60 'ret' 'int'     |   `-GotoStmt 0x130008ee0 <line:61:4, col:9> 'err' 0x137827fe8     |-ReturnStmt 0x130009028 <line:66:2, col:9>     | `-IntegerLiteral 0x130009008 <col:9> 'int' 0     |-LabelStmt 0x137829510 <line:68:1, col:4> 'err'     | `-NullStmt 0x137829508 <col:4>     `-ReturnStmt 0x137829568 <line:72:2, col:9>       `-ImplicitCastExpr 0x137829550 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x137829530 <col:9> 'int' lvalue Var 0x1278f4a60 'ret' 'int' ","19364":"`-FunctionDecl 0x139143f88  col:9 implicit used isgraph 'int (int)' extern   |-ParmVarDecl 0x139144088 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x139144030 <<invalid sloc>> Implicit 925   |-NoThrowAttr 0x1391440f8 <col:9> Implicit   `-PureAttr 0x139144120 <col:9> Implicit ","19763":"`-FunctionDecl 0x134008238  line:1:6 invalid asn1_check_enumerated 'int (struct asn1_data *, int)'   |-ParmVarDecl 0x13300e268 <col:28, col:46> col:46 used data 'struct asn1_data *'   |-ParmVarDecl 0x13300e2e8 <col:52, col:56> col:56 used v 'int'   `-CompoundStmt 0x134008b18 <line:2:1, line:12:1>     |-CallExpr 0x134008728 <line:5:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x134008650 <col:2> 'int ()' Function 0x134008598 'asn1_read_uint8' 'int ()'     | |-DeclRefExpr 0x134008670 <col:18> 'struct asn1_data *' lvalue ParmVar 0x13300e268 'data' 'struct asn1_data *'     | `-UnaryOperator 0x134008710 <col:24, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1340086f0 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1340088c8 <line:6:2, col:19> 'int'     | |-ImplicitCastExpr 0x1340088b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x134008838 <col:2> 'int ()' Function 0x134008780 'asn1_end_tag' 'int ()'     | `-ImplicitCastExpr 0x1340088f0 <col:15> 'struct asn1_data *' <LValueToRValue>     |   `-DeclRefExpr 0x134008858 <col:15> 'struct asn1_data *' lvalue ParmVar 0x13300e268 'data' 'struct asn1_data *'     `-ReturnStmt 0x134008b08 <line:11:2, col:16>       `-UnaryOperator 0x134008af0 <col:9, col:16> '<dependent type>' contains-errors prefix '!' cannot overflow         `-ImplicitCastExpr 0x134008ad8 <col:10, col:16> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x134008a50 <col:10, col:16> '<dependent type>' contains-errors lvalue             `-DeclRefExpr 0x134008a18 <col:10> 'struct asn1_data *' lvalue ParmVar 0x13300e268 'data' 'struct asn1_data *' ","19466":"`-FunctionDecl 0x151128288  line:1:1 invalid sraSpanInsertAfter 'int (int *, int *)'   |-ParmVarDecl 0x151128128 <col:20, col:29> col:29 referenced invalid newspan 'int *'   |-ParmVarDecl 0x1511281a8 <col:38, col:47> col:47 referenced invalid after 'int *'   `-CompoundStmt 0x151128710 <col:54, line:6:1>     |-BinaryOperator 0x151128438 <line:2:3, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x151128388 <col:3, col:12> '<dependent type>' contains-errors lvalue ->_next     | | `-RecoveryExpr 0x151128360 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x151128340 <col:3> 'int *' lvalue ParmVar 0x151128128 'newspan' 'int *'     | `-CXXDependentScopeMemberExpr 0x1511283f0 <col:20, col:27> '<dependent type>' contains-errors lvalue ->_next     |   `-RecoveryExpr 0x1511283d0 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151128508 <line:3:3, col:20> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1511284a0 <col:3, col:12> '<dependent type>' contains-errors lvalue ->_prev     | | `-RecoveryExpr 0x151128478 <col:3> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x151128458 <col:3> 'int *' lvalue ParmVar 0x151128128 'newspan' 'int *'     | `-RecoveryExpr 0x1511284e8 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x151128620 <line:4:3, col:25> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1511285b8 <col:3, col:17> '<dependent type>' contains-errors lvalue ->_prev     | | `-CXXDependentScopeMemberExpr 0x151128570 <col:3, col:10> '<dependent type>' contains-errors lvalue ->_next     | |   `-RecoveryExpr 0x151128548 <col:3> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x151128528 <col:3> 'int *' lvalue ParmVar 0x1511281a8 'after' 'int *'     | `-RecoveryExpr 0x151128600 <col:25> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x1511286f0 <line:5:3, col:18> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x151128688 <col:3, col:10> '<dependent type>' contains-errors lvalue ->_next       | `-RecoveryExpr 0x151128660 <col:3> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x151128640 <col:3> 'int *' lvalue ParmVar 0x1511281a8 'after' 'int *'       `-RecoveryExpr 0x1511286d0 <col:18> '<dependent type>' contains-errors lvalue ","19772":"`-FunctionDecl 0x12e128198  line:1:19 cap_limit_ptraced_target 'int (void)' static inline   `-CompoundStmt 0x12e128498 <line:2:1, line:4:1>     `-ReturnStmt 0x12e128488 <line:3:2, col:29>       `-UnaryOperator 0x12e128470 <col:9, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow         `-CallExpr 0x12e128448 <col:10, col:29> '<dependent type>' contains-errors           |-DeclRefExpr 0x12e1283b0 <col:10> 'int ()' Function 0x12e1282f8 'capable' 'int ()'           `-RecoveryExpr 0x12e128428 <col:18> '<dependent type>' contains-errors lvalue ","19507":"`-FunctionDecl 0x12d9283e8  line:1:1 invalid TPMI_DH_SAVED_Unmarshal 'int (int *, int **, int *, int)'   |-ParmVarDecl 0x12d928128 <col:25, col:40> col:40 invalid target 'int *'   |-ParmVarDecl 0x12d9281e0 <col:48, col:55> col:55 invalid buffer 'int **'   |-ParmVarDecl 0x12d928260 <col:63, col:70> col:70 invalid size 'int *'   |-ParmVarDecl 0x12d9282e0 <col:76, col:81> col:81 referenced invalid allowNull 'int'   `-CompoundStmt 0x12d941b60 <line:2:1, line:24:1>     |-BinaryOperator 0x12d928518 <line:4:5, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d9284d0 <col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d9284b0 <col:5> 'int' lvalue ParmVar 0x12d9282e0 'allowNull' 'int'     | `-RecoveryExpr 0x12d9284f8 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12d941810 <line:6:5, line:8:5>     | |-BinaryOperator 0x12d9285c8 <line:6:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12d928588 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12d9285a8 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12d941800 <col:31, line:8:5>     `-IfStmt 0x12d941b40 <line:9:5, line:22:5>       |-BinaryOperator 0x12d9418c0 <line:9:9, col:15> 'int' contains-errors '=='       | |-RecoveryExpr 0x12d941880 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12d9418a0 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d941b28 <col:31, line:22:5>         `-IfStmt 0x12d941b08 <line:15:2, line:21:2>           |-BinaryOperator 0x12d941ad8 <line:15:6, line:19:6> 'int' contains-errors '&&'           | |-BinaryOperator 0x12d941a98 <line:15:6, line:18:6> 'int' contains-errors '&&'           | | |-BinaryOperator 0x12d941a58 <line:15:6, line:17:6> 'int' contains-errors '&&'           | | | |-BinaryOperator 0x12d941a18 <line:15:6, line:16:6> 'int' contains-errors '&&'           | | | | |-RecoveryExpr 0x12d9419d8 <line:15:6> '<dependent type>' contains-errors lvalue           | | | | `-RecoveryExpr 0x12d9419f8 <line:16:6> '<dependent type>' contains-errors lvalue           | | | `-RecoveryExpr 0x12d941a38 <line:17:6> '<dependent type>' contains-errors lvalue           | | `-RecoveryExpr 0x12d941a78 <line:18:6> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x12d941ab8 <line:19:6> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x12d941af8 <col:29, line:21:2> ","20091":"`-FunctionDecl 0x12e80de88  line:1:1 invalid delete_item_response_cb 'int (int *, int *)'   |-ParmVarDecl 0x12e80dd28 <col:26, col:41> col:41 invalid response 'int *'   |-ParmVarDecl 0x12e80dda8 <line:2:26, col:46> col:46 invalid simple 'int *'   `-CompoundStmt 0x12d040018 <line:3:1, line:31:1>     |-IfStmt 0x12d03fbf8 <line:16:2, line:19:2>     | |-RecoveryExpr 0x12d03fa90 <line:16:6, col:15> '_Bool' contains-errors     | `-CompoundStmt 0x12d03fbe0 <col:21, line:19:2>     |   `-ReturnStmt 0x12d03fbd0 <line:18:3>     `-WhileStmt 0x12d03fff8 <line:23:2, line:30:2>       |-RecoveryExpr 0x12d03fd18 <line:23:9, col:21> '_Bool' contains-errors       `-CompoundStmt 0x12d03ffe0 <col:27, line:30:2>         `-IfStmt 0x12d03fec0 <line:24:3, line:27:3>           |-RecoveryExpr 0x12d03fe38 <line:24:7, col:49> '_Bool' contains-errors           `-CompoundStmt 0x12d03fea8 <col:52, line:27:3>             `-ReturnStmt 0x12d03fe98 <line:26:4> ","19242":"`-FunctionDecl 0x12700dda8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x12700dcd8 <col:14> col:14 radius_get_vendor_attr 'int'   `-CompoundStmt 0x127027218 <line:2:1, line:23:1>     |-DeclStmt 0x12700df20 <line:3:2, col:9>     | `-VarDecl 0x12700deb8 <col:2, col:6> col:6 used res 'int'     |-DeclStmt 0x12700dff0 <line:4:2, col:18>     | `-VarDecl 0x12700df88 <col:2, col:14> col:14 used data 'const void *'     |-DeclStmt 0x12700e088 <line:5:2, col:9>     | `-VarDecl 0x12700e020 <col:2, col:6> col:6 used len 'int'     |-DeclStmt 0x12700e198 <line:6:2, col:18>     | `-VarDecl 0x12700e130 <col:2, col:12> col:12 used vendor '__int128_t':'__int128'     |-IfStmt 0x1270266c8 <line:8:2, line:10:2>     | |-RecoveryExpr 0x127026680 <line:8:6, col:78> '_Bool' contains-errors     | `-CompoundStmt 0x1270266b0 <col:87, line:10:2>     |   `-ReturnStmt 0x1270266a0 <line:9:3>     `-IfStmt 0x1270271e8 <line:13:2, line:22:2> has_else       |-BinaryOperator 0x1270269c0 <line:13:6, col:14> 'int' '=='       | |-ImplicitCastExpr 0x1270269a8 <col:6> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x127026950 <col:6> 'int' lvalue Var 0x12700deb8 'res' 'int'       | `-UnaryOperator 0x127026990 <col:13, col:14> 'int' prefix '-'       |   `-IntegerLiteral 0x127026970 <col:14> 'int' 1       |-CompoundStmt 0x1270269e0 <col:17, line:15:2>       `-CompoundStmt 0x1270271b0 <col:9, line:22:2>         |-CallExpr 0x127026b50 <line:17:3, col:26> '<dependent type>' contains-errors         | |-DeclRefExpr 0x127026ad0 <col:3> 'int ()' Function 0x127026a18 'array_init' 'int ()'         | `-RecoveryExpr 0x127026b30 <col:14> '<dependent type>' contains-errors lvalue         |-CallExpr 0x127026d68 <line:18:3, col:42> '<dependent type>' contains-errors         | |-DeclRefExpr 0x127026c58 <col:3> 'int ()' Function 0x127026ba0 'add_assoc_long' 'int ()'         | |-RecoveryExpr 0x127026d48 <col:18> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x127026cd0 <col:32> 'char[4]' lvalue \"STR\"         | `-DeclRefExpr 0x127026cf0 <col:39> 'int' lvalue Var 0x12700deb8 'res' 'int'         |-CallExpr 0x127026e70 <line:19:3, col:45> '<dependent type>' contains-errors         | |-DeclRefExpr 0x127026da0 <col:3> 'int ()' Function 0x127026ba0 'add_assoc_long' 'int ()'         | |-RecoveryExpr 0x127026e50 <col:18> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x127026dd8 <col:32> 'char[4]' lvalue \"STR\"         | `-DeclRefExpr 0x127026df8 <col:39> '__int128_t':'__int128' lvalue Var 0x12700e130 'vendor' '__int128_t':'__int128'         |-CallExpr 0x127027158 <line:20:3, col:63> '<dependent type>' contains-errors         | |-DeclRefExpr 0x127026f88 <col:3> 'int ()' Function 0x127026ed0 'add_assoc_stringl' 'int ()'         | |-RecoveryExpr 0x1270270e0 <col:21> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x127026fc0 <col:35> 'char[4]' lvalue \"STR\"         | |-CStyleCastExpr 0x127027130 <col:42, col:51> 'char *' <BitCast>         | | `-ImplicitCastExpr 0x127027118 <col:51> 'const void *' <LValueToRValue> part_of_explicit_cast         | |   `-DeclRefExpr 0x127026fe0 <col:51> 'const void *' lvalue Var 0x12700df88 'data' 'const void *'         | |-DeclRefExpr 0x127027058 <col:57> 'int' lvalue Var 0x12700e020 'len' 'int'         | `-IntegerLiteral 0x127027078 <col:62> 'int' 1         `-ReturnStmt 0x1270271a0 <line:21:3> ","19346":"`-FunctionDecl 0x137940b48  line:1:5 iwch_cxgb3_ofld_send 'int (struct t3cdev *, struct sk_buff *)'   |-ParmVarDecl 0x137928648 <col:26, col:41> col:41 used tdev 'struct t3cdev *'   |-ParmVarDecl 0x137940a28 <col:47, col:63> col:63 used skb 'struct sk_buff *'   `-CompoundStmt 0x137941818 <line:2:1, line:15:1>     |-DeclStmt 0x137940ce8 <line:3:2, col:15>     | `-VarDecl 0x137940c60 <col:2, col:14> col:6 used error 'int' cinit     |   `-IntegerLiteral 0x137940cc8 <col:14> 'int' 0     |-DeclStmt 0x137940ee8 <line:4:2, col:24>     | |-RecordDecl 0x137940d00 <col:2, col:9> col:9 struct cxio_rdev     | `-VarDecl 0x137940e68 <col:2, col:20> col:20 used rdev 'struct cxio_rdev *'     |-BinaryOperator 0x137941030 <line:6:2, col:35> 'struct cxio_rdev *' contains-errors '='     | |-DeclRefExpr 0x137940f00 <col:2> 'struct cxio_rdev *' lvalue Var 0x137940e68 'rdev' 'struct cxio_rdev *'     | `-CStyleCastExpr 0x137941008 <col:9, col:35> 'struct cxio_rdev *' contains-errors <Dependent>     |   `-RecoveryExpr 0x137940f58 <col:29, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x137940f20 <col:29> 'struct t3cdev *' lvalue ParmVar 0x137928648 'tdev' 'struct t3cdev *'     |-IfStmt 0x137941488 <line:7:2, line:10:2>     | |-CallExpr 0x137941208 <line:7:6, col:27> 'int'     | | |-ImplicitCastExpr 0x1379411f0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x137941180 <col:6> 'int ()' Function 0x1379410c8 'cxio_fatal_error' 'int ()'     | | `-ImplicitCastExpr 0x137941230 <col:23> 'struct cxio_rdev *' <LValueToRValue>     | |   `-DeclRefExpr 0x1379411a0 <col:23> 'struct cxio_rdev *' lvalue Var 0x137940e68 'rdev' 'struct cxio_rdev *'     | `-CompoundStmt 0x137941468 <col:30, line:10:2>     |   |-CallExpr 0x137941380 <line:8:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x137941368 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x137941328 <col:3> 'int ()' Function 0x137941270 'kfree_skb' 'int ()'     |   | `-ImplicitCastExpr 0x1379413a8 <col:13> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x137941348 <col:13> 'struct sk_buff *' lvalue ParmVar 0x137940a28 'skb' 'struct sk_buff *'     |   `-ReturnStmt 0x137941458 <line:9:3, col:11>     |     `-UnaryOperator 0x137941440 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x137941428 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x137941408 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x137941680 <line:11:2, col:35> 'int' '='     | |-DeclRefExpr 0x1379414a8 <col:2> 'int' lvalue Var 0x137940c60 'error' 'int'     | `-CallExpr 0x137941620 <col:10, col:35> 'int'     |   |-ImplicitCastExpr 0x137941608 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1379415a8 <col:10> 'int ()' Function 0x1379414f0 'cxgb3_ofld_send' 'int ()'     |   |-ImplicitCastExpr 0x137941650 <col:26> 'struct t3cdev *' <LValueToRValue>     |   | `-DeclRefExpr 0x1379415c8 <col:26> 'struct t3cdev *' lvalue ParmVar 0x137928648 'tdev' 'struct t3cdev *'     |   `-ImplicitCastExpr 0x137941668 <col:32> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x1379415e8 <col:32> 'struct sk_buff *' lvalue ParmVar 0x137940a28 'skb' 'struct sk_buff *'     |-IfStmt 0x1379417b0 <line:12:2, line:13:16>     | |-BinaryOperator 0x1379416f8 <line:12:6, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x1379416e0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1379416a0 <col:6> 'int' lvalue Var 0x137940c60 'error' 'int'     | | `-IntegerLiteral 0x1379416c0 <col:14> 'int' 0     | `-CallExpr 0x137941770 <line:13:3, col:16> 'int'     |   |-ImplicitCastExpr 0x137941758 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x137941718 <col:3> 'int ()' Function 0x137941270 'kfree_skb' 'int ()'     |   `-ImplicitCastExpr 0x137941798 <col:13> 'struct sk_buff *' <LValueToRValue>     |     `-DeclRefExpr 0x137941738 <col:13> 'struct sk_buff *' lvalue ParmVar 0x137940a28 'skb' 'struct sk_buff *'     `-ReturnStmt 0x137941808 <line:14:2, col:9>       `-ImplicitCastExpr 0x1379417f0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1379417d0 <col:9> 'int' lvalue Var 0x137940c60 'error' 'int' ","19701":"`-FunctionDecl 0x122928438  line:1:15 invalid ZSTD_resetCCtx_usingCDict 'int (int *, const int *, int, int, int)' static   |-ParmVarDecl 0x122928128 <col:41, col:52> col:52 invalid cctx 'int *'   |-ParmVarDecl 0x1229281a8 <line:2:29, col:47> col:47 invalid cdict 'const int *'   |-ParmVarDecl 0x122928228 <line:3:29, col:46> col:46 invalid params 'int'   |-ParmVarDecl 0x1229282a8 <line:4:29, col:33> col:33 invalid pledgedSrcSize 'int'   |-ParmVarDecl 0x122928328 <line:5:29, col:52> col:52 invalid zbuff 'int'   `-CompoundStmt 0x122941d08 <line:6:1, line:17:1>     `-IfStmt 0x122941cd8 <line:10:5, line:16:5> has_else       |-CallExpr 0x122941880 <line:10:9, col:60> '<dependent type>' contains-errors       | |-DeclRefExpr 0x122941800 <col:9> 'int ()' Function 0x122928740 'ZSTD_shouldAttachDict' 'int ()'       | |-RecoveryExpr 0x122941820 <col:31> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x122941840 <col:38> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x122941860 <col:46> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x122941ab0 <col:63, line:13:5>       | `-ReturnStmt 0x122941aa0 <line:11:9, line:12:55>       |   `-CallExpr 0x122941a58 <line:11:16, line:12:55> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x122941998 <line:11:16> 'int ()' Function 0x1229418e0 'ZSTD_resetCCtx_byAttachingCDict' 'int ()'       |     |-RecoveryExpr 0x1229419b8 <line:12:13> '<dependent type>' contains-errors lvalue       |     |-RecoveryExpr 0x1229419d8 <col:19> '<dependent type>' contains-errors lvalue       |     |-RecoveryExpr 0x1229419f8 <col:26> '<dependent type>' contains-errors lvalue       |     |-RecoveryExpr 0x122941a18 <col:34> '<dependent type>' contains-errors lvalue       |     `-RecoveryExpr 0x122941a38 <col:50> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x122941cc0 <line:13:12, line:16:5>         `-ReturnStmt 0x122941cb0 <line:14:9, line:15:55>           `-CallExpr 0x122941c68 <line:14:16, line:15:55> '<dependent type>' contains-errors             |-DeclRefExpr 0x122941ba8 <line:14:16> 'int ()' Function 0x122941af0 'ZSTD_resetCCtx_byCopyingCDict' 'int ()'             |-RecoveryExpr 0x122941bc8 <line:15:13> '<dependent type>' contains-errors lvalue             |-RecoveryExpr 0x122941be8 <col:19> '<dependent type>' contains-errors lvalue             |-RecoveryExpr 0x122941c08 <col:26> '<dependent type>' contains-errors lvalue             |-RecoveryExpr 0x122941c28 <col:34> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x122941c48 <col:50> '<dependent type>' contains-errors lvalue ","20149":"`-FunctionDecl 0x12c943598  col:2 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x12c943698 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x12c943640 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x12c943708 <col:2> Implicit ","20188":"`-FunctionDecl 0x14f0deb50  line:1:13 vmx_free_vcpu 'void (struct kvm_vcpu *)' static   |-ParmVarDecl 0x14f0dea48 <col:27, col:44> col:44 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x14f0f7b90 <line:2:1, line:11:1>     |-DeclStmt 0x14f0f7248 <line:3:2, col:37>     | |-RecordDecl 0x14f0f6e48 <col:2, col:9> col:9 struct vcpu_vmx     | `-VarDecl 0x14f0f6fb8 <col:2, col:36> col:19 used vmx 'struct vcpu_vmx *' cinit     |   `-ImplicitCastExpr 0x14f0f7218 <col:25, col:36> 'struct vcpu_vmx *' <IntegralToPointer>     |     `-CallExpr 0x14f0f71d8 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x14f0f71c0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14f0f7150 <col:25> 'int ()' Function 0x14f0f7098 'to_vmx' 'int ()'     |       `-ImplicitCastExpr 0x14f0f7200 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x14f0f7170 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x14f0dea48 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x14f0f7398 <line:5:2, col:15> 'int'     | |-ImplicitCastExpr 0x14f0f7380 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14f0f7340 <col:2> 'int ()' Function 0x14f0f7288 'free_vpid' 'int ()'     | `-ImplicitCastExpr 0x14f0f73c0 <col:12> 'struct vcpu_vmx *' <LValueToRValue>     |   `-DeclRefExpr 0x14f0f7360 <col:12> 'struct vcpu_vmx *' lvalue Var 0x14f0f6fb8 'vmx' 'struct vcpu_vmx *'     |-CallExpr 0x14f0f7510 <line:6:2, col:17> 'int'     | |-ImplicitCastExpr 0x14f0f74f8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14f0f74b8 <col:2> 'int ()' Function 0x14f0f7400 'free_nested' 'int ()'     | `-ImplicitCastExpr 0x14f0f7538 <col:14> 'struct vcpu_vmx *' <LValueToRValue>     |   `-DeclRefExpr 0x14f0f74d8 <col:14> 'struct vcpu_vmx *' lvalue Var 0x14f0f6fb8 'vmx' 'struct vcpu_vmx *'     |-CallExpr 0x14f0f76b0 <line:7:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f0f7630 <col:2> 'int ()' Function 0x14f0f7578 'free_loaded_vmcs' 'int ()'     | `-RecoveryExpr 0x14f0f7688 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14f0f7650 <col:19> 'struct vcpu_vmx *' lvalue Var 0x14f0f6fb8 'vmx' 'struct vcpu_vmx *'     |-CallExpr 0x14f0f7838 <line:8:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f0f77b8 <col:2> 'int ()' Function 0x14f0f7700 'kfree' 'int ()'     | `-RecoveryExpr 0x14f0f7810 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14f0f77d8 <col:8> 'struct vcpu_vmx *' lvalue Var 0x14f0f6fb8 'vmx' 'struct vcpu_vmx *'     |-CallExpr 0x14f0f7998 <line:9:2, col:22> 'int'     | |-ImplicitCastExpr 0x14f0f7980 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14f0f7940 <col:2> 'int ()' Function 0x14f0f7888 'kvm_vcpu_uninit' 'int ()'     | `-ImplicitCastExpr 0x14f0f79c0 <col:18> 'struct kvm_vcpu *' <LValueToRValue>     |   `-DeclRefExpr 0x14f0f7960 <col:18> 'struct kvm_vcpu *' lvalue ParmVar 0x14f0dea48 'vcpu' 'struct kvm_vcpu *'     `-CallExpr 0x14f0f7b60 <line:10:2, col:37> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f0f7ab8 <col:2> 'int ()' Function 0x14f0f7a00 'kmem_cache_free' 'int ()'       |-RecoveryExpr 0x14f0f7b40 <col:18> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x14f0f7af0 <col:34> 'struct vcpu_vmx *' lvalue Var 0x14f0f6fb8 'vmx' 'struct vcpu_vmx *' ","19806":"`-FunctionDecl 0x137833c80  col:11 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x137833d80 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x137833de8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x137833d28 <<invalid sloc>> Implicit 887 ","19456":"`-FunctionDecl 0x13381e9a8  line:1:5 credssp_sizeof_nego_token 'int (int)'   |-ParmVarDecl 0x13381e8d8 <col:31, col:35> col:35 used length 'int'   `-CompoundStmt 0x13381eee8 <line:2:1, line:6:1>     |-BinaryOperator 0x13381ecb8 <line:3:2, col:41> 'int' '='     | |-DeclRefExpr 0x13381eaa0 <col:2> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int'     | `-CallExpr 0x13381ec78 <col:11, col:41> 'int'     |   |-ImplicitCastExpr 0x13381ec60 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13381ebf0 <col:11> 'int ()' Function 0x13381eb38 'ber_sizeof_octet_string' 'int ()'     |   `-ImplicitCastExpr 0x13381eca0 <col:35> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13381ec10 <col:35> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int'     |-CompoundAssignOperator 0x13381ee70 <line:4:2, col:44> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | |-DeclRefExpr 0x13381ecd8 <col:2> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int'     | `-CallExpr 0x13381ee30 <col:12, col:44> 'int'     |   |-ImplicitCastExpr 0x13381ee18 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13381edd8 <col:12> 'int ()' Function 0x13381ed20 'ber_sizeof_contextual_tag' 'int ()'     |   `-ImplicitCastExpr 0x13381ee58 <col:38> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13381edf8 <col:38> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int'     `-ReturnStmt 0x13381eed8 <line:5:2, col:9>       `-ImplicitCastExpr 0x13381eec0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x13381eea0 <col:9> 'int' lvalue ParmVar 0x13381e8d8 'length' 'int' ","19236":"`-FunctionDecl 0x14d02a948  line:1:14 __ns_get_path 'void *(struct path *, struct ns_common *)' static   |-ParmVarDecl 0x14d00e248 <col:28, col:41> col:41 used path 'struct path *'   |-ParmVarDecl 0x14d02a828 <col:47, col:65> col:65 used ns 'struct ns_common *'   `-CompoundStmt 0x14d030c60 <line:2:1, line:51:1>     |-DeclStmt 0x14d02ac88 <line:3:2, col:33>     | |-RecordDecl 0x14d02aa48 <col:2, col:9> col:9 struct vfsmount     | `-VarDecl 0x14d02abb8 <col:2, col:25> col:19 used mnt 'struct vfsmount *' cinit     |   `-RecoveryExpr 0x14d02ac50 <col:25> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14d02aef8 <line:4:2, col:37>     | |-RecordDecl 0x14d02aca0 <col:2, col:9> col:9 struct qstr     | `-VarDecl 0x14d02ad98 <col:2, col:14> col:14 invalid qname 'struct qstr'     |-DeclStmt 0x14d02b0f8 <line:5:2, col:23>     | |-RecordDecl 0x14d02af10 <col:2, col:9> col:9 struct dentry     | `-VarDecl 0x14d02b078 <col:2, col:17> col:17 used dentry 'struct dentry *'     |-DeclStmt 0x14d02b2f8 <line:6:2, col:21>     | |-RecordDecl 0x14d02b110 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x14d02b278 <col:2, col:16> col:16 used inode 'struct inode *'     |-DeclStmt 0x14d02b390 <line:7:2, col:17>     | `-VarDecl 0x14d02b328 <col:2, col:16> col:16 used d 'unsigned long'     |-CallExpr 0x14d02b528 <line:9:2, col:16> 'int'     | `-ImplicitCastExpr 0x14d02b510 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14d02b4c0 <col:2> 'int ()' Function 0x14d02b408 'rcu_read_lock' 'int ()'     |-BinaryOperator 0x14d02b708 <line:10:2, col:35> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x14d02b548 <col:2> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'     | `-CallExpr 0x14d02b6e0 <col:6, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d02b648 <col:6> 'int ()' Function 0x14d02b590 'atomic_long_read' 'int ()'     |   `-UnaryOperator 0x14d02b6c8 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14d02b6a0 <col:24, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14d02b668 <col:24> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     |-IfStmt 0x14d02b7e0 <line:11:2, line:12:8>     | |-UnaryOperator 0x14d02b760 <line:11:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14d02b748 <col:7> 'unsigned long' <LValueToRValue>     | |   `-DeclRefExpr 0x14d02b728 <col:7> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'     | `-GotoStmt 0x14d02b7c8 <line:12:3, col:8> 'slow' 0x14d02b778     |-BinaryOperator 0x14d02d108 <line:13:2, col:28> 'struct dentry *' '='     | |-DeclRefExpr 0x14d02d000 <col:2> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     | `-CStyleCastExpr 0x14d02d0e0 <col:11, col:28> 'struct dentry *' <IntegralToPointer>     |   `-ImplicitCastExpr 0x14d02d0c8 <col:28> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |     `-DeclRefExpr 0x14d02d020 <col:28> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'     |-IfStmt 0x14d02d2f8 <line:14:2, line:15:8>     | |-UnaryOperator 0x14d02d2c8 <line:14:6, col:46> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14d02d2a0 <col:7, col:46> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14d02d208 <col:7> 'int ()' Function 0x14d02d150 'lockref_get_not_dead' 'int ()'     | |   `-UnaryOperator 0x14d02d288 <col:28, col:37> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x14d02d260 <col:29, col:37> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14d02d228 <col:29> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     | `-GotoStmt 0x14d02d2e0 <line:15:3, col:8> 'slow' 0x14d02b778     |-CallExpr 0x14d02d430 <line:16:2, col:18> 'int'     | `-ImplicitCastExpr 0x14d02d418 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14d02d3f8 <col:2> 'int ()' Function 0x14d02d340 'rcu_read_unlock' 'int ()'     |-CallExpr 0x14d02d518 <line:17:2, col:17> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x14d02d4b0 <col:2, col:11> '<dependent type>' contains-errors lvalue ->put     | | `-RecoveryExpr 0x14d02d488 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14d02d450 <col:2> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     | `-DeclRefExpr 0x14d02d4f8 <col:15> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     |-LabelStmt 0x14d02d788 <line:18:1, line:19:24> 'got_it'     | `-BinaryOperator 0x14d02d718 <col:2, col:24> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x14d02d578 <col:2, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14d02d540 <col:2> 'struct path *' lvalue ParmVar 0x14d00e248 'path' 'struct path *'     |   `-CallExpr 0x14d02d6d8 <col:14, col:24> 'int' contains-errors     |     |-ImplicitCastExpr 0x14d02d6c0 <col:14> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14d02d680 <col:14> 'int ()' Function 0x14d02d5c8 'mntget' 'int ()'     |     `-ImplicitCastExpr 0x14d02d700 <col:21> 'struct vfsmount *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x14d02d6a0 <col:21> 'struct vfsmount *' contains-errors lvalue Var 0x14d02abb8 'mnt' 'struct vfsmount *'     |-BinaryOperator 0x14d02d828 <line:20:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d02d7e0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d02d7a8 <col:2> 'struct path *' lvalue ParmVar 0x14d00e248 'path' 'struct path *'     | `-DeclRefExpr 0x14d02d808 <col:17> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     |-ReturnStmt 0x14d02d880 <line:21:2, col:9>     | `-RecoveryExpr 0x14d02d860 <col:9> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x14d02d8e8 <line:22:1, line:23:18> 'slow'     | `-CallExpr 0x14d02d8c8 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x14d02d8b0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x14d02d890 <col:2> 'int ()' Function 0x14d02d340 'rcu_read_unlock' 'int ()'     |-BinaryOperator 0x14d02dab0 <line:24:2, col:38> 'struct inode *' contains-errors '='     | |-DeclRefExpr 0x14d02d908 <col:2> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     | `-CallExpr 0x14d02da88 <col:10, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d02da08 <col:10> 'int ()' Function 0x14d02d950 'new_inode_pseudo' 'int ()'     |   `-RecoveryExpr 0x14d02da60 <col:27, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14d02da28 <col:27> 'struct vfsmount *' contains-errors lvalue Var 0x14d02abb8 'mnt' 'struct vfsmount *'     |-IfStmt 0x14d02de28 <line:25:2, line:28:2>     | |-UnaryOperator 0x14d02db08 <line:25:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14d02daf0 <col:7> 'struct inode *' <LValueToRValue>     | |   `-DeclRefExpr 0x14d02dad0 <col:7> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     | `-CompoundStmt 0x14d02de08 <col:14, line:28:2>     |   |-CallExpr 0x14d02dbe8 <line:26:3, col:18> '<dependent type>' contains-errors     |   | |-CXXDependentScopeMemberExpr 0x14d02db80 <col:3, col:12> '<dependent type>' contains-errors lvalue ->put     |   | | `-RecoveryExpr 0x14d02db58 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14d02db20 <col:3> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     |   | `-DeclRefExpr 0x14d02dbc8 <col:16> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     |   `-ReturnStmt 0x14d02ddf8 <line:27:3, col:25>     |     `-CallExpr 0x14d02ddd0 <col:10, col:25> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14d02dcf0 <col:10> 'int ()' Function 0x14d02dc38 'ERR_PTR' 'int ()'     |       `-UnaryOperator 0x14d02ddb8 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x14d02dda0 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x14d02dd80 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14d02df08 <line:29:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d02de80 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d02de48 <col:2> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     | `-RecoveryExpr 0x14d02dee0 <col:17, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14d02dea8 <col:17> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     |-BinaryOperator 0x14d02fc18 <line:30:2, col:71> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d02df60 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d02df28 <col:2> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     | `-BinaryOperator 0x14d02fbf8 <col:19, col:71> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x14d02dfc0 <col:19, col:26> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14d02df88 <col:19> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     |   `-BinaryOperator 0x14d02fbd8 <col:36, col:71> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x14d02fa38 <col:36, col:43> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14d02fa00 <col:36> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     |     `-CallExpr 0x14d02fb98 <col:53, col:71> 'int'     |       |-ImplicitCastExpr 0x14d02fb80 <col:53> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14d02fb40 <col:53> 'int ()' Function 0x14d02fa88 'current_time' 'int ()'     |       `-ImplicitCastExpr 0x14d02fbc0 <col:66> 'struct inode *' <LValueToRValue>     |         `-DeclRefExpr 0x14d02fb60 <col:66> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     |-BinaryOperator 0x14d02fdd8 <line:34:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d02fd90 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d02fd58 <col:2> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     | `-DeclRefExpr 0x14d02fdb8 <col:21> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     |-BinaryOperator 0x14d02ffe0 <line:36:2, col:45> 'struct dentry *' contains-errors '='     | |-DeclRefExpr 0x14d02fdf8 <col:2> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     | `-CallExpr 0x14d02ffb0 <col:11, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d02fef8 <col:11> 'int ()' Function 0x14d02fe40 'd_alloc_pseudo' 'int ()'     |   |-RecoveryExpr 0x14d02ff50 <col:26, col:31> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14d02ff18 <col:26> 'struct vfsmount *' contains-errors lvalue Var 0x14d02abb8 'mnt' 'struct vfsmount *'     |   `-UnaryOperator 0x14d02ff98 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x14d02ff78 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14d030200 <line:37:2, line:40:2>     | |-UnaryOperator 0x14d030038 <line:37:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14d030020 <col:7> 'struct dentry *' <LValueToRValue>     | |   `-DeclRefExpr 0x14d030000 <col:7> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     | `-CompoundStmt 0x14d0301e8 <col:15, line:40:2>     |   `-CallExpr 0x14d030188 <line:38:3, col:13> 'int'     |     |-ImplicitCastExpr 0x14d030170 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x14d030130 <col:3> 'int ()' Function 0x14d030078 'iput' 'int ()'     |     `-ImplicitCastExpr 0x14d0301b0 <col:8> 'struct inode *' <LValueToRValue>     |       `-DeclRefExpr 0x14d030150 <col:8> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     |-CallExpr 0x14d030378 <line:41:2, col:29> 'int'     | |-ImplicitCastExpr 0x14d030360 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14d030300 <col:2> 'int ()' Function 0x14d030248 'd_instantiate' 'int ()'     | |-ImplicitCastExpr 0x14d0303a8 <col:16> 'struct dentry *' <LValueToRValue>     | | `-DeclRefExpr 0x14d030320 <col:16> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     | `-ImplicitCastExpr 0x14d0303c0 <col:24> 'struct inode *' <LValueToRValue>     |   `-DeclRefExpr 0x14d030340 <col:24> 'struct inode *' lvalue Var 0x14d02b278 'inode' 'struct inode *'     |-BinaryOperator 0x14d0304d8 <line:42:2, col:33> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14d030410 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14d0303d8 <col:2> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     | `-CStyleCastExpr 0x14d0304b0 <col:21, col:33> 'void *' contains-errors <Dependent>     |   `-RecoveryExpr 0x14d030470 <col:29, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14d030438 <col:29> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     |-BinaryOperator 0x14d030760 <line:43:2, col:64> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x14d0304f8 <col:2> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'     | `-CallExpr 0x14d030728 <col:6, col:64> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14d0305f8 <col:6> 'int ()' Function 0x14d030540 'atomic_long_cmpxchg' 'int ()'     |   |-UnaryOperator 0x14d030678 <col:26, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x14d030650 <col:27, col:31> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14d030618 <col:27> 'struct ns_common *' lvalue ParmVar 0x14d02a828 'ns' 'struct ns_common *'     |   |-IntegerLiteral 0x14d030690 <col:40> 'int' 0     |   `-CStyleCastExpr 0x14d030700 <col:43, col:58> 'unsigned long' <PointerToIntegral>     |     `-ImplicitCastExpr 0x14d0306e8 <col:58> 'struct dentry *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x14d0306b0 <col:58> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     |-IfStmt 0x14d030c28 <line:44:2, line:49:2>     | |-ImplicitCastExpr 0x14d0307a0 <line:44:6> 'unsigned long' <LValueToRValue>     | | `-DeclRefExpr 0x14d030780 <col:6> 'unsigned long' lvalue Var 0x14d02b328 'd' 'unsigned long'     | `-CompoundStmt 0x14d030c00 <col:9, line:49:2>     |   |-CallExpr 0x14d0308f0 <line:45:3, col:18> 'int'     |   | |-ImplicitCastExpr 0x14d0308d8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d030898 <col:3> 'int ()' Function 0x14d0307e0 'd_delete' 'int ()'     |   | `-ImplicitCastExpr 0x14d030918 <col:12> 'struct dentry *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14d0308b8 <col:12> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     |   |-CallExpr 0x14d030a68 <line:46:3, col:14> 'int'     |   | |-ImplicitCastExpr 0x14d030a50 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14d030a10 <col:3> 'int ()' Function 0x14d030958 'dput' 'int ()'     |   | `-ImplicitCastExpr 0x14d030a90 <col:8> 'struct dentry *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14d030a30 <col:8> 'struct dentry *' lvalue Var 0x14d02b078 'dentry' 'struct dentry *'     |   `-CallExpr 0x14d030bc0 <line:47:3, col:13> 'int'     |     `-ImplicitCastExpr 0x14d030ba8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x14d030b88 <col:3> 'int ()' Function 0x14d030ad0 'cpu_relax' 'int ()'     `-GotoStmt 0x14d030c48 <line:50:2, col:7> 'got_it' 0x14d02d738 ","19626":"`-FunctionDecl 0x124933200  line:1:19 security_file_lock 'int (struct file *, unsigned int)' static inline   |-ParmVarDecl 0x124916c48 <col:38, col:51> col:51 file 'struct file *'   |-ParmVarDecl 0x124916cc8 <col:57, col:70> col:70 cmd 'unsigned int'   `-CompoundStmt 0x124933330 <line:2:1, line:4:1>     `-ReturnStmt 0x124933320 <line:3:2, col:9>       `-IntegerLiteral 0x124933300 <col:9> 'int' 0 ","19858":"`-FunctionDecl 0x1328fbce8  line:1:1 invalid xmlParserEntityCheck 'int (int, int, int)'   |-ParmVarDecl 0x1328fbaf0 <col:22, col:39> col:39 invalid ctxt 'int'   |-ParmVarDecl 0x1328fbb70 <col:45, col:52> col:52 referenced invalid size 'int'   |-ParmVarDecl 0x1328fbbf0 <line:2:22, col:35> col:35 invalid ent 'int'   `-CompoundStmt 0x132916348 <line:3:1, line:46:1>     |-RecoveryExpr 0x1328fbea0 <line:4:5, col:23> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x1328fbe80 <col:5, col:12> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x1328fbe60 <col:12> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1328fbdf8 <col:23> 'int' 0     |-IfStmt 0x1328fc038 <line:6:5, line:7:18>     | |-RecoveryExpr 0x1328fbfc8 <line:6:9, col:58> '_Bool' contains-errors     | `-ReturnStmt 0x1328fc028 <line:7:9, col:18>     |   `-ParenExpr 0x1328fc008 <col:16, col:18> 'int'     |     `-IntegerLiteral 0x1328fbfe8 <col:17> 'int' 0     |-IfStmt 0x1328fc1d0 <line:8:5, line:9:18>     | |-BinaryOperator 0x1328fc160 <line:8:9, col:33> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x1328fc0c0 <col:9, col:25> '<dependent type>' contains-errors lvalue .code     | | | `-CXXDependentScopeMemberExpr 0x1328fc078 <col:9, col:15> '<dependent type>' contains-errors lvalue ->lastError     | | |   `-RecoveryExpr 0x1328fc058 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1328fc140 <col:33> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1328fc1c0 <line:9:9, col:18>     |   `-ParenExpr 0x1328fc1a0 <col:16, col:18> 'int'     |     `-IntegerLiteral 0x1328fc180 <col:17> 'int' 1     |-IfStmt 0x1329160b0 <line:10:5, line:42:5> has_else     | |-BinaryOperator 0x132915240 <line:10:9, col:17> 'int' contains-errors '!='     | | |-RecoveryExpr 0x132915200 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x132915220 <col:17> 'int' 0     | |-CompoundStmt 0x132915988 <col:20, line:25:5>     | | |-IfStmt 0x132915348 <line:12:9, line:13:14>     | | | |-BinaryOperator 0x1329152d8 <line:12:13, col:20> 'int' contains-errors '<'     | | | | |-RecoveryExpr 0x132915260 <col:13> '<dependent type>' contains-errors lvalue     | | | | `-RecoveryExpr 0x1329152b8 <col:20> '<dependent type>' contains-errors lvalue     | | | `-ReturnStmt 0x132915338 <line:13:6, col:14>     | | |   `-ParenExpr 0x132915318 <col:12, col:14> 'int'     | | |     `-IntegerLiteral 0x1329152f8 <col:13> 'int' 0     | | |-IfStmt 0x1329156c8 <line:16:9, line:19:9>     | | | |-BinaryOperator 0x132915428 <line:16:13, col:28> 'int' contains-errors '!='     | | | | |-CXXDependentScopeMemberExpr 0x132915388 <col:13, col:19> '<dependent type>' contains-errors lvalue ->input     | | | | | `-RecoveryExpr 0x132915368 <col:13> '<dependent type>' contains-errors lvalue     | | | | `-RecoveryExpr 0x132915408 <col:28> '<dependent type>' contains-errors lvalue     | | | `-CompoundStmt 0x1329156b8 <col:34, line:19:9>     | | `-IfStmt 0x132915968 <line:22:9, line:24:22>     | |   |-RecoveryExpr 0x1329158f8 <line:22:13, line:23:62> '_Bool' contains-errors     | |   `-ReturnStmt 0x132915958 <line:24:13, col:22>     | |     `-ParenExpr 0x132915938 <col:20, col:22> 'int'     | |       `-IntegerLiteral 0x132915918 <col:21> 'int' 0     | `-IfStmt 0x132916080 <line:25:12, line:42:5> has_else     |   |-BinaryOperator 0x132915a28 <line:25:16, col:23> 'int' contains-errors '!='     |   | |-RecoveryExpr 0x1329159b0 <col:16> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x132915a08 <col:23> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x132915ff0 <col:29, line:39:5>     |   | |-BinaryOperator 0x132915af8 <line:27:9, col:21> '<dependent type>' contains-errors '='     |   | | |-RecoveryExpr 0x132915a68 <col:9> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x132915a48 <col:9> 'int' lvalue ParmVar 0x1328fbb70 'size' 'int'     |   | | `-CXXDependentScopeMemberExpr 0x132915ab0 <col:16, col:21> '<dependent type>' contains-errors lvalue ->checked     |   | |   `-RecoveryExpr 0x132915a90 <col:16> '<dependent type>' contains-errors lvalue     |   | |-IfStmt 0x132915e78 <line:30:9, line:33:9>     |   | | |-BinaryOperator 0x132915bd8 <line:30:13, col:28> 'int' contains-errors '!='     |   | | | |-CXXDependentScopeMemberExpr 0x132915b38 <col:13, col:19> '<dependent type>' contains-errors lvalue ->input     |   | | | | `-RecoveryExpr 0x132915b18 <col:13> '<dependent type>' contains-errors lvalue     |   | | | `-RecoveryExpr 0x132915bb8 <col:28> '<dependent type>' contains-errors lvalue     |   | | `-CompoundStmt 0x132915e68 <col:34, line:33:9>     |   | `-IfStmt 0x132915fd0 <line:37:9, line:38:22>     |   |   |-RecoveryExpr 0x132915f60 <line:37:13, col:35> '_Bool' contains-errors     |   |   `-ReturnStmt 0x132915fc0 <line:38:13, col:22>     |   |     `-ParenExpr 0x132915fa0 <col:20, col:22> 'int'     |   |       `-IntegerLiteral 0x132915f80 <col:21> 'int' 0     |   `-CompoundStmt 0x132916068 <line:39:12, line:42:5>     |     `-ReturnStmt 0x132916058 <line:41:9, col:18>     |       `-ParenExpr 0x132916038 <col:16, col:18> 'int'     |         `-IntegerLiteral 0x132916018 <col:17> 'int' 0     `-ReturnStmt 0x132916338 <line:45:5, col:14>       `-ParenExpr 0x132916318 <col:12, col:14> 'int'         `-IntegerLiteral 0x1329162f8 <col:13> 'int' 1 ","19799":"`-FunctionDecl 0x1429282b8  line:1:12 invalid bus_message_append_strv_key_value 'int (int *, const char **)' static   |-ParmVarDecl 0x142928128 <line:2:17, col:33> col:33 invalid m 'int *'   |-ParmVarDecl 0x1429281d8 <line:3:17, col:30> col:30 used l 'const char **'   `-CompoundStmt 0x142942238 <col:33, line:25:1>     |-DeclStmt 0x142928488 <line:5:9, col:28>     | |-VarDecl 0x142928388 <col:9, col:22> col:22 used k 'const char **'     | `-VarDecl 0x142928408 <col:9, col:27> col:27 used v 'const char **'     |-DeclStmt 0x142928520 <line:6:9, col:14>     | `-VarDecl 0x1429284b8 <col:9, col:13> col:13 used r 'int'     |-CallExpr 0x1429286d0 <line:8:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142928690 <col:9> 'int ()' Function 0x1429285d8 'assert' 'int ()'     | `-RecoveryExpr 0x1429286b0 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1429418f8 <line:10:9, col:56> 'int' contains-errors '='     | |-DeclRefExpr 0x1429286f8 <col:9> 'int' lvalue Var 0x1429284b8 'r' 'int'     | `-CallExpr 0x1429418c0 <col:13, col:56> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x142941800 <col:13> 'int ()' Function 0x142928740 'sd_bus_message_open_container' 'int ()'     |   |-RecoveryExpr 0x142941820 <col:43> '<dependent type>' contains-errors lvalue     |   |-CharacterLiteral 0x142941840 <col:46> 'int' 97     |   `-StringLiteral 0x1429418a0 <col:51> 'char[4]' lvalue \"STR\"     |-IfStmt 0x1429419d8 <line:11:9, line:12:24>     | |-BinaryOperator 0x142941970 <line:11:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x142941958 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x142941918 <col:13> 'int' lvalue Var 0x1429284b8 'r' 'int'     | | `-IntegerLiteral 0x142941938 <col:17> 'int' 0     | `-ReturnStmt 0x1429419c8 <line:12:17, col:24>     |   `-ImplicitCastExpr 0x1429419b0 <col:24> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x142941990 <col:24> 'int' lvalue Var 0x1429284b8 'r' 'int'     |-CallExpr 0x142941ba8 <line:14:9, col:34> 'int'     | |-ImplicitCastExpr 0x142941b90 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x142941ad8 <col:9> 'int ()' Function 0x142941a20 'STRV_FOREACH_PAIR' 'int ()'     | |-ImplicitCastExpr 0x142941be0 <col:27> 'const char **' <LValueToRValue>     | | `-DeclRefExpr 0x142941af8 <col:27> 'const char **' lvalue Var 0x142928388 'k' 'const char **'     | |-ImplicitCastExpr 0x142941bf8 <col:30> 'const char **' <LValueToRValue>     | | `-DeclRefExpr 0x142941b18 <col:30> 'const char **' lvalue Var 0x142928408 'v' 'const char **'     | `-ImplicitCastExpr 0x142941c10 <col:33> 'const char **' <LValueToRValue>     |   `-DeclRefExpr 0x142941b38 <col:33> 'const char **' lvalue ParmVar 0x1429281d8 'l' 'const char **'     |-CompoundStmt 0x142941f68 <col:36, line:18:9>     | |-BinaryOperator 0x142941e68 <line:15:17, col:59> 'int' contains-errors '='     | | |-DeclRefExpr 0x142941c28 <col:17> 'int' lvalue Var 0x1429284b8 'r' 'int'     | | `-CallExpr 0x142941e28 <col:21, col:59> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x142941d28 <col:21> 'int ()' Function 0x142941c70 'sd_bus_message_append' 'int ()'     | |   |-RecoveryExpr 0x142941d48 <col:43> '<dependent type>' contains-errors lvalue     | |   |-StringLiteral 0x142941d68 <col:46> 'char[4]' lvalue \"STR\"     | |   |-UnaryOperator 0x142941dc0 <col:53, col:54> 'const char *' lvalue prefix '*' cannot overflow     | |   | `-ImplicitCastExpr 0x142941da8 <col:54> 'const char **' <LValueToRValue>     | |   |   `-DeclRefExpr 0x142941d88 <col:54> 'const char **' lvalue Var 0x142928388 'k' 'const char **'     | |   `-UnaryOperator 0x142941e10 <col:57, col:58> 'const char *' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x142941df8 <col:58> 'const char **' <LValueToRValue>     | |       `-DeclRefExpr 0x142941dd8 <col:58> 'const char **' lvalue Var 0x142928408 'v' 'const char **'     | `-IfStmt 0x142941f48 <line:16:17, line:17:32>     |   |-BinaryOperator 0x142941ee0 <line:16:21, col:25> 'int' '<'     |   | |-ImplicitCastExpr 0x142941ec8 <col:21> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x142941e88 <col:21> 'int' lvalue Var 0x1429284b8 'r' 'int'     |   | `-IntegerLiteral 0x142941ea8 <col:25> 'int' 0     |   `-ReturnStmt 0x142941f38 <line:17:25, col:32>     |     `-ImplicitCastExpr 0x142941f20 <col:32> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x142941f00 <col:32> 'int' lvalue Var 0x1429284b8 'r' 'int'     |-BinaryOperator 0x1429420f0 <line:20:9, col:45> 'int' contains-errors '='     | |-DeclRefExpr 0x142941f88 <col:9> 'int' lvalue Var 0x1429284b8 'r' 'int'     | `-CallExpr 0x1429420c8 <col:13, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x142942088 <col:13> 'int ()' Function 0x142941fd0 'sd_bus_message_close_container' 'int ()'     |   `-RecoveryExpr 0x1429420a8 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1429421d0 <line:21:9, line:22:24>     | |-BinaryOperator 0x142942168 <line:21:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x142942150 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x142942110 <col:13> 'int' lvalue Var 0x1429284b8 'r' 'int'     | | `-IntegerLiteral 0x142942130 <col:17> 'int' 0     | `-ReturnStmt 0x1429421c0 <line:22:17, col:24>     |   `-ImplicitCastExpr 0x1429421a8 <col:24> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x142942188 <col:24> 'int' lvalue Var 0x1429284b8 'r' 'int'     `-ReturnStmt 0x142942228 <line:24:9, col:16>       `-ImplicitCastExpr 0x142942210 <col:16> 'int' <LValueToRValue>         `-DeclRefExpr 0x1429421f0 <col:16> 'int' lvalue Var 0x1429284b8 'r' 'int' ","20037":"`-FunctionDecl 0x12b808c58  col:47 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12b808d58 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12b808d00 <<invalid sloc>> Implicit 902 ","19890":"`-FunctionDecl 0x12d941910  col:3 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x12d941a10 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12d941a78 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x12d941ae0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12d9419b8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x12d941b60 <col:3> Implicit printf 3 4 ","19409":"`-FunctionDecl 0x1231281c8  line:1:21 invalid mp_decrement 'double (int)' static   |-ParmVarDecl 0x1231280f0 <col:34, <invalid sloc>> col:51 invalid 'int'   `-CompoundStmt 0x1231284e8 <col:57, line:3:7>     `-ReturnStmt 0x1231284d8 <line:2:9, col:29>       `-ImplicitCastExpr 0x1231284c0 <col:16, col:29> 'double' <IntegralToFloating>         `-BinaryOperator 0x1231284a0 <col:16, col:29> 'int' '-'           |-CallExpr 0x123128458 <col:16, col:25> 'int'           | |-ImplicitCastExpr 0x123128440 <col:16> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x1231283d0 <col:16> 'int ()' Function 0x123128318 '_mp_arg' 'int ()'           | `-IntegerLiteral 0x1231283f0 <col:24> 'int' 2           `-IntegerLiteral 0x123128480 <col:29> 'int' 1 ","19682":"`-FunctionDecl 0x15380df10  line:1:13 invalid nsc_encode_sse2 'void (int *, const int *, int)' static   |-ParmVarDecl 0x15380dd28 <col:29, col:42> col:42 invalid context 'int *'   |-ParmVarDecl 0x15380dda8 <col:51, col:63> col:63 invalid data 'const int *'   |-ParmVarDecl 0x15380de28 <line:2:29, col:36> col:36 invalid scanline 'int'   `-CompoundStmt 0x153122c20 <line:3:1, line:10:1>     |-CallExpr 0x15380e1b0 <line:4:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15380e130 <col:2> 'int ()' Function 0x15380e078 'nsc_encode_argb_to_aycocg_sse2' 'int ()'     | |-RecoveryExpr 0x15380e150 <col:33> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x15380e170 <col:42> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x15380e190 <col:48> '<dependent type>' contains-errors lvalue     `-IfStmt 0x153122c00 <line:6:2, line:9:2>       |-BinaryOperator 0x15380e270 <line:6:6, col:40> 'int' contains-errors '>'       | |-CXXDependentScopeMemberExpr 0x15380e208 <col:6, col:15> '<dependent type>' contains-errors lvalue ->ChromaSubsamplingLevel       | | `-RecoveryExpr 0x15380e1e8 <col:6> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x15380e250 <col:40> 'int' 0       `-CompoundStmt 0x15380e3d8 <line:7:2, line:9:2>         `-CallExpr 0x15380e3b0 <line:8:3, col:38> '<dependent type>' contains-errors           |-DeclRefExpr 0x15380e370 <col:3> 'int ()' Function 0x15380e2b8 'nsc_encode_subsampling_sse2' 'int ()'           `-RecoveryExpr 0x15380e390 <col:31> '<dependent type>' contains-errors lvalue ","19657":"`-FunctionDecl 0x16000df18  line:1:1 invalid update_linearization_params 'int (int *, int *, int *)'   |-ParmVarDecl 0x16000dd28 <col:29, col:41> col:41 invalid ctx 'int *'   |-ParmVarDecl 0x16000dda8 <col:46, col:60> col:60 invalid doc 'int *'   |-ParmVarDecl 0x16000de28 <col:65, col:82> col:82 invalid opts 'int *'   `-CompoundStmt 0x160027800 <line:2:1, line:23:1>     |-CallExpr 0x16000e240 <line:4:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x16000e130 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'     | |-RecoveryExpr 0x16000e150 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x16000e190 <col:19, col:25> '<dependent type>' contains-errors lvalue ->linear_l     | | `-RecoveryExpr 0x16000e170 <col:19> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x16000e1f8 <col:35, col:41> '<dependent type>' contains-errors lvalue ->file_len     |   `-RecoveryExpr 0x16000e1d8 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1610083c0 <line:6:2, col:76> '<dependent type>' contains-errors     | |-DeclRefExpr 0x16000e278 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'     | |-RecoveryExpr 0x16000e298 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x16000e2d8 <col:19, col:25> '<dependent type>' contains-errors lvalue ->linear_h0     | | `-RecoveryExpr 0x16000e2b8 <col:19> '<dependent type>' contains-errors lvalue     | `-ArraySubscriptExpr 0x1610083a0 <col:36, col:75> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x161008388 <col:36, col:42> '<dependent type>' contains-errors <LValueToRValue>     |   | `-CXXDependentScopeMemberExpr 0x16000e340 <col:36, col:42> '<dependent type>' contains-errors lvalue ->ofs_list     |   |   `-RecoveryExpr 0x16000e320 <col:36> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x161008368 <col:51, col:74> '<dependent type>' contains-errors '-'     |     |-CallExpr 0x161008318 <col:51, col:72> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x1610082b8 <col:51> 'int ()' Function 0x161008200 'pdf_xref_len' 'int ()'     |     | |-RecoveryExpr 0x1610082d8 <col:64> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x1610082f8 <col:69> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x161008348 <col:74> 'int' 1     |-CallExpr 0x1610089a0 <line:9:2, col:85> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1610086a0 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'     | |-RecoveryExpr 0x1610086c0 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x161008700 <col:19, col:25> '<dependent type>' contains-errors lvalue ->linear_h1     | | `-RecoveryExpr 0x1610086e0 <col:19> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x161008980 <col:36, col:84> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x161008928 <col:36> '<dependent type>' contains-errors lvalue     |   `-ArraySubscriptExpr 0x161008960 <col:45, col:84> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x161008948 <col:45, col:51> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x161008780 <col:45, col:51> '<dependent type>' contains-errors lvalue ->ofs_list     |     |   `-RecoveryExpr 0x161008760 <col:45> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x161008878 <col:60, col:83> '<dependent type>' contains-errors '-'     |       |-CallExpr 0x161008828 <col:60, col:81> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1610087c8 <col:60> 'int ()' Function 0x161008200 'pdf_xref_len' 'int ()'     |       | |-RecoveryExpr 0x1610087e8 <col:73> '<dependent type>' contains-errors lvalue     |       | `-RecoveryExpr 0x161008808 <col:78> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x161008858 <col:83> 'int' 1     |-CallExpr 0x161008c28 <line:11:2, col:78> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1610089d8 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'     | |-RecoveryExpr 0x1610089f8 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x161008a38 <col:19, col:25> '<dependent type>' contains-errors lvalue ->linear_o     | | `-RecoveryExpr 0x161008a18 <col:19> '<dependent type>' contains-errors lvalue     | `-ArraySubscriptExpr 0x161008c08 <col:35, col:77> '<dependent type>' contains-errors lvalue     |   |-ImplicitCastExpr 0x161008bf0 <col:35, col:69> '<dependent type>' contains-errors <LValueToRValue>     |   | `-CXXDependentScopeMemberExpr 0x161008b88 <col:35, col:69> '<dependent type>' contains-errors lvalue ->object     |   |   `-ArraySubscriptExpr 0x161008b68 <col:35, col:66> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x161008b50 <col:35, col:60> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-CXXDependentScopeMemberExpr 0x161008ae8 <col:35, col:60> '<dependent type>' contains-errors lvalue ->page     |   |     |   `-CXXDependentScopeMemberExpr 0x161008aa0 <col:35, col:41> '<dependent type>' contains-errors lvalue ->page_object_lists     |   |     |     `-RecoveryExpr 0x161008a80 <col:35> '<dependent type>' contains-errors lvalue     |   |     `-IntegerLiteral 0x161008b30 <col:65> 'int' 0     |   `-IntegerLiteral 0x161008bd0 <col:76> 'int' 0     |-CallExpr 0x161009020 <line:14:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x161008f08 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'     | |-RecoveryExpr 0x161008f28 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x161008f68 <col:19, col:25> '<dependent type>' contains-errors lvalue ->linear_e     | | `-RecoveryExpr 0x161008f48 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x161009000 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x161009168 <line:16:2, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x161009058 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'     | |-RecoveryExpr 0x161009078 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x1610090b8 <col:19, col:25> '<dependent type>' contains-errors lvalue ->linear_n     | | `-RecoveryExpr 0x161009098 <col:19> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x161009120 <col:35, col:41> '<dependent type>' contains-errors lvalue ->page_count     |   `-RecoveryExpr 0x161009100 <col:35> '<dependent type>' contains-errors lvalue     |-CallExpr 0x160027538 <line:18:2, col:87> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1610091a0 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'     | |-RecoveryExpr 0x1610091c0 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x160027400 <col:19, col:25> '<dependent type>' contains-errors lvalue ->linear_t     | | `-RecoveryExpr 0x1610091e0 <col:19> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x160027518 <col:35, col:73> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x160027468 <col:35, col:41> '<dependent type>' contains-errors lvalue ->first_xref_entry_offset     |   | `-RecoveryExpr 0x160027448 <col:35> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x1600274d0 <col:67, col:73> '<dependent type>' contains-errors lvalue ->hintstream_len     |     `-RecoveryExpr 0x1600274b0 <col:67> '<dependent type>' contains-errors lvalue     |-CallExpr 0x160027680 <line:20:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x160027570 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'     | |-RecoveryExpr 0x160027590 <col:14> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x1600275d0 <col:19, col:25> '<dependent type>' contains-errors lvalue ->hints_s     | | `-RecoveryExpr 0x1600275b0 <col:19> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x160027638 <col:34, col:40> '<dependent type>' contains-errors lvalue ->hints_shared_offset     |   `-RecoveryExpr 0x160027618 <col:34> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1600277c8 <line:22:2, col:59> '<dependent type>' contains-errors       |-DeclRefExpr 0x1600276b8 <col:2> 'int ()' Function 0x16000e078 'pdf_set_int' 'int ()'       |-RecoveryExpr 0x1600276d8 <col:14> '<dependent type>' contains-errors lvalue       |-CXXDependentScopeMemberExpr 0x160027718 <col:19, col:25> '<dependent type>' contains-errors lvalue ->hints_length       | `-RecoveryExpr 0x1600276f8 <col:19> '<dependent type>' contains-errors lvalue       `-CXXDependentScopeMemberExpr 0x160027780 <col:39, col:45> '<dependent type>' contains-errors lvalue ->hintstream_len         `-RecoveryExpr 0x160027760 <col:39> '<dependent type>' contains-errors lvalue ","20004":"`-FunctionDecl 0x130140a70  line:1:13 ucma_unlock_files 'void (struct ucma_file *, struct ucma_file *)' static   |-ParmVarDecl 0x130128648 <col:31, col:49> col:49 used file1 'struct ucma_file *'   |-ParmVarDecl 0x130128738 <col:56, col:74> col:74 used file2 'struct ucma_file *'   `-CompoundStmt 0x1301410a0 <line:2:1, line:10:1>     `-IfStmt 0x130141070 <line:3:2, line:9:2> has_else       |-BinaryOperator 0x130140be0 <line:3:6, col:14> 'int' '<'       | |-ImplicitCastExpr 0x130140bb0 <col:6> 'struct ucma_file *' <LValueToRValue>       | | `-DeclRefExpr 0x130140b70 <col:6> 'struct ucma_file *' lvalue ParmVar 0x130128648 'file1' 'struct ucma_file *'       | `-ImplicitCastExpr 0x130140bc8 <col:14> 'struct ucma_file *' <LValueToRValue>       |   `-DeclRefExpr 0x130140b90 <col:14> 'struct ucma_file *' lvalue ParmVar 0x130128738 'file2' 'struct ucma_file *'       |-CompoundStmt 0x130140eb0 <col:21, line:6:2>       | |-CallExpr 0x130140dc8 <line:4:3, col:27> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x130140d30 <col:3> 'int ()' Function 0x130140c78 'mutex_unlock' 'int ()'       | | `-UnaryOperator 0x130140db0 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-RecoveryExpr 0x130140d88 <col:17, col:24> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x130140d50 <col:17> 'struct ucma_file *' lvalue ParmVar 0x130128738 'file2' 'struct ucma_file *'       | `-CallExpr 0x130140e88 <line:5:3, col:27> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x130140df0 <col:3> 'int ()' Function 0x130140c78 'mutex_unlock' 'int ()'       |   `-UnaryOperator 0x130140e70 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x130140e48 <col:17, col:24> '<dependent type>' contains-errors lvalue       |       `-DeclRefExpr 0x130140e10 <col:17> 'struct ucma_file *' lvalue ParmVar 0x130128648 'file1' 'struct ucma_file *'       `-CompoundStmt 0x130141050 <line:6:9, line:9:2>         |-CallExpr 0x130140f68 <line:7:3, col:27> '<dependent type>' contains-errors         | |-DeclRefExpr 0x130140ed0 <col:3> 'int ()' Function 0x130140c78 'mutex_unlock' 'int ()'         | `-UnaryOperator 0x130140f50 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x130140f28 <col:17, col:24> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x130140ef0 <col:17> 'struct ucma_file *' lvalue ParmVar 0x130128648 'file1' 'struct ucma_file *'         `-CallExpr 0x130141028 <line:8:3, col:27> '<dependent type>' contains-errors           |-DeclRefExpr 0x130140f90 <col:3> 'int ()' Function 0x130140c78 'mutex_unlock' 'int ()'           `-UnaryOperator 0x130141010 <col:16, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x130140fe8 <col:17, col:24> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x130140fb0 <col:17> 'struct ucma_file *' lvalue ParmVar 0x130128738 'file2' 'struct ucma_file *' ","19966":"`-FunctionDecl 0x12f128750  line:1:6 kvm_lapic_sync_to_vapic 'void (struct kvm_vcpu *)'   |-ParmVarDecl 0x12f128648 <col:30, col:47> col:47 used vcpu 'struct kvm_vcpu *'   `-CompoundStmt 0x12f809ab8 <line:2:1, line:23:1>     |-DeclStmt 0x12f140b78 <line:4:2, col:22>     | |-VarDecl 0x12f140a78 <col:2, col:6> col:6 used max_irr 'int'     | `-VarDecl 0x12f140af8 <col:2, col:15> col:15 used max_isr 'int'     |-DeclStmt 0x12f140e20 <line:5:2, col:42>     | |-RecordDecl 0x12f140b90 <col:2, col:9> col:9 struct kvm_lapic     | `-VarDecl 0x12f140cf8 <col:2, col:38> col:20 used apic 'struct kvm_lapic *' cinit     |   `-CXXDependentScopeMemberExpr 0x12f140dc0 <col:27, col:38> '<dependent type>' contains-errors lvalue .apic     |     `-RecoveryExpr 0x12f140d98 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12f140d60 <col:27> 'struct kvm_vcpu *' lvalue ParmVar 0x12f128648 'vcpu' 'struct kvm_vcpu *'     |-CallExpr 0x12f140ff8 <line:7:2, col:38> 'int' contains-errors     | |-ImplicitCastExpr 0x12f140fe0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12f140f50 <col:2> 'int ()' Function 0x12f140e98 'apic_sync_pv_eoi_to_guest' 'int ()'     | |-ImplicitCastExpr 0x12f141028 <col:28> 'struct kvm_vcpu *' <LValueToRValue>     | | `-DeclRefExpr 0x12f140f70 <col:28> 'struct kvm_vcpu *' lvalue ParmVar 0x12f128648 'vcpu' 'struct kvm_vcpu *'     | `-ImplicitCastExpr 0x12f141040 <col:34> 'struct kvm_lapic *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12f140f90 <col:34> 'struct kvm_lapic *' contains-errors lvalue Var 0x12f140cf8 'apic' 'struct kvm_lapic *'     |-IfStmt 0x12f1412f0 <line:9:2, line:10:3>     | |-UnaryOperator 0x12f1412c8 <line:9:6, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x12f141298 <col:7, col:64> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12f141138 <col:7> 'int ()' Function 0x12f141080 'test_bit' 'int ()'     | |   |-RecoveryExpr 0x12f141278 <col:16> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x12f141218 <col:38, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x12f1411d0 <col:39, col:50> '<dependent type>' contains-errors lvalue .apic_attention     | |       `-RecoveryExpr 0x12f1411a8 <col:39, col:45> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x12f141170 <col:39> 'struct kvm_vcpu *' lvalue ParmVar 0x12f128648 'vcpu' 'struct kvm_vcpu *'     | `-ReturnStmt 0x12f1412e0 <line:10:3>     |-BinaryOperator 0x12f141650 <line:13:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x12f1414b8 <col:2> 'int' lvalue Var 0x12f140a78 'max_irr' 'int'     | `-CallExpr 0x12f141610 <col:12, col:38> 'int' contains-errors     |   |-ImplicitCastExpr 0x12f1415f8 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f1415b8 <col:12> 'int ()' Function 0x12f141500 'apic_find_highest_irr' 'int ()'     |   `-ImplicitCastExpr 0x12f141638 <col:34> 'struct kvm_lapic *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x12f1415d8 <col:34> 'struct kvm_lapic *' contains-errors lvalue Var 0x12f140cf8 'apic' 'struct kvm_lapic *'     |-IfStmt 0x12f141748 <line:14:2, line:15:13>     | |-BinaryOperator 0x12f1416c8 <line:14:6, col:16> 'int' '<'     | | |-ImplicitCastExpr 0x12f1416b0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x12f141670 <col:6> 'int' lvalue Var 0x12f140a78 'max_irr' 'int'     | | `-IntegerLiteral 0x12f141690 <col:16> 'int' 0     | `-BinaryOperator 0x12f141728 <line:15:3, col:13> 'int' '='     |   |-DeclRefExpr 0x12f1416e8 <col:3> 'int' lvalue Var 0x12f140a78 'max_irr' 'int'     |   `-IntegerLiteral 0x12f141708 <col:13> 'int' 0     |-BinaryOperator 0x12f141900 <line:16:2, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x12f141768 <col:2> 'int' lvalue Var 0x12f140af8 'max_isr' 'int'     | `-CallExpr 0x12f1418c0 <col:12, col:38> 'int' contains-errors     |   |-ImplicitCastExpr 0x12f1418a8 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x12f141868 <col:12> 'int ()' Function 0x12f1417b0 'apic_find_highest_isr' 'int ()'     |   `-ImplicitCastExpr 0x12f1418e8 <col:34> 'struct kvm_lapic *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x12f141888 <col:34> 'struct kvm_lapic *' contains-errors lvalue Var 0x12f140cf8 'apic' 'struct kvm_lapic *'     `-IfStmt 0x12f809600 <line:17:2, line:18:13>       |-BinaryOperator 0x12f141978 <line:17:6, col:16> 'int' '<'       | |-ImplicitCastExpr 0x12f141960 <col:6> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x12f141920 <col:6> 'int' lvalue Var 0x12f140af8 'max_isr' 'int'       | `-IntegerLiteral 0x12f141940 <col:16> 'int' 0       `-BinaryOperator 0x12f1419d8 <line:18:3, col:13> 'int' '='         |-DeclRefExpr 0x12f141998 <col:3> 'int' lvalue Var 0x12f140af8 'max_isr' 'int'         `-IntegerLiteral 0x12f1419b8 <col:13> 'int' 0 ","20162":"`-FunctionDecl 0x121831800  line:1:5 dccp_disconnect 'int (struct sock *, int)'   |-ParmVarDecl 0x121813c48 <col:21, col:34> col:34 used sk 'struct sock *'   |-ParmVarDecl 0x121813cc8 <col:38, col:42> col:42 flags 'int'   `-CompoundStmt 0x1221192d8 <line:2:1, line:45:1>     |-DeclStmt 0x121831cf8 <line:3:2, col:50>     | |-RecordDecl 0x121831900 <col:2, col:9> col:9 struct inet_connection_sock     | `-VarDecl 0x121831a68 <col:2, col:49> col:31 used icsk 'struct inet_connection_sock *' cinit     |   `-ImplicitCastExpr 0x121831cc8 <col:38, col:49> 'struct inet_connection_sock *' <IntegralToPointer>     |     `-CallExpr 0x121831c88 <col:38, col:49> 'int'     |       |-ImplicitCastExpr 0x121831c70 <col:38> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x121831c00 <col:38> 'int ()' Function 0x121831b48 'inet_csk' 'int ()'     |       `-ImplicitCastExpr 0x121831cb0 <col:47> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x121831c20 <col:47> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-DeclStmt 0x121832088 <line:4:2, col:38>     | |-RecordDecl 0x121831d10 <col:2, col:9> col:9 struct inet_sock     | `-VarDecl 0x121831e78 <col:2, col:37> col:20 used inet 'struct inet_sock *' cinit     |   `-ImplicitCastExpr 0x121832058 <col:27, col:37> 'struct inet_sock *' <IntegralToPointer>     |     `-CallExpr 0x121832018 <col:27, col:37> 'int'     |       |-ImplicitCastExpr 0x121832000 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x121831fc0 <col:27> 'int ()' Function 0x121831f08 'inet_sk' 'int ()'     |       `-ImplicitCastExpr 0x121832040 <col:35> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x121831fe0 <col:35> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-DeclStmt 0x121832140 <line:5:2, col:13>     | `-VarDecl 0x1218320b8 <col:2, col:12> col:6 used err 'int' cinit     |   `-IntegerLiteral 0x121832120 <col:12> 'int' 0     |-DeclStmt 0x121832238 <line:6:2, col:36>     | `-VarDecl 0x121832170 <col:2, col:28> col:12 used old_state 'const int' cinit     |   `-RecoveryExpr 0x121832210 <col:24, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1218321d8 <col:24> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-IfStmt 0x1218324a0 <line:8:2, line:9:33>     | |-BinaryOperator 0x1218322c8 <line:8:6, col:19> 'int' contains-errors '!='     | | |-DeclRefExpr 0x121832250 <col:6> 'const int' contains-errors lvalue Var 0x121832170 'old_state' 'const int'     | | `-RecoveryExpr 0x1218322a8 <col:19> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x121832470 <line:9:3, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1218323c8 <col:3> 'int ()' Function 0x121832310 'dccp_set_state' 'int ()'     |   |-DeclRefExpr 0x1218323e8 <col:18> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |   `-RecoveryExpr 0x121832450 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1221180e8 <line:12:2, line:18:16> has_else     | |-BinaryOperator 0x121832538 <line:12:6, col:19> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1218324c0 <col:6> 'const int' contains-errors lvalue Var 0x121832170 'old_state' 'const int'     | | `-RecoveryExpr 0x121832518 <col:19> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x1218326d0 <col:32, line:14:2>     | | `-CallExpr 0x121832690 <line:13:3, col:26> 'int'     | |   |-ImplicitCastExpr 0x121832678 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x121832638 <col:3> 'int ()' Function 0x121832580 'inet_csk_listen_stop' 'int ()'     | |   `-ImplicitCastExpr 0x1218326b8 <col:24> 'struct sock *' <LValueToRValue>     | |     `-DeclRefExpr 0x121832658 <col:24> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     | `-IfStmt 0x1221180b8 <line:14:9, line:18:16> has_else     |   |-CallExpr 0x122117c38 <line:14:13, col:38> 'int' contains-errors     |   | |-ImplicitCastExpr 0x122117c20 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1218327c8 <col:13> 'int ()' Function 0x121832710 'dccp_need_reset' 'int ()'     |   | `-ImplicitCastExpr 0x122117c60 <col:29> 'int' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x122117c00 <col:29> 'const int' contains-errors lvalue Var 0x121832170 'old_state' 'const int'     |   |-CompoundStmt 0x122117f08 <col:41, line:17:2>     |   | |-CallExpr 0x122117e00 <line:15:3, col:46> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x122117d58 <col:3> 'int ()' Function 0x122117ca0 'dccp_send_reset' 'int ()'     |   | | |-DeclRefExpr 0x122117d78 <col:19> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |   | | `-RecoveryExpr 0x122117de0 <col:23> '<dependent type>' contains-errors lvalue     |   | `-BinaryOperator 0x122117ee8 <line:16:3, col:16> '<dependent type>' contains-errors '='     |   |   |-RecoveryExpr 0x122117e68 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x122117e30 <col:3> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |   |   `-RecoveryExpr 0x122117ec8 <col:16> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x122118098 <line:17:9, line:18:16>     |     |-BinaryOperator 0x122117fa0 <line:17:13, col:26> 'int' contains-errors '=='     |     | |-DeclRefExpr 0x122117f28 <col:13> 'const int' contains-errors lvalue Var 0x121832170 'old_state' 'const int'     |     | `-RecoveryExpr 0x122117f80 <col:26> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x122118078 <line:18:3, col:16> '<dependent type>' contains-errors '='     |       |-RecoveryExpr 0x122117ff8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x122117fc0 <col:3> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |       `-RecoveryExpr 0x122118058 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x122118250 <line:20:2, col:27> 'int'     | |-ImplicitCastExpr 0x122118238 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1221181f8 <col:2> 'int ()' Function 0x122118140 'dccp_clear_xmit_timers' 'int ()'     | `-ImplicitCastExpr 0x122118278 <col:25> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x122118218 <col:25> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-CallExpr 0x122118408 <line:22:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122118370 <col:2> 'int ()' Function 0x1221182b8 '__skb_queue_purge' 'int ()'     | `-UnaryOperator 0x1221183f0 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1221183c8 <col:21, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x122118390 <col:21> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-CallExpr 0x1221184c8 <line:23:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122118430 <col:2> 'int ()' Function 0x1221182b8 '__skb_queue_purge' 'int ()'     | `-UnaryOperator 0x1221184b0 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x122118488 <col:21, col:25> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x122118450 <col:21> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-IfStmt 0x122118770 <line:24:2, line:27:2>     | |-RecoveryExpr 0x122118550 <line:24:6, col:26> '_Bool' contains-errors     | `-CompoundStmt 0x122118758 <col:32, line:27:2>     |   `-CallExpr 0x1221186d0 <line:25:3, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x122118650 <col:3> 'int ()' Function 0x122118598 '__kfree_skb' 'int ()'     |     `-RecoveryExpr 0x1221186a8 <col:15, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x122118670 <col:15> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-BinaryOperator 0x122118810 <line:29:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1221187c8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122118790 <col:2> 'struct inet_sock *' lvalue Var 0x121831e78 'inet' 'struct inet_sock *'     | `-IntegerLiteral 0x1221187f0 <col:21> 'int' 0     |-IfStmt 0x122118a28 <line:31:2, line:32:22>     | |-RecoveryExpr 0x122118890 <line:31:6, col:45> '_Bool' contains-errors     | `-CallExpr 0x1221189e8 <line:32:3, col:22> 'int'     |   |-ImplicitCastExpr 0x1221189d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x122118990 <col:3> 'int ()' Function 0x1221188d8 'inet_reset_saddr' 'int ()'     |   `-ImplicitCastExpr 0x122118a10 <col:20> 'struct sock *' <LValueToRValue>     |     `-DeclRefExpr 0x1221189b0 <col:20> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-BinaryOperator 0x122118ac8 <line:34:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x122118a80 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122118a48 <col:2> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     | `-IntegerLiteral 0x122118aa8 <col:20> 'int' 0     |-BinaryOperator 0x122118ca0 <line:37:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x122118c58 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x122118c20 <col:2> 'struct inet_connection_sock *' lvalue Var 0x121831a68 'icsk' 'struct inet_connection_sock *'     | `-IntegerLiteral 0x122118c80 <col:23> 'int' 0     |-CallExpr 0x122118df8 <line:38:2, col:25> 'int'     | |-ImplicitCastExpr 0x122118de0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122118da0 <col:2> 'int ()' Function 0x122118ce8 'inet_csk_delack_init' 'int ()'     | `-ImplicitCastExpr 0x122118e20 <col:23> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x122118dc0 <col:23> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-CallExpr 0x122118f70 <line:39:2, col:19> 'int'     | |-ImplicitCastExpr 0x122118f58 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x122118f18 <col:2> 'int ()' Function 0x122118e60 '__sk_dst_reset' 'int ()'     | `-ImplicitCastExpr 0x122118f98 <col:17> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x122118f38 <col:17> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     |-CallExpr 0x1221191c0 <line:41:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x122119090 <col:2> 'int ()' Function 0x122118fd8 'WARN_ON' 'int ()'     | `-BinaryOperator 0x1221191a0 <col:10, col:35> 'int' contains-errors '&&'     |   |-RecoveryExpr 0x1221190e8 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1221190b0 <col:10> 'struct inet_sock *' lvalue Var 0x121831e78 'inet' 'struct inet_sock *'     |   `-UnaryOperator 0x122119188 <col:28, col:35> '<dependent type>' contains-errors prefix '!' cannot overflow     |     `-ImplicitCastExpr 0x122119170 <col:29, col:35> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x122119148 <col:29, col:35> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x122119110 <col:29> 'struct inet_connection_sock *' lvalue Var 0x121831a68 'icsk' 'struct inet_connection_sock *'     |-CallExpr 0x122119268 <line:43:2, col:24> '<dependent type>' contains-errors     | |-RecoveryExpr 0x122119220 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1221191e8 <col:2> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     | `-DeclRefExpr 0x122119248 <col:22> 'struct sock *' lvalue ParmVar 0x121813c48 'sk' 'struct sock *'     `-ReturnStmt 0x1221192c8 <line:44:2, col:9>       `-ImplicitCastExpr 0x1221192b0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x122119290 <col:9> 'int' lvalue Var 0x1218320b8 'err' 'int' ","19867":"`-FunctionDecl 0x12f00de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x12f00dd58 <col:8> col:8 used HttpConnectionManagerConfigTest 'int'   |-ParmVarDecl 0x12f00dcd8 <col:41> col:41 ServerOverwrite 'int'   `-CompoundStmt 0x12d109390 <col:58, line:20:1>     |-ImplicitCastExpr 0x12f00df70 <line:14:3> 'int' <LValueToRValue>     | `-DeclRefExpr 0x12f00df50 <col:3> 'int' lvalue ParmVar 0x12f00dd58 'HttpConnectionManagerConfigTest' 'int'     `-CallExpr 0x12d109200 <col:31, line:17:69> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f00e0a0 <line:14:31> 'int ()' Function 0x12f00dfe8 'config' 'int ()'       |-CallExpr 0x12f00e308 <col:38, col:84> '<dependent type>' contains-errors       | |-DeclRefExpr 0x12f00e1a0 <col:38> 'int ()' Function 0x12f00e0e8 'parseHttpConnectionManagerFromYaml' 'int ()'       | `-RecoveryExpr 0x12f00e2e8 <col:73> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x12f00e330 <col:87> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x12f00e350 <line:15:38> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x12f00e370 <col:54> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x12f00e390 <line:16:38> '<dependent type>' contains-errors lvalue       |-RecoveryExpr 0x12f00e3b0 <col:78> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x12f00e3d0 <line:17:38> '<dependent type>' contains-errors lvalue ","19695":"`-FunctionDecl 0x138030f58  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x130113a58 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x130113a00 <<invalid sloc>> Implicit 873 ","19231":"`-FunctionDecl 0x14a886928  line:1:1 smbhash 'int (unsigned char *, const unsigned char *, unsigned char *)'   |-ParmVarDecl 0x14a886708 <col:9, col:24> col:24 used out 'unsigned char *'   |-ParmVarDecl 0x14a8867b8 <col:29, col:50> col:50 used in 'const unsigned char *'   |-ParmVarDecl 0x14a886838 <col:54, col:69> col:69 used key 'unsigned char *'   `-CompoundStmt 0x14a0ad5a8 <line:2:1, line:43:1>     |-DeclStmt 0x14a886ab0 <line:3:2, col:8>     | `-VarDecl 0x14a886a48 <col:2, col:6> col:6 used rc 'int'     |-DeclStmt 0x14a886be0 <line:4:2, col:23>     | `-VarDecl 0x14a886b78 <col:2, col:22> col:16 used key2 'unsigned char[8]'     |-DeclStmt 0x14a886de8 <line:5:2, col:33>     | |-RecordDecl 0x14a886bf8 <col:2, col:9> col:9 struct crypto_skcipher     | `-VarDecl 0x14a886d68 <col:2, col:26> col:26 used tfm_des 'struct crypto_skcipher *'     |-DeclStmt 0x14b01e828 <line:6:2, col:32>     | |-RecordDecl 0x14b01e200 <col:2, col:9> col:9 struct scatterlist     | |-VarDecl 0x14b01e2f8 <col:2, col:21> col:21 invalid sgin 'struct scatterlist'     | `-VarDecl 0x14b01e7a0 <col:2, col:27> col:27 invalid sgout 'struct scatterlist'     |-DeclStmt 0x14b01ea28 <line:7:2, col:30>     | |-RecordDecl 0x14b01e840 <col:2, col:9> col:9 struct skcipher_request     | `-VarDecl 0x14b01e9a8 <col:2, col:27> col:27 used req 'struct skcipher_request *'     |-CallExpr 0x14b01ec18 <line:9:2, col:22> 'int'     | |-ImplicitCastExpr 0x14b01ec00 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14b01eb70 <col:2> 'int ()' Function 0x14b01eab8 'str_to_key' 'int ()'     | |-ImplicitCastExpr 0x14b01ec48 <col:13> 'unsigned char *' <LValueToRValue>     | | `-DeclRefExpr 0x14b01eb90 <col:13> 'unsigned char *' lvalue ParmVar 0x14a886838 'key' 'unsigned char *'     | `-ImplicitCastExpr 0x14b01ec60 <col:18> 'unsigned char *' <ArrayToPointerDecay>     |   `-DeclRefExpr 0x14b01ebb0 <col:18> 'unsigned char[8]' lvalue Var 0x14a886b78 'key2' 'unsigned char[8]'     |-BinaryOperator 0x14b01eee8 <line:11:2, col:60> 'struct crypto_skcipher *' contains-errors '='     | |-DeclRefExpr 0x14b01ec78 <col:2> 'struct crypto_skcipher *' lvalue Var 0x14a886d68 'tfm_des' 'struct crypto_skcipher *'     | `-CallExpr 0x14b01eeb0 <col:12, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14b01ed78 <col:12> 'int ()' Function 0x14b01ecc0 'crypto_alloc_skcipher' 'int ()'     |   |-StringLiteral 0x14b01ede0 <col:34> 'char[4]' lvalue \"STR\"     |   |-IntegerLiteral 0x14b01ee00 <col:41> 'int' 0     |   `-RecoveryExpr 0x14b01ee90 <col:44> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a0ac280 <line:12:2, line:16:2>     | |-CallExpr 0x14b01f040 <line:12:6, col:20> 'int'     | | |-ImplicitCastExpr 0x14b01f028 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14b01efe8 <col:6> 'int ()' Function 0x14b01ef30 'IS_ERR' 'int ()'     | | `-ImplicitCastExpr 0x14b01f068 <col:13> 'struct crypto_skcipher *' <LValueToRValue>     | |   `-DeclRefExpr 0x14b01f008 <col:13> 'struct crypto_skcipher *' lvalue Var 0x14a886d68 'tfm_des' 'struct crypto_skcipher *'     | `-CompoundStmt 0x14a0ac258 <col:23, line:16:2>     |   |-BinaryOperator 0x14a0ac018 <line:13:3, col:23> 'int' '='     |   | |-DeclRefExpr 0x14b01f080 <col:3> 'int' lvalue Var 0x14a886a48 'rc' 'int'     |   | `-CallExpr 0x14b01f1d8 <col:8, col:23> 'int'     |   |   |-ImplicitCastExpr 0x14b01f1c0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14b01f180 <col:8> 'int ()' Function 0x14b01f0c8 'PTR_ERR' 'int ()'     |   |   `-ImplicitCastExpr 0x14a0ac000 <col:16> 'struct crypto_skcipher *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14b01f1a0 <col:16> 'struct crypto_skcipher *' lvalue Var 0x14a886d68 'tfm_des' 'struct crypto_skcipher *'     |   |-CallExpr 0x14a0ac1c0 <line:14:3, col:22> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a0ac118 <col:3> 'int ()' Function 0x14a0ac060 'cifs_dbg' 'int ()'     |   | |-RecoveryExpr 0x14a0ac1a0 <col:12> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x14a0ac150 <col:17> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x14a0ac240 <line:15:3, col:8> 'smbhash_err' 0x14a0ac1f0     |-BinaryOperator 0x14a0ac498 <line:18:2, col:50> 'struct skcipher_request *' contains-errors '='     | |-DeclRefExpr 0x14a0ac2a0 <col:2> 'struct skcipher_request *' lvalue Var 0x14b01e9a8 'req' 'struct skcipher_request *'     | `-CallExpr 0x14a0ac468 <col:8, col:50> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a0ac3a0 <col:8> 'int ()' Function 0x14a0ac2e8 'skcipher_request_alloc' 'int ()'     |   |-DeclRefExpr 0x14a0ac3c0 <col:31> 'struct crypto_skcipher *' lvalue Var 0x14a886d68 'tfm_des' 'struct crypto_skcipher *'     |   `-RecoveryExpr 0x14a0ac448 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a0ac768 <line:19:2, line:23:2>     | |-UnaryOperator 0x14a0ac4f0 <line:19:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a0ac4d8 <col:7> 'struct skcipher_request *' <LValueToRValue>     | |   `-DeclRefExpr 0x14a0ac4b8 <col:7> 'struct skcipher_request *' lvalue Var 0x14b01e9a8 'req' 'struct skcipher_request *'     | `-CompoundStmt 0x14a0ac740 <col:12, line:23:2>     |   |-BinaryOperator 0x14a0ac5e0 <line:20:3, col:9> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14a0ac508 <col:3> 'int' lvalue Var 0x14a886a48 'rc' 'int'     |   | `-UnaryOperator 0x14a0ac5c8 <col:8, col:9> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14a0ac5b0 <col:9> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14a0ac590 <col:9> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x14a0ac6a8 <line:21:3, col:22> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14a0ac600 <col:3> 'int ()' Function 0x14a0ac060 'cifs_dbg' 'int ()'     |   | |-RecoveryExpr 0x14a0ac688 <col:12> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x14a0ac638 <col:17> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x14a0ac728 <line:22:3, col:8> 'smbhash_free_skcipher' 0x14a0ac6d8     |-CallExpr 0x14a0ac900 <line:25:2, col:41> 'int'     | |-ImplicitCastExpr 0x14a0ac8e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a0ac868 <col:2> 'int ()' Function 0x14a0ac7b0 'crypto_skcipher_setkey' 'int ()'     | |-ImplicitCastExpr 0x14a0ac938 <col:25> 'struct crypto_skcipher *' <LValueToRValue>     | | `-DeclRefExpr 0x14a0ac888 <col:25> 'struct crypto_skcipher *' lvalue Var 0x14a886d68 'tfm_des' 'struct crypto_skcipher *'     | |-ImplicitCastExpr 0x14a0ac950 <col:34> 'unsigned char *' <ArrayToPointerDecay>     | | `-DeclRefExpr 0x14a0ac8a8 <col:34> 'unsigned char[8]' lvalue Var 0x14a886b78 'key2' 'unsigned char[8]'     | `-IntegerLiteral 0x14a0ac8c8 <col:40> 'int' 8     |-CallExpr 0x14a0acae0 <line:27:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a0aca48 <col:2> 'int ()' Function 0x14a0ac990 'sg_init_one' 'int ()'     | |-UnaryOperator 0x14a0aca88 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14a0aca68 <col:15> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x14a0acaa0 <col:21> 'const unsigned char *' lvalue ParmVar 0x14a8867b8 'in' 'const unsigned char *'     | `-IntegerLiteral 0x14a0acac0 <col:25> 'int' 8     |-CallExpr 0x14a0acbb0 <line:28:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a0acb18 <col:2> 'int ()' Function 0x14a0ac990 'sg_init_one' 'int ()'     | |-UnaryOperator 0x14a0acb58 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14a0acb38 <col:15> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x14a0acb70 <col:22> 'unsigned char *' lvalue ParmVar 0x14a886708 'out' 'unsigned char *'     | `-IntegerLiteral 0x14a0acb90 <col:27> 'int' 8     |-CallExpr 0x14a0acdd8 <line:30:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14a0accc8 <col:2> 'int ()' Function 0x14a0acc10 'skcipher_request_set_callback' 'int ()'     | |-DeclRefExpr 0x14a0acce8 <col:32> 'struct skcipher_request *' lvalue Var 0x14b01e9a8 'req' 'struct skcipher_request *'     | |-IntegerLiteral 0x14a0acd08 <col:37> 'int' 0     | |-RecoveryExpr 0x14a0acd98 <col:40> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14a0acdb8 <col:46> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a0ad178 <line:33:2, col:34> 'int' '='     | |-DeclRefExpr 0x14a0acfc8 <col:2> 'int' lvalue Var 0x14a886a48 'rc' 'int'     | `-CallExpr 0x14a0ad138 <col:7, col:34> 'int'     |   |-ImplicitCastExpr 0x14a0ad120 <col:7> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a0ad0e0 <col:7> 'int ()' Function 0x14a0ad028 'crypto_skcipher_encrypt' 'int ()'     |   `-ImplicitCastExpr 0x14a0ad160 <col:31> 'struct skcipher_request *' <LValueToRValue>     |     `-DeclRefExpr 0x14a0ad100 <col:31> 'struct skcipher_request *' lvalue Var 0x14b01e9a8 'req' 'struct skcipher_request *'     |-CallExpr 0x14a0ad368 <line:37:2, col:27> 'int'     | |-ImplicitCastExpr 0x14a0ad350 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14a0ad310 <col:2> 'int ()' Function 0x14a0ad258 'skcipher_request_free' 'int ()'     | `-ImplicitCastExpr 0x14a0ad390 <col:24> 'struct skcipher_request *' <LValueToRValue>     |   `-DeclRefExpr 0x14a0ad330 <col:24> 'struct skcipher_request *' lvalue Var 0x14b01e9a8 'req' 'struct skcipher_request *'     |-LabelStmt 0x14a0ad520 <line:39:1, line:40:30> 'smbhash_free_skcipher'     | `-CallExpr 0x14a0ad4e0 <col:2, col:30> 'int'     |   |-ImplicitCastExpr 0x14a0ad4c8 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a0ad488 <col:2> 'int ()' Function 0x14a0ad3d0 'crypto_free_skcipher' 'int ()'     |   `-ImplicitCastExpr 0x14a0ad508 <col:23> 'struct crypto_skcipher *' <LValueToRValue>     |     `-DeclRefExpr 0x14a0ad4a8 <col:23> 'struct crypto_skcipher *' lvalue Var 0x14a886d68 'tfm_des' 'struct crypto_skcipher *'     `-LabelStmt 0x14a0ad588 <line:41:1, line:42:9> 'smbhash_err'       `-ReturnStmt 0x14a0ad578 <col:2, col:9>         `-ImplicitCastExpr 0x14a0ad560 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x14a0ad540 <col:9> 'int' lvalue Var 0x14a886a48 'rc' 'int' ","19672":"`-FunctionDecl 0x13c141400  line:1:12 mlx5_fpga_conn_create_cq 'int (struct mlx5_fpga_conn *, int)' static   |-ParmVarDecl 0x13c129048 <col:37, col:60> col:60 used conn 'struct mlx5_fpga_conn *'   |-ParmVarDecl 0x13c1290c8 <col:66, col:70> col:70 used cq_size 'int'   `-CompoundStmt 0x13c80d510 <line:2:1, line:81:1>     |-DeclStmt 0x13c141748 <line:3:2, col:44>     | |-RecordDecl 0x13c141500 <col:2, col:9> col:9 struct mlx5_fpga_device     | `-VarDecl 0x13c141668 <col:2, col:40> col:27 used fdev 'struct mlx5_fpga_device *' cinit     |   `-RecoveryExpr 0x13c141708 <col:34, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c1416d0 <col:34> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     |-DeclStmt 0x13c1419a8 <line:4:2, col:41>     | |-RecordDecl 0x13c141760 <col:2, col:9> col:9 struct mlx5_core_dev     | `-VarDecl 0x13c1418c8 <col:2, col:37> col:24 used mdev 'struct mlx5_core_dev *' cinit     |   `-RecoveryExpr 0x13c141968 <col:31, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c141930 <col:31> 'struct mlx5_fpga_device *' contains-errors lvalue Var 0x13c141668 'fdev' 'struct mlx5_fpga_device *'     |-DeclStmt 0x13c141b58 <line:7:2, col:26>     | |-RecordDecl 0x13c1419d8 <col:2, col:9> col:9 struct mlx5_wq_param     | `-VarDecl 0x13c141ad8 <col:2, col:23> col:23 referenced invalid wqp 'struct mlx5_wq_param'     |-DeclStmt 0x13c141d58 <line:8:2, col:24>     | |-RecordDecl 0x13c141b70 <col:2, col:9> col:9 struct mlx5_cqe64     | `-VarDecl 0x13c141cd8 <col:2, col:21> col:21 used cqe 'struct mlx5_cqe64 *'     |-DeclStmt 0x13c141f10 <line:9:2, col:21>     | |-VarDecl 0x13c141d88 <col:2, col:6> col:6 used inlen 'int'     | |-VarDecl 0x13c141e08 <col:2, col:13> col:13 used err 'int'     | `-VarDecl 0x13c141e88 <col:2, col:18> col:18 used eqn 'int'     |-DeclStmt 0x13c141fa8 <line:10:2, col:19>     | `-VarDecl 0x13c141f40 <col:2, col:15> col:15 used irqn 'unsigned int'     |-DeclStmt 0x13c1420d8 <line:11:2, col:16>     | |-VarDecl 0x13c141fd8 <col:2, col:8> col:8 used cqc 'void *'     | `-VarDecl 0x13c142058 <col:2, col:14> col:14 used in 'void *'     |-BinaryOperator 0x13c142308 <line:15:2, col:38> 'int' '='     | |-DeclRefExpr 0x13c142108 <col:2> 'int' lvalue ParmVar 0x13c1290c8 'cq_size' 'int'     | `-CallExpr 0x13c1422c8 <col:12, col:38> 'int'     |   |-ImplicitCastExpr 0x13c1422b0 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13c142240 <col:12> 'int ()' Function 0x13c142188 'roundup_pow_of_two' 'int ()'     |   `-ImplicitCastExpr 0x13c1422f0 <col:31> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13c142260 <col:31> 'int' lvalue ParmVar 0x13c1290c8 'cq_size' 'int'     |-CallExpr 0x13c8084d0 <line:16:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c808210 <col:2> 'int ()' Function 0x13c142350 'MLX5_SET' 'int ()'     | |-DeclRefExpr 0x13c808230 <col:11> 'void *' lvalue Var 0x13c141fd8 'cqc' 'void *'     | |-RecoveryExpr 0x13c808438 <col:16> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x13c808458 <col:26> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13c808490 <col:39, col:52> 'int'     |   |-ImplicitCastExpr 0x13c808478 <col:39> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13c808360 <col:39> 'int ()' Function 0x13c8082a8 'ilog2' 'int ()'     |   `-ImplicitCastExpr 0x13c8084b8 <col:45> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13c808380 <col:45> 'int' lvalue ParmVar 0x13c1290c8 'cq_size' 'int'     |-BinaryOperator 0x13c808648 <line:18:2, col:33> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c808558 <col:2, col:6> '<dependent type>' contains-errors lvalue .buf_numa_node     | | `-RecoveryExpr 0x13c808530 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13c808510 <col:2> 'struct mlx5_wq_param' lvalue Var 0x13c141ad8 'wqp' 'struct mlx5_wq_param'     | `-CXXDependentScopeMemberExpr 0x13c808600 <col:22, col:33> '<dependent type>' contains-errors lvalue .numa_node     |   `-RecoveryExpr 0x13c8085d8 <col:22, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c8085a0 <col:22> 'struct mlx5_core_dev *' contains-errors lvalue Var 0x13c1418c8 'mdev' 'struct mlx5_core_dev *'     |-BinaryOperator 0x13c8087a0 <line:19:2, col:33> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c8086b0 <col:2, col:6> '<dependent type>' contains-errors lvalue .db_numa_node     | | `-RecoveryExpr 0x13c808688 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13c808668 <col:2> 'struct mlx5_wq_param' lvalue Var 0x13c141ad8 'wqp' 'struct mlx5_wq_param'     | `-CXXDependentScopeMemberExpr 0x13c808758 <col:22, col:33> '<dependent type>' contains-errors lvalue .numa_node     |   `-RecoveryExpr 0x13c808730 <col:22, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c8086f8 <col:22> 'struct mlx5_core_dev *' contains-errors lvalue Var 0x13c1418c8 'mdev' 'struct mlx5_core_dev *'     |-BinaryOperator 0x13c808ba0 <line:21:2, line:22:28> 'int' contains-errors '='     | |-DeclRefExpr 0x13c8087c0 <line:21:2> 'int' lvalue Var 0x13c141e08 'err' 'int'     | `-CallExpr 0x13c808b58 <col:8, line:22:28> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13c8088c0 <line:21:8> 'int ()' Function 0x13c808808 'mlx5_cqwq_create' 'int ()'     |   |-DeclRefExpr 0x13c8088e0 <col:25> 'struct mlx5_core_dev *' contains-errors lvalue Var 0x13c1418c8 'mdev' 'struct mlx5_core_dev *'     |   |-UnaryOperator 0x13c808920 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x13c808900 <col:32> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x13c808b38 <col:37> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x13c8089f8 <col:47, col:57> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x13c8089b0 <col:48, col:57> '<dependent type>' contains-errors lvalue .wq     |   |   `-RecoveryExpr 0x13c808988 <col:48, col:54> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x13c808950 <col:48> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     |   `-UnaryOperator 0x13c808ab8 <line:22:11, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x13c808a70 <col:12, col:21> '<dependent type>' contains-errors lvalue .wq_ctrl     |       `-RecoveryExpr 0x13c808a48 <col:12, col:18> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13c808a10 <col:12> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     |-IfStmt 0x13c808c40 <line:23:2, line:24:10>     | |-ImplicitCastExpr 0x13c808be0 <line:23:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13c808bc0 <col:6> 'int' lvalue Var 0x13c141e08 'err' 'int'     | `-ReturnStmt 0x13c808c30 <line:24:3, col:10>     |   `-ImplicitCastExpr 0x13c808c18 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x13c808bf8 <col:10> 'int' lvalue Var 0x13c141e08 'err' 'int'     |-IfStmt 0x13c80ab98 <line:34:2, line:37:2>     | |-UnaryOperator 0x13c80aae0 <line:34:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13c80aac8 <col:7> 'void *' <LValueToRValue>     | |   `-DeclRefExpr 0x13c80aaa8 <col:7> 'void *' lvalue Var 0x13c142058 'in' 'void *'     | `-CompoundStmt 0x13c80ab80 <col:11, line:37:2>     |   `-GotoStmt 0x13c80ab68 <line:36:3, col:8> 'err_cqwq' 0x13c80ab18     |-BinaryOperator 0x13c80af78 <line:39:2, col:61> 'int' contains-errors '='     | |-DeclRefExpr 0x13c80abb8 <col:2> 'int' lvalue Var 0x13c141e08 'err' 'int'     | `-CallExpr 0x13c80af20 <col:8, col:61> 'int' contains-errors     |   |-ImplicitCastExpr 0x13c80af08 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13c80acb8 <col:8> 'int ()' Function 0x13c80ac00 'mlx5_vector2eqn' 'int ()'     |   |-ImplicitCastExpr 0x13c80af60 <col:24> 'struct mlx5_core_dev *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x13c80acd8 <col:24> 'struct mlx5_core_dev *' contains-errors lvalue Var 0x13c1418c8 'mdev' 'struct mlx5_core_dev *'     |   |-CallExpr 0x13c80ae10 <col:30, col:47> 'int'     |   | `-ImplicitCastExpr 0x13c80adf8 <col:30> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x13c80add8 <col:30> 'int ()' Function 0x13c80ad20 'smp_processor_id' 'int ()'     |   |-UnaryOperator 0x13c80ae80 <col:50, col:51> 'int *' prefix '&' cannot overflow     |   | `-DeclRefExpr 0x13c80ae30 <col:51> 'int' lvalue Var 0x13c141e88 'eqn' 'int'     |   `-UnaryOperator 0x13c80aef0 <col:56, col:57> 'unsigned int *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x13c80ae98 <col:57> 'unsigned int' lvalue Var 0x13c141f40 'irqn' 'unsigned int'     |-IfStmt 0x13c80afe8 <line:40:2, line:41:8>     | |-ImplicitCastExpr 0x13c80afb8 <line:40:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13c80af98 <col:6> 'int' lvalue Var 0x13c141e08 'err' 'int'     | `-GotoStmt 0x13c80afd0 <line:41:3, col:8> 'err_cqwq' 0x13c80ab18     |-CallExpr 0x13c80bdc8 <line:55:2, col:11> 'int'     | |-ImplicitCastExpr 0x13c80bdb0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13c80bd70 <col:2> 'int ()' Function 0x13c80bcb8 'kvfree' 'int ()'     | `-ImplicitCastExpr 0x13c80bdf0 <col:9> 'void *' <LValueToRValue>     |   `-DeclRefExpr 0x13c80bd90 <col:9> 'void *' lvalue Var 0x13c142058 'in' 'void *'     |-IfStmt 0x13c80be58 <line:57:2, line:58:8>     | |-ImplicitCastExpr 0x13c80be28 <line:57:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x13c80be08 <col:6> 'int' lvalue Var 0x13c141e08 'err' 'int'     | `-GotoStmt 0x13c80be40 <line:58:3, col:8> 'err_cqwq' 0x13c80ab18     |-BinaryOperator 0x13c80bf88 <line:60:2, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c80bf20 <col:2, col:15> '<dependent type>' contains-errors lvalue .cqe_sz     | | `-CXXDependentScopeMemberExpr 0x13c80bed8 <col:2, col:11> '<dependent type>' contains-errors lvalue .mcq     | |   `-RecoveryExpr 0x13c80beb0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13c80be78 <col:2> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     | `-IntegerLiteral 0x13c80bf68 <col:28> 'int' 64     |-BinaryOperator 0x13c80c1d0 <line:61:2, col:48> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c80c050 <col:2, col:15> '<dependent type>' contains-errors lvalue .set_ci_db     | | `-CXXDependentScopeMemberExpr 0x13c80c008 <col:2, col:11> '<dependent type>' contains-errors lvalue .mcq     | |   `-RecoveryExpr 0x13c80bfe0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13c80bfa8 <col:2> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     | `-CXXDependentScopeMemberExpr 0x13c80c188 <col:28, col:48> '<dependent type>' contains-errors lvalue .db     |   `-CXXDependentScopeMemberExpr 0x13c80c140 <col:28, col:45> '<dependent type>' contains-errors lvalue .db     |     `-CXXDependentScopeMemberExpr 0x13c80c0f8 <col:28, col:37> '<dependent type>' contains-errors lvalue .wq_ctrl     |       `-RecoveryExpr 0x13c80c0d0 <col:28, col:34> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13c80c098 <col:28> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     |-BinaryOperator 0x13c80c458 <line:62:2, col:53> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c80c298 <col:2, col:15> '<dependent type>' contains-errors lvalue .arm_db     | | `-CXXDependentScopeMemberExpr 0x13c80c250 <col:2, col:11> '<dependent type>' contains-errors lvalue .mcq     | |   `-RecoveryExpr 0x13c80c228 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13c80c1f0 <col:2> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     | `-BinaryOperator 0x13c80c438 <col:28, col:53> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x13c80c3d0 <col:28, col:48> '<dependent type>' contains-errors lvalue .db     |   | `-CXXDependentScopeMemberExpr 0x13c80c388 <col:28, col:45> '<dependent type>' contains-errors lvalue .db     |   |   `-CXXDependentScopeMemberExpr 0x13c80c340 <col:28, col:37> '<dependent type>' contains-errors lvalue .wq_ctrl     |   |     `-RecoveryExpr 0x13c80c318 <col:28, col:34> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x13c80c2e0 <col:28> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     |   `-IntegerLiteral 0x13c80c418 <col:53> 'int' 1     |-BinaryOperator 0x13c80c5b8 <line:63:2, col:28> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13c80c580 <col:2, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13c80c568 <col:3, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13c80c520 <col:3, col:16> '<dependent type>' contains-errors lvalue .set_ci_db     | |     `-CXXDependentScopeMemberExpr 0x13c80c4d8 <col:3, col:12> '<dependent type>' contains-errors lvalue .mcq     | |       `-RecoveryExpr 0x13c80c4b0 <col:3, col:9> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x13c80c478 <col:3> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     | `-IntegerLiteral 0x13c80c598 <col:28> 'int' 0     |-BinaryOperator 0x13c80c718 <line:64:2, col:28> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x13c80c6e0 <col:2, col:16> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13c80c6c8 <col:3, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x13c80c680 <col:3, col:16> '<dependent type>' contains-errors lvalue .arm_db     | |     `-CXXDependentScopeMemberExpr 0x13c80c638 <col:3, col:12> '<dependent type>' contains-errors lvalue .mcq     | |       `-RecoveryExpr 0x13c80c610 <col:3, col:9> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x13c80c5d8 <col:3> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     | `-IntegerLiteral 0x13c80c6f8 <col:28> 'int' 0     |-BinaryOperator 0x13c80c868 <line:65:2, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c80c800 <col:2, col:15> '<dependent type>' contains-errors lvalue .vector     | | `-CXXDependentScopeMemberExpr 0x13c80c798 <col:2, col:11> '<dependent type>' contains-errors lvalue .mcq     | |   `-RecoveryExpr 0x13c80c770 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13c80c738 <col:2> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     | `-IntegerLiteral 0x13c80c848 <col:28> 'int' 0     |-BinaryOperator 0x13c80cb78 <line:68:2, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c80cb10 <col:2, col:15> '<dependent type>' contains-errors lvalue .irqn     | | `-CXXDependentScopeMemberExpr 0x13c80cac8 <col:2, col:11> '<dependent type>' contains-errors lvalue .mcq     | |   `-RecoveryExpr 0x13c80caa0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13c80ca68 <col:2> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     | `-DeclRefExpr 0x13c80cb58 <col:28> 'unsigned int' lvalue Var 0x13c141f40 'irqn' 'unsigned int'     |-BinaryOperator 0x13c80cd30 <line:69:2, col:43> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13c80cc40 <col:2, col:15> '<dependent type>' contains-errors lvalue .uar     | | `-CXXDependentScopeMemberExpr 0x13c80cbf8 <col:2, col:11> '<dependent type>' contains-errors lvalue .mcq     | |   `-RecoveryExpr 0x13c80cbd0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13c80cb98 <col:2> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     | `-CXXDependentScopeMemberExpr 0x13c80cce8 <col:28, col:43> '<dependent type>' contains-errors lvalue .uar     |   `-RecoveryExpr 0x13c80ccc0 <col:28, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13c80cc88 <col:28> 'struct mlx5_fpga_device *' contains-errors lvalue Var 0x13c141668 'fdev' 'struct mlx5_fpga_device *'     |-CallExpr 0x13c80d200 <line:73:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13c80d068 <col:2> 'int ()' Function 0x13c80cfb0 'mlx5_fpga_dbg' 'int ()'     | |-DeclRefExpr 0x13c80d088 <col:16> 'struct mlx5_fpga_device *' contains-errors lvalue Var 0x13c141668 'fdev' 'struct mlx5_fpga_device *'     | |-StringLiteral 0x13c80d0f0 <col:22> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x13c80d1b8 <col:29, col:42> '<dependent type>' contains-errors lvalue .cqn     |   `-CXXDependentScopeMemberExpr 0x13c80d170 <col:29, col:38> '<dependent type>' contains-errors lvalue .mcq     |     `-RecoveryExpr 0x13c80d148 <col:29, col:35> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13c80d110 <col:29> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     |-GotoStmt 0x13c80d288 <line:75:2, col:7> 'out' 0x13c80d238     |-LabelStmt 0x13c80d488 <line:77:1, line:78:35> 'err_cqwq'     | `-CallExpr 0x13c80d460 <col:2, col:35> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13c80d380 <col:2> 'int ()' Function 0x13c80d2c8 'mlx5_wq_destroy' 'int ()'     |   `-UnaryOperator 0x13c80d448 <col:18, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x13c80d400 <col:19, col:28> '<dependent type>' contains-errors lvalue .wq_ctrl     |       `-RecoveryExpr 0x13c80d3d8 <col:19, col:25> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13c80d3a0 <col:19> 'struct mlx5_fpga_conn *' lvalue ParmVar 0x13c129048 'conn' 'struct mlx5_fpga_conn *'     `-LabelStmt 0x13c80d4f0 <line:79:1, line:80:9> 'out'       `-ReturnStmt 0x13c80d4e0 <col:2, col:9>         `-ImplicitCastExpr 0x13c80d4c8 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x13c80d4a8 <col:9> 'int' lvalue Var 0x13c141e08 'err' 'int' ","19936":"`-FunctionDecl 0x13980ddf8  line:1:1 invalid ippGetRequestId 'int (int *)'   |-ParmVarDecl 0x13980dd28 <col:17, col:24> col:24 invalid ipp 'int *'   `-CompoundStmt 0x13980e090 <line:2:1, line:11:1>     |-IfStmt 0x13980df48 <line:5:3, line:6:14>     | |-UnaryOperator 0x13980dee0 <line:5:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13980dec8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13980dea8 <col:8> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13980df38 <line:6:5, col:14>     |   `-ParenExpr 0x13980df18 <col:12, col:14> 'int'     |     `-IntegerLiteral 0x13980def8 <col:13> 'int' 0     `-ReturnStmt 0x13980e080 <line:10:3, col:38>       `-ParenExpr 0x13980e060 <col:10, col:38> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x13980e018 <col:11, col:28> '<dependent type>' contains-errors lvalue .request_id           `-CXXDependentScopeMemberExpr 0x13980dfd0 <col:11, col:24> '<dependent type>' contains-errors lvalue .any             `-CXXDependentScopeMemberExpr 0x13980df88 <col:11, col:16> '<dependent type>' contains-errors lvalue ->request               `-RecoveryExpr 0x13980df68 <col:11> '<dependent type>' contains-errors lvalue ","19554":"`-FunctionDecl 0x14600ddc8  line:1:1 invalid NAN_METHOD 'int (int)'   |-ParmVarDecl 0x14600dcf0 <col:12, <invalid sloc>> col:23 invalid 'int'   `-CompoundStmt 0x146027f90 <line:2:1, line:65:1>     |-RecoveryExpr 0x14600dea8 <line:3:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x14600def8 <line:5:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x14600df48 <line:6:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x14600df98 <line:8:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x14600dfe8 <line:10:5> '<dependent type>' contains-errors lvalue     |-RecoveryExpr 0x14600e038 <line:14:5> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14600e0d8 <line:15:5, col:37>     | `-VarDecl 0x14600e070 <col:5, col:18> col:18 used baseUrl 'const char *'     |-IfStmt 0x14600e140 <line:16:5, line:18:5>     | |-RecoveryExpr 0x14600e0f0 <line:16:9, col:31> '_Bool' contains-errors     | `-CompoundStmt 0x14600e130 <col:34, line:18:5>     |-DeclStmt 0x14600e1e0 <line:23:5, col:39>     | `-VarDecl 0x14600e178 <col:5, col:18> col:18 used encoding 'const char *'     |-IfStmt 0x14600e248 <line:25:5, line:27:5>     | |-RecoveryExpr 0x14600e1f8 <line:25:9, col:32> '_Bool' contains-errors     | `-CompoundStmt 0x14600e238 <col:35, line:27:5>     |-CallExpr 0x146027848 <line:30:5, col:23> 'int'     | `-ImplicitCastExpr 0x146027830 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14600e3c0 <col:5> 'int ()' Function 0x14600e308 'xmlResetLastError' 'int ()'     |-DeclStmt 0x146027ae8 <line:33:5, col:46>     | `-VarDecl 0x146027980 <col:5, col:9> col:9 used opts 'int'     |-IfStmt 0x146027d60 <line:38:5, line:48:5> has_else     | |-RecoveryExpr 0x146027b40 <line:38:9, col:43> '_Bool' contains-errors     | |-CompoundStmt 0x146027cc0 <col:46, line:42:5>     | `-CompoundStmt 0x146027d50 <line:43:10, line:48:5>     `-IfStmt 0x146027f70 <line:52:5, line:58:5>       |-RecoveryExpr 0x146027db0 <line:52:9, col:10> '_Bool' contains-errors       `-CompoundStmt 0x146027f58 <col:15, line:58:5>         `-IfStmt 0x146027f38 <line:54:9, line:56:9>           |-RecoveryExpr 0x146027f08 <line:54:13> '_Bool' contains-errors           `-CompoundStmt 0x146027f28 <col:20, line:56:9> ","20041":"`-FunctionDecl 0x138028c98  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x138028d98 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x138028d40 <<invalid sloc>> Implicit 873 ","19953":"`-FunctionDecl 0x13e9281f8  line:1:12 invalid ReverseSequenceOp 'int (int *)'   |-ParmVarDecl 0x13e928128 <col:30, col:52> col:52 invalid context 'int *'   `-CompoundStmt 0x13e941830 <line:2:27, line:5:3>     |-CallExpr 0x13e928608 <line:3:5, col:65> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e928400 <col:5> 'int ()' Function 0x13e928348 'OP_REQUIRES_OK' 'int ()'     | |-RecoveryExpr 0x13e928420 <col:20> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x13e9285d8 <col:29, col:64> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x13e928460 <col:29, col:38> '<dependent type>' contains-errors lvalue ->GetAttr     |   | `-RecoveryExpr 0x13e928440 <col:29> '<dependent type>' contains-errors lvalue     |   |-StringLiteral 0x13e9284f0 <col:46> 'char[4]' lvalue \"STR\"     |   `-UnaryOperator 0x13e9285c0 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13e9285a0 <col:54> '<dependent type>' contains-errors lvalue     `-CallExpr 0x13e941800 <line:4:5, col:63> '<dependent type>' contains-errors       |-DeclRefExpr 0x13e928638 <col:5> 'int ()' Function 0x13e928348 'OP_REQUIRES_OK' 'int ()'       |-RecoveryExpr 0x13e928658 <col:20> '<dependent type>' contains-errors lvalue       `-CallExpr 0x13e9287c8 <col:29, col:62> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x13e928698 <col:29, col:38> '<dependent type>' contains-errors lvalue ->GetAttr         | `-RecoveryExpr 0x13e928678 <col:29> '<dependent type>' contains-errors lvalue         |-StringLiteral 0x13e9286e0 <col:46> 'char[4]' lvalue \"STR\"         `-UnaryOperator 0x13e9287b0 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x13e928790 <col:54> '<dependent type>' contains-errors lvalue ","19477":"`-FunctionDecl 0x1501439a8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x150143aa8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x150143b10 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x150143b78 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x150143a50 <<invalid sloc>> Implicit 900 ","20101":"`-FunctionDecl 0x13380ddf8  line:1:1 invalid _run_epilog 'int (int *)'   |-ParmVarDecl 0x13380dd28 <col:13, col:24> col:24 invalid job_env 'int *'   `-CompoundStmt 0x133829770 <line:2:1, line:39:1>     |-DeclStmt 0x13380df48 <line:4:2, col:33>     | `-VarDecl 0x13380dec0 <col:2, col:18> col:18 referenced invalid msg_timeout 'int' static     |-DeclStmt 0x13380dfe0 <line:5:2, col:25>     | `-VarDecl 0x13380df78 <col:2, col:18> col:18 referenced invalid timeout 'int' static     |-DeclStmt 0x13380e110 <line:6:2, col:27>     | |-VarDecl 0x13380e010 <col:2, col:6> col:6 used error_code 'int'     | `-VarDecl 0x13380e090 <col:2, col:18> col:18 used diff_time 'int'     |-DeclStmt 0x13380e1a8 <line:7:2, col:17>     | `-VarDecl 0x13380e140 <col:2, col:8> col:8 used my_epilog 'char *'     |-DeclStmt 0x133827448 <line:8:2, col:37>     | `-VarDecl 0x13380e208 <col:2, col:36> col:9 used my_env 'char **' cinit     |   `-CallExpr 0x133827420 <col:18, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13380e3d0 <col:18> 'int ()' Function 0x13380e318 '_build_env' 'int ()'     |     `-RecoveryExpr 0x133827400 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133827698 <line:10:2, line:11:39>     | |-BinaryOperator 0x1338274a0 <line:10:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x133827460 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x133827480 <col:21> 'int' 0     | `-BinaryOperator 0x133827678 <line:11:3, col:39> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x1338274e0 <col:3> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1338274c0 <col:3> 'int' lvalue Var 0x13380dec0 'msg_timeout' 'int'     |   `-CallExpr 0x133827658 <col:17, col:39> 'int'     |     `-ImplicitCastExpr 0x133827640 <col:17> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x1338275e8 <col:17> 'int ()' Function 0x133827530 'slurm_get_msg_timeout' 'int ()'     |-IfStmt 0x1338278b8 <line:13:2, line:14:38>     | |-BinaryOperator 0x1338276f8 <line:13:6, col:17> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1338276b8 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1338276d8 <col:17> 'int' 0     | `-BinaryOperator 0x133827898 <line:14:3, col:38> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x133827738 <col:3> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x133827718 <col:3> 'int' lvalue Var 0x13380df78 'timeout' 'int'     |   `-CallExpr 0x133827878 <col:13, col:38> 'int'     |     `-ImplicitCastExpr 0x133827860 <col:13> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x133827840 <col:13> 'int ()' Function 0x133827788 'slurm_get_prolog_timeout' 'int ()'     |-CallExpr 0x133827af8 <line:16:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1338279b8 <col:2> 'int ()' Function 0x133827900 'slurm_mutex_lock' 'int ()'     | `-UnaryOperator 0x133827ae0 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x133827a98 <col:20, col:26> '<dependent type>' contains-errors lvalue ->config_mutex     |     `-RecoveryExpr 0x133827a78 <col:20> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x133827d78 <line:17:2, col:34> 'char *' contains-errors '='     | |-DeclRefExpr 0x133827b20 <col:2> 'char *' lvalue Var 0x13380e140 'my_epilog' 'char *'     | `-CallExpr 0x133827d50 <col:14, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x133827c20 <col:14> 'int ()' Function 0x133827b68 'xstrdup' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x133827d08 <col:22, col:28> '<dependent type>' contains-errors lvalue ->epilog     |     `-RecoveryExpr 0x133827ce8 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133827fb8 <line:18:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x133827e78 <col:2> 'int ()' Function 0x133827dc0 'slurm_mutex_unlock' 'int ()'     | `-UnaryOperator 0x133827fa0 <col:21, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x133827f58 <col:22, col:28> '<dependent type>' contains-errors lvalue ->config_mutex     |     `-RecoveryExpr 0x133827f38 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133828148 <line:20:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1338280c0 <col:2> 'int ()' Function 0x133828008 '_wait_for_job_running_prolog' 'int ()'     | `-CXXDependentScopeMemberExpr 0x133828100 <col:31, col:40> '<dependent type>' contains-errors lvalue ->jobid     |   `-RecoveryExpr 0x1338280e0 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x133828f10 <line:22:2, line:27:40> has_else     | |-RecoveryExpr 0x1338281a8 <line:22:6, col:27> '_Bool' contains-errors     | |-BinaryOperator 0x133828cf0 <line:23:3, line:24:35> 'int' contains-errors '='     | | |-DeclRefExpr 0x1338281c8 <line:23:3> 'int' lvalue Var 0x13380e010 'error_code' 'int'     | | `-CallExpr 0x133828ca0 <col:16, line:24:35> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1338282c8 <line:23:16> 'int ()' Function 0x133828210 '_run_job_script' 'int ()'     | |   |-StringLiteral 0x133828330 <col:32> 'char[4]' lvalue \"STR\"     | |   |-DeclRefExpr 0x133828350 <col:39> 'char *' lvalue Var 0x13380e140 'my_epilog' 'char *'     | |   |-CXXDependentScopeMemberExpr 0x133828390 <col:50, col:59> '<dependent type>' contains-errors lvalue ->jobid     | |   | `-RecoveryExpr 0x133828370 <col:50> '<dependent type>' contains-errors lvalue     | |   |-UnaryOperator 0x133828c00 <line:24:11, col:12> 'int' prefix '-'     | |   | `-IntegerLiteral 0x1338283d8 <col:12> 'int' 1     | |   |-DeclRefExpr 0x133828c18 <col:15> 'char **' contains-errors lvalue Var 0x13380e208 'my_env' 'char **'     | |   `-CXXDependentScopeMemberExpr 0x133828c58 <col:23, col:32> '<dependent type>' contains-errors lvalue ->uid     | |     `-RecoveryExpr 0x133828c38 <col:23> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x133828ef0 <line:26:3, line:27:40> 'int' contains-errors '='     |   |-DeclRefExpr 0x133828d10 <line:26:3> 'int' lvalue Var 0x13380e010 'error_code' 'int'     |   `-CallExpr 0x133828ea0 <col:16, line:27:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x133828d30 <line:26:16> 'int ()' Function 0x133828210 '_run_job_script' 'int ()'     |     |-StringLiteral 0x133828d50 <col:32> 'char[4]' lvalue \"STR\"     |     |-DeclRefExpr 0x133828d70 <col:39> 'char *' lvalue Var 0x13380e140 'my_epilog' 'char *'     |     |-CXXDependentScopeMemberExpr 0x133828db0 <col:50, col:59> '<dependent type>' contains-errors lvalue ->jobid     |     | `-RecoveryExpr 0x133828d90 <col:50> '<dependent type>' contains-errors lvalue     |     |-RecoveryExpr 0x133828df8 <line:27:11> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x133828e18 <col:20> 'char **' contains-errors lvalue Var 0x13380e208 'my_env' 'char **'     |     `-CXXDependentScopeMemberExpr 0x133828e58 <col:28, col:37> '<dependent type>' contains-errors lvalue ->uid     |       `-RecoveryExpr 0x133828e38 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x133829078 <line:29:2, col:17> 'int'     | |-ImplicitCastExpr 0x133829060 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x133829020 <col:2> 'int ()' Function 0x133828f68 'xfree' 'int ()'     | `-ImplicitCastExpr 0x1338290a0 <col:8> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x133829040 <col:8> 'char *' lvalue Var 0x13380e140 'my_epilog' 'char *'     |-CallExpr 0x1338291f0 <line:30:2, col:21> 'int' contains-errors     | |-ImplicitCastExpr 0x1338291d8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x133829198 <col:2> 'int ()' Function 0x1338290e0 '_destroy_env' 'int ()'     | `-ImplicitCastExpr 0x133829218 <col:15> 'char **' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x1338291b8 <col:15> 'char **' contains-errors lvalue Var 0x13380e208 'my_env' 'char **'     |-IfStmt 0x133829708 <line:33:2, line:36:2>     | |-BinaryOperator 0x1338294f0 <line:33:6, col:35> 'int' contains-errors '>='     | | |-DeclRefExpr 0x133829450 <col:6> 'int' lvalue Var 0x13380e090 'diff_time' 'int'     | | `-ParenExpr 0x1338294d0 <col:19, col:35> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x1338294b0 <col:20, col:34> '<dependent type>' contains-errors '\/'     | |     |-RecoveryExpr 0x133829470 <col:20> '<dependent type>' contains-errors lvalue     | |     `-IntegerLiteral 0x133829490 <col:34> 'int' 2     | `-CompoundStmt 0x1338296f0 <col:38, line:36:2>     |   `-CallExpr 0x1338296b8 <line:34:3, line:35:33> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1338295f0 <line:34:3> 'int ()' Function 0x133829538 'info' 'int ()'     |     |-StringLiteral 0x133829610 <col:8> 'char[4]' lvalue \"STR\"     |     |-CXXDependentScopeMemberExpr 0x133829650 <line:35:8, col:17> '<dependent type>' contains-errors lvalue ->jobid     |     | `-RecoveryExpr 0x133829630 <col:8> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x133829698 <col:24> 'int' lvalue Var 0x13380e090 'diff_time' 'int'     `-ReturnStmt 0x133829760 <line:38:2, col:9>       `-ImplicitCastExpr 0x133829748 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x133829728 <col:9> 'int' lvalue Var 0x13380e010 'error_code' 'int' ","19871":"`-FunctionDecl 0x159808438  line:1:1 invalid extract_l3_ipv4 'int (struct conn_key *, const void *, int, const char **, int)'   |-ParmVarDecl 0x159128648 <col:17, col:34> col:34 used key 'struct conn_key *'   |-ParmVarDecl 0x1591286f8 <col:39, col:51> col:51 used data 'const void *'   |-ParmVarDecl 0x159128790 <col:57, col:64> col:64 invalid size 'int'   |-ParmVarDecl 0x159808248 <line:2:17, col:30> col:30 used new_data 'const char **'   |-ParmVarDecl 0x1598082c8 <col:40, col:45> col:45 invalid validate_checksum 'int'   `-CompoundStmt 0x15980c1f0 <line:3:1, line:39:1>     |-DeclStmt 0x159808748 <line:4:5, col:38>     | |-RecordDecl 0x159808508 <col:11, col:18> col:18 struct ip_header     | `-VarDecl 0x159808678 <col:5, col:34> col:29 used ip 'const struct ip_header *' cinit     |   `-ImplicitCastExpr 0x159808718 <col:34> 'const struct ip_header *' <BitCast>     |     `-ImplicitCastExpr 0x159808700 <col:34> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x1598086e0 <col:34> 'const void *' lvalue ParmVar 0x1591286f8 'data' 'const void *'     |-UnaryExprOrTypeTraitExpr 0x1598087d0 <line:5:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x1598087b0 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159808ae8 <line:7:5, line:11:5>     | |-ImplicitCastExpr 0x159808810 <line:7:9> 'const char **' <LValueToRValue>     | | `-DeclRefExpr 0x1598087f0 <col:9> 'const char **' lvalue ParmVar 0x159808248 'new_data' 'const char **'     | `-CompoundStmt 0x159808ad0 <col:19, line:11:5>     |   `-IfStmt 0x159808ab0 <line:8:9, line:10:9>     |     |-CallExpr 0x159808a60 <line:8:13, col:46> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x159808980 <col:13> 'int ()' Function 0x1598088c8 'OVS_UNLIKELY' 'int ()'     |     | `-BinaryOperator 0x159808a40 <col:26, col:33> 'int' contains-errors '<'     |     |   |-RecoveryExpr 0x1598089a0 <col:26> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x159808a20 <col:33> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x159808aa0 <col:49, line:10:9>     |-IfStmt 0x1598090a8 <line:15:5, line:24:5>     | |-ImplicitCastExpr 0x159808cf0 <line:15:9> 'const char **' <LValueToRValue>     | | `-DeclRefExpr 0x159808cd0 <col:9> 'const char **' lvalue ParmVar 0x159808248 'new_data' 'const char **'     | `-CompoundStmt 0x159809088 <col:19, line:24:5>     |   |-IfStmt 0x159808e50 <line:16:9, line:18:9>     |   | |-CallExpr 0x159808e00 <line:16:13, col:48> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x159808d08 <col:13> 'int ()' Function 0x1598088c8 'OVS_UNLIKELY' 'int ()'     |   | | `-BinaryOperator 0x159808de0 <col:26, col:35> 'int' contains-errors '<'     |   | |   |-RecoveryExpr 0x159808da0 <col:26> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x159808dc0 <col:35> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x159808e40 <col:51, line:18:9>     |   `-IfStmt 0x159808fa0 <line:19:9, line:21:9>     |     |-CallExpr 0x159808f50 <line:19:13, col:39> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x159808e70 <col:13> 'int ()' Function 0x1598088c8 'OVS_UNLIKELY' 'int ()'     |     | `-BinaryOperator 0x159808f30 <col:26, col:33> 'int' contains-errors '<'     |     |   |-RecoveryExpr 0x159808e90 <col:26> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x159808f10 <col:33> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x159808f90 <col:42, line:21:9>     |-IfStmt 0x15980bc60 <line:26:5, line:28:5>     | |-CallExpr 0x15980bc28 <line:26:9, col:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1598091a8 <col:9> 'int ()' Function 0x1598090f0 'IP_IS_FRAGMENT' 'int ()'     | | `-RecoveryExpr 0x15980bc00 <col:24, col:28> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1598091c8 <col:24> 'const struct ip_header *' lvalue Var 0x159808678 'ip' 'const struct ip_header *'     | `-CompoundStmt 0x15980bc50 <col:42, line:28:5>     |-IfStmt 0x15980be10 <line:30:5, line:32:5>     | |-RecoveryExpr 0x15980bde0 <line:30:9, col:52> '_Bool' contains-errors     | `-CompoundStmt 0x15980be00 <col:55, line:32:5>     |-BinaryOperator 0x15980bf80 <line:34:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15980bed8 <col:5, col:19> '<dependent type>' contains-errors lvalue .ipv4     | | `-CXXDependentScopeMemberExpr 0x15980be90 <col:5, col:14> '<dependent type>' contains-errors lvalue .addr     | |   `-RecoveryExpr 0x15980be68 <col:5, col:10> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15980be30 <col:5> 'struct conn_key *' lvalue ParmVar 0x159128648 'key' 'struct conn_key *'     | `-RecoveryExpr 0x15980bf58 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15980bf20 <col:26> 'const struct ip_header *' lvalue Var 0x159808678 'ip' 'const struct ip_header *'     |-BinaryOperator 0x15980c0f0 <line:35:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15980c048 <col:5, col:19> '<dependent type>' contains-errors lvalue .ipv4     | | `-CXXDependentScopeMemberExpr 0x15980c000 <col:5, col:14> '<dependent type>' contains-errors lvalue .addr     | |   `-RecoveryExpr 0x15980bfd8 <col:5, col:10> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15980bfa0 <col:5> 'struct conn_key *' lvalue ParmVar 0x159128648 'key' 'struct conn_key *'     | `-RecoveryExpr 0x15980c0c8 <col:26, col:30> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15980c090 <col:26> 'const struct ip_header *' lvalue Var 0x159808678 'ip' 'const struct ip_header *'     `-BinaryOperator 0x15980c1d0 <line:36:5, col:25> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x15980c148 <col:5, col:10> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x15980c110 <col:5> 'struct conn_key *' lvalue ParmVar 0x159128648 'key' 'struct conn_key *'       `-RecoveryExpr 0x15980c1a8 <col:21, col:25> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x15980c170 <col:21> 'const struct ip_header *' lvalue Var 0x159808678 'ip' 'const struct ip_header *' ","19964":"`-FunctionDecl 0x13a80a790  col:34 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x13a80a890 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x13a80a8f8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x13a80a838 <<invalid sloc>> Implicit 952 ","19442":"`-FunctionDecl 0x147026748  line:1:12 bpf_map_mmap 'int (struct file *, struct vm_area_struct *)' static   |-ParmVarDecl 0x14700e248 <col:25, col:38> col:38 used filp 'struct file *'   |-ParmVarDecl 0x147026628 <col:44, col:67> col:67 used vma 'struct vm_area_struct *'   `-CompoundStmt 0x147029ce0 <line:2:1, line:44:1>     |-DeclStmt 0x147026a98 <line:3:2, col:42>     | |-RecordDecl 0x147026848 <col:2, col:9> col:9 struct bpf_map     | `-VarDecl 0x1470269b8 <col:2, col:30> col:18 used map 'struct bpf_map *' cinit     |   `-RecoveryExpr 0x147026a58 <col:24, col:30> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x147026a20 <col:24> 'struct file *' lvalue ParmVar 0x14700e248 'filp' 'struct file *'     |-DeclStmt 0x147026b30 <line:4:2, col:9>     | `-VarDecl 0x147026ac8 <col:2, col:6> col:6 used err 'int'     |-IfStmt 0x147027078 <line:6:2, line:8:11>     | |-BinaryOperator 0x147026fb0 <line:6:6, line:7:29> 'int' contains-errors '||'     | | |-BinaryOperator 0x147026e18 <line:6:6, col:56> 'int' contains-errors '||'     | | | |-UnaryOperator 0x147026c08 <col:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x147026bf0 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | | | |   `-CXXDependentScopeMemberExpr 0x147026ba8 <col:7, col:17> '<dependent type>' contains-errors lvalue ->map_mmap     | | | |     `-RecoveryExpr 0x147026b80 <col:7, col:12> '<dependent type>' contains-errors lvalue     | | | |       `-DeclRefExpr 0x147026b48 <col:7> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     | | | `-CallExpr 0x147026dd8 <col:29, col:56> 'int' contains-errors     | | |   |-ImplicitCastExpr 0x147026dc0 <col:29> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x147026d50 <col:29> 'int ()' Function 0x147026c98 'map_value_has_spin_lock' 'int ()'     | | |   `-ImplicitCastExpr 0x147026e00 <col:53> 'struct bpf_map *' contains-errors <LValueToRValue>     | | |     `-DeclRefExpr 0x147026d70 <col:53> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     | | `-CallExpr 0x147026f70 <line:7:6, col:29> 'int' contains-errors     | |   |-ImplicitCastExpr 0x147026f58 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x147026f18 <col:6> 'int ()' Function 0x147026e60 'map_value_has_timer' 'int ()'     | |   `-ImplicitCastExpr 0x147026f98 <col:26> 'struct bpf_map *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x147026f38 <col:26> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     | `-ReturnStmt 0x147027068 <line:8:3, col:11>     |   `-UnaryOperator 0x147027050 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x147027038 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x147027018 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1470271f8 <line:10:2, line:11:11>     | |-RecoveryExpr 0x147027130 <line:10:6, col:33> '_Bool' contains-errors     | `-ReturnStmt 0x1470271e8 <line:11:3, col:11>     |   `-UnaryOperator 0x1470271d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x1470271b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x147027198 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x147027390 <line:13:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1470272f8 <col:2> 'int ()' Function 0x147027240 'mutex_lock' 'int ()'     | `-UnaryOperator 0x147027378 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x147027350 <col:14, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x147027318 <col:14> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     |-IfStmt 0x1470294f0 <line:15:2, line:25:2>     | |-BinaryOperator 0x147027470 <line:15:6, col:22> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x1470273f0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1470273b8 <col:6> 'struct vm_area_struct *' lvalue ParmVar 0x147026628 'vma' 'struct vm_area_struct *'     | | `-RecoveryExpr 0x147027450 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1470294d0 <col:32, line:25:2>     |   |-IfStmt 0x147029288 <line:16:3, line:19:3>     |   | |-RecoveryExpr 0x1470274c8 <line:16:7, col:12> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x147027490 <col:7> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     |   | `-CompoundStmt 0x147029268 <col:20, line:19:3>     |   |   |-BinaryOperator 0x1470275c8 <line:17:4, col:11> 'int' contains-errors '='     |   |   | |-DeclRefExpr 0x1470274f0 <col:4> 'int' lvalue Var 0x147026ac8 'err' 'int'     |   |   | `-UnaryOperator 0x1470275b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   |   `-ImplicitCastExpr 0x147027598 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |   |     `-RecoveryExpr 0x147027578 <col:11> '<dependent type>' contains-errors lvalue     |   |   `-GotoStmt 0x147029250 <line:18:4, col:9> 'out' 0x147029200     |   `-IfStmt 0x1470294b0 <line:21:3, line:24:3>     |     |-BinaryOperator 0x147029360 <line:21:7, col:24> '<dependent type>' contains-errors '&'     |     | |-RecoveryExpr 0x1470292e0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x1470292a8 <col:7> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     |     | `-RecoveryExpr 0x147029340 <col:24> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x147029490 <col:43, line:24:3>     |       |-BinaryOperator 0x147029458 <line:22:4, col:11> 'int' contains-errors '='     |       | |-DeclRefExpr 0x147029380 <col:4> 'int' lvalue Var 0x147026ac8 'err' 'int'     |       | `-UnaryOperator 0x147029440 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       |   `-ImplicitCastExpr 0x147029428 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       |     `-RecoveryExpr 0x147029408 <col:11> '<dependent type>' contains-errors lvalue     |       `-GotoStmt 0x147029478 <line:23:4, col:9> 'out' 0x147029200     |-BinaryOperator 0x1470295f8 <line:28:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x147029548 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147029510 <col:2> 'struct vm_area_struct *' lvalue ParmVar 0x147026628 'vma' 'struct vm_area_struct *'     | `-UnaryOperator 0x1470295e0 <col:16, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1470295c0 <col:17> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x147029698 <line:29:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x147029650 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147029618 <col:2> 'struct vm_area_struct *' lvalue ParmVar 0x147026628 'vma' 'struct vm_area_struct *'     | `-DeclRefExpr 0x147029678 <col:25> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     |-BinaryOperator 0x147029930 <line:35:2, col:35> 'int' contains-errors '='     | |-DeclRefExpr 0x1470297f8 <col:2> 'int' lvalue Var 0x147026ac8 'err' 'int'     | `-CallExpr 0x147029900 <col:8, col:35> '<dependent type>' contains-errors     |   |-CXXDependentScopeMemberExpr 0x147029878 <col:8, col:18> '<dependent type>' contains-errors lvalue ->map_mmap     |   | `-RecoveryExpr 0x147029850 <col:8, col:13> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x147029818 <col:8> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     |   |-DeclRefExpr 0x1470298c0 <col:27> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     |   `-DeclRefExpr 0x1470298e0 <col:32> 'struct vm_area_struct *' lvalue ParmVar 0x147026628 'vma' 'struct vm_area_struct *'     |-IfStmt 0x1470299a0 <line:36:2, line:37:8>     | |-ImplicitCastExpr 0x147029970 <line:36:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x147029950 <col:6> 'int' lvalue Var 0x147026ac8 'err' 'int'     | `-GotoStmt 0x147029988 <line:37:3, col:8> 'out' 0x147029200     |-IfStmt 0x147029ab8 <line:39:2, line:40:16>     | |-RecoveryExpr 0x147029a20 <line:39:6, col:22> '_Bool' contains-errors     | `-UnaryOperator 0x147029aa0 <line:40:3, col:16> '<dependent type>' contains-errors postfix '++' cannot overflow     |   `-RecoveryExpr 0x147029a78 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x147029a40 <col:3> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     |-LabelStmt 0x147029c78 <line:41:1, line:42:33> 'out'     | `-CallExpr 0x147029c50 <col:2, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x147029bb8 <col:2> 'int ()' Function 0x147029b00 'mutex_unlock' 'int ()'     |   `-UnaryOperator 0x147029c38 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x147029c10 <col:16, col:21> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x147029bd8 <col:16> 'struct bpf_map *' contains-errors lvalue Var 0x1470269b8 'map' 'struct bpf_map *'     `-ReturnStmt 0x147029cd0 <line:43:2, col:9>       `-ImplicitCastExpr 0x147029cb8 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x147029c98 <col:9> 'int' lvalue Var 0x147026ac8 'err' 'int' ","19843":"`-FunctionDecl 0x146809bb0  col:16 implicit used strpbrk 'char *(const char *, const char *)' extern   |-ParmVarDecl 0x146809cb0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x146809d18 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x146809c58 <<invalid sloc>> Implicit 895 ","19482":"`-FunctionDecl 0x13d0088d8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13d0089d8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13d008a40 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13d008aa8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13d008980 <<invalid sloc>> Implicit 900 ","19693":"`-FunctionDecl 0x127128238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x127128158 <col:8> col:8 HttpHealthCheckerImplTest 'int'   |-ParmVarDecl 0x1271280d8 <col:35> col:35 ProxyConnectionClose 'int'   `-CompoundStmt 0x1271415a0 <col:57, line:21:1>     |-CallExpr 0x1271284c8 <line:2:3, col:30> 'int'     | `-ImplicitCastExpr 0x1271284b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x127128460 <col:3> 'int ()' Function 0x1271283a8 'setupNoServiceValidationHC' 'int ()'     |-CallExpr 0x127140af0 <line:7:3, col:23> 'int'     | `-ImplicitCastExpr 0x127140ad8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x127140ab8 <col:3> 'int ()' Function 0x127140a00 'expectSessionCreate' 'int ()'     |-CallExpr 0x127140c48 <line:8:3, col:23> 'int'     | |-ImplicitCastExpr 0x127140c30 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127140bf0 <col:3> 'int ()' Function 0x127140b38 'expectStreamCreate' 'int ()'     | `-IntegerLiteral 0x127140c10 <col:22> 'int' 0     |-CallExpr 0x127141478 <line:17:3, col:23> 'int'     | |-ImplicitCastExpr 0x127141460 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x127141420 <col:3> 'int ()' Function 0x127141368 'expectClientCreate' 'int ()'     | `-IntegerLiteral 0x127141440 <col:22> 'int' 0     `-CallExpr 0x1271414f8 <line:18:3, col:23> 'int'       |-ImplicitCastExpr 0x1271414e0 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1271414a0 <col:3> 'int ()' Function 0x127140b38 'expectStreamCreate' 'int ()'       `-IntegerLiteral 0x1271414c0 <col:22> 'int' 0 ","19610":"`-FunctionDecl 0x159128a88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x159128928 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x1591289a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x159143d90 <col:64, line:40:1>     |-DeclStmt 0x159128c78 <line:2:3, line:3:70>     | `-VarDecl 0x159128b58 <line:2:3, col:9> col:9 used params 'int *' auto     |-CallExpr 0x159128f98 <line:5:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159128df0 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x159128e10 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x159128f50 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x159128f10 <col:30> 'int ()' Function 0x159128e58 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x159128f30 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x159128f78 <col:47> 'int' 1     |-CallExpr 0x159142188 <line:6:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159128fd0 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x159142000 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x159142140 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x159142100 <col:30> 'int ()' Function 0x159142048 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x159142120 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x159142168 <col:48> 'int' 1     |-DeclStmt 0x1591423d0 <line:8:3, col:68>     | `-VarDecl 0x1591421d8 <col:3, col:23> col:23 invalid input 'const int *'     |-CallExpr 0x159142738 <line:11:3, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159142590 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1591425b0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x1591426f0 <col:30, col:49> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1591426b0 <col:30> 'int ()' Function 0x1591425f8 'NumDimensions' 'int ()'     | | `-RecoveryExpr 0x1591426d0 <col:44> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x159142718 <col:52> 'int' 4     |-DeclStmt 0x1591428b8 <line:13:3, col:32>     | `-VarDecl 0x159142788 <col:3, col:28> col:8 used data_type 'int' auto cinit     |   `-CXXDependentScopeMemberExpr 0x159142870 <col:20, col:28> '<dependent type>' contains-errors lvalue ->type     |     `-RecoveryExpr 0x159142850 <col:20> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x159142cf8 <line:20:3, col:44>     | `-VarDecl 0x159142c30 <col:3, col:34> col:13 used block_size 'const int' cinit     |   `-RecoveryExpr 0x159142cd0 <col:26, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x159142c98 <col:26> 'int *' lvalue Var 0x159128b58 'params' 'int *'     |-DeclStmt 0x159142e98 <line:21:3, col:48>     | `-VarDecl 0x159142d28 <col:3, col:47> col:13 used input_height 'const int' cinit     |   `-ArraySubscriptExpr 0x159142e78 <col:28, col:47> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x159142e60 <col:28, col:41> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x159142df8 <col:28, col:41> '<dependent type>' contains-errors lvalue ->data     |     |   `-CXXDependentScopeMemberExpr 0x159142db0 <col:28, col:35> '<dependent type>' contains-errors lvalue ->dims     |     |     `-RecoveryExpr 0x159142d90 <col:28> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x159142e40 <col:46> 'int' 1     |-DeclStmt 0x159143038 <line:22:3, col:47>     | `-VarDecl 0x159142ec8 <col:3, col:46> col:13 used input_width 'const int' cinit     |   `-ArraySubscriptExpr 0x159143018 <col:27, col:46> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x159143000 <col:27, col:40> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x159142f98 <col:27, col:40> '<dependent type>' contains-errors lvalue ->data     |     |   `-CXXDependentScopeMemberExpr 0x159142f50 <col:27, col:34> '<dependent type>' contains-errors lvalue ->dims     |     |     `-RecoveryExpr 0x159142f30 <col:27> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x159142fe0 <col:45> 'int' 2     |-DeclStmt 0x1591431d8 <line:23:3, col:50>     | `-VarDecl 0x159143068 <col:3, col:49> col:13 used input_channels 'const int' cinit     |   `-ArraySubscriptExpr 0x1591431b8 <col:30, col:49> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x1591431a0 <col:30, col:43> '<dependent type>' contains-errors <LValueToRValue>     |     | `-CXXDependentScopeMemberExpr 0x159143138 <col:30, col:43> '<dependent type>' contains-errors lvalue ->data     |     |   `-CXXDependentScopeMemberExpr 0x1591430f0 <col:30, col:37> '<dependent type>' contains-errors lvalue ->dims     |     |     `-RecoveryExpr 0x1591430d0 <col:30> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x159143180 <col:48> 'int' 3     |-DeclStmt 0x159143300 <line:24:3, col:48>     | `-VarDecl 0x159143208 <col:3, col:38> col:7 used output_height 'int' cinit     |   `-BinaryOperator 0x1591432e0 <col:23, col:38> 'int' contains-errors '*'     |     |-ImplicitCastExpr 0x1591432b0 <col:23> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x159143270 <col:23> 'const int' contains-errors lvalue Var 0x159142d28 'input_height' 'const int'     |     `-ImplicitCastExpr 0x1591432c8 <col:38> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x159143290 <col:38> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'     |-DeclStmt 0x159143428 <line:25:3, col:46>     | `-VarDecl 0x159143330 <col:3, col:36> col:7 used output_width 'int' cinit     |   `-BinaryOperator 0x159143408 <col:22, col:36> 'int' contains-errors '*'     |     |-ImplicitCastExpr 0x1591433d8 <col:22> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x159143398 <col:22> 'const int' contains-errors lvalue Var 0x159142ec8 'input_width' 'const int'     |     `-ImplicitCastExpr 0x1591433f0 <col:36> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x1591433b8 <col:36> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'     |-DeclStmt 0x1591435a8 <line:26:3, col:65>     | `-VarDecl 0x159143458 <col:3, col:55> col:7 used output_channels 'int' cinit     |   `-BinaryOperator 0x159143588 <col:25, col:55> 'int' contains-errors '\/'     |     |-BinaryOperator 0x159143530 <col:25, col:42> 'int' contains-errors '\/'     |     | |-ImplicitCastExpr 0x159143500 <col:25> 'int' contains-errors <LValueToRValue>     |     | | `-DeclRefExpr 0x1591434c0 <col:25> 'const int' contains-errors lvalue Var 0x159143068 'input_channels' 'const int'     |     | `-ImplicitCastExpr 0x159143518 <col:42> 'int' contains-errors <LValueToRValue>     |     |   `-DeclRefExpr 0x1591434e0 <col:42> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'     |     `-ImplicitCastExpr 0x159143570 <col:55> 'int' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x159143550 <col:55> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'     |-CallExpr 0x1591436b0 <line:28:3, col:70> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1591435c0 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1591435e0 <col:21> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x159143600 <col:30> 'const int' contains-errors lvalue Var 0x159142d28 'input_height' 'const int'     | `-BinaryOperator 0x159143690 <col:44, col:60> 'int' contains-errors '\/'     |   |-ImplicitCastExpr 0x159143660 <col:44> 'int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x159143620 <col:44> 'int' contains-errors lvalue Var 0x159143208 'output_height' 'int'     |   `-ImplicitCastExpr 0x159143678 <col:60> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x159143640 <col:60> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'     |-CallExpr 0x1591437d8 <line:29:3, col:68> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1591436e8 <col:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x159143708 <col:21> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x159143728 <col:30> 'const int' contains-errors lvalue Var 0x159142ec8 'input_width' 'const int'     | `-BinaryOperator 0x1591437b8 <col:43, col:58> 'int' contains-errors '\/'     |   |-ImplicitCastExpr 0x159143788 <col:43> 'int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x159143748 <col:43> 'int' contains-errors lvalue Var 0x159143330 'output_width' 'int'     |   `-ImplicitCastExpr 0x1591437a0 <col:58> 'int' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x159143768 <col:58> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'     `-CallExpr 0x159143958 <line:30:3, line:31:62> '<dependent type>' contains-errors       |-DeclRefExpr 0x159143810 <line:30:3> 'int ()' Function 0x159128d38 'TF_LITE_ENSURE_EQ' 'int ()'       |-RecoveryExpr 0x159143830 <col:21> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x159143850 <col:30> 'const int' contains-errors lvalue Var 0x159143068 'input_channels' 'const int'       `-BinaryOperator 0x159143938 <line:31:21, col:52> 'int' contains-errors '*'         |-BinaryOperator 0x1591438e0 <col:21, col:39> 'int' contains-errors '*'         | |-ImplicitCastExpr 0x1591438b0 <col:21> 'int' contains-errors <LValueToRValue>         | | `-DeclRefExpr 0x159143870 <col:21> 'int' contains-errors lvalue Var 0x159143458 'output_channels' 'int'         | `-ImplicitCastExpr 0x1591438c8 <col:39> 'int' contains-errors <LValueToRValue>         |   `-DeclRefExpr 0x159143890 <col:39> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int'         `-ImplicitCastExpr 0x159143920 <col:52> 'int' contains-errors <LValueToRValue>           `-DeclRefExpr 0x159143900 <col:52> 'const int' contains-errors lvalue Var 0x159142c30 'block_size' 'const int' ","19487":"`-FunctionDecl 0x126128378  line:2:15 invalid warn_crc32c_csum_combine 'int (int, int, int, int)' static   |-ParmVarDecl 0x1261280f0 <col:40, col:47> col:47 invalid csum 'int'   |-ParmVarDecl 0x126128170 <col:53, col:60> col:60 invalid csum2 'int'   |-ParmVarDecl 0x1261281f0 <line:3:12, col:16> col:16 offset 'int'   |-ParmVarDecl 0x126128270 <col:24, col:28> col:28 len 'int'   `-CompoundStmt 0x1261287c8 <line:4:1, line:8:11>     |-CallExpr 0x126128738 <line:5:2, line:7:11> 'int'     | |-ImplicitCastExpr 0x126128720 <line:5:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1261285a0 <col:2> 'int ()' Function 0x1261284e8 'net_warn_ratelimited' 'int ()'     | |-ImplicitCastExpr 0x126128768 <line:6:3> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x126128600 <col:3> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x126128780 <line:7:3> 'const char *' <ArrayToPointerDecay>     |   `-PredefinedExpr 0x1261286d0 <col:3> 'const char[25]' lvalue __func__     |     `-StringLiteral 0x1261286a0 <col:3> 'const char[25]' lvalue \"warn_crc32c_csum_combine\"     `-ReturnStmt 0x1261287b8 <line:8:2, col:9>       `-IntegerLiteral 0x126128798 <col:9> 'int' 0 ","19595":"`-FunctionDecl 0x123928338  col:10 invalid is_sameYZC 'int (const unsigned int, const unsigned int, const unsigned int)'   |-ParmVarDecl 0x1239280f0 <col:21, col:40> col:40 size_y 'const unsigned int'   |-ParmVarDecl 0x123928170 <col:48, col:67> col:67 size_z 'const unsigned int'   `-ParmVarDecl 0x1239281f0 <col:75, col:94> col:94 size_c 'const unsigned int' ","19940":"`-FunctionDecl 0x147128758  line:1:12 epass2003_match_card 'int (struct sc_card *)' static   |-ParmVarDecl 0x147128648 <col:33, col:49> col:49 used card 'struct sc_card *'   `-CompoundStmt 0x147141050 <line:2:1, line:11:1>     |-DeclStmt 0x147140ad0 <line:3:2, col:7>     | `-VarDecl 0x147140a68 <col:2, col:6> col:6 used r 'int'     |-CallExpr 0x147140c90 <line:5:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147140c10 <col:2> 'int ()' Function 0x147140b58 'LOG_FUNC_CALLED' 'int ()'     | `-RecoveryExpr 0x147140c68 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x147140c30 <col:18> 'struct sc_card *' lvalue ParmVar 0x147128648 'card' 'struct sc_card *'     |-BinaryOperator 0x147140f38 <line:6:2, col:53> 'int' contains-errors '='     | |-DeclRefExpr 0x147140cb8 <col:2> 'int' lvalue Var 0x147140a68 'r' 'int'     | `-CallExpr 0x147140f00 <col:6, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x147140db8 <col:6> 'int ()' Function 0x147140d00 '_sc_match_atr' 'int ()'     |   |-DeclRefExpr 0x147140dd8 <col:20> 'struct sc_card *' lvalue ParmVar 0x147128648 'card' 'struct sc_card *'     |   |-RecoveryExpr 0x147140ee0 <col:26> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x147140e70 <col:42, col:49> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x147140e48 <col:43, col:49> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x147140e10 <col:43> 'struct sc_card *' lvalue ParmVar 0x147128648 'card' 'struct sc_card *'     |-IfStmt 0x147141000 <line:7:2, line:8:10>     | |-BinaryOperator 0x147140fb0 <line:7:6, col:10> 'int' '<'     | | |-ImplicitCastExpr 0x147140f98 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x147140f58 <col:6> 'int' lvalue Var 0x147140a68 'r' 'int'     | | `-IntegerLiteral 0x147140f78 <col:10> 'int' 0     | `-ReturnStmt 0x147140ff0 <line:8:3, col:10>     |   `-IntegerLiteral 0x147140fd0 <col:10> 'int' 0     `-ReturnStmt 0x147141040 <line:10:2, col:9>       `-IntegerLiteral 0x147141020 <col:9> 'int' 1 ","19923":"`-FunctionDecl 0x138027b28  col:8 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x138027c28 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x138027c90 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x138027cf8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x138027bd0 <<invalid sloc>> Implicit 888 ","19368":"`-FunctionDecl 0x14380de88  line:1:14 invalid SelectEval 'int (int *, int *)'   |-ParmVarDecl 0x14380dd28 <col:25, col:40> col:40 referenced invalid context 'int *'   |-ParmVarDecl 0x14380dda8 <col:49, col:61> col:61 invalid node 'int *'   `-CompoundStmt 0x143828470 <col:67, line:59:1>     |-DeclStmt 0x14380e2a0 <line:3:3, line:4:53>     | `-VarDecl 0x14380e028 <line:3:3, col:23> col:23 invalid input_condition 'const int *'     |-DeclStmt 0x14380e3e8 <line:5:3, col:71>     | `-VarDecl 0x14380e2d0 <col:3, col:23> col:23 invalid input_x 'const int *'     |-DeclStmt 0x143827b30 <line:6:3, col:71>     | `-VarDecl 0x143827a18 <col:3, col:23> col:23 invalid input_y 'const int *'     |-RecoveryExpr 0x143827d20 <line:10:3> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x143827d60 <line:17:3, line:46:3>     | |-RecoveryExpr 0x143827d40 <line:17:11> 'int' contains-errors     | `-CompoundStmt 0x1438280d0 <col:17, line:46:3>     |   |-BreakStmt 0x143827d88 <line:18:5>     |   |-BreakStmt 0x143827e90 <line:21:7>     |   |-BreakStmt 0x143827eb8 <line:24:7>     |   |-BreakStmt 0x143827ee0 <line:27:7>     |   |-BreakStmt 0x143827f08 <line:30:7>     |   |-BreakStmt 0x143827f30 <line:33:7>     |   |-BreakStmt 0x143827f58 <line:36:7>     |   |-BreakStmt 0x143827f80 <line:39:7>     |   `-DefaultStmt 0x1438280b0 <line:40:5, col:12>     |     `-NullStmt 0x1438280a8 <col:12>     `-IfStmt 0x143828440 <line:48:3, line:54:3> has_else       |-RecoveryExpr 0x143828128 <line:48:7, col:13> '_Bool' contains-errors       |-CompoundStmt 0x1438282b0 <col:43, line:50:3>       `-IfStmt 0x143828410 <col:10, line:54:3> has_else         |-RecoveryExpr 0x1438282c0 <line:50:14, col:20> '_Bool' contains-errors         |-CompoundStmt 0x143828368 <col:40, line:52:3>         `-CompoundStmt 0x143828400 <col:10, line:54:3> ","19705":"`-FunctionDecl 0x15693ab38  line:1:12 pipe_to_null 'int (struct pipe_inode_info *, struct pipe_buffer *, struct splice_desc *)' static   |-ParmVarDecl 0x15700e248 <col:25, col:49> col:49 info 'struct pipe_inode_info *'   |-ParmVarDecl 0x15693a828 <col:55, col:75> col:75 buf 'struct pipe_buffer *'   |-ParmVarDecl 0x15693a9f8 <line:2:4, col:24> col:24 used sd 'struct splice_desc *'   `-CompoundStmt 0x15693acb0 <line:3:1, line:5:1>     `-ReturnStmt 0x15693aca0 <line:4:2, col:13>       `-RecoveryExpr 0x15693ac78 <col:9, col:13> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x15693ac40 <col:9> 'struct splice_desc *' lvalue ParmVar 0x15693a9f8 'sd' 'struct splice_desc *' ","19868":"`-FunctionDecl 0x132026a98  line:1:1 invalid rsa_sec_decrypt 'int (const struct rsa_public_key *, const struct rsa_private_key *, void *, int *, int, int *, const int)'   |-ParmVarDecl 0x13200e248 <col:17, col:46> col:46 used pub 'const struct rsa_public_key *'   |-ParmVarDecl 0x132026628 <line:2:10, col:40> col:40 used key 'const struct rsa_private_key *'   |-ParmVarDecl 0x1320266a8 <line:3:10, col:16> col:16 used random_ctx 'void *'   |-ParmVarDecl 0x132026778 <col:28, col:48> col:48 invalid random 'int *'   |-ParmVarDecl 0x1320267f8 <line:4:10, col:17> col:17 invalid length 'int'   |-ParmVarDecl 0x132026878 <col:25, col:34> col:34 invalid message 'int *'   |-ParmVarDecl 0x1320268f8 <line:5:10, col:22> col:22 invalid gibberish 'const int'   `-CompoundStmt 0x132029ed0 <line:6:1, line:26:1>     |-CallExpr 0x132026d90 <line:7:3, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132026cd0 <col:3> 'int ()' Function 0x132026c18 'TMP_GMP_DECL' 'int ()'     | |-RecoveryExpr 0x132026d50 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x132026d70 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x132026e80 <line:8:3, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132026dc0 <col:3> 'int ()' Function 0x132026c18 'TMP_GMP_DECL' 'int ()'     | |-RecoveryExpr 0x132026e40 <col:17> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x132026e60 <col:21> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x132026f30 <line:9:3, col:10>     | `-VarDecl 0x132026ec8 <col:3, col:7> col:7 used res 'int'     |-CallExpr 0x132027238 <line:11:3, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132027028 <col:3> 'int ()' Function 0x132026f70 'TMP_GMP_ALLOC' 'int ()'     | |-RecoveryExpr 0x132027218 <col:18> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x1320271c0 <col:21, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x132027140 <col:21> 'int ()' Function 0x132027088 'mpz_size' 'int ()'     |   `-RecoveryExpr 0x132027198 <col:30, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x132027160 <col:30> 'const struct rsa_public_key *' lvalue ParmVar 0x13200e248 'pub' 'const struct rsa_public_key *'     |-CallExpr 0x132027350 <line:12:3, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132027268 <col:3> 'int ()' Function 0x132026f70 'TMP_GMP_ALLOC' 'int ()'     | |-RecoveryExpr 0x132027330 <col:18> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1320272d8 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1320272a0 <col:22> 'const struct rsa_private_key *' lvalue ParmVar 0x132026628 'key' 'const struct rsa_private_key *'     |-CallExpr 0x1320275b8 <line:15:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x132027460 <col:3> 'int ()' Function 0x1320273a8 'mpz_limbs_copy' 'int ()'     | |-RecoveryExpr 0x132027598 <col:18> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x132027498 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x132027538 <col:32, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1320274b8 <col:32> 'int ()' Function 0x132027088 'mpz_size' 'int ()'     |   `-RecoveryExpr 0x132027510 <col:41, col:46> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1320274d8 <col:41> 'const struct rsa_public_key *' lvalue ParmVar 0x13200e248 'pub' 'const struct rsa_public_key *'     `-ReturnStmt 0x132029ec0 <line:25:3, col:10>       `-ImplicitCastExpr 0x132029ea8 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x132029e88 <col:10> 'int' lvalue Var 0x132026ec8 'res' 'int' ","19928":"`-FunctionDecl 0x14180e0c8  line:1:1 invalid gerbv_gdk_draw_amacro 'int (int *, int *, int *, double, int, int)'   |-ParmVarDecl 0x14180dd28 <col:23, col:34> col:34 invalid pixmap 'int *'   |-ParmVarDecl 0x14180dda8 <col:42, col:49> col:49 invalid gc 'int *'   |-ParmVarDecl 0x14180de28 <line:2:9, col:36> col:36 referenced invalid s 'int *'   |-ParmVarDecl 0x14180dea8 <col:39, col:46> col:46 used scale 'double'   |-ParmVarDecl 0x14180df28 <line:3:9, col:14> col:14 used x 'int'   |-ParmVarDecl 0x14180dfa8 <col:17, col:22> col:22 used y 'int'   `-CompoundStmt 0x141827f80 <line:4:1, line:21:1>     |-CallExpr 0x141827498 <line:5:2, col:25> 'int'     | |-ImplicitCastExpr 0x141827480 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14180e300 <col:2> 'int ()' Function 0x14180e248 'dprintf' 'int ()'     | |-ImplicitCastExpr 0x1418274c8 <col:10> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x14180e360 <col:10> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x1418274e0 <col:17> 'const char *' <ArrayToPointerDecay>     |   `-PredefinedExpr 0x141827430 <col:17> 'const char[22]' lvalue __func__     |     `-StringLiteral 0x141827400 <col:17> 'const char[22]' lvalue \"gerbv_gdk_draw_amacro\"     `-WhileStmt 0x141827f60 <line:7:2, line:20:2>       |-BinaryOperator 0x141827570 <line:7:9, col:14> 'int' contains-errors '!='       | |-RecoveryExpr 0x1418274f8 <col:9> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x141827550 <col:14> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x141827f40 <col:20, line:20:2>         |-IfStmt 0x141827e40 <line:8:3, line:17:3> has_else         | |-BinaryOperator 0x141827770 <line:8:7, line:9:18> 'int' contains-errors '&&'         | | |-BinaryOperator 0x141827710 <line:8:7, col:18> 'int' contains-errors '>='         | | | |-CXXDependentScopeMemberExpr 0x1418275b0 <col:7, col:10> '<dependent type>' contains-errors lvalue ->type         | | | | `-RecoveryExpr 0x141827590 <col:7> '<dependent type>' contains-errors lvalue         | | | `-RecoveryExpr 0x1418276f0 <col:18> '<dependent type>' contains-errors lvalue         | | `-BinaryOperator 0x141827750 <line:9:7, col:18> 'int' contains-errors '<='         | |   |-CXXDependentScopeMemberExpr 0x141827650 <col:7, col:10> '<dependent type>' contains-errors lvalue ->type         | |   | `-RecoveryExpr 0x141827630 <col:7> '<dependent type>' contains-errors lvalue         | |   `-RecoveryExpr 0x141827730 <col:18> '<dependent type>' contains-errors lvalue         | |-CompoundStmt 0x141827b00 <col:45, line:13:3>         | | `-CallExpr 0x141827ad0 <line:12:4, col:52> '<dependent type>' contains-errors         | |   |-DeclRefExpr 0x141827900 <col:4> 'int ()' Function 0x14180e248 'dprintf' 'int ()'         | |   |-StringLiteral 0x141827920 <col:12> 'char[4]' lvalue \"STR\"         | |   `-CallExpr 0x141827aa8 <col:19, col:51> '<dependent type>' contains-errors         | |     |-DeclRefExpr 0x141827a20 <col:19> 'int ()' Function 0x141827968 'gerbv_aperture_type_name' 'int ()'         | |     `-CXXDependentScopeMemberExpr 0x141827a60 <col:44, col:47> '<dependent type>' contains-errors lvalue ->type         | |       `-RecoveryExpr 0x141827a40 <col:44> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x141827e28 <line:13:10, line:17:3>         |   `-CallExpr 0x141827df8 <line:14:4, line:16:12> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x141827bf8 <line:14:4> 'int ()' Function 0x141827b40 'GERB_FATAL_ERROR' 'int ()'         |     |-CallExpr 0x141827d50 <line:15:5, col:12> 'int'         |     | |-ImplicitCastExpr 0x141827d38 <col:5> 'int (*)()' <FunctionToPointerDecay>         |     | | `-DeclRefExpr 0x141827cf8 <col:5> 'int ()' Function 0x141827c40 '_' 'int ()'         |     | `-ImplicitCastExpr 0x141827d78 <col:7> 'char *' <ArrayToPointerDecay>         |     |   `-StringLiteral 0x141827d18 <col:7> 'char[4]' lvalue \"STR\"         |     `-CXXDependentScopeMemberExpr 0x141827db0 <line:16:5, col:8> '<dependent type>' contains-errors lvalue ->type         |       `-RecoveryExpr 0x141827d90 <col:5> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x141827f20 <line:19:3, col:10> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x141827e90 <col:3> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x141827e70 <col:3> 'int *' lvalue ParmVar 0x14180de28 's' 'int *'           `-CXXDependentScopeMemberExpr 0x141827ed8 <col:7, col:10> '<dependent type>' contains-errors lvalue ->next             `-RecoveryExpr 0x141827eb8 <col:7> '<dependent type>' contains-errors lvalue ","19902":"`-FunctionDecl 0x154826958  line:1:1 do_trap_no_signal 'int (struct task_struct *, int, char *, struct pt_regs *, long)'   |-ParmVarDecl 0x15480e248 <col:19, col:39> col:39 used tsk 'struct task_struct *'   |-ParmVarDecl 0x15480e2c8 <col:44, col:48> col:48 used trapnr 'int'   |-ParmVarDecl 0x15480e348 <col:56, col:62> col:62 used str 'char *'   |-ParmVarDecl 0x154826768 <line:2:5, col:21> col:21 used regs 'struct pt_regs *'   |-ParmVarDecl 0x1548267e8 <col:27, col:32> col:32 used error_code 'long'   `-CompoundStmt 0x1550085a8 <line:3:1, line:24:1>     |-IfStmt 0x154827190 <line:4:2, line:12:2>     | |-CallExpr 0x154826c28 <line:4:6, col:21> 'int'     | | |-ImplicitCastExpr 0x154826c10 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x154826ba0 <col:6> 'int ()' Function 0x154826ae8 'v8086_mode' 'int ()'     | | `-ImplicitCastExpr 0x154826c50 <col:17> 'struct pt_regs *' <LValueToRValue>     | |   `-DeclRefExpr 0x154826bc0 <col:17> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     | `-CompoundStmt 0x154827170 <col:24, line:12:2>     |   |-IfStmt 0x154827108 <line:6:3, line:10:3>     |   | |-BinaryOperator 0x154826ce0 <line:6:7, col:16> 'int' contains-errors '<'     |   | | |-DeclRefExpr 0x154826c68 <col:7> 'int' lvalue ParmVar 0x15480e2c8 'trapnr' 'int'     |   | | `-RecoveryExpr 0x154826cc0 <col:16> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x1548270f0 <col:29, line:10:3>     |   |   `-IfStmt 0x1548270d0 <line:7:4, line:9:12>     |   |     |-UnaryOperator 0x154827088 <line:7:8, line:8:25> 'int' prefix '!' cannot overflow     |   |     | `-CallExpr 0x154827020 <line:7:9, line:8:25> 'int'     |   |     |   |-ImplicitCastExpr 0x154827008 <line:7:9> 'int (*)()' <FunctionToPointerDecay>     |   |     |   | `-DeclRefExpr 0x154826de0 <col:9> 'int ()' Function 0x154826d28 'handle_vm86_trap' 'int ()'     |   |     |   |-CStyleCastExpr 0x154826fa0 <col:26, col:54> 'struct kernel_vm86_regs *' <BitCast>     |   |     |   | `-ImplicitCastExpr 0x154826f88 <col:54> 'struct pt_regs *' <LValueToRValue> part_of_explicit_cast     |   |     |   |   `-DeclRefExpr 0x154826ea0 <col:54> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     |   |     |   |-ImplicitCastExpr 0x154827058 <line:8:7> 'long' <LValueToRValue>     |   |     |   | `-DeclRefExpr 0x154826fc8 <col:7> 'long' lvalue ParmVar 0x1548267e8 'error_code' 'long'     |   |     |   `-ImplicitCastExpr 0x154827070 <col:19> 'int' <LValueToRValue>     |   |     |     `-DeclRefExpr 0x154826fe8 <col:19> 'int' lvalue ParmVar 0x15480e2c8 'trapnr' 'int'     |   |     `-ReturnStmt 0x1548270c0 <line:9:5, col:12>     |   |       `-IntegerLiteral 0x1548270a0 <col:12> 'int' 0     |   `-ReturnStmt 0x154827160 <line:11:3, col:11>     |     `-UnaryOperator 0x154827148 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x154827128 <col:11> 'int' 1     |-IfStmt 0x155008540 <line:14:2, line:21:2>     | |-UnaryOperator 0x154827328 <line:14:6, col:21> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1548272e8 <col:7, col:21> 'int'     | |   |-ImplicitCastExpr 0x1548272d0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x154827290 <col:7> 'int ()' Function 0x1548271d8 'user_mode' 'int ()'     | |   `-ImplicitCastExpr 0x154827310 <col:17> 'struct pt_regs *' <LValueToRValue>     | |     `-DeclRefExpr 0x1548272b0 <col:17> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     | `-CompoundStmt 0x155008520 <col:24, line:21:2>     |   |-IfStmt 0x1550084d0 <line:15:3, line:19:3>     |   | |-UnaryOperator 0x1548274b8 <line:15:7, col:28> 'int' prefix '!' cannot overflow     |   | | `-CallExpr 0x154827478 <col:8, col:28> 'int'     |   | |   |-ImplicitCastExpr 0x154827460 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x154827420 <col:8> 'int ()' Function 0x154827368 'fixup_exception' 'int ()'     |   | |   `-ImplicitCastExpr 0x1548274a0 <col:24> 'struct pt_regs *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x154827440 <col:24> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     |   | `-CompoundStmt 0x1550084a8 <col:31, line:19:3>     |   |   |-BinaryOperator 0x154827598 <line:16:4, col:29> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x154827530 <col:4, col:16> '<dependent type>' contains-errors lvalue .error_code     |   |   | | `-RecoveryExpr 0x154827508 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x1548274d0 <col:4> 'struct task_struct *' lvalue ParmVar 0x15480e248 'tsk' 'struct task_struct *'     |   |   | `-DeclRefExpr 0x154827578 <col:29> 'long' lvalue ParmVar 0x1548267e8 'error_code' 'long'     |   |   |-BinaryOperator 0x155008290 <line:17:4, col:26> '<dependent type>' contains-errors '='     |   |   | |-CXXDependentScopeMemberExpr 0x155008228 <col:4, col:16> '<dependent type>' contains-errors lvalue .trap_nr     |   |   | | `-RecoveryExpr 0x155008200 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | |   `-DeclRefExpr 0x1548275b8 <col:4> 'struct task_struct *' lvalue ParmVar 0x15480e248 'tsk' 'struct task_struct *'     |   |   | `-DeclRefExpr 0x155008270 <col:26> 'int' lvalue ParmVar 0x15480e2c8 'trapnr' 'int'     |   |   `-CallExpr 0x155008428 <line:18:4, col:29> 'int'     |   |     |-ImplicitCastExpr 0x155008410 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x155008390 <col:4> 'int ()' Function 0x1550082d8 'die' 'int ()'     |   |     |-ImplicitCastExpr 0x155008460 <col:8> 'char *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1550083b0 <col:8> 'char *' lvalue ParmVar 0x15480e348 'str' 'char *'     |   |     |-ImplicitCastExpr 0x155008478 <col:13> 'struct pt_regs *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x1550083d0 <col:13> 'struct pt_regs *' lvalue ParmVar 0x154826768 'regs' 'struct pt_regs *'     |   |     `-ImplicitCastExpr 0x155008490 <col:19> 'long' <LValueToRValue>     |   |       `-DeclRefExpr 0x1550083f0 <col:19> 'long' lvalue ParmVar 0x1548267e8 'error_code' 'long'     |   `-ReturnStmt 0x155008510 <line:20:3, col:10>     |     `-IntegerLiteral 0x1550084f0 <col:10> 'int' 0     `-ReturnStmt 0x155008598 <line:23:2, col:10>       `-UnaryOperator 0x155008580 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x155008560 <col:10> 'int' 1 ","19214":"`-FunctionDecl 0x1411281f8  line:1:1 invalid pfm_register_buffer_fmt 'int (int *)'   |-ParmVarDecl 0x141128128 <col:25, col:43> col:43 invalid fmt 'int *'   `-CompoundStmt 0x1411422a0 <line:2:1, line:26:1>     |-DeclStmt 0x141128348 <line:3:2, col:13>     | `-VarDecl 0x1411282c0 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x141128328 <col:12> 'int' 0     |-IfStmt 0x1411285c0 <line:6:2, col:52>     | |-BinaryOperator 0x1411284f8 <col:6, col:38> 'int' contains-errors '||'     | | |-BinaryOperator 0x141128498 <col:6, col:13> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x141128360 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x141128478 <col:13> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1411284d8 <col:21, col:38> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x1411283d8 <col:21, col:26> '<dependent type>' contains-errors lvalue ->fmt_name     | |   | `-RecoveryExpr 0x1411283b8 <col:21> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x1411284b8 <col:38> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1411285b0 <col:44, col:52>     |   `-UnaryOperator 0x141128598 <col:51, col:52> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x141128580 <col:52> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x141128560 <col:52> '<dependent type>' contains-errors lvalue     |-IfStmt 0x141128768 <line:9:2, col:40>     | |-BinaryOperator 0x1411286a0 <col:6, col:26> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x141128600 <col:6, col:11> '<dependent type>' contains-errors lvalue ->fmt_handler     | | | `-RecoveryExpr 0x1411285e0 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x141128680 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x141128758 <col:32, col:40>     |   `-UnaryOperator 0x141128740 <col:39, col:40> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x141128728 <col:40> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x141128708 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x141141990 <line:13:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1411418e0 <col:2> 'int ()' Function 0x141141828 'spin_lock' 'int ()'     | `-UnaryOperator 0x141141978 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x141141958 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x141141de0 <line:15:2, line:19:2>     | |-CallExpr 0x141141b20 <line:15:6, col:41> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x141141a98 <col:6> 'int ()' Function 0x1411419e0 '__pfm_find_buffer_fmt' 'int ()'     | | `-CXXDependentScopeMemberExpr 0x141141ad8 <col:28, col:33> '<dependent type>' contains-errors lvalue ->fmt_uuid     | |   `-RecoveryExpr 0x141141ab8 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x141141dc0 <col:44, line:19:2>     |   |-BinaryOperator 0x141141d38 <line:17:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x141141c60 <col:3> 'int' lvalue Var 0x1411282c0 'ret' 'int'     |   | `-UnaryOperator 0x141141d20 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x141141d08 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x141141ce8 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x141141da8 <line:18:3, col:8> 'out' 0x141141d58     |-CallExpr 0x141142018 <line:20:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x141141ee0 <col:2> 'int ()' Function 0x141141e28 'list_add' 'int ()'     | |-UnaryOperator 0x141141f68 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x141141f20 <col:12, col:17> '<dependent type>' contains-errors lvalue ->fmt_list     | |   `-RecoveryExpr 0x141141f00 <col:12> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x141142000 <col:27, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x141141fe0 <col:28> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x141142238 <line:23:1, line:24:34> 'out'     | `-CallExpr 0x141142210 <col:2, col:34> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x141142160 <col:2> 'int ()' Function 0x1411420a8 'spin_unlock' 'int ()'     |   `-UnaryOperator 0x1411421f8 <col:14, col:15> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1411421d8 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x141142290 <line:25:3, col:10>       `-ImplicitCastExpr 0x141142278 <col:10> 'int' <LValueToRValue>         `-DeclRefExpr 0x141142258 <col:10> 'int' lvalue Var 0x1411282c0 'ret' 'int' ","19987":"`-FunctionDecl 0x13800dd98  line:1:13 Sys_TempPath 'const char *(void)'   `-CompoundStmt 0x138028310 <line:2:1, line:12:1>     |-DeclStmt 0x13800df38 <line:3:2, col:31>     | `-VarDecl 0x13800ded0 <col:2, col:15> col:15 invalid path 'int' static     `-IfStmt 0x1380282e0 <line:8:2, line:11:10> has_else       |-BinaryOperator 0x13800e2c0 <line:8:6, col:43> 'int' contains-errors '||'       | |-BinaryOperator 0x13800e260 <col:6, col:28> 'int' contains-errors '>'       | | |-RecoveryExpr 0x13800e240 <col:6> '<dependent type>' contains-errors lvalue       | | `-UnaryExprOrTypeTraitExpr 0x13800e188 <col:15, col:28> 'unsigned long' contains-errors sizeof       | |   `-ParenExpr 0x13800e168 <col:21, col:28> '<dependent type>' contains-errors lvalue       | |     `-RecoveryExpr 0x13800e148 <col:23> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x13800e2a0 <col:33, col:43> 'int' contains-errors '=='       |   |-RecoveryExpr 0x13800e280 <col:33> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x13800e1e0 <col:43> 'int' 0       |-ReturnStmt 0x1380282a0 <line:9:3, col:31>       | `-ImplicitCastExpr 0x138027e68 <col:10, col:31> 'const char *' <IntegralToPointer>       |   `-CallExpr 0x138027e48 <col:10, col:31> 'int'       |     `-ImplicitCastExpr 0x138027e30 <col:10> 'int (*)()' <FunctionToPointerDecay>       |       `-DeclRefExpr 0x13800e3c0 <col:10> 'int ()' Function 0x13800e308 'Sys_DefaultHomePath' 'int ()'       `-ReturnStmt 0x1380282d0 <line:11:3, col:10>         `-RecoveryExpr 0x1380282b0 <col:10> '<dependent type>' contains-errors lvalue ","19801":"`-FunctionDecl 0x15980df18  line:1:13 invalid update_read_multi_dstblt_order 'int (int *, const int *, int *)' static   |-ParmVarDecl 0x15980dd28 <col:44, col:53> col:53 invalid s 'int *'   |-ParmVarDecl 0x15980dda8 <col:56, col:74> col:74 invalid orderInfo 'const int *'   |-ParmVarDecl 0x15980de28 <line:2:44, col:64> col:64 invalid multi_dstblt 'int *'   `-CompoundStmt 0x159827e78 <line:3:1, line:21:1>     |-CallExpr 0x15980e1d8 <line:4:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15980e130 <col:2> 'int ()' Function 0x15980e078 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x15980e150 <col:20> 'int' 1     | `-CXXDependentScopeMemberExpr 0x15980e190 <col:23, col:37> '<dependent type>' contains-errors lvalue ->nLeftRect     |   `-RecoveryExpr 0x15980e170 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15980e2b0 <line:5:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15980e208 <col:2> 'int ()' Function 0x15980e078 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x15980e228 <col:20> 'int' 2     | `-CXXDependentScopeMemberExpr 0x15980e268 <col:23, col:37> '<dependent type>' contains-errors lvalue ->nTopRect     |   `-RecoveryExpr 0x15980e248 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15980e388 <line:6:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15980e2e0 <col:2> 'int ()' Function 0x15980e078 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x15980e300 <col:20> 'int' 3     | `-CXXDependentScopeMemberExpr 0x15980e340 <col:23, col:37> '<dependent type>' contains-errors lvalue ->nWidth     |   `-RecoveryExpr 0x15980e320 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x159827468 <line:7:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15980e3b8 <col:2> 'int ()' Function 0x15980e078 'ORDER_FIELD_COORD' 'int ()'     | |-IntegerLiteral 0x15980e3d8 <col:20> 'int' 4     | `-CXXDependentScopeMemberExpr 0x159827420 <col:23, col:37> '<dependent type>' contains-errors lvalue ->nHeight     |   `-RecoveryExpr 0x159827400 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x159827620 <line:8:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159827578 <col:2> 'int ()' Function 0x1598274c0 'ORDER_FIELD_BYTE' 'int ()'     | |-IntegerLiteral 0x159827598 <col:19> 'int' 5     | `-CXXDependentScopeMemberExpr 0x1598275d8 <col:22, col:36> '<dependent type>' contains-errors lvalue ->bRop     |   `-RecoveryExpr 0x1598275b8 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1598276f8 <line:9:2, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159827650 <col:2> 'int ()' Function 0x1598274c0 'ORDER_FIELD_BYTE' 'int ()'     | |-IntegerLiteral 0x159827670 <col:19> 'int' 6     | `-CXXDependentScopeMemberExpr 0x1598276b0 <col:22, col:36> '<dependent type>' contains-errors lvalue ->numRectangles     |   `-RecoveryExpr 0x159827690 <col:22> '<dependent type>' contains-errors lvalue     |-IfStmt 0x159827e10 <line:11:2, line:18:2>     | |-BinaryOperator 0x1598277e8 <line:11:6, col:30> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x159827748 <col:6, col:17> '<dependent type>' contains-errors lvalue ->fieldFlags     | | | `-RecoveryExpr 0x159827728 <col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1598277c8 <col:30> 'int ()' Function 0x1598274c0 'ORDER_FIELD_BYTE' 'int ()'     | `-CompoundStmt 0x159827de8 <line:12:2, line:18:2>     |   |-IfStmt 0x1598279d8 <line:13:3, line:14:11>     |   | |-BinaryOperator 0x159827970 <line:13:7, col:38> 'int' contains-errors '<'     |   | | |-CallExpr 0x159827928 <col:7, col:34> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x1598278e8 <col:7> 'int ()' Function 0x159827830 'Stream_GetRemainingLength' 'int ()'     |   | | | `-RecoveryExpr 0x159827908 <col:33> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x159827950 <col:38> 'int' 2     |   | `-ReturnStmt 0x1598279c8 <line:14:4, col:11>     |   |   `-RecoveryExpr 0x1598279a8 <col:11> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x159827b80 <line:16:3, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x159827ad8 <col:3> 'int ()' Function 0x159827a20 'Stream_Read_UINT16' 'int ()'     |   | |-RecoveryExpr 0x159827af8 <col:22> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x159827b38 <col:25, col:39> '<dependent type>' contains-errors lvalue ->cbData     |   |   `-RecoveryExpr 0x159827b18 <col:25> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x159827dd8 <line:17:3, col:90>     |     `-CallExpr 0x159827da0 <col:10, col:90> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x159827c90 <col:10> 'int ()' Function 0x159827bd8 'update_read_delta_rects' 'int ()'     |       |-RecoveryExpr 0x159827cb0 <col:34> '<dependent type>' contains-errors lvalue     |       |-CXXDependentScopeMemberExpr 0x159827cf0 <col:37, col:51> '<dependent type>' contains-errors lvalue ->rectangles     |       | `-RecoveryExpr 0x159827cd0 <col:37> '<dependent type>' contains-errors lvalue     |       `-CXXDependentScopeMemberExpr 0x159827d58 <col:63, col:77> '<dependent type>' contains-errors lvalue ->numRectangles     |         `-RecoveryExpr 0x159827d38 <col:63> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x159827e68 <line:20:2, col:9>       `-RecoveryExpr 0x159827e48 <col:9> '<dependent type>' contains-errors lvalue ","19314":"`-FunctionDecl 0x13780e358  line:1:12 dwc3_gadget_get_frame 'int (struct usb_gadget *)' static   |-ParmVarDecl 0x13780e248 <col:34, col:53> col:53 used g 'struct usb_gadget *'   `-CompoundStmt 0x137826be8 <line:2:1, line:6:1>     |-DeclStmt 0x137826a48 <line:3:2, col:38>     | |-RecordDecl 0x137826650 <col:2, col:9> col:9 struct dwc3     | `-VarDecl 0x1378267b8 <col:2, col:37> col:16 used dwc 'struct dwc3 *' cinit     |   `-ImplicitCastExpr 0x137826a18 <col:22, col:37> 'struct dwc3 *' <IntegralToPointer>     |     `-CallExpr 0x1378269d8 <col:22, col:37> 'int'     |       |-ImplicitCastExpr 0x1378269c0 <col:22> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x137826950 <col:22> 'int ()' Function 0x137826898 'gadget_to_dwc' 'int ()'     |       `-ImplicitCastExpr 0x137826a00 <col:36> 'struct usb_gadget *' <LValueToRValue>     |         `-DeclRefExpr 0x137826970 <col:36> 'struct usb_gadget *' lvalue ParmVar 0x13780e248 'g' 'struct usb_gadget *'     `-ReturnStmt 0x137826bd8 <line:5:2, col:36>       `-CallExpr 0x137826b98 <col:9, col:36> 'int'         |-ImplicitCastExpr 0x137826b80 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x137826b40 <col:9> 'int ()' Function 0x137826a88 '__dwc3_gadget_get_frame' 'int ()'         `-ImplicitCastExpr 0x137826bc0 <col:33> 'struct dwc3 *' <LValueToRValue>           `-DeclRefExpr 0x137826b60 <col:33> 'struct dwc3 *' lvalue Var 0x1378267b8 'dwc' 'struct dwc3 *' ","19205":"`-FunctionDecl 0x142830a38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x142830958 <col:8> col:8 RouterTest 'int'   |-ParmVarDecl 0x1428308d8 <col:20> col:20 HashKeyNoHashPolicy 'int'   `-CompoundStmt 0x14284d780 <col:41, line:4:1>     |-CallExpr 0x14284d430 <line:2:3, col:87> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x14284d3a0 <col:3, col:58> '<dependent type>' contains-errors lvalue .WillByDefault     | | `-CallExpr 0x14284d370 <col:3, col:56> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x142830c60 <col:3> 'int ()' Function 0x142830ba8 'ON_CALL' 'int ()'     | |   |-CXXDependentScopeMemberExpr 0x14284d2f0 <col:11, col:30> '<dependent type>' contains-errors lvalue ->route_entry_     | |   | `-CXXDependentScopeMemberExpr 0x14284d2a8 <col:11, col:22> '<dependent type>' contains-errors lvalue .route_     | |   |   `-RecoveryExpr 0x14284d288 <col:11> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x14284d350 <col:44, col:55> 'int'     | |     `-ImplicitCastExpr 0x14284d338 <col:44> 'int (*)()' <FunctionToPointerDecay>     | |       `-DeclRefExpr 0x142830e08 <col:44> 'int ()' Function 0x142830d50 'hashPolicy' 'int ()'     | `-CallExpr 0x14284d408 <col:72, col:86> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14284d200 <col:72> 'int ()' Function 0x142830f38 'Return' 'int ()'     |   `-RecoveryExpr 0x14284d3e8 <col:79> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14284d758 <line:3:3, col:52> '<dependent type>' contains-errors       |-DeclRefExpr 0x14284d538 <col:3> 'int ()' Function 0x14284d480 'EXPECT_FALSE' 'int ()'       `-CallExpr 0x14284d738 <col:16, col:51> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x14284d6f0 <col:16, col:41> '<dependent type>' contains-errors lvalue .has_value           `-CallExpr 0x14284d6d0 <col:16, col:39> '<dependent type>' contains-errors             `-CXXDependentScopeMemberExpr 0x14284d688 <col:16, col:24> '<dependent type>' contains-errors lvalue .computeHashKey               `-RecoveryExpr 0x14284d668 <col:16> '<dependent type>' contains-errors lvalue ","19852":"`-FunctionDecl 0x13580de88  line:1:1 invalid gst_rmdemux_descramble_dnet_audio 'int (int *, int *)'   |-ParmVarDecl 0x13580dd28 <col:36, col:49> col:49 invalid rmdemux 'int *'   |-ParmVarDecl 0x13580dda8 <line:2:5, col:24> col:24 referenced invalid stream 'int *'   `-CompoundStmt 0x135827b68 <line:3:1, line:17:1>     |-BinaryOperator 0x13580e2b8 <line:7:3, col:47> '<dependent type>' contains-errors '='     | |-CallExpr 0x13580e230 <col:3, col:43> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13580e188 <col:3> 'int ()' Function 0x13580dff8 'g_ptr_array_index' 'int ()'     | | |-CXXDependentScopeMemberExpr 0x13580e1c8 <col:22, col:30> '<dependent type>' contains-errors lvalue ->subpackets     | | | `-RecoveryExpr 0x13580e1a8 <col:22> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x13580e210 <col:42> 'int' 0     | `-RecoveryExpr 0x13580e298 <col:47> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135827468 <line:8:3, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13580e3b8 <col:3> 'int ()' Function 0x13580e300 'g_ptr_array_set_size' 'int ()'     | |-CXXDependentScopeMemberExpr 0x135827400 <col:25, col:33> '<dependent type>' contains-errors lvalue ->subpackets     | | `-RecoveryExpr 0x13580e3d8 <col:25> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x135827448 <col:45> 'int' 0     |-IfStmt 0x135827938 <line:12:3, line:15:3>     | |-CXXDependentScopeMemberExpr 0x1358275f8 <line:12:7, col:15> '<dependent type>' contains-errors lvalue ->discont     | | `-RecoveryExpr 0x1358275d8 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x135827918 <col:24, line:15:3>     |   |-CallExpr 0x1358277e0 <line:13:5, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x135827720 <col:5> 'int ()' Function 0x135827668 'GST_BUFFER_FLAG_SET' 'int ()'     |   | |-RecoveryExpr 0x1358277a0 <col:26> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1358277c0 <col:31> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1358278f8 <line:14:5, col:23> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x135827858 <col:5, col:13> '<dependent type>' contains-errors lvalue ->discont     |     | `-RecoveryExpr 0x135827830 <col:5> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x135827810 <col:5> 'int *' lvalue ParmVar 0x13580dda8 'stream' 'int *'     |     `-RecoveryExpr 0x1358278d8 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x135827b58 <line:16:3, col:40>       `-CallExpr 0x135827b28 <col:10, col:40> '<dependent type>' contains-errors         |-DeclRefExpr 0x135827a38 <col:10> 'int ()' Function 0x135827980 'gst_pad_push' 'int ()'         |-CXXDependentScopeMemberExpr 0x135827a78 <col:24, col:32> '<dependent type>' contains-errors lvalue ->pad         | `-RecoveryExpr 0x135827a58 <col:24> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x135827b08 <col:37> '<dependent type>' contains-errors lvalue ","19564":"`-FunctionDecl 0x12f8272f8  col:22 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12f8273f8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12f8273a0 <<invalid sloc>> Implicit 902 ","19850":"`-FunctionDecl 0x1321281c8  line:1:21 invalid __pmd 'int (int)' static inline   |-ParmVarDecl 0x1321280f0 <col:27, col:36> col:36 invalid val 'int'   `-CompoundStmt 0x1321286f8 <line:2:1, line:11:1> ","19960":"`-FunctionDecl 0x14f80df18  line:1:24 _blk_alloc 'struct bpf_blk *(void)' static   `-CompoundStmt 0x14f828300 <line:2:1, line:13:1>     |-DeclStmt 0x14f80e100 <line:3:2, col:21>     | `-VarDecl 0x14f80e098 <col:2, col:18> col:18 used blk 'struct bpf_blk *'     |-IfStmt 0x14f828010 <line:6:2, line:7:10>     | |-BinaryOperator 0x14f827fa8 <line:6:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14f827f30 <col:6> 'struct bpf_blk *' lvalue Var 0x14f80e098 'blk' 'struct bpf_blk *'     | | `-RecoveryExpr 0x14f827f88 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14f828000 <line:7:3, col:10>     |   `-RecoveryExpr 0x14f827fe0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f8280e8 <line:8:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14f828068 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f828030 <col:2> 'struct bpf_blk *' lvalue Var 0x14f80e098 'blk' 'struct bpf_blk *'     | `-RecoveryExpr 0x14f8280c8 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f8281c0 <line:9:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14f828140 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f828108 <col:2> 'struct bpf_blk *' lvalue Var 0x14f80e098 'blk' 'struct bpf_blk *'     | `-RecoveryExpr 0x14f8281a0 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14f828298 <line:10:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14f828218 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f8281e0 <col:2> 'struct bpf_blk *' lvalue Var 0x14f80e098 'blk' 'struct bpf_blk *'     | `-RecoveryExpr 0x14f828278 <col:17> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14f8282f0 <line:12:2, col:9>       `-ImplicitCastExpr 0x14f8282d8 <col:9> 'struct bpf_blk *' <LValueToRValue>         `-DeclRefExpr 0x14f8282b8 <col:9> 'struct bpf_blk *' lvalue Var 0x14f80e098 'blk' 'struct bpf_blk *' ","19752":"`-FunctionDecl 0x14b026758  line:1:6 arch_ptrace 'long (struct task_struct *, long, unsigned long, unsigned long)'   |-ParmVarDecl 0x14b00e248 <col:18, col:38> col:38 used child 'struct task_struct *'   |-ParmVarDecl 0x14b00e2c8 <col:45, col:50> col:50 used request 'long'   |-ParmVarDecl 0x14b00e348 <line:2:4, col:18> col:18 used addr 'unsigned long'   |-ParmVarDecl 0x14b026600 <col:24, col:38> col:38 used data 'unsigned long'   `-CompoundStmt 0x14b809d88 <line:3:1, line:115:1>     |-DeclStmt 0x14b0268e8 <line:4:2, col:9>     | `-VarDecl 0x14b026880 <col:2, col:6> col:6 used ret 'int'     |-DeclStmt 0x14b026980 <line:5:2, col:23>     | `-VarDecl 0x14b026918 <col:2, col:16> col:16 __user 'unsigned long'     |-SwitchStmt 0x14b0269d0 <line:7:2, line:112:2>     | |-ImplicitCastExpr 0x14b0269b8 <line:7:10> 'long' <LValueToRValue>     | | `-DeclRefExpr 0x14b026998 <col:10> 'long' lvalue ParmVar 0x14b00e2c8 'request' 'long'     | `-CompoundStmt 0x14b809ca8 <col:19, line:112:2>     |   |-BinaryOperator 0x14b026d18 <line:9:4, col:45> 'int' '='     |   | |-DeclRefExpr 0x14b026a28 <col:4> 'int' lvalue Var 0x14b026880 'ret' 'int'     |   | `-CallExpr 0x14b026c98 <col:10, col:45> 'int'     |   |   |-ImplicitCastExpr 0x14b026c80 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14b026b60 <col:10> 'int ()' Function 0x14b026aa8 'ptrace_read_user' 'int ()'     |   |   |-ImplicitCastExpr 0x14b026cd0 <col:27> 'struct task_struct *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14b026b80 <col:27> 'struct task_struct *' lvalue ParmVar 0x14b00e248 'child' 'struct task_struct *'     |   |   |-ImplicitCastExpr 0x14b026ce8 <col:34> 'unsigned long' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14b026ba0 <col:34> 'unsigned long' lvalue ParmVar 0x14b00e348 'addr' 'unsigned long'     |   |   `-ImplicitCastExpr 0x14b026d00 <col:40> 'unsigned long' <LValueToRValue>     |   |     `-DeclRefExpr 0x14b026c30 <col:40> 'unsigned long' lvalue ParmVar 0x14b026600 'data' 'unsigned long'     |   |-BreakStmt 0x14b026d38 <line:10:4>     |   |-BinaryOperator 0x14b026f70 <line:13:4, col:45> 'int' '='     |   | |-DeclRefExpr 0x14b026d58 <col:4> 'int' lvalue Var 0x14b026880 'ret' 'int'     |   | `-CallExpr 0x14b026ef0 <col:10, col:45> 'int'     |   |   |-ImplicitCastExpr 0x14b026ed8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14b026e58 <col:10> 'int ()' Function 0x14b026da0 'ptrace_write_user' 'int ()'     |   |   |-ImplicitCastExpr 0x14b026f28 <col:28> 'struct task_struct *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14b026e78 <col:28> 'struct task_struct *' lvalue ParmVar 0x14b00e248 'child' 'struct task_struct *'     |   |   |-ImplicitCastExpr 0x14b026f40 <col:35> 'unsigned long' <LValueToRValue>     |   |   | `-DeclRefExpr 0x14b026e98 <col:35> 'unsigned long' lvalue ParmVar 0x14b00e348 'addr' 'unsigned long'     |   |   `-ImplicitCastExpr 0x14b026f58 <col:41> 'unsigned long' <LValueToRValue>     |   |     `-DeclRefExpr 0x14b026eb8 <col:41> 'unsigned long' lvalue ParmVar 0x14b026600 'data' 'unsigned long'     |   |-BreakStmt 0x14b026f90 <line:14:4>     |   |-BreakStmt 0x14b027290 <line:21:4>     |   |-BreakStmt 0x14b0274e8 <line:28:4>     |   |-BreakStmt 0x14b8094f8 <line:35:4>     |   |-BreakStmt 0x14b8095d0 <line:42:4>     |   |-BreakStmt 0x14b809898 <line:57:4>     |   |-BinaryOperator 0x14b809980 <line:60:4, col:39> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14b809938 <col:4, col:29> '<dependent type>' contains-errors lvalue     |   | | `-CallExpr 0x14b8098f8 <col:4, col:26> 'int'     |   | |   |-ImplicitCastExpr 0x14b8098e0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   | |   | `-DeclRefExpr 0x14b8098a0 <col:4> 'int ()' Function 0x14b809720 'task_thread_info' 'int ()'     |   | |   `-ImplicitCastExpr 0x14b809920 <col:21> 'struct task_struct *' <LValueToRValue>     |   | |     `-DeclRefExpr 0x14b8098c0 <col:21> 'struct task_struct *' lvalue ParmVar 0x14b00e248 'child' 'struct task_struct *'     |   | `-DeclRefExpr 0x14b809960 <col:39> 'unsigned long' lvalue ParmVar 0x14b026600 'data' 'unsigned long'     |   |-BinaryOperator 0x14b8099e0 <line:61:4, col:10> 'int' '='     |   | |-DeclRefExpr 0x14b8099a0 <col:4> 'int' lvalue Var 0x14b026880 'ret' 'int'     |   | `-IntegerLiteral 0x14b8099c0 <col:10> 'int' 0     |   |-BreakStmt 0x14b809a00 <line:62:4>     |   |-DefaultStmt 0x14b809c80 <line:109:3, line:110:51>     |   | `-BinaryOperator 0x14b809c60 <col:4, col:51> 'int' '='     |   |   |-DeclRefExpr 0x14b809a08 <col:4> 'int' lvalue Var 0x14b026880 'ret' 'int'     |   |   `-CallExpr 0x14b809bc0 <col:10, col:51> 'int'     |   |     |-ImplicitCastExpr 0x14b809ba8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x14b809b08 <col:10> 'int ()' Function 0x14b809a50 'ptrace_request' 'int ()'     |   |     |-ImplicitCastExpr 0x14b809c00 <col:25> 'struct task_struct *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14b809b28 <col:25> 'struct task_struct *' lvalue ParmVar 0x14b00e248 'child' 'struct task_struct *'     |   |     |-ImplicitCastExpr 0x14b809c18 <col:32> 'long' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14b809b48 <col:32> 'long' lvalue ParmVar 0x14b00e2c8 'request' 'long'     |   |     |-ImplicitCastExpr 0x14b809c30 <col:41> 'unsigned long' <LValueToRValue>     |   |     | `-DeclRefExpr 0x14b809b68 <col:41> 'unsigned long' lvalue ParmVar 0x14b00e348 'addr' 'unsigned long'     |   |     `-ImplicitCastExpr 0x14b809c48 <col:47> 'unsigned long' <LValueToRValue>     |   |       `-DeclRefExpr 0x14b809b88 <col:47> 'unsigned long' lvalue ParmVar 0x14b026600 'data' 'unsigned long'     |   `-BreakStmt 0x14b809ca0 <line:111:4>     `-ReturnStmt 0x14b809d78 <line:114:2, col:9>       `-ImplicitCastExpr 0x14b809d60 <col:9> 'long' <IntegralCast>         `-ImplicitCastExpr 0x14b809d48 <col:9> 'int' <LValueToRValue>           `-DeclRefExpr 0x14b809d28 <col:9> 'int' lvalue Var 0x14b026880 'ret' 'int' ","19339":"`-FunctionDecl 0x10500dd98  line:1:12 rose_loopback_running 'int (void)' static   `-CompoundStmt 0x10500e098 <line:2:1, line:4:1>     `-ReturnStmt 0x10500e088 <line:3:2, col:38>       `-CallExpr 0x10500e060 <col:9, col:38> '<dependent type>' contains-errors         |-DeclRefExpr 0x10500dfb0 <col:9> 'int ()' Function 0x10500def8 'timer_pending' 'int ()'         `-UnaryOperator 0x10500e048 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x10500e028 <col:24> '<dependent type>' contains-errors lvalue ","19378":"`-FunctionDecl 0x12e00ddc8  line:1:24 invalid unix_hash_fold 'unsigned int (int)' static inline   |-ParmVarDecl 0x12e00dcf0 <col:39, col:46> col:46 invalid n 'int'   `-CompoundStmt 0x12e00e130 <line:2:1, line:7:1>     |-DeclStmt 0x12e00df10 <line:3:2, col:37>     | `-VarDecl 0x12e00de90 <col:2, col:11> col:11 used hash 'unsigned int'     |-CompoundAssignOperator 0x12e00dfc0 <line:4:2, col:16> 'unsigned int' '^=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'     | |-DeclRefExpr 0x12e00df28 <col:2> 'unsigned int' lvalue Var 0x12e00de90 'hash' 'unsigned int'     | `-BinaryOperator 0x12e00dfa0 <col:10, col:16> 'unsigned int' '>>'     |   |-ImplicitCastExpr 0x12e00df88 <col:10> 'unsigned int' <LValueToRValue>     |   | `-DeclRefExpr 0x12e00df48 <col:10> 'unsigned int' lvalue Var 0x12e00de90 'hash' 'unsigned int'     |   `-IntegerLiteral 0x12e00df68 <col:16> 'int' 16     `-CompoundAssignOperator 0x12e00e088 <line:5:2, col:16> 'unsigned int' '^=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'       |-DeclRefExpr 0x12e00dff0 <col:2> 'unsigned int' lvalue Var 0x12e00de90 'hash' 'unsigned int'       `-BinaryOperator 0x12e00e068 <col:10, col:16> 'unsigned int' '>>'         |-ImplicitCastExpr 0x12e00e050 <col:10> 'unsigned int' <LValueToRValue>         | `-DeclRefExpr 0x12e00e010 <col:10> 'unsigned int' lvalue Var 0x12e00de90 'hash' 'unsigned int'         `-IntegerLiteral 0x12e00e030 <col:16> 'int' 8 ","19185":"`-FunctionDecl 0x1259281c8  line:1:1 invalid SWFInput_getUInt16_BE 'int (int)'   |-ParmVarDecl 0x1259280f0 <col:23, col:32> col:32 invalid input 'int'   `-CompoundStmt 0x125928610 <line:2:1, line:6:1>     |-DeclStmt 0x1259284f8 <line:3:2, col:40>     | `-VarDecl 0x125928290 <col:2, col:39> col:6 used num 'int' cinit     |   `-BinaryOperator 0x1259284d8 <col:12, col:39> '<dependent type>' contains-errors '<<'     |     |-CallExpr 0x125928490 <col:12, col:34> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x125928450 <col:12> 'int ()' Function 0x125928398 'SWFInput_getChar' 'int ()'     |     | `-RecoveryExpr 0x125928470 <col:29> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x1259284b8 <col:39> 'int' 8     |-CompoundAssignOperator 0x125928598 <line:4:2, col:31> 'int' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-DeclRefExpr 0x125928510 <col:2> 'int' contains-errors lvalue Var 0x125928290 'num' 'int'     | `-CallExpr 0x125928570 <col:9, col:31> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x125928530 <col:9> 'int ()' Function 0x125928398 'SWFInput_getChar' 'int ()'     |   `-RecoveryExpr 0x125928550 <col:26> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x125928600 <line:5:2, col:9>       `-ImplicitCastExpr 0x1259285e8 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x1259285c8 <col:9> 'int' contains-errors lvalue Var 0x125928290 'num' 'int' ","19416":"`-FunctionDecl 0x137866c00  line:1:5 adapter_set_name 'int (struct btd_adapter *, const char *)'   |-ParmVarDecl 0x13784e848 <col:22, col:42> col:42 used adapter 'struct btd_adapter *'   |-ParmVarDecl 0x13784e8c8 <col:51, col:63> col:63 used name 'const char *'   `-CompoundStmt 0x140008c88 <line:2:1, line:24:1>     |-IfStmt 0x137866f70 <line:3:2, line:4:10>     | |-BinaryOperator 0x137866f20 <line:3:6, col:47> 'int' contains-errors '=='     | | |-CallExpr 0x137866ed0 <col:6, col:42> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x137866e30 <col:6> 'int ()' Function 0x137866d78 'g_strcmp0' 'int ()'     | | | |-RecoveryExpr 0x137866e88 <col:16, col:25> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x137866e50 <col:16> 'struct btd_adapter *' lvalue ParmVar 0x13784e848 'adapter' 'struct btd_adapter *'     | | | `-DeclRefExpr 0x137866eb0 <col:38> 'const char *' lvalue ParmVar 0x13784e8c8 'name' 'const char *'     | | `-IntegerLiteral 0x137866f00 <col:47> 'int' 0     | `-ReturnStmt 0x137866f60 <line:4:3, col:10>     |   `-IntegerLiteral 0x137866f40 <col:10> 'int' 0     |-CallExpr 0x137867158 <line:6:2, col:17> 'int'     | |-ImplicitCastExpr 0x137867140 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x137867070 <col:2> 'int ()' Function 0x137866fb8 'DBG' 'int ()'     | |-ImplicitCastExpr 0x137867188 <col:6> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x1378670d0 <col:6> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x1378671a0 <col:13> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x1378670f0 <col:13> 'const char *' lvalue ParmVar 0x13784e8c8 'name' 'const char *'     |-CallExpr 0x137867318 <line:8:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137867298 <col:2> 'int ()' Function 0x1378671e0 'g_free' 'int ()'     | `-RecoveryExpr 0x1378672f0 <col:9, col:18> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1378672b8 <col:9> 'struct btd_adapter *' lvalue ParmVar 0x13784e848 'adapter' 'struct btd_adapter *'     |-BinaryOperator 0x137867518 <line:9:2, col:38> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137867378 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137867340 <col:2> 'struct btd_adapter *' lvalue ParmVar 0x13784e848 'adapter' 'struct btd_adapter *'     | `-CallExpr 0x1378674d8 <col:25, col:38> 'int'     |   |-ImplicitCastExpr 0x1378674c0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x137867480 <col:25> 'int ()' Function 0x1378673c8 'g_strdup' 'int ()'     |   `-ImplicitCastExpr 0x137867500 <col:34> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x1378674a0 <col:34> 'const char *' lvalue ParmVar 0x13784e8c8 'name' 'const char *'     |-CallExpr 0x137867768 <line:11:2, line:12:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137867618 <line:11:2> 'int ()' Function 0x137867560 'g_dbus_emit_property_changed' 'int ()'     | |-RecoveryExpr 0x137867728 <col:31> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x137867688 <col:42, col:51> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137867650 <col:42> 'struct btd_adapter *' lvalue ParmVar 0x13784e848 'adapter' 'struct btd_adapter *'     | |-RecoveryExpr 0x137867748 <line:12:7> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1378676c8 <col:26> 'char[4]' lvalue \"STR\"     |-IfStmt 0x137867838 <line:15:2, line:16:10>     | |-RecoveryExpr 0x1378677e0 <line:15:6, col:15> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1378677a8 <col:6> 'struct btd_adapter *' lvalue ParmVar 0x13784e848 'adapter' 'struct btd_adapter *'     | `-ReturnStmt 0x137867828 <line:16:3, col:10>     |   `-IntegerLiteral 0x137867808 <col:10> 'int' 0     |-CallExpr 0x1378678d0 <line:18:2, col:17> 'int'     | |-ImplicitCastExpr 0x1378678b8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x137867858 <col:2> 'int ()' Function 0x137866fb8 'DBG' 'int ()'     | |-ImplicitCastExpr 0x137867900 <col:6> 'char *' <ArrayToPointerDecay>     | | `-StringLiteral 0x137867878 <col:6> 'char[4]' lvalue \"STR\"     | `-ImplicitCastExpr 0x137867918 <col:13> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x137867898 <col:13> 'const char *' lvalue ParmVar 0x13784e8c8 'name' 'const char *'     |-CallExpr 0x137867a80 <line:20:2, line:21:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137867930 <line:20:2> 'int ()' Function 0x137867560 'g_dbus_emit_property_changed' 'int ()'     | |-RecoveryExpr 0x137867a40 <col:31> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1378679a0 <col:42, col:51> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137867968 <col:42> 'struct btd_adapter *' lvalue ParmVar 0x13784e848 'adapter' 'struct btd_adapter *'     | |-RecoveryExpr 0x137867a60 <line:21:7> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x1378679e0 <col:26> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x140008c78 <line:23:2, col:31>       `-CallExpr 0x140008c18 <col:9, col:31> 'int'         |-ImplicitCastExpr 0x140008c00 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x137867ba0 <col:9> 'int ()' Function 0x137867ae8 'set_name' 'int ()'         |-ImplicitCastExpr 0x140008c48 <col:18> 'struct btd_adapter *' <LValueToRValue>         | `-DeclRefExpr 0x137867bc0 <col:18> 'struct btd_adapter *' lvalue ParmVar 0x13784e848 'adapter' 'struct btd_adapter *'         `-ImplicitCastExpr 0x140008c60 <col:27> 'const char *' <LValueToRValue>           `-DeclRefExpr 0x137867be0 <col:27> 'const char *' lvalue ParmVar 0x13784e8c8 'name' 'const char *' ","19948":"`-FunctionDecl 0x12f8fabf0  line:1:6 invalid mfhd_del 'void (int *)'   |-ParmVarDecl 0x12f8fab28 <col:15, col:23> col:23 invalid s 'int *'   `-CompoundStmt 0x12f8fafb8 <line:2:1, line:6:1>     |-IfStmt 0x12f8fad90 <line:4:2, col:19>     | |-BinaryOperator 0x12f8fad60 <col:6, col:13> 'int' contains-errors '=='     | | |-RecoveryExpr 0x12f8fad20 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12f8fad40 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12f8fad80 <col:19>     `-CallExpr 0x12f8faf90 <line:5:2, col:13> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f8faf10 <col:2> 'int ()' Function 0x12f8fae58 'gf_free' 'int ()'       `-RecoveryExpr 0x12f8faf70 <col:10> '<dependent type>' contains-errors lvalue ","19863":"`-FunctionDecl 0x12600ddf8  line:1:20 invalid ssl23_get_client_method 'int *(int)' static   |-ParmVarDecl 0x12600dcf0 <col:44, col:48> col:48 used ver 'int'   `-CompoundStmt 0x126028680 <line:2:2, line:13:2>     |-IfStmt 0x1260281b0 <line:4:2, line:5:31>     | |-BinaryOperator 0x12600df20 <line:4:6, col:13> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12600dea8 <col:6> 'int' lvalue ParmVar 0x12600dcf0 'ver' 'int'     | | `-RecoveryExpr 0x12600df00 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1260281a0 <line:5:3, col:31>     |   `-ImplicitCastExpr 0x12600e148 <col:9, col:31> 'int *' <IntegralToPointer>     |     `-ParenExpr 0x12600e128 <col:9, col:31> 'int'     |       `-CallExpr 0x12600e108 <col:10, col:30> 'int'     |         `-ImplicitCastExpr 0x12600e0f0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |           `-DeclRefExpr 0x12600e0a0 <col:10> 'int ()' Function 0x12600dfe8 'SSLv2_client_method' 'int ()'     `-IfStmt 0x126028650 <line:7:2, line:12:3> has_else       |-BinaryOperator 0x126028248 <line:7:6, col:13> 'int' contains-errors '=='       | |-DeclRefExpr 0x1260281d0 <col:6> 'int' lvalue ParmVar 0x12600dcf0 'ver' 'int'       | `-RecoveryExpr 0x126028228 <col:13> '<dependent type>' contains-errors lvalue       |-ReturnStmt 0x1260283d8 <line:8:3, col:31>       | `-ImplicitCastExpr 0x1260283c0 <col:9, col:31> 'int *' <IntegralToPointer>       |   `-ParenExpr 0x1260283a0 <col:9, col:31> 'int'       |     `-CallExpr 0x126028380 <col:10, col:30> 'int'       |       `-ImplicitCastExpr 0x126028368 <col:10> 'int (*)()' <FunctionToPointerDecay>       |         `-DeclRefExpr 0x126028348 <col:10> 'int ()' Function 0x126028290 'SSLv3_client_method' 'int ()'       `-IfStmt 0x126028620 <line:9:7, line:12:3> has_else         |-BinaryOperator 0x126028460 <line:9:11, col:18> 'int' contains-errors '=='         | |-DeclRefExpr 0x1260283e8 <col:11> 'int' lvalue ParmVar 0x12600dcf0 'ver' 'int'         | `-RecoveryExpr 0x126028440 <col:18> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x1260285f0 <line:10:3, col:31>         | `-ImplicitCastExpr 0x1260285d8 <col:9, col:31> 'int *' <IntegralToPointer>         |   `-ParenExpr 0x1260285b8 <col:9, col:31> 'int'         |     `-CallExpr 0x126028598 <col:10, col:30> 'int'         |       `-ImplicitCastExpr 0x126028580 <col:10> 'int (*)()' <FunctionToPointerDecay>         |         `-DeclRefExpr 0x126028560 <col:10> 'int ()' Function 0x1260284a8 'TLSv1_client_method' 'int ()'         `-NullStmt 0x126028618 <line:12:3> ","19196":"`-FunctionDecl 0x14e80de88  line:1:1 invalid _libssh2_channel_flush 'int (int *, int)'   |-ParmVarDecl 0x14e80dd28 <col:24, col:41> col:41 referenced invalid channel 'int *'   |-ParmVarDecl 0x14e80dda8 <col:50, col:54> col:54 used streamid 'int'   `-CompoundStmt 0x14e829898 <line:2:1, line:67:1>     |-IfStmt 0x14e829128 <line:3:5, line:49:5>     | |-BinaryOperator 0x14e80e000 <line:3:8, col:32> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x14e80df60 <col:8, col:17> '<dependent type>' contains-errors lvalue ->flush_state     | | | `-RecoveryExpr 0x14e80df40 <col:8> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14e80dfe0 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e829100 <col:55, line:49:5>     |   |-BinaryOperator 0x14e80e350 <line:6:9, col:39> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14e80e2e8 <col:9, col:18> '<dependent type>' contains-errors lvalue ->flush_refund_bytes     |   | | `-RecoveryExpr 0x14e80e2c0 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14e80e2a0 <col:9> 'int *' lvalue ParmVar 0x14e80dd28 'channel' 'int *'     |   | `-IntegerLiteral 0x14e80e330 <col:39> 'int' 0     |   |-BinaryOperator 0x14e827420 <line:7:9, col:38> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14e80e3b8 <col:9, col:18> '<dependent type>' contains-errors lvalue ->flush_flush_bytes     |   | | `-RecoveryExpr 0x14e80e390 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14e80e370 <col:9> 'int *' lvalue ParmVar 0x14e80dd28 'channel' 'int *'     |   | `-IntegerLiteral 0x14e827400 <col:38> 'int' 0     |   `-WhileStmt 0x14e829050 <line:9:9, line:46:9>     |     |-RecoveryExpr 0x14e827458 <line:9:15> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x14e829030 <col:23, line:46:9>     |       |-DeclStmt 0x14e827730 <line:11:13, col:56>     |       | `-VarDecl 0x14e827648 <col:13, col:27> col:27 used packet_type 'unsigned char'     |       `-IfStmt 0x14e829010 <line:13:13, line:44:13>     |         |-RecoveryExpr 0x14e827a90 <line:13:16, line:15:76> '_Bool' contains-errors     |         `-CompoundStmt 0x14e828ff0 <col:79, line:44:13>     |           |-DeclStmt 0x14e827c90 <line:17:17, line:19:55>     |           | `-VarDecl 0x14e827ac8 <line:17:17, col:22> col:22 used packet_stream_id 'long'     |           `-IfStmt 0x14e828fd0 <line:20:17, line:43:17>     |             |-RecoveryExpr 0x14e827ef8 <line:20:20, line:25:43> '_Bool' contains-errors     |             `-CompoundStmt 0x14e828fb0 <col:46, line:43:17>     |               |-DeclStmt 0x14e827f98 <line:26:21, col:78>     |               | `-VarDecl 0x14e827f30 <col:21, col:25> col:25 used bytes_to_flush 'int'     |               `-CompoundAssignOperator 0x14e828c90 <line:36:21, col:51> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |                 |-CXXDependentScopeMemberExpr 0x14e828c28 <col:21, col:30> '<dependent type>' contains-errors lvalue ->flush_flush_bytes     |                 | `-RecoveryExpr 0x14e828c00 <col:21> '<dependent type>' contains-errors lvalue     |                 |   `-DeclRefExpr 0x14e8283d8 <col:21> 'int *' lvalue ParmVar 0x14e80dd28 'channel' 'int *'     |                 `-DeclRefExpr 0x14e828c70 <col:51> 'int' lvalue Var 0x14e827f30 'bytes_to_flush' 'int'     |-CompoundAssignOperator 0x14e829240 <line:51:5, col:37> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x14e829190 <col:5, col:14> '<dependent type>' contains-errors lvalue ->read_avail     | | `-RecoveryExpr 0x14e829168 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e829148 <col:5> 'int *' lvalue ParmVar 0x14e80dd28 'channel' 'int *'     | `-CXXDependentScopeMemberExpr 0x14e8291f8 <col:28, col:37> '<dependent type>' contains-errors lvalue ->flush_flush_bytes     |   `-RecoveryExpr 0x14e8291d8 <col:28> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x14e8293b0 <line:52:5, col:45> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x14e829300 <col:5, col:21> '<dependent type>' contains-errors lvalue .window_size     | | `-CXXDependentScopeMemberExpr 0x14e8292b8 <col:5, col:14> '<dependent type>' contains-errors lvalue ->remote     | |   `-RecoveryExpr 0x14e829290 <col:5> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14e829270 <col:5> 'int *' lvalue ParmVar 0x14e80dd28 'channel' 'int *'     | `-CXXDependentScopeMemberExpr 0x14e829368 <col:36, col:45> '<dependent type>' contains-errors lvalue ->flush_flush_bytes     |   `-RecoveryExpr 0x14e829348 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e829770 <line:54:5, line:62:5>     | |-CXXDependentScopeMemberExpr 0x14e829400 <line:54:8, col:17> '<dependent type>' contains-errors lvalue ->flush_refund_bytes     | | `-RecoveryExpr 0x14e8293e0 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e829750 <col:37, line:62:5>     |   |-DeclStmt 0x14e8294c8 <line:55:9, col:15>     |   | `-VarDecl 0x14e829460 <col:9, col:13> col:13 used rc 'int'     |   `-IfStmt 0x14e829730 <line:60:9, line:61:20>     |     |-RecoveryExpr 0x14e8296c8 <line:60:12, col:18> '_Bool' contains-errors     |     `-ReturnStmt 0x14e829720 <line:61:13, col:20>     |       `-ImplicitCastExpr 0x14e829708 <col:20> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x14e8296e8 <col:20> 'int' lvalue Var 0x14e829460 'rc' 'int'     `-ReturnStmt 0x14e829888 <line:66:5, col:21>       `-CXXDependentScopeMemberExpr 0x14e829840 <col:12, col:21> '<dependent type>' contains-errors lvalue ->flush_flush_bytes         `-RecoveryExpr 0x14e829820 <col:12> '<dependent type>' contains-errors lvalue ","20001":"`-FunctionDecl 0x13000e358  line:1:5 xfrm_register_km 'int (struct xfrm_mgr *)'   |-ParmVarDecl 0x13000e248 <col:22, col:39> col:39 used km 'struct xfrm_mgr *'   `-CompoundStmt 0x130026c80 <line:2:1, line:7:1>     |-CallExpr 0x130026830 <line:3:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130026780 <col:2> 'int ()' Function 0x1300266c8 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x130026818 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x1300267f8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130026a68 <line:4:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130026938 <col:2> 'int ()' Function 0x130026880 'list_add_tail_rcu' 'int ()'     | |-UnaryOperator 0x1300269b8 <col:20, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x130026990 <col:21, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x130026958 <col:21> 'struct xfrm_mgr *' lvalue ParmVar 0x13000e248 'km' 'struct xfrm_mgr *'     | `-UnaryOperator 0x130026a50 <col:31, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x130026a30 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130026c28 <line:5:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130026b78 <col:2> 'int ()' Function 0x130026ac0 'spin_unlock_bh' 'int ()'     | `-UnaryOperator 0x130026c10 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x130026bf0 <col:18> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x130026c70 <line:6:2, col:9>       `-IntegerLiteral 0x130026c50 <col:9> 'int' 0 ","20034":"`-FunctionDecl 0x1238f53f8  line:1:21 invalid add_pending_csums 'int (struct btrfs_trans_handle *, struct inode *, int, struct list_head *)' static inline   |-ParmVarDecl 0x12480e268 <col:39, col:66> col:66 used trans 'struct btrfs_trans_handle *'   |-ParmVarDecl 0x1238f5058 <line:2:9, col:23> col:23 used inode 'struct inode *'   |-ParmVarDecl 0x1238f50d8 <col:30, col:34> col:34 invalid file_offset 'int'   |-ParmVarDecl 0x1238f52a8 <line:3:9, col:27> col:27 used list 'struct list_head *'   `-CompoundStmt 0x1238f5d58 <line:4:1, line:12:1>     |-DeclStmt 0x1238f56a8 <line:5:2, col:31>     | |-RecordDecl 0x1238f54c0 <col:2, col:9> col:9 struct btrfs_ordered_sum     | `-VarDecl 0x1238f5628 <col:2, col:28> col:28 used sum 'struct btrfs_ordered_sum *'     |-CallExpr 0x1238f58e8 <line:7:2, col:37> 'int'     | |-ImplicitCastExpr 0x1238f58d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1238f5820 <col:2> 'int ()' Function 0x1238f5768 'list_for_each_entry' 'int ()'     | |-ImplicitCastExpr 0x1238f5920 <col:22> 'struct btrfs_ordered_sum *' <LValueToRValue>     | | `-DeclRefExpr 0x1238f5840 <col:22> 'struct btrfs_ordered_sum *' lvalue Var 0x1238f5628 'sum' 'struct btrfs_ordered_sum *'     | |-ImplicitCastExpr 0x1238f5938 <col:27> 'struct list_head *' <LValueToRValue>     | | `-DeclRefExpr 0x1238f5860 <col:27> 'struct list_head *' lvalue ParmVar 0x1238f52a8 'list' 'struct list_head *'     | `-ImplicitCastExpr 0x1238f5950 <col:33> 'struct list_head *' <LValueToRValue>     |   `-DeclRefExpr 0x1238f5880 <col:33> 'struct list_head *' lvalue ParmVar 0x1238f52a8 'list' 'struct list_head *'     |-CompoundStmt 0x1238f5d10 <col:39, line:10:2>     | `-CallExpr 0x1238f5cd8 <line:8:3, line:9:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1238f5a48 <line:8:3> 'int ()' Function 0x1238f5990 'btrfs_csum_file_blocks' 'int ()'     |   |-DeclRefExpr 0x1238f5a68 <col:26> 'struct btrfs_trans_handle *' lvalue ParmVar 0x12480e268 'trans' 'struct btrfs_trans_handle *'     |   |-CXXDependentScopeMemberExpr 0x1238f5c70 <line:9:10, col:41> '<dependent type>' contains-errors lvalue ->csum_root     |   | `-CXXDependentScopeMemberExpr 0x1238f5c28 <col:10, col:32> '<dependent type>' contains-errors lvalue ->fs_info     |   |   `-RecoveryExpr 0x1238f5c00 <col:10, col:26> '<dependent type>' contains-errors lvalue     |   |     `-CallExpr 0x1238f5bc0 <col:10, col:23> 'int'     |   |       |-ImplicitCastExpr 0x1238f5ba8 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x1238f5b68 <col:10> 'int ()' Function 0x1238f5ab0 'BTRFS_I' 'int ()'     |   |       `-ImplicitCastExpr 0x1238f5be8 <col:18> 'struct inode *' <LValueToRValue>     |   |         `-DeclRefExpr 0x1238f5b88 <col:18> 'struct inode *' lvalue ParmVar 0x1238f5058 'inode' 'struct inode *'     |   `-DeclRefExpr 0x1238f5cb8 <col:52> 'struct btrfs_ordered_sum *' lvalue Var 0x1238f5628 'sum' 'struct btrfs_ordered_sum *'     `-ReturnStmt 0x1238f5d48 <line:11:2, col:9>       `-IntegerLiteral 0x1238f5d28 <col:9> 'int' 0 ","19342":"`-FunctionDecl 0x13500ddf8  line:1:17 invalid cfg_opt_getcomment 'int *(int *)'   |-ParmVarDecl 0x13500dd28 <col:36, col:47> col:47 invalid opt 'int *'   `-CompoundStmt 0x13500dfa8 <line:2:1, line:7:1>     |-IfStmt 0x13500df40 <line:3:2, line:4:15>     | |-RecoveryExpr 0x13500dea8 <line:3:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13500df30 <line:4:3, col:15>     |   `-CXXDependentScopeMemberExpr 0x13500dee8 <col:10, col:15> '<dependent type>' contains-errors lvalue ->comment     |     `-RecoveryExpr 0x13500dec8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13500df98 <line:6:2, col:9>       `-RecoveryExpr 0x13500df78 <col:9> '<dependent type>' contains-errors lvalue ","19619":"`-FunctionDecl 0x156141090  line:1:13 xfrm_state_look_at 'void (struct xfrm_policy *, struct xfrm_state *, const struct flowi *, unsigned short, struct xfrm_state **, int *, int *)' static   |-ParmVarDecl 0x156128648 <col:32, col:52> col:52 used pol 'struct xfrm_policy *'   |-ParmVarDecl 0x156140a28 <col:57, col:76> col:76 used x 'struct xfrm_state *'   |-ParmVarDecl 0x156140bf8 <line:2:11, col:31> col:31 used fl 'const struct flowi *'   |-ParmVarDecl 0x156140c78 <col:35, col:50> col:50 family 'unsigned short'   |-ParmVarDecl 0x156140dc8 <line:3:11, col:31> col:31 used best 'struct xfrm_state **'   |-ParmVarDecl 0x156140e78 <col:37, col:42> col:42 used acq_in_progress 'int *'   |-ParmVarDecl 0x156140ef8 <line:4:11, col:16> col:16 used error 'int *'   `-CompoundStmt 0x156142850 <line:5:1, line:26:1>     `-IfStmt 0x156142820 <line:7:2, line:25:2> has_else       |-BinaryOperator 0x1561412d0 <line:7:6, col:21> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x156141218 <col:6, col:12> '<dependent type>' contains-errors lvalue .state       | | `-RecoveryExpr 0x1561411f0 <col:6, col:9> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x1561411b8 <col:6> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       | `-RecoveryExpr 0x1561412b0 <col:21> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x156142038 <col:39, line:18:2>       | |-IfStmt 0x156141910 <line:8:3, line:11:4>       | | |-BinaryOperator 0x1561418e0 <line:8:7, line:10:53> 'int' contains-errors '||'       | | | |-ParenExpr 0x156141680 <line:8:7, line:9:56> 'int' contains-errors       | | | | `-BinaryOperator 0x156141660 <line:8:8, line:9:55> 'int' contains-errors '&&'       | | | |   |-CXXDependentScopeMemberExpr 0x156141350 <line:8:8, col:15> '<dependent type>' contains-errors lvalue .family       | | | |   | `-RecoveryExpr 0x156141328 <col:8, col:11> '<dependent type>' contains-errors lvalue       | | | |   |   `-DeclRefExpr 0x1561412f0 <col:8> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       | | | |   `-UnaryOperator 0x156141648 <line:9:8, col:55> '<dependent type>' contains-errors prefix '!' cannot overflow       | | | |     `-CallExpr 0x156141610 <col:9, col:55> '<dependent type>' contains-errors       | | | |       |-DeclRefExpr 0x1561414b0 <col:9> 'int ()' Function 0x1561413f8 'xfrm_selector_match' 'int ()'       | | | |       |-UnaryOperator 0x156141530 <col:29, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow       | | | |       | `-RecoveryExpr 0x156141508 <col:30, col:33> '<dependent type>' contains-errors lvalue       | | | |       |   `-DeclRefExpr 0x1561414d0 <col:30> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       | | | |       |-DeclRefExpr 0x156141548 <col:38> 'const struct flowi *' lvalue ParmVar 0x156140bf8 'fl' 'const struct flowi *'       | | | |       `-CXXDependentScopeMemberExpr 0x1561415c8 <col:42, col:49> '<dependent type>' contains-errors lvalue .family       | | | |         `-RecoveryExpr 0x1561415a0 <col:42, col:45> '<dependent type>' contains-errors lvalue       | | | |           `-DeclRefExpr 0x156141568 <col:42> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       | | | `-UnaryOperator 0x1561418c8 <line:10:7, col:53> 'int' prefix '!' cannot overflow       | | |   `-CallExpr 0x156141848 <col:8, col:53> 'int'       | | |     |-ImplicitCastExpr 0x156141830 <col:8> 'int (*)()' <FunctionToPointerDecay>       | | |     | `-DeclRefExpr 0x156141780 <col:8> 'int ()' Function 0x1561416c8 'security_xfrm_state_pol_flow_match' 'int ()'       | | |     |-ImplicitCastExpr 0x156141880 <col:43> 'struct xfrm_state *' <LValueToRValue>       | | |     | `-DeclRefExpr 0x1561417a0 <col:43> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       | | |     |-ImplicitCastExpr 0x156141898 <col:46> 'struct xfrm_policy *' <LValueToRValue>       | | |     | `-DeclRefExpr 0x1561417c0 <col:46> 'struct xfrm_policy *' lvalue ParmVar 0x156128648 'pol' 'struct xfrm_policy *'       | | |     `-ImplicitCastExpr 0x1561418b0 <col:51> 'const struct flowi *' <LValueToRValue>       | | |       `-DeclRefExpr 0x1561417e0 <col:51> 'const struct flowi *' lvalue ParmVar 0x156140bf8 'fl' 'const struct flowi *'       | | `-ReturnStmt 0x156141900 <line:11:4>       | `-IfStmt 0x156142018 <line:13:3, line:17:12>       |   |-BinaryOperator 0x156141f50 <line:13:7, line:16:53> 'int' contains-errors '||'       |   | |-BinaryOperator 0x156141b70 <line:13:7, line:14:33> 'int' contains-errors '||'       |   | | |-UnaryOperator 0x156141998 <line:13:7, col:9> 'int' prefix '!' cannot overflow       |   | | | `-ImplicitCastExpr 0x156141980 <col:8, col:9> 'struct xfrm_state *' <LValueToRValue>       |   | | |   `-UnaryOperator 0x156141968 <col:8, col:9> 'struct xfrm_state *' lvalue prefix '*' cannot overflow       |   | | |     `-ImplicitCastExpr 0x156141950 <col:9> 'struct xfrm_state **' <LValueToRValue>       |   | | |       `-DeclRefExpr 0x156141930 <col:9> 'struct xfrm_state **' lvalue ParmVar 0x156140dc8 'best' 'struct xfrm_state **'       |   | | `-BinaryOperator 0x156141b50 <line:14:7, col:33> 'int' contains-errors '>'       |   | |   |-CXXDependentScopeMemberExpr 0x156141a60 <col:7, col:19> '<dependent type>' contains-errors lvalue .dying       |   | |   | `-RecoveryExpr 0x156141a38 <col:7, col:16> '<dependent type>' contains-errors lvalue       |   | |   |   `-ParenExpr 0x156141a00 <col:7, col:13> 'struct xfrm_state *' lvalue       |   | |   |     `-UnaryOperator 0x1561419e8 <col:8, col:9> 'struct xfrm_state *' lvalue prefix '*' cannot overflow       |   | |   |       `-ImplicitCastExpr 0x1561419d0 <col:9> 'struct xfrm_state **' <LValueToRValue>       |   | |   |         `-DeclRefExpr 0x1561419b0 <col:9> 'struct xfrm_state **' lvalue ParmVar 0x156140dc8 'best' 'struct xfrm_state **'       |   | |   `-CXXDependentScopeMemberExpr 0x156141b08 <col:27, col:33> '<dependent type>' contains-errors lvalue .dying       |   | |     `-RecoveryExpr 0x156141ae0 <col:27, col:30> '<dependent type>' contains-errors lvalue       |   | |       `-DeclRefExpr 0x156141aa8 <col:27> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       |   | `-ParenExpr 0x156141f30 <line:15:7, line:16:53> 'int' contains-errors       |   |   `-BinaryOperator 0x156141f10 <line:15:8, line:16:45> 'int' contains-errors '&&'       |   |     |-BinaryOperator 0x156141d30 <line:15:8, col:35> 'int' contains-errors '=='       |   |     | |-CXXDependentScopeMemberExpr 0x156141c40 <col:8, col:20> '<dependent type>' contains-errors lvalue .dying       |   |     | | `-RecoveryExpr 0x156141c18 <col:8, col:17> '<dependent type>' contains-errors lvalue       |   |     | |   `-ParenExpr 0x156141be0 <col:8, col:14> 'struct xfrm_state *' lvalue       |   |     | |     `-UnaryOperator 0x156141bc8 <col:9, col:10> 'struct xfrm_state *' lvalue prefix '*' cannot overflow       |   |     | |       `-ImplicitCastExpr 0x156141bb0 <col:10> 'struct xfrm_state **' <LValueToRValue>       |   |     | |         `-DeclRefExpr 0x156141b90 <col:10> 'struct xfrm_state **' lvalue ParmVar 0x156140dc8 'best' 'struct xfrm_state **'       |   |     | `-CXXDependentScopeMemberExpr 0x156141ce8 <col:29, col:35> '<dependent type>' contains-errors lvalue .dying       |   |     |   `-RecoveryExpr 0x156141cc0 <col:29, col:32> '<dependent type>' contains-errors lvalue       |   |     |     `-DeclRefExpr 0x156141c88 <col:29> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       |   |     `-BinaryOperator 0x156141ef0 <line:16:8, col:45> 'int' contains-errors '<'       |   |       |-CXXDependentScopeMemberExpr 0x156141e00 <col:8, col:24> '<dependent type>' contains-errors lvalue .add_time       |   |       | `-RecoveryExpr 0x156141dd8 <col:8, col:17> '<dependent type>' contains-errors lvalue       |   |       |   `-ParenExpr 0x156141da0 <col:8, col:14> 'struct xfrm_state *' lvalue       |   |       |     `-UnaryOperator 0x156141d88 <col:9, col:10> 'struct xfrm_state *' lvalue prefix '*' cannot overflow       |   |       |       `-ImplicitCastExpr 0x156141d70 <col:10> 'struct xfrm_state **' <LValueToRValue>       |   |       |         `-DeclRefExpr 0x156141d50 <col:10> 'struct xfrm_state **' lvalue ParmVar 0x156140dc8 'best' 'struct xfrm_state **'       |   |       `-CXXDependentScopeMemberExpr 0x156141ea8 <col:35, col:45> '<dependent type>' contains-errors lvalue .add_time       |   |         `-RecoveryExpr 0x156141e80 <col:35, col:38> '<dependent type>' contains-errors lvalue       |   |           `-DeclRefExpr 0x156141e48 <col:35> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       |   `-BinaryOperator 0x156141ff8 <line:17:4, col:12> 'struct xfrm_state *' '='       |     |-UnaryOperator 0x156141fa8 <col:4, col:5> 'struct xfrm_state *' lvalue prefix '*' cannot overflow       |     | `-ImplicitCastExpr 0x156141f90 <col:5> 'struct xfrm_state **' <LValueToRValue>       |     |   `-DeclRefExpr 0x156141f70 <col:5> 'struct xfrm_state **' lvalue ParmVar 0x156140dc8 'best' 'struct xfrm_state **'       |     `-ImplicitCastExpr 0x156141fe0 <col:12> 'struct xfrm_state *' <LValueToRValue>       |       `-DeclRefExpr 0x156141fc0 <col:12> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'       `-IfStmt 0x1561427f0 <line:18:9, line:25:2> has_else         |-BinaryOperator 0x156142158 <line:18:13, col:28> 'int' contains-errors '=='         | |-CXXDependentScopeMemberExpr 0x1561420b8 <col:13, col:19> '<dependent type>' contains-errors lvalue .state         | | `-RecoveryExpr 0x156142090 <col:13, col:16> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x156142058 <col:13> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'         | `-RecoveryExpr 0x156142138 <col:28> '<dependent type>' contains-errors lvalue         |-CompoundStmt 0x156142208 <col:44, line:20:2>         | `-BinaryOperator 0x1561421e8 <line:19:3, col:22> 'int' '='         |   |-UnaryOperator 0x1561421b0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow         |   | `-ImplicitCastExpr 0x156142198 <col:4> 'int *' <LValueToRValue>         |   |   `-DeclRefExpr 0x156142178 <col:4> 'int *' lvalue ParmVar 0x156140e78 'acq_in_progress' 'int *'         |   `-IntegerLiteral 0x1561421c8 <col:22> 'int' 1         `-IfStmt 0x1561427d0 <line:20:9, line:25:2>           |-BinaryOperator 0x156142480 <line:20:13, line:21:21> 'int' contains-errors '||'           | |-BinaryOperator 0x156142420 <line:20:13, col:28> 'int' contains-errors '=='           | | |-CXXDependentScopeMemberExpr 0x156142280 <col:13, col:19> '<dependent type>' contains-errors lvalue .state           | | | `-RecoveryExpr 0x156142258 <col:13, col:16> '<dependent type>' contains-errors lvalue           | | |   `-DeclRefExpr 0x156142220 <col:13> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'           | | `-RecoveryExpr 0x156142400 <col:28> '<dependent type>' contains-errors lvalue           | `-BinaryOperator 0x156142460 <line:21:6, col:21> 'int' contains-errors '=='           |   |-CXXDependentScopeMemberExpr 0x156142360 <col:6, col:12> '<dependent type>' contains-errors lvalue .state           |   | `-RecoveryExpr 0x156142338 <col:6, col:9> '<dependent type>' contains-errors lvalue           |   |   `-DeclRefExpr 0x156142300 <col:6> 'struct xfrm_state *' lvalue ParmVar 0x156140a28 'x' 'struct xfrm_state *'           |   `-RecoveryExpr 0x156142440 <col:21> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x1561427c0 <col:41, line:25:2> ","20095":"`-FunctionDecl 0x12c128288  line:1:13 invalid match_gatt_record 'int (const void *, const void *)' static   |-ParmVarDecl 0x12c128128 <col:31, col:43> col:43 used data 'const void *'   |-ParmVarDecl 0x12c1281a8 <col:49, col:61> col:61 used user_data 'const void *'   `-CompoundStmt 0x12c141cd8 <line:2:1, line:7:1>     |-DeclStmt 0x12c128578 <line:3:2, col:38>     | |-RecordDecl 0x12c128340 <col:8, col:15> col:15 struct gatt_record     | `-VarDecl 0x12c1284a8 <col:2, col:34> col:28 used rec 'const struct gatt_record *' cinit     |   `-ImplicitCastExpr 0x12c128548 <col:34> 'const struct gatt_record *' <BitCast>     |     `-ImplicitCastExpr 0x12c128530 <col:34> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x12c128510 <col:34> 'const void *' lvalue ParmVar 0x12c128128 'data' 'const void *'     |-DeclStmt 0x12c1287c8 <line:4:2, col:50>     | |-RecordDecl 0x12c128590 <col:8, col:15> col:15 struct gatt_db_attribute     | `-VarDecl 0x12c1286f8 <col:2, col:41> col:34 used attr 'const struct gatt_db_attribute *' cinit     |   `-ImplicitCastExpr 0x12c128798 <col:41> 'const struct gatt_db_attribute *' <BitCast>     |     `-ImplicitCastExpr 0x12c128780 <col:41> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x12c128760 <col:41> 'const void *' lvalue ParmVar 0x12c1281a8 'user_data' 'const void *'     `-ReturnStmt 0x12c141cc8 <line:6:2, col:27>       `-ParenExpr 0x12c141ca8 <col:9, col:27> 'int' contains-errors         `-BinaryOperator 0x12c141c88 <col:10, col:23> 'int' contains-errors '=='           |-RecoveryExpr 0x12c141c40 <col:10, col:15> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x12c1287e0 <col:10> 'const struct gatt_record *' lvalue Var 0x12c1284a8 'rec' 'const struct gatt_record *'           `-DeclRefExpr 0x12c141c68 <col:23> 'const struct gatt_db_attribute *' lvalue Var 0x12c1286f8 'attr' 'const struct gatt_db_attribute *' ","19728":"`-FunctionDecl 0x1321433f8  col:1 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x1321434f8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x132143560 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1321435c8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1321434a0 <<invalid sloc>> Implicit 882 ","19143":"`-FunctionDecl 0x14d141838  line:1:17 invalid do_notify_resume 'int (struct pt_regs *, unsigned long)'   |-ParmVarDecl 0x14d128668 <col:34, col:50> col:50 used regs 'struct pt_regs *'   |-ParmVarDecl 0x14d1286e8 <col:56, col:70> col:70 used thread_info_flags 'unsigned long'   `-CompoundStmt 0x14d141fc8 <line:2:1, line:10:1>     |-IfStmt 0x14d141bd0 <line:3:2, line:4:20>     | |-BinaryOperator 0x14d141968 <line:3:6, col:26> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x14d1418f0 <col:6> 'unsigned long' lvalue ParmVar 0x14d1286e8 'thread_info_flags' 'unsigned long'     | | `-RecoveryExpr 0x14d141948 <col:26> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14d141b88 <line:4:3, col:20> 'int'     |   |-ImplicitCastExpr 0x14d141b70 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14d141ae0 <col:3> 'int ()' Function 0x14d141a28 'do_signal' 'int ()'     |   |-ImplicitCastExpr 0x14d141bb8 <col:13> 'struct pt_regs *' <LValueToRValue>     |   | `-DeclRefExpr 0x14d141b00 <col:13> 'struct pt_regs *' lvalue ParmVar 0x14d128668 'regs' 'struct pt_regs *'     |   `-IntegerLiteral 0x14d141b20 <col:19> 'int' 0     `-IfStmt 0x14d141fa8 <line:6:2, line:9:2>       |-BinaryOperator 0x14d141c68 <line:6:6, col:26> '<dependent type>' contains-errors '&'       | |-DeclRefExpr 0x14d141bf0 <col:6> 'unsigned long' lvalue ParmVar 0x14d1286e8 'thread_info_flags' 'unsigned long'       | `-RecoveryExpr 0x14d141c48 <col:26> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14d141f88 <col:46, line:9:2>         |-CallExpr 0x14d141de8 <line:7:3, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14d141d68 <col:3> 'int ()' Function 0x14d141cb0 'clear_thread_flag' 'int ()'         | `-RecoveryExpr 0x14d141dc8 <col:21> '<dependent type>' contains-errors lvalue         `-CallExpr 0x14d141f48 <line:8:3, col:31> 'int'           |-ImplicitCastExpr 0x14d141f30 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x14d141ef0 <col:3> 'int ()' Function 0x14d141e38 'tracehook_notify_resume' 'int ()'           `-ImplicitCastExpr 0x14d141f70 <col:27> 'struct pt_regs *' <LValueToRValue>             `-DeclRefExpr 0x14d141f10 <col:27> 'struct pt_regs *' lvalue ParmVar 0x14d128668 'regs' 'struct pt_regs *' ","19952":"`-FunctionDecl 0x144913f18  line:1:1 referenced invalid njs_generate_throw_statement 'int (int *, int *, int *)'   |-ParmVarDecl 0x144913d28 <col:30, col:40> col:40 invalid vm 'int *'   |-ParmVarDecl 0x144913da8 <col:44, col:61> col:61 invalid generator 'int *'   |-ParmVarDecl 0x144913e28 <line:2:5, col:24> col:24 invalid node 'int *'   `-CompoundStmt 0x14492d710 <line:3:1, line:9:1>     |-CallExpr 0x144914248 <line:4:5, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144914130 <col:5> 'int ()' Function 0x144914078 'njs_generator_next' 'int ()'     | |-RecoveryExpr 0x144914150 <col:24> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x144914228 <col:35> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1449141a8 <col:49, col:55> '<dependent type>' contains-errors lvalue ->right     |   `-RecoveryExpr 0x144914188 <col:49> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14492d700 <line:6:5, line:8:63>       `-CallExpr 0x14492d6a8 <line:6:12, line:8:63> '<dependent type>' contains-errors         |-DeclRefExpr 0x144914360 <line:6:12> 'int ()' Function 0x1449142a8 'njs_generator_after' 'int ()'         |-RecoveryExpr 0x144914380 <col:32> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1449143a0 <col:36> '<dependent type>' contains-errors lvalue         |-CallExpr 0x14492d558 <line:7:32, col:65> '<dependent type>' contains-errors         | |-DeclRefExpr 0x14492d4b8 <col:32> 'int ()' Function 0x14492d400 'njs_queue_first' 'int ()'         | `-UnaryOperator 0x14492d540 <col:48, col:60> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x14492d4f8 <col:49, col:60> '<dependent type>' contains-errors lvalue ->stack         |     `-RecoveryExpr 0x14492d4d8 <col:49> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x14492d580 <col:68> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x14492d668 <line:8:32> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x14492d688 <col:56> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x14492d5d0 <col:62> 'int' 0 ","19956":"`-FunctionDecl 0x14900e888  line:1:14 referenced invalid LeakyReluEval 'int (int *, int *)'   |-ParmVarDecl 0x14900e728 <col:28, col:43> col:43 invalid context 'int *'   |-ParmVarDecl 0x14900e7a8 <col:52, col:64> col:64 invalid node 'int *'   `-CompoundStmt 0x149027f40 <col:70, line:37:1>     |-DeclStmt 0x14900ebd8 <line:2:3, col:57>     | `-VarDecl 0x14900e958 <col:3, col:23> col:23 invalid input 'const int *'     |-DeclStmt 0x149027720 <line:4:3, line:5:67>     | `-VarDecl 0x149027600 <line:4:3, col:15> col:15 used params 'const int *' auto     |-DeclStmt 0x149027890 <line:6:3, line:7:58>     | `-VarDecl 0x149027750 <line:6:3, col:26> col:26 invalid data 'const int *'     |-ImplicitCastExpr 0x1490278f0 <line:9:3> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x1490278c8 <col:3> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1490278a8 <col:3> 'int (int *, int *)' Function 0x14900e888 'LeakyReluEval' 'int (int *, int *)'     |-ImplicitCastExpr 0x149027928 <col:19> 'const int *' <LValueToRValue>     | `-DeclRefExpr 0x149027908 <col:19> 'const int *' lvalue Var 0x149027600 'params' 'const int *'     `-SwitchStmt 0x1490279c0 <line:10:3, line:36:3>       |-ImplicitCastExpr 0x1490279a8 <line:10:11, col:18> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x149027960 <col:11, col:18> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x149027940 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x149027ee8 <col:24, line:36:3>         |-CompoundStmt 0x149027a60 <line:11:26, line:17:5>         |-BreakStmt 0x149027a70 <col:7>         |-CompoundStmt 0x149027ab8 <line:18:24, line:21:5>         |-BreakStmt 0x149027ac8 <col:7>         |-CompoundStmt 0x149027b10 <line:22:23, line:25:5>         |-BreakStmt 0x149027b20 <col:7>         |-CompoundStmt 0x149027b68 <line:26:24, line:29:5>         |-BreakStmt 0x149027b78 <col:7>         `-DefaultStmt 0x149027ec8 <line:30:5, line:34:41>           `-CallExpr 0x149027e90 <line:31:7, line:34:41> '<dependent type>' contains-errors             |-DeclRefExpr 0x149027c60 <line:31:7> 'int ()' Function 0x149027ba8 'TF_LITE_KERNEL_LOG' 'int ()'             |-RecoveryExpr 0x149027c80 <line:32:11> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x149027ce0 <line:33:11> 'char[4]' lvalue \"STR\"             `-CallExpr 0x149027e68 <line:34:11, col:40> '<dependent type>' contains-errors               |-DeclRefExpr 0x149027de0 <col:11> 'int ()' Function 0x149027d28 'TfLiteTypeGetName' 'int ()'               `-CXXDependentScopeMemberExpr 0x149027e20 <col:29, col:36> '<dependent type>' contains-errors lvalue ->type                 `-RecoveryExpr 0x149027e00 <col:29> '<dependent type>' contains-errors lvalue ","20172":"`-FunctionDecl 0x13800de58  line:1:1 invalid png_error_callback 'int (int, int)'   |-ParmVarDecl 0x13800dcf0 <col:20, col:32> col:32 invalid png_read_ptr 'int'   |-ParmVarDecl 0x13800dd70 <line:2:20, col:36> col:36 invalid error_msg 'int'   `-CompoundStmt 0x139008d40 <line:3:1, line:18:1>     `-IfStmt 0x139008d20 <line:11:9, line:17:9>       |-BinaryOperator 0x13800e388 <line:11:13, col:40> 'int' contains-errors '&&'       | |-CXXDependentScopeMemberExpr 0x13800e268 <col:13, col:17> '<dependent type>' contains-errors lvalue ->error       | | `-RecoveryExpr 0x13800e248 <col:13> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x13800e368 <col:26, col:40> 'int' contains-errors '=='       |   |-UnaryOperator 0x13800e330 <col:26, col:31> '<dependent type>' contains-errors prefix '*' cannot overflow       |   | `-ImplicitCastExpr 0x13800e318 <col:27, col:31> '<dependent type>' contains-errors <LValueToRValue>       |   |   `-CXXDependentScopeMemberExpr 0x13800e2d0 <col:27, col:31> '<dependent type>' contains-errors lvalue ->error       |   |     `-RecoveryExpr 0x13800e2b0 <col:27> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x13800e348 <col:40> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x139008d08 <col:46, line:17:9>         `-CallExpr 0x139008cc0 <line:12:17, line:16:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x1390088b8 <line:12:17> 'int ()' Function 0x139008800 'g_set_error' 'int ()'           |-CXXDependentScopeMemberExpr 0x139008be0 <col:30, col:34> '<dependent type>' contains-errors lvalue ->error           | `-RecoveryExpr 0x139008bc0 <col:30> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x139008c28 <line:13:30> '<dependent type>' contains-errors lvalue           |-RecoveryExpr 0x139008c48 <line:14:30> '<dependent type>' contains-errors lvalue           |-CallExpr 0x139008c80 <line:15:30, col:37> 'int'           | |-ImplicitCastExpr 0x139008c68 <col:30> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x139008a48 <col:30> 'int ()' Function 0x139008990 '_' 'int ()'           | `-ImplicitCastExpr 0x139008ca8 <col:32> 'char *' <ArrayToPointerDecay>           |   `-StringLiteral 0x139008ab0 <col:32> 'char[4]' lvalue \"STR\"           `-RecoveryExpr 0x139008b58 <line:16:30> '<dependent type>' contains-errors lvalue ","19312":"`-FunctionDecl 0x147128288  line:1:14 invalid pgx_decode 'int *(int *, char *)'   |-ParmVarDecl 0x147128128 <col:25, col:39> col:39 invalid in 'int *'   |-ParmVarDecl 0x1471281a8 <col:43, col:49> col:49 used optstr 'char *'   `-CompoundStmt 0x1471427a8 <line:2:1, line:51:1>     |-BinaryOperator 0x1471283b0 <line:8:2, col:11> 'char *' '='     | |-DeclRefExpr 0x147128358 <col:2> 'char *' lvalue ParmVar 0x1471281a8 'optstr' 'char *'     | `-ImplicitCastExpr 0x147128398 <col:11> 'char *' <NullToPointer>     |   `-IntegerLiteral 0x147128378 <col:11> 'int' 0     |-IfStmt 0x1471418e0 <line:12:2, line:15:2>     | |-CallExpr 0x147128628 <line:12:6, col:25> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x147128550 <col:6> 'int ()' Function 0x147128498 'pgx_gethdr' 'int ()'     | | |-RecoveryExpr 0x147128570 <col:17> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x147128610 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-RecoveryExpr 0x1471285f0 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1471418c0 <col:28, line:15:2>     |   |-CallExpr 0x147141818 <line:13:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x147141800 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x147128738 <col:3> 'int ()' Function 0x147128680 'jas_eprintf' 'int ()'     |   | `-ImplicitCastExpr 0x147141840 <col:15> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x1471287a0 <col:15> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x1471418a8 <line:14:3, col:8> 'error' 0x147141858     |-IfStmt 0x147141c90 <line:17:2, line:19:2>     | |-BinaryOperator 0x147141a58 <line:17:6, col:27> 'int' '>='     | | |-CallExpr 0x147141a18 <col:6, col:22> 'int'     | | | `-ImplicitCastExpr 0x147141a00 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x1471419e0 <col:6> 'int ()' Function 0x147141928 'jas_getdbglevel' 'int ()'     | | `-IntegerLiteral 0x147141a38 <col:27> 'int' 10     | `-CompoundStmt 0x147141c78 <col:31, line:19:2>     |   `-CallExpr 0x147141c48 <line:18:3, col:27> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x147141b58 <col:3> 'int ()' Function 0x147141aa0 'pgx_dumphdr' 'int ()'     |     |-RecoveryExpr 0x147141bf0 <col:15> '<dependent type>' contains-errors lvalue     |     `-UnaryOperator 0x147141c30 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x147141c10 <col:24> '<dependent type>' contains-errors lvalue     |-IfStmt 0x147141e70 <line:21:2, line:23:2>     | |-RecoveryExpr 0x147141e20 <line:21:6, col:35> '_Bool' contains-errors     | `-CompoundStmt 0x147141e58 <col:38, line:23:2>     |   `-GotoStmt 0x147141e40 <line:22:3, col:8> 'error' 0x147141858     |-IfStmt 0x147142080 <line:32:2, line:34:2>     | |-RecoveryExpr 0x147142030 <line:32:6, col:43> '_Bool' contains-errors     | `-CompoundStmt 0x147142068 <col:46, line:34:2>     |   `-GotoStmt 0x147142050 <line:33:3, col:8> 'error' 0x147141858     |-IfStmt 0x1471422b0 <line:35:2, line:38:2>     | |-RecoveryExpr 0x1471421c0 <line:35:6, col:33> '_Bool' contains-errors     | `-CompoundStmt 0x147142290 <col:36, line:38:2>     |   |-CallExpr 0x147142238 <line:36:3, col:20> 'int'     |   | |-ImplicitCastExpr 0x147142220 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1471421e0 <col:3> 'int ()' Function 0x147128680 'jas_eprintf' 'int ()'     |   | `-ImplicitCastExpr 0x147142260 <col:15> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x147142200 <col:15> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x147142278 <line:37:3, col:8> 'error' 0x147141858     |-LabelStmt 0x147142740 <line:46:1, line:49:2> 'error'     | `-IfStmt 0x147142720 <line:47:2, line:49:2>     |   |-RecoveryExpr 0x1471425f0 <line:47:6> '_Bool' contains-errors     |   `-CompoundStmt 0x147142710 <col:13, line:49:2>     `-ReturnStmt 0x147142798 <line:50:2, col:9>       `-ImplicitCastExpr 0x147142780 <col:9> 'int *' <NullToPointer>         `-IntegerLiteral 0x147142760 <col:9> 'int' 0 ","20010":"`-FunctionDecl 0x1421281a8  line:4:8 TIDY_DOC_METHOD 'int (int)' static   |-ParmVarDecl 0x1421280d8 <col:24> col:24 __construct 'int'   `-CompoundStmt 0x142142110 <line:5:1, line:30:69>     |-DeclStmt 0x142128440 <line:6:2, col:37>     | |-VarDecl 0x1421282b8 <col:2, col:20> col:8 used inputfile 'char *' cinit     | | `-RecoveryExpr 0x142128350 <col:20> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x142128388 <col:2, col:33> col:27 used enc 'char *' cinit     |   `-RecoveryExpr 0x142128408 <col:33> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x142128658 <line:7:2, col:50>     | |-VarDecl 0x142128470 <col:2, col:18> col:6 input_len 'int' cinit     | | `-IntegerLiteral 0x1421284d8 <col:18> 'int' 0     | |-VarDecl 0x142128510 <col:2, col:31> col:21 enc_len 'int' cinit     | | `-IntegerLiteral 0x142128578 <col:31> 'int' 0     | `-VarDecl 0x1421285b0 <col:2, col:49> col:34 used contents_len 'int' cinit     |   `-IntegerLiteral 0x142128618 <col:49> 'int' 0     |-DeclStmt 0x1421286f0 <line:9:2, col:16>     | `-VarDecl 0x142128688 <col:2, col:8> col:8 used contents 'char *'     |-IfStmt 0x142141a90 <line:15:2, line:18:2>     | |-RecoveryExpr 0x142141a60 <line:15:6, line:16:58> '_Bool' contains-errors     | `-CompoundStmt 0x142141a80 <col:67, line:18:2>     `-IfStmt 0x1421420f0 <line:22:2, line:30:69>       |-ImplicitCastExpr 0x142141ae8 <line:22:6> 'char *' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x142141ac8 <col:6> 'char *' contains-errors lvalue Var 0x1421282b8 'inputfile' 'char *'       `-CompoundStmt 0x1421420d8 <col:17, line:30:69>         `-IfStmt 0x142141e58 <line:23:3, line:26:3>           |-RecoveryExpr 0x142141ca8 <line:23:7, col:94> '_Bool' contains-errors           `-CompoundStmt 0x142141e40 <col:97, line:26:3>             `-ReturnStmt 0x142141e30 <line:25:4> ","19445":"`-FunctionDecl 0x142128258  line:1:1 invalid _outAggref 'int (int, const int *)'   |-ParmVarDecl 0x1421280f0 <col:12, col:23> col:23 invalid str 'int'   |-ParmVarDecl 0x142128170 <col:28, col:42> col:42 invalid node 'const int *'   `-CompoundStmt 0x1421422f8 <line:2:1, line:19:1>     |-CallExpr 0x142128538 <line:3:2, col:23> 'int'     | |-ImplicitCastExpr 0x142128520 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x142128470 <col:2> 'int ()' Function 0x1421283b8 'WRITE_NODE_TYPE' 'int ()'     | `-ImplicitCastExpr 0x142128560 <col:18> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x1421284d0 <col:18> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1421286d8 <line:5:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142128658 <col:2> 'int ()' Function 0x1421285a0 'WRITE_OID_FIELD' 'int ()'     | `-RecoveryExpr 0x1421286b8 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142128780 <line:6:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142128700 <col:2> 'int ()' Function 0x1421285a0 'WRITE_OID_FIELD' 'int ()'     | `-RecoveryExpr 0x142128760 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142141848 <line:7:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1421287a8 <col:2> 'int ()' Function 0x1421285a0 'WRITE_OID_FIELD' 'int ()'     | `-RecoveryExpr 0x142141828 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1421418f0 <line:8:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141870 <col:2> 'int ()' Function 0x1421285a0 'WRITE_OID_FIELD' 'int ()'     | `-RecoveryExpr 0x1421418d0 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142141a78 <line:9:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1421419f8 <col:2> 'int ()' Function 0x142141940 'WRITE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x142141a58 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142141b20 <line:10:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141aa0 <col:2> 'int ()' Function 0x142141940 'WRITE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x142141b00 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142141bc8 <line:11:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141b48 <col:2> 'int ()' Function 0x142141940 'WRITE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x142141ba8 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142141c70 <line:12:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141bf0 <col:2> 'int ()' Function 0x142141940 'WRITE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x142141c50 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142141d18 <line:13:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141c98 <col:2> 'int ()' Function 0x142141940 'WRITE_NODE_FIELD' 'int ()'     | `-RecoveryExpr 0x142141cf8 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142141ea0 <line:14:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141e20 <col:2> 'int ()' Function 0x142141d68 'WRITE_BOOL_FIELD' 'int ()'     | `-RecoveryExpr 0x142141e80 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x142141f48 <line:15:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x142141ec8 <col:2> 'int ()' Function 0x142141d68 'WRITE_BOOL_FIELD' 'int ()'     | `-RecoveryExpr 0x142141f28 <col:19> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1421420d0 <line:16:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x142142050 <col:2> 'int ()' Function 0x142141f98 'WRITE_CHAR_FIELD' 'int ()'       `-RecoveryExpr 0x1421420b0 <col:19> '<dependent type>' contains-errors lvalue ","19596":"`-FunctionDecl 0x14802b6d8  line:1:12 invalid tw5864_g_std 'int (struct file *, void *, int *)' static   |-ParmVarDecl 0x14800e248 <col:25, col:38> col:38 used file 'struct file *'   |-ParmVarDecl 0x14800e2c8 <col:44, col:50> col:50 priv 'void *'   |-ParmVarDecl 0x14800e398 <col:56, col:69> col:69 invalid std 'int *'   `-CompoundStmt 0x14802bce0 <line:2:1, line:7:1>     |-DeclStmt 0x14802bbc8 <line:3:2, col:50>     | |-RecordDecl 0x14802b798 <col:2, col:9> col:9 struct tw5864_input     | `-VarDecl 0x14802b908 <col:2, col:49> col:23 used input 'struct tw5864_input *' cinit     |   `-ImplicitCastExpr 0x14802bb98 <col:31, col:49> 'struct tw5864_input *' <IntegralToPointer>     |     `-CallExpr 0x14802bb58 <col:31, col:49> 'int'     |       |-ImplicitCastExpr 0x14802bb40 <col:31> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14802bad0 <col:31> 'int ()' Function 0x14802ba18 'video_drvdata' 'int ()'     |       `-ImplicitCastExpr 0x14802bb80 <col:45> 'struct file *' <LValueToRValue>     |         `-DeclRefExpr 0x14802baf0 <col:45> 'struct file *' lvalue ParmVar 0x14800e248 'file' 'struct file *'     |-BinaryOperator 0x14802bc90 <line:5:2, col:16> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x14802bc18 <col:2, col:3> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x14802bc00 <col:3> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14802bbe0 <col:3> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14802bc68 <col:9, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14802bc30 <col:9> 'struct tw5864_input *' lvalue Var 0x14802b908 'input' 'struct tw5864_input *'     `-ReturnStmt 0x14802bcd0 <line:6:2, col:9>       `-IntegerLiteral 0x14802bcb0 <col:9> 'int' 0 ","19833":"`-FunctionDecl 0x13c0137a0  line:1:13 evtchn_fifo_handle_events 'void (unsigned int)' static   |-ParmVarDecl 0x13c0136d8 <col:39, col:48> col:48 used cpu 'unsigned int'   `-CompoundStmt 0x13c013a98 <line:2:1, line:4:1>     `-CallExpr 0x13c013a68 <line:3:2, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x13c0139c0 <col:2> 'int ()' Function 0x13c013908 '__evtchn_fifo_handle_events' 'int ()'       |-DeclRefExpr 0x13c0139e0 <col:30> 'unsigned int' lvalue ParmVar 0x13c0136d8 'cpu' 'unsigned int'       `-RecoveryExpr 0x13c013a48 <col:35> '<dependent type>' contains-errors lvalue ","20069":"`-FunctionDecl 0x13d928288  line:1:11 invalid r_core_bin_set_env 'int (int *, int *)'   |-ParmVarDecl 0x13d928128 <col:30, col:37> col:37 invalid r 'int *'   |-ParmVarDecl 0x13d9281a8 <col:40, col:50> col:50 invalid binfile 'int *'   `-CompoundStmt 0x13d942d48 <col:59, line:27:1>     `-IfStmt 0x13d942d28 <line:4:2, line:25:2>       |-RecoveryExpr 0x13d928518 <line:4:6> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13d942cd8 <col:12, line:25:2>         |-DeclStmt 0x13d928680 <line:5:3, col:24>         | `-VarDecl 0x13d928550 <col:3, col:18> col:7 used va 'int' cinit         |   `-CXXDependentScopeMemberExpr 0x13d928638 <col:12, col:18> '<dependent type>' contains-errors lvalue ->has_va         |     `-RecoveryExpr 0x13d928618 <col:12> '<dependent type>' contains-errors lvalue         |-DeclStmt 0x13d9287e0 <line:6:3, col:33>         | `-VarDecl 0x13d9286b0 <col:3, col:29> col:16 used arch 'const char *' cinit         |   `-CXXDependentScopeMemberExpr 0x13d928798 <col:23, col:29> '<dependent type>' contains-errors lvalue ->arch         |     `-RecoveryExpr 0x13d928778 <col:23> '<dependent type>' contains-errors lvalue         |-CallExpr 0x13d942290 <line:12:3, col:45> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13d942178 <col:3> 'int ()' Function 0x13d941ea8 'r_config_set_i' 'int ()'         | |-CXXDependentScopeMemberExpr 0x13d9421b8 <col:19, col:22> '<dependent type>' contains-errors lvalue ->config         | | `-RecoveryExpr 0x13d942198 <col:19> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x13d942200 <col:30> 'char[4]' lvalue \"STR\"         | `-RecoveryExpr 0x13d942270 <col:37> '<dependent type>' contains-errors lvalue         |-CallExpr 0x13d942470 <line:13:3, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13d9423a8 <col:3> 'int ()' Function 0x13d9422f0 'r_config_set' 'int ()'         | |-CXXDependentScopeMemberExpr 0x13d9423e8 <col:17, col:20> '<dependent type>' contains-errors lvalue ->config         | | `-RecoveryExpr 0x13d9423c8 <col:17> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x13d942430 <col:28> 'char[4]' lvalue \"STR\"         | `-DeclRefExpr 0x13d942450 <col:35> 'const char *' contains-errors lvalue Var 0x13d9286b0 'arch' 'const char *'         |-CallExpr 0x13d942618 <line:15:3, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13d942550 <col:3> 'int ()' Function 0x13d9422f0 'r_config_set' 'int ()'         | |-CXXDependentScopeMemberExpr 0x13d942590 <col:17, col:20> '<dependent type>' contains-errors lvalue ->config         | | `-RecoveryExpr 0x13d942570 <col:17> '<dependent type>' contains-errors lvalue         | |-StringLiteral 0x13d9425d8 <col:28> 'char[4]' lvalue \"STR\"         | `-DeclRefExpr 0x13d9425f8 <col:35> 'const char *' contains-errors lvalue Var 0x13d9286b0 'arch' 'const char *'         |-IfStmt 0x13d942840 <line:16:3, line:20:3> has_else         | |-RecoveryExpr 0x13d942650 <line:16:7, col:27> '_Bool' contains-errors         | |-CompoundStmt 0x13d942718 <col:32, line:18:3>         | `-CompoundStmt 0x13d942828 <col:10, line:20:3>         |   `-CallExpr 0x13d9427f0 <line:19:4, col:40> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x13d942728 <col:4> 'int ()' Function 0x13d9422f0 'r_config_set' 'int ()'         |     |-CXXDependentScopeMemberExpr 0x13d942768 <col:18, col:21> '<dependent type>' contains-errors lvalue ->config         |     | `-RecoveryExpr 0x13d942748 <col:18> '<dependent type>' contains-errors lvalue         |     |-StringLiteral 0x13d9427b0 <col:29> 'char[4]' lvalue \"STR\"         |     `-DeclRefExpr 0x13d9427d0 <col:36> 'const char *' contains-errors lvalue Var 0x13d9286b0 'arch' 'const char *'         |-CallExpr 0x13d9429f8 <line:21:3, col:32> '<dependent type>' contains-errors         | |-DeclRefExpr 0x13d942950 <col:3> 'int ()' Function 0x13d942898 'r_asm_use' 'int ()'         | |-CXXDependentScopeMemberExpr 0x13d942990 <col:14, col:17> '<dependent type>' contains-errors lvalue ->assembler         | | `-RecoveryExpr 0x13d942970 <col:14> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x13d9429d8 <col:28> 'const char *' contains-errors lvalue Var 0x13d9286b0 'arch' 'const char *'         `-CallExpr 0x13d942ca8 <line:23:3, col:33> '<dependent type>' contains-errors           |-DeclRefExpr 0x13d942c48 <col:3> 'int ()' Function 0x13d942b90 'r_core_bin_set_cur' 'int ()'           |-RecoveryExpr 0x13d942c68 <col:23> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x13d942c88 <col:26> '<dependent type>' contains-errors lvalue ","19914":"`-FunctionDecl 0x14a0287c0  col:34 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x14a0288c0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x14a028868 <<invalid sloc>> Implicit 902 ","19679":"`-FunctionDecl 0x13c911e38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x13c911d58 <col:8> col:8 HttpConnectionManagerImplTest 'int'   |-ParmVarDecl 0x13c911cd8 <col:39> col:39 OverlyLongHeadersAcceptedIfConfigured 'int'   `-CompoundStmt 0x13c92a7c8 <col:78, line:18:1>     `-RecoveryExpr 0x13c92a778 <line:16:3> '<dependent type>' contains-errors lvalue ","20053":"`-FunctionDecl 0x13e140a00  line:1:6 fb_set_suspend 'void (struct fb_info *, int)'   |-ParmVarDecl 0x13e128648 <col:21, col:37> col:37 used info 'struct fb_info *'   |-ParmVarDecl 0x13e1286c8 <col:43, col:47> col:47 used state 'int'   `-CompoundStmt 0x13e1412c0 <line:2:1, line:13:1>     |-DeclStmt 0x13e140c78 <line:3:2, col:23>     | |-RecordDecl 0x13e140b00 <col:2, col:9> col:9 struct fb_event     | `-VarDecl 0x13e140bf8 <col:2, col:18> col:18 referenced invalid event 'struct fb_event'     |-BinaryOperator 0x13e140d40 <line:5:2, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13e140cd8 <col:2, col:8> '<dependent type>' contains-errors lvalue .info     | | `-RecoveryExpr 0x13e140cb0 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13e140c90 <col:2> 'struct fb_event' lvalue Var 0x13e140bf8 'event' 'struct fb_event'     | `-DeclRefExpr 0x13e140d20 <col:15> 'struct fb_info *' lvalue ParmVar 0x13e128648 'info' 'struct fb_info *'     `-IfStmt 0x13e141290 <line:6:2, line:12:2> has_else       |-ImplicitCastExpr 0x13e140d80 <line:6:6> 'int' <LValueToRValue>       | `-DeclRefExpr 0x13e140d60 <col:6> 'int' lvalue ParmVar 0x13e1286c8 'state' 'int'       |-CompoundStmt 0x13e141088 <col:13, line:9:2>       | |-CallExpr 0x13e140f80 <line:7:3, col:50> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x13e140ec0 <col:3> 'int ()' Function 0x13e140e08 'fb_notifier_call_chain' 'int ()'       | | |-RecoveryExpr 0x13e140f60 <col:26> '<dependent type>' contains-errors lvalue       | | `-UnaryOperator 0x13e140f18 <col:44, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-RecoveryExpr 0x13e140ef8 <col:45> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x13e141068 <line:8:3, col:17> '<dependent type>' contains-errors '='       |   |-RecoveryExpr 0x13e140fe8 <col:3, col:9> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x13e140fb0 <col:3> 'struct fb_info *' lvalue ParmVar 0x13e128648 'info' 'struct fb_info *'       |   `-RecoveryExpr 0x13e141048 <col:17> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13e141270 <line:9:9, line:12:2>         |-BinaryOperator 0x13e141160 <line:10:3, col:17> '<dependent type>' contains-errors '='         | |-RecoveryExpr 0x13e1410e0 <col:3, col:9> '<dependent type>' contains-errors lvalue         | | `-DeclRefExpr 0x13e1410a8 <col:3> 'struct fb_info *' lvalue ParmVar 0x13e128648 'info' 'struct fb_info *'         | `-RecoveryExpr 0x13e141140 <col:17> '<dependent type>' contains-errors lvalue         `-CallExpr 0x13e141240 <line:11:3, col:49> '<dependent type>' contains-errors           |-DeclRefExpr 0x13e141180 <col:3> 'int ()' Function 0x13e140e08 'fb_notifier_call_chain' 'int ()'           |-RecoveryExpr 0x13e141220 <col:26> '<dependent type>' contains-errors lvalue           `-UnaryOperator 0x13e1411d8 <col:43, col:44> '<dependent type>' contains-errors prefix '&' cannot overflow             `-RecoveryExpr 0x13e1411b8 <col:44> '<dependent type>' contains-errors lvalue ","19611":"`-FunctionDecl 0x12c928318  line:1:1 invalid iakerb_gss_delete_sec_context 'int (int *, int *, int)'   |-ParmVarDecl 0x12c928128 <col:31, col:42> col:42 referenced invalid minor_status 'int *'   |-ParmVarDecl 0x12c9281a8 <line:2:31, col:45> col:45 invalid context_handle 'int *'   |-ParmVarDecl 0x12c928228 <line:3:31, col:44> col:44 referenced invalid output_token 'int'   `-CompoundStmt 0x12c942250 <line:4:1, line:30:1>     |-IfStmt 0x12c928668 <line:7:5, line:10:5>     | |-BinaryOperator 0x12c928450 <line:7:9, col:25> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12c9283d8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c928430 <col:25> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c928648 <col:42, line:10:5>     |   |-BinaryOperator 0x12c928520 <line:8:9, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x12c9284b8 <col:9, col:23> '<dependent type>' contains-errors lvalue ->length     |   | | `-RecoveryExpr 0x12c928490 <col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x12c928470 <col:9> 'int' lvalue ParmVar 0x12c928228 'output_token' 'int'     |   | `-IntegerLiteral 0x12c928500 <col:32> 'int' 0     |   `-BinaryOperator 0x12c928628 <line:9:9, col:31> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x12c928588 <col:9, col:23> '<dependent type>' contains-errors lvalue ->value     |     | `-RecoveryExpr 0x12c928560 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x12c928540 <col:9> 'int' lvalue ParmVar 0x12c928228 'output_token' 'int'     |     `-RecoveryExpr 0x12c928608 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12c9286f8 <line:12:5, col:21> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x12c9286c0 <col:5, col:6> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12c9286a8 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12c928688 <col:6> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12c9286d8 <col:21> 'int' 0     |-IfStmt 0x12c9421c8 <line:14:5, line:27:5>     | |-BinaryOperator 0x12c941820 <line:14:9, col:28> 'int' contains-errors '!='     | | |-UnaryOperator 0x12c9287e8 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x12c9287d0 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x12c928718 <col:10> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12c941800 <col:28> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12c9421b0 <col:46, line:27:5>     |   `-IfStmt 0x12c942180 <line:17:9, line:26:9> has_else     |     |-BinaryOperator 0x12c941960 <line:17:13, col:34> 'int' contains-errors '=='     |     | |-CXXDependentScopeMemberExpr 0x12c9418f8 <col:13, col:25> '<dependent type>' contains-errors lvalue ->magic     |     | | `-RecoveryExpr 0x12c9418d8 <col:13> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x12c941940 <col:34> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x12c941cb0 <col:53, line:20:9>     |     | |-CallExpr 0x12c941b60 <line:18:13, col:46> '<dependent type>' contains-errors     |     | | |-DeclRefExpr 0x12c941ae0 <col:13> 'int ()' Function 0x12c941a28 'iakerb_release_context' 'int ()'     |     | | `-RecoveryExpr 0x12c941b40 <col:36> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x12c941c90 <line:19:13, col:31> '<dependent type>' contains-errors '='     |     |   |-UnaryOperator 0x12c941c58 <col:13, col:14> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   | `-ImplicitCastExpr 0x12c941c40 <col:14> '<dependent type>' contains-errors <LValueToRValue>     |     |   |   `-RecoveryExpr 0x12c941b88 <col:14> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x12c941c70 <col:31> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x12c942160 <line:20:16, line:26:9>     |       |-CallExpr 0x12c941f38 <line:21:13, col:51> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x12c941db0 <col:13> 'int ()' Function 0x12c941cf8 'assert' 'int ()'     |       | `-BinaryOperator 0x12c941f18 <col:20, col:41> 'int' contains-errors '=='     |       |   |-CXXDependentScopeMemberExpr 0x12c941eb0 <col:20, col:32> '<dependent type>' contains-errors lvalue ->magic     |       |   | `-RecoveryExpr 0x12c941e90 <col:20> '<dependent type>' contains-errors lvalue     |       |   `-RecoveryExpr 0x12c941ef8 <col:41> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x12c942140 <line:23:13, line:25:68> '<dependent type>' contains-errors '='     |         |-RecoveryExpr 0x12c941f80 <line:23:13> '<dependent type>' contains-errors lvalue     |         | `-DeclRefExpr 0x12c941f60 <col:13> 'int *' lvalue ParmVar 0x12c928128 'minor_status' 'int *'     |         `-CallExpr 0x12c942108 <col:28, line:25:68> '<dependent type>' contains-errors     |           |-DeclRefExpr 0x12c942088 <line:23:28> 'int ()' Function 0x12c941fd0 'krb5_gss_delete_sec_context' 'int ()'     |           |-RecoveryExpr 0x12c9420a8 <col:56> '<dependent type>' contains-errors lvalue     |           |-RecoveryExpr 0x12c9420c8 <line:24:56> '<dependent type>' contains-errors lvalue     |           `-RecoveryExpr 0x12c9420e8 <line:25:56> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c942240 <line:29:5, col:12>       `-RecoveryExpr 0x12c942220 <col:12> '<dependent type>' contains-errors lvalue ","19823":"`-FunctionDecl 0x140128bd8  line:1:1 invalid _asn1_get_octet_string 'int (int, const unsigned char *, unsigned int, int *)'   |-ParmVarDecl 0x1401288f0 <col:25, col:35> col:35 invalid node 'int'   |-ParmVarDecl 0x1401289a8 <col:41, col:62> col:62 used der 'const unsigned char *'   |-ParmVarDecl 0x140128a28 <col:67, col:76> col:76 used der_len 'unsigned int'   |-ParmVarDecl 0x140128ad8 <col:85, col:90> col:90 used len 'int *'   `-CompoundStmt 0x140144768 <line:2:1, line:78:1>     |-DeclStmt 0x140128f50 <line:3:3, col:47>     | |-VarDecl 0x140128cb8 <col:3, col:7> col:7 used len2 'int'     | |-VarDecl 0x140128d38 <col:3, col:13> col:13 used len3 'int'     | |-VarDecl 0x140128db8 <col:3, col:19> col:19 used counter 'int'     | |-VarDecl 0x140128e38 <col:3, col:28> col:28 used tot_len 'int'     | `-VarDecl 0x140128eb8 <col:3, col:37> col:37 used indefinite 'int'     |-BinaryOperator 0x140128fa8 <line:5:3, col:13> 'int' '='     | |-DeclRefExpr 0x140128f68 <col:3> 'int' lvalue Var 0x140128db8 'counter' 'int'     | `-IntegerLiteral 0x140128f88 <col:13> 'int' 0     |-IfStmt 0x140144648 <line:7:3, line:73:5> has_else     | |-BinaryOperator 0x1401421c8 <line:7:7, col:20> '<dependent type>' contains-errors '&'     | | |-UnaryOperator 0x140142190 <col:7, col:16> 'const unsigned char' lvalue prefix '*' cannot overflow     | | | `-ParenExpr 0x140142170 <col:8, col:16> 'const unsigned char *'     | | |   `-BinaryOperator 0x140142150 <col:9, col:15> 'const unsigned char *' '-'     | | |     |-ImplicitCastExpr 0x140142138 <col:9> 'const unsigned char *' <LValueToRValue>     | | |     | `-DeclRefExpr 0x140128fc8 <col:9> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     | | |     `-IntegerLiteral 0x140142000 <col:15> 'int' 1     | | `-RecoveryExpr 0x1401421a8 <col:20> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x140143db8 <line:8:5, line:63:5>     | | |-BinaryOperator 0x140142228 <line:9:7, col:17> 'int' '='     | | | |-DeclRefExpr 0x1401421e8 <col:7> 'int' lvalue Var 0x140128e38 'tot_len' 'int'     | | | `-IntegerLiteral 0x140142208 <col:17> 'int' 0     | | |-BinaryOperator 0x140142510 <line:10:7, col:60> 'int' '='     | | | |-DeclRefExpr 0x140142248 <col:7> 'int' lvalue Var 0x140128eb8 'indefinite' 'int'     | | | `-CallExpr 0x1401424a8 <col:20, col:60> 'int'     | | |   |-ImplicitCastExpr 0x140142490 <col:20> 'int (*)()' <FunctionToPointerDecay>     | | |   | `-DeclRefExpr 0x1401423c0 <col:20> 'int ()' Function 0x140142308 'asn1_get_length_der' 'int ()'     | | |   |-ImplicitCastExpr 0x1401424e0 <col:41> 'const unsigned char *' <LValueToRValue>     | | |   | `-DeclRefExpr 0x1401423e0 <col:41> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     | | |   |-ImplicitCastExpr 0x1401424f8 <col:46> 'unsigned int' <LValueToRValue>     | | |   | `-DeclRefExpr 0x140142400 <col:46> 'unsigned int' lvalue ParmVar 0x140128a28 'der_len' 'unsigned int'     | | |   `-UnaryOperator 0x140142440 <col:55, col:56> 'int *' prefix '&' cannot overflow     | | |     `-DeclRefExpr 0x140142420 <col:56> 'int' lvalue Var 0x140128d38 'len3' 'int'     | | |-IfStmt 0x140142608 <line:11:7, line:12:9>     | | | |-BinaryOperator 0x1401425a0 <line:11:11, col:25> 'int' '<'     | | | | |-ImplicitCastExpr 0x140142588 <col:11> 'int' <LValueToRValue>     | | | | | `-DeclRefExpr 0x140142530 <col:11> 'int' lvalue Var 0x140128eb8 'indefinite' 'int'     | | | | `-UnaryOperator 0x140142570 <col:24, col:25> 'int' prefix '-'     | | | |   `-IntegerLiteral 0x140142550 <col:25> 'int' 1     | | | `-ReturnStmt 0x1401425f8 <line:12:2, col:9>     | | |   `-RecoveryExpr 0x1401425d8 <col:9> '<dependent type>' contains-errors lvalue     | | |-CompoundAssignOperator 0x140142680 <line:14:7, col:18> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | | |-DeclRefExpr 0x140142628 <col:7> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | | `-ImplicitCastExpr 0x140142668 <col:18> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x140142648 <col:18> 'int' lvalue Var 0x140128d38 'len3' 'int'     | | |-IfStmt 0x1401427b0 <line:15:7, line:16:16>     | | | |-BinaryOperator 0x140142708 <line:15:11, col:25> 'int' '>='     | | | | |-ImplicitCastExpr 0x1401426f0 <col:11> 'int' <LValueToRValue>     | | | | | `-DeclRefExpr 0x1401426b0 <col:11> 'int' lvalue Var 0x140128eb8 'indefinite' 'int'     | | | | `-IntegerLiteral 0x1401426d0 <col:25> 'int' 0     | | | `-CompoundAssignOperator 0x140142780 <line:16:2, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | |   |-DeclRefExpr 0x140142728 <col:2> 'int' lvalue Var 0x140128eb8 'indefinite' 'int'     | | |   `-ImplicitCastExpr 0x140142768 <col:16> 'int' <LValueToRValue>     | | |     `-DeclRefExpr 0x140142748 <col:16> 'int' lvalue Var 0x140128d38 'len3' 'int'     | | |-WhileStmt 0x1401434f0 <line:18:7, line:45:2>     | | | |-IntegerLiteral 0x1401427d0 <line:18:14> 'int' 1     | | | `-CompoundStmt 0x1401434a0 <line:19:2, line:45:2>     | | |   |-IfStmt 0x1401428e0 <line:20:4, line:21:13>     | | |   | |-BinaryOperator 0x140142878 <line:20:8, col:18> 'int' '>'     | | |   | | |-ImplicitCastExpr 0x140142860 <col:8> 'unsigned int' <IntegralCast>     | | |   | | | `-ImplicitCastExpr 0x140142830 <col:8> 'int' <LValueToRValue>     | | |   | | |   `-DeclRefExpr 0x1401427f0 <col:8> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   | | `-ImplicitCastExpr 0x140142848 <col:18> 'unsigned int' <LValueToRValue>     | | |   | |   `-DeclRefExpr 0x140142810 <col:18> 'unsigned int' lvalue ParmVar 0x140128a28 'der_len' 'unsigned int'     | | |   | `-ReturnStmt 0x1401428d0 <line:21:6, col:13>     | | |   |   `-RecoveryExpr 0x1401428b0 <col:13> '<dependent type>' contains-errors lvalue     | | |   |-IfStmt 0x140142db8 <line:23:4, line:32:6> has_else     | | |   | |-BinaryOperator 0x140142970 <line:23:8, col:23> 'int' '=='     | | |   | | |-ImplicitCastExpr 0x140142958 <col:8> 'int' <LValueToRValue>     | | |   | | | `-DeclRefExpr 0x140142900 <col:8> 'int' lvalue Var 0x140128eb8 'indefinite' 'int'     | | |   | | `-UnaryOperator 0x140142940 <col:22, col:23> 'int' prefix '-'     | | |   | |   `-IntegerLiteral 0x140142920 <col:23> 'int' 1     | | |   | |-CompoundStmt 0x140142ce8 <line:24:6, line:30:6>     | | |   | | `-IfStmt 0x140142cc8 <line:25:8, line:29:3>     | | |   | |   |-BinaryOperator 0x140142c10 <line:25:12, col:57> 'int' '&&'     | | |   | |   | |-ParenExpr 0x140142a90 <col:12, col:30> 'int'     | | |   | |   | | `-BinaryOperator 0x140142a70 <col:13, col:29> 'int' '=='     | | |   | |   | |   |-ImplicitCastExpr 0x140142a58 <col:13, col:24> 'int' <IntegralCast>     | | |   | |   | |   | `-ImplicitCastExpr 0x140142a40 <col:13, col:24> 'unsigned char' <LValueToRValue>     | | |   | |   | |   |   `-ArraySubscriptExpr 0x140142a00 <col:13, col:24> 'const unsigned char' lvalue     | | |   | |   | |   |     |-ImplicitCastExpr 0x1401429d0 <col:13> 'const unsigned char *' <LValueToRValue>     | | |   | |   | |   |     | `-DeclRefExpr 0x140142990 <col:13> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     | | |   | |   | |   |     `-ImplicitCastExpr 0x1401429e8 <col:17> 'int' <LValueToRValue>     | | |   | |   | |   |       `-DeclRefExpr 0x1401429b0 <col:17> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   | |   | |   `-IntegerLiteral 0x140142a20 <col:29> 'int' 0     | | |   | |   | `-ParenExpr 0x140142bf0 <col:35, col:57> 'int'     | | |   | |   |   `-BinaryOperator 0x140142bd0 <col:36, col:56> 'int' '=='     | | |   | |   |     |-ImplicitCastExpr 0x140142bb8 <col:36, col:51> 'int' <IntegralCast>     | | |   | |   |     | `-ImplicitCastExpr 0x140142ba0 <col:36, col:51> 'unsigned char' <LValueToRValue>     | | |   | |   |     |   `-ArraySubscriptExpr 0x140142b60 <col:36, col:51> 'const unsigned char' lvalue     | | |   | |   |     |     |-ImplicitCastExpr 0x140142b48 <col:36> 'const unsigned char *' <LValueToRValue>     | | |   | |   |     |     | `-DeclRefExpr 0x140142ab0 <col:36> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     | | |   | |   |     |     `-BinaryOperator 0x140142b28 <col:40, col:50> 'int' '+'     | | |   | |   |     |       |-ImplicitCastExpr 0x140142b10 <col:40> 'int' <LValueToRValue>     | | |   | |   |     |       | `-DeclRefExpr 0x140142ad0 <col:40> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   | |   |     |       `-IntegerLiteral 0x140142af0 <col:50> 'int' 1     | | |   | |   |     `-IntegerLiteral 0x140142b80 <col:56> 'int' 0     | | |   | |   `-CompoundStmt 0x140142ca8 <line:26:3, line:29:3>     | | |   | |     |-CompoundAssignOperator 0x140142c70 <line:27:5, col:16> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | |   | |     | |-DeclRefExpr 0x140142c30 <col:5> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   | |     | `-IntegerLiteral 0x140142c50 <col:16> 'int' 2     | | |   | |     `-BreakStmt 0x140142ca0 <line:28:5>     | | |   | `-IfStmt 0x140142d98 <line:31:9, line:32:6>     | | |   |   |-BinaryOperator 0x140142d70 <line:31:13, col:24> 'int' '>='     | | |   |   | |-ImplicitCastExpr 0x140142d40 <col:13> 'int' <LValueToRValue>     | | |   |   | | `-DeclRefExpr 0x140142d00 <col:13> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   |   | `-ImplicitCastExpr 0x140142d58 <col:24> 'int' <LValueToRValue>     | | |   |   |   `-DeclRefExpr 0x140142d20 <col:24> 'int' lvalue Var 0x140128eb8 'indefinite' 'int'     | | |   |   `-BreakStmt 0x140142d90 <line:32:6>     | | |   |-IfStmt 0x140142fd8 <line:34:4, line:35:13>     | | |   | |-BinaryOperator 0x140142f70 <line:34:8, col:24> 'int' contains-errors '!='     | | |   | | |-ArraySubscriptExpr 0x140142f30 <col:8, col:19> 'const unsigned char' lvalue     | | |   | | | |-ImplicitCastExpr 0x140142f00 <col:8> 'const unsigned char *' <LValueToRValue>     | | |   | | | | `-DeclRefExpr 0x140142de8 <col:8> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     | | |   | | | `-ImplicitCastExpr 0x140142f18 <col:12> 'int' <LValueToRValue>     | | |   | | |   `-DeclRefExpr 0x140142e08 <col:12> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   | | `-RecoveryExpr 0x140142f50 <col:24> '<dependent type>' contains-errors lvalue     | | |   | `-ReturnStmt 0x140142fc8 <line:35:6, col:13>     | | |   |   `-RecoveryExpr 0x140142fa8 <col:13> '<dependent type>' contains-errors lvalue     | | |   |-UnaryOperator 0x140143020 <line:37:4, col:11> 'int' postfix '++'     | | |   | `-DeclRefExpr 0x140143000 <col:4> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   |-BinaryOperator 0x140143238 <line:39:4, col:71> 'int' '='     | | |   | |-DeclRefExpr 0x140143038 <col:4> 'int' lvalue Var 0x140128cb8 'len2' 'int'     | | |   | `-CallExpr 0x140143200 <col:11, col:71> 'int'     | | |   |   |-ImplicitCastExpr 0x1401431e8 <col:11> 'int (*)()' <FunctionToPointerDecay>     | | |   |   | `-DeclRefExpr 0x140143058 <col:11> 'int ()' Function 0x140142308 'asn1_get_length_der' 'int ()'     | | |   |   |-BinaryOperator 0x1401430e8 <col:32, col:38> 'const unsigned char *' '+'     | | |   |   | |-ImplicitCastExpr 0x1401430b8 <col:32> 'const unsigned char *' <LValueToRValue>     | | |   |   | | `-DeclRefExpr 0x140143078 <col:32> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     | | |   |   | `-ImplicitCastExpr 0x1401430d0 <col:38> 'int' <LValueToRValue>     | | |   |   |   `-DeclRefExpr 0x140143098 <col:38> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   |   |-BinaryOperator 0x140143190 <col:47, col:57> 'unsigned int' '-'     | | |   |   | |-ImplicitCastExpr 0x140143148 <col:47> 'unsigned int' <LValueToRValue>     | | |   |   | | `-DeclRefExpr 0x140143108 <col:47> 'unsigned int' lvalue ParmVar 0x140128a28 'der_len' 'unsigned int'     | | |   |   | `-ImplicitCastExpr 0x140143178 <col:57> 'unsigned int' <IntegralCast>     | | |   |   |   `-ImplicitCastExpr 0x140143160 <col:57> 'int' <LValueToRValue>     | | |   |   |     `-DeclRefExpr 0x140143128 <col:57> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   |   `-UnaryOperator 0x1401431d0 <col:66, col:67> 'int *' prefix '&' cannot overflow     | | |   |     `-DeclRefExpr 0x1401431b0 <col:67> 'int' lvalue Var 0x140128d38 'len3' 'int'     | | |   |-IfStmt 0x140143318 <line:40:4, line:41:13>     | | |   | |-BinaryOperator 0x1401432b0 <line:40:8, col:16> 'int' '<='     | | |   | | |-ImplicitCastExpr 0x140143298 <col:8> 'int' <LValueToRValue>     | | |   | | | `-DeclRefExpr 0x140143258 <col:8> 'int' lvalue Var 0x140128cb8 'len2' 'int'     | | |   | | `-IntegerLiteral 0x140143278 <col:16> 'int' 0     | | |   | `-ReturnStmt 0x140143308 <line:41:6, col:13>     | | |   |   `-RecoveryExpr 0x1401432e8 <col:13> '<dependent type>' contains-errors lvalue     | | |   |-CompoundAssignOperator 0x1401433e8 <line:43:4, col:22> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | |   | |-DeclRefExpr 0x140143338 <col:4> 'int' lvalue Var 0x140128db8 'counter' 'int'     | | |   | `-BinaryOperator 0x1401433c8 <col:15, col:22> 'int' '+'     | | |   |   |-ImplicitCastExpr 0x140143398 <col:15> 'int' <LValueToRValue>     | | |   |   | `-DeclRefExpr 0x140143358 <col:15> 'int' lvalue Var 0x140128d38 'len3' 'int'     | | |   |   `-ImplicitCastExpr 0x1401433b0 <col:22> 'int' <LValueToRValue>     | | |   |     `-DeclRefExpr 0x140143378 <col:22> 'int' lvalue Var 0x140128cb8 'len2' 'int'     | | |   `-CompoundAssignOperator 0x140143470 <line:44:4, col:15> 'int' '+=' ComputeLHSTy='int' ComputeResultTy='int'     | | |     |-DeclRefExpr 0x140143418 <col:4> 'int' lvalue Var 0x140128e38 'tot_len' 'int'     | | |     `-ImplicitCastExpr 0x140143458 <col:15> 'int' <LValueToRValue>     | | |       `-DeclRefExpr 0x140143438 <col:15> 'int' lvalue Var 0x140128cb8 'len2' 'int'     | | `-IfStmt 0x140143d98 <line:48:7, line:62:2>     | |   |-RecoveryExpr 0x140143510 <line:48:11> '<dependent type>' contains-errors lvalue     | |   `-CompoundStmt 0x140143d50 <line:49:2, line:62:2>     | |     |-DeclStmt 0x1401435c8 <line:50:4, col:44>     | |     | `-VarDecl 0x140143560 <col:4, col:18> col:18 invalid temp 'unsigned char'     | |     |-DeclStmt 0x140143660 <line:51:4, col:11>     | |     | `-VarDecl 0x1401435f8 <col:4, col:8> col:8 used ret 'int'     | |     |-BinaryOperator 0x140143710 <line:53:4, col:23> 'int' contains-errors '='     | |     | |-DeclRefExpr 0x140143678 <col:4> 'int' lvalue Var 0x140128cb8 'len2' 'int'     | |     | `-ImplicitCastExpr 0x1401436f8 <col:11, col:23> 'int' contains-errors <IntegralCast>     | |     |   `-UnaryExprOrTypeTraitExpr 0x1401436d8 <col:11, col:23> 'unsigned long' contains-errors sizeof     | |     |     `-ParenExpr 0x1401436b8 <col:18, col:23> '<dependent type>' contains-errors lvalue     | |     |       `-RecoveryExpr 0x140143698 <col:19> '<dependent type>' contains-errors lvalue     | |     |-CallExpr 0x1401438a8 <line:55:4, col:41> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x140143810 <col:4> 'int ()' Function 0x140143758 'asn1_length_der' 'int ()'     | |     | |-DeclRefExpr 0x140143830 <col:21> 'int' lvalue Var 0x140128e38 'tot_len' 'int'     | |     | |-RecoveryExpr 0x140143850 <col:30> '<dependent type>' contains-errors lvalue     | |     | `-UnaryOperator 0x140143890 <col:36, col:37> 'int *' prefix '&' cannot overflow     | |     |   `-DeclRefExpr 0x140143870 <col:37> 'int' lvalue Var 0x140128cb8 'len2' 'int'     | |     |-CallExpr 0x140143a40 <line:56:4, col:37> '<dependent type>' contains-errors     | |     | |-DeclRefExpr 0x1401439c0 <col:4> 'int ()' Function 0x140143908 '_asn1_set_value' 'int ()'     | |     | |-RecoveryExpr 0x1401439e0 <col:21> '<dependent type>' contains-errors lvalue     | |     | |-RecoveryExpr 0x140143a00 <col:27> '<dependent type>' contains-errors lvalue     | |     | `-DeclRefExpr 0x140143a20 <col:33> 'int' lvalue Var 0x140128cb8 'len2' 'int'     | |     |-BinaryOperator 0x140143c30 <line:58:4, col:53> 'int' contains-errors '='     | |     | |-DeclRefExpr 0x140143a78 <col:4> 'int' lvalue Var 0x1401435f8 'ret' 'int'     | |     | `-CallExpr 0x140143bf8 <col:10, col:53> '<dependent type>' contains-errors     | |     |   |-DeclRefExpr 0x140143b78 <col:10> 'int ()' Function 0x140143ac0 '_asn1_extract_der_octet' 'int ()'     | |     |   |-RecoveryExpr 0x140143b98 <col:35> '<dependent type>' contains-errors lvalue     | |     |   |-DeclRefExpr 0x140143bb8 <col:41> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     | |     |   `-DeclRefExpr 0x140143bd8 <col:46> 'unsigned int' lvalue ParmVar 0x140128a28 'der_len' 'unsigned int'     | |     `-IfStmt 0x140143d30 <line:59:4, line:60:13>     | |       |-BinaryOperator 0x140143cc8 <line:59:8, col:15> 'int' contains-errors '!='     | |       | |-DeclRefExpr 0x140143c50 <col:8> 'int' lvalue Var 0x1401435f8 'ret' 'int'     | |       | `-RecoveryExpr 0x140143ca8 <col:15> '<dependent type>' contains-errors lvalue     | |       `-ReturnStmt 0x140143d20 <line:60:6, col:13>     | |         `-ImplicitCastExpr 0x140143d08 <col:13> 'int' <LValueToRValue>     | |           `-DeclRefExpr 0x140143ce8 <col:13> 'int' lvalue Var 0x1401435f8 'ret' 'int'     | `-CompoundStmt 0x140144618 <line:65:5, line:73:5>     |   |-BinaryOperator 0x140143f38 <line:66:7, col:54> 'int' '='     |   | |-DeclRefExpr 0x140143e00 <col:7> 'int' lvalue Var 0x140128cb8 'len2' 'int'     |   | `-CallExpr 0x140143ed0 <col:14, col:54> 'int'     |   |   |-ImplicitCastExpr 0x140143eb8 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x140143e20 <col:14> 'int ()' Function 0x140142308 'asn1_get_length_der' 'int ()'     |   |   |-ImplicitCastExpr 0x140143f08 <col:35> 'const unsigned char *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x140143e40 <col:35> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     |   |   |-ImplicitCastExpr 0x140143f20 <col:40> 'unsigned int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x140143e60 <col:40> 'unsigned int' lvalue ParmVar 0x140128a28 'der_len' 'unsigned int'     |   |   `-UnaryOperator 0x140143ea0 <col:49, col:50> 'int *' prefix '&' cannot overflow     |   |     `-DeclRefExpr 0x140143e80 <col:50> 'int' lvalue Var 0x140128d38 'len3' 'int'     |   |-IfStmt 0x140144430 <line:67:7, line:68:9>     |   | |-BinaryOperator 0x140143fb0 <line:67:11, col:18> 'int' '<'     |   | | |-ImplicitCastExpr 0x140143f98 <col:11> 'int' <LValueToRValue>     |   | | | `-DeclRefExpr 0x140143f58 <col:11> 'int' lvalue Var 0x140128cb8 'len2' 'int'     |   | | `-IntegerLiteral 0x140143f78 <col:18> 'int' 0     |   | `-ReturnStmt 0x140144420 <line:68:2, col:9>     |   |   `-RecoveryExpr 0x140144400 <col:9> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x140144500 <line:70:7, col:24> 'int' '='     |   | |-DeclRefExpr 0x140144450 <col:7> 'int' lvalue Var 0x140128db8 'counter' 'int'     |   | `-BinaryOperator 0x1401444e0 <col:17, col:24> 'int' '+'     |   |   |-ImplicitCastExpr 0x1401444b0 <col:17> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x140144470 <col:17> 'int' lvalue Var 0x140128d38 'len3' 'int'     |   |   `-ImplicitCastExpr 0x1401444c8 <col:24> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x140144490 <col:24> 'int' lvalue Var 0x140128cb8 'len2' 'int'     |   `-IfStmt 0x1401445f8 <line:71:7, line:72:37>     |     |-RecoveryExpr 0x140144520 <line:71:11> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x1401445c0 <line:72:2, col:37> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x140144540 <col:2> 'int ()' Function 0x140143908 '_asn1_set_value' 'int ()'     |       |-RecoveryExpr 0x140144560 <col:19> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x140144580 <col:25> 'const unsigned char *' lvalue ParmVar 0x1401289a8 'der' 'const unsigned char *'     |       `-DeclRefExpr 0x1401445a0 <col:30> 'int' lvalue Var 0x140128db8 'counter' 'int'     |-BinaryOperator 0x140144700 <line:75:3, col:10> 'int' '='     | |-UnaryOperator 0x1401446b0 <col:3, col:4> 'int' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x140144698 <col:4> 'int *' <LValueToRValue>     | |   `-DeclRefExpr 0x140144678 <col:4> 'int *' lvalue ParmVar 0x140128ad8 'len' 'int *'     | `-ImplicitCastExpr 0x1401446e8 <col:10> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x1401446c8 <col:10> 'int' lvalue Var 0x140128db8 'counter' 'int'     `-ReturnStmt 0x140144758 <line:76:3, col:10>       `-RecoveryExpr 0x140144738 <col:10> '<dependent type>' contains-errors lvalue ","19771":"`-FunctionDecl 0x13f02ca20  col:7 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x13f02cb20 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x13f02cb88 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x13f02cbf0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x13f02cac8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x13f02cc70 <col:7> Implicit printf 3 4 ","19467":"`-FunctionDecl 0x139928758  line:1:1 htc_request_check_host_hdr 'int (struct http *)'   |-ParmVarDecl 0x139928648 <col:28, col:41> col:41 used hp 'struct http *'   `-CompoundStmt 0x139941908 <line:2:1, line:18:1>     |-DeclStmt 0x139940ad0 <line:3:2, col:7>     | `-VarDecl 0x139940a68 <col:2, col:6> col:6 used u 'int'     |-DeclStmt 0x139940b88 <line:4:2, col:19>     | `-VarDecl 0x139940b00 <col:2, col:18> col:6 used seen_host 'int' cinit     |   `-IntegerLiteral 0x139940b68 <col:18> 'int' 0     |-ForStmt 0x139941880 <line:5:2, line:16:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x139940c90 <line:5:27, col:35> 'int' contains-errors '<'     | | |-DeclRefExpr 0x139940c10 <col:27> 'int' lvalue Var 0x139940a68 'u' 'int'     | | `-RecoveryExpr 0x139940c68 <col:31, col:35> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x139940c30 <col:31> 'struct http *' lvalue ParmVar 0x139928648 'hp' 'struct http *'     | |-UnaryOperator 0x139940cd0 <col:40, col:41> 'int' postfix '++'     | | `-DeclRefExpr 0x139940cb0 <col:40> 'int' lvalue Var 0x139940a68 'u' 'int'     | `-CompoundStmt 0x139941850 <col:45, line:16:2>     |   |-IfStmt 0x139940fb0 <line:6:3, line:7:4>     |   | |-BinaryOperator 0x139940f88 <line:6:7, col:22> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x139940f20 <col:7, col:17> '<dependent type>' contains-errors lvalue .b     |   | | | `-ArraySubscriptExpr 0x139940f00 <col:7, col:15> '<dependent type>' contains-errors lvalue     |   | | |   |-ImplicitCastExpr 0x139940ed0 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     |   | | |   | `-RecoveryExpr 0x139940d20 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   | | |   |   `-DeclRefExpr 0x139940ce8 <col:7> 'struct http *' lvalue ParmVar 0x139928648 'hp' 'struct http *'     |   | | |   `-ImplicitCastExpr 0x139940ee8 <col:14> 'int' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x139940d48 <col:14> 'int' lvalue Var 0x139940a68 'u' 'int'     |   | | `-RecoveryExpr 0x139940f68 <col:22> '<dependent type>' contains-errors lvalue     |   | `-ContinueStmt 0x139940fa8 <line:7:4>     |   |-CallExpr 0x139941218 <line:8:3, col:17> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1399410e0 <col:3> 'int ()' Function 0x139941028 'AN' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x1399411d0 <col:6, col:16> '<dependent type>' contains-errors lvalue .b     |   |   `-ArraySubscriptExpr 0x1399411b0 <col:6, col:14> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x139941180 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x139941138 <col:6, col:10> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x139941100 <col:6> 'struct http *' lvalue ParmVar 0x139928648 'hp' 'struct http *'     |   |     `-ImplicitCastExpr 0x139941198 <col:13> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x139941160 <col:13> 'int' lvalue Var 0x139940a68 'u' 'int'     |   |-CallExpr 0x139941378 <line:9:3, col:17> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x139941240 <col:3> 'int ()' Function 0x139941028 'AN' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x139941330 <col:6, col:16> '<dependent type>' contains-errors lvalue .e     |   |   `-ArraySubscriptExpr 0x139941310 <col:6, col:14> '<dependent type>' contains-errors lvalue     |   |     |-ImplicitCastExpr 0x1399412e0 <col:6, col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     | `-RecoveryExpr 0x139941298 <col:6, col:10> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x139941260 <col:6> 'struct http *' lvalue ParmVar 0x139928648 'hp' 'struct http *'     |   |     `-ImplicitCastExpr 0x1399412f8 <col:13> 'int' <LValueToRValue>     |   |       `-DeclRefExpr 0x1399412c0 <col:13> 'int' lvalue Var 0x139940a68 'u' 'int'     |   `-IfStmt 0x139941830 <line:10:3, line:15:3>     |     |-CallExpr 0x1399416c0 <line:10:7, col:36> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x139941480 <col:7> 'int ()' Function 0x1399413c8 'http_IsHdr' 'int ()'     |     | |-UnaryOperator 0x139941688 <col:18, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | | `-ArraySubscriptExpr 0x139941668 <col:19, col:27> '<dependent type>' contains-errors lvalue     |     | |   |-ImplicitCastExpr 0x139941638 <col:19, col:23> '<dependent type>' contains-errors <LValueToRValue>     |     | |   | `-RecoveryExpr 0x1399414d8 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     | |   |   `-DeclRefExpr 0x1399414a0 <col:19> 'struct http *' lvalue ParmVar 0x139928648 'hp' 'struct http *'     |     | |   `-ImplicitCastExpr 0x139941650 <col:26> 'int' <LValueToRValue>     |     | |     `-DeclRefExpr 0x139941500 <col:26> 'int' lvalue Var 0x139940a68 'u' 'int'     |     | `-RecoveryExpr 0x1399416a0 <col:30> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x139941810 <col:39, line:15:3>     |       |-IfStmt 0x139941790 <line:11:4, line:13:4>     |       | |-ImplicitCastExpr 0x139941710 <line:11:8> 'int' <LValueToRValue>     |       | | `-DeclRefExpr 0x1399416f0 <col:8> 'int' lvalue Var 0x139940b00 'seen_host' 'int'     |       | `-CompoundStmt 0x139941778 <col:19, line:13:4>     |       |   `-ReturnStmt 0x139941768 <line:12:5, col:16>     |       |     `-ParenExpr 0x139941748 <col:12, col:16> 'int'     |       |       `-IntegerLiteral 0x139941728 <col:13> 'int' 400     |       `-BinaryOperator 0x1399417f0 <line:14:4, col:16> 'int' '='     |         |-DeclRefExpr 0x1399417b0 <col:4> 'int' lvalue Var 0x139940b00 'seen_host' 'int'     |         `-IntegerLiteral 0x1399417d0 <col:16> 'int' 1     `-ReturnStmt 0x1399418f8 <line:17:2, col:11>       `-ParenExpr 0x1399418d8 <col:9, col:11> 'int'         `-IntegerLiteral 0x1399418b8 <col:10> 'int' 0 ","20163":"`-FunctionDecl 0x13a8ff718  col:22 encoding_scope 'unsigned long long ()' ","19332":"`-FunctionDecl 0x1498311d0  line:1:13 invalid desc_read_cb 'void (struct gatt_db_attribute *, unsigned int, int, int, struct bt_att *, void *)' static   |-ParmVarDecl 0x149817c48 <col:26, col:52> col:52 used attrib 'struct gatt_db_attribute *'   |-ParmVarDecl 0x149817cc8 <line:2:6, col:19> col:19 used id 'unsigned int'   |-ParmVarDecl 0x149817d60 <col:23, col:32> col:32 invalid offset 'int'   |-ParmVarDecl 0x149830e00 <line:3:6, col:14> col:14 invalid opcode 'int'   |-ParmVarDecl 0x149830fd8 <col:22, col:37> col:37 used att 'struct bt_att *'   |-ParmVarDecl 0x149831058 <line:4:6, col:12> col:12 used user_data 'void *'   `-CompoundStmt 0x14a8eba98 <line:5:1, line:27:1>     |-DeclStmt 0x1498314e8 <line:6:2, col:40>     | |-RecordDecl 0x1498312a8 <col:2, col:9> col:9 struct external_desc     | `-VarDecl 0x149831418 <col:2, col:31> col:24 used desc 'struct external_desc *' cinit     |   `-ImplicitCastExpr 0x1498314b8 <col:31> 'struct external_desc *' <BitCast>     |     `-ImplicitCastExpr 0x1498314a0 <col:31> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x149831480 <col:31> 'void *' lvalue ParmVar 0x149831058 'user_data' 'void *'     |-DeclStmt 0x1498316e8 <line:7:2, col:27>     | |-RecordDecl 0x149831500 <col:2, col:9> col:9 struct btd_device     | `-VarDecl 0x149831668 <col:2, col:21> col:21 used device 'struct btd_device *'     |-IfStmt 0x149831a90 <line:9:2, line:12:2>     | |-BinaryOperator 0x149831780 <line:9:6, col:22> 'int' contains-errors '!='     | | |-RecoveryExpr 0x149831738 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x149831700 <col:6> 'struct external_desc *' lvalue Var 0x149831418 'desc' 'struct external_desc *'     | | `-DeclRefExpr 0x149831760 <col:22> 'struct gatt_db_attribute *' lvalue ParmVar 0x149817c48 'attrib' 'struct gatt_db_attribute *'     | `-CompoundStmt 0x149831a70 <col:30, line:12:2>     |   |-CallExpr 0x1498319c8 <line:10:3, col:14> 'int'     |   | |-ImplicitCastExpr 0x1498319b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x149831900 <col:3> 'int ()' Function 0x149831848 'error' 'int ()'     |   | `-ImplicitCastExpr 0x1498319f0 <col:9> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x149831960 <col:9> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x149831a58 <line:11:3, col:8> 'fail' 0x149831a08     |-BinaryOperator 0x149831c60 <line:14:2, col:29> 'struct btd_device *' '='     | |-DeclRefExpr 0x149831ab0 <col:2> 'struct btd_device *' lvalue Var 0x149831668 'device' 'struct btd_device *'     | `-ImplicitCastExpr 0x149831c48 <col:11, col:29> 'struct btd_device *' <IntegralToPointer>     |   `-CallExpr 0x149831c08 <col:11, col:29> 'int'     |     |-ImplicitCastExpr 0x149831bf0 <col:11> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x149831bb0 <col:11> 'int ()' Function 0x149831af8 'att_get_device' 'int ()'     |     `-ImplicitCastExpr 0x149831c30 <col:26> 'struct bt_att *' <LValueToRValue>     |       `-DeclRefExpr 0x149831bd0 <col:26> 'struct bt_att *' lvalue ParmVar 0x149830fd8 'att' 'struct bt_att *'     |-IfStmt 0x149831da0 <line:15:2, line:18:2>     | |-UnaryOperator 0x149831cb8 <line:15:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x149831ca0 <col:7> 'struct btd_device *' <LValueToRValue>     | |   `-DeclRefExpr 0x149831c80 <col:7> 'struct btd_device *' lvalue Var 0x149831668 'device' 'struct btd_device *'     | `-CompoundStmt 0x149831d80 <col:15, line:18:2>     |   |-CallExpr 0x149831d28 <line:16:3, col:14> 'int'     |   | |-ImplicitCastExpr 0x149831d10 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x149831cd0 <col:3> 'int ()' Function 0x149831848 'error' 'int ()'     |   | `-ImplicitCastExpr 0x149831d50 <col:9> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x149831cf0 <col:9> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x149831d68 <line:17:3, col:8> 'fail' 0x149831a08     |-IfStmt 0x14a8eb7f8 <line:20:2, line:22:3>     | |-CallExpr 0x14a8eb790 <line:20:6, line:21:39> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14a8eb4b8 <line:20:6> 'int ()' Function 0x14a8eb400 'send_read' 'int ()'     | | |-DeclRefExpr 0x14a8eb4d8 <col:16> 'struct btd_device *' lvalue Var 0x149831668 'device' 'struct btd_device *'     | | |-DeclRefExpr 0x14a8eb4f8 <col:24> 'struct gatt_db_attribute *' lvalue ParmVar 0x149817c48 'attrib' 'struct gatt_db_attribute *'     | | |-RecoveryExpr 0x14a8eb550 <col:32, col:38> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14a8eb518 <col:32> 'struct external_desc *' lvalue Var 0x149831418 'desc' 'struct external_desc *'     | | |-RecoveryExpr 0x14a8eb5b0 <col:45, col:51> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x14a8eb578 <col:45> 'struct external_desc *' lvalue Var 0x149831418 'desc' 'struct external_desc *'     | | |-DeclRefExpr 0x14a8eb5d8 <col:66> 'unsigned int' lvalue ParmVar 0x149817cc8 'id' 'unsigned int'     | | |-RecoveryExpr 0x14a8eb5f8 <line:21:6> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x14a8eb750 <col:14, col:38> 'int'     | |   |-ImplicitCastExpr 0x14a8eb738 <col:14> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x14a8eb6f8 <col:14> 'int ()' Function 0x14a8eb640 'bt_att_get_link_type' 'int ()'     | |   `-ImplicitCastExpr 0x14a8eb778 <col:35> 'struct bt_att *' <LValueToRValue>     | |     `-DeclRefExpr 0x14a8eb718 <col:35> 'struct bt_att *' lvalue ParmVar 0x149830fd8 'att' 'struct bt_att *'     | `-ReturnStmt 0x14a8eb7e8 <line:22:3>     `-LabelStmt 0x14a8eba78 <line:24:1, line:26:16> 'fail'       `-CallExpr 0x14a8eba30 <line:25:2, line:26:16> '<dependent type>' contains-errors         |-DeclRefExpr 0x14a8eb8f8 <line:25:2> 'int ()' Function 0x14a8eb840 'gatt_db_attribute_read_result' 'int ()'         |-DeclRefExpr 0x14a8eb918 <col:32> 'struct gatt_db_attribute *' lvalue ParmVar 0x149817c48 'attrib' 'struct gatt_db_attribute *'         |-DeclRefExpr 0x14a8eb938 <col:40> 'unsigned int' lvalue ParmVar 0x149817cc8 'id' 'unsigned int'         |-RecoveryExpr 0x14a8eb9f0 <col:44> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x14a8eba10 <line:26:9> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x14a8eb988 <col:15> 'int' 0 ","20179":"`-FunctionDecl 0x12f128238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x12f128158 <col:12> col:12 used SplObjectStorage 'int'   |-ParmVarDecl 0x12f1280d8 <col:30> col:30 valid 'int'   `-CompoundStmt 0x12f141bf0 <line:2:1, line:10:1>     |-IfStmt 0x12f128688 <line:5:2, line:7:2>     | |-BinaryOperator 0x12f128640 <line:5:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x12f128600 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x12f1285e8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x12f1284f0 <col:6> 'int ()' Function 0x12f128438 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x12f128620 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f128670 <col:47, line:7:2>     |   `-ReturnStmt 0x12f128660 <line:6:3>     `-CallExpr 0x12f141bc8 <line:9:2, col:87> '<dependent type>' contains-errors       |-DeclRefExpr 0x12f128788 <col:2> 'int ()' Function 0x12f1286d0 'RETURN_BOOL' 'int ()'       `-BinaryOperator 0x12f141ba8 <col:14, col:80> 'int' contains-errors '=='         |-CallExpr 0x12f141b58 <col:14, col:75> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12f1418b8 <col:14> 'int ()' Function 0x12f141800 'zend_hash_has_more_elements_ex' 'int ()'         | |-UnaryOperator 0x12f141ac0 <col:45, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow         | | `-CXXDependentScopeMemberExpr 0x12f141a78 <col:46, col:54> '<dependent type>' contains-errors lvalue ->storage         | |   `-RecoveryExpr 0x12f141a58 <col:46> '<dependent type>' contains-errors lvalue         | `-UnaryOperator 0x12f141b40 <col:63, col:72> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x12f141af8 <col:64, col:72> '<dependent type>' contains-errors lvalue ->pos         |     `-RecoveryExpr 0x12f141ad8 <col:64> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x12f141b88 <col:80> '<dependent type>' contains-errors lvalue ","19997":"`-FunctionDecl 0x136928750  line:1:6 megasas_start_timer 'void (struct megasas_instance *)'   |-ParmVarDecl 0x136928648 <col:26, col:51> col:51 used instance 'struct megasas_instance *'   `-CompoundStmt 0x1369411f8 <line:2:1, line:8:1>     |-DeclStmt 0x136940cb0 <line:3:2, col:61>     | |-RecordDecl 0x136940a48 <col:2, col:9> col:9 struct timer_list     | `-VarDecl 0x136940bb8 <col:2, col:40> col:21 used timer 'struct timer_list *' cinit     |   `-UnaryOperator 0x136940c80 <col:29, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x136940c58 <col:30, col:40> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x136940c20 <col:30> 'struct megasas_instance *' lvalue ParmVar 0x136928648 'instance' 'struct megasas_instance *'     |-CallExpr 0x136940ec0 <line:5:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136940df0 <col:2> 'int ()' Function 0x136940d38 'timer_setup' 'int ()'     | |-DeclRefExpr 0x136940e10 <col:14> 'struct timer_list *' contains-errors lvalue Var 0x136940bb8 'timer' 'struct timer_list *'     | |-RecoveryExpr 0x136940ea0 <col:21> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x136940e48 <col:54> 'int' 0     |-BinaryOperator 0x136941028 <line:6:2, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x136940f30 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x136940ef8 <col:2> 'struct timer_list *' contains-errors lvalue Var 0x136940bb8 'timer' 'struct timer_list *'     | `-BinaryOperator 0x136941008 <col:19, col:29> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x136940fc8 <col:19> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x136940fe8 <col:29> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1369411b8 <line:7:2, col:17> 'int' contains-errors       |-ImplicitCastExpr 0x1369411a0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x136941128 <col:2> 'int ()' Function 0x136941070 'add_timer' 'int ()'       `-ImplicitCastExpr 0x1369411e0 <col:12> 'struct timer_list *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x136941148 <col:12> 'struct timer_list *' contains-errors lvalue Var 0x136940bb8 'timer' 'struct timer_list *' ","19954":"`-FunctionDecl 0x149144e08  line:1:1 set_posix_acl 'int (struct inode *, int, struct posix_acl *)'   |-ParmVarDecl 0x149128648 <col:15, col:29> col:29 used inode 'struct inode *'   |-ParmVarDecl 0x1491286c8 <col:36, col:40> col:40 used type 'int'   |-ParmVarDecl 0x149144cc8 <col:46, col:64> col:64 used acl 'struct posix_acl *'   `-CompoundStmt 0x149145ee0 <line:2:1, line:19:1>     |-IfStmt 0x1491451c8 <line:3:2, line:4:11>     | |-UnaryOperator 0x149145108 <line:3:6, col:24> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1491450c8 <col:7, col:24> 'int'     | |   |-ImplicitCastExpr 0x1491450b0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x149145040 <col:7> 'int ()' Function 0x149144f88 'IS_POSIXACL' 'int ()'     | |   `-ImplicitCastExpr 0x1491450f0 <col:19> 'struct inode *' <LValueToRValue>     | |     `-DeclRefExpr 0x149145060 <col:19> 'struct inode *' lvalue ParmVar 0x149128648 'inode' 'struct inode *'     | `-ReturnStmt 0x1491451b8 <line:4:3, col:11>     |   `-UnaryOperator 0x1491451a0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x149145188 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x149145168 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149145368 <line:5:2, line:6:11>     | |-UnaryOperator 0x1491452a8 <line:5:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x149145290 <col:7, col:20> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x149145248 <col:7, col:20> '<dependent type>' contains-errors lvalue ->set_acl     | |     `-RecoveryExpr 0x149145220 <col:7, col:14> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1491451e8 <col:7> 'struct inode *' lvalue ParmVar 0x149128648 'inode' 'struct inode *'     | `-ReturnStmt 0x149145358 <line:6:3, col:11>     |   `-UnaryOperator 0x149145340 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x149145328 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x149145308 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149145748 <line:8:2, line:9:26>     | |-BinaryOperator 0x1491455e0 <line:8:6, col:56> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1491455c0 <col:6, col:14> 'int' contains-errors '=='     | | | |-DeclRefExpr 0x149145388 <col:6> 'int' lvalue ParmVar 0x1491286c8 'type' 'int'     | | | `-RecoveryExpr 0x1491455a0 <col:14> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x149145568 <col:34, col:56> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-CallExpr 0x149145540 <col:35, col:56> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x1491454c0 <col:35> 'int ()' Function 0x149145408 'S_ISDIR' 'int ()'     | |     `-RecoveryExpr 0x149145518 <col:43, col:50> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1491454e0 <col:43> 'struct inode *' lvalue ParmVar 0x149128648 'inode' 'struct inode *'     | `-ReturnStmt 0x149145738 <line:9:3, col:26>     |   `-ConditionalOperator 0x149145708 <col:10, col:26> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x149145600 <col:10> 'struct posix_acl *' lvalue ParmVar 0x149144cc8 'acl' 'struct posix_acl *'     |     |-UnaryOperator 0x1491456f0 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow     |     | `-ImplicitCastExpr 0x1491456d8 <col:17> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x1491456b8 <col:17> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x149145668 <col:26> 'int' 0     |-IfStmt 0x1491459a0 <line:10:2, line:11:11>     | |-UnaryOperator 0x1491458e0 <line:10:6, col:35> 'int' prefix '!' cannot overflow     | | `-CallExpr 0x1491458a0 <col:7, col:35> 'int'     | |   |-ImplicitCastExpr 0x149145888 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x149145848 <col:7> 'int ()' Function 0x149145790 'inode_owner_or_capable' 'int ()'     | |   `-ImplicitCastExpr 0x1491458c8 <col:30> 'struct inode *' <LValueToRValue>     | |     `-DeclRefExpr 0x149145868 <col:30> 'struct inode *' lvalue ParmVar 0x149128648 'inode' 'struct inode *'     | `-ReturnStmt 0x149145990 <line:11:3, col:11>     |   `-UnaryOperator 0x149145978 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x149145960 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x149145940 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x149145d70 <line:13:2, line:17:2>     | |-ImplicitCastExpr 0x1491459e0 <line:13:6> 'struct posix_acl *' <LValueToRValue>     | | `-DeclRefExpr 0x1491459c0 <col:6> 'struct posix_acl *' lvalue ParmVar 0x149144cc8 'acl' 'struct posix_acl *'     | `-CompoundStmt 0x149145d50 <col:11, line:17:2>     |   |-DeclStmt 0x149145c98 <line:14:3, col:57>     |   | `-VarDecl 0x149145a10 <col:3, col:56> col:7 used ret 'int' cinit     |   |   `-CallExpr 0x149145c68 <col:13, col:56> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x149145b58 <col:13> 'int ()' Function 0x149145aa0 'posix_acl_valid' 'int ()'     |   |     |-CXXDependentScopeMemberExpr 0x149145c00 <col:29, col:42> '<dependent type>' contains-errors lvalue ->s_user_ns     |   |     | `-RecoveryExpr 0x149145bb0 <col:29, col:36> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x149145b78 <col:29> 'struct inode *' lvalue ParmVar 0x149128648 'inode' 'struct inode *'     |   |     `-DeclRefExpr 0x149145c48 <col:53> 'struct posix_acl *' lvalue ParmVar 0x149144cc8 'acl' 'struct posix_acl *'     |   `-IfStmt 0x149145d30 <line:15:3, line:16:11>     |     |-ImplicitCastExpr 0x149145cd0 <line:15:7> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x149145cb0 <col:7> 'int' contains-errors lvalue Var 0x149145a10 'ret' 'int'     |     `-ReturnStmt 0x149145d20 <line:16:4, col:11>     |       `-ImplicitCastExpr 0x149145d08 <col:11> 'int' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x149145ce8 <col:11> 'int' contains-errors lvalue Var 0x149145a10 'ret' 'int'     `-ReturnStmt 0x149145ed0 <line:18:2, col:46>       `-CallExpr 0x149145e98 <col:9, col:46> '<dependent type>' contains-errors         |-CXXDependentScopeMemberExpr 0x149145df0 <col:9, col:22> '<dependent type>' contains-errors lvalue ->set_acl         | `-RecoveryExpr 0x149145dc8 <col:9, col:16> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x149145d90 <col:9> 'struct inode *' lvalue ParmVar 0x149128648 'inode' 'struct inode *'         |-DeclRefExpr 0x149145e38 <col:30> 'struct inode *' lvalue ParmVar 0x149128648 'inode' 'struct inode *'         |-DeclRefExpr 0x149145e58 <col:37> 'struct posix_acl *' lvalue ParmVar 0x149144cc8 'acl' 'struct posix_acl *'         `-DeclRefExpr 0x149145e78 <col:42> 'int' lvalue ParmVar 0x1491286c8 'type' 'int' ","19553":"`-FunctionDecl 0x14000ddf8  line:1:17 invalid pi_next_rlcp 'int (int *)' static   |-ParmVarDecl 0x14000dd28 <col:30, col:50> col:50 referenced invalid pi 'int *'   `-CompoundStmt 0x140029068 <line:2:1, line:41:1>     |-DeclStmt 0x14000dfc0 <line:5:5, col:19>     | `-VarDecl 0x14000df20 <col:5, col:18> col:10 used index 'long' cinit     |   `-ImplicitCastExpr 0x14000dfa8 <col:18> 'long' <IntegralCast>     |     `-IntegerLiteral 0x14000df88 <col:18> 'int' 0     |-IfStmt 0x140027400 <line:7:5, line:13:5> has_else     | |-UnaryOperator 0x14000e058 <line:7:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14000e040 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x14000dff8 <col:10, col:14> '<dependent type>' contains-errors lvalue ->first     | |     `-RecoveryExpr 0x14000dfd8 <col:10> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x14000e2d8 <col:21, line:11:5>     | | `-GotoStmt 0x14000e2c0 <line:10:9, col:14> 'LABEL_SKIP' 0x14000e270     | `-CompoundStmt 0x14000e3c0 <line:11:12, line:13:5>     |   `-BinaryOperator 0x14000e3a0 <line:12:9, col:21> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x14000e338 <col:9, col:13> '<dependent type>' contains-errors lvalue ->first     |     | `-RecoveryExpr 0x14000e310 <col:9> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14000e2f0 <col:9> 'int *' lvalue ParmVar 0x14000dd28 'pi' 'int *'     |     `-IntegerLiteral 0x14000e380 <col:21> 'int' 0     |-ForStmt 0x140028fe8 <line:15:5, line:38:5>     | |-BinaryOperator 0x140027548 <line:15:10, col:30> '<dependent type>' contains-errors '='     | | |-CXXDependentScopeMemberExpr 0x140027450 <col:10, col:14> '<dependent type>' contains-errors lvalue ->resno     | | | `-RecoveryExpr 0x140027430 <col:10> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x140027500 <col:22, col:30> '<dependent type>' contains-errors lvalue .resno0     | |   `-CXXDependentScopeMemberExpr 0x1400274b8 <col:22, col:26> '<dependent type>' contains-errors lvalue ->poc     | |     `-RecoveryExpr 0x140027498 <col:22> '<dependent type>' contains-errors lvalue     | |-<<<NULL>>>     | |-BinaryOperator 0x140027680 <col:38, col:58> 'int' contains-errors '<'     | | |-CXXDependentScopeMemberExpr 0x140027588 <col:38, col:42> '<dependent type>' contains-errors lvalue ->resno     | | | `-RecoveryExpr 0x140027568 <col:38> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x140027638 <col:50, col:58> '<dependent type>' contains-errors lvalue .resno1     | |   `-CXXDependentScopeMemberExpr 0x1400275f0 <col:50, col:54> '<dependent type>' contains-errors lvalue ->poc     | |     `-RecoveryExpr 0x1400275d0 <col:50> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x140027708 <col:66, col:75> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1400276c0 <col:66, col:70> '<dependent type>' contains-errors lvalue ->resno     | |   `-RecoveryExpr 0x1400276a0 <col:66> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x140028fd0 <col:79, line:38:5>     |   `-ForStmt 0x140028f98 <line:16:9, line:37:9>     |     |-BinaryOperator 0x140027838 <line:16:14, col:34> '<dependent type>' contains-errors '='     |     | |-CXXDependentScopeMemberExpr 0x140027740 <col:14, col:18> '<dependent type>' contains-errors lvalue ->layno     |     | | `-RecoveryExpr 0x140027720 <col:14> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x1400277f0 <col:26, col:34> '<dependent type>' contains-errors lvalue .layno0     |     |   `-CXXDependentScopeMemberExpr 0x1400277a8 <col:26, col:30> '<dependent type>' contains-errors lvalue ->poc     |     |     `-RecoveryExpr 0x140027788 <col:26> '<dependent type>' contains-errors lvalue     |     |-<<<NULL>>>     |     |-BinaryOperator 0x140027970 <col:42, col:62> 'int' contains-errors '<'     |     | |-CXXDependentScopeMemberExpr 0x140027878 <col:42, col:46> '<dependent type>' contains-errors lvalue ->layno     |     | | `-RecoveryExpr 0x140027858 <col:42> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x140027928 <col:54, col:62> '<dependent type>' contains-errors lvalue .layno1     |     |   `-CXXDependentScopeMemberExpr 0x1400278e0 <col:54, col:58> '<dependent type>' contains-errors lvalue ->poc     |     |     `-RecoveryExpr 0x1400278c0 <col:54> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x1400279f8 <col:70, col:79> '<dependent type>' contains-errors postfix '++' cannot overflow     |     | `-CXXDependentScopeMemberExpr 0x1400279b0 <col:70, col:74> '<dependent type>' contains-errors lvalue ->layno     |     |   `-RecoveryExpr 0x140027990 <col:70> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x140028f80 <col:83, line:37:9>     |       `-ForStmt 0x140028f48 <line:17:13, line:36:13>     |         |-BinaryOperator 0x140027b28 <line:17:18, col:39> '<dependent type>' contains-errors '='     |         | |-CXXDependentScopeMemberExpr 0x140027a30 <col:18, col:22> '<dependent type>' contains-errors lvalue ->compno     |         | | `-RecoveryExpr 0x140027a10 <col:18> '<dependent type>' contains-errors lvalue     |         | `-CXXDependentScopeMemberExpr 0x140027ae0 <col:31, col:39> '<dependent type>' contains-errors lvalue .compno0     |         |   `-CXXDependentScopeMemberExpr 0x140027a98 <col:31, col:35> '<dependent type>' contains-errors lvalue ->poc     |         |     `-RecoveryExpr 0x140027a78 <col:31> '<dependent type>' contains-errors lvalue     |         |-<<<NULL>>>     |         |-BinaryOperator 0x140027c60 <col:48, col:69> 'int' contains-errors '<'     |         | |-CXXDependentScopeMemberExpr 0x140027b68 <col:48, col:52> '<dependent type>' contains-errors lvalue ->compno     |         | | `-RecoveryExpr 0x140027b48 <col:48> '<dependent type>' contains-errors lvalue     |         | `-CXXDependentScopeMemberExpr 0x140027c18 <col:61, col:69> '<dependent type>' contains-errors lvalue .compno1     |         |   `-CXXDependentScopeMemberExpr 0x140027bd0 <col:61, col:65> '<dependent type>' contains-errors lvalue ->poc     |         |     `-RecoveryExpr 0x140027bb0 <col:61> '<dependent type>' contains-errors lvalue     |         |-UnaryOperator 0x140027ce8 <col:78, col:88> '<dependent type>' contains-errors postfix '++' cannot overflow     |         | `-CXXDependentScopeMemberExpr 0x140027ca0 <col:78, col:82> '<dependent type>' contains-errors lvalue ->compno     |         |   `-RecoveryExpr 0x140027c80 <col:78> '<dependent type>' contains-errors lvalue     |         `-CompoundStmt 0x140028f20 <col:92, line:36:13>     |           |-IfStmt 0x140027fc8 <line:19:17, line:21:17>     |           | |-BinaryOperator 0x140027f88 <line:19:21, col:40> 'int' contains-errors '>='     |           | | |-CXXDependentScopeMemberExpr 0x140027e58 <col:21, col:25> '<dependent type>' contains-errors lvalue ->resno     |           | | | `-RecoveryExpr 0x140027e38 <col:21> '<dependent type>' contains-errors lvalue     |           | | `-CXXDependentScopeMemberExpr 0x140027f40 <col:34, col:40> '<dependent type>' contains-errors lvalue ->numresolutions     |           | |   `-RecoveryExpr 0x140027f20 <col:34> '<dependent type>' contains-errors lvalue     |           | `-CompoundStmt 0x140027fb0 <col:56, line:21:17>     |           |   `-ContinueStmt 0x140027fa8 <line:20:21>     |           |-IfStmt 0x140028458 <line:23:17, line:25:17>     |           | |-UnaryOperator 0x140028130 <line:23:21, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow     |           | | `-ImplicitCastExpr 0x140028118 <col:22, col:26> '<dependent type>' contains-errors <LValueToRValue>     |           | |   `-CXXDependentScopeMemberExpr 0x1400280d0 <col:22, col:26> '<dependent type>' contains-errors lvalue ->tp_on     |           | |     `-RecoveryExpr 0x1400280b0 <col:22> '<dependent type>' contains-errors lvalue     |           | `-CompoundStmt 0x140028440 <col:33, line:25:17>     |           |   `-BinaryOperator 0x140028420 <line:24:21, col:54> '<dependent type>' contains-errors '='     |           |     |-CXXDependentScopeMemberExpr 0x1400281d8 <col:21, col:29> '<dependent type>' contains-errors lvalue .precno1     |           |     | `-CXXDependentScopeMemberExpr 0x140028190 <col:21, col:25> '<dependent type>' contains-errors lvalue ->poc     |           |     |   `-RecoveryExpr 0x140028168 <col:21> '<dependent type>' contains-errors lvalue     |           |     |     `-DeclRefExpr 0x140028148 <col:21> 'int *' lvalue ParmVar 0x14000dd28 'pi' 'int *'     |           |     `-BinaryOperator 0x140028400 <col:39, col:54> '<dependent type>' contains-errors '*'     |           |       |-CXXDependentScopeMemberExpr 0x140028340 <col:39, col:44> '<dependent type>' contains-errors lvalue ->pw     |           |       | `-RecoveryExpr 0x140028320 <col:39> '<dependent type>' contains-errors lvalue     |           |       `-CXXDependentScopeMemberExpr 0x1400283a8 <col:49, col:54> '<dependent type>' contains-errors lvalue ->ph     |           |         `-RecoveryExpr 0x140028388 <col:49> '<dependent type>' contains-errors lvalue     |           `-ForStmt 0x140028ee8 <line:26:17, line:35:17>     |             |-BinaryOperator 0x140028590 <line:26:22, col:43> '<dependent type>' contains-errors '='     |             | |-CXXDependentScopeMemberExpr 0x140028498 <col:22, col:26> '<dependent type>' contains-errors lvalue ->precno     |             | | `-RecoveryExpr 0x140028478 <col:22> '<dependent type>' contains-errors lvalue     |             | `-CXXDependentScopeMemberExpr 0x140028548 <col:35, col:43> '<dependent type>' contains-errors lvalue .precno0     |             |   `-CXXDependentScopeMemberExpr 0x140028500 <col:35, col:39> '<dependent type>' contains-errors lvalue ->poc     |             |     `-RecoveryExpr 0x1400284e0 <col:35> '<dependent type>' contains-errors lvalue     |             |-<<<NULL>>>     |             |-BinaryOperator 0x1400286c8 <col:52, col:73> 'int' contains-errors '<'     |             | |-CXXDependentScopeMemberExpr 0x1400285d0 <col:52, col:56> '<dependent type>' contains-errors lvalue ->precno     |             | | `-RecoveryExpr 0x1400285b0 <col:52> '<dependent type>' contains-errors lvalue     |             | `-CXXDependentScopeMemberExpr 0x140028680 <col:65, col:73> '<dependent type>' contains-errors lvalue .precno1     |             |   `-CXXDependentScopeMemberExpr 0x140028638 <col:65, col:69> '<dependent type>' contains-errors lvalue ->poc     |             |     `-RecoveryExpr 0x140028618 <col:65> '<dependent type>' contains-errors lvalue     |             |-UnaryOperator 0x140028750 <col:82, col:92> '<dependent type>' contains-errors postfix '++' cannot overflow     |             | `-CXXDependentScopeMemberExpr 0x140028708 <col:82, col:86> '<dependent type>' contains-errors lvalue ->precno     |             |   `-RecoveryExpr 0x1400286e8 <col:82> '<dependent type>' contains-errors lvalue     |             `-CompoundStmt 0x140028ec0 <col:96, line:35:17>     |               |-BinaryOperator 0x140028ba8 <line:27:21, line:28:59> 'long' contains-errors '='     |               | |-DeclRefExpr 0x140028768 <line:27:21> 'long' lvalue Var 0x14000df20 'index' 'long'     |               | `-BinaryOperator 0x140028b88 <col:29, line:28:59> '<dependent type>' contains-errors '+'     |               |   |-BinaryOperator 0x140028a78 <line:27:29, line:28:33> '<dependent type>' contains-errors '+'     |               |   | |-BinaryOperator 0x140028968 <line:27:29, col:70> '<dependent type>' contains-errors '+'     |               |   | | |-BinaryOperator 0x140028858 <col:29, col:45> '<dependent type>' contains-errors '*'     |               |   | | | |-CXXDependentScopeMemberExpr 0x1400287a8 <col:29, col:33> '<dependent type>' contains-errors lvalue ->layno     |               |   | | | | `-RecoveryExpr 0x140028788 <col:29> '<dependent type>' contains-errors lvalue     |               |   | | | `-CXXDependentScopeMemberExpr 0x140028810 <col:41, col:45> '<dependent type>' contains-errors lvalue ->step_l     |               |   | | |   `-RecoveryExpr 0x1400287f0 <col:41> '<dependent type>' contains-errors lvalue     |               |   | | `-BinaryOperator 0x140028948 <col:54, col:70> '<dependent type>' contains-errors '*'     |               |   | |   |-CXXDependentScopeMemberExpr 0x140028898 <col:54, col:58> '<dependent type>' contains-errors lvalue ->resno     |               |   | |   | `-RecoveryExpr 0x140028878 <col:54> '<dependent type>' contains-errors lvalue     |               |   | |   `-CXXDependentScopeMemberExpr 0x140028900 <col:66, col:70> '<dependent type>' contains-errors lvalue ->step_r     |               |   | |     `-RecoveryExpr 0x1400288e0 <col:66> '<dependent type>' contains-errors lvalue     |               |   | `-BinaryOperator 0x140028a58 <col:79, line:28:33> '<dependent type>' contains-errors '*'     |               |   |   |-CXXDependentScopeMemberExpr 0x1400289a8 <line:27:79, col:83> '<dependent type>' contains-errors lvalue ->compno     |               |   |   | `-RecoveryExpr 0x140028988 <col:79> '<dependent type>' contains-errors lvalue     |               |   |   `-CXXDependentScopeMemberExpr 0x140028a10 <line:28:29, col:33> '<dependent type>' contains-errors lvalue ->step_c     |               |   |     `-RecoveryExpr 0x1400289f0 <col:29> '<dependent type>' contains-errors lvalue     |               |   `-BinaryOperator 0x140028b68 <col:42, col:59> '<dependent type>' contains-errors '*'     |               |     |-CXXDependentScopeMemberExpr 0x140028ab8 <col:42, col:46> '<dependent type>' contains-errors lvalue ->precno     |               |     | `-RecoveryExpr 0x140028a98 <col:42> '<dependent type>' contains-errors lvalue     |               |     `-CXXDependentScopeMemberExpr 0x140028b20 <col:55, col:59> '<dependent type>' contains-errors lvalue ->step_p     |               |       `-RecoveryExpr 0x140028b00 <col:55> '<dependent type>' contains-errors lvalue     |               |-IfStmt 0x140028e78 <line:29:21, line:32:21>     |               | |-UnaryOperator 0x140028cb8 <line:29:25, col:43> '<dependent type>' contains-errors prefix '!' cannot overflow     |               | | `-ImplicitCastExpr 0x140028ca0 <col:26, col:43> '<dependent type>' contains-errors <LValueToRValue>     |               | |   `-ArraySubscriptExpr 0x140028c80 <col:26, col:43> '<dependent type>' contains-errors lvalue     |               | |     |-ImplicitCastExpr 0x140028c50 <col:26, col:30> '<dependent type>' contains-errors <LValueToRValue>     |               | |     | `-CXXDependentScopeMemberExpr 0x140028be8 <col:26, col:30> '<dependent type>' contains-errors lvalue ->include     |               | |     |   `-RecoveryExpr 0x140028bc8 <col:26> '<dependent type>' contains-errors lvalue     |               | |     `-ImplicitCastExpr 0x140028c68 <col:38> 'long' <LValueToRValue>     |               | |       `-DeclRefExpr 0x140028c30 <col:38> 'long' lvalue Var 0x14000df20 'index' 'long'     |               | `-CompoundStmt 0x140028e58 <col:46, line:32:21>     |               |   |-BinaryOperator 0x140028df0 <line:30:25, col:46> '<dependent type>' contains-errors '='     |               |   | |-ArraySubscriptExpr 0x140028db0 <col:25, col:42> '<dependent type>' contains-errors lvalue     |               |   | | |-ImplicitCastExpr 0x140028d80 <col:25, col:29> '<dependent type>' contains-errors <LValueToRValue>     |               |   | | | `-CXXDependentScopeMemberExpr 0x140028d18 <col:25, col:29> '<dependent type>' contains-errors lvalue ->include     |               |   | | |   `-RecoveryExpr 0x140028cf0 <col:25> '<dependent type>' contains-errors lvalue     |               |   | | |     `-DeclRefExpr 0x140028cd0 <col:25> 'int *' lvalue ParmVar 0x14000dd28 'pi' 'int *'     |               |   | | `-ImplicitCastExpr 0x140028d98 <col:37> 'long' <LValueToRValue>     |               |   | |   `-DeclRefExpr 0x140028d60 <col:37> 'long' lvalue Var 0x14000df20 'index' 'long'     |               |   | `-IntegerLiteral 0x140028dd0 <col:46> 'int' 1     |               |   `-ReturnStmt 0x140028e48 <line:31:25, col:32>     |               |     `-RecoveryExpr 0x140028e28 <col:32> '<dependent type>' contains-errors lvalue     |               `-LabelStmt 0x140028ea0 <line:33:1, line:34:21> 'LABEL_SKIP'     |                 `-NullStmt 0x140028e98 <col:21>     `-ReturnStmt 0x140029058 <line:40:5, col:12>       `-RecoveryExpr 0x140029038 <col:12> '<dependent type>' contains-errors lvalue ","20155":"`-FunctionDecl 0x11d928238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x11d928158 <col:12> col:12 GlobIterator 'int'   |-ParmVarDecl 0x11d9280d8 <col:26> col:26 count 'int'   `-CompoundStmt 0x11e009448 <line:2:1, line:15:1>     |-IfStmt 0x11d928628 <line:5:2, line:7:2>     | |-BinaryOperator 0x11d9285e0 <line:5:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x11d9285a0 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x11d928588 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x11d928490 <col:6> 'int ()' Function 0x11d9283d8 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x11d9285c0 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x11d928610 <col:47, line:7:2>     |   `-ReturnStmt 0x11d928600 <line:6:3>     `-IfStmt 0x11e009418 <line:9:2, line:14:2> has_else       |-CallExpr 0x11e008dd8 <line:9:6, col:60> '<dependent type>' contains-errors       | |-DeclRefExpr 0x11d928728 <col:6> 'int ()' Function 0x11d928670 'php_stream_is' 'int ()'       | |-CXXDependentScopeMemberExpr 0x11e008d58 <col:20, col:34> '<dependent type>' contains-errors lvalue .dirp       | | `-CXXDependentScopeMemberExpr 0x11e008d10 <col:20, col:30> '<dependent type>' contains-errors lvalue .dir       | |   `-CXXDependentScopeMemberExpr 0x11e008cc8 <col:20, col:28> '<dependent type>' contains-errors lvalue ->u       | |     `-RecoveryExpr 0x11e008ca8 <col:20> '<dependent type>' contains-errors lvalue       | `-UnaryOperator 0x11e008dc0 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow       |   `-RecoveryExpr 0x11e008da0 <col:41> '<dependent type>' contains-errors lvalue       |-CompoundStmt 0x11e0092d8 <col:63, line:11:2>       | `-CallExpr 0x11e0092b0 <line:10:3, col:66> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x11e008ee8 <col:3> 'int ()' Function 0x11e008e30 'RETURN_LONG' 'int ()'       |   `-CallExpr 0x11e009280 <col:15, col:65> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x11e008fe8 <col:15> 'int ()' Function 0x11e008f30 'php_glob_stream_get_count' 'int ()'       |     |-CXXDependentScopeMemberExpr 0x11e009218 <col:41, col:55> '<dependent type>' contains-errors lvalue .dirp       |     | `-CXXDependentScopeMemberExpr 0x11e0091d0 <col:41, col:51> '<dependent type>' contains-errors lvalue .dir       |     |   `-CXXDependentScopeMemberExpr 0x11e009188 <col:41, col:49> '<dependent type>' contains-errors lvalue ->u       |     |     `-RecoveryExpr 0x11e009168 <col:41> '<dependent type>' contains-errors lvalue       |     `-RecoveryExpr 0x11e009260 <col:61> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x11e009408 <line:11:9, line:14:2> ","20161":"`-FunctionDecl 0x146941a98  line:1:5 invalid ssh_kdf 'int (struct ssh_crypto_struct *, unsigned char *, int, int, unsigned char *, int)'   |-ParmVarDecl 0x146928648 <col:13, col:39> col:39 used crypto 'struct ssh_crypto_struct *'   |-ParmVarDecl 0x1469286f8 <line:2:13, col:28> col:28 used key 'unsigned char *'   |-ParmVarDecl 0x146928790 <col:33, col:40> col:40 invalid key_len 'int'   |-ParmVarDecl 0x146941818 <line:3:13, col:17> col:17 used key_type 'int'   |-ParmVarDecl 0x146941898 <col:27, col:42> col:42 used output 'unsigned char *'   |-ParmVarDecl 0x146941918 <line:4:13, col:20> col:20 invalid requested_len 'int'   `-CompoundStmt 0x1469431f0 <line:5:1, line:47:1>     |-DeclStmt 0x146941dc0 <line:7:5, col:11>     | `-VarDecl 0x146941d58 <col:5, col:9> col:9 used rc 'int'     |-IfStmt 0x146941ee8 <line:9:5, line:11:5>     | |-BinaryOperator 0x146941e68 <line:9:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x146941e28 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x146941e48 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x146941ed0 <col:22, line:11:5>     |   `-ReturnStmt 0x146941ec0 <line:10:9, col:17>     |     `-UnaryOperator 0x146941ea8 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x146941e88 <col:17> 'int' 1     |-BinaryOperator 0x1469422b0 <line:13:5, line:14:63> 'int' contains-errors '='     | |-DeclRefExpr 0x146941f08 <line:13:5> 'int' lvalue Var 0x146941d58 'rc' 'int'     | `-CallExpr 0x146942278 <col:10, line:14:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146942008 <line:13:10> 'int ()' Function 0x146941f50 'EVP_KDF_ctrl' 'int ()'     |   |-RecoveryExpr 0x146942238 <col:23> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x146942258 <col:28> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x1469421b8 <line:14:23, col:62> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x146942138 <col:23> 'int ()' Function 0x146942080 'sshkdf_digest_to_md' 'int ()'     |     `-RecoveryExpr 0x146942190 <col:43, col:51> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x146942158 <col:43> 'struct ssh_crypto_struct *' lvalue ParmVar 0x146928648 'crypto' 'struct ssh_crypto_struct *'     |-IfStmt 0x1469423c8 <line:15:5, line:17:5>     | |-BinaryOperator 0x146942328 <line:15:9, col:15> 'int' '!='     | | |-ImplicitCastExpr 0x146942310 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1469422d0 <col:9> 'int' lvalue Var 0x146941d58 'rc' 'int'     | | `-IntegerLiteral 0x1469422f0 <col:15> 'int' 1     | `-CompoundStmt 0x1469423b0 <col:18, line:17:5>     |   `-GotoStmt 0x146942398 <line:16:9, col:14> 'out' 0x146942348     |-BinaryOperator 0x146942578 <line:18:5, col:62> 'int' contains-errors '='     | |-DeclRefExpr 0x1469423e8 <col:5> 'int' lvalue Var 0x146941d58 'rc' 'int'     | `-CallExpr 0x146942538 <col:10, col:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146942408 <col:10> 'int ()' Function 0x146941f50 'EVP_KDF_ctrl' 'int ()'     |   |-RecoveryExpr 0x1469424f8 <col:23> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x146942518 <col:28> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x146942458 <col:50> 'unsigned char *' lvalue ParmVar 0x1469286f8 'key' 'unsigned char *'     |   `-RecoveryExpr 0x146942478 <col:55> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146942640 <line:19:5, line:21:5>     | |-BinaryOperator 0x1469425f0 <line:19:9, col:15> 'int' '!='     | | |-ImplicitCastExpr 0x1469425d8 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146942598 <col:9> 'int' lvalue Var 0x146941d58 'rc' 'int'     | | `-IntegerLiteral 0x1469425b8 <col:15> 'int' 1     | `-CompoundStmt 0x146942628 <col:18, line:21:5>     |   `-GotoStmt 0x146942610 <line:20:9, col:14> 'out' 0x146942348     |-BinaryOperator 0x146942880 <line:22:5, line:23:62> 'int' contains-errors '='     | |-DeclRefExpr 0x146942660 <line:22:5> 'int' lvalue Var 0x146941d58 'rc' 'int'     | `-CallExpr 0x146942840 <col:10, line:23:62> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146942680 <line:22:10> 'int ()' Function 0x146941f50 'EVP_KDF_ctrl' 'int ()'     |   |-RecoveryExpr 0x146942800 <col:23> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x146942820 <col:28> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x146942708 <line:23:23, col:31> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1469426d0 <col:23> 'struct ssh_crypto_struct *' lvalue ParmVar 0x146928648 'crypto' 'struct ssh_crypto_struct *'     |   `-RecoveryExpr 0x146942768 <col:44, col:52> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x146942730 <col:44> 'struct ssh_crypto_struct *' lvalue ParmVar 0x146928648 'crypto' 'struct ssh_crypto_struct *'     |-IfStmt 0x146942948 <line:24:5, line:26:5>     | |-BinaryOperator 0x1469428f8 <line:24:9, col:15> 'int' '!='     | | |-ImplicitCastExpr 0x1469428e0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1469428a0 <col:9> 'int' lvalue Var 0x146941d58 'rc' 'int'     | | `-IntegerLiteral 0x1469428c0 <col:15> 'int' 1     | `-CompoundStmt 0x146942930 <col:18, line:26:5>     |   `-GotoStmt 0x146942918 <line:25:9, col:14> 'out' 0x146942348     |-BinaryOperator 0x146942ac8 <line:27:5, col:66> 'int' contains-errors '='     | |-DeclRefExpr 0x146942968 <col:5> 'int' lvalue Var 0x146941d58 'rc' 'int'     | `-CallExpr 0x146942a90 <col:10, col:66> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x146942988 <col:10> 'int ()' Function 0x146941f50 'EVP_KDF_ctrl' 'int ()'     |   |-RecoveryExpr 0x146942a50 <col:23> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x146942a70 <col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1469429d8 <col:58> 'int' lvalue ParmVar 0x146941818 'key_type' 'int'     |-IfStmt 0x146942b90 <line:28:5, line:30:5>     | |-BinaryOperator 0x146942b40 <line:28:9, col:15> 'int' '!='     | | |-ImplicitCastExpr 0x146942b28 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146942ae8 <col:9> 'int' lvalue Var 0x146941d58 'rc' 'int'     | | `-IntegerLiteral 0x146942b08 <col:15> 'int' 1     | `-CompoundStmt 0x146942b78 <col:18, line:30:5>     |   `-GotoStmt 0x146942b60 <line:29:9, col:14> 'out' 0x146942348     |-IfStmt 0x146942d58 <line:33:5, line:35:5>     | |-BinaryOperator 0x146942d08 <line:33:9, col:15> 'int' '!='     | | |-ImplicitCastExpr 0x146942cf0 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146942cb0 <col:9> 'int' lvalue Var 0x146941d58 'rc' 'int'     | | `-IntegerLiteral 0x146942cd0 <col:15> 'int' 1     | `-CompoundStmt 0x146942d40 <col:18, line:35:5>     |   `-GotoStmt 0x146942d28 <line:34:9, col:14> 'out' 0x146942348     |-IfStmt 0x146942f80 <line:37:5, line:39:5>     | |-BinaryOperator 0x146942f30 <line:37:9, col:15> 'int' '!='     | | |-ImplicitCastExpr 0x146942f18 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x146942ed8 <col:9> 'int' lvalue Var 0x146941d58 'rc' 'int'     | | `-IntegerLiteral 0x146942ef8 <col:15> 'int' 1     | `-CompoundStmt 0x146942f68 <col:18, line:39:5>     |   `-GotoStmt 0x146942f50 <line:38:9, col:14> 'out' 0x146942348     |-LabelStmt 0x1469430a8 <line:41:1, col:4> 'out'     | `-NullStmt 0x1469430a0 <col:4>     |-IfStmt 0x1469431a0 <line:43:5, line:45:5>     | |-BinaryOperator 0x146943120 <line:43:9, col:14> 'int' '<'     | | |-ImplicitCastExpr 0x146943108 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1469430c8 <col:9> 'int' lvalue Var 0x146941d58 'rc' 'int'     | | `-IntegerLiteral 0x1469430e8 <col:14> 'int' 0     | `-CompoundStmt 0x146943188 <col:17, line:45:5>     |   `-ReturnStmt 0x146943178 <line:44:9, col:16>     |     `-ImplicitCastExpr 0x146943160 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x146943140 <col:16> 'int' lvalue Var 0x146941d58 'rc' 'int'     `-ReturnStmt 0x1469431e0 <line:46:5, col:12>       `-IntegerLiteral 0x1469431c0 <col:12> 'int' 0 ","20070":"`-FunctionDecl 0x14a9281a8  line:1:12 svm_cpu_init 'int (int)' static   |-ParmVarDecl 0x14a9280d8 <col:25, col:29> col:29 used cpu 'int'   `-CompoundStmt 0x14a944628 <line:2:1, line:32:1>     |-DeclStmt 0x14a928488 <line:3:2, col:25>     | |-RecordDecl 0x14a9282a0 <col:2, col:9> col:9 struct svm_cpu_data     | `-VarDecl 0x14a928408 <col:2, col:23> col:23 used sd 'struct svm_cpu_data *'     |-DeclStmt 0x14a928520 <line:4:2, col:7>     | `-VarDecl 0x14a9284b8 <col:2, col:6> col:6 used r 'int'     |-IfStmt 0x14a942c40 <line:7:2, line:8:11>     | |-UnaryOperator 0x14a942b80 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a942b68 <col:7> 'struct svm_cpu_data *' <LValueToRValue>     | |   `-DeclRefExpr 0x14a942b48 <col:7> 'struct svm_cpu_data *' lvalue Var 0x14a928408 'sd' 'struct svm_cpu_data *'     | `-ReturnStmt 0x14a942c30 <line:8:3, col:11>     |   `-UnaryOperator 0x14a942c18 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14a942c00 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14a942be0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a942ce0 <line:9:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a942c98 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a942c60 <col:2> 'struct svm_cpu_data *' lvalue Var 0x14a928408 'sd' 'struct svm_cpu_data *'     | `-DeclRefExpr 0x14a942cc0 <col:12> 'int' lvalue ParmVar 0x14a9280d8 'cpu' 'int'     |-BinaryOperator 0x14a942dd8 <line:10:2, col:7> 'int' contains-errors '='     | |-DeclRefExpr 0x14a942d00 <col:2> 'int' lvalue Var 0x14a9284b8 'r' 'int'     | `-UnaryOperator 0x14a942dc0 <col:6, col:7> '<dependent type>' contains-errors prefix '-' cannot overflow     |   `-ImplicitCastExpr 0x14a942da8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x14a942d88 <col:7> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14a943000 <line:11:2, col:39> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14a942e30 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a942df8 <col:2> 'struct svm_cpu_data *' lvalue Var 0x14a928408 'sd' 'struct svm_cpu_data *'     | `-CallExpr 0x14a942fd8 <col:18, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14a942f38 <col:18> 'int ()' Function 0x14a942e80 'alloc_page' 'int ()'     |   `-RecoveryExpr 0x14a942fb8 <col:29> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14a943118 <line:12:2, line:13:8>     | |-UnaryOperator 0x14a943098 <line:12:6, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14a943080 <col:7, col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14a943058 <col:7, col:11> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14a943020 <col:7> 'struct svm_cpu_data *' lvalue Var 0x14a928408 'sd' 'struct svm_cpu_data *'     | `-GotoStmt 0x14a943100 <line:13:3, col:8> 'err_1' 0x14a9430b0     |-IfStmt 0x14a9437e0 <line:15:2, line:22:2>     | |-CallExpr 0x14a943288 <line:15:6, col:22> 'int'     | | `-ImplicitCastExpr 0x14a943270 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x14a943218 <col:6> 'int ()' Function 0x14a943160 'svm_sev_enabled' 'int ()'     | `-CompoundStmt 0x14a9437b8 <col:25, line:22:2>     |   |-BinaryOperator 0x14a943380 <line:16:3, col:8> 'int' contains-errors '='     |   | |-DeclRefExpr 0x14a9432a8 <col:3> 'int' lvalue Var 0x14a9284b8 'r' 'int'     |   | `-UnaryOperator 0x14a943368 <col:7, col:8> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14a943350 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14a943330 <col:8> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x14a9436d0 <line:17:3, line:19:22> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14a9433d8 <line:17:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14a9433a0 <col:3> 'struct svm_cpu_data *' lvalue Var 0x14a928408 'sd' 'struct svm_cpu_data *'     |   | `-CallExpr 0x14a943698 <col:19, line:19:22> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14a9434e0 <line:17:19> 'int ()' Function 0x14a943428 'kmalloc_array' 'int ()'     |   |   |-BinaryOperator 0x14a943620 <col:33, col:48> '<dependent type>' contains-errors '+'     |   |   | |-RecoveryExpr 0x14a943600 <col:33> '<dependent type>' contains-errors lvalue     |   |   | `-IntegerLiteral 0x14a943518 <col:48> 'int' 1     |   |   |-UnaryExprOrTypeTraitExpr 0x14a943658 <line:18:12, col:25> 'unsigned long' sizeof 'void *'     |   |   `-RecoveryExpr 0x14a943678 <line:19:12> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x14a943798 <line:20:3, line:21:9>     |     |-UnaryOperator 0x14a943768 <line:20:7, col:12> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x14a943750 <col:8, col:12> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x14a943728 <col:8, col:12> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x14a9436f0 <col:8> 'struct svm_cpu_data *' lvalue Var 0x14a928408 'sd' 'struct svm_cpu_data *'     |     `-GotoStmt 0x14a943780 <line:21:4, col:9> 'err_1' 0x14a9430b0     |-BinaryOperator 0x14a9443f8 <line:24:2, col:27> '<dependent type>' contains-errors '='     | |-CallExpr 0x14a9443c8 <col:2, col:23> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x14a9442e0 <col:2> 'int ()' Function 0x14a944228 'per_cpu' 'int ()'     | | |-RecoveryExpr 0x14a9443a8 <col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14a944318 <col:20> 'int' lvalue ParmVar 0x14a9280d8 'cpu' 'int'     | `-DeclRefExpr 0x14a944368 <col:27> 'struct svm_cpu_data *' lvalue Var 0x14a928408 'sd' 'struct svm_cpu_data *'     |-ReturnStmt 0x14a944438 <line:26:2, col:9>     | `-IntegerLiteral 0x14a944418 <col:9> 'int' 0     |-LabelStmt 0x14a9445c0 <line:28:1, line:29:10> 'err_1'     | `-CallExpr 0x14a944580 <col:2, col:10> 'int'     |   |-ImplicitCastExpr 0x14a944568 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14a944528 <col:2> 'int ()' Function 0x14a944470 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x14a9445a8 <col:8> 'struct svm_cpu_data *' <LValueToRValue>     |     `-DeclRefExpr 0x14a944548 <col:8> 'struct svm_cpu_data *' lvalue Var 0x14a928408 'sd' 'struct svm_cpu_data *'     `-ReturnStmt 0x14a944618 <line:30:2, col:9>       `-ImplicitCastExpr 0x14a944600 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14a9445e0 <col:9> 'int' lvalue Var 0x14a9284b8 'r' 'int' ","20154":"`-FunctionDecl 0x12f928750  line:1:13 snd_msnd_unload 'void (struct snd_card *)' static   |-ParmVarDecl 0x12f928648 <col:29, col:46> col:46 used card 'struct snd_card *'   `-CompoundStmt 0x12f9415d8 <line:2:1, line:10:1>     |-DeclStmt 0x12f940c98 <line:3:2, col:44>     | |-RecordDecl 0x12f940a48 <col:2, col:9> col:9 struct snd_msnd     | `-VarDecl 0x12f940bb8 <col:2, col:32> col:19 used chip 'struct snd_msnd *' cinit     |   `-RecoveryExpr 0x12f940c58 <col:26, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12f940c20 <col:26> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *'     |-CallExpr 0x12f940e60 <line:5:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f940de0 <col:2> 'int ()' Function 0x12f940d28 'iounmap' 'int ()'     | `-RecoveryExpr 0x12f940e38 <col:10, col:16> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12f940e00 <col:10> 'struct snd_msnd *' contains-errors lvalue Var 0x12f940bb8 'chip' 'struct snd_msnd *'     |-CallExpr 0x12f941050 <line:6:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f940f68 <col:2> 'int ()' Function 0x12f940eb0 'release_mem_region' 'int ()'     | |-RecoveryExpr 0x12f940fc0 <col:21, col:27> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f940f88 <col:21> 'struct snd_msnd *' contains-errors lvalue Var 0x12f940bb8 'chip' 'struct snd_msnd *'     | `-RecoveryExpr 0x12f941030 <col:33> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f941248 <line:7:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f941160 <col:2> 'int ()' Function 0x12f9410a8 'release_region' 'int ()'     | |-RecoveryExpr 0x12f9411b8 <col:17, col:23> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f941180 <col:17> 'struct snd_msnd *' contains-errors lvalue Var 0x12f940bb8 'chip' 'struct snd_msnd *'     | `-RecoveryExpr 0x12f941228 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f9413f8 <line:8:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f941358 <col:2> 'int ()' Function 0x12f9412a0 'free_irq' 'int ()'     | |-RecoveryExpr 0x12f9413b0 <col:11, col:17> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12f941378 <col:11> 'struct snd_msnd *' contains-errors lvalue Var 0x12f940bb8 'chip' 'struct snd_msnd *'     | `-DeclRefExpr 0x12f9413d8 <col:22> 'struct snd_msnd *' contains-errors lvalue Var 0x12f940bb8 'chip' 'struct snd_msnd *'     `-CallExpr 0x12f941598 <line:9:2, col:20> 'int'       |-ImplicitCastExpr 0x12f941580 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12f941508 <col:2> 'int ()' Function 0x12f941450 'snd_card_free' 'int ()'       `-ImplicitCastExpr 0x12f9415c0 <col:16> 'struct snd_card *' <LValueToRValue>         `-DeclRefExpr 0x12f941528 <col:16> 'struct snd_card *' lvalue ParmVar 0x12f928648 'card' 'struct snd_card *' ","19155":"`-FunctionDecl 0x1560280e8  col:13 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1560281e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x156028250 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1560282b8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x156028190 <<invalid sloc>> Implicit 900 ","20056":"`-FunctionDecl 0x11f13fe38  line:1:12 invalid reencrypt_load 'int (struct crypt_device *, struct luks2_hdr *, int, const struct crypt_params_reencrypt *, struct luks2_reencrypt **)' static   |-ParmVarDecl 0x11f127448 <col:27, col:48> col:48 used cd 'struct crypt_device *'   |-ParmVarDecl 0x11f13f828 <col:52, col:70> col:70 used hdr 'struct luks2_hdr *'   |-ParmVarDecl 0x11f13f8c0 <line:2:3, col:12> col:12 invalid device_size 'int'   |-ParmVarDecl 0x11f13fa98 <line:3:3, col:40> col:40 used params 'const struct crypt_params_reencrypt *'   |-ParmVarDecl 0x11f13fcc8 <line:4:3, col:28> col:28 used rh 'struct luks2_reencrypt **'   `-CompoundStmt 0x12880a538 <line:5:1, line:28:1>     |-DeclStmt 0x11f13ff88 <line:6:2, col:7>     | `-VarDecl 0x11f13ff20 <col:2, col:6> col:6 used r 'int'     |-DeclStmt 0x11f1400c8 <line:7:2, col:36>     | `-VarDecl 0x11f140028 <col:2, col:32> col:26 used tmp 'struct luks2_reencrypt *' cinit     |   `-RecoveryExpr 0x11f1400a8 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12880a188 <line:10:2, line:18:8> has_else     | |-BinaryOperator 0x11f140170 <line:10:6, col:12> 'int' contains-errors '=='     | | |-RecoveryExpr 0x11f140130 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x11f140150 <col:12> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x11f140460 <line:11:3, col:62> 'int' contains-errors '='     | | |-DeclRefExpr 0x11f140190 <col:3> 'int' lvalue Var 0x11f13ff20 'r' 'int'     | | `-CallExpr 0x11f140418 <col:7, col:62> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x11f140310 <col:7> 'int ()' Function 0x11f140258 'reencrypt_load_clean' 'int ()'     | |   |-DeclRefExpr 0x11f140330 <col:28> 'struct crypt_device *' lvalue ParmVar 0x11f127448 'cd' 'struct crypt_device *'     | |   |-DeclRefExpr 0x11f140350 <col:32> 'struct luks2_hdr *' lvalue ParmVar 0x11f13f828 'hdr' 'struct luks2_hdr *'     | |   |-RecoveryExpr 0x11f140370 <col:37> '<dependent type>' contains-errors lvalue     | |   |-UnaryOperator 0x11f1403e0 <col:50, col:51> 'struct luks2_reencrypt **' contains-errors prefix '&' cannot overflow     | |   | `-DeclRefExpr 0x11f140390 <col:51> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x11f140028 'tmp' 'struct luks2_reencrypt *'     | |   `-DeclRefExpr 0x11f1403f8 <col:56> 'const struct crypt_params_reencrypt *' lvalue ParmVar 0x11f13fa98 'params' 'const struct crypt_params_reencrypt *'     | `-IfStmt 0x12880a158 <line:12:7, line:18:8> has_else     |   |-BinaryOperator 0x11f140510 <line:12:11, col:17> 'int' contains-errors '=='     |   | |-RecoveryExpr 0x11f1404d0 <col:11> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x11f1404f0 <col:17> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x11f140728 <line:13:3, col:56> 'int' contains-errors '='     |   | |-DeclRefExpr 0x11f140530 <col:3> 'int' lvalue Var 0x11f13ff20 'r' 'int'     |   | `-CallExpr 0x11f1406e8 <col:7, col:56> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x11f140630 <col:7> 'int ()' Function 0x11f140578 'reencrypt_load_crashed' 'int ()'     |   |   |-DeclRefExpr 0x11f140650 <col:30> 'struct crypt_device *' lvalue ParmVar 0x11f127448 'cd' 'struct crypt_device *'     |   |   |-DeclRefExpr 0x11f140670 <col:34> 'struct luks2_hdr *' lvalue ParmVar 0x11f13f828 'hdr' 'struct luks2_hdr *'     |   |   |-RecoveryExpr 0x11f140690 <col:39> '<dependent type>' contains-errors lvalue     |   |   `-UnaryOperator 0x11f1406d0 <col:52, col:53> 'struct luks2_reencrypt **' contains-errors prefix '&' cannot overflow     |   |     `-DeclRefExpr 0x11f1406b0 <col:53> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x11f140028 'tmp' 'struct luks2_reencrypt *'     |   `-IfStmt 0x12880a128 <line:14:7, line:18:8> has_else     |     |-BinaryOperator 0x11f1407d8 <line:14:11, col:17> 'int' contains-errors '=='     |     | |-RecoveryExpr 0x11f140798 <col:11> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x11f1407b8 <col:17> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x12880a010 <col:39, line:17:2>     |     | |-CallExpr 0x128809f20 <line:15:3, col:23> 'int'     |     | | |-ImplicitCastExpr 0x128809f08 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | | | `-DeclRefExpr 0x128809ce0 <col:3> 'int ()' Function 0x128809c28 'log_err' 'int ()'     |     | | |-ImplicitCastExpr 0x128809f50 <col:11> 'struct crypt_device *' <LValueToRValue>     |     | | | `-DeclRefExpr 0x128809d00 <col:11> 'struct crypt_device *' lvalue ParmVar 0x11f127448 'cd' 'struct crypt_device *'     |     | | `-CallExpr 0x128809ec8 <col:15, col:22> 'int'     |     | |   |-ImplicitCastExpr 0x128809eb0 <col:15> 'int (*)()' <FunctionToPointerDecay>     |     | |   | `-DeclRefExpr 0x128809e00 <col:15> 'int ()' Function 0x128809d48 '_' 'int ()'     |     | |   `-ImplicitCastExpr 0x128809ef0 <col:17> 'char *' <ArrayToPointerDecay>     |     | |     `-StringLiteral 0x128809e60 <col:17> 'char[4]' lvalue \"STR\"     |     | `-ReturnStmt 0x12880a000 <line:16:3, col:11>     |     |   `-UnaryOperator 0x128809fe8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     |     `-ImplicitCastExpr 0x128809fd0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |     |       `-RecoveryExpr 0x128809fb0 <col:11> '<dependent type>' contains-errors lvalue     |     `-BinaryOperator 0x12880a108 <line:18:3, col:8> 'int' contains-errors '='     |       |-DeclRefExpr 0x12880a030 <col:3> 'int' lvalue Var 0x11f13ff20 'r' 'int'     |       `-UnaryOperator 0x12880a0f0 <col:7, col:8> '<dependent type>' contains-errors prefix '-' cannot overflow     |         `-ImplicitCastExpr 0x12880a0d8 <col:8> '<dependent type>' contains-errors <LValueToRValue>     |           `-RecoveryExpr 0x12880a0b8 <col:8> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12880a440 <line:20:2, line:23:2>     | |-BinaryOperator 0x12880a280 <line:20:6, col:16> 'int' contains-errors '||'     | | |-BinaryOperator 0x12880a210 <col:6, col:10> 'int' '<'     | | | |-ImplicitCastExpr 0x12880a1f8 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x12880a1b8 <col:6> 'int' lvalue Var 0x11f13ff20 'r' 'int'     | | | `-IntegerLiteral 0x12880a1d8 <col:10> 'int' 0     | | `-UnaryOperator 0x12880a268 <col:15, col:16> 'int' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12880a250 <col:16> 'struct luks2_reencrypt *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x12880a230 <col:16> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x11f140028 'tmp' 'struct luks2_reencrypt *'     | `-CompoundStmt 0x12880a420 <col:21, line:23:2>     |   |-CallExpr 0x12880a390 <line:21:3, col:23> 'int'     |   | |-ImplicitCastExpr 0x12880a378 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x12880a2a0 <col:3> 'int ()' Function 0x128809c28 'log_err' 'int ()'     |   | |-ImplicitCastExpr 0x12880a3c0 <col:11> 'struct crypt_device *' <LValueToRValue>     |   | | `-DeclRefExpr 0x12880a2c0 <col:11> 'struct crypt_device *' lvalue ParmVar 0x11f127448 'cd' 'struct crypt_device *'     |   | `-CallExpr 0x12880a338 <col:15, col:22> 'int'     |   |   |-ImplicitCastExpr 0x12880a320 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x12880a2e0 <col:15> 'int ()' Function 0x128809d48 '_' 'int ()'     |   |   `-ImplicitCastExpr 0x12880a360 <col:17> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x12880a300 <col:17> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x12880a410 <line:22:3, col:10>     |     `-ImplicitCastExpr 0x12880a3f8 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x12880a3d8 <col:10> 'int' lvalue Var 0x11f13ff20 'r' 'int'     |-BinaryOperator 0x12880a4e8 <line:25:2, col:8> 'struct luks2_reencrypt *' contains-errors '='     | |-UnaryOperator 0x12880a498 <col:2, col:3> 'struct luks2_reencrypt *' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x12880a480 <col:3> 'struct luks2_reencrypt **' <LValueToRValue>     | |   `-DeclRefExpr 0x12880a460 <col:3> 'struct luks2_reencrypt **' lvalue ParmVar 0x11f13fcc8 'rh' 'struct luks2_reencrypt **'     | `-ImplicitCastExpr 0x12880a4d0 <col:8> 'struct luks2_reencrypt *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x12880a4b0 <col:8> 'struct luks2_reencrypt *' contains-errors lvalue Var 0x11f140028 'tmp' 'struct luks2_reencrypt *'     `-ReturnStmt 0x12880a528 <line:27:2, col:9>       `-IntegerLiteral 0x12880a508 <col:9> 'int' 0 ","19691":"`-FunctionDecl 0x12580dee8  line:1:1 invalid dup_point_edwards 'int (int, int, int)'   |-ParmVarDecl 0x12580dcf0 <col:20, col:32> col:32 invalid result 'int'   |-ParmVarDecl 0x12580dd70 <col:40, col:52> col:52 invalid point 'int'   |-ParmVarDecl 0x12580ddf0 <col:59, col:68> col:68 invalid ctx 'int'   `-CompoundStmt 0x125828fe0 <line:2:1, line:69:1>     |-CallExpr 0x12580e228 <line:20:3, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12580e100 <col:3> 'int ()' Function 0x12580e048 'ec_addm' 'int ()'     | |-RecoveryExpr 0x12580e1c8 <col:12> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12580e1e8 <col:15> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12580e208 <col:19> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12580e168 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x125828440 <line:21:3, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12580e348 <col:3> 'int ()' Function 0x12580e290 'ec_pow2' 'int ()'     | |-RecoveryExpr 0x125828400 <col:12> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125828420 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12580e398 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x125828560 <line:25:3, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125828478 <col:3> 'int ()' Function 0x12580e290 'ec_pow2' 'int ()'     | |-RecoveryExpr 0x125828520 <col:12> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125828540 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1258284c8 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x125828680 <line:26:3, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x125828598 <col:3> 'int ()' Function 0x12580e290 'ec_pow2' 'int ()'     | |-RecoveryExpr 0x125828640 <col:12> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x125828660 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1258285e8 <col:19> '<dependent type>' contains-errors lvalue     `-IfStmt 0x125828b70 <line:29:3, line:32:5> has_else       |-BinaryOperator 0x125828778 <line:29:7, col:23> 'int' contains-errors '=='       | |-CXXDependentScopeMemberExpr 0x1258286d8 <col:7, col:12> '<dependent type>' contains-errors lvalue ->dialect       | | `-RecoveryExpr 0x1258286b8 <col:7> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x125828758 <col:23> '<dependent type>' contains-errors lvalue       |-CallExpr 0x1258289a8 <line:30:5, col:26> '<dependent type>' contains-errors       | |-DeclRefExpr 0x125828878 <col:5> 'int ()' Function 0x1258287c0 'mpi_sub' 'int ()'       | |-RecoveryExpr 0x125828968 <col:14> '<dependent type>' contains-errors lvalue       | |-CXXDependentScopeMemberExpr 0x1258288d0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->p       | | `-RecoveryExpr 0x1258288b0 <col:17> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x125828988 <col:25> '<dependent type>' contains-errors lvalue       `-NullStmt 0x125828b68 <line:32:5> ","19945":"`-FunctionDecl 0x144141838  line:1:14 invalid convert_ace_to_cifs_ace 'int (struct cifs_posix_ace *, const int *)' static   |-ParmVarDecl 0x144128668 <col:38, col:61> col:61 used cifs_ace 'struct cifs_posix_ace *'   |-ParmVarDecl 0x1441286e8 <line:2:10, col:39> col:39 invalid local_ace 'const int *'   `-CompoundStmt 0x1441423c0 <line:3:1, line:16:1>     |-BinaryOperator 0x144141b60 <line:6:2, col:55> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x144141928 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1441418f0 <col:2> 'struct cifs_posix_ace *' lvalue ParmVar 0x144128668 'cifs_ace' 'struct cifs_posix_ace *'     | `-CallExpr 0x144141b38 <col:26, col:55> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144141ab0 <col:26> 'int ()' Function 0x1441419f8 'le16_to_cpu' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x144141af0 <col:38, col:49> '<dependent type>' contains-errors lvalue ->e_perm     |     `-RecoveryExpr 0x144141ad0 <col:38> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144141c90 <line:7:2, col:54> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x144141bb8 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x144141b80 <col:2> 'struct cifs_posix_ace *' lvalue ParmVar 0x144128668 'cifs_ace' 'struct cifs_posix_ace *'     | `-CallExpr 0x144141c68 <col:26, col:54> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144141be0 <col:26> 'int ()' Function 0x1441419f8 'le16_to_cpu' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x144141c20 <col:38, col:49> '<dependent type>' contains-errors lvalue ->e_tag     |     `-RecoveryExpr 0x144141c00 <col:38> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144142348 <line:9:2, line:13:64> has_else     | |-BinaryOperator 0x144141ec0 <line:9:6, col:39> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x144141cd0 <col:6, col:17> '<dependent type>' contains-errors lvalue ->e_id     | | | `-RecoveryExpr 0x144141cb0 <col:6> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x144141e98 <col:25, col:39> 'int'     | |   |-ImplicitCastExpr 0x144141e80 <col:25> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x144141df8 <col:25> 'int ()' Function 0x144141d40 'cpu_to_le32' 'int ()'     | |   `-UnaryOperator 0x144141e38 <col:37, col:38> 'int' prefix '-'     | |     `-IntegerLiteral 0x144141e18 <col:38> 'int' 1     | |-CompoundStmt 0x1441420d8 <col:42, line:12:2>     | | `-BinaryOperator 0x1441420b8 <line:11:3, col:38> '<dependent type>' contains-errors '='     | |   |-RecoveryExpr 0x144141f18 <col:3, col:13> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x144141ee0 <col:3> 'struct cifs_posix_ace *' lvalue ParmVar 0x144128668 'cifs_ace' 'struct cifs_posix_ace *'     | |   `-CallExpr 0x144142090 <col:24, col:38> 'int'     | |     |-ImplicitCastExpr 0x144142078 <col:24> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x144142020 <col:24> 'int ()' Function 0x144141f68 'cpu_to_le64' 'int ()'     | |     `-UnaryOperator 0x144142060 <col:36, col:37> 'int' prefix '-'     | |       `-IntegerLiteral 0x144142040 <col:37> 'int' 1     | `-BinaryOperator 0x144142328 <line:13:3, col:64> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x144142128 <col:3, col:13> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1441420f0 <col:3> 'struct cifs_posix_ace *' lvalue ParmVar 0x144128668 'cifs_ace' 'struct cifs_posix_ace *'     |   `-CallExpr 0x144142300 <col:24, col:64> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x144142150 <col:24> 'int ()' Function 0x144141f68 'cpu_to_le64' 'int ()'     |     `-CallExpr 0x1441422d8 <col:36, col:63> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x144142250 <col:36> 'int ()' Function 0x144142198 'le32_to_cpu' 'int ()'     |       `-CXXDependentScopeMemberExpr 0x144142290 <col:48, col:59> '<dependent type>' contains-errors lvalue ->e_id     |         `-RecoveryExpr 0x144142270 <col:48> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1441423b0 <line:15:2, col:9>       `-RecoveryExpr 0x144142390 <col:9> '<dependent type>' contains-errors lvalue ","19365":"`-FunctionDecl 0x120830178  line:1:6 invalid vhost_vq_avail_empty 'int (struct vhost_dev *, struct vhost_virtqueue *)'   |-ParmVarDecl 0x1058ed468 <col:27, col:45> col:45 dev 'struct vhost_dev *'   |-ParmVarDecl 0x120830058 <col:50, col:74> col:74 used vq 'struct vhost_virtqueue *'   `-CompoundStmt 0x120830b98 <line:2:1, line:15:1>     |-DeclStmt 0x1208302b0 <line:4:2, col:7>     | `-VarDecl 0x120830248 <col:2, col:6> col:6 used r 'int'     |-BinaryOperator 0x120830668 <line:9:2, col:40> 'int' contains-errors '='     | |-DeclRefExpr 0x1208303c0 <col:2> 'int' lvalue Var 0x120830248 'r' 'int'     | `-CallExpr 0x120830638 <col:6, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120830540 <col:6> 'int ()' Function 0x120830488 'vhost_get_avail_idx' 'int ()'     |   |-DeclRefExpr 0x120830560 <col:26> 'struct vhost_virtqueue *' lvalue ParmVar 0x120830058 'vq' 'struct vhost_virtqueue *'     |   `-UnaryOperator 0x120830620 <col:30, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x120830600 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x120830a88 <line:12:2, col:46> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x120830888 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120830850 <col:2> 'struct vhost_virtqueue *' lvalue ParmVar 0x120830058 'vq' 'struct vhost_virtqueue *'     | `-CallExpr 0x120830a58 <col:18, col:46> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120830990 <col:18> 'int ()' Function 0x1208308d8 'vhost16_to_cpu' 'int ()'     |   |-DeclRefExpr 0x1208309b0 <col:33> 'struct vhost_virtqueue *' lvalue ParmVar 0x120830058 'vq' 'struct vhost_virtqueue *'     |   `-RecoveryExpr 0x120830a38 <col:37> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x120830b88 <line:14:2, col:30>       `-BinaryOperator 0x120830b68 <col:9, col:30> 'int' contains-errors '=='         |-RecoveryExpr 0x120830ae0 <col:9, col:13> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x120830aa8 <col:9> 'struct vhost_virtqueue *' lvalue ParmVar 0x120830058 'vq' 'struct vhost_virtqueue *'         `-RecoveryExpr 0x120830b40 <col:26, col:30> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x120830b08 <col:26> 'struct vhost_virtqueue *' lvalue ParmVar 0x120830058 'vq' 'struct vhost_virtqueue *' ","19495":"`-FunctionDecl 0x12a008b18  col:9 implicit used sprintf 'int (char *, const char *, ...)' extern   |-ParmVarDecl 0x12a008c18 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12a008c80 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12a008bc0 <<invalid sloc>> Implicit 906   `-FormatAttr 0x12a008cf8 <col:9> Implicit printf 2 3 ","19512":"`-FunctionDecl 0x13b117210  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13b117310 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13b117378 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13b1173e0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13b1172b8 <<invalid sloc>> Implicit 882 ","19402":"`-FunctionDecl 0x1511281f8  line:1:1 invalid viminfo_readline 'int (int *)'   |-ParmVarDecl 0x151128128 <col:18, col:25> col:25 invalid virp 'int *'   `-CompoundStmt 0x1511285a8 <line:2:1, line:4:1>     `-ReturnStmt 0x151128598 <line:3:5, col:57>       `-CallExpr 0x151128560 <col:12, col:57> '<dependent type>' contains-errors         |-DeclRefExpr 0x151128400 <col:12> 'int ()' Function 0x151128348 'vim_fgets' 'int ()'         |-CXXDependentScopeMemberExpr 0x151128440 <col:22, col:28> '<dependent type>' contains-errors lvalue ->vir_line         | `-RecoveryExpr 0x151128420 <col:22> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x151128540 <col:38> '<dependent type>' contains-errors lvalue         `-CXXDependentScopeMemberExpr 0x1511284c0 <col:45, col:51> '<dependent type>' contains-errors lvalue ->vir_fd           `-RecoveryExpr 0x1511284a0 <col:45> '<dependent type>' contains-errors lvalue ","20038":"`-FunctionDecl 0x13a940a88  line:1:12 fetch_start_failure 'int (struct strbuf *, void *, void *)' static   |-ParmVarDecl 0x13a928648 <col:32, col:47> col:47 err 'struct strbuf *'   |-ParmVarDecl 0x13a9286c8 <line:2:11, col:17> col:17 used cb 'void *'   |-ParmVarDecl 0x13a928748 <col:21, col:27> col:27 task_cb 'void *'   `-CompoundStmt 0x13a940eb0 <line:3:1, line:9:1>     |-DeclStmt 0x13a940dc8 <line:4:2, col:43>     | |-RecordDecl 0x13a940b90 <col:2, col:9> col:9 struct submodule_parallel_fetch     | `-VarDecl 0x13a940cf8 <col:2, col:41> col:35 used spf 'struct submodule_parallel_fetch *' cinit     |   `-ImplicitCastExpr 0x13a940d98 <col:41> 'struct submodule_parallel_fetch *' <BitCast>     |     `-ImplicitCastExpr 0x13a940d80 <col:41> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x13a940d60 <col:41> 'void *' lvalue ParmVar 0x13a9286c8 'cb' 'void *'     |-BinaryOperator 0x13a940e60 <line:6:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a940e18 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a940de0 <col:2> 'struct submodule_parallel_fetch *' lvalue Var 0x13a940cf8 'spf' 'struct submodule_parallel_fetch *'     | `-IntegerLiteral 0x13a940e40 <col:16> 'int' 1     `-ReturnStmt 0x13a940ea0 <line:8:2, col:9>       `-IntegerLiteral 0x13a940e80 <col:9> 'int' 0 ","19775":"`-FunctionDecl 0x151928318  line:1:12 invalid jas_cmshapmatlut_invert 'int (int *, int *, int)' static   |-ParmVarDecl 0x151928128 <col:36, col:56> col:56 referenced invalid invlut 'int *'   |-ParmVarDecl 0x1519281a8 <line:2:3, col:23> col:23 invalid lut 'int *'   |-ParmVarDecl 0x151928228 <col:28, col:32> col:32 used n 'int'   `-CompoundStmt 0x151945c68 <line:3:1, line:70:1>     |-DeclStmt 0x151928458 <line:4:2, col:7>     | `-VarDecl 0x1519283f0 <col:2, col:6> col:6 used i 'int'     |-DeclStmt 0x1519284f0 <line:5:2, col:7>     | `-VarDecl 0x151928488 <col:2, col:6> col:6 used j 'int'     |-DeclStmt 0x151928588 <line:6:2, col:7>     | `-VarDecl 0x151928520 <col:2, col:6> col:6 used k 'int'     |-CallExpr 0x151941800 <line:13:2, col:15> 'int'     | |-ImplicitCastExpr 0x1519287d0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x151928700 <col:2> 'int ()' Function 0x151928648 'assert' 'int ()'     | `-BinaryOperator 0x151928778 <col:9, col:14> 'int' '>='     |   |-ImplicitCastExpr 0x151928760 <col:9> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x151928720 <col:9> 'int' lvalue ParmVar 0x151928228 'n' 'int'     |   `-IntegerLiteral 0x151928740 <col:14> 'int' 2     |-IfStmt 0x151941b10 <line:14:2, line:17:2>     | |-CXXDependentScopeMemberExpr 0x151941848 <line:14:6, col:14> '<dependent type>' contains-errors lvalue ->data     | | `-RecoveryExpr 0x151941828 <col:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151941af0 <col:20, line:17:2>     |   |-CallExpr 0x1519419f8 <line:15:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x151941970 <col:3> 'int ()' Function 0x1519418b8 'jas_free' 'int ()'     |   | `-CXXDependentScopeMemberExpr 0x1519419b0 <col:12, col:20> '<dependent type>' contains-errors lvalue ->data     |   |   `-RecoveryExpr 0x151941990 <col:12> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x151941ad0 <line:16:3, col:18> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x151941a68 <col:3, col:11> '<dependent type>' contains-errors lvalue ->data     |     | `-RecoveryExpr 0x151941a40 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x151941a20 <col:3> 'int *' lvalue ParmVar 0x151928128 'invlut' 'int *'     |     `-IntegerLiteral 0x151941ab0 <col:18> 'int' 0     |-ForStmt 0x151941fa0 <line:19:2, line:24:2>     | |-BinaryOperator 0x151941b70 <line:19:7, col:11> 'int' '='     | | |-DeclRefExpr 0x151941b30 <col:7> 'int' lvalue Var 0x1519283f0 'i' 'int'     | | `-IntegerLiteral 0x151941b50 <col:11> 'int' 1     | |-<<<NULL>>>     | |-BinaryOperator 0x151941c18 <col:14, col:23> 'int' contains-errors '<'     | | |-DeclRefExpr 0x151941b90 <col:14> 'int' lvalue Var 0x1519283f0 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x151941bd0 <col:18, col:23> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x151941bb0 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x151941c58 <col:29, col:31> 'int' prefix '++'     | | `-DeclRefExpr 0x151941c38 <col:31> 'int' lvalue Var 0x1519283f0 'i' 'int'     | `-CompoundStmt 0x151941f88 <col:34, line:24:2>     |   `-IfStmt 0x151941f68 <line:20:3, line:23:3>     |     |-BinaryOperator 0x151941e60 <line:20:7, col:37> 'int' contains-errors '>'     |     | |-ArraySubscriptExpr 0x151941d68 <col:7, col:22> '<dependent type>' contains-errors lvalue     |     | | |-ImplicitCastExpr 0x151941d50 <col:7, col:12> '<dependent type>' contains-errors <LValueToRValue>     |     | | | `-CXXDependentScopeMemberExpr 0x151941c90 <col:7, col:12> '<dependent type>' contains-errors lvalue ->data     |     | | |   `-RecoveryExpr 0x151941c70 <col:7> '<dependent type>' contains-errors lvalue     |     | | `-BinaryOperator 0x151941d30 <col:17, col:21> 'int' '-'     |     | |   |-ImplicitCastExpr 0x151941d18 <col:17> 'int' <LValueToRValue>     |     | |   | `-DeclRefExpr 0x151941cd8 <col:17> 'int' lvalue Var 0x1519283f0 'i' 'int'     |     | |   `-IntegerLiteral 0x151941cf8 <col:21> 'int' 1     |     | `-ArraySubscriptExpr 0x151941e40 <col:26, col:37> '<dependent type>' contains-errors lvalue     |     |   |-ImplicitCastExpr 0x151941e10 <col:26, col:31> '<dependent type>' contains-errors <LValueToRValue>     |     |   | `-CXXDependentScopeMemberExpr 0x151941da8 <col:26, col:31> '<dependent type>' contains-errors lvalue ->data     |     |   |   `-RecoveryExpr 0x151941d88 <col:26> '<dependent type>' contains-errors lvalue     |     |   `-ImplicitCastExpr 0x151941e28 <col:36> 'int' <LValueToRValue>     |     |     `-DeclRefExpr 0x151941df0 <col:36> 'int' lvalue Var 0x1519283f0 'i' 'int'     |     `-CompoundStmt 0x151941f48 <col:40, line:23:3>     |       |-CallExpr 0x151941ed8 <line:21:4, col:12> 'int'     |       | |-ImplicitCastExpr 0x151941ec0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |       | | `-DeclRefExpr 0x151941e80 <col:4> 'int ()' Function 0x151928648 'assert' 'int ()'     |       | `-IntegerLiteral 0x151941ea0 <col:11> 'int' 0     |       `-ReturnStmt 0x151941f38 <line:22:4, col:12>     |         `-UnaryOperator 0x151941f20 <col:11, col:12> 'int' prefix '-'     |           `-IntegerLiteral 0x151941f00 <col:12> 'int' 1     |-IfStmt 0x1519421e0 <line:25:2, line:26:11>     | |-RecoveryExpr 0x151942178 <line:25:6, col:59> '_Bool' contains-errors     | `-ReturnStmt 0x1519421d0 <line:26:3, col:11>     |   `-UnaryOperator 0x1519421b8 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x151942198 <col:11> 'int' 1     |-BinaryOperator 0x1519422b0 <line:27:2, col:17> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x151942248 <col:2, col:10> '<dependent type>' contains-errors lvalue ->size     | | `-RecoveryExpr 0x151942220 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x151942200 <col:2> 'int *' lvalue ParmVar 0x151928128 'invlut' 'int *'     | `-DeclRefExpr 0x151942290 <col:17> 'int' lvalue ParmVar 0x151928228 'n' 'int'     |-ForStmt 0x151945c00 <line:28:2, line:62:2>     | |-BinaryOperator 0x151942310 <line:28:7, col:11> 'int' '='     | | |-DeclRefExpr 0x1519422d0 <col:7> 'int' lvalue Var 0x1519283f0 'i' 'int'     | | `-IntegerLiteral 0x1519422f0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x1519423b8 <col:14, col:26> 'int' contains-errors '<'     | | |-DeclRefExpr 0x151942330 <col:14> 'int' lvalue Var 0x1519283f0 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x151942370 <col:18, col:26> '<dependent type>' contains-errors lvalue ->size     | |   `-RecoveryExpr 0x151942350 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1519423f8 <col:32, col:34> 'int' prefix '++'     | | `-DeclRefExpr 0x1519423d8 <col:34> 'int' lvalue Var 0x1519283f0 'i' 'int'     | `-CompoundStmt 0x1519457e8 <col:37, line:62:2>     |   `-ForStmt 0x1519456b0 <line:31:3, line:60:3>     |     |-BinaryOperator 0x1519425f0 <line:31:8, col:12> 'int' '='     |     | |-DeclRefExpr 0x1519425b0 <col:8> 'int' lvalue Var 0x151928488 'j' 'int'     |     | `-IntegerLiteral 0x1519425d0 <col:12> 'int' 0     |     |-<<<NULL>>>     |     |-BinaryOperator 0x151942698 <col:15, col:24> 'int' contains-errors '<'     |     | |-DeclRefExpr 0x151942610 <col:15> 'int' lvalue Var 0x151928488 'j' 'int'     |     | `-CXXDependentScopeMemberExpr 0x151942650 <col:19, col:24> '<dependent type>' contains-errors lvalue ->size     |     |   `-RecoveryExpr 0x151942630 <col:19> '<dependent type>' contains-errors lvalue     |     |-UnaryOperator 0x1519426d8 <col:30, col:32> 'int' prefix '++'     |     | `-DeclRefExpr 0x1519426b8 <col:32> 'int' lvalue Var 0x151928488 'j' 'int'     |     `-CompoundStmt 0x151945690 <col:35, line:60:3>     |       |-IfStmt 0x151945080 <line:33:4, line:49:4>     |       | |-BinaryOperator 0x151944860 <line:33:8, col:14> 'int' contains-errors '=='     |       | | |-RecoveryExpr 0x151944820 <col:8> '<dependent type>' contains-errors lvalue     |       | | `-RecoveryExpr 0x151944840 <col:14> '<dependent type>' contains-errors lvalue     |       | `-CompoundStmt 0x151945058 <col:18, line:49:4>     |       |   |-ForStmt 0x151944be0 <line:34:5, line:41:5>     |       |   | |-BinaryOperator 0x151944918 <line:34:10, col:18> 'int' '='     |       |   | | |-DeclRefExpr 0x151944880 <col:10> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   | | `-BinaryOperator 0x1519448f8 <col:14, col:18> 'int' '+'     |       |   | |   |-ImplicitCastExpr 0x1519448e0 <col:14> 'int' <LValueToRValue>     |       |   | |   | `-DeclRefExpr 0x1519448a0 <col:14> 'int' lvalue Var 0x151928488 'j' 'int'     |       |   | |   `-IntegerLiteral 0x1519448c0 <col:18> 'int' 1     |       |   | |-<<<NULL>>>     |       |   | |-BinaryOperator 0x1519449c0 <col:21, col:30> 'int' contains-errors '<'     |       |   | | |-DeclRefExpr 0x151944938 <col:21> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   | | `-CXXDependentScopeMemberExpr 0x151944978 <col:25, col:30> '<dependent type>' contains-errors lvalue ->size     |       |   | |   `-RecoveryExpr 0x151944958 <col:25> '<dependent type>' contains-errors lvalue     |       |   | |-UnaryOperator 0x151944a00 <col:36, col:38> 'int' prefix '++'     |       |   | | `-DeclRefExpr 0x1519449e0 <col:38> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   | `-CompoundStmt 0x151944bc8 <col:41, line:41:5>     |       |   |   `-IfStmt 0x151944ba8 <line:36:6, line:37:7>     |       |   |     |-BinaryOperator 0x151944b80 <line:36:10, col:16> 'int' contains-errors '!='     |       |   |     | |-RecoveryExpr 0x151944b40 <col:10> '<dependent type>' contains-errors lvalue     |       |   |     | `-RecoveryExpr 0x151944b60 <col:16> '<dependent type>' contains-errors lvalue     |       |   |     `-BreakStmt 0x151944ba0 <line:37:7>     |       |   |-IfStmt 0x151945030 <line:42:5, line:47:5>     |       |   | |-BinaryOperator 0x151944ca0 <line:42:9, col:18> 'int' contains-errors '<'     |       |   | | |-DeclRefExpr 0x151944c18 <col:9> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   | | `-CXXDependentScopeMemberExpr 0x151944c58 <col:13, col:18> '<dependent type>' contains-errors lvalue ->size     |       |   | |   `-RecoveryExpr 0x151944c38 <col:13> '<dependent type>' contains-errors lvalue     |       |   | `-CompoundStmt 0x151945018 <col:24, line:47:5>     |       |   |   `-UnaryOperator 0x151944ce0 <line:43:6, col:8> 'int' prefix '--'     |       |   |     `-DeclRefExpr 0x151944cc0 <col:8> 'int' lvalue Var 0x151928520 'k' 'int'     |       |   `-BreakStmt 0x151945050 <line:48:5>     |       `-IfStmt 0x151945670 <line:50:4, line:59:4>     |         |-BinaryOperator 0x151945168 <line:50:8, col:24> 'int' contains-errors '<'     |         | |-DeclRefExpr 0x1519450a0 <col:8> 'int' lvalue Var 0x151928488 'j' 'int'     |         | `-BinaryOperator 0x151945148 <col:12, col:24> '<dependent type>' contains-errors '-'     |         |   |-CXXDependentScopeMemberExpr 0x1519450e0 <col:12, col:17> '<dependent type>' contains-errors lvalue ->size     |         |   | `-RecoveryExpr 0x1519450c0 <col:12> '<dependent type>' contains-errors lvalue     |         |   `-IntegerLiteral 0x151945128 <col:24> 'int' 1     |         `-CompoundStmt 0x151945658 <col:27, line:59:4>     |           `-IfStmt 0x151945638 <line:52:5, line:58:5>     |             |-RecoveryExpr 0x1519452a0 <line:52:9, col:25> '_Bool' contains-errors     |             `-CompoundStmt 0x151945620 <col:29, line:58:5>     |               `-BreakStmt 0x151945618 <line:57:6>     `-ReturnStmt 0x151945c58 <line:69:2, col:9>       `-IntegerLiteral 0x151945c38 <col:9> 'int' 0 ","19215":"`-FunctionDecl 0x127026748  line:1:12 cma_modify_qp_rtr 'int (struct rdma_id_private *, struct rdma_conn_param *)' static   |-ParmVarDecl 0x12700e248 <col:30, col:54> col:54 used id_priv 'struct rdma_id_private *'   |-ParmVarDecl 0x127026628 <line:2:9, col:33> col:33 used conn_param 'struct rdma_conn_param *'   `-CompoundStmt 0x130009740 <line:3:1, line:49:1>     |-DeclStmt 0x1270269c8 <line:4:2, col:27>     | |-RecordDecl 0x127026848 <col:2, col:9> col:9 struct ib_qp_attr     | `-VarDecl 0x127026948 <col:2, col:20> col:20 referenced invalid qp_attr 'struct ib_qp_attr'     |-DeclStmt 0x127026af8 <line:5:2, col:23>     | |-VarDecl 0x1270269f8 <col:2, col:6> col:6 used qp_attr_mask 'int'     | `-VarDecl 0x127026a78 <col:2, col:20> col:20 used ret 'int'     |-DeclStmt 0x127026c88 <line:6:2, col:19>     | |-RecordDecl 0x127026b10 <col:2, col:8> col:8 union ib_gid     | `-VarDecl 0x127026c08 <col:2, col:15> col:15 invalid sgid 'union ib_gid'     |-CallExpr 0x127026e68 <line:8:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x127026dd0 <col:2> 'int ()' Function 0x127026d18 'mutex_lock' 'int ()'     | `-UnaryOperator 0x127026e50 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x127026e28 <col:14, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x127026df0 <col:14> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     |-IfStmt 0x127027050 <line:9:2, line:12:2>     | |-UnaryOperator 0x127026f50 <line:9:6, col:19> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x127026f38 <col:7, col:19> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x127026ef0 <col:7, col:19> '<dependent type>' contains-errors lvalue .qp     | |     `-RecoveryExpr 0x127026ec8 <col:7, col:16> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x127026e90 <col:7> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     | `-CompoundStmt 0x127027030 <col:23, line:12:2>     |   |-BinaryOperator 0x127026fa8 <line:10:3, col:9> 'int' '='     |   | |-DeclRefExpr 0x127026f68 <col:3> 'int' lvalue Var 0x127026a78 'ret' 'int'     |   | `-IntegerLiteral 0x127026f88 <col:9> 'int' 0     |   `-GotoStmt 0x127027018 <line:11:3, col:8> 'out' 0x127026fc8     |-BinaryOperator 0x127027158 <line:15:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1270270b8 <col:2, col:10> '<dependent type>' contains-errors lvalue .qp_state     | | `-RecoveryExpr 0x127027090 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127027070 <col:2> 'struct ib_qp_attr' lvalue Var 0x127026948 'qp_attr' 'struct ib_qp_attr'     | `-RecoveryExpr 0x127027138 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1270273f0 <line:16:2, col:63> 'int' contains-errors '='     | |-DeclRefExpr 0x127027178 <col:2> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-CallExpr 0x1270273b8 <col:8, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127027278 <col:8> 'int ()' Function 0x1270271c0 'rdma_init_qp_attr' 'int ()'     |   |-UnaryOperator 0x1270272f8 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1270272d0 <col:27, col:36> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x127027298 <col:27> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     |   |-UnaryOperator 0x127027330 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x127027310 <col:41> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1270273a0 <col:50, col:51> 'int *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x127027348 <col:51> 'int' lvalue Var 0x1270269f8 'qp_attr_mask' 'int'     |-IfStmt 0x127027460 <line:17:2, line:18:8>     | |-ImplicitCastExpr 0x127027430 <line:17:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x127027410 <col:6> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-GotoStmt 0x127027448 <line:18:3, col:8> 'out' 0x127026fc8     |-BinaryOperator 0x127028ed8 <line:20:2, col:59> 'int' contains-errors '='     | |-DeclRefExpr 0x127027480 <col:2> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-CallExpr 0x127028ea0 <col:8, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127027580 <col:8> 'int ()' Function 0x1270274c8 'ib_modify_qp' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x127028e00 <col:21, col:33> '<dependent type>' contains-errors lvalue .qp     |   | `-RecoveryExpr 0x1270275d8 <col:21, col:30> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1270275a0 <col:21> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     |   |-UnaryOperator 0x127028e68 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x127028e48 <col:38> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x127028e80 <col:47> 'int' lvalue Var 0x1270269f8 'qp_attr_mask' 'int'     |-IfStmt 0x127028f48 <line:21:2, line:22:8>     | |-ImplicitCastExpr 0x127028f18 <line:21:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x127028ef8 <col:6> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-GotoStmt 0x127028f30 <line:22:3, col:8> 'out' 0x127026fc8     |-BinaryOperator 0x127029050 <line:24:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127028fb0 <col:2, col:10> '<dependent type>' contains-errors lvalue .qp_state     | | `-RecoveryExpr 0x127028f88 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127028f68 <col:2> 'struct ib_qp_attr' lvalue Var 0x127026948 'qp_attr' 'struct ib_qp_attr'     | `-RecoveryExpr 0x127029030 <col:21> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1270291d0 <line:25:2, col:63> 'int' contains-errors '='     | |-DeclRefExpr 0x127029070 <col:2> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-CallExpr 0x127029198 <col:8, col:63> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127029090 <col:8> 'int ()' Function 0x1270271c0 'rdma_init_qp_attr' 'int ()'     |   |-UnaryOperator 0x127029110 <col:26, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1270290e8 <col:27, col:36> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1270290b0 <col:27> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     |   |-UnaryOperator 0x127029148 <col:40, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x127029128 <col:41> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x127029180 <col:50, col:51> 'int *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x127029160 <col:51> 'int' lvalue Var 0x1270269f8 'qp_attr_mask' 'int'     |-IfStmt 0x127029240 <line:26:2, line:27:8>     | |-ImplicitCastExpr 0x127029210 <line:26:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x1270291f0 <col:6> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-GotoStmt 0x127029228 <line:27:3, col:8> 'out' 0x127026fc8     |-BinaryOperator 0x127029640 <line:29:2, line:30:44> 'int' contains-errors '='     | |-DeclRefExpr 0x127029260 <line:29:2> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-CallExpr 0x127029600 <col:8, line:30:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x127029360 <line:29:8> 'int ()' Function 0x1270292a8 'ib_query_gid' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x1270293e0 <col:21, col:33> '<dependent type>' contains-errors lvalue .device     |   | `-RecoveryExpr 0x1270293b8 <col:21, col:30> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x127029380 <col:21> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     |   |-CXXDependentScopeMemberExpr 0x127029488 <col:41, col:53> '<dependent type>' contains-errors lvalue .port_num     |   | `-RecoveryExpr 0x127029460 <col:41, col:50> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x127029428 <col:41> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     |   |-CXXDependentScopeMemberExpr 0x127029580 <line:30:7, col:27> '<dependent type>' contains-errors lvalue .sgid_index     |   | `-CXXDependentScopeMemberExpr 0x127029538 <col:7, col:23> '<dependent type>' contains-errors lvalue .grh     |   |   `-CXXDependentScopeMemberExpr 0x1270294f0 <col:7, col:15> '<dependent type>' contains-errors lvalue .ah_attr     |   |     `-RecoveryExpr 0x1270294d0 <col:7> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1270295e8 <col:39, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x1270295c8 <col:40> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1270296b0 <line:31:2, line:32:8>     | |-ImplicitCastExpr 0x127029680 <line:31:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x127029660 <col:6> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-GotoStmt 0x127029698 <line:32:3, col:8> 'out' 0x127026fc8     |-IfStmt 0x130009218 <line:34:2, line:42:2>     | |-RecoveryExpr 0x127029ba0 <line:34:6, line:37:9> '_Bool' contains-errors     | `-CompoundStmt 0x130009200 <col:33, line:42:2>     |   `-IfStmt 0x127029dd0 <line:40:3, line:41:9>     |     |-ImplicitCastExpr 0x127029da0 <line:40:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x127029d80 <col:7> 'int' lvalue Var 0x127026a78 'ret' 'int'     |     `-GotoStmt 0x127029db8 <line:41:4, col:9> 'out' 0x127026fc8     |-IfStmt 0x130009380 <line:43:2, line:44:44>     | |-ImplicitCastExpr 0x130009258 <line:43:6> 'struct rdma_conn_param *' <LValueToRValue>     | | `-DeclRefExpr 0x130009238 <col:6> 'struct rdma_conn_param *' lvalue ParmVar 0x127026628 'conn_param' 'struct rdma_conn_param *'     | `-BinaryOperator 0x130009360 <line:44:3, col:44> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x1300092b8 <col:3, col:11> '<dependent type>' contains-errors lvalue .max_dest_rd_atomic     |   | `-RecoveryExpr 0x130009290 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x130009270 <col:3> 'struct ib_qp_attr' lvalue Var 0x127026948 'qp_attr' 'struct ib_qp_attr'     |   `-RecoveryExpr 0x130009338 <col:32, col:44> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x130009300 <col:32> 'struct rdma_conn_param *' lvalue ParmVar 0x127026628 'conn_param' 'struct rdma_conn_param *'     |-BinaryOperator 0x130009518 <line:45:2, col:59> 'int' contains-errors '='     | |-DeclRefExpr 0x1300093a0 <col:2> 'int' lvalue Var 0x127026a78 'ret' 'int'     | `-CallExpr 0x1300094e0 <col:8, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1300093c0 <col:8> 'int ()' Function 0x1270274c8 'ib_modify_qp' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x130009440 <col:21, col:33> '<dependent type>' contains-errors lvalue .qp     |   | `-RecoveryExpr 0x130009418 <col:21, col:30> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1300093e0 <col:21> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     |   |-UnaryOperator 0x1300094a8 <col:37, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x130009488 <col:38> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1300094c0 <col:47> 'int' lvalue Var 0x1270269f8 'qp_attr_mask' 'int'     |-LabelStmt 0x1300096d8 <line:46:1, line:47:33> 'out'     | `-CallExpr 0x1300096b0 <col:2, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130009618 <col:2> 'int ()' Function 0x130009560 'mutex_unlock' 'int ()'     |   `-UnaryOperator 0x130009698 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x130009670 <col:16, col:25> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x130009638 <col:16> 'struct rdma_id_private *' lvalue ParmVar 0x12700e248 'id_priv' 'struct rdma_id_private *'     `-ReturnStmt 0x130009730 <line:48:2, col:9>       `-ImplicitCastExpr 0x130009718 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1300096f8 <col:9> 'int' lvalue Var 0x127026a78 'ret' 'int' ","19327":"`-FunctionDecl 0x14400ddf8  line:1:7 invalid X509_NAME2text 'char *(int *)'   |-ParmVarDecl 0x14400dd28 <col:22, col:33> col:33 invalid name 'int *'   `-CompoundStmt 0x144029498 <col:39, line:22:1>     |-DeclStmt 0x14400df28 <line:2:5, col:15>     | `-VarDecl 0x14400dec0 <col:5, col:11> col:11 used text 'char *'     |-DeclStmt 0x14400dfd8 <line:4:5, col:10>     | `-VarDecl 0x14400df70 <col:5, col:9> col:9 used n 'int'     |-IfStmt 0x1440279e0 <line:7:5, line:8:29>     | |-UnaryOperator 0x14400e398 <line:7:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14400e380 <col:9> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14400e360 <col:9> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1440279d0 <line:8:9, col:29>     |   `-ImplicitCastExpr 0x144027598 <col:16, col:29> 'char *' <IntegralToPointer>     |     `-CallExpr 0x144027558 <col:16, col:29> 'int'     |       |-ImplicitCastExpr 0x144027540 <col:16> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x1440274b8 <col:16> 'int ()' Function 0x144027400 'str_dup' 'int ()'     |       `-ImplicitCastExpr 0x144027580 <col:24> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x144027520 <col:24> 'char[4]' lvalue \"STR\"     |-CallExpr 0x144027da0 <line:9:5, line:10:66> '<dependent type>' contains-errors     | |-DeclRefExpr 0x144027ae0 <line:9:5> 'int ()' Function 0x144027a28 'X509_NAME_print_ex' 'int ()'     | |-RecoveryExpr 0x144027c80 <col:24> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x144027b18 <col:29> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x144027b38 <col:35> 'int' 0     | `-BinaryOperator 0x144027d80 <line:10:9, col:52> '<dependent type>' contains-errors '&'     |   |-BinaryOperator 0x144027d10 <col:9, col:28> '<dependent type>' contains-errors '&'     |   | |-RecoveryExpr 0x144027ca0 <col:9> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x144027cf8 <col:27, col:28> '<dependent type>' contains-errors prefix '~' cannot overflow     |   |   `-ImplicitCastExpr 0x144027ce0 <col:28> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x144027cc0 <col:28> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x144027d68 <col:51, col:52> '<dependent type>' contains-errors prefix '~' cannot overflow     |     `-ImplicitCastExpr 0x144027d50 <col:52> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x144027d30 <col:52> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x144027fa8 <line:11:5, col:22> 'int' contains-errors '='     | |-DeclRefExpr 0x144027de0 <col:5> 'int' lvalue Var 0x14400df70 'n' 'int'     | `-CallExpr 0x144027f80 <col:7, col:22> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x144027ee0 <col:7> 'int ()' Function 0x144027e28 'BIO_pending' 'int ()'     |   `-RecoveryExpr 0x144027f60 <col:19> '<dependent type>' contains-errors lvalue     |-IfStmt 0x144029330 <line:14:5, line:18:5>     | |-BinaryOperator 0x144028318 <line:14:8, col:10> 'int' '<'     | | |-ImplicitCastExpr 0x144028300 <col:8> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1440282c0 <col:8> 'int' lvalue Var 0x14400df70 'n' 'int'     | | `-IntegerLiteral 0x1440282e0 <col:10> 'int' 0     | `-CompoundStmt 0x144029310 <col:13, line:18:5>     |   |-CallExpr 0x144029210 <line:16:9, col:22> 'int'     |   | |-ImplicitCastExpr 0x1440291f8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1440291b8 <col:9> 'int ()' Function 0x144029100 'str_free' 'int ()'     |   | `-ImplicitCastExpr 0x144029238 <col:18> 'char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1440291d8 <col:18> 'char *' lvalue Var 0x14400dec0 'text' 'char *'     |   `-ReturnStmt 0x144029300 <line:17:9, col:29>     |     `-ImplicitCastExpr 0x1440292e8 <col:16, col:29> 'char *' <IntegralToPointer>     |       `-CallExpr 0x1440292a8 <col:16, col:29> 'int'     |         |-ImplicitCastExpr 0x144029290 <col:16> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x144029250 <col:16> 'int ()' Function 0x144027400 'str_dup' 'int ()'     |         `-ImplicitCastExpr 0x1440292d0 <col:24> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x144029270 <col:24> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x144029410 <line:19:5, col:13> 'char' '='     | |-ArraySubscriptExpr 0x1440293c0 <col:5, col:11> 'char' lvalue     | | |-ImplicitCastExpr 0x144029390 <col:5> 'char *' <LValueToRValue>     | | | `-DeclRefExpr 0x144029350 <col:5> 'char *' lvalue Var 0x14400dec0 'text' 'char *'     | | `-ImplicitCastExpr 0x1440293a8 <col:10> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x144029370 <col:10> 'int' lvalue Var 0x14400df70 'n' 'int'     | `-ImplicitCastExpr 0x1440293f8 <col:13> 'char' <IntegralCast>     |   `-CharacterLiteral 0x1440293e0 <col:13> 'int' 0     `-ReturnStmt 0x144029488 <line:21:5, col:12>       `-ImplicitCastExpr 0x144029470 <col:12> 'char *' <LValueToRValue>         `-DeclRefExpr 0x144029450 <col:12> 'char *' lvalue Var 0x14400dec0 'text' 'char *' ","19652":"`-FunctionDecl 0x1201281c8  line:1:1 invalid lka_filter_data_end 'int (int)'   |-ParmVarDecl 0x1201280f0 <col:21, col:30> col:30 invalid reqid 'int'   `-CompoundStmt 0x105009eb0 <line:2:1, line:11:1>     |-DeclStmt 0x120128468 <line:3:2, col:27>     | |-RecordDecl 0x120128278 <col:2, col:9> col:9 struct filter_session     | `-VarDecl 0x1201283e8 <col:2, col:25> col:25 used fs 'struct filter_session *'     |-BinaryOperator 0x120128728 <line:5:2, col:33> 'struct filter_session *' contains-errors '='     | |-DeclRefExpr 0x120128480 <col:2> 'struct filter_session *' lvalue Var 0x1201283e8 'fs' 'struct filter_session *'     | `-CallExpr 0x1201286f8 <col:7, col:33> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x120128600 <col:7> 'int ()' Function 0x120128548 'tree_xget' 'int ()'     |   |-UnaryOperator 0x1201286e0 <col:17, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x1201286c0 <col:18> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x120128650 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x105009c68 <line:6:2, line:9:2>     | |-RecoveryExpr 0x1050099c0 <line:6:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x120128748 <col:6> 'struct filter_session *' lvalue Var 0x1201283e8 'fs' 'struct filter_session *'     | `-CompoundStmt 0x105009c48 <col:14, line:9:2>     |   |-CallExpr 0x105009b48 <line:7:3, col:17> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x105009ac8 <col:3> 'int ()' Function 0x105009a10 'io_free' 'int ()'     |   | `-RecoveryExpr 0x105009b20 <col:11, col:15> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x105009ae8 <col:11> 'struct filter_session *' lvalue Var 0x1201283e8 'fs' 'struct filter_session *'     |   `-BinaryOperator 0x105009c28 <line:8:3, col:12> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x105009ba8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x105009b70 <col:3> 'struct filter_session *' lvalue Var 0x1201283e8 'fs' 'struct filter_session *'     |     `-RecoveryExpr 0x105009c08 <col:12> '<dependent type>' contains-errors lvalue     `-CallExpr 0x105009e78 <line:10:2, col:39> '<dependent type>' contains-errors       |-DeclRefExpr 0x105009d68 <col:2> 'int ()' Function 0x105009cb0 'log_trace' 'int ()'       |-RecoveryExpr 0x105009e58 <col:12> '<dependent type>' contains-errors lvalue       |-StringLiteral 0x105009de0 <col:27> 'char[4]' lvalue \"STR\"       `-RecoveryExpr 0x105009e00 <col:34> '<dependent type>' contains-errors lvalue ","19222":"`-FunctionDecl 0x12c808fa0  col:27 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12c8090a0 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12c809048 <<invalid sloc>> Implicit 902 ","19526":"`-FunctionDecl 0x140008200  line:1:1 worker_err_ratelimit 'int (struct worker *, int)'   |-ParmVarDecl 0x148128648 <col:22, col:37> col:37 used worker 'struct worker *'   |-ParmVarDecl 0x1481286c8 <col:45, col:49> col:49 used err 'int'   `-CompoundStmt 0x140008870 <line:2:1, line:13:1>     |-IfStmt 0x1400087f8 <line:3:2, line:11:2> has_else     | |-BinaryOperator 0x140008438 <line:3:5, col:44> 'int' contains-errors '=='     | | |-RecoveryExpr 0x140008338 <col:5, col:13> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x140008300 <col:5> 'struct worker *' lvalue ParmVar 0x148128648 'worker' 'struct worker *'     | | `-UnaryOperator 0x140008420 <col:31, col:44> '<dependent type>' contains-errors prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x140008408 <col:32, col:44> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x1400083c0 <col:32, col:44> '<dependent type>' contains-errors lvalue .now     | |       `-RecoveryExpr 0x140008398 <col:32, col:40> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x140008360 <col:32> 'struct worker *' lvalue ParmVar 0x148128648 'worker' 'struct worker *'     | |-CompoundStmt 0x1400085c8 <col:49, line:7:2>     | | `-IfStmt 0x1400085a8 <line:5:3, line:6:12>     | |   |-BinaryOperator 0x140008540 <line:5:6, col:34> 'int' contains-errors '>'     | |   | |-UnaryOperator 0x1400084b8 <col:6, col:29> '<dependent type>' contains-errors postfix '++' cannot overflow     | |   | | `-RecoveryExpr 0x140008490 <col:6, col:14> '<dependent type>' contains-errors lvalue     | |   | |   `-DeclRefExpr 0x140008458 <col:6> 'struct worker *' lvalue ParmVar 0x148128648 'worker' 'struct worker *'     | |   | `-RecoveryExpr 0x140008520 <col:34> '<dependent type>' contains-errors lvalue     | |   `-ReturnStmt 0x140008598 <line:6:4, col:12>     | |     `-UnaryOperator 0x140008580 <col:11, col:12> 'int' prefix '-'     | |       `-IntegerLiteral 0x140008560 <col:12> 'int' 1     | `-CompoundStmt 0x1400087d8 <line:7:9, line:11:2>     |   |-BinaryOperator 0x140008718 <line:9:3, col:41> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x140008618 <col:3, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1400085e0 <col:3> 'struct worker *' lvalue ParmVar 0x148128648 'worker' 'struct worker *'     |   | `-UnaryOperator 0x140008700 <col:28, col:41> '<dependent type>' contains-errors prefix '*' cannot overflow     |   |   `-ImplicitCastExpr 0x1400086e8 <col:29, col:41> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-CXXDependentScopeMemberExpr 0x1400086a0 <col:29, col:41> '<dependent type>' contains-errors lvalue .now     |   |       `-RecoveryExpr 0x140008678 <col:29, col:37> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x140008640 <col:29> 'struct worker *' lvalue ParmVar 0x148128648 'worker' 'struct worker *'     |   `-BinaryOperator 0x1400087b8 <line:10:3, col:29> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x140008770 <col:3, col:11> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x140008738 <col:3> 'struct worker *' lvalue ParmVar 0x148128648 'worker' 'struct worker *'     |     `-IntegerLiteral 0x140008798 <col:29> 'int' 1     `-ReturnStmt 0x140008860 <line:12:2, col:9>       `-ImplicitCastExpr 0x140008848 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x140008828 <col:9> 'int' lvalue ParmVar 0x1481286c8 'err' 'int' ","19639":"`-FunctionDecl 0x13b8276d8  line:1:13 invalid dccp_new 'int (struct nf_conn *, const struct sk_buff *, unsigned int, unsigned int *)' static   |-ParmVarDecl 0x13b80e268 <col:22, col:38> col:38 used ct 'struct nf_conn *'   |-ParmVarDecl 0x13b827458 <col:42, col:64> col:64 used skb 'const struct sk_buff *'   |-ParmVarDecl 0x13b8274d8 <line:2:8, col:21> col:21 used dataoff 'unsigned int'   |-ParmVarDecl 0x13b827588 <col:30, col:44> col:44 timeouts 'unsigned int *'   `-CompoundStmt 0x13b82e318 <line:3:1, line:41:1>     |-DeclStmt 0x13b827bc8 <line:4:2, col:33>     | |-RecordDecl 0x13b8277a0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x13b827908 <col:2, col:32> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x13b827b98 <col:20, col:32> 'struct net *' <IntegralToPointer>     |     `-CallExpr 0x13b827b58 <col:20, col:32> 'int'     |       |-ImplicitCastExpr 0x13b827b40 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x13b827ad0 <col:20> 'int ()' Function 0x13b827a18 'nf_ct_net' 'int ()'     |       `-ImplicitCastExpr 0x13b827b80 <col:30> 'struct nf_conn *' <LValueToRValue>     |         `-DeclRefExpr 0x13b827af0 <col:30> 'struct nf_conn *' lvalue ParmVar 0x13b80e268 'ct' 'struct nf_conn *'     |-DeclStmt 0x13b827dc8 <line:5:2, col:21>     | |-RecordDecl 0x13b827be0 <col:2, col:9> col:9 struct dccp_net     | `-VarDecl 0x13b827d48 <col:2, col:19> col:19 used dn 'struct dccp_net *'     |-DeclStmt 0x13b828050 <line:6:2, col:26>     | |-RecordDecl 0x13b827de0 <col:2, col:9> col:9 struct dccp_hdr     | |-VarDecl 0x13b827ed8 <col:2, col:18> col:18 invalid _dh 'struct dccp_hdr'     | `-VarDecl 0x13b827fc8 <col:2, col:24> col:24 used dh 'struct dccp_hdr *'     |-DeclStmt 0x13b8280e8 <line:7:2, col:17>     | `-VarDecl 0x13b828080 <col:2, col:14> col:14 used msg 'const char *'     |-BinaryOperator 0x13b82d000 <line:10:2, col:56> 'struct dccp_hdr *' contains-errors '='     | |-DeclRefExpr 0x13b828100 <col:2> 'struct dccp_hdr *' lvalue Var 0x13b827fc8 'dh' 'struct dccp_hdr *'     | `-ImplicitCastExpr 0x13b8283e0 <col:7, col:56> 'struct dccp_hdr *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x13b828370 <col:7, col:56> 'int' contains-errors     |     |-ImplicitCastExpr 0x13b828358 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x13b828200 <col:7> 'int ()' Function 0x13b828148 'skb_header_pointer' 'int ()'     |     |-ImplicitCastExpr 0x13b8283b0 <col:26> 'const struct sk_buff *' <LValueToRValue>     |     | `-DeclRefExpr 0x13b828220 <col:26> 'const struct sk_buff *' lvalue ParmVar 0x13b827458 'skb' 'const struct sk_buff *'     |     |-ImplicitCastExpr 0x13b8283c8 <col:31> 'unsigned int' <LValueToRValue>     |     | `-DeclRefExpr 0x13b828240 <col:31> 'unsigned int' lvalue ParmVar 0x13b8274d8 'dataoff' 'unsigned int'     |     |-UnaryExprOrTypeTraitExpr 0x13b8282a0 <col:40, col:50> 'unsigned long' contains-errors sizeof     |     | `-ParenExpr 0x13b828280 <col:46, col:50> '<dependent type>' contains-errors lvalue     |     |   `-RecoveryExpr 0x13b828260 <col:47> '<dependent type>' contains-errors lvalue     |     `-UnaryOperator 0x13b828340 <col:53, col:54> 'struct dccp_hdr **' prefix '&' cannot overflow     |       `-DeclRefExpr 0x13b8282c0 <col:54> 'struct dccp_hdr *' lvalue Var 0x13b827fc8 'dh' 'struct dccp_hdr *'     |-CallExpr 0x13b82d1e0 <line:11:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13b82d100 <col:2> 'int ()' Function 0x13b82d048 'BUG_ON' 'int ()'     | `-BinaryOperator 0x13b82d1c0 <col:9, col:15> 'int' contains-errors '=='     |   |-DeclRefExpr 0x13b82d120 <col:9> 'struct dccp_hdr *' lvalue Var 0x13b827fc8 'dh' 'struct dccp_hdr *'     |   `-RecoveryExpr 0x13b82d1a0 <col:15> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x13b82d300 <line:14:2, line:26:2>     | |-RecoveryExpr 0x13b82d2e0 <line:14:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13b82d818 <col:17, line:26:2>     |   |-DefaultStmt 0x13b82d4f8 <line:15:2, line:16:23>     |   | `-BinaryOperator 0x13b82d4d8 <col:3, col:23> 'struct dccp_net *' '='     |   |   |-DeclRefExpr 0x13b82d328 <col:3> 'struct dccp_net *' lvalue Var 0x13b827d48 'dn' 'struct dccp_net *'     |   |   `-ImplicitCastExpr 0x13b82d4c0 <col:8, col:23> 'struct dccp_net *' <IntegralToPointer>     |   |     `-CallExpr 0x13b82d480 <col:8, col:23> 'int'     |   |       |-ImplicitCastExpr 0x13b82d468 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x13b82d428 <col:8> 'int ()' Function 0x13b82d370 'dccp_pernet' 'int ()'     |   |       `-ImplicitCastExpr 0x13b82d4a8 <col:20> 'struct net *' <LValueToRValue>     |   |         `-DeclRefExpr 0x13b82d448 <col:20> 'struct net *' lvalue Var 0x13b827908 'net' 'struct net *'     |   |-IfStmt 0x13b82d718 <line:17:3, line:20:3>     |   | |-BinaryOperator 0x13b82d598 <line:17:7, col:25> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x13b82d550 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x13b82d518 <col:7> 'struct dccp_net *' lvalue Var 0x13b827d48 'dn' 'struct dccp_net *'     |   | | `-IntegerLiteral 0x13b82d578 <col:25> 'int' 0     |   | `-CompoundStmt 0x13b82d6f8 <col:28, line:20:3>     |   |   |-BinaryOperator 0x13b82d670 <line:18:4, col:10> 'const char *' '='     |   |   | |-DeclRefExpr 0x13b82d5b8 <col:4> 'const char *' lvalue Var 0x13b828080 'msg' 'const char *'     |   |   | `-ImplicitCastExpr 0x13b82d658 <col:10> 'const char *' <NoOp>     |   |   |   `-ImplicitCastExpr 0x13b82d640 <col:10> 'char *' <ArrayToPointerDecay>     |   |   |     `-StringLiteral 0x13b82d620 <col:10> 'char[4]' lvalue \"STR\"     |   |   `-GotoStmt 0x13b82d6e0 <line:19:4, col:9> 'out_invalid' 0x13b82d690     |   |-BreakStmt 0x13b82d750 <line:22:3>     |   |-BinaryOperator 0x13b82d7e0 <line:24:3, col:9> 'const char *' '='     |   | |-DeclRefExpr 0x13b82d770 <col:3> 'const char *' lvalue Var 0x13b828080 'msg' 'const char *'     |   | `-ImplicitCastExpr 0x13b82d7c8 <col:9> 'const char *' <NoOp>     |   |   `-ImplicitCastExpr 0x13b82d7b0 <col:9> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x13b82d790 <col:9> 'char[4]' lvalue \"STR\"     |   `-GotoStmt 0x13b82d800 <line:25:3, col:8> 'out_invalid' 0x13b82d690     |-BinaryOperator 0x13b82de10 <line:33:2, col:33> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x13b82dda8 <col:2, col:17> '<dependent type>' contains-errors lvalue .handshake_seq     | | `-CXXDependentScopeMemberExpr 0x13b82dd60 <col:2, col:12> '<dependent type>' contains-errors lvalue .dccp     | |   `-RecoveryExpr 0x13b82dd38 <col:2, col:6> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x13b82dd00 <col:2> 'struct nf_conn *' lvalue ParmVar 0x13b80e268 'ct' 'struct nf_conn *'     | `-IntegerLiteral 0x13b82ddf0 <col:33> 'int' 0     `-LabelStmt 0x13b82e2f8 <line:36:1, col:12> 'out_invalid'       `-NullStmt 0x13b82e2f0 <col:12> ","20003":"`-FunctionDecl 0x153928198  line:1:1 dump_threads 'int (void)'   `-CompoundStmt 0x153943960 <line:2:1, line:41:1>     |-DeclStmt 0x1539283c8 <line:4:2, col:19>     | `-VarDecl 0x153928360 <col:2, col:18> col:7 used time_buf 'char[26]'     |-DeclStmt 0x153928478 <line:7:2, col:17>     | `-VarDecl 0x153928410 <col:2, col:8> col:8 used file_name 'char *'     |-BinaryOperator 0x153942c00 <line:9:2, line:16:32> 'char *' contains-errors '='     | |-DeclRefExpr 0x153928490 <line:9:2> 'char *' lvalue Var 0x153928410 'file_name' 'char *'     | `-CallExpr 0x1539287c0 <col:14, line:16:32> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1539285c0 <line:9:14> 'int ()' Function 0x153928508 'make_file_name' 'int ()'     |   |-StringLiteral 0x153928620 <col:29> 'char[4]' lvalue \"STR\"     |   |-StringLiteral 0x153928640 <line:10:6> 'char[4]' lvalue \"STR\"     |   |-RecoveryExpr 0x153928738 <line:14:6> '<dependent type>' contains-errors lvalue     |   `-CXXDependentScopeMemberExpr 0x153928778 <line:16:6, col:19> '<dependent type>' contains-errors lvalue ->instance_name     |     `-RecoveryExpr 0x153928758 <col:6> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153942f40 <line:18:2, col:16> 'int'     | |-ImplicitCastExpr 0x153942f28 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x153942ee8 <col:2> 'int ()' Function 0x153942e30 'FREE' 'int ()'     | `-ImplicitCastExpr 0x153942f68 <col:7> 'char *' <LValueToRValue>     |   `-DeclRefExpr 0x153942f08 <col:7> 'char *' lvalue Var 0x153928410 'file_name' 'char *'     |-CallExpr 0x153943098 <line:20:2, col:15> 'int'     | `-ImplicitCastExpr 0x153943080 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x153943060 <col:2> 'int ()' Function 0x153942fa8 'set_time_now' 'int ()'     |-CallExpr 0x153943320 <line:21:2, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153943198 <col:2> 'int ()' Function 0x1539430e0 'ctime_r' 'int ()'     | |-UnaryOperator 0x153943308 <col:10, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1539432c0 <col:11, col:20> '<dependent type>' contains-errors lvalue .tv_sec     | |   `-RecoveryExpr 0x1539432a0 <col:11> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x153943230 <col:28> 'char[26]' lvalue Var 0x153928360 'time_buf' 'char[26]'     |-CallExpr 0x1539435d0 <line:23:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153943430 <col:2> 'int ()' Function 0x153943378 'fprintf' 'int ()'     | |-RecoveryExpr 0x153943548 <col:10> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x153943468 <col:14> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x153943488 <col:21> 'char[26]' lvalue Var 0x153928360 'time_buf' 'char[26]'     | `-CXXDependentScopeMemberExpr 0x153943588 <col:31, col:40> '<dependent type>' contains-errors lvalue .tv_usec     |   `-RecoveryExpr 0x153943568 <col:31> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1539437b0 <line:25:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x1539436f0 <col:2> 'int ()' Function 0x153943638 'dump_thread_data' 'int ()'       |-RecoveryExpr 0x153943770 <col:19> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x153943790 <col:27> '<dependent type>' contains-errors lvalue ","20055":"`-FunctionDecl 0x11e80e350  line:1:13 need_waiter 'void (struct ipmi_smi *)' static   |-ParmVarDecl 0x11e80e248 <col:25, col:42> col:42 intf 'struct ipmi_smi *'   `-CompoundStmt 0x11e826b80 <line:2:1, line:6:1>     `-IfStmt 0x11e826b60 <line:4:2, line:5:56>       |-UnaryOperator 0x11e826860 <line:4:6, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x11e826838 <col:7, col:32> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x11e826770 <col:7> 'int ()' Function 0x11e8266b8 'timer_pending' 'int ()'       |   `-UnaryOperator 0x11e826820 <col:21, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-RecoveryExpr 0x11e826800 <col:22> '<dependent type>' contains-errors lvalue       `-CallExpr 0x11e826b30 <line:5:3, col:56> '<dependent type>' contains-errors         |-DeclRefExpr 0x11e826958 <col:3> 'int ()' Function 0x11e8268a0 'mod_timer' 'int ()'         |-UnaryOperator 0x11e826ab8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow         | `-RecoveryExpr 0x11e826a98 <col:14> '<dependent type>' contains-errors lvalue         `-BinaryOperator 0x11e826b10 <col:26, col:36> '<dependent type>' contains-errors '+'           |-RecoveryExpr 0x11e826ad0 <col:26> '<dependent type>' contains-errors lvalue           `-RecoveryExpr 0x11e826af0 <col:36> '<dependent type>' contains-errors lvalue ","19797":"`-FunctionDecl 0x14b140a88  line:1:5 inet6_ioctl 'int (struct socket *, unsigned int, unsigned long)'   |-ParmVarDecl 0x14b128648 <col:17, col:32> col:32 used sock 'struct socket *'   |-ParmVarDecl 0x14b1286c8 <col:38, col:51> col:51 used cmd 'unsigned int'   |-ParmVarDecl 0x14b128748 <col:56, col:70> col:70 used arg 'unsigned long'   `-CompoundStmt 0x14b148380 <line:2:1, line:31:1>     |-DeclStmt 0x14b140dd8 <line:3:2, col:28>     | |-RecordDecl 0x14b140b90 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x14b140cf8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x14b140d98 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b140d60 <col:20> 'struct socket *' lvalue ParmVar 0x14b128648 'sock' 'struct socket *'     |-DeclStmt 0x14b1411e8 <line:4:2, col:32>     | |-RecordDecl 0x14b140df0 <col:2, col:9> col:9 struct net     | `-VarDecl 0x14b140f58 <col:2, col:31> col:14 used net 'struct net *' cinit     |   `-ImplicitCastExpr 0x14b1411b8 <col:20, col:31> 'struct net *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x14b141178 <col:20, col:31> 'int' contains-errors     |       |-ImplicitCastExpr 0x14b141160 <col:20> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b1410f0 <col:20> 'int ()' Function 0x14b141038 'sock_net' 'int ()'     |       `-ImplicitCastExpr 0x14b1411a0 <col:29> 'struct sock *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x14b141110 <col:29> 'struct sock *' contains-errors lvalue Var 0x14b140cf8 'sk' 'struct sock *'     |-SwitchStmt 0x14b141238 <line:6:2, line:28:2>     | |-ImplicitCastExpr 0x14b141220 <line:6:10> 'unsigned int' <LValueToRValue>     | | `-DeclRefExpr 0x14b141200 <col:10> 'unsigned int' lvalue ParmVar 0x14b1286c8 'cmd' 'unsigned int'     | `-CompoundStmt 0x14b148310 <col:15, line:28:2>     |   |-ReturnStmt 0x14b1419e0 <line:16:3, col:55>     |   | `-RecoveryExpr 0x14b1419a0 <col:10, col:55> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x14b141850 <col:10> 'int ()' Function 0x14b141798 'ipv6_route_ioctl' 'int ()'     |   |   |-DeclRefExpr 0x14b141870 <col:27> 'struct net *' contains-errors lvalue Var 0x14b140f58 'net' 'struct net *'     |   |   |-DeclRefExpr 0x14b141890 <col:32> 'unsigned int' lvalue ParmVar 0x14b1286c8 'cmd' 'unsigned int'     |   |   `-CStyleCastExpr 0x14b1418f8 <col:37, col:52> 'void' <ToVoid>     |   |     `-ImplicitCastExpr 0x14b1418e0 <col:52> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |   |       `-DeclRefExpr 0x14b1418b0 <col:52> 'unsigned long' lvalue ParmVar 0x14b128748 'arg' 'unsigned long'     |   |-ReturnStmt 0x14b147c40 <line:19:3, col:54>     |   | `-RecoveryExpr 0x14b147c08 <col:10, col:54> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x14b147af8 <col:10> 'int ()' Function 0x14b147a40 'addrconf_add_ifaddr' 'int ()'     |   |   |-DeclRefExpr 0x14b147b18 <col:30> 'struct net *' contains-errors lvalue Var 0x14b140f58 'net' 'struct net *'     |   |   `-CStyleCastExpr 0x14b147b80 <col:35, col:51> 'void' <ToVoid>     |   |     `-ImplicitCastExpr 0x14b147b68 <col:51> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |   |       `-DeclRefExpr 0x14b147b38 <col:51> 'unsigned long' lvalue ParmVar 0x14b128748 'arg' 'unsigned long'     |   |-ReturnStmt 0x14b147e78 <line:21:3, col:54>     |   | `-RecoveryExpr 0x14b147e40 <col:10, col:54> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x14b147d30 <col:10> 'int ()' Function 0x14b147c78 'addrconf_del_ifaddr' 'int ()'     |   |   |-DeclRefExpr 0x14b147d50 <col:30> 'struct net *' contains-errors lvalue Var 0x14b140f58 'net' 'struct net *'     |   |   `-CStyleCastExpr 0x14b147db8 <col:35, col:51> 'void' <ToVoid>     |   |     `-ImplicitCastExpr 0x14b147da0 <col:51> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |   |       `-DeclRefExpr 0x14b147d70 <col:51> 'unsigned long' lvalue ParmVar 0x14b128748 'arg' 'unsigned long'     |   |-ReturnStmt 0x14b1480b0 <line:23:3, col:55>     |   | `-RecoveryExpr 0x14b148078 <col:10, col:55> '<dependent type>' contains-errors lvalue     |   |   |-DeclRefExpr 0x14b147f68 <col:10> 'int ()' Function 0x14b147eb0 'addrconf_set_dstaddr' 'int ()'     |   |   |-DeclRefExpr 0x14b147f88 <col:31> 'struct net *' contains-errors lvalue Var 0x14b140f58 'net' 'struct net *'     |   |   `-CStyleCastExpr 0x14b147ff0 <col:36, col:52> 'void' <ToVoid>     |   |     `-ImplicitCastExpr 0x14b147fd8 <col:52> 'unsigned long' <LValueToRValue> part_of_explicit_cast     |   |       `-DeclRefExpr 0x14b147fa8 <col:52> 'unsigned long' lvalue ParmVar 0x14b128748 'arg' 'unsigned long'     |   |-DefaultStmt 0x14b1481a0 <line:24:2, col:9>     |   | `-NullStmt 0x14b148198 <col:9>     |   `-ReturnStmt 0x14b148300 <line:27:3, col:41>     |     `-CallExpr 0x14b1482c8 <col:10, col:41> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x14b148220 <col:10, col:23> '<dependent type>' contains-errors lvalue ->ioctl     |       | `-RecoveryExpr 0x14b1481f8 <col:10, col:14> '<dependent type>' contains-errors lvalue     |       |   `-DeclRefExpr 0x14b1481c0 <col:10> 'struct sock *' contains-errors lvalue Var 0x14b140cf8 'sk' 'struct sock *'     |       |-DeclRefExpr 0x14b148268 <col:29> 'struct sock *' contains-errors lvalue Var 0x14b140cf8 'sk' 'struct sock *'     |       |-DeclRefExpr 0x14b148288 <col:33> 'unsigned int' lvalue ParmVar 0x14b1286c8 'cmd' 'unsigned int'     |       `-DeclRefExpr 0x14b1482a8 <col:38> 'unsigned long' lvalue ParmVar 0x14b128748 'arg' 'unsigned long'     `-ReturnStmt 0x14b148370 <line:30:2, col:9>       `-IntegerLiteral 0x14b148350 <col:9> 'int' 0 ","19547":"`-FunctionDecl 0x143928930  col:9 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x143928a30 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x1439289d8 <<invalid sloc>> Implicit 903   `-FormatAttr 0x143928aa0 <col:9> Implicit printf 1 2 ","20036":"`-FunctionDecl 0x129944f38  col:2 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x129945038 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x129944fe0 <<invalid sloc>> Implicit 873 ","19583":"`-FunctionDecl 0x15a80e358  line:1:5 rdma_addr_size_kss 'int (struct __kernel_sockaddr_storage *)'   |-ParmVarDecl 0x15a80e248 <col:24, col:58> col:58 used addr 'struct __kernel_sockaddr_storage *'   `-CompoundStmt 0x15a826b48 <line:2:1, line:6:1>     `-DeclStmt 0x15a826a60 <line:3:2, col:52>       `-VarDecl 0x15a826668 <col:2, col:51> col:6 used ret 'int' cinit         `-CallExpr 0x15a826a38 <col:12, col:51> 'int'           |-ImplicitCastExpr 0x15a826a20 <col:12> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x15a826800 <col:12> 'int ()' Function 0x15a826748 'rdma_addr_size' 'int ()'           `-CStyleCastExpr 0x15a8269c0 <col:27, col:47> 'struct sockaddr *' <BitCast>             `-ImplicitCastExpr 0x15a8269a8 <col:47> 'struct __kernel_sockaddr_storage *' <LValueToRValue> part_of_explicit_cast               `-DeclRefExpr 0x15a8268c0 <col:47> 'struct __kernel_sockaddr_storage *' lvalue ParmVar 0x15a80e248 'addr' 'struct __kernel_sockaddr_storage *' ","19656":"`-FunctionDecl 0x12e942d50  col:9 implicit used realloc 'void *(void *, unsigned long)' extern   |-ParmVarDecl 0x12e942e50 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12e942eb8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-BuiltinAttr 0x12e942df8 <<invalid sloc>> Implicit 872   `-AllocSizeAttr 0x12e942f30 <col:9> Implicit 2 ","19263":"`-FunctionDecl 0x12e00dfa8  line:1:1 invalid find_var_in_ht 'int (int *, int, char *, int)'   |-ParmVarDecl 0x12e00dd28 <line:2:5, col:16> col:16 invalid ht 'int *'   |-ParmVarDecl 0x12e00dda8 <line:3:5, col:10> col:10 used htname 'int'   |-ParmVarDecl 0x12e00de28 <line:4:5, col:13> col:13 used varname 'char *'   |-ParmVarDecl 0x12e00dea8 <line:5:5, col:10> col:10 used no_autoload 'int'   `-CompoundStmt 0x12e029688 <line:6:1, line:45:1>     |-IfStmt 0x12e0283c0 <line:9:5, line:24:5>     | |-BinaryOperator 0x12e00e190 <line:9:9, col:21> 'int' contains-errors '=='     | | |-UnaryOperator 0x12e00e158 <col:9, col:10> 'char' lvalue prefix '*' cannot overflow     | | | `-ImplicitCastExpr 0x12e00e140 <col:10> 'char *' <LValueToRValue>     | | |   `-DeclRefExpr 0x12e00e088 <col:10> 'char *' lvalue ParmVar 0x12e00de28 'varname' 'char *'     | | `-RecoveryExpr 0x12e00e170 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12e0283a0 <line:10:5, line:24:5>     |   |-SwitchStmt 0x12e00e1e8 <line:12:2, line:22:2>     |   | |-ImplicitCastExpr 0x12e00e1d0 <line:12:10> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x12e00e1b0 <col:10> 'int' lvalue ParmVar 0x12e00dda8 'htname' 'int'     |   | `-CompoundStmt 0x12e028308 <line:13:2, line:22:2>     |   |   |-CaseStmt 0x12e00e240 <line:14:6, col:56>     |   |   | |-ConstantExpr 0x12e00e228 <col:11> 'int'     |   |   | | `-CharacterLiteral 0x12e00e210 <col:11> 'int' 115     |   |   | `-ReturnStmt 0x12e0279c0 <col:16, col:56>     |   |   |   `-UnaryOperator 0x12e0279a8 <col:23, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-CXXDependentScopeMemberExpr 0x12e027960 <col:24, col:56> '<dependent type>' contains-errors lvalue ->sv_var     |   |   |       `-CallExpr 0x12e027938 <col:24, col:53> '<dependent type>' contains-errors     |   |   |         |-DeclRefExpr 0x12e00e3c0 <col:24> 'int ()' Function 0x12e00e308 'SCRIPT_SV' 'int ()'     |   |   |         `-CXXDependentScopeMemberExpr 0x12e0278f0 <col:34, col:47> '<dependent type>' contains-errors lvalue .sc_sid     |   |   |           `-RecoveryExpr 0x12e0278d0 <col:34> '<dependent type>' contains-errors lvalue     |   |   |-CaseStmt 0x12e027a00 <line:15:6, col:24>     |   |   | |-ConstantExpr 0x12e0279e8 <col:11> 'int'     |   |   | | `-CharacterLiteral 0x12e0279d0 <col:11> 'int' 103     |   |   | `-ReturnStmt 0x12e027a90 <col:16, col:24>     |   |   |   `-UnaryOperator 0x12e027a78 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x12e027a58 <col:24> '<dependent type>' contains-errors lvalue     |   |   |-CaseStmt 0x12e027ad0 <line:16:6, col:24>     |   |   | |-ConstantExpr 0x12e027ab8 <col:11> 'int'     |   |   | | `-CharacterLiteral 0x12e027aa0 <col:11> 'int' 118     |   |   | `-ReturnStmt 0x12e027b60 <col:16, col:24>     |   |   |   `-UnaryOperator 0x12e027b48 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-RecoveryExpr 0x12e027b28 <col:24> '<dependent type>' contains-errors lvalue     |   |   |-CaseStmt 0x12e027ba0 <line:17:6, col:32>     |   |   | |-ConstantExpr 0x12e027b88 <col:11> 'int'     |   |   | | `-CharacterLiteral 0x12e027b70 <col:11> 'int' 98     |   |   | `-ReturnStmt 0x12e027cc0 <col:16, col:32>     |   |   |   `-UnaryOperator 0x12e027ca8 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-CXXDependentScopeMemberExpr 0x12e027c60 <col:24, col:32> '<dependent type>' contains-errors lvalue ->b_bufvar     |   |   |       `-RecoveryExpr 0x12e027c40 <col:24> '<dependent type>' contains-errors lvalue     |   |   |-CaseStmt 0x12e027d00 <line:18:6, col:32>     |   |   | |-ConstantExpr 0x12e027ce8 <col:11> 'int'     |   |   | | `-CharacterLiteral 0x12e027cd0 <col:11> 'int' 119     |   |   | `-ReturnStmt 0x12e027e20 <col:16, col:32>     |   |   |   `-UnaryOperator 0x12e027e08 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-CXXDependentScopeMemberExpr 0x12e027dc0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->w_winvar     |   |   |       `-RecoveryExpr 0x12e027da0 <col:24> '<dependent type>' contains-errors lvalue     |   |   |-CaseStmt 0x12e027e60 <line:19:6, col:32>     |   |   | |-ConstantExpr 0x12e027e48 <col:11> 'int'     |   |   | | `-CharacterLiteral 0x12e027e30 <col:11> 'int' 116     |   |   | `-ReturnStmt 0x12e027f80 <col:16, col:32>     |   |   |   `-UnaryOperator 0x12e027f68 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   |     `-CXXDependentScopeMemberExpr 0x12e027f20 <col:24, col:32> '<dependent type>' contains-errors lvalue ->tp_winvar     |   |   |       `-RecoveryExpr 0x12e027f00 <col:24> '<dependent type>' contains-errors lvalue     |   |   |-CaseStmt 0x12e027fc0 <line:20:6, col:45>     |   |   | |-ConstantExpr 0x12e027fa8 <col:11> 'int'     |   |   | | `-CharacterLiteral 0x12e027f90 <col:11> 'int' 108     |   |   | `-ReturnStmt 0x12e028158 <col:16, col:45>     |   |   |   `-CallExpr 0x12e028138 <col:23, col:45> 'int'     |   |   |     `-ImplicitCastExpr 0x12e028120 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   |   |       `-DeclRefExpr 0x12e0280c8 <col:23> 'int ()' Function 0x12e028010 'get_funccal_local_var' 'int ()'     |   |   `-CaseStmt 0x12e028198 <line:21:6, col:44>     |   |     |-ConstantExpr 0x12e028180 <col:11> 'int'     |   |     | `-CharacterLiteral 0x12e028168 <col:11> 'int' 97     |   |     `-ReturnStmt 0x12e0282f8 <col:16, col:44>     |   |       `-CallExpr 0x12e0282d8 <col:23, col:44> 'int'     |   |         `-ImplicitCastExpr 0x12e0282c0 <col:23> 'int (*)()' <FunctionToPointerDecay>     |   |           `-DeclRefExpr 0x12e0282a0 <col:23> 'int ()' Function 0x12e0281e8 'get_funccal_args_var' 'int ()'     |   `-ReturnStmt 0x12e028390 <line:23:2, col:9>     |     `-RecoveryExpr 0x12e028370 <col:9> '<dependent type>' contains-errors lvalue     `-IfStmt 0x12e029568 <line:27:5, line:43:5>       |-CallExpr 0x12e0286b0 <line:27:9, col:26> '<dependent type>' contains-errors       | |-DeclRefExpr 0x12e028630 <col:9> 'int ()' Function 0x12e028578 'HASHITEM_EMPTY' 'int ()'       | `-RecoveryExpr 0x12e028690 <col:24> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12e029550 <line:28:5, line:43:5>         `-IfStmt 0x12e0294f0 <line:33:2, line:40:2>           |-RecoveryExpr 0x12e028748 <line:33:6, col:27> '_Bool' contains-errors           `-CompoundStmt 0x12e0294e0 <line:34:2, line:40:2> ","19684":"`-FunctionDecl 0x14e80de38  line:1:12 convert_case_filter 'int (int, void *)' static   |-ParmVarDecl 0x14e80dcd8 <col:32, col:36> col:36 used c 'int'   |-ParmVarDecl 0x14e80dd58 <col:39, col:45> col:45 used void_data 'void *'   `-CompoundStmt 0x14e82b3a8 <line:2:1, line:71:1>     |-DeclStmt 0x14e80e210 <line:3:2, col:73>     | |-RecordDecl 0x14e80df38 <col:2, col:9> col:9 struct convert_case_data     | `-VarDecl 0x14e80e0a8 <col:2, col:64> col:28 used data 'struct convert_case_data *' cinit     |   `-CStyleCastExpr 0x14e80e1d0 <col:35, col:64> 'struct convert_case_data *' <BitCast>     |     `-ImplicitCastExpr 0x14e80e1b8 <col:64> 'void *' <LValueToRValue> part_of_explicit_cast     |       `-DeclRefExpr 0x14e80e110 <col:64> 'void *' lvalue ParmVar 0x14e80dd58 'void_data' 'void *'     |-DeclStmt 0x14e80e340 <line:4:2, col:17>     | `-VarDecl 0x14e80e2d8 <col:2, col:16> col:11 used out 'unsigned int[3]'     |-DeclStmt 0x14e827680 <line:5:2, col:17>     | |-VarDecl 0x14e80e370 <col:2, col:11> col:11 used len 'unsigned int'     | `-VarDecl 0x14e827600 <col:2, col:16> col:16 used i 'unsigned int'     |-IfStmt 0x14e827ef0 <line:8:2, line:11:2>     | |-CallExpr 0x14e8278a8 <line:8:6, col:29> 'int'     | | |-ImplicitCastExpr 0x14e827890 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14e8277c0 <col:6> 'int ()' Function 0x14e827708 'UNEXPECTED' 'int ()'     | | `-BinaryOperator 0x14e827838 <col:17, col:21> 'int' '>'     | |   |-ImplicitCastExpr 0x14e827820 <col:17> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x14e8277e0 <col:17> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     | |   `-IntegerLiteral 0x14e827800 <col:21> 'int' 16777215     | `-CompoundStmt 0x14e827ed0 <col:32, line:11:2>     |   |-CallExpr 0x14e827e70 <line:9:3, col:61> '<dependent type>' contains-errors     |   | |-ParenExpr 0x14e827dd0 <col:3, col:39> '<dependent type>' contains-errors     |   | | `-UnaryOperator 0x14e827db8 <col:4, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | |   `-ImplicitCastExpr 0x14e827da0 <col:5, col:24> '<dependent type>' contains-errors <LValueToRValue>     |   | |     `-CXXDependentScopeMemberExpr 0x14e827d58 <col:5, col:24> '<dependent type>' contains-errors lvalue ->filter_function     |   | |       `-RecoveryExpr 0x14e827d30 <col:5, col:11> '<dependent type>' contains-errors lvalue     |   | |         `-DeclRefExpr 0x14e8278d0 <col:5> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   | |-DeclRefExpr 0x14e827df0 <col:41> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   | `-RecoveryExpr 0x14e827e48 <col:44, col:50> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14e827e10 <col:44> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   `-ReturnStmt 0x14e827ec0 <line:10:3, col:10>     |     `-IntegerLiteral 0x14e827ea0 <col:10> 'int' 0     |-SwitchStmt 0x14e827f88 <line:13:2, line:65:2>     | |-ImplicitCastExpr 0x14e827f70 <line:13:10, col:16> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x14e827f48 <col:10, col:16> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14e827f10 <col:10> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     | `-CompoundStmt 0x14e82af38 <col:27, line:65:2>     |   |-BinaryOperator 0x14e828228 <line:15:4, col:60> 'unsigned int' contains-errors '='     |   | |-ArraySubscriptExpr 0x14e828058 <col:4, col:9> 'unsigned int' lvalue     |   | | |-ImplicitCastExpr 0x14e828040 <col:4> 'unsigned int *' <ArrayToPointerDecay>     |   | | | `-DeclRefExpr 0x14e827fc8 <col:4> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   | | `-IntegerLiteral 0x14e827fe8 <col:8> 'int' 0     |   | `-CallExpr 0x14e8281f8 <col:13, col:60> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e828158 <col:13> 'int ()' Function 0x14e8280a0 'php_unicode_toupper_simple' 'int ()'     |   |   |-DeclRefExpr 0x14e828178 <col:40> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   |   `-RecoveryExpr 0x14e8281d0 <col:43, col:49> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14e828198 <col:43> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   |-BinaryOperator 0x14e8282a0 <line:16:4, col:10> 'unsigned int' '='     |   | |-DeclRefExpr 0x14e828248 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | `-ImplicitCastExpr 0x14e828288 <col:10> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x14e828268 <col:10> 'int' 1     |   |-BreakStmt 0x14e8282c0 <line:17:4>     |   |-BinaryOperator 0x14e8284d8 <line:20:4, col:60> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x14e8282e0 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | `-CallExpr 0x14e8284a0 <col:10, col:60> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e8283e0 <col:10> 'int ()' Function 0x14e828328 'php_unicode_toupper_full' 'int ()'     |   |   |-DeclRefExpr 0x14e828400 <col:35> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   |   |-RecoveryExpr 0x14e828458 <col:38, col:44> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14e828420 <col:38> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   |   `-DeclRefExpr 0x14e828480 <col:57> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   |-BreakStmt 0x14e8284f8 <line:21:4>     |   |-BinaryOperator 0x14e122f88 <line:24:4, col:60> 'unsigned int' contains-errors '='     |   | |-ArraySubscriptExpr 0x14e828570 <col:4, col:9> 'unsigned int' lvalue     |   | | |-ImplicitCastExpr 0x14e828558 <col:4> 'unsigned int *' <ArrayToPointerDecay>     |   | | | `-DeclRefExpr 0x14e828518 <col:4> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   | | `-IntegerLiteral 0x14e828538 <col:8> 'int' 0     |   | `-CallExpr 0x14e122f58 <col:13, col:60> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e122eb8 <col:13> 'int ()' Function 0x14e122e00 'php_unicode_tolower_simple' 'int ()'     |   |   |-DeclRefExpr 0x14e122ed8 <col:40> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   |   `-RecoveryExpr 0x14e122f30 <col:43, col:49> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14e122ef8 <col:43> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   |-BinaryOperator 0x14e123000 <line:25:4, col:10> 'unsigned int' '='     |   | |-DeclRefExpr 0x14e122fa8 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | `-ImplicitCastExpr 0x14e122fe8 <col:10> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x14e122fc8 <col:10> 'int' 1     |   |-BreakStmt 0x14e123020 <line:26:4>     |   |-BinaryOperator 0x14e123238 <line:29:4, col:60> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x14e123040 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | `-CallExpr 0x14e123200 <col:10, col:60> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e123140 <col:10> 'int ()' Function 0x14e123088 'php_unicode_tolower_full' 'int ()'     |   |   |-DeclRefExpr 0x14e123160 <col:35> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   |   |-RecoveryExpr 0x14e1231b8 <col:38, col:44> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14e123180 <col:38> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   |   `-DeclRefExpr 0x14e1231e0 <col:57> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   |-BreakStmt 0x14e123258 <line:30:4>     |   |-BinaryOperator 0x14e123470 <line:33:4, col:59> 'unsigned int' contains-errors '='     |   | |-DeclRefExpr 0x14e123278 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | `-CallExpr 0x14e123438 <col:10, col:59> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e123378 <col:10> 'int ()' Function 0x14e1232c0 'php_unicode_tofold_full' 'int ()'     |   |   |-DeclRefExpr 0x14e123398 <col:34> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   |   |-RecoveryExpr 0x14e1233f0 <col:37, col:43> '<dependent type>' contains-errors lvalue     |   |   | `-DeclRefExpr 0x14e1233b8 <col:37> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   |   `-DeclRefExpr 0x14e123418 <col:56> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   |-BreakStmt 0x14e123490 <line:34:4>     |   |-BinaryOperator 0x14e1236d8 <line:37:4, col:59> 'unsigned int' contains-errors '='     |   | |-ArraySubscriptExpr 0x14e123508 <col:4, col:9> 'unsigned int' lvalue     |   | | |-ImplicitCastExpr 0x14e1234f0 <col:4> 'unsigned int *' <ArrayToPointerDecay>     |   | | | `-DeclRefExpr 0x14e1234b0 <col:4> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   | | `-IntegerLiteral 0x14e1234d0 <col:8> 'int' 0     |   | `-CallExpr 0x14e1236a8 <col:13, col:59> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14e123608 <col:13> 'int ()' Function 0x14e123550 'php_unicode_tofold_simple' 'int ()'     |   |   |-DeclRefExpr 0x14e123628 <col:39> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   |   `-RecoveryExpr 0x14e123680 <col:42, col:48> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14e123648 <col:42> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   |-BinaryOperator 0x14e123750 <line:38:4, col:10> 'unsigned int' '='     |   | |-DeclRefExpr 0x14e1236f8 <col:4> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | `-ImplicitCastExpr 0x14e123738 <col:10> 'unsigned int' <IntegralCast>     |   |   `-IntegerLiteral 0x14e123718 <col:10> 'int' 1     |   |-BreakStmt 0x14e123770 <line:39:4>     |   |-CompoundStmt 0x14e82add8 <line:43:3, line:63:3>     |   | |-IfStmt 0x14e82a9e0 <line:44:4, line:58:4> has_else     |   | | |-RecoveryExpr 0x14e1237b0 <line:44:8, col:14> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x14e123778 <col:8> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   | | |-CompoundStmt 0x14e123bd8 <col:26, line:51:4>     |   | | | `-IfStmt 0x14e123ba8 <line:45:5, line:50:5> has_else     |   | | |   |-RecoveryExpr 0x14e123838 <line:45:9, col:28> '_Bool' contains-errors     |   | | |   |-CompoundStmt 0x14e123a38 <col:59, line:48:5>     |   | | |   | |-BinaryOperator 0x14e1239a0 <line:46:6, col:62> 'unsigned int' contains-errors '='     |   | | |   | | |-ArraySubscriptExpr 0x14e1238b0 <col:6, col:11> 'unsigned int' lvalue     |   | | |   | | | |-ImplicitCastExpr 0x14e123898 <col:6> 'unsigned int *' <ArrayToPointerDecay>     |   | | |   | | | | `-DeclRefExpr 0x14e123858 <col:6> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   | | |   | | | `-IntegerLiteral 0x14e123878 <col:10> 'int' 0     |   | | |   | | `-CallExpr 0x14e123970 <col:15, col:62> '<dependent type>' contains-errors     |   | | |   | |   |-DeclRefExpr 0x14e1238d0 <col:15> 'int ()' Function 0x14e122e00 'php_unicode_tolower_simple' 'int ()'     |   | | |   | |   |-DeclRefExpr 0x14e1238f0 <col:42> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   | | |   | |   `-RecoveryExpr 0x14e123948 <col:45, col:51> '<dependent type>' contains-errors lvalue     |   | | |   | |     `-DeclRefExpr 0x14e123910 <col:45> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   | | |   | `-BinaryOperator 0x14e123a18 <line:47:6, col:12> 'unsigned int' '='     |   | | |   |   |-DeclRefExpr 0x14e1239c0 <col:6> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | | |   |   `-ImplicitCastExpr 0x14e123a00 <col:12> 'unsigned int' <IntegralCast>     |   | | |   |     `-IntegerLiteral 0x14e1239e0 <col:12> 'int' 1     |   | | |   `-CompoundStmt 0x14e123b90 <line:48:12, line:50:5>     |   | | |     `-BinaryOperator 0x14e123b70 <line:49:6, col:62> 'unsigned int' contains-errors '='     |   | | |       |-DeclRefExpr 0x14e123a58 <col:6> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | | |       `-CallExpr 0x14e123b38 <col:12, col:62> '<dependent type>' contains-errors     |   | | |         |-DeclRefExpr 0x14e123a78 <col:12> 'int ()' Function 0x14e123088 'php_unicode_tolower_full' 'int ()'     |   | | |         |-DeclRefExpr 0x14e123a98 <col:37> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   | | |         |-RecoveryExpr 0x14e123af0 <col:40, col:46> '<dependent type>' contains-errors lvalue     |   | | |         | `-DeclRefExpr 0x14e123ab8 <col:40> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   | | |         `-DeclRefExpr 0x14e123b18 <col:59> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   | | `-CompoundStmt 0x14e82a9c8 <line:51:11, line:58:4>     |   | |   `-IfStmt 0x14e82a998 <line:52:5, line:57:5> has_else     |   | |     |-RecoveryExpr 0x14e123c50 <line:52:9, col:28> '_Bool' contains-errors     |   | |     |-CompoundStmt 0x14e82a748 <col:59, line:55:5>     |   | |     | |-BinaryOperator 0x14e82a6b0 <line:53:6, col:62> 'unsigned int' contains-errors '='     |   | |     | | |-ArraySubscriptExpr 0x14e123cc8 <col:6, col:11> 'unsigned int' lvalue     |   | |     | | | |-ImplicitCastExpr 0x14e123cb0 <col:6> 'unsigned int *' <ArrayToPointerDecay>     |   | |     | | | | `-DeclRefExpr 0x14e123c70 <col:6> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   | |     | | | `-IntegerLiteral 0x14e123c90 <col:10> 'int' 0     |   | |     | | `-CallExpr 0x14e82a680 <col:15, col:62> '<dependent type>' contains-errors     |   | |     | |   |-DeclRefExpr 0x14e123dc8 <col:15> 'int ()' Function 0x14e123d10 'php_unicode_totitle_simple' 'int ()'     |   | |     | |   |-DeclRefExpr 0x14e82a600 <col:42> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   | |     | |   `-RecoveryExpr 0x14e82a658 <col:45, col:51> '<dependent type>' contains-errors lvalue     |   | |     | |     `-DeclRefExpr 0x14e82a620 <col:45> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   | |     | `-BinaryOperator 0x14e82a728 <line:54:6, col:12> 'unsigned int' '='     |   | |     |   |-DeclRefExpr 0x14e82a6d0 <col:6> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | |     |   `-ImplicitCastExpr 0x14e82a710 <col:12> 'unsigned int' <IntegralCast>     |   | |     |     `-IntegerLiteral 0x14e82a6f0 <col:12> 'int' 1     |   | |     `-CompoundStmt 0x14e82a980 <line:55:12, line:57:5>     |   | |       `-BinaryOperator 0x14e82a960 <line:56:6, col:62> 'unsigned int' contains-errors '='     |   | |         |-DeclRefExpr 0x14e82a768 <col:6> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     |   | |         `-CallExpr 0x14e82a928 <col:12, col:62> '<dependent type>' contains-errors     |   | |           |-DeclRefExpr 0x14e82a868 <col:12> 'int ()' Function 0x14e82a7b0 'php_unicode_totitle_full' 'int ()'     |   | |           |-DeclRefExpr 0x14e82a888 <col:37> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   | |           |-RecoveryExpr 0x14e82a8e0 <col:40, col:46> '<dependent type>' contains-errors lvalue     |   | |           | `-DeclRefExpr 0x14e82a8a8 <col:40> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   | |           `-DeclRefExpr 0x14e82a908 <col:59> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |   | |-IfStmt 0x14e82adb0 <line:59:4, line:61:4>     |   | | |-UnaryOperator 0x14e82ab88 <line:59:8, col:40> 'int' prefix '!' cannot overflow     |   | | | `-CallExpr 0x14e82ab48 <col:9, col:40> 'int'     |   | | |   |-ImplicitCastExpr 0x14e82ab30 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | |   | `-DeclRefExpr 0x14e82aaf0 <col:9> 'int ()' Function 0x14e82aa38 'php_unicode_is_case_ignorable' 'int ()'     |   | | |   `-ImplicitCastExpr 0x14e82ab70 <col:39> 'int' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x14e82ab10 <col:39> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   | | `-CompoundStmt 0x14e82ad98 <col:43, line:61:4>     |   | |   `-BinaryOperator 0x14e82ad78 <line:60:5, col:46> '<dependent type>' contains-errors '='     |   | |     |-RecoveryExpr 0x14e82abd8 <col:5, col:11> '<dependent type>' contains-errors lvalue     |   | |     | `-DeclRefExpr 0x14e82aba0 <col:5> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |   | |     `-CallExpr 0x14e82ad38 <col:24, col:46> 'int'     |   | |       |-ImplicitCastExpr 0x14e82ad20 <col:24> 'int (*)()' <FunctionToPointerDecay>     |   | |       | `-DeclRefExpr 0x14e82ace0 <col:24> 'int ()' Function 0x14e82ac28 'php_unicode_is_cased' 'int ()'     |   | |       `-ImplicitCastExpr 0x14e82ad60 <col:45> 'int' <LValueToRValue>     |   | |         `-DeclRefExpr 0x14e82ad00 <col:45> 'int' lvalue ParmVar 0x14e80dcd8 'c' 'int'     |   | `-BreakStmt 0x14e82add0 <line:62:4>     |   `-CallExpr 0x14e82af18 <line:64:3, col:29> 'int'     |     `-ImplicitCastExpr 0x14e82af00 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x14e82aee0 <col:3> 'int ()' Function 0x14e82ae28 'EMPTY_SWITCH_DEFAULT_CASE' 'int ()'     |-ForStmt 0x14e82b340 <line:67:2, line:69:2>     | |-BinaryOperator 0x14e82b028 <line:67:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x14e82afd0 <col:7> 'unsigned int' lvalue Var 0x14e827600 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x14e82b010 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x14e82aff0 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14e82b0b8 <col:14, col:18> 'int' '<'     | | |-ImplicitCastExpr 0x14e82b088 <col:14> 'unsigned int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e82b048 <col:14> 'unsigned int' lvalue Var 0x14e827600 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x14e82b0a0 <col:18> 'unsigned int' <LValueToRValue>     | |   `-DeclRefExpr 0x14e82b068 <col:18> 'unsigned int' lvalue Var 0x14e80e370 'len' 'unsigned int'     | |-UnaryOperator 0x14e82b0f8 <col:23, col:24> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x14e82b0d8 <col:23> 'unsigned int' lvalue Var 0x14e827600 'i' 'unsigned int'     | `-CompoundStmt 0x14e82b328 <col:28, line:69:2>     |   `-CallExpr 0x14e82b2f8 <line:68:3, col:66> '<dependent type>' contains-errors     |     |-ParenExpr 0x14e82b1e8 <col:3, col:39> '<dependent type>' contains-errors     |     | `-UnaryOperator 0x14e82b1d0 <col:4, col:24> '<dependent type>' contains-errors prefix '*' cannot overflow     |     |   `-ImplicitCastExpr 0x14e82b1b8 <col:5, col:24> '<dependent type>' contains-errors <LValueToRValue>     |     |     `-CXXDependentScopeMemberExpr 0x14e82b170 <col:5, col:24> '<dependent type>' contains-errors lvalue ->filter_function     |     |       `-RecoveryExpr 0x14e82b148 <col:5, col:11> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x14e82b110 <col:5> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     |     |-ArraySubscriptExpr 0x14e82b278 <col:41, col:46> 'unsigned int' lvalue     |     | |-ImplicitCastExpr 0x14e82b248 <col:41> 'unsigned int *' <ArrayToPointerDecay>     |     | | `-DeclRefExpr 0x14e82b208 <col:41> 'unsigned int[3]' lvalue Var 0x14e80e2d8 'out' 'unsigned int[3]'     |     | `-ImplicitCastExpr 0x14e82b260 <col:45> 'unsigned int' <LValueToRValue>     |     |   `-DeclRefExpr 0x14e82b228 <col:45> 'unsigned int' lvalue Var 0x14e827600 'i' 'unsigned int'     |     `-RecoveryExpr 0x14e82b2d0 <col:49, col:55> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14e82b298 <col:49> 'struct convert_case_data *' lvalue Var 0x14e80e0a8 'data' 'struct convert_case_data *'     `-ReturnStmt 0x14e82b398 <line:70:2, col:9>       `-IntegerLiteral 0x14e82b378 <col:9> 'int' 0 ","19514":"`-FunctionDecl 0x10380e358  line:1:12 ax25_release 'int (struct socket *)' static   |-ParmVarDecl 0x10380e248 <col:25, col:40> col:40 used sock 'struct socket *'   `-CompoundStmt 0x128124aa8 <line:2:1, line:86:1>     |-DeclStmt 0x103826898 <line:3:2, col:28>     | |-RecordDecl 0x103826650 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x1038267b8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x103826858 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x103826820 <col:20> 'struct socket *' lvalue ParmVar 0x10380e248 'sock' 'struct socket *'     |-IfStmt 0x1038269c0 <line:7:2, line:8:10>     | |-BinaryOperator 0x103826970 <line:7:6, col:12> 'int' contains-errors '=='     | | |-DeclRefExpr 0x1038268f8 <col:6> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     | | `-RecoveryExpr 0x103826950 <col:12> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1038269b0 <line:8:3, col:10>     |   `-IntegerLiteral 0x103826990 <col:10> 'int' 0     |-CallExpr 0x103826b78 <line:10:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x103826b60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x103826af0 <col:2> 'int ()' Function 0x103826a38 'sock_hold' 'int ()'     | `-ImplicitCastExpr 0x103826ba0 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x103826b10 <col:12> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     |-CallExpr 0x103826cf0 <line:11:2, col:14> 'int' contains-errors     | |-ImplicitCastExpr 0x103826cd8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x103826c98 <col:2> 'int ()' Function 0x103826be0 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x103826d18 <col:12> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x103826cb8 <col:12> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     |-CallExpr 0x103826e68 <line:12:2, col:16> 'int' contains-errors     | |-ImplicitCastExpr 0x103826e50 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x103826e10 <col:2> 'int ()' Function 0x103826d58 'sock_orphan' 'int ()'     | `-ImplicitCastExpr 0x103826e90 <col:14> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x103826e30 <col:14> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     |-IfStmt 0x103827580 <line:15:2, line:18:2>     | |-RecoveryExpr 0x103827098 <line:15:6> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x103827560 <col:16, line:18:2>     |   |-CallExpr 0x1038273a8 <line:16:3, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x103827198 <col:3> 'int ()' Function 0x1038270e0 'dev_put_track' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x1038272e0 <col:17, col:27> '<dependent type>' contains-errors lvalue ->dev     |   | | `-RecoveryExpr 0x1038272c0 <col:17> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x103827390 <col:32, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-CXXDependentScopeMemberExpr 0x103827348 <col:33, col:43> '<dependent type>' contains-errors lvalue ->dev_tracker     |   |     `-RecoveryExpr 0x103827328 <col:33> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x103827538 <line:17:3, col:24> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1038274b8 <col:3> 'int ()' Function 0x103827400 'ax25_dev_put' 'int ()'     |     `-RecoveryExpr 0x103827518 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1281247d8 <line:20:2, line:79:2> has_else     | |-RecoveryExpr 0x128123400 <line:20:6, col:21> '_Bool' contains-errors     | |-CompoundStmt 0x128124620 <col:37, line:74:2>     | | `-SwitchStmt 0x128123440 <line:21:3, line:73:3>     | |   |-RecoveryExpr 0x128123420 <line:21:11, col:17> 'int' contains-errors     | |   `-CompoundStmt 0x1281245c0 <col:24, line:73:3>     | |     |-CallExpr 0x1281235a0 <line:23:4, col:19> 'int' contains-errors     | |     | |-ImplicitCastExpr 0x128123588 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x128123548 <col:4> 'int ()' Function 0x128123490 'release_sock' 'int ()'     | |     | `-ImplicitCastExpr 0x1281235c8 <col:17> 'struct sock *' contains-errors <LValueToRValue>     | |     |   `-DeclRefExpr 0x128123568 <col:17> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     | |     |-CallExpr 0x128123758 <line:25:4, col:16> 'int' contains-errors     | |     | |-ImplicitCastExpr 0x128123740 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x128123700 <col:4> 'int ()' Function 0x103826be0 'lock_sock' 'int ()'     | |     | `-ImplicitCastExpr 0x128123780 <col:14> 'struct sock *' contains-errors <LValueToRValue>     | |     |   `-DeclRefExpr 0x128123720 <col:14> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     | |     |-BreakStmt 0x128123898 <line:27:4>     | |     |-CallExpr 0x1281239f8 <line:32:4, col:19> 'int' contains-errors     | |     | |-ImplicitCastExpr 0x1281239e0 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x1281239a0 <col:4> 'int ()' Function 0x128123490 'release_sock' 'int ()'     | |     | `-ImplicitCastExpr 0x128123a20 <col:17> 'struct sock *' contains-errors <LValueToRValue>     | |     |   `-DeclRefExpr 0x1281239c0 <col:17> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     | |     |-CallExpr 0x128123ad0 <line:34:4, col:16> 'int' contains-errors     | |     | |-ImplicitCastExpr 0x128123ab8 <col:4> 'int (*)()' <FunctionToPointerDecay>     | |     | | `-DeclRefExpr 0x128123a78 <col:4> 'int ()' Function 0x103826be0 'lock_sock' 'int ()'     | |     | `-ImplicitCastExpr 0x128123af8 <col:14> 'struct sock *' contains-errors <LValueToRValue>     | |     |   `-DeclRefExpr 0x128123a98 <col:14> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     | |     |-BreakStmt 0x128123c50 <line:37:4>     | |     |-SwitchStmt 0x128123d98 <line:44:4, line:61:4>     | |     | |-RecoveryExpr 0x128123d78 <line:44:12, col:55> 'int' contains-errors     | |     | `-CompoundStmt 0x1281240e8 <col:58, line:61:4>     | |     |   `-BreakStmt 0x1281240e0 <line:54:5>     | |     |-CallExpr 0x128124448 <line:67:4, col:26> '<dependent type>' contains-errors     | |     | |-RecoveryExpr 0x128124400 <col:4, col:8> '<dependent type>' contains-errors lvalue     | |     | | `-DeclRefExpr 0x1281243c0 <col:4> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     | |     | `-DeclRefExpr 0x128124428 <col:24> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     | |     |-BreakStmt 0x128124590 <line:69:4>     | |     `-DefaultStmt 0x1281245a0 <line:71:3, line:72:4>     | |       `-BreakStmt 0x128124598 <col:4>     | `-CompoundStmt 0x1281247c0 <line:74:9, line:79:2>     |   `-CallExpr 0x128124778 <line:77:3, col:25> '<dependent type>' contains-errors     |     |-RecoveryExpr 0x128124730 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1281246f8 <col:3> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     |     `-DeclRefExpr 0x128124758 <col:23> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     |-CallExpr 0x1281248c0 <line:82:2, col:17> 'int' contains-errors     | |-ImplicitCastExpr 0x1281248a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x128124868 <col:2> 'int ()' Function 0x128123490 'release_sock' 'int ()'     | `-ImplicitCastExpr 0x1281248e8 <col:15> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x128124888 <col:15> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     |-CallExpr 0x128124a38 <line:83:2, col:13> 'int' contains-errors     | |-ImplicitCastExpr 0x128124a20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1281249e0 <col:2> 'int ()' Function 0x128124928 'sock_put' 'int ()'     | `-ImplicitCastExpr 0x128124a60 <col:11> 'struct sock *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x128124a00 <col:11> 'struct sock *' contains-errors lvalue Var 0x1038267b8 'sk' 'struct sock *'     `-ReturnStmt 0x128124a98 <line:85:2, col:9>       `-IntegerLiteral 0x128124a78 <col:9> 'int' 0 ","19582":"`-FunctionDecl 0x154922350  col:20 io_bitmap_share 'void (struct task_struct *)' static inline   |-ParmVarDecl 0x154922248 <col:36, col:56> col:56 tsk 'struct task_struct *'   `-CompoundStmt 0x15493a648 <col:61, col:63> ","20032":"`-FunctionDecl 0x13800e350  line:1:13 bio_put_slab 'void (struct bio_set *)' static   |-ParmVarDecl 0x13800e248 <col:26, col:42> col:42 used bs 'struct bio_set *'   `-CompoundStmt 0x12e80f0c0 <line:2:1, line:28:1>     |-DeclStmt 0x138026888 <line:3:2, col:31>     | |-RecordDecl 0x138026648 <col:2, col:9> col:9 struct bio_slab     | `-VarDecl 0x1380267b8 <col:2, col:27> col:19 used bslab 'struct bio_slab *' cinit     |   `-RecoveryExpr 0x138026850 <col:27> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x138026920 <line:4:2, col:16>     | `-VarDecl 0x1380268b8 <col:2, col:15> col:15 used i 'unsigned int'     |-CallExpr 0x138026b00 <line:6:2, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138026a50 <col:2> 'int ()' Function 0x138026998 'mutex_lock' 'int ()'     | `-UnaryOperator 0x138026ae8 <col:13, col:14> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x138026ac8 <col:14> '<dependent type>' contains-errors lvalue     |-ForStmt 0x138026dd8 <line:8:2, line:13:2>     | |-BinaryOperator 0x138026b80 <line:8:7, col:11> 'unsigned int' '='     | | |-DeclRefExpr 0x138026b28 <col:7> 'unsigned int' lvalue Var 0x1380268b8 'i' 'unsigned int'     | | `-ImplicitCastExpr 0x138026b68 <col:11> 'unsigned int' <IntegralCast>     | |   `-IntegerLiteral 0x138026b48 <col:11> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x138026c18 <col:14, col:18> 'int' contains-errors '<'     | | |-DeclRefExpr 0x138026ba0 <col:14> 'unsigned int' lvalue Var 0x1380268b8 'i' 'unsigned int'     | | `-RecoveryExpr 0x138026bf8 <col:18> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x138026c58 <col:31, col:32> 'unsigned int' postfix '++'     | | `-DeclRefExpr 0x138026c38 <col:31> 'unsigned int' lvalue Var 0x1380268b8 'i' 'unsigned int'     | `-CompoundStmt 0x138026dc0 <col:36, line:13:2>     |   `-IfStmt 0x138026da0 <line:9:3, line:12:3>     |     |-RecoveryExpr 0x138026d08 <line:9:7, col:36> '_Bool' contains-errors     |     `-CompoundStmt 0x138026d88 <col:42, line:12:3>     |       `-BreakStmt 0x138026d80 <line:11:4>     |-IfStmt 0x138027000 <line:15:2, line:16:8>     | |-RecoveryExpr 0x138026f78 <line:15:6, col:33> '_Bool' contains-errors     | `-GotoStmt 0x138026fe8 <line:16:3, col:8> 'out' 0x138026f98     |-CallExpr 0x1380271b0 <line:18:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138027100 <col:2> 'int ()' Function 0x138027048 'WARN_ON' 'int ()'     | `-UnaryOperator 0x138027198 <col:10, col:18> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-ImplicitCastExpr 0x138027180 <col:11, col:18> '<dependent type>' contains-errors <LValueToRValue>     |     `-RecoveryExpr 0x138027158 <col:11, col:18> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x138027120 <col:11> 'struct bio_slab *' contains-errors lvalue Var 0x1380267b8 'bslab' 'struct bio_slab *'     |-IfStmt 0x138027268 <line:20:2, line:21:8>     | |-UnaryOperator 0x138027238 <line:20:6, col:15> '<dependent type>' contains-errors prefix '--' cannot overflow     | | `-RecoveryExpr 0x138027210 <col:8, col:15> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1380271d8 <col:8> 'struct bio_slab *' contains-errors lvalue Var 0x1380267b8 'bslab' 'struct bio_slab *'     | `-GotoStmt 0x138027250 <line:21:3, col:8> 'out' 0x138026f98     |-CallExpr 0x1380273e8 <line:23:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138027368 <col:2> 'int ()' Function 0x1380272b0 'kmem_cache_destroy' 'int ()'     | `-RecoveryExpr 0x1380273c0 <col:21, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x138027388 <col:21> 'struct bio_slab *' contains-errors lvalue Var 0x1380267b8 'bslab' 'struct bio_slab *'     |-BinaryOperator 0x1380274c8 <line:24:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x138027448 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x138027410 <col:2> 'struct bio_slab *' contains-errors lvalue Var 0x1380267b8 'bslab' 'struct bio_slab *'     | `-RecoveryExpr 0x1380274a8 <col:16> '<dependent type>' contains-errors lvalue     `-LabelStmt 0x12e80f0a0 <line:26:1, line:27:29> 'out'       `-CallExpr 0x12e80f078 <col:2, col:29> '<dependent type>' contains-errors         |-DeclRefExpr 0x1380275c8 <col:2> 'int ()' Function 0x138027510 'mutex_unlock' 'int ()'         `-UnaryOperator 0x12e80f060 <col:15, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow           `-RecoveryExpr 0x12e80f040 <col:16> '<dependent type>' contains-errors lvalue ","19425":"`-FunctionDecl 0x13902c368  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x13902c468 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13902c4d0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x13902c538 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13902c410 <<invalid sloc>> Implicit 882 ","20028":"`-FunctionDecl 0x13d928238  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x13d928158 <col:12> col:12 used SplObjectStorage 'int'   |-ParmVarDecl 0x13d9280d8 <col:30> col:30 current 'int'   `-CompoundStmt 0x13d940e48 <line:2:1, line:14:1>     |-IfStmt 0x13d9286a8 <line:6:2, line:8:2>     | |-BinaryOperator 0x13d928660 <line:6:6, col:38> 'int' contains-errors '=='     | | |-CallExpr 0x13d928620 <col:6, col:33> 'int'     | | | `-ImplicitCastExpr 0x13d928608 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | |   `-DeclRefExpr 0x13d928510 <col:6> 'int ()' Function 0x13d928458 'zend_parse_parameters_none' 'int ()'     | | `-RecoveryExpr 0x13d928640 <col:38> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d928690 <col:47, line:8:2>     |   `-ReturnStmt 0x13d928680 <line:7:3>     |-IfStmt 0x13d940bb0 <line:10:2, line:12:2>     | |-RecoveryExpr 0x13d940b68 <line:10:6, col:89> '_Bool' contains-errors     | `-CompoundStmt 0x13d940b98 <col:98, line:12:2>     |   `-ReturnStmt 0x13d940b88 <line:11:3>     `-CallExpr 0x13d940e10 <line:13:2, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x13d940cb0 <col:2> 'int ()' Function 0x13d940bf8 'RETVAL_ZVAL' 'int ()'       |-CXXDependentScopeMemberExpr 0x13d940dc8 <col:14, col:23> '<dependent type>' contains-errors lvalue ->obj       | `-RecoveryExpr 0x13d940da8 <col:14> '<dependent type>' contains-errors lvalue       |-IntegerLiteral 0x13d940d30 <col:28> 'int' 1       `-IntegerLiteral 0x13d940d50 <col:31> 'int' 0 ","19286":"`-FunctionDecl 0x1430e8b58  line:1:1 invalid TPMI_SH_HMAC_Unmarshal 'int (int *, int **, int *)'   |-ParmVarDecl 0x1430e8928 <col:24, col:38> col:38 invalid target 'int *'   |-ParmVarDecl 0x1430e89e0 <col:46, col:53> col:53 invalid buffer 'int **'   |-ParmVarDecl 0x1430e8a60 <col:61, col:68> col:68 invalid size 'int *'   `-CompoundStmt 0x1431020c8 <line:2:1, line:15:1>     |-IfStmt 0x1430e8ee8 <line:5:5, line:7:5>     | |-BinaryOperator 0x1430e8ca8 <line:5:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1430e8c68 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1430e8c88 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1430e8ed8 <col:31, line:7:5>     |-IfStmt 0x143102060 <line:8:5, line:13:5>     | |-BinaryOperator 0x1430e8f98 <line:8:9, col:15> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1430e8f58 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1430e8f78 <col:15> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x143102048 <col:31, line:13:5>     |   `-IfStmt 0x143102028 <line:10:2, line:12:2>     |     |-RecoveryExpr 0x1430e8fd0 <line:10:6> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x143102018 <col:24, line:12:2>     `-ReturnStmt 0x1431020b8 <line:14:5, col:12>       `-RecoveryExpr 0x143102098 <col:12> '<dependent type>' contains-errors lvalue ","20142":"`-FunctionDecl 0x12e811ba8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x12e811ad8 <col:14> col:14 mkdir 'int'   `-CompoundStmt 0x12f11f628 <line:2:1, line:17:1>     |-DeclStmt 0x12e811d20 <line:3:2, col:11>     | `-VarDecl 0x12e811cb8 <col:2, col:8> col:8 used dir 'char *'     |-DeclStmt 0x12e811db8 <line:4:2, col:13>     | `-VarDecl 0x12e811d50 <col:2, col:6> col:6 dir_len 'int'     |-DeclStmt 0x12e811ed0 <line:6:2, col:18>     | `-VarDecl 0x12e811e30 <col:2, col:14> col:7 used mode 'long' cinit     |   `-ImplicitCastExpr 0x12e811eb8 <col:14> 'long' <IntegralCast>     |     `-IntegerLiteral 0x12e811e98 <col:14> 'int' 511     `-IfStmt 0x12e8121e0 <line:10:2, line:12:2>       |-RecoveryExpr 0x12e8121b0 <line:10:6, col:111> '_Bool' contains-errors       `-CompoundStmt 0x12e8121d0 <col:120, line:12:2> ","20025":"`-FunctionDecl 0x13e80ddc8  line:1:1 invalid smb21_is_read_op 'int (int)'   |-ParmVarDecl 0x13e80dcf0 <col:18, col:24> col:24 invalid oplock 'int'   `-CompoundStmt 0x13e80df28 <line:2:1, line:5:1> ","19194":"`-FunctionDecl 0x11f80dda8  line:1:20 invalid init_hrtick 'int (void)' static   `-CompoundStmt 0x11f80e088 <line:2:1, line:4:1>     `-CallExpr 0x11f80e058 <line:3:2, col:35> '<dependent type>' contains-errors       |-DeclRefExpr 0x11f80dfb0 <col:2> 'int ()' Function 0x11f80def8 'hotcpu_notifier' 'int ()'       |-RecoveryExpr 0x11f80e038 <col:18> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x11f80dfe8 <col:34> 'int' 0 ","19802":"`-FunctionDecl 0x160033aa0  col:5 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x160033ba0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x160033c08 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x160033b48 <<invalid sloc>> Implicit 885 ","19454":"`-FunctionDecl 0x12200dd10  line:1:15 set_time 'void ()' inline   `-CompoundStmt 0x12200e128 <line:2:3, line:5:3>     `-CallExpr 0x12200df98 <line:3:5, col:20> 'int'       `-ImplicitCastExpr 0x12200df80 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x12200df30 <col:5> 'int ()' Function 0x12200de78 'set_start_time' 'int ()' ","19156":"`-FunctionDecl 0x12c1226f0  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x12c1227f0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x12c122858 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x12c1228c0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x12c122798 <<invalid sloc>> Implicit 905   `-FormatAttr 0x12c122940 <col:2> Implicit printf 3 4 ","19405":"`-FunctionDecl 0x138942b08  col:9 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x138942c08 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x138942c70 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x138942cd8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x138942bb0 <<invalid sloc>> Implicit 900 ","19949":"`-FunctionDecl 0x13d9281c8  line:1:12 invalid wake_futex_pi 'int (int)' static   |-ParmVarDecl 0x13d9280f0 <col:26, col:30> col:30 invalid __user 'int'   `-CompoundStmt 0x13d945b78 <line:2:1, line:52:1>     |-DeclStmt 0x13d928468 <line:3:2, col:31>     | |-RecordDecl 0x13d928278 <col:2, col:9> col:9 struct task_struct     | `-VarDecl 0x13d9283e8 <col:2, col:22> col:22 used new_owner 'struct task_struct *'     |-DeclStmt 0x13d928730 <line:4:2, col:50>     | |-RecordDecl 0x13d928480 <col:2, col:9> col:9 struct futex_pi_state     | `-VarDecl 0x13d9285e8 <col:2, col:42> col:25 used pi_state 'struct futex_pi_state *' cinit     |   `-CXXDependentScopeMemberExpr 0x13d9286d0 <col:36, col:42> '<dependent type>' contains-errors lvalue ->pi_state     |     `-RecoveryExpr 0x13d9286b0 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d941840 <line:7:2, line:8:11>     | |-UnaryOperator 0x13d928780 <line:7:6, col:7> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13d928768 <col:7> 'struct futex_pi_state *' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x13d928748 <col:7> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     | `-ReturnStmt 0x13d941830 <line:8:3, col:11>     |   `-UnaryOperator 0x13d941818 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13d941800 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13d9287e0 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d941e08 <line:11:2, line:12:11>     | |-BinaryOperator 0x13d941d40 <line:11:6, col:25> 'int' contains-errors '!='     | | |-RecoveryExpr 0x13d941cc0 <col:6, col:16> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13d941860 <col:6> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     | | `-RecoveryExpr 0x13d941d20 <col:25> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13d941df8 <line:12:3, col:11>     |   `-UnaryOperator 0x13d941de0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x13d941dc8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x13d941da8 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13d942060 <line:14:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d941f80 <col:2> 'int ()' Function 0x13d941ec8 'raw_spin_lock' 'int ()'     | `-UnaryOperator 0x13d942048 <col:16, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d942000 <col:17, col:36> '<dependent type>' contains-errors lvalue .wait_lock     |     `-RecoveryExpr 0x13d941fd8 <col:17, col:27> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d941fa0 <col:17> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |-BinaryOperator 0x13d942248 <line:15:2, col:53> 'struct task_struct *' contains-errors '='     | |-DeclRefExpr 0x13d942088 <col:2> 'struct task_struct *' lvalue Var 0x13d9283e8 'new_owner' 'struct task_struct *'     | `-CallExpr 0x13d942220 <col:14, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d942188 <col:14> 'int ()' Function 0x13d9420d0 'rt_mutex_next_owner' 'int ()'     |   `-UnaryOperator 0x13d942208 <col:34, col:45> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13d9421e0 <col:35, col:45> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d9421a8 <col:35> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |-IfStmt 0x13d9423e0 <line:18:2, line:19:21>     | |-UnaryOperator 0x13d9422a0 <line:18:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13d942288 <col:7> 'struct task_struct *' <LValueToRValue>     | |   `-DeclRefExpr 0x13d942268 <col:7> 'struct task_struct *' lvalue Var 0x13d9283e8 'new_owner' 'struct task_struct *'     | `-BinaryOperator 0x13d9423c0 <line:19:3, col:21> 'struct task_struct *' contains-errors '='     |   |-DeclRefExpr 0x13d9422b8 <col:3> 'struct task_struct *' lvalue Var 0x13d9283e8 'new_owner' 'struct task_struct *'     |   `-CXXDependentScopeMemberExpr 0x13d942378 <col:15, col:21> '<dependent type>' contains-errors lvalue ->task     |     `-RecoveryExpr 0x13d942358 <col:15> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13d943ad8 <line:22:2, line:35:2>     | |-RecoveryExpr 0x13d942450 <line:22:6, col:31> '_Bool' contains-errors     | `-CompoundStmt 0x13d943ab8 <col:34, line:35:2>     |   |-DeclStmt 0x13d942510 <line:23:3, col:14>     |   | `-VarDecl 0x13d942488 <col:3, col:13> col:7 used ret 'int' cinit     |   |   `-IntegerLiteral 0x13d9424f0 <col:13> 'int' 0     |   `-IfStmt 0x13d943a98 <line:31:3, line:34:3>     |     |-ImplicitCastExpr 0x13d943830 <line:31:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x13d943810 <col:7> 'int' lvalue Var 0x13d942488 'ret' 'int'     |     `-CompoundStmt 0x13d943a78 <col:12, line:34:3>     |       |-CallExpr 0x13d943a08 <line:32:4, col:49> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x13d943928 <col:4> 'int ()' Function 0x13d943870 'raw_spin_unlock' 'int ()'     |       | `-UnaryOperator 0x13d9439f0 <col:20, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |       |   `-CXXDependentScopeMemberExpr 0x13d9439a8 <col:21, col:40> '<dependent type>' contains-errors lvalue .wait_lock     |       |     `-RecoveryExpr 0x13d943980 <col:21, col:31> '<dependent type>' contains-errors lvalue     |       |       `-DeclRefExpr 0x13d943948 <col:21> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |       `-ReturnStmt 0x13d943a68 <line:33:4, col:11>     |         `-ImplicitCastExpr 0x13d943a50 <col:11> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x13d943a30 <col:11> 'int' lvalue Var 0x13d942488 'ret' 'int'     |-CallExpr 0x13d943cb8 <line:37:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d943bd8 <col:2> 'int ()' Function 0x13d943b20 'raw_spin_lock_irq' 'int ()'     | `-UnaryOperator 0x13d943ca0 <col:20, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d943c58 <col:21, col:38> '<dependent type>' contains-errors lvalue ->pi_lock     |     `-RecoveryExpr 0x13d943c30 <col:21, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d943bf8 <col:21> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x13d943f80 <line:38:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d943dc0 <col:2> 'int ()' Function 0x13d943d08 'WARN_ON' 'int ()'     | `-CallExpr 0x13d943f58 <col:10, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x13d943ec0 <col:10> 'int ()' Function 0x13d943e08 'list_empty' 'int ()'     |   `-UnaryOperator 0x13d943f40 <col:21, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x13d943f18 <col:22, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d943ee0 <col:22> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x13d944120 <line:39:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d944088 <col:2> 'int ()' Function 0x13d943fd0 'list_del_init' 'int ()'     | `-UnaryOperator 0x13d944108 <col:16, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d9440e0 <col:17, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d9440a8 <col:17> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x13d944308 <line:40:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d944228 <col:2> 'int ()' Function 0x13d944170 'raw_spin_unlock_irq' 'int ()'     | `-UnaryOperator 0x13d9442f0 <col:22, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d9442a8 <col:23, col:40> '<dependent type>' contains-errors lvalue ->pi_lock     |     `-RecoveryExpr 0x13d944280 <col:23, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d944248 <col:23> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x13d9443c8 <line:42:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d944330 <col:2> 'int ()' Function 0x13d943b20 'raw_spin_lock_irq' 'int ()'     | `-UnaryOperator 0x13d9443b0 <col:20, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d944388 <col:21, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d944350 <col:21> 'struct task_struct *' lvalue Var 0x13d9283e8 'new_owner' 'struct task_struct *'     |-CallExpr 0x13d9444e8 <line:43:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d9443f0 <col:2> 'int ()' Function 0x13d943d08 'WARN_ON' 'int ()'     | `-UnaryOperator 0x13d9444d0 <col:10, col:37> '<dependent type>' contains-errors prefix '!' cannot overflow     |   `-CallExpr 0x13d9444a8 <col:11, col:37> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x13d944410 <col:11> 'int ()' Function 0x13d943e08 'list_empty' 'int ()'     |     `-UnaryOperator 0x13d944490 <col:22, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x13d944468 <col:23, col:33> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13d944430 <col:23> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x13d945710 <line:44:2, col:53> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d945600 <col:2> 'int ()' Function 0x13d944538 'list_add' 'int ()'     | |-UnaryOperator 0x13d945680 <col:11, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x13d945658 <col:12, col:22> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13d945620 <col:12> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     | `-UnaryOperator 0x13d9456f8 <col:28, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d9456d0 <col:29, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d945698 <col:29> 'struct task_struct *' lvalue Var 0x13d9283e8 'new_owner' 'struct task_struct *'     |-BinaryOperator 0x13d9457c0 <line:45:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13d945778 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13d945740 <col:2> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     | `-DeclRefExpr 0x13d9457a0 <col:20> 'struct task_struct *' lvalue Var 0x13d9283e8 'new_owner' 'struct task_struct *'     |-CallExpr 0x13d945878 <line:46:2, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d9457e0 <col:2> 'int ()' Function 0x13d944170 'raw_spin_unlock_irq' 'int ()'     | `-UnaryOperator 0x13d945860 <col:22, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d945838 <col:23, col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d945800 <col:23> 'struct task_struct *' lvalue Var 0x13d9283e8 'new_owner' 'struct task_struct *'     |-CallExpr 0x13d945980 <line:48:2, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d9458a0 <col:2> 'int ()' Function 0x13d943870 'raw_spin_unlock' 'int ()'     | `-UnaryOperator 0x13d945968 <col:18, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x13d945920 <col:19, col:38> '<dependent type>' contains-errors lvalue .wait_lock     |     `-RecoveryExpr 0x13d9458f8 <col:19, col:29> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13d9458c0 <col:19> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     |-CallExpr 0x13d945b20 <line:49:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13d945a88 <col:2> 'int ()' Function 0x13d9459d0 'rt_mutex_unlock' 'int ()'     | `-UnaryOperator 0x13d945b08 <col:18, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13d945ae0 <col:19, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13d945aa8 <col:19> 'struct futex_pi_state *' contains-errors lvalue Var 0x13d9285e8 'pi_state' 'struct futex_pi_state *'     `-ReturnStmt 0x13d945b68 <line:51:2, col:9>       `-IntegerLiteral 0x13d945b48 <col:9> 'int' 0 ","19919":"`-FunctionDecl 0x1351283d8  line:1:12 invalid ssl_scan_clienthello_custom_tlsext 'int (int *, const unsigned char *, const unsigned char *, int *)' static   |-ParmVarDecl 0x135128128 <col:47, col:52> col:52 invalid s 'int *'   |-ParmVarDecl 0x1351281d8 <line:2:47, col:68> col:68 used data 'const unsigned char *'   |-ParmVarDecl 0x135128258 <line:3:47, col:68> col:68 used limit 'const unsigned char *'   |-ParmVarDecl 0x1351282d8 <line:4:47, col:52> col:52 used al 'int *'   `-CompoundStmt 0x135142528 <line:5:1, line:31:1>     |-DeclStmt 0x135128640 <line:6:5, col:35>     | |-VarDecl 0x1351284b8 <col:5, col:20> col:20 used type 'unsigned short'     | |-VarDecl 0x135128538 <col:5, col:26> col:26 used size 'unsigned short'     | `-VarDecl 0x1351285b8 <col:5, col:32> col:32 used len 'unsigned short'     |-IfStmt 0x135141850 <line:8:5, line:9:16>     | |-BinaryOperator 0x135141800 <line:8:9, col:51> 'int' contains-errors '||'     | | |-CXXDependentScopeMemberExpr 0x135128678 <col:9, col:12> '<dependent type>' contains-errors lvalue ->hit     | | | `-RecoveryExpr 0x135128658 <col:9> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x1351287d8 <col:19, col:51> 'int' contains-errors '=='     | |   |-CXXDependentScopeMemberExpr 0x135128770 <col:19, col:36> '<dependent type>' contains-errors lvalue .meths_count     | |   | `-CXXDependentScopeMemberExpr 0x135128728 <col:19, col:28> '<dependent type>' contains-errors lvalue ->srv_ext     | |   |   `-CXXDependentScopeMemberExpr 0x1351286e0 <col:19, col:22> '<dependent type>' contains-errors lvalue ->cert     | |   |     `-RecoveryExpr 0x1351286c0 <col:19> '<dependent type>' contains-errors lvalue     | |   `-IntegerLiteral 0x1351287b8 <col:51> 'int' 0     | `-ReturnStmt 0x135141840 <line:9:9, col:16>     |   `-IntegerLiteral 0x135141820 <col:16> 'int' 1     |-IfStmt 0x135141970 <line:11:5, line:12:16>     | |-BinaryOperator 0x135141920 <line:11:9, col:25> 'int' '>='     | | |-ImplicitCastExpr 0x135141908 <col:9> 'const unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x135141870 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     | | `-BinaryOperator 0x1351418e8 <col:17, col:25> 'const unsigned char *' '-'     | |   |-ImplicitCastExpr 0x1351418d0 <col:17> 'const unsigned char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x135141890 <col:17> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'     | |   `-IntegerLiteral 0x1351418b0 <col:25> 'int' 2     | `-ReturnStmt 0x135141960 <line:12:9, col:16>     |   `-IntegerLiteral 0x135141940 <col:16> 'int' 1     |-CallExpr 0x135141b98 <line:13:5, col:18> 'int'     | |-ImplicitCastExpr 0x135141b80 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x135141af0 <col:5> 'int ()' Function 0x135141a38 'n2s' 'int ()'     | |-ImplicitCastExpr 0x135141bc8 <col:9> 'const unsigned char *' <LValueToRValue>     | | `-DeclRefExpr 0x135141b10 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     | `-ImplicitCastExpr 0x135141bf8 <col:15> 'int' <IntegralCast>     |   `-ImplicitCastExpr 0x135141be0 <col:15> 'unsigned short' <LValueToRValue>     |     `-DeclRefExpr 0x135141b30 <col:15> 'unsigned short' lvalue Var 0x1351285b8 'len' 'unsigned short'     |-IfStmt 0x135141d40 <line:15:5, line:16:16>     | |-BinaryOperator 0x135141cf0 <line:15:9, col:24> 'int' '>'     | | |-ImplicitCastExpr 0x135141cd8 <col:9> 'const unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x135141c10 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     | | `-BinaryOperator 0x135141cb8 <col:16, col:24> 'const unsigned char *' '-'     | |   |-ImplicitCastExpr 0x135141c70 <col:16> 'const unsigned char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x135141c30 <col:16> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'     | |   `-ImplicitCastExpr 0x135141ca0 <col:24> 'int' <IntegralCast>     | |     `-ImplicitCastExpr 0x135141c88 <col:24> 'unsigned short' <LValueToRValue>     | |       `-DeclRefExpr 0x135141c50 <col:24> 'unsigned short' lvalue Var 0x1351285b8 'len' 'unsigned short'     | `-ReturnStmt 0x135141d30 <line:16:9, col:16>     |   `-IntegerLiteral 0x135141d10 <col:16> 'int' 1     |-WhileStmt 0x1351424d8 <line:18:5, line:28:5>     | |-BinaryOperator 0x135141e10 <line:18:12, col:28> 'int' '<='     | | |-ImplicitCastExpr 0x135141df8 <col:12> 'const unsigned char *' <LValueToRValue>     | | | `-DeclRefExpr 0x135141d60 <col:12> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     | | `-BinaryOperator 0x135141dd8 <col:20, col:28> 'const unsigned char *' '-'     | |   |-ImplicitCastExpr 0x135141dc0 <col:20> 'const unsigned char *' <LValueToRValue>     | |   | `-DeclRefExpr 0x135141d80 <col:20> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'     | |   `-IntegerLiteral 0x135141da0 <col:28> 'int' 4     | `-CompoundStmt 0x1351424a0 <col:31, line:28:5>     |   |-CallExpr 0x135141ea8 <line:19:9, col:23> 'int'     |   | |-ImplicitCastExpr 0x135141e90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x135141e30 <col:9> 'int ()' Function 0x135141a38 'n2s' 'int ()'     |   | |-ImplicitCastExpr 0x135141ed8 <col:13> 'const unsigned char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x135141e50 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |   | `-ImplicitCastExpr 0x135141f08 <col:19> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x135141ef0 <col:19> 'unsigned short' <LValueToRValue>     |   |     `-DeclRefExpr 0x135141e70 <col:19> 'unsigned short' lvalue Var 0x1351284b8 'type' 'unsigned short'     |   |-CallExpr 0x135141f98 <line:20:9, col:23> 'int'     |   | |-ImplicitCastExpr 0x135141f80 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x135141f20 <col:9> 'int ()' Function 0x135141a38 'n2s' 'int ()'     |   | |-ImplicitCastExpr 0x135141fc8 <col:13> 'const unsigned char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x135141f40 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |   | `-ImplicitCastExpr 0x135141ff8 <col:19> 'int' <IntegralCast>     |   |   `-ImplicitCastExpr 0x135141fe0 <col:19> 'unsigned short' <LValueToRValue>     |   |     `-DeclRefExpr 0x135141f60 <col:19> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'     |   |-IfStmt 0x135142140 <line:22:9, line:23:20>     |   | |-BinaryOperator 0x1351420f0 <line:22:13, col:27> 'int' '>'     |   | | |-BinaryOperator 0x135142098 <col:13, col:20> 'const unsigned char *' '+'     |   | | | |-ImplicitCastExpr 0x135142050 <col:13> 'const unsigned char *' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x135142010 <col:13> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |   | | | `-ImplicitCastExpr 0x135142080 <col:20> 'int' <IntegralCast>     |   | | |   `-ImplicitCastExpr 0x135142068 <col:20> 'unsigned short' <LValueToRValue>     |   | | |     `-DeclRefExpr 0x135142030 <col:20> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'     |   | | `-ImplicitCastExpr 0x1351420d8 <col:27> 'const unsigned char *' <LValueToRValue>     |   | |   `-DeclRefExpr 0x1351420b8 <col:27> 'const unsigned char *' lvalue ParmVar 0x135128258 'limit' 'const unsigned char *'     |   | `-ReturnStmt 0x135142130 <line:23:13, col:20>     |   |   `-IntegerLiteral 0x135142110 <col:20> 'int' 1     |   |-IfStmt 0x1351423e0 <line:24:9, line:25:20>     |   | |-BinaryOperator 0x135142390 <line:24:13, col:63> 'int' contains-errors '<='     |   | | |-CallExpr 0x135142320 <col:13, col:58> '<dependent type>' contains-errors     |   | | | |-DeclRefExpr 0x135142240 <col:13> 'int ()' Function 0x135142188 'custom_ext_parse' 'int ()'     |   | | | |-RecoveryExpr 0x135142260 <col:30> '<dependent type>' contains-errors lvalue     |   | | | |-IntegerLiteral 0x135142280 <col:33> 'int' 1     |   | | | |-DeclRefExpr 0x1351422a0 <col:38> 'unsigned short' lvalue Var 0x1351284b8 'type' 'unsigned short'     |   | | | |-DeclRefExpr 0x1351422c0 <col:44> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |   | | | |-DeclRefExpr 0x1351422e0 <col:50> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'     |   | | | `-DeclRefExpr 0x135142300 <col:56> 'int *' lvalue ParmVar 0x1351282d8 'al' 'int *'     |   | | `-IntegerLiteral 0x135142370 <col:63> 'int' 0     |   | `-ReturnStmt 0x1351423d0 <line:25:13, col:20>     |   |   `-IntegerLiteral 0x1351423b0 <col:20> 'int' 0     |   `-CompoundAssignOperator 0x135142470 <line:27:9, col:17> 'const unsigned char *' '+=' ComputeLHSTy='const unsigned char *' ComputeResultTy='const unsigned char *'     |     |-DeclRefExpr 0x135142400 <col:9> 'const unsigned char *' lvalue ParmVar 0x1351281d8 'data' 'const unsigned char *'     |     `-ImplicitCastExpr 0x135142458 <col:17> 'int' <IntegralCast>     |       `-ImplicitCastExpr 0x135142440 <col:17> 'unsigned short' <LValueToRValue>     |         `-DeclRefExpr 0x135142420 <col:17> 'unsigned short' lvalue Var 0x135128538 'size' 'unsigned short'     `-ReturnStmt 0x135142518 <line:30:5, col:12>       `-IntegerLiteral 0x1351424f8 <col:12> 'int' 1 ","20175":"`-FunctionDecl 0x13701e118  line:1:14 invalid GatherNd 'int (const int *, const int *, int *)'   |-ParmVarDecl 0x13701def0 <col:23, col:43> col:43 invalid params 'const int *'   |-ParmVarDecl 0x13701df70 <col:51, col:71> col:71 invalid indices 'const int *'   |-ParmVarDecl 0x13701e028 <line:2:23, col:37> col:37 invalid output 'int *'   `-CompoundStmt 0x13701e270 <col:45, line:8:1>     |-RecoveryExpr 0x13701e208 <line:3:3> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x13701e260 <line:7:3, col:10>       `-RecoveryExpr 0x13701e240 <col:10> '<dependent type>' contains-errors lvalue ","19937":"`-FunctionDecl 0x13a00e350  line:1:13 __reg_assign_32_into_64 'void (struct bpf_reg_state *)' static   |-ParmVarDecl 0x13a00e248 <col:37, col:59> col:59 used reg 'struct bpf_reg_state *'   `-CompoundStmt 0x13a026db8 <line:2:1, line:14:1>     |-BinaryOperator 0x13a026708 <line:3:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a026680 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a026648 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | `-RecoveryExpr 0x13a0266e0 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a0266a8 <col:20> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     |-BinaryOperator 0x13a0267e8 <line:4:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13a026760 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13a026728 <col:2> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | `-RecoveryExpr 0x13a0267c0 <col:20, col:25> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13a026788 <col:20> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     |-IfStmt 0x13a026b38 <line:6:2, line:9:21> has_else     | |-BinaryOperator 0x13a026948 <line:6:6, col:55> 'int' contains-errors '&&'     | | |-BinaryOperator 0x13a026888 <col:6, col:28> 'int' contains-errors '>='     | | | |-RecoveryExpr 0x13a026840 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x13a026808 <col:6> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | | | `-IntegerLiteral 0x13a026868 <col:28> 'int' 0     | | `-BinaryOperator 0x13a026928 <col:33, col:55> 'int' contains-errors '>='     | |   |-RecoveryExpr 0x13a0268e0 <col:33, col:38> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x13a0268a8 <col:33> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | |   `-IntegerLiteral 0x13a026908 <col:55> 'int' 0     | |-BinaryOperator 0x13a026a28 <line:7:3, col:26> '<dependent type>' contains-errors '='     | | |-RecoveryExpr 0x13a0269a0 <col:3, col:8> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13a026968 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | | `-RecoveryExpr 0x13a026a00 <col:21, col:26> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13a0269c8 <col:21> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     | `-BinaryOperator 0x13a026b18 <line:9:3, col:21> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x13a026a80 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x13a026a48 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'     |   `-RecoveryExpr 0x13a026af8 <col:21> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13a026d88 <line:10:2, line:13:21> has_else       |-BinaryOperator 0x13a026be8 <line:10:6, col:28> 'int' contains-errors '>='       | |-RecoveryExpr 0x13a026ba0 <col:6, col:11> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x13a026b68 <col:6> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'       | `-IntegerLiteral 0x13a026bc8 <col:28> 'int' 0       |-BinaryOperator 0x13a026cc8 <line:11:3, col:26> '<dependent type>' contains-errors '='       | |-RecoveryExpr 0x13a026c40 <col:3, col:8> '<dependent type>' contains-errors lvalue       | | `-DeclRefExpr 0x13a026c08 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'       | `-RecoveryExpr 0x13a026ca0 <col:21, col:26> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13a026c68 <col:21> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'       `-BinaryOperator 0x13a026d68 <line:13:3, col:21> '<dependent type>' contains-errors '='         |-RecoveryExpr 0x13a026d20 <col:3, col:8> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x13a026ce8 <col:3> 'struct bpf_reg_state *' lvalue ParmVar 0x13a00e248 'reg' 'struct bpf_reg_state *'         `-IntegerLiteral 0x13a026d48 <col:21> 'int' 0 ","19488":"`-FunctionDecl 0x1338df9b8  line:1:12 invalid inet6_fill_prefix 'int (struct sk_buff *, struct inet6_dev *, struct prefix_info *, int, int, int, unsigned int)' static   |-ParmVarDecl 0x1338c7848 <col:30, col:46> col:46 used skb 'struct sk_buff *'   |-ParmVarDecl 0x1338df428 <col:51, col:69> col:69 used idev 'struct inet6_dev *'   |-ParmVarDecl 0x1338df5f8 <line:2:4, col:24> col:24 used pinfo 'struct prefix_info *'   |-ParmVarDecl 0x1338df690 <col:31, col:35> col:35 invalid pid 'int'   |-ParmVarDecl 0x1338df710 <col:40, col:44> col:44 invalid seq 'int'   |-ParmVarDecl 0x1338df790 <line:3:4, col:8> col:8 used event 'int'   |-ParmVarDecl 0x1338df810 <col:15, col:28> col:28 used flags 'unsigned int'   `-CompoundStmt 0x1338e2610 <line:4:1, line:36:1>     |-DeclStmt 0x1338dfc88 <line:5:2, col:24>     | |-RecordDecl 0x1338dfa98 <col:2, col:9> col:9 struct prefixmsg     | `-VarDecl 0x1338dfc08 <col:2, col:20> col:20 used pmsg 'struct prefixmsg *'     |-DeclStmt 0x1338dfe88 <line:6:2, col:23>     | |-RecordDecl 0x1338dfca0 <col:2, col:9> col:9 struct nlmsghdr     | `-VarDecl 0x1338dfe08 <col:2, col:20> col:20 used nlh 'struct nlmsghdr *'     |-DeclStmt 0x1338dffb0 <line:7:2, col:31>     | `-VarDecl 0x1338dfee8 <col:2, col:27> col:18 used b 'unsigned char *' cinit     |   `-RecoveryExpr 0x1338dff88 <col:22, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1338dff50 <col:22> 'struct sk_buff *' lvalue ParmVar 0x1338c7848 'skb' 'struct sk_buff *'     |-DeclStmt 0x1338e0148 <line:8:2, col:28>     | |-RecordDecl 0x1338dffc8 <col:2, col:9> col:9 struct prefix_cacheinfo     | `-VarDecl 0x1338e00c8 <col:2, col:26> col:26 referenced invalid ci 'struct prefix_cacheinfo'     |-BinaryOperator 0x1338e1400 <line:11:2, col:23> 'struct prefixmsg *' '='     | |-DeclRefExpr 0x1338e1220 <col:2> 'struct prefixmsg *' lvalue Var 0x1338dfc08 'pmsg' 'struct prefixmsg *'     | `-ImplicitCastExpr 0x1338e13e8 <col:9, col:23> 'struct prefixmsg *' <IntegralToPointer>     |   `-CallExpr 0x1338e13a8 <col:9, col:23> 'int'     |     |-ImplicitCastExpr 0x1338e1390 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1338e1320 <col:9> 'int ()' Function 0x1338e1268 'NLMSG_DATA' 'int ()'     |     `-ImplicitCastExpr 0x1338e13d0 <col:20> 'struct nlmsghdr *' <LValueToRValue>     |       `-DeclRefExpr 0x1338e1340 <col:20> 'struct nlmsghdr *' lvalue Var 0x1338dfe08 'nlh' 'struct nlmsghdr *'     |-BinaryOperator 0x1338e14d8 <line:12:2, col:24> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1338e1458 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1338e1420 <col:2> 'struct prefixmsg *' lvalue Var 0x1338dfc08 'pmsg' 'struct prefixmsg *'     | `-RecoveryExpr 0x1338e14b8 <col:24> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1338e1600 <line:13:2, col:36> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1338e1530 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1338e14f8 <col:2> 'struct prefixmsg *' lvalue Var 0x1338dfc08 'pmsg' 'struct prefixmsg *'     | `-CXXDependentScopeMemberExpr 0x1338e15b8 <col:25, col:36> '<dependent type>' contains-errors lvalue ->ifindex     |   `-RecoveryExpr 0x1338e1590 <col:25, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1338e1558 <col:25> 'struct inet6_dev *' lvalue ParmVar 0x1338df428 'idev' 'struct inet6_dev *'     |-BinaryOperator 0x1338e16e0 <line:14:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1338e1658 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1338e1620 <col:2> 'struct prefixmsg *' lvalue Var 0x1338dfc08 'pmsg' 'struct prefixmsg *'     | `-RecoveryExpr 0x1338e16b8 <col:21, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1338e1680 <col:21> 'struct prefix_info *' lvalue ParmVar 0x1338df5f8 'pinfo' 'struct prefix_info *'     |-BinaryOperator 0x1338e17c0 <line:15:2, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1338e1738 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1338e1700 <col:2> 'struct prefixmsg *' lvalue Var 0x1338dfc08 'pmsg' 'struct prefixmsg *'     | `-RecoveryExpr 0x1338e1798 <col:22, col:29> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1338e1760 <col:22> 'struct prefix_info *' lvalue ParmVar 0x1338df5f8 'pinfo' 'struct prefix_info *'     |-BinaryOperator 0x1338e1860 <line:17:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1338e1818 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1338e17e0 <col:2> 'struct prefixmsg *' lvalue Var 0x1338dfc08 'pmsg' 'struct prefixmsg *'     | `-IntegerLiteral 0x1338e1840 <col:23> 'int' 0     |-IfStmt 0x1338e19d8 <line:18:2, line:19:25>     | |-RecoveryExpr 0x1338e18b8 <line:18:6, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1338e1880 <col:6> 'struct prefix_info *' lvalue ParmVar 0x1338df5f8 'pinfo' 'struct prefix_info *'     | `-CompoundAssignOperator 0x1338e19a8 <line:19:3, col:25> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-RecoveryExpr 0x1338e1918 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1338e18e0 <col:3> 'struct prefixmsg *' lvalue Var 0x1338dfc08 'pmsg' 'struct prefixmsg *'     |   `-RecoveryExpr 0x1338e1988 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1338e1f08 <line:25:2, col:43> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1338e1d38 <col:2, col:5> '<dependent type>' contains-errors lvalue .preferred_time     | | `-RecoveryExpr 0x1338e1d10 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1338e1cf0 <col:2> 'struct prefix_cacheinfo' lvalue Var 0x1338e00c8 'ci' 'struct prefix_cacheinfo'     | `-CallExpr 0x1338e1ee0 <col:22, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1338e1e60 <col:22> 'int ()' Function 0x1338e1da8 'ntohl' 'int ()'     |   `-RecoveryExpr 0x1338e1eb8 <col:28, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1338e1e80 <col:28> 'struct prefix_info *' lvalue ParmVar 0x1338df5f8 'pinfo' 'struct prefix_info *'     |-BinaryOperator 0x1338e2060 <line:26:2, col:36> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1338e1f70 <col:2, col:5> '<dependent type>' contains-errors lvalue .valid_time     | | `-RecoveryExpr 0x1338e1f48 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1338e1f28 <col:2> 'struct prefix_cacheinfo' lvalue Var 0x1338e00c8 'ci' 'struct prefix_cacheinfo'     | `-CallExpr 0x1338e2038 <col:18, col:36> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1338e1fb8 <col:18> 'int ()' Function 0x1338e1da8 'ntohl' 'int ()'     |   `-RecoveryExpr 0x1338e2010 <col:24, col:31> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1338e1fd8 <col:24> 'struct prefix_info *' lvalue ParmVar 0x1338df5f8 'pinfo' 'struct prefix_info *'     |-BinaryOperator 0x1338e2268 <line:29:2, col:31> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1338e2190 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1338e2158 <col:2> 'struct nlmsghdr *' lvalue Var 0x1338dfe08 'nlh' 'struct nlmsghdr *'     | `-BinaryOperator 0x1338e2248 <col:19, col:31> '<dependent type>' contains-errors '-'     |   |-RecoveryExpr 0x1338e2200 <col:19, col:24> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x1338e21b8 <col:19> 'struct sk_buff *' lvalue ParmVar 0x1338c7848 'skb' 'struct sk_buff *'     |   `-DeclRefExpr 0x1338e2228 <col:31> 'unsigned char *' contains-errors lvalue Var 0x1338dfee8 'b' 'unsigned char *'     |-ReturnStmt 0x1338e22e8 <line:30:2, col:14>     | `-RecoveryExpr 0x1338e22c0 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1338e2288 <col:9> 'struct sk_buff *' lvalue ParmVar 0x1338c7848 'skb' 'struct sk_buff *'     |-LabelStmt 0x1338e25a8 <line:32:1, line:34:29> 'nlmsg_failure'     | `-LabelStmt 0x1338e2538 <line:33:1, line:34:29> 'rtattr_failure'     |   `-CallExpr 0x1338e24b8 <col:2, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x1338e23d8 <col:2> 'int ()' Function 0x1338e2320 'skb_trim' 'int ()'     |     |-DeclRefExpr 0x1338e23f8 <col:11> 'struct sk_buff *' lvalue ParmVar 0x1338c7848 'skb' 'struct sk_buff *'     |     `-BinaryOperator 0x1338e2498 <col:16, col:25> '<dependent type>' contains-errors '-'     |       |-DeclRefExpr 0x1338e2418 <col:16> 'unsigned char *' contains-errors lvalue Var 0x1338dfee8 'b' 'unsigned char *'     |       `-RecoveryExpr 0x1338e2470 <col:20, col:25> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x1338e2438 <col:20> 'struct sk_buff *' lvalue ParmVar 0x1338c7848 'skb' 'struct sk_buff *'     `-ReturnStmt 0x1338e2600 <line:35:2, col:10>       `-UnaryOperator 0x1338e25e8 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x1338e25c8 <col:10> 'int' 1 ","19400":"`-FunctionDecl 0x143122e00  line:1:17 invalid imap_parse_url_path 'int (struct connectdata *)' static   |-ParmVarDecl 0x14380e268 <col:37, col:57> col:57 used conn 'struct connectdata *'   `-CompoundStmt 0x143123be8 <line:2:1, line:18:1>     |-DeclStmt 0x143123158 <line:4:3, col:47>     | |-RecordDecl 0x143122eb0 <col:3, col:10> col:10 struct imap_conn     | `-VarDecl 0x143123018 <col:3, col:42> col:21 used imapc 'struct imap_conn *' cinit     |   `-UnaryOperator 0x143123128 <col:29, col:42> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-CXXDependentScopeMemberExpr 0x1431230e0 <col:30, col:42> '<dependent type>' contains-errors lvalue .imapc     |       `-RecoveryExpr 0x1431230b8 <col:30, col:36> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x143123080 <col:30> 'struct connectdata *' lvalue ParmVar 0x14380e268 'conn' 'struct connectdata *'     |-DeclStmt 0x1431233b8 <line:5:3, col:42>     | |-RecordDecl 0x143123170 <col:3, col:10> col:10 struct SessionHandle     | `-VarDecl 0x1431232d8 <col:3, col:38> col:25 used data 'struct SessionHandle *' cinit     |   `-RecoveryExpr 0x143123378 <col:32, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x143123340 <col:32> 'struct connectdata *' lvalue ParmVar 0x14380e268 'conn' 'struct connectdata *'     |-DeclStmt 0x1431234f8 <line:6:3, col:38>     | `-VarDecl 0x1431233e8 <col:3, col:34> col:15 used path 'const char *' cinit     |   `-CXXDependentScopeMemberExpr 0x1431234b0 <col:22, col:34> '<dependent type>' contains-errors lvalue .path     |     `-RecoveryExpr 0x143123488 <col:22, col:28> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x143123450 <col:22> 'struct SessionHandle *' contains-errors lvalue Var 0x1431232d8 'data' 'struct SessionHandle *'     |-DeclStmt 0x143123590 <line:7:3, col:10>     | `-VarDecl 0x143123528 <col:3, col:7> col:7 used len 'int'     |-IfStmt 0x143123700 <line:9:3, line:10:12>     | |-UnaryOperator 0x143123610 <line:9:6, col:8> 'int' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1431235f8 <col:7, col:8> 'char' contains-errors <LValueToRValue>     | |   `-UnaryOperator 0x1431235e0 <col:7, col:8> 'const char' contains-errors lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x1431235c8 <col:8> 'const char *' contains-errors <LValueToRValue>     | |       `-DeclRefExpr 0x1431235a8 <col:8> 'const char *' contains-errors lvalue Var 0x1431233e8 'path' 'const char *'     | `-BinaryOperator 0x1431236e0 <line:10:5, col:12> 'const char *' contains-errors '='     |   |-DeclRefExpr 0x143123628 <col:5> 'const char *' contains-errors lvalue Var 0x1431233e8 'path' 'const char *'     |   `-ImplicitCastExpr 0x1431236c8 <col:12> 'const char *' <NoOp>     |     `-ImplicitCastExpr 0x1431236b0 <col:12> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x143123690 <col:12> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x143123a88 <line:13:3, col:58> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x143123758 <col:3, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143123720 <col:3> 'struct imap_conn *' contains-errors lvalue Var 0x143123018 'imapc' 'struct imap_conn *'     | `-CallExpr 0x143123a18 <col:20, col:58> 'int' contains-errors     |   |-ImplicitCastExpr 0x143123a00 <col:20> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1431238e0 <col:20> 'int ()' Function 0x143123828 'curl_easy_unescape' 'int ()'     |   |-ImplicitCastExpr 0x143123a58 <col:39> 'struct SessionHandle *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x143123900 <col:39> 'struct SessionHandle *' contains-errors lvalue Var 0x1431232d8 'data' 'struct SessionHandle *'     |   |-ImplicitCastExpr 0x143123a70 <col:45> 'const char *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x143123920 <col:45> 'const char *' contains-errors lvalue Var 0x1431233e8 'path' 'const char *'     |   |-IntegerLiteral 0x143123940 <col:51> 'int' 0     |   `-UnaryOperator 0x1431239b0 <col:54, col:55> 'int *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x143123960 <col:55> 'int' lvalue Var 0x143123528 'len' 'int'     |-IfStmt 0x143123b80 <line:14:3, line:15:12>     | |-UnaryOperator 0x143123b20 <line:14:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x143123b08 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x143123ae0 <col:7, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x143123aa8 <col:7> 'struct imap_conn *' contains-errors lvalue Var 0x143123018 'imapc' 'struct imap_conn *'     | `-ReturnStmt 0x143123b70 <line:15:5, col:12>     |   `-RecoveryExpr 0x143123b50 <col:12> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x143123bd8 <line:17:3, col:10>       `-RecoveryExpr 0x143123bb8 <col:10> '<dependent type>' contains-errors lvalue ","19198":"`-FunctionDecl 0x1229281f8  line:1:12 invalid link_set_ipv4_forward 'int (int *)' static   |-ParmVarDecl 0x122928128 <col:34, col:40> col:40 invalid link 'int *'   `-CompoundStmt 0x122941850 <col:46, line:24:1>     |-DeclStmt 0x1229283f8 <line:2:9, col:33>     | |-VarDecl 0x1229282c0 <col:9, col:25> col:21 used p 'const char *' cinit     | | `-RecoveryExpr 0x122928340 <col:25> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x122928378 <col:9, col:32> col:32 used v 'const char *'     |-DeclStmt 0x122928490 <line:3:9, col:14>     | `-VarDecl 0x122928428 <col:9, col:13> col:13 used r 'int'     |-IfStmt 0x1229285b8 <line:5:9, line:6:24>     | |-BinaryOperator 0x122928568 <line:5:13, col:27> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x1229284c8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->flags     | | | `-RecoveryExpr 0x1229284a8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x122928548 <col:27> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1229285a8 <line:6:17, col:24>     |   `-IntegerLiteral 0x122928588 <col:24> 'int' 0     |-IfStmt 0x122928730 <line:8:9, line:9:24>     | |-BinaryOperator 0x1229286e0 <line:8:13, col:42> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x122928640 <col:13, col:28> '<dependent type>' contains-errors lvalue ->ip_forward     | | | `-CXXDependentScopeMemberExpr 0x1229285f8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->network     | | |   `-RecoveryExpr 0x1229285d8 <col:13> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1229286c0 <col:42> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x122928720 <line:9:17, col:24>     |   `-IntegerLiteral 0x122928700 <col:24> 'int' 0     |-BinaryOperator 0x123009220 <line:11:9, col:27> 'const char *' contains-errors '='     | |-DeclRefExpr 0x122928750 <col:9> 'const char *' contains-errors lvalue Var 0x1229282c0 'p' 'const char *'     | `-ImplicitCastExpr 0x123008de8 <col:13, col:27> 'const char *' <IntegralToPointer>     |   `-CallExpr 0x123008da8 <col:13, col:27> 'int'     |     |-ImplicitCastExpr 0x123008d90 <col:13> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x123008ce0 <col:13> 'int ()' Function 0x123008c28 'strjoina' 'int ()'     |     `-ImplicitCastExpr 0x123008dd0 <col:22> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x123008d40 <col:22> 'char[4]' lvalue \"STR\"     |-BinaryOperator 0x1230094d0 <line:12:9, col:53> 'const char *' contains-errors '='     | |-DeclRefExpr 0x123009240 <col:9> 'const char *' lvalue Var 0x122928378 'v' 'const char *'     | `-CallExpr 0x1230094a8 <col:13, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x123009340 <col:13> 'int ()' Function 0x123009288 'one_zero' 'int ()'     |   `-CallExpr 0x123009480 <col:22, col:52> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x123009440 <col:22> 'int ()' Function 0x123009388 'link_ipv4_forward_enabled' 'int ()'     |     `-RecoveryExpr 0x123009460 <col:48> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1230096f0 <line:14:9, col:38> 'int' contains-errors '='     | |-DeclRefExpr 0x1230094f0 <col:9> 'int' lvalue Var 0x122928428 'r' 'int'     | `-CallExpr 0x123009688 <col:13, col:38> 'int' contains-errors     |   |-ImplicitCastExpr 0x123009670 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1230095f0 <col:13> 'int ()' Function 0x123009538 'write_string_file' 'int ()'     |   |-ImplicitCastExpr 0x1230096c0 <col:31> 'const char *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x123009610 <col:31> 'const char *' contains-errors lvalue Var 0x1229282c0 'p' 'const char *'     |   |-ImplicitCastExpr 0x1230096d8 <col:34> 'const char *' <LValueToRValue>     |   | `-DeclRefExpr 0x123009630 <col:34> 'const char *' lvalue Var 0x122928378 'v' 'const char *'     |   `-IntegerLiteral 0x123009650 <col:37> 'int' 0     |-IfStmt 0x122941800 <line:15:9, line:21:9>     | |-BinaryOperator 0x123009768 <line:15:13, col:17> 'int' '<'     | | |-ImplicitCastExpr 0x123009750 <col:13> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x123009710 <col:13> 'int' lvalue Var 0x122928428 'r' 'int'     | | `-IntegerLiteral 0x123009730 <col:17> 'int' 0     | `-CompoundStmt 0x123009bd8 <col:20, line:21:9>     |   |-IfStmt 0x1230099b0 <line:17:17, line:18:32>     |   | |-BinaryOperator 0x123009960 <line:17:21, col:50> 'int' contains-errors '>'     |   | | |-CallExpr 0x1230098e0 <col:21, col:46> 'int' contains-errors     |   | | | |-ImplicitCastExpr 0x1230098c8 <col:21> 'int (*)()' <FunctionToPointerDecay>     |   | | | | `-DeclRefExpr 0x123009868 <col:21> 'int ()' Function 0x1230097b0 'verify_one_line_file' 'int ()'     |   | | | |-ImplicitCastExpr 0x123009910 <col:42> 'const char *' contains-errors <LValueToRValue>     |   | | | | `-DeclRefExpr 0x123009888 <col:42> 'const char *' contains-errors lvalue Var 0x1229282c0 'p' 'const char *'     |   | | | `-ImplicitCastExpr 0x123009928 <col:45> 'const char *' <LValueToRValue>     |   | | |   `-DeclRefExpr 0x1230098a8 <col:45> 'const char *' lvalue Var 0x122928378 'v' 'const char *'     |   | | `-IntegerLiteral 0x123009940 <col:50> 'int' 0     |   | `-ReturnStmt 0x1230099a0 <line:18:25, col:32>     |   |   `-IntegerLiteral 0x123009980 <col:32> 'int' 0     |   `-CallExpr 0x123009b98 <line:20:17, col:68> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x123009ab0 <col:17> 'int ()' Function 0x1230099f8 'log_link_warning_errno' 'int ()'     |     |-RecoveryExpr 0x123009ad0 <col:40> '<dependent type>' contains-errors lvalue     |     |-DeclRefExpr 0x123009af0 <col:46> 'int' lvalue Var 0x122928428 'r' 'int'     |     |-StringLiteral 0x123009b10 <col:49> 'char[4]' lvalue \"STR\"     |     `-CXXDependentScopeMemberExpr 0x123009b50 <col:56, col:62> '<dependent type>' contains-errors lvalue ->ifname     |       `-RecoveryExpr 0x123009b30 <col:56> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x122941840 <line:23:9, col:16>       `-IntegerLiteral 0x122941820 <col:16> 'int' 0 ","19878":"`-FunctionDecl 0x13f141a20  line:1:13 invalid ldap_decode_response 'void (int *, struct asn1_data *, struct ldap_Result *)' static   |-ParmVarDecl 0x13f128128 <col:34, col:46> col:46 invalid mem_ctx 'int *'   |-ParmVarDecl 0x13f128718 <line:2:6, col:24> col:24 used data 'struct asn1_data *'   |-ParmVarDecl 0x13f1418e8 <line:3:6, col:26> col:26 used result 'struct ldap_Result *'   `-CompoundStmt 0x13f142920 <line:4:1, line:15:1>     |-CallExpr 0x13f141cf8 <line:5:2, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f141c40 <col:2> 'int ()' Function 0x13f141b88 'asn1_read_enumerated' 'int ()'     | |-DeclRefExpr 0x13f141c60 <col:23> 'struct asn1_data *' lvalue ParmVar 0x13f128718 'data' 'struct asn1_data *'     | `-UnaryOperator 0x13f141ce0 <col:29, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f141cb8 <col:30, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f141c80 <col:30> 'struct ldap_Result *' lvalue ParmVar 0x13f1418e8 'result' 'struct ldap_Result *'     |-CallExpr 0x13f141ee0 <line:6:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f141e08 <col:2> 'int ()' Function 0x13f141d50 'asn1_read_OctetString_talloc' 'int ()'     | |-RecoveryExpr 0x13f141e28 <col:31> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x13f141e48 <col:40> 'struct asn1_data *' lvalue ParmVar 0x13f128718 'data' 'struct asn1_data *'     | `-UnaryOperator 0x13f141ec8 <col:46, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f141ea0 <col:47, col:55> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f141e68 <col:47> 'struct ldap_Result *' lvalue ParmVar 0x13f1418e8 'result' 'struct ldap_Result *'     |-CallExpr 0x13f141ff0 <line:7:2, col:67> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13f141f18 <col:2> 'int ()' Function 0x13f141d50 'asn1_read_OctetString_talloc' 'int ()'     | |-RecoveryExpr 0x13f141f38 <col:31> '<dependent type>' contains-errors lvalue     | |-DeclRefExpr 0x13f141f58 <col:40> 'struct asn1_data *' lvalue ParmVar 0x13f128718 'data' 'struct asn1_data *'     | `-UnaryOperator 0x13f141fd8 <col:46, col:55> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x13f141fb0 <col:47, col:55> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x13f141f78 <col:47> 'struct ldap_Result *' lvalue ParmVar 0x13f1418e8 'result' 'struct ldap_Result *'     `-IfStmt 0x13f1428f0 <line:8:2, line:14:2> has_else       |-CallExpr 0x13f1422f8 <line:8:6, col:41> 'int'       | |-ImplicitCastExpr 0x13f1422e0 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x13f142108 <col:6> 'int ()' Function 0x13f142050 'asn1_peek_tag' 'int ()'       | |-ImplicitCastExpr 0x13f142328 <col:20> 'struct asn1_data *' <LValueToRValue>       | | `-DeclRefExpr 0x13f142128 <col:20> 'struct asn1_data *' lvalue ParmVar 0x13f128718 'data' 'struct asn1_data *'       | `-CallExpr 0x13f1422b8 <col:26, col:40> 'int'       |   |-ImplicitCastExpr 0x13f1422a0 <col:26> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x13f142228 <col:26> 'int ()' Function 0x13f142170 'ASN1_CONTEXT' 'int ()'       |   `-IntegerLiteral 0x13f142248 <col:39> 'int' 3       |-CompoundStmt 0x13f1427c8 <col:44, line:12:2>       | |-CallExpr 0x13f1424f8 <line:9:3, col:39> 'int'       | | |-ImplicitCastExpr 0x13f1424e0 <col:3> 'int (*)()' <FunctionToPointerDecay>       | | | `-DeclRefExpr 0x13f142420 <col:3> 'int ()' Function 0x13f142368 'asn1_start_tag' 'int ()'       | | |-ImplicitCastExpr 0x13f142528 <col:18> 'struct asn1_data *' <LValueToRValue>       | | | `-DeclRefExpr 0x13f142440 <col:18> 'struct asn1_data *' lvalue ParmVar 0x13f128718 'data' 'struct asn1_data *'       | | `-CallExpr 0x13f1424b8 <col:24, col:38> 'int'       | |   |-ImplicitCastExpr 0x13f1424a0 <col:24> 'int (*)()' <FunctionToPointerDecay>       | |   | `-DeclRefExpr 0x13f142460 <col:24> 'int ()' Function 0x13f142170 'ASN1_CONTEXT' 'int ()'       | |   `-IntegerLiteral 0x13f142480 <col:37> 'int' 3       | |-CallExpr 0x13f142618 <line:10:3, col:64> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x13f142540 <col:3> 'int ()' Function 0x13f141d50 'asn1_read_OctetString_talloc' 'int ()'       | | |-RecoveryExpr 0x13f142560 <col:32> '<dependent type>' contains-errors lvalue       | | |-DeclRefExpr 0x13f142580 <col:41> 'struct asn1_data *' lvalue ParmVar 0x13f128718 'data' 'struct asn1_data *'       | | `-UnaryOperator 0x13f142600 <col:47, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow       | |   `-RecoveryExpr 0x13f1425d8 <col:48, col:56> '<dependent type>' contains-errors lvalue       | |     `-DeclRefExpr 0x13f1425a0 <col:48> 'struct ldap_Result *' lvalue ParmVar 0x13f1418e8 'result' 'struct ldap_Result *'       | `-CallExpr 0x13f142788 <line:11:3, col:20> 'int'       |   |-ImplicitCastExpr 0x13f142770 <col:3> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x13f142730 <col:3> 'int ()' Function 0x13f142678 'asn1_end_tag' 'int ()'       |   `-ImplicitCastExpr 0x13f1427b0 <col:16> 'struct asn1_data *' <LValueToRValue>       |     `-DeclRefExpr 0x13f142750 <col:16> 'struct asn1_data *' lvalue ParmVar 0x13f128718 'data' 'struct asn1_data *'       `-CompoundStmt 0x13f1428d8 <line:12:9, line:14:2>         `-BinaryOperator 0x13f1428b8 <line:13:3, col:22> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x13f142838 <col:3, col:11> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x13f142800 <col:3> 'struct ldap_Result *' lvalue ParmVar 0x13f1418e8 'result' 'struct ldap_Result *'           `-RecoveryExpr 0x13f142898 <col:22> '<dependent type>' contains-errors lvalue ","19943":"`-FunctionDecl 0x12d82f5c8  line:1:15 invalid pin_sandbox_process 'int (int)'   |-ParmVarDecl 0x12d82f4f0 <col:35, col:41> col:41 invalid pid 'int'   `-CompoundStmt 0x12f8b4d30 <col:46, line:13:1>     |-CallExpr 0x12d82f838 <line:2:2, col:14> 'int'     | `-ImplicitCastExpr 0x12d82f820 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x12d82f7d0 <col:2> 'int ()' Function 0x12d82f718 'EUID_ASSERT' 'int ()'     |-CallExpr 0x12d82f9b8 <line:5:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d82f938 <col:2> 'int ()' Function 0x12d82f880 'check_firejail_comm' 'int ()'     | `-RecoveryExpr 0x12d82f998 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d82fb40 <line:6:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d82fac0 <col:2> 'int ()' Function 0x12d82fa08 'check_firejail_credentials' 'int ()'     | `-RecoveryExpr 0x12d82fb20 <col:29> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f8b4b38 <line:9:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f8b4ab8 <col:2> 'int ()' Function 0x12f8b4a00 'check_joinable' 'int ()'     | `-RecoveryExpr 0x12f8b4b18 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12f8b4cc0 <line:11:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f8b4c40 <col:2> 'int ()' Function 0x12f8b4b88 'unpin_process' 'int ()'     | `-RecoveryExpr 0x12f8b4ca0 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12f8b4d20 <line:12:2, col:9>       `-RecoveryExpr 0x12f8b4d00 <col:9> '<dependent type>' contains-errors lvalue ","20121":"`-FunctionDecl 0x14a124ed0  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x14a124fd0 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14a125038 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x14a1250a0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14a124f78 <<invalid sloc>> Implicit 900 ","19498":"`-FunctionDecl 0x13d80dee8  line:1:1 invalid _nc_fmt_funcptr 'int (char *, const char *, int)'   |-ParmVarDecl 0x13d80dcd8 <col:17, col:23> col:23 used target 'char *'   |-ParmVarDecl 0x13d80dd58 <col:31, col:43> col:43 used source 'const char *'   |-ParmVarDecl 0x13d80ddf0 <col:51, col:58> col:58 invalid size 'int'   `-CompoundStmt 0x13d82b740 <line:2:1, line:31:1>     |-UnaryExprOrTypeTraitExpr 0x13d80e018 <line:3:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x13d80dff8 <col:12> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x13d80e0f0 <line:4:5, col:23>     | `-VarDecl 0x13d80e050 <col:5, col:17> col:11 used dst 'char *' cinit     |   `-ImplicitCastExpr 0x13d80e0d8 <col:17> 'char *' <LValueToRValue>     |     `-DeclRefExpr 0x13d80e0b8 <col:17> 'char *' lvalue ParmVar 0x13d80dcd8 'target' 'char *'     |-DeclStmt 0x13d828800 <line:7:5, line:10:16>     | |-RecordDecl 0x13d80e108 <line:7:5, line:10:5> line:7:5 union definition     | | |-FieldDecl 0x13d80e1c8 <line:8:2, col:6> col:6 referenced value 'int'     | | `-FieldDecl 0x13d80e2d0 <line:9:2, col:24> col:7 referenced bytes 'char[4]'     | `-VarDecl 0x13d80e378 <line:7:5, line:10:7> col:7 used byteorder 'union (unnamed union at dataset_diviso_filec\/func13246_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec\/func13246_vuln.c:7:5)'     |-BinaryOperator 0x13d828888 <line:12:5, col:23> 'int' '='     | |-MemberExpr 0x13d828838 <col:5, col:15> 'int' lvalue .value 0x13d80e1c8     | | `-DeclRefExpr 0x13d828818 <col:5> 'union (unnamed union at dataset_diviso_filec\/func13246_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec\/func13246_vuln.c:7:5)' lvalue Var 0x13d80e378 'byteorder' 'union (unnamed union at dataset_diviso_filec\/func13246_vuln.c:7:5)':'union (unnamed at dataset_diviso_filec\/func13246_vuln.c:7:5)'     | `-IntegerLiteral 0x13d828868 <col:23> 'int' 4660     |-BinaryOperator 0x13d828988 <line:14:5, col:14> 'char' '='     | |-UnaryOperator 0x13d828940 <col:5, col:9> 'char' lvalue prefix '*' cannot overflow     | | `-UnaryOperator 0x13d828928 <col:6, col:9> 'char *' postfix '++'     | |   `-DeclRefExpr 0x13d828908 <col:6> 'char *' lvalue Var 0x13d80e050 'dst' 'char *'     | `-ImplicitCastExpr 0x13d828970 <col:14> 'char' <IntegralCast>     |   `-CharacterLiteral 0x13d828958 <col:14> 'int' 48     |-BinaryOperator 0x13d828a28 <line:15:5, col:14> 'char' '='     | |-UnaryOperator 0x13d8289e0 <col:5, col:9> 'char' lvalue prefix '*' cannot overflow     | | `-UnaryOperator 0x13d8289c8 <col:6, col:9> 'char *' postfix '++'     | |   `-DeclRefExpr 0x13d8289a8 <col:6> 'char *' lvalue Var 0x13d80e050 'dst' 'char *'     | `-ImplicitCastExpr 0x13d828a10 <col:14> 'char' <IntegralCast>     |   `-CharacterLiteral 0x13d8289f8 <col:14> 'int' 120     |-ForStmt 0x13d8295c8 <line:17:5, line:28:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x13d828b18 <line:17:17, col:21> 'int' contains-errors '<'     | | |-RecoveryExpr 0x13d828af8 <col:17> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13d828ab8 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x13d828b88 <col:27, col:29> '<dependent type>' contains-errors prefix '++' cannot overflow     | | `-RecoveryExpr 0x13d828b68 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d8295a8 <col:32, line:28:5>     |   |-DeclStmt 0x13d828fe0 <line:18:2, line:20:29>     |   | `-VarDecl 0x13d828bb8 <line:18:2, col:11> col:11 used ch 'unsigned int'     |   `-IfStmt 0x13d829588 <line:23:2, line:27:2>     |     |-UnaryOperator 0x13d8291b8 <line:23:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x13d8291a0 <col:7> '<dependent type>' contains-errors <LValueToRValue>     |     |   `-RecoveryExpr 0x13d829180 <col:7> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x13d829570 <col:16, line:27:2>     |       `-CompoundAssignOperator 0x13d829540 <line:26:6, col:13> 'char *' '+=' ComputeLHSTy='char *' ComputeResultTy='char *'     |         |-DeclRefExpr 0x13d829500 <col:6> 'char *' lvalue Var 0x13d80e050 'dst' 'char *'     |         `-IntegerLiteral 0x13d829520 <col:13> 'int' 2     |-BinaryOperator 0x13d829680 <line:29:5, col:12> 'char' '='     | |-UnaryOperator 0x13d829638 <col:5, col:6> 'char' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x13d829620 <col:6> 'char *' <LValueToRValue>     | |   `-DeclRefExpr 0x13d829600 <col:6> 'char *' lvalue Var 0x13d80e050 'dst' 'char *'     | `-ImplicitCastExpr 0x13d829668 <col:12> 'char' <IntegralCast>     |   `-CharacterLiteral 0x13d829650 <col:12> 'int' 0     `-ReturnStmt 0x13d82b730 <line:30:5, col:12>       `-ImplicitCastExpr 0x13d8296d8 <col:12> 'int' <PointerToIntegral>         `-ImplicitCastExpr 0x13d8296c0 <col:12> 'char *' <LValueToRValue>           `-DeclRefExpr 0x13d8296a0 <col:12> 'char *' lvalue ParmVar 0x13d80dcd8 'target' 'char *' ","19439":"`-FunctionDecl 0x14200ddc8  line:1:1 latin_ptr2len 'int (char *)'   |-ParmVarDecl 0x14200dcf0 <col:15, col:23> col:23 used p 'char *'   `-CompoundStmt 0x14200e0f0 <line:2:1, line:4:1>     `-ReturnStmt 0x14200e0e0 <line:3:2, col:23>       `-CallExpr 0x14200e088 <col:9, col:23> 'int'         |-ImplicitCastExpr 0x14200e070 <col:9> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x14200dfd0 <col:9> 'int ()' Function 0x14200df18 'MB_BYTE2LEN' 'int ()'         `-ImplicitCastExpr 0x14200e0c8 <col:21, col:22> 'int' <IntegralCast>           `-ImplicitCastExpr 0x14200e0b0 <col:21, col:22> 'char' <LValueToRValue>             `-UnaryOperator 0x14200e028 <col:21, col:22> 'char' lvalue prefix '*' cannot overflow               `-ImplicitCastExpr 0x14200e010 <col:22> 'char *' <LValueToRValue>                 `-DeclRefExpr 0x14200dff0 <col:22> 'char *' lvalue ParmVar 0x14200dcf0 'p' 'char *' ","19391":"`-FunctionDecl 0x132942008  col:33 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x132942108 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1329420b0 <<invalid sloc>> Implicit 902 ","20035":"`-FunctionDecl 0x1461285f0  line:1:6 invalid reds_update_client_mouse_allowed 'void (int *)'   |-ParmVarDecl 0x146128528 <col:39, col:50> col:50 referenced invalid reds 'int *'   `-CompoundStmt 0x146142a88 <line:2:1, line:28:1>     |-DeclStmt 0x146128758 <line:3:5, col:26>     | `-VarDecl 0x1461286b8 <col:5, col:21> col:9 used allow_now 'int' cinit     |   `-RecoveryExpr 0x146128738 <col:21> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x146128810 <line:4:5, col:18>     | `-VarDecl 0x146128788 <col:5, col:17> col:9 used x_res 'int' cinit     |   `-IntegerLiteral 0x1461287f0 <col:17> 'int' 0     |-DeclStmt 0x1461288c8 <line:5:5, col:18>     | `-VarDecl 0x146128840 <col:5, col:17> col:9 used y_res 'int' cinit     |   `-IntegerLiteral 0x1461288a8 <col:17> 'int' 0     |-DeclStmt 0x146128a30 <line:6:5, col:56>     | `-VarDecl 0x1461288f8 <col:5, col:55> col:9 used num_active_workers 'int' cinit     |   `-CallExpr 0x146128a10 <col:30, col:55> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x1461289c8 <col:30, col:50> '<dependent type>' contains-errors lvalue .size     |       `-CXXDependentScopeMemberExpr 0x146128980 <col:30, col:36> '<dependent type>' contains-errors lvalue ->qxl_instances     |         `-RecoveryExpr 0x146128960 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x146142060 <line:8:5, line:16:5>     | |-BinaryOperator 0x146128aa0 <line:8:9, col:30> 'int' contains-errors '>'     | | |-ImplicitCastExpr 0x146128a88 <col:9> 'int' contains-errors <LValueToRValue>     | | | `-DeclRefExpr 0x146128a48 <col:9> 'int' contains-errors lvalue Var 0x1461288f8 'num_active_workers' 'int'     | | `-IntegerLiteral 0x146128a68 <col:30> 'int' 0     | `-CompoundStmt 0x146142038 <col:33, line:16:5>     |   |-BinaryOperator 0x146128b38 <line:10:9, col:21> 'int' contains-errors '='     |   | |-DeclRefExpr 0x146128ac0 <col:9> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'     |   | `-RecoveryExpr 0x146128b18 <col:21> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x146141d60 <line:11:9, col:39> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x146141cb8 <col:9> 'int ()' Function 0x146141c00 'FOREACH_QXL_INSTANCE' 'int ()'     |   | |-RecoveryExpr 0x146141cd8 <col:30> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x146141d40 <col:36> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x146142020 <col:41, line:15:9>     |     `-IfStmt 0x146142000 <line:12:13, line:14:13>     |       |-CallExpr 0x146141fb0 <line:12:17, col:79> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x146141e70 <col:17> 'int ()' Function 0x146141db8 'red_qxl_get_allow_client_mouse' 'int ()'     |       | |-RecoveryExpr 0x146141f90 <col:48> '<dependent type>' contains-errors lvalue     |       | |-UnaryOperator 0x146141ec8 <col:53, col:54> 'int *' prefix '&' cannot overflow     |       | | `-DeclRefExpr 0x146141ea8 <col:54> 'int' lvalue Var 0x146128788 'x_res' 'int'     |       | |-UnaryOperator 0x146141f00 <col:61, col:62> 'int *' prefix '&' cannot overflow     |       | | `-DeclRefExpr 0x146141ee0 <col:62> 'int' lvalue Var 0x146128840 'y_res' 'int'     |       | `-UnaryOperator 0x146141f38 <col:69, col:70> 'int *' contains-errors prefix '&' cannot overflow     |       |   `-DeclRefExpr 0x146141f18 <col:70> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'     |       `-CompoundStmt 0x146141ff0 <col:82, line:14:13>     `-IfStmt 0x146142a68 <line:18:5, line:27:5>       |-BinaryOperator 0x146142148 <line:18:9, col:41> 'int' contains-errors '||'       | |-DeclRefExpr 0x146142080 <col:9> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'       | `-BinaryOperator 0x146142128 <col:22, col:41> 'int' contains-errors '!='       |   |-DeclRefExpr 0x1461420a0 <col:22> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'       |   `-CXXDependentScopeMemberExpr 0x1461420e0 <col:35, col:41> '<dependent type>' contains-errors lvalue ->dispatcher_allows_client_mouse       |     `-RecoveryExpr 0x1461420c0 <col:35> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x146142a30 <col:73, line:27:5>         |-BinaryOperator 0x146142260 <line:19:9, col:36> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x1461421f8 <col:9, col:28> '<dependent type>' contains-errors lvalue .x_res         | | `-CXXDependentScopeMemberExpr 0x1461421b0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->monitor_mode         | |   `-RecoveryExpr 0x146142188 <col:9> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x146142168 <col:9> 'int *' lvalue ParmVar 0x146128528 'reds' 'int *'         | `-DeclRefExpr 0x146142240 <col:36> 'int' lvalue Var 0x146128788 'x_res' 'int'         |-BinaryOperator 0x146142378 <line:20:9, col:36> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x146142310 <col:9, col:28> '<dependent type>' contains-errors lvalue .y_res         | | `-CXXDependentScopeMemberExpr 0x1461422c8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->monitor_mode         | |   `-RecoveryExpr 0x1461422a0 <col:9> '<dependent type>' contains-errors lvalue         | |     `-DeclRefExpr 0x146142280 <col:9> 'int *' lvalue ParmVar 0x146128528 'reds' 'int *'         | `-DeclRefExpr 0x146142358 <col:36> 'int' lvalue Var 0x146128840 'y_res' 'int'         |-BinaryOperator 0x146142448 <line:21:9, col:48> '<dependent type>' contains-errors '='         | |-CXXDependentScopeMemberExpr 0x1461423e0 <col:9, col:15> '<dependent type>' contains-errors lvalue ->dispatcher_allows_client_mouse         | | `-RecoveryExpr 0x1461423b8 <col:9> '<dependent type>' contains-errors lvalue         | |   `-DeclRefExpr 0x146142398 <col:9> 'int *' lvalue ParmVar 0x146128528 'reds' 'int *'         | `-DeclRefExpr 0x146142428 <col:48> 'int' contains-errors lvalue Var 0x1461286b8 'allow_now' 'int'         |-CallExpr 0x146142588 <line:22:9, col:36> '<dependent type>' contains-errors         | |-DeclRefExpr 0x146142548 <col:9> 'int ()' Function 0x146142490 'reds_update_mouse_mode' 'int ()'         | `-RecoveryExpr 0x146142568 <col:32> '<dependent type>' contains-errors lvalue         `-IfStmt 0x146142a10 <line:23:9, line:26:9>           |-BinaryOperator 0x146142770 <line:23:13, line:24:46> 'int' contains-errors '&&'           | |-BinaryOperator 0x146142680 <line:23:13, col:52> 'int' contains-errors '&&'           | | |-CXXDependentScopeMemberExpr 0x1461425d0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->is_client_mouse_allowed           | | | `-RecoveryExpr 0x1461425b0 <col:13> '<dependent type>' contains-errors lvalue           | | `-CXXDependentScopeMemberExpr 0x146142638 <col:46, col:52> '<dependent type>' contains-errors lvalue ->inputs_channel           | |   `-RecoveryExpr 0x146142618 <col:46> '<dependent type>' contains-errors lvalue           | `-CallExpr 0x146142750 <line:24:13, col:46> '<dependent type>' contains-errors           |   `-CXXDependentScopeMemberExpr 0x146142708 <col:13, col:35> '<dependent type>' contains-errors lvalue ->has_tablet           |     `-CXXDependentScopeMemberExpr 0x1461426c0 <col:13, col:19> '<dependent type>' contains-errors lvalue ->inputs_channel           |       `-RecoveryExpr 0x1461426a0 <col:13> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x1461429f8 <col:49, line:26:9>             `-CallExpr 0x1461429c8 <line:25:13, col:109> '<dependent type>' contains-errors               |-CXXDependentScopeMemberExpr 0x146142820 <col:13, col:35> '<dependent type>' contains-errors lvalue ->set_tablet_logical_size               | `-CXXDependentScopeMemberExpr 0x1461427d8 <col:13, col:19> '<dependent type>' contains-errors lvalue ->inputs_channel               |   `-RecoveryExpr 0x1461427b0 <col:13> '<dependent type>' contains-errors lvalue               |     `-DeclRefExpr 0x146142790 <col:13> 'int *' lvalue ParmVar 0x146128528 'reds' 'int *'               |-CXXDependentScopeMemberExpr 0x1461428d0 <col:59, col:78> '<dependent type>' contains-errors lvalue .x_res               | `-CXXDependentScopeMemberExpr 0x146142888 <col:59, col:65> '<dependent type>' contains-errors lvalue ->monitor_mode               |   `-RecoveryExpr 0x146142868 <col:59> '<dependent type>' contains-errors lvalue               `-CXXDependentScopeMemberExpr 0x146142980 <col:85, col:104> '<dependent type>' contains-errors lvalue .y_res                 `-CXXDependentScopeMemberExpr 0x146142938 <col:85, col:91> '<dependent type>' contains-errors lvalue ->monitor_mode                   `-RecoveryExpr 0x146142918 <col:85> '<dependent type>' contains-errors lvalue ","19757":"`-FunctionDecl 0x12d9281d8  line:1:9 referenced invalid json_object 'int *(void)'   `-CompoundStmt 0x12e009bf0 <line:2:1, line:18:1>     |-IfStmt 0x12d928598 <line:4:5, line:5:16>     | |-UnaryOperator 0x12d928538 <line:4:8, col:9> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12d928520 <col:9> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12d928500 <col:9> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12d928588 <line:5:9, col:16>     |   `-RecoveryExpr 0x12d928568 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e009620 <line:6:5, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d928698 <col:5> 'int ()' Function 0x12d9285e0 'json_init' 'int ()'     | |-UnaryOperator 0x12d9287e0 <col:15, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12d928798 <col:16, col:24> '<dependent type>' contains-errors lvalue ->json     | |   `-RecoveryExpr 0x12d928778 <col:16> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x12e009600 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12e009a88 <line:8:5, line:12:5>     | |-CallExpr 0x12e009870 <line:8:8, col:41> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12e009730 <col:8> 'int ()' Function 0x12e009678 'hashtable_init' 'int ()'     | | `-UnaryOperator 0x12e009858 <col:23, col:32> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   `-CXXDependentScopeMemberExpr 0x12e009810 <col:24, col:32> '<dependent type>' contains-errors lvalue ->hashtable     | |     `-RecoveryExpr 0x12e0097f0 <col:24> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12e009a68 <line:9:5, line:12:5>     |   |-CallExpr 0x12e0099f8 <line:10:9, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x12e009978 <col:9> 'int ()' Function 0x12e0098c0 'jsonp_free' 'int ()'     |   | `-RecoveryExpr 0x12e0099d8 <col:20> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x12e009a58 <line:11:9, col:16>     |     `-RecoveryExpr 0x12e009a38 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12e009be0 <line:17:5, col:21>       `-UnaryOperator 0x12e009bc8 <col:12, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x12e009b80 <col:13, col:21> '<dependent type>' contains-errors lvalue ->json           `-RecoveryExpr 0x12e009b60 <col:13> '<dependent type>' contains-errors lvalue ","19750":"`-FunctionDecl 0x14f9281c8  line:1:1 invalid pq_getstring 'int (int)'   |-ParmVarDecl 0x14f9280f0 <col:14, col:25> col:25 invalid s 'int'   `-CompoundStmt 0x14f942020 <line:2:1, line:33:1>     |-DeclStmt 0x14f9282f8 <line:3:2, col:9>     | `-VarDecl 0x14f928290 <col:2, col:8> col:8 used i 'int'     |-CallExpr 0x14f9284b0 <line:5:2, col:19> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f928470 <col:2> 'int ()' Function 0x14f9283b8 'resetStringInfo' 'int ()'     | `-RecoveryExpr 0x14f928490 <col:18> '<dependent type>' contains-errors lvalue     `-ForStmt 0x14f941fe8 <line:8:2, line:32:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       |-<<<NULL>>>       `-CompoundStmt 0x14f941fc0 <line:9:2, line:32:2>         |-WhileStmt 0x14f928778 <line:10:3, line:14:3>         | |-BinaryOperator 0x14f928568 <line:10:10, col:27> 'int' contains-errors '>='         | | |-RecoveryExpr 0x14f928528 <col:10> '<dependent type>' contains-errors lvalue         | | `-RecoveryExpr 0x14f928548 <col:27> '<dependent type>' contains-errors lvalue         | `-CompoundStmt 0x14f928760 <line:11:3, line:14:3>         |   `-IfStmt 0x14f928740 <line:12:4, line:13:12>         |     |-CallExpr 0x14f9286d8 <line:12:8, col:19> 'int'         |     | `-ImplicitCastExpr 0x14f9286c0 <col:8> 'int (*)()' <FunctionToPointerDecay>         |     |   `-DeclRefExpr 0x14f928668 <col:8> 'int ()' Function 0x14f9285b0 'pq_recvbuf' 'int ()'         |     `-ReturnStmt 0x14f928730 <line:13:5, col:12>         |       `-RecoveryExpr 0x14f928710 <col:12> '<dependent type>' contains-errors lvalue         |-ForStmt 0x14f941d78 <line:16:3, line:26:3>         | |-<<<NULL>>>         | |-<<<NULL>>>         | |-BinaryOperator 0x14f941878 <line:16:27, col:31> 'int' contains-errors '<'         | | |-DeclRefExpr 0x14f941800 <col:27> 'int' lvalue Var 0x14f928290 'i' 'int'         | | `-RecoveryExpr 0x14f941858 <col:31> '<dependent type>' contains-errors lvalue         | |-UnaryOperator 0x14f9418b8 <col:45, col:46> 'int' postfix '++'         | | `-DeclRefExpr 0x14f941898 <col:45> 'int' lvalue Var 0x14f928290 'i' 'int'         | `-CompoundStmt 0x14f941d60 <line:17:3, line:26:3>         |   `-IfStmt 0x14f941d40 <line:18:4, line:25:4>         |     |-RecoveryExpr 0x14f941920 <line:18:8, col:27> '_Bool' contains-errors         |     `-CompoundStmt 0x14f941d20 <line:19:4, line:25:4>         |       |-CallExpr 0x14f941c40 <line:21:5, line:22:34> '<dependent type>' contains-errors         |       | |-DeclRefExpr 0x14f941a20 <line:21:5> 'int ()' Function 0x14f941968 'appendBinaryStringInfo' 'int ()'         |       | |-RecoveryExpr 0x14f941a40 <col:28> '<dependent type>' contains-errors lvalue         |       | |-BinaryOperator 0x14f941bc0 <col:31, col:46> '<dependent type>' contains-errors '+'         |       | | |-RecoveryExpr 0x14f941b80 <col:31> '<dependent type>' contains-errors lvalue         |       | | `-RecoveryExpr 0x14f941ba0 <col:46> '<dependent type>' contains-errors lvalue         |       | `-BinaryOperator 0x14f941c20 <line:22:13, col:33> '<dependent type>' contains-errors '+'         |       |   |-BinaryOperator 0x14f941c00 <col:13, col:17> '<dependent type>' contains-errors '-'         |       |   | |-DeclRefExpr 0x14f941ab0 <col:13> 'int' lvalue Var 0x14f928290 'i' 'int'         |       |   | `-RecoveryExpr 0x14f941be0 <col:17> '<dependent type>' contains-errors lvalue         |       |   `-IntegerLiteral 0x14f941b08 <col:33> 'int' 1         |       `-ReturnStmt 0x14f941d10 <line:24:5, col:12>         |         `-IntegerLiteral 0x14f941cf0 <col:12> 'int' 0         `-CallExpr 0x14f941f88 <line:29:3, line:30:39> '<dependent type>' contains-errors           |-DeclRefExpr 0x14f941db0 <line:29:3> 'int ()' Function 0x14f941968 'appendBinaryStringInfo' 'int ()'           |-RecoveryExpr 0x14f941dd0 <col:26> '<dependent type>' contains-errors lvalue           |-BinaryOperator 0x14f941f08 <col:29, col:44> '<dependent type>' contains-errors '+'           | |-RecoveryExpr 0x14f941ec8 <col:29> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x14f941ee8 <col:44> '<dependent type>' contains-errors lvalue           `-BinaryOperator 0x14f941f68 <line:30:11, col:26> '<dependent type>' contains-errors '-'             |-RecoveryExpr 0x14f941f28 <col:11> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x14f941f48 <col:26> '<dependent type>' contains-errors lvalue ","20152":"`-FunctionDecl 0x14902bfe8  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14902c0e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14902c150 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14902c600 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14902c090 <<invalid sloc>> Implicit 882 ","19926":"`-FunctionDecl 0x126941d60  col:13 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x126941e60 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x126941ec8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x126941e08 <<invalid sloc>> Implicit 887 ","19737":"`-FunctionDecl 0x128128358  line:1:1 invalid onig_scan_unsigned_number 'int (int **, const int *, int)'   |-ParmVarDecl 0x128128160 <col:27, col:35> col:35 invalid src 'int **'   |-ParmVarDecl 0x1281281e0 <col:40, col:53> col:53 invalid end 'const int *'   |-ParmVarDecl 0x128128260 <col:58, col:71> col:71 invalid enc 'int'   `-CompoundStmt 0x128142188 <line:2:1, line:25:1>     |-DeclStmt 0x128128530 <line:3:3, col:24>     | |-VarDecl 0x128128430 <col:3, col:16> col:16 used num 'unsigned int'     | `-VarDecl 0x1281284b0 <col:3, col:21> col:21 used val 'unsigned int'     |-BinaryOperator 0x128128608 <line:8:3, col:9> 'unsigned int' '='     | |-DeclRefExpr 0x1281285b0 <col:3> 'unsigned int' lvalue Var 0x128128430 'num' 'unsigned int'     | `-ImplicitCastExpr 0x1281285f0 <col:9> 'unsigned int' <IntegralCast>     |   `-IntegerLiteral 0x1281285d0 <col:9> 'int' 0     |-WhileStmt 0x128141fe0 <line:9:3, line:22:3>     | |-UnaryOperator 0x1281286a8 <line:9:10, col:11> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x128128690 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x128128670 <col:11> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x128141fc0 <col:17, line:22:3>     |   |-CallExpr 0x128141938 <line:10:5, col:13> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1281418b8 <col:5> 'int ()' Function 0x128141800 'PFETCH' 'int ()'     |   | `-RecoveryExpr 0x128141918 <col:12> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x128141f90 <line:11:5, line:21:5> has_else     |     |-CallExpr 0x128141ae8 <line:11:9, col:37> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x128141a40 <col:9> 'int ()' Function 0x128141988 'ONIGENC_IS_CODE_DIGIT' 'int ()'     |     | |-RecoveryExpr 0x128141a60 <col:31> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x128141ac8 <col:36> '<dependent type>' contains-errors lvalue     |     |-CompoundStmt 0x128141ed8 <col:40, line:17:5>     |     | |-IfStmt 0x128141d90 <line:13:7, line:14:10>     |     | | |-RecoveryExpr 0x128141d28 <line:13:11, col:42> '_Bool' contains-errors     |     | | `-ReturnStmt 0x128141d80 <line:14:2, col:10>     |     | |   `-UnaryOperator 0x128141d68 <col:9, col:10> 'int' prefix '-'     |     | |     `-IntegerLiteral 0x128141d48 <col:10> 'int' 1     |     | `-BinaryOperator 0x128141eb8 <line:16:7, col:24> 'unsigned int' '='     |     |   |-DeclRefExpr 0x128141db0 <col:7> 'unsigned int' lvalue Var 0x128128430 'num' 'unsigned int'     |     |   `-BinaryOperator 0x128141e98 <col:13, col:24> 'unsigned int' '+'     |     |     |-BinaryOperator 0x128141e40 <col:13, col:19> 'unsigned int' '*'     |     |     | |-ImplicitCastExpr 0x128141e10 <col:13> 'unsigned int' <LValueToRValue>     |     |     | | `-DeclRefExpr 0x128141dd0 <col:13> 'unsigned int' lvalue Var 0x128128430 'num' 'unsigned int'     |     |     | `-ImplicitCastExpr 0x128141e28 <col:19> 'unsigned int' <IntegralCast>     |     |     |   `-IntegerLiteral 0x128141df0 <col:19> 'int' 10     |     |     `-ImplicitCastExpr 0x128141e80 <col:24> 'unsigned int' <LValueToRValue>     |     |       `-DeclRefExpr 0x128141e60 <col:24> 'unsigned int' lvalue Var 0x1281284b0 'val' 'unsigned int'     |     `-CompoundStmt 0x128141f70 <line:18:10, line:21:5>     |       |-ImplicitCastExpr 0x128141f50 <line:19:7> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x128141ef8 <col:7> 'int ()' Function 0x128141800 'PFETCH' 'int ()'     |       `-BreakStmt 0x128141f68 <line:20:7>     |-BinaryOperator 0x128142108 <line:23:3, col:10> '<dependent type>' contains-errors '='     | |-UnaryOperator 0x1281420d0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x1281420b8 <col:4> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x128142000 <col:4> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1281420e8 <col:10> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x128142178 <line:24:3, col:10>       `-ImplicitCastExpr 0x128142160 <col:10> 'int' <IntegralCast>         `-ImplicitCastExpr 0x128142148 <col:10> 'unsigned int' <LValueToRValue>           `-DeclRefExpr 0x128142128 <col:10> 'unsigned int' lvalue Var 0x128128430 'num' 'unsigned int' ","19723":"`-FunctionDecl 0x13e942650  col:41 implicit used floor 'double (double)' extern   |-ParmVarDecl 0x13e942750 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x13e9426f8 <<invalid sloc>> Implicit 1079   |-NoThrowAttr 0x13e9427c0 <col:41> Implicit   `-ConstAttr 0x13e942c00 <col:41> Implicit ","19623":"`-FunctionDecl 0x157029cf0  col:3 implicit used printf 'int (const char *, ...)' extern   |-ParmVarDecl 0x157029df0 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x157029d98 <<invalid sloc>> Implicit 903   `-FormatAttr 0x157029e60 <col:3> Implicit printf 1 2 ","19201":"`-FunctionDecl 0x15400dd18  line:1:2 __must_hold 'int ()'   `-CompoundStmt 0x1539235d0 <line:2:1, line:25:1>     |-CallExpr 0x15400e040 <line:5:2, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15400df00 <col:2> 'int ()' Function 0x15400de48 'spin_lock_irq' 'int ()'     | `-UnaryOperator 0x15400e028 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x15400dfe0 <col:17, col:22> '<dependent type>' contains-errors lvalue ->timeout_lock     |     `-RecoveryExpr 0x15400dfc0 <col:17> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x1539234b0 <line:6:2, line:22:2>       |-UnaryOperator 0x15400e2c8 <line:6:9, col:39> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x15400e2a0 <col:10, col:39> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x15400e148 <col:10> 'int ()' Function 0x15400e090 'list_empty' 'int ()'       |   `-UnaryOperator 0x15400e288 <col:21, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow       |     `-CXXDependentScopeMemberExpr 0x15400e240 <col:22, col:27> '<dependent type>' contains-errors lvalue ->timeout_list       |       `-RecoveryExpr 0x15400e220 <col:22> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x153923478 <col:42, line:22:2>         |-DeclStmt 0x1539228b0 <line:8:3, line:9:37>         | |-RecordDecl 0x15400e2e0 <line:8:3, col:10> col:10 struct io_kiocb         | `-VarDecl 0x153922658 <col:3, col:20> col:20 used req 'struct io_kiocb *'         |-IfStmt 0x153922a80 <line:11:3, line:12:4>         | |-CallExpr 0x153922a38 <line:11:7, col:30> 'int'         | | |-ImplicitCastExpr 0x153922a20 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x1539229a8 <col:7> 'int ()' Function 0x1539228f0 'io_is_timeout_noseq' 'int ()'         | | `-ImplicitCastExpr 0x153922a60 <col:27> 'struct io_kiocb *' <LValueToRValue>         | |   `-DeclRefExpr 0x1539229c8 <col:27> 'struct io_kiocb *' lvalue Var 0x153922658 'req' 'struct io_kiocb *'         | `-BreakStmt 0x153922a78 <line:12:4>         |-IfStmt 0x1539230d0 <line:17:3, line:18:4>         | |-RecoveryExpr 0x1539230a8 <line:17:7, col:20> '_Bool' contains-errors         | `-BreakStmt 0x1539230c8 <line:18:4>         |-CallExpr 0x1539232b0 <line:20:3, col:35> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1539231d0 <col:3> 'int ()' Function 0x153923118 'list_del_init' 'int ()'         | `-UnaryOperator 0x153923298 <col:17, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-CXXDependentScopeMemberExpr 0x153923250 <col:18, col:31> '<dependent type>' contains-errors lvalue .list         |     `-RecoveryExpr 0x153923228 <col:18, col:23> '<dependent type>' contains-errors lvalue         |       `-DeclRefExpr 0x1539231f0 <col:18> 'struct io_kiocb *' lvalue Var 0x153922658 'req' 'struct io_kiocb *'         `-CallExpr 0x153923430 <line:21:3, col:25> 'int'           |-ImplicitCastExpr 0x153923418 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x1539233b8 <col:3> 'int ()' Function 0x153923300 'io_kill_timeout' 'int ()'           |-ImplicitCastExpr 0x153923460 <col:19> 'struct io_kiocb *' <LValueToRValue>           | `-DeclRefExpr 0x1539233d8 <col:19> 'struct io_kiocb *' lvalue Var 0x153922658 'req' 'struct io_kiocb *'           `-IntegerLiteral 0x1539233f8 <col:24> 'int' 0 ","19340":"`-FunctionDecl 0x1511429b8  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x151142ab8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x151142b20 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x151142b88 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x151142a60 <<invalid sloc>> Implicit 882 ","19749":"`-FunctionDecl 0x12b1281f8  line:1:1 invalid httpReconnect 'int (int *)'   |-ParmVarDecl 0x12b128128 <col:15, col:23> col:23 invalid http 'int *'   `-CompoundStmt 0x12b128740 <line:2:1, line:6:1>     `-CallExpr 0x12b128588 <line:3:3, col:37> 'int' contains-errors       |-ImplicitCastExpr 0x12b128570 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12b128400 <col:3> 'int ()' Function 0x12b128348 'DEBUG_printf' 'int ()'       `-ParenExpr 0x12b128518 <col:16, col:36> 'void *' contains-errors         `-BinaryOperator 0x12b1284f8 <col:17, col:32> 'void *' contains-errors ','           |-ImplicitCastExpr 0x12b1284e0 <col:17> 'char *' <ArrayToPointerDecay>           | `-StringLiteral 0x12b128460 <col:17> 'char[4]' lvalue \"STR\"           `-CStyleCastExpr 0x12b1284b8 <col:24, col:32> 'void *' contains-errors <Dependent>             `-RecoveryExpr 0x12b128480 <col:32> '<dependent type>' contains-errors lvalue ","19680":"`-FunctionDecl 0x15480de58  line:1:14 invalid ga_get_win_name 'char *(const int *, int)' static   |-ParmVarDecl 0x15480dcf0 <col:30, col:54> col:54 invalid os_version 'const int *'   |-ParmVarDecl 0x15480dd70 <col:66, col:71> col:71 invalid id 'int'   `-CompoundStmt 0x154829300 <line:2:1, line:20:1>     |-DeclStmt 0x15480e030 <line:5:5, col:67>     | `-VarDecl 0x15480df28 <col:5, col:9> col:9 tbl_idx 'int'     |-WhileStmt 0x154828fb0 <line:7:5, line:16:5>     | |-BinaryOperator 0x15480e168 <line:7:12, col:30> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x15480e100 <col:12, col:19> '<dependent type>' contains-errors lvalue ->version     | | | `-RecoveryExpr 0x15480e0e0 <col:12> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15480e148 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x154828f90 <col:36, line:16:5>     |   |-IfStmt 0x154828f08 <line:8:9, line:14:9>     |   | |-BinaryOperator 0x154828a68 <line:8:13, col:54> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x15480e360 <col:13, col:29> 'int' contains-errors '=='     |   | | | |-RecoveryExpr 0x15480e2d8 <col:13> '<dependent type>' contains-errors lvalue     |   | | | `-CXXDependentScopeMemberExpr 0x15480e318 <col:22, col:29> '<dependent type>' contains-errors lvalue ->major     |   | | |   `-RecoveryExpr 0x15480e2f8 <col:22> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x154828a48 <col:38, col:54> 'int' contains-errors '=='     |   | |   |-RecoveryExpr 0x15480e380 <col:38> '<dependent type>' contains-errors lvalue     |   | |   `-CXXDependentScopeMemberExpr 0x154828a00 <col:47, col:54> '<dependent type>' contains-errors lvalue ->minor     |   | |     `-RecoveryExpr 0x15480e3a0 <col:47> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x154828ef0 <col:61, line:14:9>     |   |   `-IfStmt 0x154828ec0 <line:9:13, line:13:13> has_else     |   |     |-RecoveryExpr 0x154828a88 <line:9:17> '<dependent type>' contains-errors lvalue     |   |     |-CompoundStmt 0x154828d48 <col:21, line:11:13>     |   |     | `-ReturnStmt 0x154828d38 <line:10:17, col:50>     |   |     |   `-CallExpr 0x154828d10 <col:24, col:50> '<dependent type>' contains-errors     |   |     |     |-DeclRefExpr 0x154828c00 <col:24> 'int ()' Function 0x154828b48 'g_strdup' 'int ()'     |   |     |     `-CXXDependentScopeMemberExpr 0x154828cc8 <col:33, col:40> '<dependent type>' contains-errors lvalue ->version_id     |   |     |       `-RecoveryExpr 0x154828ca8 <col:33> '<dependent type>' contains-errors lvalue     |   |     `-CompoundStmt 0x154828ea8 <line:11:20, line:13:13>     |   |       `-ReturnStmt 0x154828e98 <line:12:17, col:47>     |   |         `-CallExpr 0x154828e70 <col:24, col:47> '<dependent type>' contains-errors     |   |           |-DeclRefExpr 0x154828d60 <col:24> 'int ()' Function 0x154828b48 'g_strdup' 'int ()'     |   |           `-CXXDependentScopeMemberExpr 0x154828e28 <col:33, col:40> '<dependent type>' contains-errors lvalue ->version     |   |             `-RecoveryExpr 0x154828e08 <col:33> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x154828f78 <line:15:9, col:11> '<dependent type>' contains-errors prefix '++' cannot overflow     |     `-RecoveryExpr 0x154828f58 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1548291d8 <line:17:5, line:18:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1548290b0 <line:17:5> 'int ()' Function 0x154828ff8 'slog' 'int ()'     | |-StringLiteral 0x154829110 <col:10> 'char[4]' lvalue \"STR\"     | |-RecoveryExpr 0x154829198 <line:18:9> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1548291b8 <col:16> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1548292f0 <line:19:5, col:26>       `-ImplicitCastExpr 0x1548292d8 <col:12, col:26> 'char *' <IntegralToPointer>         `-CallExpr 0x154829298 <col:12, col:26> 'int'           |-ImplicitCastExpr 0x154829280 <col:12> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x154829210 <col:12> 'int ()' Function 0x154828b48 'g_strdup' 'int ()'           `-ImplicitCastExpr 0x1548292c0 <col:21> 'char *' <ArrayToPointerDecay>             `-StringLiteral 0x154829230 <col:21> 'char[4]' lvalue \"STR\" ","20009":"`-FunctionDecl 0x15500dfe8  line:1:5 invalid qcow2_snapshot_load_tmp 'int (int *, const char *, const char *, int **)'   |-ParmVarDecl 0x15500dd28 <col:29, col:47> col:47 invalid bs 'int *'   |-ParmVarDecl 0x15500dda8 <line:2:29, col:41> col:41 used snapshot_id 'const char *'   |-ParmVarDecl 0x15500de28 <line:3:29, col:41> col:41 used name 'const char *'   |-ParmVarDecl 0x15500dee0 <line:4:29, col:37> col:37 invalid errp 'int **'   `-CompoundStmt 0x155029998 <line:5:1, line:47:1>     |-DeclStmt 0x15500e1c8 <line:6:5, col:26>     | |-VarDecl 0x15500e0c8 <col:5, col:9> col:9 used i 'int'     | `-VarDecl 0x15500e148 <col:5, col:12> col:12 used snapshot_index 'int'     |-DeclStmt 0x15500e310 <line:10:5, col:21>     | `-VarDecl 0x15500e2a8 <col:5, col:9> col:9 used new_l1_bytes 'int'     |-DeclStmt 0x15500e3a8 <line:11:5, col:12>     | `-VarDecl 0x15500e340 <col:5, col:9> col:9 used ret 'int'     |-CallExpr 0x1550275e8 <line:13:5, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155027560 <col:5> 'int ()' Function 0x1550274a8 'assert' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1550275a0 <col:12, col:16> '<dependent type>' contains-errors lvalue ->read_only     |   `-RecoveryExpr 0x155027580 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1550277c8 <line:16:5, col:72> 'int' contains-errors '='     | |-DeclRefExpr 0x155027610 <col:5> 'int' lvalue Var 0x15500e148 'snapshot_index' 'int'     | `-CallExpr 0x155027790 <col:22, col:72> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x155027710 <col:22> 'int ()' Function 0x155027658 'find_snapshot_by_id_and_name' 'int ()'     |   |-RecoveryExpr 0x155027730 <col:51> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x155027750 <col:55> 'const char *' lvalue ParmVar 0x15500dda8 'snapshot_id' 'const char *'     |   `-DeclRefExpr 0x155027770 <col:68> 'const char *' lvalue ParmVar 0x15500de28 'name' 'const char *'     |-IfStmt 0x155027ad8 <line:17:5, line:21:5>     | |-BinaryOperator 0x155027840 <line:17:9, col:26> 'int' '<'     | | |-ImplicitCastExpr 0x155027828 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1550277e8 <col:9> 'int' lvalue Var 0x15500e148 'snapshot_index' 'int'     | | `-IntegerLiteral 0x155027808 <col:26> 'int' 0     | `-CompoundStmt 0x155027ab8 <col:29, line:21:5>     |   |-CallExpr 0x1550279e0 <line:18:9, line:19:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x155027940 <line:18:9> 'int ()' Function 0x155027888 'error_setg' 'int ()'     |   | |-RecoveryExpr 0x155027960 <col:20> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x1550279c0 <line:19:20> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x155027aa8 <line:20:9, col:17>     |     `-UnaryOperator 0x155027a90 <col:16, col:17> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x155027a78 <col:17> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x155027a58 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x155028338 <line:29:5, line:33:5>     | |-BinaryOperator 0x155028120 <line:29:9, col:15> 'int' '<'     | | |-ImplicitCastExpr 0x155028108 <col:9> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1550280c8 <col:9> 'int' lvalue Var 0x15500e340 'ret' 'int'     | | `-IntegerLiteral 0x1550280e8 <col:15> 'int' 0     | `-CompoundStmt 0x155028318 <col:18, line:33:5>     |   |-CallExpr 0x1550281a0 <line:30:9, col:31> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x155028140 <col:9> 'int ()' Function 0x155027888 'error_setg' 'int ()'     |   | |-RecoveryExpr 0x155028160 <col:20> '<dependent type>' contains-errors lvalue     |   | `-StringLiteral 0x155028180 <col:26> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x155028308 <line:32:9, col:16>     |     `-ImplicitCastExpr 0x1550282f0 <col:16> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x1550282d0 <col:16> 'int' lvalue Var 0x15500e340 'ret' 'int'     `-ReturnStmt 0x155029988 <line:46:5, col:12>       `-IntegerLiteral 0x155029968 <col:12> 'int' 0 ","19792":"`-FunctionDecl 0x12c80de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x12c80dd58 <col:6> col:6 used HeaderMapImplTest 'int'   |-ParmVarDecl 0x12c80dcd8 <col:25> col:25 AddCopy 'int'   `-CompoundStmt 0x12d008cd8 <col:34, line:68:1>     |-ImplicitCastExpr 0x12c80df70 <line:2:3> 'int' <LValueToRValue>     | `-DeclRefExpr 0x12c80df50 <col:3> 'int' lvalue ParmVar 0x12c80dd58 'HeaderMapImplTest' 'int'     |-RecoveryExpr 0x12c80dfb8 <line:5:3> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12c80e308 <line:10:3, col:41> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c80e190 <col:3> 'int ()' Function 0x12c80e0d8 'EXPECT_EQ' 'int ()'     | |-StringLiteral 0x12c80e1b0 <col:13> 'char[4]' lvalue \"STR\"     | `-CallExpr 0x12c80e2e8 <col:20, col:40> '<dependent type>' contains-errors     |   `-CXXDependentScopeMemberExpr 0x12c80e2a0 <col:20, col:26> '<dependent type>' contains-errors lvalue .getStringView     |     `-RecoveryExpr 0x12c80e280 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d0088b8 <line:11:3, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c80e338 <col:3> 'int ()' Function 0x12c80e0d8 'EXPECT_EQ' 'int ()'     | |-IntegerLiteral 0x12c80e358 <col:13> 'unsigned long' 5     | `-CallExpr 0x12d008898 <col:18, col:29> '<dependent type>' contains-errors     |   `-CXXDependentScopeMemberExpr 0x12d008850 <col:18, col:24> '<dependent type>' contains-errors lvalue .size     |     `-RecoveryExpr 0x12d008830 <col:18> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12d008a60 <line:17:3, col:42> '<dependent type>' contains-errors       |-DeclRefExpr 0x12d0088e8 <col:3> 'int ()' Function 0x12c80e0d8 'EXPECT_EQ' 'int ()'       |-StringLiteral 0x12d008908 <col:13> 'char[4]' lvalue \"STR\"       `-CallExpr 0x12d008a40 <col:20, col:41> '<dependent type>' contains-errors         `-CXXDependentScopeMemberExpr 0x12d0089f8 <col:20, col:27> '<dependent type>' contains-errors lvalue .getStringView           `-RecoveryExpr 0x12d0089d8 <col:20> '<dependent type>' contains-errors lvalue ","19513":"`-FunctionDecl 0x127941fe8  col:3 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x1279420e8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x127942090 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x127942158 <col:3> Implicit ","19295":"`-FunctionDecl 0x158122e80  col:10 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x158122f80 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x158122fe8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x158122f28 <<invalid sloc>> Implicit 887 ","19627":"`-FunctionDecl 0x15900ddf8  col:16 invalid updateStrokeOpacity 'int (int *)'   |-ParmVarDecl 0x15900dd28 <col:36, col:45> col:47 invalid 'int *'   `-CompoundStmt 0x15900dea8 <col:49, col:50> ","20021":"`-FunctionDecl 0x156943078  col:2 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x156943178 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1569431e0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x156943248 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x156943120 <<invalid sloc>> Implicit 882 ","19451":"`-FunctionDecl 0x1348fafa8  line:1:9 invalid mz_zip_reader_extract_to_file 'int (int *, int, const char *, int)'   |-ParmVarDecl 0x1348fad28 <col:39, col:55> col:55 invalid pZip 'int *'   |-ParmVarDecl 0x1348fada8 <col:61, col:69> col:69 invalid file_index 'int'   |-ParmVarDecl 0x1348fae28 <line:2:39, col:51> col:51 used pDst_filename 'const char *'   |-ParmVarDecl 0x1348faea8 <line:3:39, col:47> col:47 invalid flags 'int'   `-CompoundStmt 0x13401f4f8 <col:54, line:18:1>     |-IfStmt 0x1348fb390 <line:7:3, col:70>     | |-UnaryOperator 0x1348fb330 <col:7, col:60> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x1348fb2f8 <col:8, col:60> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1348fb1e0 <col:8> 'int ()' Function 0x1348fb128 'mz_zip_reader_file_stat' 'int ()'     | |   |-RecoveryExpr 0x1348fb200 <col:32> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x1348fb220 <col:38> '<dependent type>' contains-errors lvalue     | |   `-UnaryOperator 0x1348fb2e0 <col:50, col:51> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-RecoveryExpr 0x1348fb2c0 <col:51> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1348fb380 <col:63, col:70>     |   `-RecoveryExpr 0x1348fb360 <col:70> '<dependent type>' contains-errors lvalue     `-IfStmt 0x13401f0e8 <line:9:3, col:22>       |-UnaryOperator 0x13401f088 <col:7, col:8> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x13401f070 <col:8> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x13401f050 <col:8> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x13401f0d8 <col:15, col:22>         `-RecoveryExpr 0x13401f0b8 <col:22> '<dependent type>' contains-errors lvalue ","19794":"`-FunctionDecl 0x11f1418d8  line:1:13 invalid sig_task_ignored 'int (struct task_struct *, int, int)' static   |-ParmVarDecl 0x11f128668 <col:30, col:50> col:50 used t 'struct task_struct *'   |-ParmVarDecl 0x11f1286e8 <col:53, col:57> col:57 used sig 'int'   |-ParmVarDecl 0x11f128768 <col:62, col:67> col:67 invalid force 'int'   `-CompoundStmt 0x11f1429a8 <line:2:1, line:21:1>     |-DeclStmt 0x11f141a10 <line:3:2, col:14>     | `-VarDecl 0x11f1419a8 <col:2, col:7> col:7 invalid __user 'void'     |-IfStmt 0x11f142120 <line:8:2, line:9:10>     | |-CallExpr 0x11f1420b0 <line:8:6, col:56> 'int'     | | |-ImplicitCastExpr 0x11f142098 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x11f141d68 <col:6> 'int ()' Function 0x11f141cb0 'unlikely' 'int ()'     | | `-BinaryOperator 0x11f142078 <col:15, col:55> 'int' '&&'     | |   |-CallExpr 0x11f141ec0 <col:15, col:31> 'int'     | |   | |-ImplicitCastExpr 0x11f141ea8 <col:15> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x11f141e68 <col:15> 'int ()' Function 0x11f141db0 'is_global_init' 'int ()'     | |   | `-ImplicitCastExpr 0x11f141ee8 <col:30> 'struct task_struct *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x11f141e88 <col:30> 'struct task_struct *' lvalue ParmVar 0x11f128668 't' 'struct task_struct *'     | |   `-CallExpr 0x11f142038 <col:36, col:55> 'int'     | |     |-ImplicitCastExpr 0x11f142020 <col:36> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x11f141fe0 <col:36> 'int ()' Function 0x11f141f28 'sig_kernel_only' 'int ()'     | |     `-ImplicitCastExpr 0x11f142060 <col:52> 'int' <LValueToRValue>     | |       `-DeclRefExpr 0x11f142000 <col:52> 'int' lvalue ParmVar 0x11f1286e8 'sig' 'int'     | `-ReturnStmt 0x11f142110 <line:9:3, col:10>     |   `-RecoveryExpr 0x11f1420f0 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11f142680 <line:11:2, line:13:10>     | |-BinaryOperator 0x11f142618 <line:11:6, line:12:59> 'int' contains-errors '&&'     | | |-BinaryOperator 0x11f142548 <line:11:6, line:12:17> 'int' contains-errors '&&'     | | | |-CallExpr 0x11f1424c0 <line:11:6, col:51> '<dependent type>' contains-errors     | | | | |-DeclRefExpr 0x11f142140 <col:6> 'int ()' Function 0x11f141cb0 'unlikely' 'int ()'     | | | | `-BinaryOperator 0x11f1424a0 <col:15, col:34> '<dependent type>' contains-errors '&'     | | | |   |-CXXDependentScopeMemberExpr 0x11f1421c0 <col:15, col:26> '<dependent type>' contains-errors lvalue ->flags     | | | |   | `-RecoveryExpr 0x11f142198 <col:15, col:18> '<dependent type>' contains-errors lvalue     | | | |   |   `-DeclRefExpr 0x11f142160 <col:15> 'struct task_struct *' lvalue ParmVar 0x11f128668 't' 'struct task_struct *'     | | | |   `-RecoveryExpr 0x11f142480 <col:34> '<dependent type>' contains-errors lvalue     | | | `-BinaryOperator 0x11f142528 <line:12:6, col:17> 'int' contains-errors '=='     | | |   |-RecoveryExpr 0x11f1424e8 <col:6> '<dependent type>' contains-errors lvalue     | | |   `-RecoveryExpr 0x11f142508 <col:17> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x11f142600 <col:28, col:59> 'int' contains-errors prefix '!' cannot overflow     | |   `-ParenExpr 0x11f1425e0 <col:29, col:59> 'int' contains-errors     | |     `-BinaryOperator 0x11f1425c0 <col:30, col:58> 'int' contains-errors '&&'     | |       |-RecoveryExpr 0x11f1422d8 <col:30> '<dependent type>' contains-errors lvalue     | |       `-CallExpr 0x11f142580 <col:39, col:58> 'int'     | |         |-ImplicitCastExpr 0x11f142568 <col:39> 'int (*)()' <FunctionToPointerDecay>     | |         | `-DeclRefExpr 0x11f1422f8 <col:39> 'int ()' Function 0x11f141f28 'sig_kernel_only' 'int ()'     | |         `-ImplicitCastExpr 0x11f1425a8 <col:55> 'int' <LValueToRValue>     | |           `-DeclRefExpr 0x11f142318 <col:55> 'int' lvalue ParmVar 0x11f1286e8 'sig' 'int'     | `-ReturnStmt 0x11f142670 <line:13:3, col:10>     |   `-RecoveryExpr 0x11f142650 <col:10> '<dependent type>' contains-errors lvalue     `-IfStmt 0x11f142868 <line:16:2, line:18:10>       |-RecoveryExpr 0x11f142800 <line:16:6, line:17:49> '_Bool' contains-errors       `-ReturnStmt 0x11f142858 <line:18:3, col:10>         `-RecoveryExpr 0x11f142838 <col:10> '<dependent type>' contains-errors lvalue ","19322":"`-FunctionDecl 0x14f80e350  line:1:6 referenced rt_add_uncached_list 'void (struct rtable *)'   |-ParmVarDecl 0x14f80e248 <col:27, col:42> col:42 used rt 'struct rtable *'   `-CompoundStmt 0x14f827128 <line:2:1, line:10:1>     |-DeclStmt 0x14f826b10 <line:3:2, col:59>     | |-RecordDecl 0x14f826648 <col:2, col:9> col:9 struct uncached_list     | `-VarDecl 0x14f8267b8 <col:2, col:58> col:24 used ul 'struct uncached_list *' cinit     |   `-ImplicitCastExpr 0x14f826ae0 <col:29, col:58> 'struct uncached_list *' <IntegralToPointer>     |     `-CallExpr 0x14f826ab8 <col:29, col:58> 'int'     |       |-ImplicitCastExpr 0x14f826aa0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14f826950 <col:29> 'int ()' Function 0x14f826898 'raw_cpu_ptr' 'int ()'     |       `-UnaryOperator 0x14f826a50 <col:41, col:42> 'void (*)(struct rtable *)' prefix '&' cannot overflow     |         `-DeclRefExpr 0x14f8269c8 <col:42> 'void (struct rtable *)' Function 0x14f80e350 'rt_add_uncached_list' 'void (struct rtable *)'     |-BinaryOperator 0x14f826ba8 <line:5:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14f826b60 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14f826b28 <col:2> 'struct rtable *' lvalue ParmVar 0x14f80e248 'rt' 'struct rtable *'     | `-DeclRefExpr 0x14f826b88 <col:25> 'struct uncached_list *' lvalue Var 0x14f8267b8 'ul' 'struct uncached_list *'     |-CallExpr 0x14f826d40 <line:7:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f826ca8 <col:2> 'int ()' Function 0x14f826bf0 'spin_lock_bh' 'int ()'     | `-UnaryOperator 0x14f826d28 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f826d00 <col:16, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f826cc8 <col:16> 'struct uncached_list *' lvalue Var 0x14f8267b8 'ul' 'struct uncached_list *'     |-CallExpr 0x14f826f58 <line:8:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f826e48 <col:2> 'int ()' Function 0x14f826d90 'list_add_tail' 'int ()'     | |-UnaryOperator 0x14f826ec8 <col:16, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14f826ea0 <col:17, col:21> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14f826e68 <col:17> 'struct rtable *' lvalue ParmVar 0x14f80e248 'rt' 'struct rtable *'     | `-UnaryOperator 0x14f826f40 <col:34, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14f826f18 <col:35, col:39> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14f826ee0 <col:35> 'struct uncached_list *' lvalue Var 0x14f8267b8 'ul' 'struct uncached_list *'     `-CallExpr 0x14f827100 <line:9:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x14f827068 <col:2> 'int ()' Function 0x14f826fb0 'spin_unlock_bh' 'int ()'       `-UnaryOperator 0x14f8270e8 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14f8270c0 <col:18, col:22> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x14f827088 <col:18> 'struct uncached_list *' lvalue Var 0x14f8267b8 'ul' 'struct uncached_list *' ","20065":"`-FunctionDecl 0x148095b78  line:1:12 mb86a20s_read_status 'int (struct dvb_frontend *, enum fe_status *)' static   |-ParmVarDecl 0x14807d648 <col:33, col:54> col:54 used fe 'struct dvb_frontend *'   |-ParmVarDecl 0x148095a58 <col:58, col:74> col:74 used status 'enum fe_status *'   `-CompoundStmt 0x1480984f8 <line:2:1, line:31:1>     |-DeclStmt 0x148095ec8 <line:3:2, col:53>     | |-RecordDecl 0x148095c78 <col:2, col:9> col:9 struct mb86a20s_state     | `-VarDecl 0x148095de8 <col:2, col:37> col:25 used state 'struct mb86a20s_state *' cinit     |   `-RecoveryExpr 0x148095e88 <col:33, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x148095e50 <col:33> 'struct dvb_frontend *' lvalue ParmVar 0x14807d648 'fe' 'struct dvb_frontend *'     |-DeclStmt 0x148095f60 <line:4:2, col:9>     | `-VarDecl 0x148095ef8 <col:2, col:6> col:6 used val 'int'     |-ImplicitCastExpr 0x148096018 <line:6:2, col:12> '<dependent type>' contains-errors <LValueToRValue>     | `-RecoveryExpr 0x148095fe8 <col:2, col:12> '<dependent type>' contains-errors lvalue     |   |-UnaryOperator 0x148095fb0 <col:2, col:3> 'enum fe_status' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x148095f98 <col:3> 'enum fe_status *' <LValueToRValue>     |   |   `-DeclRefExpr 0x148095f78 <col:3> 'enum fe_status *' lvalue ParmVar 0x148095a58 'status' 'enum fe_status *'     |   `-IntegerLiteral 0x148095fc8 <col:12> 'int' 0     |-BinaryOperator 0x1480962b0 <line:8:2, col:40> 'int' contains-errors '='     | |-DeclRefExpr 0x148096030 <col:2> 'int' lvalue Var 0x148095ef8 'val' 'int'     | `-BinaryOperator 0x148096290 <col:8, col:40> 'int' contains-errors '&'     |   |-CallExpr 0x148096228 <col:8, col:36> 'int' contains-errors     |   | |-ImplicitCastExpr 0x148096210 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x148096180 <col:8> 'int ()' Function 0x1480960c8 'mb86a20s_readreg' 'int ()'     |   | |-ImplicitCastExpr 0x148096258 <col:25> 'struct mb86a20s_state *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x1480961a0 <col:25> 'struct mb86a20s_state *' contains-errors lvalue Var 0x148095de8 'state' 'struct mb86a20s_state *'     |   | `-IntegerLiteral 0x1480961c0 <col:32> 'int' 10     |   `-IntegerLiteral 0x148096270 <col:40> 'int' 15     |-IfStmt 0x148096390 <line:9:2, line:10:10>     | |-BinaryOperator 0x148096328 <line:9:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x148096310 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1480962d0 <col:6> 'int' lvalue Var 0x148095ef8 'val' 'int'     | | `-IntegerLiteral 0x1480962f0 <col:12> 'int' 0     | `-ReturnStmt 0x148096380 <line:10:3, col:10>     |   `-ImplicitCastExpr 0x148096368 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x148096348 <col:10> 'int' lvalue Var 0x148095ef8 'val' 'int'     |-IfStmt 0x148096570 <line:12:2, line:13:14>     | |-BinaryOperator 0x148096408 <line:12:6, col:13> 'int' '>='     | | |-ImplicitCastExpr 0x1480963f0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x1480963b0 <col:6> 'int' lvalue Var 0x148095ef8 'val' 'int'     | | `-IntegerLiteral 0x1480963d0 <col:13> 'int' 2     | `-CompoundAssignOperator 0x148096540 <line:13:3, col:14> 'enum fe_status' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-UnaryOperator 0x148096508 <col:3, col:4> 'enum fe_status' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x1480964f0 <col:4> 'enum fe_status *' <LValueToRValue>     |   |   `-DeclRefExpr 0x148096428 <col:4> 'enum fe_status *' lvalue ParmVar 0x148095a58 'status' 'enum fe_status *'     |   `-RecoveryExpr 0x148096520 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148096750 <line:15:2, line:16:14>     | |-BinaryOperator 0x1480965e8 <line:15:6, col:13> 'int' '>='     | | |-ImplicitCastExpr 0x1480965d0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x148096590 <col:6> 'int' lvalue Var 0x148095ef8 'val' 'int'     | | `-IntegerLiteral 0x1480965b0 <col:13> 'int' 4     | `-CompoundAssignOperator 0x148096720 <line:16:3, col:14> 'enum fe_status' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-UnaryOperator 0x1480966e8 <col:3, col:4> 'enum fe_status' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x1480966d0 <col:4> 'enum fe_status *' <LValueToRValue>     |   |   `-DeclRefExpr 0x148096608 <col:4> 'enum fe_status *' lvalue ParmVar 0x148095a58 'status' 'enum fe_status *'     |   `-RecoveryExpr 0x148096700 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148096930 <line:18:2, line:19:14>     | |-BinaryOperator 0x1480967c8 <line:18:6, col:13> 'int' '>='     | | |-ImplicitCastExpr 0x1480967b0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x148096770 <col:6> 'int' lvalue Var 0x148095ef8 'val' 'int'     | | `-IntegerLiteral 0x148096790 <col:13> 'int' 5     | `-CompoundAssignOperator 0x148096900 <line:19:3, col:14> 'enum fe_status' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-UnaryOperator 0x1480968c8 <col:3, col:4> 'enum fe_status' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x1480968b0 <col:4> 'enum fe_status *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1480967e8 <col:4> 'enum fe_status *' lvalue ParmVar 0x148095a58 'status' 'enum fe_status *'     |   `-RecoveryExpr 0x1480968e0 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x148097f10 <line:21:2, line:22:14>     | |-BinaryOperator 0x1480969a8 <line:21:6, col:13> 'int' '>='     | | |-ImplicitCastExpr 0x148096990 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x148096950 <col:6> 'int' lvalue Var 0x148095ef8 'val' 'int'     | | `-IntegerLiteral 0x148096970 <col:13> 'int' 7     | `-CompoundAssignOperator 0x148097ee0 <line:22:3, col:14> 'enum fe_status' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-UnaryOperator 0x148097ea8 <col:3, col:4> 'enum fe_status' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x148097e90 <col:4> 'enum fe_status *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1480969c8 <col:4> 'enum fe_status *' lvalue ParmVar 0x148095a58 'status' 'enum fe_status *'     |   `-RecoveryExpr 0x148097ec0 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1480980f0 <line:24:2, line:25:14>     | |-BinaryOperator 0x148097f88 <line:24:6, col:13> 'int' '>='     | | |-ImplicitCastExpr 0x148097f70 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x148097f30 <col:6> 'int' lvalue Var 0x148095ef8 'val' 'int'     | | `-IntegerLiteral 0x148097f50 <col:13> 'int' 8     | `-CompoundAssignOperator 0x1480980c0 <line:25:3, col:14> 'enum fe_status' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-UnaryOperator 0x148098088 <col:3, col:4> 'enum fe_status' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x148098070 <col:4> 'enum fe_status *' <LValueToRValue>     |   |   `-DeclRefExpr 0x148097fa8 <col:4> 'enum fe_status *' lvalue ParmVar 0x148095a58 'status' 'enum fe_status *'     |   `-RecoveryExpr 0x1480980a0 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x148098468 <line:27:2, line:28:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1480981f0 <line:27:2> 'int ()' Function 0x148098138 'dev_dbg' 'int ()'     | |-UnaryOperator 0x1480982b8 <col:10, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x148098270 <col:11, col:23> '<dependent type>' contains-errors lvalue ->dev     | |   `-RecoveryExpr 0x148098248 <col:11, col:18> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x148098210 <col:11> 'struct mb86a20s_state *' contains-errors lvalue Var 0x148095de8 'state' 'struct mb86a20s_state *'     | |-StringLiteral 0x148098310 <col:28> 'char[4]' lvalue \"STR\"     | |-PredefinedExpr 0x1480983e0 <line:28:4> 'const char[21]' lvalue __func__     | | `-StringLiteral 0x1480983b0 <col:4> 'const char[21]' lvalue \"mb86a20s_read_status\"     | |-UnaryOperator 0x148098430 <col:14, col:15> 'enum fe_status' lvalue prefix '*' cannot overflow     | | `-ImplicitCastExpr 0x148098418 <col:15> 'enum fe_status *' <LValueToRValue>     | |   `-DeclRefExpr 0x1480983f8 <col:15> 'enum fe_status *' lvalue ParmVar 0x148095a58 'status' 'enum fe_status *'     | `-DeclRefExpr 0x148098448 <col:23> 'int' lvalue Var 0x148095ef8 'val' 'int'     `-ReturnStmt 0x1480984e8 <line:30:2, col:9>       `-ImplicitCastExpr 0x1480984d0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x1480984b0 <col:9> 'int' lvalue Var 0x148095ef8 'val' 'int' ","20102":"`-FunctionDecl 0x12782e9c0  line:1:20 invalid SetPixelReadMask 'void (const int *)' static inline   |-ParmVarDecl 0x12782e8f0 <col:37, col:50> col:50 invalid magick_restrict 'const int *'   `-CompoundStmt 0x12782ebb0 <line:3:1, line:6:1> ","20052":"`-FunctionDecl 0x129141800  line:1:6 invalid dd_init_next_file 'int *(struct dump_dir *)'   |-ParmVarDecl 0x129128668 <col:24, col:41> col:41 used dd 'struct dump_dir *'   `-CompoundStmt 0x129142068 <line:2:1, line:16:1>     |-IfStmt 0x129141b18 <line:6:5, line:7:30>     | |-RecoveryExpr 0x1291418e8 <line:6:9, col:13> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1291418b0 <col:9> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     | `-CallExpr 0x129141af0 <line:7:9, col:30> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129141a70 <col:9> 'int ()' Function 0x1291419b8 'closedir' 'int ()'     |   `-RecoveryExpr 0x129141ac8 <col:18, col:22> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129141a90 <col:18> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     |-BinaryOperator 0x129141d20 <line:9:5, col:42> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x129141b70 <col:5, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x129141b38 <col:5> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     | `-CallExpr 0x129141cf8 <col:20, col:42> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x129141c78 <col:20> 'int ()' Function 0x129141bc0 'opendir' 'int ()'     |   `-RecoveryExpr 0x129141cd0 <col:28, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x129141c98 <col:28> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     |-IfStmt 0x129141fd8 <line:10:5, line:13:5>     | |-UnaryOperator 0x129141db8 <line:10:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x129141da0 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x129141d78 <col:10, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x129141d40 <col:10> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     | `-CompoundStmt 0x129141fc0 <line:11:5, line:13:5>     |   `-CallExpr 0x129141f90 <line:12:9, col:40> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x129141eb0 <col:9> 'int ()' Function 0x129141df8 'error_msg' 'int ()'     |     |-StringLiteral 0x129141f10 <col:19> 'char[4]' lvalue \"STR\"     |     `-RecoveryExpr 0x129141f68 <col:26, col:30> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x129141f30 <col:26> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *'     `-ReturnStmt 0x129142058 <line:15:5, col:16>       `-RecoveryExpr 0x129142030 <col:12, col:16> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x129141ff8 <col:12> 'struct dump_dir *' lvalue ParmVar 0x129128668 'dd' 'struct dump_dir *' ","20166":"`-FunctionDecl 0x12602bbe8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12602bce8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12602bc90 <<invalid sloc>> Implicit 873 ","19188":"`-FunctionDecl 0x127055590  col:11 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x127055690 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1270556f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x127055760 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x127055638 <<invalid sloc>> Implicit 905   `-FormatAttr 0x1270557e0 <col:11> Implicit printf 3 4 ","19505":"`-FunctionDecl 0x129128c68  line:1:1 invalid ambsdtar_build_argv 'int (int *, char *, char **, char **, int)'   |-ParmVarDecl 0x129128928 <line:2:5, col:29> col:29 invalid argument 'int *'   |-ParmVarDecl 0x1291289a8 <line:3:5, col:12> col:12 used timestamps 'char *'   |-ParmVarDecl 0x129128a58 <line:4:5, col:12> col:12 used file_exclude 'char **'   |-ParmVarDecl 0x129128ad8 <line:5:5, col:12> col:12 used file_include 'char **'   |-ParmVarDecl 0x129128b58 <line:6:5, col:12> col:12 used command 'int'   `-CompoundStmt 0x129144650 <line:7:1, line:67:1>     |-DeclStmt 0x129128dd8 <line:8:5, col:30>     | `-VarDecl 0x129128d50 <col:5, col:29> col:16 used nb_exclude 'int' cinit     |   `-IntegerLiteral 0x129128db8 <col:29> 'int' 0     |-DeclStmt 0x129128e90 <line:9:5, col:30>     | `-VarDecl 0x129128e08 <col:5, col:29> col:16 used nb_include 'int' cinit     |   `-IntegerLiteral 0x129128e70 <col:29> 'int' 0     |-DeclStmt 0x129128f28 <line:10:5, col:23>     | `-VarDecl 0x129128ec0 <col:5, col:16> col:16 used dirname 'char *'     |-DeclStmt 0x129128fd0 <line:11:5, col:33>     | `-VarDecl 0x129128f68 <col:5, col:16> col:16 invalid tmppath 'char'     |-CallExpr 0x129142450 <line:15:5, line:17:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1291422e0 <line:15:5> 'int ()' Function 0x129142228 'ambsdtar_build_exinclude' 'int ()'     | |-UnaryOperator 0x129142368 <col:30, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x129142320 <col:31, col:41> '<dependent type>' contains-errors lvalue ->dle     | |   `-RecoveryExpr 0x129142300 <col:31> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x129142380 <col:46> 'int' 1     | |-UnaryOperator 0x1291423c0 <line:16:9, col:10> 'int *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x1291423a0 <col:10> 'int' lvalue Var 0x129128d50 'nb_exclude' 'int'     | |-DeclRefExpr 0x1291423d8 <col:22> 'char **' lvalue ParmVar 0x129128a58 'file_exclude' 'char **'     | |-UnaryOperator 0x129142418 <line:17:9, col:10> 'int *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x1291423f8 <col:10> 'int' lvalue Var 0x129128e08 'nb_include' 'int'     | `-DeclRefExpr 0x129142430 <col:22> 'char **' lvalue ParmVar 0x129128ad8 'file_include' 'char **'     |-IfStmt 0x129142690 <line:19:5, line:23:5> has_else     | |-RecoveryExpr 0x1291424b8 <line:19:9> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x129142570 <col:27, line:21:5>     | | `-BinaryOperator 0x129142550 <line:20:2, col:12> 'char *' contains-errors '='     | |   |-DeclRefExpr 0x1291424d8 <col:2> 'char *' lvalue Var 0x129128ec0 'dirname' 'char *'     | |   `-RecoveryExpr 0x129142530 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129142678 <line:21:12, line:23:5>     |   `-BinaryOperator 0x129142658 <line:22:2, col:26> 'char *' contains-errors '='     |     |-DeclRefExpr 0x129142588 <col:2> 'char *' lvalue Var 0x129128ec0 'dirname' 'char *'     |     `-CXXDependentScopeMemberExpr 0x129142610 <col:12, col:26> '<dependent type>' contains-errors lvalue .device     |       `-CXXDependentScopeMemberExpr 0x1291425c8 <col:12, col:22> '<dependent type>' contains-errors lvalue ->dle     |         `-RecoveryExpr 0x1291425a8 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1291429b0 <line:25:5, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1291427a0 <col:5> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'     | |-RecoveryExpr 0x129142948 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x129142988 <col:31, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1291428b8 <col:31> 'int ()' Function 0x129142800 'g_strdup' 'int ()'     |   `-RecoveryExpr 0x129142968 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x129142ba0 <line:27:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1291429e0 <col:5> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'     | |-RecoveryExpr 0x129142b28 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x129142b60 <col:31, col:45> 'int'     |   |-ImplicitCastExpr 0x129142b48 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x129142a18 <col:31> 'int ()' Function 0x129142800 'g_strdup' 'int ()'     |   `-ImplicitCastExpr 0x129142b88 <col:40> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x129142a80 <col:40> 'char[4]' lvalue \"STR\"     |-CallExpr 0x129142d48 <line:28:5, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129142bd0 <col:5> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'     | |-RecoveryExpr 0x129142cd0 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x129142d08 <col:31, col:45> 'int'     |   |-ImplicitCastExpr 0x129142cf0 <col:31> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x129142c08 <col:31> 'int ()' Function 0x129142800 'g_strdup' 'int ()'     |   `-ImplicitCastExpr 0x129142d30 <col:40> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x129142c28 <col:40> 'char[4]' lvalue \"STR\"     |-IfStmt 0x1291437a0 <line:29:5, line:33:5> has_else     | |-BinaryOperator 0x129142df0 <line:29:9, col:20> 'int' contains-errors '=='     | | |-DeclRefExpr 0x129142d78 <col:9> 'int' lvalue ParmVar 0x129128b58 'command' 'int'     | | `-RecoveryExpr 0x129142dd0 <col:20> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x129142fb8 <col:34, line:31:5>     | | `-CallExpr 0x129142f88 <line:30:9, col:50> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x129142e10 <col:9> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'     | |   |-RecoveryExpr 0x129142f10 <col:25> '<dependent type>' contains-errors lvalue     | |   `-CallExpr 0x129142f48 <col:35, col:49> 'int'     | |     |-ImplicitCastExpr 0x129142f30 <col:35> 'int (*)()' <FunctionToPointerDecay>     | |     | `-DeclRefExpr 0x129142e48 <col:35> 'int ()' Function 0x129142800 'g_strdup' 'int ()'     | |     `-ImplicitCastExpr 0x129142f70 <col:44> 'char *' <ArrayToPointerDecay>     | |       `-StringLiteral 0x129142e68 <col:44> 'char[4]' lvalue \"STR\"     | `-CompoundStmt 0x129143788 <line:31:12, line:33:5>     |   `-CallExpr 0x129143758 <line:32:9, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x129142fd0 <col:9> 'int ()' Function 0x1291426e8 'g_ptr_array_add' 'int ()'     |     |-RecoveryExpr 0x1291436e0 <col:25> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x129143718 <col:35, col:49> 'int'     |       |-ImplicitCastExpr 0x129143700 <col:35> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x129143618 <col:35> 'int ()' Function 0x129142800 'g_strdup' 'int ()'     |       `-ImplicitCastExpr 0x129143740 <col:44> 'char *' <ArrayToPointerDecay>     |         `-StringLiteral 0x129143638 <col:44> 'char[4]' lvalue \"STR\"     |-CallExpr 0x1291439c8 <line:35:5, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x129143968 <col:5> 'int ()' Function 0x1291438b0 'canonicalize_pathname' 'int ()'     | |-DeclRefExpr 0x129143988 <col:27> 'char *' lvalue Var 0x129128ec0 'dirname' 'char *'     | `-RecoveryExpr 0x1291439a8 <col:36> '<dependent type>' contains-errors lvalue     |-IfStmt 0x129143c38 <line:37:5, line:40:5>     | |-ImplicitCastExpr 0x129143aa0 <line:37:9> 'char *' <LValueToRValue>     | | `-DeclRefExpr 0x129143a80 <col:9> 'char *' lvalue ParmVar 0x1291289a8 'timestamps' 'char *'     | `-CompoundStmt 0x129143c28 <col:21, line:40:5>     |-IfStmt 0x129143f30 <line:43:5, line:46:5>     | |-CXXDependentScopeMemberExpr 0x129143d50 <line:43:9, col:19> '<dependent type>' contains-errors lvalue ->tar_blocksize     | | `-RecoveryExpr 0x129143d30 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x129143f20 <col:34, line:46:5>     |-IfStmt 0x1291442d8 <line:53:5, line:56:5>     | |-ImplicitCastExpr 0x129144110 <line:53:9, col:10> 'char *' <LValueToRValue>     | | `-UnaryOperator 0x1291440f8 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow     | |   `-ImplicitCastExpr 0x1291440e0 <col:10> 'char **' <LValueToRValue>     | |     `-DeclRefExpr 0x1291440c0 <col:10> 'char **' lvalue ParmVar 0x129128a58 'file_exclude' 'char **'     | `-CompoundStmt 0x1291442c8 <col:24, line:56:5>     `-IfStmt 0x129144600 <line:58:5, line:63:5> has_else       |-ImplicitCastExpr 0x129144348 <line:58:9, col:10> 'char *' <LValueToRValue>       | `-UnaryOperator 0x129144330 <col:9, col:10> 'char *' lvalue prefix '*' cannot overflow       |   `-ImplicitCastExpr 0x129144318 <col:10> 'char **' <LValueToRValue>       |     `-DeclRefExpr 0x1291442f8 <col:10> 'char **' lvalue ParmVar 0x129128ad8 'file_include' 'char **'       |-CompoundStmt 0x129144500 <col:24, line:61:5>       `-CompoundStmt 0x1291445c8 <col:12, line:63:5> ","19787":"`-FunctionDecl 0x11e922a60  col:8 implicit used strcmp 'int (const char *, const char *)' extern   |-ParmVarDecl 0x11e922b60 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x11e922bc8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x11e922b08 <<invalid sloc>> Implicit 887 ","19427":"`-FunctionDecl 0x14300de88  line:1:5 invalid avahi_server_set_domain_name 'int (int *, const char *)'   |-ParmVarDecl 0x14300dd28 <col:34, col:47> col:47 referenced invalid s 'int *'   |-ParmVarDecl 0x14300dda8 <col:50, col:62> col:62 used domain_name 'const char *'   `-CompoundStmt 0x143027fd0 <col:75, line:27:1>     |-DeclStmt 0x14300dff8 <line:2:5, col:20>     | `-VarDecl 0x14300df58 <col:5, col:16> col:11 used dn 'char *' cinit     |   `-RecoveryExpr 0x14300dfd8 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14300e1b0 <line:3:5, col:13> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14300e170 <col:5> 'int ()' Function 0x14300e0b8 'assert' 'int ()'     | `-RecoveryExpr 0x14300e190 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143808568 <line:5:5, col:115> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14300e2b8 <col:5> 'int ()' Function 0x14300e200 'AVAHI_CHECK_VALIDITY' 'int ()'     | |-RecoveryExpr 0x14300e2d8 <col:26> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x143808528 <col:29, col:83> 'int' '||'     | | |-UnaryOperator 0x1438084b8 <col:29, col:30> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x1438084a0 <col:30> 'const char *' <LValueToRValue>     | | |   `-DeclRefExpr 0x14300e2f8 <col:30> 'const char *' lvalue ParmVar 0x14300dda8 'domain_name' 'const char *'     | | `-CallExpr 0x1438084e8 <col:45, col:83> 'int'     | |   |-ImplicitCastExpr 0x1438084d0 <col:45> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1438082b8 <col:45> 'int ()' Function 0x143808200 'avahi_is_valid_domain_name' 'int ()'     | |   `-ImplicitCastExpr 0x143808510 <col:72> 'const char *' <LValueToRValue>     | |     `-DeclRefExpr 0x1438082d8 <col:72> 'const char *' lvalue ParmVar 0x14300dda8 'domain_name' 'const char *'     | `-RecoveryExpr 0x143808548 <col:86> '<dependent type>' contains-errors lvalue     |-IfStmt 0x143808cd0 <line:7:5, line:10:5>     | |-UnaryOperator 0x1438085d8 <line:7:9, col:10> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1438085c0 <col:10> 'const char *' <LValueToRValue>     | |   `-DeclRefExpr 0x1438085a0 <col:10> 'const char *' lvalue ParmVar 0x14300dda8 'domain_name' 'const char *'     | `-CompoundStmt 0x143808cb0 <col:23, line:10:5>     |   |-BinaryOperator 0x143808c00 <line:8:9, col:32> 'char *' contains-errors '='     |   | |-DeclRefExpr 0x1438085f0 <col:9> 'char *' contains-errors lvalue Var 0x14300df58 'dn' 'char *'     |   | `-ImplicitCastExpr 0x1438087c8 <col:14, col:32> 'char *' <IntegralToPointer>     |   |   `-CallExpr 0x143808788 <col:14, col:32> 'int'     |   |     |-ImplicitCastExpr 0x143808770 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x1438086f0 <col:14> 'int ()' Function 0x143808638 'avahi_strdup' 'int ()'     |   |     `-ImplicitCastExpr 0x1438087b0 <col:27> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x143808750 <col:27> 'char[4]' lvalue \"STR\"     |   `-BinaryOperator 0x143808c90 <line:9:9, col:23> 'const char *' contains-errors '='     |     |-DeclRefExpr 0x143808c20 <col:9> 'const char *' lvalue ParmVar 0x14300dda8 'domain_name' 'const char *'     |     `-ImplicitCastExpr 0x143808c78 <col:23> 'const char *' contains-errors <NoOp>     |       `-ImplicitCastExpr 0x143808c60 <col:23> 'char *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x143808c40 <col:23> 'char *' contains-errors lvalue Var 0x14300df58 'dn' 'char *'     |-IfStmt 0x143027820 <line:12:5, line:15:5>     | |-CallExpr 0x143808e78 <line:12:9, col:55> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x143808dd0 <col:9> 'int ()' Function 0x143808d18 'avahi_domain_equal' 'int ()'     | | |-CXXDependentScopeMemberExpr 0x143808e10 <col:28, col:31> '<dependent type>' contains-errors lvalue ->domain_name     | | | `-RecoveryExpr 0x143808df0 <col:28> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x143808e58 <col:44> 'const char *' lvalue ParmVar 0x14300dda8 'domain_name' 'const char *'     | `-CompoundStmt 0x143027800 <col:58, line:15:5>     |   |-CallExpr 0x143808fe0 <line:13:9, col:22> 'int' contains-errors     |   | |-ImplicitCastExpr 0x143808fc8 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x143808f88 <col:9> 'int ()' Function 0x143808ed0 'avahi_free' 'int ()'     |   | `-ImplicitCastExpr 0x143809008 <col:20> 'char *' contains-errors <LValueToRValue>     |   |   `-DeclRefExpr 0x143808fa8 <col:20> 'char *' contains-errors lvalue Var 0x14300df58 'dn' 'char *'     |   `-ReturnStmt 0x1438091d8 <line:14:9, col:61>     |     `-CallExpr 0x1438091a8 <col:16, col:61> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x143809100 <col:16> 'int ()' Function 0x143809048 'avahi_server_set_errno' 'int ()'     |       |-RecoveryExpr 0x143809120 <col:39> '<dependent type>' contains-errors lvalue     |       `-RecoveryExpr 0x143809188 <col:42> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143027960 <line:17:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143027920 <col:5> 'int ()' Function 0x143027868 'withdraw_host_rrs' 'int ()'     | `-RecoveryExpr 0x143027940 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143027a10 <line:19:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143027988 <col:5> 'int ()' Function 0x143808ed0 'avahi_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1430279c8 <col:16, col:19> '<dependent type>' contains-errors lvalue ->domain_name     |   `-RecoveryExpr 0x1430279a8 <col:16> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x143027c40 <line:20:5, col:61> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x143027a80 <col:5, col:8> '<dependent type>' contains-errors lvalue ->domain_name     | | `-RecoveryExpr 0x143027a58 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x143027a38 <col:5> 'int *' lvalue ParmVar 0x14300dd28 's' 'int *'     | `-CallExpr 0x143027c00 <col:22, col:61> 'int'     |   |-ImplicitCastExpr 0x143027be8 <col:22> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x143027ba8 <col:22> 'int ()' Function 0x143027af0 'avahi_normalize_name_strdup' 'int ()'     |   `-ImplicitCastExpr 0x143027c28 <col:50> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x143027bc8 <col:50> 'const char *' lvalue ParmVar 0x14300dda8 'domain_name' 'const char *'     |-CallExpr 0x143027d80 <line:21:5, col:18> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143027d40 <col:5> 'int ()' Function 0x143027c88 'update_fqdn' 'int ()'     | `-RecoveryExpr 0x143027d60 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143027ec8 <line:23:5, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x143027e88 <col:5> 'int ()' Function 0x143027dd0 'register_stuff' 'int ()'     | `-RecoveryExpr 0x143027ea8 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x143027f48 <line:25:5, col:18> 'int' contains-errors     | |-ImplicitCastExpr 0x143027f30 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x143027ef0 <col:5> 'int ()' Function 0x143808ed0 'avahi_free' 'int ()'     | `-ImplicitCastExpr 0x143027f70 <col:16> 'char *' contains-errors <LValueToRValue>     |   `-DeclRefExpr 0x143027f10 <col:16> 'char *' contains-errors lvalue Var 0x14300df58 'dn' 'char *'     `-ReturnStmt 0x143027fc0 <line:26:5, col:12>       `-RecoveryExpr 0x143027fa0 <col:12> '<dependent type>' contains-errors lvalue ","19880":"`-FunctionDecl 0x14e00ddf0  line:1:13 invalid vnc_disconnect_start 'void (int *)' static   |-ParmVarDecl 0x14e00dd28 <col:34, col:44> col:44 referenced invalid vs 'int *'   `-CompoundStmt 0x14e0276e0 <line:2:1, line:12:1>     |-IfStmt 0x14e00df30 <line:3:5, line:5:5>     | |-CXXDependentScopeMemberExpr 0x14e00dec0 <line:3:9, col:13> '<dependent type>' contains-errors lvalue ->disconnecting     | | `-RecoveryExpr 0x14e00dea0 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e00df18 <col:28, line:5:5>     |   `-ReturnStmt 0x14e00df08 <line:4:9>     |-CallExpr 0x14e00e158 <line:6:5, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e00e0b0 <col:5> 'int ()' Function 0x14e00dff8 'vnc_set_share_mode' 'int ()'     | |-RecoveryExpr 0x14e00e0d0 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14e00e138 <col:28> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e00e398 <line:7:5, line:9:5>     | |-CXXDependentScopeMemberExpr 0x14e00e1a8 <line:7:9, col:13> '<dependent type>' contains-errors lvalue ->ioc_tag     | | `-RecoveryExpr 0x14e00e188 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14e00e380 <col:22, line:9:5>     |   `-CallExpr 0x14e00e358 <line:8:9, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14e00e2d0 <col:9> 'int ()' Function 0x14e00e218 'g_source_remove' 'int ()'     |     `-CXXDependentScopeMemberExpr 0x14e00e310 <col:25, col:29> '<dependent type>' contains-errors lvalue ->ioc_tag     |       `-RecoveryExpr 0x14e00e2f0 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14e0275a8 <line:10:5, col:36> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e0274b8 <col:5> 'int ()' Function 0x14e027400 'qio_channel_close' 'int ()'     | |-CXXDependentScopeMemberExpr 0x14e0274f8 <col:23, col:27> '<dependent type>' contains-errors lvalue ->ioc     | | `-RecoveryExpr 0x14e0274d8 <col:23> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14e027588 <col:32> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x14e0276c0 <line:11:5, col:25> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x14e027620 <col:5, col:9> '<dependent type>' contains-errors lvalue ->disconnecting       | `-RecoveryExpr 0x14e0275f8 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14e0275d8 <col:5> 'int *' lvalue ParmVar 0x14e00dd28 'vs' 'int *'       `-RecoveryExpr 0x14e0276a0 <col:25> '<dependent type>' contains-errors lvalue ","19638":"`-FunctionDecl 0x126140b48  line:1:12 input_add_uevent_modalias_var 'int (struct kobj_uevent_env *, struct input_dev *)' static   |-ParmVarDecl 0x126128648 <col:42, col:66> col:66 used env 'struct kobj_uevent_env *'   |-ParmVarDecl 0x126140a28 <line:2:7, col:25> col:25 used dev 'struct input_dev *'   `-CompoundStmt 0x126141778 <line:3:1, line:17:1>     |-DeclStmt 0x126140cc8 <line:4:2, col:9>     | `-VarDecl 0x126140c60 <col:2, col:6> col:6 used len 'int'     |-IfStmt 0x126141000 <line:6:2, line:7:11>     | |-CallExpr 0x126140ef8 <line:6:6, col:31> 'int'     | | |-ImplicitCastExpr 0x126140ee0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x126140e10 <col:6> 'int ()' Function 0x126140d58 'add_uevent_var' 'int ()'     | | |-ImplicitCastExpr 0x126140f28 <col:21> 'struct kobj_uevent_env *' <LValueToRValue>     | | | `-DeclRefExpr 0x126140e30 <col:21> 'struct kobj_uevent_env *' lvalue ParmVar 0x126128648 'env' 'struct kobj_uevent_env *'     | | `-ImplicitCastExpr 0x126140f40 <col:26> 'char *' <ArrayToPointerDecay>     | |   `-StringLiteral 0x126140e90 <col:26> 'char[4]' lvalue \"STR\"     | `-ReturnStmt 0x126140ff0 <line:7:3, col:11>     |   `-UnaryOperator 0x126140fd8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x126140fc0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x126140fa0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x126141430 <line:9:2, line:11:14> 'int' contains-errors '='     | |-DeclRefExpr 0x126141020 <line:9:2> 'int' lvalue Var 0x126140c60 'len' 'int'     | `-CallExpr 0x1261413f0 <col:8, line:11:14> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x126141120 <line:9:8> 'int ()' Function 0x126141068 'input_print_modalias' 'int ()'     |   |-UnaryOperator 0x126141278 <col:29, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-ArraySubscriptExpr 0x126141258 <col:30, col:54> '<dependent type>' contains-errors lvalue     |   |   |-ImplicitCastExpr 0x126141240 <col:30, col:35> '<dependent type>' contains-errors <LValueToRValue>     |   |   | `-RecoveryExpr 0x126141178 <col:30, col:35> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x126141140 <col:30> 'struct kobj_uevent_env *' lvalue ParmVar 0x126128648 'env' 'struct kobj_uevent_env *'     |   |   `-BinaryOperator 0x126141220 <col:39, col:53> '<dependent type>' contains-errors '-'     |   |     |-RecoveryExpr 0x1261411d8 <col:39, col:44> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x1261411a0 <col:39> 'struct kobj_uevent_env *' lvalue ParmVar 0x126128648 'env' 'struct kobj_uevent_env *'     |   |     `-IntegerLiteral 0x126141200 <col:53> 'int' 1     |   |-BinaryOperator 0x126141390 <line:10:8, col:32> '<dependent type>' contains-errors '-'     |   | |-UnaryExprOrTypeTraitExpr 0x126141310 <col:8, col:23> 'unsigned long' contains-errors sizeof     |   | | `-ParenExpr 0x1261412f0 <col:14, col:23> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x1261412c8 <col:15, col:20> '<dependent type>' contains-errors lvalue     |   | |     `-DeclRefExpr 0x126141290 <col:15> 'struct kobj_uevent_env *' lvalue ParmVar 0x126128648 'env' 'struct kobj_uevent_env *' non_odr_use_unevaluated     |   | `-RecoveryExpr 0x126141368 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x126141330 <col:27> 'struct kobj_uevent_env *' lvalue ParmVar 0x126128648 'env' 'struct kobj_uevent_env *'     |   |-DeclRefExpr 0x1261413b0 <line:11:8> 'struct input_dev *' lvalue ParmVar 0x126140a28 'dev' 'struct input_dev *'     |   `-IntegerLiteral 0x1261413d0 <col:13> 'int' 0     |-IfStmt 0x126141678 <line:12:2, line:13:11>     | |-BinaryOperator 0x1261415b0 <line:12:6, col:44> 'int' contains-errors '>='     | | |-DeclRefExpr 0x126141450 <col:6> 'int' lvalue Var 0x126140c60 'len' 'int'     | | `-ParenExpr 0x126141590 <col:13, col:44> '<dependent type>' contains-errors     | |   `-BinaryOperator 0x126141570 <col:14, col:38> '<dependent type>' contains-errors '-'     | |     |-UnaryExprOrTypeTraitExpr 0x1261414f0 <col:14, col:29> 'unsigned long' contains-errors sizeof     | |     | `-ParenExpr 0x1261414d0 <col:20, col:29> '<dependent type>' contains-errors lvalue     | |     |   `-RecoveryExpr 0x1261414a8 <col:21, col:26> '<dependent type>' contains-errors lvalue     | |     |     `-DeclRefExpr 0x126141470 <col:21> 'struct kobj_uevent_env *' lvalue ParmVar 0x126128648 'env' 'struct kobj_uevent_env *' non_odr_use_unevaluated     | |     `-RecoveryExpr 0x126141548 <col:33, col:38> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x126141510 <col:33> 'struct kobj_uevent_env *' lvalue ParmVar 0x126128648 'env' 'struct kobj_uevent_env *'     | `-ReturnStmt 0x126141668 <line:13:3, col:11>     |   `-UnaryOperator 0x126141650 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x126141638 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x126141618 <col:11> '<dependent type>' contains-errors lvalue     |-CompoundAssignOperator 0x126141718 <line:15:2, col:17> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x1261416d0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x126141698 <col:2> 'struct kobj_uevent_env *' lvalue ParmVar 0x126128648 'env' 'struct kobj_uevent_env *'     | `-DeclRefExpr 0x1261416f8 <col:17> 'int' lvalue Var 0x126140c60 'len' 'int'     `-ReturnStmt 0x126141768 <line:16:2, col:9>       `-IntegerLiteral 0x126141748 <col:9> 'int' 0 ","19407":"`-FunctionDecl 0x1470083e0  line:1:13 fuse_writepage_end 'void (struct fuse_mount *, struct fuse_args *, int)' static   |-ParmVarDecl 0x146124c48 <col:32, col:51> col:51 used fm 'struct fuse_mount *'   |-ParmVarDecl 0x147008228 <col:55, col:73> col:73 used args 'struct fuse_args *'   |-ParmVarDecl 0x1470082a8 <line:2:11, col:15> col:15 used error 'int'   `-CompoundStmt 0x1500093e0 <line:3:1, line:29:1>     |-DeclStmt 0x1470088f0 <line:4:2, line:5:47>     | |-RecordDecl 0x1470084e8 <line:4:2, col:9> col:9 struct fuse_writepage_args     | `-VarDecl 0x147008658 <col:2, col:30> col:30 used wpa 'struct fuse_writepage_args *'     |-DeclStmt 0x147008b58 <line:6:2, col:34>     | |-RecordDecl 0x147008908 <col:2, col:9> col:9 struct inode     | `-VarDecl 0x147008a78 <col:2, col:29> col:16 used inode 'struct inode *' cinit     |   `-RecoveryExpr 0x147008b18 <col:24, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x147008ae0 <col:24> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *'     |-DeclStmt 0x147008f18 <line:7:2, col:47>     | |-RecordDecl 0x147008b70 <col:2, col:9> col:9 struct fuse_inode     | `-VarDecl 0x147008cd8 <col:2, col:46> col:21 used fi 'struct fuse_inode *' cinit     |   `-ImplicitCastExpr 0x147008ee8 <col:26, col:46> 'struct fuse_inode *' contains-errors <IntegralToPointer>     |     `-CallExpr 0x147008ea8 <col:26, col:46> 'int' contains-errors     |       |-ImplicitCastExpr 0x147008e90 <col:26> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x147008e20 <col:26> 'int ()' Function 0x147008d68 'get_fuse_inode' 'int ()'     |       `-ImplicitCastExpr 0x147008ed0 <col:41> 'struct inode *' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x147008e40 <col:41> 'struct inode *' contains-errors lvalue Var 0x147008a78 'inode' 'struct inode *'     |-CallExpr 0x1470090b0 <line:9:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x147009010 <col:2> 'int ()' Function 0x147008f58 'mapping_set_error' 'int ()'     | |-RecoveryExpr 0x147009068 <col:20, col:27> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x147009030 <col:20> 'struct inode *' contains-errors lvalue Var 0x147008a78 'inode' 'struct inode *'     | `-DeclRefExpr 0x147009090 <col:38> 'int' lvalue ParmVar 0x1470082a8 'error' 'int'     |-CallExpr 0x14613d058 <line:10:2, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1470091c0 <col:2> 'int ()' Function 0x147009108 'spin_lock' 'int ()'     | `-UnaryOperator 0x14613d040 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14613d018 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1470091e0 <col:13> 'struct fuse_inode *' contains-errors lvalue Var 0x147008cd8 'fi' 'struct fuse_inode *'     |-CallExpr 0x14613d270 <line:11:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14613d160 <col:2> 'int ()' Function 0x14613d0a8 'rb_erase' 'int ()'     | |-UnaryOperator 0x14613d1e0 <col:11, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x14613d1b8 <col:12, col:17> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14613d180 <col:12> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *'     | `-UnaryOperator 0x14613d258 <col:35, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14613d230 <col:36, col:40> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14613d1f8 <col:36> 'struct fuse_inode *' contains-errors lvalue Var 0x147008cd8 'fi' 'struct fuse_inode *'     |-WhileStmt 0x150008e78 <line:12:2, line:24:2>     | |-RecoveryExpr 0x14613d2d8 <line:12:9, col:14> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14613d2a0 <col:9> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *'     | `-CompoundStmt 0x150008e30 <col:20, line:24:2>     |   |-DeclStmt 0x14613d580 <line:13:3, col:48>     |   | `-VarDecl 0x14613d388 <col:3, col:47> col:22 used fm 'struct fuse_mount *' cinit     |   |   `-ImplicitCastExpr 0x14613d568 <col:27, col:47> 'struct fuse_mount *' contains-errors <IntegralToPointer>     |   |     `-CallExpr 0x14613d528 <col:27, col:47> 'int' contains-errors     |   |       |-ImplicitCastExpr 0x14613d510 <col:27> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x14613d4d0 <col:27> 'int ()' Function 0x14613d418 'get_fuse_mount' 'int ()'     |   |       `-ImplicitCastExpr 0x14613d550 <col:42> 'struct inode *' contains-errors <LValueToRValue>     |   |         `-DeclRefExpr 0x14613d4f0 <col:42> 'struct inode *' contains-errors lvalue Var 0x147008a78 'inode' 'struct inode *'     |   |-DeclStmt 0x14613d890 <line:14:3, col:50>     |   | |-RecordDecl 0x14613d598 <col:3, col:10> col:10 struct fuse_write_in     |   | `-VarDecl 0x14613d708 <col:3, col:48> col:25 used inarg 'struct fuse_write_in *' cinit     |   |   `-UnaryOperator 0x14613d860 <col:33, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-CXXDependentScopeMemberExpr 0x14613d818 <col:34, col:48> '<dependent type>' contains-errors lvalue .in     |   |       `-CXXDependentScopeMemberExpr 0x14613d7d0 <col:34, col:42> '<dependent type>' contains-errors lvalue .write     |   |         `-RecoveryExpr 0x14613d7a8 <col:34, col:39> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x14613d770 <col:34> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *'     |   |-DeclStmt 0x14613da00 <line:15:3, col:47>     |   | `-VarDecl 0x14613d938 <col:3, col:43> col:31 used next 'struct fuse_writepage_args *' cinit     |   |   `-RecoveryExpr 0x14613d9d8 <col:38, col:43> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x14613d9a0 <col:38> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *'     |   |-BinaryOperator 0x14613dad8 <line:17:3, col:21> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x14613da50 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14613da18 <col:3> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *'     |   | `-RecoveryExpr 0x14613dab0 <col:15, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14613da78 <col:15> 'struct fuse_writepage_args *' contains-errors lvalue Var 0x14613d938 'next' 'struct fuse_writepage_args *'     |   |-BinaryOperator 0x14613ddd0 <line:19:3, col:41> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14613dbb8 <col:3, col:12> '<dependent type>' contains-errors lvalue .ff     |   | | `-RecoveryExpr 0x14613db90 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14613db58 <col:3> 'struct fuse_writepage_args *' contains-errors lvalue Var 0x14613d938 'next' 'struct fuse_writepage_args *'     |   | `-CallExpr 0x14613dda8 <col:17, col:41> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14613dce0 <col:17> 'int ()' Function 0x14613dc28 'fuse_file_get' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x14613dd60 <col:31, col:39> '<dependent type>' contains-errors lvalue .ff     |   |     `-RecoveryExpr 0x14613dd38 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   |       `-DeclRefExpr 0x14613dd00 <col:31> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *'     |   |-CallExpr 0x14613df88 <line:20:3, col:36> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14613ded0 <col:3> 'int ()' Function 0x14613de18 'tree_insert' 'int ()'     |   | |-UnaryOperator 0x14613df50 <col:15, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-RecoveryExpr 0x14613df28 <col:16, col:20> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14613def0 <col:16> 'struct fuse_inode *' contains-errors lvalue Var 0x147008cd8 'fi' 'struct fuse_inode *'     |   | `-DeclRefExpr 0x14613df68 <col:32> 'struct fuse_writepage_args *' contains-errors lvalue Var 0x14613d938 'next' 'struct fuse_writepage_args *'     |   `-CallExpr 0x150008df8 <line:23:3, col:60> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x150008cb8 <col:3> 'int ()' Function 0x150008c00 'fuse_send_writepage' 'int ()'     |     |-DeclRefExpr 0x150008cd8 <col:23> 'struct fuse_mount *' contains-errors lvalue Var 0x14613d388 'fm' 'struct fuse_mount *'     |     |-DeclRefExpr 0x150008cf8 <col:27> 'struct fuse_writepage_args *' contains-errors lvalue Var 0x14613d938 'next' 'struct fuse_writepage_args *'     |     `-BinaryOperator 0x150008dd8 <col:33, col:56> '<dependent type>' contains-errors '+'     |       |-RecoveryExpr 0x150008d50 <col:33, col:40> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x150008d18 <col:33> 'struct fuse_write_in *' contains-errors lvalue Var 0x14613d708 'inarg' 'struct fuse_write_in *'     |       `-RecoveryExpr 0x150008db0 <col:49, col:56> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x150008d78 <col:49> 'struct fuse_write_in *' contains-errors lvalue Var 0x14613d708 'inarg' 'struct fuse_write_in *'     |-UnaryOperator 0x150008ef8 <line:25:2, col:14> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x150008ed0 <col:2, col:6> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x150008e98 <col:2> 'struct fuse_inode *' contains-errors lvalue Var 0x147008cd8 'fi' 'struct fuse_inode *'     |-CallExpr 0x150009068 <line:26:2, col:31> 'int'     | |-ImplicitCastExpr 0x150009050 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x150008ff0 <col:2> 'int ()' Function 0x150008f38 'fuse_writepage_finish' 'int ()'     | |-ImplicitCastExpr 0x150009098 <col:24> 'struct fuse_mount *' <LValueToRValue>     | | `-DeclRefExpr 0x150009010 <col:24> 'struct fuse_mount *' lvalue ParmVar 0x146124c48 'fm' 'struct fuse_mount *'     | `-ImplicitCastExpr 0x1500090b0 <col:28> 'struct fuse_writepage_args *' <LValueToRValue>     |   `-DeclRefExpr 0x150009030 <col:28> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *'     |-CallExpr 0x150009240 <line:27:2, col:23> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1500091a8 <col:2> 'int ()' Function 0x1500090f0 'spin_unlock' 'int ()'     | `-UnaryOperator 0x150009228 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x150009200 <col:15, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1500091c8 <col:15> 'struct fuse_inode *' contains-errors lvalue Var 0x147008cd8 'fi' 'struct fuse_inode *'     `-CallExpr 0x1500093a0 <line:28:2, col:25> 'int'       |-ImplicitCastExpr 0x150009388 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x150009348 <col:2> 'int ()' Function 0x150009290 'fuse_writepage_free' 'int ()'       `-ImplicitCastExpr 0x1500093c8 <col:22> 'struct fuse_writepage_args *' <LValueToRValue>         `-DeclRefExpr 0x150009368 <col:22> 'struct fuse_writepage_args *' lvalue Var 0x147008658 'wpa' 'struct fuse_writepage_args *' ","19856":"`-FunctionDecl 0x144928c38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x144928b58 <col:8> col:8 RouterTest 'int'   |-ParmVarDecl 0x144928ad8 <col:20> col:20 UpstreamPerTryIdleTimeoutSuccess 'int'   `-CompoundStmt 0x1449439a0 <col:54, line:57:1>     |-RecoveryExpr 0x144928db0 <line:8:3> '<dependent type>' contains-errors lvalue     `-RecoveryExpr 0x144928e00 <line:9:3> '<dependent type>' contains-errors lvalue ","20018":"`-FunctionDecl 0x1248dc540  line:1:13 io_ring_file_put 'void (struct io_ring_ctx *, struct file *)' static   |-ParmVarDecl 0x1248c4048 <col:30, col:50> col:50 ctx 'struct io_ring_ctx *'   |-ParmVarDecl 0x1248dc428 <col:55, col:68> col:68 used file 'struct file *'   `-CompoundStmt 0x1248dc838 <line:2:1, line:58:1>     `-CallExpr 0x1248dc7f8 <line:56:2, col:11> 'int'       |-ImplicitCastExpr 0x1248dc7e0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x1248dc770 <col:2> 'int ()' Function 0x1248dc6b8 'fput' 'int ()'       `-ImplicitCastExpr 0x1248dc820 <col:7> 'struct file *' <LValueToRValue>         `-DeclRefExpr 0x1248dc790 <col:7> 'struct file *' lvalue ParmVar 0x1248dc428 'file' 'struct file *' ","19533":"`-FunctionDecl 0x12680e358  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12680e458 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12680e400 <<invalid sloc>> Implicit 873 ","19605":"`-FunctionDecl 0x14e928258  line:1:7 invalid Sys_LoadDll 'void *(const char *, int)'   |-ParmVarDecl 0x14e9280d8 <col:19, col:31> col:31 used name 'const char *'   |-ParmVarDecl 0x14e928170 <col:37, col:46> col:46 invalid useSystemLib 'int'   `-CompoundStmt 0x14e943580 <line:2:1, line:41:1>     |-DeclStmt 0x14e928390 <line:3:2, col:17>     | `-VarDecl 0x14e928328 <col:2, col:8> col:8 used dllhandle 'void *'     |-IfStmt 0x14e928668 <line:5:2, line:6:25>     | |-RecoveryExpr 0x14e9283a8 <line:5:5> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14e928608 <line:6:3, col:25> 'int'     |   |-ImplicitCastExpr 0x14e9285f0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e928520 <col:3> 'int ()' Function 0x14e928468 'Com_Printf' 'int ()'     |   |-ImplicitCastExpr 0x14e928638 <col:14> 'char *' <ArrayToPointerDecay>     |   | `-StringLiteral 0x14e928580 <col:14> 'char[4]' lvalue \"STR\"     |   `-ImplicitCastExpr 0x14e928650 <col:21> 'const char *' <LValueToRValue>     |     `-DeclRefExpr 0x14e9285a0 <col:21> 'const char *' lvalue ParmVar 0x14e9280d8 'name' 'const char *'     |-IfStmt 0x14e943518 <line:8:2, line:38:2>     | |-BinaryOperator 0x14e941d08 <line:8:5, col:57> 'int' contains-errors '||'     | | |-UnaryOperator 0x14e9286c0 <col:5, col:6> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x14e9286a8 <col:6> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x14e928688 <col:6> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x14e941cf0 <col:22, col:57> 'int' prefix '!' cannot overflow     | |   `-ParenExpr 0x14e941cd0 <col:23, col:57> 'void *'     | |     `-BinaryOperator 0x14e941cb0 <col:24, col:56> 'void *' '='     | |       |-DeclRefExpr 0x14e9286d8 <col:24> 'void *' lvalue Var 0x14e928328 'dllhandle' 'void *'     | |       `-ImplicitCastExpr 0x14e941878 <col:36, col:56> 'void *' <IntegralToPointer>     | |         `-CallExpr 0x14e941838 <col:36, col:56> 'int'     | |           |-ImplicitCastExpr 0x14e941820 <col:36> 'int (*)()' <FunctionToPointerDecay>     | |           | `-DeclRefExpr 0x14e9287d8 <col:36> 'int ()' Function 0x14e928720 'Sys_LoadLibrary' 'int ()'     | |           `-ImplicitCastExpr 0x14e941860 <col:52> 'const char *' <LValueToRValue>     | |             `-DeclRefExpr 0x14e941800 <col:52> 'const char *' lvalue ParmVar 0x14e9280d8 'name' 'const char *'     | `-CompoundStmt 0x14e9434d0 <line:9:2, line:38:2>     |   |-DeclStmt 0x14e941da8 <line:10:3, col:21>     |   | `-VarDecl 0x14e941d40 <col:3, col:15> col:15 used topDir 'const char *'     |   |-DeclStmt 0x14e941e50 <line:11:3, col:27>     |   | `-VarDecl 0x14e941de8 <col:3, col:8> col:8 invalid libPath 'char'     |   |-BinaryOperator 0x14e941fd8 <line:13:3, col:27> 'const char *' '='     |   | |-DeclRefExpr 0x14e941e68 <col:3> 'const char *' lvalue Var 0x14e941d40 'topDir' 'const char *'     |   | `-ImplicitCastExpr 0x14e941fc0 <col:12, col:27> 'const char *' <IntegralToPointer>     |   |   `-CallExpr 0x14e941fa0 <col:12, col:27> 'int'     |   |     `-ImplicitCastExpr 0x14e941f88 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   |       `-DeclRefExpr 0x14e941f68 <col:12> 'int ()' Function 0x14e941eb0 'Sys_BinaryPath' 'int ()'     |   |-IfStmt 0x14e942108 <line:15:3, line:16:13>     |   | |-UnaryOperator 0x14e942060 <line:15:6, col:8> 'int' prefix '!' cannot overflow     |   | | `-ImplicitCastExpr 0x14e942048 <col:7, col:8> 'char' <LValueToRValue>     |   | |   `-UnaryOperator 0x14e942030 <col:7, col:8> 'const char' lvalue prefix '*' cannot overflow     |   | |     `-ImplicitCastExpr 0x14e942018 <col:8> 'const char *' <LValueToRValue>     |   | |       `-DeclRefExpr 0x14e941ff8 <col:8> 'const char *' lvalue Var 0x14e941d40 'topDir' 'const char *'     |   | `-BinaryOperator 0x14e9420e8 <line:16:4, col:13> 'const char *' '='     |   |   |-DeclRefExpr 0x14e942078 <col:4> 'const char *' lvalue Var 0x14e941d40 'topDir' 'const char *'     |   |   `-ImplicitCastExpr 0x14e9420d0 <col:13> 'const char *' <NoOp>     |   |     `-ImplicitCastExpr 0x14e9420b8 <col:13> 'char *' <ArrayToPointerDecay>     |   |       `-StringLiteral 0x14e942098 <col:13> 'char[4]' lvalue \"STR\"     |   |-CallExpr 0x14e9421c0 <line:18:3, col:33> 'int'     |   | |-ImplicitCastExpr 0x14e9421a8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14e942128 <col:3> 'int ()' Function 0x14e928468 'Com_Printf' 'int ()'     |   | |-ImplicitCastExpr 0x14e9421f8 <col:14> 'char *' <ArrayToPointerDecay>     |   | | `-StringLiteral 0x14e942148 <col:14> 'char[4]' lvalue \"STR\"     |   | |-ImplicitCastExpr 0x14e942210 <col:21> 'const char *' <LValueToRValue>     |   | | `-DeclRefExpr 0x14e942168 <col:21> 'const char *' lvalue ParmVar 0x14e9280d8 'name' 'const char *'     |   | `-ImplicitCastExpr 0x14e942228 <col:27> 'const char *' <LValueToRValue>     |   |   `-DeclRefExpr 0x14e942188 <col:27> 'const char *' lvalue Var 0x14e941d40 'topDir' 'const char *'     |   |-CallExpr 0x14e9424a8 <line:19:3, col:70> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14e942320 <col:3> 'int ()' Function 0x14e942268 'Com_sprintf' 'int ()'     |   | |-RecoveryExpr 0x14e942340 <col:15> '<dependent type>' contains-errors lvalue     |   | |-UnaryExprOrTypeTraitExpr 0x14e9423a0 <col:24, col:38> 'unsigned long' contains-errors sizeof     |   | | `-ParenExpr 0x14e942380 <col:30, col:38> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x14e942360 <col:31> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14e9423c0 <col:41> 'char[4]' lvalue \"STR\"     |   | |-DeclRefExpr 0x14e9423e0 <col:48> 'const char *' lvalue Var 0x14e941d40 'topDir' 'const char *'     |   | |-RecoveryExpr 0x14e942488 <col:56> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14e942418 <col:66> 'const char *' lvalue ParmVar 0x14e9280d8 'name' 'const char *'     |   `-IfStmt 0x14e9434b0 <line:21:3, line:37:3>     |     |-UnaryOperator 0x14e9425c0 <line:21:6, col:44> 'int' contains-errors prefix '!' cannot overflow     |     | `-ParenExpr 0x14e9425a0 <col:7, col:44> 'void *' contains-errors     |     |   `-BinaryOperator 0x14e942580 <col:8, col:43> 'void *' contains-errors '='     |     |     |-DeclRefExpr 0x14e9424f8 <col:8> 'void *' lvalue Var 0x14e928328 'dllhandle' 'void *'     |     |     `-CallExpr 0x14e942558 <col:20, col:43> '<dependent type>' contains-errors     |     |       |-DeclRefExpr 0x14e942518 <col:20> 'int ()' Function 0x14e928720 'Sys_LoadLibrary' 'int ()'     |     |       `-RecoveryExpr 0x14e942538 <col:36> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x14e943480 <line:22:3, line:37:3>     |       |-DeclStmt 0x14e9427e8 <line:23:4, col:53>     |       | `-VarDecl 0x14e9425f0 <col:4, col:52> col:16 used basePath 'const char *' cinit     |       |   `-ImplicitCastExpr 0x14e9427d0 <col:27, col:52> 'const char *' <IntegralToPointer>     |       |     `-CallExpr 0x14e942790 <col:27, col:52> 'int'     |       |       |-ImplicitCastExpr 0x14e942778 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       |       | `-DeclRefExpr 0x14e942738 <col:27> 'int ()' Function 0x14e942680 'Cvar_VariableString' 'int ()'     |       |       `-ImplicitCastExpr 0x14e9427b8 <col:47> 'char *' <ArrayToPointerDecay>     |       |         `-StringLiteral 0x14e942758 <col:47> 'char[4]' lvalue \"STR\"     |       |-IfStmt 0x14e942d80 <line:25:4, line:26:16>     |       | |-BinaryOperator 0x14e942cd0 <line:25:7, col:22> 'int' '||'     |       | | |-UnaryOperator 0x14e942c38 <col:7, col:8> 'int' prefix '!' cannot overflow     |       | | | `-ImplicitCastExpr 0x14e942c20 <col:8> 'const char *' <LValueToRValue>     |       | | |   `-DeclRefExpr 0x14e942c00 <col:8> 'const char *' lvalue Var 0x14e9425f0 'basePath' 'const char *'     |       | | `-UnaryOperator 0x14e942cb8 <col:20, col:22> 'int' prefix '!' cannot overflow     |       | |   `-ImplicitCastExpr 0x14e942ca0 <col:21, col:22> 'char' <LValueToRValue>     |       | |     `-UnaryOperator 0x14e942c88 <col:21, col:22> 'const char' lvalue prefix '*' cannot overflow     |       | |       `-ImplicitCastExpr 0x14e942c70 <col:22> 'const char *' <LValueToRValue>     |       | |         `-DeclRefExpr 0x14e942c50 <col:22> 'const char *' lvalue Var 0x14e9425f0 'basePath' 'const char *'     |       | `-BinaryOperator 0x14e942d60 <line:26:5, col:16> 'const char *' '='     |       |   |-DeclRefExpr 0x14e942cf0 <col:5> 'const char *' lvalue Var 0x14e9425f0 'basePath' 'const char *'     |       |   `-ImplicitCastExpr 0x14e942d48 <col:16> 'const char *' <NoOp>     |       |     `-ImplicitCastExpr 0x14e942d30 <col:16> 'char *' <ArrayToPointerDecay>     |       |       `-StringLiteral 0x14e942d10 <col:16> 'char[4]' lvalue \"STR\"     |       |-IfStmt 0x14e943318 <line:28:4, line:33:4>     |       | |-CallExpr 0x14e942ef8 <line:28:7, col:42> 'int'     |       | | |-ImplicitCastExpr 0x14e942ee0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |       | | | `-DeclRefExpr 0x14e942e80 <col:7> 'int ()' Function 0x14e942dc8 'FS_FilenameCompare' 'int ()'     |       | | |-ImplicitCastExpr 0x14e942f28 <col:26> 'const char *' <LValueToRValue>     |       | | | `-DeclRefExpr 0x14e942ea0 <col:26> 'const char *' lvalue Var 0x14e941d40 'topDir' 'const char *'     |       | | `-ImplicitCastExpr 0x14e942f40 <col:34> 'const char *' <LValueToRValue>     |       | |   `-DeclRefExpr 0x14e942ec0 <col:34> 'const char *' lvalue Var 0x14e9425f0 'basePath' 'const char *'     |       | `-CompoundStmt 0x14e9432f0 <line:29:4, line:33:4>     |       |   |-CallExpr 0x14e942ff0 <line:30:5, col:37> 'int'     |       |   | |-ImplicitCastExpr 0x14e942fd8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |       |   | | `-DeclRefExpr 0x14e942f58 <col:5> 'int ()' Function 0x14e928468 'Com_Printf' 'int ()'     |       |   | |-ImplicitCastExpr 0x14e943028 <col:16> 'char *' <ArrayToPointerDecay>     |       |   | | `-StringLiteral 0x14e942f78 <col:16> 'char[4]' lvalue \"STR\"     |       |   | |-ImplicitCastExpr 0x14e943040 <col:23> 'const char *' <LValueToRValue>     |       |   | | `-DeclRefExpr 0x14e942f98 <col:23> 'const char *' lvalue ParmVar 0x14e9280d8 'name' 'const char *'     |       |   | `-ImplicitCastExpr 0x14e943058 <col:29> 'const char *' <LValueToRValue>     |       |   |   `-DeclRefExpr 0x14e942fb8 <col:29> 'const char *' lvalue Var 0x14e9425f0 'basePath' 'const char *'     |       |   |-CallExpr 0x14e9431f8 <line:31:5, col:74> '<dependent type>' contains-errors     |       |   | |-DeclRefExpr 0x14e943070 <col:5> 'int ()' Function 0x14e942268 'Com_sprintf' 'int ()'     |       |   | |-RecoveryExpr 0x14e943090 <col:17> '<dependent type>' contains-errors lvalue     |       |   | |-UnaryExprOrTypeTraitExpr 0x14e9430f0 <col:26, col:40> 'unsigned long' contains-errors sizeof     |       |   | | `-ParenExpr 0x14e9430d0 <col:32, col:40> '<dependent type>' contains-errors lvalue     |       |   | |   `-RecoveryExpr 0x14e9430b0 <col:33> '<dependent type>' contains-errors lvalue     |       |   | |-StringLiteral 0x14e943110 <col:43> 'char[4]' lvalue \"STR\"     |       |   | |-DeclRefExpr 0x14e943130 <col:50> 'const char *' lvalue Var 0x14e9425f0 'basePath' 'const char *'     |       |   | |-RecoveryExpr 0x14e9431d8 <col:60> '<dependent type>' contains-errors lvalue     |       |   | `-DeclRefExpr 0x14e943168 <col:70> 'const char *' lvalue ParmVar 0x14e9280d8 'name' 'const char *'     |       |   `-BinaryOperator 0x14e9432d0 <line:32:5, col:40> 'void *' contains-errors '='     |       |     |-DeclRefExpr 0x14e943248 <col:5> 'void *' lvalue Var 0x14e928328 'dllhandle' 'void *'     |       |     `-CallExpr 0x14e9432a8 <col:17, col:40> '<dependent type>' contains-errors     |       |       |-DeclRefExpr 0x14e943268 <col:17> 'int ()' Function 0x14e928720 'Sys_LoadLibrary' 'int ()'     |       |       `-RecoveryExpr 0x14e943288 <col:33> '<dependent type>' contains-errors lvalue     |       `-IfStmt 0x14e943460 <line:35:4, line:36:27>     |         |-UnaryOperator 0x14e943370 <line:35:7, col:8> 'int' prefix '!' cannot overflow     |         | `-ImplicitCastExpr 0x14e943358 <col:8> 'void *' <LValueToRValue>     |         |   `-DeclRefExpr 0x14e943338 <col:8> 'void *' lvalue Var 0x14e928328 'dllhandle' 'void *'     |         `-CallExpr 0x14e943400 <line:36:5, col:27> 'int'     |           |-ImplicitCastExpr 0x14e9433e8 <col:5> 'int (*)()' <FunctionToPointerDecay>     |           | `-DeclRefExpr 0x14e943388 <col:5> 'int ()' Function 0x14e928468 'Com_Printf' 'int ()'     |           |-ImplicitCastExpr 0x14e943430 <col:16> 'char *' <ArrayToPointerDecay>     |           | `-StringLiteral 0x14e9433a8 <col:16> 'char[4]' lvalue \"STR\"     |           `-ImplicitCastExpr 0x14e943448 <col:23> 'const char *' <LValueToRValue>     |             `-DeclRefExpr 0x14e9433c8 <col:23> 'const char *' lvalue ParmVar 0x14e9280d8 'name' 'const char *'     `-ReturnStmt 0x14e943570 <line:40:2, col:9>       `-ImplicitCastExpr 0x14e943558 <col:9> 'void *' <LValueToRValue>         `-DeclRefExpr 0x14e943538 <col:9> 'void *' lvalue Var 0x14e928328 'dllhandle' 'void *' ","19557":"`-FunctionDecl 0x1468083f8  line:1:1 bgp_attr_aspath_check 'int (struct peer *, struct attr *, char)'   |-ParmVarDecl 0x14600e248 <col:24, col:37> col:37 used peer 'struct peer *'   |-ParmVarDecl 0x146808228 <col:43, col:56> col:56 used attr 'struct attr *'   |-ParmVarDecl 0x1468082b8 <col:62, col:69> col:69 used flag 'char'   `-CompoundStmt 0x146809d90 <line:2:1, line:44:1>     |-DeclStmt 0x146808748 <line:4:3, col:30>     | |-RecordDecl 0x146808500 <col:3, col:10> col:10 struct bgp     | `-VarDecl 0x146808668 <col:3, col:27> col:15 used bgp 'struct bgp *' cinit     |   `-RecoveryExpr 0x146808708 <col:21, col:27> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1468086d0 <col:21> 'struct peer *' lvalue ParmVar 0x14600e248 'peer' 'struct peer *'     |-DeclStmt 0x146808948 <line:5:3, col:24>     | |-RecordDecl 0x146808760 <col:3, col:10> col:10 struct aspath     | `-VarDecl 0x1468088c8 <col:3, col:18> col:18 used aspath 'struct aspath *'     |-BinaryOperator 0x1468089e0 <line:7:3, col:15> 'struct bgp *' contains-errors '='     | |-DeclRefExpr 0x146808960 <col:3> 'struct bgp *' contains-errors lvalue Var 0x146808668 'bgp' 'struct bgp *'     | `-RecoveryExpr 0x1468089b8 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x146808980 <col:9> 'struct peer *' lvalue ParmVar 0x14600e248 'peer' 'struct peer *'     |-IfStmt 0x14602ced8 <line:10:3, line:17:5>     | |-RecoveryExpr 0x1468090f8 <line:10:7, line:11:78> '_Bool' contains-errors     | `-CompoundStmt 0x14602ceb8 <line:12:5, line:17:5>     |   |-CallExpr 0x14602cbc0 <line:13:7, col:50> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14602ca00 <col:7> 'int ()' Function 0x146809140 'zlog' 'int ()'     |   | |-RecoveryExpr 0x14602ca58 <col:13, col:19> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x14602ca20 <col:13> 'struct peer *' lvalue ParmVar 0x14600e248 'peer' 'struct peer *'     |   | |-RecoveryExpr 0x14602cba0 <col:24> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14602cae0 <col:33> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x14602cb38 <col:40, col:46> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14602cb00 <col:40> 'struct peer *' lvalue ParmVar 0x14600e248 'peer' 'struct peer *'     |   `-ReturnStmt 0x14602cea8 <line:14:7, line:16:41>     |     `-CallExpr 0x14602ce58 <line:14:14, line:16:41> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x14602cce0 <line:14:14> 'int ()' Function 0x14602cc28 'bgp_attr_malformed' 'int ()'     |       |-DeclRefExpr 0x14602cd00 <col:34> 'struct peer *' lvalue ParmVar 0x14600e248 'peer' 'struct peer *'     |       |-RecoveryExpr 0x14602cdf8 <col:40> '<dependent type>' contains-errors lvalue     |       |-DeclRefExpr 0x14602cd38 <col:58> 'char' lvalue ParmVar 0x1468082b8 'flag' 'char'     |       |-RecoveryExpr 0x14602ce18 <line:15:34> '<dependent type>' contains-errors lvalue     |       |-RecoveryExpr 0x14602ce38 <line:16:34> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x14602cd88 <col:40> 'int' 0     |-IfStmt 0x14602d578 <line:20:3, line:31:5>     | |-RecoveryExpr 0x14602d070 <line:20:7, col:68> '_Bool' contains-errors     | `-CompoundStmt 0x14602d560 <line:21:5, line:31:5>     |   `-IfStmt 0x14602d540 <line:22:7, line:30:3>     |     |-RecoveryExpr 0x14602d330 <line:22:11, line:23:53> '_Bool' contains-errors     |     `-CompoundStmt 0x14602d530 <line:24:3, line:30:3>     `-IfStmt 0x146809d70 <line:34:3, line:41:5>       |-RecoveryExpr 0x14602d758 <line:34:7, line:35:63> '_Bool' contains-errors       `-CompoundStmt 0x146809d40 <line:36:5, line:41:5>         |-BinaryOperator 0x14602d920 <line:37:7, col:40> 'struct aspath *' contains-errors '='         | |-DeclRefExpr 0x14602d778 <col:7> 'struct aspath *' lvalue Var 0x1468088c8 'aspath' 'struct aspath *'         | `-CallExpr 0x14602d8f8 <col:16, col:40> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x14602d878 <col:16> 'int ()' Function 0x14602d7c0 'aspath_dup' 'int ()'         |   `-RecoveryExpr 0x14602d8d0 <col:28, col:34> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x14602d898 <col:28> 'struct attr *' lvalue ParmVar 0x146808228 'attr' 'struct attr *'         |-BinaryOperator 0x146809988 <line:38:7, col:61> 'struct aspath *' contains-errors '='         | |-DeclRefExpr 0x14602d940 <col:7> 'struct aspath *' lvalue Var 0x1468088c8 'aspath' 'struct aspath *'         | `-CallExpr 0x146809958 <col:16, col:61> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1468098b8 <col:16> 'int ()' Function 0x146809800 'aspath_add_seq' 'int ()'         |   |-DeclRefExpr 0x1468098d8 <col:32> 'struct aspath *' lvalue Var 0x1468088c8 'aspath' 'struct aspath *'         |   `-RecoveryExpr 0x146809930 <col:40, col:46> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x1468098f8 <col:40> 'struct peer *' lvalue ParmVar 0x14600e248 'peer' 'struct peer *'         |-CallExpr 0x146809b20 <line:39:7, col:37> '<dependent type>' contains-errors         | |-DeclRefExpr 0x146809a88 <col:7> 'int ()' Function 0x1468099d0 'aspath_unintern' 'int ()'         | `-UnaryOperator 0x146809b08 <col:24, col:31> '<dependent type>' contains-errors prefix '&' cannot overflow         |   `-RecoveryExpr 0x146809ae0 <col:25, col:31> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x146809aa8 <col:25> 'struct attr *' lvalue ParmVar 0x146808228 'attr' 'struct attr *'         `-BinaryOperator 0x146809d20 <line:40:7, col:43> '<dependent type>' contains-errors '='           |-RecoveryExpr 0x146809b80 <col:7, col:13> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x146809b48 <col:7> 'struct attr *' lvalue ParmVar 0x146808228 'attr' 'struct attr *'           `-CallExpr 0x146809ce0 <col:22, col:43> 'int'             |-ImplicitCastExpr 0x146809cc8 <col:22> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x146809c88 <col:22> 'int ()' Function 0x146809bd0 'aspath_intern' 'int ()'             `-ImplicitCastExpr 0x146809d08 <col:37> 'struct aspath *' <LValueToRValue>               `-DeclRefExpr 0x146809ca8 <col:37> 'struct aspath *' lvalue Var 0x1468088c8 'aspath' 'struct aspath *' ","19618":"`-FunctionDecl 0x1491283a8  line:1:8 invalid ms_deliver_verify_authorizer 'int (int *, int, int, int)'   |-ParmVarDecl 0x149128128 <col:37, col:49> col:49 invalid con 'int *'   |-ParmVarDecl 0x1491281a8 <col:54, col:58> col:58 used peer_type 'int'   |-ParmVarDecl 0x149128228 <line:2:9, col:13> col:13 used protocol 'int'   |-ParmVarDecl 0x1491282a8 <col:23, <invalid sloc>> col:33 invalid 'int'   `-CompoundStmt 0x149141888 <line:3:48, line:11:3>     `-ForStmt 0x149141838 <line:4:5, line:9:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x149128600 <line:5:3, col:24> 'int' contains-errors '!='       | |-RecoveryExpr 0x149128558 <col:3> '<dependent type>' contains-errors lvalue       | `-CallExpr 0x1491285e0 <col:8, col:24> '<dependent type>' contains-errors       |   `-CXXDependentScopeMemberExpr 0x149128598 <col:8, col:20> '<dependent type>' contains-errors lvalue .end       |     `-RecoveryExpr 0x149128578 <col:8> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x149128670 <line:6:3, col:5> '<dependent type>' contains-errors prefix '++' cannot overflow       | `-RecoveryExpr 0x149128650 <col:5> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x149141820 <col:8, line:9:5>         `-IfStmt 0x149141800 <line:7:7, line:8:9>           |-RecoveryExpr 0x149128790 <line:7:11, col:114> '_Bool' contains-errors           `-ReturnStmt 0x1491287e8 <line:8:2, col:9>             `-RecoveryExpr 0x1491287c8 <col:9> '<dependent type>' contains-errors lvalue ","19577":"`-FunctionDecl 0x121141888  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x121141988 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1211419f0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x121141a58 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x121141930 <<invalid sloc>> Implicit 882 ","19524":"`-FunctionDecl 0x159141628  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x159141728 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x159141790 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x1591417f8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x1591416d0 <<invalid sloc>> Implicit 882 ","19180":"`-FunctionDecl 0x130026748  line:1:19 xfrm_replay_verify_len 'int (struct xfrm_replay_state_esn *, struct nlattr *)' static inline   |-ParmVarDecl 0x13000e248 <col:42, col:72> col:72 used replay_esn 'struct xfrm_replay_state_esn *'   |-ParmVarDecl 0x130026628 <line:2:7, col:22> col:22 used rp 'struct nlattr *'   `-CompoundStmt 0x1300274c0 <line:3:1, line:20:1>     |-DeclStmt 0x130026940 <line:4:2, col:34>     | `-VarDecl 0x1300268d8 <col:2, col:32> col:32 used up 'struct xfrm_replay_state_esn *'     |-DeclStmt 0x1300269d8 <line:5:2, col:10>     | `-VarDecl 0x130026970 <col:2, col:6> col:6 used ulen 'int'     |-IfStmt 0x130026ae0 <line:7:2, line:8:10>     | |-BinaryOperator 0x130026a90 <line:7:6, col:22> 'int' '||'     | | |-UnaryOperator 0x130026a28 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x130026a10 <col:7> 'struct xfrm_replay_state_esn *' <LValueToRValue>     | | |   `-DeclRefExpr 0x1300269f0 <col:7> 'struct xfrm_replay_state_esn *' lvalue ParmVar 0x13000e248 'replay_esn' 'struct xfrm_replay_state_esn *'     | | `-UnaryOperator 0x130026a78 <col:21, col:22> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x130026a60 <col:22> 'struct nlattr *' <LValueToRValue>     | |     `-DeclRefExpr 0x130026a40 <col:22> 'struct nlattr *' lvalue ParmVar 0x130026628 'rp' 'struct nlattr *'     | `-ReturnStmt 0x130026ad0 <line:8:3, col:10>     |   `-IntegerLiteral 0x130026ab0 <col:10> 'int' 0     |-BinaryOperator 0x130026d30 <line:10:2, col:18> 'struct xfrm_replay_state_esn *' '='     | |-DeclRefExpr 0x130026b00 <col:2> 'struct xfrm_replay_state_esn *' lvalue Var 0x1300268d8 'up' 'struct xfrm_replay_state_esn *'     | `-ImplicitCastExpr 0x130026d18 <col:7, col:18> 'struct xfrm_replay_state_esn *' <IntegralToPointer>     |   `-CallExpr 0x130026cd8 <col:7, col:18> 'int'     |     |-ImplicitCastExpr 0x130026cc0 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x130026c50 <col:7> 'int ()' Function 0x130026b98 'nla_data' 'int ()'     |     `-ImplicitCastExpr 0x130026d00 <col:16> 'struct nlattr *' <LValueToRValue>     |       `-DeclRefExpr 0x130026c70 <col:16> 'struct nlattr *' lvalue ParmVar 0x130026628 'rp' 'struct nlattr *'     |-BinaryOperator 0x130026ee8 <line:11:2, col:37> 'int' '='     | |-DeclRefExpr 0x130026d50 <col:2> 'int' lvalue Var 0x130026970 'ulen' 'int'     | `-CallExpr 0x130026ea8 <col:9, col:37> 'int'     |   |-ImplicitCastExpr 0x130026e90 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x130026e50 <col:9> 'int ()' Function 0x130026d98 'xfrm_replay_state_esn_len' 'int ()'     |   `-ImplicitCastExpr 0x130026ed0 <col:35> 'struct xfrm_replay_state_esn *' <LValueToRValue>     |     `-DeclRefExpr 0x130026e70 <col:35> 'struct xfrm_replay_state_esn *' lvalue Var 0x1300268d8 'up' 'struct xfrm_replay_state_esn *'     |-IfStmt 0x130027290 <line:13:2, line:14:11>     | |-BinaryOperator 0x1300271c8 <line:13:6, col:69> 'int' '||'     | | |-BinaryOperator 0x1300270b8 <col:6, col:20> 'int' '<'     | | | |-CallExpr 0x130027040 <col:6, col:16> 'int'     | | | | |-ImplicitCastExpr 0x130027028 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x130026fe8 <col:6> 'int ()' Function 0x130026f30 'nla_len' 'int ()'     | | | | `-ImplicitCastExpr 0x130027068 <col:14> 'struct nlattr *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x130027008 <col:14> 'struct nlattr *' lvalue ParmVar 0x130026628 'rp' 'struct nlattr *'     | | | `-ImplicitCastExpr 0x1300270a0 <col:20> 'int' <LValueToRValue>     | | |   `-DeclRefExpr 0x130027080 <col:20> 'int' lvalue Var 0x130026970 'ulen' 'int'     | | `-BinaryOperator 0x1300271a8 <col:28, col:69> 'int' '!='     | |   |-CallExpr 0x130027130 <col:28, col:64> 'int'     | |   | |-ImplicitCastExpr 0x130027118 <col:28> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x1300270d8 <col:28> 'int ()' Function 0x130026d98 'xfrm_replay_state_esn_len' 'int ()'     | |   | `-ImplicitCastExpr 0x130027158 <col:54> 'struct xfrm_replay_state_esn *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x1300270f8 <col:54> 'struct xfrm_replay_state_esn *' lvalue ParmVar 0x13000e248 'replay_esn' 'struct xfrm_replay_state_esn *'     | |   `-ImplicitCastExpr 0x130027190 <col:69> 'int' <LValueToRValue>     | |     `-DeclRefExpr 0x130027170 <col:69> 'int' lvalue Var 0x130026970 'ulen' 'int'     | `-ReturnStmt 0x130027280 <line:14:3, col:11>     |   `-UnaryOperator 0x130027268 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x130027250 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x130027230 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x130027470 <line:16:2, line:17:11>     | |-RecoveryExpr 0x1300273a8 <line:16:6, col:56> '_Bool' contains-errors     | `-ReturnStmt 0x130027460 <line:17:3, col:11>     |   `-UnaryOperator 0x130027448 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x130027430 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x130027410 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1300274b0 <line:19:2, col:9>       `-IntegerLiteral 0x130027490 <col:9> 'int' 0 ","19552":"`-FunctionDecl 0x12400dd98  line:1:1 mono_gc_cleanup 'int (void)'   `-CompoundStmt 0x1239233f8 <line:2:1, line:45:1>     `-IfStmt 0x123923298 <line:7:2, line:40:2>       |-UnaryOperator 0x12400df20 <line:7:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x12400df08 <col:7> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x12400dee8 <col:7> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x123923278 <col:20, line:40:2>         |-CallExpr 0x12400e0d0 <line:8:3, col:29> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12400e050 <col:3> 'int ()' Function 0x12400df98 'ResetEvent' 'int ()'         | `-RecoveryExpr 0x12400e0b0 <col:15> '<dependent type>' contains-errors lvalue         `-IfStmt 0x123923258 <line:10:3, line:35:3>           |-BinaryOperator 0x12400e340 <line:10:7, col:42> 'int' contains-errors '!='           | |-CallExpr 0x12400e300 <col:7, col:37> 'int'           | | `-ImplicitCastExpr 0x12400e2e8 <col:7> 'int (*)()' <FunctionToPointerDecay>           | |   `-DeclRefExpr 0x12400e1f0 <col:7> 'int ()' Function 0x12400e138 'mono_thread_internal_current' 'int ()'           | `-RecoveryExpr 0x12400e320 <col:42> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x123923238 <col:53, line:35:3>             |-CallExpr 0x1239226f0 <line:11:4, col:29> 'int'             | `-ImplicitCastExpr 0x1239226d8 <col:4> 'int (*)()' <FunctionToPointerDecay>             |   `-DeclRefExpr 0x1239226b8 <col:4> 'int ()' Function 0x123922600 'mono_gc_finalize_notify' 'int ()'             `-IfStmt 0x123923218 <line:14:4, line:34:4>               |-BinaryOperator 0x123922968 <line:14:8, col:63> 'int' contains-errors '=='               | |-CallExpr 0x123922910 <col:8, col:58> '<dependent type>' contains-errors               | | |-DeclRefExpr 0x1239227f0 <col:8> 'int ()' Function 0x123922738 'WaitForSingleObjectEx' 'int ()'               | | |-RecoveryExpr 0x1239228d0 <col:31> '<dependent type>' contains-errors lvalue               | | |-IntegerLiteral 0x123922828 <col:47> 'int' 2000               | | `-RecoveryExpr 0x1239228f0 <col:53> '<dependent type>' contains-errors lvalue               | `-RecoveryExpr 0x123922948 <col:63> '<dependent type>' contains-errors lvalue               `-CompoundStmt 0x1239231e8 <col:77, line:34:4>                 |-DeclStmt 0x123922a08 <line:15:5, col:12>                 | `-VarDecl 0x1239229a0 <col:5, col:9> col:9 used ret 'int'                 |-CallExpr 0x123922b98 <line:21:5, col:41> '<dependent type>' contains-errors                 | |-DeclRefExpr 0x123922b18 <col:5> 'int ()' Function 0x123922a60 'mono_thread_internal_stop' 'int ()'                 | `-RecoveryExpr 0x123922b78 <col:32> '<dependent type>' contains-errors lvalue                 |-BinaryOperator 0x123922db0 <line:24:5, col:62> 'int' contains-errors '='                 | |-DeclRefExpr 0x123922bc0 <col:5> 'int' lvalue Var 0x1239229a0 'ret' 'int'                 | `-CallExpr 0x123922d78 <col:11, col:62> '<dependent type>' contains-errors                 |   |-DeclRefExpr 0x123922be0 <col:11> 'int ()' Function 0x123922738 'WaitForSingleObjectEx' 'int ()'                 |   |-CXXDependentScopeMemberExpr 0x123922d10 <col:34, col:45> '<dependent type>' contains-errors lvalue ->handle                 |   | `-RecoveryExpr 0x123922cf0 <col:34> '<dependent type>' contains-errors lvalue                 |   |-IntegerLiteral 0x123922c60 <col:53> 'int' 100                 |   `-RecoveryExpr 0x123922d58 <col:58> '<dependent type>' contains-errors lvalue                 `-IfStmt 0x1239231b8 <line:26:5, line:32:5> has_else                   |-BinaryOperator 0x123922e48 <line:26:9, col:16> 'int' contains-errors '=='                   | |-DeclRefExpr 0x123922dd0 <col:9> 'int' lvalue Var 0x1239229a0 'ret' 'int'                   | `-RecoveryExpr 0x123922e28 <col:16> '<dependent type>' contains-errors lvalue                   |-CompoundStmt 0x123923028 <col:30, line:29:5>                   | `-CallExpr 0x123922fe8 <line:28:6, col:22> 'int'                   |   |-ImplicitCastExpr 0x123922fd0 <col:6> 'int (*)()' <FunctionToPointerDecay>                   |   | `-DeclRefExpr 0x123922f48 <col:6> 'int ()' Function 0x123922e90 'g_warning' 'int ()'                   |   `-ImplicitCastExpr 0x123923010 <col:17> 'char *' <ArrayToPointerDecay>                   |     `-StringLiteral 0x123922fb0 <col:17> 'char[4]' lvalue \"STR\"                   `-CompoundStmt 0x1239231a0 <line:29:12, line:32:5>                     `-CallExpr 0x123923178 <line:31:6, col:16> 'int'                       |-ImplicitCastExpr 0x123923160 <col:6> 'int (*)()' <FunctionToPointerDecay>                       | `-DeclRefExpr 0x123923120 <col:6> 'int ()' Function 0x123923068 'Sleep' 'int ()'                       `-IntegerLiteral 0x123923140 <col:13> 'int' 100 ","19629":"`-FunctionDecl 0x12680c438  line:1:1 invalid save_abbr 'int (int, struct tm *)'   |-ParmVarDecl 0x1261288f0 <col:12, col:23> col:23 invalid tz 'int'   |-ParmVarDecl 0x126128ee8 <col:27, col:38> col:38 tm 'struct tm *'   `-CompoundStmt 0x12680c538 <line:2:1, line:68:1>     `-ReturnStmt 0x12680c528 <line:67:3, col:10>       `-RecoveryExpr 0x12680c508 <col:10> '<dependent type>' contains-errors lvalue ","19239":"`-FunctionDecl 0x13001ea38  line:1:1 TEST_P 'int (int, int)'   |-ParmVarDecl 0x13001e958 <col:8> col:8 Http2UpstreamIntegrationTest 'int'   |-ParmVarDecl 0x13001e8d8 <col:38> col:38 RouterUpstreamResponseBeforeRequestComplete 'int'   `-CompoundStmt 0x13001ece8 <col:83, line:3:1>     `-CallExpr 0x13001ecc8 <line:2:3, col:51> 'int'       `-ImplicitCastExpr 0x13001ecb0 <col:3> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x13001ec60 <col:3> 'int ()' Function 0x13001eba8 'testRouterUpstreamResponseBeforeRequestComplete' 'int ()' ","20126":"`-FunctionDecl 0x1351447e8  col:4 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1351448e8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x135144950 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1351449b8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x135144890 <<invalid sloc>> Implicit 900 ","20066":"`-FunctionDecl 0x159928118  line:1:1 DEFUN 'int ()'   `-CompoundStmt 0x159928490 <line:8:1, line:10:1>     `-ReturnStmt 0x159928480 <line:9:3, col:58>       `-CallExpr 0x159928440 <col:10, col:58> '<dependent type>' contains-errors         |-DeclRefExpr 0x159928300 <col:10> 'int ()' Function 0x159928248 'bgp_show_neighbor_vty' 'int ()'         |-RecoveryExpr 0x1599283c0 <col:33> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x1599283e0 <col:38> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x159928400 <col:44> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x159928420 <col:54> '<dependent type>' contains-errors lvalue ","19319":"`-FunctionDecl 0x137141078  col:26 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x137141178 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x137141120 <<invalid sloc>> Implicit 902 ","19859":"`-FunctionDecl 0x12600aab8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x12600abb8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x12600ab60 <<invalid sloc>> Implicit 873 ","19496":"`-FunctionDecl 0x11f9283a8  line:1:5 invalid WriteNamedColorCRD 'int (int *, int, int, int)'   |-ParmVarDecl 0x11f928128 <col:24, col:38> col:38 invalid m 'int *'   |-ParmVarDecl 0x11f9281a8 <col:41, col:53> col:53 referenced invalid hNamedColor 'int'   |-ParmVarDecl 0x11f928228 <col:66, col:82> col:82 invalid Intent 'int'   |-ParmVarDecl 0x11f9282a8 <col:90, col:106> col:106 invalid dwFlags 'int'   `-CompoundStmt 0x12800ae68 <line:2:1, line:53:1>     |-DeclStmt 0x11f928500 <line:6:5, col:32>     | `-VarDecl 0x11f928498 <col:5, col:10> col:10 invalid ColorName 'char'     |-DeclStmt 0x11f928628 <line:7:5, col:23>     | `-VarDecl 0x11f9285c0 <col:5, col:22> col:10 used Colorant 'char[128]'     |-BinaryOperator 0x128009a58 <line:12:5, col:43> 'char[128]' contains-errors '='     | |-DeclRefExpr 0x128009890 <col:5> 'char[128]' lvalue Var 0x11f9285c0 'Colorant' 'char[128]'     | `-CallExpr 0x128009a30 <col:20, col:43> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x128009990 <col:20> 'int ()' Function 0x1280098d8 'T_CHANNELS' 'int ()'     |   `-RecoveryExpr 0x128009a10 <col:31> '<dependent type>' contains-errors lvalue     |-IfStmt 0x128009cc0 <line:16:5, col:31>     | |-RecoveryExpr 0x128009c70 <col:9, col:18> '_Bool' contains-errors     | `-ReturnStmt 0x128009cb0 <col:24, col:31>     |   `-IntegerLiteral 0x128009c90 <col:31> 'int' 0     |-IfStmt 0x128009e30 <line:20:5, col:40>     | |-RecoveryExpr 0x128009de0 <col:9, col:27> '_Bool' contains-errors     | `-ReturnStmt 0x128009e20 <col:33, col:40>     |   `-IntegerLiteral 0x128009e00 <col:40> 'int' 0     |-CallExpr 0x128009fd0 <line:22:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x128009f30 <col:5> 'int ()' Function 0x128009e78 '_cmsIOPrintf' 'int ()'     | |-RecoveryExpr 0x128009f50 <col:18> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x128009fb0 <col:21> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12800a060 <line:23:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12800a000 <col:5> 'int ()' Function 0x128009e78 '_cmsIOPrintf' 'int ()'     | |-RecoveryExpr 0x12800a020 <col:18> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x12800a040 <col:21> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12800a0f0 <line:24:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12800a090 <col:5> 'int ()' Function 0x128009e78 '_cmsIOPrintf' 'int ()'     | |-RecoveryExpr 0x12800a0b0 <col:18> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x12800a0d0 <col:21> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12800a180 <line:25:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12800a120 <col:5> 'int ()' Function 0x128009e78 '_cmsIOPrintf' 'int ()'     | |-RecoveryExpr 0x12800a140 <col:18> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x12800a160 <col:21> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12800ac00 <line:44:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12800a798 <col:5> 'int ()' Function 0x128009e78 '_cmsIOPrintf' 'int ()'     | |-RecoveryExpr 0x12800a7b8 <col:18> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x12800a7d8 <col:21> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12800ad18 <line:46:5, line:49:5>     | |-RecoveryExpr 0x12800ac50 <line:46:9, col:50> '_Bool' contains-errors     | `-CompoundStmt 0x12800ad00 <col:53, line:49:5>     |   `-CallExpr 0x12800acd0 <line:48:5, col:26> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12800ac70 <col:5> 'int ()' Function 0x128009e78 '_cmsIOPrintf' 'int ()'     |     |-RecoveryExpr 0x12800ac90 <col:18> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x12800acb0 <col:21> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x12800ae58 <line:52:5, col:12>       `-IntegerLiteral 0x12800ae38 <col:12> 'int' 1 ","19861":"`-FunctionDecl 0x156122600  line:1:13 mp_wait_until_sent 'void (struct tty_struct *, int)' static   |-ParmVarDecl 0x15680e248 <col:32, col:51> col:51 used tty 'struct tty_struct *'   |-ParmVarDecl 0x15680e2c8 <col:56, col:60> col:60 used timeout 'int'   `-CompoundStmt 0x1561245f8 <line:2:1, line:31:1>     |-DeclStmt 0x156122948 <line:3:2, col:48>     | |-RecordDecl 0x156122700 <col:2, col:9> col:9 struct sb_uart_state     | `-VarDecl 0x156122868 <col:2, col:37> col:24 used state 'struct sb_uart_state *' cinit     |   `-RecoveryExpr 0x156122908 <col:32, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1561228d0 <col:32> 'struct tty_struct *' lvalue ParmVar 0x15680e248 'tty' 'struct tty_struct *'     |-DeclStmt 0x156122ba8 <line:4:2, col:41>     | |-RecordDecl 0x156122960 <col:2, col:9> col:9 struct sb_uart_port     | `-VarDecl 0x156122ac8 <col:2, col:37> col:23 used port 'struct sb_uart_port *' cinit     |   `-RecoveryExpr 0x156122b68 <col:30, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x156122b30 <col:30> 'struct sb_uart_state *' contains-errors lvalue Var 0x156122868 'state' 'struct sb_uart_state *'     |-DeclStmt 0x156122cd8 <line:5:2, col:33>     | |-VarDecl 0x156122bd8 <col:2, col:16> col:16 used char_time 'unsigned long'     | `-VarDecl 0x156122c58 <col:2, col:27> col:27 used expire 'unsigned long'     |-IfStmt 0x156122ed0 <line:7:2, line:8:3>     | |-BinaryOperator 0x156122ea0 <line:7:6, col:54> 'int' contains-errors '||'     | | |-BinaryOperator 0x156122e80 <col:6, col:20> 'int' contains-errors '=='     | | | |-RecoveryExpr 0x156122d28 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x156122cf0 <col:6> 'struct sb_uart_port *' contains-errors lvalue Var 0x156122ac8 'port' 'struct sb_uart_port *'     | | | `-RecoveryExpr 0x156122e60 <col:20> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x156122e20 <col:36, col:54> 'int' contains-errors '=='     | |   |-RecoveryExpr 0x156122dd8 <col:36, col:42> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x156122da0 <col:36> 'struct sb_uart_port *' contains-errors lvalue Var 0x156122ac8 'port' 'struct sb_uart_port *'     | |   `-IntegerLiteral 0x156122e00 <col:54> 'int' 0     | `-ReturnStmt 0x156122ec0 <line:8:3>     |-BinaryOperator 0x1561230f8 <line:11:2, col:26> 'unsigned long' '='     | |-DeclRefExpr 0x156123048 <col:2> 'unsigned long' lvalue Var 0x156122bd8 'char_time' 'unsigned long'     | `-BinaryOperator 0x1561230d8 <col:14, col:26> 'unsigned long' '\/'     |   |-ImplicitCastExpr 0x1561230a8 <col:14> 'unsigned long' <LValueToRValue>     |   | `-DeclRefExpr 0x156123068 <col:14> 'unsigned long' lvalue Var 0x156122bd8 'char_time' 'unsigned long'     |   `-ImplicitCastExpr 0x1561230c0 <col:26> 'unsigned long' <IntegralCast>     |     `-IntegerLiteral 0x156123088 <col:26> 'int' 5     |-IfStmt 0x156123220 <line:12:2, line:13:15>     | |-BinaryOperator 0x156123188 <line:12:6, col:19> 'int' '=='     | | |-ImplicitCastExpr 0x156123158 <col:6> 'unsigned long' <LValueToRValue>     | | | `-DeclRefExpr 0x156123118 <col:6> 'unsigned long' lvalue Var 0x156122bd8 'char_time' 'unsigned long'     | | `-ImplicitCastExpr 0x156123170 <col:19> 'unsigned long' <IntegralCast>     | |   `-IntegerLiteral 0x156123138 <col:19> 'int' 0     | `-BinaryOperator 0x156123200 <line:13:3, col:15> 'unsigned long' '='     |   |-DeclRefExpr 0x1561231a8 <col:3> 'unsigned long' lvalue Var 0x156122bd8 'char_time' 'unsigned long'     |   `-ImplicitCastExpr 0x1561231e8 <col:15> 'unsigned long' <IntegralCast>     |     `-IntegerLiteral 0x1561231c8 <col:15> 'int' 1     |-IfStmt 0x1561233d0 <line:14:2, line:15:15>     | |-BinaryOperator 0x156123320 <line:14:6, col:27> 'int' '&&'     | | |-ImplicitCastExpr 0x156123308 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x156123240 <col:6> 'int' lvalue ParmVar 0x15680e2c8 'timeout' 'int'     | | `-BinaryOperator 0x1561232e8 <col:17, col:27> 'int' '<'     | |   |-ImplicitCastExpr 0x1561232d0 <col:17> 'unsigned long' <IntegralCast>     | |   | `-ImplicitCastExpr 0x1561232a0 <col:17> 'int' <LValueToRValue>     | |   |   `-DeclRefExpr 0x156123260 <col:17> 'int' lvalue ParmVar 0x15680e2c8 'timeout' 'int'     | |   `-ImplicitCastExpr 0x1561232b8 <col:27> 'unsigned long' <LValueToRValue>     | |     `-DeclRefExpr 0x156123280 <col:27> 'unsigned long' lvalue Var 0x156122bd8 'char_time' 'unsigned long'     | `-BinaryOperator 0x1561233b0 <line:15:3, col:15> 'unsigned long' '='     |   |-DeclRefExpr 0x156123340 <col:3> 'unsigned long' lvalue Var 0x156122bd8 'char_time' 'unsigned long'     |   `-ImplicitCastExpr 0x156123398 <col:15> 'unsigned long' <IntegralCast>     |     `-ImplicitCastExpr 0x156123380 <col:15> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x156123360 <col:15> 'int' lvalue ParmVar 0x15680e2c8 'timeout' 'int'     |-IfStmt 0x156123c68 <line:17:2, line:18:23>     | |-BinaryOperator 0x156123548 <line:17:6, col:42> 'int' contains-errors '||'     | | |-BinaryOperator 0x156123448 <col:6, col:17> 'int' '=='     | | | |-ImplicitCastExpr 0x156123430 <col:6> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x1561233f0 <col:6> 'int' lvalue ParmVar 0x15680e2c8 'timeout' 'int'     | | | `-IntegerLiteral 0x156123410 <col:17> 'int' 0     | | `-BinaryOperator 0x156123528 <col:22, col:42> 'int' contains-errors '>'     | |   |-DeclRefExpr 0x156123468 <col:22> 'int' lvalue ParmVar 0x15680e2c8 'timeout' 'int'     | |   `-BinaryOperator 0x156123508 <col:32, col:42> '<dependent type>' contains-errors '*'     | |     |-IntegerLiteral 0x156123488 <col:32> 'int' 2     | |     `-RecoveryExpr 0x1561234e0 <col:36, col:42> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1561234a8 <col:36> 'struct sb_uart_port *' contains-errors lvalue Var 0x156122ac8 'port' 'struct sb_uart_port *'     | `-BinaryOperator 0x156123c48 <line:18:3, col:23> 'int' contains-errors '='     |   |-DeclRefExpr 0x156123568 <col:3> 'int' lvalue ParmVar 0x15680e2c8 'timeout' 'int'     |   `-BinaryOperator 0x156123c28 <col:13, col:23> '<dependent type>' contains-errors '*'     |     |-IntegerLiteral 0x156123588 <col:13> 'int' 2     |     `-RecoveryExpr 0x156123c00 <col:17, col:23> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1561235a8 <col:17> 'struct sb_uart_port *' contains-errors lvalue Var 0x156122ac8 'port' 'struct sb_uart_port *'     |-BinaryOperator 0x156123d60 <line:20:2, col:21> 'unsigned long' contains-errors '='     | |-DeclRefExpr 0x156123c88 <col:2> 'unsigned long' lvalue Var 0x156122c58 'expire' 'unsigned long'     | `-BinaryOperator 0x156123d40 <col:11, col:21> '<dependent type>' contains-errors '+'     |   |-RecoveryExpr 0x156123d20 <col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x156123cc0 <col:21> 'int' lvalue ParmVar 0x15680e2c8 'timeout' 'int'     `-WhileStmt 0x1561245b8 <line:22:2, line:29:2>       |-UnaryOperator 0x156123e70 <line:22:9, col:34> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-CallExpr 0x156123e48 <col:10, col:34> '<dependent type>' contains-errors       |   |-CXXDependentScopeMemberExpr 0x156123de0 <col:10, col:21> '<dependent type>' contains-errors lvalue ->tx_empty       |   | `-RecoveryExpr 0x156123db8 <col:10, col:16> '<dependent type>' contains-errors lvalue       |   |   `-DeclRefExpr 0x156123d80 <col:10> 'struct sb_uart_port *' contains-errors lvalue Var 0x156122ac8 'port' 'struct sb_uart_port *'       |   `-DeclRefExpr 0x156123e28 <col:30> 'struct sb_uart_port *' contains-errors lvalue Var 0x156122ac8 'port' 'struct sb_uart_port *'       `-CompoundStmt 0x156124588 <col:37, line:29:2>         |-CallExpr 0x156124020 <line:23:3, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x156123fa0 <col:3> 'int ()' Function 0x156123ee8 'set_current_state' 'int ()'         | `-RecoveryExpr 0x156124000 <col:21> '<dependent type>' contains-errors lvalue         |-CallExpr 0x1561241b8 <line:24:3, col:29> 'int'         | |-ImplicitCastExpr 0x1561241a0 <col:3> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x156124128 <col:3> 'int ()' Function 0x156124070 'schedule_timeout' 'int ()'         | `-ImplicitCastExpr 0x1561241e0 <col:20> 'unsigned long' <LValueToRValue>         |   `-DeclRefExpr 0x156124148 <col:20> 'unsigned long' lvalue Var 0x156122bd8 'char_time' 'unsigned long'         |-IfStmt 0x156124388 <line:25:3, line:26:4>         | |-CallExpr 0x156124358 <line:25:7, col:29> '<dependent type>' contains-errors         | | |-DeclRefExpr 0x1561242d8 <col:7> 'int ()' Function 0x156124220 'signal_pending' 'int ()'         | | `-RecoveryExpr 0x156124338 <col:22> '<dependent type>' contains-errors lvalue         | `-BreakStmt 0x156124380 <line:26:4>         `-IfStmt 0x156124568 <line:27:3, line:28:4>           |-CallExpr 0x156124530 <line:27:7, col:33> '<dependent type>' contains-errors           | |-DeclRefExpr 0x156124488 <col:7> 'int ()' Function 0x1561243d0 'time_after' 'int ()'           | |-RecoveryExpr 0x156124510 <col:18> '<dependent type>' contains-errors lvalue           | `-DeclRefExpr 0x1561244c0 <col:27> 'unsigned long' lvalue Var 0x156122c58 'expire' 'unsigned long'           `-BreakStmt 0x156124560 <line:28:4> ","19257":"`-FunctionDecl 0x138141b78  line:1:12 invalid mb86a20s_tune 'int (struct dvb_frontend *, int, unsigned int, unsigned int *, enum fe_status *)' static   |-ParmVarDecl 0x138128648 <col:26, col:47> col:47 used fe 'struct dvb_frontend *'   |-ParmVarDecl 0x1381286e0 <line:2:4, col:9> col:9 invalid re_tune 'int'   |-ParmVarDecl 0x138128760 <line:3:4, col:17> col:17 used mode_flags 'unsigned int'   |-ParmVarDecl 0x138141818 <line:4:4, col:18> col:18 delay 'unsigned int *'   |-ParmVarDecl 0x138141a08 <line:5:4, col:20> col:20 used status 'enum fe_status *'   `-CompoundStmt 0x1381427c0 <line:6:1, line:19:1>     |-DeclStmt 0x138141e98 <line:7:2, col:53>     | |-RecordDecl 0x138141c48 <col:2, col:9> col:9 struct mb86a20s_state     | `-VarDecl 0x138141db8 <col:2, col:37> col:25 used state 'struct mb86a20s_state *' cinit     |   `-RecoveryExpr 0x138141e58 <col:33, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138141e20 <col:33> 'struct dvb_frontend *' lvalue ParmVar 0x138128648 'fe' 'struct dvb_frontend *'     |-DeclStmt 0x138141f50 <line:8:2, col:12>     | `-VarDecl 0x138141ec8 <col:2, col:11> col:6 used rc 'int' cinit     |   `-IntegerLiteral 0x138141f30 <col:11> 'int' 0     |-CallExpr 0x1381422c0 <line:10:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1381420c0 <col:2> 'int ()' Function 0x138142008 'dev_dbg' 'int ()'     | |-UnaryOperator 0x138142188 <col:10, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x138142140 <col:11, col:23> '<dependent type>' contains-errors lvalue ->dev     | |   `-RecoveryExpr 0x138142118 <col:11, col:18> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1381420e0 <col:11> 'struct mb86a20s_state *' contains-errors lvalue Var 0x138141db8 'state' 'struct mb86a20s_state *'     | |-StringLiteral 0x1381421e0 <col:28> 'char[4]' lvalue \"STR\"     | `-PredefinedExpr 0x1381422a8 <col:35> 'const char[14]' lvalue __func__     |   `-StringLiteral 0x138142280 <col:35> 'const char[14]' lvalue \"mb86a20s_tune\"     |-IfStmt 0x138142508 <line:12:2, line:13:32>     | |-RecoveryExpr 0x1381422f8 <line:12:6> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x1381424e8 <line:13:3, col:32> 'int' '='     |   |-DeclRefExpr 0x138142318 <col:3> 'int' lvalue Var 0x138141ec8 'rc' 'int'     |   `-CallExpr 0x1381424a8 <col:8, col:32> 'int'     |     |-ImplicitCastExpr 0x138142490 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x138142418 <col:8> 'int ()' Function 0x138142360 'mb86a20s_set_frontend' 'int ()'     |     `-ImplicitCastExpr 0x1381424d0 <col:30> 'struct dvb_frontend *' <LValueToRValue>     |       `-DeclRefExpr 0x138142438 <col:30> 'struct dvb_frontend *' lvalue ParmVar 0x138128648 'fe' 'struct dvb_frontend *'     |-IfStmt 0x138142758 <line:15:2, line:16:44>     | |-RecoveryExpr 0x138142580 <line:15:6, col:41> '_Bool' contains-errors     | `-CallExpr 0x1381426f8 <line:16:3, col:44> 'int'     |   |-ImplicitCastExpr 0x1381426e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x138142680 <col:3> 'int ()' Function 0x1381425c8 'mb86a20s_read_status_and_stats' 'int ()'     |   |-ImplicitCastExpr 0x138142728 <col:34> 'struct dvb_frontend *' <LValueToRValue>     |   | `-DeclRefExpr 0x1381426a0 <col:34> 'struct dvb_frontend *' lvalue ParmVar 0x138128648 'fe' 'struct dvb_frontend *'     |   `-ImplicitCastExpr 0x138142740 <col:38> 'enum fe_status *' <LValueToRValue>     |     `-DeclRefExpr 0x1381426c0 <col:38> 'enum fe_status *' lvalue ParmVar 0x138141a08 'status' 'enum fe_status *'     `-ReturnStmt 0x1381427b0 <line:18:2, col:9>       `-ImplicitCastExpr 0x138142798 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x138142778 <col:9> 'int' lvalue Var 0x138141ec8 'rc' 'int' ","19982":"`-FunctionDecl 0x13b141800  col:10 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x13b141900 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x13b141968 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x13b1419d0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x13b1418a8 <<invalid sloc>> Implicit 900 ","19169":"`-FunctionDecl 0x12f00de00  line:1:13 cmd_capabilities 'void (char *)' static   |-ParmVarDecl 0x12f00dcd8 <col:30, col:36> col:36 keyword 'char *'   | `-UnusedAttr 0x12f00dd40 <col:59> unused   `-CompoundStmt 0x12f809c80 <line:2:1, line:58:1>     |-DeclStmt 0x12f00df78 <line:3:5, col:25>     | `-VarDecl 0x12f00df10 <col:5, col:17> col:17 used mechlist 'const char *'     |-DeclStmt 0x12f00e030 <line:4:5, col:22>     | `-VarDecl 0x12f00dfa8 <col:5, col:21> col:9 used mechcount 'int' cinit     |   `-IntegerLiteral 0x12f00e010 <col:21> 'int' 0     |-CallExpr 0x12f00e260 <line:6:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f00e170 <col:5> 'int ()' Function 0x12f00e0b8 'prot_printf' 'int ()'     | |-RecoveryExpr 0x12f00e240 <col:17> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x12f00e1f0 <col:27> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12f00e338 <line:7:5, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f00e290 <col:5> 'int ()' Function 0x12f00e0b8 'prot_printf' 'int ()'     | |-RecoveryExpr 0x12f00e318 <col:17> '<dependent type>' contains-errors lvalue     | `-StringLiteral 0x12f00e2c8 <col:27> 'char[4]' lvalue \"STR\"     |-IfStmt 0x12f028640 <line:8:5, line:12:5>     | |-RecoveryExpr 0x12f00e3d0 <line:8:9, col:72> '_Bool' contains-errors     | `-CompoundStmt 0x12f028630 <col:75, line:12:5>     |-IfStmt 0x12f028a90 <line:15:5, line:16:29>     | |-BinaryOperator 0x12f028998 <line:15:9, col:50> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12f028928 <col:9, col:27> 'int' contains-errors '&&'     | | | |-CallExpr 0x12f0288b8 <col:9, col:21> 'int'     | | | | `-ImplicitCastExpr 0x12f0288a0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | | |   `-DeclRefExpr 0x12f028740 <col:9> 'int ()' Function 0x12f028688 'tls_enabled' 'int ()'     | | | `-UnaryOperator 0x12f028910 <col:26, col:27> '<dependent type>' contains-errors prefix '!' cannot overflow     | | |   `-ImplicitCastExpr 0x12f0288f8 <col:27> '<dependent type>' contains-errors <LValueToRValue>     | | |     `-RecoveryExpr 0x12f0288d8 <col:27> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x12f028980 <col:49, col:50> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x12f028968 <col:50> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x12f028948 <col:50> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12f028a60 <line:16:2, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12f0289b8 <col:2> 'int ()' Function 0x12f00e0b8 'prot_printf' 'int ()'     |   |-RecoveryExpr 0x12f028a40 <col:14> '<dependent type>' contains-errors lvalue     |   `-StringLiteral 0x12f0289f0 <col:24> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12f028d98 <line:19:5, line:20:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12f028b90 <line:19:5> 'int ()' Function 0x12f028ad8 'sasl_listmech' 'int ()'     | |-RecoveryExpr 0x12f028d38 <col:19> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12f028d58 <col:34> '<dependent type>' contains-errors lvalue     | |-StringLiteral 0x12f028be0 <col:40> 'char[4]' lvalue \"STR\"     | |-UnaryOperator 0x12f028c50 <line:20:5, col:6> 'const char **' prefix '&' cannot overflow     | | `-DeclRefExpr 0x12f028c00 <col:6> 'const char *' lvalue Var 0x12f00df10 'mechlist' 'const char *'     | |-RecoveryExpr 0x12f028d78 <col:16> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x12f028cd0 <col:22, col:23> 'int *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x12f028c80 <col:23> 'int' lvalue Var 0x12f00dfa8 'mechcount' 'int'     |-IfStmt 0x12f029010 <line:23:5, line:28:5>     | |-UnaryOperator 0x12f028e68 <line:23:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12f028e50 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12f028e30 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12f029000 <col:26, line:28:5>     |-IfStmt 0x12f0292b8 <line:34:5, line:42:5>     | |-RecoveryExpr 0x12f0290c8 <line:34:9, col:66> '_Bool' contains-errors     | `-CompoundStmt 0x12f0292a8 <col:69, line:42:5>     `-IfStmt 0x12f029388 <line:45:5, line:48:5>       |-RecoveryExpr 0x12f0292d8 <line:45:9, col:21> '_Bool' contains-errors       `-CompoundStmt 0x12f029378 <col:32, line:48:5> ","19293":"`-FunctionDecl 0x12a008ad8  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x12a008bd8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x12a008c40 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x12a008ca8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x12a008b80 <<invalid sloc>> Implicit 882 ","19915":"`-FunctionDecl 0x12e80dd10  line:1:7 testUriHostRegname 'void ()'   `-CompoundStmt 0x14000a600 <col:28, line:16:2>     |-DeclStmt 0x12e80df60 <line:6:3, col:35>     | `-VarDecl 0x12e80de60 <col:3, col:30> col:22 used input 'const char *const' cinit     |   `-ImplicitCastExpr 0x12e80df48 <col:30> 'const char *' <NoOp>     |     `-ImplicitCastExpr 0x12e80df30 <col:30> 'char *' <ArrayToPointerDecay>     |       `-StringLiteral 0x12e80df10 <col:30> 'char[4]' lvalue \"STR\"     |-CallExpr 0x12e80e320 <line:7:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e80e090 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'     | `-BinaryOperator 0x12e80e300 <col:15, col:47> 'int' contains-errors '=='     |   |-IntegerLiteral 0x12e80e0b0 <col:15> 'int' 0     |   `-CallExpr 0x12e80e2d0 <col:20, col:47> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x12e80e1b0 <col:20> 'int ()' Function 0x12e80e0f8 'uriParseUriA' 'int ()'     |     |-UnaryOperator 0x12e80e2b8 <col:33, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x12e80e298 <col:34> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12e80e200 <col:42> 'const char *const' lvalue Var 0x12e80de60 'input' 'const char *const'     |-CallExpr 0x12e827a70 <line:9:3, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e80e348 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'     | `-BinaryOperator 0x12e827a50 <col:15, col:50> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12e8279b0 <col:15, col:29> '<dependent type>' contains-errors lvalue .first     |   | `-CXXDependentScopeMemberExpr 0x12e827968 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostText     |   |   `-RecoveryExpr 0x12e827948 <col:15> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x12e827a30 <col:38, col:50> 'const char *' '+'     |     |-BinaryOperator 0x12e827a10 <col:38, col:46> 'const char *' '+'     |     | |-ImplicitCastExpr 0x12e8279f8 <col:38> 'const char *' <LValueToRValue>     |     | | `-DeclRefExpr 0x12e827848 <col:38> 'const char *const' lvalue Var 0x12e80de60 'input' 'const char *const'     |     | `-IntegerLiteral 0x12e827868 <col:46> 'int' 4     |     `-IntegerLiteral 0x12e8278c0 <col:50> 'int' 3     |-CallExpr 0x12e827de8 <line:10:3, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e827a98 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'     | `-BinaryOperator 0x12e827dc8 <col:15, col:58> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12e827d08 <col:15, col:29> '<dependent type>' contains-errors lvalue .afterLast     |   | `-CXXDependentScopeMemberExpr 0x12e827cc0 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostText     |   |   `-RecoveryExpr 0x12e827ca0 <col:15> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x12e827da8 <col:42, col:58> 'const char *' '+'     |     |-BinaryOperator 0x12e827d88 <col:42, col:54> 'const char *' '+'     |     | |-BinaryOperator 0x12e827d68 <col:42, col:50> 'const char *' '+'     |     | | |-ImplicitCastExpr 0x12e827d50 <col:42> 'const char *' <LValueToRValue>     |     | | | `-DeclRefExpr 0x12e827b60 <col:42> 'const char *const' lvalue Var 0x12e80de60 'input' 'const char *const'     |     | | `-IntegerLiteral 0x12e827b80 <col:50> 'int' 4     |     | `-IntegerLiteral 0x12e827bd8 <col:54> 'int' 3     |     `-IntegerLiteral 0x12e827c18 <col:58> 'int' 11     |-CallExpr 0x12e828028 <line:11:3, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e827e10 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'     | `-BinaryOperator 0x12e828008 <col:15, col:36> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12e827fa0 <col:15, col:29> '<dependent type>' contains-errors lvalue .ip4     |   | `-CXXDependentScopeMemberExpr 0x12e827f58 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostData     |   |   `-RecoveryExpr 0x12e827f38 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12e827fe8 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e828268 <line:12:3, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e828050 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'     | `-BinaryOperator 0x12e828248 <col:15, col:36> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12e8281e0 <col:15, col:29> '<dependent type>' contains-errors lvalue .ip6     |   | `-CXXDependentScopeMemberExpr 0x12e828198 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostData     |   |   `-RecoveryExpr 0x12e828178 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12e828228 <col:36> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12e828538 <line:13:3, col:51> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e828290 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'     | `-BinaryOperator 0x12e828518 <col:15, col:47> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12e8284b0 <col:15, col:38> '<dependent type>' contains-errors lvalue .first     |   | `-CXXDependentScopeMemberExpr 0x12e828468 <col:15, col:29> '<dependent type>' contains-errors lvalue .ipFuture     |   |   `-CXXDependentScopeMemberExpr 0x12e828420 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostData     |   |     `-RecoveryExpr 0x12e828400 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12e8284f8 <col:47> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14000a420 <line:14:3, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12e828560 <col:3> 'int ()' Function 0x12e80dfd8 'TEST_ASSERT' 'int ()'     | `-BinaryOperator 0x14000a400 <col:15, col:51> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x12e828780 <col:15, col:38> '<dependent type>' contains-errors lvalue .afterLast     |   | `-CXXDependentScopeMemberExpr 0x12e828738 <col:15, col:29> '<dependent type>' contains-errors lvalue .ipFuture     |   |   `-CXXDependentScopeMemberExpr 0x12e8286f0 <col:15, col:20> '<dependent type>' contains-errors lvalue .hostData     |   |     `-RecoveryExpr 0x12e8286d0 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x12e8287c8 <col:51> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14000a5d8 <line:15:3, col:27> '<dependent type>' contains-errors       |-DeclRefExpr 0x14000a528 <col:3> 'int ()' Function 0x14000a470 'uriFreeUriMembersA' 'int ()'       `-UnaryOperator 0x14000a5c0 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x14000a5a0 <col:23> '<dependent type>' contains-errors lvalue ","19575":"`-FunctionDecl 0x1569281f0  line:1:13 invalid h2_session_in_flush 'void (int *)' static   |-ParmVarDecl 0x156928128 <col:33, col:45> col:45 invalid session 'int *'   `-CompoundStmt 0x1569424f0 <line:2:1, line:24:1>     |-DeclStmt 0x156928320 <line:3:5, col:11>     | `-VarDecl 0x1569282b8 <col:5, col:9> col:9 used id 'int'     |-WhileStmt 0x156942150 <line:5:5, line:16:5>     | |-BinaryOperator 0x1569285c0 <line:5:12, col:54> 'int' contains-errors '>'     | | |-ParenExpr 0x156928580 <col:12, col:50> 'int' contains-errors     | | | `-BinaryOperator 0x156928560 <col:13, col:49> 'int' contains-errors '='     | | |   |-DeclRefExpr 0x156928338 <col:13> 'int' lvalue Var 0x1569282b8 'id' 'int'     | | |   `-CallExpr 0x156928538 <col:18, col:49> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x1569284b0 <col:18> 'int ()' Function 0x1569283f8 'h2_iq_shift' 'int ()'     | | |     `-CXXDependentScopeMemberExpr 0x1569284f0 <col:30, col:39> '<dependent type>' contains-errors lvalue ->in_process     | | |       `-RecoveryExpr 0x1569284d0 <col:30> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1569285a0 <col:54> 'int' 0     | `-CompoundStmt 0x156942138 <col:57, line:16:5>     |   `-IfStmt 0x156942118 <line:7:9, line:15:9>     |     |-RecoveryExpr 0x156928780 <line:7:13> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x1569420f8 <col:21, line:15:9>     |       |-CallExpr 0x156941a28 <line:8:13, col:41> '<dependent type>' contains-errors     |       | |-DeclRefExpr 0x1569418b8 <col:13> 'int ()' Function 0x156941800 'ap_assert' 'int ()'     |       | `-UnaryOperator 0x156941a10 <col:23, col:32> '<dependent type>' contains-errors prefix '!' cannot overflow     |       |   `-ImplicitCastExpr 0x1569419f8 <col:24, col:32> '<dependent type>' contains-errors <LValueToRValue>     |       |     `-CXXDependentScopeMemberExpr 0x1569419b0 <col:24, col:32> '<dependent type>' contains-errors lvalue ->scheduled     |       |       `-RecoveryExpr 0x156941990 <col:24> '<dependent type>' contains-errors lvalue     |       `-IfStmt 0x1569420c8 <line:9:13, line:14:13> has_else     |         |-BinaryOperator 0x156941c30 <line:9:17, col:54> 'int' contains-errors '=='     |         | |-CallExpr 0x156941be8 <col:17, col:49> '<dependent type>' contains-errors     |         | | |-DeclRefExpr 0x156941b30 <col:17> 'int ()' Function 0x156941a78 'h2_stream_prep_processing' 'int ()'     |         | | `-RecoveryExpr 0x156941bc8 <col:43> '<dependent type>' contains-errors lvalue     |         | `-RecoveryExpr 0x156941c10 <col:54> '<dependent type>' contains-errors lvalue     |         |-CompoundStmt 0x156941ec8 <col:67, line:11:13>     |         | `-CallExpr 0x156941e88 <line:10:17, col:79> '<dependent type>' contains-errors     |         |   |-DeclRefExpr 0x156941d30 <col:17> 'int ()' Function 0x156941c78 'h2_mplx_process' 'int ()'     |         |   |-CXXDependentScopeMemberExpr 0x156941d70 <col:33, col:42> '<dependent type>' contains-errors lvalue ->mplx     |         |   | `-RecoveryExpr 0x156941d50 <col:33> '<dependent type>' contains-errors lvalue     |         |   |-RecoveryExpr 0x156941e48 <col:48> '<dependent type>' contains-errors lvalue     |         |   |-RecoveryExpr 0x156941e68 <col:56> '<dependent type>' contains-errors lvalue     |         |   `-RecoveryExpr 0x156941de8 <col:72> '<dependent type>' contains-errors lvalue     |         `-CompoundStmt 0x1569420b0 <line:12:18, line:14:13>     |           `-CallExpr 0x156942080 <line:13:17, col:60> '<dependent type>' contains-errors     |             |-DeclRefExpr 0x156941fc0 <col:17> 'int ()' Function 0x156941f08 'h2_stream_rst' 'int ()'     |             |-RecoveryExpr 0x156942040 <col:31> '<dependent type>' contains-errors lvalue     |             `-RecoveryExpr 0x156942060 <col:39> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x1569424d0 <line:18:5, line:23:5>       |-BinaryOperator 0x1569422a0 <line:18:12, col:54> 'int' contains-errors '>'       | |-ParenExpr 0x156942260 <col:12, col:50> 'int' contains-errors       | | `-BinaryOperator 0x156942240 <col:13, col:49> 'int' contains-errors '='       | |   |-DeclRefExpr 0x156942170 <col:13> 'int' lvalue Var 0x1569282b8 'id' 'int'       | |   `-CallExpr 0x156942218 <col:18, col:49> '<dependent type>' contains-errors       | |     |-DeclRefExpr 0x156942190 <col:18> 'int ()' Function 0x1569283f8 'h2_iq_shift' 'int ()'       | |     `-CXXDependentScopeMemberExpr 0x1569421d0 <col:30, col:39> '<dependent type>' contains-errors lvalue ->in_pending       | |       `-RecoveryExpr 0x1569421b0 <col:30> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x156942280 <col:54> 'int' 0       `-CompoundStmt 0x1569424b8 <col:57, line:23:5>         `-IfStmt 0x156942498 <line:20:9, line:22:9>           |-RecoveryExpr 0x156942368 <line:20:13> '_Bool' contains-errors           `-CompoundStmt 0x156942488 <col:21, line:22:9> ","19369":"`-FunctionDecl 0x14200dd90  line:1:6 themes_deinit 'void (void)'   `-CompoundStmt 0x142028210 <line:2:1, line:16:1>     |-WhileStmt 0x14200e198 <line:3:2, line:4:29>     | |-BinaryOperator 0x14200df28 <line:3:9, col:19> 'int' contains-errors '!='     | | |-RecoveryExpr 0x14200dee8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x14200df08 <col:19> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x14200e170 <line:4:3, col:29> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14200e060 <col:3> 'int ()' Function 0x14200dfa8 'theme_destroy' 'int ()'     |   `-CXXDependentScopeMemberExpr 0x14200e128 <col:17, col:25> '<dependent type>' contains-errors lvalue ->data     |     `-RecoveryExpr 0x14200e108 <col:17> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14200e238 <line:5:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14200e1b8 <col:2> 'int ()' Function 0x14200dfa8 'theme_destroy' 'int ()'     | `-RecoveryExpr 0x14200e218 <col:16> '<dependent type>' contains-errors lvalue     `-CallExpr 0x14200e3c0 <line:7:2, col:38> '<dependent type>' contains-errors       |-DeclRefExpr 0x14200e340 <col:2> 'int ()' Function 0x14200e288 'g_hash_table_destroy' 'int ()'       `-RecoveryExpr 0x14200e3a0 <col:23> '<dependent type>' contains-errors lvalue ","19782":"`-FunctionDecl 0x13682f5f8  line:1:1 invalid win_goto 'int (int *)'   |-ParmVarDecl 0x13682f528 <col:10, col:17> col:17 referenced invalid wp 'int *'   `-CompoundStmt 0x134831130 <line:2:1, line:42:1>     |-IfStmt 0x13682fb30 <line:16:5, line:21:5>     | |-CallExpr 0x13682f868 <line:16:9, col:21> 'int'     | | `-ImplicitCastExpr 0x13682f850 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x13682f800 <col:9> 'int ()' Function 0x13682f748 'text_locked' 'int ()'     | `-CompoundStmt 0x13682fb08 <line:17:5, line:21:5>     |   |-CallExpr 0x13682f9a0 <line:18:2, col:13> 'int'     |   | `-ImplicitCastExpr 0x13682f988 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x13682f968 <col:2> 'int ()' Function 0x13682f8b0 'beep_flush' 'int ()'     |   |-CallExpr 0x13682fad8 <line:19:2, col:18> 'int'     |   | `-ImplicitCastExpr 0x13682fac0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x13682faa0 <col:2> 'int ()' Function 0x13682f9e8 'text_locked_msg' 'int ()'     |   `-ReturnStmt 0x13682faf8 <line:20:2>     |-IfStmt 0x134830b20 <line:22:5, line:23:2>     | |-CallExpr 0x134830af0 <line:22:9, col:23> 'int'     | | `-ImplicitCastExpr 0x134830ad8 <col:9> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x134830ab8 <col:9> 'int ()' Function 0x134830a00 'curbuf_locked' 'int ()'     | `-ReturnStmt 0x134830b10 <line:23:2>     |-IfStmt 0x134830f48 <line:25:5, line:28:25> has_else     | |-BinaryOperator 0x134830c00 <line:25:9, col:25> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x134830b60 <col:9, col:13> '<dependent type>' contains-errors lvalue ->w_buffer     | | | `-RecoveryExpr 0x134830b40 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x134830be0 <col:25> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x134830d38 <line:26:2, col:25> 'int'     | | `-ImplicitCastExpr 0x134830d20 <col:2> 'int (*)()' <FunctionToPointerDecay>     | |   `-DeclRefExpr 0x134830d00 <col:2> 'int ()' Function 0x134830c48 'reset_VIsual_and_resel' 'int ()'     | `-IfStmt 0x134830f28 <line:27:10, line:28:25>     |   |-RecoveryExpr 0x134830d70 <line:27:14> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x134830f08 <line:28:2, col:25> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x134830dd8 <col:2, col:6> '<dependent type>' contains-errors lvalue ->w_cursor     |     | `-RecoveryExpr 0x134830db0 <col:2> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x134830d90 <col:2> 'int *' lvalue ParmVar 0x13682f528 'wp' 'int *'     |     `-CXXDependentScopeMemberExpr 0x134830ec0 <col:17, col:25> '<dependent type>' contains-errors lvalue ->w_cursor     |       `-RecoveryExpr 0x134830ea0 <col:17> '<dependent type>' contains-errors lvalue     `-CallExpr 0x134831100 <line:33:5, col:23> '<dependent type>' contains-errors       |-DeclRefExpr 0x134831058 <col:5> 'int ()' Function 0x134830fa0 'win_enter' 'int ()'       |-RecoveryExpr 0x134831078 <col:15> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1348310e0 <col:19> '<dependent type>' contains-errors lvalue ","19759":"`-FunctionDecl 0x1549281f8  line:1:1 invalid vrrp_shutdown_backstop_thread 'int (int *)'   |-ParmVarDecl 0x154928128 <col:31, col:41> col:41 referenced invalid thread 'int *'   `-CompoundStmt 0x155009db0 <line:2:1, line:19:1>     |-DeclStmt 0x154928348 <line:3:2, col:15>     | `-VarDecl 0x1549282c0 <col:2, col:14> col:6 used count 'int' cinit     |   `-IntegerLiteral 0x154928328 <col:14> 'int' 0     |-BinaryOperator 0x154928400 <line:4:2, col:12> '<dependent type>' contains-errors '*'     | |-RecoveryExpr 0x154928380 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x154928360 <col:2> 'int *' lvalue ParmVar 0x154928128 'thread' 'int *'     | `-RecoveryExpr 0x1549283e0 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x155009638 <line:7:2, line:8:47>     | |-CXXDependentScopeMemberExpr 0x154928518 <line:7:6, col:36> '<dependent type>' contains-errors lvalue .rb_node     | | `-CXXDependentScopeMemberExpr 0x1549284d0 <col:6, col:28> '<dependent type>' contains-errors lvalue .rb_root     | |   `-CXXDependentScopeMemberExpr 0x154928488 <col:6, col:22> '<dependent type>' contains-errors lvalue ->child     | |     `-CXXDependentScopeMemberExpr 0x154928440 <col:6, col:14> '<dependent type>' contains-errors lvalue ->master     | |       `-RecoveryExpr 0x154928420 <col:6> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x155009600 <line:8:3, col:47> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1549286c0 <col:3> 'int ()' Function 0x154928608 'script_killall' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x154928700 <col:18, col:26> '<dependent type>' contains-errors lvalue ->master     |   | `-RecoveryExpr 0x1549286e0 <col:18> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x1549287b0 <col:34> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1549287d0 <col:43> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1550098c8 <line:10:2, col:55> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155009738 <col:2> 'int ()' Function 0x155009680 'rb_for_each_entry_cached' 'int ()'     | |-RecoveryExpr 0x155009888 <col:27> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x155009820 <col:30, col:47> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x1550097d8 <col:31, col:47> '<dependent type>' contains-errors lvalue ->child     | |   `-CXXDependentScopeMemberExpr 0x155009790 <col:31, col:39> '<dependent type>' contains-errors lvalue ->master     | |     `-RecoveryExpr 0x155009770 <col:31> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1550098a8 <col:54> '<dependent type>' contains-errors lvalue     |-UnaryOperator 0x155009920 <line:11:3, col:8> 'int' postfix '++'     | `-DeclRefExpr 0x155009900 <col:3> 'int' lvalue Var 0x1549282c0 'count' 'int'     |-CallExpr 0x155009d58 <line:16:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155009cd0 <col:2> 'int ()' Function 0x155009c18 'thread_add_terminate_event' 'int ()'     | `-CXXDependentScopeMemberExpr 0x155009d10 <col:29, col:37> '<dependent type>' contains-errors lvalue ->master     |   `-RecoveryExpr 0x155009cf0 <col:29> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x155009da0 <line:18:2, col:9>       `-IntegerLiteral 0x155009d80 <col:9> 'int' 0 ","19908":"`-FunctionDecl 0x13780e350  line:1:6 sctp_transport_reset 'void (struct sctp_transport *)'   |-ParmVarDecl 0x13780e248 <col:27, col:50> col:50 used t 'struct sctp_transport *'   `-CompoundStmt 0x1378291a0 <line:2:1, line:26:1>     |-DeclStmt 0x137826898 <line:3:2, col:41>     | |-RecordDecl 0x137826648 <col:2, col:9> col:9 struct sctp_association     | `-VarDecl 0x1378267b8 <col:2, col:37> col:27 used asoc 'struct sctp_association *' cinit     |   `-RecoveryExpr 0x137826858 <col:34, col:37> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x137826820 <col:34> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     |-BinaryOperator 0x137826de8 <line:6:2, col:68> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1378268e8 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1378268b0 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-CallExpr 0x137826db8 <col:12, col:68> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x137826a40 <col:12> 'int ()' Function 0x137826988 'min' 'int ()'     |   |-BinaryOperator 0x137826ae0 <col:16, col:24> '<dependent type>' contains-errors '*'     |   | |-IntegerLiteral 0x137826a60 <col:16> 'int' 4     |   | `-RecoveryExpr 0x137826ab8 <col:18, col:24> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x137826a80 <col:18> 'struct sctp_association *' contains-errors lvalue Var 0x1378267b8 'asoc' 'struct sctp_association *'     |   `-CallExpr 0x137826d80 <col:33, col:67> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x137826be0 <col:33> 'int ()' Function 0x137826b28 'max_t' 'int ()'     |     |-RecoveryExpr 0x137826d60 <col:39> '<dependent type>' contains-errors lvalue     |     |-BinaryOperator 0x137826c98 <col:46, col:54> '<dependent type>' contains-errors '*'     |     | |-IntegerLiteral 0x137826c18 <col:46> 'int' 2     |     | `-RecoveryExpr 0x137826c70 <col:48, col:54> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x137826c38 <col:48> 'struct sctp_association *' contains-errors lvalue Var 0x1378267b8 'asoc' 'struct sctp_association *'     |     `-IntegerLiteral 0x137826cb8 <col:63> 'int' 4380     |-BinaryOperator 0x137826e88 <line:7:2, col:21> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137826e40 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137826e08 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137826e68 <col:21> 'int' 0     |-BinaryOperator 0x137826ff8 <line:8:2, col:29> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137826ee0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137826ea8 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-CXXDependentScopeMemberExpr 0x137826fb0 <col:16, col:29> '<dependent type>' contains-errors lvalue .a_rwnd     |   `-CXXDependentScopeMemberExpr 0x137826f68 <col:16, col:27> '<dependent type>' contains-errors lvalue .i     |     `-RecoveryExpr 0x137826f40 <col:16, col:22> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x137826f08 <col:16> 'struct sctp_association *' contains-errors lvalue Var 0x1378267b8 'asoc' 'struct sctp_association *'     |-BinaryOperator 0x1378270d8 <line:9:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137827050 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137827018 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-RecoveryExpr 0x1378270b0 <col:11, col:17> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x137827078 <col:11> 'struct sctp_association *' contains-errors lvalue Var 0x1378267b8 'asoc' 'struct sctp_association *'     |-BinaryOperator 0x137827178 <line:10:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137827130 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1378270f8 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137827158 <col:11> 'int' 0     |-BinaryOperator 0x137827218 <line:11:2, col:12> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1378271d0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137827198 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x1378271f8 <col:12> 'int' 0     |-BinaryOperator 0x1378272b8 <line:12:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137827270 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137827238 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137827298 <col:14> 'int' 0     |-BinaryOperator 0x137827358 <line:15:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137827310 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1378272d8 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137827338 <col:27> 'int' 0     |-BinaryOperator 0x1378273f8 <line:16:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1378273b0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137827378 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x1378273d8 <col:19> 'int' 0     |-BinaryOperator 0x137827498 <line:17:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137827450 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137827418 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137827478 <col:19> 'int' 0     |-BinaryOperator 0x137827538 <line:18:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1378274f0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1378274b8 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137827518 <col:19> 'int' 0     |-BinaryOperator 0x1378275d8 <line:19:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x137827590 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x137827558 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x1378275b8 <col:15> 'int' 0     |-BinaryOperator 0x137828ec8 <line:22:2, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x137828e60 <col:2, col:10> '<dependent type>' contains-errors lvalue .changeover_active     | | `-RecoveryExpr 0x137828e38 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137828e00 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137828ea8 <col:30> 'int' 0     |-BinaryOperator 0x137828fb0 <line:23:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x137828f48 <col:2, col:10> '<dependent type>' contains-errors lvalue .cycling_changeover     | | `-RecoveryExpr 0x137828f20 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137828ee8 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137828f90 <col:31> 'int' 0     |-BinaryOperator 0x137829098 <line:24:2, col:31> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x137829030 <col:2, col:10> '<dependent type>' contains-errors lvalue .next_tsn_at_change     | | `-RecoveryExpr 0x137829008 <col:2, col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x137828fd0 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'     | `-IntegerLiteral 0x137829078 <col:31> 'int' 0     `-BinaryOperator 0x137829180 <line:25:2, col:28> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x137829118 <col:2, col:10> '<dependent type>' contains-errors lvalue .cacc_saw_newack       | `-RecoveryExpr 0x1378290f0 <col:2, col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1378290b8 <col:2> 'struct sctp_transport *' lvalue ParmVar 0x13780e248 't' 'struct sctp_transport *'       `-IntegerLiteral 0x137829160 <col:28> 'int' 0 ","19744":"`-FunctionDecl 0x126128750  line:1:6 inet_frags_init_net 'void (struct netns_frags *)'   |-ParmVarDecl 0x126128648 <col:26, col:46> col:46 used nf 'struct netns_frags *'   `-CompoundStmt 0x126140e78 <line:2:1, line:6:1>     |-BinaryOperator 0x126140ac8 <line:3:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x126140a80 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x126140a48 <col:2> 'struct netns_frags *' lvalue ParmVar 0x126128648 'nf' 'struct netns_frags *'     | `-IntegerLiteral 0x126140aa8 <col:16> 'int' 0     |-CallExpr 0x126140c98 <line:4:2, col:24> 'int'     | |-ImplicitCastExpr 0x126140c80 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x126140c10 <col:2> 'int ()' Function 0x126140b58 'init_frag_mem_limit' 'int ()'     | `-ImplicitCastExpr 0x126140cc0 <col:22> 'struct netns_frags *' <LValueToRValue>     |   `-DeclRefExpr 0x126140c30 <col:22> 'struct netns_frags *' lvalue ParmVar 0x126128648 'nf' 'struct netns_frags *'     `-CallExpr 0x126140e50 <line:5:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x126140db8 <col:2> 'int ()' Function 0x126140d00 'INIT_LIST_HEAD' 'int ()'       `-UnaryOperator 0x126140e38 <col:17, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow         `-RecoveryExpr 0x126140e10 <col:18, col:22> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x126140dd8 <col:18> 'struct netns_frags *' lvalue ParmVar 0x126128648 'nf' 'struct netns_frags *' ","19896":"`-FunctionDecl 0x12d942210  col:25 implicit used fabs 'double (double)' extern   |-ParmVarDecl 0x12d942310 <<invalid sloc>> <invalid sloc> 'double'   |-BuiltinAttr 0x12d9422b8 <<invalid sloc>> Implicit 1004   |-NoThrowAttr 0x12d942380 <col:25> Implicit   `-ConstAttr 0x12d9423a8 <col:25> Implicit ","19814":"`-FunctionDecl 0x141827438  line:1:1 invalid maybe_add_etype_info2 'int (struct padata_state *, int)'   |-ParmVarDecl 0x14180e248 <col:23, col:44> col:44 used state 'struct padata_state *'   |-ParmVarDecl 0x14180e2e0 <col:51, col:67> col:67 invalid code 'int'   `-CompoundStmt 0x141828048 <line:2:1, line:29:1>     |-IfStmt 0x1418275d0 <line:9:5, line:10:16>     | |-BinaryOperator 0x141827580 <line:9:9, col:17> 'int' contains-errors '!='     | | |-RecoveryExpr 0x141827508 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x141827560 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1418275c0 <line:10:9, col:16>     |   `-IntegerLiteral 0x1418275a0 <col:16> 'int' 0     |-IfStmt 0x141827760 <line:13:5, line:14:16>     | |-BinaryOperator 0x141827710 <line:13:9, col:29> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x1418276a8 <col:9, col:15> '<dependent type>' contains-errors lvalue ->client_key     | | | `-RecoveryExpr 0x141827688 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1418276f0 <col:29> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x141827750 <line:14:9, col:16>     |   `-IntegerLiteral 0x141827730 <col:16> 'int' 0     `-IfStmt 0x141827b30 <line:17:5, line:19:16>       |-BinaryOperator 0x141827ae0 <line:17:9, line:18:56> 'int' contains-errors '!='       | |-CallExpr 0x141827a88 <line:17:9, line:18:51> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x1418278e0 <line:17:9> 'int ()' Function 0x141827828 'krb5int_find_pa_data' 'int ()'       | | |-RecoveryExpr 0x141827a48 <col:30> '<dependent type>' contains-errors lvalue       | | |-CXXDependentScopeMemberExpr 0x141827978 <col:39, col:55> '<dependent type>' contains-errors lvalue ->padata       | | | `-RecoveryExpr 0x141827950 <col:39, col:46> '<dependent type>' contains-errors lvalue       | | |   `-DeclRefExpr 0x141827918 <col:39> 'struct padata_state *' lvalue ParmVar 0x14180e248 'state' 'struct padata_state *'       | | `-RecoveryExpr 0x141827a68 <line:18:30> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x141827ac0 <col:56> '<dependent type>' contains-errors lvalue       `-ReturnStmt 0x141827b20 <line:19:9, col:16>         `-IntegerLiteral 0x141827b00 <col:16> 'int' 0 ","20181":"`-FunctionDecl 0x157140a00  line:1:13 nfs4_open_prepare 'void (struct rpc_task *, void *)' static   |-ParmVarDecl 0x157128648 <col:31, col:48> col:48 used task 'struct rpc_task *'   |-ParmVarDecl 0x1571286c8 <col:54, col:60> col:60 used calldata 'void *'   `-CompoundStmt 0x157144ca8 <line:2:1, line:36:1>     |-DeclStmt 0x157140d38 <line:3:2, col:39>     | |-RecordDecl 0x157140b00 <col:2, col:9> col:9 struct nfs4_opendata     | `-VarDecl 0x157140c68 <col:2, col:31> col:24 used data 'struct nfs4_opendata *' cinit     |   `-ImplicitCastExpr 0x157140d08 <col:31> 'struct nfs4_opendata *' <BitCast>     |     `-ImplicitCastExpr 0x157140cf0 <col:31> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x157140cd0 <col:31> 'void *' lvalue ParmVar 0x1571286c8 'calldata' 'void *'     |-DeclStmt 0x157140f98 <line:4:2, col:43>     | |-RecordDecl 0x157140d50 <col:2, col:9> col:9 struct nfs4_state_owner     | `-VarDecl 0x157140eb8 <col:2, col:38> col:27 used sp 'struct nfs4_state_owner *' cinit     |   `-RecoveryExpr 0x157140f58 <col:32, col:38> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157140f20 <col:32> 'struct nfs4_opendata *' lvalue Var 0x157140c68 'data' 'struct nfs4_opendata *'     |-IfStmt 0x157141248 <line:6:2, line:7:3>     | |-BinaryOperator 0x157141218 <line:6:6, col:55> 'int' contains-errors '!='     | | |-CallExpr 0x1571411c8 <col:6, col:50> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x1571410e0 <col:6> 'int ()' Function 0x157141028 'nfs_wait_on_sequence' 'int ()'     | | | |-CXXDependentScopeMemberExpr 0x157141160 <col:27, col:39> '<dependent type>' contains-errors lvalue .seqid     | | | | `-RecoveryExpr 0x157141138 <col:27, col:33> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x157141100 <col:27> 'struct nfs4_opendata *' lvalue Var 0x157140c68 'data' 'struct nfs4_opendata *'     | | | `-DeclRefExpr 0x1571411a8 <col:46> 'struct rpc_task *' lvalue ParmVar 0x157128648 'task' 'struct rpc_task *'     | | `-IntegerLiteral 0x1571411f8 <col:55> 'int' 0     | `-ReturnStmt 0x157141238 <line:7:3>     |-IfStmt 0x1571442f0 <line:9:2, line:22:2>     | |-BinaryOperator 0x157141320 <line:9:6, col:21> 'int' contains-errors '!='     | | |-RecoveryExpr 0x1571412a0 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x157141268 <col:6> 'struct nfs4_opendata *' lvalue Var 0x157140c68 'data' 'struct nfs4_opendata *'     | | `-RecoveryExpr 0x157141300 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1571442b0 <col:27, line:22:2>     |   |-DeclStmt 0x157141528 <line:10:3, col:36>     |   | |-RecordDecl 0x157141340 <col:3, col:10> col:10 struct nfs_delegation     |   | `-VarDecl 0x1571414a8 <col:3, col:26> col:26 used delegation 'struct nfs_delegation *'     |   |-IfStmt 0x157141858 <line:12:3, line:13:9>     |   | |-RecoveryExpr 0x1571417d0 <line:12:7, col:92> '_Bool' contains-errors     |   | `-GotoStmt 0x157141840 <line:13:4, col:9> 'out_no_action' 0x1571417f0     |   |-CallExpr 0x1571419c8 <line:14:3, col:17> 'int'     |   | `-ImplicitCastExpr 0x1571419b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x157141958 <col:3> 'int ()' Function 0x1571418a0 'rcu_read_lock' 'int ()'     |   |-BinaryOperator 0x157143d60 <line:15:3, col:69> 'struct nfs_delegation *' contains-errors '='     |   | |-DeclRefExpr 0x157143a00 <col:3> 'struct nfs_delegation *' lvalue Var 0x1571414a8 'delegation' 'struct nfs_delegation *'     |   | `-CallExpr 0x157143d38 <col:16, col:69> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x157143b00 <col:16> 'int ()' Function 0x157143a48 'rcu_dereference' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x157143cf0 <col:32, col:59> '<dependent type>' contains-errors lvalue ->delegation     |   |     `-CallExpr 0x157143cc8 <col:32, col:56> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x157143c00 <col:32> 'int ()' Function 0x157143b48 'NFS_I' 'int ()'     |   |       `-CXXDependentScopeMemberExpr 0x157143c80 <col:38, col:51> '<dependent type>' contains-errors lvalue ->inode     |   |         `-RecoveryExpr 0x157143c58 <col:38, col:44> '<dependent type>' contains-errors lvalue     |   |           `-DeclRefExpr 0x157143c20 <col:38> 'struct nfs4_opendata *' lvalue Var 0x157140c68 'data' 'struct nfs4_opendata *'     |   |-IfStmt 0x157144238 <line:16:3, line:20:3>     |   | |-BinaryOperator 0x1571440a8 <line:16:7, line:17:68> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x157144018 <line:16:7, col:21> 'int' contains-errors '!='     |   | | | |-DeclRefExpr 0x157143d80 <col:7> 'struct nfs_delegation *' lvalue Var 0x1571414a8 'delegation' 'struct nfs_delegation *'     |   | | | `-RecoveryExpr 0x157143ff8 <col:21> '<dependent type>' contains-errors lvalue     |   | | `-BinaryOperator 0x157144088 <line:17:7, col:68> 'int' contains-errors '=='     |   | |   |-CallExpr 0x157144058 <col:7, col:63> '<dependent type>' contains-errors     |   | |   | |-DeclRefExpr 0x157143eb8 <col:7> 'int ()' Function 0x157143e00 'test_bit' 'int ()'     |   | |   | |-RecoveryExpr 0x157144038 <col:16> '<dependent type>' contains-errors lvalue     |   | |   | `-UnaryOperator 0x157143f50 <col:45, col:58> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |   |   `-RecoveryExpr 0x157143f28 <col:46, col:58> '<dependent type>' contains-errors lvalue     |   | |   |     `-DeclRefExpr 0x157143ef0 <col:46> 'struct nfs_delegation *' lvalue Var 0x1571414a8 'delegation' 'struct nfs_delegation *'     |   | |   `-IntegerLiteral 0x157143f98 <col:68> 'int' 0     |   | `-CompoundStmt 0x157144218 <col:71, line:20:3>     |   |   |-CallExpr 0x1571441e0 <line:18:4, col:20> 'int'     |   |   | `-ImplicitCastExpr 0x1571441c8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   |   `-DeclRefExpr 0x1571441a8 <col:4> 'int ()' Function 0x1571440f0 'rcu_read_unlock' 'int ()'     |   |   `-GotoStmt 0x157144200 <line:19:4, col:9> 'out_no_action' 0x1571417f0     |   `-CallExpr 0x157144290 <line:21:3, col:19> 'int'     |     `-ImplicitCastExpr 0x157144278 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x157144258 <col:3> 'int ()' Function 0x1571440f0 'rcu_read_unlock' 'int ()'     |-BinaryOperator 0x157144460 <line:24:2, col:35> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x157144370 <col:2, col:14> '<dependent type>' contains-errors lvalue .id     | | `-RecoveryExpr 0x157144348 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x157144310 <col:2> 'struct nfs4_opendata *' lvalue Var 0x157140c68 'data' 'struct nfs4_opendata *'     | `-CXXDependentScopeMemberExpr 0x157144418 <col:19, col:35> '<dependent type>' contains-errors lvalue .id     |   `-RecoveryExpr 0x1571443f0 <col:19, col:23> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x1571443b8 <col:19> 'struct nfs4_state_owner *' contains-errors lvalue Var 0x157140eb8 'sp' 'struct nfs4_state_owner *'     |-BinaryOperator 0x1571445d0 <line:25:2, col:40> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1571444e0 <col:2, col:14> '<dependent type>' contains-errors lvalue .clientid     | | `-RecoveryExpr 0x1571444b8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x157144480 <col:2> 'struct nfs4_opendata *' lvalue Var 0x157140c68 'data' 'struct nfs4_opendata *'     | `-CXXDependentScopeMemberExpr 0x157144588 <col:25, col:40> '<dependent type>' contains-errors lvalue ->cl_clientid     |   `-RecoveryExpr 0x157144560 <col:25, col:29> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157144528 <col:25> 'struct nfs4_state_owner *' contains-errors lvalue Var 0x157140eb8 'sp' 'struct nfs4_state_owner *'     |-IfStmt 0x157144a18 <line:26:2, line:29:2>     | |-RecoveryExpr 0x157144698 <line:26:6, col:27> '_Bool' contains-errors     | `-CompoundStmt 0x157144a00 <col:53, line:29:2>     |   `-CallExpr 0x1571449c8 <line:28:3, col:46> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x157144840 <col:3> 'int ()' Function 0x157144788 'nfs_copy_fh' 'int ()'     |     |-UnaryOperator 0x157144908 <col:15, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-CXXDependentScopeMemberExpr 0x1571448c0 <col:16, col:28> '<dependent type>' contains-errors lvalue .fh     |     |   `-RecoveryExpr 0x157144898 <col:16, col:22> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x157144860 <col:16> 'struct nfs4_opendata *' lvalue Var 0x157140c68 'data' 'struct nfs4_opendata *'     |     `-CXXDependentScopeMemberExpr 0x157144980 <col:32, col:44> '<dependent type>' contains-errors lvalue .fh     |       `-RecoveryExpr 0x157144958 <col:32, col:38> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x157144920 <col:32> 'struct nfs4_opendata *' lvalue Var 0x157140c68 'data' 'struct nfs4_opendata *'     |-CallExpr 0x157144bd0 <line:31:2, col:21> 'int'     | |-ImplicitCastExpr 0x157144bb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157144b78 <col:2> 'int ()' Function 0x157144ac0 'rpc_call_start' 'int ()'     | `-ImplicitCastExpr 0x157144bf8 <col:17> 'struct rpc_task *' <LValueToRValue>     |   `-DeclRefExpr 0x157144b98 <col:17> 'struct rpc_task *' lvalue ParmVar 0x157128648 'task' 'struct rpc_task *'     |-ReturnStmt 0x157144c10 <line:32:2>     `-LabelStmt 0x157144c88 <line:33:1, col:14> 'out_no_action'       `-NullStmt 0x157144c80 <col:14> ","19591":"`-FunctionDecl 0x12800de88  line:1:8 invalid text_box_write 'int (int *, int *)'   |-ParmVarDecl 0x12800dd28 <col:23, col:31> col:31 invalid s 'int *'   |-ParmVarDecl 0x12800dda8 <col:34, col:48> col:48 invalid bs 'int *'   `-CompoundStmt 0x11f923220 <line:2:1, line:29:1>     |-IfStmt 0x12800e1e0 <line:8:2, col:16>     | |-RecoveryExpr 0x12800e178 <col:6> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12800e1d0 <col:9, col:16>     |   `-RecoveryExpr 0x12800e1b0 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f922648 <line:9:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12800e2e0 <col:2> 'int ()' Function 0x12800e228 'gf_bs_write_data' 'int ()'     | |-RecoveryExpr 0x12800e300 <col:19> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x11f922600 <col:23, col:28> '<dependent type>' contains-errors lvalue ->reserved     | | `-RecoveryExpr 0x12800e3d8 <col:23> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12800e380 <col:38> 'int' 6     |-CallExpr 0x11f922898 <line:10:2, col:45> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f922760 <col:2> 'int ()' Function 0x11f9226a8 'gf_bs_write_u16' 'int ()'     | |-RecoveryExpr 0x11f922780 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x11f922850 <col:22, col:27> '<dependent type>' contains-errors lvalue ->dataReferenceIndex     |   `-RecoveryExpr 0x11f922830 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f922ae0 <line:11:2, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f9229a8 <col:2> 'int ()' Function 0x11f9228f0 'gf_bs_write_u32' 'int ()'     | |-RecoveryExpr 0x11f9229c8 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x11f922a98 <col:22, col:27> '<dependent type>' contains-errors lvalue ->displayFlags     |   `-RecoveryExpr 0x11f922a78 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x11f922c48 <line:12:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11f922b10 <col:2> 'int ()' Function 0x11f9228f0 'gf_bs_write_u32' 'int ()'     | |-RecoveryExpr 0x11f922b30 <col:18> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x11f922c00 <col:22, col:27> '<dependent type>' contains-errors lvalue ->textJustification     |   `-RecoveryExpr 0x11f922be0 <col:22> '<dependent type>' contains-errors lvalue     `-IfStmt 0x11f9231f0 <line:22:2, line:27:2> has_else       |-RecoveryExpr 0x11f923098 <line:22:6, col:59> '_Bool' contains-errors       |-CompoundStmt 0x11f923138 <col:62, line:25:2>       `-CompoundStmt 0x11f9231d8 <col:9, line:27:2>         `-CallExpr 0x11f9231a8 <line:26:3, col:23> '<dependent type>' contains-errors           |-DeclRefExpr 0x11f923148 <col:3> 'int ()' Function 0x11f922f00 'gf_bs_write_u8' 'int ()'           |-RecoveryExpr 0x11f923168 <col:18> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x11f923188 <col:22> 'int' 0 ","20119":"`-FunctionDecl 0x140940ab8  line:1:24 css_task_iter_next_css_set 'struct css_set *(struct css_task_iter *)' static   |-ParmVarDecl 0x1409286e8 <col:51, col:73> col:73 used it 'struct css_task_iter *'   `-CompoundStmt 0x140943ac8 <line:2:1, line:51:1>     |-DeclStmt 0x140940d98 <line:3:2, col:21>     | |-RecordDecl 0x140940bb0 <col:2, col:9> col:9 struct list_head     | `-VarDecl 0x140940d18 <col:2, col:20> col:20 used l 'struct list_head *'     |-DeclStmt 0x140940f98 <line:4:2, col:29>     | |-RecordDecl 0x140940db0 <col:2, col:9> col:9 struct cgrp_cset_link     | `-VarDecl 0x140940f18 <col:2, col:25> col:25 used link 'struct cgrp_cset_link *'     |-DeclStmt 0x1409410a0 <line:5:2, col:22>     | `-VarDecl 0x140941038 <col:2, col:18> col:18 used cset 'struct css_set *'     |-CallExpr 0x140941290 <line:7:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1409411e0 <col:2> 'int ()' Function 0x140941128 'lockdep_assert_held' 'int ()'     | `-UnaryOperator 0x140941278 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x140941258 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1409417b0 <line:10:2, line:20:2>     | |-RecoveryExpr 0x1409412f0 <line:10:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1409412b8 <col:6> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     | `-CompoundStmt 0x140941788 <col:21, line:20:2>     |   |-BinaryOperator 0x1409413e0 <line:11:3, col:22> 'struct list_head *' contains-errors '='     |   | |-DeclRefExpr 0x140941318 <col:3> 'struct list_head *' lvalue Var 0x140940d18 'l' 'struct list_head *'     |   | `-CXXDependentScopeMemberExpr 0x140941398 <col:7, col:22> '<dependent type>' contains-errors lvalue ->next     |   |   `-RecoveryExpr 0x140941370 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x140941338 <col:7> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |   |-IfStmt 0x140941690 <line:13:3, line:17:3>     |   | |-BinaryOperator 0x140941480 <line:13:7, col:16> 'int' contains-errors '!='     |   | | |-DeclRefExpr 0x140941400 <col:7> 'struct list_head *' lvalue Var 0x140940d18 'l' 'struct list_head *'     |   | | `-RecoveryExpr 0x140941458 <col:12, col:16> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x140941420 <col:12> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |   | `-CompoundStmt 0x140941678 <col:28, line:17:3>     |   |   `-BinaryOperator 0x140941520 <line:14:4, col:20> '<dependent type>' contains-errors '='     |   |     |-RecoveryExpr 0x1409414d8 <col:4, col:8> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x1409414a0 <col:4> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |   |     `-DeclRefExpr 0x140941500 <col:20> 'struct list_head *' lvalue Var 0x140940d18 'l' 'struct list_head *'     |   `-BinaryOperator 0x140941768 <line:19:3, col:19> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x1409416e8 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1409416b0 <col:3> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |     `-RecoveryExpr 0x140941748 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x140941850 <line:23:2, col:10> 'struct list_head *' contains-errors '='     | |-DeclRefExpr 0x1409417d0 <col:2> 'struct list_head *' lvalue Var 0x140940d18 'l' 'struct list_head *'     | `-RecoveryExpr 0x140941828 <col:6, col:10> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1409417f0 <col:6> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |-BinaryOperator 0x1409418f0 <line:24:2, col:9> 'struct list_head *' contains-errors '='     | |-DeclRefExpr 0x140941870 <col:2> 'struct list_head *' lvalue Var 0x140940d18 'l' 'struct list_head *'     | `-RecoveryExpr 0x1409418c8 <col:6, col:9> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x140941890 <col:6> 'struct list_head *' lvalue Var 0x140940d18 'l' 'struct list_head *'     |-IfStmt 0x140942f08 <line:25:2, line:28:2>     | |-BinaryOperator 0x140941990 <line:25:6, col:15> 'int' contains-errors '=='     | | |-DeclRefExpr 0x140941910 <col:6> 'struct list_head *' lvalue Var 0x140940d18 'l' 'struct list_head *'     | | `-RecoveryExpr 0x140941968 <col:11, col:15> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x140941930 <col:11> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     | `-CompoundStmt 0x140942ee8 <col:26, line:28:2>     |   |-BinaryOperator 0x140942e80 <line:26:3, col:18> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x140942e00 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1409419b0 <col:3> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |   | `-RecoveryExpr 0x140942e60 <col:18> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x140942ed8 <line:27:3, col:10>     |     `-RecoveryExpr 0x140942eb8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x140943298 <line:30:2, line:35:2> has_else     | |-RecoveryExpr 0x140942f60 <line:30:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x140942f28 <col:6> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     | |-CompoundStmt 0x140943090 <col:14, line:32:2>     | `-CompoundStmt 0x140943280 <col:9, line:35:2>     |   `-BinaryOperator 0x140943260 <line:34:3, col:16> 'struct css_set *' contains-errors '='     |     |-DeclRefExpr 0x1409431e0 <col:3> 'struct css_set *' lvalue Var 0x140941038 'cset' 'struct css_set *'     |     `-RecoveryExpr 0x140943238 <col:10, col:16> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x140943200 <col:10> 'struct cgrp_cset_link *' lvalue Var 0x140940f18 'link' 'struct cgrp_cset_link *'     |-BinaryOperator 0x140943348 <line:37:2, col:17> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x140943300 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1409432c8 <col:2> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     | `-DeclRefExpr 0x140943328 <col:17> 'struct list_head *' lvalue Var 0x140940d18 'l' 'struct list_head *'     |-IfStmt 0x140943a60 <line:40:2, line:48:2>     | |-RecoveryExpr 0x1409433c8 <line:40:6, col:18> '_Bool' contains-errors     | `-CompoundStmt 0x140943a28 <col:42, line:48:2>     |   |-IfStmt 0x1409435d0 <line:41:3, line:42:36>     |   | |-RecoveryExpr 0x140943420 <line:41:7, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1409433e8 <col:7> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |   | `-CallExpr 0x1409435a8 <line:42:4, col:36> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x140943528 <col:4> 'int ()' Function 0x140943470 'put_css_set_locked' 'int ()'     |   |   `-RecoveryExpr 0x140943580 <col:23, col:27> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x140943548 <col:23> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |   |-BinaryOperator 0x140943670 <line:43:3, col:19> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x140943628 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1409435f0 <col:3> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |   | `-DeclRefExpr 0x140943650 <col:19> 'struct css_set *' lvalue Var 0x140941038 'cset' 'struct css_set *'     |   |-CallExpr 0x1409437f8 <line:44:3, col:19> 'int'     |   | |-ImplicitCastExpr 0x1409437e0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x140943770 <col:3> 'int ()' Function 0x1409436b8 'get_css_set' 'int ()'     |   | `-ImplicitCastExpr 0x140943820 <col:15> 'struct css_set *' <LValueToRValue>     |   |   `-DeclRefExpr 0x140943790 <col:15> 'struct css_set *' lvalue Var 0x140941038 'cset' 'struct css_set *'     |   |-BinaryOperator 0x140943910 <line:46:3, col:27> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x140943870 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x140943838 <col:3> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |   | `-UnaryOperator 0x1409438f8 <col:20, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1409438d0 <col:21, col:27> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x140943898 <col:21> 'struct css_set *' lvalue Var 0x140941038 'cset' 'struct css_set *'     |   `-BinaryOperator 0x140943a08 <line:47:3, col:26> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x140943968 <col:3, col:7> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x140943930 <col:3> 'struct css_task_iter *' lvalue ParmVar 0x1409286e8 'it' 'struct css_task_iter *'     |     `-UnaryOperator 0x1409439f0 <col:19, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1409439c8 <col:20, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x140943990 <col:20> 'struct css_set *' lvalue Var 0x140941038 'cset' 'struct css_set *'     `-ReturnStmt 0x140943ab8 <line:50:2, col:9>       `-ImplicitCastExpr 0x140943aa0 <col:9> 'struct css_set *' <LValueToRValue>         `-DeclRefExpr 0x140943a80 <col:9> 'struct css_set *' lvalue Var 0x140941038 'cset' 'struct css_set *' ","19353":"`-FunctionDecl 0x14d00dd98  line:1:1 set_hunkmax 'int (void)'   `-CompoundStmt 0x14e009248 <line:2:1, line:9:1> ","19893":"`-FunctionDecl 0x154928758  line:1:13 read_conn 'long (struct mg_connection *)' static   |-ParmVarDecl 0x154928648 <col:23, col:45> col:45 used c 'struct mg_connection *'   `-CompoundStmt 0x15680a158 <col:48, line:15:1>     |-DeclStmt 0x154940b20 <line:2:3, col:14>     | `-VarDecl 0x154940a68 <col:3, col:13> col:8 used n 'long' cinit     |   `-ImplicitCastExpr 0x154940b08 <col:12, col:13> 'long' <IntegralCast>     |     `-UnaryOperator 0x154940af0 <col:12, col:13> 'int' prefix '-'     |       `-IntegerLiteral 0x154940ad0 <col:13> 'int' 1     |-IfStmt 0x15680a0e0 <line:3:3, line:13:3> has_else     | |-BinaryOperator 0x154940c50 <line:3:7, col:22> 'int' contains-errors '>='     | | |-CXXDependentScopeMemberExpr 0x154940b98 <col:7, col:15> '<dependent type>' contains-errors lvalue .len     | | | `-RecoveryExpr 0x154940b70 <col:7, col:10> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x154940b38 <col:7> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     | | `-RecoveryExpr 0x154940c30 <col:22> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x154940ec8 <col:44, line:5:3>     | | `-CallExpr 0x154940e68 <line:4:5, col:22> 'int'     | |   |-ImplicitCastExpr 0x154940e50 <col:5> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x154940d80 <col:5> 'int ()' Function 0x154940cc8 'mg_error' 'int ()'     | |   |-ImplicitCastExpr 0x154940e98 <col:14> 'struct mg_connection *' <LValueToRValue>     | |   | `-DeclRefExpr 0x154940da0 <col:14> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     | |   `-ImplicitCastExpr 0x154940eb0 <col:17> 'char *' <ArrayToPointerDecay>     | |     `-StringLiteral 0x154940e00 <col:17> 'char[4]' lvalue \"STR\"     | `-IfStmt 0x15680a0b0 <line:5:10, line:13:3> has_else     |   |-BinaryOperator 0x154941410 <line:5:14, line:6:66> 'int' contains-errors '&&'     |   | |-BinaryOperator 0x154941368 <line:5:14, col:43> 'int' contains-errors '<'     |   | | |-BinaryOperator 0x154941030 <col:14, col:37> '<dependent type>' contains-errors '-'     |   | | | |-CXXDependentScopeMemberExpr 0x154940f40 <col:14, col:22> '<dependent type>' contains-errors lvalue .size     |   | | | | `-RecoveryExpr 0x154940f18 <col:14, col:17> '<dependent type>' contains-errors lvalue     |   | | | |   `-DeclRefExpr 0x154940ee0 <col:14> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     |   | | | `-CXXDependentScopeMemberExpr 0x154940fe8 <col:29, col:37> '<dependent type>' contains-errors lvalue .len     |   | | |   `-RecoveryExpr 0x154940fc0 <col:29, col:32> '<dependent type>' contains-errors lvalue     |   | | |     `-DeclRefExpr 0x154940f88 <col:29> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     |   | | `-RecoveryExpr 0x154941348 <col:43> '<dependent type>' contains-errors lvalue     |   | `-UnaryOperator 0x1549413f8 <line:6:14, col:66> '<dependent type>' contains-errors prefix '!' cannot overflow     |   |   `-CallExpr 0x1549413c8 <col:15, col:66> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x154941168 <col:15> 'int ()' Function 0x1549410b0 'mg_iobuf_resize' 'int ()'     |   |     |-UnaryOperator 0x1549411e8 <col:31, col:35> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     | `-RecoveryExpr 0x1549411c0 <col:32, col:35> '<dependent type>' contains-errors lvalue     |   |     |   `-DeclRefExpr 0x154941188 <col:32> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     |   |     `-BinaryOperator 0x1549413a8 <col:41, col:56> '<dependent type>' contains-errors '+'     |   |       |-CXXDependentScopeMemberExpr 0x154941260 <col:41, col:49> '<dependent type>' contains-errors lvalue .size     |   |       | `-RecoveryExpr 0x154941238 <col:41, col:44> '<dependent type>' contains-errors lvalue     |   |       |   `-DeclRefExpr 0x154941200 <col:41> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     |   |       `-RecoveryExpr 0x154941388 <col:56> '<dependent type>' contains-errors lvalue     |   |-CompoundStmt 0x154941508 <col:69, line:8:3>     |   | `-CallExpr 0x1549414a8 <line:7:5, col:22> 'int'     |   |   |-ImplicitCastExpr 0x154941490 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x154941430 <col:5> 'int ()' Function 0x154940cc8 'mg_error' 'int ()'     |   |   |-ImplicitCastExpr 0x1549414d8 <col:14> 'struct mg_connection *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x154941450 <col:14> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     |   |   `-ImplicitCastExpr 0x1549414f0 <col:17> 'char *' <ArrayToPointerDecay>     |   |     `-StringLiteral 0x154941470 <col:17> 'char[4]' lvalue \"STR\"     |   `-CompoundStmt 0x15680a090 <line:8:10, line:13:3>     |     |-DeclStmt 0x154941798 <line:9:5, col:51>     |     | `-VarDecl 0x154941538 <col:5, col:50> col:11 used buf 'char *' cinit     |     |   `-CStyleCastExpr 0x154941770 <col:17, col:50> 'char *' contains-errors <Dependent>     |     |     `-UnaryOperator 0x154941740 <col:26, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |       `-ArraySubscriptExpr 0x154941720 <col:27, col:50> '<dependent type>' contains-errors lvalue     |     |         |-ImplicitCastExpr 0x1549416f0 <col:27, col:35> '<dependent type>' contains-errors <LValueToRValue>     |     |         | `-CXXDependentScopeMemberExpr 0x154941600 <col:27, col:35> '<dependent type>' contains-errors lvalue .buf     |     |         |   `-RecoveryExpr 0x1549415d8 <col:27, col:30> '<dependent type>' contains-errors lvalue     |     |         |     `-DeclRefExpr 0x1549415a0 <col:27> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     |     |         `-ImplicitCastExpr 0x154941708 <col:39, col:47> '<dependent type>' contains-errors <LValueToRValue>     |     |           `-CXXDependentScopeMemberExpr 0x1549416a8 <col:39, col:47> '<dependent type>' contains-errors lvalue .len     |     |             `-RecoveryExpr 0x154941680 <col:39, col:42> '<dependent type>' contains-errors lvalue     |     |               `-DeclRefExpr 0x154941648 <col:39> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     |     `-BinaryOperator 0x1549419b8 <line:10:5, col:41> 'unsigned long' contains-errors '='     |       |-UnaryExprOrTypeTraitExpr 0x154941998 <col:5, col:12> 'unsigned long' contains-errors sizeof     |       | `-RecoveryExpr 0x154941978 <col:12> '<dependent type>' contains-errors lvalue     |       `-BinaryOperator 0x154941938 <col:18, col:41> '<dependent type>' contains-errors '-'     |         |-CXXDependentScopeMemberExpr 0x154941848 <col:18, col:26> '<dependent type>' contains-errors lvalue .size     |         | `-RecoveryExpr 0x154941820 <col:18, col:21> '<dependent type>' contains-errors lvalue     |         |   `-DeclRefExpr 0x1549417e8 <col:18> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     |         `-CXXDependentScopeMemberExpr 0x1549418f0 <col:33, col:41> '<dependent type>' contains-errors lvalue .len     |           `-RecoveryExpr 0x1549418c8 <col:33, col:36> '<dependent type>' contains-errors lvalue     |             `-DeclRefExpr 0x154941890 <col:33> 'struct mg_connection *' lvalue ParmVar 0x154928648 'c' 'struct mg_connection *'     `-ReturnStmt 0x15680a148 <line:14:3, col:10>       `-ImplicitCastExpr 0x15680a130 <col:10> 'long' <LValueToRValue>         `-DeclRefExpr 0x15680a110 <col:10> 'long' lvalue Var 0x154940a68 'n' 'long' ","19798":"`-FunctionDecl 0x150128750  line:1:6 kvm_ioapic_destroy 'void (struct kvm *)'   |-ParmVarDecl 0x150128648 <col:25, col:37> col:37 used kvm 'struct kvm *'   `-CompoundStmt 0x1501455e8 <line:2:1, line:9:1>     |-DeclStmt 0x150144ee0 <line:3:2, col:47>     | |-RecordDecl 0x150144c48 <col:2, col:9> col:9 struct kvm_ioapic     | `-VarDecl 0x150144db8 <col:2, col:40> col:21 used ioapic 'struct kvm_ioapic *' cinit     |   `-CXXDependentScopeMemberExpr 0x150144e80 <col:30, col:40> '<dependent type>' contains-errors lvalue .vioapic     |     `-RecoveryExpr 0x150144e58 <col:30, col:35> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x150144e20 <col:30> 'struct kvm *' lvalue ParmVar 0x150128648 'kvm' 'struct kvm *'     |-CallExpr 0x1501450b8 <line:5:2, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150145020 <col:2> 'int ()' Function 0x150144f68 'cancel_delayed_work_sync' 'int ()'     | `-UnaryOperator 0x1501450a0 <col:27, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x150145078 <col:28, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x150145040 <col:28> 'struct kvm_ioapic *' contains-errors lvalue Var 0x150144db8 'ioapic' 'struct kvm_ioapic *'     |-CallExpr 0x1501452e8 <line:6:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1501451c0 <col:2> 'int ()' Function 0x150145108 'kvm_io_bus_unregister_dev' 'int ()'     | |-DeclRefExpr 0x1501451e0 <col:28> 'struct kvm *' lvalue ParmVar 0x150128648 'kvm' 'struct kvm *'     | |-RecoveryExpr 0x1501452c8 <col:33> '<dependent type>' contains-errors lvalue     | `-UnaryOperator 0x150145278 <col:47, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x150145250 <col:48, col:56> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x150145218 <col:48> 'struct kvm_ioapic *' contains-errors lvalue Var 0x150144db8 'ioapic' 'struct kvm_ioapic *'     |-BinaryOperator 0x150145420 <line:7:2, col:22> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x150145380 <col:2, col:12> '<dependent type>' contains-errors lvalue .vioapic     | | `-RecoveryExpr 0x150145358 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x150145320 <col:2> 'struct kvm *' lvalue ParmVar 0x150128648 'kvm' 'struct kvm *'     | `-RecoveryExpr 0x150145400 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1501455a8 <line:8:2, col:14> 'int' contains-errors       |-ImplicitCastExpr 0x150145590 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x150145520 <col:2> 'int ()' Function 0x150145468 'kfree' 'int ()'       `-ImplicitCastExpr 0x1501455d0 <col:8> 'struct kvm_ioapic *' contains-errors <LValueToRValue>         `-DeclRefExpr 0x150145540 <col:8> 'struct kvm_ioapic *' contains-errors lvalue Var 0x150144db8 'ioapic' 'struct kvm_ioapic *' ","19492":"`-FunctionDecl 0x14b80df18  line:1:1 invalid exo_open_uri_known_category 'int (const char *, const char *, int *)'   |-ParmVarDecl 0x14b80dcf0 <col:30, col:44> col:44 used uri 'const char *'   |-ParmVarDecl 0x14b80dd70 <line:2:30, col:44> col:44 used scheme 'const char *'   |-ParmVarDecl 0x14b80de28 <line:3:30, col:44> col:44 invalid succeed 'int *'   `-CompoundStmt 0x14b1233d8 <line:4:1, line:25:1>     |-DeclStmt 0x14b80e090 <line:6:3, col:31>     | `-VarDecl 0x14b80dff0 <col:3, col:27> col:16 used category 'const char *' cinit     |   `-RecoveryExpr 0x14b80e070 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b80e320 <line:8:3, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b80e200 <col:3> 'int ()' Function 0x14b80e148 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x14b80e2e0 <col:25, col:32> 'int' contains-errors '!='     | | |-DeclRefExpr 0x14b80e220 <col:25> 'const char *' lvalue ParmVar 0x14b80dcf0 'uri' 'const char *'     | | `-RecoveryExpr 0x14b80e2c0 <col:32> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b80e300 <col:38> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14b122c90 <line:9:3, col:46> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b80e350 <col:3> 'int ()' Function 0x14b80e148 'g_return_val_if_fail' 'int ()'     | |-BinaryOperator 0x14b122c50 <col:25, col:35> 'int' contains-errors '!='     | | |-DeclRefExpr 0x14b80e370 <col:25> 'const char *' lvalue ParmVar 0x14b80dd70 'scheme' 'const char *'     | | `-RecoveryExpr 0x14b122c30 <col:35> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14b122c70 <col:41> '<dependent type>' contains-errors lvalue     `-ForStmt 0x14b1233a0 <line:12:3, line:22:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x14b122fd0 <line:12:15, col:66> 'int' contains-errors '&&'       | |-BinaryOperator 0x14b122f28 <col:15, col:27> 'int' contains-errors '=='       | | |-DeclRefExpr 0x14b122d18 <col:15> 'const char *' contains-errors lvalue Var 0x14b80dff0 'category' 'const char *'       | | `-RecoveryExpr 0x14b122f08 <col:27> '<dependent type>' contains-errors lvalue       | `-BinaryOperator 0x14b122fb0 <col:35, col:66> 'int' contains-errors '<'       |   |-RecoveryExpr 0x14b122f48 <col:35> '<dependent type>' contains-errors lvalue       |   `-CallExpr 0x14b122f88 <col:39, col:66> '<dependent type>' contains-errors       |     |-DeclRefExpr 0x14b122e68 <col:39> 'int ()' Function 0x14b122db0 'G_N_ELEMENTS' 'int ()'       |     `-RecoveryExpr 0x14b122f68 <col:53> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x14b123040 <col:69, col:70> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x14b123020 <col:69> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14b123388 <line:13:5, line:22:5>         `-IfStmt 0x14b123368 <line:14:7, line:21:9>           |-RecoveryExpr 0x14b1231c8 <line:14:11, col:86> '_Bool' contains-errors           `-CompoundStmt 0x14b123358 <line:15:9, line:21:9> ","19535":"`-FunctionDecl 0x14e940b48  line:1:12 netlbl_cipsov4_add_local 'int (struct genl_info *, struct netlbl_audit *)' static   |-ParmVarDecl 0x14e928648 <col:37, col:55> col:55 used info 'struct genl_info *'   |-ParmVarDecl 0x14e940a28 <line:2:9, col:30> col:30 used audit_info 'struct netlbl_audit *'   `-CompoundStmt 0x14e942a80 <line:3:1, line:27:1>     |-DeclStmt 0x14e940cc8 <line:4:2, col:13>     | `-VarDecl 0x14e940c60 <col:2, col:6> col:6 used ret_val 'int'     |-DeclStmt 0x14e940f18 <line:5:2, col:37>     | |-RecordDecl 0x14e940ce0 <col:2, col:9> col:9 struct cipso_v4_doi     | `-VarDecl 0x14e940e48 <col:2, col:33> col:23 used doi_def 'struct cipso_v4_doi *' cinit     |   `-RecoveryExpr 0x14e940ee0 <col:33> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e941070 <line:7:2, line:8:11>     | |-RecoveryExpr 0x14e940fa8 <line:7:6, col:40> '_Bool' contains-errors     | `-ReturnStmt 0x14e941060 <line:8:3, col:11>     |   `-UnaryOperator 0x14e941048 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e941030 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e941010 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14e9413a8 <line:11:2, line:12:11>     | |-BinaryOperator 0x14e9412e0 <line:11:6, col:17> 'int' contains-errors '=='     | | |-DeclRefExpr 0x14e941268 <col:6> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     | | `-RecoveryExpr 0x14e9412c0 <col:17> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14e941398 <line:12:3, col:11>     |   `-UnaryOperator 0x14e941380 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14e941368 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14e941348 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e941480 <line:13:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14e941400 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14e9413c8 <col:2> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     | `-RecoveryExpr 0x14e941460 <col:18> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14e9416a8 <line:15:2, col:51> 'int' contains-errors '='     | |-DeclRefExpr 0x14e9414a0 <col:2> 'int' lvalue Var 0x14e940c60 'ret_val' 'int'     | `-CallExpr 0x14e941648 <col:12, col:51> 'int' contains-errors     |   |-ImplicitCastExpr 0x14e941630 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e9415a0 <col:12> 'int ()' Function 0x14e9414e8 'netlbl_cipsov4_add_common' 'int ()'     |   |-ImplicitCastExpr 0x14e941678 <col:38> 'struct genl_info *' <LValueToRValue>     |   | `-DeclRefExpr 0x14e9415c0 <col:38> 'struct genl_info *' lvalue ParmVar 0x14e928648 'info' 'struct genl_info *'     |   `-ImplicitCastExpr 0x14e941690 <col:44> 'struct cipso_v4_doi *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14e9415e0 <col:44> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     |-IfStmt 0x14e9417a8 <line:16:2, line:17:8>     | |-BinaryOperator 0x14e941720 <line:16:6, col:17> 'int' '!='     | | |-ImplicitCastExpr 0x14e941708 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e9416c8 <col:6> 'int' lvalue Var 0x14e940c60 'ret_val' 'int'     | | `-IntegerLiteral 0x14e9416e8 <col:17> 'int' 0     | `-GotoStmt 0x14e941790 <line:17:3, col:8> 'add_local_failure' 0x14e941740     |-BinaryOperator 0x14e9419a0 <line:19:2, col:48> 'int' contains-errors '='     | |-DeclRefExpr 0x14e9417c8 <col:2> 'int' lvalue Var 0x14e940c60 'ret_val' 'int'     | `-CallExpr 0x14e941940 <col:12, col:48> 'int' contains-errors     |   |-ImplicitCastExpr 0x14e941928 <col:12> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e9418c8 <col:12> 'int ()' Function 0x14e941810 'cipso_v4_doi_add' 'int ()'     |   |-ImplicitCastExpr 0x14e941970 <col:29> 'struct cipso_v4_doi *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x14e9418e8 <col:29> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     |   `-ImplicitCastExpr 0x14e941988 <col:38> 'struct netlbl_audit *' <LValueToRValue>     |     `-DeclRefExpr 0x14e941908 <col:38> 'struct netlbl_audit *' lvalue ParmVar 0x14e940a28 'audit_info' 'struct netlbl_audit *'     |-IfStmt 0x14e942850 <line:20:2, line:21:8>     | |-BinaryOperator 0x14e942818 <line:20:6, col:17> 'int' '!='     | | |-ImplicitCastExpr 0x14e942800 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x14e9419c0 <col:6> 'int' lvalue Var 0x14e940c60 'ret_val' 'int'     | | `-IntegerLiteral 0x14e9419e0 <col:17> 'int' 0     | `-GotoStmt 0x14e942838 <line:21:3, col:8> 'add_local_failure' 0x14e941740     |-ReturnStmt 0x14e942890 <line:22:2, col:9>     | `-IntegerLiteral 0x14e942870 <col:9> 'int' 0     |-LabelStmt 0x14e942a18 <line:24:1, line:25:27> 'add_local_failure'     | `-CallExpr 0x14e9429d8 <col:2, col:27> 'int' contains-errors     |   |-ImplicitCastExpr 0x14e9429c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14e942980 <col:2> 'int ()' Function 0x14e9428c8 'cipso_v4_doi_free' 'int ()'     |   `-ImplicitCastExpr 0x14e942a00 <col:20> 'struct cipso_v4_doi *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x14e9429a0 <col:20> 'struct cipso_v4_doi *' contains-errors lvalue Var 0x14e940e48 'doi_def' 'struct cipso_v4_doi *'     `-ReturnStmt 0x14e942a70 <line:26:2, col:9>       `-ImplicitCastExpr 0x14e942a58 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x14e942a38 <col:9> 'int' lvalue Var 0x14e940c60 'ret_val' 'int' ","19406":"`-FunctionDecl 0x141923398  col:4 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x141923498 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x141923440 <<invalid sloc>> Implicit 873 ","19922":"`-FunctionDecl 0x1560fa668  line:1:18 invalid CMS_EncryptedData_encrypt 'int *(int *, const int *, const unsigned char *, int, unsigned int)'   |-ParmVarDecl 0x1560fa328 <col:44, col:49> col:49 invalid in 'int *'   |-ParmVarDecl 0x1560fa3a8 <col:53, col:71> col:71 invalid cipher 'const int *'   |-ParmVarDecl 0x1560fa458 <line:2:44, col:65> col:65 used key 'const unsigned char *'   |-ParmVarDecl 0x1560fa4d8 <line:3:44, col:51> col:51 invalid keylen 'int'   |-ParmVarDecl 0x1560fa558 <col:59, col:72> col:72 used flags 'unsigned int'   `-CompoundStmt 0x156114478 <line:4:1, line:25:1>     |-IfStmt 0x156113a68 <line:6:5, line:9:5>     | |-UnaryOperator 0x1560fa788 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1560fa770 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1560fa750 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x156113a48 <col:18, line:9:5>     |   |-CallExpr 0x1560fa9c0 <line:7:9, col:64> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1560fa900 <col:9> 'int ()' Function 0x1560fa848 'CMSerr' 'int ()'     |   | |-RecoveryExpr 0x1560fa980 <col:16> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1560fa9a0 <col:49> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x156113a38 <line:8:9, col:16>     |     `-RecoveryExpr 0x156113a18 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x156113cd8 <line:11:5, line:12:16>     | |-UnaryOperator 0x156113c78 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x156113c60 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x156113c40 <col:10> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x156113cc8 <line:12:9, col:16>     |   `-RecoveryExpr 0x156113ca8 <col:16> '<dependent type>' contains-errors lvalue     |-IfStmt 0x156113f88 <line:13:5, line:14:16>     | |-UnaryOperator 0x156113f28 <line:13:9, col:61> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x156113ee8 <col:10, col:61> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x156113dd8 <col:10> 'int ()' Function 0x156113d20 'CMS_EncryptedData_set1_key' 'int ()'     | |   |-RecoveryExpr 0x156113ec8 <col:37> '<dependent type>' contains-errors lvalue     | |   |-RecoveryExpr 0x156113e10 <col:42> '<dependent type>' contains-errors lvalue     | |   |-DeclRefExpr 0x156113e30 <col:50> 'const unsigned char *' lvalue ParmVar 0x1560fa458 'key' 'const unsigned char *'     | |   `-RecoveryExpr 0x156113e50 <col:55> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x156113f78 <line:14:9, col:16>     |   `-RecoveryExpr 0x156113f58 <col:16> '<dependent type>' contains-errors lvalue     `-IfStmt 0x1561141d8 <line:16:5, line:17:32>       |-RecoveryExpr 0x156114000 <line:16:9, col:31> '_Bool' contains-errors       `-CallExpr 0x1561141a8 <line:17:9, col:32> '<dependent type>' contains-errors         |-DeclRefExpr 0x156114100 <col:9> 'int ()' Function 0x156114048 'CMS_set_detached' 'int ()'         |-RecoveryExpr 0x156114188 <col:26> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x156114138 <col:31> 'int' 0 ","19584":"`-FunctionDecl 0x124129470  line:1:6 invalid EvalHybridPerChannel 'void (int *, int *, int *, int *, const int *, const int *, const int *, int *, int *)'   |-ParmVarDecl 0x124128f28 <col:27, col:42> col:42 invalid context 'int *'   |-ParmVarDecl 0x124128fa8 <col:51, col:63> col:63 invalid node 'int *'   |-ParmVarDecl 0x124129028 <line:2:27, col:45> col:45 invalid params 'int *'   |-ParmVarDecl 0x1241290a8 <col:53, col:61> col:61 referenced invalid data 'int *'   |-ParmVarDecl 0x124129128 <line:3:27, col:47> col:47 invalid input 'const int *'   |-ParmVarDecl 0x1241291a8 <col:54, col:74> col:74 invalid filter 'const int *'   |-ParmVarDecl 0x124129228 <line:4:27, col:47> col:47 invalid bias 'const int *'   |-ParmVarDecl 0x1241292a8 <col:53, col:67> col:67 invalid im2col 'int *'   |-ParmVarDecl 0x124129328 <line:5:27, col:41> col:41 invalid output 'int *'   `-CompoundStmt 0x1258090a8 <col:49, line:76:1>     |-DeclStmt 0x124142680 <line:6:3, col:53>     | |-VarDecl 0x124129578 <col:3, col:9> col:9 used output_activation_min 'float'     | `-VarDecl 0x124142600 <col:3, col:32> col:32 used output_activation_max 'float'     |-CallExpr 0x124142920 <line:7:3, line:8:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1241427f0 <line:7:3> 'int ()' Function 0x124142738 'CalculateActivationRange' 'int ()'     | |-CXXDependentScopeMemberExpr 0x124142830 <col:28, col:36> '<dependent type>' contains-errors lvalue ->activation     | | `-RecoveryExpr 0x124142810 <col:28> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x1241428d0 <col:48, col:49> 'float *' prefix '&' cannot overflow     | | `-DeclRefExpr 0x124142878 <col:49> 'float' lvalue Var 0x124129578 'output_activation_min' 'float'     | `-UnaryOperator 0x124142908 <line:8:28, col:29> 'float *' prefix '&' cannot overflow     |   `-DeclRefExpr 0x1241428e8 <col:29> 'float' lvalue Var 0x124142600 'output_activation_max' 'float'     |-DeclStmt 0x124142cb0 <line:10:3, col:72>     | `-VarDecl 0x124142970 <col:3, col:71> col:13 used input_size 'const int' cinit     |   `-BinaryOperator 0x124142c90 <col:26, col:71> '<dependent type>' contains-errors '\/'     |     |-CallExpr 0x124142af8 <col:26, col:43> '<dependent type>' contains-errors     |     | |-DeclRefExpr 0x124142ab8 <col:26> 'int ()' Function 0x124142a00 'NumElements' 'int ()'     |     | `-RecoveryExpr 0x124142ad8 <col:38> '<dependent type>' contains-errors lvalue     |     `-CallExpr 0x124142c60 <col:47, col:71> '<dependent type>' contains-errors     |       |-DeclRefExpr 0x124142c00 <col:47> 'int ()' Function 0x124142b48 'SizeOfDimension' 'int ()'     |       |-RecoveryExpr 0x124142c20 <col:63> '<dependent type>' contains-errors lvalue     |       `-IntegerLiteral 0x124142c40 <col:70> 'int' 0     |-DeclStmt 0x124142dd8 <line:11:3, col:51>     | `-VarDecl 0x124142ce0 <col:3, col:50> col:13 used batch_size 'const int' cinit     |   `-CallExpr 0x124142da8 <col:26, col:50> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x124142d48 <col:26> 'int ()' Function 0x124142b48 'SizeOfDimension' 'int ()'     |     |-RecoveryExpr 0x124142d68 <col:42> '<dependent type>' contains-errors lvalue     |     `-IntegerLiteral 0x124142d88 <col:49> 'int' 0     |-DeclStmt 0x124143130 <line:14:3, line:15:64>     | `-VarDecl 0x124143090 <line:14:3, col:10> col:10 scaling_factors_ptr 'float *'     |-ForStmt 0x124143528 <line:19:3, line:25:3>     | |-DeclStmt 0x124143308 <line:19:8, col:17>     | | `-VarDecl 0x124143280 <col:8, col:16> col:12 used b 'int' cinit     | |   `-IntegerLiteral 0x1241432e8 <col:16> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x124143390 <col:19, col:23> 'int' contains-errors '<'     | | |-ImplicitCastExpr 0x124143360 <col:19> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x124143320 <col:19> 'int' lvalue Var 0x124143280 'b' 'int'     | | `-ImplicitCastExpr 0x124143378 <col:23> 'int' contains-errors <LValueToRValue>     | |   `-DeclRefExpr 0x124143340 <col:23> 'const int' contains-errors lvalue Var 0x124142ce0 'batch_size' 'const int'     | |-UnaryOperator 0x1241433d0 <col:35, col:37> 'int' prefix '++'     | | `-DeclRefExpr 0x1241433b0 <col:37> 'int' lvalue Var 0x124143280 'b' 'int'     | `-CompoundStmt 0x124143510 <col:40, line:25:3>     |   `-DeclStmt 0x1241434f8 <line:20:5, col:38>     |     `-VarDecl 0x124143400 <col:5, col:28> col:15 offset 'const int' cinit     |       `-BinaryOperator 0x1241434d8 <col:24, col:28> 'int' contains-errors '*'     |         |-ImplicitCastExpr 0x1241434a8 <col:24> 'int' <LValueToRValue>     |         | `-DeclRefExpr 0x124143468 <col:24> 'int' lvalue Var 0x124143280 'b' 'int'     |         `-ImplicitCastExpr 0x1241434c0 <col:28> 'int' contains-errors <LValueToRValue>     |           `-DeclRefExpr 0x124143488 <col:28> 'const int' contains-errors lvalue Var 0x124142970 'input_size' 'const int'     |-IfStmt 0x1258088a0 <line:29:3, line:31:3>     | |-RecoveryExpr 0x124143580 <line:29:7, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x125808890 <col:26, line:31:3>     |-DeclStmt 0x125808ac0 <line:33:3, line:34:79>     | `-VarDecl 0x125808988 <line:33:3, col:15> col:15 affine_quantization 'const int *' auto     `-SwitchStmt 0x125808da8 <line:45:3, line:75:3>       |-RecoveryExpr 0x125808d88 <line:45:11> 'int' contains-errors       `-CompoundStmt 0x125809088 <col:24, line:75:3>         |-BreakStmt 0x125808dd0 <line:54:7>         `-CompoundStmt 0x125809070 <line:57:27, line:74:5>           `-BreakStmt 0x125809068 <line:73:7> ","19934":"`-FunctionDecl 0x14980df18  line:1:1 invalid horAcc8 'int (int *, int *, int)'   |-ParmVarDecl 0x14980dd28 <col:9, col:15> col:15 invalid tif 'int *'   |-ParmVarDecl 0x14980dda8 <col:20, col:27> col:27 invalid cp0 'int *'   |-ParmVarDecl 0x14980de28 <col:32, col:41> col:41 referenced invalid cc 'int'   `-CompoundStmt 0x14982b9b0 <line:2:1, line:46:1>     |-DeclStmt 0x14980e0f0 <line:5:2, col:42>     | `-VarDecl 0x14980e028 <col:2, col:39> col:17 used cp 'unsigned char *' cinit     |   `-CStyleCastExpr 0x14980e0c8 <col:22, col:39> 'unsigned char *' contains-errors <Dependent>     |     `-RecoveryExpr 0x14980e090 <col:39> '<dependent type>' contains-errors lvalue     `-IfStmt 0x14982b990 <line:7:2, line:45:2>       |-BinaryOperator 0x14980e370 <line:7:6, col:11> 'int' contains-errors '>'       | |-RecoveryExpr 0x14980e2f8 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x14980e350 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x14982b978 <col:19, line:45:2>         `-IfStmt 0x14982b948 <line:9:3, line:44:3> has_else           |-BinaryOperator 0x149828420 <line:9:7, col:17> 'int' contains-errors '=='           | |-RecoveryExpr 0x149828400 <col:7> '<dependent type>' contains-errors lvalue           | `-IntegerLiteral 0x14980e3a8 <col:17> 'int' 3           |-CompoundStmt 0x149829260 <col:21, line:22:3>           | |-DeclStmt 0x149828568 <line:10:4, col:27>           | | `-VarDecl 0x149828458 <col:4, col:26> col:17 used cr 'unsigned int' cinit           | |   `-ImplicitCastExpr 0x149828550 <col:22, col:26> 'unsigned int' contains-errors <IntegralCast>           | |     `-ImplicitCastExpr 0x149828538 <col:22, col:26> 'unsigned char' contains-errors <LValueToRValue>           | |       `-ArraySubscriptExpr 0x149828518 <col:22, col:26> 'unsigned char' contains-errors lvalue           | |         |-ImplicitCastExpr 0x149828500 <col:22> 'unsigned char *' contains-errors <LValueToRValue>           | |         | `-DeclRefExpr 0x1498284c0 <col:22> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           | |         `-IntegerLiteral 0x1498284e0 <col:25> 'int' 0           | |-DeclStmt 0x1498286a8 <line:11:4, col:27>           | | `-VarDecl 0x149828598 <col:4, col:26> col:17 used cg 'unsigned int' cinit           | |   `-ImplicitCastExpr 0x149828690 <col:22, col:26> 'unsigned int' contains-errors <IntegralCast>           | |     `-ImplicitCastExpr 0x149828678 <col:22, col:26> 'unsigned char' contains-errors <LValueToRValue>           | |       `-ArraySubscriptExpr 0x149828658 <col:22, col:26> 'unsigned char' contains-errors lvalue           | |         |-ImplicitCastExpr 0x149828640 <col:22> 'unsigned char *' contains-errors <LValueToRValue>           | |         | `-DeclRefExpr 0x149828600 <col:22> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           | |         `-IntegerLiteral 0x149828620 <col:25> 'int' 1           | |-DeclStmt 0x1498287e8 <line:12:4, col:27>           | | `-VarDecl 0x1498286d8 <col:4, col:26> col:17 used cb 'unsigned int' cinit           | |   `-ImplicitCastExpr 0x1498287d0 <col:22, col:26> 'unsigned int' contains-errors <IntegralCast>           | |     `-ImplicitCastExpr 0x1498287b8 <col:22, col:26> 'unsigned char' contains-errors <LValueToRValue>           | |       `-ArraySubscriptExpr 0x149828798 <col:22, col:26> 'unsigned char' contains-errors lvalue           | |         |-ImplicitCastExpr 0x149828780 <col:22> 'unsigned char *' contains-errors <LValueToRValue>           | |         | `-DeclRefExpr 0x149828740 <col:22> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           | |         `-IntegerLiteral 0x149828760 <col:25> 'int' 2           | |-CompoundAssignOperator 0x149828868 <line:13:4, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           | | |-RecoveryExpr 0x149828820 <col:4> '<dependent type>' contains-errors lvalue           | | | `-DeclRefExpr 0x149828800 <col:4> 'int' lvalue ParmVar 0x14980de28 'cc' 'int'           | | `-IntegerLiteral 0x149828848 <col:10> 'int' 3           | |-CompoundAssignOperator 0x1498288d8 <line:14:4, col:10> 'unsigned char *' contains-errors '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'           | | |-DeclRefExpr 0x149828898 <col:4> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           | | `-IntegerLiteral 0x1498288b8 <col:10> 'int' 3           | `-WhileStmt 0x149829240 <line:15:4, line:21:4>           |   |-BinaryOperator 0x149828948 <line:15:11, col:14> 'int' contains-errors '>'           |   | |-RecoveryExpr 0x149828908 <col:11> '<dependent type>' contains-errors lvalue           |   | `-IntegerLiteral 0x149828928 <col:14> 'int' 0           |   `-CompoundStmt 0x149829208 <col:17, line:21:4>           |     |-BinaryOperator 0x149828bd0 <line:16:5, col:50> 'unsigned char' contains-errors '='           |     | |-ArraySubscriptExpr 0x1498289c0 <col:5, col:9> 'unsigned char' contains-errors lvalue           |     | | |-ImplicitCastExpr 0x1498289a8 <col:5> 'unsigned char *' contains-errors <LValueToRValue>           |     | | | `-DeclRefExpr 0x149828968 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           |     | | `-IntegerLiteral 0x149828988 <col:8> 'int' 0           |     | `-CStyleCastExpr 0x149828ba8 <col:13, col:50> 'unsigned char' contains-errors <IntegralCast>           |     |   `-ParenExpr 0x149828b88 <col:29, col:50> 'unsigned int' contains-errors           |     |     `-BinaryOperator 0x149828b30 <col:30, col:46> 'unsigned int' contains-errors '&'           |     |       |-ParenExpr 0x149828ad8 <col:30, col:42> 'unsigned int' contains-errors           |     |       | `-CompoundAssignOperator 0x149828aa8 <col:31, col:41> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'           |     |       |   |-DeclRefExpr 0x1498289e0 <col:31> 'unsigned int' contains-errors lvalue Var 0x149828458 'cr' 'unsigned int'           |     |       |   `-ImplicitCastExpr 0x149828a90 <col:37, col:41> 'unsigned int' contains-errors <IntegralCast>           |     |       |     `-ImplicitCastExpr 0x149828a78 <col:37, col:41> 'unsigned char' contains-errors <LValueToRValue>           |     |       |       `-ArraySubscriptExpr 0x149828a58 <col:37, col:41> 'unsigned char' contains-errors lvalue           |     |       |         |-ImplicitCastExpr 0x149828a40 <col:37> 'unsigned char *' contains-errors <LValueToRValue>           |     |       |         | `-DeclRefExpr 0x149828a00 <col:37> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           |     |       |         `-IntegerLiteral 0x149828a20 <col:40> 'int' 0           |     |       `-ImplicitCastExpr 0x149828b18 <col:46> 'unsigned int' <IntegralCast>           |     |         `-IntegerLiteral 0x149828af8 <col:46> 'int' 255           |     |-BinaryOperator 0x149828e58 <line:17:5, col:50> 'unsigned char' contains-errors '='           |     | |-ArraySubscriptExpr 0x149828c48 <col:5, col:9> 'unsigned char' contains-errors lvalue           |     | | |-ImplicitCastExpr 0x149828c30 <col:5> 'unsigned char *' contains-errors <LValueToRValue>           |     | | | `-DeclRefExpr 0x149828bf0 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           |     | | `-IntegerLiteral 0x149828c10 <col:8> 'int' 1           |     | `-CStyleCastExpr 0x149828e30 <col:13, col:50> 'unsigned char' contains-errors <IntegralCast>           |     |   `-ParenExpr 0x149828e10 <col:29, col:50> 'unsigned int' contains-errors           |     |     `-BinaryOperator 0x149828db8 <col:30, col:46> 'unsigned int' contains-errors '&'           |     |       |-ParenExpr 0x149828d60 <col:30, col:42> 'unsigned int' contains-errors           |     |       | `-CompoundAssignOperator 0x149828d30 <col:31, col:41> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'           |     |       |   |-DeclRefExpr 0x149828c68 <col:31> 'unsigned int' contains-errors lvalue Var 0x149828598 'cg' 'unsigned int'           |     |       |   `-ImplicitCastExpr 0x149828d18 <col:37, col:41> 'unsigned int' contains-errors <IntegralCast>           |     |       |     `-ImplicitCastExpr 0x149828d00 <col:37, col:41> 'unsigned char' contains-errors <LValueToRValue>           |     |       |       `-ArraySubscriptExpr 0x149828ce0 <col:37, col:41> 'unsigned char' contains-errors lvalue           |     |       |         |-ImplicitCastExpr 0x149828cc8 <col:37> 'unsigned char *' contains-errors <LValueToRValue>           |     |       |         | `-DeclRefExpr 0x149828c88 <col:37> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           |     |       |         `-IntegerLiteral 0x149828ca8 <col:40> 'int' 1           |     |       `-ImplicitCastExpr 0x149828da0 <col:46> 'unsigned int' <IntegralCast>           |     |         `-IntegerLiteral 0x149828d80 <col:46> 'int' 255           |     |-BinaryOperator 0x1498290e0 <line:18:5, col:50> 'unsigned char' contains-errors '='           |     | |-ArraySubscriptExpr 0x149828ed0 <col:5, col:9> 'unsigned char' contains-errors lvalue           |     | | |-ImplicitCastExpr 0x149828eb8 <col:5> 'unsigned char *' contains-errors <LValueToRValue>           |     | | | `-DeclRefExpr 0x149828e78 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           |     | | `-IntegerLiteral 0x149828e98 <col:8> 'int' 2           |     | `-CStyleCastExpr 0x1498290b8 <col:13, col:50> 'unsigned char' contains-errors <IntegralCast>           |     |   `-ParenExpr 0x149829098 <col:29, col:50> 'unsigned int' contains-errors           |     |     `-BinaryOperator 0x149829040 <col:30, col:46> 'unsigned int' contains-errors '&'           |     |       |-ParenExpr 0x149828fe8 <col:30, col:42> 'unsigned int' contains-errors           |     |       | `-CompoundAssignOperator 0x149828fb8 <col:31, col:41> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'           |     |       |   |-DeclRefExpr 0x149828ef0 <col:31> 'unsigned int' contains-errors lvalue Var 0x1498286d8 'cb' 'unsigned int'           |     |       |   `-ImplicitCastExpr 0x149828fa0 <col:37, col:41> 'unsigned int' contains-errors <IntegralCast>           |     |       |     `-ImplicitCastExpr 0x149828f88 <col:37, col:41> 'unsigned char' contains-errors <LValueToRValue>           |     |       |       `-ArraySubscriptExpr 0x149828f68 <col:37, col:41> 'unsigned char' contains-errors lvalue           |     |       |         |-ImplicitCastExpr 0x149828f50 <col:37> 'unsigned char *' contains-errors <LValueToRValue>           |     |       |         | `-DeclRefExpr 0x149828f10 <col:37> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           |     |       |         `-IntegerLiteral 0x149828f30 <col:40> 'int' 2           |     |       `-ImplicitCastExpr 0x149829028 <col:46> 'unsigned int' <IntegralCast>           |     |         `-IntegerLiteral 0x149829008 <col:46> 'int' 255           |     |-CompoundAssignOperator 0x149829168 <line:19:5, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'           |     | |-RecoveryExpr 0x149829120 <col:5> '<dependent type>' contains-errors lvalue           |     | | `-DeclRefExpr 0x149829100 <col:5> 'int' lvalue ParmVar 0x14980de28 'cc' 'int'           |     | `-IntegerLiteral 0x149829148 <col:11> 'int' 3           |     `-CompoundAssignOperator 0x1498291d8 <line:20:5, col:11> 'unsigned char *' contains-errors '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'           |       |-DeclRefExpr 0x149829198 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'           |       `-IntegerLiteral 0x1498291b8 <col:11> 'int' 3           `-IfStmt 0x14982b918 <line:22:10, line:44:3> has_else             |-BinaryOperator 0x149829318 <line:22:14, col:24> 'int' contains-errors '=='             | |-RecoveryExpr 0x1498292f8 <col:14> '<dependent type>' contains-errors lvalue             | `-IntegerLiteral 0x1498292b8 <col:24> 'int' 4             |-CompoundStmt 0x14982b548 <col:28, line:37:3>             | |-DeclStmt 0x149829e68 <line:23:4, col:27>             | | `-VarDecl 0x149829350 <col:4, col:26> col:17 used cr 'unsigned int' cinit             | |   `-ImplicitCastExpr 0x149829e50 <col:22, col:26> 'unsigned int' contains-errors <IntegralCast>             | |     `-ImplicitCastExpr 0x149829e38 <col:22, col:26> 'unsigned char' contains-errors <LValueToRValue>             | |       `-ArraySubscriptExpr 0x149829e18 <col:22, col:26> 'unsigned char' contains-errors lvalue             | |         |-ImplicitCastExpr 0x149829e00 <col:22> 'unsigned char *' contains-errors <LValueToRValue>             | |         | `-DeclRefExpr 0x1498293b8 <col:22> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             | |         `-IntegerLiteral 0x1498293d8 <col:25> 'int' 0             | |-DeclStmt 0x149829fa8 <line:24:4, col:27>             | | `-VarDecl 0x149829e98 <col:4, col:26> col:17 used cg 'unsigned int' cinit             | |   `-ImplicitCastExpr 0x149829f90 <col:22, col:26> 'unsigned int' contains-errors <IntegralCast>             | |     `-ImplicitCastExpr 0x149829f78 <col:22, col:26> 'unsigned char' contains-errors <LValueToRValue>             | |       `-ArraySubscriptExpr 0x149829f58 <col:22, col:26> 'unsigned char' contains-errors lvalue             | |         |-ImplicitCastExpr 0x149829f40 <col:22> 'unsigned char *' contains-errors <LValueToRValue>             | |         | `-DeclRefExpr 0x149829f00 <col:22> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             | |         `-IntegerLiteral 0x149829f20 <col:25> 'int' 1             | |-DeclStmt 0x14982a0e8 <line:25:4, col:27>             | | `-VarDecl 0x149829fd8 <col:4, col:26> col:17 used cb 'unsigned int' cinit             | |   `-ImplicitCastExpr 0x14982a0d0 <col:22, col:26> 'unsigned int' contains-errors <IntegralCast>             | |     `-ImplicitCastExpr 0x14982a0b8 <col:22, col:26> 'unsigned char' contains-errors <LValueToRValue>             | |       `-ArraySubscriptExpr 0x14982a098 <col:22, col:26> 'unsigned char' contains-errors lvalue             | |         |-ImplicitCastExpr 0x14982a080 <col:22> 'unsigned char *' contains-errors <LValueToRValue>             | |         | `-DeclRefExpr 0x14982a040 <col:22> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             | |         `-IntegerLiteral 0x14982a060 <col:25> 'int' 2             | |-DeclStmt 0x14982a228 <line:26:4, col:27>             | | `-VarDecl 0x14982a118 <col:4, col:26> col:17 used ca 'unsigned int' cinit             | |   `-ImplicitCastExpr 0x14982a210 <col:22, col:26> 'unsigned int' contains-errors <IntegralCast>             | |     `-ImplicitCastExpr 0x14982a1f8 <col:22, col:26> 'unsigned char' contains-errors <LValueToRValue>             | |       `-ArraySubscriptExpr 0x14982a1d8 <col:22, col:26> 'unsigned char' contains-errors lvalue             | |         |-ImplicitCastExpr 0x14982a1c0 <col:22> 'unsigned char *' contains-errors <LValueToRValue>             | |         | `-DeclRefExpr 0x14982a180 <col:22> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             | |         `-IntegerLiteral 0x14982a1a0 <col:25> 'int' 3             | |-CompoundAssignOperator 0x14982a2a8 <line:27:4, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'             | | |-RecoveryExpr 0x14982a260 <col:4> '<dependent type>' contains-errors lvalue             | | | `-DeclRefExpr 0x14982a240 <col:4> 'int' lvalue ParmVar 0x14980de28 'cc' 'int'             | | `-IntegerLiteral 0x14982a288 <col:10> 'int' 4             | |-CompoundAssignOperator 0x14982a318 <line:28:4, col:10> 'unsigned char *' contains-errors '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'             | | |-DeclRefExpr 0x14982a2d8 <col:4> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             | | `-IntegerLiteral 0x14982a2f8 <col:10> 'int' 4             | `-WhileStmt 0x14982b528 <line:29:4, line:36:4>             |   |-BinaryOperator 0x14982a388 <line:29:11, col:14> 'int' contains-errors '>'             |   | |-RecoveryExpr 0x14982a348 <col:11> '<dependent type>' contains-errors lvalue             |   | `-IntegerLiteral 0x14982a368 <col:14> 'int' 0             |   `-CompoundStmt 0x14982b4e8 <col:17, line:36:4>             |     |-BinaryOperator 0x14982a610 <line:30:5, col:50> 'unsigned char' contains-errors '='             |     | |-ArraySubscriptExpr 0x14982a400 <col:5, col:9> 'unsigned char' contains-errors lvalue             |     | | |-ImplicitCastExpr 0x14982a3e8 <col:5> 'unsigned char *' contains-errors <LValueToRValue>             |     | | | `-DeclRefExpr 0x14982a3a8 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |     | | `-IntegerLiteral 0x14982a3c8 <col:8> 'int' 0             |     | `-CStyleCastExpr 0x14982a5e8 <col:13, col:50> 'unsigned char' contains-errors <IntegralCast>             |     |   `-ParenExpr 0x14982a5c8 <col:29, col:50> 'unsigned int' contains-errors             |     |     `-BinaryOperator 0x14982a570 <col:30, col:46> 'unsigned int' contains-errors '&'             |     |       |-ParenExpr 0x14982a518 <col:30, col:42> 'unsigned int' contains-errors             |     |       | `-CompoundAssignOperator 0x14982a4e8 <col:31, col:41> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'             |     |       |   |-DeclRefExpr 0x14982a420 <col:31> 'unsigned int' contains-errors lvalue Var 0x149829350 'cr' 'unsigned int'             |     |       |   `-ImplicitCastExpr 0x14982a4d0 <col:37, col:41> 'unsigned int' contains-errors <IntegralCast>             |     |       |     `-ImplicitCastExpr 0x14982a4b8 <col:37, col:41> 'unsigned char' contains-errors <LValueToRValue>             |     |       |       `-ArraySubscriptExpr 0x14982a498 <col:37, col:41> 'unsigned char' contains-errors lvalue             |     |       |         |-ImplicitCastExpr 0x14982a480 <col:37> 'unsigned char *' contains-errors <LValueToRValue>             |     |       |         | `-DeclRefExpr 0x14982a440 <col:37> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |     |       |         `-IntegerLiteral 0x14982a460 <col:40> 'int' 0             |     |       `-ImplicitCastExpr 0x14982a558 <col:46> 'unsigned int' <IntegralCast>             |     |         `-IntegerLiteral 0x14982a538 <col:46> 'int' 255             |     |-BinaryOperator 0x14982a898 <line:31:5, col:50> 'unsigned char' contains-errors '='             |     | |-ArraySubscriptExpr 0x14982a688 <col:5, col:9> 'unsigned char' contains-errors lvalue             |     | | |-ImplicitCastExpr 0x14982a670 <col:5> 'unsigned char *' contains-errors <LValueToRValue>             |     | | | `-DeclRefExpr 0x14982a630 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |     | | `-IntegerLiteral 0x14982a650 <col:8> 'int' 1             |     | `-CStyleCastExpr 0x14982a870 <col:13, col:50> 'unsigned char' contains-errors <IntegralCast>             |     |   `-ParenExpr 0x14982a850 <col:29, col:50> 'unsigned int' contains-errors             |     |     `-BinaryOperator 0x14982a7f8 <col:30, col:46> 'unsigned int' contains-errors '&'             |     |       |-ParenExpr 0x14982a7a0 <col:30, col:42> 'unsigned int' contains-errors             |     |       | `-CompoundAssignOperator 0x14982a770 <col:31, col:41> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'             |     |       |   |-DeclRefExpr 0x14982a6a8 <col:31> 'unsigned int' contains-errors lvalue Var 0x149829e98 'cg' 'unsigned int'             |     |       |   `-ImplicitCastExpr 0x14982a758 <col:37, col:41> 'unsigned int' contains-errors <IntegralCast>             |     |       |     `-ImplicitCastExpr 0x14982a740 <col:37, col:41> 'unsigned char' contains-errors <LValueToRValue>             |     |       |       `-ArraySubscriptExpr 0x14982a720 <col:37, col:41> 'unsigned char' contains-errors lvalue             |     |       |         |-ImplicitCastExpr 0x14982a708 <col:37> 'unsigned char *' contains-errors <LValueToRValue>             |     |       |         | `-DeclRefExpr 0x14982a6c8 <col:37> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |     |       |         `-IntegerLiteral 0x14982a6e8 <col:40> 'int' 1             |     |       `-ImplicitCastExpr 0x14982a7e0 <col:46> 'unsigned int' <IntegralCast>             |     |         `-IntegerLiteral 0x14982a7c0 <col:46> 'int' 255             |     |-BinaryOperator 0x14982ab20 <line:32:5, col:50> 'unsigned char' contains-errors '='             |     | |-ArraySubscriptExpr 0x14982a910 <col:5, col:9> 'unsigned char' contains-errors lvalue             |     | | |-ImplicitCastExpr 0x14982a8f8 <col:5> 'unsigned char *' contains-errors <LValueToRValue>             |     | | | `-DeclRefExpr 0x14982a8b8 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |     | | `-IntegerLiteral 0x14982a8d8 <col:8> 'int' 2             |     | `-CStyleCastExpr 0x14982aaf8 <col:13, col:50> 'unsigned char' contains-errors <IntegralCast>             |     |   `-ParenExpr 0x14982aad8 <col:29, col:50> 'unsigned int' contains-errors             |     |     `-BinaryOperator 0x14982aa80 <col:30, col:46> 'unsigned int' contains-errors '&'             |     |       |-ParenExpr 0x14982aa28 <col:30, col:42> 'unsigned int' contains-errors             |     |       | `-CompoundAssignOperator 0x14982a9f8 <col:31, col:41> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'             |     |       |   |-DeclRefExpr 0x14982a930 <col:31> 'unsigned int' contains-errors lvalue Var 0x149829fd8 'cb' 'unsigned int'             |     |       |   `-ImplicitCastExpr 0x14982a9e0 <col:37, col:41> 'unsigned int' contains-errors <IntegralCast>             |     |       |     `-ImplicitCastExpr 0x14982a9c8 <col:37, col:41> 'unsigned char' contains-errors <LValueToRValue>             |     |       |       `-ArraySubscriptExpr 0x14982a9a8 <col:37, col:41> 'unsigned char' contains-errors lvalue             |     |       |         |-ImplicitCastExpr 0x14982a990 <col:37> 'unsigned char *' contains-errors <LValueToRValue>             |     |       |         | `-DeclRefExpr 0x14982a950 <col:37> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |     |       |         `-IntegerLiteral 0x14982a970 <col:40> 'int' 2             |     |       `-ImplicitCastExpr 0x14982aa68 <col:46> 'unsigned int' <IntegralCast>             |     |         `-IntegerLiteral 0x14982aa48 <col:46> 'int' 255             |     |-BinaryOperator 0x14982ada8 <line:33:5, col:50> 'unsigned char' contains-errors '='             |     | |-ArraySubscriptExpr 0x14982ab98 <col:5, col:9> 'unsigned char' contains-errors lvalue             |     | | |-ImplicitCastExpr 0x14982ab80 <col:5> 'unsigned char *' contains-errors <LValueToRValue>             |     | | | `-DeclRefExpr 0x14982ab40 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |     | | `-IntegerLiteral 0x14982ab60 <col:8> 'int' 3             |     | `-CStyleCastExpr 0x14982ad80 <col:13, col:50> 'unsigned char' contains-errors <IntegralCast>             |     |   `-ParenExpr 0x14982ad60 <col:29, col:50> 'unsigned int' contains-errors             |     |     `-BinaryOperator 0x14982ad08 <col:30, col:46> 'unsigned int' contains-errors '&'             |     |       |-ParenExpr 0x14982acb0 <col:30, col:42> 'unsigned int' contains-errors             |     |       | `-CompoundAssignOperator 0x14982ac80 <col:31, col:41> 'unsigned int' contains-errors '+=' ComputeLHSTy='unsigned int' ComputeResultTy='unsigned int'             |     |       |   |-DeclRefExpr 0x14982abb8 <col:31> 'unsigned int' contains-errors lvalue Var 0x14982a118 'ca' 'unsigned int'             |     |       |   `-ImplicitCastExpr 0x14982ac68 <col:37, col:41> 'unsigned int' contains-errors <IntegralCast>             |     |       |     `-ImplicitCastExpr 0x14982ac50 <col:37, col:41> 'unsigned char' contains-errors <LValueToRValue>             |     |       |       `-ArraySubscriptExpr 0x14982ac30 <col:37, col:41> 'unsigned char' contains-errors lvalue             |     |       |         |-ImplicitCastExpr 0x14982ac18 <col:37> 'unsigned char *' contains-errors <LValueToRValue>             |     |       |         | `-DeclRefExpr 0x14982abd8 <col:37> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |     |       |         `-IntegerLiteral 0x14982abf8 <col:40> 'int' 3             |     |       `-ImplicitCastExpr 0x14982acf0 <col:46> 'unsigned int' <IntegralCast>             |     |         `-IntegerLiteral 0x14982acd0 <col:46> 'int' 255             |     |-CompoundAssignOperator 0x14982b448 <line:34:5, col:11> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'             |     | |-RecoveryExpr 0x14982b400 <col:5> '<dependent type>' contains-errors lvalue             |     | | `-DeclRefExpr 0x14982adc8 <col:5> 'int' lvalue ParmVar 0x14980de28 'cc' 'int'             |     | `-IntegerLiteral 0x14982b428 <col:11> 'int' 4             |     `-CompoundAssignOperator 0x14982b4b8 <line:35:5, col:11> 'unsigned char *' contains-errors '+=' ComputeLHSTy='unsigned char *' ComputeResultTy='unsigned char *'             |       |-DeclRefExpr 0x14982b478 <col:5> 'unsigned char *' contains-errors lvalue Var 0x14980e028 'cp' 'unsigned char *'             |       `-IntegerLiteral 0x14982b498 <col:11> 'int' 4             `-CompoundStmt 0x14982b8f8 <line:37:11, line:44:3>               |-CompoundAssignOperator 0x14982b640 <line:38:4, col:10> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'               | |-RecoveryExpr 0x14982b5b0 <col:4> '<dependent type>' contains-errors lvalue               | | `-DeclRefExpr 0x14982b590 <col:4> 'int' lvalue ParmVar 0x14980de28 'cc' 'int'               | `-RecoveryExpr 0x14982b620 <col:10> '<dependent type>' contains-errors lvalue               `-DoStmt 0x14982b8d8 <line:39:4, line:43:17>                 |-CompoundStmt 0x14982b868 <line:39:7, line:43:4>                 `-BinaryOperator 0x14982b8b8 <col:13, col:16> 'int' contains-errors '>'                   |-RecoveryExpr 0x14982b878 <col:13> '<dependent type>' contains-errors lvalue                   `-IntegerLiteral 0x14982b898 <col:16> 'int' 0 ","20129":"`-FunctionDecl 0x157944c70  line:1:6 migrate_page_copy 'void (struct page *, struct page *)'   |-ParmVarDecl 0x157928648 <col:24, col:37> col:37 used newpage 'struct page *'   |-ParmVarDecl 0x157928738 <col:46, col:59> col:59 used page 'struct page *'   `-CompoundStmt 0x1579489f0 <line:2:1, line:49:1>     |-DeclStmt 0x157944df0 <line:3:2, col:12>     | `-VarDecl 0x157944d88 <col:2, col:6> col:6 used cpupid 'int'     |-IfStmt 0x157945500 <line:5:2, line:8:30> has_else     | |-BinaryOperator 0x157945170 <line:5:6, col:42> 'int' '||'     | | |-CallExpr 0x157944fb8 <col:6, col:19> 'int'     | | | |-ImplicitCastExpr 0x157944fa0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x157944f30 <col:6> 'int ()' Function 0x157944e78 'PageHuge' 'int ()'     | | | `-ImplicitCastExpr 0x157944fe0 <col:15> 'struct page *' <LValueToRValue>     | | |   `-DeclRefExpr 0x157944f50 <col:15> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | | `-CallExpr 0x157945130 <col:24, col:42> 'int'     | |   |-ImplicitCastExpr 0x157945118 <col:24> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x1579450d8 <col:24> 'int ()' Function 0x157945020 'PageTransHuge' 'int ()'     | |   `-ImplicitCastExpr 0x157945158 <col:38> 'struct page *' <LValueToRValue>     | |     `-DeclRefExpr 0x1579450f8 <col:38> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | |-CallExpr 0x1579452e8 <line:6:3, col:31> 'int'     | | |-ImplicitCastExpr 0x1579452d0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x157945270 <col:3> 'int ()' Function 0x1579451b8 'copy_huge_page' 'int ()'     | | |-ImplicitCastExpr 0x157945318 <col:18> 'struct page *' <LValueToRValue>     | | | `-DeclRefExpr 0x157945290 <col:18> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     | | `-ImplicitCastExpr 0x157945330 <col:27> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x1579452b0 <col:27> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x1579454a0 <line:8:3, col:30> 'int'     |   |-ImplicitCastExpr 0x157945488 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157945428 <col:3> 'int ()' Function 0x157945370 'copy_highpage' 'int ()'     |   |-ImplicitCastExpr 0x1579454d0 <col:17> 'struct page *' <LValueToRValue>     |   | `-DeclRefExpr 0x157945448 <col:17> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |   `-ImplicitCastExpr 0x1579454e8 <col:26> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x157945468 <col:26> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     |-IfStmt 0x157945820 <line:10:2, line:11:23>     | |-CallExpr 0x157945668 <line:10:6, col:20> 'int'     | | |-ImplicitCastExpr 0x157945650 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x157945610 <col:6> 'int ()' Function 0x157945558 'PageError' 'int ()'     | | `-ImplicitCastExpr 0x157945690 <col:16> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x157945630 <col:16> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x1579457e0 <line:11:3, col:23> 'int'     |   |-ImplicitCastExpr 0x1579457c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157945788 <col:3> 'int ()' Function 0x1579456d0 'SetPageError' 'int ()'     |   `-ImplicitCastExpr 0x157945808 <col:16> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x1579457a8 <col:16> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-IfStmt 0x157945b30 <line:12:2, line:13:28>     | |-CallExpr 0x157945978 <line:12:6, col:25> 'int'     | | |-ImplicitCastExpr 0x157945960 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x157945920 <col:6> 'int ()' Function 0x157945868 'PageReferenced' 'int ()'     | | `-ImplicitCastExpr 0x1579459a0 <col:21> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x157945940 <col:21> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x157945af0 <line:13:3, col:28> 'int'     |   |-ImplicitCastExpr 0x157945ad8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157945a98 <col:3> 'int ()' Function 0x1579459e0 'SetPageReferenced' 'int ()'     |   `-ImplicitCastExpr 0x157945b18 <col:21> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x157945ab8 <col:21> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-IfStmt 0x161008ac8 <line:14:2, line:15:26>     | |-CallExpr 0x161008910 <line:14:6, col:23> 'int'     | | |-ImplicitCastExpr 0x1610088f8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1610088b8 <col:6> 'int ()' Function 0x161008800 'PageUptodate' 'int ()'     | | `-ImplicitCastExpr 0x161008938 <col:19> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x1610088d8 <col:19> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x161008a88 <line:15:3, col:26> 'int'     |   |-ImplicitCastExpr 0x161008a70 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x161008a30 <col:3> 'int ()' Function 0x161008978 'SetPageUptodate' 'int ()'     |   `-ImplicitCastExpr 0x161008ab0 <col:19> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x161008a50 <col:19> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-IfStmt 0x161009400 <line:16:2, line:20:29> has_else     | |-CallExpr 0x161008c20 <line:16:6, col:30> 'int'     | | |-ImplicitCastExpr 0x161008c08 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x161008bc8 <col:6> 'int ()' Function 0x161008b10 'TestClearPageActive' 'int ()'     | | `-ImplicitCastExpr 0x161008c48 <col:26> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x161008be8 <col:26> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | |-CompoundStmt 0x1610090d0 <col:33, line:19:2>     | | |-CallExpr 0x161008f10 <line:17:3, col:45> 'int'     | | | |-ImplicitCastExpr 0x161008ef8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | | | `-DeclRefExpr 0x161008d40 <col:3> 'int ()' Function 0x161008c88 'VM_BUG_ON_PAGE' 'int ()'     | | | |-CallExpr 0x161008e98 <col:18, col:38> 'int'     | | | | |-ImplicitCastExpr 0x161008e80 <col:18> 'int (*)()' <FunctionToPointerDecay>     | | | | | `-DeclRefExpr 0x161008e40 <col:18> 'int ()' Function 0x161008d88 'PageUnevictable' 'int ()'     | | | | `-ImplicitCastExpr 0x161008ec0 <col:34> 'struct page *' <LValueToRValue>     | | | |   `-DeclRefExpr 0x161008e60 <col:34> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | | | `-ImplicitCastExpr 0x161008f40 <col:41> 'struct page *' <LValueToRValue>     | | |   `-DeclRefExpr 0x161008ed8 <col:41> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | | `-CallExpr 0x161009090 <line:18:3, col:24> 'int'     | |   |-ImplicitCastExpr 0x161009078 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x161009038 <col:3> 'int ()' Function 0x161008f80 'SetPageActive' 'int ()'     | |   `-ImplicitCastExpr 0x1610090b8 <col:17> 'struct page *' <LValueToRValue>     | |     `-DeclRefExpr 0x161009058 <col:17> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     | `-IfStmt 0x1610093e0 <line:19:9, line:20:29>     |   |-CallExpr 0x161009228 <line:19:13, col:42> 'int'     |   | |-ImplicitCastExpr 0x161009210 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1610091d0 <col:13> 'int ()' Function 0x161009118 'TestClearPageUnevictable' 'int ()'     |   | `-ImplicitCastExpr 0x161009250 <col:38> 'struct page *' <LValueToRValue>     |   |   `-DeclRefExpr 0x1610091f0 <col:38> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     |   `-CallExpr 0x1610093a0 <line:20:3, col:29> 'int'     |     |-ImplicitCastExpr 0x161009388 <col:3> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x161009348 <col:3> 'int ()' Function 0x161009290 'SetPageUnevictable' 'int ()'     |     `-ImplicitCastExpr 0x1610093c8 <col:22> 'struct page *' <LValueToRValue>     |       `-DeclRefExpr 0x161009368 <col:22> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-IfStmt 0x161009720 <line:21:2, line:22:25>     | |-CallExpr 0x161009568 <line:21:6, col:22> 'int'     | | |-ImplicitCastExpr 0x161009550 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x161009510 <col:6> 'int ()' Function 0x161009458 'PageChecked' 'int ()'     | | `-ImplicitCastExpr 0x161009590 <col:18> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x161009530 <col:18> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x1610096e0 <line:22:3, col:25> 'int'     |   |-ImplicitCastExpr 0x1610096c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x161009688 <col:3> 'int ()' Function 0x1610095d0 'SetPageChecked' 'int ()'     |   `-ImplicitCastExpr 0x161009708 <col:18> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x1610096a8 <col:18> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-IfStmt 0x1579472c8 <line:23:2, line:24:30>     | |-CallExpr 0x157947110 <line:23:6, col:27> 'int'     | | |-ImplicitCastExpr 0x1579470f8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1579470b8 <col:6> 'int ()' Function 0x157947000 'PageMappedToDisk' 'int ()'     | | `-ImplicitCastExpr 0x157947138 <col:23> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x1579470d8 <col:23> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x157947288 <line:24:3, col:30> 'int'     |   |-ImplicitCastExpr 0x157947270 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157947230 <col:3> 'int ()' Function 0x157947178 'SetPageMappedToDisk' 'int ()'     |   `-ImplicitCastExpr 0x1579472b0 <col:23> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x157947250 <col:23> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-IfStmt 0x1579475d8 <line:27:2, line:28:23>     | |-CallExpr 0x157947420 <line:27:6, col:20> 'int'     | | |-ImplicitCastExpr 0x157947408 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1579473c8 <col:6> 'int ()' Function 0x157947310 'PageDirty' 'int ()'     | | `-ImplicitCastExpr 0x157947448 <col:16> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x1579473e8 <col:16> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x157947598 <line:28:3, col:23> 'int'     |   |-ImplicitCastExpr 0x157947580 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157947540 <col:3> 'int ()' Function 0x157947488 'SetPageDirty' 'int ()'     |   `-ImplicitCastExpr 0x1579475c0 <col:16> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x157947560 <col:16> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-IfStmt 0x1579478e8 <line:30:2, line:31:25>     | |-CallExpr 0x157947730 <line:30:6, col:24> 'int'     | | |-ImplicitCastExpr 0x157947718 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1579476d8 <col:6> 'int ()' Function 0x157947620 'page_is_young' 'int ()'     | | `-ImplicitCastExpr 0x157947758 <col:20> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x1579476f8 <col:20> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x1579478a8 <line:31:3, col:25> 'int'     |   |-ImplicitCastExpr 0x157947890 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157947850 <col:3> 'int ()' Function 0x157947798 'set_page_young' 'int ()'     |   `-ImplicitCastExpr 0x1579478d0 <col:18> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x157947870 <col:18> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-IfStmt 0x157947bf8 <line:32:2, line:33:24>     | |-CallExpr 0x157947a40 <line:32:6, col:23> 'int'     | | |-ImplicitCastExpr 0x157947a28 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x1579479e8 <col:6> 'int ()' Function 0x157947930 'page_is_idle' 'int ()'     | | `-ImplicitCastExpr 0x157947a68 <col:19> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x157947a08 <col:19> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x157947bb8 <line:33:3, col:24> 'int'     |   |-ImplicitCastExpr 0x157947ba0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157947b60 <col:3> 'int ()' Function 0x157947aa8 'set_page_idle' 'int ()'     |   `-ImplicitCastExpr 0x157947be0 <col:17> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x157947b80 <col:17> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     |-BinaryOperator 0x157947df0 <line:36:2, col:41> 'int' '='     | |-DeclRefExpr 0x157947c18 <col:2> 'int' lvalue Var 0x157944d88 'cpupid' 'int'     | `-CallExpr 0x157947da8 <col:11, col:41> 'int'     |   |-ImplicitCastExpr 0x157947d90 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157947d18 <col:11> 'int ()' Function 0x157947c60 'page_cpupid_xchg_last' 'int ()'     |   |-ImplicitCastExpr 0x157947dd8 <col:33> 'struct page *' <LValueToRValue>     |   | `-DeclRefExpr 0x157947d38 <col:33> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     |   `-UnaryOperator 0x157947d78 <col:39, col:40> 'int' prefix '-'     |     `-IntegerLiteral 0x157947d58 <col:40> 'int' 1     |-CallExpr 0x157947e88 <line:37:2, col:39> 'int'     | |-ImplicitCastExpr 0x157947e70 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157947e10 <col:2> 'int ()' Function 0x157947c60 'page_cpupid_xchg_last' 'int ()'     | |-ImplicitCastExpr 0x157947eb8 <col:24> 'struct page *' <LValueToRValue>     | | `-DeclRefExpr 0x157947e30 <col:24> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     | `-ImplicitCastExpr 0x157947ed0 <col:33> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x157947e50 <col:33> 'int' lvalue Var 0x157944d88 'cpupid' 'int'     |-CallExpr 0x157948058 <line:39:2, col:32> 'int'     | |-ImplicitCastExpr 0x157948040 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157947fc8 <col:2> 'int ()' Function 0x157947f10 'ksm_migrate_page' 'int ()'     | |-ImplicitCastExpr 0x157948088 <col:19> 'struct page *' <LValueToRValue>     | | `-DeclRefExpr 0x157948000 <col:19> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'     | `-ImplicitCastExpr 0x1579480a0 <col:28> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x157948020 <col:28> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     |-IfStmt 0x1579483a8 <line:41:2, line:42:26>     | |-CallExpr 0x1579481f0 <line:41:6, col:24> 'int'     | | |-ImplicitCastExpr 0x1579481d8 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x157948198 <col:6> 'int ()' Function 0x1579480e0 'PageSwapCache' 'int ()'     | | `-ImplicitCastExpr 0x157948218 <col:20> 'struct page *' <LValueToRValue>     | |   `-DeclRefExpr 0x1579481b8 <col:20> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-CallExpr 0x157948368 <line:42:3, col:26> 'int'     |   |-ImplicitCastExpr 0x157948350 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x157948310 <col:3> 'int ()' Function 0x157948258 'ClearPageSwapCache' 'int ()'     |   `-ImplicitCastExpr 0x157948390 <col:22> 'struct page *' <LValueToRValue>     |     `-DeclRefExpr 0x157948330 <col:22> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     |-CallExpr 0x157948500 <line:43:2, col:23> 'int'     | |-ImplicitCastExpr 0x1579484e8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1579484a8 <col:2> 'int ()' Function 0x1579483f0 'ClearPagePrivate' 'int ()'     | `-ImplicitCastExpr 0x157948528 <col:19> 'struct page *' <LValueToRValue>     |   `-DeclRefExpr 0x1579484c8 <col:19> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     |-CallExpr 0x157948698 <line:44:2, col:26> 'int'     | |-ImplicitCastExpr 0x157948680 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x157948620 <col:2> 'int ()' Function 0x157948568 'set_page_private' 'int ()'     | |-ImplicitCastExpr 0x1579486c8 <col:19> 'struct page *' <LValueToRValue>     | | `-DeclRefExpr 0x157948640 <col:19> 'struct page *' lvalue ParmVar 0x157928738 'page' 'struct page *'     | `-IntegerLiteral 0x157948660 <col:25> 'int' 0     `-IfStmt 0x1579489d0 <line:47:2, line:48:29>       |-CallExpr 0x157948818 <line:47:6, col:27> 'int'       | |-ImplicitCastExpr 0x157948800 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x1579487c0 <col:6> 'int ()' Function 0x157948708 'PageWriteback' 'int ()'       | `-ImplicitCastExpr 0x157948840 <col:20> 'struct page *' <LValueToRValue>       |   `-DeclRefExpr 0x1579487e0 <col:20> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *'       `-CallExpr 0x157948990 <line:48:3, col:29> 'int'         |-ImplicitCastExpr 0x157948978 <col:3> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x157948938 <col:3> 'int ()' Function 0x157948880 'end_page_writeback' 'int ()'         `-ImplicitCastExpr 0x1579489b8 <col:22> 'struct page *' <LValueToRValue>           `-DeclRefExpr 0x157948958 <col:22> 'struct page *' lvalue ParmVar 0x157928648 'newpage' 'struct page *' ","19275":"`-FunctionDecl 0x12c026a48  line:1:1 invalid xfs_attr3_leaf_read 'int (struct xfs_trans *, struct xfs_inode *, int, struct xfs_buf **)'   |-ParmVarDecl 0x12c00e248 <line:2:2, col:20> col:20 used tp 'struct xfs_trans *'   |-ParmVarDecl 0x12c026628 <line:3:2, col:20> col:20 used dp 'struct xfs_inode *'   |-ParmVarDecl 0x12c0266c0 <line:4:2, col:15> col:15 invalid bno 'int'   |-ParmVarDecl 0x12c0268f8 <line:5:2, col:20> col:20 used bpp 'struct xfs_buf **'   `-CompoundStmt 0x12c027380 <line:6:1, line:14:1>     |-DeclStmt 0x12c026b90 <line:7:2, col:11>     | `-VarDecl 0x12c026b28 <col:2, col:8> col:8 used err 'int'     |-BinaryOperator 0x12c026f50 <line:9:2, line:10:27> 'int' contains-errors '='     | |-DeclRefExpr 0x12c026ba8 <line:9:2> 'int' lvalue Var 0x12c026b28 'err' 'int'     | `-CallExpr 0x12c026ef8 <col:8, line:10:27> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c026d20 <line:9:8> 'int ()' Function 0x12c026c68 'xfs_da_read_buf' 'int ()'     |   |-DeclRefExpr 0x12c026d40 <col:24> 'struct xfs_trans *' lvalue ParmVar 0x12c00e248 'tp' 'struct xfs_trans *'     |   |-DeclRefExpr 0x12c026d60 <col:28> 'struct xfs_inode *' lvalue ParmVar 0x12c026628 'dp' 'struct xfs_inode *'     |   |-RecoveryExpr 0x12c026d80 <col:32> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x12c026da0 <col:37> 'int' 0     |   |-DeclRefExpr 0x12c026dc0 <col:40> 'struct xfs_buf **' lvalue ParmVar 0x12c0268f8 'bpp' 'struct xfs_buf **'     |   |-RecoveryExpr 0x12c026ea0 <col:45> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x12c026ee0 <line:10:4, col:5> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x12c026ec0 <col:5> '<dependent type>' contains-errors lvalue     |-IfStmt 0x12c027318 <line:11:2, line:12:58>     | |-BinaryOperator 0x12c027080 <line:11:6, col:21> 'int' '&&'     | | |-BinaryOperator 0x12c026ff8 <col:6, col:14> 'int' '&&'     | | | |-UnaryOperator 0x12c026fa8 <col:6, col:7> 'int' prefix '!' cannot overflow     | | | | `-ImplicitCastExpr 0x12c026f90 <col:7> 'int' <LValueToRValue>     | | | |   `-DeclRefExpr 0x12c026f70 <col:7> 'int' lvalue Var 0x12c026b28 'err' 'int'     | | | `-ImplicitCastExpr 0x12c026fe0 <col:14> 'struct xfs_trans *' <LValueToRValue>     | | |   `-DeclRefExpr 0x12c026fc0 <col:14> 'struct xfs_trans *' lvalue ParmVar 0x12c00e248 'tp' 'struct xfs_trans *'     | | `-ImplicitCastExpr 0x12c027068 <col:20, col:21> 'struct xfs_buf *' <LValueToRValue>     | |   `-UnaryOperator 0x12c027050 <col:20, col:21> 'struct xfs_buf *' lvalue prefix '*' cannot overflow     | |     `-ImplicitCastExpr 0x12c027038 <col:21> 'struct xfs_buf **' <LValueToRValue>     | |       `-DeclRefExpr 0x12c027018 <col:21> 'struct xfs_buf **' lvalue ParmVar 0x12c0268f8 'bpp' 'struct xfs_buf **'     | `-CallExpr 0x12c0272e0 <line:12:3, col:58> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12c027180 <col:3> 'int ()' Function 0x12c0270c8 'xfs_trans_buf_set_type' 'int ()'     |   |-DeclRefExpr 0x12c0271a0 <col:26> 'struct xfs_trans *' lvalue ParmVar 0x12c00e248 'tp' 'struct xfs_trans *'     |   |-UnaryOperator 0x12c0272a8 <col:30, col:31> 'struct xfs_buf *' lvalue prefix '*' cannot overflow     |   | `-ImplicitCastExpr 0x12c027290 <col:31> 'struct xfs_buf **' <LValueToRValue>     |   |   `-DeclRefExpr 0x12c0271c0 <col:31> 'struct xfs_buf **' lvalue ParmVar 0x12c0268f8 'bpp' 'struct xfs_buf **'     |   `-RecoveryExpr 0x12c0272c0 <col:36> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x12c027370 <line:13:2, col:9>       `-ImplicitCastExpr 0x12c027358 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x12c027338 <col:9> 'int' lvalue Var 0x12c026b28 'err' 'int' ","19581":"`-FunctionDecl 0x15300e358  line:1:12 cypress_generic_port_probe 'int (struct usb_serial_port *)' static   |-ParmVarDecl 0x15300e248 <col:39, col:63> col:63 used port 'struct usb_serial_port *'   `-CompoundStmt 0x15280a748 <line:2:1, line:48:1>     |-DeclStmt 0x153026898 <line:3:2, col:42>     | |-RecordDecl 0x153026650 <col:2, col:9> col:9 struct usb_serial     | `-VarDecl 0x1530267b8 <col:2, col:36> col:21 used serial 'struct usb_serial *' cinit     |   `-RecoveryExpr 0x153026858 <col:30, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x153026820 <col:30> 'struct usb_serial_port *' lvalue ParmVar 0x15300e248 'port' 'struct usb_serial_port *'     |-DeclStmt 0x153026a98 <line:4:2, col:30>     | |-RecordDecl 0x1530268b0 <col:2, col:9> col:9 struct cypress_private     | `-VarDecl 0x153026a18 <col:2, col:26> col:26 used priv 'struct cypress_private *'     |-IfStmt 0x153026d80 <line:7:2, line:8:11>     | |-UnaryOperator 0x153026cc0 <line:7:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x153026ca8 <col:7> 'struct cypress_private *' <LValueToRValue>     | |   `-DeclRefExpr 0x153026c88 <col:7> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     | `-ReturnStmt 0x153026d70 <line:8:3, col:11>     |   `-UnaryOperator 0x153026d58 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x153026d40 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x153026d20 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x153026e38 <line:10:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x153026dd8 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x153026da0 <col:2> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     | `-UnaryOperator 0x153026e20 <col:21, col:22> 'int' prefix '!' cannot overflow     |   `-IntegerLiteral 0x153026e00 <col:22> 'int' 0     |-CallExpr 0x153026fd0 <line:11:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153026f38 <col:2> 'int ()' Function 0x153026e80 'spin_lock_init' 'int ()'     | `-UnaryOperator 0x153026fb8 <col:17, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x153026f90 <col:18, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x153026f58 <col:18> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     |-IfStmt 0x1530274c0 <line:12:2, line:15:2>     | |-CallExpr 0x153027218 <line:12:6, col:65> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1530270d8 <col:6> 'int ()' Function 0x153027020 'kfifo_alloc' 'int ()'     | | |-UnaryOperator 0x153027158 <col:18, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | `-RecoveryExpr 0x153027130 <col:19, col:25> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x1530270f8 <col:19> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     | | |-RecoveryExpr 0x1530271d8 <col:37> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1530271f8 <col:55> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1530274a0 <col:68, line:15:2>     |   |-CallExpr 0x1530273b8 <line:13:3, col:13> 'int'     |   | |-ImplicitCastExpr 0x1530273a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x153027330 <col:3> 'int ()' Function 0x153027278 'kfree' 'int ()'     |   | `-ImplicitCastExpr 0x1530273e0 <col:9> 'struct cypress_private *' <LValueToRValue>     |   |   `-DeclRefExpr 0x153027350 <col:9> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     |   `-ReturnStmt 0x153027490 <line:14:3, col:11>     |     `-UnaryOperator 0x153027478 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x153027460 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x153027440 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151120e08 <line:18:2, line:19:38>     | |-UnaryOperator 0x151120c68 <line:18:6, col:26> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x151120c40 <col:7, col:26> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1530275c0 <col:7> 'int ()' Function 0x153027508 'is_frwd' 'int ()'     | |   `-RecoveryExpr 0x151120c18 <col:15, col:23> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x1530275e0 <col:15> 'struct usb_serial *' contains-errors lvalue Var 0x1530267b8 'serial' 'struct usb_serial *'     | `-CallExpr 0x151120de0 <line:19:3, col:38> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x151120d60 <col:3> 'int ()' Function 0x151120ca8 'usb_reset_configuration' 'int ()'     |   `-RecoveryExpr 0x151120db8 <col:27, col:35> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x151120d80 <col:27> 'struct usb_serial *' contains-errors lvalue Var 0x1530267b8 'serial' 'struct usb_serial *'     |-BinaryOperator 0x151120ea8 <line:21:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x151120e60 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151120e28 <col:2> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     | `-IntegerLiteral 0x151120e88 <col:19> 'int' 0     |-BinaryOperator 0x151120f48 <line:22:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x151120f00 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151120ec8 <col:2> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     | `-IntegerLiteral 0x151120f28 <col:23> 'int' 0     |-BinaryOperator 0x151120fe8 <line:23:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x151120fa0 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151120f68 <col:2> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     | `-IntegerLiteral 0x151120fc8 <col:30> 'int' 0     |-BinaryOperator 0x151121088 <line:24:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x151121040 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x151121008 <col:2> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     | `-IntegerLiteral 0x151121068 <col:19> 'int' 0     |-IfStmt 0x151121a48 <line:31:2, line:42:2> has_else     | |-RecoveryExpr 0x151121228 <line:31:6, col:17> '_Bool' contains-errors     | |-CompoundStmt 0x1511215b0 <col:20, line:36:2>     | `-CompoundStmt 0x151121a20 <col:9, line:42:2>     |   |-BinaryOperator 0x1511216c8 <line:37:3, col:55> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x1511215f8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1511215c0 <col:3> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     |   | `-CXXDependentScopeMemberExpr 0x151121680 <col:30, col:55> '<dependent type>' contains-errors lvalue ->interval     |   |   `-RecoveryExpr 0x151121658 <col:30, col:36> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x151121620 <col:30> 'struct usb_serial_port *' lvalue ParmVar 0x15300e248 'port' 'struct usb_serial_port *'     |   |-BinaryOperator 0x1511217f0 <line:38:3, col:53> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x151121720 <col:3, col:9> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x1511216e8 <col:3> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     |   | `-CXXDependentScopeMemberExpr 0x1511217a8 <col:29, col:53> '<dependent type>' contains-errors lvalue ->interval     |   |   `-RecoveryExpr 0x151121780 <col:29, col:35> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x151121748 <col:29> 'struct usb_serial_port *' lvalue ParmVar 0x15300e248 'port' 'struct usb_serial_port *'     |   `-CallExpr 0x1511219d8 <line:39:3, line:41:28> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x151121810 <line:39:3> 'int ()' Function 0x151121330 'dev_dbg' 'int ()'     |     |-UnaryOperator 0x151121890 <col:11, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |     | `-RecoveryExpr 0x151121868 <col:12, col:18> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x151121830 <col:12> 'struct usb_serial_port *' lvalue ParmVar 0x15300e248 'port' 'struct usb_serial_port *'     |     |-StringLiteral 0x1511218a8 <col:23> 'char[4]' lvalue \"STR\"     |     |-PredefinedExpr 0x151121900 <line:40:4> 'const char[27]' lvalue __func__     |     | `-StringLiteral 0x1511218c8 <col:4> 'const char[27]' lvalue \"cypress_generic_port_probe\"     |     |-RecoveryExpr 0x151121950 <col:14, col:20> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x151121918 <col:14> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     |     `-RecoveryExpr 0x1511219b0 <line:41:4, col:10> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x151121978 <col:4> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     |-CallExpr 0x151121bd0 <line:43:2, col:37> 'int'     | |-ImplicitCastExpr 0x151121bb8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x151121b58 <col:2> 'int ()' Function 0x151121aa0 'usb_set_serial_port_data' 'int ()'     | |-ImplicitCastExpr 0x15280a600 <col:27> 'struct usb_serial_port *' <LValueToRValue>     | | `-DeclRefExpr 0x151121b78 <col:27> 'struct usb_serial_port *' lvalue ParmVar 0x15300e248 'port' 'struct usb_serial_port *'     | `-ImplicitCastExpr 0x15280a618 <col:33> 'struct cypress_private *' <LValueToRValue>     |   `-DeclRefExpr 0x151121b98 <col:33> 'struct cypress_private *' lvalue Var 0x153026a18 'priv' 'struct cypress_private *'     |-BinaryOperator 0x15280a6f8 <line:45:2, col:27> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15280a690 <col:2, col:13> '<dependent type>' contains-errors lvalue .drain_delay     | | `-RecoveryExpr 0x15280a668 <col:2, col:8> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15280a630 <col:2> 'struct usb_serial_port *' lvalue ParmVar 0x15300e248 'port' 'struct usb_serial_port *'     | `-IntegerLiteral 0x15280a6d8 <col:27> 'int' 256     `-ReturnStmt 0x15280a738 <line:47:2, col:9>       `-IntegerLiteral 0x15280a718 <col:9> 'int' 0 ","19530":"`-FunctionDecl 0x13b00de38  line:1:1 onig_positive_int_multiply 'int (int, int)'   |-ParmVarDecl 0x13b00dcd8 <col:28, col:32> col:32 used x 'int'   |-ParmVarDecl 0x13b00dd58 <col:35, col:39> col:39 used y 'int'   `-CompoundStmt 0x13b00e2c0 <line:2:1, line:9:1>     |-IfStmt 0x13b00e078 <line:3:3, col:32>     | |-BinaryOperator 0x13b00e028 <col:7, col:22> 'int' '||'     | | |-BinaryOperator 0x13b00df90 <col:7, col:12> 'int' '=='     | | | |-ImplicitCastExpr 0x13b00df78 <col:7> 'int' <LValueToRValue>     | | | | `-DeclRefExpr 0x13b00df38 <col:7> 'int' lvalue ParmVar 0x13b00dcd8 'x' 'int'     | | | `-IntegerLiteral 0x13b00df58 <col:12> 'int' 0     | | `-BinaryOperator 0x13b00e008 <col:17, col:22> 'int' '=='     | |   |-ImplicitCastExpr 0x13b00dff0 <col:17> 'int' <LValueToRValue>     | |   | `-DeclRefExpr 0x13b00dfb0 <col:17> 'int' lvalue ParmVar 0x13b00dd58 'y' 'int'     | |   `-IntegerLiteral 0x13b00dfd0 <col:22> 'int' 0     | `-ReturnStmt 0x13b00e068 <col:25, col:32>     |   `-IntegerLiteral 0x13b00e048 <col:32> 'int' 0     `-IfStmt 0x13b00e290 <line:5:3, line:8:13> has_else       |-BinaryOperator 0x13b00e188 <line:5:7, col:21> 'int' contains-errors '<'       | |-DeclRefExpr 0x13b00e098 <col:7> 'int' lvalue ParmVar 0x13b00dcd8 'x' 'int'       | `-BinaryOperator 0x13b00e168 <col:11, col:21> '<dependent type>' contains-errors '\/'       |   |-RecoveryExpr 0x13b00e148 <col:11> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x13b00e0e8 <col:21> 'int' lvalue ParmVar 0x13b00dd58 'y' 'int'       |-ReturnStmt 0x13b00e238 <line:6:5, col:16>       | `-BinaryOperator 0x13b00e218 <col:12, col:16> 'int' '*'       |   |-ImplicitCastExpr 0x13b00e1e8 <col:12> 'int' <LValueToRValue>       |   | `-DeclRefExpr 0x13b00e1a8 <col:12> 'int' lvalue ParmVar 0x13b00dcd8 'x' 'int'       |   `-ImplicitCastExpr 0x13b00e200 <col:16> 'int' <LValueToRValue>       |     `-DeclRefExpr 0x13b00e1c8 <col:16> 'int' lvalue ParmVar 0x13b00dd58 'y' 'int'       `-ReturnStmt 0x13b00e280 <line:8:5, col:13>         `-UnaryOperator 0x13b00e268 <col:12, col:13> 'int' prefix '-'           `-IntegerLiteral 0x13b00e248 <col:13> 'int' 1 ","19367":"`-FunctionDecl 0x13e1284c0  line:1:13 invalid manager_invoke_notify_message 'void (int *, int *, int, const char *, int, int *)' static   |-ParmVarDecl 0x13e128128 <col:43, col:52> col:52 invalid m 'int *'   |-ParmVarDecl 0x13e1281a8 <col:55, col:61> col:61 invalid u 'int *'   |-ParmVarDecl 0x13e128228 <col:64, col:70> col:70 invalid pid 'int'   |-ParmVarDecl 0x13e1282a8 <col:75, col:87> col:87 used buf 'const char *'   |-ParmVarDecl 0x13e128328 <col:92, col:99> col:99 invalid n 'int'   |-ParmVarDecl 0x13e1283a8 <col:102, col:109> col:109 invalid fds 'int *'   `-CompoundStmt 0x13e809c40 <col:114, line:19:1>     |-CallExpr 0x13e128730 <line:4:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e1286f0 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'     | `-RecoveryExpr 0x13e128710 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e128798 <line:5:9, col:17> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e128758 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'     | `-RecoveryExpr 0x13e128778 <col:16> '<dependent type>' contains-errors lvalue     |-CallExpr 0x13e809248 <line:6:9, col:19> 'int'     | |-ImplicitCastExpr 0x13e809230 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13e1287c0 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'     | `-ImplicitCastExpr 0x13e809270 <col:16> 'const char *' <LValueToRValue>     |   `-DeclRefExpr 0x13e1287e0 <col:16> 'const char *' lvalue ParmVar 0x13e1282a8 'buf' 'const char *'     |-CallExpr 0x13e809308 <line:7:9, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13e809288 <col:9> 'int ()' Function 0x13e128638 'assert' 'int ()'     | `-BinaryOperator 0x13e8092e8 <col:16, col:20> 'int' contains-errors '>'     |   |-RecoveryExpr 0x13e8092a8 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x13e8092c8 <col:20> 'int' 0     |-IfStmt 0x13e809728 <line:10:9, line:13:9>     | |-UnaryOperator 0x13e8095a8 <line:10:13, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13e809590 <col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x13e809570 <col:14> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13e809708 <col:20, line:13:9>     |   |-CallExpr 0x13e8096d8 <line:11:17, col:25> 'int'     |   | `-ImplicitCastExpr 0x13e8096c0 <col:17> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x13e8096a0 <col:17> 'int ()' Function 0x13e8095e8 'log_oom' 'int ()'     |   `-ReturnStmt 0x13e8096f8 <line:12:17>     `-IfStmt 0x13e809c10 <line:15:9, line:18:40> has_else       |-CXXDependentScopeMemberExpr 0x13e809890 <line:15:13, col:29> '<dependent type>' contains-errors lvalue ->notify_message       | `-CallExpr 0x13e809868 <col:13, col:26> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x13e809828 <col:13> 'int ()' Function 0x13e809770 'UNIT_VTABLE' 'int ()'       |   `-RecoveryExpr 0x13e809848 <col:25> '<dependent type>' contains-errors lvalue       |-CallExpr 0x13e809a60 <line:16:17, col:65> '<dependent type>' contains-errors       | |-CXXDependentScopeMemberExpr 0x13e809940 <col:17, col:33> '<dependent type>' contains-errors lvalue ->notify_message       | | `-CallExpr 0x13e809918 <col:17, col:30> '<dependent type>' contains-errors       | |   |-DeclRefExpr 0x13e8098d8 <col:17> 'int ()' Function 0x13e809770 'UNIT_VTABLE' 'int ()'       | |   `-RecoveryExpr 0x13e8098f8 <col:29> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x13e809988 <col:48> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x13e8099a8 <col:51> '<dependent type>' contains-errors lvalue       | |-RecoveryExpr 0x13e809a40 <col:56> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13e8099e0 <col:62> '<dependent type>' contains-errors lvalue       `-CallExpr 0x13e809be0 <line:18:17, col:40> '<dependent type>' contains-errors         |-DeclRefExpr 0x13e809b80 <col:17> 'int ()' Function 0x13e809ac8 'log_unit_debug' 'int ()'         |-RecoveryExpr 0x13e809ba0 <col:32> '<dependent type>' contains-errors lvalue         `-StringLiteral 0x13e809bc0 <col:35> 'char[4]' lvalue \"STR\" ","19761":"`-FunctionDecl 0x1590266b8  line:1:20 soc_device_register 'struct soc_device *(struct soc_device_attribute *)'   |-ParmVarDecl 0x15900e2e8 <col:40, col:69> col:69 used soc_dev_attr 'struct soc_device_attribute *'   `-CompoundStmt 0x159029b18 <line:2:1, line:55:1>     |-DeclStmt 0x1590268a0 <line:3:2, col:28>     | `-VarDecl 0x159026838 <col:2, col:21> col:21 used soc_dev 'struct soc_device *'     |-DeclStmt 0x159026b08 <line:4:2, col:48>     | |-RecordDecl 0x1590268b8 <col:8, col:15> col:15 struct attribute_group     | `-VarDecl 0x159026a88 <col:2, col:33> col:33 used soc_attr_groups 'const struct attribute_group **'     |-DeclStmt 0x159026ba0 <line:5:2, col:9>     | `-VarDecl 0x159026b38 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x159027060 <line:7:2, line:12:2>     | |-UnaryOperator 0x159026ce0 <line:7:6, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159026cc8 <col:7, col:20> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x159026c80 <col:7, col:20> '<dependent type>' contains-errors lvalue .p     | |     `-RecoveryExpr 0x159026c60 <col:7> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x159027038 <col:23, line:12:2>     |   |-IfStmt 0x159026f58 <line:8:3, line:9:25>     |   | |-DeclRefExpr 0x159026d10 <line:8:7> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'     |   | `-ReturnStmt 0x159026f48 <line:9:4, col:25>     |   |   `-CallExpr 0x159026f20 <col:11, col:25> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x159026e40 <col:11> 'int ()' Function 0x159026d88 'ERR_PTR' 'int ()'     |   |     `-UnaryOperator 0x159026f08 <col:19, col:20> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |       `-ImplicitCastExpr 0x159026ef0 <col:20> '<dependent type>' contains-errors <LValueToRValue>     |   |         `-RecoveryExpr 0x159026ed0 <col:20> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x159026fd0 <line:10:3, col:24> 'struct soc_device_attribute *' '='     |   | |-DeclRefExpr 0x159026f78 <col:3> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'     |   | `-ImplicitCastExpr 0x159026fb8 <col:24> 'struct soc_device_attribute *' <LValueToRValue>     |   |   `-DeclRefExpr 0x159026f98 <col:24> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'     |   `-ReturnStmt 0x159027028 <line:11:3, col:10>     |     `-RecoveryExpr 0x159027008 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1590273f8 <line:15:2, line:18:2>     | |-UnaryOperator 0x159027260 <line:15:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x159027248 <col:7> 'struct soc_device *' <LValueToRValue>     | |   `-DeclRefExpr 0x159027228 <col:7> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     | `-CompoundStmt 0x1590273d8 <col:16, line:18:2>     |   |-BinaryOperator 0x159027350 <line:16:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x159027278 <col:3> 'int' lvalue Var 0x159026b38 'ret' 'int'     |   | `-UnaryOperator 0x159027338 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x159027320 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x159027300 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x1590273c0 <line:17:3, col:8> 'out1' 0x159027370     |-BinaryOperator 0x15a008990 <line:20:2, col:67> 'const struct attribute_group **' contains-errors '='     | |-DeclRefExpr 0x159027418 <col:2> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'     | `-CallExpr 0x15a008958 <col:20, col:67> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x159027518 <col:20> 'int ()' Function 0x159027460 'kcalloc' 'int ()'     |   |-IntegerLiteral 0x159027538 <col:28> 'int' 3     |   |-UnaryExprOrTypeTraitExpr 0x15a008918 <col:31, col:54> 'unsigned long' sizeof     |   | `-ParenExpr 0x15a0088f8 <col:37, col:54> 'const struct attribute_group *' lvalue     |   |   `-UnaryOperator 0x15a0088e0 <col:38, col:39> 'const struct attribute_group *' lvalue prefix '*' cannot overflow     |   |     `-ImplicitCastExpr 0x15a0088c8 <col:39> 'const struct attribute_group **' <LValueToRValue>     |   |       `-DeclRefExpr 0x159027558 <col:39> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **' non_odr_use_unevaluated     |   `-RecoveryExpr 0x15a008938 <col:57> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a008b80 <line:21:2, line:24:2>     | |-UnaryOperator 0x15a0089e8 <line:21:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15a0089d0 <col:7> 'const struct attribute_group **' <LValueToRValue>     | |   `-DeclRefExpr 0x15a0089b0 <col:7> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'     | `-CompoundStmt 0x15a008b60 <col:24, line:24:2>     |   |-BinaryOperator 0x15a008ad8 <line:22:3, col:10> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15a008a00 <col:3> 'int' lvalue Var 0x159026b38 'ret' 'int'     |   | `-UnaryOperator 0x15a008ac0 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x15a008aa8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x15a008a88 <col:10> '<dependent type>' contains-errors lvalue     |   `-GotoStmt 0x15a008b48 <line:23:3, col:8> 'out2' 0x15a008af8     |-BinaryOperator 0x15a008d50 <line:25:2, col:24> 'const struct attribute_group *' '='     | |-ArraySubscriptExpr 0x15a008c80 <col:2, col:19> 'const struct attribute_group *' lvalue     | | |-ImplicitCastExpr 0x15a008c68 <col:2> 'const struct attribute_group **' <LValueToRValue>     | | | `-DeclRefExpr 0x15a008ba0 <col:2> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'     | | `-IntegerLiteral 0x15a008bc0 <col:18> 'int' 0     | `-ImplicitCastExpr 0x15a008d38 <col:23, col:24> 'const struct attribute_group *' <BitCast>     |   `-UnaryOperator 0x15a008d20 <col:23, col:24> 'const struct attribute_group ***' prefix '&' cannot overflow     |     `-DeclRefExpr 0x15a008ca0 <col:24> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'     |-BinaryOperator 0x15a008e48 <line:26:2, col:37> 'const struct attribute_group *' contains-errors '='     | |-ArraySubscriptExpr 0x15a008dc8 <col:2, col:19> 'const struct attribute_group *' lvalue     | | |-ImplicitCastExpr 0x15a008db0 <col:2> 'const struct attribute_group **' <LValueToRValue>     | | | `-DeclRefExpr 0x15a008d70 <col:2> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'     | | `-IntegerLiteral 0x15a008d90 <col:18> 'int' 1     | `-RecoveryExpr 0x15a008e20 <col:23, col:37> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15a008de8 <col:23> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'     |-BinaryOperator 0x15a0091a0 <line:29:2, col:49> 'int' contains-errors '='     | |-DeclRefExpr 0x15a008e68 <col:2> 'int' lvalue Var 0x159026b38 'ret' 'int'     | `-CallExpr 0x15a009160 <col:8, col:49> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x15a008f68 <col:8> 'int ()' Function 0x15a008eb0 'ida_simple_get' 'int ()'     |   |-UnaryOperator 0x15a009128 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x15a009108 <col:24> '<dependent type>' contains-errors lvalue     |   |-IntegerLiteral 0x15a008fb8 <col:33> 'int' 0     |   |-IntegerLiteral 0x15a008fd8 <col:36> 'int' 0     |   `-RecoveryExpr 0x15a009140 <col:39> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a0092a0 <line:30:2, line:31:8>     | |-BinaryOperator 0x15a009218 <line:30:6, col:12> 'int' '<'     | | |-ImplicitCastExpr 0x15a009200 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15a0091c0 <col:6> 'int' lvalue Var 0x159026b38 'ret' 'int'     | | `-IntegerLiteral 0x15a0091e0 <col:12> 'int' 0     | `-GotoStmt 0x15a009288 <line:31:3, col:8> 'out3' 0x15a009238     |-BinaryOperator 0x15a009340 <line:32:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15a0092f8 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15a0092c0 <col:2> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     | `-DeclRefExpr 0x15a009320 <col:25> 'int' lvalue Var 0x159026b38 'ret' 'int'     |-BinaryOperator 0x15a0093e0 <line:34:2, col:18> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15a009398 <col:2, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15a009360 <col:2> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     | `-DeclRefExpr 0x15a0093c0 <col:18> 'struct soc_device_attribute *' lvalue ParmVar 0x15900e2e8 'soc_dev_attr' 'struct soc_device_attribute *'     |-BinaryOperator 0x15a009570 <line:36:2, col:24> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15a009508 <col:2, col:15> '<dependent type>' contains-errors lvalue .groups     | | `-RecoveryExpr 0x15a0094e0 <col:2, col:11> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a0094a8 <col:2> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     | `-DeclRefExpr 0x15a009550 <col:24> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'     |-CallExpr 0x159029280 <line:39:2, col:57> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a009718 <col:2> 'int ()' Function 0x15a009660 'dev_set_name' 'int ()'     | |-UnaryOperator 0x15a009798 <col:15, col:25> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x15a009770 <col:16, col:25> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15a009738 <col:16> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     | |-StringLiteral 0x159029200 <col:30> 'char[4]' lvalue \"STR\"     | `-RecoveryExpr 0x159029258 <col:37, col:46> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x159029220 <col:37> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     |-BinaryOperator 0x159029478 <line:41:2, col:37> 'int' contains-errors '='     | |-DeclRefExpr 0x1590292b8 <col:2> 'int' lvalue Var 0x159026b38 'ret' 'int'     | `-CallExpr 0x159029450 <col:8, col:37> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1590293b8 <col:8> 'int ()' Function 0x159029300 'device_register' 'int ()'     |   `-UnaryOperator 0x159029438 <col:24, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x159029410 <col:25, col:34> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1590293d8 <col:25> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     |-IfStmt 0x159029780 <line:42:2, line:45:2>     | |-ImplicitCastExpr 0x1590294b8 <line:42:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x159029498 <col:6> 'int' lvalue Var 0x159026b38 'ret' 'int'     | `-CompoundStmt 0x159029760 <col:11, line:45:2>     |   |-CallExpr 0x159029648 <line:43:3, col:27> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1590295b0 <col:3> 'int ()' Function 0x1590294f8 'put_device' 'int ()'     |   | `-UnaryOperator 0x159029630 <col:14, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x159029608 <col:15, col:24> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x1590295d0 <col:15> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     |   `-ReturnStmt 0x159029750 <line:44:3, col:21>     |     `-ImplicitCastExpr 0x159029738 <col:10, col:21> 'struct soc_device *' <IntegralToPointer>     |       `-CallExpr 0x1590296f8 <col:10, col:21> 'int'     |         |-ImplicitCastExpr 0x1590296e0 <col:10> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x159029670 <col:10> 'int ()' Function 0x159026d88 'ERR_PTR' 'int ()'     |         `-ImplicitCastExpr 0x159029720 <col:18> 'int' <LValueToRValue>     |           `-DeclRefExpr 0x159029690 <col:18> 'int' lvalue Var 0x159026b38 'ret' 'int'     |-ReturnStmt 0x1590297d8 <line:47:2, col:9>     | `-ImplicitCastExpr 0x1590297c0 <col:9> 'struct soc_device *' <LValueToRValue>     |   `-DeclRefExpr 0x1590297a0 <col:9> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     |-LabelStmt 0x159029960 <line:49:1, line:50:23> 'out3'     | `-CallExpr 0x159029920 <col:2, col:23> 'int'     |   |-ImplicitCastExpr 0x159029908 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1590298c8 <col:2> 'int ()' Function 0x159029810 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x159029948 <col:8> 'const struct attribute_group **' <LValueToRValue>     |     `-DeclRefExpr 0x1590298e8 <col:8> 'const struct attribute_group **' lvalue Var 0x159026a88 'soc_attr_groups' 'const struct attribute_group **'     |-LabelStmt 0x159029a18 <line:51:1, line:52:15> 'out2'     | `-CallExpr 0x1590299d8 <col:2, col:15> 'int'     |   |-ImplicitCastExpr 0x1590299c0 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x159029980 <col:2> 'int ()' Function 0x159029810 'kfree' 'int ()'     |   `-ImplicitCastExpr 0x159029a00 <col:8> 'struct soc_device *' <LValueToRValue>     |     `-DeclRefExpr 0x1590299a0 <col:8> 'struct soc_device *' lvalue Var 0x159026838 'soc_dev' 'struct soc_device *'     `-LabelStmt 0x159029af8 <line:53:1, line:54:20> 'out1'       `-ReturnStmt 0x159029ae8 <col:2, col:20>         `-ImplicitCastExpr 0x159029ad0 <col:9, col:20> 'struct soc_device *' <IntegralToPointer>           `-CallExpr 0x159029a90 <col:9, col:20> 'int'             |-ImplicitCastExpr 0x159029a78 <col:9> 'int (*)()' <FunctionToPointerDecay>             | `-DeclRefExpr 0x159029a38 <col:9> 'int ()' Function 0x159026d88 'ERR_PTR' 'int ()'             `-ImplicitCastExpr 0x159029ab8 <col:17> 'int' <LValueToRValue>               `-DeclRefExpr 0x159029a58 <col:17> 'int' lvalue Var 0x159026b38 'ret' 'int' ","19588":"`-FunctionDecl 0x13f01e0c8  line:1:12 invalid find_profile_by_num 'int (unsigned int, int **)' static   |-ParmVarDecl 0x13f01ded8 <col:32, col:41> col:41 used profile_num 'unsigned int'   |-ParmVarDecl 0x13f01dfe0 <line:2:11, col:37> col:37 invalid pptr 'int **'   `-CompoundStmt 0x13f01e5a0 <line:3:2, line:18:2>     |-WhileStmt 0x13f01e550 <line:7:2, line:15:3>     | |-CXXDependentScopeMemberExpr 0x13f01e230 <line:7:8, col:11> '<dependent type>' contains-errors lvalue ->name     | | `-RecoveryExpr 0x13f01e210 <col:8> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13f01e538 <line:8:3, line:15:3>     |   `-IfStmt 0x13f01e518 <line:9:3, line:13:4>     |     |-BinaryOperator 0x13f01e380 <line:9:6, col:15> 'int' contains-errors '=='     |     | |-CXXDependentScopeMemberExpr 0x13f01e338 <col:6, col:9> '<dependent type>' contains-errors lvalue ->id     |     | | `-RecoveryExpr 0x13f01e318 <col:6> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x13f01e2d8 <col:15> 'unsigned int' lvalue ParmVar 0x13f01ded8 'profile_num' 'unsigned int'     |     `-CompoundStmt 0x13f01e4f8 <line:10:4, line:13:4>     |       |-BinaryOperator 0x13f01e4a8 <line:11:4, col:10> '<dependent type>' contains-errors '='     |       | |-UnaryOperator 0x13f01e470 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow     |       | | `-ImplicitCastExpr 0x13f01e458 <col:5> '<dependent type>' contains-errors <LValueToRValue>     |       | |   `-RecoveryExpr 0x13f01e3a0 <col:5> '<dependent type>' contains-errors lvalue     |       | `-RecoveryExpr 0x13f01e488 <col:10> '<dependent type>' contains-errors lvalue     |       `-ReturnStmt 0x13f01e4e8 <line:12:4, col:11>     |         `-IntegerLiteral 0x13f01e4c8 <col:11> 'int' 0     `-ReturnStmt 0x13f01e590 <line:17:2, col:9>       `-IntegerLiteral 0x13f01e570 <col:9> 'int' 1 ","19321":"`-FunctionDecl 0x149826778  line:1:12 invalid io_send 'int (struct io_kiocb *, struct io_kiocb **, int)' static   |-ParmVarDecl 0x14980e248 <col:20, col:37> col:37 req 'struct io_kiocb *'   |-ParmVarDecl 0x14980e398 <col:42, col:60> col:60 nxt 'struct io_kiocb **'   |-ParmVarDecl 0x149826630 <line:2:6, col:11> col:11 invalid force_nonblock 'int'   `-CompoundStmt 0x1498268e0 <line:3:1, line:50:1>     `-ReturnStmt 0x1498268d0 <line:48:2, col:10>       `-UnaryOperator 0x1498268b8 <col:9, col:10> '<dependent type>' contains-errors prefix '-' cannot overflow         `-ImplicitCastExpr 0x1498268a0 <col:10> '<dependent type>' contains-errors <LValueToRValue>           `-RecoveryExpr 0x149826880 <col:10> '<dependent type>' contains-errors lvalue ","19862":"`-FunctionDecl 0x1451281c0  line:1:8 invalid SendMessage 'void (int)'   |-ParmVarDecl 0x1451280f0 <col:20, <invalid sloc>> col:22 invalid 'int'   `-CompoundStmt 0x1451284e0 <line:5:52, line:15:3>     |-IfStmt 0x145128348 <line:6:5, line:9:5>     | |-UnaryOperator 0x1451282f0 <line:6:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1451282d8 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x1451282b8 <col:10> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x145128330 <col:36, line:9:5>     |   `-ReturnStmt 0x145128320 <line:8:7>     |-RecoveryExpr 0x145128398 <line:10:5> '<dependent type>' contains-errors lvalue     `-IfStmt 0x145128478 <line:11:5, line:13:5>       |-UnaryOperator 0x145128438 <line:11:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow       | `-ImplicitCastExpr 0x145128420 <col:10> '<dependent type>' contains-errors <LValueToRValue>       |   `-RecoveryExpr 0x145128400 <col:10> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x145128460 <col:68, line:13:5>         `-ReturnStmt 0x145128450 <line:12:7> ","19371":"`-FunctionDecl 0x126928288  line:1:5 invalid dtls1_read_failed 'int (int *, int)'   |-ParmVarDecl 0x126928128 <col:23, col:28> col:28 invalid s 'int *'   |-ParmVarDecl 0x1269281a8 <col:31, col:35> col:35 used code 'int'   `-CompoundStmt 0x1269431d8 <line:2:2, line:37:2>     |-IfStmt 0x126928740 <line:3:2, line:7:3>     | |-BinaryOperator 0x126928398 <line:3:7, col:14> 'int' '>'     | | |-ImplicitCastExpr 0x126928380 <col:7> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x126928340 <col:7> 'int' lvalue ParmVar 0x1269281a8 'code' 'int'     | | `-IntegerLiteral 0x126928360 <col:14> 'int' 0     | `-CompoundStmt 0x126928720 <line:4:3, line:7:3>     |   |-CallExpr 0x1269286b0 <line:5:3, col:45> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x126928510 <col:3> 'int ()' Function 0x126928458 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x126928690 <col:12> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x126928590 <col:20> 'char[4]' lvalue \"STR\"     |   | |-StringLiteral 0x1269285f0 <<scratch space>:2:1> 'char[37]' lvalue \"dataset_diviso_filec\/func6754_vuln.c\"     |   | `-IntegerLiteral 0x126928630 <line:3:1> 'int' 5     |   `-ReturnStmt 0x126928710 <dataset_diviso_filec\/func6754_vuln.c:6:3, col:10>     |     `-IntegerLiteral 0x1269286f0 <col:10> 'int' 1     |-IfStmt 0x126942b98 <line:9:2, line:13:3>     | |-UnaryOperator 0x126942b20 <line:9:6, col:31> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x126942af8 <col:7, col:31> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x126942ab8 <col:7> 'int ()' Function 0x126942a00 'dtls1_is_timer_expired' 'int ()'     | |   `-RecoveryExpr 0x126942ad8 <col:30> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126942b80 <line:10:3, line:13:3>     |   `-ReturnStmt 0x126942b70 <line:12:3, col:10>     |     `-ImplicitCastExpr 0x126942b58 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x126942b38 <col:10> 'int' lvalue ParmVar 0x1269281a8 'code' 'int'     |-IfStmt 0x126943060 <line:15:2, line:19:3>     | |-UnaryOperator 0x126942d00 <line:15:7, col:22> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x126942cd8 <col:9, col:22> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x126942c98 <col:9> 'int ()' Function 0x126942be0 'SSL_in_init' 'int ()'     | |   `-RecoveryExpr 0x126942cb8 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x126943040 <line:16:3, line:19:3>     |   |-CallExpr 0x126942fc8 <line:17:3, col:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x126942df8 <col:3> 'int ()' Function 0x126942d40 'BIO_set_flags' 'int ()'     |   | |-CallExpr 0x126942f38 <col:17, col:31> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x126942ef8 <col:17> 'int ()' Function 0x126942e40 'SSL_get_rbio' 'int ()'     |   | | `-RecoveryExpr 0x126942f18 <col:30> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x126942fa8 <col:34> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x126943030 <line:18:3, col:10>     |     `-ImplicitCastExpr 0x126943018 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x126942ff8 <col:10> 'int' lvalue ParmVar 0x1269281a8 'code' 'int'     `-ReturnStmt 0x1269431c8 <line:36:2, col:31>       `-CallExpr 0x1269431a0 <col:9, col:31> '<dependent type>' contains-errors         |-DeclRefExpr 0x126943160 <col:9> 'int ()' Function 0x1269430a8 'dtls1_handle_timeout' 'int ()'         `-RecoveryExpr 0x126943180 <col:30> '<dependent type>' contains-errors lvalue ","19436":"`-FunctionDecl 0x142826a88  line:1:30 br_multicast_new_group 'struct net_bridge_mdb_entry *(struct net_bridge *, struct net_bridge_port *, struct br_ip *)'   |-ParmVarDecl 0x14280e2e8 <col:53, col:72> col:72 used br 'struct net_bridge *'   |-ParmVarDecl 0x1428266c8 <line:2:2, col:26> col:26 used port 'struct net_bridge_port *'   |-ParmVarDecl 0x142826898 <col:32, col:46> col:46 used group 'struct br_ip *'   `-CompoundStmt 0x14282afb0 <line:3:1, line:47:1>     |-DeclStmt 0x142826d78 <line:4:2, col:35>     | |-RecordDecl 0x142826b90 <col:2, col:9> col:9 struct net_bridge_mdb_htable     | `-VarDecl 0x142826cf8 <col:2, col:32> col:32 used mdb 'struct net_bridge_mdb_htable *'     |-DeclStmt 0x142826e80 <line:5:2, col:33>     | `-VarDecl 0x142826e18 <col:2, col:31> col:31 used mp 'struct net_bridge_mdb_entry *'     |-DeclStmt 0x142826f18 <line:6:2, col:10>     | `-VarDecl 0x142826eb0 <col:2, col:6> col:6 used hash 'int'     |-DeclStmt 0x142826fb0 <line:7:2, col:9>     | `-VarDecl 0x142826f48 <col:2, col:6> col:6 used err 'int'     |-BinaryOperator 0x1428271e0 <line:9:2, col:44> 'struct net_bridge_mdb_htable *' contains-errors '='     | |-DeclRefExpr 0x142826fc8 <col:2> 'struct net_bridge_mdb_htable *' lvalue Var 0x142826cf8 'mdb' 'struct net_bridge_mdb_htable *'     | `-CallExpr 0x1428271b0 <col:8, col:44> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x142827110 <col:8> 'int ()' Function 0x142827058 'rcu_dereference_protected' 'int ()'     |   |-RecoveryExpr 0x142827168 <col:34, col:38> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x142827130 <col:34> 'struct net_bridge *' lvalue ParmVar 0x14280e2e8 'br' 'struct net_bridge *'     |   `-IntegerLiteral 0x142827190 <col:43> 'int' 1     |-IfStmt 0x142828fb0 <line:10:2, line:15:2>     | |-UnaryOperator 0x142827238 <line:10:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x142827220 <col:7> 'struct net_bridge_mdb_htable *' <LValueToRValue>     | |   `-DeclRefExpr 0x142827200 <col:7> 'struct net_bridge_mdb_htable *' lvalue Var 0x142826cf8 'mdb' 'struct net_bridge_mdb_htable *'     | `-CompoundStmt 0x142828f88 <col:12, line:15:2>     |   |-BinaryOperator 0x1428274d0 <line:11:3, col:48> 'int' contains-errors '='     |   | |-DeclRefExpr 0x142827250 <col:3> 'int' lvalue Var 0x142826f48 'err' 'int'     |   | `-CallExpr 0x142827498 <col:9, col:48> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x142827350 <col:9> 'int ()' Function 0x142827298 'br_mdb_rehash' 'int ()'     |   |   |-UnaryOperator 0x1428273d0 <col:23, col:28> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   | `-RecoveryExpr 0x1428273a8 <col:24, col:28> '<dependent type>' contains-errors lvalue     |   |   |   `-DeclRefExpr 0x142827370 <col:24> 'struct net_bridge *' lvalue ParmVar 0x14280e2e8 'br' 'struct net_bridge *'     |   |   |-RecoveryExpr 0x142827478 <col:33> '<dependent type>' contains-errors lvalue     |   |   `-IntegerLiteral 0x142827400 <col:47> 'int' 0     |   |-IfStmt 0x142828f00 <line:12:3, line:13:22>     |   | |-ImplicitCastExpr 0x142827510 <line:12:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x1428274f0 <col:7> 'int' lvalue Var 0x142826f48 'err' 'int'     |   | `-ReturnStmt 0x142828ef0 <line:13:4, col:22>     |   |   `-ImplicitCastExpr 0x142828ed8 <col:11, col:22> 'struct net_bridge_mdb_entry *' <IntegralToPointer>     |   |     `-CallExpr 0x142828e98 <col:11, col:22> 'int'     |   |       |-ImplicitCastExpr 0x142828e80 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |       | `-DeclRefExpr 0x142828e10 <col:11> 'int ()' Function 0x142827550 'ERR_PTR' 'int ()'     |   |       `-ImplicitCastExpr 0x142828ec0 <col:19> 'int' <LValueToRValue>     |   |         `-DeclRefExpr 0x142828e30 <col:19> 'int' lvalue Var 0x142826f48 'err' 'int'     |   `-GotoStmt 0x142828f70 <line:14:3, col:8> 'rehash' 0x142828f20     |-BinaryOperator 0x1428291a8 <line:17:2, col:30> 'int' '='     | |-DeclRefExpr 0x142828fd0 <col:2> 'int' lvalue Var 0x142826eb0 'hash' 'int'     | `-CallExpr 0x142829148 <col:9, col:30> 'int'     |   |-ImplicitCastExpr 0x142829130 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1428290d0 <col:9> 'int ()' Function 0x142829018 'br_ip_hash' 'int ()'     |   |-ImplicitCastExpr 0x142829178 <col:20> 'struct net_bridge_mdb_htable *' <LValueToRValue>     |   | `-DeclRefExpr 0x1428290f0 <col:20> 'struct net_bridge_mdb_htable *' lvalue Var 0x142826cf8 'mdb' 'struct net_bridge_mdb_htable *'     |   `-ImplicitCastExpr 0x142829190 <col:25> 'struct br_ip *' <LValueToRValue>     |     `-DeclRefExpr 0x142829110 <col:25> 'struct br_ip *' lvalue ParmVar 0x142826898 'group' 'struct br_ip *'     |-BinaryOperator 0x142829438 <line:18:2, col:51> 'struct net_bridge_mdb_entry *' '='     | |-DeclRefExpr 0x1428291c8 <col:2> 'struct net_bridge_mdb_entry *' lvalue Var 0x142826e18 'mp' 'struct net_bridge_mdb_entry *'     | `-ImplicitCastExpr 0x142829420 <col:7, col:51> 'struct net_bridge_mdb_entry *' <IntegralToPointer>     |   `-CallExpr 0x142829380 <col:7, col:51> 'int'     |     |-ImplicitCastExpr 0x142829368 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1428292c8 <col:7> 'int ()' Function 0x142829210 'br_multicast_get_group' 'int ()'     |     |-ImplicitCastExpr 0x1428293c0 <col:30> 'struct net_bridge *' <LValueToRValue>     |     | `-DeclRefExpr 0x1428292e8 <col:30> 'struct net_bridge *' lvalue ParmVar 0x14280e2e8 'br' 'struct net_bridge *'     |     |-ImplicitCastExpr 0x1428293d8 <col:34> 'struct net_bridge_port *' <LValueToRValue>     |     | `-DeclRefExpr 0x142829308 <col:34> 'struct net_bridge_port *' lvalue ParmVar 0x1428266c8 'port' 'struct net_bridge_port *'     |     |-ImplicitCastExpr 0x1428293f0 <col:40> 'struct br_ip *' <LValueToRValue>     |     | `-DeclRefExpr 0x142829328 <col:40> 'struct br_ip *' lvalue ParmVar 0x142826898 'group' 'struct br_ip *'     |     `-ImplicitCastExpr 0x142829408 <col:47> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x142829348 <col:47> 'int' lvalue Var 0x142826eb0 'hash' 'int'     |-SwitchStmt 0x1428295d0 <line:19:2, line:31:2>     | |-CallExpr 0x142829590 <line:19:10, col:20> 'int'     | | |-ImplicitCastExpr 0x142829578 <col:10> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x142829538 <col:10> 'int ()' Function 0x142829480 'PTR_ERR' 'int ()'     | | `-ImplicitCastExpr 0x1428295b8 <col:18> 'struct net_bridge_mdb_entry *' <LValueToRValue>     | |   `-DeclRefExpr 0x142829558 <col:18> 'struct net_bridge_mdb_entry *' lvalue Var 0x142826e18 'mp' 'struct net_bridge_mdb_entry *'     | `-CompoundStmt 0x142829980 <col:23, line:31:2>     |   |-CaseStmt 0x142829630 <line:20:2, line:21:3>     |   | |-ConstantExpr 0x142829618 <line:20:7> 'int'     |   | | `-IntegerLiteral 0x1428295f8 <col:7> 'int' 0     |   | `-BreakStmt 0x142829658 <line:21:3>     |   |-LabelStmt 0x1428297b8 <line:24:1, line:25:45> 'rehash'     |   | `-BinaryOperator 0x142829798 <col:3, col:45> 'struct net_bridge_mdb_htable *' contains-errors '='     |   |   |-DeclRefExpr 0x1428296a8 <col:3> 'struct net_bridge_mdb_htable *' lvalue Var 0x142826cf8 'mdb' 'struct net_bridge_mdb_htable *'     |   |   `-CallExpr 0x142829768 <col:9, col:45> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1428296c8 <col:9> 'int ()' Function 0x142827058 'rcu_dereference_protected' 'int ()'     |   |     |-RecoveryExpr 0x142829720 <col:35, col:39> '<dependent type>' contains-errors lvalue     |   |     | `-DeclRefExpr 0x1428296e8 <col:35> 'struct net_bridge *' lvalue ParmVar 0x14280e2e8 'br' 'struct net_bridge *'     |   |     `-IntegerLiteral 0x142829748 <col:44> 'int' 1     |   |-BinaryOperator 0x1428298d0 <line:26:3, col:31> 'int' '='     |   | |-DeclRefExpr 0x1428297d8 <col:3> 'int' lvalue Var 0x142826eb0 'hash' 'int'     |   | `-CallExpr 0x142829870 <col:10, col:31> 'int'     |   |   |-ImplicitCastExpr 0x142829858 <col:10> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x1428297f8 <col:10> 'int ()' Function 0x142829018 'br_ip_hash' 'int ()'     |   |   |-ImplicitCastExpr 0x1428298a0 <col:21> 'struct net_bridge_mdb_htable *' <LValueToRValue>     |   |   | `-DeclRefExpr 0x142829818 <col:21> 'struct net_bridge_mdb_htable *' lvalue Var 0x142826cf8 'mdb' 'struct net_bridge_mdb_htable *'     |   |   `-ImplicitCastExpr 0x1428298b8 <col:26> 'struct br_ip *' <LValueToRValue>     |   |     `-DeclRefExpr 0x142829838 <col:26> 'struct br_ip *' lvalue ParmVar 0x142826898 'group' 'struct br_ip *'     |   |-BreakStmt 0x1428298f0 <line:27:3>     |   `-DefaultStmt 0x142829960 <line:29:2, line:30:8>     |     `-GotoStmt 0x142829948 <col:3, col:8> 'out' 0x1428298f8     |-IfStmt 0x14282a810 <line:34:2, line:35:25>     | |-CallExpr 0x142829cc8 <line:34:6, col:18> 'int'     | | |-ImplicitCastExpr 0x142829cb0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x142829c40 <col:6> 'int ()' Function 0x142829b88 'unlikely' 'int ()'     | | `-UnaryOperator 0x142829c98 <col:15, col:16> 'int' prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x142829c80 <col:16> 'struct net_bridge_mdb_entry *' <LValueToRValue>     | |     `-DeclRefExpr 0x142829c60 <col:16> 'struct net_bridge_mdb_entry *' lvalue Var 0x142826e18 'mp' 'struct net_bridge_mdb_entry *'     | `-ReturnStmt 0x14282a800 <line:35:3, col:25>     |   `-CallExpr 0x142829dd0 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x142829cf0 <col:10> 'int ()' Function 0x142827550 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x142829db8 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x142829da0 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x142829d80 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14282a8b0 <line:37:2, col:11> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14282a868 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14282a830 <col:2> 'struct net_bridge_mdb_entry *' lvalue Var 0x142826e18 'mp' 'struct net_bridge_mdb_entry *'     | `-DeclRefExpr 0x14282a890 <col:11> 'struct net_bridge *' lvalue ParmVar 0x14280e2e8 'br' 'struct net_bridge *'     |-BinaryOperator 0x14282a980 <line:38:2, col:14> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x14282a908 <col:2, col:6> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x14282a8d0 <col:2> 'struct net_bridge_mdb_entry *' lvalue Var 0x142826e18 'mp' 'struct net_bridge_mdb_entry *'     | `-UnaryOperator 0x14282a968 <col:13, col:14> 'struct br_ip' lvalue prefix '*' cannot overflow     |   `-ImplicitCastExpr 0x14282a950 <col:14> 'struct br_ip *' <LValueToRValue>     |     `-DeclRefExpr 0x14282a930 <col:14> 'struct br_ip *' lvalue ParmVar 0x142826898 'group' 'struct br_ip *'     |-CallExpr 0x14282aea0 <line:42:2, col:60> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14282ac70 <col:2> 'int ()' Function 0x14282abb8 'hlist_add_head_rcu' 'int ()'     | |-UnaryOperator 0x14282ada0 <col:21, col:40> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-ArraySubscriptExpr 0x14282ad80 <col:22, col:40> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x14282ad50 <col:22, col:26> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x14282acc8 <col:22, col:26> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14282ac90 <col:22> 'struct net_bridge_mdb_entry *' lvalue Var 0x142826e18 'mp' 'struct net_bridge_mdb_entry *'     | |   `-ImplicitCastExpr 0x14282ad68 <col:32, col:37> '<dependent type>' contains-errors <LValueToRValue>     | |     `-RecoveryExpr 0x14282ad28 <col:32, col:37> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x14282acf0 <col:32> 'struct net_bridge_mdb_htable *' lvalue Var 0x142826cf8 'mdb' 'struct net_bridge_mdb_htable *'     | `-UnaryOperator 0x14282ae88 <col:43, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-ArraySubscriptExpr 0x14282ae68 <col:44, col:59> '<dependent type>' contains-errors lvalue     |     |-ImplicitCastExpr 0x14282ae38 <col:44, col:49> '<dependent type>' contains-errors <LValueToRValue>     |     | `-RecoveryExpr 0x14282adf0 <col:44, col:49> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x14282adb8 <col:44> 'struct net_bridge_mdb_htable *' lvalue Var 0x142826cf8 'mdb' 'struct net_bridge_mdb_htable *'     |     `-ImplicitCastExpr 0x14282ae50 <col:55> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14282ae18 <col:55> 'int' lvalue Var 0x142826eb0 'hash' 'int'     |-UnaryOperator 0x14282af30 <line:43:2, col:11> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x14282af08 <col:2, col:7> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x14282aed0 <col:2> 'struct net_bridge_mdb_htable *' lvalue Var 0x142826cf8 'mdb' 'struct net_bridge_mdb_htable *'     `-LabelStmt 0x14282af90 <line:45:1, line:46:9> 'out'       `-ReturnStmt 0x14282af80 <col:2, col:9>         `-ImplicitCastExpr 0x14282af68 <col:9> 'struct net_bridge_mdb_entry *' <LValueToRValue>           `-DeclRefExpr 0x14282af48 <col:9> 'struct net_bridge_mdb_entry *' lvalue Var 0x142826e18 'mp' 'struct net_bridge_mdb_entry *' ","19153":"`-FunctionDecl 0x12200de88  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x12200dd28 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x12200dda8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x12300a458 <col:64, line:36:1>     |-DeclStmt 0x12200e078 <line:2:3, col:72>     | `-VarDecl 0x12200df58 <col:3, col:9> col:9 used params 'int *' auto     |-CallExpr 0x123008e68 <line:5:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12200e2c0 <col:3> 'int ()' Function 0x12200e208 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x12200e2e0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x123008e20 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x12200e3e0 <col:30> 'int ()' Function 0x12200e328 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x123008e00 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x123008e48 <col:47> 'int' 2     |-CallExpr 0x123009048 <line:6:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123008ea0 <col:3> 'int ()' Function 0x12200e208 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x123008ec0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x123009000 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x123008fc0 <col:30> 'int ()' Function 0x123008f08 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x123008fe0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x123009028 <col:48> 'int' 1     |-DeclStmt 0x123009290 <line:8:3, col:70>     | `-VarDecl 0x123009098 <col:3, col:23> col:23 invalid input1 'const int *'     |-DeclStmt 0x1230093d8 <line:9:3, col:70>     | `-VarDecl 0x1230092c0 <col:3, col:23> col:23 invalid input2 'const int *'     |-CallExpr 0x123009720 <line:12:3, col:62> '<dependent type>' contains-errors     | |-DeclRefExpr 0x123009610 <col:3> 'int ()' Function 0x123009558 'TF_LITE_ENSURE_TYPES_EQ' 'int ()'     | |-RecoveryExpr 0x123009630 <col:27> '<dependent type>' contains-errors lvalue     | |-CXXDependentScopeMemberExpr 0x123009670 <col:36, col:44> '<dependent type>' contains-errors lvalue ->type     | | `-RecoveryExpr 0x123009650 <col:36> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x1230096d8 <col:50, col:58> '<dependent type>' contains-errors lvalue ->type     |   `-RecoveryExpr 0x1230096b8 <col:50> '<dependent type>' contains-errors lvalue     |-IfStmt 0x123009d98 <line:18:3, line:23:3> has_else     | |-RecoveryExpr 0x123009948 <line:18:7, col:13> '_Bool' contains-errors     | |-CompoundStmt 0x123009be8 <col:33, line:21:3>     | `-CompoundStmt 0x123009d88 <col:10, line:23:3>     `-IfStmt 0x12300a3b0 <line:25:3, line:33:3>       |-RecoveryExpr 0x123009dc8 <line:25:7, col:23> '_Bool' contains-errors       `-CompoundStmt 0x12300a398 <col:37, line:33:3>         `-DeclStmt 0x12300a260 <line:29:5, line:30:77>           `-VarDecl 0x12300a098 <line:29:5, col:18> col:18 used real_multiplier 'const double' ","19778":"`-FunctionDecl 0x13400e958  line:1:12 rd_build_device_space 'int (struct rd_dev *)' static   |-ParmVarDecl 0x13400e848 <col:34, col:49> col:49 used rd_dev 'struct rd_dev *'   `-CompoundStmt 0x13402f2a8 <line:2:1, line:75:1>     |-DeclStmt 0x13402b058 <line:6:2, col:34>     | |-RecordDecl 0x13402ae68 <col:2, col:9> col:9 struct rd_dev_sg_table     | `-VarDecl 0x13402afd8 <col:2, col:26> col:26 used sg_table 'struct rd_dev_sg_table *'     |-DeclStmt 0x13402b258 <line:7:2, col:17>     | |-RecordDecl 0x13402b070 <col:2, col:9> col:9 struct page     | `-VarDecl 0x13402b1d8 <col:2, col:15> col:15 used pg 'struct page *'     |-DeclStmt 0x13402b458 <line:8:2, col:24>     | |-RecordDecl 0x13402b270 <col:2, col:9> col:9 struct scatterlist     | `-VarDecl 0x13402b3d8 <col:2, col:22> col:22 used sg 'struct scatterlist *'     |-IfStmt 0x13402b7f8 <line:10:2, line:14:2>     | |-BinaryOperator 0x13402b4f0 <line:10:6, col:31> 'int' contains-errors '<='     | | |-RecoveryExpr 0x13402b4a8 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13402b470 <col:6> 'struct rd_dev *' lvalue ParmVar 0x13400e848 'rd_dev' 'struct rd_dev *'     | | `-IntegerLiteral 0x13402b4d0 <col:31> 'int' 0     | `-CompoundStmt 0x13402b7d8 <col:34, line:14:2>     |   |-CallExpr 0x13402b700 <line:11:3, line:12:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13402b620 <line:11:3> 'int ()' Function 0x13402b568 'pr_err' 'int ()'     |   | |-StringLiteral 0x13402b680 <col:10> 'char[4]' lvalue \"STR\"     |   | `-RecoveryExpr 0x13402b6d8 <line:12:4, col:12> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13402b6a0 <col:4> 'struct rd_dev *' lvalue ParmVar 0x13400e848 'rd_dev' 'struct rd_dev *'     |   `-ReturnStmt 0x13402b7c8 <line:13:3, col:11>     |     `-UnaryOperator 0x13402b7b0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x13402b798 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x13402b778 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x13402b920 <line:17:2, line:18:10>     | |-BinaryOperator 0x13402b8d0 <line:17:6, col:25> '<dependent type>' contains-errors '&'     | | |-RecoveryExpr 0x13402b850 <col:6, col:14> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13402b818 <col:6> 'struct rd_dev *' lvalue ParmVar 0x13400e848 'rd_dev' 'struct rd_dev *'     | | `-RecoveryExpr 0x13402b8b0 <col:25> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x13402b910 <line:18:3, col:10>     |   `-IntegerLiteral 0x13402b8f0 <col:10> 'int' 0     |-IfStmt 0x13402e630 <line:25:2, line:29:2>     | |-UnaryOperator 0x13402bc30 <line:25:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x13402bc18 <col:7> 'struct rd_dev_sg_table *' <LValueToRValue>     | |   `-DeclRefExpr 0x13402bbf8 <col:7> 'struct rd_dev_sg_table *' lvalue Var 0x13402afd8 'sg_table' 'struct rd_dev_sg_table *'     | `-CompoundStmt 0x13402e610 <col:17, line:29:2>     |   |-CallExpr 0x13402bd28 <line:26:3, line:27:9> 'int'     |   | |-ImplicitCastExpr 0x13402bd10 <line:26:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x13402bc48 <col:3> 'int ()' Function 0x13402b568 'pr_err' 'int ()'     |   | `-ImplicitCastExpr 0x13402bd50 <col:10, line:27:4> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x13402bcb0 <line:26:10, line:27:4> 'char[7]' lvalue \"STRSTR\"     |   `-ReturnStmt 0x13402e600 <line:28:3, col:11>     |     `-UnaryOperator 0x13402bde8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x13402bdd0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x13402bdb0 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x13402e6d0 <line:31:2, col:27> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x13402e688 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13402e650 <col:2> 'struct rd_dev *' lvalue ParmVar 0x13400e848 'rd_dev' 'struct rd_dev *'     | `-DeclRefExpr 0x13402e6b0 <col:27> 'struct rd_dev_sg_table *' lvalue Var 0x13402afd8 'sg_table' 'struct rd_dev_sg_table *'     |-WhileStmt 0x13402ef20 <line:34:2, line:67:2>     | |-RecoveryExpr 0x13402e750 <line:34:9> '_Bool' contains-errors     | `-CompoundStmt 0x13402ef08 <col:26, line:67:2>     |   `-IfStmt 0x13402e908 <line:40:3, line:44:3>     |     |-UnaryOperator 0x13402e838 <line:40:7, col:8> 'int' prefix '!' cannot overflow     |     | `-ImplicitCastExpr 0x13402e820 <col:8> 'struct scatterlist *' <LValueToRValue>     |     |   `-DeclRefExpr 0x13402e800 <col:8> 'struct scatterlist *' lvalue Var 0x13402b3d8 'sg' 'struct scatterlist *'     |     `-CompoundStmt 0x13402e8f0 <col:12, line:44:3>     |       `-CallExpr 0x13402e8b0 <line:41:4, line:42:10> 'int'     |         |-ImplicitCastExpr 0x13402e898 <line:41:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x13402e850 <col:4> 'int ()' Function 0x13402b568 'pr_err' 'int ()'     |         `-ImplicitCastExpr 0x13402e8d8 <col:11, line:42:5> 'char *' <ArrayToPointerDecay>     |           `-StringLiteral 0x13402e870 <line:41:11, line:42:5> 'char[7]' lvalue \"STRSTR\"     |-CallExpr 0x13402f230 <line:69:2, line:72:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13402f020 <line:69:2> 'int ()' Function 0x13402ef68 'pr_debug' 'int ()'     | |-StringLiteral 0x13402f040 <col:11, line:70:3> 'char[7]' lvalue \"STRSTR\"     | |-CXXDependentScopeMemberExpr 0x13402f0c8 <col:10, col:27> '<dependent type>' contains-errors lvalue ->rd_host_id     | | `-RecoveryExpr 0x13402f0a0 <col:10, col:18> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x13402f068 <col:10> 'struct rd_dev *' lvalue ParmVar 0x13400e848 'rd_dev' 'struct rd_dev *'     | |-RecoveryExpr 0x13402f148 <line:71:3, col:11> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13402f110 <col:3> 'struct rd_dev *' lvalue ParmVar 0x13400e848 'rd_dev' 'struct rd_dev *'     | |-RecoveryExpr 0x13402f1a8 <col:22, col:30> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x13402f170 <col:22> 'struct rd_dev *' lvalue ParmVar 0x13400e848 'rd_dev' 'struct rd_dev *'     | `-RecoveryExpr 0x13402f208 <line:72:3, col:11> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x13402f1d0 <col:3> 'struct rd_dev *' lvalue ParmVar 0x13400e848 'rd_dev' 'struct rd_dev *'     `-ReturnStmt 0x13402f298 <line:74:2, col:9>       `-IntegerLiteral 0x13402f278 <col:9> 'int' 0 ","19668":"`-FunctionDecl 0x15c8096f8  col:3 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x15c8097f8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x15c809860 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x15c8098c8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x15c8097a0 <<invalid sloc>> Implicit 882 ","19796":"`-FunctionDecl 0x12e0fe778  line:1:5 invalid ssh_scp_push_file 'int (int, const char *, int, int)'   |-ParmVarDecl 0x12e0fe4f0 <col:23, col:31> col:31 invalid scp 'int'   |-ParmVarDecl 0x12e0fe570 <col:36, col:48> col:48 used filename 'const char *'   |-ParmVarDecl 0x12e0fe5f0 <col:58, col:65> col:65 invalid size 'int'   |-ParmVarDecl 0x12e0fe670 <col:71, col:75> col:75 used mode 'int'   `-CompoundStmt 0x12e0fea38 <col:80, line:3:1> ","20057":"`-FunctionDecl 0x14d128750  line:1:13 addranges_w 'void (struct cstate *)' static   |-ParmVarDecl 0x14d128648 <col:25, col:40> col:40 used g 'struct cstate *'   `-CompoundStmt 0x14d140f00 <line:2:1, line:7:1>     |-CallExpr 0x14d140c28 <line:3:2, col:22> 'int'     | |-ImplicitCastExpr 0x14d140c10 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14d140b70 <col:2> 'int ()' Function 0x14d140ab8 'addrange' 'int ()'     | |-ImplicitCastExpr 0x14d140c60 <col:11> 'struct cstate *' <LValueToRValue>     | | `-DeclRefExpr 0x14d140b90 <col:11> 'struct cstate *' lvalue ParmVar 0x14d128648 'g' 'struct cstate *'     | |-CharacterLiteral 0x14d140bb0 <col:14> 'int' 48     | `-CharacterLiteral 0x14d140bc8 <col:19> 'int' 57     |-CallExpr 0x14d140d00 <line:4:2, col:22> 'int'     | |-ImplicitCastExpr 0x14d140ce8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14d140c78 <col:2> 'int ()' Function 0x14d140ab8 'addrange' 'int ()'     | |-ImplicitCastExpr 0x14d140d38 <col:11> 'struct cstate *' <LValueToRValue>     | | `-DeclRefExpr 0x14d140c98 <col:11> 'struct cstate *' lvalue ParmVar 0x14d128648 'g' 'struct cstate *'     | |-CharacterLiteral 0x14d140cb8 <col:14> 'int' 65     | `-CharacterLiteral 0x14d140cd0 <col:19> 'int' 90     |-CallExpr 0x14d140dd8 <line:5:2, col:22> 'int'     | |-ImplicitCastExpr 0x14d140dc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14d140d50 <col:2> 'int ()' Function 0x14d140ab8 'addrange' 'int ()'     | |-ImplicitCastExpr 0x14d140e10 <col:11> 'struct cstate *' <LValueToRValue>     | | `-DeclRefExpr 0x14d140d70 <col:11> 'struct cstate *' lvalue ParmVar 0x14d128648 'g' 'struct cstate *'     | |-CharacterLiteral 0x14d140d90 <col:14> 'int' 95     | `-CharacterLiteral 0x14d140da8 <col:19> 'int' 95     `-CallExpr 0x14d140eb0 <line:6:2, col:22> 'int'       |-ImplicitCastExpr 0x14d140e98 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14d140e28 <col:2> 'int ()' Function 0x14d140ab8 'addrange' 'int ()'       |-ImplicitCastExpr 0x14d140ee8 <col:11> 'struct cstate *' <LValueToRValue>       | `-DeclRefExpr 0x14d140e48 <col:11> 'struct cstate *' lvalue ParmVar 0x14d128648 'g' 'struct cstate *'       |-CharacterLiteral 0x14d140e68 <col:14> 'int' 97       `-CharacterLiteral 0x14d140e80 <col:19> 'int' 122 ","19209":"`-FunctionDecl 0x12701ee78  line:1:14 invalid php_pcre_replace 'int *(char *, int, char *, int, int *, int, int *, int, int *)'   |-ParmVarDecl 0x12701e8f0 <col:31, col:37> col:37 used regex 'char *'   |-ParmVarDecl 0x12701e970 <col:46, col:50> col:50 used regex_len 'int'   |-ParmVarDecl 0x12701e9f0 <line:2:10, col:16> col:16 used subject 'char *'   |-ParmVarDecl 0x12701ea70 <col:25, col:29> col:29 used subject_len 'int'   |-ParmVarDecl 0x12701eb28 <line:3:10, col:16> col:16 invalid replace_val 'int *'   |-ParmVarDecl 0x12701eba8 <col:29, col:33> col:33 used is_callable_replace 'int'   |-ParmVarDecl 0x12701ec28 <line:4:10, col:15> col:15 used result_len 'int *'   |-ParmVarDecl 0x12701eca8 <col:27, col:31> col:31 used limit 'int'   |-ParmVarDecl 0x12701ed28 <col:38, col:43> col:43 used replace_count 'int *'   `-CompoundStmt 0x12704c220 <line:5:1, line:15:1>     `-IfStmt 0x12704c008 <line:9:2, line:11:2>       |-RecoveryExpr 0x12704bf88 <line:9:6, col:75> '_Bool' contains-errors       `-CompoundStmt 0x12704bff0 <col:81, line:11:2>         `-ReturnStmt 0x12704bfe0 <line:10:3, col:10>           `-RecoveryExpr 0x12704bfc0 <col:10> '<dependent type>' contains-errors lvalue ","19245":"`-FunctionDecl 0x121928318  line:1:13 invalid check_fast_forward_char_pair_simd 'int (int *, int *, int)' static   |-ParmVarDecl 0x121928128 <col:47, col:64> col:64 invalid common 'int *'   |-ParmVarDecl 0x1219281a8 <col:72, col:96> col:96 invalid chars 'int *'   |-ParmVarDecl 0x121928228 <col:103, col:107> col:107 used max 'int'   `-CompoundStmt 0x1219424c8 <line:2:1, line:44:1>     `-ForStmt 0x121942230 <line:7:3, line:37:5>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x121928500 <line:7:21, col:26> 'int' contains-errors '>='       | |-RecoveryExpr 0x1219284e0 <col:21> '<dependent type>' contains-errors lvalue       | `-IntegerLiteral 0x1219284a0 <col:26> 'int' 1       |-UnaryOperator 0x121928570 <col:29, col:30> '<dependent type>' contains-errors postfix '--' cannot overflow       | `-RecoveryExpr 0x121928550 <col:29> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x121942218 <line:8:5, line:37:5>         `-IfStmt 0x1219421f8 <line:9:5, line:36:7>           |-RecoveryExpr 0x1219285e0 <line:9:9, col:31> '_Bool' contains-errors           `-CompoundStmt 0x1219421e0 <line:10:7, line:36:7>             `-WhileStmt 0x1219421c0 <line:19:7, line:35:9>               |-RecoveryExpr 0x121942020 <line:19:14, col:18> '_Bool' contains-errors               `-CompoundStmt 0x1219421a8 <line:20:9, line:35:9>                 `-IfStmt 0x121942188 <line:22:9, line:33:11>                   |-RecoveryExpr 0x121942080 <line:22:13, col:43> '_Bool' contains-errors                   `-CompoundStmt 0x121942170 <line:23:11, line:33:11>                     `-IfStmt 0x121942150 <line:27:11, line:32:13>                       |-RecoveryExpr 0x121942120 <line:27:15, col:57> '_Bool' contains-errors                       `-CompoundStmt 0x121942140 <line:28:13, line:32:13> ","19253":"`-FunctionDecl 0x15000de80  line:1:13 invalid esp_pdma_write 'void (int *, int)' static   |-ParmVarDecl 0x15000dd28 <col:28, col:38> col:38 invalid s 'int *'   |-ParmVarDecl 0x15000dda8 <col:41, col:49> col:49 invalid val 'int'   `-CompoundStmt 0x158122800 <line:2:1, line:17:1>     |-IfStmt 0x15000dff8 <line:5:5, line:7:5>     | |-BinaryOperator 0x15000dfb0 <line:5:9, col:19> 'int' contains-errors '=='     | | |-RecoveryExpr 0x15000df90 <col:9> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x15000df50 <col:19> 'int' 0     | `-CompoundStmt 0x15000dfe0 <col:22, line:7:5>     |   `-ReturnStmt 0x15000dfd0 <line:6:9>     |-IfStmt 0x158122618 <line:9:5, line:13:5> has_else     | |-CXXDependentScopeMemberExpr 0x15000e038 <line:9:9, col:12> '<dependent type>' contains-errors lvalue ->do_cmd     | | `-RecoveryExpr 0x15000e018 <col:9> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x15000e270 <col:20, line:11:5>     | | `-CallExpr 0x15000e240 <line:10:9, col:32> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x15000e1e0 <col:9> 'int ()' Function 0x15000e128 'esp_cmdfifo_push' 'int ()'     | |   |-RecoveryExpr 0x15000e200 <col:26> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x15000e220 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x158122600 <line:11:12, line:13:5>     |   `-CallExpr 0x15000e3c8 <line:12:9, col:29> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15000e368 <col:9> 'int ()' Function 0x15000e2b0 'esp_fifo_push' 'int ()'     |     |-RecoveryExpr 0x15000e388 <col:23> '<dependent type>' contains-errors lvalue     |     `-RecoveryExpr 0x15000e3a8 <col:26> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1581227d0 <line:16:5, col:25> '<dependent type>' contains-errors       |-DeclRefExpr 0x158122728 <col:5> 'int ()' Function 0x158122670 'esp_set_tc' 'int ()'       |-RecoveryExpr 0x158122748 <col:16> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1581227b0 <col:19> '<dependent type>' contains-errors lvalue ","19580":"`-FunctionDecl 0x13b827400  line:1:13 invalid hidpp_ff_set_autocenter 'void (struct input_dev *, int)' static   |-ParmVarDecl 0x13b80e248 <col:37, col:55> col:55 used dev 'struct input_dev *'   |-ParmVarDecl 0x13b80e2e0 <col:60, col:64> col:64 invalid magnitude 'int'   `-CompoundStmt 0x13b828148 <line:2:1, line:21:1>     |-DeclStmt 0x13b827750 <line:3:2, col:55>     | |-RecordDecl 0x13b8274b8 <col:2, col:9> col:9 struct hidpp_ff_private_data     | `-VarDecl 0x13b827628 <col:2, col:48> col:32 used data 'struct hidpp_ff_private_data *' cinit     |   `-CXXDependentScopeMemberExpr 0x13b8276f0 <col:39, col:48> '<dependent type>' contains-errors lvalue ->private     |     `-RecoveryExpr 0x13b8276c8 <col:39, col:44> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13b827690 <col:39> 'struct input_dev *' lvalue ParmVar 0x13b80e248 'dev' 'struct input_dev *'     `-CallExpr 0x13b827960 <line:6:2, col:26> '<dependent type>' contains-errors       |-DeclRefExpr 0x13b8278c0 <col:2> 'int ()' Function 0x13b827808 'dbg_hid' 'int ()'       |-StringLiteral 0x13b827920 <col:10> 'char[4]' lvalue \"STR\"       `-RecoveryExpr 0x13b827940 <col:17> '<dependent type>' contains-errors lvalue ","19207":"`-FunctionDecl 0x133128318  line:1:8 invalid get_date 'int (int *, int *, int)'   |-ParmVarDecl 0x133128128 <col:17, col:22> col:22 invalid thd 'int *'   |-ParmVarDecl 0x1331281a8 <col:27, col:39> col:39 invalid ltime 'int *'   |-ParmVarDecl 0x133128228 <col:46, col:58> col:58 invalid fuzzydate 'int'   `-CompoundStmt 0x1331285f8 <line:2:3, col:57>     `-ReturnStmt 0x1331285e8 <col:5, col:54>       `-CallExpr 0x1331285b0 <col:12, col:54> '<dependent type>' contains-errors         |-DeclRefExpr 0x133128530 <col:12> 'int ()' Function 0x133128478 'get_date_from_string' 'int ()'         |-RecoveryExpr 0x133128550 <col:33> '<dependent type>' contains-errors lvalue         |-RecoveryExpr 0x133128570 <col:38> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x133128590 <col:45> '<dependent type>' contains-errors lvalue ","19164":"`-FunctionDecl 0x140140e30  col:2 implicit used snprintf 'int (char *, unsigned long, const char *, ...)' extern   |-ParmVarDecl 0x140140f30 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x140140f98 <<invalid sloc>> <invalid sloc> 'unsigned long'   |-ParmVarDecl 0x140141000 <<invalid sloc>> <invalid sloc> 'const char *'   |-BuiltinAttr 0x140140ed8 <<invalid sloc>> Implicit 905   `-FormatAttr 0x140141080 <col:2> Implicit printf 3 4 ","19460":"`-FunctionDecl 0x14200de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x14200dd58 <col:8> col:8 GrpcHealthCheckerImplTest 'int'   |-ParmVarDecl 0x14200dcd8 <col:35> col:35 SuccessStartFailedFailFirst 'int'   `-CompoundStmt 0x141925170 <col:64, line:45:1>     |-CallExpr 0x14200e0c8 <line:2:3, col:11> 'int'     | `-ImplicitCastExpr 0x14200e0b0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14200e060 <col:3> 'int ()' Function 0x14200dfa8 'setupHC' 'int ()'     |-CallExpr 0x14200e2d0 <line:10:3, col:23> 'int'     | `-ImplicitCastExpr 0x14200e2b8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x14200e298 <col:3> 'int ()' Function 0x14200e1e0 'expectSessionCreate' 'int ()'     |-CallExpr 0x141924438 <line:11:3, col:27> 'int'     | |-ImplicitCastExpr 0x141924420 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14200e3d0 <col:3> 'int ()' Function 0x14200e318 'expectHealthcheckStart' 'int ()'     | `-IntegerLiteral 0x141924400 <col:26> 'int' 0     |-CallExpr 0x141924598 <line:15:3, col:26> 'int'     | |-ImplicitCastExpr 0x141924580 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x141924540 <col:3> 'int ()' Function 0x141924488 'expectHealthcheckStop' 'int ()'     | `-IntegerLiteral 0x141924560 <col:25> 'int' 0     |-CallExpr 0x141924d28 <line:27:3, col:27> 'int'     | |-ImplicitCastExpr 0x141924d10 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x141924cd0 <col:3> 'int ()' Function 0x14200e318 'expectHealthcheckStart' 'int ()'     | `-IntegerLiteral 0x141924cf0 <col:26> 'int' 0     |-CallExpr 0x141924dc8 <line:30:3, col:26> 'int'     | |-ImplicitCastExpr 0x141924db0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x141924d70 <col:3> 'int ()' Function 0x141924488 'expectHealthcheckStop' 'int ()'     | `-IntegerLiteral 0x141924d90 <col:25> 'int' 0     |-CallExpr 0x141924ee8 <line:37:3, col:27> 'int'     | |-ImplicitCastExpr 0x141924ed0 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x141924e90 <col:3> 'int ()' Function 0x14200e318 'expectHealthcheckStart' 'int ()'     | `-IntegerLiteral 0x141924eb0 <col:26> 'int' 0     `-CallExpr 0x141924f88 <line:40:3, col:26> 'int'       |-ImplicitCastExpr 0x141924f70 <col:3> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x141924f30 <col:3> 'int ()' Function 0x141924488 'expectHealthcheckStop' 'int ()'       `-IntegerLiteral 0x141924f50 <col:25> 'int' 0 ","19519":"`-FunctionDecl 0x12400dfa8  line:1:1 invalid virSecuritySELinuxRestoreHostdevLabel 'int (int *, int *, int *, const char *)'   |-ParmVarDecl 0x12400dd28 <col:39, col:59> col:59 invalid mgr 'int *'   |-ParmVarDecl 0x12400dda8 <line:2:39, col:53> col:53 invalid def 'int *'   |-ParmVarDecl 0x12400de28 <line:3:39, col:60> col:60 invalid dev 'int *'   |-ParmVarDecl 0x12400dea8 <line:4:39, col:51> col:51 used vroot 'const char *'   `-CompoundStmt 0x124027988 <line:6:1, line:23:1>     |-IfStmt 0x1240274c8 <line:10:5, line:11:16>     | |-BinaryOperator 0x124027478 <line:10:9, col:29> 'int' contains-errors '||'     | | |-UnaryOperator 0x12400e398 <col:9, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | `-ImplicitCastExpr 0x12400e380 <col:10> '<dependent type>' contains-errors <LValueToRValue>     | | |   `-RecoveryExpr 0x12400e360 <col:10> '<dependent type>' contains-errors lvalue     | | `-UnaryOperator 0x124027460 <col:20, col:29> '<dependent type>' contains-errors prefix '!' cannot overflow     | |   `-ImplicitCastExpr 0x124027448 <col:21, col:29> '<dependent type>' contains-errors <LValueToRValue>     | |     `-CXXDependentScopeMemberExpr 0x124027400 <col:21, col:29> '<dependent type>' contains-errors lvalue ->relabel     | |       `-RecoveryExpr 0x12400e3b0 <col:21> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1240274b8 <line:11:9, col:16>     |   `-IntegerLiteral 0x124027498 <col:16> 'int' 0     `-SwitchStmt 0x124027568 <line:13:5, line:22:5>       |-ImplicitCastExpr 0x124027550 <line:13:13, col:18> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x124027508 <col:13, col:18> '<dependent type>' contains-errors lvalue ->mode       |   `-RecoveryExpr 0x1240274e8 <col:13> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x124027960 <col:24, line:22:5>         |-ReturnStmt 0x124027740 <line:15:9, col:75>         | `-CallExpr 0x124027708 <col:16, col:75> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x124027688 <col:16> 'int ()' Function 0x1240275d0 'virSecuritySELinuxRestoreHostdevSubsysLabel' 'int ()'         |   |-RecoveryExpr 0x1240276a8 <col:60> '<dependent type>' contains-errors lvalue         |   |-RecoveryExpr 0x1240276c8 <col:65> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1240276e8 <col:70> 'const char *' lvalue ParmVar 0x12400dea8 'vroot' 'const char *'         |-ReturnStmt 0x124027900 <line:18:9, col:73>         | `-CallExpr 0x1240278c8 <col:16, col:73> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x124027848 <col:16> 'int ()' Function 0x124027790 'virSecuritySELinuxRestoreHostdevCapsLabel' 'int ()'         |   |-RecoveryExpr 0x124027868 <col:58> '<dependent type>' contains-errors lvalue         |   |-RecoveryExpr 0x124027888 <col:63> '<dependent type>' contains-errors lvalue         |   `-DeclRefExpr 0x1240278a8 <col:68> 'const char *' lvalue ParmVar 0x12400dea8 'vroot' 'const char *'         `-DefaultStmt 0x124027940 <line:20:5, line:21:16>           `-ReturnStmt 0x124027930 <col:9, col:16>             `-IntegerLiteral 0x124027910 <col:16> 'int' 0 ","20165":"`-FunctionDecl 0x15180ddf8  line:1:5 invalid hashtable_init 'int (int *)'   |-ParmVarDecl 0x15180dd28 <col:20, col:33> col:33 referenced invalid hashtable 'int *'   `-CompoundStmt 0x151827aa8 <line:2:1, line:20:1>     |-UnaryExprOrTypeTraitExpr 0x15180df00 <line:3:5, col:12> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x15180dee0 <col:12> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15180dfd0 <line:5:5, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15180df68 <col:5, col:16> '<dependent type>' contains-errors lvalue ->size     | | `-RecoveryExpr 0x15180df40 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15180df20 <col:5> 'int *' lvalue ParmVar 0x15180dd28 'hashtable' 'int *'     | `-IntegerLiteral 0x15180dfb0 <col:23> 'int' 0     |-BinaryOperator 0x15180e0a0 <line:6:5, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x15180e038 <col:5, col:16> '<dependent type>' contains-errors lvalue ->num_buckets     | | `-RecoveryExpr 0x15180e010 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x15180dff0 <col:5> 'int *' lvalue ParmVar 0x15180dd28 'hashtable' 'int *'     | `-IntegerLiteral 0x15180e080 <col:30> 'int' 0     |-IfStmt 0x151827520 <line:8:5, line:9:17>     | |-UnaryOperator 0x1518274c0 <line:8:8, col:20> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1518274a8 <col:9, col:20> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x151827460 <col:9, col:20> '<dependent type>' contains-errors lvalue ->buckets     | |     `-RecoveryExpr 0x151827440 <col:9> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x151827510 <line:9:9, col:17>     |   `-UnaryOperator 0x1518274f8 <col:16, col:17> 'int' prefix '-'     |     `-IntegerLiteral 0x1518274d8 <col:17> 'int' 1     |-CallExpr 0x1518276c0 <line:11:5, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x151827620 <col:5> 'int ()' Function 0x151827568 'list_init' 'int ()'     | `-UnaryOperator 0x1518276a8 <col:15, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x151827660 <col:16, col:27> '<dependent type>' contains-errors lvalue ->list     |     `-RecoveryExpr 0x151827640 <col:16> '<dependent type>' contains-errors lvalue     |-ForStmt 0x151827a40 <line:13:5, line:17:5>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x151827800 <line:13:16, col:41> 'int' contains-errors '<'     | | |-RecoveryExpr 0x1518277e0 <col:16> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x151827798 <col:20, col:41> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x151827758 <col:20> 'int ()' Function 0x15180e2f8 'num_buckets' 'int ()'     | |   `-RecoveryExpr 0x151827778 <col:32> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x151827870 <col:44, col:45> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x151827850 <col:44> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151827a30 <line:14:5, line:17:5>     `-ReturnStmt 0x151827a98 <line:19:5, col:12>       `-IntegerLiteral 0x151827a78 <col:12> 'int' 0 ","20044":"`-FunctionDecl 0x125140a00  line:1:5 __cil_build_ast_last_child_helper 'int (struct cil_tree_node *, void *)'   |-ParmVarDecl 0x125128648 <col:39, col:61> col:61 used parse_current 'struct cil_tree_node *'   |-ParmVarDecl 0x1251286c8 <col:76, col:82> col:82 used extra_args 'void *'   `-CompoundStmt 0x125141a00 <line:2:1, line:36:1>     |-DeclStmt 0x125140d38 <line:3:2, col:42>     | |-RecordDecl 0x125140b00 <col:2, col:9> col:9 struct cil_args_build     | `-VarDecl 0x125140c68 <col:2, col:32> col:25 used args 'struct cil_args_build *' cinit     |   `-ImplicitCastExpr 0x125140d08 <col:32> 'struct cil_args_build *' <BitCast>     |     `-ImplicitCastExpr 0x125140cf0 <col:32> 'void *' <LValueToRValue>     |       `-DeclRefExpr 0x125140cd0 <col:32> 'void *' lvalue ParmVar 0x1251286c8 'extra_args' 'void *'     |-DeclStmt 0x125140ea0 <line:4:2, col:39>     | `-VarDecl 0x125140dd8 <col:2, col:36> col:24 used ast 'struct cil_tree_node *' cinit     |   `-RecoveryExpr 0x125140e78 <col:30, col:36> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x125140e40 <col:30> 'struct cil_args_build *' lvalue Var 0x125140c68 'args' 'struct cil_args_build *'     |-IfStmt 0x125141008 <line:6:2, line:8:2>     | |-BinaryOperator 0x125140f88 <line:6:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x125140ef0 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x125140eb8 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x125140dd8 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x125140f68 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x125140ff0 <col:31, line:8:2>     |   `-ReturnStmt 0x125140fe0 <line:7:3, col:10>     |     `-RecoveryExpr 0x125140fc0 <col:10> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1251410e8 <line:10:2, col:19> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x125141060 <col:2, col:8> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x125141028 <col:2> 'struct cil_args_build *' lvalue Var 0x125140c68 'args' 'struct cil_args_build *'     | `-RecoveryExpr 0x1251410c0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x125141088 <col:14> 'struct cil_tree_node *' contains-errors lvalue Var 0x125140dd8 'ast' 'struct cil_tree_node *'     |-IfStmt 0x1251412d0 <line:12:2, line:14:2>     | |-BinaryOperator 0x1251411c0 <line:12:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x125141140 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x125141108 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x125140dd8 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x1251411a0 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1251412b8 <col:36, line:14:2>     |   `-BinaryOperator 0x125141298 <line:13:3, col:17> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x125141218 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1251411e0 <col:3> 'struct cil_args_build *' lvalue Var 0x125140c68 'args' 'struct cil_args_build *'     |     `-RecoveryExpr 0x125141278 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1251414b8 <line:16:2, line:18:2>     | |-BinaryOperator 0x1251413a8 <line:16:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x125141328 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1251412f0 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x125140dd8 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x125141388 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1251414a0 <col:29, line:18:2>     |   `-BinaryOperator 0x125141480 <line:17:3, col:14> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x125141400 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1251413c8 <col:3> 'struct cil_args_build *' lvalue Var 0x125140c68 'args' 'struct cil_args_build *'     |     `-RecoveryExpr 0x125141460 <col:14> '<dependent type>' contains-errors lvalue     |-IfStmt 0x1251416a0 <line:20:2, line:22:2>     | |-BinaryOperator 0x125141590 <line:20:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x125141510 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1251414d8 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x125140dd8 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x125141570 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x125141688 <col:32, line:22:2>     |   `-BinaryOperator 0x125141668 <line:21:3, col:17> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x1251415e8 <col:3, col:9> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1251415b0 <col:3> 'struct cil_args_build *' lvalue Var 0x125140c68 'args' 'struct cil_args_build *'     |     `-RecoveryExpr 0x125141648 <col:17> '<dependent type>' contains-errors lvalue     |-IfStmt 0x125141808 <line:24:2, line:26:2>     | |-BinaryOperator 0x125141778 <line:24:6, col:21> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1251416f8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1251416c0 <col:6> 'struct cil_tree_node *' contains-errors lvalue Var 0x125140dd8 'ast' 'struct cil_tree_node *'     | | `-RecoveryExpr 0x125141758 <col:21> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x1251417f8 <col:36, line:26:2>     `-CallExpr 0x1251419c0 <line:33:2, col:49> '<dependent type>' contains-errors       |-DeclRefExpr 0x125141940 <col:2> 'int ()' Function 0x125141888 'cil_tree_children_destroy' 'int ()'       `-RecoveryExpr 0x125141998 <col:28, col:43> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x125141960 <col:28> 'struct cil_tree_node *' lvalue ParmVar 0x125128648 'parse_current' 'struct cil_tree_node *' ","19889":"`-FunctionDecl 0x15580ddf8  line:1:21 invalid unschedule_slow_tasks 'int (int *)' static   |-ParmVarDecl 0x15580dd28 <col:43, col:52> col:52 invalid m 'int *'   `-CompoundStmt 0x157008ca0 <line:2:1, line:22:1>     |-DeclStmt 0x15580df40 <line:4:5, col:10>     | `-VarDecl 0x15580ded8 <col:5, col:9> col:9 used n 'int'     |-BinaryOperator 0x15580e2f0 <line:7:5, col:75> 'int' contains-errors '='     | |-DeclRefExpr 0x15580df58 <col:5> 'int' lvalue Var 0x15580ded8 'n' 'int'     | `-ParenExpr 0x15580e2d0 <col:9, col:75> '<dependent type>' contains-errors     |   `-BinaryOperator 0x15580e2b0 <col:10, col:74> '<dependent type>' contains-errors '-'     |     |-BinaryOperator 0x15580e048 <col:10, col:31> '<dependent type>' contains-errors '-'     |     | |-CXXDependentScopeMemberExpr 0x15580df98 <col:10, col:13> '<dependent type>' contains-errors lvalue ->tasks_active     |     | | `-RecoveryExpr 0x15580df78 <col:10> '<dependent type>' contains-errors lvalue     |     | `-CXXDependentScopeMemberExpr 0x15580e000 <col:28, col:31> '<dependent type>' contains-errors lvalue ->limit_active     |     |   `-RecoveryExpr 0x15580dfe0 <col:28> '<dependent type>' contains-errors lvalue     |     `-CStyleCastExpr 0x15580e288 <col:46, col:74> 'int' contains-errors <Dependent>     |       `-CallExpr 0x15580e248 <col:51, col:74> '<dependent type>' contains-errors     |         |-DeclRefExpr 0x15580e1c0 <col:51> 'int ()' Function 0x15580e108 'h2_ihash_count' 'int ()'     |         `-CXXDependentScopeMemberExpr 0x15580e200 <col:66, col:69> '<dependent type>' contains-errors lvalue ->sredo     |           `-RecoveryExpr 0x15580e1e0 <col:66> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x157008820 <line:8:5, line:12:5>     | |-RecoveryExpr 0x157008340 <line:8:12, col:74> '_Bool' contains-errors     | `-CompoundStmt 0x1570087f8 <col:77, line:12:5>     |   |-CallExpr 0x157008590 <line:9:9, col:48> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x157008440 <col:9> 'int ()' Function 0x157008388 'h2_task_rst' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x157008528 <col:21, col:29> '<dependent type>' contains-errors lvalue ->task     |   | | `-RecoveryExpr 0x157008508 <col:21> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x157008570 <col:35> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x157008790 <line:10:9, col:38> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x1570086a0 <col:9> 'int ()' Function 0x1570085e8 'h2_ihash_add' 'int ()'     |   | |-CXXDependentScopeMemberExpr 0x1570086e0 <col:22, col:25> '<dependent type>' contains-errors lvalue ->sredo     |   | | `-RecoveryExpr 0x1570086c0 <col:22> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x157008770 <col:32> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x1570087e0 <line:11:9, col:11> 'int' prefix '--'     |     `-DeclRefExpr 0x1570087c0 <col:11> 'int' lvalue Var 0x15580ded8 'n' 'int'     |-IfStmt 0x157008c38 <line:14:5, line:20:5>     | |-BinaryOperator 0x157008a00 <line:14:9, col:59> 'int' contains-errors '>'     | | |-ParenExpr 0x157008978 <col:9, col:52> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x157008958 <col:10, col:51> '<dependent type>' contains-errors '-'     | | |   |-CXXDependentScopeMemberExpr 0x157008860 <col:10, col:13> '<dependent type>' contains-errors lvalue ->tasks_active     | | |   | `-RecoveryExpr 0x157008840 <col:10> '<dependent type>' contains-errors lvalue     | | |   `-CallExpr 0x157008930 <col:28, col:51> '<dependent type>' contains-errors     | | |     |-DeclRefExpr 0x1570088a8 <col:28> 'int ()' Function 0x15580e108 'h2_ihash_count' 'int ()'     | | |     `-CXXDependentScopeMemberExpr 0x1570088e8 <col:43, col:46> '<dependent type>' contains-errors lvalue ->sredo     | | |       `-RecoveryExpr 0x1570088c8 <col:43> '<dependent type>' contains-errors lvalue     | | `-CXXDependentScopeMemberExpr 0x1570089b8 <col:56, col:59> '<dependent type>' contains-errors lvalue ->limit_active     | |   `-RecoveryExpr 0x157008998 <col:56> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x157008c20 <col:73, line:20:5>     |   `-IfStmt 0x157008c00 <line:16:9, line:19:9>     |     |-RecoveryExpr 0x157008b80 <line:16:13> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x157008be8 <col:21, line:19:9>     |       `-ReturnStmt 0x157008bd8 <line:18:13, col:20>     |         `-RecoveryExpr 0x157008bb8 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x157008c90 <line:21:5, col:12>       `-RecoveryExpr 0x157008c70 <col:12> '<dependent type>' contains-errors lvalue ","19808":"`-FunctionDecl 0x13d031d78  col:22 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x13d031e78 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x13d031e20 <<invalid sloc>> Implicit 902 ","19939":"`-FunctionDecl 0x102921f48  line:1:1 referenced ext2_xattr_cache_find 'int (struct inode *, struct ext2_xattr_header *)'   |-ParmVarDecl 0x102905848 <col:23, col:37> col:37 used inode 'struct inode *'   |-ParmVarDecl 0x102921e28 <col:44, col:70> col:70 used header 'struct ext2_xattr_header *'   `-CompoundStmt 0x12801d770 <line:2:1, line:46:1>     |-DeclStmt 0x102922248 <line:4:2, col:27>     | |-RecordDecl 0x102922060 <col:2, col:9> col:9 struct mb_cache_entry     | `-VarDecl 0x1029221c8 <col:2, col:25> col:25 used ce 'struct mb_cache_entry *'     |-IfStmt 0x102922338 <line:6:2, line:7:10>     | |-UnaryOperator 0x1029222d8 <line:6:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1029222c0 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x102922298 <col:7, col:15> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x102922260 <col:7> 'struct ext2_xattr_header *' lvalue ParmVar 0x102921e28 'header' 'struct ext2_xattr_header *'     | `-ReturnStmt 0x102922328 <line:7:3, col:10>     |   `-RecoveryExpr 0x102922308 <col:10> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x102922898 <line:9:1, line:11:16> 'again'     | `-BinaryOperator 0x102922828 <line:10:2, line:11:16> 'struct mb_cache_entry *' contains-errors '='     |   |-DeclRefExpr 0x102922540 <line:10:2> 'struct mb_cache_entry *' lvalue Var 0x1029221c8 'ce' 'struct mb_cache_entry *'     |   `-CallExpr 0x1029227f0 <col:7, line:11:16> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x102922640 <line:10:7> 'int ()' Function 0x102922588 'mb_cache_entry_find_first' 'int ()'     |     |-RecoveryExpr 0x1029227b0 <col:33> '<dependent type>' contains-errors lvalue     |     |-CXXDependentScopeMemberExpr 0x1029226d8 <col:51, col:64> '<dependent type>' contains-errors lvalue ->s_bdev     |     | `-RecoveryExpr 0x1029226b0 <col:51, col:58> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x102922678 <col:51> 'struct inode *' lvalue ParmVar 0x102905848 'inode' 'struct inode *'     |     `-RecoveryExpr 0x1029227d0 <line:11:12> '<dependent type>' contains-errors lvalue     `-WhileStmt 0x12801d750 <line:12:2, line:44:2>       |-ImplicitCastExpr 0x1029228d8 <line:12:9> 'struct mb_cache_entry *' <LValueToRValue>       | `-DeclRefExpr 0x1029228b8 <col:9> 'struct mb_cache_entry *' lvalue Var 0x1029221c8 'ce' 'struct mb_cache_entry *'       `-CompoundStmt 0x12801d720 <col:13, line:44:2>         |-DeclStmt 0x102922ad8 <line:13:3, col:25>         | |-RecordDecl 0x1029228f0 <col:3, col:10> col:10 struct buffer_head         | `-VarDecl 0x102922a58 <col:3, col:23> col:23 used bh 'struct buffer_head *'         |-IfStmt 0x102923600 <line:15:3, line:19:3>         | |-CallExpr 0x102922c58 <line:15:7, col:16> 'int'         | | |-ImplicitCastExpr 0x102922c40 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | | `-DeclRefExpr 0x102922bd0 <col:7> 'int ()' Function 0x102922b18 'IS_ERR' 'int ()'         | | `-ImplicitCastExpr 0x102922c80 <col:14> 'struct mb_cache_entry *' <LValueToRValue>         | |   `-DeclRefExpr 0x102922bf0 <col:14> 'struct mb_cache_entry *' lvalue Var 0x1029221c8 'ce' 'struct mb_cache_entry *'         | `-CompoundStmt 0x1029235e0 <col:19, line:19:3>         |   |-IfStmt 0x1029235b8 <line:16:4, line:17:10>         |   | |-BinaryOperator 0x102923580 <line:16:8, col:24> 'int' contains-errors '=='         |   | | |-CallExpr 0x1029234f0 <col:8, col:18> 'int'         |   | | | |-ImplicitCastExpr 0x1029234d8 <col:8> 'int (*)()' <FunctionToPointerDecay>         |   | | | | `-DeclRefExpr 0x102922d78 <col:8> 'int ()' Function 0x102922cc0 'PTR_ERR' 'int ()'         |   | | | `-ImplicitCastExpr 0x102923518 <col:16> 'struct mb_cache_entry *' <LValueToRValue>         |   | | |   `-DeclRefExpr 0x102922d98 <col:16> 'struct mb_cache_entry *' lvalue Var 0x1029221c8 'ce' 'struct mb_cache_entry *'         |   | | `-UnaryOperator 0x102923568 <col:23, col:24> '<dependent type>' contains-errors prefix '-' cannot overflow         |   | |   `-ImplicitCastExpr 0x102923550 <col:24> '<dependent type>' contains-errors <LValueToRValue>         |   | |     `-RecoveryExpr 0x102923530 <col:24> '<dependent type>' contains-errors lvalue         |   | `-GotoStmt 0x1029235a0 <line:17:5, col:10> 'again' 0x102922848         |   `-BreakStmt 0x1029235d8 <line:18:4>         |-BinaryOperator 0x102923830 <line:21:3, col:41> 'struct buffer_head *' contains-errors '='         | |-DeclRefExpr 0x102923620 <col:3> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *'         | `-CallExpr 0x102923800 <col:8, col:41> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x102923720 <col:8> 'int ()' Function 0x102923668 'sb_bread' 'int ()'         |   |-RecoveryExpr 0x102923778 <col:17, col:24> '<dependent type>' contains-errors lvalue         |   | `-DeclRefExpr 0x102923740 <col:17> 'struct inode *' lvalue ParmVar 0x102905848 'inode' 'struct inode *'         |   `-RecoveryExpr 0x1029237d8 <col:30, col:34> '<dependent type>' contains-errors lvalue         |     `-DeclRefExpr 0x1029237a0 <col:30> 'struct mb_cache_entry *' lvalue Var 0x1029221c8 'ce' 'struct mb_cache_entry *'         `-IfStmt 0x12801d508 <line:22:3, line:42:3> has_else           |-UnaryOperator 0x102923888 <line:22:7, col:8> 'int' prefix '!' cannot overflow           | `-ImplicitCastExpr 0x102923870 <col:8> 'struct buffer_head *' <LValueToRValue>           |   `-DeclRefExpr 0x102923850 <col:8> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *'           |-CompoundStmt 0x102923b88 <col:12, line:26:3>           | `-CallExpr 0x102923b40 <line:23:4, line:25:46> '<dependent type>' contains-errors           |   |-DeclRefExpr 0x102923980 <line:23:4> 'int ()' Function 0x1029238c8 'ext2_error' 'int ()'           |   |-RecoveryExpr 0x1029239d8 <col:15, col:22> '<dependent type>' contains-errors lvalue           |   | `-DeclRefExpr 0x1029239a0 <col:15> 'struct inode *' lvalue ParmVar 0x102905848 'inode' 'struct inode *'           |   |-StringLiteral 0x102923a00 <col:28> 'char[4]' lvalue \"STR\"           |   |-StringLiteral 0x102923a20 <line:24:5> 'char[4]' lvalue \"STR\"           |   |-RecoveryExpr 0x102923a78 <line:25:5, col:12> '<dependent type>' contains-errors lvalue           |   | `-DeclRefExpr 0x102923a40 <col:5> 'struct inode *' lvalue ParmVar 0x102905848 'inode' 'struct inode *'           |   `-CStyleCastExpr 0x102923b18 <col:19, col:39> 'unsigned long' contains-errors <Dependent>           |     `-RecoveryExpr 0x102923ad8 <col:35, col:39> '<dependent type>' contains-errors lvalue           |       `-DeclRefExpr 0x102923aa0 <col:35> 'struct mb_cache_entry *' lvalue Var 0x1029221c8 'ce' 'struct mb_cache_entry *'           `-CompoundStmt 0x12801d4d8 <line:26:10, line:42:3>             |-CallExpr 0x102923cd8 <line:27:4, col:18> 'int'             | |-ImplicitCastExpr 0x102923cc0 <col:4> 'int (*)()' <FunctionToPointerDecay>             | | `-DeclRefExpr 0x102923c80 <col:4> 'int ()' Function 0x102923bc8 'lock_buffer' 'int ()'             | `-ImplicitCastExpr 0x102923d00 <col:16> 'struct buffer_head *' <LValueToRValue>             |   `-DeclRefExpr 0x102923ca0 <col:16> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *'             |-IfStmt 0x12801d1b8 <line:28:4, line:39:4> has_else             | |-RecoveryExpr 0x102923fe0 <line:28:8, line:29:8> '_Bool' contains-errors             | |-CompoundStmt 0x102924208 <col:33, line:34:4>             | `-IfStmt 0x12801d198 <col:11, line:39:4>             |   |-UnaryOperator 0x12801cc48 <line:34:15, col:46> 'int' prefix '!' cannot overflow             |   | `-CallExpr 0x12801cc00 <col:16, col:46> 'int'             |   |   |-ImplicitCastExpr 0x1029243d0 <col:16> 'int (*)()' <FunctionToPointerDecay>             |   |   | `-DeclRefExpr 0x1029242f8 <col:16> 'int ()' Function 0x102924240 'ext2_xattr_cmp' 'int ()'             |   |   |-ImplicitCastExpr 0x12801cc30 <col:31> 'struct ext2_xattr_header *' <LValueToRValue>             |   |   | `-DeclRefExpr 0x102924318 <col:31> 'struct ext2_xattr_header *' lvalue ParmVar 0x102921e28 'header' 'struct ext2_xattr_header *'             |   |   `-CallExpr 0x102924390 <col:39, col:45> 'int'             |   |     |-ImplicitCastExpr 0x102924378 <col:39> 'int (*)()' <FunctionToPointerDecay>             |   |     | `-DeclRefExpr 0x102924338 <col:39> 'int ()' Function 0x102923e40 'HDR' 'int ()'             |   |     `-ImplicitCastExpr 0x1029243b8 <col:43> 'struct buffer_head *' <LValueToRValue>             |   |       `-DeclRefExpr 0x102924358 <col:43> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *'             |   `-CompoundStmt 0x12801d170 <col:49, line:39:4>             |     |-CallExpr 0x12801cf60 <line:35:5, line:36:35> '<dependent type>' contains-errors             |     | |-DeclRefExpr 0x12801cd40 <line:35:5> 'int ()' Function 0x12801cc88 'ea_bdebug' 'int ()'             |     | |-DeclRefExpr 0x12801cd60 <col:15> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *'             |     | |-StringLiteral 0x12801cd80 <col:19> 'char[4]' lvalue \"STR\"             |     | `-CallExpr 0x12801cf38 <line:36:8, col:34> '<dependent type>' contains-errors             |     |   |-DeclRefExpr 0x12801ce80 <col:8> 'int ()' Function 0x12801cdc8 'atomic_read' 'int ()'             |     |   `-UnaryOperator 0x12801cf20 <col:20, col:33> '<dependent type>' contains-errors prefix '&' cannot overflow             |     |     `-ParenExpr 0x12801cf00 <col:21, col:33> '<dependent type>' contains-errors lvalue             |     |       `-RecoveryExpr 0x12801ced8 <col:22, col:26> '<dependent type>' contains-errors lvalue             |     |         `-DeclRefExpr 0x12801cea0 <col:22> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *'             |     |-CallExpr 0x12801d0d0 <line:37:5, col:30> 'int'             |     | |-ImplicitCastExpr 0x12801d0b8 <col:5> 'int (*)()' <FunctionToPointerDecay>             |     | | `-DeclRefExpr 0x12801d078 <col:5> 'int ()' Function 0x12801cfc0 'mb_cache_entry_release' 'int ()'             |     | `-ImplicitCastExpr 0x12801d0f8 <col:28> 'struct mb_cache_entry *' <LValueToRValue>             |     |   `-DeclRefExpr 0x12801d098 <col:28> 'struct mb_cache_entry *' lvalue Var 0x1029221c8 'ce' 'struct mb_cache_entry *'             |     `-ReturnStmt 0x12801d160 <line:38:5, col:12>             |       `-ImplicitCastExpr 0x12801d148 <col:12> 'int' <PointerToIntegral>             |         `-ImplicitCastExpr 0x12801d130 <col:12> 'struct buffer_head *' <LValueToRValue>             |           `-DeclRefExpr 0x12801d110 <col:12> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *'             |-CallExpr 0x12801d320 <line:40:4, col:20> 'int'             | |-ImplicitCastExpr 0x12801d308 <col:4> 'int (*)()' <FunctionToPointerDecay>             | | `-DeclRefExpr 0x12801d2c8 <col:4> 'int ()' Function 0x12801d210 'unlock_buffer' 'int ()'             | `-ImplicitCastExpr 0x12801d348 <col:18> 'struct buffer_head *' <LValueToRValue>             |   `-DeclRefExpr 0x12801d2e8 <col:18> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *'             `-CallExpr 0x12801d498 <line:41:4, col:13> 'int'               |-ImplicitCastExpr 0x12801d480 <col:4> 'int (*)()' <FunctionToPointerDecay>               | `-DeclRefExpr 0x12801d440 <col:4> 'int ()' Function 0x12801d388 'brelse' 'int ()'               `-ImplicitCastExpr 0x12801d4c0 <col:11> 'struct buffer_head *' <LValueToRValue>                 `-DeclRefExpr 0x12801d460 <col:11> 'struct buffer_head *' lvalue Var 0x102922a58 'bh' 'struct buffer_head *' ","19448":"`-FunctionDecl 0x12a029338  col:26 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x12a02aa58 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x12a02aa00 <<invalid sloc>> Implicit 902 ","19983":"`-FunctionDecl 0x129053e00  line:1:1 pci_get_cfgdata8 'int (struct pci_vdev *, int)'   |-ParmVarDecl 0x129030e48 <col:18, col:35> col:35 used dev 'struct pci_vdev *'   |-ParmVarDecl 0x129030ec8 <col:40, col:44> col:44 used offset 'int'   `-CompoundStmt 0x1290541f0 <line:2:1, line:5:1>     `-CallExpr 0x129054110 <line:3:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x129054030 <col:2> 'int ()' Function 0x129053f78 'assert' 'int ()'       `-BinaryOperator 0x1290540f0 <col:9, col:19> 'int' contains-errors '<='         |-DeclRefExpr 0x129054050 <col:9> 'int' lvalue ParmVar 0x129030ec8 'offset' 'int'         `-RecoveryExpr 0x1290540d0 <col:19> '<dependent type>' contains-errors lvalue ","20079":"`-FunctionDecl 0x158142158  line:1:12 invalid packet_do_bind 'int (struct sock *, const char *, int, int)' static   |-ParmVarDecl 0x158128e48 <col:27, col:40> col:40 used sk 'struct sock *'   |-ParmVarDecl 0x158128ec8 <col:44, col:56> col:56 used name 'const char *'   |-ParmVarDecl 0x158128f48 <col:62, col:66> col:66 used ifindex 'int'   |-ParmVarDecl 0x158142000 <line:2:6, col:13> col:13 invalid proto 'int'   `-CompoundStmt 0x1581459c0 <line:3:1, line:85:1>     |-DeclStmt 0x158142648 <line:4:2, col:37>     | |-RecordDecl 0x158142220 <col:2, col:9> col:9 struct packet_sock     | `-VarDecl 0x158142388 <col:2, col:36> col:22 used po 'struct packet_sock *' cinit     |   `-ImplicitCastExpr 0x158142618 <col:27, col:36> 'struct packet_sock *' <IntegralToPointer>     |     `-CallExpr 0x1581425d8 <col:27, col:36> 'int'     |       |-ImplicitCastExpr 0x1581425c0 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x158142550 <col:27> 'int ()' Function 0x158142498 'pkt_sk' 'int ()'     |       `-ImplicitCastExpr 0x158142600 <col:34> 'struct sock *' <LValueToRValue>     |         `-DeclRefExpr 0x158142570 <col:34> 'struct sock *' lvalue ParmVar 0x158128e48 'sk' 'struct sock *'     |-DeclStmt 0x158142848 <line:5:2, col:29>     | |-RecordDecl 0x158142660 <col:2, col:9> col:9 struct net_device     | `-VarDecl 0x1581427c8 <col:2, col:21> col:21 used dev_curr 'struct net_device *'     |-DeclStmt 0x158142988 <line:8:2, col:31>     | `-VarDecl 0x1581428e8 <col:2, col:27> col:21 used dev 'struct net_device *' cinit     |   `-RecoveryExpr 0x158142968 <col:27> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x158142a40 <line:9:2, col:13>     | `-VarDecl 0x1581429b8 <col:2, col:12> col:6 used ret 'int' cinit     |   `-IntegerLiteral 0x158142a20 <col:12> 'int' 0     |-IfStmt 0x158142b60 <line:12:2, line:13:11>     | |-RecoveryExpr 0x158142a90 <line:12:6, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x158142a58 <col:6> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     | `-ReturnStmt 0x158142b50 <line:13:3, col:11>     |   `-UnaryOperator 0x158142b38 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x158142b20 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x158142b00 <col:11> '<dependent type>' contains-errors lvalue     |-CallExpr 0x158142cb8 <line:15:2, col:14> 'int'     | |-ImplicitCastExpr 0x158142ca0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x158142c60 <col:2> 'int ()' Function 0x158142ba8 'lock_sock' 'int ()'     | `-ImplicitCastExpr 0x158142ce0 <col:12> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x158142c80 <col:12> 'struct sock *' lvalue ParmVar 0x158128e48 'sk' 'struct sock *'     |-CallExpr 0x158142e70 <line:16:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158142dd8 <col:2> 'int ()' Function 0x158142d20 'spin_lock' 'int ()'     | `-UnaryOperator 0x158142e58 <col:12, col:17> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x158142e30 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158142df8 <col:13> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |-CallExpr 0x158142fb0 <line:17:2, col:16> 'int'     | `-ImplicitCastExpr 0x158142f98 <col:2> 'int (*)()' <FunctionToPointerDecay>     |   `-DeclRefExpr 0x158142f78 <col:2> 'int ()' Function 0x158142ec0 'rcu_read_lock' 'int ()'     |-IfStmt 0x158143920 <line:19:2, line:31:2> has_else     | |-ImplicitCastExpr 0x158143000 <line:19:6> 'const char *' <LValueToRValue>     | | `-DeclRefExpr 0x158142fd0 <col:6> 'const char *' lvalue ParmVar 0x158128ec8 'name' 'const char *'     | |-CompoundStmt 0x158143558 <col:12, line:25:2>     | | |-BinaryOperator 0x158143348 <line:20:3, col:47> 'struct net_device *' contains-errors '='     | | | |-DeclRefExpr 0x158143018 <col:3> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     | | | `-ImplicitCastExpr 0x158143330 <col:9, col:47> 'struct net_device *' <IntegralToPointer>     | | |   `-CallExpr 0x1581432e8 <col:9, col:47> 'int'     | | |     |-ImplicitCastExpr 0x1581432d0 <col:9> 'int (*)()' <FunctionToPointerDecay>     | | |     | `-DeclRefExpr 0x158143118 <col:9> 'int ()' Function 0x158143060 'dev_get_by_name_rcu' 'int ()'     | | |     |-CallExpr 0x158143270 <col:29, col:40> 'int'     | | |     | |-ImplicitCastExpr 0x158143258 <col:29> 'int (*)()' <FunctionToPointerDecay>     | | |     | | `-DeclRefExpr 0x158143218 <col:29> 'int ()' Function 0x158143160 'sock_net' 'int ()'     | | |     | `-ImplicitCastExpr 0x158143298 <col:38> 'struct sock *' <LValueToRValue>     | | |     |   `-DeclRefExpr 0x158143238 <col:38> 'struct sock *' lvalue ParmVar 0x158128e48 'sk' 'struct sock *'     | | |     `-ImplicitCastExpr 0x158143318 <col:43> 'const char *' <LValueToRValue>     | | |       `-DeclRefExpr 0x1581432b0 <col:43> 'const char *' lvalue ParmVar 0x158128ec8 'name' 'const char *'     | | `-IfStmt 0x158143538 <line:21:3, line:24:3>     | |   |-UnaryOperator 0x1581433a0 <line:21:7, col:8> 'int' contains-errors prefix '!' cannot overflow     | |   | `-ImplicitCastExpr 0x158143388 <col:8> 'struct net_device *' contains-errors <LValueToRValue>     | |   |   `-DeclRefExpr 0x158143368 <col:8> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     | |   `-CompoundStmt 0x158143518 <col:13, line:24:3>     | |     |-BinaryOperator 0x158143490 <line:22:4, col:11> 'int' contains-errors '='     | |     | |-DeclRefExpr 0x1581433b8 <col:4> 'int' lvalue Var 0x1581429b8 'ret' 'int'     | |     | `-UnaryOperator 0x158143478 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     | |     |   `-ImplicitCastExpr 0x158143460 <col:11> '<dependent type>' contains-errors <LValueToRValue>     | |     |     `-RecoveryExpr 0x158143440 <col:11> '<dependent type>' contains-errors lvalue     | |     `-GotoStmt 0x158143500 <line:23:4, col:9> 'out_unlock' 0x1581434b0     | `-IfStmt 0x158143900 <line:25:9, line:31:2>     |   |-ImplicitCastExpr 0x158143598 <line:25:13> 'int' <LValueToRValue>     |   | `-DeclRefExpr 0x158143578 <col:13> 'int' lvalue ParmVar 0x158128f48 'ifindex' 'int'     |   `-CompoundStmt 0x1581438e0 <col:22, line:31:2>     |     |-BinaryOperator 0x158143800 <line:26:3, col:51> 'struct net_device *' contains-errors '='     |     | |-DeclRefExpr 0x1581435b0 <col:3> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     |     | `-ImplicitCastExpr 0x1581437e8 <col:9, col:51> 'struct net_device *' <IntegralToPointer>     |     |   `-CallExpr 0x1581437a0 <col:9, col:51> 'int'     |     |     |-ImplicitCastExpr 0x158143788 <col:9> 'int (*)()' <FunctionToPointerDecay>     |     |     | `-DeclRefExpr 0x1581436b0 <col:9> 'int ()' Function 0x1581435f8 'dev_get_by_index_rcu' 'int ()'     |     |     |-CallExpr 0x158143728 <col:30, col:41> 'int'     |     |     | |-ImplicitCastExpr 0x158143710 <col:30> 'int (*)()' <FunctionToPointerDecay>     |     |     | | `-DeclRefExpr 0x1581436d0 <col:30> 'int ()' Function 0x158143160 'sock_net' 'int ()'     |     |     | `-ImplicitCastExpr 0x158143750 <col:39> 'struct sock *' <LValueToRValue>     |     |     |   `-DeclRefExpr 0x1581436f0 <col:39> 'struct sock *' lvalue ParmVar 0x158128e48 'sk' 'struct sock *'     |     |     `-ImplicitCastExpr 0x1581437d0 <col:44> 'int' <LValueToRValue>     |     |       `-DeclRefExpr 0x158143768 <col:44> 'int' lvalue ParmVar 0x158128f48 'ifindex' 'int'     |     `-IfStmt 0x1581438c0 <line:27:3, line:30:3>     |       |-UnaryOperator 0x158143858 <line:27:7, col:8> 'int' contains-errors prefix '!' cannot overflow     |       | `-ImplicitCastExpr 0x158143840 <col:8> 'struct net_device *' contains-errors <LValueToRValue>     |       |   `-DeclRefExpr 0x158143820 <col:8> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     |       `-CompoundStmt 0x1581438a8 <col:13, line:30:3>     |         `-GotoStmt 0x158143890 <line:29:4, col:9> 'out_unlock' 0x1581434b0     |-IfStmt 0x158143b00 <line:33:2, line:34:15>     | |-ImplicitCastExpr 0x158143970 <line:33:6> 'struct net_device *' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x158143950 <col:6> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     | `-CallExpr 0x158143ac0 <line:34:3, col:15> 'int' contains-errors     |   |-ImplicitCastExpr 0x158143aa8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x158143a68 <col:3> 'int ()' Function 0x1581439b0 'dev_hold' 'int ()'     |   `-ImplicitCastExpr 0x158143ae8 <col:12> 'struct net_device *' contains-errors <LValueToRValue>     |     `-DeclRefExpr 0x158143a88 <col:12> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     |-BinaryOperator 0x158143c90 <line:37:2, col:27> 'struct net_device *' contains-errors '='     | |-DeclRefExpr 0x158143bc8 <col:2> 'struct net_device *' lvalue Var 0x1581427c8 'dev_curr' 'struct net_device *'     | `-CXXDependentScopeMemberExpr 0x158143c48 <col:13, col:27> '<dependent type>' contains-errors lvalue .dev     |   `-RecoveryExpr 0x158143c20 <col:13, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158143be8 <col:13> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |-IfStmt 0x158144ef8 <line:41:2, line:65:2>     | |-RecoveryExpr 0x158143d60 <line:41:6> '_Bool' contains-errors     | `-CompoundStmt 0x158144ec8 <col:19, line:65:2>     |   |-IfStmt 0x158144340 <line:42:3, line:50:3>     |   | |-RecoveryExpr 0x158143db8 <line:42:7, col:11> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x158143d80 <col:7> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |   | `-CompoundStmt 0x158144318 <col:20, line:50:3>     |   |   |-CallExpr 0x158143ef8 <line:43:4, col:20> 'int'     |   |   | `-ImplicitCastExpr 0x158143ee0 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   |   `-DeclRefExpr 0x158143ec0 <col:4> 'int ()' Function 0x158143e08 'rcu_read_unlock' 'int ()'     |   |   |-CallExpr 0x158144078 <line:45:4, col:18> 'int'     |   |   | `-ImplicitCastExpr 0x158144060 <col:4> 'int (*)()' <FunctionToPointerDecay>     |   |   |   `-DeclRefExpr 0x158144040 <col:4> 'int ()' Function 0x158142ec0 'rcu_read_lock' 'int ()'     |   |   `-BinaryOperator 0x158144160 <line:46:4, col:29> 'struct net_device *' contains-errors '='     |   |     |-DeclRefExpr 0x158144098 <col:4> 'struct net_device *' lvalue Var 0x1581427c8 'dev_curr' 'struct net_device *'     |   |     `-CXXDependentScopeMemberExpr 0x158144118 <col:15, col:29> '<dependent type>' contains-errors lvalue .dev     |   |       `-RecoveryExpr 0x1581440f0 <col:15, col:19> '<dependent type>' contains-errors lvalue     |   |         `-DeclRefExpr 0x1581440b8 <col:15> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |   |-BinaryOperator 0x1581443e0 <line:52:3, col:13> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x158144398 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x158144360 <col:3> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |   | `-RecoveryExpr 0x1581443c0 <col:13> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x1581444c8 <line:53:3, col:24> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x158144460 <col:3, col:17> '<dependent type>' contains-errors lvalue .type     |   | | `-RecoveryExpr 0x158144438 <col:3, col:7> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x158144400 <col:3> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |   | `-RecoveryExpr 0x1581444a8 <col:24> '<dependent type>' contains-errors lvalue     |   `-IfStmt 0x158144e98 <line:55:3, line:64:3> has_else     |     |-RecoveryExpr 0x1581445e8 <line:55:7, col:24> '_Bool' contains-errors     |     |-CompoundStmt 0x158144a58 <col:27, line:60:3>     |     | |-CallExpr 0x158144740 <line:56:4, col:15> 'int' contains-errors     |     | | |-ImplicitCastExpr 0x158144728 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | | | `-DeclRefExpr 0x1581446e8 <col:4> 'int ()' Function 0x158144630 'dev_put' 'int ()'     |     | | `-ImplicitCastExpr 0x158144768 <col:12> 'struct net_device *' contains-errors <LValueToRValue>     |     | |   `-DeclRefExpr 0x158144708 <col:12> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     |     | |-BinaryOperator 0x1581448c0 <line:58:4, col:19> '<dependent type>' contains-errors '='     |     | | |-RecoveryExpr 0x158144860 <col:4, col:8> '<dependent type>' contains-errors lvalue     |     | | | `-DeclRefExpr 0x158144828 <col:4> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |     | | `-UnaryOperator 0x1581448a8 <col:18, col:19> 'int' prefix '-'     |     | |   `-IntegerLiteral 0x158144888 <col:19> 'int' 1     |     | `-CallExpr 0x158144a18 <line:59:4, col:30> 'int'     |     |   |-ImplicitCastExpr 0x158144a00 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x1581449c0 <col:4> 'int ()' Function 0x158144908 'packet_cached_dev_reset' 'int ()'     |     |   `-ImplicitCastExpr 0x158144a40 <col:28> 'struct packet_sock *' <LValueToRValue>     |     |     `-DeclRefExpr 0x1581449e0 <col:28> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |     `-CompoundStmt 0x158144e70 <line:60:10, line:64:3>     |       |-BinaryOperator 0x158144b48 <line:61:4, col:24> '<dependent type>' contains-errors '='     |       | |-CXXDependentScopeMemberExpr 0x158144ae0 <col:4, col:18> '<dependent type>' contains-errors lvalue .dev     |       | | `-RecoveryExpr 0x158144ab8 <col:4, col:8> '<dependent type>' contains-errors lvalue     |       | |   `-DeclRefExpr 0x158144a80 <col:4> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |       | `-DeclRefExpr 0x158144b28 <col:24> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     |       |-BinaryOperator 0x158144c98 <line:62:4, col:39> '<dependent type>' contains-errors '='     |       | |-RecoveryExpr 0x158144ba0 <col:4, col:8> '<dependent type>' contains-errors lvalue     |       | | `-DeclRefExpr 0x158144b68 <col:4> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |       | `-ConditionalOperator 0x158144c68 <col:18, col:39> '<dependent type>' contains-errors     |       |   |-DeclRefExpr 0x158144bc8 <col:18> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     |       |   |-RecoveryExpr 0x158144c20 <col:24, col:29> '<dependent type>' contains-errors lvalue     |       |   | `-DeclRefExpr 0x158144be8 <col:24> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     |       |   `-IntegerLiteral 0x158144c48 <col:39> 'int' 0     |       `-CallExpr 0x158144e10 <line:63:4, col:36> 'int' contains-errors     |         |-ImplicitCastExpr 0x158144df8 <col:4> 'int (*)()' <FunctionToPointerDecay>     |         | `-DeclRefExpr 0x158144d98 <col:4> 'int ()' Function 0x158144ce0 'packet_cached_dev_assign' 'int ()'     |         |-ImplicitCastExpr 0x158144e40 <col:29> 'struct packet_sock *' <LValueToRValue>     |         | `-DeclRefExpr 0x158144db8 <col:29> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |         `-ImplicitCastExpr 0x158144e58 <col:33> 'struct net_device *' contains-errors <LValueToRValue>     |           `-DeclRefExpr 0x158144dd8 <col:33> 'struct net_device *' contains-errors lvalue Var 0x1581428e8 'dev' 'struct net_device *'     |-IfStmt 0x158145000 <line:66:2, line:67:19>     | |-ImplicitCastExpr 0x158144f38 <line:66:6> 'struct net_device *' <LValueToRValue>     | | `-DeclRefExpr 0x158144f18 <col:6> 'struct net_device *' lvalue Var 0x1581427c8 'dev_curr' 'struct net_device *'     | `-CallExpr 0x158144fa8 <line:67:3, col:19> 'int'     |   |-ImplicitCastExpr 0x158144f90 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x158144f50 <col:3> 'int ()' Function 0x158144630 'dev_put' 'int ()'     |   `-ImplicitCastExpr 0x158144fd0 <col:11> 'struct net_device *' <LValueToRValue>     |     `-DeclRefExpr 0x158144f70 <col:11> 'struct net_device *' lvalue Var 0x1581427c8 'dev_curr' 'struct net_device *'     |-IfStmt 0x1581450b8 <line:69:2, line:70:8>     | |-RecoveryExpr 0x158145080 <line:69:6, col:21> '_Bool' contains-errors     | `-GotoStmt 0x1581450a0 <line:70:3, col:8> 'out_unlock' 0x1581434b0     |-IfStmt 0x1581455b8 <line:72:2, line:78:2> has_else     | |-RecoveryExpr 0x158145188 <line:72:6, col:49> '_Bool' contains-errors     | |-CompoundStmt 0x158145320 <col:52, line:74:2>     | | `-CallExpr 0x1581452e0 <line:73:3, col:24> 'int'     | |   |-ImplicitCastExpr 0x1581452c8 <col:3> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x158145288 <col:3> 'int ()' Function 0x1581451d0 'register_prot_hook' 'int ()'     | |   `-ImplicitCastExpr 0x158145308 <col:22> 'struct sock *' <LValueToRValue>     | |     `-DeclRefExpr 0x1581452a8 <col:22> 'struct sock *' lvalue ParmVar 0x158128e48 'sk' 'struct sock *'     | `-CompoundStmt 0x1581455a0 <line:74:9, line:78:2>     |   `-IfStmt 0x158145580 <line:76:3, line:77:26>     |     |-RecoveryExpr 0x1581454b8 <line:76:7, col:31> '_Bool' contains-errors     |     `-CallExpr 0x158145558 <line:77:4, col:26> '<dependent type>' contains-errors     |       |-RecoveryExpr 0x158145510 <col:4, col:8> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x1581454d8 <col:4> 'struct sock *' lvalue ParmVar 0x158128e48 'sk' 'struct sock *'     |       `-DeclRefExpr 0x158145538 <col:24> 'struct sock *' lvalue ParmVar 0x158128e48 'sk' 'struct sock *'     |-LabelStmt 0x158145640 <line:80:1, line:81:18> 'out_unlock'     | `-CallExpr 0x158145620 <col:2, col:18> 'int'     |   `-ImplicitCastExpr 0x158145608 <col:2> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x1581455e8 <col:2> 'int ()' Function 0x158143e08 'rcu_read_unlock' 'int ()'     |-CallExpr 0x1581457d8 <line:82:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x158145740 <col:2> 'int ()' Function 0x158145688 'spin_unlock' 'int ()'     | `-UnaryOperator 0x1581457c0 <col:14, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x158145798 <col:15, col:19> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x158145760 <col:15> 'struct packet_sock *' lvalue Var 0x158142388 'po' 'struct packet_sock *'     |-CallExpr 0x158145938 <line:83:2, col:17> 'int'     | |-ImplicitCastExpr 0x158145920 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1581458e0 <col:2> 'int ()' Function 0x158145828 'release_sock' 'int ()'     | `-ImplicitCastExpr 0x158145960 <col:15> 'struct sock *' <LValueToRValue>     |   `-DeclRefExpr 0x158145900 <col:15> 'struct sock *' lvalue ParmVar 0x158128e48 'sk' 'struct sock *'     `-ReturnStmt 0x1581459b0 <line:84:2, col:9>       `-ImplicitCastExpr 0x158145998 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x158145978 <col:9> 'int' lvalue Var 0x1581429b8 'ret' 'int' ","19148":"`-FunctionDecl 0x14c128378  line:1:1 invalid convert_1_bit 'int (const char *, char *, int, int)'   |-ParmVarDecl 0x14c1280f0 <col:16, col:29> col:29 used src 'const char *'   |-ParmVarDecl 0x14c128170 <line:2:16, col:29> col:29 used dst 'char *'   |-ParmVarDecl 0x14c1281f0 <line:3:16, col:29> col:29 invalid rows 'int'   |-ParmVarDecl 0x14c128270 <line:4:16, col:29> col:29 invalid columns 'int'   `-CompoundStmt 0x14d009d40 <line:5:1, line:29:1>     |-DeclStmt 0x14c128558 <line:8:3, col:15>     | |-VarDecl 0x14c128458 <col:3, col:11> col:11 used i 'int'     | `-VarDecl 0x14c1284d8 <col:3, col:14> col:14 used j 'int'     |-CallExpr 0x14c128758 <line:10:3, col:10> 'int'     | |-ImplicitCastExpr 0x14c128740 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14c1286d0 <col:3> 'int ()' Function 0x14c128618 'IFDBG' 'int ()'     | `-IntegerLiteral 0x14c1286f0 <col:9> 'int' 3     |-CallExpr 0x14d008f58 <col:13, col:27> 'int'     | |-ImplicitCastExpr 0x14d008f40 <col:13> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14d008eb8 <col:13> 'int ()' Function 0x14d008e00 'g_debug' 'int ()'     | `-ImplicitCastExpr 0x14d008f80 <col:22> 'char *' <ArrayToPointerDecay>     |   `-StringLiteral 0x14d008f20 <col:22> 'char[4]' lvalue \"STR\"     |-ForStmt 0x14d009bf0 <line:12:3, line:27:5>     | |-BinaryOperator 0x14d008fd8 <line:12:8, col:12> 'int' '='     | | |-DeclRefExpr 0x14d008f98 <col:8> 'int' lvalue Var 0x14c128458 'i' 'int'     | | `-IntegerLiteral 0x14d008fb8 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14d009138 <col:15, col:45> 'int' contains-errors '<'     | | |-DeclRefExpr 0x14d008ff8 <col:15> 'int' lvalue Var 0x14c128458 'i' 'int'     | | `-BinaryOperator 0x14d009118 <col:19, col:45> '<dependent type>' contains-errors '*'     | |   |-RecoveryExpr 0x14d009018 <col:19> '<dependent type>' contains-errors lvalue     | |   `-ParenExpr 0x14d0090f8 <col:26, col:45> '<dependent type>' contains-errors     | |     `-BinaryOperator 0x14d0090d8 <col:27, col:44> '<dependent type>' contains-errors '>>'     | |       |-ParenExpr 0x14d009098 <col:27, col:39> '<dependent type>' contains-errors     | |       | `-BinaryOperator 0x14d009078 <col:28, col:38> '<dependent type>' contains-errors '+'     | |       |   |-RecoveryExpr 0x14d009038 <col:28> '<dependent type>' contains-errors lvalue     | |       |   `-IntegerLiteral 0x14d009058 <col:38> 'int' 7     | |       `-IntegerLiteral 0x14d0090b8 <col:44> 'int' 3     | |-UnaryOperator 0x14d009178 <col:48, col:50> 'int' prefix '++'     | | `-DeclRefExpr 0x14d009158 <col:50> 'int' lvalue Var 0x14c128458 'i' 'int'     | `-CompoundStmt 0x14d009bc8 <line:13:5, line:27:5>     |   |-DeclStmt 0x14d009240 <line:14:7, col:28>     |   | `-VarDecl 0x14d0091a0 <col:7, col:24> col:17 used mask 'char' cinit     |   |   `-ImplicitCastExpr 0x14d009228 <col:24> 'char' <IntegralCast>     |   |     `-IntegerLiteral 0x14d009208 <col:24> 'int' 128     |   |-ForStmt 0x14d009aa0 <line:15:7, line:23:9>     |   | |-BinaryOperator 0x14d009298 <line:15:12, col:16> 'int' '='     |   | | |-DeclRefExpr 0x14d009258 <col:12> 'int' lvalue Var 0x14c1284d8 'j' 'int'     |   | | `-IntegerLiteral 0x14d009278 <col:16> 'int' 0     |   | |-<<<NULL>>>     |   | |-BinaryOperator 0x14d009458 <col:19, col:38> 'int' contains-errors '&&'     |   | | |-BinaryOperator 0x14d0093f8 <col:19, col:23> 'int' '<'     |   | | | |-ImplicitCastExpr 0x14d0093e0 <col:19> 'int' <LValueToRValue>     |   | | | | `-DeclRefExpr 0x14d0092b8 <col:19> 'int' lvalue Var 0x14c1284d8 'j' 'int'     |   | | | `-IntegerLiteral 0x14d0092d8 <col:23> 'int' 8     |   | | `-BinaryOperator 0x14d009438 <col:28, col:38> 'int' contains-errors '<'     |   | |   |-RecoveryExpr 0x14d009418 <col:28> '<dependent type>' contains-errors lvalue     |   | |   `-RecoveryExpr 0x14d009348 <col:38> '<dependent type>' contains-errors lvalue     |   | |-UnaryOperator 0x14d009498 <col:47, col:49> 'int' prefix '++'     |   | | `-DeclRefExpr 0x14d009478 <col:49> 'int' lvalue Var 0x14c1284d8 'j' 'int'     |   | `-CompoundStmt 0x14d009a68 <line:16:9, line:23:9>     |   |   |-BinaryOperator 0x14d009698 <line:17:11, col:38> 'char' '='     |   |   | |-UnaryOperator 0x14d0094e8 <col:11, col:12> 'char' lvalue prefix '*' cannot overflow     |   |   | | `-ImplicitCastExpr 0x14d0094d0 <col:12> 'char *' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x14d0094b0 <col:12> 'char *' lvalue ParmVar 0x14c128170 'dst' 'char *'     |   |   | `-ImplicitCastExpr 0x14d009680 <col:18, col:38> 'char' <IntegralCast>     |   |   |   `-ConditionalOperator 0x14d009650 <col:18, col:38> 'int'     |   |   |     |-ParenExpr 0x14d0095f0 <col:18, col:30> 'int'     |   |   |     | `-BinaryOperator 0x14d0095d0 <col:19, col:26> 'int' '&'     |   |   |     |   |-ImplicitCastExpr 0x14d009588 <col:19, col:20> 'int' <IntegralCast>     |   |   |     |   | `-ImplicitCastExpr 0x14d009570 <col:19, col:20> 'char' <LValueToRValue>     |   |   |     |   |   `-UnaryOperator 0x14d009538 <col:19, col:20> 'const char' lvalue prefix '*' cannot overflow     |   |   |     |   |     `-ImplicitCastExpr 0x14d009520 <col:20> 'const char *' <LValueToRValue>     |   |   |     |   |       `-DeclRefExpr 0x14d009500 <col:20> 'const char *' lvalue ParmVar 0x14c1280f0 'src' 'const char *'     |   |   |     |   `-ImplicitCastExpr 0x14d0095b8 <col:26> 'int' <IntegralCast>     |   |   |     |     `-ImplicitCastExpr 0x14d0095a0 <col:26> 'char' <LValueToRValue>     |   |   |     |       `-DeclRefExpr 0x14d009550 <col:26> 'char' lvalue Var 0x14d0091a0 'mask' 'char'     |   |   |     |-IntegerLiteral 0x14d009610 <col:34> 'int' 0     |   |   |     `-IntegerLiteral 0x14d009630 <col:38> 'int' 1     |   |   |-CallExpr 0x14d009710 <line:18:11, col:18> 'int'     |   |   | |-ImplicitCastExpr 0x14d0096f8 <col:11> 'int (*)()' <FunctionToPointerDecay>     |   |   | | `-DeclRefExpr 0x14d0096b8 <col:11> 'int ()' Function 0x14c128618 'IFDBG' 'int ()'     |   |   | `-IntegerLiteral 0x14d0096d8 <col:17> 'int' 3     |   |   |-CallExpr 0x14d009940 <col:20, line:19:39> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x14d009738 <line:18:20> 'int ()' Function 0x14d008e00 'g_debug' 'int ()'     |   |   | |-StringLiteral 0x14d009758 <col:29> 'char[4]' lvalue \"STR\"     |   |   | |-DeclRefExpr 0x14d009778 <line:19:13> 'int' lvalue Var 0x14c128458 'i' 'int'     |   |   | |-DeclRefExpr 0x14d009798 <col:17> 'int' lvalue Var 0x14c1284d8 'j' 'int'     |   |   | |-RecoveryExpr 0x14d0098c0 <col:20> '<dependent type>' contains-errors lvalue     |   |   | |-UnaryOperator 0x14d0098f8 <col:29, col:30> 'const char' lvalue prefix '*' cannot overflow     |   |   | | `-ImplicitCastExpr 0x14d0098e0 <col:30> 'const char *' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x14d0097d0 <col:30> 'const char *' lvalue ParmVar 0x14c1280f0 'src' 'const char *'     |   |   | `-UnaryOperator 0x14d009928 <col:35, col:36> 'char' lvalue prefix '*' cannot overflow     |   |   |   `-ImplicitCastExpr 0x14d009910 <col:36> 'char *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x14d009820 <col:36> 'char *' lvalue ParmVar 0x14c128170 'dst' 'char *'     |   |   |-UnaryOperator 0x14d0099b0 <line:20:11, col:14> 'char *' postfix '++'     |   |   | `-DeclRefExpr 0x14d009990 <col:11> 'char *' lvalue ParmVar 0x14c128170 'dst' 'char *'     |   |   `-CompoundAssignOperator 0x14d009a38 <line:21:11, col:20> 'char' '>>=' ComputeLHSTy='int' ComputeResultTy='int'     |   |     |-DeclRefExpr 0x14d0099c8 <col:11> 'char' lvalue Var 0x14d0091a0 'mask' 'char'     |   |     `-IntegerLiteral 0x14d0099e8 <col:20> 'int' 1     |   `-UnaryOperator 0x14d009bb0 <line:26:7, col:10> 'const char *' postfix '++'     |     `-DeclRefExpr 0x14d009b90 <col:7> 'const char *' lvalue ParmVar 0x14c1280f0 'src' 'const char *'     |-CallExpr 0x14d009c80 <line:28:3, col:10> 'int'     | |-ImplicitCastExpr 0x14d009c68 <col:3> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x14d009c28 <col:3> 'int ()' Function 0x14c128618 'IFDBG' 'int ()'     | `-IntegerLiteral 0x14d009c48 <col:9> 'int' 3     `-CallExpr 0x14d009d00 <col:13, col:27> 'int'       |-ImplicitCastExpr 0x14d009ce8 <col:13> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x14d009ca8 <col:13> 'int ()' Function 0x14d008e00 'g_debug' 'int ()'       `-ImplicitCastExpr 0x14d009d28 <col:22> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x14d009cc8 <col:22> 'char[4]' lvalue \"STR\" ","19702":"`-FunctionDecl 0x153928288  line:1:16 invalid equality 'int *(int *, int)' static   |-ParmVarDecl 0x153928128 <col:25, col:35> col:35 invalid J 'int *'   |-ParmVarDecl 0x1539281a8 <col:38, col:42> col:42 used notin 'int'   `-CompoundStmt 0x153941f98 <line:2:1, line:10:1>     |-LabelStmt 0x153941998 <line:4:1, line:5:80> 'loop'     | `-IfStmt 0x153941978 <col:2, col:80>     |   |-CallExpr 0x1539286c8 <col:6, col:25> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x153928620 <col:6> 'int ()' Function 0x153928568 'jsP_accept' 'int ()'     |   | |-RecoveryExpr 0x153928640 <col:17> '<dependent type>' contains-errors lvalue     |   | `-RecoveryExpr 0x1539286a8 <col:20> '<dependent type>' contains-errors lvalue     |   `-CompoundStmt 0x153941960 <col:28, col:80>     |     `-GotoStmt 0x153941948 <col:69, col:74> 'loop' 0x1539418f8     |-IfStmt 0x153941bd8 <line:6:2, col:80>     | |-CallExpr 0x153941a60 <col:6, col:25> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1539419b8 <col:6> 'int ()' Function 0x153928568 'jsP_accept' 'int ()'     | | |-RecoveryExpr 0x1539419d8 <col:17> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x153941a40 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x153941bc0 <col:28, col:80>     |   `-GotoStmt 0x153941ba8 <col:69, col:74> 'loop' 0x1539418f8     |-IfStmt 0x153941e18 <line:7:2, col:92>     | |-CallExpr 0x153941ca0 <col:6, col:31> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x153941bf8 <col:6> 'int ()' Function 0x153928568 'jsP_accept' 'int ()'     | | |-RecoveryExpr 0x153941c18 <col:17> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x153941c80 <col:20> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x153941e00 <col:34, col:92>     |   `-GotoStmt 0x153941de8 <col:81, col:86> 'loop' 0x1539418f8     `-IfStmt 0x153941f78 <line:8:2, col:92>       |-RecoveryExpr 0x153941e78 <col:6, col:31> '_Bool' contains-errors       `-CompoundStmt 0x153941f60 <col:34, col:92>         `-GotoStmt 0x153941f48 <col:81, col:86> 'loop' 0x1539418f8 ","19139":"`-FunctionDecl 0x12380de38  line:1:1 TEST 'int (int, int)'   |-ParmVarDecl 0x12380dd58 <col:6> col:6 QueryProjectionTest 'int'   |-ParmVarDecl 0x12380dcd8 <col:27> col:27 InvalidElemMatchWhereProjection 'int'   `-CompoundStmt 0x12380e168 <col:60, line:3:1>     `-CallExpr 0x12380e128 <line:2:5, col:34> 'int'       |-ImplicitCastExpr 0x12380e110 <col:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x12380e060 <col:5> 'int ()' Function 0x12380dfa8 'assertInvalidProjection' 'int ()'       `-ImplicitCastExpr 0x12380e150 <col:29> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x12380e0c0 <col:29> 'char[4]' lvalue \"STR\" ","19712":"`-FunctionDecl 0x12700e358  line:1:17 get_num_write_zeroes_bios 'unsigned int (struct dm_target *)' static   |-ParmVarDecl 0x12700e248 <col:43, col:61> col:61 used ti 'struct dm_target *'   `-CompoundStmt 0x1270266c0 <line:2:1, line:4:1>     `-ReturnStmt 0x1270266b0 <line:3:2, col:13>       `-RecoveryExpr 0x127026688 <col:9, col:13> '<dependent type>' contains-errors lvalue         `-DeclRefExpr 0x127026650 <col:9> 'struct dm_target *' lvalue ParmVar 0x12700e248 'ti' 'struct dm_target *' ","19872":"`-FunctionDecl 0x15300e350  line:1:13 vhost_init_is_le 'void (struct vhost_virtqueue *)' static   |-ParmVarDecl 0x15300e248 <col:30, col:54> col:54 used vq 'struct vhost_virtqueue *'   `-CompoundStmt 0x1530269e8 <line:2:1, line:5:1>     `-BinaryOperator 0x1530269c8 <line:4:2, col:64> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x153026680 <col:2, col:6> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x153026648 <col:2> 'struct vhost_virtqueue *' lvalue ParmVar 0x15300e248 'vq' 'struct vhost_virtqueue *'       `-BinaryOperator 0x1530269a8 <col:14, col:64> 'int' contains-errors '||'         |-CallExpr 0x153026948 <col:14, col:54> '<dependent type>' contains-errors         | |-DeclRefExpr 0x1530267d0 <col:14> 'int ()' Function 0x153026718 'vhost_has_feature' 'int ()'         | |-DeclRefExpr 0x1530267f0 <col:32> 'struct vhost_virtqueue *' lvalue ParmVar 0x15300e248 'vq' 'struct vhost_virtqueue *'         | `-RecoveryExpr 0x153026928 <col:36> '<dependent type>' contains-errors lvalue         `-UnaryOperator 0x153026990 <col:59, col:64> '<dependent type>' contains-errors prefix '!' cannot overflow           `-ImplicitCastExpr 0x153026978 <col:60, col:64> '<dependent type>' contains-errors <LValueToRValue>             `-RecoveryExpr 0x153026890 <col:60, col:64> '<dependent type>' contains-errors lvalue               `-DeclRefExpr 0x153026858 <col:60> 'struct vhost_virtqueue *' lvalue ParmVar 0x15300e248 'vq' 'struct vhost_virtqueue *' ","19688":"`-FunctionDecl 0x13100dd18  line:2:25 srand 'unsigned int ()' inline   `-CompoundStmt 0x13100df38 <col:33, line:9:34>     |-DeclStmt 0x13100ded0 <line:3:7, col:50>     | `-VarDecl 0x13100de20 <col:7, col:20> col:20 t 'unsigned int'     |-ReturnStmt 0x13100df20 <line:9:7, col:14>     | `-RecoveryExpr 0x13100df00 <col:14> '<dependent type>' contains-errors lvalue     `-NullStmt 0x13100df30 <col:33> ","19163":"`-FunctionDecl 0x141140fd8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x1411410d8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x141141140 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x1411411a8 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x141141080 <<invalid sloc>> Implicit 900 ","19769":"`-FunctionDecl 0x153067b38  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x153067c38 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x153067be0 <<invalid sloc>> Implicit 873 ","19490":"`-FunctionDecl 0x15200a3c8  line:1:3 invalid AcceptedSocketImpl 'int (int)'   |-ParmVarDecl 0x15200a2f0 <col:22, <invalid sloc>> col:33 invalid 'int'   `-CompoundStmt 0x15200a478 <line:3:83, col:84> ","20120":"`-FunctionDecl 0x1331284f8  line:1:1 invalid pdf_filter_SC_pattern 'int (int *, int *, const char *, int *, int, float *)'   |-ParmVarDecl 0x133128128 <col:23, col:35> col:35 invalid ctx 'int *'   |-ParmVarDecl 0x1331281a8 <col:40, col:55> col:55 invalid proc 'int *'   |-ParmVarDecl 0x133128228 <col:61, col:73> col:73 used name 'const char *'   |-ParmVarDecl 0x1331282a8 <col:79, col:92> col:92 invalid pat 'int *'   |-ParmVarDecl 0x133128328 <col:97, col:101> col:101 used n 'int'   |-ParmVarDecl 0x1331283d8 <col:104, col:111> col:111 used color 'float *'   `-CompoundStmt 0x1338092a8 <line:2:1, line:13:1>     |-DeclStmt 0x133808880 <line:5:2, col:7>     | `-VarDecl 0x133808818 <col:2, col:6> col:6 used i 'int'     `-CallExpr 0x133808e00 <line:6:2, col:74> '<dependent type>' contains-errors       |-DeclRefExpr 0x133808978 <col:2> 'int ()' Function 0x1338088c0 'fz_strlcpy' 'int ()'       |-CXXDependentScopeMemberExpr 0x133808ca0 <col:13, col:32> '<dependent type>' contains-errors lvalue .name       | `-CXXDependentScopeMemberExpr 0x133808c58 <col:13, col:29> '<dependent type>' contains-errors lvalue .SC       |   `-CXXDependentScopeMemberExpr 0x133808c10 <col:13, col:21> '<dependent type>' contains-errors lvalue ->pending       |     `-RecoveryExpr 0x133808bf0 <col:13> '<dependent type>' contains-errors lvalue       |-DeclRefExpr 0x133808a88 <col:38> 'const char *' lvalue ParmVar 0x133128228 'name' 'const char *'       `-UnaryExprOrTypeTraitExpr 0x133808de0 <col:44, col:70> 'unsigned long' contains-errors sizeof         `-CXXDependentScopeMemberExpr 0x133808d98 <col:51, col:70> '<dependent type>' contains-errors lvalue .name           `-CXXDependentScopeMemberExpr 0x133808d50 <col:51, col:67> '<dependent type>' contains-errors lvalue .SC             `-CXXDependentScopeMemberExpr 0x133808d08 <col:51, col:59> '<dependent type>' contains-errors lvalue ->pending               `-RecoveryExpr 0x133808ce8 <col:51> '<dependent type>' contains-errors lvalue ","19306":"`-FunctionDecl 0x13580de38  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x13580dd58 <col:8> col:8 OptimizePipeline 'int'   |-ParmVarDecl 0x13580dcd8 <col:26> col:26 AddFieldsThenSortPushedDown 'int'   `-CompoundStmt 0x1351230d8 <col:55, line:21:1>     |-DeclStmt 0x13580e008 <line:2:5, col:29>     | `-VarDecl 0x13580df50 <col:5, col:21> col:10 used pipeline 'int' auto cinit     |   `-RecoveryExpr 0x13580dfe8 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x135122890 <line:8:5, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x13580e130 <col:5> 'int ()' Function 0x13580e078 'ASSERT_EQ' 'int ()'     | |-IntegerLiteral 0x13580e150 <col:15> 'unsigned int' 3     | `-CallExpr 0x135122870 <col:19, col:47> '<dependent type>' contains-errors     |   `-CXXDependentScopeMemberExpr 0x135122828 <col:19, col:42> '<dependent type>' contains-errors lvalue .size     |     `-CallExpr 0x135122808 <col:19, col:40> '<dependent type>' contains-errors     |       `-RecoveryExpr 0x1351227e0 <col:19, col:29> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x13580e170 <col:19> 'int' contains-errors lvalue Var 0x13580df50 'pipeline' 'int'     |-CallExpr 0x135122920 <line:10:5, col:32> '<dependent type>' contains-errors     | `-RecoveryExpr 0x1351228f8 <col:5, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x1351228c0 <col:5> 'int' contains-errors lvalue Var 0x13580df50 'pipeline' 'int'     |-DeclStmt 0x135122a40 <line:13:5, col:50>     | `-VarDecl 0x135122958 <col:5, col:49> col:10 used serialized 'int' auto cinit     |   `-CallExpr 0x135122a20 <col:23, col:49> '<dependent type>' contains-errors     |     `-RecoveryExpr 0x1351229f8 <col:23, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1351229c0 <col:23> 'int' contains-errors lvalue Var 0x13580df50 'pipeline' 'int'     `-CallExpr 0x135122b00 <line:14:5, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x135122a58 <col:5> 'int ()' Function 0x13580e078 'ASSERT_EQ' 'int ()'       |-IntegerLiteral 0x135122a78 <col:15> 'unsigned int' 3       `-CallExpr 0x135122ae0 <col:19, col:35> '<dependent type>' contains-errors         `-RecoveryExpr 0x135122ab8 <col:19, col:30> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x135122a98 <col:19> 'int' contains-errors lvalue Var 0x135122958 'serialized' 'int' ","19345":"`-FunctionDecl 0x147141c88  col:6 implicit used strncmp 'int (const char *, const char *, unsigned long)' extern   |-ParmVarDecl 0x147141d88 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x147141df0 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x147141e58 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x147141d30 <<invalid sloc>> Implicit 888 ","19788":"`-FunctionDecl 0x148809298  col:3 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x148809398 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x148809340 <<invalid sloc>> Implicit 902 ","19925":"`-FunctionDecl 0x156026740  line:1:13 svm_set_gdt 'void (struct kvm_vcpu *, struct desc_ptr *)' static   |-ParmVarDecl 0x15600e248 <col:25, col:42> col:42 used vcpu 'struct kvm_vcpu *'   |-ParmVarDecl 0x156026628 <col:48, col:65> col:65 used dt 'struct desc_ptr *'   `-CompoundStmt 0x1560271b8 <line:2:1, line:8:1>     |-DeclStmt 0x156026c38 <line:3:2, col:37>     | |-RecordDecl 0x156026840 <col:2, col:9> col:9 struct vcpu_svm     | `-VarDecl 0x1560269a8 <col:2, col:36> col:19 used svm 'struct vcpu_svm *' cinit     |   `-ImplicitCastExpr 0x156026c08 <col:25, col:36> 'struct vcpu_svm *' <IntegralToPointer>     |     `-CallExpr 0x156026bc8 <col:25, col:36> 'int'     |       |-ImplicitCastExpr 0x156026bb0 <col:25> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x156026b40 <col:25> 'int ()' Function 0x156026a88 'to_svm' 'int ()'     |       `-ImplicitCastExpr 0x156026bf0 <col:32> 'struct kvm_vcpu *' <LValueToRValue>     |         `-DeclRefExpr 0x156026b60 <col:32> 'struct kvm_vcpu *' lvalue ParmVar 0x15600e248 'vcpu' 'struct kvm_vcpu *'     |-BinaryOperator 0x156026de8 <line:5:2, col:35> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x156026d40 <col:2, col:23> '<dependent type>' contains-errors lvalue .limit     | | `-CXXDependentScopeMemberExpr 0x156026cf8 <col:2, col:18> '<dependent type>' contains-errors lvalue .gdtr     | |   `-CXXDependentScopeMemberExpr 0x156026cb0 <col:2, col:13> '<dependent type>' contains-errors lvalue ->save     | |     `-RecoveryExpr 0x156026c88 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x156026c50 <col:2> 'struct vcpu_svm *' lvalue Var 0x1560269a8 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x156026dc0 <col:31, col:35> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x156026d88 <col:31> 'struct desc_ptr *' lvalue ParmVar 0x156026628 'dt' 'struct desc_ptr *'     |-BinaryOperator 0x156026fa0 <line:6:2, col:34> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x156026ef8 <col:2, col:23> '<dependent type>' contains-errors lvalue .base     | | `-CXXDependentScopeMemberExpr 0x156026eb0 <col:2, col:18> '<dependent type>' contains-errors lvalue .gdtr     | |   `-CXXDependentScopeMemberExpr 0x156026e68 <col:2, col:13> '<dependent type>' contains-errors lvalue ->save     | |     `-RecoveryExpr 0x156026e40 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x156026e08 <col:2> 'struct vcpu_svm *' lvalue Var 0x1560269a8 'svm' 'struct vcpu_svm *'     | `-RecoveryExpr 0x156026f78 <col:30, col:34> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x156026f40 <col:30> 'struct desc_ptr *' lvalue ParmVar 0x156026628 'dt' 'struct desc_ptr *'     `-CallExpr 0x156027188 <line:7:2, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x1560270a0 <col:2> 'int ()' Function 0x156026fe8 'vmcb_mark_dirty' 'int ()'       |-RecoveryExpr 0x1560270f8 <col:18, col:23> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x1560270c0 <col:18> 'struct vcpu_svm *' lvalue Var 0x1560269a8 'svm' 'struct vcpu_svm *'       `-RecoveryExpr 0x156027168 <col:29> '<dependent type>' contains-errors lvalue ","19504":"`-FunctionDecl 0x11d128280  line:1:6 invalid js_pushobject 'void (int *, int *)'   |-ParmVarDecl 0x11d128128 <col:20, col:30> col:30 invalid J 'int *'   |-ParmVarDecl 0x11d1281a8 <col:33, col:44> col:44 invalid v 'int *'   `-CompoundStmt 0x11d128610 <line:2:1, line:7:1>     |-CallExpr 0x11d128518 <line:3:2, col:14> 'int'     | |-ImplicitCastExpr 0x11d128500 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x11d128490 <col:2> 'int ()' Function 0x11d1283d8 'CHECKSTACK' 'int ()'     | `-IntegerLiteral 0x11d1284b0 <col:13> 'int' 1     `-UnaryOperator 0x11d1285f8 <line:6:2, col:4> '<dependent type>' contains-errors prefix '++' cannot overflow       `-RecoveryExpr 0x11d1285d8 <col:4> '<dependent type>' contains-errors lvalue ","19724":"`-FunctionDecl 0x1379268e8  line:1:1 invalid virDomainChrSourceDefFormat 'int (int, int, unsigned int)'   |-ParmVarDecl 0x1379266f0 <col:29, col:42> col:42 invalid buf 'int'   |-ParmVarDecl 0x137926770 <line:2:29, col:54> col:54 invalid def 'int'   |-ParmVarDecl 0x1379267f0 <line:3:29, col:42> col:42 used flags 'unsigned int'   `-CompoundStmt 0x14100ba68 <line:4:1, line:115:1>     |-CallExpr 0x137926b80 <line:5:5, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137926b00 <col:5> 'int ()' Function 0x137926a48 'g_auto' 'int ()'     | `-RecoveryExpr 0x137926b60 <col:12> '<dependent type>' contains-errors lvalue     |-CallExpr 0x137926c40 <line:6:5, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x137926bc0 <col:5> 'int ()' Function 0x137926a48 'g_auto' 'int ()'     | `-RecoveryExpr 0x137926c20 <col:12> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x13793fe00 <line:8:5, line:103:5>     | |-RecoveryExpr 0x137926dc8 <line:8:13, col:36> 'int' contains-errors     | `-CompoundStmt 0x14100b568 <col:42, line:103:5>     |   |-BreakStmt 0x13793fea0 <line:15:9>     |   |-IfStmt 0x137940ad8 <line:21:9, line:34:9>     |   | |-RecoveryExpr 0x137940058 <line:21:13, line:23:55> '_Bool' contains-errors     |   | `-CompoundStmt 0x137940ac8 <col:58, line:34:9>     |   |-BreakStmt 0x137940af8 <line:35:9>     |   |-CallExpr 0x137940c58 <line:38:9, line:39:52> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x137940b00 <line:38:9> 'int ()' Function 0x1379400a0 'virBufferEscapeString' 'int ()'     |   | |-RecoveryExpr 0x137940b20 <col:31> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x137940b40 <col:36> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x137940c10 <line:39:31, col:46> '<dependent type>' contains-errors lvalue .master     |   |   `-CXXDependentScopeMemberExpr 0x137940bc8 <col:31, col:41> '<dependent type>' contains-errors lvalue .nmdm     |   |     `-CXXDependentScopeMemberExpr 0x137940b80 <col:31, col:36> '<dependent type>' contains-errors lvalue ->data     |   |       `-RecoveryExpr 0x137940b60 <col:31> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x141009000 <line:40:9, col:63> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x137940c90 <col:9> 'int ()' Function 0x1379400a0 'virBufferEscapeString' 'int ()'     |   | |-RecoveryExpr 0x137940cb0 <col:31> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x137940cd0 <col:36> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x137940da0 <col:43, col:58> '<dependent type>' contains-errors lvalue .slave     |   |   `-CXXDependentScopeMemberExpr 0x137940d58 <col:43, col:53> '<dependent type>' contains-errors lvalue .nmdm     |   |     `-CXXDependentScopeMemberExpr 0x137940d10 <col:43, col:48> '<dependent type>' contains-errors lvalue ->data     |   |       `-RecoveryExpr 0x137940cf0 <col:43> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x141009038 <line:41:9>     |   |-IfStmt 0x1410097a0 <line:44:9, line:49:9>     |   | |-BinaryOperator 0x141009230 <line:44:13, col:56> 'int' contains-errors '||'     |   | | |-CXXDependentScopeMemberExpr 0x1410090f0 <col:13, col:27> '<dependent type>' contains-errors lvalue .bindService     |   | | | `-CXXDependentScopeMemberExpr 0x1410090a8 <col:13, col:23> '<dependent type>' contains-errors lvalue .udp     |   | | |   `-CXXDependentScopeMemberExpr 0x141009060 <col:13, col:18> '<dependent type>' contains-errors lvalue ->data     |   | | |     `-RecoveryExpr 0x141009040 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x1410091e8 <col:42, col:56> '<dependent type>' contains-errors lvalue .bindHost     |   | |   `-CXXDependentScopeMemberExpr 0x1410091a0 <col:42, col:52> '<dependent type>' contains-errors lvalue .udp     |   | |     `-CXXDependentScopeMemberExpr 0x141009158 <col:42, col:47> '<dependent type>' contains-errors lvalue ->data     |   | |       `-RecoveryExpr 0x141009138 <col:42> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x141009770 <col:66, line:49:9>     |   |   |-CallExpr 0x141009390 <line:45:13, col:39> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x141009330 <col:13> 'int ()' Function 0x141009278 'virBufferAddLit' 'int ()'     |   |   | |-RecoveryExpr 0x141009350 <col:29> '<dependent type>' contains-errors lvalue     |   |   | `-StringLiteral 0x141009370 <col:34> 'char[4]' lvalue \"STR\"     |   |   |-CallExpr 0x141009518 <line:46:13, col:69> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1410093c0 <col:13> 'int ()' Function 0x1379400a0 'virBufferEscapeString' 'int ()'     |   |   | |-RecoveryExpr 0x1410093e0 <col:35> '<dependent type>' contains-errors lvalue     |   |   | |-StringLiteral 0x141009400 <col:40> 'char[4]' lvalue \"STR\"     |   |   | `-CXXDependentScopeMemberExpr 0x1410094d0 <col:47, col:61> '<dependent type>' contains-errors lvalue .bindHost     |   |   |   `-CXXDependentScopeMemberExpr 0x141009488 <col:47, col:57> '<dependent type>' contains-errors lvalue .udp     |   |   |     `-CXXDependentScopeMemberExpr 0x141009440 <col:47, col:52> '<dependent type>' contains-errors lvalue ->data     |   |   |       `-RecoveryExpr 0x141009420 <col:47> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x1410096a8 <line:47:13, col:72> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x141009550 <col:13> 'int ()' Function 0x1379400a0 'virBufferEscapeString' 'int ()'     |   |   | |-RecoveryExpr 0x141009570 <col:35> '<dependent type>' contains-errors lvalue     |   |   | |-StringLiteral 0x141009590 <col:40> 'char[4]' lvalue \"STR\"     |   |   | `-CXXDependentScopeMemberExpr 0x141009660 <col:47, col:61> '<dependent type>' contains-errors lvalue .bindService     |   |   |   `-CXXDependentScopeMemberExpr 0x141009618 <col:47, col:57> '<dependent type>' contains-errors lvalue .udp     |   |   |     `-CXXDependentScopeMemberExpr 0x1410095d0 <col:47, col:52> '<dependent type>' contains-errors lvalue ->data     |   |   |       `-RecoveryExpr 0x1410095b0 <col:47> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x141009740 <line:48:13, col:39> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x1410096e0 <col:13> 'int ()' Function 0x141009278 'virBufferAddLit' 'int ()'     |   |     |-RecoveryExpr 0x141009700 <col:29> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x141009720 <col:34> 'char[4]' lvalue \"STR\"     |   |-IfStmt 0x141009e40 <line:51:9, line:56:9>     |   | |-BinaryOperator 0x1410099b0 <line:51:13, col:59> 'int' contains-errors '||'     |   | | |-CXXDependentScopeMemberExpr 0x141009870 <col:13, col:27> '<dependent type>' contains-errors lvalue .connectService     |   | | | `-CXXDependentScopeMemberExpr 0x141009828 <col:13, col:23> '<dependent type>' contains-errors lvalue .udp     |   | | |   `-CXXDependentScopeMemberExpr 0x1410097e0 <col:13, col:18> '<dependent type>' contains-errors lvalue ->data     |   | | |     `-RecoveryExpr 0x1410097c0 <col:13> '<dependent type>' contains-errors lvalue     |   | | `-CXXDependentScopeMemberExpr 0x141009968 <col:45, col:59> '<dependent type>' contains-errors lvalue .connectHost     |   | |   `-CXXDependentScopeMemberExpr 0x141009920 <col:45, col:55> '<dependent type>' contains-errors lvalue .udp     |   | |     `-CXXDependentScopeMemberExpr 0x1410098d8 <col:45, col:50> '<dependent type>' contains-errors lvalue ->data     |   | |       `-RecoveryExpr 0x1410098b8 <col:45> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x141009e10 <col:72, line:56:9>     |   |   |-CallExpr 0x141009a30 <line:52:13, col:39> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x1410099d0 <col:13> 'int ()' Function 0x141009278 'virBufferAddLit' 'int ()'     |   |   | |-RecoveryExpr 0x1410099f0 <col:29> '<dependent type>' contains-errors lvalue     |   |   | `-StringLiteral 0x141009a10 <col:34> 'char[4]' lvalue \"STR\"     |   |   |-CallExpr 0x141009bb8 <line:53:13, col:72> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x141009a60 <col:13> 'int ()' Function 0x1379400a0 'virBufferEscapeString' 'int ()'     |   |   | |-RecoveryExpr 0x141009a80 <col:35> '<dependent type>' contains-errors lvalue     |   |   | |-StringLiteral 0x141009aa0 <col:40> 'char[4]' lvalue \"STR\"     |   |   | `-CXXDependentScopeMemberExpr 0x141009b70 <col:47, col:61> '<dependent type>' contains-errors lvalue .connectHost     |   |   |   `-CXXDependentScopeMemberExpr 0x141009b28 <col:47, col:57> '<dependent type>' contains-errors lvalue .udp     |   |   |     `-CXXDependentScopeMemberExpr 0x141009ae0 <col:47, col:52> '<dependent type>' contains-errors lvalue ->data     |   |   |       `-RecoveryExpr 0x141009ac0 <col:47> '<dependent type>' contains-errors lvalue     |   |   |-CallExpr 0x141009d48 <line:54:13, col:75> '<dependent type>' contains-errors     |   |   | |-DeclRefExpr 0x141009bf0 <col:13> 'int ()' Function 0x1379400a0 'virBufferEscapeString' 'int ()'     |   |   | |-RecoveryExpr 0x141009c10 <col:35> '<dependent type>' contains-errors lvalue     |   |   | |-StringLiteral 0x141009c30 <col:40> 'char[4]' lvalue \"STR\"     |   |   | `-CXXDependentScopeMemberExpr 0x141009d00 <col:47, col:61> '<dependent type>' contains-errors lvalue .connectService     |   |   |   `-CXXDependentScopeMemberExpr 0x141009cb8 <col:47, col:57> '<dependent type>' contains-errors lvalue .udp     |   |   |     `-CXXDependentScopeMemberExpr 0x141009c70 <col:47, col:52> '<dependent type>' contains-errors lvalue ->data     |   |   |       `-RecoveryExpr 0x141009c50 <col:47> '<dependent type>' contains-errors lvalue     |   |   `-CallExpr 0x141009de0 <line:55:13, col:39> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x141009d80 <col:13> 'int ()' Function 0x141009278 'virBufferAddLit' 'int ()'     |   |     |-RecoveryExpr 0x141009da0 <col:29> '<dependent type>' contains-errors lvalue     |   |     `-StringLiteral 0x141009dc0 <col:34> 'char[4]' lvalue \"STR\"     |   |-BreakStmt 0x141009e60 <line:57:9>     |   |-CallExpr 0x14100ad28 <line:78:9, line:80:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14100aaa8 <line:78:9> 'int ()' Function 0x137940480 'virBufferAsprintf' 'int ()'     |   | |-RecoveryExpr 0x14100aac8 <col:27> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14100aae8 <col:32> 'char[4]' lvalue \"STR\"     |   | `-CallExpr 0x14100ad00 <line:79:27, line:80:53> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14100abe8 <line:79:27> 'int ()' Function 0x14100ab30 'virDomainChrTcpProtocolTypeToString' 'int ()'     |   |   `-CXXDependentScopeMemberExpr 0x14100acb8 <line:80:31, col:45> '<dependent type>' contains-errors lvalue .protocol     |   |     `-CXXDependentScopeMemberExpr 0x14100ac70 <col:31, col:41> '<dependent type>' contains-errors lvalue .tcp     |   |       `-CXXDependentScopeMemberExpr 0x14100ac28 <col:31, col:36> '<dependent type>' contains-errors lvalue ->data     |   |         `-RecoveryExpr 0x14100ac08 <col:31> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x14100ad60 <line:81:9>     |   |-IfStmt 0x14100b3a8 <line:84:9, line:95:9>     |   | |-CXXDependentScopeMemberExpr 0x14100ae18 <line:84:13, col:27> '<dependent type>' contains-errors lvalue .path     |   | | `-CXXDependentScopeMemberExpr 0x14100add0 <col:13, col:23> '<dependent type>' contains-errors lvalue .nix     |   | |   `-CXXDependentScopeMemberExpr 0x14100ad88 <col:13, col:18> '<dependent type>' contains-errors lvalue ->data     |   | |     `-RecoveryExpr 0x14100ad68 <col:13> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x14100b398 <col:33, line:95:9>     |   |-BreakStmt 0x14100b3c8 <line:96:9>     |   |-CallExpr 0x14100b528 <line:99:9, line:100:58> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14100b3d0 <line:99:9> 'int ()' Function 0x1379400a0 'virBufferEscapeString' 'int ()'     |   | |-RecoveryExpr 0x14100b3f0 <col:31> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14100b410 <col:36> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x14100b4e0 <line:100:31, col:51> '<dependent type>' contains-errors lvalue .channel     |   |   `-CXXDependentScopeMemberExpr 0x14100b498 <col:31, col:41> '<dependent type>' contains-errors lvalue .spiceport     |   |     `-CXXDependentScopeMemberExpr 0x14100b450 <col:31, col:36> '<dependent type>' contains-errors lvalue ->data     |   |       `-RecoveryExpr 0x14100b430 <col:31> '<dependent type>' contains-errors lvalue     |   `-BreakStmt 0x14100b560 <line:101:9>     |-IfStmt 0x14100ba18 <line:105:5, line:112:5>     | |-CXXDependentScopeMemberExpr 0x14100b610 <line:105:9, col:14> '<dependent type>' contains-errors lvalue ->logfile     | | `-RecoveryExpr 0x14100b5f0 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14100b9f0 <col:23, line:112:5>     |   |-CallExpr 0x14100b720 <line:106:9, col:55> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14100b658 <col:9> 'int ()' Function 0x1379400a0 'virBufferEscapeString' 'int ()'     |   | |-RecoveryExpr 0x14100b678 <col:31> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x14100b698 <col:36> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x14100b6d8 <col:43, col:48> '<dependent type>' contains-errors lvalue ->logfile     |   |   `-RecoveryExpr 0x14100b6b8 <col:43> '<dependent type>' contains-errors lvalue     |   |-IfStmt 0x14100b940 <line:107:9, line:110:9>     |   | |-RecoveryExpr 0x14100b7c0 <line:107:13, col:31> '_Bool' contains-errors     |   | `-CompoundStmt 0x14100b928 <col:59, line:110:9>     |   |   `-CallExpr 0x14100b8f0 <line:108:13, line:109:76> '<dependent type>' contains-errors     |   |     |-DeclRefExpr 0x14100b7e0 <line:108:13> 'int ()' Function 0x137940480 'virBufferAsprintf' 'int ()'     |   |     |-RecoveryExpr 0x14100b800 <col:31> '<dependent type>' contains-errors lvalue     |   |     |-StringLiteral 0x14100b820 <col:36> 'char[4]' lvalue \"STR\"     |   |     `-CallExpr 0x14100b8c8 <line:109:31, col:75> '<dependent type>' contains-errors     |   |       |-DeclRefExpr 0x14100b840 <col:31> 'int ()' Function 0x1379405a0 'virTristateSwitchTypeToString' 'int ()'     |   |       `-CXXDependentScopeMemberExpr 0x14100b880 <col:61, col:66> '<dependent type>' contains-errors lvalue ->logappend     |   |         `-RecoveryExpr 0x14100b860 <col:61> '<dependent type>' contains-errors lvalue     |   `-CallExpr 0x14100b9c0 <line:111:9, col:35> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14100b960 <col:9> 'int ()' Function 0x141009278 'virBufferAddLit' 'int ()'     |     |-RecoveryExpr 0x14100b980 <col:25> '<dependent type>' contains-errors lvalue     |     `-StringLiteral 0x14100b9a0 <col:30> 'char[4]' lvalue \"STR\"     `-ReturnStmt 0x14100ba58 <line:114:5, col:12>       `-IntegerLiteral 0x14100ba38 <col:12> 'int' 0 ","20124":"`-FunctionDecl 0x14c80e358  line:1:12 cit_get_packet_size 'int (struct gspca_dev *)' static   |-ParmVarDecl 0x14c80e248 <col:32, col:50> col:50 used gspca_dev 'struct gspca_dev *'   `-CompoundStmt 0x14c82b660 <line:2:1, line:14:1>     |-DeclStmt 0x14c82aa38 <line:3:2, col:32>     | |-RecordDecl 0x14c82a850 <col:2, col:9> col:9 struct usb_host_interface     | `-VarDecl 0x14c82a9b8 <col:2, col:29> col:29 used alt 'struct usb_host_interface *'     |-DeclStmt 0x14c82ac38 <line:4:2, col:28>     | |-RecordDecl 0x14c82aa50 <col:2, col:9> col:9 struct usb_interface     | `-VarDecl 0x14c82abb8 <col:2, col:24> col:24 used intf 'struct usb_interface *'     |-BinaryOperator 0x14c82aeb0 <line:6:2, col:57> 'struct usb_interface *' contains-errors '='     | |-DeclRefExpr 0x14c82ac50 <col:2> 'struct usb_interface *' lvalue Var 0x14c82abb8 'intf' 'struct usb_interface *'     | `-CallExpr 0x14c82ae80 <col:9, col:57> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c82ada0 <col:9> 'int ()' Function 0x14c82ace8 'usb_ifnum_to_if' 'int ()'     |   |-RecoveryExpr 0x14c82adf8 <col:25, col:36> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x14c82adc0 <col:25> 'struct gspca_dev *' lvalue ParmVar 0x14c80e248 'gspca_dev' 'struct gspca_dev *'     |   `-RecoveryExpr 0x14c82ae58 <col:41, col:52> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c82ae20 <col:41> 'struct gspca_dev *' lvalue ParmVar 0x14c80e248 'gspca_dev' 'struct gspca_dev *'     |-BinaryOperator 0x14c82b0a0 <line:7:2, col:53> 'struct usb_host_interface *' contains-errors '='     | |-DeclRefExpr 0x14c82aed0 <col:2> 'struct usb_host_interface *' lvalue Var 0x14c82a9b8 'alt' 'struct usb_host_interface *'     | `-CallExpr 0x14c82b070 <col:8, col:53> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x14c82afd0 <col:8> 'int ()' Function 0x14c82af18 'usb_altnum_to_altsetting' 'int ()'     |   |-DeclRefExpr 0x14c82aff0 <col:33> 'struct usb_interface *' lvalue Var 0x14c82abb8 'intf' 'struct usb_interface *'     |   `-RecoveryExpr 0x14c82b048 <col:39, col:50> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14c82b010 <col:39> 'struct gspca_dev *' lvalue ParmVar 0x14c80e248 'gspca_dev' 'struct gspca_dev *'     |-IfStmt 0x14c82b3c0 <line:8:2, line:11:2>     | |-UnaryOperator 0x14c82b0f8 <line:8:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14c82b0e0 <col:7> 'struct usb_host_interface *' <LValueToRValue>     | |   `-DeclRefExpr 0x14c82b0c0 <col:7> 'struct usb_host_interface *' lvalue Var 0x14c82a9b8 'alt' 'struct usb_host_interface *'     | `-CompoundStmt 0x14c82b3a0 <col:12, line:11:2>     |   |-CallExpr 0x14c82b2b8 <line:9:3, col:15> 'int'     |   | |-ImplicitCastExpr 0x14c82b2a0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x14c82b1f0 <col:3> 'int ()' Function 0x14c82b138 'pr_err' 'int ()'     |   | `-ImplicitCastExpr 0x14c82b2e0 <col:10> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x14c82b250 <col:10> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x14c82b390 <line:10:3, col:11>     |     `-UnaryOperator 0x14c82b378 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x14c82b360 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x14c82b340 <col:11> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14c82b650 <line:13:2, col:57>       `-CallExpr 0x14c82b628 <col:9, col:57> '<dependent type>' contains-errors         |-DeclRefExpr 0x14c82b4c0 <col:9> 'int ()' Function 0x14c82b408 'le16_to_cpu' 'int ()'         `-CXXDependentScopeMemberExpr 0x14c82b5e0 <col:21, col:43> '<dependent type>' contains-errors lvalue .wMaxPacketSize           `-CXXDependentScopeMemberExpr 0x14c82b598 <col:21, col:38> '<dependent type>' contains-errors lvalue .desc             `-ArraySubscriptExpr 0x14c82b578 <col:21, col:36> '<dependent type>' contains-errors lvalue               |-ImplicitCastExpr 0x14c82b560 <col:21, col:26> '<dependent type>' contains-errors <LValueToRValue>               | `-RecoveryExpr 0x14c82b518 <col:21, col:26> '<dependent type>' contains-errors lvalue               |   `-DeclRefExpr 0x14c82b4e0 <col:21> 'struct usb_host_interface *' lvalue Var 0x14c82a9b8 'alt' 'struct usb_host_interface *'               `-IntegerLiteral 0x14c82b540 <col:35> 'int' 0 ","19250":"`-FunctionDecl 0x154940f38  line:1:12 hhf_init 'int (struct Qdisc *, struct nlattr *, struct netlink_ext_ack *)' static   |-ParmVarDecl 0x154928848 <col:21, col:35> col:35 used sch 'struct Qdisc *'   |-ParmVarDecl 0x154940c28 <col:40, col:55> col:55 used opt 'struct nlattr *'   |-ParmVarDecl 0x154940df8 <line:2:7, col:31> col:31 used extack 'struct netlink_ext_ack *'   `-CompoundStmt 0x1549446d0 <line:3:1, line:72:1>     |-DeclStmt 0x154941438 <line:4:2, col:44>     | |-RecordDecl 0x154941040 <col:2, col:9> col:9 struct hhf_sched_data     | `-VarDecl 0x1549411a8 <col:2, col:43> col:25 used q 'struct hhf_sched_data *' cinit     |   `-ImplicitCastExpr 0x154941408 <col:29, col:43> 'struct hhf_sched_data *' <IntegralToPointer>     |     `-CallExpr 0x1549413c8 <col:29, col:43> 'int'     |       |-ImplicitCastExpr 0x1549413b0 <col:29> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x154941340 <col:29> 'int ()' Function 0x154941288 'qdisc_priv' 'int ()'     |       `-ImplicitCastExpr 0x1549413f0 <col:40> 'struct Qdisc *' <LValueToRValue>     |         `-DeclRefExpr 0x154941360 <col:40> 'struct Qdisc *' lvalue ParmVar 0x154928848 'sch' 'struct Qdisc *'     |-DeclStmt 0x1549414d0 <line:5:2, col:7>     | `-VarDecl 0x154941468 <col:2, col:6> col:6 used i 'int'     |-BinaryOperator 0x154941568 <line:7:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x154941520 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1549414e8 <col:2> 'struct Qdisc *' lvalue ParmVar 0x154928848 'sch' 'struct Qdisc *'     | `-IntegerLiteral 0x154941548 <col:15> 'int' 1000     |-BinaryOperator 0x1549418a0 <line:8:2, col:40> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1549415c0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x154941588 <col:2> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     | `-CallExpr 0x154941878 <col:15, col:40> 'int'     |   |-ImplicitCastExpr 0x154941860 <col:15> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1549416c8 <col:15> 'int ()' Function 0x154941610 'psched_mtu' 'int ()'     |   `-CallExpr 0x154941820 <col:26, col:39> 'int'     |     |-ImplicitCastExpr 0x154941808 <col:26> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x1549417c8 <col:26> 'int ()' Function 0x154941710 'qdisc_dev' 'int ()'     |     `-ImplicitCastExpr 0x154941848 <col:36> 'struct Qdisc *' <LValueToRValue>     |       `-DeclRefExpr 0x1549417e8 <col:36> 'struct Qdisc *' lvalue ParmVar 0x154928848 'sch' 'struct Qdisc *'     |-BinaryOperator 0x154941a58 <line:9:2, col:32> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1549418f8 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1549418c0 <col:2> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     | `-CallExpr 0x154941a38 <col:20, col:32> 'int'     |   `-ImplicitCastExpr 0x154941a20 <col:20> 'int (*)()' <FunctionToPointerDecay>     |     `-DeclRefExpr 0x154941a00 <col:20> 'int ()' Function 0x154941948 'prandom_u32' 'int ()'     |-CallExpr 0x154009600 <line:10:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154941b58 <col:2> 'int ()' Function 0x154941aa0 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x154941bd8 <col:17, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x154941bb0 <col:18, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x154941b78 <col:18> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     |-CallExpr 0x1540096c0 <line:11:2, col:32> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154009628 <col:2> 'int ()' Function 0x154941aa0 'INIT_LIST_HEAD' 'int ()'     | `-UnaryOperator 0x1540096a8 <col:17, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x154009680 <col:18, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x154009648 <col:18> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     |-BinaryOperator 0x154009800 <line:14:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x154009720 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1540096e8 <col:2> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     | `-BinaryOperator 0x1540097e0 <col:25, col:30> '<dependent type>' contains-errors '\/'     |   |-RecoveryExpr 0x1540097c0 <col:25> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x154009760 <col:30> 'int' 25     |-BinaryOperator 0x1540098a0 <line:15:2, col:23> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x154009858 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x154009820 <col:2> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     | `-IntegerLiteral 0x154009880 <col:23> 'int' 131072     |-BinaryOperator 0x154009978 <line:16:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1540098f8 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1540098c0 <col:2> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     | `-RecoveryExpr 0x154009958 <col:25> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154009a18 <line:17:2, col:25> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1540099d0 <col:2, col:5> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x154009998 <col:2> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     | `-IntegerLiteral 0x1540099f8 <col:25> 'int' 2     |-IfStmt 0x154009dc0 <line:19:2, line:24:2>     | |-ImplicitCastExpr 0x154009a58 <line:19:6> 'struct nlattr *' <LValueToRValue>     | | `-DeclRefExpr 0x154009a38 <col:6> 'struct nlattr *' lvalue ParmVar 0x154940c28 'opt' 'struct nlattr *'     | `-CompoundStmt 0x154009da0 <col:11, line:24:2>     |   |-DeclStmt 0x154009ce8 <line:20:3, col:41>     |   | `-VarDecl 0x154009a88 <col:3, col:40> col:7 used err 'int' cinit     |   |   `-CallExpr 0x154009c68 <col:13, col:40> 'int'     |   |     |-ImplicitCastExpr 0x154009c50 <col:13> 'int (*)()' <FunctionToPointerDecay>     |   |     | `-DeclRefExpr 0x154009bd0 <col:13> 'int ()' Function 0x154009b18 'hhf_change' 'int ()'     |   |     |-ImplicitCastExpr 0x154009ca0 <col:24> 'struct Qdisc *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x154009bf0 <col:24> 'struct Qdisc *' lvalue ParmVar 0x154928848 'sch' 'struct Qdisc *'     |   |     |-ImplicitCastExpr 0x154009cb8 <col:29> 'struct nlattr *' <LValueToRValue>     |   |     | `-DeclRefExpr 0x154009c10 <col:29> 'struct nlattr *' lvalue ParmVar 0x154940c28 'opt' 'struct nlattr *'     |   |     `-ImplicitCastExpr 0x154009cd0 <col:34> 'struct netlink_ext_ack *' <LValueToRValue>     |   |       `-DeclRefExpr 0x154009c30 <col:34> 'struct netlink_ext_ack *' lvalue ParmVar 0x154940df8 'extack' 'struct netlink_ext_ack *'     |   `-IfStmt 0x154009d80 <line:22:3, line:23:11>     |     |-ImplicitCastExpr 0x154009d20 <line:22:7> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x154009d00 <col:7> 'int' lvalue Var 0x154009a88 'err' 'int'     |     `-ReturnStmt 0x154009d70 <line:23:4, col:11>     |       `-ImplicitCastExpr 0x154009d58 <col:11> 'int' <LValueToRValue>     |         `-DeclRefExpr 0x154009d38 <col:11> 'int' lvalue Var 0x154009a88 'err' 'int'     |-IfStmt 0x154944680 <line:26:2, line:69:2>     | |-UnaryOperator 0x154009e58 <line:26:6, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x154009e40 <col:7, col:10> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x154009e18 <col:7, col:10> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x154009de0 <col:7> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     | `-CompoundStmt 0x154944650 <col:20, line:69:2>     |   |-BinaryOperator 0x15400a440 <line:37:3, col:27> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x15400a3f8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15400a3c0 <col:3> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     |   | `-IntegerLiteral 0x15400a420 <col:27> 'int' 0     |   |-BinaryOperator 0x15400a4e0 <line:38:3, col:27> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x15400a498 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15400a460 <col:3> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     |   | `-IntegerLiteral 0x15400a4c0 <col:27> 'int' 0     |   |-BinaryOperator 0x15400a580 <line:39:3, col:29> '<dependent type>' contains-errors '='     |   | |-RecoveryExpr 0x15400a538 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x15400a500 <col:3> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     |   | `-IntegerLiteral 0x15400a560 <col:29> 'int' 0     |   `-BinaryOperator 0x154943e28 <line:51:3, col:50> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x154943cc8 <col:3, col:6> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x154943c90 <col:3> 'struct hhf_sched_data *' lvalue Var 0x1549411a8 'q' 'struct hhf_sched_data *'     |     `-CallExpr 0x154943e08 <col:35, col:50> 'int'     |       `-ImplicitCastExpr 0x154943df0 <col:35> 'int (*)()' <FunctionToPointerDecay>     |         `-DeclRefExpr 0x154943dd0 <col:35> 'int ()' Function 0x154943d18 'hhf_time_stamp' 'int ()'     `-ReturnStmt 0x1549446c0 <line:71:2, col:9>       `-IntegerLiteral 0x1549446a0 <col:9> 'int' 0 ","19663":"`-FunctionDecl 0x145027430  line:2:13 invalid io_req_task_link_timeout 'void (struct io_kiocb *, int *)' static   |-ParmVarDecl 0x14500e248 <col:38, col:55> col:55 used req 'struct io_kiocb *'   |-ParmVarDecl 0x14500e318 <col:60, col:66> col:66 invalid locked 'int *'   `-CompoundStmt 0x145028260 <line:3:1, line:14:3>     |-DeclStmt 0x145027688 <line:4:2, col:43>     | `-VarDecl 0x145027578 <col:2, col:39> col:19 used prev 'struct io_kiocb *' cinit     |   `-CXXDependentScopeMemberExpr 0x145027640 <col:26, col:39> '<dependent type>' contains-errors lvalue .prev     |     `-RecoveryExpr 0x145027618 <col:26, col:31> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x1450275e0 <col:26> 'struct io_kiocb *' lvalue ParmVar 0x14500e248 'req' 'struct io_kiocb *'     |-DeclStmt 0x1450277b8 <line:5:2, col:19>     | `-VarDecl 0x1450276b8 <col:2, col:13> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x1450277a0 <col:12, col:13> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x145027788 <col:13> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x145027768 <col:13> '<dependent type>' contains-errors lvalue     `-IfStmt 0x145028230 <line:7:2, line:14:2> has_else       |-ImplicitCastExpr 0x1450277f0 <line:7:6> 'struct io_kiocb *' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x1450277d0 <col:6> 'struct io_kiocb *' contains-errors lvalue Var 0x145027578 'prev' 'struct io_kiocb *'       |-CompoundStmt 0x145028088 <col:12, line:12:2>       | |-IfStmt 0x145027b70 <line:8:3, line:9:53>       | | |-RecoveryExpr 0x1450278e8 <line:8:7, col:38> '_Bool' contains-errors       | | `-BinaryOperator 0x145027b50 <line:9:4, col:53> 'int' contains-errors '='       | |   |-DeclRefExpr 0x145027908 <col:4> 'int' contains-errors lvalue Var 0x1450276b8 'ret' 'int'       | |   `-CallExpr 0x145027b20 <col:10, col:53> '<dependent type>' contains-errors       | |     |-DeclRefExpr 0x145027a80 <col:10> 'int ()' Function 0x1450279c8 'io_try_cancel_userdata' 'int ()'       | |     |-DeclRefExpr 0x145027aa0 <col:33> 'struct io_kiocb *' lvalue ParmVar 0x14500e248 'req' 'struct io_kiocb *'       | |     `-RecoveryExpr 0x145027af8 <col:38, col:44> '<dependent type>' contains-errors lvalue       | |       `-DeclRefExpr 0x145027ac0 <col:38> 'struct io_kiocb *' contains-errors lvalue Var 0x145027578 'prev' 'struct io_kiocb *'       | |-CallExpr 0x145027ea0 <line:10:3, col:45> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x145027c70 <col:3> 'int ()' Function 0x145027bb8 'io_req_complete_post' 'int ()'       | | |-DeclRefExpr 0x145027c90 <col:24> 'struct io_kiocb *' lvalue ParmVar 0x14500e248 'req' 'struct io_kiocb *'       | | |-BinaryConditionalOperator 0x145027e60 <col:29, col:37> '<dependent type>' contains-errors       | | | |-ImplicitCastExpr 0x145027e30 <col:29> 'int' contains-errors <LValueToRValue>       | | | | `-DeclRefExpr 0x145027cb0 <col:29> 'int' contains-errors lvalue Var 0x1450276b8 'ret' 'int'       | | | |-OpaqueValueExpr 0x145027e48 <col:29> 'int' contains-errors       | | | | `-ImplicitCastExpr 0x145027e30 <col:29> 'int' contains-errors <LValueToRValue>       | | | |   `-DeclRefExpr 0x145027cb0 <col:29> 'int' contains-errors lvalue Var 0x1450276b8 'ret' 'int'       | | | |-OpaqueValueExpr 0x145027e48 <col:29> 'int' contains-errors       | | | | `-ImplicitCastExpr 0x145027e30 <col:29> 'int' contains-errors <LValueToRValue>       | | | |   `-DeclRefExpr 0x145027cb0 <col:29> 'int' contains-errors lvalue Var 0x1450276b8 'ret' 'int'       | | | `-UnaryOperator 0x145027e18 <col:36, col:37> '<dependent type>' contains-errors prefix '-' cannot overflow       | | |   `-ImplicitCastExpr 0x145027e00 <col:37> '<dependent type>' contains-errors <LValueToRValue>       | | |     `-RecoveryExpr 0x145027de0 <col:37> '<dependent type>' contains-errors lvalue       | | `-IntegerLiteral 0x145027d88 <col:44> 'int' 0       | `-CallExpr 0x145028048 <line:11:3, col:18> 'int' contains-errors       |   |-ImplicitCastExpr 0x145028030 <col:3> 'int (*)()' <FunctionToPointerDecay>       |   | `-DeclRefExpr 0x145027fb8 <col:3> 'int ()' Function 0x145027f00 'io_put_req' 'int ()'       |   `-ImplicitCastExpr 0x145028070 <col:14> 'struct io_kiocb *' contains-errors <LValueToRValue>       |     `-DeclRefExpr 0x145027fd8 <col:14> 'struct io_kiocb *' contains-errors lvalue Var 0x145027578 'prev' 'struct io_kiocb *'       `-CompoundStmt 0x145028218 <line:12:9, line:14:2>         `-CallExpr 0x1450281e0 <line:13:3, col:38> '<dependent type>' contains-errors           |-DeclRefExpr 0x1450280b0 <col:3> 'int ()' Function 0x145027bb8 'io_req_complete_post' 'int ()'           |-DeclRefExpr 0x1450280d0 <col:24> 'struct io_kiocb *' lvalue ParmVar 0x14500e248 'req' 'struct io_kiocb *'           |-UnaryOperator 0x1450281c8 <col:29, col:30> '<dependent type>' contains-errors prefix '-' cannot overflow           | `-ImplicitCastExpr 0x1450281b0 <col:30> '<dependent type>' contains-errors <LValueToRValue>           |   `-RecoveryExpr 0x145028190 <col:30> '<dependent type>' contains-errors lvalue           `-IntegerLiteral 0x145028138 <col:37> 'int' 0 ","19297":"`-FunctionDecl 0x11d944ae0  col:20 implicit used toupper 'int (int)' extern   |-ParmVarDecl 0x11d944be0 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x11d944b88 <<invalid sloc>> Implicit 933   |-NoThrowAttr 0x11d944c50 <col:20> Implicit   `-PureAttr 0x11d944c78 <col:20> Implicit ","19266":"`-FunctionDecl 0x129128250  line:1:13 invalid copy_obj_progress_cb 'void (int, void *)' static   |-ParmVarDecl 0x1291280f0 <col:34, col:40> col:40 invalid ofs 'int'   |-ParmVarDecl 0x129128170 <col:45, col:51> col:51 used param 'void *'   `-CompoundStmt 0x1291283b0 <line:2:1, line:5:1> ","20186":"`-FunctionDecl 0x13e00df88  line:1:5 __usb_get_extra_descriptor 'int (char *, unsigned int, unsigned char, void **)'   |-ParmVarDecl 0x13e00dcd8 <col:32, col:38> col:38 used buffer 'char *'   |-ParmVarDecl 0x13e00dd58 <col:46, col:55> col:55 used size 'unsigned int'   |-ParmVarDecl 0x13e00ddd8 <line:2:11, col:25> col:25 used type 'unsigned char'   |-ParmVarDecl 0x13e00de88 <col:31, col:38> col:38 used ptr 'void **'   `-CompoundStmt 0x13e028098 <line:3:1, line:27:1>     |-DeclStmt 0x13e00e288 <line:4:2, col:38>     | |-RecordDecl 0x13e00e098 <col:2, col:9> col:9 struct usb_descriptor_header     | `-VarDecl 0x13e00e208 <col:2, col:32> col:32 used header 'struct usb_descriptor_header *'     |-WhileStmt 0x13e028030 <line:6:2, line:25:2>     | |-RecoveryExpr 0x13e027930 <line:6:9, col:52> '_Bool' contains-errors     | `-CompoundStmt 0x13e027ff8 <col:55, line:25:2>     |   |-BinaryOperator 0x13e027a28 <line:7:3, col:44> 'struct usb_descriptor_header *' '='     |   | |-DeclRefExpr 0x13e027950 <col:3> 'struct usb_descriptor_header *' lvalue Var 0x13e00e208 'header' 'struct usb_descriptor_header *'     |   | `-CStyleCastExpr 0x13e027a00 <col:12, col:44> 'struct usb_descriptor_header *' <BitCast>     |   |   `-ImplicitCastExpr 0x13e0279e8 <col:44> 'char *' <LValueToRValue> part_of_explicit_cast     |   |     `-DeclRefExpr 0x13e027970 <col:44> 'char *' lvalue ParmVar 0x13e00dcd8 'buffer' 'char *'     |   |-IfStmt 0x13e027ca8 <line:9:3, line:16:3>     |   | |-BinaryOperator 0x13e027ac8 <line:9:7, col:25> 'int' contains-errors '<'     |   | | |-RecoveryExpr 0x13e027a80 <col:7, col:15> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x13e027a48 <col:7> 'struct usb_descriptor_header *' lvalue Var 0x13e00e208 'header' 'struct usb_descriptor_header *'     |   | | `-IntegerLiteral 0x13e027aa8 <col:25> 'int' 2     |   | `-CompoundStmt 0x13e027c90 <col:28, line:16:3>     |   |   `-ReturnStmt 0x13e027c80 <line:15:4, col:12>     |   |     `-UnaryOperator 0x13e027c68 <col:11, col:12> 'int' prefix '-'     |   |       `-IntegerLiteral 0x13e027c48 <col:12> 'int' 1     |   |-IfStmt 0x13e027e78 <line:18:3, line:21:3>     |   | |-BinaryOperator 0x13e027d48 <line:18:7, col:34> 'int' contains-errors '=='     |   | | |-RecoveryExpr 0x13e027d00 <col:7, col:15> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x13e027cc8 <col:7> 'struct usb_descriptor_header *' lvalue Var 0x13e00e208 'header' 'struct usb_descriptor_header *'     |   | | `-DeclRefExpr 0x13e027d28 <col:34> 'unsigned char' lvalue ParmVar 0x13e00ddd8 'type' 'unsigned char'     |   | `-CompoundStmt 0x13e027e58 <col:40, line:21:3>     |   |   |-BinaryOperator 0x13e027e08 <line:19:4, col:11> 'void *' '='     |   |   | |-UnaryOperator 0x13e027da0 <col:4, col:5> 'void *' lvalue prefix '*' cannot overflow     |   |   | | `-ImplicitCastExpr 0x13e027d88 <col:5> 'void **' <LValueToRValue>     |   |   | |   `-DeclRefExpr 0x13e027d68 <col:5> 'void **' lvalue ParmVar 0x13e00de88 'ptr' 'void **'     |   |   | `-ImplicitCastExpr 0x13e027df0 <col:11> 'void *' <BitCast>     |   |   |   `-ImplicitCastExpr 0x13e027dd8 <col:11> 'struct usb_descriptor_header *' <LValueToRValue>     |   |   |     `-DeclRefExpr 0x13e027db8 <col:11> 'struct usb_descriptor_header *' lvalue Var 0x13e00e208 'header' 'struct usb_descriptor_header *'     |   |   `-ReturnStmt 0x13e027e48 <line:20:4, col:11>     |   |     `-IntegerLiteral 0x13e027e28 <col:11> 'int' 0     |   |-CompoundAssignOperator 0x13e027f18 <line:23:3, col:21> 'char *' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   | |-DeclRefExpr 0x13e027e98 <col:3> 'char *' lvalue ParmVar 0x13e00dcd8 'buffer' 'char *'     |   | `-RecoveryExpr 0x13e027ef0 <col:13, col:21> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x13e027eb8 <col:13> 'struct usb_descriptor_header *' lvalue Var 0x13e00e208 'header' 'struct usb_descriptor_header *'     |   `-CompoundAssignOperator 0x13e027fc8 <line:24:3, col:19> 'unsigned int' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-DeclRefExpr 0x13e027f48 <col:3> 'unsigned int' lvalue ParmVar 0x13e00dd58 'size' 'unsigned int'     |     `-RecoveryExpr 0x13e027fa0 <col:11, col:19> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x13e027f68 <col:11> 'struct usb_descriptor_header *' lvalue Var 0x13e00e208 'header' 'struct usb_descriptor_header *'     `-ReturnStmt 0x13e028088 <line:26:2, col:10>       `-UnaryOperator 0x13e028070 <col:9, col:10> 'int' prefix '-'         `-IntegerLiteral 0x13e028050 <col:10> 'int' 1 ","19706":"`-FunctionDecl 0x14e1455c8  col:13 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x14e1456c8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x14e145730 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x14e145798 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x14e145670 <<invalid sloc>> Implicit 882 ","19401":"`-FunctionDecl 0x130128280  line:1:6 invalid git_index__set_ignore_case 'void (int *, int)'   |-ParmVarDecl 0x130128128 <col:33, col:44> col:44 referenced invalid index 'int *'   |-ParmVarDecl 0x1301281a8 <col:51, col:56> col:56 invalid ignore_case 'int'   `-CompoundStmt 0x1301424c0 <line:2:1, line:23:1>     |-BinaryOperator 0x1301283e8 <line:3:2, col:23> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x130128380 <col:2, col:9> '<dependent type>' contains-errors lvalue ->ignore_case     | | `-RecoveryExpr 0x130128358 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x130128338 <col:2> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     | `-RecoveryExpr 0x1301283c8 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x130141ce0 <line:5:2, line:15:2> has_else     | |-RecoveryExpr 0x130128408 <line:5:6> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x130141860 <col:19, line:10:2>     | | |-BinaryOperator 0x130128510 <line:6:3, col:32> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x130128470 <col:3, col:10> '<dependent type>' contains-errors lvalue ->entries_cmp_path     | | | | `-RecoveryExpr 0x130128448 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x130128428 <col:3> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     | | | `-RecoveryExpr 0x1301284f0 <col:32> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x130128618 <line:7:3, col:32> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x130128578 <col:3, col:10> '<dependent type>' contains-errors lvalue ->entries_search     | | | | `-RecoveryExpr 0x130128550 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x130128530 <col:3> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     | | | `-RecoveryExpr 0x1301285f8 <col:32> '<dependent type>' contains-errors lvalue     | | |-BinaryOperator 0x130128720 <line:8:3, col:32> '<dependent type>' contains-errors '='     | | | |-CXXDependentScopeMemberExpr 0x130128680 <col:3, col:10> '<dependent type>' contains-errors lvalue ->entries_search_path     | | | | `-RecoveryExpr 0x130128658 <col:3> '<dependent type>' contains-errors lvalue     | | | |   `-DeclRefExpr 0x130128638 <col:3> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     | | | `-RecoveryExpr 0x130128700 <col:32> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x130141840 <line:9:3, col:32> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x130128788 <col:3, col:10> '<dependent type>' contains-errors lvalue ->reuc_search     | |   | `-RecoveryExpr 0x130128760 <col:3> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x130128740 <col:3> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     | |   `-RecoveryExpr 0x130141820 <col:32> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x130141cb0 <line:10:9, line:15:2>     |   |-BinaryOperator 0x130141978 <line:11:3, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1301418d8 <col:3, col:10> '<dependent type>' contains-errors lvalue ->entries_cmp_path     |   | | `-RecoveryExpr 0x1301418b0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x130141890 <col:3> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     |   | `-RecoveryExpr 0x130141958 <col:32> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x130141a80 <line:12:3, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x1301419e0 <col:3, col:10> '<dependent type>' contains-errors lvalue ->entries_search     |   | | `-RecoveryExpr 0x1301419b8 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x130141998 <col:3> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     |   | `-RecoveryExpr 0x130141a60 <col:32> '<dependent type>' contains-errors lvalue     |   |-BinaryOperator 0x130141b88 <line:13:3, col:32> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x130141ae8 <col:3, col:10> '<dependent type>' contains-errors lvalue ->entries_search_path     |   | | `-RecoveryExpr 0x130141ac0 <col:3> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x130141aa0 <col:3> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     |   | `-RecoveryExpr 0x130141b68 <col:32> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x130141c90 <line:14:3, col:32> '<dependent type>' contains-errors '='     |     |-CXXDependentScopeMemberExpr 0x130141bf0 <col:3, col:10> '<dependent type>' contains-errors lvalue ->reuc_search     |     | `-RecoveryExpr 0x130141bc8 <col:3> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x130141ba8 <col:3> 'int *' lvalue ParmVar 0x130128128 'index' 'int *'     |     `-RecoveryExpr 0x130141c70 <col:32> '<dependent type>' contains-errors lvalue     |-CallExpr 0x130142030 <line:17:2, line:18:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130141e70 <line:17:2> 'int ()' Function 0x130141db8 'git_vector_set_cmp' 'int ()'     | |-UnaryOperator 0x130141ef8 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x130141eb0 <col:22, col:29> '<dependent type>' contains-errors lvalue ->entries     | |   `-RecoveryExpr 0x130141e90 <col:22> '<dependent type>' contains-errors lvalue     | `-ConditionalOperator 0x130142000 <line:18:3, col:40> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x130141f10 <col:3> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x130141fc0 <col:17> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x130141fe0 <col:40> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1301421e0 <line:19:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130142140 <col:2> 'int ()' Function 0x130142088 'git_vector_sort' 'int ()'     | `-UnaryOperator 0x1301421c8 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x130142180 <col:19, col:26> '<dependent type>' contains-errors lvalue ->entries     |     `-RecoveryExpr 0x130142160 <col:19> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1301423c8 <line:21:2, col:69> '<dependent type>' contains-errors     | |-DeclRefExpr 0x130142208 <col:2> 'int ()' Function 0x130141db8 'git_vector_set_cmp' 'int ()'     | |-UnaryOperator 0x130142290 <col:21, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x130142248 <col:22, col:29> '<dependent type>' contains-errors lvalue ->reuc     | |   `-RecoveryExpr 0x130142228 <col:22> '<dependent type>' contains-errors lvalue     | `-ConditionalOperator 0x130142398 <col:35, col:61> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x1301422a8 <col:35> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x130142358 <col:49> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x130142378 <col:61> '<dependent type>' contains-errors lvalue     `-CallExpr 0x130142498 <line:22:2, col:30> '<dependent type>' contains-errors       |-DeclRefExpr 0x1301423f8 <col:2> 'int ()' Function 0x130142088 'git_vector_sort' 'int ()'       `-UnaryOperator 0x130142480 <col:18, col:26> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x130142438 <col:19, col:26> '<dependent type>' contains-errors lvalue ->reuc           `-RecoveryExpr 0x130142418 <col:19> '<dependent type>' contains-errors lvalue ","19768":"`-FunctionDecl 0x12f01da68  line:1:1 parse_tc_delay 'int (const char *, double *)'   |-ParmVarDecl 0x12f01d8d8 <col:16, col:28> col:28 used tc 'const char *'   |-ParmVarDecl 0x12f01d988 <col:32, col:40> col:40 used delays 'double *'   `-CompoundStmt 0x12f01de40 <line:2:1, line:4:1>     `-ReturnStmt 0x12f01de30 <line:3:5, col:51>       `-CallExpr 0x12f01ddc8 <col:12, col:51> 'int'         |-ImplicitCastExpr 0x12f01ddb0 <col:12> 'int (*)()' <FunctionToPointerDecay>         | `-DeclRefExpr 0x12f01dc90 <col:12> 'int ()' Function 0x12f01dbd8 'parse_delay_value' 'int ()'         |-ImplicitCastExpr 0x12f01de00 <col:30> 'const char *' <LValueToRValue>         | `-DeclRefExpr 0x12f01dcb0 <col:30> 'const char *' lvalue ParmVar 0x12f01d8d8 'tc' 'const char *'         |-ImplicitCastExpr 0x12f01de18 <col:34> 'double *' <LValueToRValue>         | `-DeclRefExpr 0x12f01dcd0 <col:34> 'double *' lvalue ParmVar 0x12f01d988 'delays' 'double *'         `-CStyleCastExpr 0x12f01dd58 <col:42, col:50> 'int *' <NullToPointer>           `-IntegerLiteral 0x12f01dcf0 <col:50> 'int' 0 ","19990":"`-FunctionDecl 0x13d80ddd8  line:1:1 referenced testPathCanonicalize 'int (const void *)'   |-ParmVarDecl 0x13d80dd08 <col:22, col:34> col:34 used args 'const void *'   `-CompoundStmt 0x13d828ee8 <line:2:1, line:19:1>     |-DeclStmt 0x13d80e108 <line:3:5, col:55>     | |-RecordDecl 0x13d80ded0 <col:11, col:18> col:18 struct testPathCanonicalizeData     | `-VarDecl 0x13d80e038 <col:5, col:51> col:44 used data 'const struct testPathCanonicalizeData *' cinit     |   `-ImplicitCastExpr 0x13d80e0d8 <col:51> 'const struct testPathCanonicalizeData *' <BitCast>     |     `-ImplicitCastExpr 0x13d80e0c0 <col:51> 'const void *' <LValueToRValue>     |       `-DeclRefExpr 0x13d80e0a0 <col:51> 'const void *' lvalue ParmVar 0x13d80dd08 'args' 'const void *'     |-IfStmt 0x13d828e98 <line:10:5, line:16:5>     | |-CallExpr 0x13d828948 <line:10:9, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x13d828860 <col:9> 'int ()' Function 0x13d8287a8 'STRNEQ_NULLABLE' 'int ()'     | | |-RecoveryExpr 0x13d8288b8 <col:25, col:31> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x13d828880 <col:25> 'const struct testPathCanonicalizeData *' lvalue Var 0x13d80e038 'data' 'const struct testPathCanonicalizeData *'     | | `-RecoveryExpr 0x13d828928 <col:39> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d828e78 <col:47, line:16:5>     |   |-CallExpr 0x13d828de8 <line:11:9, line:13:66> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x13d828a58 <line:11:9> 'int ()' Function 0x13d8289a0 'fprintf' 'int ()'     |   | |-RecoveryExpr 0x13d828d80 <col:17> '<dependent type>' contains-errors lvalue     |   | |-StringLiteral 0x13d828ad0 <line:12:17> 'char[4]' lvalue \"STR\"     |   | |-RecoveryExpr 0x13d828b28 <line:13:17, col:23> '<dependent type>' contains-errors lvalue     |   | | `-DeclRefExpr 0x13d828af0 <col:17> 'const struct testPathCanonicalizeData *' lvalue Var 0x13d80e038 'data' 'const struct testPathCanonicalizeData *'     |   | |-CallExpr 0x13d828cb0 <col:29, col:49> '<dependent type>' contains-errors     |   | | |-DeclRefExpr 0x13d828c30 <col:29> 'int ()' Function 0x13d828b78 'NULLSTR' 'int ()'     |   | | `-RecoveryExpr 0x13d828c88 <col:37, col:43> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x13d828c50 <col:37> 'const struct testPathCanonicalizeData *' lvalue Var 0x13d80e038 'data' 'const struct testPathCanonicalizeData *'     |   | `-CallExpr 0x13d828dc0 <col:52, col:65> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13d828cd8 <col:52> 'int ()' Function 0x13d828b78 'NULLSTR' 'int ()'     |   |   `-RecoveryExpr 0x13d828da0 <col:60> '<dependent type>' contains-errors lvalue     |   `-ReturnStmt 0x13d828e68 <line:15:9, col:17>     |     `-UnaryOperator 0x13d828e50 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x13d828e30 <col:17> 'int' 1     `-ReturnStmt 0x13d828ed8 <line:18:5, col:12>       `-IntegerLiteral 0x13d828eb8 <col:12> 'int' 0 ","19149":"`-FunctionDecl 0x1579281c8  line:1:1 invalid start_pass_merged_upsample 'int (int)'   |-ParmVarDecl 0x1579280f0 <col:28, col:45> col:45 invalid cinfo 'int'   `-CompoundStmt 0x1579282f8 <line:2:1, line:9:1> ","19969":"`-FunctionDecl 0x14b00de88  line:1:1 invalid pthread_mutex_init 'int (int *, const int *)'   |-ParmVarDecl 0x14b00dd28 <col:20, col:37> col:37 invalid mutex 'int *'   |-ParmVarDecl 0x14b00dda8 <col:44, col:71> col:71 invalid attr 'const int *'   `-CompoundStmt 0x14b00e138 <line:2:1, line:5:1>     |-CallExpr 0x14b00e0e0 <line:3:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b00e0a0 <col:2> 'int ()' Function 0x14b00dfe8 'InitializeCriticalSection' 'int ()'     | `-RecoveryExpr 0x14b00e0c0 <col:28> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14b00e128 <line:4:2, col:9>       `-IntegerLiteral 0x14b00e108 <col:9> 'int' 0 ","19461":"`-FunctionDecl 0x13d82b3a8  col:3 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x13d82b4a8 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x13d82b450 <<invalid sloc>> Implicit 873 ","19478":"`-FunctionDecl 0x13800ddf8  line:1:1 invalid f_test_null_list 'int (int *)'   |-ParmVarDecl 0x13800dd28 <col:18, col:28> col:28 invalid argvars 'int *'   `-CompoundStmt 0x13800e0f0 <line:2:1, line:4:1>     `-CallExpr 0x13800e0c0 <line:3:5, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x13800e000 <col:5> 'int ()' Function 0x13800df48 'rettv_list_set' 'int ()'       |-RecoveryExpr 0x13800e080 <col:20> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x13800e0a0 <col:27> '<dependent type>' contains-errors lvalue ","19729":"`-FunctionDecl 0x12b128758  line:1:13 futex_wait_restart 'long (struct restart_block *)' static   |-ParmVarDecl 0x12b128648 <col:32, col:54> col:54 used restart 'struct restart_block *'   `-CompoundStmt 0x12b141128 <line:2:1, line:14:1>     |-IfStmt 0x12b140c70 <line:6:2, line:9:2>     | |-BinaryOperator 0x12b140b68 <line:6:6, col:29> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x12b140ac8 <col:6, col:21> '<dependent type>' contains-errors lvalue .flags     | | | `-RecoveryExpr 0x12b140aa0 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x12b140a68 <col:6> 'struct restart_block *' lvalue ParmVar 0x12b128648 'restart' 'struct restart_block *'     | | `-RecoveryExpr 0x12b140b48 <col:29> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x12b140c60 <col:48, line:9:2>     `-BinaryOperator 0x12b140d48 <line:10:2, col:16> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x12b140cc8 <col:2, col:11> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x12b140c90 <col:2> 'struct restart_block *' lvalue ParmVar 0x12b128648 'restart' 'struct restart_block *'       `-RecoveryExpr 0x12b140d28 <col:16> '<dependent type>' contains-errors lvalue ","19330":"`-FunctionDecl 0x12480de88  line:1:8 invalid gf_isom_remove_cenc_saio 'int (int *, int)'   |-ParmVarDecl 0x12480dd28 <col:33, col:45> col:45 invalid the_file 'int *'   |-ParmVarDecl 0x12480dda8 <col:55, col:59> col:59 invalid trackNumber 'int'   `-CompoundStmt 0x124827c58 <line:2:1, line:35:1>     |-IfStmt 0x12480e240 <line:6:2, col:20>     | |-UnaryOperator 0x12480e1e0 <col:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12480e1c8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12480e1a8 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x12480e230 <col:13, col:20>     |   `-RecoveryExpr 0x12480e210 <col:20> '<dependent type>' contains-errors lvalue     |-IfStmt 0x124827430 <line:9:2, line:10:10>     | |-UnaryOperator 0x12480e3d0 <line:9:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12480e3b8 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12480e398 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x124827420 <line:10:3, col:10>     |   `-RecoveryExpr 0x124827400 <col:10> '<dependent type>' contains-errors lvalue     |-ForStmt 0x124827ab0 <line:12:2, line:27:2>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-BinaryOperator 0x124827718 <line:12:14, col:49> 'int' contains-errors '<'     | | |-RecoveryExpr 0x124827668 <col:14> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x1248276f0 <col:18, col:49> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x1248275a0 <col:18> 'int ()' Function 0x1248274e8 'gf_list_count' 'int ()'     | |   `-CXXDependentScopeMemberExpr 0x1248276a8 <col:32, col:38> '<dependent type>' contains-errors lvalue ->sai_offsets     | |     `-RecoveryExpr 0x124827688 <col:32> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x124827788 <col:52, col:53> '<dependent type>' contains-errors postfix '++' cannot overflow     | | `-RecoveryExpr 0x124827768 <col:52> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x124827a98 <col:57, line:27:2>     |   `-SwitchStmt 0x1248277c0 <line:14:3, line:23:3>     |     |-RecoveryExpr 0x1248277a0 <line:14:11, col:17> 'int' contains-errors     |     `-CompoundStmt 0x124827878 <col:32, line:23:3>     |       |-CaseStmt 0x124827820 <line:19:3, line:20:4>     |       | |-ConstantExpr 0x124827808 <line:19:8> 'int'     |       | | `-IntegerLiteral 0x1248277e8 <col:8> 'int' 0     |       | `-BreakStmt 0x124827848 <line:20:4>     |       `-DefaultStmt 0x124827858 <line:21:3, line:22:4>     |         `-ContinueStmt 0x124827850 <col:4>     `-IfStmt 0x124827c38 <line:29:2, line:32:2>       |-RecoveryExpr 0x124827b08 <line:29:6, col:38> '_Bool' contains-errors       `-CompoundStmt 0x124827c28 <col:41, line:32:2> ","19736":"`-FunctionDecl 0x130940a00  line:1:1 jiffies_to_compat_timeval 'int (unsigned long, struct compat_timeval *)'   |-ParmVarDecl 0x1309280d8 <col:27, col:41> col:41 jiffies 'unsigned long'   |-ParmVarDecl 0x1309286c8 <col:50, col:73> col:73 used value 'struct compat_timeval *'   `-CompoundStmt 0x130941000 <line:2:1, line:8:1>     |-DeclStmt 0x130940b98 <line:5:2, col:10>     | `-VarDecl 0x130940b30 <col:2, col:7> col:7 used rem 'long'     |-BinaryOperator 0x130940ea8 <line:6:2, col:60> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x130940be8 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x130940bb0 <col:2> 'struct compat_timeval *' lvalue ParmVar 0x1309286c8 'value' 'struct compat_timeval *'     | `-CallExpr 0x130940e70 <col:18, col:60> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130940d20 <col:18> 'int ()' Function 0x130940c68 'div_long_long_rem' 'int ()'     |   |-RecoveryExpr 0x130940e30 <col:36> '<dependent type>' contains-errors lvalue     |   |-RecoveryExpr 0x130940e50 <col:42> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x130940dc0 <col:56, col:57> 'long *' prefix '&' cannot overflow     |     `-DeclRefExpr 0x130940d70 <col:57> 'long' lvalue Var 0x130940b30 'rem' 'long'     `-BinaryOperator 0x130940fe0 <line:7:2, col:25> '<dependent type>' contains-errors '='       |-RecoveryExpr 0x130940f00 <col:2, col:9> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x130940ec8 <col:2> 'struct compat_timeval *' lvalue ParmVar 0x1309286c8 'value' 'struct compat_timeval *'       `-BinaryOperator 0x130940fc0 <col:19, col:25> '<dependent type>' contains-errors '\/'         |-DeclRefExpr 0x130940f28 <col:19> 'long' lvalue Var 0x130940b30 'rem' 'long'         `-RecoveryExpr 0x130940fa0 <col:25> '<dependent type>' contains-errors lvalue ","19885":"`-FunctionDecl 0x14b809340  col:30 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x14b809440 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x14b8094a8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x14b8093e8 <<invalid sloc>> Implicit 893 ","20019":"`-FunctionDecl 0x13e008200  line:1:14 find_audio_control_unit 'void *(struct mixer_build *, unsigned char)' static   |-ParmVarDecl 0x13d00e248 <col:38, col:58> col:58 used state 'struct mixer_build *'   |-ParmVarDecl 0x13d00e2c8 <line:2:10, col:24> col:24 used unit 'unsigned char'   `-CompoundStmt 0x13e008ce0 <line:3:1, line:17:1>     |-DeclStmt 0x13e008538 <line:5:2, col:48>     | |-RecordDecl 0x13e008300 <col:2, col:9> col:9 struct uac_feature_unit_descriptor     | `-VarDecl 0x13e008468 <col:2, col:44> col:38 used hdr 'struct uac_feature_unit_descriptor *' cinit     |   `-RecoveryExpr 0x13e008500 <col:44> '<dependent type>' contains-errors lvalue     |-WhileStmt 0x13e008c78 <line:7:2, line:14:2>     | |-RecoveryExpr 0x13e008810 <line:7:9, line:8:31> '_Bool' contains-errors     | `-CompoundStmt 0x13e008c60 <col:37, line:14:2>     |   `-IfStmt 0x13e008c40 <line:9:3, line:13:11>     |     |-BinaryOperator 0x13e008bc0 <line:9:7, line:12:23> 'int' contains-errors '&&'     |     | |-BinaryOperator 0x13e008ba0 <line:9:7, line:11:34> 'int' contains-errors '&&'     |     | | |-BinaryOperator 0x13e008b40 <line:9:7, line:10:34> 'int' contains-errors '&&'     |     | | | |-BinaryOperator 0x13e0088b0 <line:9:7, col:23> 'int' contains-errors '>='     |     | | | | |-RecoveryExpr 0x13e008868 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     | | | | | `-DeclRefExpr 0x13e008830 <col:7> 'struct uac_feature_unit_descriptor *' contains-errors lvalue Var 0x13e008468 'hdr' 'struct uac_feature_unit_descriptor *'     |     | | | | `-IntegerLiteral 0x13e008890 <col:23> 'int' 4     |     | | | `-BinaryOperator 0x13e008b20 <line:10:7, col:34> 'int' contains-errors '>='     |     | | |   |-RecoveryExpr 0x13e008908 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     | | |   | `-DeclRefExpr 0x13e0088d0 <col:7> 'struct uac_feature_unit_descriptor *' contains-errors lvalue Var 0x13e008468 'hdr' 'struct uac_feature_unit_descriptor *'     |     | | |   `-RecoveryExpr 0x13e008b00 <col:34> '<dependent type>' contains-errors lvalue     |     | | `-BinaryOperator 0x13e008b80 <line:11:7, col:34> 'int' contains-errors '<='     |     | |   |-RecoveryExpr 0x13e0089c0 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     | |   | `-DeclRefExpr 0x13e008988 <col:7> 'struct uac_feature_unit_descriptor *' contains-errors lvalue Var 0x13e008468 'hdr' 'struct uac_feature_unit_descriptor *'     |     | |   `-RecoveryExpr 0x13e008b60 <col:34> '<dependent type>' contains-errors lvalue     |     | `-BinaryOperator 0x13e008ac0 <line:12:7, col:23> 'int' contains-errors '=='     |     |   |-RecoveryExpr 0x13e008a78 <col:7, col:12> '<dependent type>' contains-errors lvalue     |     |   | `-DeclRefExpr 0x13e008a40 <col:7> 'struct uac_feature_unit_descriptor *' contains-errors lvalue Var 0x13e008468 'hdr' 'struct uac_feature_unit_descriptor *'     |     |   `-DeclRefExpr 0x13e008aa0 <col:23> 'unsigned char' lvalue ParmVar 0x13d00e2c8 'unit' 'unsigned char'     |     `-ReturnStmt 0x13e008c30 <line:13:4, col:11>     |       `-ImplicitCastExpr 0x13e008c18 <col:11> 'void *' contains-errors <BitCast>     |         `-ImplicitCastExpr 0x13e008c00 <col:11> 'struct uac_feature_unit_descriptor *' contains-errors <LValueToRValue>     |           `-DeclRefExpr 0x13e008be0 <col:11> 'struct uac_feature_unit_descriptor *' contains-errors lvalue Var 0x13e008468 'hdr' 'struct uac_feature_unit_descriptor *'     `-ReturnStmt 0x13e008cd0 <line:16:2, col:9>       `-RecoveryExpr 0x13e008cb0 <col:9> '<dependent type>' contains-errors lvalue ","19211":"`-FunctionDecl 0x1478c6b18  line:1:1 invalid rgba2rgbA 'int (int *, const int *, int)'   |-ParmVarDecl 0x1478c6928 <col:11, col:18> col:18 invalid out 'int *'   |-ParmVarDecl 0x1478c69a8 <col:23, col:36> col:36 invalid in 'const int *'   |-ParmVarDecl 0x1478c6a28 <col:40, col:44> col:44 used xsize 'int'   `-CompoundStmt 0x14683fc20 <col:51, line:17:1>     |-DeclStmt 0x1478c6c58 <line:2:5, col:10>     | `-VarDecl 0x1478c6bf0 <col:5, col:9> col:9 used x 'int'     |-DeclStmt 0x1478c6cf0 <line:3:5, col:23>     | `-VarDecl 0x1478c6c88 <col:5, col:18> col:18 used alpha 'unsigned int'     `-ForStmt 0x14683fbe8 <line:4:5, line:16:5>       |-BinaryOperator 0x1478c6d48 <line:4:10, col:14> 'int' '='       | |-DeclRefExpr 0x1478c6d08 <col:10> 'int' lvalue Var 0x1478c6bf0 'x' 'int'       | `-IntegerLiteral 0x1478c6d28 <col:14> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x1478c6dd8 <col:17, col:21> 'int' '<'       | |-ImplicitCastExpr 0x1478c6da8 <col:17> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x1478c6d68 <col:17> 'int' lvalue Var 0x1478c6bf0 'x' 'int'       | `-ImplicitCastExpr 0x1478c6dc0 <col:21> 'int' <LValueToRValue>       |   `-DeclRefExpr 0x1478c6d88 <col:21> 'int' lvalue ParmVar 0x1478c6a28 'xsize' 'int'       |-BinaryOperator 0x1478c6ea0 <col:28, col:39> '<dependent type>' contains-errors ','       | |-UnaryOperator 0x1478c6e18 <col:28, col:29> 'int' postfix '++'       | | `-DeclRefExpr 0x1478c6df8 <col:28> 'int' lvalue Var 0x1478c6bf0 'x' 'int'       | `-CompoundAssignOperator 0x1478c6e70 <col:33, col:39> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'       |   |-RecoveryExpr 0x1478c6e30 <col:33> '<dependent type>' contains-errors lvalue       |   `-IntegerLiteral 0x1478c6e50 <col:39> 'int' 4       `-CompoundStmt 0x14683fbc0 <col:42, line:16:5>         |-BinaryOperator 0x1478c6f58 <line:5:9, col:21> 'unsigned int' contains-errors '='         | |-DeclRefExpr 0x1478c6ec0 <col:9> 'unsigned int' lvalue Var 0x1478c6c88 'alpha' 'unsigned int'         | `-ArraySubscriptExpr 0x1478c6f38 <col:17, col:21> '<dependent type>' contains-errors lvalue         |   |-ImplicitCastExpr 0x1478c6f20 <col:17> '<dependent type>' contains-errors <LValueToRValue>         |   | `-RecoveryExpr 0x1478c6ee0 <col:17> '<dependent type>' contains-errors lvalue         |   `-IntegerLiteral 0x1478c6f00 <col:20> 'int' 3         |-IfStmt 0x14683faa8 <line:6:9, line:14:9> has_else         | |-BinaryOperator 0x14683f0b0 <line:6:13, col:38> 'int' '||'         | | |-BinaryOperator 0x14683f000 <col:13, col:22> 'int' '=='         | | | |-ImplicitCastExpr 0x1478c6fb8 <col:13> 'unsigned int' <LValueToRValue>         | | | | `-DeclRefExpr 0x1478c6f78 <col:13> 'unsigned int' lvalue Var 0x1478c6c88 'alpha' 'unsigned int'         | | | `-ImplicitCastExpr 0x1478c6fd0 <col:22> 'unsigned int' <IntegralCast>         | | |   `-IntegerLiteral 0x1478c6f98 <col:22> 'int' 255         | | `-BinaryOperator 0x14683f090 <col:29, col:38> 'int' '=='         | |   |-ImplicitCastExpr 0x14683f060 <col:29> 'unsigned int' <LValueToRValue>         | |   | `-DeclRefExpr 0x14683f020 <col:29> 'unsigned int' lvalue Var 0x1478c6c88 'alpha' 'unsigned int'         | |   `-ImplicitCastExpr 0x14683f078 <col:38> 'unsigned int' <IntegralCast>         | |     `-IntegerLiteral 0x14683f040 <col:38> 'int' 0         | |-CompoundStmt 0x14683f388 <col:41, line:10:9>         | | |-BinaryOperator 0x14683f198 <line:7:13, col:26> '<dependent type>' contains-errors '='         | | | |-UnaryOperator 0x14683f108 <col:13, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow         | | | | `-UnaryOperator 0x14683f0f0 <col:14, col:17> '<dependent type>' contains-errors postfix '++' cannot overflow         | | | |   `-RecoveryExpr 0x14683f0d0 <col:14> '<dependent type>' contains-errors lvalue         | | | `-ArraySubscriptExpr 0x14683f178 <col:22, col:26> '<dependent type>' contains-errors lvalue         | | |   |-ImplicitCastExpr 0x14683f160 <col:22> '<dependent type>' contains-errors <LValueToRValue>         | | |   | `-RecoveryExpr 0x14683f120 <col:22> '<dependent type>' contains-errors lvalue         | | |   `-IntegerLiteral 0x14683f140 <col:25> 'int' 0         | | |-BinaryOperator 0x14683f280 <line:8:13, col:26> '<dependent type>' contains-errors '='         | | | |-UnaryOperator 0x14683f1f0 <col:13, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow         | | | | `-UnaryOperator 0x14683f1d8 <col:14, col:17> '<dependent type>' contains-errors postfix '++' cannot overflow         | | | |   `-RecoveryExpr 0x14683f1b8 <col:14> '<dependent type>' contains-errors lvalue         | | | `-ArraySubscriptExpr 0x14683f260 <col:22, col:26> '<dependent type>' contains-errors lvalue         | | |   |-ImplicitCastExpr 0x14683f248 <col:22> '<dependent type>' contains-errors <LValueToRValue>         | | |   | `-RecoveryExpr 0x14683f208 <col:22> '<dependent type>' contains-errors lvalue         | | |   `-IntegerLiteral 0x14683f228 <col:25> 'int' 1         | | `-BinaryOperator 0x14683f368 <line:9:13, col:26> '<dependent type>' contains-errors '='         | |   |-UnaryOperator 0x14683f2d8 <col:13, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow         | |   | `-UnaryOperator 0x14683f2c0 <col:14, col:17> '<dependent type>' contains-errors postfix '++' cannot overflow         | |   |   `-RecoveryExpr 0x14683f2a0 <col:14> '<dependent type>' contains-errors lvalue         | |   `-ArraySubscriptExpr 0x14683f348 <col:22, col:26> '<dependent type>' contains-errors lvalue         | |     |-ImplicitCastExpr 0x14683f330 <col:22> '<dependent type>' contains-errors <LValueToRValue>         | |     | `-RecoveryExpr 0x14683f2f0 <col:22> '<dependent type>' contains-errors lvalue         | |     `-IntegerLiteral 0x14683f310 <col:25> 'int' 2         | `-CompoundStmt 0x14683fa80 <line:10:16, line:14:9>         |   |-BinaryOperator 0x14683f6c0 <line:11:13, col:49> '<dependent type>' contains-errors '='         |   | |-UnaryOperator 0x14683f3e8 <col:13, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow         |   | | `-UnaryOperator 0x14683f3d0 <col:14, col:17> '<dependent type>' contains-errors postfix '++' cannot overflow         |   | |   `-RecoveryExpr 0x14683f3b0 <col:14> '<dependent type>' contains-errors lvalue         |   | `-CallExpr 0x14683f698 <col:22, col:49> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x14683f560 <col:22> 'int ()' Function 0x14683f4a8 'CLIP8' 'int ()'         |   |   `-BinaryOperator 0x14683f678 <col:28, col:44> '<dependent type>' contains-errors '\/'         |   |     |-ParenExpr 0x14683f638 <col:28, col:40> '<dependent type>' contains-errors         |   |     | `-BinaryOperator 0x14683f618 <col:29, col:39> '<dependent type>' contains-errors '*'         |   |     |   |-IntegerLiteral 0x14683f580 <col:29> 'int' 255         |   |     |   `-ArraySubscriptExpr 0x14683f5f8 <col:35, col:39> '<dependent type>' contains-errors lvalue         |   |     |     |-ImplicitCastExpr 0x14683f5e0 <col:35> '<dependent type>' contains-errors <LValueToRValue>         |   |     |     | `-RecoveryExpr 0x14683f5a0 <col:35> '<dependent type>' contains-errors lvalue         |   |     |     `-IntegerLiteral 0x14683f5c0 <col:38> 'int' 0         |   |     `-DeclRefExpr 0x14683f658 <col:44> 'unsigned int' lvalue Var 0x1478c6c88 'alpha' 'unsigned int'         |   |-BinaryOperator 0x14683f890 <line:12:13, col:49> '<dependent type>' contains-errors '='         |   | |-UnaryOperator 0x14683f718 <col:13, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow         |   | | `-UnaryOperator 0x14683f700 <col:14, col:17> '<dependent type>' contains-errors postfix '++' cannot overflow         |   | |   `-RecoveryExpr 0x14683f6e0 <col:14> '<dependent type>' contains-errors lvalue         |   | `-CallExpr 0x14683f868 <col:22, col:49> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x14683f730 <col:22> 'int ()' Function 0x14683f4a8 'CLIP8' 'int ()'         |   |   `-BinaryOperator 0x14683f848 <col:28, col:44> '<dependent type>' contains-errors '\/'         |   |     |-ParenExpr 0x14683f808 <col:28, col:40> '<dependent type>' contains-errors         |   |     | `-BinaryOperator 0x14683f7e8 <col:29, col:39> '<dependent type>' contains-errors '*'         |   |     |   |-IntegerLiteral 0x14683f750 <col:29> 'int' 255         |   |     |   `-ArraySubscriptExpr 0x14683f7c8 <col:35, col:39> '<dependent type>' contains-errors lvalue         |   |     |     |-ImplicitCastExpr 0x14683f7b0 <col:35> '<dependent type>' contains-errors <LValueToRValue>         |   |     |     | `-RecoveryExpr 0x14683f770 <col:35> '<dependent type>' contains-errors lvalue         |   |     |     `-IntegerLiteral 0x14683f790 <col:38> 'int' 1         |   |     `-DeclRefExpr 0x14683f828 <col:44> 'unsigned int' lvalue Var 0x1478c6c88 'alpha' 'unsigned int'         |   `-BinaryOperator 0x14683fa60 <line:13:13, col:49> '<dependent type>' contains-errors '='         |     |-UnaryOperator 0x14683f8e8 <col:13, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow         |     | `-UnaryOperator 0x14683f8d0 <col:14, col:17> '<dependent type>' contains-errors postfix '++' cannot overflow         |     |   `-RecoveryExpr 0x14683f8b0 <col:14> '<dependent type>' contains-errors lvalue         |     `-CallExpr 0x14683fa38 <col:22, col:49> '<dependent type>' contains-errors         |       |-DeclRefExpr 0x14683f900 <col:22> 'int ()' Function 0x14683f4a8 'CLIP8' 'int ()'         |       `-BinaryOperator 0x14683fa18 <col:28, col:44> '<dependent type>' contains-errors '\/'         |         |-ParenExpr 0x14683f9d8 <col:28, col:40> '<dependent type>' contains-errors         |         | `-BinaryOperator 0x14683f9b8 <col:29, col:39> '<dependent type>' contains-errors '*'         |         |   |-IntegerLiteral 0x14683f920 <col:29> 'int' 255         |         |   `-ArraySubscriptExpr 0x14683f998 <col:35, col:39> '<dependent type>' contains-errors lvalue         |         |     |-ImplicitCastExpr 0x14683f980 <col:35> '<dependent type>' contains-errors <LValueToRValue>         |         |     | `-RecoveryExpr 0x14683f940 <col:35> '<dependent type>' contains-errors lvalue         |         |     `-IntegerLiteral 0x14683f960 <col:38> 'int' 2         |         `-DeclRefExpr 0x14683f9f8 <col:44> 'unsigned int' lvalue Var 0x1478c6c88 'alpha' 'unsigned int'         `-BinaryOperator 0x14683fba0 <line:15:9, col:22> '<dependent type>' contains-errors '='           |-UnaryOperator 0x14683fb10 <col:9, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow           | `-UnaryOperator 0x14683faf8 <col:10, col:13> '<dependent type>' contains-errors postfix '++' cannot overflow           |   `-RecoveryExpr 0x14683fad8 <col:10> '<dependent type>' contains-errors lvalue           `-ArraySubscriptExpr 0x14683fb80 <col:18, col:22> '<dependent type>' contains-errors lvalue             |-ImplicitCastExpr 0x14683fb68 <col:18> '<dependent type>' contains-errors <LValueToRValue>             | `-RecoveryExpr 0x14683fb28 <col:18> '<dependent type>' contains-errors lvalue             `-IntegerLiteral 0x14683fb48 <col:21> 'int' 3 ","19993":"`-FunctionDecl 0x16000dd18  line:1:1 TEST_CASE 'int ()'   `-CompoundStmt 0x16000de20 <line:2:1, line:9:1> ","19898":"`-FunctionDecl 0x127008448  line:1:1 vhost_user_postcopy_end 'int (struct virtio_net **, struct VhostUserMsg *, int)'   |-ParmVarDecl 0x12680e2a8 <col:25, col:45> col:45 used pdev 'struct virtio_net **'   |-ParmVarDecl 0x127008288 <col:51, col:72> col:72 used msg 'struct VhostUserMsg *'   |-ParmVarDecl 0x127008308 <line:2:4, col:8> col:8 main_fd 'int'   `-CompoundStmt 0x127008e08 <line:3:1, line:17:1>     |-DeclStmt 0x1270086a8 <line:4:2, col:32>     | `-VarDecl 0x1270085d8 <col:2, col:28> col:21 used dev 'struct virtio_net *' cinit     |   `-ImplicitCastExpr 0x127008690 <col:27, col:28> 'struct virtio_net *' <LValueToRValue>     |     `-UnaryOperator 0x127008678 <col:27, col:28> 'struct virtio_net *' lvalue prefix '*' cannot overflow     |       `-ImplicitCastExpr 0x127008660 <col:28> 'struct virtio_net **' <LValueToRValue>     |         `-DeclRefExpr 0x127008640 <col:28> 'struct virtio_net **' lvalue ParmVar 0x12680e2a8 'pdev' 'struct virtio_net **'     |-BinaryOperator 0x127008740 <line:6:2, col:28> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1270086f8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1270086c0 <col:2> 'struct virtio_net *' lvalue Var 0x1270085d8 'dev' 'struct virtio_net *'     | `-IntegerLiteral 0x127008720 <col:28> 'int' 0     |-IfStmt 0x127008ab0 <line:7:2, line:10:2>     | |-BinaryOperator 0x1270087e0 <line:7:6, col:27> 'int' contains-errors '>='     | | |-RecoveryExpr 0x127008798 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x127008760 <col:6> 'struct virtio_net *' lvalue Var 0x1270085d8 'dev' 'struct virtio_net *'     | | `-IntegerLiteral 0x1270087c0 <col:27> 'int' 0     | `-CompoundStmt 0x127008a90 <col:30, line:10:2>     |   |-CallExpr 0x1270089b0 <line:8:3, col:26> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x127008930 <col:3> 'int ()' Function 0x127008878 'close' 'int ()'     |   | `-RecoveryExpr 0x127008988 <col:9, col:14> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x127008950 <col:9> 'struct virtio_net *' lvalue Var 0x1270085d8 'dev' 'struct virtio_net *'     |   `-BinaryOperator 0x127008a70 <line:9:3, col:24> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x127008a10 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x1270089d8 <col:3> 'struct virtio_net *' lvalue Var 0x1270085d8 'dev' 'struct virtio_net *'     |     `-UnaryOperator 0x127008a58 <col:23, col:24> 'int' prefix '-'     |       `-IntegerLiteral 0x127008a38 <col:24> 'int' 1     |-BinaryOperator 0x127008b98 <line:12:2, col:21> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x127008b30 <col:2, col:15> '<dependent type>' contains-errors lvalue .u64     | | `-RecoveryExpr 0x127008b08 <col:2, col:7> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x127008ad0 <col:2> 'struct VhostUserMsg *' lvalue ParmVar 0x127008288 'msg' 'struct VhostUserMsg *'     | `-IntegerLiteral 0x127008b78 <col:21> 'int' 0     |-BinaryOperator 0x127008d00 <line:13:2, col:37> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127008bf0 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127008bb8 <col:2> 'struct VhostUserMsg *' lvalue ParmVar 0x127008288 'msg' 'struct VhostUserMsg *'     | `-UnaryExprOrTypeTraitExpr 0x127008ce0 <col:14, col:37> 'unsigned long' contains-errors sizeof     |   `-ParenExpr 0x127008cc0 <col:20, col:37> '<dependent type>' contains-errors lvalue     |     `-CXXDependentScopeMemberExpr 0x127008c78 <col:21, col:34> '<dependent type>' contains-errors lvalue .u64     |       `-RecoveryExpr 0x127008c50 <col:21, col:26> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x127008c18 <col:21> 'struct VhostUserMsg *' lvalue ParmVar 0x127008288 'msg' 'struct VhostUserMsg *' non_odr_use_unevaluated     |-BinaryOperator 0x127008da0 <line:14:2, col:16> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x127008d58 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x127008d20 <col:2> 'struct VhostUserMsg *' lvalue ParmVar 0x127008288 'msg' 'struct VhostUserMsg *'     | `-IntegerLiteral 0x127008d80 <col:16> 'int' 0     `-ReturnStmt 0x127008df8 <line:16:2, col:9>       `-RecoveryExpr 0x127008dd8 <col:9> '<dependent type>' contains-errors lvalue ","20193":"`-FunctionDecl 0x12c127b50  line:1:6 snd_pcm_detach_substream 'void (struct snd_pcm_substream *)'   |-ParmVarDecl 0x12c127a48 <col:31, col:57> col:57 used substream 'struct snd_pcm_substream *'   `-CompoundStmt 0x12c80b8a8 <line:2:1, line:27:1>     |-DeclStmt 0x12c140038 <line:3:2, col:33>     | |-RecordDecl 0x12c13fe48 <col:2, col:9> col:9 struct snd_pcm_runtime     | `-VarDecl 0x12c13ffb8 <col:2, col:26> col:26 used runtime 'struct snd_pcm_runtime *'     |-IfStmt 0x12c140258 <line:5:2, line:6:3>     | |-CallExpr 0x12c140208 <line:5:6, col:33> 'int'     | | |-ImplicitCastExpr 0x12c1401f0 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x12c140180 <col:6> 'int ()' Function 0x12c1400c8 'PCM_RUNTIME_CHECK' 'int ()'     | | `-ImplicitCastExpr 0x12c140230 <col:24> 'struct snd_pcm_substream *' <LValueToRValue>     | |   `-DeclRefExpr 0x12c1401a0 <col:24> 'struct snd_pcm_substream *' lvalue ParmVar 0x12c127a48 'substream' 'struct snd_pcm_substream *'     | `-ReturnStmt 0x12c140248 <line:6:3>     |-BinaryOperator 0x12c1402f8 <line:7:2, col:23> 'struct snd_pcm_runtime *' contains-errors '='     | |-DeclRefExpr 0x12c140278 <col:2> 'struct snd_pcm_runtime *' lvalue Var 0x12c13ffb8 'runtime' 'struct snd_pcm_runtime *'     | `-RecoveryExpr 0x12c1402d0 <col:12, col:23> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c140298 <col:12> 'struct snd_pcm_substream *' lvalue ParmVar 0x12c127a48 'substream' 'struct snd_pcm_substream *'     |-IfStmt 0x12c140498 <line:8:2, line:9:32>     | |-BinaryOperator 0x12c1403d0 <line:8:6, col:31> 'int' contains-errors '!='     | | |-RecoveryExpr 0x12c140350 <col:6, col:15> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x12c140318 <col:6> 'struct snd_pcm_runtime *' lvalue Var 0x12c13ffb8 'runtime' 'struct snd_pcm_runtime *'     | | `-RecoveryExpr 0x12c1403b0 <col:31> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12c140470 <line:9:3, col:32> '<dependent type>' contains-errors     |   |-RecoveryExpr 0x12c140428 <col:3, col:12> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12c1403f0 <col:3> 'struct snd_pcm_runtime *' lvalue Var 0x12c13ffb8 'runtime' 'struct snd_pcm_runtime *'     |   `-DeclRefExpr 0x12c140450 <col:25> 'struct snd_pcm_runtime *' lvalue Var 0x12c13ffb8 'runtime' 'struct snd_pcm_runtime *'     |-CallExpr 0x12c140b60 <line:14:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c140a98 <col:2> 'int ()' Function 0x12c1409e0 'kfree' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12c140b18 <col:8, col:32> '<dependent type>' contains-errors lvalue .rules     |   `-RecoveryExpr 0x12c140af0 <col:8, col:17> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12c140ab8 <col:8> 'struct snd_pcm_runtime *' lvalue Var 0x12c13ffb8 'runtime' 'struct snd_pcm_runtime *'     |-IfStmt 0x12c80b538 <line:16:2, line:22:2> has_else     | |-RecoveryExpr 0x12c140bc0 <line:16:6, col:17> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12c140b88 <col:6> 'struct snd_pcm_substream *' lvalue ParmVar 0x12c127a48 'substream' 'struct snd_pcm_substream *'     | |-CompoundStmt 0x12c80b4a0 <col:24, line:20:2>     | | |-CallExpr 0x12c140da8 <line:17:3, col:40> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x12c140cc8 <col:3> 'int ()' Function 0x12c140c10 'spin_lock_irq' 'int ()'     | | | `-UnaryOperator 0x12c140d90 <col:17, col:36> '<dependent type>' contains-errors prefix '&' cannot overflow     | | |   `-CXXDependentScopeMemberExpr 0x12c140d48 <col:18, col:36> '<dependent type>' contains-errors lvalue ->lock     | | |     `-RecoveryExpr 0x12c140d20 <col:18, col:29> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x12c140ce8 <col:18> 'struct snd_pcm_substream *' lvalue ParmVar 0x12c127a48 'substream' 'struct snd_pcm_substream *'     | | |-BinaryOperator 0x12c80b298 <line:18:3, col:24> '<dependent type>' contains-errors '='     | | | |-RecoveryExpr 0x12c80b218 <col:3, col:14> '<dependent type>' contains-errors lvalue     | | | | `-DeclRefExpr 0x12c140dd0 <col:3> 'struct snd_pcm_substream *' lvalue ParmVar 0x12c127a48 'substream' 'struct snd_pcm_substream *'     | | | `-RecoveryExpr 0x12c80b278 <col:24> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12c80b478 <line:19:3, col:42> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12c80b398 <col:3> 'int ()' Function 0x12c80b2e0 'spin_unlock_irq' 'int ()'     | |   `-UnaryOperator 0x12c80b460 <col:19, col:38> '<dependent type>' contains-errors prefix '&' cannot overflow     | |     `-CXXDependentScopeMemberExpr 0x12c80b418 <col:20, col:38> '<dependent type>' contains-errors lvalue ->lock     | |       `-RecoveryExpr 0x12c80b3f0 <col:20, col:31> '<dependent type>' contains-errors lvalue     | |         `-DeclRefExpr 0x12c80b3b8 <col:20> 'struct snd_pcm_substream *' lvalue ParmVar 0x12c127a48 'substream' 'struct snd_pcm_substream *'     | `-CompoundStmt 0x12c80b528 <line:20:9, line:22:2>     |-CallExpr 0x12c80b5c0 <line:23:2, col:15> 'int'     | |-ImplicitCastExpr 0x12c80b5a8 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x12c80b568 <col:2> 'int ()' Function 0x12c1409e0 'kfree' 'int ()'     | `-ImplicitCastExpr 0x12c80b5e8 <col:8> 'struct snd_pcm_runtime *' <LValueToRValue>     |   `-DeclRefExpr 0x12c80b588 <col:8> 'struct snd_pcm_runtime *' lvalue Var 0x12c13ffb8 'runtime' 'struct snd_pcm_runtime *'     |-CallExpr 0x12c80b760 <line:24:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12c80b6e0 <col:2> 'int ()' Function 0x12c80b628 'put_pid' 'int ()'     | `-RecoveryExpr 0x12c80b738 <col:10, col:21> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12c80b700 <col:10> 'struct snd_pcm_substream *' lvalue ParmVar 0x12c127a48 'substream' 'struct snd_pcm_substream *'     `-UnaryOperator 0x12c80b890 <line:26:2, col:35> '<dependent type>' contains-errors postfix '--' cannot overflow       `-CXXDependentScopeMemberExpr 0x12c80b848 <col:2, col:19> '<dependent type>' contains-errors lvalue ->substream_opened         `-RecoveryExpr 0x12c80b820 <col:2, col:13> '<dependent type>' contains-errors lvalue           `-DeclRefExpr 0x12c80b7e8 <col:2> 'struct snd_pcm_substream *' lvalue ParmVar 0x12c127a48 'substream' 'struct snd_pcm_substream *' ","19140":"`-FunctionDecl 0x14c00ddc8  line:1:1 invalid cliprdr_process 'int (int)'   |-ParmVarDecl 0x14c00dcf0 <col:17, col:24> col:24 invalid s 'int'   `-CompoundStmt 0x14d008fa0 <line:2:1, line:62:1>     |-DeclStmt 0x14c027c78 <line:6:2, col:27>     | |-RecordDecl 0x14c00de90 <col:2, col:9> col:9 struct stream     | `-VarDecl 0x14c00df88 <col:2, col:16> col:16 invalid packet 'struct stream'     |-CallExpr 0x14c027e98 <line:8:2, col:22> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c027df0 <col:2> 'int ()' Function 0x14c027d38 'in_uint16_le' 'int ()'     | |-RecoveryExpr 0x14c027e10 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c027e78 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c027f70 <line:9:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c027ec8 <col:2> 'int ()' Function 0x14c027d38 'in_uint16_le' 'int ()'     | |-RecoveryExpr 0x14c027ee8 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c027f50 <col:18> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14c028128 <line:10:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14c028080 <col:2> 'int ()' Function 0x14c027fc8 'in_uint32_le' 'int ()'     | |-RecoveryExpr 0x14c0280a0 <col:15> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x14c028108 <col:18> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c028750 <line:15:2, line:18:2>     | |-UnaryOperator 0x14c028598 <line:15:6, col:28> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x14c028568 <col:7, col:28> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14c0284a8 <col:7> 'int ()' Function 0x14c0283f0 's_check_rem' 'int ()'     | |   |-RecoveryExpr 0x14c0284c8 <col:19> '<dependent type>' contains-errors lvalue     | |   `-RecoveryExpr 0x14c028548 <col:22> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14c028738 <line:16:2, line:18:2>     |   `-CallExpr 0x14c028708 <line:17:3, col:36> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x14c028690 <col:3> 'int ()' Function 0x14c0285d8 'rdp_protocol_error' 'int ()'     |     |-StringLiteral 0x14c0286b0 <col:22> 'char[4]' lvalue \"STR\"     |     `-UnaryOperator 0x14c0286f0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x14c0286d0 <col:30> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14c028b18 <line:20:2, line:37:2>     | |-RecoveryExpr 0x14c028770 <line:20:6, col:16> '_Bool' contains-errors     | `-CompoundStmt 0x14c028af8 <line:21:2, line:37:2>     |   |-SwitchStmt 0x14c0287b0 <line:22:3, line:34:3>     |   | |-RecoveryExpr 0x14c028790 <line:22:11> 'int' contains-errors     |   | `-CompoundStmt 0x14c028ab8 <line:23:3, line:34:3>     |   |   |-BreakStmt 0x14c0288d8 <line:28:5>     |   |   |-CallExpr 0x14c028a28 <line:30:5, col:28> 'int'     |   |   | `-ImplicitCastExpr 0x14c028a10 <col:5> 'int (*)()' <FunctionToPointerDecay>     |   |   |   `-DeclRefExpr 0x14c0289c0 <col:5> 'int ()' Function 0x14c028908 'ui_clip_request_failed' 'int ()'     |   |   |-BreakStmt 0x14c028a48 <line:31:5>     |   |   `-DefaultStmt 0x14c028a98 <line:32:4, col:11>     |   |     `-NullStmt 0x14c028a90 <col:11>     |   `-ReturnStmt 0x14c028ae8 <line:36:3>     `-SwitchStmt 0x14c028b58 <line:39:2, line:61:2>       |-RecoveryExpr 0x14c028b38 <line:39:10> 'int' contains-errors       `-CompoundStmt 0x14d008f50 <line:40:2, line:61:2>         |-CallExpr 0x14d0088f0 <line:42:4, col:17> 'int'         | `-ImplicitCastExpr 0x14d0088d8 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   `-DeclRefExpr 0x14d0088b8 <col:4> 'int ()' Function 0x14d008800 'ui_clip_sync' 'int ()'         |-BreakStmt 0x14d008910 <line:43:4>         |-ReturnStmt 0x14d008b38 <line:47:4>         |-BreakStmt 0x14d008b48 <line:49:4>         |-BreakStmt 0x14d008c90 <line:53:4>         |-BreakStmt 0x14d008d98 <line:56:4>         |-CaseStmt 0x14d008dd8 <line:57:3, line:58:4>         | |-ConstantExpr 0x14d008dc0 <line:57:8> 'int'         | | `-IntegerLiteral 0x14d008da0 <col:8> 'int' 7         | `-BreakStmt 0x14d008e00 <line:58:4>         `-DefaultStmt 0x14d008f30 <line:59:3, col:10>           `-NullStmt 0x14d008f28 <col:10> ","19921":"`-FunctionDecl 0x127143358  col:9 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x127143458 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x1271434c0 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x127143528 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x127143400 <<invalid sloc>> Implicit 882 ","20015":"`-FunctionDecl 0x12900de08  line:1:8 invalid CompressElement 'int (const int)'   |-ParmVarDecl 0x12900dcf0 <col:24, <invalid sloc>> col:33 invalid 'const int'   `-CompoundStmt 0x129027d18 <line:2:48, line:51:1>     |-RecoveryExpr 0x12900dee8 <line:5:3> '<dependent type>' contains-errors lvalue     |-ForStmt 0x12900e098 <line:7:3, line:22:48>     | |-<<<NULL>>>     | |-<<<NULL>>>     | |-RecoveryExpr 0x12900df20 <line:21:3> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x12900e068 <line:22:3, col:47> '<dependent type>' contains-errors     | | |-CXXDependentScopeMemberExpr 0x12900e000 <col:3, col:16> '<dependent type>' contains-errors lvalue .resize_uninitialized     | | | `-RecoveryExpr 0x12900dfe0 <col:3> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x12900e048 <col:37> '<dependent type>' contains-errors lvalue     | `-NullStmt 0x12900e090 <col:48>     |-DeclStmt 0x12900e258 <line:24:3, col:40>     | `-VarDecl 0x12900e0e8 <col:3, col:39> col:9 used position 'char *' cinit     |   `-CallExpr 0x12900e238 <col:20, col:39> '<dependent type>' contains-errors     |     `-CXXDependentScopeMemberExpr 0x12900e1f0 <col:20, col:33> '<dependent type>' contains-errors lvalue .mdata     |       `-RecoveryExpr 0x12900e1d0 <col:20> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x12900e310 <line:25:3, col:37>     | `-VarDecl 0x12900e288 <col:3, col:36> col:7 non_memcpy_component_index 'int' cinit     |   `-IntegerLiteral 0x12900e2f0 <col:36> 'int' 0     `-ForStmt 0x129027ce0 <line:26:3, line:49:41>       |-<<<NULL>>>       |-<<<NULL>>>       |-CallExpr 0x129027ca8 <line:42:3, col:56> '<dependent type>' contains-errors       | |-DeclRefExpr 0x129027ab8 <col:3> 'int ()' Function 0x129027a00 'DCHECK_EQ' 'int ()'       | |-DeclRefExpr 0x129027ad8 <col:13> 'char *' contains-errors lvalue Var 0x12900e0e8 'position' 'char *'       | `-BinaryOperator 0x129027c88 <col:23, col:46> '<dependent type>' contains-errors '+'       |   |-CallExpr 0x129027c48 <col:23, col:42> '<dependent type>' contains-errors       |   | `-CXXDependentScopeMemberExpr 0x129027c00 <col:23, col:36> '<dependent type>' contains-errors lvalue .mdata       |   |   `-RecoveryExpr 0x129027be0 <col:23> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x129027c68 <col:46> '<dependent type>' contains-errors lvalue       |-<<<NULL>>>       `-NullStmt 0x129027cd8 <line:49:41> ","19666":"`-FunctionDecl 0x14000de88  line:1:1 invalid rpc_C_DigestUpdate 'int (int *, int *)'   |-ParmVarDecl 0x14000dd28 <col:21, col:41> col:41 invalid self 'int *'   |-ParmVarDecl 0x14000dda8 <line:2:21, col:38> col:38 invalid msg 'int *'   `-CompoundStmt 0x141809e68 <line:3:1, line:13:1>     |-CallExpr 0x14000e120 <line:8:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14000e0a0 <col:2> 'int ()' Function 0x14000dfe8 'BEGIN_CALL' 'int ()'     | `-RecoveryExpr 0x14000e100 <col:14> '<dependent type>' contains-errors lvalue     |-CallExpr 0x14000e2a8 <line:9:3, col:20> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14000e228 <col:3> 'int ()' Function 0x14000e170 'IN_ULONG' 'int ()'     | `-RecoveryExpr 0x14000e288 <col:13> '<dependent type>' contains-errors lvalue     `-CallExpr 0x141809c70 <line:10:3, col:32> '<dependent type>' contains-errors       |-DeclRefExpr 0x14000e3b0 <col:3> 'int ()' Function 0x14000e2f8 'IN_BYTE_ARRAY' 'int ()'       |-RecoveryExpr 0x141809c30 <col:18> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x141809c50 <col:24> '<dependent type>' contains-errors lvalue ","19678":"`-FunctionDecl 0x14e940a80  line:1:13 dump_status 'void (struct req_state *, int, const char *)' static   |-ParmVarDecl 0x14e928648 <col:25, col:43> col:43 used s 'struct req_state *'   |-ParmVarDecl 0x14e9286c8 <col:46, col:50> col:50 used status 'int'   |-ParmVarDecl 0x14e928748 <line:2:4, col:16> col:16 used status_name 'const char *'   `-CompoundStmt 0x14e940cb8 <line:3:1, line:11:1>     `-CallExpr 0x14e940c70 <line:4:3, col:47> '<dependent type>' contains-errors       |-CXXDependentScopeMemberExpr 0x14e940be8 <col:3, col:17> '<dependent type>' contains-errors lvalue ->set_status       | `-RecoveryExpr 0x14e940bc0 <col:3, col:6> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x14e940b88 <col:3> 'struct req_state *' lvalue ParmVar 0x14e928648 's' 'struct req_state *'       |-DeclRefExpr 0x14e940c30 <col:28> 'int' lvalue ParmVar 0x14e9286c8 'status' 'int'       `-DeclRefExpr 0x14e940c50 <col:36> 'const char *' lvalue ParmVar 0x14e928748 'status_name' 'const char *' ","19546":"`-FunctionDecl 0x1291281f8  line:1:5 invalid create_dpb 'int (int *)'   |-ParmVarDecl 0x129128128 <col:16, col:29> col:29 referenced invalid mgr 'int *'   `-CompoundStmt 0x1298097a0 <line:2:1, line:35:1>     |-RecoveryExpr 0x129128450 <line:5:5, col:30> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x129128430 <col:5, col:19> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x129128410 <col:19> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1291283a8 <col:30> 'int' 0     |-DeclStmt 0x129128500 <line:6:5, col:10>     | `-VarDecl 0x129128498 <col:5, col:9> col:9 used i 'int'     |-BinaryOperator 0x129128798 <line:8:5, col:69> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x129128560 <col:5, col:10> '<dependent type>' contains-errors lvalue ->dpbsize     | | `-RecoveryExpr 0x129128538 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x129128518 <col:5> 'int *' lvalue ParmVar 0x129128128 'mgr' 'int *'     | `-BinaryOperator 0x129128778 <col:20, col:69> '<dependent type>' contains-errors '+'     |   |-BinaryOperator 0x129128758 <col:20, col:45> '<dependent type>' contains-errors '+'     |   | |-CXXDependentScopeMemberExpr 0x1291285c8 <col:20, col:25> '<dependent type>' contains-errors lvalue ->num_decoders     |   | | `-RecoveryExpr 0x1291285a8 <col:20> '<dependent type>' contains-errors lvalue     |   | `-CXXDependentScopeMemberExpr 0x129128710 <col:40, col:45> '<dependent type>' contains-errors lvalue ->picture_reorder_delay     |   |   `-RecoveryExpr 0x1291286f0 <col:40> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x129128690 <col:69> 'int' 16     |-CompoundAssignOperator 0x129808868 <line:9:5, col:21> '<dependent type>' contains-errors '+=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-CXXDependentScopeMemberExpr 0x129808800 <col:5, col:10> '<dependent type>' contains-errors lvalue ->dpbsize     | | `-RecoveryExpr 0x1291287d8 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x1291287b8 <col:5> 'int *' lvalue ParmVar 0x129128128 'mgr' 'int *'     | `-IntegerLiteral 0x129808848 <col:21> 'int' 8     |-IfStmt 0x129809010 <line:17:5, line:19:5>     | |-RecoveryExpr 0x129808f90 <line:17:9, col:20> '_Bool' contains-errors     | `-CompoundStmt 0x129808ff8 <col:26, line:19:5>     |   `-ReturnStmt 0x129808fe8 <line:18:9, col:17>     |     `-UnaryOperator 0x129808fd0 <col:16, col:17> 'int' prefix '-'     |       `-IntegerLiteral 0x129808fb0 <col:17> 'int' 1     |-ForStmt 0x129809738 <line:25:5, line:32:5>     | |-BinaryOperator 0x129809268 <line:25:10, col:14> 'int' '='     | | |-DeclRefExpr 0x129809228 <col:10> 'int' lvalue Var 0x129128498 'i' 'int'     | | `-IntegerLiteral 0x129809248 <col:14> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x129809310 <col:17, col:26> 'int' contains-errors '<'     | | |-DeclRefExpr 0x129809288 <col:17> 'int' lvalue Var 0x129128498 'i' 'int'     | | `-CXXDependentScopeMemberExpr 0x1298092c8 <col:21, col:26> '<dependent type>' contains-errors lvalue ->dpbsize     | |   `-RecoveryExpr 0x1298092a8 <col:21> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x129809350 <col:35, col:36> 'int' postfix '++'     | | `-DeclRefExpr 0x129809330 <col:35> 'int' lvalue Var 0x129128498 'i' 'int'     | `-CompoundStmt 0x129809720 <col:40, line:32:5>     |   `-IfStmt 0x129809700 <line:29:9, line:31:9>     |     |-RecoveryExpr 0x129809680 <line:29:13, col:28> '_Bool' contains-errors     |     `-CompoundStmt 0x1298096e8 <col:34, line:31:9>     |       `-ReturnStmt 0x1298096d8 <line:30:13, col:21>     |         `-UnaryOperator 0x1298096c0 <col:20, col:21> 'int' prefix '-'     |           `-IntegerLiteral 0x1298096a0 <col:21> 'int' 1     `-ReturnStmt 0x129809790 <line:34:5, col:12>       `-IntegerLiteral 0x129809770 <col:12> 'int' 0 ","20042":"`-FunctionDecl 0x12d127638  line:1:12 invalid kvm_nx_lpage_recovery_worker 'int (struct kvm *, int)' static   |-ParmVarDecl 0x12d80e248 <col:41, col:53> col:53 used kvm 'struct kvm *'   |-ParmVarDecl 0x12d80e2e0 <col:58, col:68> col:68 invalid data 'int'   `-CompoundStmt 0x12d1285b0 <line:2:1, line:24:1>     |-DeclStmt 0x12d127770 <line:4:2, col:21>     | `-VarDecl 0x12d127708 <col:2, col:7> col:7 used remaining_time 'long'     `-WhileStmt 0x12d128590 <line:6:2, line:23:2>       |-RecoveryExpr 0x12d1277a0 <line:6:9> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12d128550 <col:15, line:23:2>         |-BinaryOperator 0x12d127b70 <line:8:3, col:60> 'long' contains-errors '='         | |-DeclRefExpr 0x12d1279a8 <col:3> 'long' lvalue Var 0x12d127708 'remaining_time' 'long'         | `-CallExpr 0x12d127b48 <col:20, col:60> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x12d127aa8 <col:20> 'int ()' Function 0x12d1279f0 'get_nx_lpage_recovery_timeout' 'int ()'         |   `-RecoveryExpr 0x12d127b28 <col:50> '<dependent type>' contains-errors lvalue         |-CallExpr 0x12d127cf0 <line:10:3, col:39> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12d127c70 <col:3> 'int ()' Function 0x12d127bb8 'set_current_state' 'int ()'         | `-RecoveryExpr 0x12d127cd0 <col:21> '<dependent type>' contains-errors lvalue         |-WhileStmt 0x12d128268 <line:11:3, line:15:3>         | |-BinaryOperator 0x12d127ef8 <line:11:10, col:53> 'int' '&&'         | | |-UnaryOperator 0x12d127e50 <col:10, col:31> 'int' prefix '!' cannot overflow         | | | `-CallExpr 0x12d127e30 <col:11, col:31> 'int'         | | |   `-ImplicitCastExpr 0x12d127e18 <col:11> 'int (*)()' <FunctionToPointerDecay>         | | |     `-DeclRefExpr 0x12d127df8 <col:11> 'int ()' Function 0x12d127d40 'kthread_should_stop' 'int ()'         | | `-BinaryOperator 0x12d127ed8 <col:36, col:53> 'int' '>'         | |   |-ImplicitCastExpr 0x12d127ea8 <col:36> 'long' <LValueToRValue>         | |   | `-DeclRefExpr 0x12d127e68 <col:36> 'long' lvalue Var 0x12d127708 'remaining_time' 'long'         | |   `-ImplicitCastExpr 0x12d127ec0 <col:53> 'long' <IntegralCast>         | |     `-IntegerLiteral 0x12d127e88 <col:53> 'int' 0         | `-CompoundStmt 0x12d128240 <col:56, line:15:3>         |   |-CallExpr 0x12d128050 <line:12:4, col:35> 'int'         |   | |-ImplicitCastExpr 0x12d128038 <col:4> 'int (*)()' <FunctionToPointerDecay>         |   | | `-DeclRefExpr 0x12d127ff8 <col:4> 'int ()' Function 0x12d127f40 'schedule_timeout' 'int ()'         |   | `-ImplicitCastExpr 0x12d128078 <col:21> 'long' <LValueToRValue>         |   |   `-DeclRefExpr 0x12d128018 <col:21> 'long' lvalue Var 0x12d127708 'remaining_time' 'long'         |   |-BinaryOperator 0x12d128178 <line:13:4, col:61> 'long' contains-errors '='         |   | |-DeclRefExpr 0x12d128090 <col:4> 'long' lvalue Var 0x12d127708 'remaining_time' 'long'         |   | `-CallExpr 0x12d128150 <col:21, col:61> '<dependent type>' contains-errors         |   |   |-DeclRefExpr 0x12d1280b0 <col:21> 'int ()' Function 0x12d1279f0 'get_nx_lpage_recovery_timeout' 'int ()'         |   |   `-RecoveryExpr 0x12d128130 <col:51> '<dependent type>' contains-errors lvalue         |   `-CallExpr 0x12d128218 <line:14:4, col:40> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x12d128198 <col:4> 'int ()' Function 0x12d127bb8 'set_current_state' 'int ()'         |     `-RecoveryExpr 0x12d1281f8 <col:22> '<dependent type>' contains-errors lvalue         |-CallExpr 0x12d128308 <line:17:3, col:33> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12d128288 <col:3> 'int ()' Function 0x12d127bb8 'set_current_state' 'int ()'         | `-RecoveryExpr 0x12d1282e8 <col:21> '<dependent type>' contains-errors lvalue         |-IfStmt 0x12d1283b8 <line:19:3, line:20:11>         | |-CallExpr 0x12d128368 <line:19:7, col:27> 'int'         | | `-ImplicitCastExpr 0x12d128350 <col:7> 'int (*)()' <FunctionToPointerDecay>         | |   `-DeclRefExpr 0x12d128330 <col:7> 'int ()' Function 0x12d127d40 'kthread_should_stop' 'int ()'         | `-ReturnStmt 0x12d1283a8 <line:20:4, col:11>         |   `-IntegerLiteral 0x12d128388 <col:11> 'int' 0         `-CallExpr 0x12d128510 <line:22:3, col:28> 'int'           |-ImplicitCastExpr 0x12d1284f8 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x12d1284b8 <col:3> 'int ()' Function 0x12d128400 'kvm_recover_nx_lpages' 'int ()'           `-ImplicitCastExpr 0x12d128538 <col:25> 'struct kvm *' <LValueToRValue>             `-DeclRefExpr 0x12d1284d8 <col:25> 'struct kvm *' lvalue ParmVar 0x12d80e248 'kvm' 'struct kvm *' ","19394":"`-FunctionDecl 0x11e9281c8  line:1:18 invalid base_compilestring 'int (int)' static   |-ParmVarDecl 0x11e9280f0 <col:37, col:49> col:49 invalid v 'int'   `-CompoundStmt 0x11e941d50 <line:2:1, line:15:1>     |-DeclStmt 0x11e928310 <line:4:5, col:33>     | `-VarDecl 0x11e928290 <col:5, col:19> col:19 invalid src 'const int *'     |-CallExpr 0x11e928518 <line:6:5, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x11e928480 <col:5> 'int ()' Function 0x11e9283c8 'sq_getstring' 'int ()'     | |-RecoveryExpr 0x11e9284a0 <col:18> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x11e9284c0 <col:20> 'int' 2     | `-UnaryOperator 0x11e928500 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x11e9284e0 <col:23> '<dependent type>' contains-errors lvalue     |-IfStmt 0x11e9418c0 <line:8:5, line:10:5>     | |-BinaryOperator 0x11e928738 <line:8:8, col:14> 'int' contains-errors '>'     | | |-RecoveryExpr 0x11e928718 <col:8> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x11e9286d8 <col:14> 'int' 2     | `-CompoundStmt 0x11e9418a8 <col:16, line:10:5>     |   `-CallExpr 0x11e941870 <line:9:9, col:31> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x11e928758 <col:9> 'int ()' Function 0x11e9283c8 'sq_getstring' 'int ()'     |     |-RecoveryExpr 0x11e928778 <col:22> '<dependent type>' contains-errors lvalue     |     |-IntegerLiteral 0x11e928798 <col:24> 'int' 3     |     `-UnaryOperator 0x11e941858 <col:26, col:27> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x11e941838 <col:27> '<dependent type>' contains-errors lvalue     `-IfStmt 0x11e941d20 <line:11:5, line:14:16> has_else       |-CallExpr 0x11e941c80 <line:11:8, col:62> '<dependent type>' contains-errors       | |-DeclRefExpr 0x11e9419c0 <col:8> 'int ()' Function 0x11e941908 'SQ_SUCCEEDED' 'int ()'       | `-CallExpr 0x11e941c38 <col:21, col:61> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x11e941ac0 <col:21> 'int ()' Function 0x11e941a08 'sq_compilebuffer' 'int ()'       |   |-RecoveryExpr 0x11e941ae0 <col:38> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x11e941b00 <col:40> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x11e941bd8 <col:44> '<dependent type>' contains-errors lvalue       |   |-RecoveryExpr 0x11e941bf8 <col:49> '<dependent type>' contains-errors lvalue       |   `-RecoveryExpr 0x11e941c18 <col:54> '<dependent type>' contains-errors lvalue       |-ReturnStmt 0x11e941cc8 <line:12:9, col:16>       | `-IntegerLiteral 0x11e941ca8 <col:16> 'int' 1       `-ReturnStmt 0x11e941d10 <line:14:9, col:16>         `-RecoveryExpr 0x11e941cf0 <col:16> '<dependent type>' contains-errors lvalue ","19408":"`-FunctionDecl 0x1249281c0  line:1:6 invalid delete_run_files 'void (int)'   |-ParmVarDecl 0x1249280f0 <col:23, col:29> col:29 invalid pid 'int'   `-CompoundStmt 0x124941970 <col:34, line:7:1>     |-CallExpr 0x124928410 <line:2:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1249283d0 <col:2> 'int ()' Function 0x124928318 'delete_bandwidth_run_file' 'int ()'     | `-RecoveryExpr 0x1249283f0 <col:28> '<dependent type>' contains-errors lvalue     |-CallExpr 0x124928558 <line:3:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124928518 <col:2> 'int ()' Function 0x124928460 'delete_network_run_file' 'int ()'     | `-RecoveryExpr 0x124928538 <col:26> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1249286a0 <line:4:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x124928660 <col:2> 'int ()' Function 0x1249285a8 'delete_name_run_file' 'int ()'     | `-RecoveryExpr 0x124928680 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x124941800 <line:5:2, col:25> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1249287a8 <col:2> 'int ()' Function 0x1249286f0 'delete_x11_run_file' 'int ()'     | `-RecoveryExpr 0x1249287c8 <col:22> '<dependent type>' contains-errors lvalue     `-CallExpr 0x124941948 <line:6:2, col:29> '<dependent type>' contains-errors       |-DeclRefExpr 0x124941908 <col:2> 'int ()' Function 0x124941850 'delete_profile_run_file' 'int ()'       `-RecoveryExpr 0x124941928 <col:26> '<dependent type>' contains-errors lvalue ","20016":"`-FunctionDecl 0x15680ddc8  col:17 invalid checkNoWait 'int (int)' inline   |-ParmVarDecl 0x15680dcf0 <col:29, col:33> col:33 used length 'int'   `-CompoundStmt 0x15680e148 <col:41, col:78>     `-ReturnStmt 0x15680e138 <col:43, col:75>       `-BinaryOperator 0x15680e118 <col:50, col:75> 'int' contains-errors '!='         |-CallExpr 0x15680e0e0 <col:50, col:72> '<dependent type>' contains-errors         | |-DeclRefExpr 0x15680dfd0 <col:50> 'int ()' Function 0x15680df18 'check' 'int ()'         | |-DeclRefExpr 0x15680dff0 <col:56> 'int' lvalue ParmVar 0x15680dcf0 'length' 'int'         | |-IntegerLiteral 0x15680e010 <col:64> 'int' 1         | `-RecoveryExpr 0x15680e0c0 <col:67> '<dependent type>' contains-errors lvalue         `-IntegerLiteral 0x15680e080 <col:75> 'int' 0 ","19399":"`-FunctionDecl 0x13a928758  line:1:12 usbredirparser_get_header_len 'int (struct usbredirparser *)' static   |-ParmVarDecl 0x13a928648 <col:42, col:65> col:65 used parser_pub 'struct usbredirparser *'   `-CompoundStmt 0x13a940e48 <line:2:1, line:7:1> ","19892":"`-FunctionDecl 0x12a140a88  line:1:1 do_notify_resume 'int (struct pt_regs *, unsigned int, int)'   |-ParmVarDecl 0x12a128648 <col:18, col:34> col:34 used regs 'struct pt_regs *'   |-ParmVarDecl 0x12a1286c8 <col:40, col:53> col:53 used thread_flags 'unsigned int'   |-ParmVarDecl 0x12a128748 <col:67, col:71> col:71 used syscall 'int'   `-CompoundStmt 0x12a141348 <line:2:1, line:10:1>     |-IfStmt 0x12a140f18 <line:3:2, line:4:45>     | |-BinaryOperator 0x12a140c20 <line:3:6, col:21> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x12a140b90 <col:6> 'unsigned int' lvalue ParmVar 0x12a1286c8 'thread_flags' 'unsigned int'     | | `-RecoveryExpr 0x12a140c00 <col:21> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x12a140ee0 <line:4:3, col:45> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12a140d50 <col:3> 'int ()' Function 0x12a140c98 'do_signal' 'int ()'     |   |-UnaryOperator 0x12a140ec8 <col:13, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-CXXDependentScopeMemberExpr 0x12a140e80 <col:14, col:23> '<dependent type>' contains-errors lvalue ->blocked     |   |   `-RecoveryExpr 0x12a140e60 <col:14> '<dependent type>' contains-errors lvalue     |   |-DeclRefExpr 0x12a140de8 <col:32> 'struct pt_regs *' lvalue ParmVar 0x12a128648 'regs' 'struct pt_regs *'     |   `-DeclRefExpr 0x12a140e08 <col:38> 'int' lvalue ParmVar 0x12a128748 'syscall' 'int'     `-IfStmt 0x12a141328 <line:6:2, line:9:2>       |-BinaryOperator 0x12a140fb0 <line:6:6, col:21> '<dependent type>' contains-errors '&'       | |-DeclRefExpr 0x12a140f38 <col:6> 'unsigned int' lvalue ParmVar 0x12a1286c8 'thread_flags' 'unsigned int'       | `-RecoveryExpr 0x12a140f90 <col:21> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12a141308 <col:41, line:9:2>         |-CallExpr 0x12a141130 <line:7:3, col:38> '<dependent type>' contains-errors         | |-DeclRefExpr 0x12a1410b0 <col:3> 'int ()' Function 0x12a140ff8 'clear_thread_flag' 'int ()'         | `-RecoveryExpr 0x12a141110 <col:21> '<dependent type>' contains-errors lvalue         `-CallExpr 0x12a1412c8 <line:8:3, col:31> 'int'           |-ImplicitCastExpr 0x12a1412b0 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x12a141238 <col:3> 'int ()' Function 0x12a141180 'tracehook_notify_resume' 'int ()'           `-ImplicitCastExpr 0x12a1412f0 <col:27> 'struct pt_regs *' <LValueToRValue>             `-DeclRefExpr 0x12a141258 <col:27> 'struct pt_regs *' lvalue ParmVar 0x12a128648 'regs' 'struct pt_regs *' ","20131":"`-FunctionDecl 0x14f128230  col:20 debugt 'void (const char *, const char *)' static inline   |-ParmVarDecl 0x14f1280d8 <col:27, col:39> col:39 func 'const char *'   |-ParmVarDecl 0x14f128158 <col:45, col:57> col:57 msg 'const char *'   `-CompoundStmt 0x14f128330 <col:62, col:64> ","20174":"`-FunctionDecl 0x128144c00  line:1:5 nfnetlink_has_listeners 'int (struct net *, unsigned int)'   |-ParmVarDecl 0x128128648 <col:29, col:41> col:41 used net 'struct net *'   |-ParmVarDecl 0x1281286c8 <col:46, col:59> col:59 used group 'unsigned int'   `-CompoundStmt 0x128144f10 <line:2:1, line:4:1>     `-ReturnStmt 0x128144f00 <line:3:2, col:47>       `-CallExpr 0x128144ed0 <col:9, col:47> '<dependent type>' contains-errors         |-DeclRefExpr 0x128144e30 <col:9> 'int ()' Function 0x128144d78 'netlink_has_listeners' 'int ()'         |-RecoveryExpr 0x128144e88 <col:31, col:36> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x128144e50 <col:31> 'struct net *' lvalue ParmVar 0x128128648 'net' 'struct net *'         `-DeclRefExpr 0x128144eb0 <col:42> 'unsigned int' lvalue ParmVar 0x1281286c8 'group' 'unsigned int' ","19927":"`-FunctionDecl 0x1551281f0  line:1:13 invalid wanxl_reset 'void (int *)' static   |-ParmVarDecl 0x155128128 <col:25, col:33> col:33 invalid card 'int *'   `-CompoundStmt 0x155808e88 <line:2:1, line:11:1>     |-CallExpr 0x155128550 <line:5:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155128400 <col:2> 'int ()' Function 0x155128348 'writel' 'int ()'     | |-IntegerLiteral 0x155128420 <col:9> 'int' 128     | `-BinaryOperator 0x155128530 <col:15, col:27> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x155128460 <col:15, col:21> '<dependent type>' contains-errors lvalue ->plx     |   | `-RecoveryExpr 0x155128440 <col:15> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x155128510 <col:27> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155128760 <line:6:2, col:59> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155128580 <col:2> 'int ()' Function 0x155128348 'writel' 'int ()'     | |-BinaryOperator 0x155128700 <col:9, col:21> '<dependent type>' contains-errors '|'     | | |-RecoveryExpr 0x1551286c0 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x1551286e0 <col:21> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x155128740 <col:36, col:48> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x155128610 <col:36, col:42> '<dependent type>' contains-errors lvalue ->plx     |   | `-RecoveryExpr 0x1551285f0 <col:36> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x155128720 <col:48> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1558089e0 <line:7:2, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1558088b8 <col:2> 'int ()' Function 0x155808800 'readl' 'int ()'     | `-BinaryOperator 0x1558089c0 <col:8, col:20> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x1558088f8 <col:8, col:14> '<dependent type>' contains-errors lvalue ->plx     |   | `-RecoveryExpr 0x1558088d8 <col:8> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x1558089a0 <col:20> '<dependent type>' contains-errors lvalue     |-CallExpr 0x155808b78 <line:8:2, col:10> 'int'     | |-ImplicitCastExpr 0x155808b60 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x155808ae8 <col:2> 'int ()' Function 0x155808a30 'udelay' 'int ()'     | `-IntegerLiteral 0x155808b08 <col:9> 'int' 1     |-CallExpr 0x155808d08 <line:9:2, col:43> '<dependent type>' contains-errors     | |-DeclRefExpr 0x155808ba0 <col:2> 'int ()' Function 0x155128348 'writel' 'int ()'     | |-RecoveryExpr 0x155808ca8 <col:9> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x155808ce8 <col:20, col:32> '<dependent type>' contains-errors '+'     |   |-CXXDependentScopeMemberExpr 0x155808bf8 <col:20, col:26> '<dependent type>' contains-errors lvalue ->plx     |   | `-RecoveryExpr 0x155808bd8 <col:20> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x155808cc8 <col:32> '<dependent type>' contains-errors lvalue     `-CallExpr 0x155808e60 <line:10:2, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x155808d38 <col:2> 'int ()' Function 0x155808800 'readl' 'int ()'       `-BinaryOperator 0x155808e40 <col:8, col:20> '<dependent type>' contains-errors '+'         |-CXXDependentScopeMemberExpr 0x155808d78 <col:8, col:14> '<dependent type>' contains-errors lvalue ->plx         | `-RecoveryExpr 0x155808d58 <col:8> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x155808e20 <col:20> '<dependent type>' contains-errors lvalue ","19494":"`-FunctionDecl 0x1539418d8  line:1:12 invalid web_client_api_request_v1_charts 'int (int *, struct web_client *, char *)' inline   |-ParmVarDecl 0x153928128 <col:45, col:54> col:54 invalid host 'int *'   |-ParmVarDecl 0x153928718 <col:60, col:79> col:79 used w 'struct web_client *'   |-ParmVarDecl 0x153928798 <col:82, col:88> col:88 used url 'char *'   `-CompoundStmt 0x153941fe0 <col:93, line:8:1>     |-CStyleCastExpr 0x1539419e0 <line:2:5, col:11> 'void' <ToVoid>     | `-ImplicitCastExpr 0x1539419c8 <col:11> 'char *' <LValueToRValue> part_of_explicit_cast     |   `-DeclRefExpr 0x153941998 <col:11> 'char *' lvalue ParmVar 0x153928798 'url' 'char *'     |-CallExpr 0x153941c28 <line:4:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153941b60 <col:5> 'int ()' Function 0x153941aa8 'buffer_flush' 'int ()'     | `-CXXDependentScopeMemberExpr 0x153941be0 <col:18, col:30> '<dependent type>' contains-errors lvalue .data     |   `-RecoveryExpr 0x153941bb8 <col:18, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x153941b80 <col:18> 'struct web_client *' lvalue ParmVar 0x153928718 'w' 'struct web_client *'     |-BinaryOperator 0x153941d98 <line:5:5, col:37> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x153941cf8 <col:5, col:23> '<dependent type>' contains-errors lvalue ->contenttype     | | `-CXXDependentScopeMemberExpr 0x153941cb0 <col:5, col:17> '<dependent type>' contains-errors lvalue .data     | |   `-RecoveryExpr 0x153941c88 <col:5, col:8> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x153941c50 <col:5> 'struct web_client *' lvalue ParmVar 0x153928718 'w' 'struct web_client *'     | `-RecoveryExpr 0x153941d78 <col:37> '<dependent type>' contains-errors lvalue     |-CallExpr 0x153941f80 <line:6:5, col:39> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153941e98 <col:5> 'int ()' Function 0x153941de0 'charts2json' 'int ()'     | |-RecoveryExpr 0x153941eb8 <col:17> '<dependent type>' contains-errors lvalue     | `-CXXDependentScopeMemberExpr 0x153941f38 <col:23, col:35> '<dependent type>' contains-errors lvalue .data     |   `-RecoveryExpr 0x153941f10 <col:23, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x153941ed8 <col:23> 'struct web_client *' lvalue ParmVar 0x153928718 'w' 'struct web_client *'     `-ReturnStmt 0x153941fd0 <line:7:5, col:12>       `-IntegerLiteral 0x153941fb0 <col:12> 'int' 200 ","19510":"`-FunctionDecl 0x14c027618  line:1:20 invalid is_flush_request 'int (struct request *, struct blk_flush_queue *, unsigned int)' static inline   |-ParmVarDecl 0x14c00e268 <col:37, col:53> col:53 used rq 'struct request *'   |-ParmVarDecl 0x14c027458 <line:2:3, col:27> col:27 used fq 'struct blk_flush_queue *'   |-ParmVarDecl 0x14c0274d8 <col:31, col:44> col:44 used tag 'unsigned int'   `-CompoundStmt 0x14c027858 <line:3:1, line:6:1> ","19538":"`-FunctionDecl 0x12d1281f8  line:1:1 invalid au_remove_pat 'int (int *)'   |-ParmVarDecl 0x12d128128 <col:15, col:24> col:24 referenced invalid ap 'int *'   `-CompoundStmt 0x12d1286b8 <line:2:1, line:7:1>     |-CallExpr 0x12d128488 <line:3:5, col:21> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d128400 <col:5> 'int ()' Function 0x12d128348 'vim_free' 'int ()'     | `-CXXDependentScopeMemberExpr 0x12d128440 <col:14, col:18> '<dependent type>' contains-errors lvalue ->pat     |   `-RecoveryExpr 0x12d128420 <col:14> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x12d128598 <line:4:5, col:15> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x12d1284f8 <col:5, col:9> '<dependent type>' contains-errors lvalue ->pat     | | `-RecoveryExpr 0x12d1284d0 <col:5> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d1284b0 <col:5> 'int *' lvalue ParmVar 0x12d128128 'ap' 'int *'     | `-RecoveryExpr 0x12d128578 <col:15> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x12d128680 <line:5:5, col:24> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x12d128600 <col:5, col:9> '<dependent type>' contains-errors lvalue ->buflocal_nr       | `-RecoveryExpr 0x12d1285d8 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x12d1285b8 <col:5> 'int *' lvalue ParmVar 0x12d128128 'ap' 'int *'       `-UnaryOperator 0x12d128668 <col:23, col:24> 'int' prefix '-'         `-IntegerLiteral 0x12d128648 <col:24> 'int' 1 ","19694":"`-FunctionDecl 0x153827670  col:2 implicit used index 'char *(const char *, int)' extern   |-ParmVarDecl 0x153827770 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x1538277d8 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x153827718 <<invalid sloc>> Implicit 952 ","20022":"`-FunctionDecl 0x152826680  line:1:13 __io_cqring_fill_event 'void (struct io_kiocb *, long, long)' static   |-ParmVarDecl 0x15280e248 <col:36, col:53> col:53 used req 'struct io_kiocb *'   |-ParmVarDecl 0x15280e2c8 <col:58, col:63> col:63 used res 'long'   |-ParmVarDecl 0x15280e348 <col:68, col:73> col:73 used cflags 'long'   `-CompoundStmt 0x152124350 <line:2:1, line:29:1>     |-DeclStmt 0x1528269d8 <line:3:2, col:36>     | |-RecordDecl 0x152826788 <col:2, col:9> col:9 struct io_ring_ctx     | `-VarDecl 0x1528268f8 <col:2, col:33> col:22 used ctx 'struct io_ring_ctx *' cinit     |   `-RecoveryExpr 0x152826998 <col:28, col:33> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x152826960 <col:28> 'struct io_kiocb *' lvalue ParmVar 0x15280e248 'req' 'struct io_kiocb *'     |-DeclStmt 0x152826bd8 <line:4:2, col:26>     | |-RecordDecl 0x1528269f0 <col:2, col:9> col:9 struct io_uring_cqe     | `-VarDecl 0x152826b58 <col:2, col:23> col:23 used cqe 'struct io_uring_cqe *'     |-CallExpr 0x152826de0 <line:6:2, col:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x152826d20 <col:2> 'int ()' Function 0x152826c68 'trace_io_uring_complete' 'int ()'     | |-DeclRefExpr 0x152826d40 <col:26> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *'     | |-RecoveryExpr 0x152826d98 <col:31, col:36> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x152826d60 <col:31> 'struct io_kiocb *' lvalue ParmVar 0x15280e248 'req' 'struct io_kiocb *'     | `-DeclRefExpr 0x152826dc0 <col:47> 'long' lvalue ParmVar 0x15280e2c8 'res' 'long'     |-BinaryOperator 0x152827000 <line:9:2, col:25> 'struct io_uring_cqe *' contains-errors '='     | |-DeclRefExpr 0x152826e18 <col:2> 'struct io_uring_cqe *' lvalue Var 0x152826b58 'cqe' 'struct io_uring_cqe *'     | `-ImplicitCastExpr 0x152826fe8 <col:8, col:25> 'struct io_uring_cqe *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x152826fa8 <col:8, col:25> 'int' contains-errors     |     |-ImplicitCastExpr 0x152826f90 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x152826f18 <col:8> 'int ()' Function 0x152826e60 'io_get_cqring' 'int ()'     |     `-ImplicitCastExpr 0x152826fd0 <col:22> 'struct io_ring_ctx *' contains-errors <LValueToRValue>     |       `-DeclRefExpr 0x152826f38 <col:22> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *'     `-IfStmt 0x152124320 <line:10:2, line:28:2> has_else       |-CallExpr 0x152827158 <line:10:6, col:16> 'int'       | |-ImplicitCastExpr 0x152827140 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x152827100 <col:6> 'int ()' Function 0x152827048 'likely' 'int ()'       | `-ImplicitCastExpr 0x152827180 <col:13> 'struct io_uring_cqe *' <LValueToRValue>       |   `-DeclRefExpr 0x152827120 <col:13> 'struct io_uring_cqe *' lvalue Var 0x152826b58 'cqe' 'struct io_uring_cqe *'       |-CompoundStmt 0x152827528 <col:19, line:14:2>       | |-CallExpr 0x152827358 <line:11:3, col:44> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x152827278 <col:3> 'int ()' Function 0x1528271c0 'WRITE_ONCE' 'int ()'       | | |-RecoveryExpr 0x1528272d0 <col:14, col:19> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x152827298 <col:14> 'struct io_uring_cqe *' lvalue Var 0x152826b58 'cqe' 'struct io_uring_cqe *'       | | `-RecoveryExpr 0x152827330 <col:30, col:35> '<dependent type>' contains-errors lvalue       | |   `-DeclRefExpr 0x1528272f8 <col:30> 'struct io_kiocb *' lvalue ParmVar 0x15280e248 'req' 'struct io_kiocb *'       | |-CallExpr 0x152827428 <line:12:3, col:27> '<dependent type>' contains-errors       | | |-DeclRefExpr 0x152827388 <col:3> 'int ()' Function 0x1528271c0 'WRITE_ONCE' 'int ()'       | | |-RecoveryExpr 0x1528273e0 <col:14, col:19> '<dependent type>' contains-errors lvalue       | | | `-DeclRefExpr 0x1528273a8 <col:14> 'struct io_uring_cqe *' lvalue Var 0x152826b58 'cqe' 'struct io_uring_cqe *'       | | `-DeclRefExpr 0x152827408 <col:24> 'long' lvalue ParmVar 0x15280e2c8 'res' 'long'       | `-CallExpr 0x1528274f8 <line:13:3, col:32> '<dependent type>' contains-errors       |   |-DeclRefExpr 0x152827458 <col:3> 'int ()' Function 0x1528271c0 'WRITE_ONCE' 'int ()'       |   |-RecoveryExpr 0x1528274b0 <col:14, col:19> '<dependent type>' contains-errors lvalue       |   | `-DeclRefExpr 0x152827478 <col:14> 'struct io_uring_cqe *' lvalue Var 0x152826b58 'cqe' 'struct io_uring_cqe *'       |   `-DeclRefExpr 0x1528274d8 <col:26> 'long' lvalue ParmVar 0x15280e348 'cflags' 'long'       `-IfStmt 0x1521242f0 <line:14:9, line:28:2> has_else         |-RecoveryExpr 0x152827588 <line:14:13, col:18> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x152827550 <col:13> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *'         |-CompoundStmt 0x152123658 <col:39, line:17:2>         | `-CallExpr 0x152123628 <line:15:3, line:16:48> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x1528275b0 <line:15:3> 'int ()' Function 0x1528271c0 'WRITE_ONCE' 'int ()'         |   |-CXXDependentScopeMemberExpr 0x152123440 <col:14, col:26> '<dependent type>' contains-errors lvalue ->cq_overflow         |   | `-RecoveryExpr 0x152123418 <col:14, col:19> '<dependent type>' contains-errors lvalue         |   |   `-DeclRefExpr 0x1528275d0 <col:14> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *'         |   `-CallExpr 0x152123600 <line:16:5, col:47> '<dependent type>' contains-errors         |     |-DeclRefExpr 0x152123568 <col:5> 'int ()' Function 0x1521234b0 'atomic_inc_return' 'int ()'         |     `-UnaryOperator 0x1521235e8 <col:23, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow         |       `-RecoveryExpr 0x1521235c0 <col:24, col:29> '<dependent type>' contains-errors lvalue         |         `-DeclRefExpr 0x152123588 <col:24> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *'         `-CompoundStmt 0x1521242b0 <line:17:9, line:28:2>           |-IfStmt 0x152123b88 <line:18:3, line:22:3>           | |-CallExpr 0x1521237e8 <line:18:7, col:40> '<dependent type>' contains-errors           | | |-DeclRefExpr 0x152123750 <col:7> 'int ()' Function 0x152123698 'list_empty' 'int ()'           | | `-UnaryOperator 0x1521237d0 <col:18, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow           | |   `-RecoveryExpr 0x1521237a8 <col:19, col:24> '<dependent type>' contains-errors lvalue           | |     `-DeclRefExpr 0x152123770 <col:19> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *'           | `-CompoundStmt 0x152123b68 <col:43, line:22:3>           |   |-CallExpr 0x1521239a8 <line:19:4, col:38> '<dependent type>' contains-errors           |   | |-DeclRefExpr 0x1521238f0 <col:4> 'int ()' Function 0x152123838 'set_bit' 'int ()'           |   | |-IntegerLiteral 0x152123910 <col:12> 'int' 0           |   | `-UnaryOperator 0x152123990 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow           |   |   `-RecoveryExpr 0x152123968 <col:16, col:21> '<dependent type>' contains-errors lvalue           |   |     `-DeclRefExpr 0x152123930 <col:16> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *'           |   `-CallExpr 0x152123a90 <line:20:4, col:38> '<dependent type>' contains-errors           |     |-DeclRefExpr 0x1521239d8 <col:4> 'int ()' Function 0x152123838 'set_bit' 'int ()'           |     |-IntegerLiteral 0x1521239f8 <col:12> 'int' 0           |     `-UnaryOperator 0x152123a78 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow           |       `-RecoveryExpr 0x152123a50 <col:16, col:21> '<dependent type>' contains-errors lvalue           |         `-DeclRefExpr 0x152123a18 <col:16> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *'           |-CallExpr 0x152123ce0 <line:23:3, col:18> 'int'           | |-ImplicitCastExpr 0x152123cc8 <col:3> 'int (*)()' <FunctionToPointerDecay>           | | `-DeclRefExpr 0x152123c88 <col:3> 'int ()' Function 0x152123bd0 'io_clean_op' 'int ()'           | `-ImplicitCastExpr 0x152123d08 <col:15> 'struct io_kiocb *' <LValueToRValue>           |   `-DeclRefExpr 0x152123ca8 <col:15> 'struct io_kiocb *' lvalue ParmVar 0x15280e248 'req' 'struct io_kiocb *'           |-BinaryOperator 0x152123da0 <line:24:3, col:17> '<dependent type>' contains-errors '='           | |-RecoveryExpr 0x152123d58 <col:3, col:8> '<dependent type>' contains-errors lvalue           | | `-DeclRefExpr 0x152123d20 <col:3> 'struct io_kiocb *' lvalue ParmVar 0x15280e248 'req' 'struct io_kiocb *'           | `-DeclRefExpr 0x152123d80 <col:17> 'long' lvalue ParmVar 0x15280e2c8 'res' 'long'           |-BinaryOperator 0x152123e88 <line:25:3, col:23> '<dependent type>' contains-errors '='           | |-CXXDependentScopeMemberExpr 0x152123e20 <col:3, col:14> '<dependent type>' contains-errors lvalue .cflags           | | `-RecoveryExpr 0x152123df8 <col:3, col:8> '<dependent type>' contains-errors lvalue           | |   `-DeclRefExpr 0x152123dc0 <col:3> 'struct io_kiocb *' lvalue ParmVar 0x15280e248 'req' 'struct io_kiocb *'           | `-DeclRefExpr 0x152123e68 <col:23> 'long' lvalue ParmVar 0x15280e348 'cflags' 'long'           |-CallExpr 0x152124020 <line:26:3, col:26> '<dependent type>' contains-errors           | |-DeclRefExpr 0x152123f88 <col:3> 'int ()' Function 0x152123ed0 'refcount_inc' 'int ()'           | `-UnaryOperator 0x152124008 <col:16, col:22> '<dependent type>' contains-errors prefix '&' cannot overflow           |   `-RecoveryExpr 0x152123fe0 <col:17, col:22> '<dependent type>' contains-errors lvalue           |     `-DeclRefExpr 0x152123fa8 <col:17> 'struct io_kiocb *' lvalue ParmVar 0x15280e248 'req' 'struct io_kiocb *'           `-CallExpr 0x152124280 <line:27:3, col:57> '<dependent type>' contains-errors             |-DeclRefExpr 0x152124128 <col:3> 'int ()' Function 0x152124070 'list_add_tail' 'int ()'             |-UnaryOperator 0x1521241f0 <col:17, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow             | `-CXXDependentScopeMemberExpr 0x1521241a8 <col:18, col:29> '<dependent type>' contains-errors lvalue .list             |   `-RecoveryExpr 0x152124180 <col:18, col:23> '<dependent type>' contains-errors lvalue             |     `-DeclRefExpr 0x152124148 <col:18> 'struct io_kiocb *' lvalue ParmVar 0x15280e248 'req' 'struct io_kiocb *'             `-UnaryOperator 0x152124268 <col:35, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow               `-RecoveryExpr 0x152124240 <col:36, col:41> '<dependent type>' contains-errors lvalue                 `-DeclRefExpr 0x152124208 <col:36> 'struct io_ring_ctx *' contains-errors lvalue Var 0x1528268f8 'ctx' 'struct io_ring_ctx *' ","19158":"`-FunctionDecl 0x1219437c8  col:28 implicit used strlen 'unsigned long (const char *)' extern   |-ParmVarDecl 0x1219438c8 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x121943870 <<invalid sloc>> Implicit 902 ","19271":"`-FunctionDecl 0x141128238  line:1:1 TEST_F 'int (int, int)'   |-ParmVarDecl 0x141128158 <col:8> col:8 used QueryPlannerTest 'int'   |-ParmVarDecl 0x1411280d8 <col:26> col:26 ExprEqCanUseSparseIndex 'int'   `-CompoundStmt 0x141808cd0 <col:51, line:10:1>     |-CallExpr 0x141808988 <line:4:5, col:29> 'int'     | |-ImplicitCastExpr 0x141808970 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1418088b8 <col:5> 'int ()' Function 0x141808800 'runQuery' 'int ()'     | `-CallExpr 0x141808930 <col:14, col:28> 'int'     |   |-ImplicitCastExpr 0x141808918 <col:14> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x1418088d8 <col:14> 'int ()' Function 0x141128548 'fromjson' 'int ()'     |   `-ImplicitCastExpr 0x141808958 <col:23> 'char *' <ArrayToPointerDecay>     |     `-StringLiteral 0x1418088f8 <col:23> 'char[4]' lvalue \"STR\"     |-CallExpr 0x141808ae8 <line:6:5, col:26> 'int'     | |-ImplicitCastExpr 0x141808ad0 <col:5> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x141808a90 <col:5> 'int ()' Function 0x1418089d8 'assertNumSolutions' 'int ()'     | `-IntegerLiteral 0x141808ab0 <col:24> 'unsigned int' 1     `-CallExpr 0x141808c90 <line:7:5, line:9:14> 'int'       |-ImplicitCastExpr 0x141808c78 <line:7:5> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x141808bf0 <col:5> 'int ()' Function 0x141808b38 'assertSolutionExists' 'int ()'       `-ImplicitCastExpr 0x141808cb8 <line:8:9, line:9:9> 'char *' <ArrayToPointerDecay>         `-StringLiteral 0x141808c50 <line:8:9, line:9:9> 'char[7]' lvalue \"STRSTR\" ","19884":"`-FunctionDecl 0x14e928758  line:1:12 referenced perf_swevent_init 'int (struct perf_event *)' static   |-ParmVarDecl 0x14e928648 <col:30, col:49> col:49 used event 'struct perf_event *'   `-CompoundStmt 0x158009200 <line:2:1, line:36:1>     |-DeclStmt 0x14f008378 <line:3:2, col:35>     | `-VarDecl 0x14f008268 <col:2, col:29> col:6 used event_id 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x14f008330 <col:17, col:29> '<dependent type>' contains-errors lvalue .config     |     `-RecoveryExpr 0x14f008308 <col:17, col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x14f0082d0 <col:17> 'struct perf_event *' lvalue ParmVar 0x14e928648 'event' 'struct perf_event *'     |-IfStmt 0x14f008570 <line:5:2, line:6:11>     | |-BinaryOperator 0x14f0084a8 <line:5:6, col:26> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x14f0083f0 <col:6, col:18> '<dependent type>' contains-errors lvalue .type     | | | `-RecoveryExpr 0x14f0083c8 <col:6, col:13> '<dependent type>' contains-errors lvalue     | | |   `-DeclRefExpr 0x14f008390 <col:6> 'struct perf_event *' lvalue ParmVar 0x14e928648 'event' 'struct perf_event *'     | | `-RecoveryExpr 0x14f008488 <col:26> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14f008560 <line:6:3, col:11>     |   `-UnaryOperator 0x14f008548 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14f008530 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14f008510 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14f008810 <line:9:2, line:10:11>     | |-CallExpr 0x14f008728 <line:9:6, col:28> 'int'     | | |-ImplicitCastExpr 0x14f008710 <col:6> 'int (*)()' <FunctionToPointerDecay>     | | | `-DeclRefExpr 0x14f0086a0 <col:6> 'int ()' Function 0x14f0085e8 'has_branch_stack' 'int ()'     | | `-ImplicitCastExpr 0x14f008750 <col:23> 'struct perf_event *' <LValueToRValue>     | |   `-DeclRefExpr 0x14f0086c0 <col:23> 'struct perf_event *' lvalue ParmVar 0x14e928648 'event' 'struct perf_event *'     | `-ReturnStmt 0x14f008800 <line:10:3, col:11>     |   `-UnaryOperator 0x14f0087e8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14f0087d0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14f0087b0 <col:11> '<dependent type>' contains-errors lvalue     |-SwitchStmt 0x14f008868 <line:12:2, line:19:2>     | |-ImplicitCastExpr 0x14f008850 <line:12:10> 'int' contains-errors <LValueToRValue>     | | `-DeclRefExpr 0x14f008830 <col:10> 'int' contains-errors lvalue Var 0x14f008268 'event_id' 'int'     | `-CompoundStmt 0x14f008990 <col:20, line:19:2>     |   |-ReturnStmt 0x14f008958 <line:15:3, col:11>     |   | `-UnaryOperator 0x14f008940 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |   |   `-ImplicitCastExpr 0x14f008928 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |   |     `-RecoveryExpr 0x14f008908 <col:11> '<dependent type>' contains-errors lvalue     |   `-DefaultStmt 0x14f008970 <line:17:2, line:18:3>     |     `-BreakStmt 0x14f008968 <col:3>     |-IfStmt 0x14f008af0 <line:21:2, line:22:11>     | |-BinaryOperator 0x14f008a28 <line:21:6, col:18> 'int' contains-errors '>='     | | |-DeclRefExpr 0x14f0089b0 <col:6> 'int' contains-errors lvalue Var 0x14f008268 'event_id' 'int'     | | `-RecoveryExpr 0x14f008a08 <col:18> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x14f008ae0 <line:22:3, col:11>     |   `-UnaryOperator 0x14f008ac8 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x14f008ab0 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x14f008a90 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14f009188 <line:24:2, line:33:2>     | |-UnaryOperator 0x14f008b88 <line:24:6, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14f008b70 <col:7, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x14f008b48 <col:7, col:14> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x14f008b10 <col:7> 'struct perf_event *' lvalue ParmVar 0x14e928648 'event' 'struct perf_event *'     | `-CompoundStmt 0x14f009158 <col:22, line:33:2>     |   |-DeclStmt 0x14f008c20 <line:25:3, col:10>     |   | `-VarDecl 0x14f008bb8 <col:3, col:7> col:7 used err 'int'     |   |-BinaryOperator 0x14f008dd0 <line:27:3, col:32> 'int' '='     |   | |-DeclRefExpr 0x14f008c38 <col:3> 'int' lvalue Var 0x14f008bb8 'err' 'int'     |   | `-CallExpr 0x14f008d90 <col:9, col:32> 'int'     |   |   |-ImplicitCastExpr 0x14f008d78 <col:9> 'int (*)()' <FunctionToPointerDecay>     |   |   | `-DeclRefExpr 0x14f008d38 <col:9> 'int ()' Function 0x14f008c80 'swevent_hlist_get' 'int ()'     |   |   `-ImplicitCastExpr 0x14f008db8 <col:27> 'struct perf_event *' <LValueToRValue>     |   |     `-DeclRefExpr 0x14f008d58 <col:27> 'struct perf_event *' lvalue ParmVar 0x14e928648 'event' 'struct perf_event *'     |   |-IfStmt 0x14f008e70 <line:28:3, line:29:11>     |   | |-ImplicitCastExpr 0x14f008e10 <line:28:7> 'int' <LValueToRValue>     |   | | `-DeclRefExpr 0x14f008df0 <col:7> 'int' lvalue Var 0x14f008bb8 'err' 'int'     |   | `-ReturnStmt 0x14f008e60 <line:29:4, col:11>     |   |   `-ImplicitCastExpr 0x14f008e48 <col:11> 'int' <LValueToRValue>     |   |     `-DeclRefExpr 0x14f008e28 <col:11> 'int' lvalue Var 0x14f008bb8 'err' 'int'     |   `-BinaryOperator 0x14f009138 <line:32:3, col:20> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x14f0090b8 <col:3, col:10> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x14f009080 <col:3> 'struct perf_event *' lvalue ParmVar 0x14e928648 'event' 'struct perf_event *'     |     `-RecoveryExpr 0x14f009118 <col:20> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14f0091c8 <line:35:2, col:9>       `-IntegerLiteral 0x14f0091a8 <col:9> 'int' 0 ","19687":"`-FunctionDecl 0x13a928ba8  line:1:1 PHP_FUNCTION 'int (int)'   |-ParmVarDecl 0x13a928ad8 <col:14> col:14 xsl_xsltprocessor_import_stylesheet 'int'   `-CompoundStmt 0x13a943c78 <line:2:1, line:80:1>     |-DeclStmt 0x13a928f40 <line:7:2, col:53>     | |-VarDecl 0x13a928d98 <col:2, col:6> col:6 used prevSubstValue 'int'     | |-VarDecl 0x13a928e18 <col:2, col:22> col:22 used prevExtDtdValue 'int'     | `-VarDecl 0x13a928e98 <col:2, col:52> col:39 used clone_docu 'int' cinit     |   `-IntegerLiteral 0x13a928f00 <col:52> 'int' 0     |-IfStmt 0x13a941578 <line:12:2, line:14:2>     | |-RecoveryExpr 0x13a941548 <line:12:6, col:126> '_Bool' contains-errors     | `-CompoundStmt 0x13a941568 <col:135, line:14:2>     |-IfStmt 0x13a9416c8 <line:18:2, line:20:2>     | |-RecoveryExpr 0x13a941698 <line:18:6> '_Bool' contains-errors     | `-CompoundStmt 0x13a9416b8 <col:13, line:20:2>     |-IfStmt 0x13a941880 <line:21:2, line:24:2>     | |-RecoveryExpr 0x13a9416e8 <line:21:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x13a941870 <col:19, line:24:2>     |-BinaryOperator 0x13a941c40 <line:29:2, col:49> 'int' '='     | |-DeclRefExpr 0x13a941ac0 <col:2> 'int' lvalue Var 0x13a928d98 'prevSubstValue' 'int'     | `-CallExpr 0x13a941c18 <col:19, col:49> 'int'     |   |-ImplicitCastExpr 0x13a941c00 <col:19> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x13a941bc0 <col:19> 'int ()' Function 0x13a941b08 'xmlSubstituteEntitiesDefault' 'int ()'     |   `-IntegerLiteral 0x13a941be0 <col:48> 'int' 1     |-CallExpr 0x13a941dd8 <line:34:2, col:45> 'int'     | |-ImplicitCastExpr 0x13a941dc0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x13a941d80 <col:2> 'int ()' Function 0x13a941b08 'xmlSubstituteEntitiesDefault' 'int ()'     | `-ImplicitCastExpr 0x13a941e00 <col:31> 'int' <LValueToRValue>     |   `-DeclRefExpr 0x13a941da0 <col:31> 'int' lvalue Var 0x13a928d98 'prevSubstValue' 'int'     |-IfStmt 0x13a941f68 <line:37:2, line:40:2>     | |-RecoveryExpr 0x13a941e38 <line:37:6, col:7> '_Bool' contains-errors     | `-CompoundStmt 0x13a941f58 <col:15, line:40:2>     |-IfStmt 0x13a943450 <line:48:2, line:51:2>     | |-RecoveryExpr 0x13a943200 <line:48:6, col:29> '_Bool' contains-errors     | `-CompoundStmt 0x13a943440 <col:38, line:51:2>     |-IfStmt 0x13a9439a0 <line:53:2, line:67:2> has_else     | |-BinaryOperator 0x13a9435c8 <line:53:6, col:20> 'int' '=='     | | |-ImplicitCastExpr 0x13a9435b0 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x13a943570 <col:6> 'int' lvalue Var 0x13a928e98 'clone_docu' 'int'     | | `-IntegerLiteral 0x13a943590 <col:20> 'int' 0     | |-CompoundStmt 0x13a943958 <col:23, line:65:2>     | | `-IfStmt 0x13a943938 <line:56:3, line:64:3>     | |   |-RecoveryExpr 0x13a9436e8 <line:56:7, col:40> '_Bool' contains-errors     | |   `-CompoundStmt 0x13a943920 <col:43, line:64:3>     | |     `-WhileStmt 0x13a943900 <line:57:4, line:63:4>     | |       |-RecoveryExpr 0x13a943708 <line:57:11> '_Bool' contains-errors     | |       `-CompoundStmt 0x13a9438e8 <col:18, line:63:4>     | |         `-IfStmt 0x13a9438c8 <line:58:5, line:61:5>     | |           |-RecoveryExpr 0x13a943868 <line:58:9, col:122> '_Bool' contains-errors     | |           `-CompoundStmt 0x13a9438b0 <col:125, line:61:5>     | |             `-BreakStmt 0x13a9438a8 <line:60:6>     | `-CompoundStmt 0x13a943990 <line:65:9, line:67:2>     `-IfStmt 0x13a943b58 <line:69:2, line:76:2>       |-RecoveryExpr 0x13a9439d0 <line:69:6, col:49> '_Bool' contains-errors       `-CompoundStmt 0x13a943b40 <col:52, line:76:2>         `-IfStmt 0x13a943a20 <line:71:3, line:73:3>           |-RecoveryExpr 0x13a9439f0 <line:71:7, col:54> '_Bool' contains-errors           `-CompoundStmt 0x13a943a10 <col:60, line:73:3> ","19370":"`-FunctionDecl 0x15100de88  line:1:12 invalid php_snmp_write_valueretrieval 'int (int *, int *)' static   |-ParmVarDecl 0x15100dd28 <col:42, col:59> col:59 referenced invalid snmp_object 'int *'   |-ParmVarDecl 0x15100dda8 <col:72, col:78> col:78 referenced invalid newval 'int *'   `-CompoundStmt 0x151027f18 <line:2:1, line:25:1>     |-DeclStmt 0x15100dff8 <line:4:2, col:19>     | `-VarDecl 0x15100df58 <col:2, col:12> col:6 used ret 'int' cinit     |   `-RecoveryExpr 0x15100dfd8 <col:12> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151027730 <line:6:2, line:11:2>     | |-BinaryOperator 0x15100e230 <line:6:6, col:26> 'int' contains-errors '!='     | | |-CallExpr 0x15100e1b0 <col:6, col:21> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x15100e170 <col:6> 'int ()' Function 0x15100e0b8 'Z_TYPE_P' 'int ()'     | | | `-RecoveryExpr 0x15100e190 <col:15> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15100e210 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151027708 <col:35, line:11:2>     |   |-CallExpr 0x151027438 <line:8:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15100e380 <col:3> 'int ()' Function 0x15100e2c8 'zval_copy_ctor' 'int ()'     |   | `-UnaryOperator 0x151027420 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x151027400 <col:19> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1510275f0 <line:9:3, col:24> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x151027540 <col:3> 'int ()' Function 0x151027488 'convert_to_long' 'int ()'     |   | `-UnaryOperator 0x1510275d8 <col:19, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x1510275b8 <col:20> '<dependent type>' contains-errors lvalue     |   `-BinaryOperator 0x1510276e8 <line:10:3, col:13> '<dependent type>' contains-errors '='     |     |-RecoveryExpr 0x151027638 <col:3> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x151027618 <col:3> 'int *' lvalue ParmVar 0x15100dda8 'newval' 'int *'     |     `-UnaryOperator 0x1510276d0 <col:12, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x1510276b0 <col:13> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151027ce0 <line:13:2, line:18:2> has_else     | |-RecoveryExpr 0x1510279c8 <line:13:6, col:105> '_Bool' contains-errors     | |-CompoundStmt 0x151027b00 <col:108, line:15:2>     | | `-BinaryOperator 0x151027ae0 <line:14:3, col:48> '<dependent type>' contains-errors '='     | |   |-CXXDependentScopeMemberExpr 0x151027a30 <col:3, col:16> '<dependent type>' contains-errors lvalue ->valueretrieval     | |   | `-RecoveryExpr 0x151027a08 <col:3> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x1510279e8 <col:3> 'int *' lvalue ParmVar 0x15100dd28 'snmp_object' 'int *'     | |   `-CallExpr 0x151027ab8 <col:33, col:48> '<dependent type>' contains-errors     | |     |-DeclRefExpr 0x151027a78 <col:33> 'int ()' Function 0x151027778 'Z_LVAL_P' 'int ()'     | |     `-RecoveryExpr 0x151027a98 <col:42> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x151027cc8 <line:15:9, line:18:2>     |   `-BinaryOperator 0x151027ca8 <line:17:3, col:9> 'int' contains-errors '='     |     |-DeclRefExpr 0x151027c30 <col:3> 'int' contains-errors lvalue Var 0x15100df58 'ret' 'int'     |     `-RecoveryExpr 0x151027c88 <col:9> '<dependent type>' contains-errors lvalue     |-IfStmt 0x151027eb0 <line:20:2, line:22:2>     | |-RecoveryExpr 0x151027d30 <line:20:6, col:17> '_Bool' contains-errors     | `-CompoundStmt 0x151027e98 <col:23, line:22:2>     |   `-CallExpr 0x151027e70 <line:21:3, col:19> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x151027e30 <col:3> 'int ()' Function 0x151027d78 'zval_dtor' 'int ()'     |     `-RecoveryExpr 0x151027e50 <col:13> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x151027f08 <line:24:2, col:9>       `-ImplicitCastExpr 0x151027ef0 <col:9> 'int' contains-errors <LValueToRValue>         `-DeclRefExpr 0x151027ed0 <col:9> 'int' contains-errors lvalue Var 0x15100df58 'ret' 'int' ","19746":"`-FunctionDecl 0x15b941300  col:14 implicit used strchr 'char *(const char *, int)' extern   |-ParmVarDecl 0x15b941400 <<invalid sloc>> <invalid sloc> 'const char *'   |-ParmVarDecl 0x15b941468 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x15b9413a8 <<invalid sloc>> Implicit 893 ","19366":"`-FunctionDecl 0x1380269c0  line:1:6 br_mdb_notify 'void (struct net_device *, struct net_bridge_port *, struct br_ip *, int)'   |-ParmVarDecl 0x13800e248 <col:20, col:39> col:39 used dev 'struct net_device *'   |-ParmVarDecl 0x138026628 <col:44, col:68> col:68 used port 'struct net_bridge_port *'   |-ParmVarDecl 0x1380267f8 <line:2:6, col:20> col:20 used group 'struct br_ip *'   |-ParmVarDecl 0x138026878 <col:27, col:31> col:31 used type 'int'   `-CompoundStmt 0x1380272f0 <line:3:1, line:13:1>     |-DeclStmt 0x138026c48 <line:4:2, col:27>     | |-RecordDecl 0x138026ad0 <col:2, col:9> col:9 struct br_mdb_entry     | `-VarDecl 0x138026bc8 <col:2, col:22> col:22 referenced invalid entry 'struct br_mdb_entry'     |-BinaryOperator 0x138026d98 <line:6:2, col:29> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x138026ca8 <col:2, col:8> '<dependent type>' contains-errors lvalue .ifindex     | | `-RecoveryExpr 0x138026c80 <col:2> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x138026c60 <col:2> 'struct br_mdb_entry' lvalue Var 0x138026bc8 'entry' 'struct br_mdb_entry'     | `-CXXDependentScopeMemberExpr 0x138026d50 <col:18, col:29> '<dependent type>' contains-errors lvalue ->ifindex     |   `-RecoveryExpr 0x138026d28 <col:18, col:24> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138026cf0 <col:18> 'struct net_bridge_port *' lvalue ParmVar 0x138026628 'port' 'struct net_bridge_port *'     |-BinaryOperator 0x138026ef0 <line:7:2, col:28> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x138026e48 <col:2, col:13> '<dependent type>' contains-errors lvalue .proto     | | `-CXXDependentScopeMemberExpr 0x138026e00 <col:2, col:8> '<dependent type>' contains-errors lvalue .addr     | |   `-RecoveryExpr 0x138026dd8 <col:2> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x138026db8 <col:2> 'struct br_mdb_entry' lvalue Var 0x138026bc8 'entry' 'struct br_mdb_entry'     | `-RecoveryExpr 0x138026ec8 <col:21, col:28> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x138026e90 <col:21> 'struct br_ip *' lvalue ParmVar 0x1380267f8 'group' 'struct br_ip *'     |-BinaryOperator 0x1380270d8 <line:8:2, col:30> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x138026fe8 <col:2, col:15> '<dependent type>' contains-errors lvalue .ip4     | | `-CXXDependentScopeMemberExpr 0x138026fa0 <col:2, col:13> '<dependent type>' contains-errors lvalue .u     | |   `-CXXDependentScopeMemberExpr 0x138026f58 <col:2, col:8> '<dependent type>' contains-errors lvalue .addr     | |     `-RecoveryExpr 0x138026f30 <col:2> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x138026f10 <col:2> 'struct br_mdb_entry' lvalue Var 0x138026bc8 'entry' 'struct br_mdb_entry'     | `-CXXDependentScopeMemberExpr 0x138027090 <col:21, col:30> '<dependent type>' contains-errors lvalue .ip4     |   `-RecoveryExpr 0x138027068 <col:21, col:28> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x138027030 <col:21> 'struct br_ip *' lvalue ParmVar 0x1380267f8 'group' 'struct br_ip *'     `-CallExpr 0x1380272b8 <line:12:2, col:35> '<dependent type>' contains-errors       |-DeclRefExpr 0x138027220 <col:2> 'int ()' Function 0x138027168 '__br_mdb_notify' 'int ()'       |-DeclRefExpr 0x138027240 <col:18> 'struct net_device *' lvalue ParmVar 0x13800e248 'dev' 'struct net_device *'       |-UnaryOperator 0x138027280 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x138027260 <col:24> '<dependent type>' contains-errors lvalue       `-DeclRefExpr 0x138027298 <col:31> 'int' lvalue ParmVar 0x138026878 'type' 'int' ","20117":"`-FunctionDecl 0x1558f0088  line:1:14 invalid Eval 'int (int *, int *)'   |-ParmVarDecl 0x1558eff28 <col:19, col:34> col:34 referenced invalid context 'int *'   |-ParmVarDecl 0x1558effa8 <col:43, col:55> col:55 invalid node 'int *'   `-CompoundStmt 0x15500a3a0 <col:61, line:17:1>     |-DeclStmt 0x1558f03d0 <line:2:3, col:64>     | `-VarDecl 0x1558f0158 <col:3, col:23> col:23 invalid params 'const int *'     |-DeclStmt 0x1558f0518 <line:3:3, col:66>     | `-VarDecl 0x1558f0400 <col:3, col:23> col:23 invalid indices 'const int *'     `-SwitchStmt 0x155009de8 <line:6:3, line:16:3>       |-ImplicitCastExpr 0x155009dd0 <line:6:11, col:20> '<dependent type>' contains-errors <LValueToRValue>       | `-CXXDependentScopeMemberExpr 0x155009d88 <col:11, col:20> '<dependent type>' contains-errors lvalue ->type       |   `-RecoveryExpr 0x155009d68 <col:11> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x15500a388 <col:26, line:16:3>         `-DefaultStmt 0x15500a368 <line:11:5, line:14:43>           `-CallExpr 0x15500a330 <line:12:7, line:14:43> '<dependent type>' contains-errors             |-CXXDependentScopeMemberExpr 0x15500a0d8 <line:12:7, col:16> '<dependent type>' contains-errors lvalue ->ReportError             | `-RecoveryExpr 0x15500a0b0 <col:7> '<dependent type>' contains-errors lvalue             |   `-DeclRefExpr 0x15500a090 <col:7> 'int *' lvalue ParmVar 0x1558eff28 'context' 'int *'             |-RecoveryExpr 0x15500a120 <line:13:11> '<dependent type>' contains-errors lvalue             |-StringLiteral 0x15500a180 <col:20> 'char[4]' lvalue \"STR\"             `-CallExpr 0x15500a308 <line:14:11, col:42> '<dependent type>' contains-errors               |-DeclRefExpr 0x15500a280 <col:11> 'int ()' Function 0x15500a1c8 'TfLiteTypeGetName' 'int ()'               `-CXXDependentScopeMemberExpr 0x15500a2c0 <col:29, col:38> '<dependent type>' contains-errors lvalue ->type                 `-RecoveryExpr 0x15500a2a0 <col:29> '<dependent type>' contains-errors lvalue ","19379":"`-FunctionDecl 0x152008478  col:3 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x152008578 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x152008520 <<invalid sloc>> Implicit 869 ","20137":"`-FunctionDecl 0x1271415b0  col:4 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x1271416b0 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x127141658 <<invalid sloc>> Implicit 869 ","19320":"`-FunctionDecl 0x1340f37c0  col:2 implicit used strcpy 'char *(char *, const char *)' extern   |-ParmVarDecl 0x1340f38c0 <<invalid sloc>> <invalid sloc> 'char *'   |-ParmVarDecl 0x1340f3928 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1340f3868 <<invalid sloc>> Implicit 885 ","19528":"`-FunctionDecl 0x13d928318  line:1:1 invalid OJPEGVGetField 'int (int *, int, int)'   |-ParmVarDecl 0x13d928128 <col:16, col:22> col:22 invalid tif 'int *'   |-ParmVarDecl 0x13d9281a8 <col:27, col:34> col:34 invalid tag 'int'   |-ParmVarDecl 0x13d928228 <col:39, col:47> col:47 invalid ap 'int'   `-CompoundStmt 0x13d941db8 <line:2:1, line:40:1>     |-SwitchStmt 0x13d928440 <line:4:2, line:38:2>     | |-ImplicitCastExpr 0x13d928428 <line:4:9> '<dependent type>' contains-errors <LValueToRValue>     | | `-RecoveryExpr 0x13d928408 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13d941d08 <line:5:2, line:38:2>     |   |-BreakStmt 0x13d928650 <line:8:4>     |   |-BreakStmt 0x13d9286e0 <line:11:4>     |   |-IfStmt 0x13d9419b0 <line:13:4, line:14:32>     |   | |-BinaryOperator 0x13d941848 <line:13:8, col:37> 'int' contains-errors '=='     |   | | |-CXXDependentScopeMemberExpr 0x13d941800 <col:8, col:12> '<dependent type>' contains-errors lvalue ->subsamplingcorrect_done     |   | | | `-RecoveryExpr 0x13d9287a0 <col:8> '<dependent type>' contains-errors lvalue     |   | | `-IntegerLiteral 0x13d928760 <col:37> 'int' 0     |   | `-CallExpr 0x13d941988 <line:14:5, col:32> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x13d941948 <col:5> 'int ()' Function 0x13d941890 'OJPEGSubsamplingCorrect' 'int ()'     |   |   `-RecoveryExpr 0x13d941968 <col:29> '<dependent type>' contains-errors lvalue     |   |-BreakStmt 0x13d941a50 <line:17:4>     |   |-BreakStmt 0x13d941ad8 <line:21:4>     |   |-BreakStmt 0x13d941b60 <line:25:4>     |   |-BreakStmt 0x13d941be8 <line:29:4>     |   |-BreakStmt 0x13d941c30 <line:32:4>     |   |-BreakStmt 0x13d941c78 <line:35:4>     |   `-DefaultStmt 0x13d941ce8 <line:36:3, col:10>     |     `-NullStmt 0x13d941ce0 <col:10>     `-ReturnStmt 0x13d941da8 <line:39:2, col:11>       `-ParenExpr 0x13d941d88 <col:9, col:11> 'int'         `-IntegerLiteral 0x13d941d68 <col:10> 'int' 1 ","19959":"`-FunctionDecl 0x136928280  line:1:13 invalid InitXCFImage 'void (int *, int *)' static   |-ParmVarDecl 0x136928128 <col:26, col:40> col:40 referenced invalid outLayer 'int *'   |-ParmVarDecl 0x1369281a8 <col:49, col:64> col:64 invalid exception 'int *'   `-CompoundStmt 0x136941da0 <line:2:1, line:9:1>     |-BinaryOperator 0x1369284c0 <line:3:3, col:37> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x136928410 <col:3, col:25> '<dependent type>' contains-errors lvalue .x     | | `-CXXDependentScopeMemberExpr 0x1369283c8 <col:3, col:20> '<dependent type>' contains-errors lvalue ->page     | |   `-CXXDependentScopeMemberExpr 0x136928380 <col:3, col:13> '<dependent type>' contains-errors lvalue ->image     | |     `-RecoveryExpr 0x136928358 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x136928338 <col:3> 'int *' lvalue ParmVar 0x136928128 'outLayer' 'int *'     | `-CXXDependentScopeMemberExpr 0x136928478 <col:27, col:37> '<dependent type>' contains-errors lvalue ->offset_x     |   `-RecoveryExpr 0x136928458 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x136928668 <line:4:3, col:37> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x1369285b8 <col:3, col:25> '<dependent type>' contains-errors lvalue .y     | | `-CXXDependentScopeMemberExpr 0x136928570 <col:3, col:20> '<dependent type>' contains-errors lvalue ->page     | |   `-CXXDependentScopeMemberExpr 0x136928528 <col:3, col:13> '<dependent type>' contains-errors lvalue ->image     | |     `-RecoveryExpr 0x136928500 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x1369284e0 <col:3> 'int *' lvalue ParmVar 0x136928128 'outLayer' 'int *'     | `-CXXDependentScopeMemberExpr 0x136928620 <col:27, col:37> '<dependent type>' contains-errors lvalue ->offset_y     |   `-RecoveryExpr 0x136928600 <col:27> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x136941848 <line:5:3, col:41> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x136928760 <col:3, col:25> '<dependent type>' contains-errors lvalue .width     | | `-CXXDependentScopeMemberExpr 0x136928718 <col:3, col:20> '<dependent type>' contains-errors lvalue ->page     | |   `-CXXDependentScopeMemberExpr 0x1369286d0 <col:3, col:13> '<dependent type>' contains-errors lvalue ->image     | |     `-RecoveryExpr 0x1369286a8 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x136928688 <col:3> 'int *' lvalue ParmVar 0x136928128 'outLayer' 'int *'     | `-CXXDependentScopeMemberExpr 0x136941800 <col:31, col:41> '<dependent type>' contains-errors lvalue ->width     |   `-RecoveryExpr 0x1369287a8 <col:31> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x1369419f0 <line:6:3, col:42> '<dependent type>' contains-errors '='     | |-CXXDependentScopeMemberExpr 0x136941940 <col:3, col:25> '<dependent type>' contains-errors lvalue .height     | | `-CXXDependentScopeMemberExpr 0x1369418f8 <col:3, col:20> '<dependent type>' contains-errors lvalue ->page     | |   `-CXXDependentScopeMemberExpr 0x1369418b0 <col:3, col:13> '<dependent type>' contains-errors lvalue ->image     | |     `-RecoveryExpr 0x136941888 <col:3> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x136941868 <col:3> 'int *' lvalue ParmVar 0x136928128 'outLayer' 'int *'     | `-CXXDependentScopeMemberExpr 0x1369419a8 <col:32, col:42> '<dependent type>' contains-errors lvalue ->height     |   `-RecoveryExpr 0x136941988 <col:32> '<dependent type>' contains-errors lvalue     `-CStyleCastExpr 0x136941d78 <line:7:3, line:8:14> 'void' contains-errors <ToVoid>       `-CallExpr 0x136941d28 <line:7:10, line:8:14> '<dependent type>' contains-errors         |-DeclRefExpr 0x136941b70 <line:7:10> 'int ()' Function 0x136941ab8 'SetImageProperty' 'int ()'         |-CXXDependentScopeMemberExpr 0x136941bb0 <col:27, col:37> '<dependent type>' contains-errors lvalue ->image         | `-RecoveryExpr 0x136941b90 <col:27> '<dependent type>' contains-errors lvalue         |-StringLiteral 0x136941c40 <col:43> 'char[4]' lvalue \"STR\"         |-CStyleCastExpr 0x136941ce0 <col:49, col:67> 'char *' contains-errors <Dependent>         | `-CXXDependentScopeMemberExpr 0x136941c80 <col:57, col:67> '<dependent type>' contains-errors lvalue ->name         |   `-RecoveryExpr 0x136941c60 <col:57> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x136941d08 <line:8:5> '<dependent type>' contains-errors lvalue ","19531":"`-FunctionDecl 0x15991b680  line:1:6 invalid LZ4_init 'void (int *, const int *)'   |-ParmVarDecl 0x15991b528 <col:15, col:38> col:38 referenced invalid lz4ds 'int *'   |-ParmVarDecl 0x15991b5a8 <col:45, col:57> col:57 invalid base 'const int *'   `-CompoundStmt 0x15991bab0 <line:2:1, line:5:1>     |-CallExpr 0x15991b9a8 <line:3:5, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15991b890 <col:5> 'int ()' Function 0x15991b7d8 'MEM_INIT' 'int ()'     | |-CXXDependentScopeMemberExpr 0x15991b8d0 <col:14, col:21> '<dependent type>' contains-errors lvalue ->hashTable     | | `-RecoveryExpr 0x15991b8b0 <col:14> '<dependent type>' contains-errors lvalue     | |-IntegerLiteral 0x15991b918 <col:32> 'int' 0     | `-RecoveryExpr 0x15991b988 <col:35> '<dependent type>' contains-errors lvalue     `-BinaryOperator 0x15991ba90 <line:4:5, col:26> '<dependent type>' contains-errors '='       |-CXXDependentScopeMemberExpr 0x15991ba28 <col:5, col:12> '<dependent type>' contains-errors lvalue ->bufferStart       | `-RecoveryExpr 0x15991ba00 <col:5> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x15991b9e0 <col:5> 'int *' lvalue ParmVar 0x15991b528 'lz4ds' 'int *'       `-RecoveryExpr 0x15991ba70 <col:26> '<dependent type>' contains-errors lvalue ","19613":"`-FunctionDecl 0x140128318  line:1:14 invalid argv_group_get_help 'char *(int *, int *, int)' static   |-ParmVarDecl 0x140128128 <col:34, col:40> col:40 invalid cmd 'int *'   |-ParmVarDecl 0x1401281a8 <col:45, col:55> col:55 invalid cd 'int *'   |-ParmVarDecl 0x140128228 <col:59, col:64> col:64 invalid use_color 'int'   `-CompoundStmt 0x138008f00 <col:75, line:18:1>     |-CallExpr 0x140128760 <line:3:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x140128690 <col:2> 'int ()' Function 0x1401285d8 'fill_usage_strbuf' 'int ()'     | |-RecoveryExpr 0x140128740 <col:21> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x1401286c8 <col:25> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1401286e8 <col:29> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x138008868 <line:5:2, col:14>     | `-VarDecl 0x138008800 <col:2, col:9> col:9 used it_cd 'void **'     |-RecoveryExpr 0x138008960 <line:6:2, col:19> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x138008940 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x138008920 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1380088b8 <col:19> 'int' 0     |-CallExpr 0x138008ad0 <line:8:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138008a70 <col:2> 'int ()' Function 0x1380089b8 'r_cmd_desc_children_foreach' 'int ()'     | |-RecoveryExpr 0x138008a90 <col:31> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x138008ab0 <col:35> 'void **' lvalue Var 0x138008800 'it_cd' 'void **'     |-CompoundStmt 0x138008c30 <col:42, line:11:2>     |-CallExpr 0x138008ca0 <line:13:2, col:40> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138008c40 <col:2> 'int ()' Function 0x1380089b8 'r_cmd_desc_children_foreach' 'int ()'     | |-RecoveryExpr 0x138008c60 <col:31> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x138008c80 <col:35> 'void **' lvalue Var 0x138008800 'it_cd' 'void **'     `-CompoundStmt 0x138008df0 <col:42, line:16:2> ","19599":"`-FunctionDecl 0x15b144d58  line:1:12 do_remount 'int (struct path *, int, int, void *)' static   |-ParmVarDecl 0x15b128648 <col:23, col:36> col:36 used path 'struct path *'   |-ParmVarDecl 0x15b1286c8 <col:42, col:46> col:46 used flags 'int'   |-ParmVarDecl 0x15b128748 <col:53, col:57> col:57 used mnt_flags 'int'   |-ParmVarDecl 0x15b144c00 <line:2:9, col:15> col:15 used data 'void *'   `-CompoundStmt 0x15b146dd8 <line:3:1, line:39:1>     |-DeclStmt 0x15b144ee8 <line:4:2, col:9>     | `-VarDecl 0x15b144e80 <col:2, col:6> col:6 used err 'int'     |-DeclStmt 0x15b145190 <line:5:2, col:44>     | |-RecordDecl 0x15b144f00 <col:2, col:9> col:9 struct super_block     | `-VarDecl 0x15b145068 <col:2, col:38> col:22 used sb 'struct super_block *' cinit     |   `-CXXDependentScopeMemberExpr 0x15b145130 <col:27, col:38> '<dependent type>' contains-errors lvalue ->mnt_sb     |     `-RecoveryExpr 0x15b145108 <col:27, col:33> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b1450d0 <col:27> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     |-DeclStmt 0x15b145570 <line:6:2, col:43>     | |-RecordDecl 0x15b1451a8 <col:2, col:9> col:9 struct mount     | `-VarDecl 0x15b145318 <col:2, col:42> col:16 used mnt 'struct mount *' cinit     |   `-CallExpr 0x15b145530 <col:22, col:42> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15b1454b0 <col:22> 'int ()' Function 0x15b1453f8 'real_mount' 'int ()'     |     `-RecoveryExpr 0x15b145508 <col:33, col:39> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x15b1454d0 <col:33> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     |-IfStmt 0x15b1457f8 <line:8:2, line:9:11>     | |-UnaryOperator 0x15b145738 <line:8:6, col:20> 'int' contains-errors prefix '!' cannot overflow     | | `-CallExpr 0x15b1456f8 <col:7, col:20> 'int' contains-errors     | |   |-ImplicitCastExpr 0x15b1456e0 <col:7> 'int (*)()' <FunctionToPointerDecay>     | |   | `-DeclRefExpr 0x15b145668 <col:7> 'int ()' Function 0x15b1455b0 'check_mnt' 'int ()'     | |   `-ImplicitCastExpr 0x15b145720 <col:17> 'struct mount *' contains-errors <LValueToRValue>     | |     `-DeclRefExpr 0x15b145688 <col:17> 'struct mount *' contains-errors lvalue Var 0x15b145318 'mnt' 'struct mount *'     | `-ReturnStmt 0x15b1457e8 <line:9:3, col:11>     |   `-UnaryOperator 0x15b1457d0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15b1457b8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15b145798 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15b1459e8 <line:11:2, line:12:11>     | |-BinaryOperator 0x15b145920 <line:11:6, col:33> 'int' contains-errors '!='     | | |-RecoveryExpr 0x15b145850 <col:6, col:12> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x15b145818 <col:6> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     | | `-CXXDependentScopeMemberExpr 0x15b1458d8 <col:22, col:33> '<dependent type>' contains-errors lvalue ->mnt_root     | |   `-RecoveryExpr 0x15b1458b0 <col:22, col:28> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x15b145878 <col:22> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     | `-ReturnStmt 0x15b1459d8 <line:12:3, col:11>     |   `-UnaryOperator 0x15b1459c0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15b1459a8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15b145988 <col:11> '<dependent type>' contains-errors lvalue     |-IfStmt 0x14b008c28 <line:15:2, line:18:2>     | |-RecoveryExpr 0x15b145b40 <line:15:6, line:16:32> '_Bool' contains-errors     | `-CompoundStmt 0x14b008c10 <col:35, line:18:2>     |   `-ReturnStmt 0x14b008c00 <line:17:3, col:11>     |     `-UnaryOperator 0x15b145be0 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x15b145bc8 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x15b145ba8 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x14b008e20 <line:19:2, col:36> 'int' contains-errors '='     | |-DeclRefExpr 0x14b008c48 <col:2> 'int' lvalue Var 0x15b144e80 'err' 'int'     | `-CallExpr 0x14b008dc0 <col:8, col:36> 'int' contains-errors     |   |-ImplicitCastExpr 0x14b008da8 <col:8> 'int (*)()' <FunctionToPointerDecay>     |   | `-DeclRefExpr 0x14b008d48 <col:8> 'int ()' Function 0x14b008c90 'security_sb_remount' 'int ()'     |   |-ImplicitCastExpr 0x14b008df0 <col:28> 'struct super_block *' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x14b008d68 <col:28> 'struct super_block *' contains-errors lvalue Var 0x15b145068 'sb' 'struct super_block *'     |   `-ImplicitCastExpr 0x14b008e08 <col:32> 'void *' <LValueToRValue>     |     `-DeclRefExpr 0x14b008d88 <col:32> 'void *' lvalue ParmVar 0x15b144c00 'data' 'void *'     |-IfStmt 0x14b008ec0 <line:20:2, line:21:10>     | |-ImplicitCastExpr 0x14b008e60 <line:20:6> 'int' <LValueToRValue>     | | `-DeclRefExpr 0x14b008e40 <col:6> 'int' lvalue Var 0x15b144e80 'err' 'int'     | `-ReturnStmt 0x14b008eb0 <line:21:3, col:10>     |   `-ImplicitCastExpr 0x14b008e98 <col:10> 'int' <LValueToRValue>     |     `-DeclRefExpr 0x14b008e78 <col:10> 'int' lvalue Var 0x15b144e80 'err' 'int'     |-CallExpr 0x14b009058 <line:23:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14b008fc0 <col:2> 'int ()' Function 0x14b008f08 'down_write' 'int ()'     | `-UnaryOperator 0x14b009040 <col:13, col:18> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x14b009018 <col:14, col:18> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x14b008fe0 <col:14> 'struct super_block *' contains-errors lvalue Var 0x15b145068 'sb' 'struct super_block *'     |-IfStmt 0x14b009778 <line:24:2, line:29:41> has_else     | |-BinaryOperator 0x14b0090f8 <line:24:6, col:14> '<dependent type>' contains-errors '&'     | | |-DeclRefExpr 0x14b009080 <col:6> 'int' lvalue ParmVar 0x15b1286c8 'flags' 'int'     | | `-RecoveryExpr 0x14b0090d8 <col:14> '<dependent type>' contains-errors lvalue     | |-BinaryOperator 0x14b0092e8 <line:25:3, col:44> 'int' contains-errors '='     | | |-DeclRefExpr 0x14b009118 <col:3> 'int' lvalue Var 0x15b144e80 'err' 'int'     | | `-CallExpr 0x14b0092b8 <col:9, col:44> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x14b009218 <col:9> 'int ()' Function 0x14b009160 'change_mount_flags' 'int ()'     | |   |-RecoveryExpr 0x14b009270 <col:28, col:34> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x14b009238 <col:28> 'struct path *' lvalue ParmVar 0x15b128648 'path' 'struct path *'     | |   `-DeclRefExpr 0x14b009298 <col:39> 'int' lvalue ParmVar 0x15b1286c8 'flags' 'int'     | `-IfStmt 0x14b009748 <line:26:7, line:29:41> has_else     |   |-UnaryOperator 0x14b0094a8 <line:26:11, col:33> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | `-CallExpr 0x14b009480 <col:12, col:33> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x14b0093e8 <col:12> 'int ()' Function 0x14b009330 'capable' 'int ()'     |   |   `-RecoveryExpr 0x14b009460 <col:20> '<dependent type>' contains-errors lvalue     |   |-NullStmt 0x14b009740 <line:27:3>     |   `-BinaryOperator 0x14b009720 <line:29:3, col:41> 'int' contains-errors '='     |     |-DeclRefExpr 0x14b0094e0 <col:3> 'int' lvalue Var 0x15b144e80 'err' 'int'     |     `-CallExpr 0x14b009698 <col:9, col:41> 'int' contains-errors     |       |-ImplicitCastExpr 0x14b009680 <col:9> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x14b0095e0 <col:9> 'int ()' Function 0x14b009528 'do_remount_sb' 'int ()'     |       |-ImplicitCastExpr 0x14b0096d8 <col:23> 'struct super_block *' contains-errors <LValueToRValue>     |       | `-DeclRefExpr 0x14b009600 <col:23> 'struct super_block *' contains-errors lvalue Var 0x15b145068 'sb' 'struct super_block *'     |       |-ImplicitCastExpr 0x14b0096f0 <col:27> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x14b009620 <col:27> 'int' lvalue ParmVar 0x15b1286c8 'flags' 'int'     |       |-ImplicitCastExpr 0x14b009708 <col:34> 'void *' <LValueToRValue>     |       | `-DeclRefExpr 0x14b009640 <col:34> 'void *' lvalue ParmVar 0x15b144c00 'data' 'void *'     |       `-IntegerLiteral 0x14b009660 <col:40> 'int' 0     |-IfStmt 0x15b146bd0 <line:30:2, line:36:2>     | |-UnaryOperator 0x14b0097e0 <line:30:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x14b0097c8 <col:7> 'int' <LValueToRValue>     | |   `-DeclRefExpr 0x14b0097a8 <col:7> 'int' lvalue Var 0x15b144e80 'err' 'int'     | `-CompoundStmt 0x15b146ba0 <col:12, line:36:2>     |   |-CallExpr 0x14b009910 <line:31:3, col:19> 'int'     |   | `-ImplicitCastExpr 0x14b0098f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   |   `-DeclRefExpr 0x14b0098d8 <col:3> 'int ()' Function 0x14b009820 'lock_mount_hash' 'int ()'     |   |-BinaryOperator 0x14b009ac0 <line:33:3, col:24> '<dependent type>' contains-errors '='     |   | |-CXXDependentScopeMemberExpr 0x14b009a58 <col:3, col:12> '<dependent type>' contains-errors lvalue .mnt_flags     |   | | `-RecoveryExpr 0x14b009a30 <col:3, col:8> '<dependent type>' contains-errors lvalue     |   | |   `-DeclRefExpr 0x14b0099f8 <col:3> 'struct mount *' contains-errors lvalue Var 0x15b145318 'mnt' 'struct mount *'     |   | `-DeclRefExpr 0x14b009aa0 <col:24> 'int' lvalue ParmVar 0x15b128748 'mnt_flags' 'int'     |   |-CallExpr 0x15b146a40 <line:34:3, col:34> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x14b009bc0 <col:3> 'int ()' Function 0x14b009b08 'touch_mnt_namespace' 'int ()'     |   | `-RecoveryExpr 0x15b146a18 <col:23, col:28> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x14b009be0 <col:23> 'struct mount *' contains-errors lvalue Var 0x15b145318 'mnt' 'struct mount *'     |   `-CallExpr 0x15b146b80 <line:35:3, col:21> 'int'     |     `-ImplicitCastExpr 0x15b146b68 <col:3> 'int (*)()' <FunctionToPointerDecay>     |       `-DeclRefExpr 0x15b146b48 <col:3> 'int ()' Function 0x15b146a90 'unlock_mount_hash' 'int ()'     |-CallExpr 0x15b146d68 <line:37:2, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15b146cd0 <col:2> 'int ()' Function 0x15b146c18 'up_write' 'int ()'     | `-UnaryOperator 0x15b146d50 <col:11, col:16> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15b146d28 <col:12, col:16> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15b146cf0 <col:12> 'struct super_block *' contains-errors lvalue Var 0x15b145068 'sb' 'struct super_block *'     `-ReturnStmt 0x15b146dc8 <line:38:2, col:9>       `-ImplicitCastExpr 0x15b146db0 <col:9> 'int' <LValueToRValue>         `-DeclRefExpr 0x15b146d90 <col:9> 'int' lvalue Var 0x15b144e80 'err' 'int' ","19995":"`-FunctionDecl 0x13c856480  line:1:13 invalid jp2_pclr_dumpdata 'void (int *, int *)' static   |-ParmVarDecl 0x13c856328 <col:31, col:42> col:42 invalid box 'int *'   |-ParmVarDecl 0x13c8563a8 <col:47, col:53> col:53 invalid out 'int *'   `-CompoundStmt 0x13c870070 <line:2:1, line:13:1>     |-DeclStmt 0x13c856698 <line:4:2, col:16>     | `-VarDecl 0x13c856630 <col:2, col:15> col:15 used i 'unsigned int'     |-DeclStmt 0x13c856730 <line:5:2, col:7>     | `-VarDecl 0x13c8566c8 <col:2, col:6> col:6 used j 'int'     `-ForStmt 0x13c870038 <line:8:2, line:12:2>       |-BinaryOperator 0x13c86fab8 <line:8:7, col:11> 'unsigned int' '='       | |-DeclRefExpr 0x13c86fa60 <col:7> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'       | `-ImplicitCastExpr 0x13c86faa0 <col:11> 'unsigned int' <IntegralCast>       |   `-IntegerLiteral 0x13c86fa80 <col:11> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x13c86fbe0 <col:14, col:24> 'int' contains-errors '<'       | |-DeclRefExpr 0x13c86fad8 <col:14> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'       | `-CXXDependentScopeMemberExpr 0x13c86fb98 <col:18, col:24> '<dependent type>' contains-errors lvalue ->numlutents       |   `-RecoveryExpr 0x13c86fb78 <col:18> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x13c86fc20 <col:36, col:38> 'unsigned int' prefix '++'       | `-DeclRefExpr 0x13c86fc00 <col:38> 'unsigned int' lvalue Var 0x13c856630 'i' 'unsigned int'       `-CompoundStmt 0x13c870020 <col:41, line:12:2>         `-ForStmt 0x13c86ffe8 <line:9:3, line:11:3>           |-BinaryOperator 0x13c86fc78 <line:9:8, col:12> 'int' '='           | |-DeclRefExpr 0x13c86fc38 <col:8> 'int' lvalue Var 0x13c8566c8 'j' 'int'           | `-IntegerLiteral 0x13c86fc58 <col:12> 'int' 0           |-<<<NULL>>>           |-BinaryOperator 0x13c86fda0 <col:15, col:25> 'int' contains-errors '<'           | |-DeclRefExpr 0x13c86fc98 <col:15> 'int' lvalue Var 0x13c8566c8 'j' 'int'           | `-CXXDependentScopeMemberExpr 0x13c86fd58 <col:19, col:25> '<dependent type>' contains-errors lvalue ->numchans           |   `-RecoveryExpr 0x13c86fd38 <col:19> '<dependent type>' contains-errors lvalue           |-UnaryOperator 0x13c86fde0 <col:35, col:37> 'int' prefix '++'           | `-DeclRefExpr 0x13c86fdc0 <col:37> 'int' lvalue Var 0x13c8566c8 'j' 'int'           `-CompoundStmt 0x13c86ffd8 <col:40, line:11:3> ","19732":"`-FunctionDecl 0x136141538  line:1:1 sasl_handle_login 'int (struct sasl_session *const restrict, struct user *const, struct myuser *)'   |-ParmVarDecl 0x136128e48 <col:19, col:55> col:55 used p 'struct sasl_session *const restrict'   |-ParmVarDecl 0x136141228 <col:58, col:77> col:77 used u 'struct user *const'   |-ParmVarDecl 0x1361413f8 <col:80, col:95> col:95 used mu 'struct myuser *'   `-CompoundStmt 0x136144000 <line:2:1, line:73:1>     |-IfStmt 0x136142190 <line:6:2, line:26:2>     | |-UnaryOperator 0x136141690 <line:6:6, col:8> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x136141678 <col:8> 'struct myuser *' <LValueToRValue>     | |   `-DeclRefExpr 0x136141658 <col:8> 'struct myuser *' lvalue ParmVar 0x1361413f8 'mu' 'struct myuser *'     | `-CompoundStmt 0x136142170 <line:7:2, line:26:2>     |   |-IfStmt 0x136141c10 <line:8:3, line:14:3>     |   | |-UnaryOperator 0x136141738 <line:8:7, col:13> '<dependent type>' contains-errors prefix '!' cannot overflow     |   | | `-UnaryOperator 0x136141720 <col:9, col:13> '<dependent type>' contains-errors prefix '*' cannot overflow     |   | |   `-ImplicitCastExpr 0x136141708 <col:10, col:13> '<dependent type>' contains-errors <LValueToRValue>     |   | |     `-RecoveryExpr 0x1361416e0 <col:10, col:13> '<dependent type>' contains-errors lvalue     |   | |       `-DeclRefExpr 0x1361416a8 <col:10> 'struct sasl_session *const restrict' lvalue ParmVar 0x136128e48 'p' 'struct sasl_session *const restrict'     |   | `-CompoundStmt 0x136141c00 <line:9:3, line:14:3>     |   `-IfStmt 0x136142150 <line:16:3, line:25:3>     |     |-UnaryOperator 0x136141e18 <line:16:7, col:43> 'int' contains-errors prefix '!' cannot overflow     |     | `-ParenExpr 0x136141df8 <col:9, col:43> 'struct myuser *' contains-errors     |     |   `-BinaryOperator 0x136141dd8 <col:10, col:42> 'struct myuser *' contains-errors '='     |     |     |-DeclRefExpr 0x136141c30 <col:10> 'struct myuser *' lvalue ParmVar 0x1361413f8 'mu' 'struct myuser *'     |     |     `-CallExpr 0x136141db0 <col:15, col:42> '<dependent type>' contains-errors     |     |       |-DeclRefExpr 0x136141d30 <col:15> 'int ()' Function 0x136141c78 'myuser_find_uid' 'int ()'     |     |       `-RecoveryExpr 0x136141d88 <col:31, col:34> '<dependent type>' contains-errors lvalue     |     |         `-DeclRefExpr 0x136141d50 <col:31> 'struct sasl_session *const restrict' lvalue ParmVar 0x136128e48 'p' 'struct sasl_session *const restrict'     |     `-CompoundStmt 0x136142140 <line:17:3, line:25:3>     |-IfStmt 0x136142cd8 <line:29:2, line:53:2>     | |-BinaryOperator 0x1361422c8 <line:29:6, col:32> 'int' contains-errors '&&'     | | |-RecoveryExpr 0x136142200 <col:6, col:9> '<dependent type>' contains-errors lvalue     | | | `-DeclRefExpr 0x1361421b0 <col:6> 'struct user *const' lvalue ParmVar 0x136141228 'u' 'struct user *const'     | | `-BinaryOperator 0x1361422a8 <col:19, col:32> 'int' contains-errors '!='     | |   |-RecoveryExpr 0x136142260 <col:19, col:22> '<dependent type>' contains-errors lvalue     | |   | `-DeclRefExpr 0x136142228 <col:19> 'struct user *const' lvalue ParmVar 0x136141228 'u' 'struct user *const'     | |   `-DeclRefExpr 0x136142288 <col:32> 'struct myuser *' lvalue ParmVar 0x1361413f8 'mu' 'struct myuser *'     | `-CompoundStmt 0x136142cc0 <line:30:2, line:53:2>     |   `-IfStmt 0x136142ca0 <line:37:3, line:52:3>     |     |-RecoveryExpr 0x136142a80 <line:37:7, col:65> '_Bool' contains-errors     |     `-CompoundStmt 0x136142c90 <line:38:3, line:52:3>     `-IfStmt 0x1361431d0 <line:56:2, line:70:2>       |-RecoveryExpr 0x136142cf8 <line:56:6, col:8> '_Bool' contains-errors       `-CompoundStmt 0x1361431b8 <line:57:2, line:70:2>         `-IfStmt 0x136143188 <line:58:3, line:69:3> has_else           |-BinaryOperator 0x136142d98 <line:58:7, col:20> 'int' contains-errors '!='           | |-RecoveryExpr 0x136142d50 <col:7, col:10> '<dependent type>' contains-errors lvalue           | | `-DeclRefExpr 0x136142d18 <col:7> 'struct user *const' lvalue ParmVar 0x136141228 'u' 'struct user *const'           | `-DeclRefExpr 0x136142d78 <col:20> 'struct myuser *' lvalue ParmVar 0x1361413f8 'mu' 'struct myuser *'           |-CompoundStmt 0x136143000 <line:59:3, line:63:3>           `-CompoundStmt 0x136143178 <line:65:3, line:69:3> ","20059":"`-FunctionDecl 0x11f128700  col:7 implicit used isdigit 'int (int)' extern   |-ParmVarDecl 0x11f140a00 <<invalid sloc>> <invalid sloc> 'int'   |-BuiltinAttr 0x11f1287a8 <<invalid sloc>> Implicit 924   |-NoThrowAttr 0x11f140a70 <col:7> Implicit   `-PureAttr 0x11f140a98 <col:7> Implicit ","19171":"`-FunctionDecl 0x13000ddc8  line:1:1 invalid xmlFreeDtd 'int (int)'   |-ParmVarDecl 0x13000dcf0 <col:12, col:22> col:22 invalid cur 'int'   `-CompoundStmt 0x1381243b0 <col:27, line:45:1>     |-IfStmt 0x13000df38 <line:4:5, line:6:5>     | |-BinaryOperator 0x13000def0 <line:4:9, col:16> 'int' contains-errors '=='     | | |-RecoveryExpr 0x13000de78 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13000ded0 <col:16> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x13000df20 <col:22, line:6:5>     |   `-ReturnStmt 0x13000df10 <line:5:2>     |-IfStmt 0x138123890 <line:12:5, line:27:5>     | |-BinaryOperator 0x13000e388 <line:12:9, col:26> 'int' contains-errors '!='     | | |-CXXDependentScopeMemberExpr 0x13000e2e8 <col:9, col:14> '<dependent type>' contains-errors lvalue ->children     | | | `-RecoveryExpr 0x13000e2c8 <col:9> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x13000e368 <col:26> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x138123878 <col:32, line:27:5>     |   `-WhileStmt 0x138123858 <line:16:9, line:26:2>     |     |-BinaryOperator 0x138123440 <line:16:16, col:21> 'int' contains-errors '!='     |     | |-RecoveryExpr 0x138123400 <col:16> '<dependent type>' contains-errors lvalue     |     | `-RecoveryExpr 0x138123420 <col:21> '<dependent type>' contains-errors lvalue     |     `-CompoundStmt 0x138123840 <col:27, line:26:2>     |       `-IfStmt 0x138123820 <line:18:6, line:24:6>     |         |-RecoveryExpr 0x1381235f0 <line:18:10, line:21:30> '_Bool' contains-errors     |         `-CompoundStmt 0x138123810 <col:33, line:24:6>     |-CallExpr 0x138123a18 <line:28:5, col:24> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138123990 <col:5> 'int ()' Function 0x1381238d8 'DICT_FREE' 'int ()'     | `-CXXDependentScopeMemberExpr 0x1381239d0 <col:15, col:20> '<dependent type>' contains-errors lvalue ->name     |   `-RecoveryExpr 0x1381239b0 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138123ac8 <line:29:5, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138123a40 <col:5> 'int ()' Function 0x1381238d8 'DICT_FREE' 'int ()'     | `-CXXDependentScopeMemberExpr 0x138123a80 <col:15, col:20> '<dependent type>' contains-errors lvalue ->SystemID     |   `-RecoveryExpr 0x138123a60 <col:15> '<dependent type>' contains-errors lvalue     |-CallExpr 0x138123b78 <line:30:5, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x138123af0 <col:5> 'int ()' Function 0x1381238d8 'DICT_FREE' 'int ()'     | `-CXXDependentScopeMemberExpr 0x138123b30 <col:15, col:20> '<dependent type>' contains-errors lvalue ->ExternalID     |   `-RecoveryExpr 0x138123b10 <col:15> '<dependent type>' contains-errors lvalue     `-CallExpr 0x138124388 <line:44:5, col:16> '<dependent type>' contains-errors       |-DeclRefExpr 0x138124348 <col:5> 'int ()' Function 0x138124290 'xmlFree' 'int ()'       `-RecoveryExpr 0x138124368 <col:13> '<dependent type>' contains-errors lvalue ","20075":"`-FunctionDecl 0x12d928758  line:1:12 fail_path 'int (struct pgpath *)' static   |-ParmVarDecl 0x12d928648 <col:22, col:37> col:37 used pgpath 'struct pgpath *'   `-CompoundStmt 0x12d947040 <line:2:1, line:31:1>     |-DeclStmt 0x12d944cd0 <line:3:2, col:21>     | `-VarDecl 0x12d944c68 <col:2, col:16> col:16 used flags 'unsigned long'     |-DeclStmt 0x12d944f80 <line:4:2, col:37>     | |-RecordDecl 0x12d944ce8 <col:2, col:9> col:9 struct multipath     | `-VarDecl 0x12d944e58 <col:2, col:36> col:20 used m 'struct multipath *' cinit     |   `-CXXDependentScopeMemberExpr 0x12d944f20 <col:24, col:36> '<dependent type>' contains-errors lvalue ->m     |     `-RecoveryExpr 0x12d944ef8 <col:24, col:32> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d944ec0 <col:24> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     |-CallExpr 0x12d945178 <line:6:2, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d9450c0 <col:2> 'int ()' Function 0x12d945008 'spin_lock_irqsave' 'int ()'     | |-UnaryOperator 0x12d945140 <col:20, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x12d945118 <col:21, col:24> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d9450e0 <col:21> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     | `-DeclRefExpr 0x12d945158 <col:30> 'unsigned long' lvalue Var 0x12d944c68 'flags' 'unsigned long'     |-IfStmt 0x12d9452a0 <line:8:2, line:9:8>     | |-UnaryOperator 0x12d945220 <line:8:6, col:15> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x12d945208 <col:7, col:15> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x12d9451e0 <col:7, col:15> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d9451a8 <col:7> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | `-GotoStmt 0x12d945288 <line:9:3, col:8> 'out' 0x12d945238     |-CallExpr 0x12d945510 <line:11:2, col:38> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d9453a0 <col:2> 'int ()' Function 0x12d9452e8 'DMWARN' 'int ()'     | |-StringLiteral 0x12d945400 <col:9> 'char[4]' lvalue \"STR\"     | `-CXXDependentScopeMemberExpr 0x12d9454c8 <col:16, col:34> '<dependent type>' contains-errors lvalue ->name     |   `-CXXDependentScopeMemberExpr 0x12d945480 <col:16, col:29> '<dependent type>' contains-errors lvalue .dev     |     `-RecoveryExpr 0x12d945458 <col:16, col:24> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x12d945420 <col:16> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     |-CallExpr 0x12d9457b0 <line:13:2, col:63> '<dependent type>' contains-errors     | |-CXXDependentScopeMemberExpr 0x12d945630 <col:2, col:23> '<dependent type>' contains-errors lvalue ->fail_path     | | `-CXXDependentScopeMemberExpr 0x12d9455e8 <col:2, col:17> '<dependent type>' contains-errors lvalue .type     | |   `-CXXDependentScopeMemberExpr 0x12d9455a0 <col:2, col:14> '<dependent type>' contains-errors lvalue ->ps     | |     `-RecoveryExpr 0x12d945578 <col:2, col:10> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x12d945540 <col:2> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | |-UnaryOperator 0x12d945720 <col:33, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-CXXDependentScopeMemberExpr 0x12d9456d8 <col:34, col:46> '<dependent type>' contains-errors lvalue ->ps     | |   `-RecoveryExpr 0x12d9456b0 <col:34, col:42> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d945678 <col:34> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | `-UnaryOperator 0x12d945798 <col:50, col:59> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d945770 <col:51, col:59> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d945738 <col:51> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     |-BinaryOperator 0x12d945860 <line:14:2, col:22> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x12d945818 <col:2, col:10> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d9457e0 <col:2> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | `-IntegerLiteral 0x12d945840 <col:22> 'int' 0     |-UnaryOperator 0x12d9458e0 <line:15:2, col:20> '<dependent type>' contains-errors postfix '++' cannot overflow     | `-RecoveryExpr 0x12d9458b8 <col:2, col:10> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d945880 <col:2> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     |-UnaryOperator 0x12d945958 <line:17:2, col:19> '<dependent type>' contains-errors postfix '--' cannot overflow     | `-RecoveryExpr 0x12d945930 <col:2, col:5> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d9458f8 <col:2> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |-IfStmt 0x12d945ae8 <line:19:2, line:20:23>     | |-BinaryOperator 0x12d9459f0 <line:19:6, col:19> 'int' contains-errors '=='     | | |-DeclRefExpr 0x12d945970 <col:6> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | | `-RecoveryExpr 0x12d9459c8 <col:16, col:19> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x12d945990 <col:16> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     | `-BinaryOperator 0x12d945ac8 <line:20:3, col:23> '<dependent type>' contains-errors '='     |   |-RecoveryExpr 0x12d945a48 <col:3, col:6> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x12d945a10 <col:3> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |   `-RecoveryExpr 0x12d945aa8 <col:23> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12d946c48 <line:22:2, line:23:50> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d946a00 <line:22:2> 'int ()' Function 0x12d945b30 'dm_path_uevent' 'int ()'     | |-RecoveryExpr 0x12d946c28 <col:17> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x12d946a70 <col:40, col:43> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x12d946a38 <col:40> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     | |-CXXDependentScopeMemberExpr 0x12d946b40 <line:23:9, col:27> '<dependent type>' contains-errors lvalue ->name     | | `-CXXDependentScopeMemberExpr 0x12d946af8 <col:9, col:22> '<dependent type>' contains-errors lvalue .dev     | |   `-RecoveryExpr 0x12d946ad0 <col:9, col:17> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d946a98 <col:9> 'struct pgpath *' lvalue ParmVar 0x12d928648 'pgpath' 'struct pgpath *'     | `-RecoveryExpr 0x12d946bc0 <col:33, col:36> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x12d946b88 <col:33> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |-CallExpr 0x12d946e00 <line:25:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12d946d68 <col:2> 'int ()' Function 0x12d946cb0 'schedule_work' 'int ()'     | `-UnaryOperator 0x12d946de8 <col:16, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x12d946dc0 <col:17, col:20> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x12d946d88 <col:17> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |-LabelStmt 0x12d946ff0 <line:27:1, line:28:40> 'out'     | `-CallExpr 0x12d946fc0 <col:2, col:40> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x12d946f08 <col:2> 'int ()' Function 0x12d946e50 'spin_unlock_irqrestore' 'int ()'     |   |-UnaryOperator 0x12d946f88 <col:25, col:29> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x12d946f60 <col:26, col:29> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x12d946f28 <col:26> 'struct multipath *' contains-errors lvalue Var 0x12d944e58 'm' 'struct multipath *'     |   `-DeclRefExpr 0x12d946fa0 <col:35> 'unsigned long' lvalue Var 0x12d944c68 'flags' 'unsigned long'     `-ReturnStmt 0x12d947030 <line:30:2, col:9>       `-IntegerLiteral 0x12d947010 <col:9> 'int' 0 ","20064":"`-FunctionDecl 0x15500b888  line:1:1 invalid mono_reflection_encode_sighelper 'int (int *, int *)'   |-ParmVarDecl 0x15500b728 <col:35, col:53> col:53 invalid assembly 'int *'   |-ParmVarDecl 0x15500b7a8 <col:63, col:88> col:88 referenced invalid helper 'int *'   `-CompoundStmt 0x156118718 <line:2:1, line:61:1>     |-IfStmt 0x15500ba08 <line:8:2, line:9:10>     | |-UnaryOperator 0x15500b9c0 <line:8:6, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15500b9a8 <col:7, col:17> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x15500b960 <col:7, col:17> '<dependent type>' contains-errors lvalue ->save     | |     `-RecoveryExpr 0x15500b940 <col:7> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x15500b9f8 <line:9:3, col:10>     |   `-IntegerLiteral 0x15500b9d8 <col:10> 'int' 0     |-CallExpr 0x15500bc48 <line:12:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15500bb80 <col:2> 'int ()' Function 0x15500bac8 'g_assert' 'int ()'     | `-BinaryOperator 0x15500bc28 <col:12, col:28> 'int' contains-errors '=='     |   |-CXXDependentScopeMemberExpr 0x15500bbc0 <col:12, col:20> '<dependent type>' contains-errors lvalue ->type     |   | `-RecoveryExpr 0x15500bba0 <col:12> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x15500bc08 <col:28> 'int' 2     |-CallExpr 0x1561164c0 <line:21:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1561163e8 <col:2> 'int ()' Function 0x156116330 'sigbuffer_init' 'int ()'     | |-UnaryOperator 0x1561164a8 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | `-RecoveryExpr 0x156116488 <col:19> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x156116438 <col:24> 'int' 32     |-IfStmt 0x1561166c8 <line:25:2, line:26:23>     | |-BinaryOperator 0x1561165d8 <line:25:6, col:36> 'int' contains-errors '=='     | | |-ParenExpr 0x156116598 <col:6, col:31> '<dependent type>' contains-errors     | | | `-BinaryOperator 0x156116578 <col:7, col:27> '<dependent type>' contains-errors '&'     | | |   |-CXXDependentScopeMemberExpr 0x156116510 <col:7, col:15> '<dependent type>' contains-errors lvalue ->call_conv     | | |   | `-RecoveryExpr 0x1561164f0 <col:7> '<dependent type>' contains-errors lvalue     | | |   `-IntegerLiteral 0x156116558 <col:27> 'int' 3     | | `-IntegerLiteral 0x1561165b8 <col:36> 'int' 3     | `-BinaryOperator 0x1561166a8 <line:26:3, col:23> '<dependent type>' contains-errors '='     |   |-CXXDependentScopeMemberExpr 0x156116640 <col:3, col:11> '<dependent type>' contains-errors lvalue ->call_conv     |   | `-RecoveryExpr 0x156116618 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x1561165f8 <col:3> 'int *' lvalue ParmVar 0x15500b7a8 'helper' 'int *'     |   `-IntegerLiteral 0x156116688 <col:23> 'int' 1     |-IfStmt 0x156116870 <line:28:2, line:29:24>     | |-BinaryOperator 0x156116770 <line:28:6, col:26> '<dependent type>' contains-errors '&'     | | |-CXXDependentScopeMemberExpr 0x156116708 <col:6, col:14> '<dependent type>' contains-errors lvalue ->call_conv     | | | `-RecoveryExpr 0x1561166e8 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x156116750 <col:26> 'int' 64     | `-CompoundAssignOperator 0x156116840 <line:29:3, col:24> '<dependent type>' contains-errors '&=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |   |-CXXDependentScopeMemberExpr 0x1561167d8 <col:3, col:11> '<dependent type>' contains-errors lvalue ->call_conv     |   | `-RecoveryExpr 0x1561167b0 <col:3> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x156116790 <col:3> 'int *' lvalue ParmVar 0x15500b7a8 'helper' 'int *'     |   `-IntegerLiteral 0x156116820 <col:24> 'int' 32     |-IfStmt 0x156116b70 <line:31:2, line:38:2> has_else     | |-BinaryOperator 0x156116918 <line:31:6, col:27> 'int' contains-errors '=='     | | |-CXXDependentScopeMemberExpr 0x1561168b0 <col:6, col:14> '<dependent type>' contains-errors lvalue ->call_conv     | | | `-RecoveryExpr 0x156116890 <col:6> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x1561168f8 <col:27> 'int' 0     | |-CompoundStmt 0x1561169e0 <col:30, line:33:2>     | `-CompoundStmt 0x156116b60 <col:9, line:38:2>     `-CallExpr 0x156116d70 <line:40:2, col:31> '<dependent type>' contains-errors       |-DeclRefExpr 0x156116c80 <col:2> 'int ()' Function 0x156116bc8 'sigbuffer_add_byte' 'int ()'       |-UnaryOperator 0x156116d38 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow       | `-RecoveryExpr 0x156116d18 <col:23> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x156116d50 <col:28> '<dependent type>' contains-errors lvalue ","19929":"`-FunctionDecl 0x138029828  col:32 implicit used strdup 'char *(const char *)' extern   |-ParmVarDecl 0x138029928 <<invalid sloc>> <invalid sloc> 'const char *'   `-BuiltinAttr 0x1380298d0 <<invalid sloc>> Implicit 950 ","19838":"`-FunctionDecl 0x12a946198  col:2 invalid mm_request_send 'int ()' ","19285":"`-FunctionDecl 0x15c1281f0  line:1:6 invalid X509_STORE_CTX_free 'void (int *)'   |-ParmVarDecl 0x15c128128 <col:26, col:42> col:42 invalid ctx 'int *'   `-CompoundStmt 0x15c1285b0 <line:2:1, line:5:1>     |-CallExpr 0x15c128440 <line:3:2, col:28> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15c128400 <col:2> 'int ()' Function 0x15c128348 'X509_STORE_CTX_cleanup' 'int ()'     | `-RecoveryExpr 0x15c128420 <col:25> '<dependent type>' contains-errors lvalue     `-CallExpr 0x15c128588 <line:4:2, col:18> '<dependent type>' contains-errors       |-DeclRefExpr 0x15c128548 <col:2> 'int ()' Function 0x15c128490 'OPENSSL_free' 'int ()'       `-RecoveryExpr 0x15c128568 <col:15> '<dependent type>' contains-errors lvalue ","20139":"`-FunctionDecl 0x139026d48  col:9 implicit used exit 'void (int) __attribute__((noreturn))' extern   |-ParmVarDecl 0x139026e48 <<invalid sloc>> <invalid sloc> 'int'   `-BuiltinAttr 0x139026df0 <<invalid sloc>> Implicit 869 ","19529":"`-FunctionDecl 0x1568ba9f8  line:1:9 invalid get_copy 'int *(int *)'   |-ParmVarDecl 0x1568ba928 <col:18, col:23> col:23 referenced invalid thd 'int *'   `-CompoundStmt 0x1568bab70 <line:2:3, col:57> ","19356":"`-FunctionDecl 0x1268274d0  line:1:6 invalid ecryptfs_write_crypt_stat_flags 'void (char *, struct ecryptfs_crypt_stat *, int *)'   |-ParmVarDecl 0x12680dcd8 <col:38, col:44> col:44 used page_virt 'char *'   |-ParmVarDecl 0x12680e2c8 <line:2:10, col:38> col:38 used crypt_stat 'struct ecryptfs_crypt_stat *'   |-ParmVarDecl 0x12680e398 <line:3:10, col:18> col:18 invalid written 'int *'   `-CompoundStmt 0x126827c18 <line:4:1, line:16:1>     |-DeclStmt 0x126827610 <line:6:2, col:7>     | `-VarDecl 0x1268275a8 <col:2, col:6> col:6 used i 'int'     |-CallExpr 0x126827b38 <line:14:2, col:37> '<dependent type>' contains-errors     | |-DeclRefExpr 0x126827a90 <col:2> 'int ()' Function 0x1268279d8 'put_unaligned_be32' 'int ()'     | |-RecoveryExpr 0x126827b18 <col:21> '<dependent type>' contains-errors lvalue     | `-DeclRefExpr 0x126827ac8 <col:28> 'char *' lvalue ParmVar 0x12680dcd8 'page_virt' 'char *'     `-BinaryOperator 0x126827bf8 <line:15:2, col:15> '<dependent type>' contains-errors '='       |-ParenExpr 0x126827bb8 <col:2, col:11> '<dependent type>' contains-errors       | `-UnaryOperator 0x126827ba0 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow       |   `-ImplicitCastExpr 0x126827b88 <col:4> '<dependent type>' contains-errors <LValueToRValue>       |     `-RecoveryExpr 0x126827b68 <col:4> '<dependent type>' contains-errors lvalue       `-IntegerLiteral 0x126827bd8 <col:15> 'int' 4 ","19213":"`-FunctionDecl 0x15000e350  line:1:6 ieee80211_sta_ps_deliver_wakeup 'void (struct sta_info *)'   |-ParmVarDecl 0x15000e248 <col:38, col:55> col:55 used sta 'struct sta_info *'   `-CompoundStmt 0x1500296a8 <line:2:1, line:59:1>     |-DeclStmt 0x150026898 <line:3:2, col:50>     | |-RecordDecl 0x150026648 <col:2, col:9> col:9 struct ieee80211_sub_if_data     | `-VarDecl 0x1500267b8 <col:2, col:45> col:32 used sdata 'struct ieee80211_sub_if_data *' cinit     |   `-RecoveryExpr 0x150026858 <col:40, col:45> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x150026820 <col:40> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |-DeclStmt 0x150026af8 <line:4:2, col:46>     | |-RecordDecl 0x1500268b0 <col:2, col:9> col:9 struct ieee80211_local     | `-VarDecl 0x150026a18 <col:2, col:41> col:26 used local 'struct ieee80211_local *' cinit     |   `-RecoveryExpr 0x150026ab8 <col:34, col:41> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x150026a80 <col:34> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'     |-DeclStmt 0x150026c88 <line:5:2, col:29>     | |-RecordDecl 0x150026b10 <col:2, col:9> col:9 struct sk_buff_head     | `-VarDecl 0x150026c08 <col:2, col:22> col:22 invalid pending 'struct sk_buff_head'     |-DeclStmt 0x150026e80 <line:6:2, col:36>     | |-VarDecl 0x150026cb8 <col:2, col:17> col:6 used filtered 'int' cinit     | | `-IntegerLiteral 0x150026d20 <col:17> 'int' 0     | |-VarDecl 0x150026d58 <col:2, col:31> col:20 used buffered 'int' cinit     | | `-IntegerLiteral 0x150026dc0 <col:31> 'int' 0     | `-VarDecl 0x150026df8 <col:2, col:34> col:34 used ac 'int'     |-DeclStmt 0x150026f18 <line:7:2, col:21>     | `-VarDecl 0x150026eb0 <col:2, col:16> col:16 used flags 'unsigned long'     |-CallExpr 0x150027108 <line:9:2, col:33> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150027060 <col:2> 'int ()' Function 0x150026fa8 'clear_sta_flag' 'int ()'     | |-DeclRefExpr 0x150027080 <col:17> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     | `-RecoveryExpr 0x1500270e8 <col:22> '<dependent type>' contains-errors lvalue     |-CallExpr 0x150027448 <line:11:2, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x150027218 <col:2> 'int ()' Function 0x150027160 'BUILD_BUG_ON' 'int ()'     | `-BinaryOperator 0x150027428 <col:15, col:51> 'int' contains-errors '>'     |   |-CallExpr 0x150027400 <col:15, col:47> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x150027318 <col:15> 'int ()' Function 0x150027260 'BITS_TO_LONGS' 'int ()'     |   | `-RecoveryExpr 0x1500273e0 <col:29> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x150027378 <col:51> 'int' 1     |-BinaryOperator 0x1500274f0 <line:12:2, col:30> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1500274a8 <col:2, col:7> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x150027470 <col:2> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     | `-IntegerLiteral 0x1500274d0 <col:30> 'int' 0     |-IfStmt 0x15080a090 <line:14:2, line:15:59>     | |-RecoveryExpr 0x150809e00 <line:14:6, col:49> '_Bool' contains-errors     | `-CallExpr 0x15080a050 <line:15:3, col:59> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x150809f00 <col:3> 'int ()' Function 0x150809e48 'drv_sta_notify' 'int ()'     |   |-DeclRefExpr 0x150809f20 <col:18> 'struct ieee80211_local *' contains-errors lvalue Var 0x150026a18 'local' 'struct ieee80211_local *'     |   |-DeclRefExpr 0x150809f40 <col:25> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'     |   |-RecoveryExpr 0x15080a030 <col:32> '<dependent type>' contains-errors lvalue     |   `-UnaryOperator 0x150809fd8 <col:50, col:56> '<dependent type>' contains-errors prefix '&' cannot overflow     |     `-RecoveryExpr 0x150809fb0 <col:51, col:56> '<dependent type>' contains-errors lvalue     |       `-DeclRefExpr 0x150809f78 <col:51> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |-CallExpr 0x15080a1e8 <line:17:2, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15080a190 <col:2> 'int ()' Function 0x15080a0d8 'skb_queue_head_init' 'int ()'     | `-UnaryOperator 0x15080a1d0 <col:22, col:23> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x15080a1b0 <col:23> '<dependent type>' contains-errors lvalue     |-ForStmt 0x1500283f8 <line:20:2, line:35:2>     | |-BinaryOperator 0x15080a250 <line:20:7, col:12> 'int' '='     | | |-DeclRefExpr 0x15080a210 <col:7> 'int' lvalue Var 0x150026df8 'ac' 'int'     | | `-IntegerLiteral 0x15080a230 <col:12> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x15080a2e8 <col:15, col:20> 'int' contains-errors '<'     | | |-DeclRefExpr 0x15080a270 <col:15> 'int' lvalue Var 0x150026df8 'ac' 'int'     | | `-RecoveryExpr 0x15080a2c8 <col:20> '<dependent type>' contains-errors lvalue     | |-UnaryOperator 0x15080a328 <col:39, col:41> 'int' postfix '++'     | | `-DeclRefExpr 0x15080a308 <col:39> 'int' lvalue Var 0x150026df8 'ac' 'int'     | `-CompoundStmt 0x150028388 <col:45, line:35:2>     |   |-DeclStmt 0x15080a5b8 <line:21:3, col:43>     |   | |-VarDecl 0x15080a358 <col:3, col:37> col:7 used count 'int' cinit     |   | | `-CallExpr 0x15080a4f8 <col:15, col:37> '<dependent type>' contains-errors     |   | |   |-DeclRefExpr 0x15080a4a0 <col:15> 'int ()' Function 0x15080a3e8 'skb_queue_len' 'int ()'     |   | |   `-UnaryOperator 0x15080a4e0 <col:29, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | |     `-RecoveryExpr 0x15080a4c0 <col:30> '<dependent type>' contains-errors lvalue     |   | `-VarDecl 0x15080a538 <col:3, col:40> col:40 used tmp 'int'     |   |-CallExpr 0x15080a820 <line:23:3, col:54> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15080a6b0 <col:3> 'int ()' Function 0x15080a5f8 'spin_lock_irqsave' 'int ()'     |   | |-UnaryOperator 0x15080a7e8 <col:21, col:43> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x15080a7a0 <col:22, col:43> '<dependent type>' contains-errors lvalue .lock     |   | |   `-ArraySubscriptExpr 0x15080a780 <col:22, col:41> '<dependent type>' contains-errors lvalue     |   | |     |-ImplicitCastExpr 0x15080a750 <col:22, col:27> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | `-RecoveryExpr 0x15080a708 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   | |     |   `-DeclRefExpr 0x15080a6d0 <col:22> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |   | |     `-ImplicitCastExpr 0x15080a768 <col:39> 'int' <LValueToRValue>     |   | |       `-DeclRefExpr 0x15080a730 <col:39> 'int' lvalue Var 0x150026df8 'ac' 'int'     |   | `-DeclRefExpr 0x15080a800 <col:49> 'unsigned long' lvalue Var 0x150026eb0 'flags' 'unsigned long'     |   |-CallExpr 0x15080aa70 <line:24:3, col:61> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15080a930 <col:3> 'int ()' Function 0x15080a878 'skb_queue_splice_tail_init' 'int ()'     |   | |-UnaryOperator 0x15080aa20 <col:30, col:50> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-ArraySubscriptExpr 0x15080aa00 <col:31, col:50> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x15080a9d0 <col:31, col:36> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-RecoveryExpr 0x15080a988 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x15080a950 <col:31> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |   | |   `-ImplicitCastExpr 0x15080a9e8 <col:48> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x15080a9b0 <col:48> 'int' lvalue Var 0x150026df8 'ac' 'int'     |   | `-UnaryOperator 0x15080aa58 <col:53, col:54> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15080aa38 <col:54> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x15080acf0 <line:25:3, col:59> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15080ab80 <col:3> 'int ()' Function 0x15080aac8 'spin_unlock_irqrestore' 'int ()'     |   | |-UnaryOperator 0x15080acb8 <col:26, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x15080ac70 <col:27, col:48> '<dependent type>' contains-errors lvalue .lock     |   | |   `-ArraySubscriptExpr 0x15080ac50 <col:27, col:46> '<dependent type>' contains-errors lvalue     |   | |     |-ImplicitCastExpr 0x15080ac20 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | `-RecoveryExpr 0x15080abd8 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   | |     |   `-DeclRefExpr 0x15080aba0 <col:27> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |   | |     `-ImplicitCastExpr 0x15080ac38 <col:44> 'int' <LValueToRValue>     |   | |       `-DeclRefExpr 0x15080ac00 <col:44> 'int' lvalue Var 0x150026df8 'ac' 'int'     |   | `-DeclRefExpr 0x15080acd0 <col:54> 'unsigned long' lvalue Var 0x150026eb0 'flags' 'unsigned long'     |   |-BinaryOperator 0x15080adc0 <line:26:3, col:31> 'int' contains-errors '='     |   | |-DeclRefExpr 0x15080ad20 <col:3> 'int' lvalue Var 0x15080a538 'tmp' 'int'     |   | `-CallExpr 0x15080ad98 <col:9, col:31> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x15080ad40 <col:9> 'int ()' Function 0x15080a3e8 'skb_queue_len' 'int ()'     |   |   `-UnaryOperator 0x15080ad80 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x15080ad60 <col:24> '<dependent type>' contains-errors lvalue     |   |-CompoundAssignOperator 0x150027c90 <line:27:3, col:21> 'int' contains-errors '+=' ComputeLHSTy='int' ComputeResultTy='int'     |   | |-DeclRefExpr 0x15080ade0 <col:3> 'int' lvalue Var 0x150026cb8 'filtered' 'int'     |   | `-BinaryOperator 0x150027c70 <col:15, col:21> 'int' contains-errors '-'     |   |   |-ImplicitCastExpr 0x150027c40 <col:15> 'int' <LValueToRValue>     |   |   | `-DeclRefExpr 0x150027c00 <col:15> 'int' lvalue Var 0x15080a538 'tmp' 'int'     |   |   `-ImplicitCastExpr 0x150027c58 <col:21> 'int' contains-errors <LValueToRValue>     |   |     `-DeclRefExpr 0x150027c20 <col:21> 'int' contains-errors lvalue Var 0x15080a358 'count' 'int'     |   |-BinaryOperator 0x150027d18 <line:28:3, col:11> 'int' contains-errors '='     |   | |-DeclRefExpr 0x150027cc0 <col:3> 'int' contains-errors lvalue Var 0x15080a358 'count' 'int'     |   | `-ImplicitCastExpr 0x150027d00 <col:11> 'int' <LValueToRValue>     |   |   `-DeclRefExpr 0x150027ce0 <col:11> 'int' lvalue Var 0x15080a538 'tmp' 'int'     |   |-CallExpr 0x150027ea8 <line:30:3, col:52> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x150027d38 <col:3> 'int ()' Function 0x15080a5f8 'spin_lock_irqsave' 'int ()'     |   | |-UnaryOperator 0x150027e70 <col:21, col:41> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x150027e28 <col:22, col:41> '<dependent type>' contains-errors lvalue .lock     |   | |   `-ArraySubscriptExpr 0x150027e08 <col:22, col:39> '<dependent type>' contains-errors lvalue     |   | |     |-ImplicitCastExpr 0x150027dd8 <col:22, col:27> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | `-RecoveryExpr 0x150027d90 <col:22, col:27> '<dependent type>' contains-errors lvalue     |   | |     |   `-DeclRefExpr 0x150027d58 <col:22> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |   | |     `-ImplicitCastExpr 0x150027df0 <col:37> 'int' <LValueToRValue>     |   | |       `-DeclRefExpr 0x150027db8 <col:37> 'int' lvalue Var 0x150026df8 'ac' 'int'     |   | `-DeclRefExpr 0x150027e88 <col:47> 'unsigned long' lvalue Var 0x150026eb0 'flags' 'unsigned long'     |   |-CallExpr 0x150028018 <line:31:3, col:59> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x150027ed8 <col:3> 'int ()' Function 0x15080a878 'skb_queue_splice_tail_init' 'int ()'     |   | |-UnaryOperator 0x150027fc8 <col:30, col:48> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-ArraySubscriptExpr 0x150027fa8 <col:31, col:48> '<dependent type>' contains-errors lvalue     |   | |   |-ImplicitCastExpr 0x150027f78 <col:31, col:36> '<dependent type>' contains-errors <LValueToRValue>     |   | |   | `-RecoveryExpr 0x150027f30 <col:31, col:36> '<dependent type>' contains-errors lvalue     |   | |   |   `-DeclRefExpr 0x150027ef8 <col:31> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |   | |   `-ImplicitCastExpr 0x150027f90 <col:46> 'int' <LValueToRValue>     |   | |     `-DeclRefExpr 0x150027f58 <col:46> 'int' lvalue Var 0x150026df8 'ac' 'int'     |   | `-UnaryOperator 0x150028000 <col:51, col:52> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x150027fe0 <col:52> '<dependent type>' contains-errors lvalue     |   |-CallExpr 0x1500281b8 <line:32:3, col:57> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x150028048 <col:3> 'int ()' Function 0x15080aac8 'spin_unlock_irqrestore' 'int ()'     |   | |-UnaryOperator 0x150028180 <col:26, col:46> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | | `-CXXDependentScopeMemberExpr 0x150028138 <col:27, col:46> '<dependent type>' contains-errors lvalue .lock     |   | |   `-ArraySubscriptExpr 0x150028118 <col:27, col:44> '<dependent type>' contains-errors lvalue     |   | |     |-ImplicitCastExpr 0x1500280e8 <col:27, col:32> '<dependent type>' contains-errors <LValueToRValue>     |   | |     | `-RecoveryExpr 0x1500280a0 <col:27, col:32> '<dependent type>' contains-errors lvalue     |   | |     |   `-DeclRefExpr 0x150028068 <col:27> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |   | |     `-ImplicitCastExpr 0x150028100 <col:42> 'int' <LValueToRValue>     |   | |       `-DeclRefExpr 0x1500280c8 <col:42> 'int' lvalue Var 0x150026df8 'ac' 'int'     |   | `-DeclRefExpr 0x150028198 <col:52> 'unsigned long' lvalue Var 0x150026eb0 'flags' 'unsigned long'     |   |-BinaryOperator 0x150028288 <line:33:3, col:31> 'int' contains-errors '='     |   | |-DeclRefExpr 0x1500281e8 <col:3> 'int' lvalue Var 0x15080a538 'tmp' 'int'     |   | `-CallExpr 0x150028260 <col:9, col:31> '<dependent type>' contains-errors     |   |   |-DeclRefExpr 0x150028208 <col:9> 'int ()' Function 0x15080a3e8 'skb_queue_len' 'int ()'     |   |   `-UnaryOperator 0x150028248 <col:23, col:24> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |     `-RecoveryExpr 0x150028228 <col:24> '<dependent type>' contains-errors lvalue     |   `-CompoundAssignOperator 0x150028358 <line:34:3, col:21> 'int' contains-errors '+=' ComputeLHSTy='int' ComputeResultTy='int'     |     |-DeclRefExpr 0x1500282a8 <col:3> 'int' lvalue Var 0x150026d58 'buffered' 'int'     |     `-BinaryOperator 0x150028338 <col:15, col:21> 'int' contains-errors '-'     |       |-ImplicitCastExpr 0x150028308 <col:15> 'int' <LValueToRValue>     |       | `-DeclRefExpr 0x1500282c8 <col:15> 'int' lvalue Var 0x15080a538 'tmp' 'int'     |       `-ImplicitCastExpr 0x150028320 <col:21> 'int' contains-errors <LValueToRValue>     |         `-DeclRefExpr 0x1500282e8 <col:21> 'int' contains-errors lvalue Var 0x15080a358 'count' 'int'     |-IfStmt 0x150029140 <line:40:2, line:50:2>     | |-BinaryOperator 0x150028ae8 <line:40:6, line:43:34> 'int' contains-errors '&&'     | | |-BinaryOperator 0x1500288d8 <line:40:6, line:42:42> 'int' contains-errors '&&'     | | | |-UnaryOperator 0x150028798 <line:40:6, line:41:25> '<dependent type>' contains-errors prefix '!' cannot overflow     | | | | `-CallExpr 0x150028768 <line:40:7, line:41:25> '<dependent type>' contains-errors     | | | |   |-DeclRefExpr 0x150028688 <line:40:7> 'int ()' Function 0x1500285d0 'ieee80211_smps_is_restrictive' 'int ()'     | | | |   |-RecoveryExpr 0x1500286e0 <col:37, col:42> '<dependent type>' contains-errors lvalue     | | | |   | `-DeclRefExpr 0x1500286a8 <col:37> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     | | | |   `-RecoveryExpr 0x150028740 <line:41:9, col:16> '<dependent type>' contains-errors lvalue     | | | |     `-DeclRefExpr 0x150028708 <col:9> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'     | | | `-BinaryOperator 0x1500288b8 <line:42:6, col:42> 'int' contains-errors '!='     | | |   |-RecoveryExpr 0x1500287e8 <col:6, col:11> '<dependent type>' contains-errors lvalue     | | |   | `-DeclRefExpr 0x1500287b0 <col:6> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     | | |   `-CXXDependentScopeMemberExpr 0x150028870 <col:30, col:42> '<dependent type>' contains-errors lvalue ->req_smps     | | |     `-RecoveryExpr 0x150028848 <col:30, col:37> '<dependent type>' contains-errors lvalue     | | |       `-DeclRefExpr 0x150028810 <col:30> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'     | | `-BinaryOperator 0x150028ac8 <line:43:6, col:34> 'int' '!='     | |   |-CallExpr 0x150028a68 <col:6, col:29> 'int'     | |   | |-ImplicitCastExpr 0x150028a50 <col:6> 'int (*)()' <FunctionToPointerDecay>     | |   | | `-DeclRefExpr 0x1500289d8 <col:6> 'int ()' Function 0x150028920 'sta_info_tx_streams' 'int ()'     | |   | `-ImplicitCastExpr 0x150028a90 <col:26> 'struct sta_info *' <LValueToRValue>     | |   |   `-DeclRefExpr 0x1500289f8 <col:26> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     | |   `-IntegerLiteral 0x150028aa8 <col:34> 'int' 1     | `-CompoundStmt 0x150029120 <col:37, line:50:2>     |   |-CallExpr 0x150028d48 <line:44:3, line:46:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x150028c00 <line:44:3> 'int ()' Function 0x150028b30 'ht_dbg' 'int ()'     |   | |-DeclRefExpr 0x150028c20 <col:10> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'     |   | |-StringLiteral 0x150028c80 <line:45:10> 'char[4]' lvalue \"STR\"     |   | `-CXXDependentScopeMemberExpr 0x150028d00 <line:46:10, col:19> '<dependent type>' contains-errors lvalue .addr     |   |   `-RecoveryExpr 0x150028cd8 <col:10, col:15> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x150028ca0 <col:10> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |   `-CallExpr 0x1500290e0 <line:47:3, line:49:34> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x150028e60 <line:47:3> 'int ()' Function 0x150028da8 'ieee80211_send_smps_action' 'int ()'     |     |-DeclRefExpr 0x150028e80 <col:30> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'     |     |-CXXDependentScopeMemberExpr 0x150028f00 <col:37, col:49> '<dependent type>' contains-errors lvalue ->req_smps     |     | `-RecoveryExpr 0x150028ed8 <col:37, col:44> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x150028ea0 <col:37> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'     |     |-CXXDependentScopeMemberExpr 0x150028fa8 <line:48:9, col:18> '<dependent type>' contains-errors lvalue .addr     |     | `-RecoveryExpr 0x150028f80 <col:9, col:14> '<dependent type>' contains-errors lvalue     |     |   `-DeclRefExpr 0x150028f48 <col:9> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     |     `-CXXDependentScopeMemberExpr 0x150029098 <line:49:9, col:29> '<dependent type>' contains-errors lvalue .bssid     |       `-CXXDependentScopeMemberExpr 0x150029050 <col:9, col:20> '<dependent type>' contains-errors lvalue .bss_conf     |         `-RecoveryExpr 0x150029028 <col:9, col:16> '<dependent type>' contains-errors lvalue     |           `-DeclRefExpr 0x150028ff0 <col:9> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'     |-CompoundAssignOperator 0x1500291e0 <line:52:2, col:30> '<dependent type>' contains-errors '-=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     | |-RecoveryExpr 0x150029198 <col:2, col:9> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x150029160 <col:2> 'struct ieee80211_local *' contains-errors lvalue Var 0x150026a18 'local' 'struct ieee80211_local *'     | `-DeclRefExpr 0x1500291c0 <col:30> 'int' lvalue Var 0x150026d58 'buffered' 'int'     |-CallExpr 0x150029348 <line:54:2, col:25> 'int'     | |-ImplicitCastExpr 0x150029330 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x1500292f0 <col:2> 'int ()' Function 0x150029238 'sta_info_recalc_tim' 'int ()'     | `-ImplicitCastExpr 0x150029370 <col:22> 'struct sta_info *' <LValueToRValue>     |   `-DeclRefExpr 0x150029310 <col:22> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'     `-CallExpr 0x150029658 <line:56:2, line:58:56> '<dependent type>' contains-errors       |-DeclRefExpr 0x150029468 <line:56:2> 'int ()' Function 0x1500293b0 'ps_dbg' 'int ()'       |-DeclRefExpr 0x150029488 <col:9> 'struct ieee80211_sub_if_data *' contains-errors lvalue Var 0x1500267b8 'sdata' 'struct ieee80211_sub_if_data *'       |-StringLiteral 0x1500294a8 <line:57:9> 'char[4]' lvalue \"STR\"       |-CXXDependentScopeMemberExpr 0x150029528 <line:58:9, col:18> '<dependent type>' contains-errors lvalue .addr       | `-RecoveryExpr 0x150029500 <col:9, col:14> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x1500294c8 <col:9> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'       |-CXXDependentScopeMemberExpr 0x1500295d0 <col:24, col:33> '<dependent type>' contains-errors lvalue .aid       | `-RecoveryExpr 0x1500295a8 <col:24, col:29> '<dependent type>' contains-errors lvalue       |   `-DeclRefExpr 0x150029570 <col:24> 'struct sta_info *' lvalue ParmVar 0x15000e248 'sta' 'struct sta_info *'       |-DeclRefExpr 0x150029618 <col:38> 'int' lvalue Var 0x150026cb8 'filtered' 'int'       `-DeclRefExpr 0x150029638 <col:48> 'int' lvalue Var 0x150026d58 'buffered' 'int' ","19170":"`-FunctionDecl 0x12b144ac8  col:3 implicit used va_end 'void (__builtin_va_list &)' extern   |-ParmVarDecl 0x12b144bc8 <<invalid sloc>> <invalid sloc> '__builtin_va_list &'   |-BuiltinAttr 0x12b144b70 <<invalid sloc>> Implicit 865   `-NoThrowAttr 0x12b144c38 <col:3> Implicit ","20073":"`-FunctionDecl 0x128142dc8  col:2 implicit used memset 'void *(void *, int, unsigned long)' extern   |-ParmVarDecl 0x128142ec8 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x128142f30 <<invalid sloc>> <invalid sloc> 'int'   |-ParmVarDecl 0x128142f98 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x128142e70 <<invalid sloc>> Implicit 900 ","19760":"`-FunctionDecl 0x143903e38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x143903d58 <col:12> col:12 SplFileObject 'int'   |-ParmVarDecl 0x143903cd8 <col:27> col:27 fputcsv 'int'   `-CompoundStmt 0x142013f30 <line:2:1, line:40:1>     |-DeclStmt 0x14391c8c8 <line:4:2, col:113>     | |-VarDecl 0x143903f90 <col:2, col:34> col:7 used delimiter 'char' cinit     | | `-CXXDependentScopeMemberExpr 0x143904198 <col:19, col:34> '<dependent type>' contains-errors lvalue .delimiter     | |   `-CXXDependentScopeMemberExpr 0x143904150 <col:19, col:29> '<dependent type>' contains-errors lvalue .file     | |     `-CXXDependentScopeMemberExpr 0x143904108 <col:19, col:27> '<dependent type>' contains-errors lvalue ->u     | |       `-RecoveryExpr 0x1439040e8 <col:19> '<dependent type>' contains-errors lvalue     | |-VarDecl 0x1439041f0 <col:2, col:72> col:45 used enclosure 'char' cinit     | | `-CXXDependentScopeMemberExpr 0x14391c600 <col:57, col:72> '<dependent type>' contains-errors lvalue .enclosure     | |   `-CXXDependentScopeMemberExpr 0x1439043b0 <col:57, col:67> '<dependent type>' contains-errors lvalue .file     | |     `-CXXDependentScopeMemberExpr 0x143904368 <col:57, col:65> '<dependent type>' contains-errors lvalue ->u     | |       `-RecoveryExpr 0x143904348 <col:57> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x14391c658 <col:2, col:107> col:83 used escape 'char' cinit     |   `-CXXDependentScopeMemberExpr 0x14391c860 <col:92, col:107> '<dependent type>' contains-errors lvalue .escape     |     `-CXXDependentScopeMemberExpr 0x14391c818 <col:92, col:102> '<dependent type>' contains-errors lvalue .file     |       `-CXXDependentScopeMemberExpr 0x14391c7d0 <col:92, col:100> '<dependent type>' contains-errors lvalue ->u     |         `-RecoveryExpr 0x14391c7b0 <col:92> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14391cb28 <line:5:2, col:48>     | |-VarDecl 0x14391c8f8 <col:2, col:16> col:8 used delim 'char *' cinit     | | `-RecoveryExpr 0x14391c978 <col:16> '<dependent type>' contains-errors lvalue     | |-VarDecl 0x14391c9b0 <col:2, col:31> col:23 used enclo 'char *' cinit     | | `-RecoveryExpr 0x14391ca30 <col:31> '<dependent type>' contains-errors lvalue     | `-VarDecl 0x14391ca68 <col:2, col:44> col:38 used esc 'char *' cinit     |   `-RecoveryExpr 0x14391cae8 <col:44> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x14391cdc8 <line:6:2, col:44>     | |-VarDecl 0x14391cb58 <col:2, col:14> col:6 used d_len 'int' cinit     | | `-IntegerLiteral 0x14391cbc0 <col:14> 'int' 0     | |-VarDecl 0x14391cbf8 <col:2, col:25> col:17 used e_len 'int' cinit     | | `-IntegerLiteral 0x14391cc60 <col:25> 'int' 0     | |-VarDecl 0x14391cc98 <col:2, col:38> col:28 used esc_len 'int' cinit     | | `-IntegerLiteral 0x14391cd00 <col:38> 'int' 0     | `-VarDecl 0x14391cd38 <col:2, col:41> col:41 used ret 'int'     `-IfStmt 0x142013f10 <line:9:2, line:39:2>       |-RecoveryExpr 0x14391d0c0 <line:9:6, col:122> '_Bool' contains-errors       `-CompoundStmt 0x142013ef0 <col:131, line:39:2>         |-SwitchStmt 0x14391d138 <line:10:3, line:36:3>         | |-CallExpr 0x14391d118 <line:10:10, col:24> 'int'         | | `-ImplicitCastExpr 0x14391d100 <col:10> 'int (*)()' <FunctionToPointerDecay>         | |   `-DeclRefExpr 0x14391d0e0 <col:10> 'int ()' Function 0x14391cf68 'ZEND_NUM_ARGS' 'int ()'         | `-CompoundStmt 0x142013bb0 <line:11:3, line:36:3>         |   |-CaseStmt 0x14391d198 <line:12:3, line:16:4>         |   | |-ConstantExpr 0x14391d180 <line:12:8> 'int'         |   | | `-IntegerLiteral 0x14391d160 <col:8> 'int' 4         |   | `-IfStmt 0x14391d3b0 <line:13:4, line:16:4>         |   |   |-BinaryOperator 0x14391d218 <line:13:8, col:19> 'int' '!='         |   |   | |-ImplicitCastExpr 0x14391d200 <col:8> 'int' <LValueToRValue>         |   |   | | `-DeclRefExpr 0x14391d1c0 <col:8> 'int' lvalue Var 0x14391cc98 'esc_len' 'int'         |   |   | `-IntegerLiteral 0x14391d1e0 <col:19> 'int' 1         |   |   `-CompoundStmt 0x14391d3a0 <col:22, line:16:4>         |   |-BinaryOperator 0x14391d480 <line:17:4, col:18> 'char' contains-errors '='         |   | |-DeclRefExpr 0x14391d3d0 <col:4> 'char' contains-errors lvalue Var 0x14391c658 'escape' 'char'         |   | `-ImplicitCastExpr 0x14391d468 <col:13, col:18> 'char' contains-errors <LValueToRValue>         |   |   `-ArraySubscriptExpr 0x14391d448 <col:13, col:18> 'char' contains-errors lvalue         |   |     |-ImplicitCastExpr 0x14391d430 <col:13> 'char *' contains-errors <LValueToRValue>         |   |     | `-DeclRefExpr 0x14391d3f0 <col:13> 'char *' contains-errors lvalue Var 0x14391ca68 'esc' 'char *'         |   |     `-IntegerLiteral 0x14391d410 <col:17> 'int' 0         |   |-CaseStmt 0x14391d4d8 <line:19:3, line:23:4>         |   | |-ConstantExpr 0x14391d4c0 <line:19:8> 'int'         |   | | `-IntegerLiteral 0x14391d4a0 <col:8> 'int' 3         |   | `-IfStmt 0x14391d5c8 <line:20:4, line:23:4>         |   |   |-BinaryOperator 0x14391d558 <line:20:8, col:17> 'int' '!='         |   |   | |-ImplicitCastExpr 0x14391d540 <col:8> 'int' <LValueToRValue>         |   |   | | `-DeclRefExpr 0x14391d500 <col:8> 'int' lvalue Var 0x14391cbf8 'e_len' 'int'         |   |   | `-IntegerLiteral 0x14391d520 <col:17> 'int' 1         |   |   `-CompoundStmt 0x14391d5b8 <col:20, line:23:4>         |   |-BinaryOperator 0x1420138b0 <line:24:4, col:23> 'char' contains-errors '='         |   | |-DeclRefExpr 0x142013800 <col:4> 'char' contains-errors lvalue Var 0x1439041f0 'enclosure' 'char'         |   | `-ImplicitCastExpr 0x142013898 <col:16, col:23> 'char' contains-errors <LValueToRValue>         |   |   `-ArraySubscriptExpr 0x142013878 <col:16, col:23> 'char' contains-errors lvalue         |   |     |-ImplicitCastExpr 0x142013860 <col:16> 'char *' contains-errors <LValueToRValue>         |   |     | `-DeclRefExpr 0x142013820 <col:16> 'char *' contains-errors lvalue Var 0x14391c9b0 'enclo' 'char *'         |   |     `-IntegerLiteral 0x142013840 <col:22> 'int' 0         |   |-CaseStmt 0x142013908 <line:26:3, line:30:4>         |   | |-ConstantExpr 0x1420138f0 <line:26:8> 'int'         |   | | `-IntegerLiteral 0x1420138d0 <col:8> 'int' 2         |   | `-IfStmt 0x1420139f8 <line:27:4, line:30:4>         |   |   |-BinaryOperator 0x142013988 <line:27:8, col:17> 'int' '!='         |   |   | |-ImplicitCastExpr 0x142013970 <col:8> 'int' <LValueToRValue>         |   |   | | `-DeclRefExpr 0x142013930 <col:8> 'int' lvalue Var 0x14391cb58 'd_len' 'int'         |   |   | `-IntegerLiteral 0x142013950 <col:17> 'int' 1         |   |   `-CompoundStmt 0x1420139e8 <col:20, line:30:4>         |   |-BinaryOperator 0x142013ac8 <line:31:4, col:23> 'char' contains-errors '='         |   | |-DeclRefExpr 0x142013a18 <col:4> 'char' contains-errors lvalue Var 0x143903f90 'delimiter' 'char'         |   | `-ImplicitCastExpr 0x142013ab0 <col:16, col:23> 'char' contains-errors <LValueToRValue>         |   |   `-ArraySubscriptExpr 0x142013a90 <col:16, col:23> 'char' contains-errors lvalue         |   |     |-ImplicitCastExpr 0x142013a78 <col:16> 'char *' contains-errors <LValueToRValue>         |   |     | `-DeclRefExpr 0x142013a38 <col:16> 'char *' contains-errors lvalue Var 0x14391c8f8 'delim' 'char *'         |   |     `-IntegerLiteral 0x142013a58 <col:22> 'int' 0         |   `-CaseStmt 0x142013b20 <line:33:3, line:35:4>         |     |-ConstantExpr 0x142013b08 <line:33:8> 'int'         |     | `-IntegerLiteral 0x142013ae8 <col:8> 'int' 1         |     `-CaseStmt 0x142013b80 <line:34:3, line:35:4>         |       |-ConstantExpr 0x142013b68 <line:34:8> 'int'         |       | `-IntegerLiteral 0x142013b48 <col:8> 'int' 0         |       `-BreakStmt 0x142013ba8 <line:35:4>         `-CallExpr 0x142013eb0 <line:38:3, col:18> 'int'           |-ImplicitCastExpr 0x142013e98 <col:3> 'int (*)()' <FunctionToPointerDecay>           | `-DeclRefExpr 0x142013e58 <col:3> 'int ()' Function 0x142013da0 'RETURN_LONG' 'int ()'           `-ImplicitCastExpr 0x142013ed8 <col:15> 'int' <LValueToRValue>             `-DeclRefExpr 0x142013e78 <col:15> 'int' lvalue Var 0x14391cd38 'ret' 'int' ","19836":"`-FunctionDecl 0x154140c98  line:1:30 nfs4_open_recoverdata_alloc 'struct nfs4_opendata *(struct nfs_open_context *, struct nfs4_state *)' static   |-ParmVarDecl 0x1541286e8 <col:58, col:83> col:83 used ctx 'struct nfs_open_context *'   |-ParmVarDecl 0x154140ac8 <col:88, col:107> col:107 used state 'struct nfs4_state *'   `-CompoundStmt 0x154141738 <line:2:1, line:11:1>     |-DeclStmt 0x154140e90 <line:3:2, col:32>     | `-VarDecl 0x154140e28 <col:2, col:24> col:24 used opendata 'struct nfs4_opendata *'     |-BinaryOperator 0x1541411e0 <line:5:2, col:66> 'struct nfs4_opendata *' contains-errors '='     | |-DeclRefExpr 0x154140ea8 <col:2> 'struct nfs4_opendata *' lvalue Var 0x154140e28 'opendata' 'struct nfs4_opendata *'     | `-CallExpr 0x1541411a0 <col:13, col:66> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x154140ff0 <col:13> 'int ()' Function 0x154140f38 'nfs4_opendata_alloc' 'int ()'     |   |-UnaryOperator 0x154141070 <col:33, col:39> '<dependent type>' contains-errors prefix '&' cannot overflow     |   | `-RecoveryExpr 0x154141048 <col:34, col:39> '<dependent type>' contains-errors lvalue     |   |   `-DeclRefExpr 0x154141010 <col:34> 'struct nfs_open_context *' lvalue ParmVar 0x1541286e8 'ctx' 'struct nfs_open_context *'     |   |-RecoveryExpr 0x1541410c0 <col:45, col:52> '<dependent type>' contains-errors lvalue     |   | `-DeclRefExpr 0x154141088 <col:45> 'struct nfs4_state *' lvalue ParmVar 0x154140ac8 'state' 'struct nfs4_state *'     |   |-IntegerLiteral 0x1541410e8 <col:59> 'int' 0     |   `-RecoveryExpr 0x154141180 <col:62> '<dependent type>' contains-errors lvalue     |-IfStmt 0x154141490 <line:6:2, line:7:25>     | |-BinaryOperator 0x154141278 <line:6:6, col:18> 'int' contains-errors '=='     | | |-DeclRefExpr 0x154141200 <col:6> 'struct nfs4_opendata *' lvalue Var 0x154140e28 'opendata' 'struct nfs4_opendata *'     | | `-RecoveryExpr 0x154141258 <col:18> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x154141480 <line:7:3, col:25>     |   `-CallExpr 0x154141458 <col:10, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x154141378 <col:10> 'int ()' Function 0x1541412c0 'ERR_PTR' 'int ()'     |     `-UnaryOperator 0x154141440 <col:18, col:19> '<dependent type>' contains-errors prefix '-' cannot overflow     |       `-ImplicitCastExpr 0x154141428 <col:19> '<dependent type>' contains-errors <LValueToRValue>     |         `-RecoveryExpr 0x154141408 <col:19> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x154141530 <line:8:2, col:20> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x1541414e8 <col:2, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x1541414b0 <col:2> 'struct nfs4_opendata *' lvalue Var 0x154140e28 'opendata' 'struct nfs4_opendata *'     | `-DeclRefExpr 0x154141510 <col:20> 'struct nfs4_state *' lvalue ParmVar 0x154140ac8 'state' 'struct nfs4_state *'     |-CallExpr 0x1541416c8 <line:9:2, col:26> '<dependent type>' contains-errors     | |-DeclRefExpr 0x154141630 <col:2> 'int ()' Function 0x154141578 'atomic_inc' 'int ()'     | `-UnaryOperator 0x1541416b0 <col:13, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-RecoveryExpr 0x154141688 <col:14, col:21> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x154141650 <col:14> 'struct nfs4_state *' lvalue ParmVar 0x154140ac8 'state' 'struct nfs4_state *'     `-ReturnStmt 0x154141728 <line:10:2, col:9>       `-ImplicitCastExpr 0x154141710 <col:9> 'struct nfs4_opendata *' <LValueToRValue>         `-DeclRefExpr 0x1541416f0 <col:9> 'struct nfs4_opendata *' lvalue Var 0x154140e28 'opendata' 'struct nfs4_opendata *' ","19491":"`-FunctionDecl 0x154026638  line:1:1 auth_server_input_cuid 'int (struct auth_server_connection *, const char *const *)'   |-ParmVarDecl 0x15400e248 <col:24, col:55> col:55 used conn 'struct auth_server_connection *'   |-ParmVarDecl 0x15400e2f8 <line:2:10, col:29> col:29 used args 'const char *const *'   `-CompoundStmt 0x154027028 <line:3:1, line:14:1>     |-IfStmt 0x154026a30 <line:4:2, line:7:2>     | |-RecoveryExpr 0x154026770 <line:4:6, col:12> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x154026738 <col:6> 'struct auth_server_connection *' lvalue ParmVar 0x15400e248 'conn' 'struct auth_server_connection *'     | `-CompoundStmt 0x154026a10 <col:32, line:7:2>     |   |-CallExpr 0x154026988 <line:5:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x154026970 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x1540268c0 <col:3> 'int ()' Function 0x154026808 'i_error' 'int ()'     |   | `-ImplicitCastExpr 0x1540269b0 <col:11> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x154026920 <col:11> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x154026a00 <line:6:3, col:11>     |     `-UnaryOperator 0x1540269e8 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x1540269c8 <col:11> 'int' 1     |-IfStmt 0x154026fd8 <line:8:2, line:12:2>     | |-BinaryOperator 0x154026eb8 <line:8:6, line:9:49> 'int' contains-errors '||'     | | |-BinaryOperator 0x154026e10 <line:8:6, col:17> 'int' contains-errors '=='     | | | |-ArraySubscriptExpr 0x154026dd0 <col:6, col:12> 'const char *const' lvalue     | | | | |-ImplicitCastExpr 0x154026db8 <col:6> 'const char *const *' <LValueToRValue>     | | | | | `-DeclRefExpr 0x154026a50 <col:6> 'const char *const *' lvalue ParmVar 0x15400e2f8 'args' 'const char *const *'     | | | | `-IntegerLiteral 0x154026a70 <col:11> 'int' 0     | | | `-RecoveryExpr 0x154026df0 <col:17> '<dependent type>' contains-errors lvalue     | | `-BinaryOperator 0x154026e98 <line:9:6, col:49> 'int' contains-errors '<'     | |   |-CallExpr 0x154026e68 <col:6, col:45> '<dependent type>' contains-errors     | |   | |-DeclRefExpr 0x154026be0 <col:6> 'int ()' Function 0x154026b28 'str_to_uint' 'int ()'     | |   | |-ArraySubscriptExpr 0x154026e48 <col:18, col:24> 'const char *const' lvalue     | |   | | |-ImplicitCastExpr 0x154026e30 <col:18> 'const char *const *' <LValueToRValue>     | |   | | | `-DeclRefExpr 0x154026c00 <col:18> 'const char *const *' lvalue ParmVar 0x15400e2f8 'args' 'const char *const *'     | |   | | `-IntegerLiteral 0x154026c20 <col:23> 'int' 0     | |   | `-UnaryOperator 0x154026cd8 <col:27, col:34> '<dependent type>' contains-errors prefix '&' cannot overflow     | |   |   `-RecoveryExpr 0x154026cb0 <col:28, col:34> '<dependent type>' contains-errors lvalue     | |   |     `-DeclRefExpr 0x154026c78 <col:28> 'struct auth_server_connection *' lvalue ParmVar 0x15400e248 'conn' 'struct auth_server_connection *'     | |   `-IntegerLiteral 0x154026d20 <col:49> 'int' 0     | `-CompoundStmt 0x154026fb8 <col:52, line:12:2>     |   |-CallExpr 0x154026f30 <line:10:3, col:16> 'int'     |   | |-ImplicitCastExpr 0x154026f18 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x154026ed8 <col:3> 'int ()' Function 0x154026808 'i_error' 'int ()'     |   | `-ImplicitCastExpr 0x154026f58 <col:11> 'char *' <ArrayToPointerDecay>     |   |   `-StringLiteral 0x154026ef8 <col:11> 'char[4]' lvalue \"STR\"     |   `-ReturnStmt 0x154026fa8 <line:11:3, col:11>     |     `-UnaryOperator 0x154026f90 <col:10, col:11> 'int' prefix '-'     |       `-IntegerLiteral 0x154026f70 <col:11> 'int' 1     `-ReturnStmt 0x154027018 <line:13:2, col:9>       `-IntegerLiteral 0x154026ff8 <col:9> 'int' 0 ","19227":"`-FunctionDecl 0x13e80de38  line:1:1 SPL_METHOD 'int (int, int)'   |-ParmVarDecl 0x13e80dd58 <col:12> col:12 SplDoublyLinkedList 'int'   |-ParmVarDecl 0x13e80dcd8 <col:33> col:33 shift 'int'   `-CompoundStmt 0x13e8286e8 <line:2:1, line:19:1>     |-IfStmt 0x13e80e278 <line:6:2, line:8:2>     | |-RecoveryExpr 0x13e80e230 <line:6:6, col:62> '_Bool' contains-errors     | `-CompoundStmt 0x13e80e260 <col:71, line:8:2>     |   `-ReturnStmt 0x13e80e250 <line:7:3>     `-IfStmt 0x13e828588 <line:13:2, line:16:2>       |-BinaryOperator 0x13e80e358 <line:13:6, col:15> 'int' contains-errors '=='       | |-RecoveryExpr 0x13e80e318 <col:6> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x13e80e338 <col:15> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x13e828570 <col:21, line:16:2>         `-ReturnStmt 0x13e828560 <line:15:3> ","19825":"`-FunctionDecl 0x157827578  line:1:6 invalid __blk_mq_sched_bio_merge 'int (struct request_queue *, struct bio *)'   |-ParmVarDecl 0x15780e268 <col:31, col:53> col:53 used q 'struct request_queue *'   |-ParmVarDecl 0x157827458 <col:56, col:68> col:68 used bio 'struct bio *'   `-CompoundStmt 0x15782dcf8 <line:2:1, line:25:1>     |-DeclStmt 0x157827878 <line:3:2, col:40>     | |-RecordDecl 0x157827630 <col:2, col:9> col:9 struct elevator_queue     | `-VarDecl 0x157827798 <col:2, col:32> col:25 used e 'struct elevator_queue *' cinit     |   `-RecoveryExpr 0x157827838 <col:29, col:32> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x157827800 <col:29> 'struct request_queue *' lvalue ParmVar 0x15780e268 'q' 'struct request_queue *'     |-DeclStmt 0x157827cb8 <line:4:2, col:44>     | |-RecordDecl 0x157827890 <col:2, col:9> col:9 struct blk_mq_ctx     | `-VarDecl 0x1578279f8 <col:2, col:43> col:21 used ctx 'struct blk_mq_ctx *' cinit     |   `-ImplicitCastExpr 0x157827c88 <col:27, col:43> 'struct blk_mq_ctx *' <IntegralToPointer>     |     `-CallExpr 0x157827c48 <col:27, col:43> 'int'     |       |-ImplicitCastExpr 0x157827c30 <col:27> 'int (*)()' <FunctionToPointerDecay>     |       | `-DeclRefExpr 0x157827bc0 <col:27> 'int ()' Function 0x157827b08 'blk_mq_get_ctx' 'int ()'     |       `-ImplicitCastExpr 0x157827c70 <col:42> 'struct request_queue *' <LValueToRValue>     |         `-DeclRefExpr 0x157827be0 <col:42> 'struct request_queue *' lvalue ParmVar 0x15780e268 'q' 'struct request_queue *'     |-DeclStmt 0x157828090 <line:5:2, col:68>     | |-RecordDecl 0x157827cd0 <col:2, col:9> col:9 struct blk_mq_hw_ctx     | `-VarDecl 0x157827e38 <col:2, col:67> col:24 used hctx 'struct blk_mq_hw_ctx *' cinit     |   `-CallExpr 0x157828040 <col:31, col:67> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x157827f80 <col:31> 'int ()' Function 0x157827ec8 'blk_mq_map_queue' 'int ()'     |     |-DeclRefExpr 0x157827fa0 <col:48> 'struct request_queue *' lvalue ParmVar 0x15780e268 'q' 'struct request_queue *'     |     |-RecoveryExpr 0x157827ff8 <col:51, col:56> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x157827fc0 <col:51> 'struct bio *' lvalue ParmVar 0x157827458 'bio' 'struct bio *'     |     `-DeclRefExpr 0x157828020 <col:64> 'struct blk_mq_ctx *' lvalue Var 0x1578279f8 'ctx' 'struct blk_mq_ctx *'     |-DeclStmt 0x157828248 <line:7:2, col:21>     | |-EnumDecl 0x1578280a8 <col:2, col:7> col:7 hctx_type     | `-VarDecl 0x1578281c8 <col:2, col:17> col:17 referenced invalid type 'enum hctx_type'     |-IfStmt 0x15782d2e0 <line:9:2, line:12:2>     | |-BinaryOperator 0x157828370 <line:9:6, col:24> 'int' contains-errors '&&'     | | |-DeclRefExpr 0x157828260 <col:6> 'struct elevator_queue *' contains-errors lvalue Var 0x157827798 'e' 'struct elevator_queue *'     | | `-CXXDependentScopeMemberExpr 0x157828328 <col:11, col:24> '<dependent type>' contains-errors lvalue .bio_merge     | |   `-CXXDependentScopeMemberExpr 0x1578282e0 <col:11, col:20> '<dependent type>' contains-errors lvalue ->ops     | |     `-RecoveryExpr 0x1578282b8 <col:11, col:14> '<dependent type>' contains-errors lvalue     | |       `-DeclRefExpr 0x157828280 <col:11> 'struct elevator_queue *' contains-errors lvalue Var 0x157827798 'e' 'struct elevator_queue *'     | `-CompoundStmt 0x15782d2c0 <col:35, line:12:2>     |   |-CallExpr 0x15782d110 <line:10:3, col:21> 'int'     |   | |-ImplicitCastExpr 0x15782d0f8 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15782d0b8 <col:3> 'int ()' Function 0x15782d000 'blk_mq_put_ctx' 'int ()'     |   | `-ImplicitCastExpr 0x15782d138 <col:18> 'struct blk_mq_ctx *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15782d0d8 <col:18> 'struct blk_mq_ctx *' lvalue Var 0x1578279f8 'ctx' 'struct blk_mq_ctx *'     |   `-ReturnStmt 0x15782d2b0 <line:11:3, col:42>     |     `-CallExpr 0x15782d280 <col:10, col:42> '<dependent type>' contains-errors     |       |-CXXDependentScopeMemberExpr 0x15782d1f8 <col:10, col:23> '<dependent type>' contains-errors lvalue .bio_merge     |       | `-CXXDependentScopeMemberExpr 0x15782d1b0 <col:10, col:19> '<dependent type>' contains-errors lvalue ->ops     |       |   `-RecoveryExpr 0x15782d188 <col:10, col:13> '<dependent type>' contains-errors lvalue     |       |     `-DeclRefExpr 0x15782d150 <col:10> 'struct elevator_queue *' contains-errors lvalue Var 0x157827798 'e' 'struct elevator_queue *'     |       |-DeclRefExpr 0x15782d240 <col:33> 'struct blk_mq_hw_ctx *' contains-errors lvalue Var 0x157827e38 'hctx' 'struct blk_mq_hw_ctx *'     |       `-DeclRefExpr 0x15782d260 <col:39> 'struct bio *' lvalue ParmVar 0x157827458 'bio' 'struct bio *'     |-BinaryOperator 0x15782d3a8 <line:14:2, col:15> '<dependent type>' contains-errors '='     | |-RecoveryExpr 0x15782d320 <col:2> '<dependent type>' contains-errors lvalue     | | `-DeclRefExpr 0x15782d300 <col:2> 'enum hctx_type' lvalue Var 0x1578281c8 'type' 'enum hctx_type'     | `-RecoveryExpr 0x15782d380 <col:9, col:15> '<dependent type>' contains-errors lvalue     |   `-DeclRefExpr 0x15782d348 <col:9> 'struct blk_mq_hw_ctx *' contains-errors lvalue Var 0x157827e38 'hctx' 'struct blk_mq_hw_ctx *'     |-IfStmt 0x15782dc40 <line:15:2, line:21:2>     | |-RecoveryExpr 0x15782d688 <line:15:6, line:16:44> '_Bool' contains-errors     | `-CompoundStmt 0x15782dc20 <col:47, line:21:2>     |   |-CallExpr 0x15782d820 <line:18:3, col:23> '<dependent type>' contains-errors     |   | |-DeclRefExpr 0x15782d788 <col:3> 'int ()' Function 0x15782d6d0 'spin_lock' 'int ()'     |   | `-UnaryOperator 0x15782d808 <col:13, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     |   |   `-RecoveryExpr 0x15782d7e0 <col:14, col:19> '<dependent type>' contains-errors lvalue     |   |     `-DeclRefExpr 0x15782d7a8 <col:14> 'struct blk_mq_ctx *' lvalue Var 0x1578279f8 'ctx' 'struct blk_mq_ctx *'     |   `-CallExpr 0x15782dbf8 <line:20:3, col:25> '<dependent type>' contains-errors     |     |-DeclRefExpr 0x15782db60 <col:3> 'int ()' Function 0x15782daa8 'spin_unlock' 'int ()'     |     `-UnaryOperator 0x15782dbe0 <col:15, col:21> '<dependent type>' contains-errors prefix '&' cannot overflow     |       `-RecoveryExpr 0x15782dbb8 <col:16, col:21> '<dependent type>' contains-errors lvalue     |         `-DeclRefExpr 0x15782db80 <col:16> 'struct blk_mq_ctx *' lvalue Var 0x1578279f8 'ctx' 'struct blk_mq_ctx *'     `-CallExpr 0x15782dcb8 <line:23:2, col:20> 'int'       |-ImplicitCastExpr 0x15782dca0 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x15782dc60 <col:2> 'int ()' Function 0x15782d000 'blk_mq_put_ctx' 'int ()'       `-ImplicitCastExpr 0x15782dce0 <col:17> 'struct blk_mq_ctx *' <LValueToRValue>         `-DeclRefExpr 0x15782dc80 <col:17> 'struct blk_mq_ctx *' lvalue Var 0x1578279f8 'ctx' 'struct blk_mq_ctx *' ","19421":"`-FunctionDecl 0x152941aa0  col:5 implicit used free 'void (void *)' extern   |-ParmVarDecl 0x152941ba0 <<invalid sloc>> <invalid sloc> 'void *'   `-BuiltinAttr 0x152941b48 <<invalid sloc>> Implicit 873 ","19698":"`-FunctionDecl 0x12c00ddf8  line:1:1 invalid FindEmptyObjectSlot 'int (int *)'   |-ParmVarDecl 0x12c00dd28 <line:2:7, col:24> col:24 invalid handle 'int *'   `-CompoundStmt 0x12c028128 <line:4:1, line:20:1>     `-ForStmt 0x12c0280f0 <line:7:5, line:18:2>       |-<<<NULL>>>       |-<<<NULL>>>       |-BinaryOperator 0x12c00dfa8 <line:7:16, col:20> 'int' contains-errors '<'       | |-RecoveryExpr 0x12c00df68 <col:16> '<dependent type>' contains-errors lvalue       | `-RecoveryExpr 0x12c00df88 <col:20> '<dependent type>' contains-errors lvalue       |-UnaryOperator 0x12c00e018 <col:40, col:41> '<dependent type>' contains-errors postfix '++' cannot overflow       | `-RecoveryExpr 0x12c00dff8 <col:40> '<dependent type>' contains-errors lvalue       `-CompoundStmt 0x12c0280d8 <line:8:2, line:18:2>         `-IfStmt 0x12c0280b8 <line:10:6, line:17:3>           |-BinaryOperator 0x12c00e210 <line:10:9, col:40> 'int' contains-errors '=='           | |-CXXDependentScopeMemberExpr 0x12c00e1a8 <col:9, col:28> '<dependent type>' contains-errors lvalue .occupied           | | `-CXXDependentScopeMemberExpr 0x12c00e160 <col:9, col:17> '<dependent type>' contains-errors lvalue ->attributes           | |   `-RecoveryExpr 0x12c00e140 <col:9> '<dependent type>' contains-errors lvalue           | `-RecoveryExpr 0x12c00e1f0 <col:40> '<dependent type>' contains-errors lvalue           `-CompoundStmt 0x12c028098 <line:11:3, line:17:3>             |-IfStmt 0x12c027e00 <line:12:7, line:13:18>             | |-RecoveryExpr 0x12c00e230 <line:12:10> '<dependent type>' contains-errors lvalue             | `-BinaryOperator 0x12c00e3d0 <line:13:4, col:18> '<dependent type>' contains-errors '='             |   |-UnaryOperator 0x12c00e358 <col:4, col:5> '<dependent type>' contains-errors prefix '*' cannot overflow             |   | `-ImplicitCastExpr 0x12c00e340 <col:5> '<dependent type>' contains-errors <LValueToRValue>             |   |   `-RecoveryExpr 0x12c00e250 <col:5> '<dependent type>' contains-errors lvalue             |   `-BinaryOperator 0x12c00e3b0 <col:14, col:18> '<dependent type>' contains-errors '+'             |     |-RecoveryExpr 0x12c00e370 <col:14> '<dependent type>' contains-errors lvalue             |     `-RecoveryExpr 0x12c00e390 <col:18> '<dependent type>' contains-errors lvalue             `-ReturnStmt 0x12c028088 <line:16:7, col:14>               `-RecoveryExpr 0x12c028068 <col:14> '<dependent type>' contains-errors lvalue ","19301":"`-FunctionDecl 0x14c027608  line:1:1 invalid file_softmagic 'int (struct magic_set *, const unsigned char *, int, int, int)'   |-ParmVarDecl 0x14c00e248 <col:16, col:34> col:34 used ms 'struct magic_set *'   |-ParmVarDecl 0x14c00e2f8 <col:38, col:59> col:59 used buf 'const unsigned char *'   |-ParmVarDecl 0x14c00e390 <col:64, col:71> col:71 invalid nbytes 'int'   |-ParmVarDecl 0x14c027418 <line:2:5, col:9> col:9 used mode 'int'   |-ParmVarDecl 0x14c027498 <col:15, col:19> col:19 used text 'int'   `-CompoundStmt 0x14c028148 <line:3:1, line:12:1>     |-DeclStmt 0x14c0278c8 <line:4:2, col:18>     | |-RecordDecl 0x14c0276d8 <col:2, col:9> col:9 struct mlist     | `-VarDecl 0x14c027848 <col:2, col:16> col:16 used ml 'struct mlist *'     |-DeclStmt 0x14c027960 <line:5:2, col:8>     | `-VarDecl 0x14c0278f8 <col:2, col:6> col:6 used rv 'int'     |-ForStmt 0x14c0280e0 <line:6:2, line:9:11>     | |-BinaryOperator 0x14c027a98 <line:6:7, col:26> 'struct mlist *' contains-errors '='     | | |-DeclRefExpr 0x14c027978 <col:7> 'struct mlist *' lvalue Var 0x14c027848 'ml' 'struct mlist *'     | | `-CXXDependentScopeMemberExpr 0x14c027a50 <col:12, col:26> '<dependent type>' contains-errors lvalue ->next     | |   `-ArraySubscriptExpr 0x14c027a30 <col:12, col:23> '<dependent type>' contains-errors lvalue     | |     |-ImplicitCastExpr 0x14c027a18 <col:12, col:16> '<dependent type>' contains-errors <LValueToRValue>     | |     | `-RecoveryExpr 0x14c0279d0 <col:12, col:16> '<dependent type>' contains-errors lvalue     | |     |   `-DeclRefExpr 0x14c027998 <col:12> 'struct magic_set *' lvalue ParmVar 0x14c00e248 'ms' 'struct magic_set *'     | |     `-IntegerLiteral 0x14c0279f8 <col:22> 'int' 0     | |-<<<NULL>>>     | |-BinaryOperator 0x14c027b90 <col:32, col:49> 'int' contains-errors '!='     | | |-DeclRefExpr 0x14c027ab8 <col:32> 'struct mlist *' lvalue Var 0x14c027848 'ml' 'struct mlist *'     | | `-ArraySubscriptExpr 0x14c027b70 <col:38, col:49> '<dependent type>' contains-errors lvalue     | |   |-ImplicitCastExpr 0x14c027b58 <col:38, col:42> '<dependent type>' contains-errors <LValueToRValue>     | |   | `-RecoveryExpr 0x14c027b10 <col:38, col:42> '<dependent type>' contains-errors lvalue     | |   |   `-DeclRefExpr 0x14c027ad8 <col:38> 'struct magic_set *' lvalue ParmVar 0x14c00e248 'ms' 'struct magic_set *'     | |   `-IntegerLiteral 0x14c027b38 <col:48> 'int' 0     | |-BinaryOperator 0x14c027c30 <col:52, col:61> 'struct mlist *' contains-errors '='     | | |-DeclRefExpr 0x14c027bb0 <col:52> 'struct mlist *' lvalue Var 0x14c027848 'ml' 'struct mlist *'     | | `-RecoveryExpr 0x14c027c08 <col:57, col:61> '<dependent type>' contains-errors lvalue     | |   `-DeclRefExpr 0x14c027bd0 <col:57> 'struct mlist *' lvalue Var 0x14c027848 'ml' 'struct mlist *'     | `-IfStmt 0x14c0280c0 <line:7:3, line:9:11>     |   |-RecoveryExpr 0x14c028058 <line:7:7, line:8:26> '_Bool' contains-errors     |   `-ReturnStmt 0x14c0280b0 <line:9:4, col:11>     |     `-ImplicitCastExpr 0x14c028098 <col:11> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x14c028078 <col:11> 'int' lvalue Var 0x14c0278f8 'rv' 'int'     `-ReturnStmt 0x14c028138 <line:11:2, col:9>       `-IntegerLiteral 0x14c028118 <col:9> 'int' 0 ","19281":"`-FunctionDecl 0x153128198  line:1:1 rsvg_new_group 'int (void)'   `-CompoundStmt 0x1531287d8 <line:2:1, line:9:1>     |-CallExpr 0x153128678 <line:5:5, col:35> '<dependent type>' contains-errors     | |-DeclRefExpr 0x153128538 <col:5> 'int ()' Function 0x153128480 '_rsvg_node_init' 'int ()'     | `-UnaryOperator 0x153128660 <col:22, col:30> '<dependent type>' contains-errors prefix '&' cannot overflow     |   `-CXXDependentScopeMemberExpr 0x153128618 <col:23, col:30> '<dependent type>' contains-errors lvalue ->super     |     `-RecoveryExpr 0x1531285f8 <col:23> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1531287c8 <line:8:5, col:20>       `-UnaryOperator 0x1531287b0 <col:12, col:20> '<dependent type>' contains-errors prefix '&' cannot overflow         `-CXXDependentScopeMemberExpr 0x153128768 <col:13, col:20> '<dependent type>' contains-errors lvalue ->super           `-RecoveryExpr 0x153128748 <col:13> '<dependent type>' contains-errors lvalue ","19837":"`-FunctionDecl 0x12d1417b8  line:1:5 invalid ldb_match_message 'int (struct ldb_context *, const struct ldb_message *, const struct ldb_parse_tree *, enum ldb_scope, int *)'   |-ParmVarDecl 0x12d128e48 <col:23, col:43> col:43 used ldb 'struct ldb_context *'   |-ParmVarDecl 0x12d141228 <line:2:9, col:35> col:35 used msg 'const struct ldb_message *'   |-ParmVarDecl 0x12d1413f8 <line:3:9, col:38> col:38 used tree 'const struct ldb_parse_tree *'   |-ParmVarDecl 0x12d141578 <line:4:9, col:24> col:24 invalid scope 'enum ldb_scope'   |-ParmVarDecl 0x12d141648 <col:31, col:37> col:37 invalid matched 'int *'   `-CompoundStmt 0x12d144c68 <line:5:1, line:64:1>     |-DeclStmt 0x12d141908 <line:6:2, col:16>     | `-VarDecl 0x12d1418a0 <col:2, col:15> col:15 used i 'unsigned int'     |-DeclStmt 0x12d1419a0 <line:7:2, col:9>     | `-VarDecl 0x12d141938 <col:2, col:6> col:6 used ret 'int'     |-IfStmt 0x12d141d88 <line:11:2, line:14:2>     | |-BinaryOperator 0x12d141d08 <line:11:6, col:58> 'int' contains-errors '&&'     | | |-BinaryOperator 0x12d141ce8 <col:6, col:15> 'int' contains-errors '!='     | | | |-RecoveryExpr 0x12d141a50 <col:6> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x12d141cc8 <col:15> '<dependent type>' contains-errors lvalue     | | `-CallExpr 0x12d141c80 <col:33, col:58> '<dependent type>' contains-errors     | |   |-DeclRefExpr 0x12d141c00 <col:33> 'int ()' Function 0x12d141b48 'ldb_dn_is_special' 'int ()'     | |   `-RecoveryExpr 0x12d141c58 <col:51, col:56> '<dependent type>' contains-errors lvalue     | |     `-DeclRefExpr 0x12d141c20 <col:51> 'const struct ldb_message *' lvalue ParmVar 0x12d141228 'msg' 'const struct ldb_message *'     | `-CompoundStmt 0x12d141d70 <col:61, line:14:2>     |   `-ReturnStmt 0x12d141d60 <line:13:3, col:10>     |     `-RecoveryExpr 0x12d141d40 <col:10> '<dependent type>' contains-errors lvalue     `-SwitchStmt 0x12d141e20 <line:16:2, line:61:2>       |-RecoveryExpr 0x12d141de0 <line:16:10, col:16> '<dependent type>' contains-errors lvalue       | `-DeclRefExpr 0x12d141da8 <col:10> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'       `-CompoundStmt 0x12d144c00 <col:27, line:61:2>         |-ForStmt 0x12d1433c0 <line:18:3, line:22:3>         | |-BinaryOperator 0x12d141eb8 <line:18:8, col:10> 'unsigned int' '='         | | |-DeclRefExpr 0x12d141e60 <col:8> 'unsigned int' lvalue Var 0x12d1418a0 'i' 'unsigned int'         | | `-ImplicitCastExpr 0x12d141ea0 <col:10> 'unsigned int' <IntegralCast>         | |   `-IntegerLiteral 0x12d141e80 <col:10> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x12d141fe8 <col:12, col:27> 'int' contains-errors '<'         | | |-DeclRefExpr 0x12d141ed8 <col:12> 'unsigned int' lvalue Var 0x12d1418a0 'i' 'unsigned int'         | | `-CXXDependentScopeMemberExpr 0x12d141fa0 <col:14, col:27> '<dependent type>' contains-errors lvalue .num_elements         | |   `-CXXDependentScopeMemberExpr 0x12d141f58 <col:14, col:22> '<dependent type>' contains-errors lvalue .list         | |     `-RecoveryExpr 0x12d141f30 <col:14, col:20> '<dependent type>' contains-errors lvalue         | |       `-DeclRefExpr 0x12d141ef8 <col:14> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         | |-UnaryOperator 0x12d142028 <col:40, col:41> 'unsigned int' postfix '++'         | | `-DeclRefExpr 0x12d142008 <col:40> 'unsigned int' lvalue Var 0x12d1418a0 'i' 'unsigned int'         | `-CompoundStmt 0x12d143398 <col:45, line:22:3>         |   |-BinaryOperator 0x12d143160 <line:19:4, col:78> 'int' contains-errors '='         |   | |-DeclRefExpr 0x12d142040 <col:4> 'int' lvalue Var 0x12d141938 'ret' 'int'         |   | `-CallExpr 0x12d143118 <col:10, col:78> '<dependent type>' contains-errors         |   |   |-RecoveryExpr 0x12d142060 <col:10> '<dependent type>' contains-errors lvalue         |   |   |-DeclRefExpr 0x12d142080 <col:28> 'struct ldb_context *' lvalue ParmVar 0x12d128e48 'ldb' 'struct ldb_context *'         |   |   |-DeclRefExpr 0x12d1420a0 <col:33> 'const struct ldb_message *' lvalue ParmVar 0x12d141228 'msg' 'const struct ldb_message *'         |   |   |-ArraySubscriptExpr 0x12d1430f8 <col:38, col:61> '<dependent type>' contains-errors lvalue         |   |   | |-ImplicitCastExpr 0x12d1430c8 <col:38, col:51> '<dependent type>' contains-errors <LValueToRValue>         |   |   | | `-CXXDependentScopeMemberExpr 0x12d142168 <col:38, col:51> '<dependent type>' contains-errors lvalue .elements         |   |   | |   `-CXXDependentScopeMemberExpr 0x12d142120 <col:38, col:46> '<dependent type>' contains-errors lvalue .list         |   |   | |     `-RecoveryExpr 0x12d1420f8 <col:38, col:44> '<dependent type>' contains-errors lvalue         |   |   | |       `-DeclRefExpr 0x12d1420c0 <col:38> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         |   |   | `-ImplicitCastExpr 0x12d1430e0 <col:60> 'unsigned int' <LValueToRValue>         |   |   |   `-DeclRefExpr 0x12d1421b0 <col:60> 'unsigned int' lvalue Var 0x12d1418a0 'i' 'unsigned int'         |   |   |-RecoveryExpr 0x12d143020 <col:64> '<dependent type>' contains-errors lvalue         |   |   `-RecoveryExpr 0x12d143040 <col:71> '<dependent type>' contains-errors lvalue         |   |-IfStmt 0x12d143260 <line:20:4, col:35>         |   | |-BinaryOperator 0x12d1431f8 <col:8, col:15> 'int' contains-errors '!='         |   | | |-DeclRefExpr 0x12d143180 <col:8> 'int' lvalue Var 0x12d141938 'ret' 'int'         |   | | `-RecoveryExpr 0x12d1431d8 <col:15> '<dependent type>' contains-errors lvalue         |   | `-ReturnStmt 0x12d143250 <col:28, col:35>         |   |   `-ImplicitCastExpr 0x12d143238 <col:35> 'int' <LValueToRValue>         |   |     `-DeclRefExpr 0x12d143218 <col:35> 'int' lvalue Var 0x12d141938 'ret' 'int'         |   `-IfStmt 0x12d143378 <line:21:4, col:26>         |     |-UnaryOperator 0x12d143318 <col:8, col:10> '<dependent type>' contains-errors prefix '!' cannot overflow         |     | `-UnaryOperator 0x12d143300 <col:9, col:10> '<dependent type>' contains-errors prefix '*' cannot overflow         |     |   `-ImplicitCastExpr 0x12d1432e8 <col:10> '<dependent type>' contains-errors <LValueToRValue>         |     |     `-RecoveryExpr 0x12d143280 <col:10> '<dependent type>' contains-errors lvalue         |     `-ReturnStmt 0x12d143368 <col:19, col:26>         |       `-RecoveryExpr 0x12d143348 <col:26> '<dependent type>' contains-errors lvalue         |-BinaryOperator 0x12d1434d0 <line:23:3, col:14> '<dependent type>' contains-errors '='         | |-UnaryOperator 0x12d143498 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x12d143480 <col:4> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x12d1433f8 <col:4> '<dependent type>' contains-errors lvalue         | `-DeclRefExpr 0x12d1434b0 <col:14> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         |-ReturnStmt 0x12d143528 <line:24:3, col:10>         | `-RecoveryExpr 0x12d143508 <col:10> '<dependent type>' contains-errors lvalue         |-ForStmt 0x12d143c10 <line:27:3, line:31:3>         | |-BinaryOperator 0x12d1435a8 <line:27:8, col:10> 'unsigned int' '='         | | |-DeclRefExpr 0x12d143550 <col:8> 'unsigned int' lvalue Var 0x12d1418a0 'i' 'unsigned int'         | | `-ImplicitCastExpr 0x12d143590 <col:10> 'unsigned int' <IntegralCast>         | |   `-IntegerLiteral 0x12d143570 <col:10> 'int' 0         | |-<<<NULL>>>         | |-BinaryOperator 0x12d1436d8 <col:12, col:27> 'int' contains-errors '<'         | | |-DeclRefExpr 0x12d1435c8 <col:12> 'unsigned int' lvalue Var 0x12d1418a0 'i' 'unsigned int'         | | `-CXXDependentScopeMemberExpr 0x12d143690 <col:14, col:27> '<dependent type>' contains-errors lvalue .num_elements         | |   `-CXXDependentScopeMemberExpr 0x12d143648 <col:14, col:22> '<dependent type>' contains-errors lvalue .list         | |     `-RecoveryExpr 0x12d143620 <col:14, col:20> '<dependent type>' contains-errors lvalue         | |       `-DeclRefExpr 0x12d1435e8 <col:14> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         | |-UnaryOperator 0x12d143718 <col:40, col:41> 'unsigned int' postfix '++'         | | `-DeclRefExpr 0x12d1436f8 <col:40> 'unsigned int' lvalue Var 0x12d1418a0 'i' 'unsigned int'         | `-CompoundStmt 0x12d143bf0 <col:45, line:31:3>         |   |-BinaryOperator 0x12d143a50 <line:28:4, col:78> 'int' contains-errors '='         |   | |-DeclRefExpr 0x12d143730 <col:4> 'int' lvalue Var 0x12d141938 'ret' 'int'         |   | `-CallExpr 0x12d143a08 <col:10, col:78> '<dependent type>' contains-errors         |   |   |-RecoveryExpr 0x12d143750 <col:10> '<dependent type>' contains-errors lvalue         |   |   |-DeclRefExpr 0x12d143770 <col:28> 'struct ldb_context *' lvalue ParmVar 0x12d128e48 'ldb' 'struct ldb_context *'         |   |   |-DeclRefExpr 0x12d143790 <col:33> 'const struct ldb_message *' lvalue ParmVar 0x12d141228 'msg' 'const struct ldb_message *'         |   |   |-ArraySubscriptExpr 0x12d1439e8 <col:38, col:61> '<dependent type>' contains-errors lvalue         |   |   | |-ImplicitCastExpr 0x12d1439b8 <col:38, col:51> '<dependent type>' contains-errors <LValueToRValue>         |   |   | | `-CXXDependentScopeMemberExpr 0x12d143858 <col:38, col:51> '<dependent type>' contains-errors lvalue .elements         |   |   | |   `-CXXDependentScopeMemberExpr 0x12d143810 <col:38, col:46> '<dependent type>' contains-errors lvalue .list         |   |   | |     `-RecoveryExpr 0x12d1437e8 <col:38, col:44> '<dependent type>' contains-errors lvalue         |   |   | |       `-DeclRefExpr 0x12d1437b0 <col:38> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         |   |   | `-ImplicitCastExpr 0x12d1439d0 <col:60> 'unsigned int' <LValueToRValue>         |   |   |   `-DeclRefExpr 0x12d1438a0 <col:60> 'unsigned int' lvalue Var 0x12d1418a0 'i' 'unsigned int'         |   |   |-RecoveryExpr 0x12d143910 <col:64> '<dependent type>' contains-errors lvalue         |   |   `-RecoveryExpr 0x12d143930 <col:71> '<dependent type>' contains-errors lvalue         |   `-IfStmt 0x12d143b50 <line:29:4, col:35>         |     |-BinaryOperator 0x12d143ae8 <col:8, col:15> 'int' contains-errors '!='         |     | |-DeclRefExpr 0x12d143a70 <col:8> 'int' lvalue Var 0x12d141938 'ret' 'int'         |     | `-RecoveryExpr 0x12d143ac8 <col:15> '<dependent type>' contains-errors lvalue         |     `-ReturnStmt 0x12d143b40 <col:28, col:35>         |       `-ImplicitCastExpr 0x12d143b28 <col:35> 'int' <LValueToRValue>         |         `-DeclRefExpr 0x12d143b08 <col:35> 'int' lvalue Var 0x12d141938 'ret' 'int'         |-BinaryOperator 0x12d143ec0 <line:36:3, col:72> 'int' contains-errors '='         | |-DeclRefExpr 0x12d143cc8 <col:3> 'int' lvalue Var 0x12d141938 'ret' 'int'         | `-CallExpr 0x12d143e78 <col:9, col:72> '<dependent type>' contains-errors         |   |-RecoveryExpr 0x12d143ce8 <col:9> '<dependent type>' contains-errors lvalue         |   |-DeclRefExpr 0x12d143d08 <col:27> 'struct ldb_context *' lvalue ParmVar 0x12d128e48 'ldb' 'struct ldb_context *'         |   |-DeclRefExpr 0x12d143d28 <col:32> 'const struct ldb_message *' lvalue ParmVar 0x12d141228 'msg' 'const struct ldb_message *'         |   |-CXXDependentScopeMemberExpr 0x12d143df0 <col:37, col:51> '<dependent type>' contains-errors lvalue .child         |   | `-CXXDependentScopeMemberExpr 0x12d143da8 <col:37, col:45> '<dependent type>' contains-errors lvalue .isnot         |   |   `-RecoveryExpr 0x12d143d80 <col:37, col:43> '<dependent type>' contains-errors lvalue         |   |     `-DeclRefExpr 0x12d143d48 <col:37> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         |   |-RecoveryExpr 0x12d143e38 <col:58> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x12d143e58 <col:65> '<dependent type>' contains-errors lvalue         |-IfStmt 0x12d143f68 <line:37:3, col:34>         | |-RecoveryExpr 0x12d143f00 <col:7, col:14> '_Bool' contains-errors         | `-ReturnStmt 0x12d143f58 <col:27, col:34>         |   `-ImplicitCastExpr 0x12d143f40 <col:34> 'int' <LValueToRValue>         |     `-DeclRefExpr 0x12d143f20 <col:34> 'int' lvalue Var 0x12d141938 'ret' 'int'         |-BinaryOperator 0x12d1440e0 <line:38:3, col:17> '<dependent type>' contains-errors '='         | |-UnaryOperator 0x12d144080 <col:3, col:4> '<dependent type>' contains-errors prefix '*' cannot overflow         | | `-ImplicitCastExpr 0x12d144068 <col:4> '<dependent type>' contains-errors <LValueToRValue>         | |   `-RecoveryExpr 0x12d143f88 <col:4> '<dependent type>' contains-errors lvalue         | `-UnaryOperator 0x12d1440c8 <col:14, col:17> '<dependent type>' contains-errors prefix '!' cannot overflow         |   `-UnaryOperator 0x12d1440b0 <col:16, col:17> '<dependent type>' contains-errors prefix '*' cannot overflow         |     `-ImplicitCastExpr 0x12d144098 <col:17> '<dependent type>' contains-errors <LValueToRValue>         |       `-RecoveryExpr 0x12d143fd8 <col:17> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x12d1442e8 <line:42:3, col:59>         | `-CallExpr 0x12d1442a0 <col:10, col:59> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x12d1441e0 <col:10> 'int ()' Function 0x12d144128 'ldb_match_equality' 'int ()'         |   |-DeclRefExpr 0x12d144200 <col:29> 'struct ldb_context *' lvalue ParmVar 0x12d128e48 'ldb' 'struct ldb_context *'         |   |-DeclRefExpr 0x12d144220 <col:34> 'const struct ldb_message *' lvalue ParmVar 0x12d141228 'msg' 'const struct ldb_message *'         |   |-DeclRefExpr 0x12d144240 <col:39> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         |   |-RecoveryExpr 0x12d144260 <col:45> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x12d144280 <col:52> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x12d1444e0 <line:45:3, col:60>         | `-CallExpr 0x12d144498 <col:10, col:60> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x12d1443d8 <col:10> 'int ()' Function 0x12d144320 'ldb_match_substring' 'int ()'         |   |-DeclRefExpr 0x12d1443f8 <col:30> 'struct ldb_context *' lvalue ParmVar 0x12d128e48 'ldb' 'struct ldb_context *'         |   |-DeclRefExpr 0x12d144418 <col:35> 'const struct ldb_message *' lvalue ParmVar 0x12d141228 'msg' 'const struct ldb_message *'         |   |-DeclRefExpr 0x12d144438 <col:40> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         |   |-RecoveryExpr 0x12d144458 <col:46> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x12d144478 <col:53> '<dependent type>' contains-errors lvalue         |-ReturnStmt 0x12d144938 <line:54:3, col:58>         | `-CallExpr 0x12d1448f0 <col:10, col:58> '<dependent type>' contains-errors         |   |-DeclRefExpr 0x12d144830 <col:10> 'int ()' Function 0x12d144778 'ldb_match_present' 'int ()'         |   |-DeclRefExpr 0x12d144850 <col:28> 'struct ldb_context *' lvalue ParmVar 0x12d128e48 'ldb' 'struct ldb_context *'         |   |-DeclRefExpr 0x12d144870 <col:33> 'const struct ldb_message *' lvalue ParmVar 0x12d141228 'msg' 'const struct ldb_message *'         |   |-DeclRefExpr 0x12d144890 <col:38> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'         |   |-RecoveryExpr 0x12d1448b0 <col:44> '<dependent type>' contains-errors lvalue         |   `-RecoveryExpr 0x12d1448d0 <col:51> '<dependent type>' contains-errors lvalue         `-ReturnStmt 0x12d144bf0 <line:60:3, col:59>           `-CallExpr 0x12d144ba8 <col:10, col:59> '<dependent type>' contains-errors             |-DeclRefExpr 0x12d144ae8 <col:10> 'int ()' Function 0x12d144a30 'ldb_match_extended' 'int ()'             |-DeclRefExpr 0x12d144b08 <col:29> 'struct ldb_context *' lvalue ParmVar 0x12d128e48 'ldb' 'struct ldb_context *'             |-DeclRefExpr 0x12d144b28 <col:34> 'const struct ldb_message *' lvalue ParmVar 0x12d141228 'msg' 'const struct ldb_message *'             |-DeclRefExpr 0x12d144b48 <col:39> 'const struct ldb_parse_tree *' lvalue ParmVar 0x12d1413f8 'tree' 'const struct ldb_parse_tree *'             |-RecoveryExpr 0x12d144b68 <col:45> '<dependent type>' contains-errors lvalue             `-RecoveryExpr 0x12d144b88 <col:52> '<dependent type>' contains-errors lvalue ","19186":"`-FunctionDecl 0x1309284f8  line:1:5 invalid DSA_verify 'int (int, const unsigned char *, int, const unsigned char *, int, int *)'   |-ParmVarDecl 0x1309280d8 <col:16, col:20> col:20 type 'int'   |-ParmVarDecl 0x130928188 <col:26, col:47> col:47 used dgst 'const unsigned char *'   |-ParmVarDecl 0x130928208 <col:53, col:57> col:57 used dgst_len 'int'   |-ParmVarDecl 0x130928288 <line:2:7, col:28> col:28 used sigbuf 'const unsigned char *'   |-ParmVarDecl 0x130928308 <col:36, col:40> col:40 used siglen 'int'   |-ParmVarDecl 0x1309283d8 <col:48, col:53> col:53 invalid dsa 'int *'   `-CompoundStmt 0x1309421b8 <line:3:2, line:21:2>     |-DeclStmt 0x1309286a0 <line:5:2, col:12>     | `-VarDecl 0x130928600 <col:2, col:11> col:6 used ret 'int' cinit     |   `-UnaryOperator 0x130928688 <col:10, col:11> 'int' prefix '-'     |     `-IntegerLiteral 0x130928668 <col:11> 'int' 1     |-IfStmt 0x1309419b0 <line:15:2, col:27>     | |-BinaryOperator 0x130941928 <col:6, col:11> 'int' contains-errors '=='     | | |-RecoveryExpr 0x1309418e8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x130941908 <col:11> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x1309419a0 <col:17, col:27>     |   `-ImplicitCastExpr 0x130941988 <col:23, col:27> 'int' <LValueToRValue>     |     `-ParenExpr 0x130941968 <col:23, col:27> 'int' lvalue     |       `-DeclRefExpr 0x130941948 <col:24> 'int' lvalue Var 0x130928600 'ret' 'int'     |-IfStmt 0x130941d10 <line:16:2, col:51>     | |-BinaryOperator 0x130941c88 <col:6, col:40> 'int' contains-errors '=='     | | |-CallExpr 0x130941c30 <col:6, col:35> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x130941ab0 <col:6> 'int ()' Function 0x1309419f8 'd2i_DSA_SIG' 'int ()'     | | | |-UnaryOperator 0x130941c18 <col:18, col:19> '<dependent type>' contains-errors prefix '&' cannot overflow     | | | | `-RecoveryExpr 0x130941bf8 <col:19> '<dependent type>' contains-errors lvalue     | | | |-UnaryOperator 0x130941b50 <col:21, col:22> 'const unsigned char **' prefix '&' cannot overflow     | | | | `-DeclRefExpr 0x130941b00 <col:22> 'const unsigned char *' lvalue ParmVar 0x130928288 'sigbuf' 'const unsigned char *'     | | | `-DeclRefExpr 0x130941b68 <col:29> 'int' lvalue ParmVar 0x130928308 'siglen' 'int'     | | `-RecoveryExpr 0x130941c68 <col:40> '<dependent type>' contains-errors lvalue     | `-GotoStmt 0x130941cf8 <col:46, col:51> 'err' 0x130941ca8     |-BinaryOperator 0x130941f88 <line:17:2, col:39> 'int' contains-errors '='     | |-DeclRefExpr 0x130941d30 <col:2> 'int' lvalue Var 0x130928600 'ret' 'int'     | `-CallExpr 0x130941f48 <col:6, col:39> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130941e30 <col:6> 'int ()' Function 0x130941d78 'DSA_do_verify' 'int ()'     |   |-DeclRefExpr 0x130941e50 <col:20> 'const unsigned char *' lvalue ParmVar 0x130928188 'dgst' 'const unsigned char *'     |   |-DeclRefExpr 0x130941e70 <col:25> 'int' lvalue ParmVar 0x130928208 'dgst_len' 'int'     |   |-RecoveryExpr 0x130941f28 <col:34> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x130941ea8 <col:36> '<dependent type>' contains-errors lvalue     |-LabelStmt 0x130942130 <line:18:1, line:19:16> 'err'     | `-CallExpr 0x130942108 <col:2, col:16> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x130942088 <col:2> 'int ()' Function 0x130941fd0 'DSA_SIG_free' 'int ()'     |   `-RecoveryExpr 0x1309420e8 <col:15> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x1309421a8 <line:20:2, col:12>       `-ImplicitCastExpr 0x130942190 <col:8, col:12> 'int' <LValueToRValue>         `-ParenExpr 0x130942170 <col:8, col:12> 'int' lvalue           `-DeclRefExpr 0x130942150 <col:9> 'int' lvalue Var 0x130928600 'ret' 'int' ","19398":"`-FunctionDecl 0x12680e188  line:1:12 invalid syscall_authenc_dec_final 'int (unsigned long, const void *, int, void *, int *, const void *, int)'   |-ParmVarDecl 0x12680dcf0 <col:38, col:52> col:52 used state 'unsigned long'   |-ParmVarDecl 0x12680dda8 <line:2:4, col:16> col:16 used src_data 'const void *'   |-ParmVarDecl 0x12680de28 <col:26, col:33> col:33 invalid src_len 'int'   |-ParmVarDecl 0x12680dea8 <col:42, col:48> col:48 used dst_data 'void *'   |-ParmVarDecl 0x12680df58 <line:3:4, col:14> col:14 invalid dst_len 'int *'   |-ParmVarDecl 0x12680dfd8 <col:23, col:35> col:35 used tag 'const void *'   |-ParmVarDecl 0x12680e058 <col:40, col:47> col:47 invalid tag_len 'int'   `-CompoundStmt 0x12780a2d8 <line:4:1, line:72:1>     |-DeclStmt 0x126827480 <line:6:2, col:27>     | |-RecordDecl 0x12680e268 <col:2, col:9> col:9 struct tee_cryp_state     | `-VarDecl 0x126827400 <col:2, col:25> col:25 used cs 'struct tee_cryp_state *'     |-DeclStmt 0x126827688 <line:7:2, col:29>     | |-RecordDecl 0x126827498 <col:2, col:9> col:9 struct tee_ta_session     | `-VarDecl 0x126827608 <col:2, col:25> col:25 used sess 'struct tee_ta_session *'     |-RecoveryExpr 0x126827780 <line:8:2, col:16> '<dependent type>' contains-errors lvalue     | |-UnaryExprOrTypeTraitExpr 0x126827760 <col:2, col:9> 'unsigned long' contains-errors sizeof     | | `-RecoveryExpr 0x126827740 <col:9> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x1268276d8 <col:16> 'int' 0     |-IfStmt 0x126827b38 <line:11:2, line:12:10>     | |-BinaryOperator 0x126827ad0 <line:11:6, col:13> 'int' contains-errors '!='     | | |-RecoveryExpr 0x126827a90 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x126827ab0 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x126827b28 <line:12:3, col:10>     |   `-RecoveryExpr 0x126827b08 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x126827fe8 <line:15:2, line:16:10>     | |-BinaryOperator 0x126827f80 <line:15:6, col:13> 'int' contains-errors '!='     | | |-RecoveryExpr 0x126827f40 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x126827f60 <col:13> '<dependent type>' contains-errors lvalue     | `-ReturnStmt 0x126827fd8 <line:16:3, col:10>     |   `-RecoveryExpr 0x126827fb8 <col:10> '<dependent type>' contains-errors lvalue     |-IfStmt 0x127809db0 <line:31:2, line:45:2> has_else     | |-UnaryOperator 0x127809b30 <line:31:6, col:7> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x127809b18 <col:7> '<dependent type>' contains-errors <LValueToRValue>     | |   `-RecoveryExpr 0x127809af8 <col:7> '<dependent type>' contains-errors lvalue     | |-CompoundStmt 0x127809b68 <col:16, line:33:2>     | `-CompoundStmt 0x127809da0 <col:9, line:45:2>     |-IfStmt 0x127809ea0 <line:47:2, line:50:2>     | |-RecoveryExpr 0x127809e00 <line:47:6, col:13> '_Bool' contains-errors     | `-CompoundStmt 0x127809e88 <col:22, line:50:2>     |   `-GotoStmt 0x127809e70 <line:49:3, col:8> 'out' 0x127809e20     `-LabelStmt 0x12780a2b8 <line:62:1, line:69:2> 'out'       `-IfStmt 0x12780a298 <line:63:2, line:69:2>         |-RecoveryExpr 0x12780a248 <line:63:6, line:64:17> '_Bool' contains-errors         `-CompoundStmt 0x12780a288 <col:23, line:69:2> ","19473":"`-FunctionDecl 0x120828cf8  col:5 implicit used memcpy 'void *(void *, const void *, unsigned long)' extern   |-ParmVarDecl 0x120829c00 <<invalid sloc>> <invalid sloc> 'void *'   |-ParmVarDecl 0x120829c68 <<invalid sloc>> <invalid sloc> 'const void *'   |-ParmVarDecl 0x120829cd0 <<invalid sloc>> <invalid sloc> 'unsigned long'   `-BuiltinAttr 0x120828da0 <<invalid sloc>> Implicit 882 ","19468":"`-FunctionDecl 0x128913bc0  line:1:8 invalid next_partition 'void (int)'   |-ParmVarDecl 0x128913af0 <col:23, col:31> col:31 invalid rownum 'int'   `-CompoundStmt 0x128913e78 <line:2:3, line:5:3>     `-CallExpr 0x128913e58 <line:4:5, col:24> 'int'       `-ImplicitCastExpr 0x128913e40 <col:5> 'int (*)()' <FunctionToPointerDecay>         `-DeclRefExpr 0x128913df0 <col:5> 'int ()' Function 0x128913d38 'walk_till_non_peer' 'int ()' ","19359":"`-FunctionDecl 0x147128118  col:9 length 'int ()'   `-CompoundStmt 0x1471282e0 <col:18, col:40>     `-ReturnStmt 0x1471282d0 <col:20, col:33>       `-BinaryOperator 0x1471282b0 <col:27, col:33> '<dependent type>' contains-errors '-'         |-RecoveryExpr 0x147128270 <col:27> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x147128290 <col:33> '<dependent type>' contains-errors lvalue ","19755":"`-FunctionDecl 0x13c026938  line:1:1 invalid dma_async_memcpy_buf_to_pg 'int (struct dma_chan *, struct page *, unsigned int, void *, int)'   |-ParmVarDecl 0x13c00e248 <col:28, col:45> col:45 used chan 'struct dma_chan *'   |-ParmVarDecl 0x13c026628 <col:51, col:64> col:64 used page 'struct page *'   |-ParmVarDecl 0x13c0266a8 <line:2:7, col:20> col:20 used offset 'unsigned int'   |-ParmVarDecl 0x13c026728 <col:28, col:34> col:34 used kdata 'void *'   |-ParmVarDecl 0x13c0267c0 <col:41, col:48> col:48 invalid len 'int'   `-CompoundStmt 0x13c027108 <line:3:1, line:7:1>     `-ReturnStmt 0x13c0270f8 <line:4:2, line:6:46>       `-CallExpr 0x13c0270a8 <line:4:9, line:6:46> '<dependent type>' contains-errors         |-DeclRefExpr 0x13c026b60 <line:4:9> 'int ()' Function 0x13c026aa8 'dma_async_memcpy_pg_to_pg' 'int ()'         |-DeclRefExpr 0x13c026b80 <col:35> 'struct dma_chan *' lvalue ParmVar 0x13c00e248 'chan' 'struct dma_chan *'         |-DeclRefExpr 0x13c026ba0 <col:41> 'struct page *' lvalue ParmVar 0x13c026628 'page' 'struct page *'         |-DeclRefExpr 0x13c026bc0 <col:47> 'unsigned int' lvalue ParmVar 0x13c0266a8 'offset' 'unsigned int'         |-CallExpr 0x13c026fa0 <line:5:7, col:25> 'int'         | |-ImplicitCastExpr 0x13c026f88 <col:7> 'int (*)()' <FunctionToPointerDecay>         | | `-DeclRefExpr 0x13c026cc0 <col:7> 'int ()' Function 0x13c026c08 'virt_to_page' 'int ()'         | `-ImplicitCastExpr 0x13c026fc8 <col:20> 'void *' <LValueToRValue>         |   `-DeclRefExpr 0x13c026ce0 <col:20> 'void *' lvalue ParmVar 0x13c026728 'kdata' 'void *'         |-BinaryOperator 0x13c027088 <line:6:7, col:32> '<dependent type>' contains-errors '&'         | |-CStyleCastExpr 0x13c027010 <col:7, col:23> 'unsigned long' <PointerToIntegral>         | | `-ImplicitCastExpr 0x13c026ff8 <col:23> 'void *' <LValueToRValue> part_of_explicit_cast         | |   `-DeclRefExpr 0x13c026d88 <col:23> 'void *' lvalue ParmVar 0x13c026728 'kdata' 'void *'         | `-UnaryOperator 0x13c027070 <col:31, col:32> '<dependent type>' contains-errors prefix '~' cannot overflow         |   `-ImplicitCastExpr 0x13c027058 <col:32> '<dependent type>' contains-errors <LValueToRValue>         |     `-RecoveryExpr 0x13c027038 <col:32> '<dependent type>' contains-errors lvalue         `-RecoveryExpr 0x13c026e68 <col:43> '<dependent type>' contains-errors lvalue ","19812":"`-FunctionDecl 0x12800ddd0  line:1:20 fsnotify_oldname_free 'void (const unsigned char *)' static inline   |-ParmVarDecl 0x12800dd08 <col:42, col:63> col:63 old_name 'const unsigned char *'   `-CompoundStmt 0x12800dec8 <line:2:1, line:3:1> ","19486":"`-FunctionDecl 0x14e80df18  line:1:17 invalid opj_j2k_write_soc 'int (int *, int *, int *)' static   |-ParmVarDecl 0x14e80dd28 <col:40, col:51> col:51 invalid p_j2k 'int *'   |-ParmVarDecl 0x14e80dda8 <line:2:49, col:71> col:71 invalid p_stream 'int *'   |-ParmVarDecl 0x14e80de28 <line:3:53, col:71> col:71 invalid p_manager 'int *'   `-CompoundStmt 0x14f8097d0 <line:4:1, line:31:1>     |-CallExpr 0x14e80e1f0 <line:9:9, col:30> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e80e170 <col:9> 'int ()' Function 0x14e80e0b8 'assert' 'int ()'     | `-BinaryOperator 0x14e80e1d0 <col:16, col:28> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14e80e190 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14e80e1b0 <col:28> 'int' 0     |-CallExpr 0x14e80e298 <line:10:9, col:27> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e80e218 <col:9> 'int ()' Function 0x14e80e0b8 'assert' 'int ()'     | `-BinaryOperator 0x14e80e278 <col:16, col:25> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14e80e238 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14e80e258 <col:25> 'int' 0     |-CallExpr 0x14e80e340 <line:11:9, col:31> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14e80e2c0 <col:9> 'int ()' Function 0x14e80e0b8 'assert' 'int ()'     | `-BinaryOperator 0x14e80e320 <col:16, col:29> 'int' contains-errors '!='     |   |-RecoveryExpr 0x14e80e2e0 <col:16> '<dependent type>' contains-errors lvalue     |   `-IntegerLiteral 0x14e80e300 <col:29> 'int' 0     |-CallExpr 0x14f809458 <line:16:9, col:52> '<dependent type>' contains-errors     | |-DeclRefExpr 0x14f809370 <col:9> 'int ()' Function 0x14f8092b8 'opj_write_bytes' 'int ()'     | |-RecoveryExpr 0x14f809418 <col:25> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x14f809438 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x14f8093c0 <col:51> 'int' 2     |-IfStmt 0x14f809768 <line:18:9, line:20:9>     | |-BinaryOperator 0x14f8096e8 <line:18:13, col:75> 'int' contains-errors '!='     | | |-CallExpr 0x14f8096a8 <col:13, col:70> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14f809570 <col:13> 'int ()' Function 0x14f8094b8 'opj_stream_write_data' 'int ()'     | | | |-RecoveryExpr 0x14f809590 <col:35> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x14f809688 <col:44> '<dependent type>' contains-errors lvalue     | | | |-IntegerLiteral 0x14f8095c8 <col:59> 'int' 2     | | | `-RecoveryExpr 0x14f8095e8 <col:61> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14f809648 <col:75> 'int' 2     | `-CompoundStmt 0x14f809750 <col:78, line:20:9>     |   `-ReturnStmt 0x14f809740 <line:19:17, col:24>     |     `-RecoveryExpr 0x14f809720 <col:24> '<dependent type>' contains-errors lvalue     `-ReturnStmt 0x14f8097c0 <line:30:9, col:16>       `-RecoveryExpr 0x14f8097a0 <col:16> '<dependent type>' contains-errors lvalue ","19828":"`-FunctionDecl 0x12a928750  line:1:20 tcp_mib_init 'void (struct net *)' static inline   |-ParmVarDecl 0x12a928648 <col:33, col:45> col:45 used net 'struct net *'   `-CompoundStmt 0x12a945388 <line:2:1, line:8:1>     |-CallExpr 0x12a944e40 <line:4:2, col:44> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a944d70 <col:2> 'int ()' Function 0x12a944cb8 'TCP_ADD_STATS' 'int ()'     | |-DeclRefExpr 0x12a944d90 <col:16> 'struct net *' lvalue ParmVar 0x12a928648 'net' 'struct net *'     | |-RecoveryExpr 0x12a944e20 <col:21> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x12a944dc8 <col:43> 'int' 1     |-CallExpr 0x12a945038 <line:5:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a944e78 <col:2> 'int ()' Function 0x12a944cb8 'TCP_ADD_STATS' 'int ()'     | |-DeclRefExpr 0x12a944e98 <col:16> 'struct net *' lvalue ParmVar 0x12a928648 'net' 'struct net *'     | |-RecoveryExpr 0x12a944f98 <col:21> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x12a945018 <col:37, col:54> '<dependent type>' contains-errors '\/'     |   |-BinaryOperator 0x12a944fd8 <col:37, col:49> '<dependent type>' contains-errors '*'     |   | |-RecoveryExpr 0x12a944fb8 <col:37> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x12a944ee8 <col:49> 'int' 1000     |   `-RecoveryExpr 0x12a944ff8 <col:54> '<dependent type>' contains-errors lvalue     |-CallExpr 0x12a945230 <line:6:2, col:56> '<dependent type>' contains-errors     | |-DeclRefExpr 0x12a945070 <col:2> 'int ()' Function 0x12a944cb8 'TCP_ADD_STATS' 'int ()'     | |-DeclRefExpr 0x12a945090 <col:16> 'struct net *' lvalue ParmVar 0x12a928648 'net' 'struct net *'     | |-RecoveryExpr 0x12a945190 <col:21> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x12a945210 <col:37, col:54> '<dependent type>' contains-errors '\/'     |   |-BinaryOperator 0x12a9451d0 <col:37, col:49> '<dependent type>' contains-errors '*'     |   | |-RecoveryExpr 0x12a9451b0 <col:37> '<dependent type>' contains-errors lvalue     |   | `-IntegerLiteral 0x12a9450e0 <col:49> 'int' 1000     |   `-RecoveryExpr 0x12a9451f0 <col:54> '<dependent type>' contains-errors lvalue     `-CallExpr 0x12a945350 <line:7:2, col:40> '<dependent type>' contains-errors       |-DeclRefExpr 0x12a945268 <col:2> 'int ()' Function 0x12a944cb8 'TCP_ADD_STATS' 'int ()'       |-DeclRefExpr 0x12a945288 <col:16> 'struct net *' lvalue ParmVar 0x12a928648 'net' 'struct net *'       |-RecoveryExpr 0x12a945330 <col:21> '<dependent type>' contains-errors lvalue       `-UnaryOperator 0x12a9452e0 <col:38, col:39> 'int' prefix '-'         `-IntegerLiteral 0x12a9452c0 <col:39> 'int' 1 ","19912":"`-FunctionDecl 0x14010d888  line:1:1 invalid libxlDomainHandleDeath 'int (int *, int *)'   |-ParmVarDecl 0x14010d728 <col:24, col:44> col:44 invalid driver 'int *'   |-ParmVarDecl 0x14010d7a8 <col:52, col:66> col:66 invalid vm 'int *'   `-CompoundStmt 0x136813890 <line:2:1, line:23:1>     |-IfStmt 0x14010daf8 <line:6:5, line:9:5>     | |-CXXDependentScopeMemberExpr 0x14010da70 <line:6:9, col:15> '<dependent type>' contains-errors lvalue ->ignoreDeathEvent     | | `-RecoveryExpr 0x14010da50 <col:9> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x14010dae0 <col:33, line:9:5>     |   `-ReturnStmt 0x14010dad0 <line:8:9>     |-IfStmt 0x136812e00 <line:11:5, line:12:9>     | |-BinaryOperator 0x14010ddb8 <line:11:9, col:64> 'int' contains-errors '<'     | | |-CallExpr 0x14010dd80 <col:9, col:60> '<dependent type>' contains-errors     | | | |-DeclRefExpr 0x14010dc70 <col:9> 'int ()' Function 0x14010dbb8 'libxlDomainObjBeginJob' 'int ()'     | | | |-RecoveryExpr 0x14010dc90 <col:32> '<dependent type>' contains-errors lvalue     | | | |-RecoveryExpr 0x14010dcb0 <col:40> '<dependent type>' contains-errors lvalue     | | | `-RecoveryExpr 0x14010dd60 <col:44> '<dependent type>' contains-errors lvalue     | | `-IntegerLiteral 0x14010dd20 <col:64> 'int' 0     | `-ReturnStmt 0x14010ddd8 <line:12:9>     |-CallExpr 0x136812fe8 <line:14:5, col:78> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136812f00 <col:5> 'int ()' Function 0x136812e48 'virDomainObjSetState' 'int ()'     | |-RecoveryExpr 0x136812f20 <col:26> '<dependent type>' contains-errors lvalue     | |-RecoveryExpr 0x136812fa8 <col:30> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x136812fc8 <col:50> '<dependent type>' contains-errors lvalue     |-CallExpr 0x1368132e8 <line:18:5, col:34> '<dependent type>' contains-errors     | |-DeclRefExpr 0x136813288 <col:5> 'int ()' Function 0x1368131d0 'libxlDomainCleanup' 'int ()'     | |-RecoveryExpr 0x1368132a8 <col:24> '<dependent type>' contains-errors lvalue     | `-RecoveryExpr 0x1368132c8 <col:32> '<dependent type>' contains-errors lvalue     |-IfStmt 0x136813598 <line:19:5, line:20:51>     | |-UnaryOperator 0x1368133c8 <line:19:9, col:14> '<dependent type>' contains-errors prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x1368133b0 <col:10, col:14> '<dependent type>' contains-errors <LValueToRValue>     | |   `-CXXDependentScopeMemberExpr 0x136813338 <col:10, col:14> '<dependent type>' contains-errors lvalue ->persistent     | |     `-RecoveryExpr 0x136813318 <col:10> '<dependent type>' contains-errors lvalue     | `-CallExpr 0x136813568 <line:20:9, col:51> '<dependent type>' contains-errors     |   |-DeclRefExpr 0x1368134c0 <col:9> 'int ()' Function 0x136813408 'virDomainObjListRemove' 'int ()'     |   |-CXXDependentScopeMemberExpr 0x136813500 <col:32, col:40> '<dependent type>' contains-errors lvalue ->domains     |   | `-RecoveryExpr 0x1368134e0 <col:32> '<dependent type>' contains-errors lvalue     |   `-RecoveryExpr 0x136813548 <col:49> '<dependent type>' contains-errors lvalue     `-CallExpr 0x1368136f8 <line:21:5, col:36> '<dependent type>' contains-errors       |-DeclRefExpr 0x136813698 <col:5> 'int ()' Function 0x1368135e0 'libxlDomainObjEndJob' 'int ()'       |-RecoveryExpr 0x1368136b8 <col:26> '<dependent type>' contains-errors lvalue       `-RecoveryExpr 0x1368136d8 <col:34> '<dependent type>' contains-errors lvalue ","20147":"`-FunctionDecl 0x15a026a88  line:1:5 invalid bt_sock_recvmsg 'int (struct kiocb *, struct socket *, struct msghdr *, int, int)'   |-ParmVarDecl 0x15a00e248 <col:21, col:35> col:35 iocb 'struct kiocb *'   |-ParmVarDecl 0x15a026628 <col:41, col:56> col:56 used sock 'struct socket *'   |-ParmVarDecl 0x15a0267f8 <line:2:5, col:20> col:20 used msg 'struct msghdr *'   |-ParmVarDecl 0x15a026890 <col:25, col:32> col:32 invalid len 'int'   |-ParmVarDecl 0x15a026910 <col:37, col:41> col:41 used flags 'int'   `-CompoundStmt 0x15a02edf8 <line:3:1, line:45:1>     |-DeclStmt 0x15a026c70 <line:4:2, col:36>     | `-VarDecl 0x15a026b70 <col:2, col:24> col:6 used noblock 'int' cinit     |   `-BinaryOperator 0x15a026c50 <col:16, col:24> '<dependent type>' contains-errors '&'     |     |-DeclRefExpr 0x15a026bd8 <col:16> 'int' lvalue ParmVar 0x15a026910 'flags' 'int'     |     `-RecoveryExpr 0x15a026c30 <col:24> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a026ed8 <line:5:2, col:28>     | |-RecordDecl 0x15a026c88 <col:2, col:9> col:9 struct sock     | `-VarDecl 0x15a026df8 <col:2, col:26> col:15 used sk 'struct sock *' cinit     |   `-RecoveryExpr 0x15a026e98 <col:20, col:26> '<dependent type>' contains-errors lvalue     |     `-DeclRefExpr 0x15a026e60 <col:20> 'struct socket *' lvalue ParmVar 0x15a026628 'sock' 'struct socket *'     |-DeclStmt 0x15a0270d8 <line:6:2, col:21>     | |-RecordDecl 0x15a026ef0 <col:2, col:9> col:9 struct sk_buff     | `-VarDecl 0x15a027058 <col:2, col:18> col:18 used skb 'struct sk_buff *'     |-UnaryExprOrTypeTraitExpr 0x15a027148 <line:7:2, col:9> 'unsigned long' contains-errors sizeof     | `-RecoveryExpr 0x15a027128 <col:9> '<dependent type>' contains-errors lvalue     |-DeclStmt 0x15a0271e8 <line:8:2, col:9>     | `-VarDecl 0x15a027180 <col:2, col:6> col:6 used err 'int'     |-CallExpr 0x15a027440 <line:10:2, col:29> '<dependent type>' contains-errors     | |-DeclRefExpr 0x15a027360 <col:2> 'int ()' Function 0x15a0272a8 'BT_DBG' 'int ()'     | |-StringLiteral 0x15a0273c0 <col:9> 'char[4]' lvalue \"STR\"     | |-DeclRefExpr 0x15a0273e0 <col:16> 'struct socket *' lvalue ParmVar 0x15a026628 'sock' 'struct socket *'     | |-DeclRefExpr 0x15a027400 <col:22> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'     | `-RecoveryExpr 0x15a027420 <col:26> '<dependent type>' contains-errors lvalue     |-IfStmt 0x15a027580 <line:12:2, line:13:11>     | |-RecoveryExpr 0x15a0274b8 <line:12:6, col:22> '_Bool' contains-errors     | `-ReturnStmt 0x15a027570 <line:13:3, col:11>     |   `-UnaryOperator 0x15a027558 <col:10, col:11> '<dependent type>' contains-errors prefix '-' cannot overflow     |     `-ImplicitCastExpr 0x15a027540 <col:11> '<dependent type>' contains-errors <LValueToRValue>     |       `-RecoveryExpr 0x15a027520 <col:11> '<dependent type>' contains-errors lvalue     |-BinaryOperator 0x15a02d298 <line:15:2, col:50> 'struct sk_buff *' contains-errors '='     | |-DeclRefExpr 0x15a0275a0 <col:2> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'     | `-ImplicitCastExpr 0x15a02d280 <col:8, col:50> 'struct sk_buff *' contains-errors <IntegralToPointer>     |   `-CallExpr 0x15a02d1f8 <col:8, col:50> 'int' contains-errors     |     |-ImplicitCastExpr 0x15a02d1e0 <col:8> 'int (*)()' <FunctionToPointerDecay>     |     | `-DeclRefExpr 0x15a02d0b8 <col:8> 'int ()' Function 0x15a02d000 'skb_recv_datagram' 'int ()'     |     |-ImplicitCastExpr 0x15a02d238 <col:26> 'struct sock *' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x15a02d0d8 <col:26> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'     |     |-ImplicitCastExpr 0x15a02d250 <col:30> 'int' <LValueToRValue>     |     | `-DeclRefExpr 0x15a02d0f8 <col:30> 'int' lvalue ParmVar 0x15a026910 'flags' 'int'     |     |-ImplicitCastExpr 0x15a02d268 <col:37> 'int' contains-errors <LValueToRValue>     |     | `-DeclRefExpr 0x15a02d118 <col:37> 'int' contains-errors lvalue Var 0x15a026b70 'noblock' 'int'     |     `-UnaryOperator 0x15a02d190 <col:46, col:47> 'int *' prefix '&' cannot overflow     |       `-DeclRefExpr 0x15a02d138 <col:47> 'int' lvalue Var 0x15a027180 'err' 'int'     |-IfStmt 0x15a02d558 <line:16:2, line:22:2>     | |-UnaryOperator 0x15a02d2f0 <line:16:6, col:7> 'int' prefix '!' cannot overflow     | | `-ImplicitCastExpr 0x15a02d2d8 <col:7> 'struct sk_buff *' <LValueToRValue>     | |   `-DeclRefExpr 0x15a02d2b8 <col:7> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'     | `-CompoundStmt 0x15a02d538 <col:12, line:22:2>     |   |-IfStmt 0x15a02d4d0 <line:17:3, line:20:3>     |   | |-BinaryOperator 0x15a02d3c0 <line:17:7, col:25> '<dependent type>' contains-errors '&'     |   | | |-RecoveryExpr 0x15a02d340 <col:7, col:11> '<dependent type>' contains-errors lvalue     |   | | | `-DeclRefExpr 0x15a02d308 <col:7> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'     |   | | `-RecoveryExpr 0x15a02d3a0 <col:25> '<dependent type>' contains-errors lvalue     |   | `-CompoundStmt 0x15a02d4b0 <col:39, line:20:3>     |   |   |-BinaryOperator 0x15a02d460 <line:18:4, col:23> '<dependent type>' contains-errors '='     |   |   | |-RecoveryExpr 0x15a02d418 <col:4, col:9> '<dependent type>' contains-errors lvalue     |   |   | | `-DeclRefExpr 0x15a02d3e0 <col:4> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'     |   |   | `-IntegerLiteral 0x15a02d440 <col:23> 'int' 0     |   |   `-ReturnStmt 0x15a02d4a0 <line:19:4, col:11>     |   |     `-IntegerLiteral 0x15a02d480 <col:11> 'int' 0     |   `-ReturnStmt 0x15a02d528 <line:21:3, col:10>     |     `-ImplicitCastExpr 0x15a02d510 <col:10> 'int' <LValueToRValue>     |       `-DeclRefExpr 0x15a02d4f0 <col:10> 'int' lvalue Var 0x15a027180 'err' 'int'     |-IfStmt 0x15a02d7a0 <line:25:2, line:28:2>     | |-BinaryOperator 0x15a02d650 <line:25:6, col:12> 'int' contains-errors '<'     | | |-RecoveryExpr 0x15a02d5d8 <col:6> '<dependent type>' contains-errors lvalue     | | `-RecoveryExpr 0x15a02d630 <col:12> '<dependent type>' contains-errors lvalue     | `-CompoundStmt 0x15a02d788 <col:20, line:28:2>     |   `-CompoundAssignOperator 0x15a02d738 <line:26:3, col:21> '<dependent type>' contains-errors '|=' ComputeLHSTy='NULL TYPE' ComputeResultTy='NULL TYPE'     |     |-RecoveryExpr 0x15a02d6a8 <col:3, col:8> '<dependent type>' contains-errors lvalue     |     | `-DeclRefExpr 0x15a02d670 <col:3> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'     |     `-RecoveryExpr 0x15a02d718 <col:21> '<dependent type>' contains-errors lvalue     |-CallExpr 0x15a02d8f8 <line:30:2, col:32> 'int'     | |-ImplicitCastExpr 0x15a02d8e0 <col:2> 'int (*)()' <FunctionToPointerDecay>     | | `-DeclRefExpr 0x15a02d8a0 <col:2> 'int ()' Function 0x15a02d7e8 'skb_reset_transport_header' 'int ()'     | `-ImplicitCastExpr 0x15a02d920 <col:29> 'struct sk_buff *' <LValueToRValue>     |   `-DeclRefExpr 0x15a02d8c0 <col:29> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'     |-IfStmt 0x15a02ec00 <line:32:2, line:40:2>     | |-BinaryOperator 0x15a02db50 <line:32:6, col:13> 'int' '=='     | | |-ImplicitCastExpr 0x15a02db38 <col:6> 'int' <LValueToRValue>     | | | `-DeclRefExpr 0x15a02daf8 <col:6> 'int' lvalue Var 0x15a027180 'err' 'int'     | | `-IntegerLiteral 0x15a02db18 <col:13> 'int' 0     | `-CompoundStmt 0x15a02ebe0 <col:16, line:40:2>     |   |-CallExpr 0x15a02dce8 <line:33:3, col:38> 'int' contains-errors     |   | |-ImplicitCastExpr 0x15a02dcd0 <col:3> 'int (*)()' <FunctionToPointerDecay>     |   | | `-DeclRefExpr 0x15a02dc50 <col:3> 'int ()' Function 0x15a02db98 'sock_recv_ts_and_drops' 'int ()'     |   | |-ImplicitCastExpr 0x15a02dd20 <col:26> 'struct msghdr *' <LValueToRValue>     |   | | `-DeclRefExpr 0x15a02dc70 <col:26> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'     |   | |-ImplicitCastExpr 0x15a02dd38 <col:31> 'struct sock *' contains-errors <LValueToRValue>     |   | | `-DeclRefExpr 0x15a02dc90 <col:31> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'     |   | `-ImplicitCastExpr 0x15a02dd50 <col:35> 'struct sk_buff *' <LValueToRValue>     |   |   `-DeclRefExpr 0x15a02dcb0 <col:35> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'     |   `-IfStmt 0x15a02ebb0 <line:35:3, line:39:23> has_else     |     |-RecoveryExpr 0x15a02dee0 <line:35:7, col:18> '<dependent type>' contains-errors lvalue     |     | `-CallExpr 0x15a02dea0 <col:7, col:15> 'int' contains-errors     |     |   |-ImplicitCastExpr 0x15a02de88 <col:7> 'int (*)()' <FunctionToPointerDecay>     |     |   | `-DeclRefExpr 0x15a02de48 <col:7> 'int ()' Function 0x15a02dd90 'bt_sk' 'int ()'     |     |   `-ImplicitCastExpr 0x15a02dec8 <col:13> 'struct sock *' contains-errors <LValueToRValue>     |     |     `-DeclRefExpr 0x15a02de68 <col:13> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'     |     |-CallExpr 0x15a02ead8 <line:36:4, line:37:24> '<dependent type>' contains-errors     |     | |-RecoveryExpr 0x15a02dfa0 <line:36:4, col:15> '<dependent type>' contains-errors lvalue     |     | | `-CallExpr 0x15a02df60 <col:4, col:12> 'int' contains-errors     |     | |   |-ImplicitCastExpr 0x15a02df48 <col:4> 'int (*)()' <FunctionToPointerDecay>     |     | |   | `-DeclRefExpr 0x15a02df08 <col:4> 'int ()' Function 0x15a02dd90 'bt_sk' 'int ()'     |     | |   `-ImplicitCastExpr 0x15a02df88 <col:10> 'struct sock *' contains-errors <LValueToRValue>     |     | |     `-DeclRefExpr 0x15a02df28 <col:10> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'     |     | |-DeclRefExpr 0x15a02dfc8 <col:28> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *'     |     | |-RecoveryExpr 0x15a02ea38 <col:33, col:38> '<dependent type>' contains-errors lvalue     |     | | `-DeclRefExpr 0x15a02ea00 <col:33> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'     |     | `-UnaryOperator 0x15a02eac0 <line:37:7, col:13> '<dependent type>' contains-errors prefix '&' cannot overflow     |     |   `-RecoveryExpr 0x15a02ea98 <col:8, col:13> '<dependent type>' contains-errors lvalue     |     |     `-DeclRefExpr 0x15a02ea60 <col:8> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'     |     `-BinaryOperator 0x15a02eb90 <line:39:4, col:23> '<dependent type>' contains-errors '='     |       |-RecoveryExpr 0x15a02eb48 <col:4, col:9> '<dependent type>' contains-errors lvalue     |       | `-DeclRefExpr 0x15a02eb10 <col:4> 'struct msghdr *' lvalue ParmVar 0x15a0267f8 'msg' 'struct msghdr *'     |       `-IntegerLiteral 0x15a02eb70 <col:23> 'int' 0     `-CallExpr 0x15a02ed78 <line:42:2, col:27> 'int' contains-errors       |-ImplicitCastExpr 0x15a02ed60 <col:2> 'int (*)()' <FunctionToPointerDecay>       | `-DeclRefExpr 0x15a02ed00 <col:2> 'int ()' Function 0x15a02ec48 'skb_free_datagram' 'int ()'       |-ImplicitCastExpr 0x15a02eda8 <col:20> 'struct sock *' contains-errors <LValueToRValue>       | `-DeclRefExpr 0x15a02ed20 <col:20> 'struct sock *' contains-errors lvalue Var 0x15a026df8 'sk' 'struct sock *'       `-ImplicitCastExpr 0x15a02edc0 <col:24> 'struct sk_buff *' <LValueToRValue>         `-DeclRefExpr 0x15a02ed40 <col:24> 'struct sk_buff *' lvalue Var 0x15a027058 'skb' 'struct sk_buff *' ","19673":"`-FunctionDecl 0x137128198  line:1:1 get_next_tag_completion 'int (void)'   `-CompoundStmt 0x140808e10 <line:2:1, line:21:1>     |-DeclStmt 0x137128308 <line:3:5, col:19>     | `-VarDecl 0x1371282a0 <col:5, col:10> col:10 used save_p_ic 'int'     |-DeclStmt 0x1371283f0 <line:4:5, col:21>     | `-VarDecl 0x137128388 <col:5, col:14> col:14 used matches 'char **'     |-DeclStmt 0x137128488 <line:5:5, col:21>     | `-VarDecl 0x137128420 <col:5, col:10> col:10 used num_matches 'int'     `-BinaryOperator 0x137128518 <line:8:5, col:17> 'int' contains-errors '='       |-DeclRefExpr 0x1371284a0 <col:5> 'int' lvalue Var 0x1371282a0 'save_p_ic' 'int'       `-RecoveryExpr 0x1371284f8 <col:17> '<dependent type>' contains-errors lvalue ","19570":"`-FunctionDecl 0x13e827578  line:1:5 invalid skb_tx_hash 'int (const struct net_device *, const struct sk_buff *)'   |-ParmVarDecl 0x13e80e268 <col:17, col:42> col:42 used dev 'const struct net_device *'   |-ParmVarDecl 0x13e827458 <col:47, col:69> col:69 used skb 'const struct sk_buff *'   `-CompoundStmt 0x13e828040 <line:2:1, line:20:1>     `-IfStmt 0x13e827cb8 <line:5:2, line:10:2>       |-CallExpr 0x13e827818 <line:5:6, col:31> 'int'       | |-ImplicitCastExpr 0x13e827800 <col:6> 'int (*)()' <FunctionToPointerDecay>       | | `-DeclRefExpr 0x13e827790 <col:6> 'int ()' Function 0x13e8276d8 'skb_rx_queue_recorded' 'int ()'       | `-ImplicitCastExpr 0x13e827840 <col:28> 'const struct sk_buff *' <LValueToRValue>       |   `-DeclRefExpr 0x13e8277b0 <col:28> 'const struct sk_buff *' lvalue ParmVar 0x13e827458 'skb' 'const struct sk_buff *'       `-CompoundStmt 0x13e827ca0 <col:34, line:10:2>         `-ReturnStmt 0x13e827c90 <line:9:3, col:10>           `-RecoveryExpr 0x13e827c70 <col:10> '<dependent type>' contains-errors lvalue ","19961":"`-FunctionDecl 0x159928288  line:1:14 invalid Prepare 'int (int *, int *)'   |-ParmVarDecl 0x159928128 <col:22, col:37> col:37 invalid context 'int *'   |-ParmVarDecl 0x1599281a8 <col:46, col:58> col:58 invalid node 'int *'   `-CompoundStmt 0x1599425d0 <col:64, line:22:1>     |-CallExpr 0x159928648 <line:2:3, col:48> '<dependent type>' contains-errors     | |-DeclRefExpr 0x1599284a0 <col:3> 'int ()' Function 0x1599283e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1599284c0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x159928600 <col:30, col:44> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1599285c0 <col:30> 'int ()' Function 0x159928508 'NumInputs' 'int ()'     | | `-RecoveryExpr 0x1599285e0 <col:40> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x159928628 <col:47> 'int' 2     |-CallExpr 0x159941848 <line:3:3, col:49> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159928680 <col:3> 'int ()' Function 0x1599283e8 'TF_LITE_ENSURE_EQ' 'int ()'     | |-RecoveryExpr 0x1599286a0 <col:21> '<dependent type>' contains-errors lvalue     | |-CallExpr 0x159941800 <col:30, col:45> '<dependent type>' contains-errors     | | |-DeclRefExpr 0x1599287a0 <col:30> 'int ()' Function 0x1599286e8 'NumOutputs' 'int ()'     | | `-RecoveryExpr 0x1599287c0 <col:41> '<dependent type>' contains-errors lvalue     | `-IntegerLiteral 0x159941828 <col:48> 'int' 1     |-DeclStmt 0x159941a90 <line:4:3, col:68>     | `-VarDecl 0x159941898 <col:3, col:23> col:23 invalid input 'const int *'     |-DeclStmt 0x159941c70 <line:6:3, col:41>     | `-VarDecl 0x159941b40 <col:3, col:37> col:7 used input_dims_size 'int' cinit     |   `-CXXDependentScopeMemberExpr 0x159941c28 <col:25, col:37> '<dependent type>' contains-errors lvalue ->size     |     `-RecoveryExpr 0x159941c08 <col:25> '<dependent type>' contains-errors lvalue     |-CallExpr 0x159941e20 <line:7:3, col:47> '<dependent type>' contains-errors     | |-DeclRefExpr 0x159941d68 <col:3> 'int ()' Function 0x159941cb0 'TF_LITE_ENSURE' 'int ()'     | |-RecoveryExpr 0x159941d88 <col:18> '<dependent type>' contains-errors lvalue     | `-BinaryOperator 0x159941e00 <col:27, col:46> 'int' contains-errors '>='     |   |-ImplicitCastExpr 0x159941de8 <col:27> 'int' contains-errors <LValueToRValue>     |   | `-DeclRefExpr 0x159941da8 <col:27> 'int' contains-errors lvalue Var 0x159941b40 'input_dims_size' 'int'     |   `-IntegerLiteral 0x159941dc8 <col:46> 'int' 2     `-ForStmt 0x159942388 <line:12:3, line:14:3>       |-DeclStmt 0x159942258 <line:12:8, col:17>       | `-VarDecl 0x1599421d0 <col:8, col:16> col:12 used i 'int' cinit       |   `-IntegerLiteral 0x159942238 <col:16> 'int' 0       |-<<<NULL>>>       |-BinaryOperator 0x1599422e0 <col:19, col:23> 'int' contains-errors '<'       | |-ImplicitCastExpr 0x1599422b0 <col:19> 'int' <LValueToRValue>       | | `-DeclRefExpr 0x159942270 <col:19> 'int' lvalue Var 0x1599421d0 'i' 'int'       | `-ImplicitCastExpr 0x1599422c8 <col:23> 'int' contains-errors <LValueToRValue>       |   `-DeclRefExpr 0x159942290 <col:23> 'int' contains-errors lvalue Var 0x159941b40 'input_dims_size' 'int'       |-UnaryOperator 0x159942320 <col:40, col:41> 'int' postfix '++'       | `-DeclRefExpr 0x159942300 <col:40> 'int' lvalue Var 0x1599421d0 'i' 'int'       `-CompoundStmt 0x159942378 <col:45, line:14:3> "},"target":{"19742":0,"19276":1,"19380":1,"19517":0,"19876":0,"19138":1,"19350":0,"19349":0,"19790":0,"19373":0,"19540":0,"19550":1,"19855":0,"19793":1,"19152":1,"19511":1,"19459":0,"20058":0,"19660":0,"20133":1,"20158":1,"20195":1,"19159":1,"19800":1,"19474":1,"19677":0,"19527":1,"19909":0,"20134":0,"19644":1,"20078":0,"19189":1,"19284":1,"19372":0,"19376":0,"19525":1,"19363":1,"19655":0,"20173":1,"19754":0,"20177":0,"19873":1,"19472":1,"19576":0,"19877":0,"19897":0,"19419":0,"19296":1,"20168":1,"19443":1,"19756":0,"19571":0,"19259":1,"19137":1,"19256":0,"19589":0,"19515":1,"19388":1,"19824":0,"19219":1,"19758":1,"20183":1,"19781":1,"19499":0,"19568":1,"19329":1,"20164":1,"20080":1,"19598":0,"19483":1,"19279":0,"19854":1,"20081":1,"19609":0,"19428":1,"19545":1,"19268":1,"19223":0,"19674":0,"20127":0,"19710":1,"19924":0,"19182":1,"19316":1,"20190":1,"20030":0,"19805":0,"19234":0,"19985":0,"19840":1,"20100":0,"19972":1,"19709":0,"19696":1,"19669":1,"20125":0,"19779":0,"20060":0,"20051":0,"19574":0,"19358":0,"19958":1,"19848":1,"19606":1,"19562":0,"19776":0,"20006":0,"19453":0,"19587":1,"19632":1,"19773":1,"19841":1,"19600":1,"19692":1,"19382":0,"19883":1,"19331":0,"19894":0,"20111":0,"19532":1,"19700":1,"20135":1,"19254":1,"19822":0,"20106":1,"19869":0,"19906":0,"20000":0,"19272":1,"20013":1,"20012":1,"19579":1,"19449":1,"19304":1,"19220":0,"19731":0,"19739":0,"19469":1,"19230":1,"19287":1,"19901":0,"19291":1,"19147":0,"19844":1,"19326":0,"19522":1,"19719":1,"19192":0,"19637":0,"19984":0,"20029":0,"19333":1,"19232":1,"19810":1,"19389":0,"19690":0,"19480":1,"19727":1,"19830":1,"20143":0,"19555":1,"20062":0,"19743":1,"19774":1,"19452":1,"20189":1,"20087":0,"19900":1,"19635":0,"19221":1,"19628":1,"19631":1,"19417":0,"19493":1,"19551":1,"20077":0,"19386":0,"19191":1,"19585":0,"19249":0,"20110":0,"19202":1,"19689":0,"19847":0,"19430":1,"19815":0,"19277":1,"19308":0,"19697":0,"19500":1,"19804":1,"19789":1,"19895":0,"19975":0,"19457":1,"20187":0,"20017":1,"19725":1,"20039":1,"19560":1,"19392":1,"19470":0,"19385":1,"20105":1,"19653":1,"19455":0,"19418":1,"19414":0,"20089":1,"19770":1,"19197":0,"19989":0,"19305":0,"19813":1,"20027":1,"19572":1,"20123":1,"19294":1,"19620":0,"19157":1,"20170":1,"19501":0,"19566":1,"19244":1,"19179":0,"19292":0,"20192":1,"20049":1,"20063":0,"19625":0,"20094":1,"19506":0,"20145":0,"19187":1,"20092":0,"20098":0,"19648":1,"19977":0,"19670":0,"19711":0,"19622":0,"19208":0,"19766":0,"20088":0,"19403":0,"19323":1,"19851":1,"19396":0,"19713":1,"19243":1,"19699":0,"19336":0,"19748":1,"19650":1,"19247":1,"20014":1,"19233":0,"19217":0,"20108":1,"19278":1,"19299":1,"19573":1,"19446":1,"20007":0,"19238":0,"19210":1,"20024":1,"19676":0,"19431":1,"19879":1,"20104":0,"19381":1,"19270":0,"19968":1,"19357":1,"19664":0,"19597":1,"20156":1,"19274":1,"20130":0,"19811":0,"19166":0,"19941":0,"20182":0,"19520":1,"19662":1,"19881":1,"19764":1,"19957":0,"19435":0,"19992":1,"19269":1,"19437":0,"20050":0,"19338":0,"19204":0,"19671":0,"19621":0,"19887":0,"19521":1,"19237":0,"20178":1,"19795":0,"20112":1,"19307":1,"19176":1,"19387":1,"19586":0,"20153":1,"19309":1,"19246":0,"19829":1,"19715":0,"19707":1,"19260":0,"19426":0,"19203":1,"19834":1,"19362":0,"19641":0,"19783":1,"19624":1,"19659":1,"19708":1,"19634":0,"19174":1,"19716":1,"19289":0,"19722":0,"19508":1,"19740":0,"19617":0,"19384":1,"19717":0,"19352":0,"20176":0,"19235":1,"19433":1,"20180":0,"20160":0,"19175":1,"19905":0,"19509":0,"19979":0,"19141":0,"20140":0,"19918":1,"19578":0,"19563":0,"19920":0,"19549":0,"20043":1,"19313":1,"20128":1,"19328":0,"19658":1,"20082":0,"20118":1,"19383":1,"19616":1,"19842":0,"19839":1,"19161":1,"19261":1,"19730":1,"19963":0,"19310":0,"19518":0,"20103":0,"19142":1,"19645":1,"20114":1,"19886":0,"19826":0,"19251":1,"19903":0,"19302":0,"19393":1,"19503":1,"19942":0,"19832":1,"20046":0,"19931":0,"19733":1,"19994":1,"19608":1,"19317":1,"19807":1,"19228":1,"19348":1,"19721":0,"19300":1,"19831":1,"19816":1,"19240":0,"19543":1,"19458":1,"19324":0,"19410":1,"19318":0,"19377":1,"19845":1,"19298":0,"19476":0,"19315":0,"20085":1,"19354":1,"19973":1,"19361":0,"19258":1,"19542":0,"20141":1,"19720":0,"19160":0,"19144":1,"20045":1,"19904":1,"19337":0,"19603":1,"19444":0,"19226":1,"19199":0,"19497":0,"20090":0,"19853":1,"19747":1,"19172":1,"20071":0,"19548":0,"19827":0,"19950":0,"19264":0,"19944":1,"19866":1,"19935":0,"19216":0,"19780":0,"19404":0,"19280":1,"19965":0,"19593":1,"19334":0,"19351":0,"19485":0,"19703":1,"19607":0,"19741":1,"19360":0,"19567":1,"19971":1,"19938":1,"19165":0,"19489":1,"19422":0,"19136":1,"19675":0,"20144":1,"20002":0,"19910":1,"19614":0,"19200":1,"19168":1,"19534":1,"19341":1,"19818":0,"19463":1,"19986":1,"20159":1,"20020":0,"19516":0,"19565":0,"19784":0,"19288":1,"19229":1,"19177":0,"19424":0,"20084":1,"19718":0,"20185":0,"19561":0,"19978":0,"19248":1,"19343":0,"19556":0,"19751":1,"19335":1,"19911":1,"19471":1,"19594":0,"19651":0,"19630":0,"20068":0,"20083":1,"19558":0,"19991":0,"19151":1,"19183":1,"19133":0,"19681":1,"20054":0,"19633":1,"20148":1,"19981":1,"19440":0,"19273":1,"19640":0,"19899":0,"19735":0,"19819":1,"19738":0,"19311":0,"20067":1,"19432":0,"19762":1,"19395":0,"19397":0,"19462":1,"19303":1,"19891":1,"19865":0,"20061":0,"20132":0,"20096":1,"19817":0,"20033":0,"19917":0,"19218":0,"19786":0,"19374":0,"19745":1,"20072":0,"19976":1,"19803":1,"19544":1,"19206":0,"19150":0,"19412":0,"19413":0,"19785":1,"20074":1,"20150":0,"19999":1,"20031":0,"19375":1,"19420":0,"19809":1,"19753":1,"19541":0,"19465":1,"19154":0,"19450":0,"19434":1,"19704":0,"19864":1,"19146":1,"19184":0,"19429":0,"19167":0,"19502":1,"19820":0,"20113":1,"19224":1,"19484":1,"19930":0,"19916":1,"20115":1,"19267":0,"19791":1,"20122":0,"19714":1,"19441":0,"19860":0,"19475":0,"19734":0,"19875":0,"19569":1,"19857":1,"19665":1,"19649":0,"19290":0,"19821":0,"20097":1,"20136":1,"19643":1,"19592":0,"19888":0,"19344":0,"20169":1,"19604":1,"19438":0,"19882":0,"19849":0,"19601":0,"19539":0,"19145":1,"19967":1,"19559":0,"19255":1,"19252":0,"19962":0,"20197":1,"19283":1,"20116":1,"19636":0,"19481":0,"19241":0,"19642":1,"19612":1,"19998":1,"19423":0,"19602":1,"20040":1,"20151":0,"19225":1,"19685":0,"19162":0,"19933":1,"20011":1,"19996":0,"19615":1,"20076":0,"19654":0,"19686":0,"20093":0,"19415":1,"19173":1,"19907":0,"19951":1,"19178":1,"19523":0,"20048":0,"20157":0,"19726":0,"20086":1,"19683":1,"19767":1,"19195":1,"20008":0,"19988":0,"19347":0,"19265":1,"20196":1,"19913":0,"19447":0,"19181":0,"19193":1,"19661":1,"19980":0,"19647":0,"20107":0,"19464":0,"19970":1,"19536":0,"19212":0,"19835":1,"19667":0,"19974":0,"20146":0,"19955":1,"19262":1,"20167":0,"19870":0,"19411":0,"20184":0,"19355":0,"19590":1,"20171":1,"20023":1,"19282":1,"19390":0,"19134":0,"19846":1,"19947":1,"20138":1,"19932":0,"19765":0,"19190":0,"19479":1,"20005":1,"20109":1,"19646":1,"20047":1,"19946":1,"19325":0,"20099":0,"19537":0,"19777":0,"20026":1,"19874":1,"19364":1,"19763":1,"19466":1,"19772":0,"19507":1,"20091":0,"19242":1,"19346":1,"19701":0,"20149":1,"20188":0,"19806":0,"19456":0,"19236":1,"19626":0,"19858":1,"19799":0,"20037":0,"19890":1,"19409":0,"19682":1,"19657":0,"20004":1,"19966":0,"20162":1,"19867":1,"19695":0,"19231":1,"19672":1,"19936":0,"19554":1,"20041":0,"19953":1,"19477":1,"20101":0,"19871":0,"19964":1,"19442":1,"19843":1,"19482":0,"19693":0,"19610":1,"19487":0,"19595":0,"19940":0,"19923":0,"19368":1,"19705":0,"19868":1,"19928":1,"19902":1,"19214":0,"19987":1,"19801":1,"19314":0,"19205":0,"19852":0,"19564":1,"19850":0,"19960":0,"19752":1,"19339":0,"19378":0,"19185":0,"19416":0,"19948":0,"19863":1,"19196":1,"20001":0,"20034":0,"19342":0,"19619":0,"20095":0,"19728":0,"19143":1,"19952":0,"19956":1,"20172":1,"19312":0,"20010":1,"19445":0,"19596":0,"19833":1,"20069":1,"19914":0,"19679":1,"20053":0,"19611":1,"19823":1,"19771":1,"19467":1,"20163":0,"19332":1,"20179":1,"19997":0,"19954":0,"19553":1,"20155":1,"20161":0,"20070":1,"20154":0,"19155":1,"20056":1,"19691":0,"19945":0,"19365":0,"19495":1,"19512":1,"19402":0,"20038":0,"19775":1,"19215":0,"19327":0,"19652":0,"19222":1,"19526":0,"19639":1,"20003":1,"20055":0,"19797":0,"19547":0,"20036":0,"19583":0,"19656":0,"19263":0,"19684":1,"19514":1,"19582":0,"20032":0,"19425":1,"20028":1,"19286":1,"20142":1,"20025":0,"19194":0,"19802":1,"19454":0,"19156":1,"19405":1,"19949":1,"19919":1,"20175":1,"19937":1,"19488":1,"19400":1,"19198":0,"19878":1,"19943":0,"20121":1,"19498":1,"19439":1,"19391":0,"20035":0,"19757":1,"19750":1,"20152":1,"19926":0,"19737":0,"19723":0,"19623":1,"19201":1,"19340":0,"19749":0,"19680":0,"20009":1,"19792":1,"19513":0,"19295":1,"19627":0,"20021":1,"19451":0,"19794":0,"19322":0,"20065":1,"20102":0,"20052":1,"20166":1,"19188":0,"19505":1,"19787":0,"19427":0,"19880":0,"19638":0,"19407":0,"19856":0,"20018":0,"19533":1,"19605":1,"19557":1,"19618":1,"19577":1,"19524":1,"19180":1,"19552":1,"19629":1,"19239":0,"20126":1,"20066":0,"19319":1,"19859":0,"19496":1,"19861":0,"19257":0,"19982":0,"19169":1,"19293":0,"19915":0,"19575":0,"19369":0,"19782":1,"19759":0,"19908":1,"19744":1,"19896":1,"19814":0,"20181":1,"19591":1,"20119":0,"19353":0,"19893":0,"19798":0,"19492":0,"19535":0,"19406":0,"19922":0,"19584":1,"19934":1,"20129":0,"19275":0,"19581":1,"19530":0,"19367":1,"19761":0,"19588":1,"19321":0,"19862":1,"19371":1,"19436":1,"19153":1,"19778":1,"19668":1,"19796":1,"20057":0,"19209":1,"19245":0,"19253":1,"19580":0,"19207":0,"19164":1,"19460":0,"19519":0,"20165":1,"20044":1,"19889":1,"19808":1,"19939":1,"19448":1,"19983":1,"20079":1,"19148":0,"19702":1,"19139":1,"19712":0,"19872":0,"19688":0,"19163":0,"19769":1,"19490":1,"20120":0,"19306":0,"19345":0,"19788":1,"19925":0,"19504":0,"19724":0,"20124":1,"19250":1,"19663":0,"19297":1,"19266":0,"20186":1,"19706":1,"19401":0,"19768":0,"19990":0,"19149":1,"19969":1,"19461":0,"19478":0,"19729":0,"19330":0,"19736":1,"19885":1,"20019":0,"19211":0,"19993":1,"19898":1,"20193":1,"19140":0,"19921":0,"20015":1,"19666":0,"19678":0,"19546":1,"20042":0,"19394":0,"19408":1,"20016":1,"19399":0,"19892":1,"20131":0,"20174":0,"19927":0,"19494":0,"19510":1,"19538":0,"19694":0,"20022":1,"19158":1,"19271":0,"19884":1,"19687":0,"19370":1,"19746":1,"19366":1,"20117":1,"19379":0,"20137":0,"19320":1,"19528":0,"19959":0,"19531":1,"19613":0,"19599":1,"19995":0,"19732":1,"20059":1,"19171":0,"20075":0,"20064":0,"19929":1,"19838":0,"19285":0,"20139":0,"19529":0,"19356":0,"19213":1,"19170":1,"20073":0,"19760":1,"19836":1,"19491":0,"19227":1,"19825":0,"19421":0,"19698":1,"19301":1,"19281":1,"19837":0,"19186":1,"19398":1,"19473":1,"19468":0,"19359":1,"19755":1,"19812":1,"19486":0,"19828":0,"19912":1,"20147":1,"19673":0,"19570":0,"19961":1}}